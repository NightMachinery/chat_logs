[00:00:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:01:53] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[00:02:23] *** Joins: tolog (~tolog@37.120.205.204)
[00:02:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:03:16] *** Quits: WAR10CK (~WAR10CK@14.223.181.174) (Quit: Leaving)
[00:04:27] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[00:06:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:06:24] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[00:06:51] *** Quits: Mentor (~Ionut@92.86.217.127) (Quit: Leaving)
[00:08:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:08:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:08:43] *** Joins: wroathe (~wroathe@user/wroathe)
[00:08:52] *** Joins: ckdCreations (~ckdCreati@2607:fb91:1501:48b3:41c6:86c0:693:b8e4)
[00:09:30] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[00:09:58] *** Joins: rgrinberg (~textual@187.223.183.192)
[00:10:41] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[00:14:15] *** Joins: john99 (~john99@35.246.103.34.bc.googleusercontent.com)
[00:15:21] *** Joins: Leonard (~Administr@114.55.127.80)
[00:15:47] *** Joins: lunix00 (~lunix00@179.232.161.86)
[00:15:54] <ioxzev1z> No C talk ?
[00:16:21] *** Joins: somlis (~somlis@user/somlis)
[00:16:22] <sham1> Well say something about C and we can talk
[00:16:56] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[00:17:02] <ws2k3> sham1 i actualy have a question :D (C n00b here trying to learn) why when you use macro's you dont have to define its type? int/float
[00:17:22] <ioxzev1z> ws2k3, a macro is just string substitution
[00:17:29] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[00:17:44] <ioxzev1z> #define FOO 5, after that any mention of FOO gets swapped to the literal number 5
[00:18:03] *** Quits: lunix00 (~lunix00@179.232.161.86) (Client Quit)
[00:18:05] <ioxzev1z> if(FOO) becomes if(5), and so on
[00:18:08] <sham1> Well, s/text substitution/token substitution/
[00:18:22] <sham1> It substitutes identifiers and stuff that look like function calls
[00:18:45] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[00:18:47] <ws2k3> i see. so it basicly has no type? its just a "search and replace" kinda thing
[00:18:58] <rsjw> ## works with text though
[00:19:00] <ioxzev1z> ws2k3, could say so, sure
[00:19:02] <tk> it happens before the compiler deals with things like types
[00:19:08] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[00:19:35] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[00:19:41] <ws2k3> yeah i kinda knew that its done by the preprocessor right?
[00:20:03] <ioxzev1z> yar
[00:20:13] <tk> it's at an earlier phase in translation
[00:20:41] <tk> phase 3 and phase 4 specifically
[00:21:59] <ws2k3> makes sense. thanks! and what about the following: *(int*)(0x08093B2C + 4) = 119 i kinda understand the concept of pointers(kinda just contains to address at where ur thing is. and with & you can derefence it again. but syntax wise im unable to wrap my head around that line the *(int*) realy confused me
[00:22:30] *** Joins: oriba (~oriba@dynamic-077-011-158-103.77.11.pool.telefonica.de)
[00:22:41] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:23:01] <ws2k3> i know that 0x08093B2C + 4) is just the address and 119 gets written there. that part i kinda understand
[00:23:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:23:10] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[00:23:36] <sham1> Well, 0x09093B2C + 4 isn't a pointer. You need to cast it to one, which converts it to a pointer to int in an implementation-defined manner
[00:23:39] <sham1> And then it dereferences it
[00:24:07] <sham1> ,prec *(int *)(0x08093B2C + 4) = 119
[00:24:07] <candide> sham1: *((i​nt *) (0x08093B2C + 4)) = 119
[00:26:05] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:26:59] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[00:27:37] *** Quits: morte_ (~user@181.114.17.106) (Ping timeout: 240 seconds)
[00:28:18] *** Joins: kurahaupo (~kurahaupo@pa49-182-47-103.pa.qld.optusnet.com.au)
[00:30:21] *** Joins: Betal (~Betal@user/betal)
[00:30:49] <ioxzev1z> 0x08093B2C is an address. You add 4 to that, then cast it to int *, such that you now have an int pointer. After that you apply * on it to access the value in the location stored at 0x08093B2C + 4
[00:31:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:31:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:31:15] *** Joins: wroathe (~wroathe@user/wroathe)
[00:33:16] <ws2k3> ioxzev1z 0x08093B2C + 4 is 809 3B30 right?
[00:33:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:04] <ioxzev1z> yes
[00:34:19] <sham1> Well you'd hope that the pointer casted from that integer expression would result in a pointer to an address that one would expect
[00:34:45] <sham1> And in practice, it probably will, although of course casting integers to pointers is implementation defined
[00:34:53] <ws2k3> sham1 i think what ur trying to say is there is no error checking whatsoever if the operation failed or not?
[00:35:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:35:42] *** Quits: alch (~alch@to-18-87-185.service.infuturo.it) (Read error: Connection reset by peer)
[00:35:51] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:36:49] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:36:52] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:37:47] <ws2k3> then how would the line look if i used 0x8093B30 cause i think i need the () in (0x08093B2C + 4 Because i wanne add 4 to it right?
[00:38:36] <rcf> ws2k3: rather that the integer representation of a pointer need not be the linear address you're expecting. Rarely the case on Real Computers™, of course.
[00:39:57] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:39:59] *** Joins: alch (~alch@151.82.28.125)
[00:40:23] <sham1> And of course assigning on the location represented by the pointer in this case would be UB, and the compiler could do anything (including nothing) but that's again not the case on Real Computers™, although the assignment might fail for example because that region of memory is not mapped or you don't have write permissions
[00:40:24] <ws2k3> rcf i have read ur messages 4 times and i realy dont understand what you mean sorry
[00:40:37] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:41:02] *** Joins: mattroelle (~mattroell@173.239.198.167)
[00:41:57] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 240 seconds)
[00:42:00] *** Quits: tolog (~tolog@37.120.205.204) (Remote host closed the connection)
[00:42:08] *** Joins: bsund (~bsund@user/bsund)
[00:42:57] *** Joins: johnjaye (~pi@154.6.152.74)
[00:43:36] <rcf> ws2k3:
[00:44:09] *** Quits: john99 (~john99@35.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[00:44:14] <pragma-> ws2k3:
[00:45:23] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[00:45:57] <rcf> Given an integer containing some address, if you cast it to a char *, add 4, and cast to an int *, the result may be different than if you add 4 and cast to int *.
[00:46:09] *** Joins: rgrinberg (~textual@187.223.183.192)
[00:46:36] *** Joins: xse (~xse@user/xse)
[00:46:38] *** Joins: strajder (~strajder@user/strajder)
[00:47:37] *** Quits: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net) (Ping timeout: 240 seconds)
[00:48:03] <rcf> Because not all architectures are filthy liars pretending to offer a flat memory model.
[00:48:27] *** Quits: mattroelle (~mattroell@173.239.198.167) (Quit: WeeChat 3.3)
[00:48:32] <ws2k3> lol :D
[00:48:37] <cryptonector> right, in principle pointers to different types can even be different sizes
[00:48:52] <cryptonector> and the null pointer's value, cast to an integer, need not be 0
[00:49:57] <cryptonector> for all x64, ARM, SPARC, etc. architectures, though, the only thing that may really matter regarding pointers to different types of objects is alignment
[00:50:19] <sham1> And x86 and AMD64 don't even care about that, except for some performance (and some SIMD, but we don't talk about SIMD)
[00:50:28] *** Joins: Lumia (~Lumia@208.64.158.255)
[00:51:22] <rcf> They do, underneath. They simply hide the details and expect you to read huge optimization manuals to understand why your code sucks.
[00:51:37] <pragma-> I was reading an article the other day that said CPU manufacturers are annoyed with C because they have to make abstractions around C's requirements. They say if C was out of the picture CPUs could be more efficient and performant.
[00:52:23] <twkm> i've seen intel attempt to ignore c twice, neither flourished.
[00:52:37] *** Quits: ckdCreations (~ckdCreati@2607:fb91:1501:48b3:41c6:86c0:693:b8e4) (Ping timeout: 240 seconds)
[00:53:22] *** Joins: ckdCreations (~ckdCreati@2607:fb91:1588:4478:d1d4:69dc:a195:2bc0)
[00:53:31] <sham1> pragma-: is it yet again "C is not a low level language"
[00:53:58] <sham1> Wait, was Itanium an attempt to ignore C? I thought that Itanium would have been nice for C compilers because of all the knobs
[00:54:17] <pragma-> sham1: yes, it did mention that too. It said that modern CPUs have so many layers of abstraction in order to support C that C can't really be called low level any more.
[00:54:50] <dmlloyd> is that their excuse?
[00:54:53] *** Quits: mahmutov (~mahmutov@5.176.11.249) (Ping timeout: 256 seconds)
[00:55:03] <rcf> sham1: the notable one was their attempt at an object-oriented instruction set which turned out to be incredibly difficult to implement efficiently.
[00:55:18] <NRK[m]> meh, that article is filled with the authors bias
[00:56:02] <NRK[m]> pragma-: did you read this? https://www.yodaiken.com/2021/05/21/your-computer-is-a-fast-pdp-11-and-more-on-c-the-c-standard-and-computer-architecture/
[00:56:05] *** Joins: mattroelle (~mattroell@136-26-68-28.cab.webpass.net)
[00:56:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[00:56:16] <pragma-> Of course, the distinction between low-level and high-level is a relative concept.
[00:56:56] *** Quits: Brainium (~brainium@user/brainium) (Quit: -a- IRC for Android 2.1.59)
[00:57:00] <pragma-> NRK[m]: the article it links to, https://queue.acm.org/detail.cfm?id=3212479
[00:57:02] <NRK[m]> yes.
[00:57:04] <candide> Title of pragma-'s link: C Is Not a Low-level Language - ACM Queue
[00:57:29] <NRK[m]> no, im saying if you read what i posted
[00:57:33] <pragma-> Oh.
[00:57:36] <NRK[m]> it's a response
[00:57:52] <NRK[m]> calls out a couple bullshit on that article, though not all
[00:58:43] *** Quits: llh (~llh@user/llh) (Ping timeout: 256 seconds)
[00:58:58] <rcf> sham1: Itanium was more about trying to get the compiler to perform all the superscalar optimization ahead of time, avoiding the voodoo needed to get traditional instruction sets to perform to any sensible modern standard (and that has since become well-known for all those intractable hardware exploits)
[00:59:32] <pragma-> NRK[m]: that article seems to conclude "The important observation here is that  under the current interpretation of the C standard, a number of compiler optimizations are unsound and have been for some time. This has been tolerated because C is so very out of fashion and there is little appreciation of  the basic design concepts of the C language (except from people who use it.)"
[01:00:11] <pragma-> "What is going on here is that standards contributors and compiler developers who start with the assumption that C is an obsolete and semantically confused language feel no obligation to play fair with the programmers who they believe are making a mistake even wanting to write code in the language."
[01:00:33] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[01:01:11] <rcf> That displays a much stronger bias than the claim that the C memory model doesn't align with current hardware, for example.
[01:01:27] <NRK[m]> those are not really the important part. the important parts are on the top.
[01:01:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:01:28] *** Joins: rgrinberg (~textual@187.223.183.192)
[01:01:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:01:28] *** Joins: wroathe (~wroathe@user/wroathe)
[01:01:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:03:16] <pragma-> "The root cause of the Spectre and Meltdown vulnerabilities was that processor architects were trying to build not just fast processors, but fast processors that expose the same abstract machine as a PDP-11. This is essential because it allows C programmers to continue in the belief that their language is close to the underlying hardware."
[01:03:20] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 252 seconds)
[01:03:34] <rcf> When these compiler optimizations are abandoned wholesale I will believe such claims.
[01:03:36] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[01:03:37] *** Quits: ckdCreations (~ckdCreati@2607:fb91:1588:4478:d1d4:69dc:a195:2bc0) (Ping timeout: 240 seconds)
[01:03:37] *** Quits: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr) (Ping timeout: 240 seconds)
[01:04:56] <NRK[m]> "Instruction level parallelism predates  C by 10 years and is not specific to any programming language"
[01:05:17] <rcf> They will not be, because the truth is that these C programmers are living under the delusion that their code is fast because C is low level, when it is fast because it is unsafe and proud of it so far as the implementers of the language are concerned.
[01:05:35] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[01:05:44] <geranim0> When I compile with '-S' i sometimes get 2 'p2align' directives back to back with different arguments, why is that?
[01:06:12] <NRK[m]> iirc the original article also claimed that virtual memory is needed to "keep C programmers happy"
[01:06:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:06:40] <NRK[m]> but lisp machines used virtual memory long before C was a thing
[01:06:44] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f0a6) (Read error: Connection reset by peer)
[01:06:55] *** Quits: rgrinberg (~textual@187.223.183.192) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:07:00] <NRK[m]> and lisp doesn't even expose pointers, so what's going on there?
[01:07:09] <sham1> GC!
[01:08:40] *** Joins: Leonard (~Administr@114.55.127.80)
[01:08:50] <NRK[m]> the original article also claims that C assumes flat memory model. which isn't true for standardised C.
[01:10:13] <NRK[m]> pre standard, maybe. idk since i wasn't there. but in standard C even this is UB: `int a[2][5]; a[0][6];`
[01:10:37] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[01:11:19] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:11:39] *** Praise- is now known as Prase
[01:11:41] *** Prase is now known as Praise
[01:13:09] *** Joins: u0_a3912 (~u0_a391@2600:380:a42e:5999:97c1:6482:f023:8ba3)
[01:17:25] *** Quits: u0_a3911 (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[01:19:29] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (Quit: brb)
[01:20:02] <APic> Re.
[01:20:10] *** Joins: masterbuilder (~user@user/masterbuilder)
[01:21:36] *** Quits: Macuser (~Macuser@2601:5c4:4302:2c70:a5ad:98f8:262f:e6f8) (Quit: Textual IRC Client: www.textualapp.com)
[01:22:13] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[01:22:34] *** Quits: magla (~gelignite@55d4ca9b.access.ecotel.net) (Quit: Stay safe!)
[01:23:05] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[01:24:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:24:44] <rcf> While true, that allows precisely the sort of optimization that the people wanting C to 'play fair' with developers would want prohibited; see the strict aliasing thread on lkml for a practical example of a successful attack on the standard memory model to fit with preconceived notions about underlying architectures.
[01:25:31] <rcf> So a reasonable critique of the article, but proof that C is not as low-level as some would like, nor that being low-level is necessarily what people should want when picking C.
[01:27:17] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:27:55] <NRK[m]> low level is a buzzword anyways
[01:28:02] <rcf> Indeed
[01:28:03] <sham1> Well that is true
[01:28:08] <NRK[m]> to academics even asm isn't low level
[01:28:53] <NRK[m]> because the cpu is doing branch prediction, instruction levels parallelism etc etc. which you dont have direct access to, even on asm.
[01:29:02] *** Joins: cul8r (~cul8r@76.113.95.199)
[01:29:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[01:29:14] <rcf> I think the article is mostly just cited when someone shows up with that ever-popular notion that C is just a portable assembler and one can reason about it as such.
[01:29:16] <pragma-> to a quantum scientist, even electrical switching isn't low level
[01:29:28] * APic snickers magically.
[01:30:02] *** Joins: Klinda (~superleag@user/klinda)
[01:30:11] <rcf> NRK[m]: lies, original Itanium tried that... and we all know how well that worked out....
[01:30:12] *** Quits: rapier (~rapier@user/rapier) (Read error: Connection reset by peer)
[01:30:20] *** Joins: Leonard (~Administr@114.55.127.80)
[01:30:34] <NRK[m]> yeah, C isn't exactly portable asm. but that article makes so many incorrect claims as well that I don't like to cite it.
[01:31:14] <sham1> How magical snickering is that
[01:32:09] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[01:32:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:33:03] *** u0_a3912 is now known as kit
[01:33:55] *** Joins: johnjaye (~pi@154.6.152.74)
[01:34:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f)
[01:35:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:35:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:38:08] <APic> sham1: As magicaly as they sell them in Plastic Wrapping.
[01:38:18] <APic> ,o0(Epic Win!)
[01:38:23] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[01:38:57] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:39:27] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[01:39:57] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[01:40:29] <eqw> according to README.md this https://github.com/termux/shared-library-testcase should work everywhere except certain faulty linker. I tried to build and run it but had 'error while loading shared libraries'. Does this code contain some mistake or it is me?
[01:40:30] <candide> Title of eqw's link: GitHub - termux/shared-library-testcase: Test case for shared library symbol visibility on dlopen().
[01:41:35] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Excess Flood)
[01:42:11] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:42:11] *** Joins: johnjaye (~pi@154.6.152.74)
[01:42:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[01:43:09] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[01:44:35] <APic> eqw: Did You try it on Godbolt.Org?
[01:47:26] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:51:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:51:06] *** Joins: wroathe (~wroathe@user/wroathe)
[01:51:12] <twkm> ewww.
[01:53:07] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[01:53:18] *** Quits: alch (~alch@151.82.28.125) (Quit: leaving)
[01:53:22] *** Joins: monkey_ (~user@190.104.116.153)
[01:53:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[01:53:33] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[01:54:47] <APic> twkm: What?
[01:55:52] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:57:02] *** Quits: kit (~u0_a391@2600:380:a42e:5999:97c1:6482:f023:8ba3) (Ping timeout: 240 seconds)
[01:57:05] *** Quits: brad_mssw (~bhouse@2620:134:c001:100:49a9:b490:b06f:94b5) (Quit: Leaving)
[01:57:35] *** Joins: trafficjam (~trafficja@119.17.42.59)
[01:58:09] <eqw> APic: I've never used goldbolt.org and I don't see how to do try this project there. It contains 3 tiny files and makefile
[01:58:25] <APic> eqw: I asked twkm, not You.
[01:58:37] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[01:58:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[01:58:57] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[01:59:53] *** Joins: soul-d (~uknown@user/soul-d)
[02:00:38] *** Joins: johnjaye (~pi@154.6.152.74)
[02:01:02] <eqw> APic: at 22:14 UTC you asked me
[02:01:58] <APic> eqw: Yes, thanks.
[02:02:57] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 240 seconds)
[02:03:23] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[02:04:45] *** Quits: Radionova327 (~TStaley@097-070-031-249.res.spectrum.com) (Read error: Connection reset by peer)
[02:04:46] <APic> eqw: But i eagerly expect twkm's Answer, not Yours.
[02:04:46] <earnest> I recall having a godbolt make target which was just: godbolt: CFLAGS = -g -O2 -fno-plt -S -fdiagnostics-color=always -fverbose-asm -masm=intel
[02:04:46] <APic> earnest: Thanks for the Information.
[02:04:46] <earnest> godbolts website doesn't work so well for me
[02:04:46] *** Quits: rany (~rany@user/rany) (Quit: Ping timeout (120 seconds))
[02:04:46] *** Quits: justIrresolute5 (~justache@user/justache) (Quit: Ping timeout (120 seconds))
[02:04:46] *** Joins: rany (~rany@user/rany)
[02:05:23] *** Joins: Leonard (~Administr@114.55.127.80)
[02:05:34] *** Joins: Radionova327 (~TStaley@097-070-031-249.res.spectrum.com)
[02:06:19] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[02:06:38] *** u0_a391 is now known as kit
[02:06:45] *** Parts: hans (uid529825@id-529825.helmsley.irccloud.com) ()
[02:07:25] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:07:31] *** Quits: bsund (~bsund@user/bsund) (Quit: leaving)
[02:08:11] *** Joins: asimovc (~asimov-sd@2806:105e:14:7987:25ed:578a:f3d4:e209)
[02:08:32] *** Joins: xse (~xse@user/xse)
[02:09:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:10:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7c88-b6a2-dd37-d9b7.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:10:33] <APic> Ok
[02:10:40] <APic> Maybe Your Browser is to blame.
[02:11:06] <earnest> Yes
[02:11:07] <sham1> One thing I know is that Godbolt doesn't mix with mobile phones, which is sad
[02:11:42] <APic> Javascript <3 <3 <3
[02:11:42] <APic> ;)
[02:11:57] <APic> sham1: Have You tried all available Browsers on Your Phone?
[02:13:31] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:15:17] <veltas> Godbolt is useful but it's quite janky, I still recommend it to people all the time. But the cool kids are using objdump etc
[02:16:29] <APic> Clang is nice i heard
[02:16:46] <APic> (Also klang will be cool when datenwolf will ever get around to it)
[02:20:17] <veltas> There is this concerning trend with interns thinking they can just use websites as if they're local tools, and then before you know it they're uploading export-controlled code to web 'tools'
[02:20:29] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[02:20:49] *** Joins: treble (~treble@user/treble)
[02:20:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:21:01] <APic> Good old Internships.
[02:21:15] <veltas> But then Windows just does that for you as part of its AV checks, uploading entire binaries to MS that are 'unfamiliar', so who am I to judge
[02:21:30] *** Joins: duuude (~user@user/duuude)
[02:22:30] <duuude> Why putenv doesn't work? https://termbin.com/wdr2
[02:23:26] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:24:24] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[02:24:57] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:26:34] <veltas> duuude: I haven't seen what's wrong yet but maybe use setenv
[02:28:17] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:29:03] <veltas> You've misunderstood how the n parameter for strncat works, although I don't think that's causing the current problem
[02:29:21] *** Joins: Leonard (~Administr@114.55.127.80)
[02:29:57] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:30:37] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[02:31:17] *** Quits: asimovc (~asimov-sd@2806:105e:14:7987:25ed:578a:f3d4:e209) (Quit: Leaving)
[02:31:43] *** Joins: xse (~xse@user/xse)
[02:31:46] <APic> *shrug*
[02:31:47] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:31:52] <APic> twkm: Hello? Are You alive?
[02:32:15] <dodobrain> not sure about right now, but i did see him speak yesterday
[02:32:48] *** Quits: pizdets (~pizdets@183.182.114.218) (Ping timeout: 250 seconds)
[02:33:19] <sham1> I saw him speaking today
[02:33:33] <fizzie> Klinda: The point I was trying to make is, ASan traps it at the first illegal access, so you can't really meaningfully say whether an overflow is "big" or "small" in the sense of what sort of mistake the code is making. It _might_ just as well have continued to overwrite all the rest of the `fa` blocks if it hadn't been stopped. Or not: you could just be off by only one, too.
[02:33:52] *** Joins: pizdets (~pizdets@183.182.115.85)
[02:36:11] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:36:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:37:54] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:39:43] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:39:53] *** Quits: oriba (~oriba@dynamic-077-011-158-103.77.11.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:40:11] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Read error: Connection reset by peer)
[02:40:26] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:42:06] *** Joins: rgrinberg (~textual@2806:101e:7:78bb:7d7b:4bec:a56d:43d9)
[02:42:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:42:34] *** Quits: Lumia (~Lumia@208.64.158.255) (Quit: ,-)
[02:42:40] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:45:41] <Klinda> why the tool don't calculate it for you fizzie? is it hard to do or what ?
[02:46:16] *** Joins: justIrresolute (~justache@user/justache)
[02:46:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:47:40] <duuude> veltas: setenv doesn't work in main. such strange behaviour.
[02:48:10] <duuude> I print the string, it is there, I setenv it, getenv it, print what getenv returns and get nothing.
[02:48:28] <duuude> https://termbin.com/ist2
[02:50:36] <veltas> duuude: What is printw?
[02:50:52] <duuude> veltas: printf for curses
[02:50:52] <trafficjam> does the system keep track of array sizes at runtime?
[02:51:24] <trafficjam> e.g. if i have an array x[3], does the system know that the memory addresses X + 0, X + 4, X + 8 belong to that array?
[02:51:33] <trafficjam> or does it not need to as that is addressed at compile time?
[02:51:37] <duuude> trafficjam: no, unless you compile with bounds checking
[02:51:50] <duuude> then it would probably have some idea
[02:51:58] <veltas> Your debugger might know
[02:52:18] <trafficjam> could you guys explain what happens at compile time when i declare that array?
[02:52:24] <trafficjam> like what exactly is the compiler doing?
[02:52:24] <veltas> What is the actual question
[02:52:40] <veltas> What are you trying to do that's not working
[02:52:53] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:53:08] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:53:11] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[02:53:12] <trafficjam> this is for a question about understanding than anything practical, i'm trying to understand what the compiler does when you declare that array
[02:53:23] <trafficjam> *more a question
[02:53:38] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:53:40] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[02:54:08] <veltas> Depends what compiler, the settings for compiler, where it's used in code, etc etc
[02:54:23] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[02:54:30] *** Joins: coruja (~coruja@user/coruja)
[02:55:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:55:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:55:25] *** Joins: wroathe (~wroathe@user/wroathe)
[02:55:27] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[02:56:09] <trafficjam> gcc i guess, standard settings, code would be `int main { int x[3]; return 0; }`
[02:56:28] <trafficjam> s/starndard/default
[02:56:38] <trafficjam> if there is such a thing as default settings for gcc
[02:56:42] <veltas> Would allocate space for it on the stack and not do anything to init it
[02:56:53] <veltas> Yeah there are default settings, I think optimisation is off by default
[02:57:28] <veltas> This sounds like a job for godbolt
[02:57:32] <trafficjam> ah ok, i haven't learned about the stack yet but basically you're saying it would ask the operating system to allocate 3 byte blocks in memory?
[02:58:27] <trafficjam> like how does that allocation actually happen? does the os communicate with gcc?
[02:58:40] <veltas> It doesn't ask the OS for it
[02:58:54] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[02:59:07] <trafficjam> doesn't all memory allocation happen through the os though?
[02:59:10] <veltas> The OS sets up virtual memory space including space for a stack, the stack is pointed to by a special CPU register usually
[02:59:33] <veltas> The stack is 'allocated' to by subtracting from the stack pointer usually
[02:59:49] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[02:59:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:00:07] <trafficjam> hmm i guess i need to read up on what the stack and heap are before i can understand what's going on
[03:00:32] <veltas> So the OS isn't doing much work there, although e.g. on Linux the stack is special kind of memory where as you allocate more it expands the size of allocation automatically so the OS is actually doing work I guess
[03:00:33] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[03:00:48] <veltas> The OS is meant to be as transparant as possible to the software usually
[03:01:06] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[03:01:24] <rsjw> you have stack and heap even when there is no OS
[03:02:08] <rsjw> virtual memory is basically to allow the application to pretend there's no OS or other programs using memory
[03:02:08] <veltas> We're talking about a situation where a program is running in an OS
[03:02:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:02:47] *** Quits: rgrinberg (~textual@2806:101e:7:78bb:7d7b:4bec:a56d:43d9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:03:06] <rsjw> yeah I know, but the point is that they are not tied together, so you wouldn't expect allocating on the stack or heap to involve the OS, at least on a conceptual level
[03:03:25] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[03:04:15] <trafficjam> so c programs always run as if there is no OS?
[03:04:38] <trafficjam> or at least from the program's perspective, it can't tell the difference
[03:04:54] <BtbN> That question makes little sense
[03:05:00] <veltas> The point I would make is that the programs run natively, and whether you use an OS or run without an OS the rules of the arch are still there
[03:05:18] <BtbN> Without OS, it couldn't run, unless it's specifically compiled to run on bare metal.
[03:05:20] <trafficjam> "virtual memory is basically to allow the application to pretend there's no OS or other programs using memory"
[03:05:48] <BtbN> Virtual Memory is so random apps can't go rogue and snoop around in random bits of RAM
[03:05:49] <trafficjam> Does that also make little sense?
[03:06:06] <BtbN> Among a lot of things it's good for
[03:06:14] <rsjw> trafficjam: I was trying to make a point about stack and dynamic allocation, not a point about how C programs run. the stack is a concept that's bigger than C. assembly uses stacks, for instance
[03:06:43] <trafficjam> ah ok
[03:08:20] *** Joins: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[03:09:35] *** Joins: Leonard (~Administr@114.55.127.80)
[03:09:41] <retro> does awk do what I think it does
[03:09:47] <retro> awk -F, '{printf "%09d,%d\n" ,$1,$2}' $newDir/$processNew > tmp && mv tmp $newDir/$processNew
[03:10:03] <veltas> Wrong channel
[03:10:13] <retro> passes printf to a function expecting a pointer to a function
[03:10:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7c88-b6a2-dd37-d9b7.res6.spectrum.com)
[03:10:23] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 252 seconds)
[03:10:37] <retro> then passes "%09d" as a char* or char[] paramater
[03:10:45] <retro> because theres no ()
[03:11:05] <retro> maybe it uses macros instead
[03:11:15] <veltas> #awk exists
[03:11:24] <retro> this is a C question really
[03:11:35] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[03:11:53] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:12:18] <retro> can macros have variadic arguments
[03:13:21] <retro> #define PRINTF(_X) int x = 6; printf("%d", x)
[03:13:56] <retro> it probably does not do it with macros anyhow
[03:14:11] <retro> thats a cheap way to make a piece of software
[03:15:19] <retro> yeah this is using printf not PRINTF anyhow so its clearly some stdin string
[03:16:16] <retro> I know printf by design is a variadic function but that does not mean the macro automatically is
[03:16:55] <retro> https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
[03:17:10] <retro> brb
[03:17:43] *** Joins: NEYi (~NEYi@109.251.216.38)
[03:19:15] *** Quits: Akuli (~Akuli@87-94-108-130.bb.dnainternet.fi) (Quit: Akuli)
[03:19:23] *** Quits: xse (~xse@user/xse) (Ping timeout: 256 seconds)
[03:19:31] <twkm> APic: i just don't like pastes i can't fetch, which includes the js-only ones.
[03:19:49] <APic> twkm: I see. Thanks a Bunch for telling!  ☺
[03:22:44] *** Joins: xse (~xse@user/xse)
[03:23:10] *** Quits: cul8r (~cul8r@76.113.95.199) (Quit: Leaving)
[03:26:48] *** Joins: Torr (~Torr@user/torr)
[03:28:03] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f) (Quit: Quit)
[03:28:23] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f)
[03:30:07] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[03:31:10] <APic> Good Night!
[03:31:27] <fizzie> Klinda: ASan just instruments memory accesses and then runs the program to see what happens. It doesn't try to figure out what the program is trying to accomplish. The only way it could possibly know how many bytes the program would end up overwriting would be to continue execution after the first failure, but then the program's state is already ill-defined so that's not too appealing either.
[03:31:42] <fizzie> Well, okay, that's not _quite_ true. It does do C library call interception, so if the buffer overflow is "through" one of the standard functions (memcpy, memset, strcpy, whatever) it could report slightly higher-level errors. I don't think it does, though. And it'd hardly be all that useful. Usually what matter is just pinpointing the exact point where things start to go wrong, not tracing all the
[03:31:42] *** Joins: Atque (~Atque@user/atque)
[03:31:44] <fizzie> consequences.
[03:32:10] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[03:32:53] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:33:28] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:33:30] <fizzie> ,cc -fsanitize=address char *p = malloc(123); memset(p, 'x', 12345);
[03:33:33] <candide> fizzie: ================================================================= ==45242==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60c00000017b at pc 0x7faa8159640e bp 0x7ffda71a4e40 sp 0x7ffda71a45f0 WRITE of size 12345 at 0x60c00000017b thread T0     #0 0x7faa8159640d in memset (/lib64/libasan.so.6+0x3940d)     #1 0x402562 in main      #2 0x7faa8138155f in __libc_start_call_main (/lib64/libc.... <truncated; https://0x0.st/ozpE.txt>
[03:33:45] <fizzie> Hmm, "WRITE of size 12345", I guess it does do that.
[03:34:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:34:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[03:35:41] <trafficjam> does malloc/calloc help achieve the same results as dynamically sized arrays from languages like python?
[03:36:03] <trafficjam> (specifically by allowing the arbitrary allocation of memory)
[03:37:57] *** Quits: slayne (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:37:57] *** Quits: inomoz (~inomoz@176.59.115.63) (Ping timeout: 256 seconds)
[03:38:05] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:39:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7c88-b6a2-dd37-d9b7.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:40:01] *** Joins: Leonard (~Administr@114.55.127.80)
[03:41:57] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[03:43:07] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[03:44:39] <EtherNet> when you do a malloc(sizeof(struct blah)); if that struct "blah" has some nested structures, does it allocate space for those fields that are inside the nested structures as well?
[03:45:17] *** Quits: mattroelle (~mattroell@136-26-68-28.cab.webpass.net) (Ping timeout: 240 seconds)
[03:45:20] <Xgc> EtherNet: Yes.
[03:45:54] <Xgc> EtherNet: In the same way the allocation supplies space for int objects within the struct.
[03:46:10] <EtherNet> perfect
[03:47:07] <poprocks> are there any standard C or POSIX functions to break down a locale string into its various parts - ie, language, territory, etc - based on ISO/IEC 15897 standard? I'm writing a function where I'm looking for documentation in a directory structure based on the user's current locale, and want to be able to have it look for, eg, 'en' if 'en_US' is unavailable, for instance
[03:47:22] *** Joins: mattroelle (~mattroell@173.239.198.162)
[03:48:12] <poprocks> wouldn't be too much skin off my back to just cobble something together, but it's one of those things where I feel like there has to be something that already exists that I can use
[03:48:24] <Xgc> EtherNet: Test it.  Create 3 structs.  A, B and then C which contains two members, one of type struct A and the other of type struct B.  Print the result of sizeof for each of those types.
[03:48:51] <EtherNet> Xgc: yeah i'll test it and see the sizes
[03:49:41] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:53:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[03:53:47] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[03:58:41] *** Joins: soapsudsxx (~soapsudsx@141.193.188.151)
[03:59:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[03:59:06] *** Quits: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:59:33] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:00:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[04:01:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:01:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:01:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[04:02:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:04:35] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:05:21] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[04:05:26] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[04:06:22] *** Joins: Wulf (~Wulf@user/wulf)
[04:06:52] *** Joins: rgrinberg (~textual@2806:101e:7:78bb:7d7b:4bec:a56d:43d9)
[04:08:32] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:10:11] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[04:10:43] *** Joins: Cyp (~cyp@213.237.85.9)
[04:13:31] *** Quits: Betal (~Betal@user/betal) (Remote host closed the connection)
[04:13:47] *** Joins: Betal (~Betal@user/betal)
[04:14:13] *** Quits: ColdKeyb- (~ColdKeybo@user/coldkeyboard) (Ping timeout: 256 seconds)
[04:18:03] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:21:14] <trafficjam> can i pass arrays to a function?
[04:21:27] <trafficjam> e.g. `float calculate(float array[100]);`
[04:22:06] <caze> Nope.
[04:22:25] <caze> You can pass a pointer to its first element though.
[04:28:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:28:04] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:28:04] *** Joins: wroathe (~wroathe@user/wroathe)
[04:29:21] *** Joins: duuude (~user@user/duuude)
[04:30:32] <trafficjam> thanks
[04:31:02] <trafficjam> also why am i getting "undefined reference to `sqrt'" even though i'm #include <math.h>?
[04:31:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[04:31:46] <fizzie> Because that's a linker error, and you're missing `-lm`. (Usually.)
[04:32:06] <trafficjam> i need to gun 'cc <file.c> -lm`?
[04:32:10] <trafficjam> *run
[04:32:21] <fizzie> Often.
[04:32:31] <trafficjam> ah that worked, thanks
[04:32:33] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[04:33:35] <fizzie> http://c-faq.com/fp/libm.html for a little more on it. As well as questions 13.25, 13.26 linked from there.
[04:37:05] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[04:37:33] *** Joins: Cyp (~cyp@213.237.85.9)
[04:39:43] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[04:40:15] *** Quits: rgrinberg (~textual@2806:101e:7:78bb:7d7b:4bec:a56d:43d9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:41:18] *** Joins: llh (~llh@user/llh)
[04:41:56] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:42:06] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[04:42:29] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:43:04] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[04:43:35] <trafficjam> fizzie: so which libraries do i and don't i need to link?
[04:43:47] <trafficjam> stdio.h, stdlib.h i don't it seems
[04:43:52] *** Joins: Cyp (~cyp@213.237.85.9)
[04:44:34] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:48:59] <fizzie> That's up to your implementation. Convention on Unixy systems is that all but the mathy bits are part of the implicitly linked "libc" (-lc) library, while the mathy bits are for historical reasons shunted into a separate "libm" (-lm) library.
[04:49:29] <fizzie> (Out of the standard headers, that is.)
[04:50:37] <fizzie> It can get pretty vague in practice. For example, you might not need `-lm` as long as the compiler can constant-fold the functions away, but you do when the input becomes less predictable.
[04:50:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:51:24] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:51:52] <fizzie> ,cc -w printf("%d", (int) sqrt(16));
[04:51:54] <candide> fizzie: 4
[04:51:55] <fizzie> ,cc -w int i = 16; printf("%d", (int) sqrt(i));
[04:51:57] <candide> fizzie: /usr/bin/ld:  in function 'main':  undefined reference to 'sqrt'
[04:52:11] <fizzie> Can be a little confusing.
[04:52:17] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Ping timeout: 240 seconds)
[04:55:06] *** Joins: constxd (~brad@142.134.38.68)
[04:55:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:56:07] *** Joins: xcm_ (~xcm@static.90.45.69.159.clients.your-server.de)
[04:57:03] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[04:57:44] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[04:57:44] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (Remote host closed the connection)
[04:57:44] *** Joins: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[04:57:44] *** Quits: xcm (~xcm@user/xcm) (Read error: Connection reset by peer)
[05:01:34] *** Parts: rsjw (~quassel@user/rsjw) ()
[05:01:37] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[05:02:07] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[05:02:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[05:04:06] *** Quits: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:09:16] *** Joins: frost (~frost@user/frost)
[05:11:50] *** Joins: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[05:12:35] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Quit: later)
[05:13:17] *** Quits: Burgundy (~yomon@5-12-10-45.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[05:13:43] *** Parts: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[05:14:06] *** Joins: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[05:17:07] *** Joins: nitrix (~nitrix@user/nitrix)
[05:17:22] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[05:20:42] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[05:23:33] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Quit: later)
[05:24:00] *** Joins: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net)
[05:24:52] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[05:25:09] *** Joins: |darc| (~darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[05:29:14] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[05:30:42] *** Joins: X-Scale` (~ARM@218.92.108.93.rev.vodafone.pt)
[05:30:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[05:30:54] *** lukedashjr is now known as luke-jr
[05:31:55] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:33:07] *** Quits: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt) (Ping timeout: 256 seconds)
[05:33:08] *** X-Scale` is now known as X-Scale
[05:34:23] *** Joins: Satin (uid193953@user/Seten)
[05:37:39] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:40:06] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:43:11] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[05:44:33] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Client Quit)
[05:46:17] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 240 seconds)
[05:50:21] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[05:50:26] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[05:52:05] *** Joins: xse (~xse@user/xse)
[05:53:28] <geranim0> compiling with -fPIE and gcc 9.3.0 still complains about fPIE? https://bpa.st/R34Q
[05:55:54] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:01:00] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[06:01:18] *** Joins: loganlee (~Thunderbi@user/loganlee)
[06:01:32] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[06:08:16] *** Joins: vysn (~vysn@user/vysn)
[06:08:37] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[06:09:35] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[06:10:47] <pnbeast> It probably wouldn't have complained if you hadn't reminded it!
[06:11:22] <geranim0> it still complains :P
[06:12:15] <geranim0> (without -fPIE to gcc)
[06:12:33] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:14:19] <mcf> i think your inline asm is not position-independent
[06:14:44] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[06:17:00] <geranim0> generating the .s file works, and func1 is a one liner: mov var1, %eax. I wonder what is position dependant?
[06:18:31] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:19:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:20:29] *** Joins: ztx (~ztx@user/ztx)
[06:20:42] <mcf> the reference to var1. i think you need to use rip-relative addressing instead (`var1(%rip)`)
[06:21:43] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[06:22:00] <geranim0> oh ok
[06:22:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:22:43] <geranim0> one would think gcc would do that with -fPIE, will try cc then ld to see
[06:23:33] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Ping timeout: 256 seconds)
[06:25:18] <mcf> -fPIE affects the assembly code that gcc generates, not the inline assembly *you* wrote
[06:25:49] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 256 seconds)
[06:26:21] <geranim0> triple facepalm moment
[06:27:31] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[06:28:22] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[06:29:19] *** Quits: kit (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Read error: No route to host)
[06:29:38] *** Joins: kit (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[06:30:01] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[06:30:22] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[06:31:26] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[06:32:37] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:32:39] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[06:33:46] *** Quits: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:34:06] *** Quits: puke (~puke@user/puke) (Quit: puke)
[06:35:29] <geranim0> using the rip relative asm does indeed solve the problem. thanks!
[06:35:37] *** Joins: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de)
[06:38:54] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[06:39:25] *** Quits: bud (~bud@user/bud) (Ping timeout: 256 seconds)
[06:41:37] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:42:23] *** Joins: smeso (~smeso@user/smeso)
[06:43:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:49:00] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[06:49:20] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[06:49:27] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[06:51:18] *** Joins: malloy (~jimery@116.30.220.175)
[06:54:23] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:54:33] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:48] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[06:55:09] *** Joins: fe23 (~fe23@2409:8a34:464:4990:4def:ada2:31ae:b2c2)
[06:55:22] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[06:58:19] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[07:00:06] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[07:01:37] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[07:03:08] *** Joins: puke (~brrrrrrr@user/puke)
[07:05:05] *** Quits: puke (~brrrrrrr@user/puke) (Client Quit)
[07:05:49] *** Joins: karakedi (~eAC53C340@user/karakedi)
[07:07:49] *** Joins: gco (~gco@2601:647:4c80:2424:846c:c05d:a7a1:c8e7)
[07:10:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:12:13] *** Quits: kurahaupo1 (~martin@115.69.27.211) (Quit: Leaving.)
[07:14:07] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com)
[07:15:01] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[07:15:07] *** Quits: oxfuxxx (~oxfuxxx@89.40.183.139) (Ping timeout: 256 seconds)
[07:15:25] *** Joins: kurahaupo_ (~martin@115.69.27.211)
[07:16:07] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:23:10] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[07:25:14] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:25:48] *** Quits: moog (~moog@107.126.53.20) (Remote host closed the connection)
[07:28:29] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:28:46] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[07:30:25] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e)
[07:33:55] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[07:34:08] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:34:55] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:37] *** Joins: Enitin (~Enitin@5.180.62.231)
[07:39:51] *** Joins: nostar (~nostar@107.175.102.222)
[07:40:29] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 256 seconds)
[07:41:11] *** Quits: Enitin (~Enitin@5.180.62.231) (Ping timeout: 256 seconds)
[07:43:55] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) ()
[07:46:24] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[07:46:36] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[07:47:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:50:48] *** Joins: pucara (~i@181.91.29.65)
[07:53:55] *** Quits: eht (~eht@user/eht) (Remote host closed the connection)
[07:55:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:56:40] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[07:58:54] *** Joins: mahmutov (~mahmutov@37.155.64.87)
[07:59:07] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[08:00:30] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:00:38] *** Joins: hinata (~hinata@2409:4042:d1c:87d7:91c2:5e62:40d9:6c82)
[08:01:21] *** Joins: Enitin (~Enitin@5.180.62.231)
[08:03:14] *** Joins: dave69 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:03:25] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Killed (NickServ (GHOST command used by dave69)))
[08:03:55] *** dave69 is now known as dave0
[08:04:43] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[08:05:33] *** Quits: mahmutov (~mahmutov@37.155.64.87) (Ping timeout: 256 seconds)
[08:05:59] *** Quits: Enitin (~Enitin@5.180.62.231) (Ping timeout: 256 seconds)
[08:07:57] *** Joins: oxfuxxx (~oxfuxxx@2a01:e0a:268:92c0:147a:fd7:2427:73ef)
[08:11:00] *** Quits: gco (~gco@2601:647:4c80:2424:846c:c05d:a7a1:c8e7) (Quit: ZZZzzz…)
[08:13:10] *** Joins: packet_lozenge (~packet_lo@cpe-107-15-195-50.nc.res.rr.com)
[08:13:55] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[08:14:39] *** Joins: Enitin (~Enitin@5.180.62.231)
[08:20:43] *** Quits: critr (~critr@user/critr) (Remote host closed the connection)
[08:21:27] *** Joins: critr (~critr@user/critr)
[08:22:11] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[08:24:04] *** Quits: packet_lozenge (~packet_lo@cpe-107-15-195-50.nc.res.rr.com) (Changing host)
[08:24:04] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[08:29:32] *** Quits: oxfuxxx (~oxfuxxx@2a01:e0a:268:92c0:147a:fd7:2427:73ef) (Ping timeout: 240 seconds)
[08:30:22] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:31:19] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:32:49] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[08:33:22] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[08:33:25] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 240 seconds)
[08:33:27] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e) (Remote host closed the connection)
[08:34:02] *** Quits: nostar (~nostar@107.175.102.222) (Quit: Leaving)
[08:34:49] *** Joins: nostar (~nostar@68.51.221.108)
[08:35:09] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e)
[08:36:44] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[08:42:57] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:42:58] *** Joins: Guest3 (~Guest3@27.16.135.37.dynamic.jazztel.es)
[08:44:03] *** Joins: Guest385 (~Guest3@27.16.135.37.dynamic.jazztel.es)
[08:45:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[08:48:17] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[08:49:37] *** Quits: Enitin (~Enitin@5.180.62.231) (Ping timeout: 240 seconds)
[08:51:46] *** Joins: Enitin (~Enitin@82.102.22.86)
[08:52:32] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[08:53:52] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[08:55:10] *** Joins: Guest379 (~Guest3@27.16.135.37.dynamic.jazztel.es)
[08:55:32] *** Quits: Guest385 (~Guest3@27.16.135.37.dynamic.jazztel.es) (Quit: Client closed)
[08:55:40] *** Quits: Guest379 (~Guest3@27.16.135.37.dynamic.jazztel.es) (Client Quit)
[08:55:56] *** Quits: Guest3 (~Guest3@27.16.135.37.dynamic.jazztel.es) (Quit: Client closed)
[08:57:14] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[08:57:17] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[08:58:10] *** Joins: novns (~novns@user/novns)
[09:02:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[09:10:43] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[09:11:43] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[09:12:51] *** Joins: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:12:55] *** Quits: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[09:13:12] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:16:43] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[09:17:56] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:27:14] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:28:02] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com)
[09:29:14] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[09:32:39] <trafficjam> anyone got some challenges for me to code?
[09:32:39] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-92.cspire.com) (Read error: Connection reset by peer)
[09:32:51] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:32:57] <trafficjam> nothing too complex, as i just started learning
[09:36:13] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[09:39:31] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:39:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[09:41:44] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[09:44:36] <smlavine> write printf(3p)
[09:47:10] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[09:48:23] <xse> you can for example make all the different kinds of linked list :p
[09:48:59] <xse> or depending at what you mean by just started learning maybe take a look at things like https://adventofcode.com
[09:49:53] *** Quits: nitrix (~nitrix@user/nitrix) (Read error: Connection reset by peer)
[09:50:10] *** Quits: pucara (~i@181.91.29.65) (Quit: Lost terminal)
[09:50:10] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-61.cspire.com)
[09:51:42] <xse> the linked lists implementation should be doable really early in the learning process and once you're done you can compare your implementation with the usually used ones like sys/queue.h from openbsd
[09:51:53] *** Quits: mattroelle (~mattroell@173.239.198.162) (Quit: WeeChat 3.3)
[09:52:56] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-61.cspire.com) (Read error: Connection reset by peer)
[09:53:01] *** Joins: nitrix (~nitrix@user/nitrix)
[09:55:00] *** Quits: Guest4084 (~vin@user/crash) (Quit: WeeChat 2.8)
[09:57:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:01:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:04:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:04:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:04:58] *** Joins: wroathe (~wroathe@user/wroathe)
[10:04:59] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[10:05:33] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[10:05:55] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[10:07:13] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[10:08:50] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.19)
[10:09:14] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[10:09:29] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-61.cspire.com)
[10:09:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:11:37] <trafficjam> xse: is advent of code hard?
[10:13:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[10:13:57] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-61.cspire.com) (Ping timeout: 240 seconds)
[10:14:56] <xse> depends, those things are more about problem solving / algo and programming a solution then of course require a bit of knoweledge but the problem solving bit is the part that matters
[10:15:33] <xse> you can check out one of the previous edition's questions and answers see if it fits your "started learning" level
[10:19:51] *** Joins: ADHD_ (~xxx@bras-vprn-toroon4834w-lp130-15-184-147-71-53.dsl.bell.ca)
[10:21:31] *** Quits: mixfix41 (~homefame@user/mixfix41) (Quit: quittin')
[10:21:33] *** Quits: ADHD (~xxx@bison.sh3ll.ru) (Ping timeout: 256 seconds)
[10:22:09] <xse> the linked lists idea is something i would throw at someone that started learning like 24/48h ago or smth with no previous background, you get to play with pointers a bit, it makes you learn a bit about data structures, and it's relatively easy/quick to do
[10:22:18] *** Quits: xcm_ (~xcm@static.90.45.69.159.clients.your-server.de) (Remote host closed the connection)
[10:22:35] *** Joins: xcm_ (~xcm@user/xcm)
[10:23:31] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:24:26] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:24:41] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[10:27:56] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com)
[10:29:24] <trafficjam> sounds perfect, i'll take a look then, it's a 2021 AoC problem was it?
[10:32:50] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com) (Read error: Connection reset by peer)
[10:33:24] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[10:33:25] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com)
[10:33:26] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Read error: Connection reset by peer)
[10:34:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:34:52] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com) (Read error: Connection reset by peer)
[10:35:05] <ChoHag_> Is it completely impossible to declare that an embedded string should be located in memory where its contents can be changed?
[10:35:24] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com)
[10:35:57] <ChoHag_> I don't recall seeing a whiff of that anywhere and there would have been no need 50 years ago so I think not, but it would be convenient.
[10:35:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:36:22] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com) (Read error: Connection reset by peer)
[10:40:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:40:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[10:41:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:41:39] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[10:46:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:47:19] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:47:21] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[10:49:06] *** Joins: Atque (~Atque@user/atque)
[10:49:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:49:42] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Client Quit)
[10:50:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:50:07] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[10:50:20] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Read error: Connection reset by peer)
[10:51:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:54:12] <mcf> what do you mean by "embedded string"?
[10:54:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[10:55:12] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:57:07] <dave0> ChoHag_: char str[] = "this is editable";
[10:58:02] <dave0> it is a special case of an initializer, not an assignment
[10:58:24] <dave0> char *str2 = "this is an assignment and not editable";
[10:59:11] <ChoHag_> Oh. Global too?
[10:59:23] *** Joins: dithpri (~dithpri@gateway/tor-sasl/dithpri)
[10:59:54] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[11:00:04] <dave0> you're asking if those lines will work outside of a function definition? yes
[11:00:07] <ChoHag_> Finally a reason to use foo[]= instead of *foo=. I'd treated them as equivalent.
[11:00:21] <ChoHag_> Is that in the standard or an implementation quirk?
[11:00:26] <dave0> standard
[11:00:30] <dave0> c-faq talks about it
[11:01:00] <ChoHag_> The C FAQ is huge. I have read it but my brain is old and feeble.
[11:01:20] <mcf> dave0: they are both initializers, not assignments. one initializes the str array with the contents of the string, and one initializes the str pointer with the address of the string literal
[11:01:31] <dave0> ChoHag_: http://www.c-faq.com/decl/strlitinit.html
[11:01:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[11:01:53] *** Joins: inomoz (~inomoz@176.59.115.63)
[11:01:55] <ChoHag_> Cheers.
[11:02:03] <dave0> mcf: ah ok
[11:02:04] <mcf> char *str2; str2 = "assignment"; // this is an assignment
[11:02:21] <dave0> cool
[11:02:57] <ChoHag_> It makes perfect sense. One assigns contents to a constant address, one assigns constant data to a pointer variable.
[11:03:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:04:36] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[11:04:41] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f) (Quit: Quit)
[11:06:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:06:33] *** Joins: fluter (~fluter@user/fluter)
[11:07:09] *** imm__ is now known as imm_
[11:07:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:08:27] *** Joins: packet_lozenge[m (~packetloz@2001:470:69fc:105::1:61e6)
[11:09:18] *** Joins: dsrt^ (~dsrt@207.5.21.20)
[11:09:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[11:10:41] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Quit: WeeChat 3.2)
[11:11:49] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:18:19] *** Joins: mrig (~mrig@user/mrig)
[11:23:00] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:23:15] *** Quits: dithpri (~dithpri@gateway/tor-sasl/dithpri) (Ping timeout: 276 seconds)
[11:24:47] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[11:25:35] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Ping timeout: 256 seconds)
[11:27:32] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[11:28:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:29:04] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:29:06] *** Joins: Darkcoal (~user@139.64.51.226)
[11:31:24] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Quit: WeeChat 3.2)
[11:31:36] *** packet_lozenge[m is now known as packet_lozenge
[11:32:06] *** packet_lozenge is now known as Guest6969
[11:32:49] *** Quits: Guest6969 (~packetloz@2001:470:69fc:105::1:61e6) (Quit: Reconnecting)
[11:33:01] *** Joins: Guest6969 (~packetloz@2001:470:69fc:105::1:61e6)
[11:34:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:34:37] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[11:35:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:36:04] *** Parts: Guest6969 (~packetloz@2001:470:69fc:105::1:61e6) ()
[11:36:36] *** Joins: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr)
[11:37:13] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[11:37:14] *** Joins: Akiva (~Akiva@user/Akiva)
[11:38:19] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e) (Remote host closed the connection)
[11:39:02] *** Joins: mrig (~mrig@user/mrig)
[11:39:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:39:56] *** Quits: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[11:39:58] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e)
[11:40:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:40:43] *** Joins: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr)
[11:41:46] *** Quits: mrig (~mrig@user/mrig) (Client Quit)
[11:41:54] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[11:44:00] *** Joins: mrig (~mrig@user/mrig)
[11:44:51] *** packet_lozenge_ is now known as packetlozenge
[11:45:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:45:44] *** Joins: Rounin (~david@84.212.130.215)
[11:46:04] *** Quits: packetlozenge (~packet_lo@user/packet-lozenge/x-7125090) (Client Quit)
[11:47:53] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl)
[11:49:47] *** Joins: aradesh (~aradesh@user/aradesh)
[11:50:15] *** Quits: ai (nukedclx@2001:41d0:8:6153:ffff::1) (Ping timeout: 268 seconds)
[11:53:22] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[11:54:14] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:54:30] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:57:11] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Ping timeout: 256 seconds)
[11:59:47] *** Joins: lleo (~leo@188-206-73-135.mobile.kpn.net)
[12:00:45] *** Joins: ironman (~ironman@2401:4900:502a:340e:601b:baa3:42ae:8e38)
[12:01:47] *** Joins: Mentor (~Ionut@92.86.217.127)
[12:02:00] *** Joins: mrig (~mrig@user/mrig)
[12:02:06] *** Quits: Mentor (~Ionut@92.86.217.127) (Client Quit)
[12:02:22] *** Joins: Mentor (~Ionut@92.86.217.127)
[12:03:18] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[12:04:20] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:04:40] *** Joins: alevykh (~Aleksei@92-127-119-178-bbc-dynamic.kuzbass.net)
[12:06:02] *** Joins: packetlozenge (~packetloz@user/packet-lozenge/x-7125090)
[12:07:59] *** Quits: Mentor (~Ionut@92.86.217.127) (Quit: Leaving)
[12:10:23] *** Joins: pucara (~i@181.91.29.65)
[12:12:59] *** Parts: packetlozenge (~packetloz@user/packet-lozenge/x-7125090) ()
[12:14:52] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[12:18:29] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e)
[12:18:44] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[12:19:33] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:20:23] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:21:42] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[12:22:37] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl)
[12:25:33] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[12:35:36] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[12:37:14] *** Joins: stonkey (~stonkey@user/stonkey)
[12:38:33] *** Quits: noose (~noose@user/noose) (Quit: Bye)
[12:38:54] *** Joins: noose (~noose@user/noose)
[12:39:38] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:43:44] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:45:07] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:48:53] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[12:50:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:50:40] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[12:52:48] *** Joins: packet_lozenge_ (~quassel@user/packet-lozenge/x-7125090)
[12:54:39] *** Quits: packet_lozenge_ (~quassel@user/packet-lozenge/x-7125090) (Client Quit)
[12:54:59] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[12:56:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[12:56:50] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (Client Quit)
[12:57:22] *** Quits: lleo (~leo@188-206-73-135.mobile.kpn.net) (Quit: beyond time space in laws)
[12:57:28] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[12:57:30] *** Quits: critr (~critr@user/critr) (Ping timeout: 276 seconds)
[13:00:16] *** Quits: hinata (~hinata@2409:4042:d1c:87d7:91c2:5e62:40d9:6c82) (Quit: Leaving)
[13:03:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f)
[13:03:13] *** Joins: seninha (~seninha@user/seninha)
[13:03:56] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:08:08] *** Joins: Burgundy (~yomon@5-12-10-45.residential.rdsnet.ro)
[13:10:38] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:05] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[13:14:26] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[13:15:34] *** Parts: Dima[m] (~reddima10@2001:470:69fc:105::366) ()
[13:15:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:17:12] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (Quit: Peace!)
[13:17:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:21:25] *** Joins: packet_lozenge_ (~packet_lo@cpe-107-15-195-50.nc.res.rr.com)
[13:22:07] *** Quits: packet_lozenge_ (~packet_lo@cpe-107-15-195-50.nc.res.rr.com) (Changing host)
[13:22:07] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[13:22:47] <katsuragi> https://termbin.com/85l0 what does the + symbol do? why is one on the operands a character?
[13:23:20] <dave0> ah it's regular plus
[13:23:32] <dave0> '0' means the ascii value of the zero character
[13:23:41] <dave0> which is 48
[13:23:51] <dave0> ,cc printf("%c ", 48);
[13:23:53] <candide> dave0: 0
[13:23:58] <fizzie> So ASCII-centric.
[13:24:07] <dave0> it is the world we live in
[13:24:09] <dave0> la-la-la
[13:24:23] <NRK[m]> ascii is great, what's the problem
[13:24:49] <fizzie> Sure, but it's also an unnecessary assumption to make. Especially that part of it being 48.
[13:24:58] <katsuragi> ah alright
[13:25:02] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (Client Quit)
[13:25:11] <dave0> katsuragi: it is a clever way to turn the binary digits of n into readable characters
[13:25:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: foood)
[13:25:49] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[13:25:50] <NRK[m]> it's 48 in UTF-8 too
[13:25:56] <katsuragi> hmm
[13:26:07] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[13:26:11] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:26:38] <fizzie> The standard guarantees that '1' == '0' + 1 specifically so that you don't need to care about the specific values.
[13:27:33] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[13:27:37] <dave0> utf-8 being a superset of ascii is a feature
[13:27:58] <katsuragi> i understand now
[13:28:10] <NRK[m]> a very cool one
[13:29:15] <veltas> The UTF-8 encoding schemes is one of the few well designed things being reliably adopted in software today
[13:29:21] <supakeen> the real cool one were the russian encodings were dropping the msb would result in the romanicized 'alternative' letter keeping things semi readable on 7-bit
[13:29:40] <veltas> Shame unicode itself isn't up to that standard
[13:31:29] <trafficjam> hey guys, for those who were suggesting learning lisp a day or so ago, is a lisp derivative like Guile ok too?
[13:31:39] <trafficjam> or should i focus on common lisp?
[13:32:48] <supakeen> i'd suggest taking the one with the documentation you find most appealing
[13:33:04] <supakeen> whethe that's common lisp, guile, or scheme, up to you :)
[13:33:04] <trafficjam> is guile and common lisp very similar?
[13:33:13] <trafficjam> ok cool, thanks
[13:33:22] <fizzie> (Other obligatory nitpicks, just for the sake of form: `0b1` is nonstandard until C23 comes along, 8 instead of CHAR_BIT, right-shifting a potentially negative signed value.)
[13:33:54] <supakeen> trafficjam: scheme (and guile which is an implementation of scheme) are smaller languages than common lisp
[13:34:30] <supakeen> https://ane.iki.fi/2020/10/05/between-two-lisps.html
[13:35:53] <trafficjam> guess i start with scheme / guile ( / racket?) first and then move on to lisp if i like it
[13:36:08] <dave0> fizzie: i write a lot of code along the lines of   foo(int x) { a = x >> 24 & 0xff; }   is it undefined if x is negative? (assuming 32 bit int for sake of argument) ?
[13:36:41] <dave0> in fact i write it like that so it works with int > 32 bits
[13:39:40] *** Joins: hinata (~hinata@2409:4042:d1c:87d7:91c2:5e62:40d9:6c82)
[13:39:50] <fizzie> It's only implementation-defined.
[13:40:33] <dave0> aha
[13:40:48] <fizzie> Also sufficiently common there isn't even an UBSan check for it. (It does have checks for some other implementation-defined things, despite the name.)
[13:41:31] <fizzie> It's a little unsymmetric: << of a negative number is undefined, >> is implementation-defined.
[13:41:53] <supakeen> i see honda also stored the date as a 32-bit int in ymdhis format
[13:42:15] <NRK[m]> just always use unsigned for bit fiddling
[13:44:49] <dave0> NRK[m]: `int` is deliciously short
[13:44:51] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 256 seconds)
[13:45:26] <dave0> `unsigned ` is an extra 9 characters :-p
[13:45:38] <NRK[m]> i have uint typedef
[13:47:15] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Ping timeout: 256 seconds)
[13:47:59] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[13:49:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:50:09] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[13:50:36] *** Joins: oxfuxxx (~oxfuxxx@2a01:e0a:268:92c0:e159:4fec:fb54:1915)
[13:51:23] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:58:02] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[13:58:07] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:58:45] <fizzie> `unsigned` over `int` is just 5 extra characters, though, and you don't need the `int` when you've got `unsigned`.
[13:59:15] *** Joins: earnest (~earnest@user/earnestly)
[13:59:25] *** Joins: eeerik8_ (~eeerik8@95.179.149.48)
[14:00:22] *** Quits: oxfuxxx (~oxfuxxx@2a01:e0a:268:92c0:e159:4fec:fb54:1915) (Ping timeout: 268 seconds)
[14:00:48] *** Quits: eeerik8_ (~eeerik8@95.179.149.48) (Remote host closed the connection)
[14:01:02] <dave0> pfft
[14:01:12] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[14:01:25] *** Quits: eeerik8 (~eeerik8@95.179.149.48) (Remote host closed the connection)
[14:01:44] *** Joins: eeerik8 (~eeerik8@95.179.149.48)
[14:02:08] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:02:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[14:03:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:03:33] *** Lord_of_Life_ is now known as Lord_of_Life
[14:03:43] <NRK[m]> uint is more pleasant to type
[14:05:58] <fizzie> It would have the benefit of stopping the constant typos to `unsinged`. (Still wouldn't though.)
[14:06:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:06:09] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:06:09] *** Joins: wroathe (~wroathe@user/wroathe)
[14:07:39] *** Joins: BCMM (~BCMM@user/bcmm)
[14:07:44] <NRK[m]> yeah i constantly mistype unsinged as well.
[14:08:19] <NRK[m]> unfortunate `uint` isn't standard and not all codebases welcome creating typedefs.
[14:08:53] <|smlckz|> what are the cases where an array variable does not decay into pointer?
[14:09:09] <dave0> |smlckz|: sizeof
[14:09:40] <dave0> also &
[14:09:47] <dave0> can't remember
[14:10:02] *** Quits: BCMM (~BCMM@user/bcmm) (Client Quit)
[14:10:16] *** Joins: BCMM (~BCMM@user/bcmm)
[14:10:18] <NRK[m]> ,cc int a[5]; int **p = &a;
[14:10:20] <mcf> ,c11 6.3.2.1p3
[14:10:22] <candide> http://www.iso-9899.info/n1570.html#6.3.2.1p3 [Lvalues, arrays, and function designators] Except when it is the operand of the sizeof operator, the _Alignof operator, or the unary & operator, or is a string literal used to initialize an array, an expression that has type ``array of type'' is converted to an expression with type ``pointer to type'' that points to the initial element of the array object and... <truncated; https://0x0.st/oz4P.txt>
[14:10:22] <candide> NRK[m]: [warning: initialization of 'i​nt **' from incompatible pointer type 'i​nt (*)[5]' [-Wincompatible-pointer-types]] no output: p = 0x7fffffffe280; a = {0, 0, 1, 0, 124}
[14:10:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:11:38] <fizzie> The mention of _Alignof there is one of the few bugs in the draft not present in the final version.
[14:12:28] *** Joins: zmt01 (~zmt00@user/zmt00)
[14:12:41] *** Joins: kish` (~aqua@user/aqua)
[14:12:58] <mcf> oh, really?
[14:13:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[14:13:18] <fizzie> It's not actually one of the exceptions, because the operand of _Alignof can only be a parenthesized type name, not an expression, so you couldn't have an expression with an array type there in the first place.
[14:14:01] <mcf> ah, yeah. was confusing it with _Alignas
[14:14:28] <trafficjam> scheme is so weird to code in lol
[14:14:34] <fizzie> ,cc int arr[5]; printf("%zu", _Alignof arr);
[14:14:36] <candide> fizzie: [warning: ISO C does not allow '_Alignof (expression)' [-Wpedantic]] 4
[14:14:51] <trafficjam> most alien language i think i've used so far
[14:15:21] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[14:15:36] *** Joins: ppt (~yulung@118-232-53-143.dynamic.kbronet.com.tw)
[14:16:14] <sham1> Why doesn't _Alignof allow for expressions? I don't see why it would be any different from sizeof in that regard
[14:17:25] <dave0> you shall not question the standard
[14:20:22] <Learath2> Interesting that they didn't make the exact same as sizeof
[14:22:17] <fizzie> I think the idea is, an extended alignment isn't actually a part of a type (it can only be specified for an object or a struct member; you can't put `_Alignas` into a typedef for example), so even if you had an expression where the operand designated an object with an extended alignment, `_Alignof thatObject` would still be just the alignment of the type, not that object, which would be confusing.
[14:23:49] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[14:23:55] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:23:57] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[14:24:20] <fizzie> Well, I guess it _is_ part of the type still, since it's part of the type compatibility rules. But just a little... vaguely.
[14:24:50] <fizzie> No, scratch that, that was just for the compatibility of two struct types, as a requirement for their members.
[14:25:59] <fizzie> ,cc _Alignas(1024) int i; printf("%zu", _Alignof i); // GCC does return the alignment of the object though
[14:26:02] <candide> fizzie: [warning: ISO C does not allow '_Alignof (expression)' [-Wpedantic]] 1024
[14:26:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[14:27:01] <dave0> is that for linux or something?
[14:27:14] <Learath2> Huh, that raises even more questions, why wouldn't alignment be part of a type?
[14:28:30] <sham1> I mean clearly you can have the alignment be a part of a type such that you can get to it even from an expression of that type. Case in point: what GCC just did
[14:28:42] <dave0> ,cc _Alignas(1) int i; printf("%zu ", _Alignof i);
[14:28:44] <candide> dave0: error: '_Alignas' specifiers cannot reduce alignment of 'i'
[14:29:09] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Read error: Connection reset by peer)
[14:29:34] <NRK[m]> comparing 2 pointers with < > without knowing they're part of the same array is UB, right?
[14:30:01] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:30:24] <sham1> Yeah
[14:30:36] <sham1> That can cause annoying things to happen, for example if you have linker symbols
[14:30:37] <fizzie> Part of the same object, so you could compare pointers to different members of a struct for example.
[14:30:51] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[14:30:53] *** Quits: nicko (~iClass@222.211.30.113) (Ping timeout: 256 seconds)
[14:31:05] <fizzie> ...I think? At least common sense would have that.
[14:31:32] <NRK[m]> uhm. so the only standard way to know if two pointers are inside the same object is to loop through one of them byte by byte and compare, right?
[14:31:51] *** Joins: nicko (~iClass@221.236.54.23)
[14:32:08] <NRK[m]> and yeah, the standard specifies that latter members of a struct will compare greater.
[14:32:25] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:07] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[14:33:10] *** Joins: csrf (~csrf@user/csrf)
[14:33:13] <Learath2> NRK[m]: could use offsetof magic the same way container_of macro works in the kernel
[14:33:18] <earnest> This sounds like container_of magic
[14:33:30] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:33:37] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:33:40] *** Joins: tejr (~tejr@user/tejr)
[14:34:18] <Learath2> Now whether two arbitrary pointers are within the same object without knowing the container type nor the offset within it is I think impossible
[14:35:33] <NRK[m]> offsetof seems to be implementation defined
[14:36:52] <Learath2> um, it's not afaik
[14:36:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:36:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:36:56] *** Joins: wroathe (~wroathe@user/wroathe)
[14:37:09] <Learath2> ,c99 7.17p3
[14:37:10] <candide> http://www.iso-9899.info/n1256.html#7.17p3 [Common definitions <stddef.h>] The macros are NULL which expands to an implementation-defined null pointer constant; and offsetof(type, member-designator) which expands to an integer constant expression that has type size_t, the value of which is the offset in bytes, to the structure member (designated by member-designator ), from the beginning of its structure ... <truncated; https://0x0.st/oz4m.txt>
[14:37:35] <NRK[m]> ah, nice.
[14:38:37] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[14:38:50] *** Quits: ppt (~yulung@118-232-53-143.dynamic.kbronet.com.tw) (Quit: WeeChat 3.3)
[14:39:01] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[14:39:24] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Max SendQ exceeded)
[14:39:52] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[14:39:57] <earnest> Is there a copy of the C standard available online, not a draft, but the real thing.  (Ada's is freely available with diffs available to the past standards)
[14:40:16] <Learath2> Nope
[14:40:20] <earnest> For free, that is.  *tim sweeny*
[14:40:37] <earnest> I think WG14 want to destroy C, this is my tinfoil
[14:40:49] <NRK[m]> you can get em from libgen ;)
[14:41:03] <earnest> I wondered that
[14:41:18] <dave0> how's perl going? i never hear about it anymore
[14:41:36] <dave0> rust this and rust that but no perl
[14:42:01] *** Quits: avrdude (~avrdude@user/avrdude) (Ping timeout: 245 seconds)
[14:42:02] <bkhl> dave0, let me know if you're interested in a Perl development job in Stockholm. We talk about it a lot.
[14:42:04] <earnest> perl quietly runs most of the internet
[14:42:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:42:21] <Learath2> ofc, look at all the wg14 members, corpos who only care about their 3 decade old code still working
[14:43:12] <earnest> Apparently the aliasing rules is considered a plot against C
[14:43:15] <bkhl> Also #perl is quite busy.
[14:43:30] <earnest> Then look at the mess they're making with _Generic
[14:43:44] <earnest> Or their recent attempt to dump the entire math.h namespace into global
[14:45:17] <Learath2> wg21 isn't much better either, we should all organize and seize the means of standardization
[14:45:25] <Learath2> overthrow the ISO
[14:45:52] <earnest> I wonder how Ada can release theirs for free
[14:46:41] <fizzie> I imagine you _could_ have an extended alignment be part of the type, but it's not. It'd definitely involve a bunch of changes (for example, I imagine you'd want to allow conversions from a hypothetical `_Alignas(1024) int *` to `int *`. And the alignment specificer would probably have to syntactically change from being a declaration specifier of its own kind into a type qualifier allowed in pointer
[14:46:42] <fizzie> declarations (& so it's dropped by lvalue conversion).
[14:46:55] *** Joins: Klinda (~superleag@user/klinda)
[14:47:13] <earnest> Oh well, I suppose this is because they just host it for download themselves.  Bypassing ISO's website entirely.  Sweeney makes a good point (if you saw that thread) about ISO charging silly amounts for standards which they wish people to follow/use
[14:47:38] <fizzie> ,cc _Alignas(1024) int i; ptype(i); ptype(&i); int *p = &i; // just checking
[14:47:41] <candide> fizzie:  i = i​nt   &i = i​nt *
[14:47:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[14:48:09] <earnest> Learath2: (If missed and for a gigle: https://nitter.net/TimSweeneyEpic/status/1368637789248626699 )
[14:48:11] <candide> Title of earnest's link: Tim Sweeney (@TimSweeneyEpic): "The value of standards is in their adoption. ISO obstructs adoption of standards by paywalling them, making it impractical for millions of hobbyist programmers to access to them and be able to even understand what the standard is." | nitter
[14:48:19] <NRK[m]> earnest: https://www.lysator.liu.se/c/dmr-on-noalias.html
[14:49:46] <bkhl> Tell me about it. I work in broadcasting, and SMPTE is even worse.
[14:50:02] *** Joins: unknow (~i.am@user/marlboro)
[14:50:02] <earnest> NRK[m]: Curiously prophetic
[14:51:03] <Learath2> If Tim Sweeney was the head of ISO he'd also charge for standards, neoliberal capitalists telling other people not to profit off of anything and everything is just ironic :D
[14:52:06] <earnest> There likely wouldn't be standards
[14:52:26] <earnest> Just lots of different "Bell Labs"' doing their own thing
[14:52:54] *** Joins: constxo (~brad@142.134.38.68)
[14:53:37] <NRK[m]> earnest: there's also this: https://archive.fo/22L0K the mess around UB
[14:54:26] <earnest> NRK[m]: My favourite is that if a header doesn't end with a newline
[14:56:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[14:56:36] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:58:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[14:59:26] *** Joins: aerysh_ (~aerysh@2a0a:b640:1:5a::a07d)
[15:01:18] <Klinda> fizzie: good morning, did you see my question yesterday? I had to sleep before
[15:02:58] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[15:06:44] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: brb)
[15:06:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[15:08:05] *** Joins: wroathe (~wroathe@206.55.188.8)
[15:08:05] *** Quits: wroathe (~wroathe@206.55.188.8) (Changing host)
[15:08:05] *** Joins: wroathe (~wroathe@user/wroathe)
[15:08:30] <ioxzev1z> Klinda, which question?
[15:08:36] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:09:31] *** Joins: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr)
[15:11:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Client Quit)
[15:12:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:13:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:19:04] <Klinda> ioxzev1z: why asan is not able to catch the size of a buffer overflow
[15:19:13] <fizzie> The one on why ASan doesn't tell you the "size" of your buffer overflow? Wrote https://0x0.st/oz4t.txt as a reply of sorts to that.
[15:21:24] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[15:23:27] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl)
[15:24:06] *** Quits: alevykh (~Aleksei@92-127-119-178-bbc-dynamic.kuzbass.net) (Quit: Leaving)
[15:25:27] <Klinda> understand fizzie thank you
[15:26:55] <Klinda> fizzie: the address that is in the map, is the region of the address ?
[15:27:06] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[15:30:06] *** Quits: Elladan (~elladan@user/elladan) (Quit: ZNC - http://znc.in)
[15:30:46] <fizzie> The map would appear to highlight only the specific failing address (0x60c00000017b), not the entire range of the offending write.
[15:31:57] *** Joins: Elladan (~elladan@user/elladan)
[15:33:04] <fizzie> "WRITE of size 12345 at 0x60c00000017b" is a bit misleading anyway, because really it was a write of size 12345 "at" 0x60c0..0100, and 0x60c0..017b is again just the first invalid byte (0x7b == 123).
[15:33:19] <Klinda> 0x0c187fff8020: is this the region?
[15:33:38] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:34:03] <fizzie> That address (0x0c187fff8020) is (AFAIK) just where the shadow byte map happens to be, and is not really relevant for anything.
[15:34:47] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[15:35:30] <Klinda> 0x60c00000017b is located 0 bytes to the right of 123-byte region [0x60c000000100,0x60c00000017b).... the malloc start 0x60c000000100 ?
[15:35:39] <fizzie> Yes.
[15:35:53] *** Joins: ironman_ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:37] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[15:37:18] <fizzie> The `0x0c187fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00[03]` row is the part of the map representing the 123-byte allocation [0x60c0..0100, 0x60c0..017b), plus the 5 bytes right after that [0x60c0..017b, 0x60c0..0180). That's 16 bytes in the map, so 16*8 = 128 bytes of actual application memory.
[15:38:08] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:38:57] *** Quits: ironman (~ironman@2401:4900:502a:340e:601b:baa3:42ae:8e38) (Ping timeout: 240 seconds)
[15:39:02] *** Quits: aerysh_ (~aerysh@2a0a:b640:1:5a::a07d) (Quit: Konversation terminated!)
[15:39:48] *** Joins: u0_a391 (~u0_a391@2600:380:a423:8c4a:cc7e:ff8b:b02f:49e9)
[15:41:38] *** ironman_ is now known as ironman
[15:41:39] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:42:18] *** Joins: u0_a3911 (~u0_a391@2600:380:a423:8c4a:20c:e832:91d3:fafc)
[15:42:19] <fizzie> And the two backtraces are the locations of the `malloc` and `memset` calls. With debugging info you also typically get line numbers: https://0x0.st/oz4G.txt (slightly different values, since it's from a different system)
[15:43:13] *** u0_a3911 is now known as kit_
[15:43:32] *** Quits: kit (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 240 seconds)
[15:43:39] *** kit_ is now known as kit
[15:43:58] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[15:44:17] *** Quits: u0_a391 (~u0_a391@2600:380:a423:8c4a:cc7e:ff8b:b02f:49e9) (Ping timeout: 240 seconds)
[15:46:04] <Klinda> yes understannd fizzie thank you
[15:49:02] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[15:49:25] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[15:50:12] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[15:50:17] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[15:50:30] *** Joins: shivesh (~shivesh@user/shivesh)
[15:50:46] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[15:51:02] *** Joins: tejr (~tejr@user/tejr)
[15:51:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[15:52:20] *** flooded is now known as _flood
[15:53:51] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[16:00:14] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[16:01:51] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f) (Quit: Quit)
[16:05:33] *** Joins: agonhajdari (~textual@user/agonhajdari)
[16:07:39] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Read error: Connection reset by peer)
[16:08:20] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:10:04] *** Joins: slidercrank (~slidercra@user/slidercrank)
[16:10:45] *** Quits: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:11:15] *** Joins: Satin (uid193953@user/Seten)
[16:13:02] *** Joins: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr)
[16:13:14] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[16:14:48] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (Ping timeout: 268 seconds)
[16:16:01] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:e050:482e:d5a8:4b1b)
[16:16:02] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:e050:482e:d5a8:4b1b) (Changing host)
[16:16:02] *** Joins: skapata (~Skapata@user/skapata)
[16:19:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[16:28:11] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:28:36] <Learath2> Does anyone know some example implementations where having int_fast and int_least would help in better code generation?
[16:28:53] <markand> duktape uses some I think
[16:33:43] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 256 seconds)
[16:34:17] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[16:35:08] *** Joins: Elladan (~elladan@user/elladan)
[16:35:17] *** Joins: Guest95 (~Guest95@host-79-20-94-163.retail.telecomitalia.it)
[16:35:28] *** Quits: Guest95 (~Guest95@host-79-20-94-163.retail.telecomitalia.it) (Client Quit)
[16:37:55] *** Joins: Guest95 (~Guest95@host-79-20-94-163.retail.telecomitalia.it)
[16:38:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:38:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:38:27] *** Joins: wroathe (~wroathe@user/wroathe)
[16:40:58] *** Quits: Guest95 (~Guest95@host-79-20-94-163.retail.telecomitalia.it) (Client Quit)
[16:41:01] <veltas> Learath2: On Intel I'd assume int_fast16_t would be int32_t
[16:41:27] *** Joins: alfa (~alfa@host-79-20-94-163.retail.telecomitalia.it)
[16:41:51] *** Quits: alfa (~alfa@host-79-20-94-163.retail.telecomitalia.it) (Client Quit)
[16:42:15] *** Joins: alfa963 (~alfa963@host-79-20-94-163.retail.telecomitalia.it)
[16:42:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:43:00] *** Quits: alfa963 (~alfa963@host-79-20-94-163.retail.telecomitalia.it) (Client Quit)
[16:43:24] <veltas> int_fast16_t is pretty much what 'int' means, if I ever see someone use it without a good reason I will reach across IRC and slap them
[16:43:54] <cerl> Is typedef struct evil like linus said so?
[16:44:49] <veltas> It is if you name your types "thing_struct"
[16:45:11] <veltas> Or "struct_thing"
[16:45:26] *** Joins: tech_exorcist (txrcst@de1.hashbang.sh)
[16:46:39] *** Quits: tech_exorcist (txrcst@de1.hashbang.sh) (Remote host closed the connection)
[16:46:55] *** Joins: tech_exorcist (txrcst@de1.hashbang.sh)
[16:47:05] <markand> lot of people will tell so
[16:47:17] <markand> matter of style
[16:47:30] <markand> what is definitely evil though is to hide pointers through typedef
[16:47:53] *** Quits: tech_exorcist (txrcst@de1.hashbang.sh) (Remote host closed the connection)
[16:50:00] <zwr> I discovered Microsoft does that in their system API while porting a library I'm writing to windows...
[16:50:09] * markand likes to have typedef for opaque types and non-typedef for user accessibles types
[16:50:16] <markand> comes to mind : DIR / struct dirent
[16:50:33] <zwr> yes that's a good use
[16:51:40] <veltas> That's how it was used in early UNIX
[16:55:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:57:18] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:58:26] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:58:57] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:59:00] <zwr> oh damn glibc has reallocarray() now
[17:02:08] <gl> since 2.26, yeah...
[17:02:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:03:06] *** Quits: hinata (~hinata@2409:4042:d1c:87d7:91c2:5e62:40d9:6c82) (Quit: Leaving)
[17:06:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[17:06:17] <dave0> glibc has getline() which breaks k&r exercise 1.16
[17:06:21] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:07:11] <Learath2> I was getting complaints about 1.16 all the time so now when I give it as an exercise I also tell them to name their function something different
[17:08:02] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:08:08] <earnest> cerl: (typedef often obscures rather than enlightens the reader as to what a type actually is.  Much clearer to visually see 'struct' or 'enum', and such)
[17:08:10] *** Joins: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net)
[17:08:14] <zwr> lmao I was reading the man page for getline trying to figure out the issue, yes, that's the obvious name someone would give that function
[17:08:40] <fizzie> Even POSIX has `getline` (and `getdelim`) these days.
[17:11:26] *** Quits: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[17:11:36] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[17:12:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:13:05] * GyrosGeier uses strtok
[17:15:01] * dave0 also uses strtok but accidentally overwrites GyrosGeier's internal state
[17:15:33] <veltas> earnest: By that logic MS are right by using hungarian notation everywhere
[17:15:33] *** Parts: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net) (Leaving)
[17:16:57] *** Joins: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net)
[17:17:04] <earnest> veltas: naming schemes are not types, nor are they part of the syntax that gives it meaning
[17:17:28] <veltas> If they're used consistently it's all the same
[17:17:54] <veltas> Human beings are intelligent and privy to a lot of context and don't necessarily need the word 'struct' written in front of every struct, the same way I don't want lpsz or whatever it is written on every string
[17:17:57] <earnest> There is no debate here
[17:18:27] <earnest> I'm not interested in your opinion, if you wish to spend some time thinking this through, you're welcome to, but I don't want your internal monologue
[17:19:22] <fizzie> dave0: Wouldn't it be great if strtok's state was globally shared across every computer connected to the Internet?
[17:20:10] <supakeen> yes
[17:20:23] <supakeen> libcloud, with cloudstrtok, cloudmalloc, cloudfree, etc
[17:20:33] *** Quits: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net) (Client Quit)
[17:20:40] <supakeen> true universal computing
[17:20:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:20:56] <earnest> programming as a service
[17:20:58] *** Joins: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net)
[17:21:12] *** Joins: kts (~kts@103.73.237.74)
[17:22:52] *** Quits: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net) (Client Quit)
[17:23:06] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:23:14] *** Joins: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net)
[17:23:54] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[17:25:41] *** Quits: keinbock (uid6451@id-6451.helmsley.irccloud.com) ()
[17:26:08] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:26:48] *** Joins: slayne (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[17:28:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:28:29] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:28:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:29:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:30:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:30:10] <sham1> Cloud functions
[17:31:05] <NRK[m]> i typedef all my structs
[17:31:14] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:31:39] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:31:41] <NRK[m]> 'struct<space>' 7 chars, i ain't typing it
[17:31:52] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com)
[17:32:16] <sham1> Neither am I. I have my editor type it
[17:33:22] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:33:27] *** Joins: pulse (~pulse@user/pulse)
[17:34:05] <supakeen> struct *result_merge result_merge(struct result_in *in, struct result_out *out)
[17:34:06] <supakeen> lovely
[17:34:13] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:34:15] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:34:55] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:35:16] *** Joins: nyah (~nyah@2a02:c7f:6ea4:ec00:55b7:77f:4ccb:c03c)
[17:35:24] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:35:24] <earnest> supakeen: Yes, extremely clear, unambiguous
[17:35:33] <earnest> Don't try to abstract, you're not smart enough
[17:35:46] <supakeen> i have no super strong opinion on this, i still flip flop between typedef or not per project :)
[17:35:50] <earnest> (Your use of naming is poor though)
[17:36:55] <veltas> "you're not smart enough" Sounds familiar, are you on the standard C committee per chance?
[17:38:26] *** Joins: rid (~rid@50.234.109.84)
[17:39:42] *** Joins: brad_mssw (~bhouse@2620:134:c001:100:5e7:3a42:d446:e4f0)
[17:40:32] <earnest> Are you trying to be funny, or insightful?  I'm not smart enough to understand these jokes
[17:42:14] <dave0> believe me, if i was trying to be funny, you would be in hysterics
[17:47:56] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[17:50:44] <rid> I have a simple function that counts how many times a value appears in an array, and makes a list of their positions in the array -- http://pastie.org/p/5Qym5TJmQ6Jo9TahLGgvsN
[17:50:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[17:51:30] <rid> i have to create a local variable to keep track of the count though, but I'd like to use the passed-in value instead to simplify it
[17:52:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:52:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[17:53:12] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:55:06] <rid> other tests fail when I try to use a variant of the second function, and I'm having trouble figuring out why they behave differently
[17:55:11] <GyrosGeier> earnest, MS are using "system hungarian", which is bullshit, because that is what the compiler checks
[17:55:56] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[17:56:07] <GyrosGeier> there is also "application hungarian", where you have prefixes for "strings I have already validated" or "strings that are SQL escaped" or something such
[17:56:10] <sham1> System hungarian makes sense for assembly
[17:56:10] <GyrosGeier> that makes sense
[17:56:16] <GyrosGeier> exactly
[17:56:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[17:56:45] <GyrosGeier> in C++, I have type wrappers that allow me to attach tags at compile time
[17:56:48] <rid> even if I assign *count = 0; it still gums up somewhere else
[17:56:54] <earnest> GyrosGeier: If such things are mechanised and so can be checked with informal methods, that's fine
[17:57:07] <earnest> That was the point
[17:58:12] <GyrosGeier> so in C++, I can have the compiler check that unescaped to SQL escaped strings only happens through the sql_escape() function
[17:58:17] <GyrosGeier> in C, I can't
[17:58:55] <rid> http://pastie.org/p/0GGdxDb8y8pNoTQfQlcceC
[18:02:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:02:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[18:03:22] <rid> can anyone explain the difference between these two functions?  they look identical to me essentially
[18:03:55] <sham1> ,paren *count++
[18:03:56] <candide> sham1: *(count++)
[18:03:59] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:04:09] <sham1> Mmh
[18:04:42] <sham1> rid: you're incrementing the count-pointer instead of the value pointed to by count
[18:04:51] <sham1> list[(*count)++] = i
[18:04:55] <sham1> Do that
[18:05:04] <rid> ...
[18:05:05] <rid> dang
[18:05:08] <rid> you're right
[18:05:11] <rid> works fine now
[18:06:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:06:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:06:02] *** Joins: wroathe (~wroathe@user/wroathe)
[18:06:04] <rid> thanks sham1!
[18:06:12] *** Quits: rid (~rid@50.234.109.84) (Remote host closed the connection)
[18:06:21] <sham1> Operator precedence can sometimes be a bit tricky
[18:06:41] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f)
[18:06:45] <sham1> I probably would write the one at the top rather than the other one for clarity
[18:07:58] *** Joins: Leonard (~Administr@114.55.127.80)
[18:09:12] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[18:09:48] *** Joins: mattroelle (~mattroell@136-26-68-28.cab.webpass.net)
[18:10:11] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[18:10:25] <sham1> While C can be written in a terse manner, I wouldn't. Code readability and maintainability is more important than the smallness of the source code
[18:14:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[18:16:30] *** Joins: vysn (~vysn@user/vysn)
[18:17:50] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:18:08] *** Quits: wenxin (~wenxin@user/vim-fans/x-3284168) (Ping timeout: 268 seconds)
[18:18:45] *** Joins: critr (~critr@user/critr)
[18:20:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:23:08] <veltas> Just remember that suffixes bind tighter than prefixes
[18:23:34] <fizzie> Hmm, a "C / C++" syntax highlighter that colors `list` as if it was a keyword? Well, maybe it's for C++ std::list.
[18:24:49] <veltas> Notepad++ or something?
[18:24:55] <fizzie> No, that paste site.
[18:25:11] <veltas> Paste sites are pretty bad at highlighting I've noticed
[18:25:44] <veltas> ideone has an okay forth highlighter while editing, and then it highlights it as C++ when it's submitted
[18:26:28] <sham1> That's disgusting
[18:26:33] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[18:27:10] <fizzie> `int *at = list; for (int i = 0; i < size; i++) if (arr[i] == find) *at++ = i; *count = at - list;` is also an option. If a bit overly clever one. But at least it makes it abundantly clear `count` is the size of the output array.
[18:27:26] <supakeen> I'd hazard a guess that it wasn't a C lexer that was used :)
[18:27:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:28:20] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[18:28:48] <sham1> Yeah, no. If you see C/C++ in a language listing, run.
[18:28:58] <sham1> Run, don't walk, away from "C/C++"
[18:29:49] <supakeen> I know the lexer I use on bpa.st doesn't do that at least, but it's also contrib and there have been flaws in it :)
[18:30:47] <NRK[m]> sham1: `while (*dst++ = *src++);`
[18:31:06] <NRK[m]> nice and cool strcpy :)
[18:31:34] <sham1> Mmhm
[18:32:13] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: Lost terminal)
[18:32:32] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:32:35] <poprocks> C is the only language I know of that has such a limited standard library, that its programmers *still* don't want to use ;)
[18:32:56] <veltas> Might have something to do with embedded
[18:33:29] <NRK[m]> c standard library is actually kinda big for my taste
[18:33:53] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Remote host closed the connection)
[18:33:59] <sham1> I mean yeah. I don't want to use wchar.h
[18:34:40] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[18:36:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:36:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:36:24] *** Joins: wroathe (~wroathe@user/wroathe)
[18:37:10] *** Joins: strajder (~strajder@user/strajder)
[18:38:48] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[18:39:06] *** Joins: magla (~gelignite@55d42ff9.access.ecotel.net)
[18:41:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:41:16] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[18:43:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:43:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:43:32] *** Joins: wroathe (~wroathe@user/wroathe)
[18:43:42] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:43:56] *** Joins: dithpri (~dithpri@gateway/tor-sasl/dithpri)
[18:44:05] *** Joins: WAR10CK (~WAR10CK@219.135.63.48)
[18:44:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[18:44:45] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[18:46:01] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[18:46:23] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[18:47:15] *** Parts: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net) (Leaving)
[18:48:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:52:27] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[18:56:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:56:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:56:24] *** Joins: wroathe (~wroathe@user/wroathe)
[18:56:30] *** Joins: Xatenev (~xatenev@2a02:8108:9640:74d4:7b74:61fc:ac8c:e6bd)
[18:57:07] *** Quits: Xatenev (~xatenev@2a02:8108:9640:74d4:7b74:61fc:ac8c:e6bd) (Changing host)
[18:57:07] *** Joins: Xatenev (~xatenev@user/xatenev)
[18:57:56] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[18:58:35] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com) (Read error: Connection reset by peer)
[18:59:31] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[18:59:52] *** Joins: pulse (~pulse@user/pulse)
[19:00:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:00:44] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:03:32] *** Joins: noarb (~noarb@user/noarb)
[19:03:58] *** Joins: malina (~malina@user/malina)
[19:04:08] *** Parts: Xatenev (~xatenev@user/xatenev) ()
[19:04:55] *** Joins: tolog (~tolog@37.120.205.108)
[19:06:07] <cryptonector> "but unsigned char is promoted to signed 32-bit integer when shifted by 24 bits
[19:06:09] <cryptonector> "
[19:06:13] <cryptonector> is that true?
[19:06:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[19:07:52] <caze> unsigned char is promoted to int when shifted.
[19:07:53] *** Joins: Leonard (~Administr@114.55.127.80)
[19:07:59] <caze> That is a more accurate way of saying it.
[19:08:13] <cryptonector> really
[19:08:13] <caze> int does not have to be 32 bits though.
[19:08:23] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[19:08:59] <caze> ,c11 6.5.7p3
[19:09:00] <candide> http://www.iso-9899.info/n1570.html#6.5.7p3 [Bitwise shift operators] The integer promotions are performed on each of the operands. The type of the result is that of the promoted left operand. If the value of the right operand is negative or is greater than or equal to the width of the promoted left operand, the behavior is undefined.
[19:09:02] <cryptonector> why on earth would unsigned <any-integer-type> be "promoted" to a larger _signed_ integer type?!
[19:09:06] <kurahaupo> cryptonector: It's promoted to int, whatever size that is, when you apply any operations to it
[19:09:32] <caze> cryptonector: That is now integer promotions work.
[19:09:32] <cryptonector> so, can I ((size_t)p[i])<<24 ?
[19:10:03] <caze> ,c11 6.3.1.1p2
[19:10:05] <candide> http://www.iso-9899.info/n1570.html#6.3.1.1p2 [Boolean, characters, and integers] The following may be used in an expression wherever an i​nt or unsigned i​nt may be used: -- An object or expression with an integer type (other than i​nt or unsigned i​nt) whose integer conversion rank is less than or equal to the rank of i​nt and unsigned i​nt. -- A bit-field of type _Bool, i​nt, signed i​n... <truncated; https://0x0.st/oztn.txt>
[19:10:35] <cryptonector> ok, thanks
[19:10:41] <cryptonector> so cast before shift works
[19:11:28] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:11:37] <caze> Assigning the value to a variable with the correct type is preferred over casting.
[19:11:57] <omegatron> ^--  yes, please use this approach
[19:12:44] <cryptonector> ty all
[19:13:08] <caze> size_t is only guaranteed to be 16 bits at minimum.
[19:13:26] <cryptonector> but it can be larger, so using size_t is not helpful in this case
[19:13:30] <caze> You should use unsigned long if you require 32 bits.
[19:14:17] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:14:39] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[19:14:49] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[19:15:30] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:15:45] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-90.cspire.com)
[19:16:54] <caze> (and then mask off extraneous bits in case it's more than 32 bits)
[19:17:37] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[19:19:35] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[19:22:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:23:33] <cryptonector> caze: does the promotion / non-promotion of unsigned char to int when shifting depend on the type of variable the value is assigned to?
[19:24:40] *** Joins: Leonard (~Administr@114.55.127.80)
[19:25:01] <caze> cryptonector: No, the assignment operator is completely unrelated. It has its own promotion rules.
[19:25:13] <cryptonector> right, thanks
[19:25:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[19:25:51] *** Joins: banana-prince (~banana-pr@2604:fa00:103:d8:b845:43f1:4797:522b)
[19:27:37] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:884b:5596:b69:cf1f) (Quit: Quit)
[19:27:41] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[19:30:10] *** Quits: jkssodhxu[m] (~barzarian@2001:470:69fc:105::1:3a12) (Quit: You have been kicked for being idle)
[19:30:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Client Quit)
[19:30:50] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:30:59] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[19:31:05] <constxo> kings
[19:31:37] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[19:32:42] <fizzie> `unsigned char` may also promote to `unsigned int` if UCHAR_MAX > INT_MAX.
[19:32:56] <constxo> how do i get job writing C
[19:33:12] <fizzie> There's a longish bit in the rationale on the topic of why they picked the "value preserving" rather than "signedness preserving" model.
[19:33:20] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:33:29] <fizzie> https://0x0.st/-YVn.txt
[19:33:37] <fizzie> Whether you'll find it convicing or not is another question.
[19:33:40] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[19:33:48] <johnjaye> do they ever discuss why hex literals are signed or unsigned depending on how large they are?
[19:34:19] <fizzie> There's a mention of why they're _sometimes_ unsigned, at least.
[19:34:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:34:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:34:30] *** Joins: wroathe (~wroathe@user/wroathe)
[19:34:47] <fizzie> "Unlike decimal constants, octal and hexadecimal constants too large to be `int`s are typed as `unsigned int` if within range of that type, since it is more likely that they represent bit patterns or masks, which are generally best treated as unsigned, rather than 'real' numbers."
[19:35:09] <fizzie> But that's not really an answer as to why they're ever signed.
[19:35:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[19:36:25] <cryptonector> fizzie: thanks for that link; no I don't buy the value-preserving thing
[19:36:59] <constxo> ,cc ptype(0xF); ptype(0xFF000000);
[19:37:02] <candide> constxo:  0xF = i​nt   0xFF000000 = unsigned i​nt
[19:37:09] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:37:19] *** Quits: dsrt^ (~dsrt@207.5.21.20) (Ping timeout: 256 seconds)
[19:37:58] <fizzie> The fact that the expression `-0x80000000` is positive (well, with the usual type sizes) is kind of awkward too.
[19:38:16] <johnjaye> yes. thus i use c, but i also relentlessly make fun of it
[19:38:39] <koollman> fizzie: does it change anything if hex constant under that limit are signed ?
[19:38:49] *** Joins: Leonard (~Administr@114.55.127.80)
[19:39:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:39:19] <fizzie> Well, depends. It does mean you can't do something like `0xFF << 24` (again, assuming the usual type sizes).
[19:39:27] <sham1> Well -0x80000000 == 0x80000000 is more just a 2's complement thing
[19:39:50] <fizzie> The point is, the value -0x80000000 is perfectly representable in an `int`.
[19:40:02] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 240 seconds)
[19:40:22] <fizzie> ,cc ptype(-0x80000000); ptype(-0x7fffffff-1);
[19:40:24] <candide> fizzie:  -0x80000000 = unsigned i​nt   -0x7fffffff - 1 = i​nt
[19:40:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[19:41:29] *** Quits: AmR (~AmREiSa@156.199.28.131) (Ping timeout: 252 seconds)
[19:41:32] <fizzie> But since the - isn't part of the literal, it can't really give the "obvious" result, because the positive version isn't.
[19:41:59] *** Joins: shivesh (~shivesh@user/shivesh)
[19:42:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:42:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:42:30] *** Joins: wroathe (~wroathe@user/wroathe)
[19:42:51] <fizzie> ,cc unsigned u = 0xff << 24; // on the earlier thing of why it sort-of matters small hex constants are signed
[19:42:54] <candide> fizzie:  runtime error: left shift of 255 by 24 places cannot be represented in type 'i​nt'
[19:43:04] <fizzie> (Of course there's always the 'u' suffix.)
[19:43:54] <fizzie> Assuming your code review policies don't flag `0xFU` as unsuitable language. ;)
[19:47:56] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:49:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:49:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[19:51:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:53:52] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.186)
[19:54:19] *** Quits: unknow (~i.am@user/marlboro) (Ping timeout: 256 seconds)
[19:55:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:55:57] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.19) (Ping timeout: 240 seconds)
[19:56:17] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[19:56:43] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[19:57:49] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 240 seconds)
[19:58:13] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e)
[19:58:46] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:58:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:59:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:59:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:59:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:59:58] *** Joins: wroathe (~wroathe@user/wroathe)
[20:00:06] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[20:00:26] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[20:00:36] *** Joins: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net)
[20:00:50] *** Joins: Leonard (~Administr@114.55.127.80)
[20:03:15] *** Quits: fe23 (~fe23@2409:8a34:464:4990:4def:ada2:31ae:b2c2) (Quit: fe23)
[20:03:33] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:03:57] *** Quits: haniaF (~haniaF@83.24.197.161.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[20:04:43] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:05:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:06:41] <clamiax> candide: can you please write " int "?
[20:06:41] <candide> " is the character that begins and terminates a string literal
[20:07:05] *** Joins: mahmutov (~mahmutov@37.155.64.87)
[20:07:06] <clamiax> ,cc unsigned u = 0xff << 24;
[20:07:08] <candide> clamiax:  runtime error: left shift of 255 by 24 places cannot be represented in type 'i​nt'
[20:07:27] <clamiax> there's a weird char between i and nt
[20:07:38] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[20:07:52] <clamiax> In vim I see it like this: i<200b>nt
[20:08:32] <sham1> ,cc unsigned int u = 0xffu << 24;
[20:08:35] <candide> sham1: no output: u = 4278190080
[20:08:52] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[20:09:06] <clamiax> pragma-: you may want to give a look, it seems like a bug
[20:09:48] *** Quits: inomoz (~inomoz@176.59.115.63) (Quit: WeeChat 3.4)
[20:11:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:11:43] *** Joins: AmR (~AmREiSa@156.199.28.131)
[20:12:01] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[20:14:55] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[20:15:13] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Remote host closed the connection)
[20:17:51] *** Quits: magla (~gelignite@55d42ff9.access.ecotel.net) (Quit: Stay safe!)
[20:18:32] *** Quits: Radionova327 (~TStaley@097-070-031-249.res.spectrum.com) (Quit: Leaving)
[20:19:17] *** Joins: luckyxxl (~luckyxxl@185.209.196.143)
[20:21:12] *** Joins: missogra (~missogra@dynamic-077-003-011-126.77.3.pool.telefonica.de)
[20:23:29] *** Joins: u0_a391 (~u0_a391@64.85.173.130)
[20:23:37] *** Quits: luckyxxl (~luckyxxl@185.209.196.143) (Ping timeout: 240 seconds)
[20:25:33] *** Joins: luckyxxl (~luckyxxl@194.36.25.28)
[20:25:37] *** Quits: missogra (~missogra@dynamic-077-003-011-126.77.3.pool.telefonica.de) (Ping timeout: 256 seconds)
[20:26:37] *** Parts: alevykh (~alevykh@92-127-119-178-bbc-dynamic.kuzbass.net) (Leaving)
[20:26:57] *** Quits: kit (~u0_a391@2600:380:a423:8c4a:20c:e832:91d3:fafc) (Ping timeout: 240 seconds)
[20:27:06] *** Quits: Figworm (~inoor@user/figworm) (Quit: Figworm)
[20:33:25] *** Quits: shailangsa_ (~shailangs@host86-162-150-202.range86-162.btcentralplus.com) (Ping timeout: 240 seconds)
[20:33:40] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:36:21] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:37:29] <fizzie> U+200B is a zero-width space, which does get used in IRC for things like not highlighting people.
[20:38:40] <fizzie> And there's a nickname on the channel that's... well, the type specifier for the most standard integer type. ;)
[20:39:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:39:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:39:12] *** Joins: wroathe (~wroathe@user/wroathe)
[20:39:41] *** Joins: Leonard (~Administr@114.55.127.80)
[20:39:52] <fizzie> Guessing that's why the zero-width space is there. Not that candide avoiding the word will probably help all that much in this particular case.
[20:40:17] <caze> interger
[20:40:51] *** Joins: Figworm (FiggyWitIt@user/figworm)
[20:41:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[20:44:04] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:bcc9:1408:f826:5e8e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:44:07] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[20:44:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:44:47] *** Quits: banana-prince (~banana-pr@2604:fa00:103:d8:b845:43f1:4797:522b) (Quit: WeeChat 3.4)
[20:45:39] *** Joins: haniaF (~haniaF@79.191.101.105.ipv4.supernova.orange.pl)
[20:46:43] *** Joins: Akiva (~Akiva@user/Akiva)
[20:47:18] *** u0_a391 is now known as Kit
[20:48:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com)
[20:51:29] *** Joins: Hibana_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[20:51:53] *** Hibana_ is now known as Guest7302
[20:52:07] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[20:53:50] <sham1> IMO if one uses a common word as a nickname, they get what they deserve
[20:54:35] <sham1> And in the case of a C channel, naming yourself after the most common standard integer type just seems like a bad idea
[20:55:08] <sham1> Although the obvious caveats of "other channels exist" and so on apply, but sti
[20:55:36] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:55:51] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:55:57] *** Quits: Guest7302 (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 240 seconds)
[20:57:05] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:00:28] *** Joins: Thedarkb (~Thedarkb@94.119.64.77)
[21:10:46] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[21:11:20] <johnjaye> do all the versions of C standard have a rationale document?
[21:12:49] <fizzie> I don't think it ever got released.
[21:12:50] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[21:12:56] <fizzie> s/it/the C11 one/
[21:13:01] <fizzie> Nor anything later.
[21:13:41] <constxo> based
[21:13:56] <constxo> justifying yourself is beta shit
[21:14:06] *** Joins: vysn (~vysn@user/vysn)
[21:14:07] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[21:14:18] <fizzie> There was a comp.std.c thread around 2012 where someone from the Committee said "there are plans to update the existing Rationale to include C11", and that "there's no planned ETA, but it's on our to-do list". And then nothing, except a 2019 reply.
[21:14:25] <fizzie> https://groups.google.com/g/comp.std.c/c/E0yxHfpcOfY
[21:14:29] <sham1> No. C2011 is certainly release version quality
[21:15:12] <fizzie> The publicly available C99 rationale is an updated version of the C89 one, so subsequent ones would probably be too.
[21:15:22] <johnjaye> ah ok. i did see c99 somehwhere when i searched
[21:15:30] <johnjaye> but it wasn't n1234 it had a different file name
[21:15:37] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[21:15:38] <fizzie> http://www.open-std.org/jtc1/sc22/wg14/www/C99RationaleV5.10.pdf
[21:15:58] <johnjaye> yes that one
[21:16:07] <johnjaye> the other one is n802.pdf
[21:16:37] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:19:17] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:19:23] *** Joins: bebyx (~Thunderbi@user/bebyx)
[21:20:25] *** Joins: Leonard (~Administr@114.55.127.80)
[21:22:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[21:23:44] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:24:01] *** Joins: kish` (~aqua@user/aqua)
[21:25:46] *** Joins: inlight (~inlight@157.35.76.105)
[21:25:47] *** Quits: inlight (~inlight@157.35.76.105) (Changing host)
[21:25:47] *** Joins: inlight (~inlight@user/inlight)
[21:28:04] *** Quits: tolog (~tolog@37.120.205.108) (Remote host closed the connection)
[21:30:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[21:31:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:31:55] *** Quits: Thedarkb (~Thedarkb@94.119.64.77) (Ping timeout: 256 seconds)
[21:32:00] *** Joins: Feuermagier_ (~Feuermagi@213.178.26.41)
[21:32:16] *** Quits: Feuermagier_ (~Feuermagi@213.178.26.41) (Remote host closed the connection)
[21:32:19] *** Quits: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[21:32:44] *** Joins: freep (~freepppp@188.4.150.192.dsl.dyn.forthnet.gr)
[21:34:11] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[21:35:17] *** Joins: lightningwright (~lightning@user/lightningwright)
[21:35:43] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.5-dev)
[21:38:01] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[21:40:37] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.186) (Ping timeout: 240 seconds)
[21:41:48] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:42:23] *** Joins: Leonard (~Administr@114.55.127.80)
[21:44:23] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[21:45:19] *** Joins: rgrinberg (~textual@2806:101e:7:c237:5574:bcf4:5aed:9e20)
[21:45:38] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[21:46:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[21:49:18] *** Quits: ADHD_ (~xxx@bras-vprn-toroon4834w-lp130-15-184-147-71-53.dsl.bell.ca) (Quit: leaving)
[21:49:28] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:50:33] *** Joins: epony (epony@user/epony)
[21:51:12] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[21:51:12] *** Joins: tiotags (~tiotags@user/tiotags)
[21:51:20] *** Joins: Leonard (~Administr@114.55.127.80)
[21:54:02] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[21:55:03] *** Joins: inomoz (~inomoz@176.59.115.63)
[21:56:24] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[21:57:04] *** Joins: dsrt^ (~dsrt@207.5.21.20)
[21:57:54] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:59:48] <AmR> How I can get unicode value for char in C ?
[22:02:31] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Ping timeout: 256 seconds)
[22:02:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[22:03:25] *** Quits: brad_mssw (~bhouse@2620:134:c001:100:5e7:3a42:d446:e4f0) (Ping timeout: 240 seconds)
[22:03:53] <sham1> What do you mean
[22:04:36] <AmR> get unicode of character value
[22:05:39] <NRK[m]> you mean ASCII?
[22:05:53] <AmR> nop utf-8 value
[22:06:10] <NRK[m]> for what and from where?
[22:06:24] <fizzie> See, I was already typing something with the assumption that "get Unicode value" meant getting the Unicode code point, not an UTF-8 encoding.
[22:06:51] <AmR> utf-8 is unicode as far as I know.
[22:07:28] <novns> AmR, and UTF-1 too, and UTF-5, and many others
[22:07:46] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[22:08:16] <fizzie> UTF-8 is a variable-length encoding for Unicode code points, yes. But "Unicode value" just sounded a lot more like the code point number.
[22:09:05] <sham1> Technically the "type" of characters encoded by char and friends is determined by one's locale
[22:09:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:09:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:09:13] *** Joins: wroathe (~wroathe@user/wroathe)
[22:09:25] <sham1> And so one shouldn't necessarily assume UTF-8, although it is a pretty safe assumption at least in the UNIX world
[22:10:09] <AmR> OK, What C Support for unicode ??
[22:10:18] <novns> everything
[22:11:34] <novns> in Windows they use UTF-16 by default
[22:11:49] <fizzie> C's _explicit_ support for Unicode is pretty poor, honestly. The answers will depend on whether you're willing to assume your implementation's wide characters are Unicode code points, or whether you want to stick to the few explicitly Unicode functions (like c16rtomb and c32rtomb).
[22:12:19] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:13:09] <AmR> My 1st target is win & nix & mac and android
[22:13:32] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[22:14:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:14:31] <novns> and what's your 2nd target?
[22:14:37] <johnjaye> in other words, the major OSs that exist. ok
[22:15:21] *** Quits: rgrinberg (~textual@2806:101e:7:c237:5574:bcf4:5aed:9e20) (Read error: Connection reset by peer)
[22:15:53] <johnjaye> fizzie: maybe i'm just naive but i would assume if someone asks to "conver to unicode" they mean UTF-8 and not a code point.
[22:16:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[22:16:33] *** Joins: Akiva (~Akiva@user/Akiva)
[22:16:55] *** Joins: rgrinberg (~textual@2806:101e:7:c237:5574:bcf4:5aed:9e20)
[22:17:09] <AmR> novns: ios
[22:17:30] <fizzie> johnjaye: Maybe, but they didn't ask "convert to Unicode", they asked for a "Unicode value", which to me sounds much more code-point-y. Anyway, it sure is subjective.
[22:17:31] <sham1> Data processing with UTF-8 is painful, and so I'd assume that one would rather go from UTF-8 to the codepoints and then back after processing in order to do information interchange
[22:17:41] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[22:17:46] <novns> AmR, so what do you mean by "unicode value" exactly?
[22:18:04] <novns> because it's not that simple
[22:18:21] <NRK[m]> >"1st target"
[22:18:28] <NRK[m]> >lists 4 platform
[22:18:46] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[22:18:48] <AmR> utf-8 I think It's good for arabic as I know.
[22:19:08] <novns> AmR, UTF-8 is just one of encodings, they all are good
[22:19:22] *** Joins: echoSMILE (uid504326@user/echosmile)
[22:19:23] <novns> even UTF-1
[22:19:31] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[22:19:32] <sham1> Well, a char in most platforms won't be able to hold every Unicode codepoint when it's encoded to UTF-8. Well then again, a char wouldn't be able to hold most unicode codepoints anyhow on most platforms
[22:19:58] <fizzie> ,cc setlocale(LC_ALL, ""); char16_t c = u'\u03bb'; char buf[MB_CUR_MAX]; size_t got = c16rtomb(buf, c, 0); printf("%04x ->", (unsigned) c); for (size_t i = 0; i < got; i++) printf(" %02hhx", (unsigned char) buf[i]); // the closest standard C gets to explicitly converting a Unicode character U+03BB to a locale-specific multibyte encoding, which isn't even necessarily UTF-8
[22:20:01] <candide> fizzie: 03bb -> ce bb
[22:21:29] <fizzie> (Maybe that should've been a char32_t just as a matter of principle.)
[22:21:42] <novns> AmR, in UTF-8 an unicode character can be encoded to a sequence of bytes, up to 4
[22:22:08] <AmR> OK I will test char32_t
[22:22:08] <novns> AmR, so there is no any "value of UTF-8 char"
[22:23:20] <novns> AmR, unicode code points are "values" but you don't use them directly for encoding your data
[22:23:23] <fizzie> But all that's pretty new, and there isn't very much library support for char{16,32}_t, so some programs just use the classic wide character functions and assume they refer to Unicode characters. And even more programs just keep everything in multibyte strings (of regular `char` elements) and avoid any per-character operations, side-stepping the whole question.
[22:23:53] <sham1> Or use ICU
[22:24:40] *** Joins: missogra (~missogra@dynamic-077-003-011-126.77.3.pool.telefonica.de)
[22:24:55] <AmR> Ok I try search About that.
[22:25:11] <fizzie> Or that, yeah, if they actually need to do something substantial about Unicode-y text.
[22:25:32] <johnjaye> fizzie: i always wondered what 'wide' characters meant
[22:25:48] <johnjaye> so i guess some would just assume it means unicode
[22:27:16] <novns> johnjaye, just a multi-byte character, it can mean UCS too
[22:27:24] *** Joins: magla (~gelignite@55d42ff9.access.ecotel.net)
[22:27:48] <fizzie> In the C context, a "wide character" specifically means the wchar_t type, and the L"..." and L'...' string/character literals, and the <wchar.h> library functions like fwprintf, fgetwc/fgetws/fputwc/fputws functions, and so on.
[22:28:03] <sham1> On Windows it means unicode (UTF-16 code units) and that makes it all painful. On many UNIX-likes like Linux it tends to be stuff like UTF-32
[22:28:07] <novns> johnjaye, and EUC, and there are other standards
[22:28:40] <fizzie> (And C wide characters are only related to Unicode if the implementation decides to make that the encoding, which it will hopefully signal by defining __STDC_ISO_10646__.)
[22:28:51] <sham1> Which they should
[22:28:57] <fizzie> ,cc printf("%ld %d %d", __STDC_ISO_10646__, __STDC_UTF_16__, __STDC_UTF_32__); // got curious
[22:28:59] <candide> fizzie: 201706 1 1
[22:29:38] <fizzie> In particular, a "multibyte character" in standard C terms is pretty much the opposite/alternative of a "wide character".
[22:30:13] *** Joins: Leonard (~Administr@114.55.127.80)
[22:30:51] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[22:31:01] <fizzie> (A /multibyte character/ is a "sequence of one or more bytes representing the member of the [character set]", while a /wide charcter/ is a "value representable by an object of type `wchar_t`, capable of representing any character in the current locale", to quote C11 3.7.2-3.)
[22:31:55] <johnjaye> that's a very subtle distinction to the uninitiated
[22:32:03] <johnjaye> potato, potato
[22:32:25] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[22:33:25] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:34:33] * pragma- stares at int
[22:34:39] <pragma-> int: hey you!
[22:34:44] * pragma- whacks int with a stick
[22:34:52] *** Quits: trafficjam (~trafficja@119.17.42.59) (Quit: Client closed)
[22:35:01] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:7c83:f849:e013:af79)
[22:35:12] <johnjaye> fizzie: undeclared identifier __STDC_ISO_10646__
[22:35:14] <pragma-> Sigh, I suppose I could make a list of words to exclude from the zero-width thing.
[22:35:15] <fizzie> There's nothing particularly subtle about the distinction in terms of actual code, though. One's an array of `char` that uses multiple bytes (and an encoding like UTF-8) to represent a character, the other's a single `wchar_t`-typed integer value.
[22:35:40] <pragma-> Can I just /kick int?
[22:35:45] <fizzie> ,c11 6.4.1p1
[22:35:45] <candide> http://www.iso-9899.info/n1570.html#6.4.1p1 [Keywords] keyword: one of auto if unsigned break i​nline void case i​nt volatile char long while const register _Alignas continue restrict _Alignof default return _Atomic do short _Bool double signed _Complex else sizeof _Generic enum static _Imaginary extern struct _Noreturn float switch _Static_assert for typedef _Thread_local goto union
[22:35:50] <fizzie> There's a good list, if you want a list.
[22:37:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:38:39] *** Quits: kurahaupo_ (~martin@115.69.27.211) (Ping timeout: 256 seconds)
[22:38:50] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[22:39:21] *** Quits: rahl (rahl@otaku.sdf.org) (Quit: leaving)
[22:39:22] <fizzie> I guess as an implementation, you wouldn't strictly speaking get to define __STDC_ISO_10646__ if you don't have a big enough wchar_t to contain all of Unicode. For example, if it's only 16 bits wide, which I think is the sad Windows story?
[22:39:28] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:40:47] *** Joins: rahl (~rahl@otaku.sdf.org)
[22:41:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[22:42:28] <johnjaye> my wchar_t is 4 bytes. maybe i need a header file?
[22:43:07] <pragma-> Apparently there's also a guy named inline.
[22:43:22] <johnjaye> also i like this trick. emacs hello.c && cc hello.c && ./a.out
[22:43:29] <johnjaye> effortlessly compiles when i exit
[22:45:32] <fizzie> It's one of the predefined macro names that shouldn't need any headers, from C11 6.10.8.2p1. (And C99 something-similar.)
[22:45:51] <sham1> fizzie: yeah. Windows got sucked early into USC-2 and so now they're stuck with UTF-16, although with Windows 10 and 11, they finally started supporting UTF-8 in some capacity. Probably still not as reliable as doing stuff with UTF-8 or raw codepoints and then converting to/from UTF-16 as needed
[22:46:01] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 256 seconds)
[22:46:26] <johnjaye> well i have clang 11 so idk.
[22:46:49] <fizzie> ,clang printf("%ld %d %d", __STDC_ISO_10646__, __STDC_UTF_16__, __STDC_UTF_32__); // just checking
[22:46:51] <candide> fizzie: 201706 1 1
[22:46:58] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[22:47:17] *** Joins: candide (~pbot3@about/c/bot/candide)
[22:47:32] <sham1> UCS-2*
[22:47:47] <fizzie> ,clang printf("%d.%d.%d", __clang_major__, __clang_minor__, __clang_patchlevel__);
[22:47:49] *** Quits: missogra (~missogra@dynamic-077-003-011-126.77.3.pool.telefonica.de) (Ping timeout: 240 seconds)
[22:47:49] <candide> fizzie: 12.0.1
[22:48:01] <johnjaye> i'm pretty sure i typed __STDC_ISO_10646__ exactly.
[22:48:43] <pragma-> ,c11 6.4.1p1
[22:48:43] <candide> http://www.iso-9899.info/n1570.html#6.4.1p1 [Keywords] keyword: one of auto if unsigned break inline void case int volatile char long while const register _Alignas continue restrict _Alignof default return _Atomic do short _Bool double signed _Complex else sizeof _Generic enum static _Imaginary extern struct _Noreturn float switch _Static_assert for typedef _Thread_local goto union
[22:49:06] *** Quits: Darkcoal (~user@139.64.51.226) (Quit: Darkcoal)
[22:49:27] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[22:49:45] *** Joins: tejr (~tejr@user/tejr)
[22:49:55] <johnjaye> i do have clang_major and clang_minor (11 and 0)
[22:50:30] <fizzie> Odd, 11's pretty new. But maybe there's platform/library differences around there.
[22:50:35] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:51:32] <fizzie> I don't exactly know how that sort of shared-responsibility things (between the compiler and the standard library) get sorted out.
[22:52:11] *** Quits: rgrinberg (~textual@2806:101e:7:c237:5574:bcf4:5aed:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:52:21] *** Joins: Akuli (~Akuli@213.216.209.195)
[22:53:14] <johnjaye> printing out all my predefined macros i see it's not there but the other 2 are
[22:53:16] *** Joins: Itaru (~Itaru@ro2.flokinet.is)
[22:53:25] <johnjaye> fortunately #define unix 1 is in there so i'm on unix as i suspected
[22:53:25] <sham1> Wel
[22:53:37] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com)
[22:53:59] <sham1> Well then maybe clang doesn't expect that the requirements of __STDC_ISO_10646__ are fulfilled on the platform
[22:54:32] <johnjaye> on freebsd 13?
[22:54:40] *** Joins: moog (~moog@107.77.244.52)
[22:55:43] <johnjaye> by the way this is another reason c is fun. people can type out reasonable looking code and then it doesn't run on your machine
[22:56:50] <apotheon> write more portable code
[22:57:04] <apotheon> Yes, I'm giving a facile, sometimes useless response.
[22:57:10] <apotheon> s/giving/giving you/
[22:57:22] <johnjaye> i do that too sometimes. the worst one is "well it works on my machine!"
[22:57:26] <fizzie> https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=175930 suggests it's not universally true on FreeBSD that `wchar_t` is always Unicode, and that's why it's not defined.
[22:57:30] <candide> Title of fizzie's link: 175930 – [headers] clang does not define __STDC_ISO_10646__, despite having Unicode in wchar_t
[22:57:31] <johnjaye> kind of the reverse of what we're talking about
[22:57:35] <fizzie> (At least back in 2013.)
[22:58:01] <sham1> Indeed. FreeBSD's default locale isn't unicode, but Latin-1
[22:58:24] <fizzie> You could still have a uniform Unicode wchar_t and a Latin-1 default locale.
[22:58:29] <johnjaye> isn't there a shell variable or something that has that?
[22:58:40] <apotheon> I think OpenBSD's is en_US.UTF-8.
[22:58:53] <apotheon> johnjaye: Yes.
[22:58:59] <sham1> Well, many ports on OpenBSD at least treat the C locale as ASCII for understandable reasons
[22:59:01] <apotheon> environment variables for locale
[22:59:11] <fizzie> The (compile-time) macro can't really depend on the (run-time) locale, so it can only be defined if `wchar_t` values are Unicode no matter what.
[22:59:20] <sham1> Anyway, you *could* have wchar_t being Unicode while the locale is Latin-1, but would that be expected behaviour
[22:59:28] <johnjaye> i have LANG=C.UTF-8
[22:59:34] <apotheon> ah
[22:59:40] <apotheon> I don't recall.
[23:00:04] *** Joins: Betal (~Betal@user/betal)
[23:00:07] <sham1> Mmhm, making it C.UTF-8 helps. I just usually set it to en_US.UTF-8. I mean, OpenBSD's stuff only looks at the UTF-8 part anyway
[23:00:16] <apotheon> I remember there being something about the locale changing to UTF-8 on OpenBSD, but I was just upgrading an existing install at that time, so it didn't really rise to full consciousness for me.
[23:00:18] <sham1> Language and territory do not matter
[23:00:52] <apotheon> (and I already had UTF-8 locale)
[23:01:32] <johnjaye> this is why I use different systems like bsd. exposes stuff like this to study
[23:01:46] <sham1> Yeah. System monoculture is not good
[23:01:47] <johnjaye> also i thought freebsd on my laptop would be easier to manage than alpine linux
[23:02:14] <sham1> Is it?
[23:02:24] <johnjaye> i don't know. so far i'm sticking to the terminal
[23:02:45] <johnjaye> the only really weird thing is that when you install from ports and compile it gives you nag screens on every package
[23:02:58] <johnjaye> i.e. stuff you'd normally put to a configure script
[23:03:17] <johnjaye> like do you want ssl enabled, do you want xpm support, etc. i think there's a way to turn it off though
[23:03:30] <johnjaye> also bash isn't installed by default.... i think
[23:03:32] <sham1> You can do all those ahead of time
[23:03:41] <sham1> And yeah, you need to get bash from ports, because GPL and such
[23:04:04] <johnjaye> right
[23:04:09] <apotheon> johnjaye: There are ways to set preferences across the board for ports, as far as I recall, though I haven't built FreeBSD ports for a while.
[23:04:18] *** Joins: jjido (~Denis@94.9.124.97)
[23:04:28] <apotheon> Bash not being installed by default is a feature.
[23:04:48] <sham1> Yeah. You can tell the ports system to be like "let me configure all the recursive dependencies now so I don't need to do that later"
[23:04:59] <apotheon> It was always a huge disappointment to me on FreeBSD when I got to the point where some piece of software I wanted had a Bash dependency.
[23:05:03] <sham1> config-recurse
[23:05:05] <apotheon> "Fuck, now it's infected with Bash."
[23:05:10] <fizzie> sham1: Empirical testing suggests `wchar_t` is Unicode notwithstanding the locale on glibc, which is presumably why it's allowed to define the symbol.
[23:05:20] <sham1> Probably yeah
[23:05:43] <sham1> apotheon: story of my life with pass, since that's written in bash. I should probably write my own implementation in C one of these days
[23:06:02] <fizzie> The test, for reference: https://0x0.st/oz3X.txt
[23:06:35] <sham1> johnjaye: but yeah. make config-recursive the next time you build ports. Means that you can just do the configurations before it's doing all the building
[23:07:25] <fizzie> (Shows `fgetwc` converting the input byte 0xA4 to U+20AC (€) when locale is set to en_GB.ISO-8859-15; it makes no difference for ISO-8859-1 because the U+0080..U+00FF block _is_ the Latin-1 set.)
[23:07:30] <johnjaye> sham1: ah nic
[23:07:33] <johnjaye> e
[23:07:40] <apotheon> sham1: do it
[23:08:27] <apotheon> I occasionally threaten to submit updates to projects with Bash deps to be usable with portable sh, but I usually don't have the time.
[23:08:49] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[23:09:01] <sham1> Many moons ago I tried to build a pass frontend with GTK and I got decently far until I just got bored and moved to better things (story of my life). Turns out, GPG is an interesting API to work with
[23:09:36] *** Quits: jjido (~Denis@94.9.124.97) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:09:37] <apotheon> Do you mean GPGME?
[23:09:39] *** Quits: WAR10CK (~WAR10CK@219.135.63.48) (Remote host closed the connection)
[23:09:41] <sham1> Yes
[23:09:51] <apotheon> GPG itself doesn't have an API; GPGME is a wrapper for the CLI.
[23:10:03] <apotheon> That's . . . gross.
[23:10:12] <sham1> Mmm. It does sound
[23:10:14] <apotheon> It's nightmare fuel.
[23:10:59] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[23:11:02] <apotheon> From what I understand, though, the expertise of successive GPG maintainers has been a downslope on the graph over time, so this is pretty much what we necessarily get.
[23:11:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:12:07] <apotheon> Early contributors to significant GNU stuff tended to move on to other things back in the day, when the ideology got more important than the code.
[23:12:14] <apotheon> One might make some assumptions about why.
[23:12:41] <sham1> Which is weird since they should have known what they signed up on. GNU was an ideologically backed project from hour 1
[23:12:56] <sham1> Which is not a bad thing, as long as that's clear
[23:13:57] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[23:15:04] <johnjaye> i read gnu ceased to exist in a post from the guy with guile scheme
[23:15:10] <johnjaye> but now i'm not sure since it was on another machine
[23:16:11] <johnjaye> in the sense that i guess a project-wide change like guile support wouldn't be able to be decided on
[23:17:01] *** Quits: luckyxxl (~luckyxxl@194.36.25.28) (Quit: bye)
[23:17:33] *** Joins: Leonard (~Administr@114.55.127.80)
[23:19:27] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[23:20:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com)
[23:21:14] *** Joins: u0_a391 (~u0_a391@2600:380:a423:8c4a:f33e:17db:7090:510e)
[23:23:59] *** Quits: Kit (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[23:24:42] *** u0_a391 is now known as kit
[23:25:33] *** Joins: rgrinberg (~textual@187.223.202.115)
[23:25:41] *** Quits: rgrinberg (~textual@187.223.202.115) (Read error: Connection reset by peer)
[23:26:48] *** Joins: rgrinberg (~textual@187.223.202.115)
[23:27:02] *** Joins: Narrat (~omnius@p200300df5f0aabe806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:27:06] *** Quits: mattroelle (~mattroell@136-26-68-28.cab.webpass.net) (Quit: WeeChat 3.3)
[23:27:54] *** Joins: malina (~malina@user/malina)
[23:28:52] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[23:29:31] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:29:41] *** Joins: complexnumber (~brett@194-223-26-191.tpgi.com.au)
[23:32:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[23:32:22] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[23:33:01] *** Joins: mrig (~mrig@user/mrig)
[23:38:20] *** Quits: pucara (~i@181.91.29.65) (Quit: Lost terminal)
[23:38:24] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[23:41:08] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[23:42:36] *** Joins: Leonard (~Administr@114.55.127.80)
[23:44:49] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:45:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[23:45:05] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[23:45:06] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[23:45:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:45:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:45:35] *** Joins: wroathe (~wroathe@user/wroathe)
[23:48:43] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:48:54] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[23:49:05] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Client Quit)
[23:49:16] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[23:49:24] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[23:51:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:51:51] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Client Quit)
[23:51:58] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:52:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:53:37] *** Quits: BCMM (~BCMM@user/bcmm) (Ping timeout: 240 seconds)
[23:55:54] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:59:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d550-b607-3a0a-ff7b.res6.spectrum.com)
[23:59:57] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
