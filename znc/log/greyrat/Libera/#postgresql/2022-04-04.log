[00:00:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[00:01:35] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[00:01:38] *** Joins: tnewman (~tnewman@118.150.44.48)
[00:06:17] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[00:07:05] *** Quits: mizi_ (~mizi@user/mizi) (Ping timeout: 246 seconds)
[00:08:16] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 245 seconds)
[00:09:27] *** Joins: Elodin (~elodin@user/elodin)
[00:11:19] *** Quits: entbsagtc^ (~entbsagtc@c-24-99-107-170.hsd1.ga.comcast.net) (Ping timeout: 260 seconds)
[00:13:00] *** Quits: odnes (~odnes@5-203-146-18.pat.nym.cosmote.net) (Quit: Leaving)
[00:16:46] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:19:00] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[00:20:24] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f750:a200:f9d1:c665:a064:ac5a)
[00:21:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d960:d98a:f624:8ef) (Ping timeout: 256 seconds)
[00:31:31] *** Joins: zelest (~jesper@81-233-184-27-no13.tbcn.telia.com)
[00:32:14] *** Quits: tnewman (~tnewman@118.150.44.48) (Quit: Ping timeout (120 seconds))
[00:34:44] *** Quits: jconway (~jconway@072-017-018-098.res.spectrum.com) (Quit: Leaving)
[00:35:21] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[00:38:14] *** Joins: tnewman (~tnewman@118.150.44.48)
[00:39:47] *** Joins: jconway (~jconway@072-017-018-098.res.spectrum.com)
[00:40:22] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[00:45:52] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f750:a200:f9d1:c665:a064:ac5a) (Ping timeout: 260 seconds)
[00:46:38] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 260 seconds)
[00:49:50] *** Joins: funhouse (~funhouse@user/funhouse)
[00:58:04] *** Joins: dudek (~dudek@185.150.236.127)
[01:00:42] *** Joins: tnewman (~tnewman@118.150.44.48)
[01:10:08] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[01:11:28] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Quit: WeeChat 3.4.1)
[01:12:40] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 272 seconds)
[01:15:15] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[01:17:44] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:19:50] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:21:29] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[01:22:29] *** Quits: john_johnk (~Thunderbi@2a02-8428-013e-4001-34b6-6b5b-bd9e-26fa.rev.sfr.net) (Ping timeout: 256 seconds)
[01:22:51] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:28:03] *** Quits: f3f3lix (~weechat@55d4944d.access.ecotel.net) (Ping timeout: 260 seconds)
[01:29:45] *** Joins: f3f3lix (~weechat@55d4944d.access.ecotel.net)
[01:30:43] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[01:31:42] *** Joins: tnewman (~tnewman@118.150.44.48)
[01:32:16] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[01:32:56] *** Quits: peteyboy_ (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 272 seconds)
[01:35:18] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[01:36:50] <funhouse> is it possible to drop certain tables with LIKE?
[01:39:29] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 246 seconds)
[01:39:29] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 256 seconds)
[01:39:33] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:b89d:8c20:3683:54c9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:40:03] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 256 seconds)
[01:40:42] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[01:41:20] *** Joins: jazzy (~jaziz@user/jaziz)
[01:41:45] *** Joins: meialuadecompass (uid505943@id-505943.ilkley.irccloud.com)
[01:42:21] *** Joins: tnewman (~tnewman@118.150.44.48)
[01:42:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:43:42] *** Quits: tnewman (~tnewman@118.150.44.48) (Read error: Connection reset by peer)
[01:43:48] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[01:48:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[01:49:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:49:59] *** Quits: fcr (~fran@r167-56-83-23.dialup.adsl.anteldata.net.uy) (Ping timeout: 246 seconds)
[01:50:00] <peerce> fun, not without generating dynamic sql
[01:50:22] *** Quits: fraxamo (~fraxamo@bexl-11-b2-v4wan-163006-cust259.vm4.cable.virginm.net) (Quit: Leaving)
[01:50:23] <peerce> table names are "identifiers", and not 'data values'
[01:54:51] <peerce> yoau could do some ugliness like this:
[01:54:52] <peerce> for t in $(psql -tc "select schemaname||'.'||tablename from pg_tables where tablename like 'x%'"); do psql -c "drop table $t"; done
[01:56:26] <peerce> funhouse: ^^
[01:56:56] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Remote host closed the connection)
[01:56:58] <funhouse> peerce awesome thank you
[01:57:00] *** Joins: fcr (~fran@r167-60-68-84.dialup.adsl.anteldata.net.uy)
[01:59:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:02:00] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:02:44] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:03:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:04:08] *** Joins: tnewman (~tnewman@118.150.44.48)
[02:04:56] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:05:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:06:12] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:09:34] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[02:09:54] *** Joins: maret_ (~maret@nat-88-212-37-89.antik.sk)
[02:10:24] *** Quits: maret_ (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[02:13:18] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[02:14:04] *** Parts: Bushmaster (~Goondog@user/bushmaster) (later folks)
[02:15:32] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 246 seconds)
[02:16:55] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 240 seconds)
[02:18:29] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:22:52] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[02:23:37] *** Quits: siodor (~quassel@140.238.211.102) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[02:24:39] *** Joins: siodor (~quassel@140.238.211.102)
[02:26:44] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:b89d:8c20:3683:54c9)
[02:30:14] *** Quits: rdunklau (~rdunklau@static-176-158-121-96.ftth.abo.bbox.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[02:30:37] *** Joins: rdunklau (~rdunklau@static-176-158-121-96.ftth.abo.bbox.fr)
[02:34:22] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:35:07] *** Quits: olasd (~olasd@softwareheritage/olasd) (Quit: WeeChat 3.0)
[02:35:28] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[02:36:41] *** Joins: olasd (~olasd@softwareheritage/olasd)
[02:37:00] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:43:44] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[02:44:56] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 246 seconds)
[02:48:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[02:51:16] *** Quits: foxxx0 (~foxxx0@archlinux/trusteduser/foxxx0) (Quit: foxxx0)
[02:54:00] *** Joins: foxxx0 (~foxxx0@archlinux/trusteduser/foxxx0)
[02:54:25] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:7c00:910f:8e36:433c) (Read error: Connection reset by peer)
[02:54:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:56:08] *** Joins: Michelle (~michelle@2407:8800:bc20:200a:c1e9:36bc:28da:bd46)
[02:57:18] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:b89d:8c20:3683:54c9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:01:57] *** Joins: wfpkhc (~wfpkhc@user/wfpkhc)
[03:02:01] * wfpkhc wanders in
[03:02:04] <wfpkhc> Anyone around?
[03:02:21] *** Joins: zaher (~zaher@37.48.159.74)
[03:02:21] <wfpkhc> who do i have to beg at postgre to please put in 2 features?
[03:02:38] <wfpkhc> 1 can we please have longer table names!
[03:02:48] <wfpkhc> and 2 can we please have namespaces for tables
[03:02:54] <wfpkhc> NO not schemas!
[03:02:55] <wfpkhc> =D
[03:03:40] <wfpkhc> where is the mega awesome RhodiumToad
[03:03:44] <wfpkhc> when he is needed!
[03:04:17] <wfpkhc> anyway just a big thanks to RhodiumToad again for his help in the past
[03:04:24] * wfpkhc wanders out and gets back to work
[03:04:29] *** Quits: wfpkhc (~wfpkhc@user/wfpkhc) (Client Quit)
[03:06:02] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 272 seconds)
[03:06:15] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[03:12:56] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[03:13:32] *** Quits: dudek (~dudek@185.150.236.127) (Quit: Leaving)
[03:15:23] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 246 seconds)
[03:16:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:16:30] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:22:46] <peerce> schemas ARE namespaces
[03:22:56] <peerce> so what would your namespaces do differently than schemas ?
[03:24:36] <peerce> oh, he left.
[03:25:13] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:26:20] * ilmari_ wonders what kind of namespaces other than schemas wfpkhc wanted
[03:28:25] <sobel> too bad they left, i wanted to personally deny longer table names
[03:28:40] <sobel> (?!)
[03:29:36] <sobel> sixty_three_chars_goes_a_long_way
[03:30:26] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[03:30:44] *** Quits: masber (~masber@213.55.224.23) (Quit: Client closed)
[03:31:07] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Ping timeout: 260 seconds)
[03:31:16] <funhouse> when getting the schema of a table, i want to see the char limit for VARCHAR, how do I get that
[03:31:36] <funhouse> i do `SELECT table_name, column_name, data_type FROM information_schema.columns WHERE table_name = 'table';`
[03:31:38] <funhouse> but it doesnt show
[03:34:57] <ilmari_> funhouse: character_maximum_length
[03:35:14] <funhouse> ilmari_ thank you
[03:35:33] <ilmari_> https://www.postgresql.org/docs/current/infoschema-columns.html
[03:36:07] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[03:36:40] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[03:36:58] <ilmari_> or just `\d information_schema.columns` in psql, since the name is quite clear
[03:37:30] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[03:40:08] *** Quits: ivii (~ivan@user/ivii) (Ping timeout: 252 seconds)
[03:41:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[03:43:12] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[03:43:44] *** Quits: zaher (~zaher@37.48.159.74) (Ping timeout: 246 seconds)
[03:50:59] *** Quits: meialuadecompass (uid505943@id-505943.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:54:43] *** Quits: nuttingd (~nuttingd@97.115.158.123) (Quit: Quit)
[03:55:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:55:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:56:13] *** Joins: nuttingd (~nuttingd@97.115.158.123)
[03:56:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:58:02] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:59:33] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[04:03:10] *** Quits: nuttingd (~nuttingd@97.115.158.123) (Remote host closed the connection)
[04:03:24] *** Joins: nuttingd (~nuttingd@97.115.158.123)
[04:05:49] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[04:06:50] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 246 seconds)
[04:07:03] *** Quits: adept (~adept@cpc86002-ware7-2-0-cust162.9-1.cable.virginm.net) (Ping timeout: 256 seconds)
[04:09:47] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 260 seconds)
[04:10:10] *** Joins: tnewman (~tnewman@118.150.44.48)
[04:14:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:17:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:32:23] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[04:33:19] <funhouse> ??paste
[04:33:19] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[04:33:20] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[04:34:30] <funhouse> I have a table --> https://dpaste.org/so9WnSM/raw
[04:34:49] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 250 seconds)
[04:35:05] *** Joins: addi (~addi@node-1w7jr9st781t58crjbhqg89k1.ipv6.telus.net)
[04:35:34] <funhouse> There are multiple ifa, I want to select a distinct ifa, whichever has the greater count
[04:36:30] <funhouse> If its the same count, i want to select the distinct ifa that has the higher sum
[04:36:34] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4.1)
[04:36:50] <funhouse> If it has the same count and sum, i want to select a random one
[04:39:01] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[04:40:08] <addi> python asyncio postgres: 'sqlalchemy core'+asyncpg on its own, or 'encode databases'+'sqlalchemy core'+asyncpg? The latter is a pure asyncio (no greenlets) approach - I wonder if there is a benchmark/ease of use comparison?
[04:43:43] *** Joins: Bebef (sbreit@phobos.bebef.de)
[04:49:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:51:11] *** Joins: Guest39 (~Thunderbi@p8019032-ipngn39401marunouchi.tokyo.ocn.ne.jp)
[04:52:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:52:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:56:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:00:11] *** Quits: Guest39 (~Thunderbi@p8019032-ipngn39401marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 260 seconds)
[05:04:29] <ilmari_> funhouse: `select distinct on (ifa) ifa, pc7, count, sum from the_table order by ifa, count desc, sum desc;`
[05:07:30] <funhouse> ilmari_ that will give me the distinct ifa with the greater sum i guess?
[05:09:05] <ilmari_> greater count first, then greater sum if the greater count is the same
[05:09:39] <funhouse> ah ok, i guess what i need to do if sum and counts are the same is choose a random
[05:09:49] <funhouse> i guess i could just choose the first row same thing
[05:11:42] <ilmari_> if they are both equal you get an arbitrary one. If you actually want actively random, add `, random()` to the order by clause
[05:11:56] <funhouse> ahh ilmari_ ok
[05:12:03] <funhouse> i am trying this now, thank you again sir
[05:13:35] <ilmari_> It's not very efficient if there are many rows for each distinct `ifa` value
[05:15:07] <funhouse> heres another thing, i need to select only the ones that have a count of > 1 for ifa
[05:15:07] <ilmari_> if you have a separate table with only the distinct `ifa`s, a lateral subquery can be faster
[05:15:13] <funhouse> so do i need to group by?
[05:15:24] <funhouse> ilmari_ no seperate table
[05:16:27] *** Joins: Guest3403 (~Thunderbi@p8019032-ipngn39401marunouchi.tokyo.ocn.ne.jp)
[05:17:25] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:c1e9:36bc:28da:bd46) (Quit: This computer has gone to sleep)
[05:20:24] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[05:20:41] *** Quits: Guest3403 (~Thunderbi@p8019032-ipngn39401marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 246 seconds)
[05:22:26] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:23:52] *** Quits: addi (~addi@node-1w7jr9st781t58crjbhqg89k1.ipv6.telus.net) (Quit: 0xC00010FF)
[05:24:46] <funhouse> ilmari_ i guess thats not really needed as it will grab the 1 only
[05:24:52] *** Quits: n0fun (~jack@mue-88-130-48-113.dsl.tropolys.de) (Ping timeout: 260 seconds)
[05:25:58] *** Joins: Michelle (~michelle@gate.mhix.org)
[05:26:21] <ilmari_> if there is only one row for a given ifa, that by definition has the greatest sum and count
[05:31:47] *** Joins: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com)
[05:33:54] *** Quits: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com) (Client Quit)
[05:49:11] *** Joins: bkhl (~bkhl@user/bkhl)
[05:52:17] *** Joins: trafficjam (~trafficja@103.231.88.30)
[05:52:32] *** Quits: MrZeus (~MrZeus@86.106.136.215) (Ping timeout: 246 seconds)
[05:52:46] <trafficjam> hey guys, how do you guys recommend I combine user categories and a global category hierarchy?
[05:53:14] *** Quits: f3f3lix (~weechat@55d4944d.access.ecotel.net) (Ping timeout: 272 seconds)
[05:54:56] *** Joins: f3f3lix (~weechat@55d49a95.access.ecotel.net)
[05:58:39] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f)
[06:02:37] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:13:45] *** Joins: Komzzpa (~kom@91.184.106.161)
[06:17:56] *** Joins: tozhu (~tozhu@117.61.241.55)
[06:18:35] *** Quits: Komzzpa (~kom@91.184.106.161) (Ping timeout: 260 seconds)
[06:24:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:29:01] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:29:43] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:33:46] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[06:35:28] *** Quits: JanC (~janc@user/janc) (Ping timeout: 260 seconds)
[06:42:35] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[06:47:42] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[06:54:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:25:23] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[07:29:26] *** Joins: schinckel (uid38120@user/schinckel)
[07:32:13] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:32:38] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 246 seconds)
[07:34:26] *** Joins: Vacuity (~Vacuity@user/vovo)
[07:44:30] *** Joins: asarch (~asarch@2806:10ae:7:23bc:8bd1:89cf:5203:5f1b)
[07:45:32] <asarch> One stupid question: is there a way to do a quick duplicate of an entry instead of insert into … select … from … where …;
[07:46:38] *** Quits: nuttingd (~nuttingd@97.115.158.123) (Ping timeout: 260 seconds)
[07:46:53] *** Joins: nuttingd (~nuttingd@97.115.158.123)
[07:49:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:50:19] <peerce> the only way to add a new row into a table is to INSERT it, and the way you get an existing rows value is SELECT, so um, what else would you use ?
[07:51:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[07:53:51] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[07:53:52] <trafficjam> hey peerce, any tips about approach i should take to integrate a global category hierarchy with personal category hierarchies?
[07:54:55] <trafficjam> e.g. apple has (personal) the product categories  "iPhone", "Watch", "AirPods" which relate to the global categories "Smartphones", "Smart watches", "headphones"
[07:55:32] <asarch> I see, thank you peerce, thank you very much :-)
[07:55:41] <asarch> Have a nice day
[07:55:45] *** Quits: asarch (~asarch@2806:10ae:7:23bc:8bd1:89cf:5203:5f1b) (Quit: Leaving)
[07:58:53] *** Quits: sreve (~quassel@p54a7145f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:58:59] *** Joins: sreve_ (~quassel@p549d73f7.dip0.t-ipconnect.de)
[07:59:46] *** Joins: favadi (~favadi@2001:ee0:4081:6914:dc0f:7886:2653:eb92)
[08:02:22] *** Joins: auri (~quassel@fsf/member/auri)
[08:08:51] *** Quits: auri (~quassel@fsf/member/auri) ()
[08:09:06] *** Joins: auri (~quassel@fsf/member/auri)
[08:23:48] *** Quits: funhouse (~funhouse@user/funhouse) (Ping timeout: 250 seconds)
[08:26:41] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[08:26:43] *** Joins: Komzzpa (~kom@91.184.107.227)
[08:27:29] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:27:35] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[08:30:09] *** Quits: auri (~quassel@fsf/member/auri) ()
[08:30:39] *** Joins: auri (~quassel@fsf/member/auri)
[08:32:04] *** Joins: funhouse (~funhouse@user/funhouse)
[08:40:16] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[08:40:16] *** Joins: ekathva (~ekathva@2001:999:250:8f1f:9d72:5a3d:d0:fe01)
[08:41:42] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[08:43:46] *** Quits: Komzzpa (~kom@91.184.107.227) (Read error: Connection reset by peer)
[08:53:08] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 246 seconds)
[08:54:41] *** Joins: seifeslimene_ (~seifeslim@197.2.10.72)
[08:55:38] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Ping timeout: 272 seconds)
[08:57:43] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Ping timeout: 260 seconds)
[08:58:23] *** Quits: nuttingd (~nuttingd@97.115.158.123) (Ping timeout: 246 seconds)
[08:58:59] *** Joins: nuttingd (~nuttingd@97.115.158.123)
[09:13:55] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[09:16:48] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:18:50] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[09:19:04] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:19:42] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[09:20:31] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:22:14] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[09:31:47] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[09:32:04] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:32:32] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:33:41] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[09:35:43] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.167)
[09:37:27] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[09:37:53] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:39:22] *** Quits: favadi (~favadi@2001:ee0:4081:6914:dc0f:7886:2653:eb92) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:44:03] *** Joins: mncheck (~mncheck@193.224.205.254)
[09:44:05] *** Joins: favadi (~favadi@2001:ee0:4081:6914:1d4d:d1da:d234:eef0)
[09:48:33] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[09:48:51] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:49:18] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:53:00] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f) (Ping timeout: 240 seconds)
[09:53:48] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[09:54:40] *** Quits: sakasama (~sakasama@user/sakasama) (Ping timeout: 260 seconds)
[09:57:37] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[10:02:25] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:02:35] *** Joins: manti7 (~manti7@176.10.104.94)
[10:09:08] *** Quits: kid (~kid@user/kid) (Ping timeout: 260 seconds)
[10:09:26] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[10:11:21] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[10:12:26] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:24:36] *** Joins: kid (~kid@0.80-203-56.customer.lyse.net)
[10:24:36] *** Quits: kid (~kid@0.80-203-56.customer.lyse.net) (Changing host)
[10:24:36] *** Joins: kid (~kid@user/kid)
[10:24:42] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[10:26:19] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[10:27:10] *** Joins: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr)
[10:41:11] *** Quits: capitol (~capitol@login.hackeriet.no) (Ping timeout: 245 seconds)
[10:41:21] *** Joins: capitol (~capitol@login.hackeriet.no)
[10:42:25] <ademan[m]> How much disk space do you need (relative to your database) to perform a `pg_dump -F tar` ? I had a very space challenged VPS, with a ~27GB database, and 3GB free, and I was unable to complete a `pg_dump -F tar` The resulting tar file was only ever 4k so I assume it ran out of space creating temp files somewhere else.
[10:42:51] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[10:43:50] <zelest> no idea if it's enough, but you could pg_dump | bzip -9 | tar or so
[10:44:10] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[10:44:20] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[10:45:28] <ademan[m]> the plain text dump actually compressed incredibly well, ~1.5GB but I struggled for hours trying to restore it into the new database
[10:45:46] <Darius> ademan[m]: can you stream it out of the VPS to somewhere else with more space?
[10:46:23] <ademan[m]> Darius: not even that worked (with `-F tar`)
[10:46:28] <Darius> you could try pg_dump to /dev/null and see if it finishes
[10:46:31] <Darius> hmm
[10:46:34] <Darius> sounds like something else then
[10:46:42] <ademan[m]> I worked around it, but it was ugly lol
[10:48:25] <ademan[m]> On the VPS `mkfifo /tmp/foo`     On my desktop `ssh TheVPS 'cat /tmp/foo' > backup.tar.bz2`  then on the VPS `cd /var/lib/postgresql/12 ; tar cj main > /tmp/foo` 😬
[10:48:38] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 246 seconds)
[10:48:55] <ademan[m]> (with postgres stopped obviously)
[10:49:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[10:49:40] <ademan[m]> then I untarred the files onto a same-versioned postgres on a bigger VPS, I feel more than a bit like I got lucky, that's kind of why I want to know how to make sure `pg_dump` works for me
[10:51:10] <Darius> why not just ssh TheVPS pg_dump -F c somedbname >backup.pg
[10:51:50] <Darius> or even ssh smallVPS pg_dump -F c somedbname | ssh largeVPS pg_restore ..
[10:51:51] <Darius> :D
[10:51:54] *** Joins: fraxamo (~fraxamo@bexl-11-b2-v4wan-163006-cust259.vm4.cable.virginm.net)
[10:52:41] *** Joins: randir_ (~randir@95-31-138-202.broadband.corbina.ru)
[10:53:17] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:53:30] <ademan[m]> heh, tunnel vision I guess, I have login disabled for the postgres user, so I needed to `sudo -u postgres pg_dump ...` but I definitely could have changed that for this scenario...
[10:53:55] *** Quits: randir (~randir@95-31-138-202.broadband.corbina.ru) (Ping timeout: 256 seconds)
[10:55:13] <ademan[m]> not sure if `-F c` would have worked either, but I should try that, I honestly don't know enough about that format... I'm an idiot and pretty new to postgres
[10:55:45] *** Joins: mexen (uid495612@user/mexen)
[10:56:21] *** Joins: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net)
[10:57:53] <Darius> ademan[m]: yeah oh well at least you solved it
[10:57:59] <Darius> actually -F c is the default so ..
[10:58:11] *** Joins: palasso (~palasso@user/palasso)
[10:58:17] *** Joins: sakasama (~sakasama@user/sakasama)
[10:58:57] <ademan[m]> my man page says plain text is the default (postgres 12)
[11:00:34] <Darius> oh sorry you are right
[11:00:43] <Darius> -Fc gets you compression built in
[11:02:02] *** Joins: mrwick (~mrwick@user/mrwick)
[11:02:57] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:07:25] <ademan[m]> looks like I'm gonna run out of space before `-Fc` completes, but I'm storing the dump on the remote server, I'm gonna try it again with the fifo if/when this fails
[11:08:03] <ademan[m]> wow! As if on cue, `-rw-r--r-- 1 root root 2064709129 Apr  4 06:37 dbdump` looks like it succeeded!
[11:08:15] <ademan[m]> just barely fit in the available space too lol
[11:08:56] <ademan[m]> I should try restoring this into another database somewhere, if using `-F c` was all that I needed to have everything go smoothly last night, I'll laugh
[11:09:26] <funhouse> i have 13 tables like this one, i need to join them all and d a distinct query, how would i do that?
[11:09:27] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[11:09:27] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (*.net *.split)
[11:09:27] *** Quits: esainane (esainane@antihype.space) (*.net *.split)
[11:09:27] *** Quits: ysch (~ysch@91.211.93.148) (*.net *.split)
[11:09:27] *** Quits: SamM (335d953107@2604:bf00:561:2000::401) (*.net *.split)
[11:09:27] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[11:09:27] *** Quits: grove (~grove@teresa.3001.dk) (*.net *.split)
[11:09:27] *** Quits: beencubed_ (~beencubed@209.131.238.248) (*.net *.split)
[11:09:27] *** Quits: mattmcc_ (matt@2600:3c00::f03c:91ff:fe89:c2e8) (*.net *.split)
[11:09:27] *** Quits: Malin (lounge@pirate.pt) (*.net *.split)
[11:09:27] *** Quits: bluejaypop (~7f000001@user/josefig) (*.net *.split)
[11:09:27] *** Quits: PyHedgehog (uid146498@id-146498.ilkley.irccloud.com) (*.net *.split)
[11:09:27] *** Quits: TMM_ (hp@amanda.tmm.cx) (*.net *.split)
[11:09:27] *** Quits: tofran55 (~tofran@bl15-47-228.dsl.telepac.pt) (*.net *.split)
[11:09:27] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (*.net *.split)
[11:09:27] *** Quits: dre^ (andre@youbeill.in) (*.net *.split)
[11:09:27] *** Quits: otherj (~j@user/otherj) (*.net *.split)
[11:09:27] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[11:09:27] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (*.net *.split)
[11:09:27] *** Quits: phantomcircuit_ (~phantomci@192.241.205.97) (*.net *.split)
[11:09:27] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[11:09:27] *** Quits: MapMan (mapman@user/mapman) (*.net *.split)
[11:09:27] *** Quits: osm_ (~osm@c-894770d5.034-59-6762673.bbcust.telenor.se) (*.net *.split)
[11:09:27] *** Quits: Nyakajima (~Hayate@lunaluna.nyakajima.net) (*.net *.split)
[11:09:27] *** Quits: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67) (*.net *.split)
[11:09:27] *** Quits: ch (ch@percival.namespace.at) (*.net *.split)
[11:09:27] *** Quits: Berge (berge@redskapet.trivini.no) (*.net *.split)
[11:09:27] *** Quits: nisstyre (wes@user/nisstyre) (*.net *.split)
[11:09:27] *** Quits: dexter (dexter@2a01:7e00::f03c:91ff:fe86:59ec) (*.net *.split)
[11:09:27] *** Quits: kapil (~kapil@2a01:4f9:c010:c9c3::1) (*.net *.split)
[11:09:27] *** Quits: TitanOfOld (~titan@gentoo/developer/TitanOfOld) (*.net *.split)
[11:09:27] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (*.net *.split)
[11:09:27] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[11:09:27] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (*.net *.split)
[11:09:27] *** Quits: pacninja (sid471347@id-471347.helmsley.irccloud.com) (*.net *.split)
[11:09:27] *** Quits: gajus (sid202456@id-202456.tinside.irccloud.com) (*.net *.split)
[11:09:28] *** Quits: essej (sid484260@id-484260.uxbridge.irccloud.com) (*.net *.split)
[11:09:28] *** Quits: boxrick (sid98261@id-98261.hampstead.irccloud.com) (*.net *.split)
[11:09:28] *** Quits: Edgy2 (~EdgyNet@user/edgy1) (*.net *.split)
[11:09:28] *** Quits: depesz (~quassel@lana.depesz.com) (*.net *.split)
[11:09:28] *** Quits: Zutoka (~zi@45.63.64.245) (*.net *.split)
[11:09:28] *** Quits: kurufu (~kurufu@user/kurufu) (*.net *.split)
[11:09:29] <funhouse> ttps://dpaste.org/so9WnSM/raw
[11:09:36] *** Joins: osm (~osm@c-894770d5.034-59-6762673.bbcust.telenor.se)
[11:09:36] *** Joins: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67)
[11:09:36] *** Joins: MapMan (mapman@rick.hlds.pl)
[11:09:37] *** Joins: mattmcc (~matt@li807-33.members.linode.com)
[11:09:37] *** Joins: TMM_ (hp@amanda.tmm.cx)
[11:09:37] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[11:09:37] *** Joins: SamM (335d953107@2604:bf00:561:2000::401)
[11:09:38] *** Joins: otherj (~j@fano.forth.com)
[11:09:38] *** Joins: grove (~grove@teresa.3001.dk)
[11:09:39] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[11:09:40] *** Joins: Edgy2 (~EdgyNet@vps-fcaa860a.vps.ovh.ca)
[11:09:40] *** Joins: esainane (esainane@antihype.space)
[11:09:43] *** Joins: Nyakajima (~Hayate@lunaluna.nyakajima.net)
[11:09:44] *** Joins: essej (sid484260@id-484260.uxbridge.irccloud.com)
[11:09:46] *** Joins: Berge (berge@redskapet.trivini.no)
[11:09:47] *** Joins: gajus (sid202456@id-202456.tinside.irccloud.com)
[11:09:50] <ademan[m]> thanks for pointing me that direction Darius!
[11:09:50] *** Joins: foo (~foo@user/foo/x-8763512)
[11:09:59] *** Joins: ch (ch@percival.namespace.at)
[11:10:00] *** Joins: nisstyre (wes@2600:3c00::f03c:91ff:fe69:7f3d)
[11:10:01] *** Quits: otherj (~j@fano.forth.com) (Changing host)
[11:10:01] *** Joins: otherj (~j@user/otherj)
[11:10:01] *** Joins: dexter (dexter@2a01:7e00::f03c:91ff:fe86:59ec)
[11:10:02] *** Joins: boxrick (sid98261@id-98261.hampstead.irccloud.com)
[11:10:03] *** Joins: bluejaypop (~7f000001@72.52.80.246)
[11:10:16] *** Joins: ysch (~ysch@91.211.93.148)
[11:10:17] *** Joins: Malin (lounge@pirate.pt)
[11:10:19] *** Joins: wgrant (~wgrant@n49-176-59-237.meb2.vic.optusnet.com.au)
[11:10:21] *** Quits: bluejaypop (~7f000001@72.52.80.246) (Changing host)
[11:10:21] *** Joins: bluejaypop (~7f000001@user/josefig)
[11:10:29] *** Joins: PyHedgehog (uid146498@2a03:5180:f:3::2:3c42)
[11:10:30] *** Joins: pacninja (sid471347@id-471347.helmsley.irccloud.com)
[11:10:37] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[11:10:42] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[11:10:45] <funhouse> i have 13 tables like this one, i need to join them all and d a distinct query, how would i do that?
[11:10:47] <funhouse> ttps://dpaste.org/so9WnSM/raw
[11:11:02] *** Joins: dre^ (andre@youbeill.in)
[11:11:03] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[11:11:16] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[11:11:21] *** Joins: TitanOfOld (~titan@gentoo/developer/TitanOfOld)
[11:11:22] *** Joins: depesz (~quassel@lana.depesz.com)
[11:11:25] *** Joins: Zutoka (~zi@45.63.64.245)
[11:11:25] <funhouse> https://dpaste.org/so9WnSM/raw
[11:11:35] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[11:11:57] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[11:12:05] *** Joins: darutoko (~darutoko@92.125.62.104)
[11:13:06] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[11:13:11] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[11:13:11] *** Quits: madduck (~madduck@user/madduck) (*.net *.split)
[11:13:11] *** Quits: led_belly (~led_belly@159.48.53.213) (*.net *.split)
[11:13:11] *** Quits: phyber (phyber@user/phyber) (*.net *.split)
[11:13:11] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (*.net *.split)
[11:13:11] *** Quits: pgSnake (~dpage@2a05:d01c:f24:7700:408e:f5f8:c599:1812) (*.net *.split)
[11:13:11] *** Quits: ThiefMaster (ThiefMaste@indico/developer/thiefmaster) (*.net *.split)
[11:13:11] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[11:13:11] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[11:13:11] *** Quits: tenten (~noname@65.201.88.74) (*.net *.split)
[11:13:11] *** Quits: matijja (~matijja@193.77.181.201) (*.net *.split)
[11:13:12] *** Quits: dale (~dale@user/dale) (*.net *.split)
[11:13:12] *** Quits: Getty (getty@stardestroyer.de) (*.net *.split)
[11:13:12] *** Quits: StuckMojo (~jon@199.79.190.34) (*.net *.split)
[11:13:12] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[11:13:12] *** Quits: stiang (sid245441@id-245441.helmsley.irccloud.com) (*.net *.split)
[11:13:12] *** Quits: teKuru (~teKuru@user/tekuru) (*.net *.split)
[11:13:12] *** Quits: gmcharlt (~quassel@li1293-248.members.linode.com) (*.net *.split)
[11:13:12] *** Quits: mfournier (~marc@159.100.250.19) (*.net *.split)
[11:13:12] *** Quits: psil (~krwlisp@karatefylla.nu) (*.net *.split)
[11:13:12] *** Quits: Ruud (~Ruud@mailserver.rshs.nl) (*.net *.split)
[11:13:12] *** Quits: RhodiumToad (~andrew@lungold.riddles.org.uk) (*.net *.split)
[11:13:12] *** Quits: j0hannes (~johannes@marcie.members.selfnet.de) (*.net *.split)
[11:13:12] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[11:13:12] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[11:13:12] *** Quits: a_d_s (~ads@osmium.wars-nicht.de) (*.net *.split)
[11:13:12] *** Quits: ringo__ (~ringo@157.230.117.128) (*.net *.split)
[11:13:12] *** Quits: acnebs- (~acnebs@198.199.68.107) (*.net *.split)
[11:13:12] *** Quits: asio (asio@109-74-7-223-static.serverhotell.net) (*.net *.split)
[11:13:19] *** Joins: gmcharlt (~quassel@li1293-248.members.linode.com)
[11:13:19] *** Joins: asio (asio@109-74-7-223-static.serverhotell.net)
[11:13:20] *** Joins: dale (dale@user/dale)
[11:13:20] *** Joins: a_d_s (~ads@osmium.wars-nicht.de)
[11:13:21] *** Joins: stiang (sid245441@id-245441.helmsley.irccloud.com)
[11:13:24] *** Joins: Getty (~getty@stardestroyer.de)
[11:13:24] *** Joins: StuckMojo (~jon@199.79.190.34)
[11:13:25] *** Joins: madduck (~madduck@matilda.madduck.net)
[11:13:28] *** Quits: madduck (~madduck@matilda.madduck.net) (Changing host)
[11:13:28] *** Joins: madduck (~madduck@user/madduck)
[11:13:29] *** Joins: debnet (sid330295@python/afpy/debnet)
[11:13:39] *** Joins: j0hannes (~johannes@marcie.members.selfnet.de)
[11:13:40] *** Joins: ThiefMaster (ThiefMaste@indico/developer/thiefmaster)
[11:13:44] *** Joins: vinnix (~vinnix@user/vinnix)
[11:13:46] *** Joins: RhodiumToad (~andrew@lungold.riddles.org.uk)
[11:13:46] *** Joins: tenten (~noname@65.201.88.74)
[11:13:47] *** Joins: psil (~krwlisp@karatefylla.nu)
[11:13:48] *** Joins: mfournier (~marc@159.100.250.19)
[11:13:51] *** Joins: Ruud (~Ruud@box.schilders.email)
[11:13:51] *** Joins: teKuru (~teKuru@user/tekuru)
[11:13:52] *** Joins: phyber (phyber@user/phyber)
[11:13:53] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[11:13:59] *** Joins: Exa (exa@irc.moe)
[11:14:04] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[11:14:05] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[11:14:15] *** Joins: deepy (deepy@user/deepy)
[11:14:16] *** Joins: acnebs (~acnebs@198.199.68.107)
[11:14:23] *** Joins: ringo__ (~ringo@157.230.117.128)
[11:14:44] *** Joins: kurufu (~kurufu@user/kurufu)
[11:14:51] *** Joins: koolazer (~koo@user/koolazer)
[11:15:27] *** Quits: mfournier (~marc@159.100.250.19) (Client Quit)
[11:15:27] *** Joins: matijja (~matijja@193.77.181.201)
[11:16:08] *** Quits: nisstyre (wes@2600:3c00::f03c:91ff:fe69:7f3d) (Quit: WeeChat 3.4)
[11:16:17] *** Joins: nisstyre (wes@user/nisstyre)
[11:16:49] *** Joins: led_belly (~led_belly@159.48.53.213)
[11:21:17] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[11:22:21] *** Quits: johto (~marko@joh.to) (Ping timeout: 250 seconds)
[11:23:09] *** Quits: midipix (~midipix@mail.culturestrings.org) (Ping timeout: 256 seconds)
[11:23:44] *** Joins: johto (~marko@joh.to)
[11:24:17] *** Joins: midipix (~midipix@mail.culturestrings.org)
[11:24:24] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:26:06] *** Joins: shiranaihito (~textual@219.85.3.203)
[11:27:18] *** Joins: shiranaihito_ (~textual@219.85.3.203)
[11:27:18] *** Quits: shiranaihito (~textual@219.85.3.203) (Read error: Connection reset by peer)
[11:28:55] <Zr40> funhouse: you wrote 'join' but do you mean append?
[11:32:45] *** Joins: mfournier (~marc@159.100.250.19)
[11:33:35] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 260 seconds)
[11:35:04] *** Joins: Rashad (~textual@2a01:9700:13d6:d000:1c8d:3139:2411:361b)
[11:35:51] *** Quits: randir_ (~randir@95-31-138-202.broadband.corbina.ru) (Remote host closed the connection)
[11:36:52] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[11:47:16] *** Joins: shka (~herr@109.231.3.55)
[11:49:37] *** Joins: AceSlash (~slash@2a01:e0a:432:c050:cd12:393c:3664:2a6e)
[11:53:16] *** Joins: michalz (~michalz@185.246.204.33)
[12:04:21] <funhouse> Zr40 yes I guess appened
[12:05:00] <Zr40> you can use UNION for that, which will automatically perform DISTINCT as well
[12:05:11] <Zr40> if you wouldn't want that to happen, use UNION ALL
[12:05:27] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[12:09:42] *** Joins: palasso (~palasso@user/palasso)
[12:12:38] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.167) (Ping timeout: 246 seconds)
[12:13:31] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:14:02] *** Quits: uncleyear (~ian@178.176.77.60) (Ping timeout: 246 seconds)
[12:15:05] *** Joins: gearnode (~gearnode@2a01cb0003a40300f22f74fffedefec1.ipv6.abo.wanadoo.fr)
[12:15:57] *** Joins: uncleyear (~ian@178.176.77.60)
[12:22:49] *** Quits: shiranaihito_ (~textual@219.85.3.203) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:23:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Read error: Connection reset by peer)
[12:23:31] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[12:24:35] *** Joins: fef (~thedawn@user/thedawn)
[12:28:56] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.167)
[12:31:33] *** Joins: jazzy (~jaziz@user/jaziz)
[12:33:31] <funhouse> Zr40 thank you
[12:33:53] *** Joins: shiranaihito (~textual@2001-b011-4011-3a9a-a4f9-5f2d-3996-40df.dynamic-ip6.hinet.net)
[12:35:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.167) (Ping timeout: 268 seconds)
[12:36:13] *** Joins: Klinda (~superleag@user/klinda)
[12:42:12] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:43:59] *** Joins: rendar (~rendar@user/rendar)
[12:55:13] *** Quits: sakasama (~sakasama@user/sakasama) (Ping timeout: 260 seconds)
[12:57:06] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[12:57:21] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[12:58:43] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[12:59:32] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:59:33] <depesz> ademan[m]: -Fd is better than -Fc, as it allows you to dump data faster.
[13:00:18] *** Quits: favadi (~favadi@2001:ee0:4081:6914:1d4d:d1da:d234:eef0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:07:45] *** Joins: favadi (~favadi@2001:ee0:4081:6914:1092:3801:21dd:5670)
[13:09:17] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[13:11:45] *** Joins: lenarhoyt (~lenarhoyt@mail.bfc-net.de)
[13:18:14] *** Joins: asarch (~asarch@2806:10ae:7:23bc:8bd1:89cf:5203:5f1b)
[13:22:36] <asarch> How could I concatenate the content of two or more columns into one single column?
[13:23:09] <asarch> For all the records of the table?
[13:24:28] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[13:25:53] <lenarhoyt> asarch: string_agg?
[13:28:26] *** Joins: n0fun (~jack@mue-88-130-48-145.dsl.tropolys.de)
[13:30:17] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[13:37:13] <asarch> Err... how?
[13:37:54] <asarch> update student set first_name = string_agg(first_name, last_name);?
[13:40:59] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[13:41:19] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[13:42:28] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[13:45:11] *** Quits: vanessa (~farawayas@103.160.128.7) (Ping timeout: 260 seconds)
[13:45:35] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[13:47:04] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[13:47:04] *** Joins: iliv (~iliv@user/iliv)
[13:47:34] <lenarhoyt> asarch, aha you want to update. then perhaps use a CTE?
[13:47:34] <lenarhoyt> WITH cte AS (SELECT id, col2, col3 FROM table)
[13:47:35] <lenarhoyt> UPDATE table SET column1 = CONCAT(cte.col1, cte.col3) FROM cte WHERE table.id = cte.id;
[13:47:59] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:b89d:8c20:3683:54c9)
[13:48:22] <asarch> Bingo!
[13:48:33] <asarch> Thank you! Thank you very much! :-)
[13:48:40] <lenarhoyt> Maybe it even works without the CTE simply using aliases
[13:48:41] <lenarhoyt> UPDATE table a SET column1 = CONCAT(b.col2, b.col3) FROM table b WHERE a.id = a.id;
[13:49:01] <lenarhoyt> i meant a.id = b.id
[13:49:33] *** Quits: fcr (~fran@r167-60-68-84.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[13:50:31] <lenarhoyt> CONCAT(a, ', ', b) == array_to_string([a, b], ', ') if you have many
[13:54:58] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[13:55:56] <asarch> Wow!
[13:56:04] <asarch> Yes!
[13:56:10] <asarch> Thanks again :-)
[13:58:18] *** Joins: fcr (~fran@r186-48-46-24.dialup.adsl.anteldata.net.uy)
[14:00:37] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[14:03:30] *** Quits: _xor (~xor@74.215.232.169) (Quit: bbl)
[14:03:36] *** Joins: grumper (~grumper@ip-178-200-140-153.um45.pools.vodafone-ip.de)
[14:05:16] <grumper> greetings! I have a relatively simple question I can't seem to find the answer to: I have a query that returns tuples ( multiple rows, two columns per row ): ( A1, A2 ), ( B1, B2 ), ( C1, C2 ) ... I need something to transform it into a result with a single column with the order of the tuples preserved: ( A1, A2, B1, B2, C1, C2, ... )
[14:05:32] <grumper> what is the magic operator I am looking for?
[14:06:51] <grumper> both columns have the same type obviously ( TEXT )
[14:08:23] <Zr40> what type do you want this result to be?
[14:09:20] <grumper> also TEXT
[14:09:28] <Zr40> right, so not an array
[14:09:33] <grumper> I basically don't know how to do a "zip"
[14:09:49] <grumper> I mean - it can be an array I will flatten after...
[14:10:07] <Zr40> select string_agg(format('%s, %s', col1, col2), ',' order by ...) from tbl
[14:10:48] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[14:11:42] <grumper> ummmm that is a concatenator
[14:12:08] <grumper> I want to take an input of 3 rows 2 columns and get out a result of 6 rows with 1 column
[14:12:13] <Zr40> oh, I misunderstood
[14:12:14] <Zr40> right
[14:15:36] <Zr40> select val from tbl cross join lateral (values(tbl.col1, 1),(tbl.col2, 2)) as _ (val, col_order) order by tbl.id, col_order
[14:15:43] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 260 seconds)
[14:16:25] <grumper> wow... no handy op for that eh...
[14:19:45] *** Quits: asarch (~asarch@2806:10ae:7:23bc:8bd1:89cf:5203:5f1b) (Quit: Leaving)
[14:19:45] <grumper> oh there is!
[14:20:23] <grumper> Zr40: this seems to do it: SELECT UNNEST( ARRAY[ col1, col2 ] ) FROM source;
[14:20:31] <Zr40> yeah but there's no ordering guarantee
[14:20:43] <grumper> how come?
[14:20:49] <Zr40> it's unspecified in your query
[14:21:05] <grumper> UNNEST guarantees input order no?
[14:21:10] <Zr40> no
[14:21:31] <grumper> >  ... The array's elements are read out in storage order.
[14:21:40] <Zr40> there simply isn't a reason right now with your current data why the planner might decide to order differently
[14:21:55] <Zr40> if the order matters, you can't omit ORDER BY
[14:22:04] <ilmari> of course, any node above that in the query might decide to reorder things
[14:23:16] <grumper> the entire statement is literally `psql ... -c 'SELECT UNNEST( ARRAY[ col1, col2 ] ) FROM source'` <-- are you telling me this is ambiguous? if yes - the docs are not exactly truthful...
[14:23:18] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[14:23:32] <ilmari> but unnest() itself does preserve order, as if you'd done `select value from unnest(array[...]) with ordinality as u(value, ord) order by ord;`
[14:24:07] <grumper> perfect!
[14:24:34] <ilmari> grumper: which order rows in source are output is unspecified, but for each col1 and col2 will be in that order
[14:24:39] <ilmari> *for each row*
[14:25:21] <grumper> yep, this is all I care about
[14:25:48] <grumper> I might throw in an ... ORDER BY col1, but they important part is for col1/col2 not to become separated
[14:27:52] *** Quits: favadi (~favadi@2001:ee0:4081:6914:1092:3801:21dd:5670) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:28:29] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:28:39] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[14:29:40] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Quit: Leaving)
[14:32:45] *** Joins: dionysus70 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[14:32:46] *** Quits: uncleyear (~ian@178.176.77.60) (Remote host closed the connection)
[14:32:59] *** Quits: schinckel (uid38120@user/schinckel) (Quit: Connection closed for inactivity)
[14:33:41] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 268 seconds)
[14:33:41] *** dionysus70 is now known as dionysus69
[14:34:23] *** Quits: grumper (~grumper@ip-178-200-140-153.um45.pools.vodafone-ip.de) (Quit: Client closed)
[14:35:20] *** Joins: uncleyear (~ian@178.176.77.60)
[14:38:19] *** Quits: nyov (~nyov@user/nyov) (Ping timeout: 256 seconds)
[14:39:17] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 246 seconds)
[14:40:05] *** Joins: nyov (~nyov@user/nyov)
[14:40:09] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[14:41:05] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 248 seconds)
[14:50:14] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Read error: Connection reset by peer)
[14:50:33] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[14:53:37] *** magla is now known as jellyknight
[14:56:47] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[14:57:05] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[14:57:25] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:58:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:58:27] *** Quits: libsys (~libsys@186.105.160.62) (Ping timeout: 260 seconds)
[14:59:27] *** Joins: libsys (~libsys@186.105.181.197)
[15:00:05] *** Quits: Rashad (~textual@2a01:9700:13d6:d000:1c8d:3139:2411:361b) (Quit: Textual IRC Client: www.textualapp.com)
[15:00:27] *** Joins: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de)
[15:01:26] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 268 seconds)
[15:07:34] *** Joins: favadi (~favadi@2001:ee0:4081:6914:b4b8:b6ed:140c:b302)
[15:17:25] *** Joins: vnf (~vnf@85.174.194.51)
[15:18:28] *** Quits: vnf (~vnf@85.174.194.51) (Read error: Connection reset by peer)
[15:18:45] *** Joins: vnf (~vnf@85.174.194.51)
[15:32:01] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[15:44:37] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:46:57] *** Quits: TMM_ (hp@amanda.tmm.cx) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:47:05] *** Joins: TMM_ (hp@amanda.tmm.cx)
[15:53:11] *** Quits: cliluw (~cliluw@47.147.77.43) (Read error: Connection reset by peer)
[15:54:15] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:55:11] *** Joins: MrZeus (~MrZeus@81.92.205.23)
[15:55:59] *** Joins: cliluw (~cliluw@47.147.77.43)
[15:55:59] *** Quits: cliluw (~cliluw@47.147.77.43) (Remote host closed the connection)
[15:56:07] *** Quits: vnf (~vnf@85.174.194.51) (Quit: Leaving)
[15:56:15] *** Joins: edgars_ (~edgars@81.198.243.58)
[15:57:26] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:03:43] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 268 seconds)
[16:03:46] *** Quits: nuttingd (~nuttingd@97.115.158.123) (Ping timeout: 272 seconds)
[16:04:01] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[16:07:06] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:09:40] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[16:11:41] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 246 seconds)
[16:12:49] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 248 seconds)
[16:13:36] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:13:36] *** Quits: cliluw (~cliluw@47.147.77.43) (Remote host closed the connection)
[16:15:12] *** Joins: vanessa (~farawayas@103.160.128.7)
[16:15:14] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:17:29] *** Quits: wgrant (~wgrant@n49-176-59-237.meb2.vic.optusnet.com.au) (Ping timeout: 256 seconds)
[16:18:56] <trafficjam> hey boys
[16:19:45] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 248 seconds)
[16:26:21] *** Joins: betabox (~betabox@nextcloud.schnuerle.com)
[16:26:30] *** Quits: betabox (~betabox@nextcloud.schnuerle.com) (Client Quit)
[16:30:18] <ilmari> hey girls
[16:30:30] <ilmari> superstar DJs, here we go!
[16:32:38] <zelest> haha
[16:32:42] <zelest> that was ages ago
[16:33:31] <ilmari> a timeless classic
[16:38:44] *** Joins: vnf (~vnf@85.174.194.51)
[16:51:22] *** Joins: Atque (~Atque@user/atque)
[16:51:58] <kakashiA1> if I implement SQL that I wrap in a function that looks like this:
[16:52:00] <kakashiA1> updateDocument(id, updatedAt)
[16:52:02] <kakashiA1> in this case my query will use WHERE id ... AND WHERE updated_at ...
[16:52:04] <kakashiA1> how can I get informations if there is an id = 42 BUT the updated_at date is not correct?
[16:52:06] <kakashiA1> not correct = no match
[16:52:56] *** Quits: yetoo (~yetoo@user/yetoo) (Remote host closed the connection)
[17:00:16] <ilmari> where id = $1 and updated_at <> $2?
[17:01:02] <ilmari> or do you mean if it didn't update any rows because there wasn't a match, you want to know if that was because the ID existed but the updated_at was wrong?
[17:01:29] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:01:49] *** Quits: favadi (~favadi@2001:ee0:4081:6914:b4b8:b6ed:140c:b302) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:02:11] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Max SendQ exceeded)
[17:02:39] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:07:05] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:09:00] *** Quits: bmomjian (~bruce@momjian.us) (Quit: Leaving.)
[17:09:04] *** Joins: bmomjian1 (~bruce@momjian.us)
[17:12:31] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:18:54] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:19:02] *** Quits: lenarhoyt (~lenarhoyt@mail.bfc-net.de) (Quit: Client closed)
[17:20:09] <esran> Is there a way to create an extension without having to copy files into the postgres installation directory?
[17:20:37] <Berge> esran: _Create_ (as in install in a database), or install on the host?
[17:20:42] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[17:20:46] <esran> on the host
[17:21:14] <esran> I'm assuming the answer is no, based on reading and googling, but thought it worth a punt to ask anyway.
[17:21:34] <Berge> esran: What sort of alternative are you looking for?
[17:22:06] *** Joins: favadi (~favadi@2001:ee0:4081:6914:150a:69:b924:d81d)
[17:22:16] <esran> I'm creating an app that will have some tables and considering an extension a reasonable way to manage those tables as they may change over time.
[17:22:51] <esran> But if I'm running postgres in a container getting the extension files into there becomes tricky
[17:24:05] <ilmari> include them when you build the container
[17:24:09] <ilmari> the image, that is
[17:24:31] <Berge> Many extensions are packaged with typical OS package management systems
[17:24:32] <ilmari> I thought one of the points of containers was making it easy to customise exactly what's included in the image
[17:24:50] <ilmari> and the official postgres docker images are based on debian and apt.postgresql.org
[17:25:12] <ilmari> so you should be able to FROM that and add the suitable apt install and create extension invocations
[17:25:24] <Berge> esran: Which extension are you looking at?
[17:25:28] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[17:26:07] <esran> This would be a bespoke extension. Basically using the extension create/upgrade to manage a changing schema structure over time.
[17:26:07] <ilmari> https://github.com/docker-library/docs/blob/master/postgres/README.md#additional-extensions
[17:26:49] <Berge> esran: Why would you make an extension for that?
[17:27:16] <Berge> Also, if you're rolling your own extension, then packaging and distribution is kind of up to you as well (-:
[17:28:42] <esran> yup. previously we've packaged the extensions as OS packages installing directly into postgres folders. but that pre-dates shifting to containerisation.
[17:29:05] <esran> Looks like the postgis example linked from the above readme will be a good place to start, thanks
[17:29:08] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[17:30:01] <esran> or, as you say, manage the app's changing schema more explicitly
[17:30:26] *** Joins: Atque (~Atque@user/atque)
[17:36:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:36:52] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:42:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:42:48] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 260 seconds)
[17:45:08] *** Quits: favadi (~favadi@2001:ee0:4081:6914:150a:69:b924:d81d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:49:35] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[17:52:56] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[17:52:56] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[17:53:24] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[17:55:36] *** Quits: tozhu (~tozhu@117.61.241.55) (Ping timeout: 265 seconds)
[17:56:29] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[17:57:33] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:01:20] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:01:46] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:02:05] *** Joins: dionysus69 (~Thunderbi@185.115.4.228)
[18:02:16] *** Joins: fruity_tomato (~fruity_to@user/fruity-tomato/x-3541336)
[18:02:21] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[18:02:33] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:04:33] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:04:57] *** Joins: favadi (~favadi@2001:ee0:4081:6914:6d64:7204:ba68:25cc)
[18:05:00] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:05:25] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[18:05:32] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:06:38] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[18:08:27] *** Quits: trafficjam (~trafficja@103.231.88.30) (Quit: Client closed)
[18:10:52] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:12:18] *** Joins: ivii (~ivan@user/ivii)
[18:14:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:16:39] *** Quits: dionysus69 (~Thunderbi@185.115.4.228) (Remote host closed the connection)
[18:19:58] *** Joins: mizi_ (~mizi@user/mizi)
[18:20:39] *** Quits: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net) (Quit: Leaving)
[18:21:00] *** Joins: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net)
[18:21:02] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:24:13] *** Quits: favadi (~favadi@2001:ee0:4081:6914:6d64:7204:ba68:25cc) (Ping timeout: 250 seconds)
[18:25:48] *** Quits: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net) (Remote host closed the connection)
[18:26:10] *** Joins: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net)
[18:29:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:32:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:40:00] *** Joins: JanC (~janc@user/janc)
[18:40:45] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[18:42:01] *** Joins: dionysus69 (~Thunderbi@88.131.62.38)
[18:42:49] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[18:43:52] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[18:45:06] *** Joins: gumnos (~gumnos@2600:1702:410:f440:ba70:f4ff:fe1e:1ef2)
[18:45:17] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[18:47:18] *** Joins: mattil (~mattil@87-92-113-29.bb.dnainternet.fi)
[18:48:09] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:48:16] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:b464:3378:b2e1:3c46)
[18:48:46] <gumnos> I want to index on 2 columns, the first column (bucket_id integer) with a standard btree but the second requires a gist(network inet_ops) index. Is there a good solution for mixing index-types?
[18:52:13] <gumnos> my JOIN is "ON a.bucket_id = b.bucket_id AND a.network <<= b.network" where the btree on the (redundant) bucket_id is much faster than the <<= with the GIST alone.
[18:52:14] *** Quits: mattil (~mattil@87-92-113-29.bb.dnainternet.fi) (Ping timeout: 272 seconds)
[18:53:18] *** Quits: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net) (Remote host closed the connection)
[18:53:41] *** Joins: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net)
[18:53:44] <segfaultfizzbuzz> i need to handle a situation where a user needs to essentially create their own "tables" and change those tables flexibly. i am thinking of storing these tables in a very slender and tall database table. am i in for trouble?
[18:54:25] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 248 seconds)
[18:54:28] <segfaultfizzbuzz> so for example the slender table might have these columns:  id, name, data, type
[18:55:09] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Ping timeout: 268 seconds)
[18:55:55] <gumnos> segfaultfizzbuzz: does each user have their own DB credentials, or are they coming through a front-end app with a single DB user-account?
[18:56:08] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[18:57:19] <segfaultfizzbuzz> there would be a frontend with a database account
[18:57:37] <segfaultfizzbuzz> so yes there might be another column there for an associated permission identifier
[18:58:03] <segfaultfizzbuzz> but i was meaning to ask a more database-y question here which is, am i going to run into nasty problems doing this kind of thing?
[18:59:51] <gumnos> With individual DB users, I would have recommended more direct table creation. With that single DB user, it's an antipattern but likely a least-bad solution given the situation. I've done it and it...works.
[19:02:05] *** Joins: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[19:03:51] <segfaultfizzbuzz> gumnos: i mean, you just get like ~10x the number of rows which shouldn't be awful, right?
[19:05:17] *** Joins: vladoski (~vladoski@217.147.130.65)
[19:06:06] <gumnos> you get N(=number of customers) × M(=average rows per customer) rows, yes. But that's less of a problem. However you also have to do more creative joins, check your filters don't leak data for other customers, and indexing against such (untyped) data becomes less useful (impacting perf)
[19:07:01] <segfaultfizzbuzz> ahhhhhh, right, you called it. i lose the type information so everything is varchar... hmm
[19:08:03] <segfaultfizzbuzz> so postgres can't do any work of genius here to gain introspection on the types?
[19:08:49] *** Quits: uncleyear (~ian@178.176.77.60) (Ping timeout: 248 seconds)
[19:10:06] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:10:29] *** Joins: uncleyear (~ian@178.176.77.60)
[19:13:08] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:14:04] <segfaultfizzbuzz> i suppse you could shard tables by type
[19:14:34] <segfaultfizzbuzz> so you would have integer_database, date_database, etc. that's not too awful...
[19:15:27] *** Quits: jellyknight (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[19:17:46] *** Joins: Siecje (~Siecje@97.111.200.190)
[19:18:34] <gumnos> segfaultfizzbuzz: for some obcene definition of "not too awful" :-P
[19:18:51] <Siecje> I'm trying to query a jsonb field that start with a list of objects? I want to know which records contain at least one object that have a specific key. I've tried WHERE proportions@> '[{"constituent": "otherconstituent"}]'
[19:19:03] <gumnos> it's better than one table with columns like "val_varchar", "var_integer", "var_date", ...
[19:19:05] *** Joins: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net)
[19:20:18] *** Quits: fruity_tomato (~fruity_to@user/fruity-tomato/x-3541336) (Ping timeout: 250 seconds)
[19:21:25] <csd> are there any techniques to understand why the query planner picked one index over another? i have a query where there are two possible indexes and postgres is choosing the one that to me seems less efficient than the other (10 mm records covered in the index being used, rather than 2 mm in the other). would be nice to know how the query planner
[19:21:25] <csd> analyzes the cost of the not-chosen route
[19:21:59] <ilmari> Siecje: what do you man by "start with"? what is the type of the top-level value in the jsonb field? can you show us an example value?
[19:22:08] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:22:45] <Siecje> ilmari: It is a list [{"quantity": 1, "constituent": "water"]
[19:24:49] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 248 seconds)
[19:24:58] <Myon> csd: you can ask for the cost by begin;drop index otherindex; explain; rollback
[19:24:58] <ilmari> in that case your WHERE clause looks right
[19:25:39] <Myon> csd: in many cases the problem is the really best index is still missing, often a multi-column one
[19:26:52] <ilmari> Siecje: select jsonb '[{"foo":42, "bar":"baz"},{"foo":42,"bar":"zot"}]' @> '[{"bar":"zot"}]'; --> t
[19:29:48] <Siecje> ilmari: Thanks!
[19:30:16] <ilmari> Siecje: you said you'd tried that. what happened when you did?
[19:30:35] <Siecje> I didn't have any records in that table.
[19:31:22] <ilmari> well, that won't work then :D
[19:31:51] *** Joins: MrZeus_ (~MrZeus@185.206.227.135)
[19:32:05] <maret> Whats approach to update a large table - 7 billions row? Basically I need to add a new column and go row by row to get value in column A then query second large table to get second value and do a simple computation which results goes to a new row.
[19:32:41] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[19:32:42] <Myon> adding an empty or constant column is O(1)
[19:34:13] *** Quits: odnes (~odnes@109-178-139-235.pat.ren.cosmote.net) (Quit: Leaving)
[19:35:02] *** Quits: MrZeus (~MrZeus@81.92.205.23) (Ping timeout: 246 seconds)
[19:35:57] *** Quits: shiranaihito (~textual@2001-b011-4011-3a9a-a4f9-5f2d-3996-40df.dynamic-ip6.hinet.net) (Ping timeout: 260 seconds)
[19:36:36] <maret> so If I want to finish it in reasonable time like 24 hours I would have to be able to update around 80k rows a second which doesnt seem realistic with 2 days it would be aprox 40 a sec.
[19:37:42] <Myon> if you do it in batches, you should group it by physical page
[19:37:51] <Myon> won't be pretty
[19:38:49] <maret> yeah seems like it might be easier to dump data to csv? update that  and reimport maybe? Feels like I will have bit more tools to my disposal with that
[19:39:26] <Myon> if locking the whole table is an option, do a big UPDATE statement
[19:39:50] <Siecje> How do you update the value of all jsonb objects in a list that have a given key value pair? This statement is not complete, I don't get an error or anything
[19:39:51] <Myon> not sure if subselects are allowed in alter table ... add column ... USING
[19:39:51] <Siecje> UPDATE mix SET proportions = proportions || '{"constituent":"notwater"}' WHERE proportions @> '[{"constituent": "water"}];
[19:40:28] <Myon> Siecje: won't work since you have lists, not objects
[19:40:50] <Siecje> Myon: How do you do it then?
[19:41:12] <Myon> normalize schema and data first
[19:41:30] <Siecje> In general jsonb should not be a list?
[19:41:44] <Myon> depends on what you want to do with it
[19:41:59] <Myon> if you want to access objects, a list is probably not the correct type
[19:42:14] <Myon> and you should consider unnesting the list into separate rows in a table
[19:42:53] <Myon> if it needs to be that list, the update statement needs to unnest it, update each object, and nest it again
[19:44:10] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:46:04] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Ping timeout: 272 seconds)
[19:46:07] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[19:46:14] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[19:46:21] *** Joins: vodkra (~vodkra@user/vodkra)
[19:50:03] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:51:38] *** Quits: dionysus69 (~Thunderbi@88.131.62.38) (Remote host closed the connection)
[19:53:02] *** Joins: dionysus69 (~Thunderbi@88.131.62.38)
[19:53:12] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[19:53:37] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 248 seconds)
[19:53:56] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[19:55:42] *** Joins: sakasama (~sakasama@user/sakasama)
[19:59:34] *** Joins: dionysus70 (~Thunderbi@185.115.5.172)
[20:01:12] *** Quits: scav (sid309693@id-309693.helmsley.irccloud.com) (Changing host)
[20:01:12] *** Joins: scav (sid309693@user/scav)
[20:01:36] *** Quits: dionysus69 (~Thunderbi@88.131.62.38) (Ping timeout: 245 seconds)
[20:01:36] *** dionysus70 is now known as dionysus69
[20:02:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:03:16] *** Quits: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr) (Quit: Leaving.)
[20:03:18] *** Quits: tnewman (~tnewman@118.150.44.48) (Quit: The Lounge - https://thelounge.chat)
[20:04:08] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[20:05:07] *** Quits: vnf (~vnf@85.174.194.51) (Quit: Leaving)
[20:05:45] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[20:09:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[20:09:35] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:b464:3378:b2e1:3c46) (Ping timeout: 256 seconds)
[20:13:09] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:14:23] *** Quits: zer0def (~zer0def@user/zer0def) (Ping timeout: 260 seconds)
[20:15:32] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Read error: Connection reset by peer)
[20:16:24] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[20:17:08] *** Joins: tnewman (~tnewman@118.150.44.48)
[20:18:35] *** Joins: zer0def (~zer0def@user/zer0def)
[20:20:05] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[20:20:52] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Ping timeout: 268 seconds)
[20:21:38] *** Joins: nuttingd (~nuttingd@2607:fb90:8064:26c2:0:8:1612:7e01)
[20:22:47] *** Quits: ChOcO-Bn (~choco@user/choco-bn) (Ping timeout: 260 seconds)
[20:24:25] <Enissay> in the where clause, how can I reverse a specific condition based on some flag: E.g.: `WHERE .... AND column<>'value' ...` and combine it with `flag=1`, if 1 then condition as is, if 0 then the opposite `NOT` ?
[20:24:59] <Enissay> I wonder if there's an elegant way to do it at the level of that condition
[20:26:32] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[20:26:36] <Enissay> Oh, I didnt now we can use CASE block in WHERE :o
[20:28:08] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[20:28:11] *** Quits: dionysus69 (~Thunderbi@185.115.5.172) (Remote host closed the connection)
[20:29:03] <ilmari> Enissay: where (column = value) = flag
[20:29:51] <ilmari> then if flag is false, it will be equivalent to column <> value
[20:31:30] *** Joins: dionysus69 (~Thunderbi@185.115.5.172)
[20:31:47] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:b464:3378:b2e1:3c46)
[20:32:07] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[20:32:20] *** Quits: vladoski (~vladoski@217.147.130.65) (Remote host closed the connection)
[20:34:53] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[20:35:14] *** Quits: nuttingd (~nuttingd@2607:fb90:8064:26c2:0:8:1612:7e01) (Read error: Connection reset by peer)
[20:35:36] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[20:35:38] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[20:35:55] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[20:37:41] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Read error: Connection reset by peer)
[20:38:00] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[20:39:20] <Enissay> ilmari: Perfect, I knew there should be a sneaky way to do it <3
[20:39:25] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:42:27] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Ping timeout: 268 seconds)
[20:42:36] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[20:42:46] *** Joins: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net)
[20:43:39] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[20:44:33] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[20:45:01] *** Joins: dionysus70 (~Thunderbi@185.115.5.119)
[20:45:23] *** Quits: dionysus69 (~Thunderbi@185.115.5.172) (Ping timeout: 260 seconds)
[20:45:23] *** dionysus70 is now known as dionysus69
[20:45:49] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[20:46:46] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 268 seconds)
[20:52:37] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[20:56:14] *** Quits: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[21:06:25] *** Joins: econo (uid147250@user/econo)
[21:06:50] <funhouse> I am trying to do a query like this
[21:07:25] <funhouse> `SELECT COUNT(*), i_to_pc.postalcode, total_population FROM ifa_to_pc LEFT JOIN total_population_by_pc_2020 ON i_to_pc.postalcode = total_population_by_pc_2020.pc WHERE COUNT(*) > total_population GROUP BY i_to_pc.postalcode, total_population;`
[21:07:51] <funhouse> `ERROR:  aggregate functions are not allowed in WHERE`
[21:07:55] <funhouse> I cant do where with that?
[21:08:29] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[21:08:33] <ilmari> move the count(*) condition to HAVING (after the GROUP BY)
[21:09:19] <ilmari> WHERE is for filtering input rows, HAVING is for output rows
[21:09:46] <funhouse> ahhh thank you again ilmari
[21:12:38] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[21:14:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Remote host closed the connection)
[21:21:14] *** Quits: zelest (~jesper@81-233-184-27-no13.tbcn.telia.com) (Quit: If you wake up in a house that's full of smoke, don't panic! Call me and I'll tell you a joke!)
[21:22:47] *** Joins: zelest (~jesper@81-233-184-27-no13.tbcn.telia.com)
[21:26:26] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:b89d:8c20:3683:54c9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:59] *** Quits: nuttingd (~nuttingd@97-115-107-88.ptld.qwest.net) (Quit: Quit)
[21:31:09] *** Joins: randir (~randir@95-31-138-202.broadband.corbina.ru)
[21:31:16] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:31:19] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[21:31:32] *** Joins: JanC (~janc@user/janc)
[21:33:35] *** Joins: carragom (~textual@201.204.94.76)
[21:36:23] <StuckMojo> ??json
[21:36:24] <pg_docbot> https://www.postgresql.org/docs/current/static/datatype-json.html :: https://www.postgresql.org/docs/current/static/functions-json.html
[21:36:24] <pg_docbot> https://schinckel.net/2017/07/01/tree-data-as-a-nested-list-redux/
[21:37:57] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:b464:3378:b2e1:3c46) (Ping timeout: 268 seconds)
[21:40:02] *** Joins: vnf (~vnf@85.174.194.51)
[21:41:17] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[21:41:37] <glik22_> anyone here using aurora? i'm running `select pg_stat_statements_reset()` and it doesn't reset anything. no error messages.
[21:42:17] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:46:53] *** Joins: john_johnk (~Thunderbi@2a02-8428-013e-4001-d86e-239a-b6a9-48b6.rev.sfr.net)
[21:48:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1)
[21:52:09] *** Quits: vnf (~vnf@85.174.194.51) (Quit: Leaving)
[21:58:53] *** Quits: dionysus69 (~Thunderbi@185.115.5.119) (Ping timeout: 246 seconds)
[22:04:13] *** Joins: ChOcO-Bn (~choco@4-111-210-185.ftth.cust.kwaoo.net)
[22:04:13] *** Quits: ChOcO-Bn (~choco@4-111-210-185.ftth.cust.kwaoo.net) (Changing host)
[22:04:13] *** Joins: ChOcO-Bn (~choco@user/choco-bn)
[22:05:25] <StuckMojo> glik22_: who are you running it as?
[22:05:39] <StuckMojo> a user with rds_superuser privs?
[22:05:55] <StuckMojo> i do a lot of aurora but i haven't tried doing an _reset() yet...
[22:05:56] <funhouse> Not sure if this question makes sense at all or if this is even possible in one query, just not sure how to approach this --> https://dpaste.org/6p0XCBk/raw
[22:06:32] <StuckMojo> but RDS and Aurora both have the fun oddity of not giving you a real superuser
[22:07:37] *** Joins: tnewman1 (~tnewman@118.150.44.48)
[22:09:23] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 256 seconds)
[22:09:23] *** tnewman1 is now known as tnewman
[22:10:12] *** Joins: dionysus69 (~Thunderbi@88.131.62.38)
[22:11:07] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Quit: every day brings new choices)
[22:14:35] *** Quits: tnewman (~tnewman@118.150.44.48) (Quit: Ping timeout (120 seconds))
[22:14:54] *** Joins: tnewman (~tnewman@118.150.44.48)
[22:17:30] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:19:48] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[22:27:09] *** Joins: vieira (uid370194@id-370194.lymington.irccloud.com)
[22:30:01] <vieira> If I have a query with `where tickets.agent_id = ? and tickets.status in ('closed', 'resolved') order by tickets.id desc limit 100` and an index `on tickets (status, agent_id, id desc) where status in ('closed', 'rated')` shouldn't PG be able to  use the index to fetch the rows (ordered) ?
[22:31:28] <vieira> instead it is not using the index at all, it is using the index on the `agent_id` column and then filtering by status with a top-N heapsort at the end
[22:31:54] <vieira> without the order by it is 10x faster (~3ms vs ~30ms), unfortunately I need the order by hehe
[22:35:38] *** Quits: john_johnk (~Thunderbi@2a02-8428-013e-4001-d86e-239a-b6a9-48b6.rev.sfr.net) (Ping timeout: 260 seconds)
[22:38:20] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[22:38:25] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:b464:3378:b2e1:3c46)
[22:40:52] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[22:41:24] <ilmari> you need an index on (agent_id, id) where status in ('closed', 'resolved')
[22:42:15] <ilmari> use `explain analyze <your query>` and https://explain.depesz.com/ to share the query plan
[22:42:34] <vieira> ok, creating that index right now
[22:43:00] <vieira> running anayze
[22:43:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[22:43:19] <vieira> still not used :(
[22:44:21] <ilmari> can you show the query, and plan using explain.depesz.com, and psql \d output for all the involved tables using https://dpaste.org/ (select "plain code" in the dropdown in the top-left)
[22:45:08] <vieira> @ilmari: sorry my mistake, it works with your suggestion
[22:46:16] <vieira> Index Scan using tickets_resolved_index on chats  (cost=0.43..37944.00 rows=9663 width=656) (actual time=0.023..0.343 rows=100 loops=1)
[22:46:16] <vieira>          Index Cond: (agent_id = 663402)
[22:46:32] <vieira> thanks a lot
[22:46:39] *** Quits: uncleyear (~ian@178.176.77.60) (Remote host closed the connection)
[22:50:51] <vieira> I had another index with `(status, expert_id) where status in (open, assigned')` that is used as expected, probably works because in the query that uses it there is no order by?
[22:51:33] <vieira> but I should probably also change this one to just `(expert_id) where status in (open, assigned')`, right?
[22:52:36] *** Joins: uncleyear (~ian@178.176.77.60)
[22:56:56] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[22:56:56] *** Joins: iliv (~iliv@user/iliv)
[22:59:16] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:02:39] *** Quits: seifeslimene_ (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[23:02:47] *** Joins: Auron (Auron956@user/auron)
[23:02:52] *** Joins: seifeslimene_ (~seifeslim@197.2.10.72)
[23:06:13] *** Quits: dionysus69 (~Thunderbi@88.131.62.38) (Ping timeout: 240 seconds)
[23:07:02] *** Joins: dionysus69 (~Thunderbi@88.131.62.38)
[23:11:23] <ilmari> yes, it's rarely useful to include the columns used in index predicate in the index itself
[23:12:59] <vieira> ilmari: thanks a lot!
[23:14:14] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:b464:3378:b2e1:3c46) (Quit: segfaultfizzbuzz)
[23:16:39] *** Joins: john_johnk (~Thunderbi@2a02-8428-013e-4001-2133-005c-a44d-b2fe.rev.sfr.net)
[23:19:01] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[23:23:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 248 seconds)
[23:24:17] *** Quits: dionysus69 (~Thunderbi@88.131.62.38) (Ping timeout: 248 seconds)
[23:32:20] *** Quits: veesh (~veesh@77.137.131.111) (Ping timeout: 246 seconds)
[23:33:05] *** Joins: berkhan (~berkhan@159.146.43.242)
[23:35:38] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[23:36:22] *** Quits: darutoko (~darutoko@92.125.62.104) (Quit: Leaving)
[23:44:33] *** Quits: john_johnk (~Thunderbi@2a02-8428-013e-4001-2133-005c-a44d-b2fe.rev.sfr.net) (Ping timeout: 248 seconds)
[23:51:16] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[23:54:17] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:c037:4b3d:a51c:742a)
