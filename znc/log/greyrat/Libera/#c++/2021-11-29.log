[00:01:15] <SuperNintendoSUX> well, it will work too
[00:03:38] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[00:04:53] *** Joins: KAHR-Alpha_ (~Alpha@2a01cb0d024a6600d8e44444a82923f2.ipv6.abo.wanadoo.fr)
[00:07:46] *** Joins: reset (~reset@user/reset)
[00:08:51] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600f5a106cb491fef46.ipv6.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[00:12:07] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:13:31] *** Joins: seninha (~seninha@user/seninha)
[00:16:38] *** magla is now known as geli
[00:18:10] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[00:19:06] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:22:56] *** Joins: RazielZ (~Raziel@user/raziel)
[00:23:13] *** Quits: navidr (uid112413@id-112413.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:26:14] *** Quits: geli (~gelignite@55d4f645.access.ecotel.net) (Quit: Stay safe!)
[00:26:28] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 268 seconds)
[00:31:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:40:45] *** Joins: louipc (~louipc@archlinux/fellow/louipc)
[00:40:55] <louipc> oh nice it exists
[00:41:12] <Alipha> louipc: yes, we exist
[00:41:35] <louipc> who are we
[00:43:10] <Alipha> c++ programmers
[00:43:45] <CarloWood> *raises fist*
[00:44:20] <CarloWood> All for C++, C++ for all!
[00:44:38] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[00:46:53] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:48:36] *** Parts: louipc (~louipc@archlinux/fellow/louipc) (cheers)
[00:58:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:59:08] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[01:05:48] *** Joins: badone (~badone@209.132.189.136)
[01:06:47] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[01:06:59] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[01:15:07] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[01:27:30] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:27:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:28:36] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[01:30:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[01:30:06] *** Joins: Atque (~Atque@user/atque)
[01:35:21] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:36:55] *** Joins: millido (~millido@84.210.150.128)
[01:38:45] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:38:52] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:38:52] *** ChanServ sets mode: +v npaperbot
[01:40:59] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[01:41:38] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[01:42:45] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 256 seconds)
[01:45:09] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[01:45:30] *** Joins: bindu (~bindu@user/bindu)
[01:50:30] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:51:38] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:52:03] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Read error: Connection reset by peer)
[01:54:25] *** Joins: fputs4 (~fputs@67.59.83.166)
[01:55:11] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[01:56:11] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 245 seconds)
[01:56:11] *** fputs4 is now known as fputs
[01:56:57] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 250 seconds)
[02:00:26] *** Joins: useretail (~useretail@185.132.19.151)
[02:00:26] *** Quits: useretail (~useretail@185.132.19.151) (Client Quit)
[02:00:33] *** Joins: useretail (~useretail@185.132.19.151)
[02:07:34] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[02:08:03] *** Joins: sedeki (~textual@user/sedeki)
[02:08:21] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:08:29] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[02:08:32] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:09:34] *** Joins: proller (~p@80.240.216.69)
[02:11:25] *** Joins: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[02:12:00] *** Quits: Inline (~Inline@aftr-37-201-240-2.unity-media.net) (Remote host closed the connection)
[02:13:48] *** Joins: gargus (~user@114.198.29.250)
[02:16:39] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[02:16:43] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:20:43] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[02:23:23] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 250 seconds)
[02:29:22] *** Quits: Enitin (~Enitin@82.102.22.85) (Read error: Connection reset by peer)
[02:29:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[02:31:11] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Ping timeout: 245 seconds)
[02:32:46] *** Quits: pizdets (~pizdets@183.182.110.66) (Ping timeout: 250 seconds)
[02:33:26] *** Quits: Leone (~Leo@216.154.50.172) ()
[02:34:08] *** Joins: pizdets (~pizdets@183.182.110.253)
[02:34:33] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[02:35:00] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[02:37:24] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of hyperdimensional elves at https://indiedevs.net/)
[02:37:38] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:39:07] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:40:19] *** Joins: nuh^ (~nuh@68.101.58.90)
[02:46:48] *** Quits: bobb_ (~bobb_@dslb-092-074-251-151.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:51:45] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:53:47] <seninha> Hello, I have two classes A and B. A has a private member `B array[2];`, an array of two objects of class B. How can I access those members from an object A using getter functions?
[02:55:18] <RandomReader> what problem did you encounter when you tried?
[02:57:52] *** Quits: terminalpusher (~terminalp@2a01:586:2941:1:aeef:4407:c895:665b) (Remote host closed the connection)
[02:59:39] <seninha> I want to access the members' methods without being able to modify the array.
[03:00:12] <seninha> I could use `B* get_Bs() { return array; }`, but this will allow the user to change the elements of array.
[03:00:49] *** Quits: gargus (~user@114.198.29.250) (Quit: Leaving)
[03:01:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:04:25] <ville> return a pointer-/reference-to-const
[03:05:15] <seninha> btw, should I use `B* array[2]` or `B array[2]`?
[03:05:22] <seninha> as a member of A?
[03:05:32] <ville> seninha: we can't answer that
[03:08:22] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 256 seconds)
[03:08:36] <RandomReader> I would recommend making it    std::array<B, 2> member;
[03:08:44] <RandomReader> since that makes the ensuring syntax easier to reason about
[03:09:09] <RandomReader> const std::array<B, 2>& get_Bs() { return member; }
[03:09:26] <RandomReader> now the caller has a reference-to-const, which means they can look but not modify
[03:10:04] <seninha> here's my .cpp: https://0x0.st/-7Rn.cpp
[03:10:26] <RandomReader> whether A stores B objects or pointers-to-B-objects is an entirely separate question
[03:10:37] <seninha> I'm new to C++, but I know C and OOP (from Java).
[03:12:02] <seninha> I'm creating an implementation of a JezzBall/KBounce game. The Wall represents an element that will be placed at a position x,y. From this place two WallExtensions will be created and will be extended at each frame.
[03:12:11] <seninha> RandomReader: thanks, I'll use that.
[03:12:39] <seninha> Can you check my .cpp file? That's the first (big) project I do in C++.
[03:12:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:13:18] <seninha> This file (wall.cpp) is actualy two files (wall.hpp and wall.cpp) but I merged them into one for uploading.
[03:15:53] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:16:44] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Quit: Stable ZNC provider #bnc4you)
[03:18:23] <RandomReader> the code itself looks okay, but from a design standpoint the WallExtension seems to have a bit of an identity crisis
[03:18:47] <RandomReader> probably due to the terminology overlap between physics and C++
[03:19:30] <RandomReader> so first, there seems to be no reason for new/delete in this code, just store the WallExtensions directly, no pointers
[03:20:35] *** Quits: fassl (~fassl@2a02:8388:1987:9380:9040:a616:9640:3e9d) (Quit: Leaving)
[03:20:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:21:01] <RandomReader> but it's also a bit weird for a WallExtension to be in an unfinished, it almost looks like Wall's concern
[03:21:34] <RandomReader> will other code call get_Bs() and check .isconstructed() as part of normal use?
[03:21:52] <RandomReader> as in, that's not a problem, that's just normal use and it does different things based on the outcome?
[03:22:32] <seninha> Have you played jezzball (for windows) or KBounce (for KDE)?
[03:23:22] <RandomReader> hmm, no I haven't, which is odd because I definitely played with the Windows Entertainment Pack way back...
[03:23:35] <RandomReader> must have missed it
[03:23:41] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 245 seconds)
[03:24:45] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[03:24:54] <seninha> Like, after the user place a wall in the board, two extensions will extend from this point in two opposite directions. When a WallExtension hits something, this wall extension will be in the constructed state and will not be extended anymore.
[03:25:13] <seninha> And a Wall will be constructed when both its extensions are in the constructed state.
[03:25:35] <seninha> The code that uses Wall will be responsible to check whether a collision happens.
[03:26:00] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[03:26:03] <seninha> btw, if you have java you can understand better what I'm trying to implement: https://github.com/phillbush/jbounce
[03:26:45] <seninha> I implemented this very game for my OOP classes in the uni in Java.
[03:27:01] <seninha> And now I want to reimplement it in C++, using C++ features.
[03:27:18] <RandomReader> ok
[03:28:14] <RandomReader> would have to think about this more (and probably actually implement it myself to figure it out), but what's making me pause is essentially encapsulation / separation of concerns
[03:28:30] <RandomReader> it seems more like a WallExtension is actually just a piece of Wall's state, not an independent object
[03:28:38] <seninha> I see
[03:28:56] <RandomReader> it's ok to separate it, there are two of them so having a type for that data is fine of course
[03:29:23] <RandomReader> but it's almost like *just* data for Wall to operate on, instead of something that needs behavior to be private
[03:29:41] <RandomReader> but again I'd have to think about it more to see how I might organize it
[03:29:47] <RandomReader> other than that pause/feeling, it seems fine
[03:29:58] <seninha> I think you're right.
[03:30:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[03:30:29] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:31:04] *** Quits: Pwnna (~Pwnna@mushroom.thekks.net) (Quit: Bye)
[03:31:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:31:17] <RandomReader> anyway, that might influence the kind of getter on Wall you end up with, so related to your original question
[03:32:29] <RandomReader> e.g. if it's collision detection, maybe you don't need to expose WallExtension, just return a pair of line coordinates directly to test against
[03:32:43] *** Joins: rgrinberg (~textual@200.5.63.76)
[03:32:51] *** Joins: presonic (~presonic@111-22-237-24.gci.net)
[03:32:57] <RandomReader> (or maybe the new WallExtension after reorganization is just bare coordinates, I dunno)
[03:33:07] <RandomReader> that's vague, but hopefully that makes some kind of sense
[03:34:57] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 256 seconds)
[03:34:59] <seninha> yeah thanks!
[03:35:12] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:35:36] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:38:57] <seninha> btw, here's the other implementation of the game if you want to check it. It's for Unix/KDE (may be packaged in your distro repo, if you use linux): https://github.com/KDE/kbounce
[03:41:09] <RandomReader> cool thanks
[03:41:56] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 268 seconds)
[03:45:38] *** Quits: essial (~essial@8.9.230.82) (Quit: Textual IRC Client: www.textualapp.com)
[04:00:34] *** Joins: troller (~p@80.240.216.69)
[04:00:34] *** Joins: Soni (~quassel@autistic.space)
[04:00:55] *** Quits: proller (~p@80.240.216.69) (Read error: Connection reset by peer)
[04:01:41] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[04:01:42] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9a7:b79a:8640:c125) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:02:10] *** Quits: manuels (~manuel@80.211.205.88) (Quit: Ping timeout (120 seconds))
[04:03:44] *** Joins: bindu_ (~bindu@user/bindu)
[04:04:15] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[04:05:20] *** Joins: manuels (~manuel@80.211.205.88)
[04:05:35] *** bindu_ is now known as bindu
[04:07:24] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:11:56] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:17:42] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:20:18] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[04:23:44] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[04:29:05] *** Joins: chenqisu1 (~03cia7d@183.217.200.156)
[04:29:20] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[04:38:09] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[04:41:47] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:41:47] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:42:09] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:42:09] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:42:31] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:42:32] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:42:53] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:42:54] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:43:08] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:43:16] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:43:17] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:43:17] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (K-Lined)
[04:45:04] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:45:48] *** Quits: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[04:45:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[04:46:24] *** Quits: rgrinberg (~textual@200.5.63.76) (Ping timeout: 256 seconds)
[04:48:23] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[04:50:42] *** Joins: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com)
[04:52:32] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[04:57:07] *** Joins: nostar (~nostar@68.51.221.108)
[04:59:56] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 245 seconds)
[05:19:49] *** Joins: malloy (~jimery@116.30.222.115)
[05:25:29] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[05:26:01] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[05:38:45] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:38:53] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:38:53] *** ChanServ sets mode: +v npaperbot
[05:46:11] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[05:50:17] *** Joins: essial (~essial@8.9.230.82)
[05:52:22] *** Joins: Atlas667 (~Atlas667@193.27.12.10)
[05:53:26] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[05:53:57] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 265 seconds)
[05:55:15] *** Joins: ferdna (~ferdna@user/ferdna)
[06:02:04] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:02:58] *** Quits: Atlas667 (~Atlas667@193.27.12.10) (Read error: Connection reset by peer)
[06:04:56] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[06:06:44] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[06:06:56] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[06:09:28] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[06:15:40] *** Joins: comlord (~Thunderbi@121.227.116.10)
[06:23:21] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[06:26:49] *** Quits: KAHR-Alpha_ (~Alpha@2a01cb0d024a6600d8e44444a82923f2.ipv6.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[06:28:20] *** Quits: comlord (~Thunderbi@121.227.116.10) (Quit: comlord)
[06:28:38] *** Joins: comlord (~Thunderbi@121.227.116.10)
[06:34:34] *** Joins: Cahaan_ (~Cahaan@user/cahaan)
[06:38:55] *** Quits: Cahaan (~Cahaan@user/cahaan) (Ping timeout: 268 seconds)
[06:40:18] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 256 seconds)
[06:40:24] *** Cahaan_ is now known as Cahaan
[06:40:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:43:18] *** Joins: comlord (~Thunderbi@121.227.116.10)
[06:45:05] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:45:28] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[06:48:58] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:52:02] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[06:52:55] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 265 seconds)
[06:59:00] *** Quits: chenqisu1 (~03cia7d@183.217.200.156) (Remote host closed the connection)
[07:00:59] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:11:31] *** Joins: tbcr- (~tbcr@107.13.189.161)
[07:12:36] *** Quits: tbcr_ (~tbcr@107.13.189.161) (Ping timeout: 256 seconds)
[07:19:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[07:21:26] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[07:28:18] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:9228:cfe1:fa95:263)
[07:44:52] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[07:44:57] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[07:45:12] *** Joins: ckdCreations (~ckdCreati@147.55.130.34)
[07:46:34] <fluter> hi, i just got this book, but i found big problem, it is more than 1000 pages, but it doesn't cover templates, why???
[07:46:36] <fluter> https://www.amazon.com/Programming-Principles-Practice-Using-2nd/dp/0321992784/ref=sr_1_1?crid=2K7WQ0DX72F87&keywords=programming+principles+and+practice+using+c%2B%2B&qid=1638159291&qsid=144-1953248-9423156&sprefix=programming+prin%2Caps%2C371&sr=8-1&sres=0321992784%2C0321543726%2C620056308X%2C1505336481%2C1305109910%2C0789757745%2C1838648577%2C1943872279%2C1593278888%2CB07FW7P3D3%2C152190555X%2C1838
[07:46:38] <fluter> 554599%2C1838824952%2C1430261935%2C0321563840%2C149874673X&srpt=ABIS_BOOK
[07:53:18] <RandomReader> chapter 19
[07:55:56] *** Quits: essial (~essial@8.9.230.82) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[07:56:11] <fluter> a few pages to describe how to make a vector
[07:56:15] <fluter> too short
[07:56:37] <fluter> i wanna read about everything template, partial sepcialization, etc
[07:56:41] <RandomReader> it *is* an introductory book .. full coverage of just templates and related programming techniques would be a few hundred pages, there are other books for that
[07:56:48] *** Quits: tbcr- (~tbcr@107.13.189.161) (Ping timeout: 256 seconds)
[07:57:12] <fluter> RandomReader: what are good books for templates?
[07:57:13] <RandomReader> there should be on the book list, Templates The Complete Guide I think?
[07:57:15] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Quit: okbye)
[07:57:17] <RandomReader> !books
[07:57:18] <nolyc> A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
[07:57:34] <fluter> i was wrong because i see this is 1300~pages, i thought it's not an intrudctory book :(
[07:57:46] <fluter> i book it for the black friday discount :-(
[07:57:51] <fluter> *bought
[07:57:53] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:58:47] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 250 seconds)
[08:01:38] <RandomReader> the set of concepts related to C++ is pretty massive, it's not a one-book kind of language
[08:03:29] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 265 seconds)
[08:04:55] <fluter> how many pages needed to make a complate-cover-all c++ book?
[08:05:52] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3086:126b:ad23:6938)
[08:05:52] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3086:126b:ad23:6938) (Changing host)
[08:05:52] *** Joins: skapata (~Skapata@user/skapata)
[08:07:39] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[08:07:55] <RandomReader> dunno, but probably enough to need one of those special display cases because it's physically impossible to use a traditional binding
[08:08:55] <RandomReader> I would also be amazed if it were *ever* up to date, with the amount of editing required...
[08:09:34] <Hello71> at least 2x TAOCP
[08:10:21] *** Quits: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[08:12:56] *** Joins: essial (~essial@2a09:bac0:27::809:e652)
[08:13:09] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:14:23] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[08:15:26] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[08:15:27] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (Ping timeout: 264 seconds)
[08:16:16] *** Joins: nohit (sid334887@id-334887.tinside.irccloud.com)
[08:18:13] <fluter> lol
[08:18:39] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[08:20:53] *** Joins: Guest24 (~Guest24@103.120.30.60)
[08:22:30] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 265 seconds)
[08:22:39] *** Quits: essial (~essial@2a09:bac0:27::809:e652) (Quit: Textual IRC Client: www.textualapp.com)
[08:26:46] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[08:28:21] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:30:24] *** Quits: Guest24 (~Guest24@103.120.30.60) (Quit: Client closed)
[08:35:37] *** Joins: rgrinberg (~textual@200.5.63.76)
[08:44:22] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[08:44:22] *** internalsplit_of is now known as givemeyourpies
[08:44:22] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[08:44:44] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[08:48:53] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[08:49:18] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[08:50:18] *** Joins: seninha (~seninha@user/seninha)
[08:51:56] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[08:52:35] *** Joins: malloy (~jimery@116.30.222.115)
[08:53:52] *** Joins: wolf2k_huh (~wolfman20@2600:1700:3211:4140:348d:300c:c36b:9213)
[08:55:38] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[08:58:03] *** Quits: wolfman2000 (~wolfman20@2600:1700:3211:4140:4541:d9ed:763e:3ecc) (Ping timeout: 264 seconds)
[09:03:11] *** Joins: reumeth (~reumeth@user/reumeth)
[09:11:27] *** Joins: hans_ (~hans@36.84-48-255.nextgentel.com)
[09:11:36] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 245 seconds)
[09:14:57] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 256 seconds)
[09:20:02] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:24:48] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[09:25:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:29:08] *** Atque is now known as hammond
[09:29:17] *** hammond is now known as Atque
[09:32:02] *** Quits: Brewster (~Brewster@104.145.226.5) (*.net *.split)
[09:32:02] *** Quits: randm (~randm@user/randm) (*.net *.split)
[09:32:02] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[09:32:02] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[09:32:02] *** Quits: sonic (~sonic@user/sonic) (*.net *.split)
[09:32:02] *** Quits: urdh (~urdh@user/urdh) (*.net *.split)
[09:32:02] *** Quits: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com) (*.net *.split)
[09:32:02] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[09:32:02] *** Quits: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com) (*.net *.split)
[09:32:03] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[09:32:03] *** Quits: raekye (~raekye@creatifcubed.com) (*.net *.split)
[09:32:03] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[09:32:03] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[09:32:03] *** Quits: undeclared (nullx@user/undeclared) (*.net *.split)
[09:32:03] *** Quits: xisop (~xisop@bnull.net) (*.net *.split)
[09:32:03] *** Quits: Dijky_ (~Dijky@user/dijky) (*.net *.split)
[09:32:03] *** Quits: dextaa (~DV@user/dextaa) (*.net *.split)
[09:32:03] *** Quits: paperManu (~paperManu@138.197.128.151) (*.net *.split)
[09:32:03] *** Quits: hirion (~hirion@user/hirion) (*.net *.split)
[09:32:03] *** Quits: merry (~mary@user/merry) (*.net *.split)
[09:32:03] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (*.net *.split)
[09:32:03] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:32:03] *** Quits: nolyc (~nolyc@tinodidriksen.com) (*.net *.split)
[09:32:03] *** Quits: izabera (izabera@user/izabera) (*.net *.split)
[09:32:03] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[09:32:03] *** Quits: tobs (~tobs@taboege.de) (*.net *.split)
[09:32:03] *** Quits: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de) (*.net *.split)
[09:32:03] *** Quits: m0shbear_ (~nope@205.185.119.231) (*.net *.split)
[09:32:03] *** Quits: voirnox (~voirnox@xor.moe) (*.net *.split)
[09:32:03] *** Quits: zinc (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[09:32:10] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[09:32:10] *** Joins: m0shbear (~nope@205.185.119.231)
[09:32:11] *** Joins: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de)
[09:32:12] *** Joins: tobs (~tobs@taboege.de)
[09:32:18] *** Joins: Brewster (~Brewster@104.145.226.5)
[09:32:20] *** Joins: Lea2 (~learath2@user/learath2)
[09:32:24] *** Joins: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com)
[09:32:26] *** Joins: paperManu (~paperManu@138.197.128.151)
[09:32:30] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[09:32:35] *** Joins: hirion (~hirion@all-simple.com)
[09:32:35] *** Joins: sonic (~sonic@c-76-108-224-224.hsd1.fl.comcast.net)
[09:32:44] *** Joins: raekye (~raekye@creatifcubed.com)
[09:32:47] *** Quits: hirion (~hirion@all-simple.com) (Signing in (hirion))
[09:32:47] *** Joins: hirion (~hirion@user/hirion)
[09:32:47] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[09:32:48] *** Joins: urdh (~urdh@user/urdh)
[09:32:48] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[09:32:51] *** Joins: dextaa (~DV@user/dextaa)
[09:32:56] *** Quits: sonic (~sonic@c-76-108-224-224.hsd1.fl.comcast.net) (Signing in (sonic))
[09:32:56] *** Joins: sonic (~sonic@user/sonic)
[09:33:01] *** Joins: undeclared (nullx@user/undeclared)
[09:33:03] *** Joins: Dijky (~Dijky@user/dijky)
[09:33:06] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[09:33:08] *** Joins: cncr04s (~cncr04s@afxr.net)
[09:33:26] *** Joins: deepy (deepy@user/deepy)
[09:33:27] *** Joins: randm (~randm@user/randm)
[09:33:32] *** Joins: nolyc (~nolyc@tinodidriksen.com)
[09:33:34] *** ChanServ sets mode: +v nolyc
[09:33:34] *** Joins: voirnox (~voirnox@xor.moe)
[09:33:38] *** Joins: merry (~mary@user/merry)
[09:34:11] *** Joins: Chaser (~Chaser@user/chaser)
[09:34:18] *** Joins: mattgirv (quassel@apps.fossgalaxy.com)
[09:34:45] *** Joins: CoderCharmander (~CoderChar@2A001110013ACA8A00000049936DC301.mobile.pool.telekom.hu)
[09:36:19] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:36:24] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (*.net *.split)
[09:36:24] *** Quits: les (znc@user/les) (*.net *.split)
[09:36:24] *** Quits: anyone (~filler@a4.inai.de) (*.net *.split)
[09:36:24] *** Quits: TimWolla (~timwolla@2a01:4f8:150:6153:beef::6667) (*.net *.split)
[09:36:24] *** Quits: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482) (*.net *.split)
[09:36:24] *** Quits: scjg (~scjgmatri@2001:470:69fc:105::f5d6) (*.net *.split)
[09:36:24] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (*.net *.split)
[09:36:24] *** Quits: Ameisen (~ameisen@137.184.136.18) (*.net *.split)
[09:36:24] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[09:36:25] *** Quits: markand (~markand@markand.fr) (*.net *.split)
[09:36:25] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[09:36:25] *** Quits: markmarkmark (~mark@user/markmarkmark) (*.net *.split)
[09:36:25] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[09:36:33] *** Joins: theglass (~glass@246.ip-137-74-113.eu)
[09:36:33] *** Joins: TimWolla (~timwolla@2a01:4f8:150:6153:beef::6667)
[09:36:35] *** Joins: Isthmusi (~Isthmus@user/isveni)
[09:36:37] *** Joins: anyone (~filler@a4.inai.de)
[09:36:37] *** Quits: theglass (~glass@246.ip-137-74-113.eu) (Changing host)
[09:36:37] *** Joins: theglass (~glass@user/theglass)
[09:36:38] *** Joins: markand (~markand@markand.fr)
[09:36:41] *** Joins: les (znc@user/les)
[09:36:47] *** Joins: ElementW (~tungsten@hoodie.elementw.net)
[09:37:06] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[09:37:09] *** Joins: markmarkmark (~mark@user/markmarkmark)
[09:37:10] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[09:37:19] *** Joins: xisop (~xisop@bnull.net)
[09:37:19] *** Joins: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com)
[09:37:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:308e:319e:975d:7c7a)
[09:37:33] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[09:38:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:38:48] *** Joins: scjg (~scjgmatri@2001:470:69fc:105::f5d6)
[09:38:53] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:38:53] *** ChanServ sets mode: +v npaperbot
[09:40:27] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (Ping timeout: 256 seconds)
[09:40:27] *** Quits: Chaser (~Chaser@user/chaser) (Ping timeout: 256 seconds)
[09:40:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[09:40:58] *** Joins: mattgirv (quassel@apps.fossgalaxy.com)
[09:42:25] *** Joins: Chaser (~Chaser@user/chaser)
[09:42:26] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:9228:cfe1:fa95:263) (Ping timeout: 245 seconds)
[09:43:08] *** Joins: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482)
[09:44:08] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:8286:902d:5843:4899)
[09:44:37] *** Quits: CoderCharmander (~CoderChar@2A001110013ACA8A00000049936DC301.mobile.pool.telekom.hu) (Remote host closed the connection)
[09:52:57] *** Joins: pulse (~pulse@user/pulse)
[09:53:17] *** Joins: Jayi (~Jayi@2603-8001-a301-2f00-0000-0000-0000-0001.res6.spectrum.com)
[09:56:00] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:56:52] *** Quits: Jayi (~Jayi@2603-8001-a301-2f00-0000-0000-0000-0001.res6.spectrum.com) (Client Quit)
[10:03:30] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:06:57] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:11:00] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (Quit: quit)
[10:11:32] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[10:11:53] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:12:56] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[10:15:22] *** Joins: ThatLinuxGuy (~sand49@2001:8003:8431:d200:220b:84b2:a334:cbad)
[10:18:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[10:26:33] *** Quits: reset (~reset@user/reset) (Ping timeout: 265 seconds)
[10:27:33] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:29:04] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:8286:902d:5843:4899) (Remote host closed the connection)
[10:29:15] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:29:24] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:7be7:ac0b:a1c7:ee84)
[10:29:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:30:00] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:32:05] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[10:32:06] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Client Quit)
[10:34:47] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 250 seconds)
[10:44:56] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[10:46:47] *** Joins: reset (~reset@user/reset)
[10:51:58] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[10:52:24] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[10:56:11] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[10:57:05] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[11:00:37] *** Joins: rendar (~rendar@user/rendar)
[11:01:56] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[11:01:57] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[11:02:17] *** Joins: spithash (~spithash@user/spithash)
[11:04:37] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:04:43] *** Joins: teepee (~teepee@openscad/teepee)
[11:04:48] *** Joins: frost (~frost@user/frost)
[11:05:56] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:07:47] *** Quits: ThatLinuxGuy (~sand49@2001:8003:8431:d200:220b:84b2:a334:cbad) (Quit: Konversation terminated!)
[11:08:34] *** Joins: ThatLinuxGuy (~sand49@2001:8003:8431:d200:220b:84b2:a334:cbad)
[11:09:51] *** Joins: AmR (~AmREiSa@156.199.223.24)
[11:09:55] *** Quits: chozorho (~chozorho@2601:146:300:c30::17a1) (Quit: good night)
[11:11:51] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Read error: Connection reset by peer)
[11:15:54] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[11:16:01] *** Quits: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de) (Quit: manx)
[11:16:12] *** Joins: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de)
[11:20:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:21:40] *** Joins: hightower2 (~hightower@213.147.110.20)
[11:24:49] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[11:24:56] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[11:25:13] <hackinghorn> hi, can a Makefile run another cmake
[11:25:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[11:27:30] <hackinghorn> also, if I create an overflow like `int x = 1 shl 32 - 2`, the compiler doesnt detect it, it just does constant folding
[11:29:41] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:7be7:ac0b:a1c7:ee84) (Quit: Leaving)
[11:29:45] <ville> !give hackinghorn general
[11:29:46] <nolyc> hackinghorn: #C++-general for algorithms, libraries, practices, projects, tools etc.
[11:30:10] <hackinghorn> ahh thanks
[11:30:11] *** Joins: masterbuilder (~user@user/masterbuilder)
[11:30:39] <bpalmer> hackinghorn: shifting a 32-bit number left by 32-bits is undefined behavior.
[11:31:46] <bpalmer> oh, actually, hold on; this might be a C and C++ difference.
[11:32:03] <hackinghorn> ohh
[11:32:22] <bpalmer> no, I'm wrong; for signed types (which int is), it's undefined.
[11:34:55] *** Quits: Spirit532 (~Spirit532@178.127.124.22) (Ping timeout: 256 seconds)
[11:36:12] *** Joins: luizfrds1 (~Luiz@152.250.243.147)
[11:39:13] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 265 seconds)
[11:41:47] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[11:42:20] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[11:46:14] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[11:51:07] *** Joins: Tas-sos (~Tas-sos@ppp005054041212.access.hol.gr)
[11:53:14] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[12:01:05] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[12:06:18] *** Joins: andreasbuhr (~quassel@p548ddf1c.dip0.t-ipconnect.de)
[12:10:48] *** Joins: Spirit532 (~Spirit532@mm-254-35-84-93.mgts.dynamic.pppoe.byfly.by)
[12:11:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[12:12:18] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[12:14:14] *** Joins: evangeline (~Eleanor@178.79.105.181)
[12:16:01] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:e023:4150:b4fb:bb46)
[12:16:39] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[12:20:39] *** Joins: neure (~TimoSuora@dzpbkmrkyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[12:23:14] *** Quits: ThatLinuxGuy (~sand49@2001:8003:8431:d200:220b:84b2:a334:cbad) (Quit: Konversation terminated!)
[12:24:18] *** RazielZ is now known as Raziel
[12:35:13] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[12:36:25] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[12:37:42] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:39:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:39:15] *** Joins: robod34 (Username@79.113.195.239)
[12:39:32] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[12:40:05] *** Quits: rahl (~rahl@102.114.10.241) (Ping timeout: 256 seconds)
[12:41:43] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[12:41:46] *** Joins: rahl (~rahl@102.114.49.104)
[12:41:47] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[12:49:33] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:29] *** Quits: Enitin (~Enitin@82.102.22.86) (Read error: Connection reset by peer)
[12:51:42] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[12:51:50] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:56:08] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[12:57:35] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[12:59:46] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:03:52] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[13:07:36] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:12:57] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[13:13:51] *** Joins: furrymcgee (~devuan@cgn-89-1-209-86.nc.de)
[13:14:01] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:14:08] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[13:15:22] *** Joins: PJBoy (~PJBoy@2a00:23c7:8302:b301:e088:9b70:3747:ba21)
[13:15:22] *** Quits: PJBoy (~PJBoy@2a00:23c7:8302:b301:e088:9b70:3747:ba21) (Changing host)
[13:15:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:15:51] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[13:16:13] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[13:24:09] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:25:05] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[13:25:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:27:42] *** Joins: plastico (~plastico@neomutt/plastico)
[13:28:39] *** Joins: Burgundy (~yomon@79.115.213.171)
[13:38:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:38:53] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:38:53] *** ChanServ sets mode: +v npaperbot
[13:41:01] *** Joins: xkuru (~xkuru@user/xkuru)
[13:43:55] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 265 seconds)
[13:45:41] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[13:47:46] *** Joins: bpalmer` (~user@user/bpalmer)
[13:48:06] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[13:48:29] *** Quits: bpalmer (~user@user/bpalmer) (Killed (NickServ (GHOST command used by bpalmer`)))
[13:48:33] *** bpalmer` is now known as bpalmer
[13:50:25] *** Joins: meicceli (meicceli@kapsi.fi)
[13:51:15] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[13:54:38] *** Joins: letto2 (~letto@188.25.118.240)
[13:55:31] *** Quits: letto (~letto@86.120.85.133) (Ping timeout: 268 seconds)
[13:56:40] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[13:59:49] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:00:59] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 252 seconds)
[14:01:53] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[14:02:52] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[14:06:34] *** Joins: meicceli (meicceli@kapsi.fi)
[14:07:38] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[14:08:04] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:e023:4150:b4fb:bb46) (Ping timeout: 264 seconds)
[14:08:44] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:28b8:36c2:12d8:724e)
[14:10:18] *** Quits: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9) (Changing host)
[14:10:18] *** Joins: izabera (izabera@user/izabera)
[14:11:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:14:58] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[14:16:16] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[14:16:53] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[14:16:59] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:17:11] *** Joins: cyber2f08 (~cyber2f08@114.79.19.156)
[14:17:20] *** Quits: nuh^ (~nuh@68.101.58.90) (Remote host closed the connection)
[14:20:00] *** Joins: trcc (~trcc@users-1190.st.net.au.dk)
[14:20:47] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[14:22:52] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[14:28:28] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:28b8:36c2:12d8:724e) (Ping timeout: 264 seconds)
[14:29:21] *** Joins: Colt (~Colt@user/colt)
[14:29:38] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:f02f:e48f:7ae8:ca91)
[14:32:45] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:36:16] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[14:37:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[14:38:05] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:38:12] *** Joins: gucci (~i.am@189.58.156.81.dynamic.adsl.gvt.net.br)
[14:38:39] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:39:34] *** Joins: faiq (~cyber2f08@114.79.22.176)
[14:39:54] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[14:39:59] *** Quits: faiq (~cyber2f08@114.79.22.176) (Client Quit)
[14:41:40] *** Quits: cyber2f08 (~cyber2f08@114.79.19.156) (Ping timeout: 264 seconds)
[14:45:33] *** Joins: cursey (~cursey@user/cursey)
[14:46:27] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:47:48] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:51:38] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[15:07:28] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Ping timeout: 264 seconds)
[15:12:06] *** Joins: soman (~soman@83.139.147.234)
[15:13:22] *** Quits: neure (~TimoSuora@dzpbkmrkyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[15:14:49] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[15:15:07] *** Joins: netpipe (~netpipe@user/netpipe)
[15:16:20] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3)
[15:21:52] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[15:23:42] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[15:24:26] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:25:31] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:28:22] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[15:29:07] *** Quits: soman (~soman@83.139.147.234) (Quit: Client closed)
[15:29:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:29:36] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[15:29:54] *** Joins: JohnMS_WORK (~kvirc@185.73.229.242)
[15:32:01] *** Joins: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[15:33:56] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:34:52] *** Joins: seninha (~seninha@user/seninha)
[15:34:53] *** Quits: CalamityToo (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (Ping timeout: 250 seconds)
[15:37:05] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:38:12] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:38:54] *** Quits: hans_ (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[15:39:47] *** Joins: hans_ (~hans@36.84-48-255.nextgentel.com)
[15:41:46] *** Joins: neure (~TimoSuora@dzpbkmrkyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[15:42:00] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[15:42:37] *** Joins: xkuru (~xkuru@user/xkuru)
[15:44:36] *** Joins: sav (~savio@177.12.48.155)
[15:44:59] *** sav is now known as Guest7878
[15:46:36] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[15:47:22] *** Quits: Guest7878 (~savio@177.12.48.155) (Client Quit)
[15:51:47] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:58:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:58:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:00:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:01:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:02:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:07:13] *** Quits: neure (~TimoSuora@dzpbkmrkyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[16:13:22] *** Joins: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[16:18:01] *** Joins: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3)
[16:19:17] *** Quits: nicholaus04 (~nicholaus@172.58.22.198) (Ping timeout: 250 seconds)
[16:21:28] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:2920:4094:8818:7c51)
[16:23:04] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[16:23:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:26:15] *** Joins: troller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[16:34:23] *** Joins: mel (~caramel@user/caramel)
[16:35:16] *** Joins: Leone (~Leo@216.154.50.172)
[16:37:34] *** Quits: caramel_ (~caramel@user/caramel) (Ping timeout: 256 seconds)
[16:37:40] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:38:06] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[16:38:42] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[16:43:14] *** Joins: constxd (~brad@192.75.101.164)
[16:52:52] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Ping timeout: 256 seconds)
[16:53:08] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[16:53:14] *** Joins: Dru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[16:56:13] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 256 seconds)
[16:56:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[16:56:40] *** Quits: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 264 seconds)
[16:58:35] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:59:34] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:00:02] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:00:27] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[17:01:59] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:03:45] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:04:35] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:f02f:e48f:7ae8:ca91) (Quit: Leaving)
[17:07:15] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:14:25] *** Joins: jschaub (~jschaub@pd907fca9.dip0.t-ipconnect.de)
[17:14:26] <jschaub> hello all
[17:15:00] <jschaub> if i have a    template<auto X> class Value;   and wanna pass a    Value<&Class::getFoo>;   how can I best disambiguate the case where "getFoo" is overloaded  for const/non-const ?
[17:15:22] <jschaub> there's no   template<nonconst auto X> class Value;  unfortunately :(
[17:16:04] <jschaub> neither is there a     template<auto (auto::*)(auto ...)> class Value;  as far as I can see, which I could use to say "non-const member function"
[17:16:51] <CarloWood> I thought you could only pass types or integral values as template parameter.
[17:17:01] <CarloWood> What is &Class::getFoo ?
[17:17:43] *** Joins: rito_ (~rito_gh@45.112.243.47)
[17:18:41] <jschaub> hm maybe I can do something with   constexpr functions:    template<typename R, typename C, typename ...Args>  constexpr R (C::*nonconst(R (C::*v)(Args...)))(Args...);  not sure whether the syntax works
[17:18:44] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[17:19:27] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Ping timeout: 256 seconds)
[17:20:01] <jschaub> << TYPE(nonconst(&X::get)); template<typename R, typename C, typename ...Args>  constexpr R (C::*nonconst(R (C::*v)(Args...)))(Args...) { return v; } class X { public: int get() const; int get(); };
[17:20:02] <geordi> prvalue int (X::*)()
[17:20:04] <jschaub> nice
[17:20:22] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[17:20:23] <riv> what's (X::*?
[17:22:54] <PJBoy> pointer to data member of class X
[17:22:59] *** Lea2 is now known as Learath2
[17:23:26] <PJBoy> or pointer to member function of class X in the above case
[17:23:35] <riv> I see
[17:26:28] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[17:28:40] <jschaub> if you are in doubt, just ask geordi
[17:29:09] <jschaub> << TYPE_DESC<int(X::*)()>; class X { };
[17:29:09] <geordi> pointer to nullary member function of class X returning an integer
[17:29:58] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[17:30:15] <riv> cool!
[17:30:47] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[17:31:00] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:32:34] <PJBoy> I tricked geordi out not too long ago
[17:34:24] <PJBoy> << TYPE_DESC<int(X::*)() &>; class X { };
[17:34:25] <geordi> pointer to data member of class X of type int() &
[17:35:01] <anyone> c++decl> explain int(X::*a)() &
[17:35:01] <anyone> declare a as pointer to member of class X reference member function returning int
[17:35:15] <PJBoy> that's more like it
[17:35:18] <PJBoy> also
[17:35:30] <jschaub> wrong too
[17:35:33] <PJBoy> << TYPE_DESC<void() const>;
[17:35:33] <geordi> void() const
[17:35:51] <anyone> jschaub: cool, care to submit a bug report to https://github.com/paul-j-lucas/cdecl ?
[17:35:57] <PJBoy> it's not wrong is it?
[17:36:19] <jschaub> it looks as though it thought it's a data member of reference type
[17:36:52] <PJBoy> ah I didn't read it that way
[17:36:54] <jschaub> seems like it'S missing some partial specs
[17:36:57] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[17:37:09] <PJBoy> looks like "pointer to member of class X" "reference member function" to me
[17:37:35] <PJBoy> no "data" anywhere
[17:37:48] <jschaub> not sure what a "reference member function" is though
[17:38:06] <jschaub> wonder what it says for   &&
[17:38:08] <PJBoy> like `struct X { int f() &; };`
[17:38:22] <anyone> declare a as pointer to member of class X rvalue reference member function returning int
[17:38:40] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[17:38:47] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:38:53] <PJBoy> << TYPE<decltype(&X::f)>; struct X { int f() &; };
[17:38:53] <geordi> int (X::*)() &
[17:38:54] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:38:54] *** ChanServ sets mode: +v npaperbot
[17:38:57] <jschaub> hm would expect something like "lvalue-ref-qualified member function" or something.  not sure how it's officially called in the spec
[17:39:14] <anyone> the output looks correct per se, just the wording may be off; yes, lvalue-ref-qualified sounds more intuitive
[17:39:18] <PJBoy> what does it do for `void() const`?
[17:39:21] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:39:49] <anyone> install cdecl from github - or your distro - and try? :D
[17:39:59] <PJBoy> I'm not that curious
[17:41:01] <anyone> your loss
[17:42:31] <PJBoy> well I had to choose between losing time or losing out on solving my curiosity
[17:42:41] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 256 seconds)
[17:42:43] <PJBoy> either way you can argue I have acquired a loss
[17:43:09] <CarloWood> It was a lose-lose situation. Everyone lost!
[17:43:48] *** Quits: troller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Remote host closed the connection)
[17:47:02] *** Joins: proller (~p@2a02:6b8:0:40c:bc0:572f:2e9f:7817)
[17:47:53] *** Joins: reumeth (~reumeth@user/reumeth)
[17:48:44] <anyone> gee thanks PJBoy for ruining it for everyone
[17:49:14] <PJBoy> ruining what?
[17:49:19] <CarloWood> it
[17:49:28] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 264 seconds)
[17:50:36] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[17:51:00] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[17:52:29] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:54:45] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:55:03] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:55:21] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3)
[17:56:32] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Client Quit)
[17:59:08] *** Joins: bumbar (~bumbar@188-230-147-76.dynamic.t-2.net)
[18:02:26] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:10:28] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[18:14:55] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[18:15:16] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[18:17:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:19:23] *** Joins: jkaye (~jkaye@2601:281:8300:7530:70fe:f118:dc91:2d9c)
[18:20:04] <CarloWood> I need some construct where a user class U1 derived from B1 can override virtual functions and has access to everything in its base class. In other words:  class U1 : public B1.  However U2, which is derived from U1, should NOT have access to anything.
[18:20:56] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[18:22:07] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[18:22:28] <CarloWood> { U1 u; cout << u.a(); } struct B1 { protected: int b1; }; struct U1 : protected B1 { protected: int u1; int a() { return b1; } };
[18:22:28] <geordi> error: 'int U1::a()' is protected within this context
[18:22:33] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:22:37] <CarloWood> duh
[18:22:56] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:25:52] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { protected: int u1; public: int a() { return b1; } }; struct U2 : private U1 { int a() { return U1::a(); } int a_fail() { return u1; } };
[18:25:53] <geordi> 42
[18:26:06] <CarloWood> Hmmpf, so a_fail() still compiles
[18:26:47] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:27:37] <CarloWood> geordi: replace return u1 with return b1
[18:27:37] <geordi> 42
[18:29:24] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3)
[18:32:12] *** night_wulfe_ is now known as night_wulfe
[18:32:34] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:34:04] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[18:34:45] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:35:26] *** Quits: JohnMS_WORK (~kvirc@185.73.229.242) (Ping timeout: 252 seconds)
[18:35:59] *** Quits: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3) (Ping timeout: 252 seconds)
[18:38:40] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Ping timeout: 264 seconds)
[18:38:44] *** Quits: trcc (~trcc@users-1190.st.net.au.dk) (Ping timeout: 252 seconds)
[18:39:52] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[18:45:52] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 264 seconds)
[18:46:40] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[18:47:49] *** Quits: dld (~dld@98.217.187.57) (Ping timeout: 268 seconds)
[18:48:47] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:57:00] *** Joins: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3)
[18:57:23] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:59:37] <Alipha> { Value<static_cast<void (Class::*)()>(&Class::getFoo)> v; } template<auto X> class Value {}; struct Class { void getFoo() {} void getFoo() const {} };  // jschaub, fyi
[18:59:37] <geordi>  
[19:01:17] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[19:01:48] <CarloWood> Seriously? :(
[19:01:51] <CarloWood> { cout << std::derived_from<B, A>; } struct A {}; struct B : private A {};
[19:01:51] <geordi> false
[19:03:22] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[19:03:35] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:04:10] <CarloWood> How can I write a concept that tests if a class is privately derived from A?
[19:05:04] <CarloWood> In fact, the demand is:
[19:05:17] <CarloWood> class RenderLoop : private task::VulkanWindow { ...
[19:05:30] <CarloWood> class Window : public linuxviewer::OS::Window, public RenderLoop { ...
[19:06:08] <CarloWood> I and I want to test that Window is derived from linuxviewer::OS::Window AND (indirectly, but privately from task::VulkanWindow.
[19:06:42] <CarloWood> RenderLoop is an in-between user-class. So I can't use its name in the concept.
[19:07:41] *** Quits: hans_ (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[19:08:26] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[19:08:48] *** Joins: hans_ (~hans@36.84-48-255.nextgentel.com)
[19:09:13] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[19:14:44] <jschaub> Alipha, appreciate your efforts, but the problem was solved above already!
[19:14:52] <jschaub> static_cast is too wordy
[19:16:03] <Alipha> jschaub: oh, indeed, your nonconst helper is way better. I just wasn't sure if you were aware of using static_cast
[19:19:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:21:14] <Alipha> { cout << std::is_base_of_v<A, B>; } struct A {}; struct B : private A {}; // CarloWood
[19:21:15] <geordi> true
[19:22:04] <CarloWood> Ah!
[19:22:35] <jschaub> https://stackoverflow.com/questions/2910979/how-does-is-base-of-work
[19:23:00] *** Joins: sa02irc (~mbax@058-099-244-077.ip-addr.inexio.net)
[19:23:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:23:31] <CarloWood>  { C c; cout << std::is_base_of_v<A, C>; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B { private: void foo() override final {} };
[19:23:31] <geordi> true
[19:23:35] <CarloWood> Awesome
[19:24:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:25:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:26:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:26:53] <CarloWood> Now what I am doing wrong? :/
[19:26:55] <CarloWood> template<typename T>
[19:26:55] <CarloWood> concept ConceptVulkanWindow = std::is_base_of<task::VulkanWindow, T> && std::is_base_of<linuxviewer::OS::Window, T>;
[19:27:01] *** Quits: andreasbuhr (~quassel@p548ddf1c.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:27:05] <CarloWood> That '&&' doesn't seem to work.
[19:27:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:27:51] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:28:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:29:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:29:43] <Alipha> CarloWood: you forgot the _v
[19:29:50] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Ping timeout: 256 seconds)
[19:29:52] <Alipha> std::is_base_of_v
[19:30:38] <CarloWood> Thank you <3
[19:30:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:31:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:32:29] *** Joins: sa02irc_ (~mbax@058-099-244-077.ip-addr.inexio.net)
[19:32:38] *** Quits: sa02irc (~mbax@058-099-244-077.ip-addr.inexio.net) (Ping timeout: 252 seconds)
[19:32:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:33:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:33:58] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[19:34:23] <CarloWood> Wow - all hell breaks lose with this private inheritance :(
[19:34:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:36:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:37:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:38:17] *** Quits: Dru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[19:38:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:39:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:39:52] *** Quits: hans_ (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 264 seconds)
[19:40:41] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:40:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:41:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:42:05] <anyone> then private inheritance probably wasn't for you
[19:42:18] <CarloWood> Great conclusion!
[19:42:43] <CarloWood> A+
[19:42:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:43:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:44:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:44:58] <anyone> a classic win-win situation :D
[19:45:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:46:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:48:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:49:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:50:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:51:25] *** Joins: Dru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[19:51:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:52:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:53:35] *** Quits: sa02irc_ (~mbax@058-099-244-077.ip-addr.inexio.net) (Ping timeout: 256 seconds)
[19:53:42] *** Joins: zoorat (~zoorat@gateway/tor-sasl/zoorat)
[19:53:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[19:54:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:55:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:57:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:57:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:59:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:00:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:01:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:01:30] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[20:01:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:03:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:04:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:05:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:05:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:06:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:07:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:08:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:09:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:10:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:10:33] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:10:35] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[20:11:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:12:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:13:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:13:18] <kaichiuchu> hi, I have an event-driven application with asio
[20:13:36] <kaichiuchu> should I really just be calling asio::post() all of the time, or should I implement something like the observer pattern
[20:13:44] <kaichiuchu> pretty nonspecific question but I have no idea how else to word it
[20:14:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:14:17] <kaichiuchu> the thing is I would need the whole application (including modules) to, for example, be able to be notified that the connection to 'x' was lost
[20:15:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:16:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:17:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:17:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (K-Lined)
[20:19:17] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[20:20:35] *** Quits: robod34 (Username@79.113.195.239) (Read error: Connection reset by peer)
[20:20:47] *** Joins: robod34 (Username@79.113.195.239)
[20:21:15] <kaichiuchu> and I think it would be kind of silly not to use asio::post() if I'm already using asio
[20:23:09] *** Quits: bumbar (~bumbar@188-230-147-76.dynamic.t-2.net) (Quit: Leaving)
[20:28:49] *** Quits: jschaub (~jschaub@pd907fca9.dip0.t-ipconnect.de) (Quit: Leaving)
[20:30:44] *** Joins: reumeth (~reumeth@user/reumeth)
[20:37:20] *** Joins: dld (~dld@2620:6e:6000:2900:4c8f:59ca:20e7:8c51)
[20:38:22] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[20:40:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[20:40:46] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[20:42:16] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 264 seconds)
[20:55:09] <SuperNintendoSUX> kaichiuchu: #C++-general
[20:55:25] <SuperNintendoSUX> aand you're already there
[20:55:37] <kaichiuchu> yeah
[20:55:39] <kaichiuchu> already discussing it
[20:56:01] <SuperNintendoSUX> nothing like jumping the gun before lunch
[20:57:11] <anyone> lunch can wait. https://me.me/i/all-right-one-last-comp-lation-and-this-should-work-11188607
[20:58:29] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:03:58] *** Quits: Skyfire (~pyon@user/pyon) (Quit: brb)
[21:04:52] *** Joins: unyu (~pyon@user/pyon)
[21:10:42] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[21:13:04] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[21:13:31] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[21:14:25] *** Quits: furrymcgee (~devuan@cgn-89-1-209-86.nc.de) (Quit: leaving)
[21:19:58] *** Joins: hans_ (~hans@36.84-48-255.nextgentel.com)
[21:21:11] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[21:21:15] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:25:23] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[21:25:31] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[21:28:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6dc1:f15c:f052:6c31)
[21:28:49] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6dc1:f15c:f052:6c31) (Changing host)
[21:28:49] *** Joins: skapata (~Skapata@user/skapata)
[21:33:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:34:28] *** Quits: jkaye (~jkaye@2601:281:8300:7530:70fe:f118:dc91:2d9c) (Ping timeout: 264 seconds)
[21:34:56] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:38:47] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:38:54] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:38:54] *** ChanServ sets mode: +v npaperbot
[21:40:08] *** Joins: jkaye (~jkaye@2601:281:8300:7530:7309:f677:c771:6123)
[21:43:38] *** Joins: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3)
[21:44:39] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 256 seconds)
[21:44:41] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[21:44:44] *** Parts: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) ()
[21:45:19] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[21:45:26] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:308e:319e:975d:7c7a) (Ping timeout: 268 seconds)
[21:46:49] *** Parts: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) ()
[21:46:55] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[21:47:08] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:853e:1440:14f7:dc92)
[21:48:49] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[21:57:45] *** Quits: fputs (~fputs@67.59.83.166) (Quit: The Lounge - https://thelounge.chat)
[21:59:40] *** Quits: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3) (Ping timeout: 264 seconds)
[22:01:44] *** Joins: fputs (~fputs@67.59.83.166)
[22:02:22] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[22:03:04] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[22:04:21] *** Joins: hightower2 (~hightower@213.147.110.20)
[22:05:04] *** Quits: proller (~p@2a02:6b8:0:40c:bc0:572f:2e9f:7817) (Ping timeout: 264 seconds)
[22:12:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:13:08] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:14:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:15:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of quantum tunnelers at https://indiedevs.net/)
[22:16:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:37] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:21:22] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:23:24] *** Joins: great_taste (~great_tas@190.32.235.20)
[22:30:04] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3)
[22:31:16] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[22:31:45] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:31:51] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[22:36:34] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:2177:3a09:de50:bfc3) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:49] *** Joins: QuaternionsRock (~Quaternio@76.191.39.82)
[22:44:40] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 264 seconds)
[22:49:28] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 264 seconds)
[22:52:33] *** Quits: zoorat (~zoorat@gateway/tor-sasl/zoorat) (Quit: Leaving)
[22:57:42] *** Joins: Linux_77 (~7Linux7@186.233.182.193)
[22:58:43] *** Joins: proller (~p@2a02:6b8:b081:8813::1:21)
[23:01:53] *** Quits: Linux77 (~7Linux7@186.233.182.193) (Ping timeout: 268 seconds)
[23:09:38] *** Joins: rgrinberg (~textual@201.191.195.218)
[23:19:29] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[23:27:47] *** Quits: rgrinberg (~textual@201.191.195.218) (Ping timeout: 256 seconds)
[23:27:58] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[23:28:32] *** Quits: Raziel (~Raziel@user/raziel) (Read error: Connection reset by peer)
[23:28:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[23:28:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[23:28:57] *** Joins: Raziel (~Raziel@user/raziel)
[23:31:07] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[23:31:17] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:32:29] *** Joins: anddam (~anddam@user/anddam)
[23:32:56] *** Quits: proller (~p@2a02:6b8:b081:8813::1:21) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: izabera (izabera@user/izabera) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 265 seconds)
[23:32:57] *** Quits: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: geeknix (~pi@2001:e68:5432:abd2:b9e4:e37d:3d09:4004) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: xq (~xq@user/xq) (Ping timeout: 265 seconds)
[23:33:32] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Ping timeout: 252 seconds)
[23:33:38] *** Quits: meicceli (meicceli@kapsi.fi) (Quit: WeeChat 3.0)
[23:33:50] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[23:33:57] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[23:36:23] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[23:36:52] *** Quits: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3) (Remote host closed the connection)
[23:37:09] *** Joins: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3)
[23:37:09] *** Quits: constxd (~brad@192.75.101.164) (Read error: Connection reset by peer)
[23:37:26] *** Joins: constxd (~brad@192.75.101.164)
[23:40:28] *** Joins: Betal (~Betal@user/betal)
[23:44:49] *** Joins: proller (~p@2a02:6b8:b081:8813::1:21)
[23:45:03] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[23:45:22] *** Joins: geeknix (~pi@2001:e68:5432:abd2:b9e4:e37d:3d09:4004)
[23:45:34] <anddam> hello, I am reading a the code for a logger class and I see roughly this https://gist.github.com/anddam/5bb3b322f74a13ff8d809ba01f745a63
[23:46:54] <anddam> I have a bit of familiarity with C but not C++, the Logger::m_Instance is assigned 0 outside the class definition because it's a static attribute, right?
[23:47:09] <anddam> is it correct for it to be 0 rather than NULL?
[23:47:14] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[23:47:50] <anyone> 0 is the old fashioned way
[23:48:10] *** Joins: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21)
[23:48:20] <anyone> you can tell it's terrible code by the throw() thing
[23:48:48] <SuperNintendoSUX> static data members need to be initialized in a translation unit
[23:48:54] <anddam> I wasn't even able to find what that mean, I only found reference to the (self-explanatory) try catch, with the throw to raise an exception
[23:49:00] <SuperNintendoSUX> and I would use nullptr instead of 0
[23:49:07] *** Quits: gucci (~i.am@189.58.156.81.dynamic.adsl.gvt.net.br) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:49:08] <SuperNintendoSUX> like line 4 is doing
[23:49:15] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[23:49:22] <anddam> I figure that means if an exception occurs in the functionâ€¦ then throw nothing?
[23:49:33] <SuperNintendoSUX> this is just a silly example of scott meyers's singleton
[23:49:33] *** Joins: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc)
[23:49:40] <anddam> SuperNintendoSUX: have to look for "translation unit"
[23:49:53] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[23:49:56] <SuperNintendoSUX> roughly they are cpp files
[23:50:02] *** Quits: QuaternionsRock (~Quaternio@76.191.39.82) (Quit: Client closed)
[23:50:14] <SuperNintendoSUX> in practice, TUs are what are translated into object files to be linked later
[23:50:53] <anddam> yep, just found a reference to the standard
[23:51:04] <anddam> the TU would include the header file in this case
[23:51:41] <anddam> SuperNintendoSUX: and that cannot be inited inside the class definition?
[23:51:48] <SuperNintendoSUX> there are some exceptions about what I said regarding initialization. you can check them here https://en.cppreference.com/w/cpp/language/static
[23:52:00] <SuperNintendoSUX> short answer: sometimes they can
[23:52:35] <anddam> e.g. putthing a     Logger* m_Instance = nullptr;   at L6?
[23:53:18] <anddam> s/tthi/tti/
[23:53:45] <SuperNintendoSUX> better read the page I sent. it covers all the cases
[23:55:20] <anddam> reading now, thanks
[23:56:45] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600e8a7e220a1554b8b.ipv6.abo.wanadoo.fr)
[23:57:27] *** Quits: rito_ (~rito_gh@45.112.243.47) (Quit: Leaving)
