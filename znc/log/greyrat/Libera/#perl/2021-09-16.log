[00:04:42] <gordonfish> But who logs the loggers?
[00:05:43] <thrig> lumberjacks! leaping from tree to tree ...
[00:06:46] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[00:09:37] <Kobaz> we used Log4perl for a while
[00:09:43] <Kobaz> until it got to be maximum overkill
[00:09:52] <Kobaz> and switched to a custom line-based logger
[00:10:10] <Kobaz> although we'll probably switch back to log4perl at some point
[00:11:50] <Kobaz> zgu: our module is SimpleLogger
[00:11:55] <Kobaz> but it's unpublished
[00:11:58] <ehuelsmann[m]> I use Log::Any for libraries and Log4perl for appliations.
[00:12:08] <ehuelsmann[m]> works perfectly.
[00:12:29] <zgu> i feel personally attacked by Log::Any mentioning "all the custom in-house loggers people have written and can't for whatever reason stop using"
[00:12:33] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[00:12:33] *** diskin is now known as Guest148
[00:12:33] *** Quits: Guest148 (~diskin@87.117.58.246) (Killed (calcium.libera.chat (Nickname regained by services)))
[00:12:33] *** diskin_ is now known as diskin
[00:12:39] <Grinnz> we just use Mojo::Log and haven't had the need for anything more - but it is a mojo app
[00:16:52] <zgu> i don't see an obvious way to have Log::Any send output to multiple places at the same time though
[00:17:28] <Kobaz> ah
[00:17:31] <Kobaz> that would be important for us
[00:17:38] <Kobaz> we log certain things to a db table
[00:17:43] <Kobaz> and also the text log file
[00:18:26] <ehuelsmann[m]> zgu: https://metacpan.org/pod/Log::Any::Adapter::Multiplex
[00:18:26] <Paperbot_> Link title(s): [ Log::Any::Adapter::Multiplex - Adapter to use allow structured logging across other adapters - me... ]
[00:18:58] <Kobaz> ooOoo
[00:19:03] <zgu> yeah like send everything to a debug log, info and above to stdout, warning and error to syslog
[00:19:19] <zgu> oh, hmm. that's included in the distribution but not mentioned in the documentation
[00:21:58] <Grinnz> you have to go hunting, but Log::Any does generally have all the features somewhere
[00:33:34] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:37:17] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:40:54] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:41:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[00:44:35] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[00:52:56] *** Joins: keir (~keir@user/keir)
[00:56:43] *** XV8 is now known as xv8
[00:57:02] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[00:57:16] <EvanCarroll> lol.
[00:57:18] <EvanCarroll> facebook.
[00:57:38] *** Quits: magla (~gelignite@55d43f3e.access.ecotel.net) (Quit: Stay safe!)
[00:57:50] <EvanCarroll> https://www.facebook.com/groups/perlcommunity/posts/1063351634472462/?comment_id=1063372787803680&reply_comment_id=1063555187785440
[00:57:51] <Paperbot_> Link title(s): [ The Perl Community : Threading is nice. ]
[00:58:16] <EvanCarroll> longest most convoluted X-Y problem ever.
[01:00:08] <EvanCarroll> guy thinks he has a threaded web server with some threads hanging, wants to create a daemon to watch the threads and kill them, finds out his webserver isn't using threads, it's using forks with a library that thread safe, and that he can simply make it not-hang by turning off SSL cert verification on his server.
[01:03:25] <Grinnz> people misunderstanding what uses threads? never
[01:07:38] <EvanCarroll> speaking of shit that would break code elsewhere but be awesome, if perl removed the user-level api for threads entirely and just owned up to not being multithreaded.
[01:08:03] <EvanCarroll> then just let threads be an implementation detail on win32.
[01:08:31] <LeoNerd> leont's threads::csp might help that
[01:08:32] <Grinnz> or we could add a sensible api for it
[01:08:52] <Grinnz> perl is actually more multithreaded than most languages
[01:10:28] <EvanCarroll> If every thread has its own interpreter that runs less efficiently than a non-threaded interpreter forked what is the point?
[01:10:32] <Grinnz> it's unlikely we'd be able to retrofit lightweight threading onto perl, but at least if you don't share any data it's not so bad
[01:11:01] <Grinnz> the point is when the processing you're trying to parallelize is worse than the overhead of cloning interpreters
[01:12:36] *** Joins: splatt990 (4b25e29db1@198.108.77.17)
[01:12:37] <EvanCarroll> Is there any case in all of CPAN that has made use of threads on Linux to a benefit over forking?
[01:17:57] <LeoNerd> On Linux, almost none
[01:18:16] *** Quits: bigpresh (~bigpresh@libera/staff/bigpresh) (Quit: Life?  Outside IRC?  A curious idea, I must investigate.)
[01:19:49] <Grinnz> if there was a preponderence of use cases that would benefit from such an arrangement, we'd probably have a better interface by now
[01:20:55] <Grinnz> 90% of the use cases actually work fine with either forking or nonblocking interfaces, and the user is just using threads as a generic hammer
[01:21:22] <Grinnz> *but* it is not always easy for a user to make use of forking or nonblcoking interfaces if they are new to them
[01:21:23] <xenu> perl threads have one advantage compared to forking: faster IPC
[01:21:34] <LeoNerd> The only real usecases I know for actually using actual threads on Linux, are for those annoy parts where either platform libraries or OS system calls don't do nonblocking alternatives
[01:21:43] <xenu> but you have to sacrifice a lot for that 
[01:21:57] <Grinnz> so having a nice threading option, even when not optimal, may be nicer for whippitupitude
[01:22:15] <LeoNerd> I.e. any of the name resolvers, most database client libraries, all that crap. Also OS calls like filesystem operations, and miscellanous bits and pieces like "wait for modem handshaking lines on serial port"
[01:22:16] <Grinnz> cases where forking or nonblocking would be better, but the difference is inconsequential, and threading is easier to write
[01:22:18] <LeoNerd> That one really annoys me
[01:22:26] <xenu> leont said he's working on better threads
[01:22:40] <LeoNerd> He is. I've seen it. I mostly have a fork of IO::Async::Function to use it
[01:27:57] <EvanCarroll> LeoNerd: when you say "on Linux" you mean Perl on Linux right, not on Linux in the abstract.
[01:28:52] <LeoNerd> EvanCarroll: No, I mean Linux _in general_
[01:29:34] <EvanCarroll> weird, that's certainly not my experience.
[01:29:58] *** xv8 is now known as XV8
[01:33:39] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Remote host closed the connection)
[01:34:48] <MikeGeorge[m]> Is there a simple way to tell JSON::encode_json to encode something as a boolean?
[01:35:50] <MikeGeorge[m]> All I'm seeing is ways to detect whether a decoded json value was a boolean.
[01:37:21] *** Joins: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no)
[01:39:33] <ether> the value can be a JSON::PP::true or JSON::PP::false, or \1 or \0
[01:39:41] <Grinnz> \!!$val or $val ? true : false
[01:39:50] <ether> but it also depends on what backend you're using
[01:39:53] <Grinnz> where true and false are exported from your json encoder
[01:40:37] <Grinnz> also, use Cpanel::JSON::XS or JSON::MaybeXS or Mojo::JSON if you can, JSON.pm uses nonideal backends
[01:41:12] <Grinnz> (all three of those use Cpanel::JSON::XS if available)
[01:42:12] <Grinnz> you can also use Cpanel::JSON::XS::Type and tell the schema to encode that value as JSON_TYPE_BOOL
[01:42:15] <xenu> alternatively, you can wait a few years until perls >= 5.36 become common and serializers learn to recognize booleans
[01:42:30] <Grinnz> i doubt that helps with the current problem yet :P
[01:42:43] <xenu> not doing anything for a few years is literally the easiest solution!
[01:46:30] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[01:47:31] <MikeGeorge[m]> <ether> "the value can be a JSON::PP::..." <- So could I do `encode_json( { is_boolean => \1 } );` ?
[01:47:42] <Grinnz> yes
[01:48:10] <MikeGeorge[m]> This is for dirty hacks, that may be updated to be proper code someday or may be thrown away promptly after use.
[01:48:26] <MikeGeorge[m]> Cool.
[01:48:32] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[01:48:51] <Grinnz> i usually write a simple function to_json_boolean or so: sub to_json_boolean { $_[0] ? JSON::PP::true : JSON::PP::false }
[01:48:53] <MikeGeorge[m]> How does that work, perl-side?
[01:49:08] <Grinnz> json encoders encode scalar references to booleans
[01:49:15] <Grinnz> if they're a reference to 0 or 1
[01:49:35] <Grinnz> JSON has no concepts that require scalar references, so it doesn't conflict with anything
[01:49:43] <MikeGeorge[m]> I see; I've never looked at scalar references before.  I'll look it up.
[01:49:53] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[01:50:06] <Grinnz> i find boolean objects (JSON::PP::true et al) clearer in their purpose, and they're what you get back from the decoder
[01:50:17] <Grinnz> but whatever works for you
[01:50:31] *** Joins: nirnam (~nirnam@1.46.142.106)
[01:52:01] <MikeGeorge[m]> MikeGeorge[m]: Err, I've done scalar references, it just never occurred to me to reference a literal value.
[01:52:14] <Grinnz> it's not a common thing
[02:01:18] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[02:22:16] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 268 seconds)
[02:22:19] *** Joins: bigpresh (~bigpresh@libera/staff/bigpresh)
[02:36:25] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[02:37:50] *** Quits: vjuen (~Username@ru3.nestormedia.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:39:03] *** Quits: gce108_ (~gce@64-250-5-223.gvec.net) (Remote host closed the connection)
[02:40:00] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[02:41:23] * GumbyPAN CPAN Upload: PDL-LinearAlgebra-0.22 by ETJ https://metacpan.org/release/ETJ/PDL-LinearAlgebra-0.22
[02:47:49] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[02:50:43] *** Joins: whynot (~whynot@37.73.91.51)
[02:55:18] *** Quits: buZz (~buzz@sky.thebigblue.tk) (Ping timeout: 260 seconds)
[03:09:37] *** Joins: semeion (~semeion@user/semeion)
[03:18:55] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:25:29] *** Joins: aspic (~shifty~~~@ppp121-44-116-122.syd-gls-har-bras39.tpg.internode.on.net)
[03:26:58] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[03:27:10] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[03:31:22] *** Quits: aspic (~shifty~~~@ppp121-44-116-122.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[03:31:58] *** Joins: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net)
[03:33:49] *** Joins: pizdets (~pizdets@183.182.111.134)
[03:34:22] *** Quits: pizdets_ (~pizdets@183.182.115.12) (Ping timeout: 250 seconds)
[03:44:04] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 268 seconds)
[03:44:54] *** Quits: perldoc (~perldoc@2603-6080-3108-088d-18fc-1230-0f1a-2f6b.res6.spectrum.com) (Ping timeout: 268 seconds)
[03:44:54] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 268 seconds)
[03:45:21] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:45:31] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 268 seconds)
[03:45:31] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 268 seconds)
[03:45:55] *** Quits: kaitlyn (~kaitlyn@user/kaitlyn) (Ping timeout: 268 seconds)
[03:47:28] *** Joins: aspic (~shifty~~~@ppp121-44-116-122.syd-gls-har-bras39.tpg.internode.on.net)
[04:01:44] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[04:14:55] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 252 seconds)
[04:15:04] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[04:15:28] *** buZz is now known as Guest8151
[04:29:18] *** Quits: Guest8151 (~buzz@sky.thebigblue.tk) (Ping timeout: 268 seconds)
[04:36:26] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[04:36:56] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[04:38:07] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[04:48:12] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 268 seconds)
[04:50:14] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:51:20] *** tharkun_ is now known as tharkun
[04:58:39] *** Joins: kaitlyn (~kaitlyn@user/kaitlyn)
[04:58:58] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[04:59:29] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:59:59] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[05:00:29] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[05:00:29] *** ChanServ sets mode: +v perlbot
[05:01:30] *** Joins: perldoc (~perldoc@2603-6080-3108-088d-18fc-1230-0f1a-2f6b.res6.spectrum.com)
[05:01:38] * GumbyPAN CPAN Upload: Benchmark-Perl-Formance-0.54 by SCHWIGON https://metacpan.org/release/SCHWIGON/Benchmark-Perl-Formance-0.54
[05:03:52] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 245 seconds)
[05:05:52] *** Joins: mweckbecker (~matthias@weckbecker.name)
[05:06:38] * GumbyPAN CPAN Upload: App-Bootstrap-Perl-0.17 by SCHWIGON https://metacpan.org/release/SCHWIGON/App-Bootstrap-Perl-0.17
[05:15:35] <zgu> derp. just spent 15 minutes debugging a regex, thinking i was stupid for remembering how matches return capture groups wrong. turns out it was missing a "+"
[05:18:25] <Grinnz> i've done that pretty much verbatim before
[05:19:39] <zgu> re-read all the relevant parts of perlre and perlop, wondered if it needed /g or not (which i don't remember it ever needing)
[05:20:02] *** Quits: last1 (~last1@109.100.153.87) ()
[05:20:04] *** Quits: nirnam (~nirnam@1.46.142.106) (Quit: leaving)
[05:20:39] <Grinnz> i think my eventual solution was "walk away and purge my cache to look at it fresh"
[05:21:47] <zgu> started testing incrementally with re.pl, the first capture group was working, then i added the second and realized i put the + after () so it was only returning the last character
[05:21:56] <zgu> then went back to the original code and i had forgotten the + entirely
[05:24:10] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[05:24:53] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:3cfb:c129:4044:2b94)
[05:27:54] *** Joins: YaoNai (~YaoNai@user/yaonai)
[05:29:18] *** Quits: subie (~subie@2601:4c0:4080:bc0:ec67:7fc0:2351:c8bb) (Ping timeout: 260 seconds)
[05:41:13] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:43:27] <tharkun> !vague
[05:44:55] <tharkun> perlbot: vague
[05:44:56] <perlbot> tharkun: vague question is really, really vague, in fact it's so fucking vague that you can't even caption a cat with it because the cat would DIE OF VAGUE | http://www.trout.me.uk/vague.jpg
[05:50:15] *** Quits: whynot (~whynot@37.73.91.51) (Quit: Lost terminal)
[05:55:07] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 252 seconds)
[06:01:15] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[06:01:39] *** buZz is now known as Guest6690
[06:01:42] *** Joins: madduck (~madduck@user/madduck)
[06:02:32] *** Guest6690 is now known as buZz
[06:15:01] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[06:17:47] *** Joins: emanuele6 (~emanuele6@37.160.47.167)
[06:18:04] *** Quits: Su-Shee (~Susanne@p4ff49527.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:18:43] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[06:19:03] *** Quits: emanuele6 (~emanuele6@37.160.47.167) (Changing host)
[06:19:03] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[06:19:39] *** Joins: Su-Shee (~Susanne@p50894ceb.dip0.t-ipconnect.de)
[06:28:55] *** Quits: YaoNai (~YaoNai@user/yaonai) (Remote host closed the connection)
[06:31:22] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:41:28] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[06:43:44] *** Quits: buZz (~buzz@sky.thebigblue.tk) (Ping timeout: 268 seconds)
[06:50:24] *** Joins: mattil (~mattil@87-92-19-113.bb.dnainternet.fi)
[06:51:25] *** XV8 is now known as xv8
[06:54:56] *** Quits: mattil (~mattil@87-92-19-113.bb.dnainternet.fi) (Ping timeout: 265 seconds)
[07:11:44] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[07:11:49] *** Joins: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16)
[07:21:08] *** xv8 is now known as XV8
[07:21:56] *** Quits: aspic (~shifty~~~@ppp121-44-116-122.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[07:22:07] *** Joins: aspic (~shifty~~~@ppp121-44-127-169.syd-gls-har-bras39.tpg.internode.on.net)
[07:25:09] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[07:25:32] *** buZz is now known as Guest8685
[07:27:43] *** Guest8685 is now known as buZz
[07:28:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[07:30:07] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:31:19] *** Joins: bmeneg_ (~bmeneg@2001:1284:f016:a1c:4e1b:403:cee1:1516)
[07:31:37] *** Quits: bmeneg (~bmeneg@2001:1284:f013:917a:660a:3846:a9f1:30e9) (Ping timeout: 268 seconds)
[07:36:16] *** Quits: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16) (Quit: Slackin')
[07:38:23] *** XV8 is now known as xv8
[07:39:24] *** Quits: buZz (~buzz@sky.thebigblue.tk) (Ping timeout: 265 seconds)
[07:40:22] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 265 seconds)
[07:45:18] *** Somni_ is now known as Somni
[07:45:40] *** Joins: tejr (~tejr@user/tejr)
[07:46:18] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[07:46:42] *** buZz is now known as Guest3045
[07:47:42] *** Guest3045 is now known as buZz
[07:52:11] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[07:59:06] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[08:02:24] *** Joins: R2robot (~R2robot@user/r2robot)
[08:05:05] *** Parts: emanuele6 (~emanuele6@user/emanuele6) (WeeChat 3.2)
[08:05:30] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[08:24:01] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:27:24] *** Joins: Martchus_ (~martchus@dynamic-095-115-061-220.95.115.pool.telefonica.de)
[08:27:57] *** Quits: Martchus (~martchus@2a01:c22:7767:3900:d250:99ff:fe49:3cce) (Ping timeout: 268 seconds)
[08:28:25] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[08:35:45] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[08:37:13] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 252 seconds)
[08:37:31] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[09:00:03] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[09:02:00] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[09:07:19] <tharkun> Good $DAY I am trying to install cpanm XML::Compile::SOAP11::Encoding yet it tells me: ! Finding XML::Compile::SOAP11::Encoding on cpanmetadb failed. \! Finding XML::Compile::SOAP11::Encoding () on mirror http://www.cpan.org failed. \! Couldn't find module or a distribution XML::Compile::SOAP11::Encoding yet I find the following url to be valid 
[09:07:20] <Paperbot_> Link title(s): [ The Comprehensive Perl Archive Network - www.cpan.org ]
[09:07:25] <tharkun> https://metacpan.org/dist/XML-Compile-SOAP/view/lib/XML/Compile/SOAP11/Encoding.pod 
[09:07:25] <Paperbot_> Link title(s): [ XML::Compile::SOAP11::Encoding - SOAP encoding - metacpan.org ]
[09:07:30] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:07:54] <tharkun> Paperbot_: snack
[09:09:15] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:09:35] <tharkun> Which is the page that search engine on cpan.org redirects me to. Can someone please tell me where I am messing things up?
[09:18:14] <xenu> it's an internal package and it isn't indexed on cpan
[09:18:37] <xenu> it's a part of XML::Compile::SOAP
[09:19:11] <xenu> which is what you should install instead
[09:20:22] <xenu> well, it isn't exactly internal, it's documented, but still, it isn't indexed on cpan
[09:26:06] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Remote host closed the connection)
[09:31:20] *** Joins: semeion (~semeion@user/semeion)
[09:32:47] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:33:28] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[09:40:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:40:53] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:42:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[09:46:13] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[09:51:06] *** Joins: randir (~randir@93.159.239.42)
[09:53:59] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:54:39] *** Joins: mattil (~mattil@airio.portalify.com)
[09:55:37] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:04:21] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:07:50] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:08:05] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[10:08:22] *** Joins: mattil (~mattil@airio.portalify.com)
[10:26:26] *** Quits: mweckbecker (~matthias@weckbecker.name) (Quit: leaving)
[10:27:02] *** Joins: mweckbecker (~matthias@2001:1b60:3:239:2723::1)
[10:33:42] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:35:40] *** Quits: nshp (hi@my.domain.is.better.thanyours.com) (Remote host closed the connection)
[10:36:50] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 268 seconds)
[10:37:13] * GumbyPAN CPAN Upload: JSON-Validator-4.24 by JHTHORSEN https://metacpan.org/release/JHTHORSEN/JSON-Validator-4.24
[10:45:02] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[11:06:22] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:07:31] *** Joins: tobybl (~tobybl@210.242.200.146.dyn.plus.net)
[11:13:07] <Mandevil> I get this (https://l.perl.bot/p/e1ofam) Plack failure, but I have trouble finding where in my app it is arising. Any ideas on how to pinpoint the place?
[11:13:08] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[11:14:53] *** Joins: vjuen (~Username@ru3.nestormedia.com)
[11:17:01] *** Joins: merpaderp (~nobody@89.111.36.243)
[11:17:12] <xq> "Response should be array ref or code ref" is the clue
[11:17:19] <Mandevil> I see that.
[11:17:26] <Mandevil> But it's actually not true.
[11:17:33] <Mandevil> Response can be also a plain string.
[11:17:44] <xq> does the error arise when you prform an http request to the application?
[11:17:53] <Mandevil> Yes, but it only happens sometimes.
[11:19:00] <xq> if you pastebin the code, someone might find the error for you
[11:19:10] <Mandevil> It's a 3000+ line script.
[11:19:41] <Mandevil> ondb@l5nets02:~/dev/www$ wc -l ondb-backend.cgi
[11:19:41] <Mandevil> 4522 ondb-backend.cgi
[11:20:20] <Mandevil> I am just looking on some way to localize the fault.
[11:20:24] <xq> perhaps the code of the relevant request handler ?
[11:20:26] <Mandevil> s/on/for/
[11:22:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:22:43] <Mandevil> It's here, but not sure it's very helpful.
[11:22:45] <Mandevil> https://l.perl.bot/p/tj1vkb
[11:22:46] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[11:25:14] <xq> what is the $js object ?
[11:25:27] <Mandevil> JSON::MaybeXS instance
[11:27:41] <Mandevil> Hm, there are some fuckups in that code that I'm now noticing.
[11:27:57] <Mandevil> $p is URLencoded params.
[11:28:11] <Mandevil> And they are tested even when we're using JSON requests (the $j variable).
[11:28:22] <Mandevil> No.
[11:28:25] <Mandevil> It's right.
[11:28:32] <Mandevil> $p is just $j->{params}
[11:28:45] <xq> what is $q ?
[11:29:07] *** Joins: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[11:29:07] <xq> as opposed to the $p that is tested earlier
[11:29:11] <Mandevil> $q = $req->parameters;
[11:29:15] <xq> then what is $p ?
[11:29:25] <Mandevil> $p is just shortcut for $j->{params}
[11:30:06] <Mandevil> I converted to using JSON requests, but there is one place I still want urlencoded parameters.
[11:31:48] <xq> one possible idea is that some piece of code throws an exception which is not caught, resulting in response being unset
[11:32:10] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[11:32:21] <Mandevil> Yeah, but would I see that in the stdout?
[11:32:45] <Mandevil> Uncaught exception should make some stderr output
[11:33:27] <xq> depends on what plack does with unhandled exceptions
[11:33:54] <Mandevil> I barfs everything to stdout.
[11:33:59] <Mandevil> I mean stderr
[11:36:32] <Mandevil> Hm, I think I see it.
[11:36:45] <Mandevil> The front end makes POST request in urlencoded format.
[11:36:58] <Mandevil> Which goes unhandled.
[11:37:26] <Mandevil> So that's actually a frontend issue.
[11:38:45] <Mandevil> Which reminds me that I spent few hours yesterday hunting a bug in FE... turned out JavaScript thinks that 0 == "" is true.
[11:39:11] <Botje> eval: !!(0 == "")
[11:39:13] <perlbot> Botje: 1
[11:39:16] <Botje> not just JS
[11:39:47] <shlomif> Mandevil: heh, not surprising
[11:39:48] <Mandevil> Well, perl has different operator for string comparisons.
[11:40:37] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[11:43:07] <merpaderp> its not a warning to compare 0 with a string? '==' instead of eq?
[11:43:57] <merpaderp> well it is
[11:44:04] <merpaderp> the bot is just warningless, I guess.
[11:44:10] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Read error: Connection reset by peer)
[11:45:20] <vague> That specific command was, you can use sweval instead to get strict + warnings
[11:46:24] <Mandevil> sweval: !!(0 == "")
[11:46:26] <perlbot> Mandevil: Argument "" isn't numeric in numeric eq (==) at (IRC) line 1. 1
[11:46:43] <Mandevil> That's pretty enough to catch it.
[11:46:56] <Mandevil> In JS, it just mysteriously doesn't work.
[11:47:51] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[11:49:28] <merpaderp> strict && warnings is pretty cool. at first you are mad and want it to stfu and after couple of years you are like, oh right, thanks.
[11:49:58] *** Joins: Pali (~pali@user/pali)
[11:51:20] * GumbyPAN CPAN Upload: HTTP-Any-1.00 by KNI https://metacpan.org/release/KNI/HTTP-Any-1.00
[11:57:20] <Mandevil> Lol this... so I fixed the frontend issue.... the problem with plack failure didn't go away. #fml
[11:59:04] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[12:02:49] *** Joins: art1 (~romeyke@p200300ccdf0a03004e61c2804a0e5f6c.dip0.t-ipconnect.de)
[12:04:40] <Mandevil> So the fault happens in this section... https://l.perl.bot/p/o5vlj1
[12:04:40] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[12:04:59] <Mandevil> (which is wrapped in try {})
[12:07:50] <Botje> and for those of us joining in now, what is the problem with that snippet?
[12:08:31] <Mandevil> Plack is unhappy with the $request->body.
[12:08:53] <Mandevil> Like this unhappy: https://l.perl.bot/p/e1ofam
[12:08:54] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[12:09:13] <Mandevil> I mean $response
[12:10:44] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:11:45] <Botje> looking at the documentation for ->finalize
[12:11:51] <Botje> I think you need to return $res->finalize
[12:11:53] <Botje> instead of undef.
[12:12:28] <Mandevil> Hm... let's try
[12:13:11] <Botje> probably would have spotted that sooner if you told me that code was a PSGI middleware/handler :P
[12:13:31] <Mandevil> Yeah.
[12:13:45] <Mandevil> That was the problem.
[12:15:47] <Mandevil> Botje: Thanks!
[12:17:19] <Mandevil> I had the other finalize at the end of the handler function, so it didn't occur that it must be actually returned.
[12:17:38] <Botje> my superpower: reading the documentation
[12:17:53] *** Joins: Markow (~Markow@176.122.215.103)
[12:19:28] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[12:21:23] * GumbyPAN CPAN Upload: Date-Holidays-AU-0.27 by DDICK https://metacpan.org/release/DDICK/Date-Holidays-AU-0.27
[12:31:26] *** Joins: Manderson (~manderson@45.40.80.170)
[12:32:29] *** Joins: __Manderson (manderson@gateway/vpn/protonvpn/manderson)
[12:33:51] *** Joins: brtastic (~Thunderbi@185.24.91.138)
[12:34:26] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[12:34:36] <brtastic> hey, is there some kind of compat layer for Object::Pad and Moose roles?
[12:35:51] <brtastic> so that Object::Pad class can see its mixed Moose roles in ->DOES
[12:36:04] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[12:36:48] <El_Che> hoe loopt het daar?
[12:39:25] *** Joins: zamanf (~moo@2a02:587:de16:8a00:c8a0:d26c:6606:2ef7)
[12:40:25] *** Quits: zamanf (~moo@2a02:587:de16:8a00:c8a0:d26c:6606:2ef7) (Changing host)
[12:40:25] *** Joins: zamanf (~moo@user/zamanf)
[12:42:55] <shlomif> El_Che: what?
[12:44:54] <El_Che> shlomif: wrong window. How is your dutch? :)
[12:46:41] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:49:23] *** Joins: vjuen_ (~Username@leased-line-217-21-59-112.telecom.by)
[12:50:02] *** Joins: vjuen__ (~Username@46.56.229.158)
[12:52:36] *** Quits: vjuen (~Username@ru3.nestormedia.com) (Ping timeout: 265 seconds)
[12:52:39] *** vjuen__ is now known as vjuen
[12:53:07] <shlomif> El_Che: my dutch lacks touch ;)
[12:54:10] *** Quits: vjuen_ (~Username@leased-line-217-21-59-112.telecom.by) (Ping timeout: 260 seconds)
[12:56:43] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[12:58:40] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:07:15] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Leaving)
[13:08:05] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[13:14:42] *** Quits: mweckbecker (~matthias@2001:1b60:3:239:2723::1) (Quit: leaving)
[13:15:06] *** Joins: mweckbecker (~matthias@weckbecker.name)
[13:15:17] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Remote host closed the connection)
[13:15:34] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[13:16:50] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:17:08] <andrzejku> Hello
[13:17:23] <andrzejku> I want to ask do you know maybe if Perl SDL is dying?
[13:17:38] <andrzejku> is it better to use something else or it is fine?
[13:17:40] <andrzejku> for game dev
[13:18:44] *** Joins: vjuen_ (~Username@46.56.228.96)
[13:19:38] *** Quits: vjuen (~Username@46.56.229.158) (Ping timeout: 268 seconds)
[13:19:40] *** vjuen_ is now known as vjuen
[13:20:02] <Botje> andrzejku: you again with the 'is dying' question.
[13:20:28] <andrzejku> Botje, hi
[13:20:29] <lopid> is andrzejku's question dying?
[13:20:33] <Botje> I would not recommend using perl for game development if you don't have previous experience in either.
[13:20:50] <andrzejku> Botje, =/
[13:20:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[13:20:55] <andrzejku> Botje, why?
[13:21:29] * GumbyPAN CPAN Upload: Game-TextMapper-1.03 by SCHROEDER https://metacpan.org/release/SCHROEDER/Game-TextMapper-1.03
[13:21:36] <andrzejku> Botje, I don't mind a proffesional game dev
[13:21:46] <andrzejku> amateur
[13:23:48] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:23:50] <andrzejku> I have found a Perl SDL book but it is not very popular
[13:24:00] <andrzejku> and it seems like someone wanted to dev games in past
[13:24:16] <andrzejku> but preferred pygame
[13:24:23] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:25:25] <Botje> yes, and?
[13:26:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:27:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[13:28:06] <andrzejku> Botje, so is it dying a little bit or there some plans to continue work on it?
[13:28:43] <Botje> andrzejku: I don't know.
[13:28:49] <andrzejku> Botje, ok
[13:28:52] <Botje> andrzejku: is your actual question "should I use it?"
[13:29:05] <Botje> andrzejku: because that is entirely orthogonal to "is it dying"
[13:29:19] <andrzejku> Botje, yes kind of
[13:29:33] <andrzejku> Botje, the best if you know a good perl game example
[13:29:40] <andrzejku> so I will look into the code
[13:29:45] <andrzejku> to steal some parts
[13:29:49] <Botje> frozen bubble uses perl sdl
[13:30:03] <andrzejku> Botje, is frozen bubble dying?
[13:30:13] <andrzejku> Botje, or that's a modern perl?
[13:30:20] <Botje> andrzejku: OH FOR FUCKS SAKE
[13:30:42] <Botje> andrzejku: DONT USE PERL SDL IF YOU ARE SCARED IT IS DYING
[13:30:51] <Botje> andrzejku: IN FACT DONT USE ANY SOFTWARE SINCE IT IS ALL DYING
[13:31:05] <andrzejku> Botje, omg
[13:31:14] <lopid> irc is dying
[13:31:21] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:99f6:70a6:75e5:d1ce) (Ping timeout: 268 seconds)
[13:31:22] <andrzejku> I was just asking
[13:31:30] * GumbyPAN CPAN Upload: Text-Minify-XS-v0.4.8 by RRWO https://metacpan.org/release/RRWO/Text-Minify-XS-v0.4.8
[13:31:30] <andrzejku> common
[13:31:34] <Botje> andrzejku: stop 'just asking' you are getting nowhere.
[13:31:48] <andrzejku> Botje, okay sorry
[13:31:51] <lopid> ask a relevant question
[13:32:00] <andrzejku> lopid, okay
[13:32:14] <lopid> what do you think "common
[13:32:17] <lopid> " means?
[13:33:23] <Botje> andrzejku: what is your objection to spending any time investigating "dying" software?
[13:33:42] <shlomif> https://leejo.github.io/2016/02/22/all_software_is_legacy/
[13:33:42] <Paperbot_> Link title(s): [ All Software is Legacy ]
[13:33:59] * lopid sighs
[13:35:09] <andrzejku> so you think it is nothing bad to spend a time with legacy?
[13:35:35] <andrzejku> I never think of it in that way
[13:35:58] <andrzejku> I have seen for example that some people are trying to rewrite everything in Rust
[13:36:22] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:36:25] <andrzejku> like bash
[13:36:34] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:37:03] <lopid> so what?
[13:37:19] <andrzejku> so some languages are like in case to run it you have update the libs and adapt implementation
[13:37:34] <andrzejku> but other languages are like they can run forver because it is not requried
[13:37:47] <Botje> *all* languages can "run forever"
[13:38:05] <Botje> if you want to write perl4 or visual basic 6 in 2021, nobody will stop you.
[13:38:16] <lopid> pick the best language for your use case not because some other people use another language for some things
[13:39:16] <andrzejku> lopid, ahh I like perl scripting and just asking about its envrionment, like which parts are strong which not
[13:39:45] <Botje> again with the 'just asking'
[13:42:26] <Altreus> I mean there's a fair question in here, to which I would answer that setting up a userspace environment is *still* a bit more of a pain than I'd like
[13:42:57] <Altreus> If you go in with perlbrew from the start then you're much better off
[13:43:09] <Altreus> But if you don't, well, it's a bother, in my experience
[13:43:39] <Altreus> Especially if it was someone else's decision not to use localised stuff for the project, so now you can't just switch easily :)
[13:43:40] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Ping timeout: 240 seconds)
[13:43:57] <Altreus> besides all that: it's fine, don't worry about it
[13:49:10] <shlomif> perlbot: carton
[13:49:11] <perlbot> shlomif: Carton is a bundler for Perl.  See https://metacpan.org/module/Carton for more info. | https://pinguinorodriguez.cl/blog/bundling-vendored-modules/
[13:49:17] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[13:49:20] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:49:40] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 240 seconds)
[13:49:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:56:12] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:56:24] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:02:27] *** Martchus_ is now known as Martchus
[14:06:34] * GumbyPAN CPAN Upload: RT-Extension-HistoryFilter-3.02 by CLOOS https://metacpan.org/release/CLOOS/RT-Extension-HistoryFilter-3.02
[14:10:42] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[14:12:40] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Ping timeout: 240 seconds)
[14:13:18] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[14:29:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:04] *** Joins: csrf (~csrf@user/csrf)
[14:33:23] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:43:13] *** Quits: edf0 (edef@panther.nathan7.eu) (Read error: Connection reset by peer)
[14:43:24] *** Quits: aspic (~shifty~~~@ppp121-44-127-169.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[14:44:08] *** Joins: edf0 (edef@panther.nathan7.eu)
[14:44:19] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[14:54:27] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[14:55:04] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:55:17] *** Joins: stwange (~j@92.40.178.53.threembb.co.uk)
[14:58:05] <stwange> I'm using a while (<>) loop, is there a simple way of matching the next line too? Essentially I want to match lines with /string/, and also /database:(.*)\ntimestamp(.*)\n(specific text)/. I could start $1 $2 in different variables but it seems hacky
[15:00:51] <shlomif> stwange: $line .= <>;
[15:05:42] <lopid> no, you can read in per paragraph or as a whole, though
[15:07:28] <lopid> or do the reverse: record each line and do your calculation against the current line and the recorded previous line
[15:08:43] <lopid> or indeed slurp by anything. see $/ in perldoc perlvar
[15:10:19] <lopid> just be aware that if you slurp it as a whole, it could take a lot of memory. your example suggests some sort of log file
[15:10:36] <Altreus> lopid: I think shlomif's answer is simpler :)
[15:11:42] <Altreus> $line .= <> if $line =~ /database:/;  # or similar condition
[15:11:54] <Altreus> honestly, you could do it with a second var
[15:11:56] <lopid> note the newlines
[15:12:26] <Altreus> right, but that's not set in stone
[15:13:18] <Altreus> if (my ($database) = $line =~ /database:(.*)$/) { my $timestamp_line = <>; my ($timestamp) = $timestamp_line =~ /timestamp(.*)$/; my $specific_text = <>; ... }
[15:13:33] <Altreus> there you go, 3 lines when you see database:
[15:13:37] <Altreus> 1 line when you don't
[15:13:46] <stwange> Thank you :)
[15:19:27] *** Quits: stwange (~j@92.40.178.53.threembb.co.uk) (Quit: This computer has gone to sleep)
[15:21:57] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 265 seconds)
[15:41:38] <Botje> This sound like another use case for $/ = ""
[15:41:44] * GumbyPAN CPAN Upload: HTTP-Any-1.01 by KNI https://metacpan.org/release/KNI/HTTP-Any-1.01
[16:02:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[16:04:19] *** Joins: stwange (~j@92.40.178.71.threembb.co.uk)
[16:07:15] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[16:15:41] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[16:16:31] *** Quits: X-Scale (~ARM@92.250.99.192) (Ping timeout: 252 seconds)
[16:16:49] *** X-Scale` is now known as X-Scale
[16:17:45] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[16:26:55] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 252 seconds)
[16:27:20] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[16:31:32] *** Joins: jplesnik_ (~jplesnik@nat-pool-brq-u.redhat.com)
[16:31:56] *** Joins: andrzejku (~andrzejku@user-94-254-206-51.play-internet.pl)
[16:32:18] *** Joins: X-Scale` (~ARM@83.223.226.16)
[16:32:31] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[16:33:25] *** X-Scale` is now known as X-Scale
[16:34:04] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Ping timeout: 252 seconds)
[16:36:49] * GumbyPAN CPAN Upload: Kossy-0.60 by KAZEBURO https://metacpan.org/release/KAZEBURO/Kossy-0.60
[16:38:19] *** Quits: stwange (~j@92.40.178.71.threembb.co.uk) (Ping timeout: 265 seconds)
[16:40:19] *** Joins: stwange (~j@91.238.76.112)
[16:45:36] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 268 seconds)
[16:46:39] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[16:48:57] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 265 seconds)
[17:06:07] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[17:08:22] *** Quits: buZz (~buzz@sky.thebigblue.tk) (Ping timeout: 260 seconds)
[17:14:36] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[17:15:27] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[17:15:50] *** buZz is now known as Guest654
[17:22:18] *** Quits: andrzejku (~andrzejku@user-94-254-206-51.play-internet.pl) (Ping timeout: 265 seconds)
[17:30:26] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:51] *** Joins: tobybl_ (~tobybl@210.242.200.146.dyn.plus.net)
[17:33:04] *** Quits: tobybl (~tobybl@210.242.200.146.dyn.plus.net) (Ping timeout: 252 seconds)
[17:35:50] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[17:38:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[17:41:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:41:48] *** Joins: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi)
[17:44:04] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[17:45:48] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[17:46:50] *** Quits: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:49:14] *** Joins: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi)
[17:51:11] *** Parts: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (ERC (IRC client for Emacs 27.2))
[17:53:48] *** Quits: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[17:54:32] *** Joins: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi)
[17:58:35] *** Joins: andrzejku (~andrzejku@user-94-254-206-51.play-internet.pl)
[17:59:16] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[17:59:44] *** shlomif is now known as rindolf
[18:02:33] *** Joins: jplesnik__ (jplesnik@nat-pool-brq-t.redhat.com)
[18:02:47] *** jplesnik__ is now known as jplesnik
[18:04:56] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:05:09] *** Quits: jplesnik_ (~jplesnik@nat-pool-brq-u.redhat.com) (Ping timeout: 268 seconds)
[18:07:09] *** Quits: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:09:48] *** Quits: stwange (~j@91.238.76.112) (Quit: Leaving)
[18:22:46] *** Joins: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi)
[18:25:50] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[18:26:06] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 265 seconds)
[18:27:31] *** Quits: mattil (~mattil@d4h4qyprzbvy2lcn30z-4.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[18:28:17] *** Joins: magla (~gelignite@55d458e1.access.ecotel.net)
[18:40:50] *** Joins: anthk_ (~anthk_@92.176.105.30)
[18:41:40] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 240 seconds)
[18:43:40] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[18:43:58] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:44:24] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[18:45:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:47:18] *** Quits: andrzejku (~andrzejku@user-94-254-206-51.play-internet.pl) (Ping timeout: 260 seconds)
[18:47:36] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:52:03] * GumbyPAN CPAN Upload: Acme-CPANAuthors-Czech-0.30 by SKIM https://metacpan.org/release/SKIM/Acme-CPANAuthors-Czech-0.30
[18:54:49] *** Joins: emanuele6 (~emanuele6@37.161.27.163)
[18:54:49] *** Quits: emanuele6 (~emanuele6@37.161.27.163) (Changing host)
[18:54:49] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:56:24] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[18:57:50] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:02:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[19:02:43] *** Quits: vjuen (~Username@46.56.228.96) (Read error: Connection reset by peer)
[19:02:56] *** Joins: vjuen (~Username@ru3.nestormedia.com)
[19:04:06] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 260 seconds)
[19:08:18] *** Guest654 is now known as buZz
[19:08:30] *** Quits: jess (~jess@libera/staff/jess) ()
[19:08:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:08:57] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[19:15:34] *** Quits: WinterStar (~IceLight@user/icelight) (Remote host closed the connection)
[19:17:01] *** Joins: WinterStar (~IceLight@user/icelight)
[19:24:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[19:25:53] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:28:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[19:30:14] <daemon> hey all for anyone who deals with OpenAPI - notable importing an existing schema to the mojo-openapi module, made this for auto generating the x-mojo-name as well as setting the operationId - https://gist.github.com/PaulGWebster/24e543ee33b664f18e756f70c370df17
[19:30:15] <Paperbot_> Link title(s): [ OpenAPI mojo/operational id auto generator · GitHub ]
[19:30:45] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:30:47] *** Joins: gryphn (~gryphn@191.96.106.228)
[19:31:40] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 240 seconds)
[19:32:53] *** Joins: thrig (~thrig@65.113.153.50)
[19:34:00] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:99f6:70a6:75e5:d1ce)
[19:36:06] <genio> I still _hate_ the look of            print $fh $content;
[19:36:34] <thrig> use Shatner::Pause; print, $fh, $content;
[19:36:34] <Altreus> that's because it's 2021 and we like things to be said in order
[19:36:59] <revhippie> print $content->$fh;
[19:37:08] <ology> uh
[19:37:17] * genio eyeballs revhippie something fierce
[19:37:27] *** Quits: Xe (~cadey@tailscale/xe) (Quit: WeeChat 3.2)
[19:37:32] <revhippie> what, you prefer print $fh<-$content ?
[19:37:42] *** Joins: Xe (~cadey@tailscale/xe)
[19:38:12] <thrig> $content |^| $fh
[19:38:37] <Altreus> $content >> $fh
[19:38:44] <thrig> too c++-y
[19:39:01] <Altreus> c++ was a pioneer of reusing operators in confusing ways
[19:39:03] <Altreus> we should honour that
[19:39:15] <vague> $fh += $content
[19:39:17] *** Quits: bes_internal (~bes@leased-line-217-21-59-112.telecom.by) (Ping timeout: 268 seconds)
[19:39:35] <vague> Or .= rather :P
[19:39:39] <daemon> wonder if print() would allow a filehandle, print($fh,$content);
[19:39:42] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:39:42] <daemon> looks a bit better
[19:39:45] <daemon> not sure it works
[19:40:01] <genio> $fh->print($content); is my least hated way, I guess
[19:40:09] <vague> $fh->print($content) works
[19:40:11] <genio> print {$fh} $content; is also bad
[19:40:31] <daemon> $fh->print($content) is quite nice
[19:40:42] <daemon> had no idea filehandles had a print method on them
[19:41:12] <thrig> you can't handle the IO::Handle!
[19:41:32] <daemon> perlbot handling is thrig> you can't handle the IO::Handle!
[19:41:33] <perlbot> daemon: Stored handling is thrig> you can't handle the IO::Handle!
[19:41:39] <daemon> :-)
[19:41:43] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:41:53] <thrig> unless you have I/O handling gloves, I guess
[19:42:11] *** Joins: andrzejku (~andrzejku@user-94-254-207-65.play-internet.pl)
[19:42:36] *** Quits: merpaderp (~nobody@89.111.36.243) (Quit: leaving)
[19:42:38] <revhippie> eval: [ map { $_ > 0 ? "+" : $_ >> 0 ? "-" : "z" } -3 .. 3 ]
[19:42:40] <perlbot> revhippie: ["-","-","-","z","+","+","+"]
[19:43:36] <ology> revhippie: why? ;)
[19:57:01] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[19:58:41] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:02:34] *** Quits: gryphn (~gryphn@191.96.106.228) (Ping timeout: 252 seconds)
[20:07:11] * GumbyPAN CPAN Upload: PDF-API2-2.042 by SSIMMS https://metacpan.org/release/SSIMMS/PDF-API2-2.042
[20:08:34] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[20:10:03] <Grinnz> daemon: yeah as long as you're on 5.14+ or something in the process has loaded IO::Handle, that will work
[20:10:52] <Grinnz> daemon: it also provides quite nice things like $fh->flush, $fh->printflush, and $fh->autoflush
[20:11:17] <Grinnz> so you never have to mess with select HANDLE and $| again
[20:11:46] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:13:12] *** Quits: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[20:13:24] <thrig> unless you want something like  `perl -e 'print --$| while 1'`
[20:14:12] *** Quits: andrzejku (~andrzejku@user-94-254-207-65.play-internet.pl) (Ping timeout: 245 seconds)
[20:22:12] * GumbyPAN CPAN Upload: Test-Pod-LinkCheck-Lite-0.007_02 by WYANT https://metacpan.org/release/WYANT/Test-Pod-LinkCheck-Lite-0.007_02
[20:40:27] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[20:40:50] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:41:49] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:42:56] *** Joins: mattil (~mattil@87-92-19-113.bb.dnainternet.fi)
[20:47:44] *** Quits: mattil (~mattil@87-92-19-113.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[20:55:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:55:46] *** Parts: art1 (~romeyke@p200300ccdf0a03004e61c2804a0e5f6c.dip0.t-ipconnect.de) ()
[20:55:50] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:58:24] <Altreus> UK people need to know this https://www.reddit.com/r/UKPersonalFinance/comments/pot4jj/the_perfect_storm_understanding_uk_energy_prices/
[20:58:27] <Paperbot_> Link title(s): [ The Perfect Storm - Understanding UK Energy Prices : UKPersonalFinance ]
[20:58:41] <Altreus> There's a shit-storm coming and people on variable rate energy are gonna get rinsed
[20:59:16] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Read error: Connection reset by peer)
[20:59:18] *** Quits: perldoc (~perldoc@2603-6080-3108-088d-18fc-1230-0f1a-2f6b.res6.spectrum.com) (Read error: Connection reset by peer)
[21:00:55] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[21:01:25] *** Joins: perldoc (~perldoc@71.76.76.1)
[21:02:02] <mns> when building perl, is there a way to specify building it in a different directory from where the source code is ? 
[21:05:50] <thrig> less -p "Building Perl outside of the source directory" INSTALL
[21:09:32] <mns> thrig:  thanks
[21:13:16] *** Joins: aspic (~shifty~~~@ppp121-44-116-99.syd-gls-har-bras39.tpg.internode.on.net)
[21:16:57] <Altreus> TIL less -p
[21:22:10] *** Joins: diskin (~diskin@87.117.49.214)
[21:22:37] *** Quits: tobybl_ (~tobybl@210.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:24:20] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[21:24:20] *** diskin is now known as Guest8632
[21:24:20] *** diskin_ is now known as diskin
[21:26:19] * GumbyPAN CPAN Upload: Alien-RtMidi-0.03-TRIAL by JBARRETT https://metacpan.org/release/JBARRETT/Alien-RtMidi-0.03-TRIAL
[21:26:54] *** Quits: Guest8632 (~diskin@87.117.49.214) (Ping timeout: 260 seconds)
[21:27:08] *** Joins: anthk_ (~anthk_@92.176.105.30)
[21:28:42] *** Joins: Pali (~pali@user/pali)
[21:31:17] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 245 seconds)
[21:32:58] *** Quits: rindolf (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 268 seconds)
[21:33:06] *** Joins: vjuen_ (~Username@leased-line-217-21-59-112.telecom.by)
[21:34:07] *** Quits: vjuen (~Username@ru3.nestormedia.com) (Ping timeout: 265 seconds)
[21:34:09] *** vjuen_ is now known as vjuen
[21:38:32] *** Quits: n0xff (~0xff@gateway/tor-sasl/n0xff) (Remote host closed the connection)
[21:41:23] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 268 seconds)
[21:41:41] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:46:07] *** Joins: tobybl (~tobybl@210.242.200.146.dyn.plus.net)
[21:46:21] * GumbyPAN CPAN Upload: Lab-Measurement-3.772 by AKHUETTEL https://metacpan.org/release/AKHUETTEL/Lab-Measurement-3.772
[21:48:28] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Remote host closed the connection)
[21:52:14] *** Quits: tobybl (~tobybl@210.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:52:21] *** Joins: horsepatat (~horsepata@212.3.197.68)
[21:54:42] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[22:02:50] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 260 seconds)
[22:03:11] *** Quits: horsepatat (~horsepata@212.3.197.68) (Ping timeout: 268 seconds)
[22:05:23] *** Joins: semeion (~semeion@user/semeion)
[22:05:30] *** Joins: tg (~tg@rockylinux/infra/tg)
[22:11:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[22:12:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:13:06] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[22:15:27] *** Joins: Adoi (~Adoi@user/adoi)
[22:21:49] *** Joins: YaoNai (~YaoNai@user/yaonai)
[22:23:17] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[22:25:34] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[22:25:58] *** Joins: Markow (~Markow@176.122.215.103)
[22:31:02] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[22:38:59] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:42:32] *** Quits: gce108_ (~gce@64-250-5-223.gvec.net) (Quit: Leaving)
[22:43:55] *** Joins: gce108 (~gce@user/gce108)
[22:47:45] *** Joins: silug4 (~silug@068-188-018-154.biz.spectrum.com)
[22:47:59] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Ping timeout: 268 seconds)
[22:47:59] *** silug4 is now known as silug
[22:49:42] *** Joins: Adoi (~Adoi@user/adoi)
[22:49:52] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:50:30] *** xv8 is now known as XV8
[23:00:28] *** XV8 is now known as xv8
[23:03:19] *** Joins: jdltouraine_ (~jdltourai@44.229-131-109.adsl-dyn.isp.belgacom.be)
[23:04:32] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[23:05:43] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 252 seconds)
[23:09:31] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 252 seconds)
[23:13:55] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[23:15:12] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[23:19:51] *** xv8 is now known as XV8
[23:22:23] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[23:24:22] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[23:24:35] *** Joins: Nelgin (~Nelgin@bbs.endofthelinebbs.com)
[23:24:40] <Nelgin> Hi all.
[23:25:20] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[23:25:24] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[23:25:41] <Nelgin> I'm getting "Can't modify key/value hash slice in list assignment" when using something like $myhash{$key}="Whatever"; and just wondered how do I modify a hash value while I'm looping through the hash?
[23:26:17] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[23:26:31] * GumbyPAN CPAN Upload: PDL-VectorValued-1.0.11 by MOOCOW https://metacpan.org/release/MOOCOW/PDL-VectorValued-1.0.11
[23:26:47] <huf> are you sure that's where the error is coming from?
[23:26:48] <gordonfish> Nelgin: Please show your actual code. Use a pastebin is it's long.
[23:27:04] <huf> use a pastebin even if it's short.
[23:27:05] <gordonfish> Also show the complete error message.
[23:27:24] *** Joins: semeion (~semeion@user/semeion)
[23:27:42] <huf> you're probably doing %h{k} = 1;
[23:27:47] <Nelgin> That is the complete error message unless you want the script name.
[23:27:49] <gordonfish> huf: Right. I should have said if it's more than a simple sentence worth, but yeah pastebin the actual code and errors.
[23:28:21] <Nelgin> No, I'm definitely not doing %h{k} I'm doing $myhash{$key} 
[23:28:27] <huf> *doubt*
[23:28:28] <Nelgin> or whatever the variable is in the script.
[23:28:44] <huf> sweval: my %h; $h{k} = 1;
[23:28:45] <Nelgin> Are you a bettering man?
[23:28:46] <perlbot> huf: 1
[23:28:57] <huf> i'm telling you that's not where your error is coming from
[23:29:09] <huf> sweval: my %h; %h{k} = 1;
[23:29:10] *** Quits: jdltouraine_ (~jdltourai@44.229-131-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 260 seconds)
[23:29:11] <perlbot> huf: ERROR: Can't modify key/value hash slice in list assignment at (IRC) line 1, near "1;" 
[23:29:13] <huf> suspicious.
[23:29:28] <gordonfish> sweval: my %myhash = (foo => 123); my $key = 'foo'; $myhash{$key}="Whatever"; \%myhash;
[23:29:29] <perlbot> gordonfish: {foo => "Whatever"}
[23:29:31] <gordonfish> sweval: my %myhash = (foo => 123); my $key = 'foo'; %myhash{$key}="Whatever"; \%myhash;
[23:29:32] <huf> since you havent shown us your code, we dont know what you're doing
[23:29:33] <perlbot> gordonfish: ERROR: Can't modify key/value hash slice in list assignment at (IRC) line 1, near ""Whatever";" 
[23:29:35] <huf> is it secret?
[23:29:50] <gordonfish> Nelgin: Notice the same error message you gave ^
[23:29:58] <Nelgin> Yeah well, give me a minute from defending myself so I can pull the offending code.
[23:33:38] <gordonfish> You probably just have a typo, % where you meant a $
[23:34:35] <Nelgin> Bah, crap, so I did / lol. I copied the variable and forgot to change the % to $. Mea culpa.
[23:34:53] <gordonfish> No problem, it happens.
[23:35:02] <huf> looks like i *am* a bettering man
[23:35:06] <huf> now to find out what that is
[23:35:12] <Nelgin> Extra apologies to huf. Shame you didn't put money on it )
[23:35:27] <Nelgin> betting not bettering )
[23:41:58] <revhippie> Well, he bettered your code :)
[23:50:56] *** Quits: vrurg (~vrurg@45.74.95.181) (Remote host closed the connection)
[23:53:03] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
