[00:02:39] <jle> e36freak: what is your (and the channel in general) opinion about removing the +r ? it was implemented because of the freenode bots, but the other channels, like sed, bash and regex seem to be doing fine without it now
[00:09:11] <Patsie> I agree
[00:39:42] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Read error: Connection reset by peer)
[01:00:36] *** Joins: optative (~optative@198.13.161.195)
[01:16:48] <Riviera> mh
[01:16:53] *** ChanServ sets mode: +o Riviera
[01:17:01] *** Riviera sets mode: -r 
[01:17:09] *** Riviera sets mode: -o Riviera
[01:17:16] <Riviera> Let's just see how that goes.
[01:17:26] *** Joins: zxcpoi (xyz@2001:41d0:800:1b4b:24:0:777:dead)
[01:41:41] <Patsie> thanks Riviera 
[01:42:24] <Riviera> ah well, thanks to jle for pointing it out :)
[01:50:31] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:38:04] *** Joins: lavaball (felix@31.204.155.215)
[02:48:19] *** Quits: waldo323 (~waldo323@d14-69-96-170.try.wideopenwest.com) (Remote host closed the connection)
[02:48:50] *** Joins: waldo323 (~waldo323@d14-69-96-170.try.wideopenwest.com)
[02:52:27] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[03:03:49] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 252 seconds)
[03:07:26] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:11:26] *** Joins: [R] (~rs@genoce.org)
[03:26:57] *** Quits: adip (~adip@dih227.neoplus.adsl.tpnet.pl) (Ping timeout: 265 seconds)
[03:52:08] *** Joins: adip (~adip@dih227.neoplus.adsl.tpnet.pl)
[04:05:35] *** Joins: seninha (~seninha@user/seninha)
[04:33:54] *** Quits: adip (~adip@dih227.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[04:44:21] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:15:48] <e36freak> :o
[05:30:27] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:51] *** Joins: vlm (~vlm@user/vlm)
[05:51:14] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[06:52:40] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[07:46:20] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[08:06:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:11:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[08:16:38] *** Quits: optative (~optative@198.13.161.195) (Quit: Good bye libera and take care.)
[08:33:01] *** Joins: waldo323_ (~waldo323@d14-69-96-170.try.wideopenwest.com)
[08:35:40] *** Quits: waldo323 (~waldo323@d14-69-96-170.try.wideopenwest.com) (Ping timeout: 268 seconds)
[09:07:50] *** Joins: lgc (~lgc@user/lgc)
[10:17:21] *** Quits: nmz (~nmz@adsl-72-50-7-10.prtc.net) (Quit: EXIT)
[10:17:57] <zacts> for anyone interested: https://github.com/lydianchromatic/kana.awk
[10:17:59] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[10:29:20] <geirha> don't know what those words mean, but your shell script needs quoting
[10:31:37] <zacts> how would I properly quote my shell script?
[10:32:52] <geirha> dir=`dirname $0`  ->  dir=$(dirname "$0")   though that's not entirely reliable. See https://mywiki.wooledge.org/BashFAQ/028
[10:33:12] <geirha> you also need quotes around the argument containing $script_directory on the next line
[10:34:49] <geirha> *arguments
[10:36:21] <zacts> thanks geirha 
[10:37:03] <geirha> I'd probably also extend the awk script to allow the input to be files instead of just stdin. E.g. by first doing a getline loop on ARGV[1], then shift away that file from ARGV, decrement ARGC, then do the rest of the parsing the regular way
[10:45:07] <zacts> geirha: how would I do that with POSIX awk?
[10:46:01] <zacts> I don't know how to shit off the file from ARGV
[10:46:17] <zacts> oops
[10:46:18] <zacts> shift
[10:46:22] <zacts> typo
[10:48:07] <geirha> you just iterate it and do ARGV[1] = ARGV[2]; ARGV[2] = ARGV[3]; etc...
[10:49:25] *** int is now known as vi
[10:50:04] <geirha> for (i = 2; i < ARGC; ++i) ARGV[i-1] = ARGV[i]; ARGC--;
[10:50:21] <geirha> now you've effectively shifted away kana.txt from awk's arguments
[10:52:30] <geirha> # awk 'BEGIN{ for (i = 2; i < ARGC; ++i) ARGV[i-1] = ARGV[i]; ARGC--; } 1' <(echo one) <(echo two) <(echo three)
[10:52:32] <shbot> geirha: two
[10:52:32] <shbot> geirha: three
[10:53:36] <zacts> I get: null file name in print or getline
[10:54:30] <geirha> Hm. Which awk implementation is that?
[10:54:40] <zacts> FreeBSD awk (which I think is nawk)
[10:55:25] <zacts> I also don't want to rely on any particular awk.
[10:55:39] <zacts> I want mawk, nawk, and gawk to work equally well
[10:55:43] <zacts> ^^ at least this
[10:55:49] <geirha> I just tested it with mawk, nawk and gawk, and it behaves the same in all
[10:55:57] <zacts> perhaps it's my own error
[10:57:25] *** vi is now known as vvi
[11:00:03] <zacts> ok
[11:00:09] <zacts> the awk script is running without error now
[11:00:10] <zacts> but
[11:00:29] <zacts> the shell script just exits now and I have no way to pipe into the awk script or anything
[11:04:28] <zacts> ah I think I've got it
[11:05:50] <Patsie> you're using the romaji[] array twice in your script. once while reading argv[1] (your CSV) and then again while parsing your stdin, overwriting the previous set one
[11:06:06] <Patsie> one 10 and line 19
[11:06:11] <Patsie> line 10 and line 19
[11:06:48] <Patsie> I think line 10 is a bit weird, assigning a value to an index which has the same value
[11:06:54] <Patsie> it's like saing one="one"
[11:11:07] <Patsie> your whole join function can be written somewhat shorter (if you'd like)
[11:11:10] <Patsie> function join(sep, arr,    str) {
[11:11:10] <Patsie>   for (x in arr)
[11:11:10] <Patsie>     str = arr[x] (str ? (sep str) : str)
[11:11:10] <Patsie>   return str
[11:11:12] <Patsie> }
[11:11:55] <Patsie> it's a standaard to add a function's local variables separated with some spaces to the function arguments
[11:12:23] <Patsie> any function arguments are local variables to that function so you don't have to worry that they will be globally overwritten
[11:12:32] <Patsie> actually, 'x' should also be in there
[11:12:48] <Patsie> function join(sep, arr,    str, x) {
[11:13:28] <zacts> thanks
[11:13:40] *** Parts: vvi (~int@0x4.cx) (Leaving)
[11:15:29] <zacts> ok, I'm thinking of renaming the first romaji[] into tokens[]
[11:16:09] *** Joins: lavaball (felix@31.204.155.215)
[11:16:26] <zacts> also, doesn't tokens[$1] = $1 make sense? even though the key and value are the same?
[11:16:46] <Patsie> depends on what you do with it later, I guess
[11:17:04] <zacts> I know it's kind of odd that the key and value are the same, but yeah.
[11:17:15] <Patsie> what is your goal with it later on?
[11:17:26] <zacts> I'm turning it into a regex string
[11:17:37] <zacts> which then is used in the gsub line
[11:18:07] <zacts> instead of hardcoding the regex I'm autogenerating it from the kana.txt file
[11:18:11] <Patsie> then just 'tokens[$1]' is enough to set the array, so that you can loop over all indexes
[11:18:35] <Patsie> 'tokens[$1]' or 'tokens[$1] = 1'
[11:18:40] <zacts> can I list all of the indexes?
[11:18:46] <Patsie> but you're just interested in defining the array index
[11:18:49] <zacts> I need the index value itself
[11:19:05] <zacts> I want the names of those indexes so that I can combine them into my regex
[11:19:15] <Patsie> no, you have to loop over the array with a 'for (x in array)' loop
[11:20:17] <zacts> oh, so I could just do for (x in array) { str = x }
[11:20:27] <Patsie> 'for (idx in array)' will have idx contain the indexes and array[idx] the values
[11:20:38] <zacts> ok
[11:20:59] <Patsie> 'for (x in array) { str = x }' doesn't make musch sense; because you'd overwrite 'str' every time
[11:21:21] <Patsie> and str will eventually (when the loop ends) contain only the last looped over idx value
[11:21:33] <zacts> ok, so I'm using join though
[11:21:56] <Patsie> yes, that join function appends each index to some string and return the entire wring
[11:21:59] <Patsie> string*
[11:22:18] <Patsie> with some separator in between
[11:25:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:27:03] <Patsie> but instead of doing two loops, to get your regex (and also create an unneccesary array) you could also replace line 10 with: regex = regex (regex ? ("|" $1) : $1)
[11:27:24] <Patsie> and remove line 13
[11:27:32] <Patsie> and remove your join function
[11:27:42] <Patsie> no need to double-loop
[11:28:49] <Patsie> or: regex = (regex ? (regex "|" $1) : $1)
[11:33:44] <zacts> neat thanks
[11:36:11] <geirha> now instead of the second  while (getline < ARGV[1] > 0), just end the BEGIN section and open a new {...}
[11:36:13] <Patsie> what happened to your table/txt/csv file? I see lots of kana in column 2 and/or 3 replaced with just romaji ?
[11:36:36] <Patsie> geirha: I already suggested that, but somehow zacts has issues with that(?!)
[11:36:45] <Patsie> dunno why
[11:38:27] <geirha> Ah , they messed up the ARGV loop
[11:38:54] <geirha> ARGC-- must be done outside, after, the loop
[11:39:12] *** Joins: adip (~adip@dih227.neoplus.adsl.tpnet.pl)
[11:39:39] <geirha> that would explain the issues mentioned earlier
[11:44:31] <geirha> zacts: like this: http://ix.io/3z7p/awk
[11:45:31] <zacts> ok, this is where I'm at now: https://github.com/lydianchromatic/kana.awk/tree/a65daccc4d0d3639e9be6e821f861aa00c716741
[11:46:22] <geirha> still got the ARGC-- inside the loop, which is wrong
[11:46:52] <geirha> you only want to decrement it once
[11:47:13] <geirha> because you're only removing one argument
[11:47:14] <zacts> yeah I just fixed that
[11:48:10] <geirha> now it should handle both   kana file   and   kana <file  as well as  kana file1 file2 file3...
[11:48:41] <zacts> thank you! :-)
[11:49:00] <geirha> and the operation is called a "shift". unshift is the opposite operation; when you prepend a new argument
[11:49:05] <zacts> oops
[11:49:43] <zacts> fixed
[11:51:11] <zacts> "Patsie: what happened to your table/txt/csv file? ..."
[11:51:43] <zacts> those are placeholders since I'm using spaces as my FS
[11:52:02] <Patsie> ohw, you just didn't have time yet to fill those in
[11:52:04] <Patsie> ok
[11:52:15] <Patsie> thought it would be an easy copy/paste from wikipedia :)
[11:52:18] <zacts> well, some of those I don't know what the kana is for them
[11:52:51] <zacts> like I don't know if katakana provides characters for kya kyu kyo for example
[11:53:10] <Patsie> https://en.wikipedia.org/wiki/Katakana#Table_of_katakana
[11:53:34] <Patsie> https://en.wikipedia.org/wiki/Hiragana#Table_of_hiragana
[11:53:45] <zacts> thanks
[11:54:34] <Patsie> you could also install japanese input on your OS and find it out :)
[11:54:55] <Patsie> キュ　きゅ
[11:55:16] <Patsie> yup, both katakana and hiragana produce 'kyu' for me :)
[11:55:49] <zacts> ok
[11:56:03] <zacts> yeah, I'm just getting started with learning japanese too.
[11:58:18] <zacts> I have japanese input installed
[11:58:42] <zacts> fcitx-mozc
[11:58:44] <Patsie> 'too' ? who else are you refering to? :)
[11:59:08] <zacts> 'too' meaning also
[11:59:31] <zacts> yeah, I'm also just getting started with learning japanese.
[11:59:42] <Patsie> "I'm just getting started (something) too" means somebody else is also just starting
[12:00:11] <Patsie> but yeah, I was just kidding
[12:00:24] <Patsie> japanese can be fun
[12:02:04] <Patsie> although I still think counting is silly (with all the different forms/shapes/sizes and 10.000 groupings)
[12:10:51] <zacts> thanks!
[12:11:00] <zacts> I'm off to sleep.
[12:11:18] <Patsie> おやすみなさい
[12:12:33] *** Quits: earnestly (~earnest@user/earnestly) (Quit: WeeChat 3.2)
[12:14:08] *** Joins: earnestly (~earnest@user/earnestly)
[13:00:54] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:09:21] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[13:53:17] *** Joins: lavaball (~Melissa@31.204.155.215)
[15:22:57] *** Joins: seninha (~seninha@user/seninha)
[15:34:25] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[15:36:51] <wwilliam> Hello I have this line:   Average:          all      0.66      0.00      0.17     99.17
[15:37:27] <wwilliam> how do i substract 100 - $NF?  i had this but dont work:
[15:38:20] <wwilliam> sorry nm.
[15:38:34] <geirha> awk '$1 == "Average:" { print 100 - $NF }'
[15:45:38] <wwilliam> Thank you geirha 
[15:46:46] <wwilliam> how do i suppress to show 2 columns in this case I dont want %iowait and %steal to show in my output of this:
[15:47:07] <wwilliam> sar -u -f /var/log/sa/sa20210916 
[15:47:23] <wwilliam> 11:20:01 PM     CPU     %user     %nice   %system   %iowait    %steal     %idle
[15:47:25] <wwilliam> 11:30:01 PM     all      2.42      0.00      1.13      0.01      0.00     96.44
[15:47:57] <geirha> first check if the command itself has options that allows adjusting the output
[15:48:09] <wwilliam> Ok man sar reading....
[15:48:21] <wwilliam> Thank you.
[16:32:00] *** Joins: [X-Scale] (~ARM@31.22.160.28)
[16:32:34] *** Quits: X-Scale (~ARM@83.223.226.16) (Ping timeout: 260 seconds)
[16:33:29] *** [X-Scale] is now known as X-Scale
[16:51:17] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:00:51] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[17:11:55] *** Joins: Torr (~Torr@user/torr)
[18:02:59] *** Joins: samir (~azureuser@user/samir)
[18:40:48] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[18:42:43] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:06:07] *** Joins: emanuele6 (~emanuele6@37.160.94.2)
[19:06:08] *** Quits: emanuele6 (~emanuele6@37.160.94.2) (Changing host)
[19:06:08] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[19:07:50] *** Joins: seninha (~seninha@user/seninha)
[19:15:06] *** Joins: jess (~jess@libera/staff/jess)
[19:22:33] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[19:42:29] *** Joins: earnestly (~earnest@user/earnestly)
[20:33:02] *** Joins: waldo323__ (~waldo323@d14-69-96-170.try.wideopenwest.com)
[20:36:09] *** Quits: waldo323_ (~waldo323@d14-69-96-170.try.wideopenwest.com) (Ping timeout: 268 seconds)
[20:44:41] *** Joins: knstn (~knstn@ppp-94-66-57-40.home.otenet.gr)
[22:05:24] <jle> geirha: du jobber ikke tilfeldigvis i det offentlige?
[22:17:21] *** Joins: src (~src@user/src)
[23:27:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:28:42] *** Joins: seninha (~seninha@user/seninha)
[23:38:43] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 252 seconds)
[23:52:38] *** Joins: nmz (nmz@brought.to.you.by.bnc4free.com)
