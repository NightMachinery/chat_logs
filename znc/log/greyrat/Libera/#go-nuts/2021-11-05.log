[00:01:04] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[00:06:52] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:11:38] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[00:16:58] *** Joins: jbauer (~jbauer@146.71.11.98)
[00:22:12] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[00:26:55] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:29:22] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:31:52] *** Quits: engest (~engest@50.39.177.170) (Read error: Connection reset by peer)
[00:32:14] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[00:32:20] *** Joins: engest (~engest@50.39.177.170)
[00:35:31] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net)
[00:47:29] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:51:04] *** Quits: jbauer (~jbauer@146.71.11.98) (Quit: Quitting)
[00:54:09] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[00:58:11] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[00:58:39] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:02:38] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 260 seconds)
[01:03:45] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca)
[01:05:27] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 256 seconds)
[01:05:44] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:05:54] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[01:06:11] *** Parts: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca) ()
[01:08:01] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[01:08:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[01:10:06] *** Joins: fikran (~fikran@user/fikran)
[01:16:19] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:16:47] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[01:18:54] *** Quits: engest (~engest@50.39.177.170) (Read error: Connection reset by peer)
[01:19:23] *** Joins: engest (~engest@50.39.177.170)
[01:28:54] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[01:29:31] *** Quits: souvik_ (~souvik@103.59.73.46) (Ping timeout: 268 seconds)
[01:30:04] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:21] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:32:30] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[01:33:50] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:34:21] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net) (Quit: WeeChat 3.2)
[01:45:34] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[01:46:09] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Ping timeout: 268 seconds)
[01:50:53] *** Joins: arcatech (~arcatech@user/arcatech)
[01:51:02] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[01:52:15] *** Quits: greypw254 (~greypw2@grey.pw) (Quit: I'll be back!)
[01:53:10] *** Joins: greypw254 (~greypw2@grey.pw)
[01:53:11] *** Quits: greypw254 (~greypw2@grey.pw) (Client Quit)
[01:53:57] *** Joins: greypw254 (~greypw2@grey.pw)
[01:55:55] *** Quits: greypw254 (~greypw2@grey.pw) (Client Quit)
[01:57:30] *** Joins: greypw254 (~greypw2@grey.pw)
[02:00:21] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 268 seconds)
[02:00:38] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:1c0b:220d:4ee5:1f91) (Quit: Leaving)
[02:02:38] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[02:02:57] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:03:13] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[02:07:08] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:07:08] *** Quits: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32) (Ping timeout: 268 seconds)
[02:11:34] <krux02> is it possible that go secretly copies a string value and I do not reference the original bytes anymore?
[02:12:51] <krux02> I wrote code that relies on the fact that it references a substring of a string, so that I can compute the offset later, and now the substring is outside of that string
[02:12:59] <krux02> and my location computation goes nuts
[02:13:43] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[02:15:25] *** Joins: rcernin (~rcernin@124.190.139.235)
[02:15:42] <KirkMcDonald> I assume you'd have to go through unsafe in order to get that information.
[02:16:21] *** Joins: arcatech (~arcatech@user/arcatech)
[02:17:01] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[02:18:39] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:34] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[02:21:59] *** Joins: arcatech (~arcatech@user/arcatech)
[02:25:32] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[02:25:54] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:26:38] <b0nn> reflect.StringHeader is what you want I think
[02:27:30] *** Joins: arcatech (~arcatech@user/arcatech)
[02:27:31] <b0nn> but it doesn't make sense (IMO) because strings are immutable, so.. the only thing that could have happened is the GC cleaned up the string (I'm not sure if the GC does that, but I guess there's no reason) which means that there's no reference to the string
[02:30:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:36] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:33:23] <b0nn> "references a substring of a string"  <<-- this can only be []rune, []byte, or another string
[02:33:41] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[02:33:42] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[02:34:02] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[02:35:14] <fizzie> From the earlier discussions, it's another string. And they already know how to get (via unsafe.Pointer & reflect.StringHeader) the data pointers for both, for computing the offset of the substring; the question is if/when that substring might get "disconnected" from the larger string.
[02:36:25] <b0nn> if it's two strings, they're always seperate; they're distinct
[02:37:26] <fizzie> They're not "separate" in the sense that both can have their internal data pointers referring to the same bytes in memory.
[02:38:18] <b0nn> hrm, will need to see that that's the case
[02:38:22] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:38:52] <fizzie> If you do `s := "abcd"; t := s[2:]`, then inspect the headers of the strings, the data pointer of t will be the data pointer of s + 2.
[02:38:55] <b0nn> I guess that there's no reason that it cannot happen, because immutability
[02:41:05] <fizzie> Anyway. I was under the impression that, like with slices, holding a reference to a substring will just keep the original string from being collected, but I imagine it doesn't *have* to work like that in terms of the required semantics.
[02:42:26] <fizzie> I think we did kind of try to recommend just keeping track of positions as int offsets of the original string, rather than a substring that you then use reflection on to figure out the location.
[02:42:45] <b0nn> uintptr?
[02:44:21] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[02:45:23] <fizzie> I meant something like a struct { start, end int }. ISTR they just didn't want to write `text[s.start:s.end]` whenever they needed the contents as a string.
[02:46:51] <fizzie> But rather wanted to keep *that* as a string, and then figure out what `start` was when needed. Which AIUI was more or less working earlier, but now isn't.
[02:51:29] <b0nn> hmm, the performance of calculating start each time is what scared me most :-)
[02:51:35] <b0nn> performance cost*
[02:53:46] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:56:29] *** Joins: arcatech (~arcatech@user/arcatech)
[02:58:02] <b0nn> I cannot get the t pointer to change with my (very basic) experiment https://play.golang.org/p/5nd4RsS5uCC
[02:59:01] <b0nn> https://play.golang.org/p/gt3_MqCYJyV
[02:59:38] *** Parts: ahappydeath (~ahappydea@user/ahappydeath) (WeeChat 3.3)
[02:59:43] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[03:00:15] *** Joins: mickey8 (~user@user/mickey)
[03:01:14] *** Joins: lack (~lack@user/lack)
[03:03:07] *** Joins: khyr0n (~khyr0n@200.68.128.126)
[03:04:22] *** Quits: khyr0n (~khyr0n@200.68.128.126) (Client Quit)
[03:04:51] *** Joins: khyr0n (~khyr0n@200.68.128.126)
[03:06:25] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[03:06:56] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[03:09:20] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[03:10:41] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:13:09] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:15:02] *** Joins: arcatech (~arcatech@user/arcatech)
[03:17:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:18:15] <seebs> krux02: it is in fact theoretically possible for the gc to move strings around, although it's supposed to be rare.
[03:18:31] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:19:27] *** Joins: fikran (~fikran@user/fikran)
[03:23:09] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[03:24:35] *** Quits: engest (~engest@50.39.177.170) (Read error: Connection reset by peer)
[03:25:05] *** Joins: engest (~engest@50.39.177.170)
[03:33:46] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:37:25] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[03:38:15] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-100c.inf6.spectrum.com)
[03:40:46] *** Quits: marler8997 (~marler899@204.229.3.4) (Ping timeout: 260 seconds)
[03:41:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:41:51] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:42:58] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:43:47] *** Quits: torin (~torin@cpc158497-croy28-2-0-cust45.19-2.cable.virginm.net) (Ping timeout: 246 seconds)
[03:43:53] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 264 seconds)
[03:43:57] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[03:43:58] *** Joins: gggpkm (~gggpkm@114.245.104.132)
[03:44:02] *** Quits: popey (~popey@ubuntu/member/popey) (Ping timeout: 260 seconds)
[03:45:09] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[03:45:15] *** Joins: chilversc (~chilversc@user/chilversc)
[03:45:45] *** Quits: gggpkm (~gggpkm@114.245.104.132) (Remote host closed the connection)
[03:46:59] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:47:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[03:48:01] <krux02> seebs, well when the gc moves strings around and the strings are not substrings anymore, I have to refactor everything
[03:48:12] *** Joins: monoxane0 (~monoxane@user/monoxane)
[03:48:12] <krux02> the rpoject isn't that large yet, but it is a bummer
[03:49:04] *** Joins: popey (~popey@ubuntu/member/popey)
[03:50:10] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 260 seconds)
[03:50:11] *** monoxane0 is now known as monoxane
[03:51:58] <krux02> fizzie, I guess I have to use offsets then
[03:52:05] <krux02> I thought I could use similar to slices
[03:52:22] <krux02> but nope, go does magic under the hood
[03:53:05] *** Joins: bpalmer (~user@user/bpalmer)
[03:54:01] *** Joins: torin (~torin@cpc158497-croy28-2-0-cust45.19-2.cable.virginm.net)
[03:57:55] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:58:55] *** Joins: jespada (~jespada@190.7.36.46)
[04:01:01] *** Quits: khyr0n (~khyr0n@200.68.128.126) (Read error: Connection reset by peer)
[04:01:14] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:05:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[04:12:00] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[04:12:38] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-100c.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[04:16:27] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:a4bb:882d:db63:6dda) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:16:38] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:17:31] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:22:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[04:26:13] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:31:42] *** Joins: jbauer (~jbauer@146.71.11.98)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:55] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[04:47:38] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:51:33] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:51:41] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:04:05] *** Joins: andlabs (~andlabs@2604:ca00:179:c492:b57f:58a4:4968:bb08)
[05:05:13] *** Joins: andlabs_ (~andlabs@2604:ca00:179:c492:3128:9ffc:15b2:eec9)
[05:08:30] *** Quits: andlabs (~andlabs@2604:ca00:179:c492:b57f:58a4:4968:bb08) (Ping timeout: 260 seconds)
[05:10:26] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[05:12:33] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[05:16:17] *** Joins: andlabs (~andlabs@2604:ca00:179:c492:35bf:e52a:533f:69ed)
[05:16:21] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:52] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[05:19:31] *** Quits: andlabs_ (~andlabs@2604:ca00:179:c492:3128:9ffc:15b2:eec9) (Ping timeout: 268 seconds)
[05:20:12] *** Joins: andlabs_ (~andlabs@2604:ca00:179:c492:2807:df94:198c:3b1)
[05:21:06] *** Quits: andlabs (~andlabs@2604:ca00:179:c492:35bf:e52a:533f:69ed) (Ping timeout: 260 seconds)
[05:23:13] *** Joins: lilgopher (~textual@2601:241:8000:38f0:28f2:fbc4:3935:1d8b)
[05:23:16] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:26:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:28:47] *** Joins: fikran (~fikran@user/fikran)
[05:30:18] *** Quits: shtirlic_ (~shtirlic@95-55-24-159.dynamic.avangarddsl.ru) (Read error: Connection reset by peer)
[05:31:59] *** Joins: shtirlic (~shtirlic@95-55-121-159.dynamic.avangarddsl.ru)
[05:33:47] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:35:37] *** Quits: jbauer (~jbauer@146.71.11.98) (Remote host closed the connection)
[05:35:51] *** Joins: gzj (~GZJ0X@199.193.127.57.16clouds.com)
[05:36:57] *** Joins: jbauer (~jbauer@146.71.11.98)
[05:40:25] *** Quits: gzj (~GZJ0X@199.193.127.57.16clouds.com) (Client Quit)
[05:43:11] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:46:15] <cornfeedhobo> if i mix unexported and exported fields, that's not going to mess with json struct tags on the exported fields, right?
[05:47:18] *** Quits: eau (~chat@user/eau) (Ping timeout: 260 seconds)
[05:47:52] *** Joins: andlabs (~andlabs@2604:ca00:179:c492:32:9567:4cc8:2669)
[05:48:21] *** Joins: eau (~chat@user/eau)
[05:48:22] *** Quits: jbauer (~jbauer@146.71.11.98) (Remote host closed the connection)
[05:48:33] <KirkMcDonald> Shouldn't.
[05:51:31] <cornfeedhobo> gracias
[05:51:35] *** Quits: andlabs_ (~andlabs@2604:ca00:179:c492:2807:df94:198c:3b1) (Ping timeout: 268 seconds)
[05:52:19] *** Quits: andlabs (~andlabs@2604:ca00:179:c492:32:9567:4cc8:2669) (Client Quit)
[05:53:02] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Quit: Ping timeout (120 seconds))
[05:53:20] *** Joins: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de)
[05:53:45] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[05:54:18] *** Quits: MD87 (~MD87@user/md87) (Ping timeout: 260 seconds)
[05:54:49] *** Joins: MD87 (~MD87@user/md87)
[05:54:56] *** Joins: pranjal (~pranjal@user/pranjal)
[05:56:15] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[05:56:30] *** Joins: nitrix_ (~nitrix@user/nitrix)
[05:56:53] *** nitrix_ is now known as nitrix
[05:58:02] *** Quits: ollien (~ollien@ollien.com) (Ping timeout: 260 seconds)
[05:58:02] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 260 seconds)
[05:58:23] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:59:26] *** Quits: eyJhb (~eyJhb@user/eyjhb) (Ping timeout: 260 seconds)
[05:59:42] *** Joins: brooks79 (~bswinnert@23.157.160.131)
[05:59:45] *** Joins: eyJhb (~eyJhb@user/eyjhb)
[05:59:52] *** Quits: brooks7 (~bswinnert@23.157.160.131) (Quit: Ping timeout (120 seconds))
[05:59:54] *** Quits: frobnitz (~ian@photon.remmler.org) (Ping timeout: 260 seconds)
[06:00:15] *** Joins: mastardet (~mastardet@user/mastardet)
[06:00:22] *** Quits: b0nn (~shane@user/b0nn) (Ping timeout: 260 seconds)
[06:01:06] *** Joins: normen_ (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de)
[06:01:30] *** Joins: frobnitz (~ian@photon.remmler.org)
[06:01:50] *** Joins: b0nn (~shane@user/b0nn)
[06:03:23] *** Quits: normen (~normen@p200300d7172b4100e4a08c15608ea047.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[06:03:26] *** normen_ is now known as normen
[06:05:08] *** Joins: ollien (~ollien@ollien.com)
[06:06:16] *** Joins: nickster1 (~nickster@67.207.91.6)
[06:08:18] *** Quits: nickster (~nickster@67.207.91.6) (Ping timeout: 260 seconds)
[06:08:18] *** nickster1 is now known as nickster
[06:11:15] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:57] *** Joins: kiril (~kiril@85.91.153.163)
[06:12:59] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[06:13:22] <ezzieyguywuf> on this line, what are the parentheses in `c.(Gray16)` used for? https://cs.opensource.google/go/go/+/refs/tags/go1.17.3:src/image/color/color.go;l=264;drc=refs%2Ftags%2Fgo1.17.3
[06:13:54] <nitrix> Type conversion + assertion.
[06:14:42] <ezzieyguywuf> hm, I see. is the dot always used in the syntax for type conversion + assertion?
[06:14:45] <nitrix> In this case, if _, ok := c.(Gray16); ok {, so the converted value is discarded, they're only interested in the assertion (whether or not it's able to be converted).
[06:15:03] <nitrix> The dot followed by parentheses, yes.
[06:15:54] <ezzieyguywuf> nitrix: got it, thanks for the help
[06:16:27] <nitrix> This all happens dynamically at runtime. It's usually when the type is some sort of interface{} that can be various different types.
[06:17:06] <nitrix> There's a static version of all this, int(x) would be the same conversion done statically, but it's not always possible for all types.
[06:18:44] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[06:19:56] <nitrix> ezzieyguywuf, If you want to test the interface against multiple types, you could have a switch case instead.  switch v := c.(type) { case Gray16: /* do something with v */ }
[06:20:48] <nitrix> ezzieyguywuf, Within the if earlier, and within this switch case, the type of the variable is narrowed from the more generic interface down to that of the concrete type that was successfully asserted.
[06:22:35] <ezzieyguywuf> nitrix: ahhh the static version is what I read about the other day
[06:22:39] <ezzieyguywuf> that dot was throwing me off
[06:25:40] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[06:26:29] *** Joins: jannis (~jannis@user/xjs)
[06:29:01] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Ping timeout: 256 seconds)
[06:29:34] *** Joins: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de)
[06:29:35] *** Quits: strubbl891941988 (~strubbl@ipb21a9322.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[06:29:35] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 256 seconds)
[06:30:09] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:30:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:37:38] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:56:53] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[06:59:19] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:00:12] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[07:01:51] *** Quits: lilgopher (~textual@2601:241:8000:38f0:28f2:fbc4:3935:1d8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:01:53] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:16:24] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:17:31] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[07:22:58] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[07:23:21] *** Joins: rcernin (~rcernin@124.190.139.235)
[07:29:39] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[07:34:34] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:36:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:36:26] *** Joins: lilgopher (~textual@2601:241:8000:38f0:28f2:fbc4:3935:1d8b)
[07:36:42] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[07:36:49] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[07:38:08] *** Joins: fikran (~fikran@user/fikran)
[07:39:31] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 268 seconds)
[07:56:12] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[08:02:20] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[08:03:23] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[08:07:52] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:10:09] *** Quits: pranjal (~pranjal@user/pranjal) (Quit: WeeChat 3.3)
[08:30:16] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[08:32:05] *** Quits: Balooga_ (sid407689@id-407689.lymington.irccloud.com) ()
[08:32:29] *** Joins: Balooga (sid407689@id-407689.lymington.irccloud.com)
[08:32:30] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:35:11] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[08:37:28] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[08:39:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[08:39:55] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:40:51] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:41:17] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[08:44:50] *** Quits: lilgopher (~textual@2601:241:8000:38f0:28f2:fbc4:3935:1d8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:46:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:47:40] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[08:49:52] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[09:01:43] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Quit: Lost terminal)
[09:07:05] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[09:15:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:18:54] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:986a:7b89:c54:84a5)
[09:20:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[09:20:52] *** Joins: jpw (~jpw@user/jpw)
[09:21:34] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[09:23:44] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:986a:7b89:c54:84a5) (Ping timeout: 268 seconds)
[09:25:37] *** Joins: souvik (~souvik@103.59.73.46)
[09:29:58] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[09:30:31] *** Quits: souvik (~souvik@103.59.73.46) (Ping timeout: 268 seconds)
[09:31:48] *** Joins: zunk (~zunk@user/zunk)
[09:34:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:37:08] *** Joins: arcatech (~arcatech@user/arcatech)
[09:39:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[09:41:00] *** Quits: engest (~engest@50.39.177.170) (Ping timeout: 268 seconds)
[09:42:23] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 264 seconds)
[09:45:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:47:30] *** Joins: fikran (~fikran@user/fikran)
[09:55:43] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:57:37] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Remote host closed the connection)
[09:58:00] *** Joins: Atque (~Atque@user/atque)
[10:00:57] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:05:52] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:06:11] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[10:13:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:13:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:17:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[10:21:04] *** Quits: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:23:36] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[10:31:51] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:32:13] *** Quits: hegemoOn (~netmonk@195-154-92-20.rev.poneytelecom.eu) (Quit: WeeChat 2.8)
[10:35:35] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:f9e5:7df6:b38c:1391)
[10:36:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[10:44:28] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:46:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:47:47] *** Quits: Modervomubel (~gnuman@c-76-104-144-218.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[10:47:55] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 260 seconds)
[10:48:21] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:50:18] *** Joins: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de)
[10:54:55] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:59:56] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:00:17] *** Joins: mickey8 (~user@user/mickey)
[11:03:13] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[11:03:36] *** Joins: thing (~thing@user/thing)
[11:04:41] *** Quits: transacid (~transacid@transacid.de) (Ping timeout: 245 seconds)
[11:04:59] *** Joins: transacid (~transacid@transacid.de)
[11:05:56] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[11:06:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[11:11:00] *** Quits: transacid (~transacid@transacid.de) (Remote host closed the connection)
[11:11:18] *** Joins: transacid (~transacid@transacid.de)
[11:12:34] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:17:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:21:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[11:24:01] *** Joins: mrig (~AdiIRC@user/mrig)
[11:26:06] *** Joins: souvik (~souvik@103.59.73.46)
[11:30:42] *** Quits: souvik (~souvik@103.59.73.46) (Ping timeout: 260 seconds)
[11:30:53] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:50:18] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:52:38] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:f9e5:7df6:b38c:1391) (Ping timeout: 260 seconds)
[11:54:32] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:f9e5:7df6:b38c:1391)
[11:55:25] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[11:55:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[11:55:37] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[11:56:51] *** Joins: fikran (~fikran@user/fikran)
[11:57:39] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:59:02] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[12:02:12] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[12:05:02] *** Quits: jannis (~jannis@user/xjs) (Quit: Bye.)
[12:05:32] *** Joins: Xjs (~jannis@user/xjs)
[12:06:11] *** Joins: arinov (~arinov@213.194.126.155)
[12:09:00] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 268 seconds)
[12:10:55] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[12:13:18] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:f9e5:7df6:b38c:1391) (Ping timeout: 268 seconds)
[12:14:41] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:15:46] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:17:16] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[12:19:04] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 265 seconds)
[12:19:07] *** Joins: alzgh (~alzgh@user/alzgh)
[12:19:29] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[12:21:23] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[12:23:19] *** Quits: Guest4382 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Remote host closed the connection)
[12:44:34] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[12:47:02] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Ping timeout: 256 seconds)
[12:48:40] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[12:48:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:49:55] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Remote host closed the connection)
[12:50:10] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[12:52:10] *** Quits: _xor (~xor@72.49.199.147) (Ping timeout: 268 seconds)
[12:54:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[12:56:46] *** Joins: ruel (~ruel@150.136.4.160)
[12:57:08] *** Quits: lvlinux (~ruel@150.136.4.160) (Ping timeout: 246 seconds)
[13:00:46] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[13:00:47] *** Joins: McQuestionable (~McQuestio@82.33.124.135)
[13:01:16] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[13:06:45] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:f9e5:7df6:b38c:1391)
[13:07:51] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:f9e5:7df6:b38c:1391) (Client Quit)
[13:08:22] *** Joins: samlamamma (~samlamamm@proxy01.se.axis.com)
[13:08:59] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[13:09:30] *** Joins: zkanda (~zkanda@box.makean.art)
[13:18:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:16] *** Joins: chripell (~chripell@109.255.230.3)
[13:23:36] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[13:23:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:25:16] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--2f1.oracle-ocna.com)
[13:25:56] *** Joins: souvik (~souvik@103.59.73.46)
[13:28:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[13:30:38] *** Quits: souvik (~souvik@103.59.73.46) (Ping timeout: 260 seconds)
[13:35:47] *** Joins: _xor (~xor@72.49.199.147)
[13:36:29] *** Joins: adlternative (~adl@117.32.216.71)
[13:38:10] *** Quits: monoxane (~monoxane@user/monoxane) (Remote host closed the connection)
[13:39:13] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb) (Remote host closed the connection)
[13:39:27] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04)
[13:40:07] *** Joins: monoxane (~monoxane@user/monoxane)
[13:43:37] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[13:44:12] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[13:44:13] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[13:52:46] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[13:53:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:59:14] *** Joins: HdkR (~ryanh@li489-126.members.linode.com)
[13:59:41] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:04:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[14:04:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[14:04:52] *** Quits: HdkR (~ryanh@li489-126.members.linode.com) (Changing host)
[14:04:52] *** Joins: HdkR (~ryanh@user/hdkr)
[14:05:06] <HdkR> Hey hey. Stopping by because I believe I've found a bug in runtime/lfstack.go. on line 28 it has a check for sanity. `if node1 := lfstackUnpack(new); node1 != node {` Which `lfstackUnpack` on amd64 platforms will sign extend the 48bit pointer in to a true canonical pointer. This breaks if a 48-bit pointer with the high bit is actually set. Which TBF usually isn't the case since Linux kernel only gives the
[14:05:12] <HdkR> userspace 47-bits to work with.
[14:06:12] *** Joins: fikran (~fikran@user/fikran)
[14:09:03] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[14:12:59] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[14:15:57] <bpalmer> HdkR: probably best to report that on the mailing list, as this channel is mostly filled with people who program in go, rather than work on the go compiler/runtime
[14:17:03] *** Joins: skeels (uid493124@id-493124.uxbridge.irccloud.com)
[14:17:57] *** Joins: msmhnd^ (~msmhnd@wsip-98-188-242-6.mc.at.cox.net)
[14:18:26] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:18:33] <HdkR> Dang
[14:22:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[14:25:25] *** Joins: mrig (~AdiIRC@user/mrig)
[14:26:00] *** Joins: dr0n (~nabromov@92.40.255.112.threembb.co.uk)
[14:26:53] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:27:54] *** Joins: mickey8 (~user@user/mickey)
[14:29:23] *** Joins: souvik (~souvik@103.59.73.92)
[14:30:50] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 260 seconds)
[14:38:00] *** Joins: vovs03 (~En3rgy.UM@83.220.178.96)
[14:42:15] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[14:43:54] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 260 seconds)
[14:46:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:49:01] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098)
[14:53:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:54:28] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[14:57:58] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[15:07:34] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[15:10:16] *** Joins: kiril (~kiril@85.91.153.163)
[15:16:20] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[15:19:36] <mickey8> is it possible to define a new type that is a clone in its structure of another type?
[15:20:28] <ikke> You can embed structs
[15:20:39] <ikke> https://eli.thegreenplace.net/2020/embedding-in-go-part-1-structs-in-structs/
[15:23:13] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:23:31] *** Joins: mickey8 (~user@user/mickey)
[15:23:57] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 256 seconds)
[15:25:39] <krux02> ikke, an embedded struct is not entirely structurally equivalent
[15:25:47] <krux02> same memory layout, same performance
[15:25:55] <krux02> but from the reflection API it looks different
[15:27:14] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[15:27:35] *** Quits: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[15:27:36] *** Joins: sudden (~cat@user/sudden)
[15:28:12] <ikke> so it depends on what mickey8 wants to achieve
[15:28:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:29:10] <mickey8> there's a struct in some external package, say ext.CoolType, and my project uses WarmType which is structurally identical, and i'd like to avoid reiterating through it all over again in the definition
[15:29:28] <mickey8> (unless there's a better way to do that..)
[15:31:09] *** Quits: samlamamma (~samlamamm@proxy01.se.axis.com) (Quit: Client closed)
[15:33:22] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[15:34:13] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:34:32] *** Joins: mickey8 (~user@user/mickey)
[15:35:29] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net)
[15:36:14] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04) (Quit: Leaving)
[15:46:38] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:46:58] *** Joins: mickey8 (~user@user/mickey)
[15:48:10] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04)
[15:52:04] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[15:52:18] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[15:52:34] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[15:54:33] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 256 seconds)
[15:54:41] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[15:57:47] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:e12b:32a9:38dc:6318) (Remote host closed the connection)
[16:01:22] *** Quits: McQuestionable (~McQuestio@82.33.124.135) (Ping timeout: 260 seconds)
[16:04:59] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:07:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[16:09:29] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098) (Ping timeout: 268 seconds)
[16:09:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[16:10:06] <sztanpet> sure there is, the question is why do you need to iterate over it
[16:10:53] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:11:13] *** Joins: mickey8 (~user@user/mickey)
[16:13:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:15:33] *** Joins: fikran (~fikran@user/fikran)
[16:17:37] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[16:18:04] *** Joins: Gnuman (~gnuman@user/gnuman)
[16:18:45] <krux02> sztanpet, this type of support "Q: how do I do X A: Why do you even want to do X? don't do X" is really annoying when you try to find the solution to a problem.
[16:18:58] *** Quits: sudden (~cat@user/sudden) (Quit: leaving)
[16:19:10] <krux02> it doesn't help, it just causes delay to find the answer
[16:21:04] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--2f1.oracle-ocna.com) (Remote host closed the connection)
[16:21:28] <krux02> mickey8, you can always use reflection to generate a structurally equivalent type (code generation) and then use that. You can also use cast there.
[16:22:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:22:10] <krux02> you can also cast the pointer to the structurally equivalent type
[16:23:52] <bookworm> krux02: ever heard of the XY problem? Those questions meed to be asked sometimes
[16:24:56] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:26:39] <siXy> krux02: https://xyproblem.info/
[16:26:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:31:04] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 268 seconds)
[16:34:02] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:36:05] <krux02> I generally know the "how do I do X" "don't do X" problem.
[16:37:17] <krux02> It generally happens when I ask questions in certain types of communities.
[16:37:49] <bookworm> just answer the "why" then
[16:37:51] <siXy> it happens when you ask bad questions, and the people you're asking are experienced enough to notice
[16:38:00] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:38:11] <krux02> the "why" is often complicated to answer
[16:38:45] <krux02> while a simple "that is how you do it" wouldn't be complicated for the person who knows how to do it
[16:38:51] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[16:39:00] *** Quits: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[16:39:00] *** Joins: sudden (~cat@user/sudden)
[16:39:06] <krux02> and then a huge time waste starts to happen
[16:39:15] <krux02> in the end I find the solution somewhere else
[16:39:27] <bookworm> "how do I hammer in this nail with a screwdriver?" , "oh just reverse it and use the handle"
[16:39:33] <bookworm> is that really helping?
[16:39:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:39:49] <krux02> yes
[16:39:58] <bookworm> we'll, we tend to disagree
[16:40:11] <siXy> Your sense of entitlement is starting to show again. The people you're asking are just that - people. And demanding that they help you do some damn fool thing because you won't explain the reasons why you think this damn fool thing needs to be done often goes down poorly.
[16:40:17] <krux02> is that answer hard? Or does it waste a lot of time?
[16:40:28] <bookworm> it's stupid
[16:40:32] *** Joins: kinlo (~peter@user/kinlo)
[16:40:38] <krux02> you don't know why the person needs to use a screwdriver? Maybe a hammer isn't available.
[16:40:49] <bookworm> like telling someone who points a gun at their feet to pull the trigger
[16:40:49] <krux02> Just answer the damn qustion if it isn't hard.
[16:40:53] <siXy> krux02: again: the universe does not revolve around you.
[16:40:59] <krux02> Then you can question if it actually is a good solution.
[16:41:23] <krux02> But don't refuse to answer the question, that is super annoying behavior.
[16:41:36] <krux02> this is not about me
[16:41:53] <krux02> that is a kind of frustration that I do share with a fair amount of other people.
[16:42:09] <bookworm> I prefer it of people actually point me to the proper solution
[16:42:25] <bookworm> step one is accepting that your perceived solution might be wrong
[16:42:36] <krux02> yes
[16:42:43] <krux02> but don't care
[16:42:48] <siXy> A fair number of other overly-entitled individuals who think they can just demand the answer to the specific thing they want to know without providing any context.
[16:42:50] <bookworm> we disagree there
[16:42:51] <krux02> every solution is imporfect and wrong somewhere
[16:43:07] <krux02> I don't care if it elegant.
[16:43:13] <A_Dragon> `151038     krux02 ╡ you don't know why the person needs to use a screwdriver? Maybe a hammer isn't available.` amazingly, answering `why` would communicate this information.
[16:43:23] <bookworm> XD
[16:43:25] <krux02> Especially I don't care if some random dude on the internet things if it is elegant.
[16:43:51] <siXy> This is the downside of asking more experienced people to help you for free - you need to accept that you are not in charge of them and cannot order them to just shut up and answer some idiotic question without questioning it.
[16:43:53] <A_Dragon> XY problems exist, especially in programming. its generally a good idea to ask why someone needs to do something that might be silly.
[16:44:04] <bookworm> ^
[16:44:16] <siXy> If you don't like that - go pay someone to help you.
[16:44:22] <krux02> A_Dragon, What is so hard with "With the handle, but if a hammer is available you should use that"
[16:44:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:44:49] <krux02> first answer the question, then you can talk about details.
[16:44:52] <A_Dragon> krux02: because while that works with the hammer example, programming is a creative art in which there are very many different solutions to a problem.
[16:44:58] <bookworm> you do realize that you are damaging the screwdriver yes?
[16:45:06] <A_Dragon> and no, we dont answer questions first because the moment we do you'll leave and not speak about why.
[16:45:16] <bookworm> the person asking the question may not realize that
[16:45:19] <siXy> krux02: No. Not unless you're paying, which you aren't.
[16:45:31] <A_Dragon> and in general answer questions first is dangerous, because there are nuances
[16:46:09] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[16:46:59] <A_Dragon> wait you're doing pointer math to work out substrings? why on earth?
[16:47:09] *** Quits: kinlo (~peter@user/kinlo) (Read error: Connection reset by peer)
[16:47:35] *** Joins: jcajka (~jcajka@ip-86-49-254-207.net.upcbroadband.cz)
[16:48:33] <siXy> A_Dragon: yeah, I decided it wasn't even worth engaging with that. It's crazy.
[16:49:35] <krux02> A_Dragon, why do you care that I do pointer math?
[16:50:09] <A_Dragon> its not that, its that I cannot possibly come up with a reason to do this that way
[16:51:07] <krux02> A_Dragon, yea, but you are not me. And I don't care about if you can come up for a reason for this.
[16:51:26] <krux02> What matters is, that it makes sense for me and the people who interact with this source code.
[16:51:27] <A_Dragon> and other ways to just annoy me rather than explaining why so I can help you
[16:52:23] <A_Dragon> but yeah thats cursed. I'm not touching it until I at least know why
[16:52:59] <siXy> I'm very confident there won't be a good enough reason why.
[16:56:16] <krux02> siXy, The problem is, that you confidence level rises, when I eventually would give up and find the solution somewhere else.
[16:56:24] <A_Dragon> Feel free.
[16:56:41] <A_Dragon> or explain the problem you're trying to solve
[16:57:27] <A_Dragon> `[13:59:10] <mickey8> there's a struct in some external package, say ext.CoolType, and my project uses WarmType which is structurally identical, and i'd like to avoid reiterating through it all over again in the definition` I'm pretty sure you can just do a cast here and it just works (tm)
[16:57:41] <krux02> I am trying to solve the problem that when I ask a question, as a code of cunduct, people should answer the question, not question the question.
[16:58:12] <A_Dragon> when the question is straightforward and isn't covered in footguns and "this is an awful idea you had best have a super good reason for it", people do
[16:58:41] <A_Dragon> we're here to collaborate and share knowledge. that includes knowledge regarding why doing things like this are generally bad.
[16:59:12] <siXy> What you need to understand is that this attitude you're displaying comes across as _extremely_ whiney and self-centered. It doesn't make people want to help you.
[17:01:03] <A_Dragon> mickey8: yeah https://play.golang.org/p/ZXpue4M4Ibb
[17:01:34] <siXy> Also, the whole "this is what I'm doing don't question it" is rather comically at odds with the fact that you clearly don't know enough to know that - or you wouldn't need to ask.
[17:06:05] *** Joins: McQuestionable (~McQuestio@82.33.124.135)
[17:06:40] *** Joins: engest (~engest@50.39.188.0)
[17:06:54] <krux02> found the clip, this is a common problem in many communities wher people try to ask for help: https://youtu.be/rVmJooy5NiU?t=613
[17:07:28] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:07:38] <krux02> siXy, I am not saying you shouldn't question it at all, but if you know the answer, don't question it instead of answering
[17:08:53] <krux02> "How do I changle a light bulb?" you shouldn't use a light bulb, use LEDs instead
[17:09:01] <siXy> You don't get to make those demands when asking other people to help you for free.
[17:09:05] <A_Dragon> again, as I said, the reason we tend to ask for more information first is because context helps the answer
[17:09:33] <siXy> It's kind of concerning that you don't get how utterly self-centred and entitled you sound.
[17:09:33] <krux02> yes, if you need more context, be upfront about it.
[17:09:37] <A_Dragon> the answer may remain "dont do that", because there are better ways to solve a particular problem
[17:09:45] <A_Dragon> krux02: ...what did you think asking "why" meant?
[17:09:46] <krux02> Say that the question needs more context, because you can't answer it.
[17:10:03] <siXy> ... again, you don't get to make that demand.
[17:10:09] <A_Dragon> ^ this too
[17:10:09] <krux02> What I am criticising here is, the situation where people know the answer, but refuse to provide it.
[17:10:28] <A_Dragon> krux02: I know how to build a nuclear weapon, but I'm also not sharing that information often
[17:10:36] <krux02> I am not making demands here, I am criticising, pointing out. I am communicating
[17:10:40] *** Quits: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d) (Ping timeout: 260 seconds)
[17:10:45] <A_Dragon> you're coming off as demanding
[17:10:57] <krux02> if you want to ignore my feedback here, feel free to do so
[17:11:13] <krux02> That won't change my opinion though.
[17:11:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:11:58] <krux02> A_Dragon, well then you can say that you don't share that kind of information. There is no need to question the reasons.
[17:12:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:12:31] <siXy> krux02: I think you maybe don't realise that this "feedback" has been recieved countless times, going back to the BBS days - and it's always from users who are so utterly self-centered that they don't care or don't understand that they are not the only thing in the universe that matters.
[17:12:31] <A_Dragon> I'm attempting to provide you with the information you asked for, but I don't want to provide you with the wrong solution to a problem that I *KNOW* will cause you trouble later
[17:13:10] <krux02> A_Dragon, how do you KNOW? Do yea really KNOW or do you just think you know?
[17:13:16] <A_Dragon> thats the point here. thats what I'm trying to get at. You're attempting to do something that sets off every red flag I have. Because its dangerous, unsafe, not portable, and in general against every good practice of the language.
[17:13:17] <siXy> It's not gotten any more convincing, either.
[17:13:47] <A_Dragon> we're here to share knowledge about how to write *good* software
[17:14:07] <siXy> +1
[17:14:25] <krux02> The problem is, the question isn't about wrting *good* software, or in other words your opinion about *good* software
[17:14:29] <A_Dragon> unless you have a very good reason for doing something that breaks this many rules (you probably dont, but if you do I'm happy to hear and help, or hear and provide better solutions, which you can either try or tell me why they wont work)
[17:14:47] <A_Dragon> `[15:44:25] <krux02> The problem is, the question isn't about wrting *good* software, or in other words your opinion about *good* software` no, its bad software to do what you want. it steps around chunks of the runtime
[17:14:59] <A_Dragon> if you have to ask the question you probably shouldnt need to do it.
[17:15:40] <krux02> I have my own opinions about *good* software. And I happen to know that many people disagree with me. I also know that many people do agree with me.
[17:15:53] <A_Dragon> if you do still need to ask the question, then explaining why helps us that do know the answers figure out if you really do need to do $x
[17:15:55] <krux02> Good software is just very much in the eye of the observer
[17:15:58] <A_Dragon> and then we might help you
[17:16:14] <A_Dragon> krux02: if your software breaks across releases because it relies on undefined behaviour, its universally bad software.
[17:16:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[17:17:00] <A_Dragon> also; note that I have not once said "dont do that"
[17:17:08] <A_Dragon> which is what an argument you've had above was about
[17:17:08] <krux02> A_Dragon, in C++ it is pretty much unavoidable to rely on undefined behavior sooner or later. That makes C++ a bad language.
[17:17:13] <A_Dragon> I'll always ask why
[17:17:13] <siXy> krux02: Why are you continuing to argue this? You aren't convincing anyone of anything. You aren't going to get help this way.
[17:17:17] *** Joins: jespada (~jespada@190.7.36.46)
[17:17:22] <A_Dragon> `[15:47:08] <krux02> A_Dragon, in C++ it is pretty much unavoidable to rely on undefined behavior sooner or later. That makes C++ a bad language.` this isn't C++, don't move the goalposts.
[17:17:33] <siXy> krux02: bullshit. That's absolutely, totaly wrong.
[17:17:35] <A_Dragon> discussion about go in a go channel implies its about go.
[17:17:50] <siXy> C++ that relies on undefined behaviour is crap C++ code.
[17:17:54] <krux02> sorry, but I write software in more languaegs than just Go.
[17:18:18] <siXy> So does almost everyone here. You aren't special.
[17:18:18] <A_Dragon> krux02: I write: go, python, lua, scala, kotlin
[17:18:19] <krux02> I prefer solutions that I can apply in more languages than just go. So that I can port my style of thinking to other languages.
[17:18:20] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Quit: Leaving)
[17:18:23] <A_Dragon> this doesn't make you special
[17:18:28] <A_Dragon> ...
[17:18:38] <A_Dragon> applying a C++ solution to go wont always work
[17:18:40] <krux02> That automatically make me disagree with the style of a person who only does one languae.
[17:18:48] <krux02> I am ok with that.
[17:18:50] <A_Dragon> C++ doesn't have automatic memory management, that might move things on you
[17:18:52] <huf> luckily you can write fortran in any language
[17:18:54] <huf> so that's solved
[17:18:55] <siXy> your "style of thinking" clearly needs some fixing if you think relying on undefined behaviour is acceptable.
[17:19:09] <A_Dragon> there are generally better ways to solve problems in one language than another
[17:19:18] <A_Dragon> eg good luck writing a whole bunch of OOP solutions in a FP lang
[17:19:20] <siXy> but why are you continuing to argue this? all you're convincing us of is that it's not worthwhile to bother helping you.
[17:19:24] <krux02> siXy, Where did I say that relying on undefined behaviour is acceptable?
[17:19:41] <A_Dragon> will it work? maybe (truly pure functions notwithstanding), but it wont be easy to work with and it'll probably be slow.
[17:20:17] <krux02> it just happens, and it is bad. But causes bugs. But it doesn't make the entire software package bad. Just because there is a bug in it.
[17:20:26] <siXy> "< krux02> A_Dragon, in C++ it is pretty much unavoidable to rely on undefined behavior sooner or later." << here. which, again, for the record, is totally wrong, and suggests that your c++ code is terrible.
[17:20:45] <A_Dragon> `<krux02> it just happens, and it is bad. But causes bugs. But it doesn't make the entire software package bad. Just because there is a bug in it.` who implied this?
[17:21:10] <A_Dragon> I implied that software is bad if it relies on undefined behaviour, because thats *against almost everyones best practices*
[17:21:15] <siXy> anyway. have fun not getting help, I guess.
[17:21:18] <A_Dragon> and falls under "you had better know what you're doing"
[17:22:07] <dostoyevsky2> I saw upx mentionened in a Go blog... do people generally use it?
[17:22:17] <dostoyevsky2> Makes binaries much smaller
[17:22:40] <dostoyevsky2> https://blog.filippo.io/shrink-your-go-binaries-with-this-one-weird-trick/
[17:22:52] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:23:06] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[17:23:29] *** Quits: X-Scale (~ARM@83.223.227.196) (Ping timeout: 268 seconds)
[17:23:34] <siXy> dostoyevsky2: No, it's pretty rare to see. That blog is pretty old, and things have moved on a bit since then.
[17:23:43] <dostoyevsky2> Yeah, 2016
[17:24:04] <dostoyevsky2> I think that guy might also been involved in getting Go to produce smaller binaries in general
[17:24:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:24:31] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:24:58] <krux02> I have multiple options: A: rub it in. What for a moment wher I know something but instead of answering I just question you. B: Agree to disagree and move on
[17:25:42] <siXy> He's done a lot of work on go, particularly the crypto stuff. I don't recall if he's worked on binary size. But really for most people, the raw size of the binary isn't a problem that needs solving
[17:26:02] <krux02> siXy, how do you know?
[17:26:07] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:26:15] <krux02> for WebAssembly the binary size is extremely important.
[17:26:19] <krux02> 1 MB is just too much
[17:26:25] <A_Dragon> use tinygo then.
[17:26:52] <A_Dragon> and 10MB in the day of high speed internet is not a problem.
[17:27:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[17:27:01] <siXy> krux02: I'm aware. But I'm not going to engage in more silly discussions with you. Have fun.
[17:27:10] <A_Dragon> but you seem to be intent on starting arguments constantly, so, Im going to disengage now
[17:29:11] *** Quits: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[17:29:22] *** Joins: X-Scale (~ARM@83.223.240.168)
[17:39:29] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[17:40:10] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[17:41:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:42:06] <dostoyevsky2> Also: Has anyone used a LetsEncrypt api in a test case?  I have one test case where I wrap a UrlTokenApi in LE, so I was thinking if replacing all the certs with private certs for the tests.. but it seems quite hard to make golang.org/x/crypto/acme/autocert use those
[17:42:10] *** Joins: mickey8 (~user@user/mickey)
[17:42:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[17:43:12] <dostoyevsky2> I guess I could just replace autocert altogether for the test case and then just test the TokenApi part
[17:44:51] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[17:45:03] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[17:45:19] <A_Dragon> you could have a getCert or what have you thats used internally, or break it up such that the TokenAPI part doesnt require a cert (the latter is what you likely should do)
[17:45:42] <siXy> dostoyevsky2: You'd need to ensure you hit the LE test api not the prod one, or your tests will get you rate limited. But in general I wouldn't have anything that calls out to a 3rd party api in regular tests, but you could call their test endpoint in an integration test by setting DirectoryURL in acme.client
[17:46:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:46:37] <siXy> you'd want to make sure it doesn't hit it too often though, or they'll get mad at you
[17:48:29] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[17:51:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[17:54:44] *** Joins: kinlo (~peter@user/kinlo)
[18:03:43] *** Joins: Guest908 (~Guest908@200.111.224.131)
[18:04:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:04:12] *** Quits: McQuestionable (~McQuestio@82.33.124.135) (Ping timeout: 268 seconds)
[18:06:45] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f9e7:c567:6bea:321)
[18:07:03] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[18:07:28] *** Joins: thing (~thing@user/thing)
[18:09:07] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[18:09:42] *** Joins: jla (~jordi@64.225.79.195)
[18:10:58] *** Quits: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[18:13:02] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:13:27] *** Joins: mickey8 (~user@user/mickey)
[18:14:02] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:17:35] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[18:17:35] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[18:17:35] *** Joins: tane (~tane@user/tane)
[18:19:18] *** Quits: Guest908 (~Guest908@200.111.224.131) (Quit: Guest908)
[18:20:06] *** Joins: pepee (~pepee@user/pepee)
[18:20:33] *** Joins: Praise (~Fat@user/praise)
[18:21:30] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:23:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:24:33] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[18:24:54] *** Joins: fikran (~fikran@user/fikran)
[18:26:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[18:26:16] *** Quits: shtirlic (~shtirlic@95-55-121-159.dynamic.avangarddsl.ru) (Ping timeout: 260 seconds)
[18:26:54] *** Joins: arcatech (~arcatech@user/arcatech)
[18:27:11] *** Joins: shtirlic (~shtirlic@95-55-121-159.dynamic.avangarddsl.ru)
[18:31:08] *** Quits: adlternative (~adl@117.32.216.71) (Quit: Konversation terminated!)
[18:33:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:36:53] *** Joins: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de)
[18:42:22] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[18:44:38] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:9197:a69e:2097:a1d5)
[18:46:32] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:47:54] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[18:48:36] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f9e7:c567:6bea:321) (Ping timeout: 268 seconds)
[18:55:48] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:59:10] *** Quits: Xjs (~jannis@user/xjs) (Quit: Bye.)
[19:00:26] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[19:04:00] *** Quits: msmhnd^ (~msmhnd@wsip-98-188-242-6.mc.at.cox.net) (Ping timeout: 268 seconds)
[19:04:07] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[19:06:21] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:10:27] *** Quits: dr0n (~nabromov@92.40.255.112.threembb.co.uk) (Quit: WeeChat 2.8)
[19:11:03] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[19:11:39] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:14:34] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04) (Ping timeout: 260 seconds)
[19:17:52] *** Joins: McQuestionable (~McQuestio@82.33.124.135)
[19:23:49] *** Joins: Xjs (~jannis@user/xjs)
[19:24:52] *** Joins: arcatech (~arcatech@user/arcatech)
[19:25:56] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[19:26:19] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[19:26:32] *** Quits: jackneillll (~jackneill@20014C4E1807A6000AE645002870B9ED.dsl.pool.telekom.hu) (Quit: Leaving)
[19:26:49] *** Joins: jackneillll (~jackneill@20014C4E1807A600F7A430AF3AB015CF.dsl.pool.telekom.hu)
[19:26:55] *** Quits: jackneillll (~jackneill@20014C4E1807A600F7A430AF3AB015CF.dsl.pool.telekom.hu) (Client Quit)
[19:27:15] *** Joins: jackneill (~jackneill@20014C4E1807A600F7A430AF3AB015CF.dsl.pool.telekom.hu)
[19:27:22] <jackneill> hey
[19:27:50] <jackneill> in a stacktracde an interface as an argument takes 1 or 2 ptrs?
[19:29:15] <fizzie> Update to 1.17, then you don't have to wonder about that. ;)
[19:29:50] <fizzie> https://golang.org/doc/go1.17#compiler "The format of stack traces from the runtime (printed when an uncaught panic occurs, or when runtime.Stack is called) is improved. -- Now each argument in the source code is printed separately, separated by commas. -- interface -- arguments are delimited by curly braces."
[19:30:04] *** Joins: arinov (~arinov@178.240.154.245)
[19:31:52] <jackneill> https://research.swtch.com/interfaces
[19:31:55] <jackneill> found here
[19:31:56] <jackneill> thanks
[19:32:19] *** Joins: andlabs (~andlabs@2604:ca00:179:c492:9808:a218:1be3:6395)
[19:33:02] *** Joins: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32)
[19:33:23] *** Quits: McQuestionable (~McQuestio@82.33.124.135) (Ping timeout: 264 seconds)
[19:33:58] *** Quits: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32) (Client Quit)
[19:34:11] *** Joins: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32)
[19:41:03] *** Joins: arcatech (~arcatech@user/arcatech)
[19:42:01] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[19:42:36] *** Joins: Aslandro (~aslandro@94-37-51-34.adsl-ull.clienti.tiscali.it)
[19:46:27] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:49:03] *** Joins: arcatech (~arcatech@user/arcatech)
[19:51:30] *** Quits: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:52:35] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[19:53:20] *** Quits: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 268 seconds)
[19:55:49] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[19:58:44] *** Joins: arcatech (~arcatech@user/arcatech)
[20:02:31] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04)
[20:02:59] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:03:41] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[20:04:12] *** Joins: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net)
[20:04:49] *** Quits: jjhoo (jahakala@user/jjhoo) (Remote host closed the connection)
[20:04:57] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[20:05:19] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[20:05:26] *** Joins: mickey8 (~user@user/mickey)
[20:06:13] *** Joins: andlabs_ (~andlabs@2604:ca00:179:c492:132:7ef8:1741:464)
[20:10:06] *** Quits: andlabs (~andlabs@2604:ca00:179:c492:9808:a218:1be3:6395) (Ping timeout: 260 seconds)
[20:10:08] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:10:28] *** Joins: alzgh (~alzgh@user/alzgh)
[20:13:26] *** Quits: acohn (~acohn@wikipedia/alex-cohn) (Ping timeout: 260 seconds)
[20:13:48] *** Joins: dove (~jordan@li1158-85.members.linode.com)
[20:13:49] *** Joins: acohn (~acohn@wikipedia/alex-cohn)
[20:14:11] *** Quits: dove_ (~jordan@li1158-85.members.linode.com) (Ping timeout: 265 seconds)
[20:14:50] *** Quits: Erzwurm (~archwyrm@archwyrm.net) (Ping timeout: 260 seconds)
[20:14:57] *** Joins: Archwyrm (~archwyrm@archwyrm.net)
[20:15:01] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:15:03] *** Joins: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de)
[20:15:16] *** Joins: mickey8 (~user@user/mickey)
[20:16:06] *** Joins: andlabs (~andlabs@209.107.190.158)
[20:16:09] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[20:18:29] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04) (Quit: Leaving)
[20:18:59] *** Quits: andlabs_ (~andlabs@2604:ca00:179:c492:132:7ef8:1741:464) (Ping timeout: 264 seconds)
[20:19:49] *** Joins: jjhoo (~jahakala@user/jjhoo)
[20:20:04] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb)
[20:23:33] *** Quits: vovs03 (~En3rgy.UM@83.220.178.96) (Ping timeout: 268 seconds)
[20:25:52] *** Quits: andlabs (~andlabs@209.107.190.158) (Read error: Connection reset by peer)
[20:26:26] *** Joins: andlabs (~andlabs@209.107.190.158)
[20:27:27] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[20:29:17] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[20:29:17] *** Quits: andlabs (~andlabs@209.107.190.158) (Read error: Connection reset by peer)
[20:29:32] *** Joins: andlabs (~andlabs@2604:ca00:179:c492:ac18:9ff4:9a6f:66fa)
[20:32:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:34:15] *** Joins: fikran (~fikran@user/fikran)
[20:37:35] *** Quits: andlabs (~andlabs@2604:ca00:179:c492:ac18:9ff4:9a6f:66fa) (Ping timeout: 264 seconds)
[20:42:43] *** Joins: dansan (~daniel@75.81.148.51)
[20:43:54] *** Joins: nostalgia (~nostalgia@110.8.30.213.rev.vodafone.pt)
[20:46:05] *** Quits: skeels (uid493124@id-493124.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:03:27] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:06:43] *** Quits: arinov (~arinov@178.240.154.245) (Ping timeout: 268 seconds)
[21:09:33] *** Joins: jpw (~jpw@user/jpw)
[21:16:54] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[21:24:25] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[21:24:30] *** Joins: crazymax (~crazymax@195.154.253.234)
[21:24:30] *** Quits: crazymax (~crazymax@195.154.253.234) (Changing host)
[21:24:31] *** Joins: crazymax (~crazymax@user/crazymax)
[21:26:51] *** kai61 is now known as kai
[21:26:53] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:31:52] *** Joins: fef (~thedawn@user/thedawn)
[21:34:14] *** Joins: mrig (~mrig@user/mrig)
[21:35:43] *** Quits: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:37:17] *** Joins: arinov (~arinov@213.194.126.155)
[21:39:28] *** Quits: jcajka (~jcajka@ip-86-49-254-207.net.upcbroadband.cz) (Quit: Leaving)
[21:40:55] *** Joins: art_vandelay_ (~art_vande@142.126.234.156)
[21:41:21] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:40ba:d30b:3a6f:13e2)
[21:42:29] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:43:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:46:04] *** Joins: normen (~normen@p200300d7171c0c00e58dbdf24d2c295d.dip0.t-ipconnect.de)
[21:48:50] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 260 seconds)
[21:49:41] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[21:52:25] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:52:45] *** Joins: alzgh (~alzgh@user/alzgh)
[21:55:27] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net) (Quit: WeeChat 3.2)
[21:57:33] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:03:21] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[22:05:01] *** Quits: Aslandro (~aslandro@94-37-51-34.adsl-ull.clienti.tiscali.it) ()
[22:08:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:09:00] *** Quits: souvik (~souvik@103.59.73.92) (Ping timeout: 268 seconds)
[22:10:53] <b0nn> krux02: people ask for context because there are more than one possible answers, and the right one depends on what the person asking is doing
[22:12:45] <krux02> b0nn, I an not critical about asking for context, am judgemental about people who know the answer to a question but refuse to answer the question
[22:13:09] <b0nn> no. that's not what you said
[22:13:30] <krux02> isn't it?
[22:13:37] <b0nn> scroll back
[22:14:15] <b0nn> anyways I see most of the channel is going to ignore you
[22:14:20] <b0nn> so, you've done well
[22:15:25] <seebs> I usually try to understand the context of questions, because sometimes when I ask how to do something, I'm actually wrong about what I want to do in a substantial way.
[22:15:41] <krux02> b0nn, well I triggered a lot of people and got them pissed, that is something else
[22:15:48] <seebs> Someone in another chat was asking how to create device nodes, the other day. Obviously, I know how to create device nodes. But actually, they didn't *want* to create device nodes.
[22:15:55] <seebs> They just didn't know what device nodes actually are.
[22:16:13] <seebs> What they *wanted* to do was open a pseudo-tty, so that something *else* could open a real device node that actually works, and be connected to their program.
[22:16:17] <krux02> youtube
[22:16:38] <seebs> What they *thought* they wanted to do was create a new serial port device node, because then they could open it and someone else could open it and they would somehow be connected to the someone else.
[22:16:56] <seebs> So, telling them how to use mknod would have answered the question they asked, but been completely useless to them.
[22:17:15] <krux02> seebs, I remember this one here:  https://youtu.be/rVmJooy5NiU?t=613
[22:17:32] <b0nn> krux02: he answered your question, why are you arguing now?
[22:17:35] <seebs> Experienced people often have a surprisingly accurate intuition for when a question is extremely likely to be a sign that the person asking it has a misunderstanding about the actual problem they're solving.
[22:17:54] <krux02> it is basically Linus asking "How do I do X" answer "You don't do X, don't do X" "But I just need to do X"
[22:17:57] <b0nn> but but but, you meant something else?
[22:18:02] <krux02> it is real frustration that I do share with him.
[22:18:16] *** Joins: fikran (~fikran@user/fikran)
[22:18:21] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[22:18:42] *** Joins: alzgh (~alzgh@user/alzgh)
[22:19:00] <seebs> It might be, but sometimes when you think you just need to do X, you're mistaken about something, and it's not insane for people to want to explore that. It's really easy for people to get stuck trying to do something that won't work.
[22:19:54] <seebs> There are lots of questions which I can answer, but where the realistic outcome of me answering them is that someone spends two weeks chasing other worse problems before finding out that the entire thing was a misunderstanding and they never wanted to do that in the first place.
[22:20:27] <krux02> That is not my experience.
[22:20:33] <seebs> I have no idea what your specific question was.
[22:20:37] <krux02> Sometimes yes there is an easier solution.
[22:20:54] <seebs> It's not so much "easier", but... Like, out of curiousity, how long have you been actively programming on a regular basis?
[22:20:58] <krux02> But for the majority of my experience of asking a question, it is just a waste of time.
[22:21:26] <krux02> seebs, 20 years
[22:21:35] <seebs> I've had it be sort of a waste of time once or twice, but actually, in the most visible case, the answer "you don't want to do that" was *still* true.
[22:22:05] <seebs> Now, it turns out that I really, really, *did* want to do that -- but it *doesn't work well enough*, and the answer "don't do that, it won't work" is still correct, even though the proposed alternatives were also not viable.
[22:22:13] <seebs> And the real answer is "you can't do what you want viably in Go".
[22:22:33] <krux02> that one is a good answer
[22:22:40] <krux02> (when it is true)
[22:22:45] <seebs> So, I'm curious as to what your original question *was*.
[22:22:55] <b0nn> the thing I used to hate about asking questions on IRc was absolute stupidity - people thinking they were Socrates and trying to "teach" you with the Socratic method
[22:23:00] <seebs> I haven't got the attention span to scroll back through all the arguments to figure it out.
[22:23:02] <seebs> yeah.
[22:23:17] <b0nn> You'd end up more confused than when you started
[22:23:23] <seebs> my favorite was the time I wrote up the full careful explanation of what i was trying to do, what search terms i'd used, what i'd tried so far, what didn't work with it, and so on
[22:23:32] <seebs> and someone gave me an lmgtfy link pointing to the first couple of search terms i tried
[22:23:43] <krux02> b0nn, yes that one, When I don't ask to get taught, please don't teach me.
[22:23:45] <seebs> like, yeah, i know, i in fact did outline the searching i already did
[22:23:49] <b0nn> Things have improved a lot
[22:24:22] <seebs> but apart from that... if people ask me why i want to do a thing, or what i'm trying to do it for, and i explain that, i consistently get better answers
[22:24:30] <b0nn> yeah
[22:24:34] <seebs> because they're more able to recognize when the obvious-to-them initial answer will actually not work for me
[22:24:51] <krux02> Q: How do I render a polygon? A: Don't do that yourself, there are already plenty of games ready to play on steam.
[22:25:01] <seebs> if someone says "how do i access elements of a map in sorted order", i want to know what they mean by sorted, and relative read and write loads, and approximate size, because the "right" answer varies a *lot*.
[22:25:47] <seebs> oh, sure. but there's also a big difference between "I want to render polygons because I am building a 3D engine" and "I want to render polygons because I want to have a rectangle in my GUI app and didn't notice the existing line/shape drawing primitives".
[22:25:48] <krux02> seebs, the answer would be to put the elements in an array and sort them
[22:26:07] <seebs> that answer can be fine. it can also be catastrophically bad.
[22:26:15] <seebs> it depends on workload, a *lot*.
[22:26:46] <krux02> I don't think that it can catastrophically bad.
[22:26:54] <b0nn> wait, O(n) + O(nlogn) was krux02  answer?
[22:27:07] <krux02> it contains the information that data in a hash isn't sorted and you have to do it on your own.
[22:27:32] <krux02> b0nn, that is the cost yes
[22:27:43] <krux02> and it is visible in the answer that that is the cost
[22:27:56] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:28:07] <krux02> people can see on their own if that is really what they want to do.
[22:28:15] <b0nn> oh really?
[22:28:20] <krux02> yes
[22:28:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[22:29:07] <krux02> if you always question the question, they you also question their intelligence, that is pretty much an insult.
[22:29:12] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[22:29:14] <krux02> Don't do that
[22:29:14] <b0nn> seebs: you made me think of a bot I discovered last night
[22:29:25] <whoami> seebs: "I wrote up a full careful explanation ... and someone gave me an lmgtfy link pointing to the first couple of search terms i tried" lol. r/talesfromarchlinux
[22:29:25] <seebs> in my experience, a lot of the people who want this actually need to keep the map and the array and update them in parallel somehow because otherwise they're paying a couple of orders of magnitude extra cost on what ends up being one of their most common operations
[22:29:26] <b0nn> https://twitter.com/gitlost
[22:29:54] <seebs> i don't think it's questioning my intelligence if people ask me for clarification or context on my questions
[22:30:13] <seebs> it might be questioning my ability to 100% absolutely flawlessly always arrive at the best conclusions and not overlook things, but that's a pretty reasonable thing to question.
[22:30:22] <b0nn> krux02: all you have achieved is me questioning your intelligence
[22:30:47] <b0nn> but I have had enough so you can chalk up another person refusing to engage with you
[22:31:12] <krux02> I don't know how often I already repeated this.
[22:31:30] <krux02> It is ok to ask for clarification. It is not OK to question the question. There is a difference
[22:32:37] <seebs> i guess? i don't actually care about it, and i'm not really motivated enough to put effort into trying to help people who are gonna get defensive about things like that. there are a lot of people out there who need help, i have finite time to spend on things. i can be really picky about who i help without actually running out of opportunities to help people.
[22:32:49] <krux02> It is also OK to not answer the question, but then at least don't pretend like you know the answer, just ignore it.
[22:33:12] <seebs> if someone asks something that makes me think they're probably wandering into a minefield, i'll probably ask about that because, when i've been the one wandering into a minefield, that's saved me weeks of work, and that's the thing i would prefer other people do.
[22:33:16] <krux02> This is about CoC, principles, not a specific question.
[22:33:51] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[22:33:58] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[22:34:24] <seebs> that makes sense, and i think it's fine to express a preference that people not engage a particular way, but for the most part, in my experience, most devs would rather discuss their question and its context than just get a straightforward answer that might turn out to be really unhelpful in ways that could easily have been prevented.
[22:35:06] *** Quits: Shrike (sid305680@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[22:35:06] *** Quits: decartes_ (sid240036@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[22:35:06] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 245 seconds)
[22:35:32] *** Joins: Shrike (sid305680@id-305680.helmsley.irccloud.com)
[22:35:33] *** Joins: morgabra (sid500580@user/morgabra)
[22:35:37] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[22:36:28] <b0nn> https://docs.aws.amazon.com/sdk-for-go/api/service/s3/
[22:36:45] <b0nn> Everything is dumped into a single type :'(
[22:37:15] <b0nn> Oh, my mistake, there's a zillion types too
[22:40:12] <seebs> oh good
[22:40:23] <seebs> you wouldn't want to not have a zillion types
[22:40:36] <b0nn> There's no sense or order
[22:41:04] <b0nn> I was hoping for types that logically managed parts - an ACL type, a Data type, with associated methods
[22:41:18] <b0nn> but all the methods are on 1 type, and then there are a zillion types
[22:42:08] <b0nn> If only someone at AWS had asked "Why are you doing that" when they were designing it :)
[22:42:13] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[22:42:26] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[22:42:26] *** Joins: menace (~someone@user/menace)
[22:43:41] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:44:18] <b0nn> Seriously tho, this is a major bugbear I have with AWS, they have a tonne of stuff, but it's like they brain dump it for consumers to figure out what's going on
[22:50:34] *** Joins: mmk2410_ (~mmk2410@mmk2410.org)
[22:50:40] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Ping timeout: 260 seconds)
[22:51:16] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[22:51:45] *** Joins: muesli9 (~muesli@fribbledom.com)
[22:52:42] *** Joins: flynn0 (~mcbloch@user/flynn)
[22:53:11] *** Quits: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de) (Ping timeout: 264 seconds)
[22:53:23] *** Joins: thing (~thing@user/thing)
[22:53:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 268 seconds)
[22:53:26] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 245 seconds)
[22:53:26] *** flynn0 is now known as flynn
[22:53:27] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[22:53:29] *** Quits: penguwin (~penguwin@fribbledom.com) (Ping timeout: 264 seconds)
[22:53:29] *** Quits: muesli (~muesli@fribbledom.com) (Ping timeout: 264 seconds)
[22:53:29] *** muesli9 is now known as muesli
[22:54:04] *** Joins: penguwin (~penguwin@fribbledom.com)
[22:54:55] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:55:04] *** Joins: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de)
[22:55:17] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[22:57:24] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[22:58:00] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:40ba:d30b:3a6f:13e2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:00:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[23:00:41] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[23:02:05] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:942b:aac:34d3:28d7)
[23:04:30] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[23:05:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com)
[23:08:59] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:10:19] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[23:17:49] *** Joins: mickey81 (~user@user/mickey)
[23:17:50] <saml> how do I build social network like trump tries
[23:18:35] <saml> select * from feeds where author = (select id from social where follower = :myself);  ?
[23:18:53] <saml> if I follow 500 people
[23:19:38] <saml> i guess it'll be all service calls because it's microservices
[23:20:09] <saml> 1. get all people's ids that I follow from social service.  2. query feed service with those 500 ids
[23:20:36] *** Joins: msmhnd^ (~msmhnd@h50.174.139.63.static.ip.windstream.net)
[23:20:45] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[23:20:46] *** mickey81 is now known as mickey8
[23:20:56] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Remote host closed the connection)
[23:21:21] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:24:41] <b0nn> My TODO for today is write endpoints to access data
[23:26:27] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[23:30:44] *** Quits: penguwin (~penguwin@fribbledom.com) (Quit: Ping timeout (120 seconds))
[23:31:13] *** Joins: penguwin (~penguwin@fribbledom.com)
[23:31:36] <seebs> saml: the canonical method is to steal someone else's code, ignore the licensing requirements, and get sued
[23:33:10] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[23:33:11] *** Quits: greypw254 (~greypw2@grey.pw) (Quit: Ping timeout (120 seconds))
[23:33:26] *** Joins: shadowchaser4 (~Shadowcha@liox.eu)
[23:33:33] <saml> http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html  i can just do this
[23:33:34] *** Joins: greypw254 (~greypw2@grey.pw)
[23:33:36] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: Ping timeout (120 seconds))
[23:33:38] <saml> probably 2 point jira ticket
[23:33:44] <saml> i'll ship it this sprint
[23:33:53] *** Joins: zkanda (~zkanda@159.69.159.85)
[23:34:16] *** Joins: flynn (~mcbloch@user/flynn)
[23:34:59] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:35:11] <b0nn> wait, you're supposed to rewrite it in Rust
[23:35:33] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Read error: Connection reset by peer)
[23:38:16] *** Joins: mickey89 (~user@user/mickey)
[23:38:39] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[23:38:39] *** mickey89 is now known as mickey8
[23:41:46] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[23:43:04] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[23:49:32] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[23:50:08] *** Joins: arcatech (~arcatech@user/arcatech)
[23:53:53] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[23:59:05] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:21d8:f508:23f8:99f8) (Read error: Connection reset by peer)
[23:59:42] *** Joins: freakazoid343 (~matt@35.136.210.185)
