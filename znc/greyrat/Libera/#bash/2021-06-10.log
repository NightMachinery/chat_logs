[00:00:07] <osse> bn_work: try --line-buffered on the first grep
[00:00:17] <osse> !faq buffer
[00:00:17] <greybot> https://mywiki.wooledge.org/BashFAQ/009 -- What is buffering?  Or, why does my command line produce no output: tail -f logfile | grep 'foo bar' | awk ...
[00:01:04] <bn_work> oh here we go:  
[00:01:04] <bn_work> > -D ACTION, --devices=ACTION
[00:01:04] <bn_work> > If  an  input  file is a device, FIFO or socket, use ACTION to process it.  By default, ACTION is read, which means that devices are read just as if they were ordinary files.  If ACTION is skip, devices are silently skipped.
[00:02:33] <bn_work> aha, `-D skip` helped! üëç
[00:03:04] *** Joins: physics (~physics@rain.bz)
[00:04:03] <bn_work> still puzzled why `--exclude=/proc/*` did nothing
[00:04:41] <twkm> sounds like you recursed into /dev or somewhere else which has a pipe.
[00:05:12] <bn_work> --exclude takes a glob, is the above incorrect?
[00:05:17] <phogg> bn_work: is this grep? Its --exclude only works on the basename.
[00:05:23] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[00:05:24] <bn_work> s/above/above syntax/
[00:05:27] <bn_work> phogg: yeah
[00:05:44] *** Quits: nobody__ (~nobody@host-82-60-161-222.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[00:05:47] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[00:06:16] <twkm> /proc != /dev anyway.
[00:07:55] <bn_work> phog:  --exclude-dir='/proc/*' --exclude-dir='/dev/*'?
[00:08:14] *** Quits: cliluw (~cliluw@47.147.80.149) (Remote host closed the connection)
[00:08:23] <twkm> the -D seems to cover pipes.
[00:08:36] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:08:37] <bn_work> I keep getting junk hits under /proc
[00:08:57] <bn_work> I guess I can exclude it in the grep -v part
[00:09:14] <phogg> bn_work: pretty sure it still only matches the basename
[00:09:20] * phogg hasn't tested this
[00:09:23] *** Quits: motherr (~motherr@user/motherr) (Ping timeout: 268 seconds)
[00:09:44] * phogg has now tested this
[00:09:59] <bn_work> > --exclude-dir=DIR :  Exclude directories matching the pattern DIR from recursive searches.
[00:10:01] <phogg> bn_work: sounds like you want find, not grep
[00:11:29] <phogg> bn_work: rather than 'grep -R / --desperately-try-to-exclude-things-that-i-cannot-really-recurse' you can use find to select the things you want to grep, then -exec grep on them.
[00:14:32] *** Joins: motherr (~motherr@user/motherr)
[00:15:10] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[00:15:46] <bn_work> phogg: the problem is I don't know which files contain this string, I mean I guess you can be more selective with `find`, ie:  `find -type f ...` but I'm assuming it will still search in `/proc` and I will have the same issue unless I exclude also?  grep: `-D skip` seems to have unblocked the `grep` processing at least
[00:17:47] <phogg> bn_work: if you don't want to search -proc you can tell GNU find -not -path '/proc/*' and get the kind of tree exclusion you wanted out of grep. This can also be achieved via -prune on any find, but it's trickier to do properly.
[00:17:58] <phogg> s#-proc#/proc#
[00:19:28] <twkm> i would likely start with -xdev, though for some that would make for more pain.
[00:19:56] <phogg> definitely, unless there are multiple mounts you know you want to cross (too many to list separately)
[00:21:44] *** Joins: nikodijev (~nikodijev@109-93-203-151.dynamic.isp.telekom.rs)
[00:21:55] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...‚ï≠‚à©‚ïÆ)
[00:22:17] <twkm> for me lack of -xdev on a root based find would be disastrous -- it would enumerate a giant number of remote directories.
[00:22:41] <phogg> bn_work: something like this maybe? find / -xdev -type f -not -name mail -not -name log -not -path '/opt/*' -not -name icx -not -name '*.bak' -not -name .bash_history -exec grep -sin ---color=always foo1 {} +
[00:22:56] <twkm> eww, -not.
[00:22:59] <phogg> hard to know which if your exclusion patterns should be path matches, substring matches, or exact matches
[00:23:02] <phogg> yum, -not!
[00:23:08] <phogg> sure beats '!'
[00:23:34] <phogg> I was already presuming -path, so why not
[00:23:48] <Soliton> presuming posix, why not.
[00:24:32] <Soliton> requiring GNU find for -not? odd choice.
[00:24:42] *** Joins: goldfish (~goldfish@user/goldfish)
[00:25:53] <phogg> GNU find or bust.
[00:29:02] *** Quits: ByteSlayer (~byteslaye@user/byteslayer) (Quit: That's about it, see ya)
[00:29:19] <twkm> -not is the reverse of how all other primaries work, so ! feels better because it doesn't look like a primary.
[00:30:10] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[00:31:00] <bn_work> twkm:  what do you mean by "reverse"?
[00:34:30] <twkm> it changes how the following primary is used.
[00:34:48] *** Quits: nikodijev (~nikodijev@109-93-203-151.dynamic.isp.telekom.rs) (Quit: Quit)
[00:36:26] *** Joins: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627)
[00:39:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:41:02] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Quit: Leaving)
[00:44:57] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 252 seconds)
[00:45:44] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[00:45:49] <bn_work> vs normally it doesn't?
[00:45:51] *** Joins: seachdamh (~seachdamh@user/seachdamh)
[00:46:12] <bn_work> phogg:  how does one exclude binary files with `find`?  not seeing any mention of "binary" in `man find`?
[00:46:13] <twkm> primaries normally make a decision right away.
[00:47:18] <twkm> -not aka ! inverts the subsequent decision, it doesn't make a decision right away.
[00:57:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:57:23] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[00:57:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:57:50] *** Joins: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[00:59:26] *** Joins: absc (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it)
[01:00:59] *** Joins: Wulf (~Wulf@user/wulf)
[01:01:04] <bn_work> phogg:  oh, I guess I can do it at the grep layer with `-I`
[01:01:15] <bn_work> (when it is invoked by find)
[01:02:54] <Wulf> hello! I believe there was a command which allows me to change the cwd, do some wwork and then change back. what's it called?
[01:03:03] <peterrooney> bn_work: find doesn't really look at the contents of files
[01:03:15] *** Joins: greycat (~greg@209.142.155.49)
[01:03:32] *** Joins: andril (~andril@2601:586:8400:113:63cc:6083:6f5a:e25d)
[01:05:02] <peterrooney> bn_work: not clear what are you trying to do, could you remind please?
[01:05:06] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d0f5:61cd:a702:9e08)
[01:05:28] * peterrooney worries about XY *all the time*
[01:05:49] <twkm> Wulf: cd - perhaps.  generally i use a subshell.
[01:06:05] *** Joins: anton (~anton@antonmcclure.com)
[01:06:38] *** Quits: henko_ (~henko@213-47-35-122.cable.dynamic.surfer.at) (Ping timeout: 265 seconds)
[01:07:24] <bn_work> Wulf:  pushd . && popd
[01:07:57] <Wulf> bn_work: thanks, that's what I was looking for
[01:08:01] <twkm> they are noisier, but yes perhaps them.
[01:08:21] <greycat> if this is "I want to loop over some subdirs and need to cd into each of them", the two ways I would recommend are the subshell (twkm's), or storing the current directory in a variable *before* the loop, then cd-ing there at the top of each loop
[01:08:22] <Wulf> twkm: thanks too, that feature was new to me.
[01:08:25] <larryv> unportable, louder version of cd blah && ... && cd -
[01:08:25] <bn_work> twkm: have never done `cd -`, is that just quieter?
[01:08:44] <greycat> "cd -" or "popd" are not on my list
[01:08:51] <twkm> ''cd there'' outputs nothing.  ''cd -'' does, like popd.
[01:08:57] <greycat> too many ways those can fail horribly
[01:09:07] <bn_work> larryv: unportable?  
[01:10:07] <twkm> pushd and popd output the stack.  cd - outputs OLDPWD after trying to change to that directory.
[01:10:32] <greycat> cd - only works if you actually managed to cd somewhere an odd number of times, otherwise you get out of sync, and shit blows up
[01:10:57] <greycat> thus, the subshell, or the "cd to base" approach
[01:10:58] <larryv> bn_work: `cd -` is POSIX. not really as good as (cd blah && whatever) though
[01:12:18] <twkm> alas sometimes a subshell is a problem.
[01:14:01] <bn_work> phogg: thanks for the find suggestion, that finished much quicker than grep -D skip ... / | egrep -v ... alone (which is still going!)
[01:18:34] *** grettke is now known as grettke2
[01:18:34] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:19:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:19:07] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[01:19:43] *** Joins: shad (~shad@user/shad)
[01:19:46] *** Quits: shad (~shad@user/shad) (Client Quit)
[01:20:32] *** Quits: magla (~gelignite@55d44a14.access.ecotel.net) (Quit: Stay safe!)
[01:20:47] *** Parts: grovershor (~groversho@193.36.225.184) (Terminated!)
[01:25:49] *** Joins: grovershor (~groversho@193.36.225.184)
[01:33:07] *** Joins: mikeliuk (~mikeliuk@213.205.198.26)
[01:34:29] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 268 seconds)
[01:35:02] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[01:35:20] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:35:41] *** Joins: ExeciN (~ExeciN@user/nicexe)
[01:40:05] *** Quits: almostdvs (~cody@38.140.123.98) (Ping timeout: 272 seconds)
[01:40:16] *** Quits: absc (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it) (Quit: Leaving.)
[01:40:59] *** Quits: mikeliuk (~mikeliuk@213.205.198.26) (Quit: Connection closed)
[01:41:39] *** Joins: marlinc (~marlinc@user/marlinc)
[01:42:23] *** Joins: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr)
[01:45:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[01:51:13] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:54:06] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:00:23] *** Quits: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627) (Ping timeout: 268 seconds)
[02:03:22] <ash_worksi> fwiw, I use `cd -` a lot to just flip back and forth between directories while doing something non-programatic like jumping between /etc and /var/log subdirs
[02:05:56] *** Quits: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr) (Ping timeout: 268 seconds)
[02:09:40] *** Joins: VonNaturAustreVe (~hmiranda@user/vonnaturaustreve)
[02:10:54] *** Quits: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[02:13:20] *** Quits: bardo (~anon@alternativaporsantomera.com) (Ping timeout: 265 seconds)
[02:13:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[02:18:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[02:21:35] <ash_worksi> I wanted to print the next minute 60 is divisible by 6 (currently 54); but `(i=0; while [[ "$(date +'%M')" > "$i" ]]; do ((i+=6)); done; echo "$i")` prints 6
[02:21:58] <ash_worksi> why is that?
[02:22:38] <twkm> set -x and find out.
[02:24:32] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[02:25:41] *** Joins: kolbe (~kolbe@user/kolbe)
[02:25:42] <ash_worksi> twkm: doesn't seem to shed light
[02:25:54] <ash_worksi> it just shows + [[ 54 > 6 ]] and echos
[02:26:41] <greycat> [[ x > y ]] is a string comparison, not an int comparison
[02:26:50] <greycat> (( x > y )) is an int comparison, not a string comparison
[02:27:01] <larryv> !pf 7 > ash_worksi
[02:27:01] <greybot> ash_worksi: https://mywiki.wooledge.org/BashPitfalls#pf7 -- Don't do this! -- [[ $foo > 7 ]]
[02:27:07] <ash_worksi> whaaaa?
[02:27:21] <twkm> i know it hurts to read the docs.
[02:27:53] <ash_worksi> how do you man [[ ?
[02:28:20] <twkm> for [[ in this case, yes.  which are part of bash so in bash's docs.
[02:28:54] <larryv> e.g., https://www.gnu.org/software/bash/manual/html_node/Bash-Conditional-Expressions.html
[02:29:56] <ash_worksi> I see
[02:29:59] <ash_worksi> thanks
[02:30:34] <twkm> this is also true of [ aka test, though you'd have to quote the > not to end-up with redirection, i.e., test 54 '>' 6 would also be a string comparison.
[02:30:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[02:31:45] <ash_worksi> I see
[02:32:41] <ash_worksi> how come searching for [[ didn't jump to CONDITIONAL EXPRESSIONS in `man bash`? because it's bold?
[02:32:49] <ash_worksi> erm using `/`
[02:33:10] <ash_worksi>  /[[ didn't work nor did /\[\[
[02:33:17] <twkm> your pager doesn't like you.
[02:33:28] <ash_worksi> ~.~
[02:34:02] *** Quits: eoli3n (~eoli3n@82-64-112-150.subs.proxad.net) (Ping timeout: 244 seconds)
[02:34:28] <twkm> my pager, w3mpager, does just fine with your latter search.
[02:34:35] <ash_worksi> oh, it does work, I was on the wrong man page when I tried /\[\[
[02:34:55] <ash_worksi> thanks twkm
[02:36:24] *** Quits: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:36:59] <twkm> you're welcome.
[02:38:55] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[02:40:24] *** Quits: dub_a_ (~dub_a@2607:9000:5000:15::b77e) (Ping timeout: 265 seconds)
[02:43:27] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[02:43:34] *** Joins: twinsignal (~twinsigna@static-198-54-129-84.cust.tzulo.com)
[02:44:51] *** Quits: Filystyn (~piotr@user/filystyn) (Ping timeout: 252 seconds)
[02:49:10] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[02:50:17] *** Joins: malina (~malina@user/malina)
[02:54:18] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:55:40] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[02:56:14] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[02:56:19] *** Parts: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) ()
[02:58:34] *** Joins: af (~af@awalgarg.me)
[03:01:46] *** Joins: kurahaupo_ (~kurahaupo@pa49-179-152-213.pa.nsw.optusnet.com.au)
[03:04:28] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[03:04:31] *** Quits: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au) (Ping timeout: 244 seconds)
[03:07:24] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[03:07:35] *** Joins: iconz (~iconz@2a02:c7d:f45b:2100:8e8d:28ff:fe2c:403e)
[03:10:30] *** Joins: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr)
[03:12:28] *** Joins: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au)
[03:15:06] *** Quits: kurahaupo_ (~kurahaupo@pa49-179-152-213.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[03:15:10] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[03:15:22] *** Joins: paruh (~paruh@92.60.39.18)
[03:16:59] *** Joins: dub_a_ (~dub_a@static-198-54-131-86.cust.tzulo.com)
[03:17:50] *** Quits: iconz (~iconz@2a02:c7d:f45b:2100:8e8d:28ff:fe2c:403e) (Quit: iconz)
[03:20:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[03:21:07] *** Joins: ferdna (~ferdna@user/ferdna)
[03:21:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[03:24:53] *** Quits: _0x5fc3 (~0x5fc3@static.203.75.21.65.clients.your-server.de) (Changing host)
[03:24:53] *** Joins: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152)
[03:25:36] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[03:26:26] *** Quits: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[03:28:50] *** Joins: Krail (~Krail@user/alexdelarge)
[03:31:09] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[03:31:55] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[03:39:54] *** Joins: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net)
[03:41:51] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[03:41:57] *** Joins: goldfish_ (~goldfish@user/goldfish)
[03:42:20] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[03:42:39] *** Joins: henko (~henko@213-47-35-122.cable.dynamic.surfer.at)
[03:44:04] *** Joins: Wulf (~Wulf@user/wulf)
[03:44:17] *** Joins: geekthattweaks (uid433447@id-433447.stonehaven.irccloud.com)
[03:45:35] *** grettke is now known as grettke2
[03:45:35] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:46:14] *** Quits: twinsignal (~twinsigna@static-198-54-129-84.cust.tzulo.com) (Quit: Leaving)
[03:46:22] *** Quits: tex (~super@user/dix) (Ping timeout: 244 seconds)
[03:52:00] *** Quits: purpleidea (~james@user/purpleidea) (Ping timeout: 268 seconds)
[03:52:43] <greycat> 17:57  ash_worksi> how do you man [[ ?
[03:52:48] <greycat> # help [[ | head -n2
[03:52:50] <shbot> greycat: [[ ... ]]: [[ expression ]]
[03:52:50] <shbot> greycat:     Execute conditional command.
[03:53:02] <twkm> # help -s [[
[03:53:03] <shbot> twkm: [[ ... ]]: [[ expression ]]
[03:53:22] <twkm> but i suppose you wanted the synopsis as well.
[03:53:29] <greycat> man is for external commands.  Use help for shell builtins and keywords.
[03:53:31] <twkm> err, summary.
[03:53:38] *** Quits: markgrady (~markgrady@204.246.246.254) (Remote host closed the connection)
[03:54:34] <twkm> as it happens i don't much like the help text and prefer the bash manual.
[03:54:34] *** Joins: ExeciN (~ExeciN@user/nicexe)
[03:56:51] *** Quits: goldfish_ (~goldfish@user/goldfish) (Remote host closed the connection)
[03:58:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:02:14] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[04:05:13] *** Joins: phillbush (~phillbush@user/phillbush)
[04:06:39] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[04:10:59] *** Quits: malina (~malina@user/malina) (Quit: malina)
[04:11:57] *** Joins: ExeciN (~ExeciN@user/nicexe)
[04:12:34] *** Joins: tofran (~tofran@37.189.158.134)
[04:13:49] *** Quits: dub_a_ (~dub_a@static-198-54-131-86.cust.tzulo.com) (Quit: WeeChat 3.1)
[04:15:02] *** Quits: pasteban_ (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:44] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:20:02] *** Quits: checkbot_ (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:22:12] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[04:28:41] *** Joins: simbioz (~simbioz@user/simbioz)
[04:29:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[04:40:17] <pikapika> twkm, hi
[04:46:12] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:47:59] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:52:24] *** Joins: ExeciN (~ExeciN@user/nicexe)
[04:54:39] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:54:47] *** Joins: anton (~anton@antonmcclure.com)
[04:54:59] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[04:57:02] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:57:51] *** Joins: ttys000 (~ttys000@user/ttys000)
[05:17:04] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:17:44] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[05:19:09] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[05:24:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[05:28:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[05:30:55] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:23] *** Quits: phillbush (~phillbush@user/phillbush) (Remote host closed the connection)
[05:34:35] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[05:37:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[05:37:14] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[05:40:52] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d0f5:61cd:a702:9e08) (Read error: Connection reset by peer)
[05:48:22] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[05:48:51] *** Joins: Crassus (~Crassus@user/crassus)
[05:49:55] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Quit: ZNC - https://znc.in)
[05:52:16] *** Joins: downunder (~downunder@110.151.120.49)
[05:54:08] *** Quits: andril (~andril@2601:586:8400:113:63cc:6083:6f5a:e25d) (Ping timeout: 252 seconds)
[05:55:42] *** Joins: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627)
[05:56:11] *** Quits: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627) (Remote host closed the connection)
[06:00:02] *** Joins: vlm (~vlm@user/vlm)
[06:00:09] *** Joins: anton (~anton@antonmcclure.com)
[06:00:42] *** Quits: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[06:11:06] *** Quits: CatKiller (~CatKiller@51.37.221.22) (Ping timeout: 252 seconds)
[06:14:14] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[06:16:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:17:42] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[06:26:17] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[06:29:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[06:44:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:46:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[06:47:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:53:51] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:00:45] *** Joins: akoana (~ah@user/akoana)
[07:15:27] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 252 seconds)
[07:20:24] *** Joins: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[07:20:40] *** grettke is now known as grettke2
[07:20:40] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[07:25:57] *** Quits: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[07:27:59] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.1)
[07:28:11] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 252 seconds)
[07:29:58] *** Joins: Lohn (~Lohn@lo.hn)
[07:30:17] *** Joins: akoana (~ah@user/akoana)
[07:30:51] *** Quits: downunder (~downunder@110.151.120.49) (Ping timeout: 252 seconds)
[07:35:09] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:36:05] *** Joins: downunder (~downunder@110.151.120.49)
[07:41:21] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:47:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:49:33] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:54:18] *** Quits: xx (~xx@user/xx) (Ping timeout: 264 seconds)
[07:56:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[07:56:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:58:51] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[07:59:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:00:21] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[08:00:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[08:00:49] *** Lord_of_Life_ is now known as Lord_of_Life
[08:02:09] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[08:03:08] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[08:13:21] *** Quits: dermoth (~dermoth@dsl-66-36-157-80.mtl.aei.ca) (Quit: Leaving)
[08:13:31] *** Joins: dermoth (~dermoth@dsl-66-36-157-80.mtl.aei.ca)
[08:13:35] *** Quits: earnestly (~earnest@user/earnestly) (Quit: WeeChat 3.1)
[08:16:35] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:4b09:8b56:3c1e:c2e6) (Quit: dtux)
[08:18:27] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:18:30] *** grettke is now known as grettke2
[08:19:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:19:26] <sunny93> how do I get the quotes work  echo alias whichpython="python -c 'import sys; print(sys.executable)'"
[08:19:43] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...‚ï≠‚à©‚ïÆ)
[08:19:48] <sunny93> how do I get the quotes work  :  echo 'alias whichpython="python -c 'import sys; print(sys.executable)'"' >> ~/.zshrc
[08:20:05] <Friithian> why can't you just use `which python`?
[08:21:54] <sunny93> which python shows .pyenv/shims/python  only 
[08:22:11] <larryv> !which
[08:22:11] <greybot> which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use (from most to least portable) ''command -v'' or ''type -P'' (to find the path) or ''hash'' (to check) instead. See http://mywiki.wooledge.org/BashFAQ/081
[08:22:17] <Friithian> oh no, virtual python envs, I'm out of here I hate python
[08:22:21] <sunny93> while my whichpython shows .pyenv/versions/py3612/bin/python
[08:22:33] <sunny93> haha no problem
[08:22:50] <sunny93> I just need to handle the quotes 
[08:22:54] <larryv> echo 'alias whichpython="python -c '\''import sys; print(sys.executable)'\''"' >> ~/.zshrc
[08:23:06] <sunny93> thank  you larry
[08:23:10] <sunny93> let me try
[08:23:56] *** Joins: Mo-jorisin (~Mo@dynamic-095-116-214-252.95.116.pool.telefonica.de)
[08:26:10] <sunny93> works great
[08:27:30] *** Quits: Mo_ (~Mo@dynamic-077-010-065-079.77.10.pool.telefonica.de) (Ping timeout: 252 seconds)
[08:28:24] <larryv> alternately, get rid of a layer of quoting. printf %s\\n 'whichpython() { python -c "import sys; print(sys.executable)" }' >> ~/.zshrc
[08:31:18] <Friithian> I still have a morbid curiosity in how pyenvs work and why the difference and if 1 is a symlink or something
[08:33:52] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[08:41:04] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:44:45] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[08:44:56] *** Joins: addviking (~vikking@70-59-200-104.clsp.qwest.net)
[08:46:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[08:46:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[08:48:36] *** Joins: tijuco (~tijuco@user/tijuco)
[08:49:29] <pragma-> Someone is complaining to me that they miss being able to lurk in the channel and watch the questions and answers since they don't like to identify with services.
[08:49:47] <pragma-> The channel is +r and they cannot join. How about removing +r and making it +q $~a instead?
[08:49:55] <pragma-> It accomplishes the same thing but allows them to lurk silently.
[08:51:56] *** Joins: hlz (~rue@1-162-45-43.dynamic-ip.hinet.net)
[08:53:25] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:54:30] *** Quits: src (~src@user/src) (Ping timeout: 265 seconds)
[08:54:59] *** Joins: fresheyeball (~fresheyeb@c-71-237-105-37.hsd1.co.comcast.net)
[08:55:13] <fresheyeball> how can I sj
[08:56:28] <fresheyeball> automatically set an env var on the target machine, when usimg ssh
[08:57:22] <fresheyeball> i need to identify the client mschine on the host machine
[08:57:48] <fresheyeball> sorry for spelling I am on a phone
[08:58:10] <fresheyeball> tried things likr
[08:59:06] <fresheyeball> IAmTablet=1 ssh me@target.machine
[08:59:21] <fresheyeball> but it does export 
[08:59:41] <fresheyeball> does NOT export
[09:00:00] <larryv> fresheyeball: i believe you have to configure SendEnv or SetEnv locally (ssh_config) and AcceptEnv on the remote (sshd_config)
[09:00:02] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:00:23] *** Joins: reset (~reset@user/reset)
[09:01:17] <fresheyeball> larryv: is there a better approach than env vars?
[09:01:55] <fresheyeball> basically I want different vim config based on what machind I sm using for ssh
[09:02:43] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:02:43] <fresheyeball> if I am sshed in from my tablet, I need different settings
[09:03:11] <larryv> i don't know
[09:03:16] <fresheyeball> also thank you
[09:03:44] <fresheyeball> SetEnv gives me domething to google
[09:03:58] <fresheyeball> should be able to grg the rest
[09:04:07] <fresheyeball> google*
[09:04:25] <fresheyeball> thanks
[09:04:38] <larryv> np
[09:05:30] *** Joins: thyriaen (~thyriaen@45.178.73.238)
[09:11:37] *** Quits: thyriaen (~thyriaen@45.178.73.238) (Quit: Leaving)
[09:17:10] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Write error: Connection reset by peer)
[09:17:10] *** Quits: blue_penquin[m] (~bluepenqu@2001:470:69fc:105::829) (Write error: Connection reset by peer)
[09:17:10] *** Quits: chambln (~chambln@user/chambln) (Remote host closed the connection)
[09:17:11] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Write error: Connection reset by peer)
[09:17:53] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[09:18:59] *** Joins: Guest6543 (~bluepenqu@2001:470:69fc:105::829)
[09:18:59] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[09:19:13] *** Joins: chambln (~chambln@user/chambln)
[09:22:50] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:24:31] *** Joins: vishal (~vishal@fedora/vishal)
[09:27:22] *** Guest6543 is now known as blue_penquin[m]
[09:27:33] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:28:45] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[09:30:24] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[09:31:22] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:32:26] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:33:27] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[09:33:41] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[09:33:59] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Remote host closed the connection)
[09:34:36] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[09:34:48] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[09:35:05] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 272 seconds)
[09:35:43] *** Quits: greybot (~greybot@remote.wooledge.org) (Ping timeout: 272 seconds)
[09:37:54] *** Joins: hendry (~hendry@210.23.22.2)
[09:38:58] *** Joins: greybot (~greybot@remote.wooledge.org)
[09:41:49] *** Joins: kenyon (sid496813@id-496813.highgate.irccloud.com)
[09:42:43] *** Joins: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[09:53:17] *** Quits: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au) (Remote host closed the connection)
[10:00:46] *** Joins: nichedev (~tux0r@99-72-201-62.lightspeed.rcsntx.sbcglobal.net)
[10:03:14] *** Quits: tuxOr (~tux0r@vpn.ahbelo.com) (Ping timeout: 268 seconds)
[10:03:55] *** Quits: kolbe (~kolbe@user/kolbe) (Quit: leaving)
[10:11:41] *** Joins: simbioz_ (~simbioz@user/simbioz)
[10:14:45] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 252 seconds)
[10:15:33] *** Quits: Xaldafax_ (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:16:40] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 265 seconds)
[10:18:28] *** Joins: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au)
[10:19:53] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[10:28:07] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:30:11] *** Joins: willow_ (~willow@173-228-31-194.dsl.static.fusionbroadband.com)
[10:30:45] <willow_> need help creating an alias for the mount command.  this is what i have: 
[10:30:48] <willow_> alias mount='[[ $# -gt 0 ]] && { /usr/bin/mount "$@"; } || { /usr/bin/mount |egrep -v "(tmpfs|sys|snap)"; }'
[10:31:15] <willow_> however it fails a basic test such as 'mount -V'
[10:32:32] <kurahaupo> willow_: write a function instead
[10:33:59] *** Joins: willow (~willow@173-228-31-194.dsl.static.fusionbroadband.com)
[10:34:32] <kurahaupo> willow_: aliases are textual substitutions that occur before critical parts of the parsing process, in particular before globbing. So "$@" doesn't mean "the parameters to the alias", it means "whatever arguments were in effect already"
[10:34:41] <kurahaupo> !alias
[10:34:41] <greybot> An alias is a small in-line command name text replacement. They are not commands and cannot take arguments. Only use aliases for expanding things like default command switches: alias l='ls -l'. For everything else, use a function instead: del() { mv -i -- "$@" ~/.trash; }
[10:35:47] <willow_> kurahaupo: thanks.  is there any way to specify 'if no arguments are in effect' to the alias?
[10:36:20] <kurahaupo> willow_: since aliases don't take arguments, it's a bit hard to see how that could work
[10:36:47] <kurahaupo> willow_: That's why you should use the other approach
[10:37:34] <willow_> i tried a function for a similar type of alias and it gave an error so it seemed that it wasn't possible to override a system command with an function, only an alias
[10:37:50] <willow_> right now I have:  alias df='/usr/bin/df $@ |egrep -v "(tmpfs|snap)"'
[10:38:08] <willow_> previously i created it as a function and bash complained
[10:38:19] <kurahaupo> Of course a function can override a command. Try again
[10:38:32] <willow_> kurahaupo: ok good to know.  will do
[10:39:11] <kurahaupo> Don't forget to put "command" in front of the command that the function is replacing, so it doesn't recurse
[10:39:46] <willow_> ok.  i was using the full path of the binary in the alias|function to prevent recursion
[10:41:43] <kurahaupo> Your "df" example could be much smarter as a function: when given no arguments you could list every mount except the tmpfs & snap filesystems, but when given arguments you could list all the given paths even if they are tmpfs
[10:41:56] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[10:43:15] <willow_> kurahaupo: my approach was this: always exclude tmpfs and snap mounts regardless of what arguments are supplied.  if I really want to see tmpfs and/or snap then I just /usr/bin/df
[10:44:25] <kurahaupo> As an example of where an alias is actually useful, I have 3 that control globbing on a per-command basis: "-*" turns off globbing for one command, "+*" turns on globbing (if set -f was in effect), and "**" turns on globstar and globbing. And each returns to the previous state afterwards.
[10:44:38] <willow_> here's my attempt at a function for mount but, similar to the df function i tried earlier, it gives an error.    http://paste.debian.net/1200645/
[10:45:15] <willow_> very useful
[10:45:19] *** Joins: earnestly (~earnest@user/earnestly)
[10:46:04] <kurahaupo> willow_: As a general policy I would recommend using a different name for a command that behaves differently; for example "l" or "ll" rather than "ls". Maybe "d" (or "f") instead of "df"
[10:47:30] <willow_> yes that makes sense
[10:47:32] <kurahaupo> willow_: A function can check its arguments and change behaviour, so you could look and see if the first arg is "--include-all" (or a more brief equivalent)
[10:50:06] <willow_> when i try to source .bash_aliases with the above-pasted mount() function i get the error: syntax error near unexpected token `('
[10:51:14] <kurahaupo> It appears to be missing a final }
[10:51:38] *** Joins: tex (~super@user/dix)
[10:51:40] <willow_> oh shoot.
[10:51:50] <kurahaupo> You don't need { } around individual commands. Harmless but useless
[10:52:44] <willow_> wasn't sure about the operator order of precedence, whether pipe is higher/lower than the logical operators
[10:53:20] <kurahaupo> My aliases use a pair of functions to save, set, and restore the modes. Like alias '-*=__glob_save_and_set 0 ; __glob_run_and_restore' '+*=__glob_save_and_set 1 ; __glob_run_and_restore' '**=__glob_save_and_set 2 ; __glob_run_and_restore' # 
[10:53:43] <kurahaupo> pipe is higher precedence
[10:53:56] <kurahaupo> binds tighter
[10:54:42] <kurahaupo> A pipeline is considered to have a true or false return status, and that's tested by && and ||
[10:54:44] <willow_> that makes sense actually
[10:57:41] <kurahaupo> I would make a plea to put whitespace on both sides of every command separator && || & | ;; ;& ;;& ; # I know that some people don't like space before semicolon because it doesn't get a space there in English prose. That's precisely why I do99,99 like it, so that I don't99,99 read it like English
[10:58:25] <kurahaupo> They're the most important symbols and should be made to stand out
[10:58:31] <willow_> check
[10:58:42] <kurahaupo> But that's my own biases
[10:58:54] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) (Remote host closed the connection)
[10:59:35] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[11:00:33] *** Joins: malina (~malina@user/malina)
[11:01:27] <geirha> not only from english, but languages like C, java and javascript too
[11:01:36] <kurahaupo> willow_: the semicolon in the middle of each of my aliases is the trick to how it can suppress or enable globbing. The part before the semicolon runs before a fully expanding the second part
[11:01:54] *** Joins: rendar (~rendar@user/rendar)
[11:02:07] <willow_> i'm getting the old error with the df() function:   http://paste.debian.net/1200646/
[11:02:43] *** Joins: ionface (~ionface@user/ionface)
[11:02:53] <osse> you have an alias that interferes
[11:03:43] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:03:53] <kurahaupo> willow_: remove the alias first
[11:03:59] <kurahaupo> unalias df
[11:04:31] <kurahaupo> willow_: remember what I said about aliases being textual substitutions
[11:04:32] <willow_> ah yes because when i re-source .bash_aliases the old one isn't removed
[11:05:01] <willow_> it clashes with the previous one
[11:05:02] <kurahaupo> I tend to put "unalias ‚Ä¶" at the top of each file that defines a function
[11:06:14] <willow_> 'unalias' just saved me from major headaches :-)
[11:06:18] <kurahaupo> Also my .bashrc has unalias cp rm ln mv ls # because stupid Linux distros insist on adding those to /etc/bashrc
[11:06:59] <kurahaupo> Instead of /etc/skel/.bashrc where they arguable belong
[11:07:10] <kurahaupo> *arguably
[11:07:11] <willow_> i've check and at least debian and arch seem good about not putting any aliases in the systemwide bashrc
[11:07:50] <willow_> definitely wouldn't want them there.  just a bad policy
[11:09:03] <kurahaupo> Well, they tend to be buried somewhere like /usr/share/bash_aliases.d/* which are sourced 4 levels deep from /etc/bash_profile
[11:09:22] <willow_> thanks again for your eminent advice/help.  girha and osse also
[11:09:34] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[11:09:38] <kurahaupo> Debian in particular patches Bash so that it runs /etc/bashrc AND ~/.bashrc
[11:10:00] <kurahaupo> When normally the latter would supplant the former
[11:10:00] <geirha> yes, really annoying
[11:10:14] <willow_> current debian has no /etc/bashrc only /etc/bash.bashrc which contains no aliases
[11:10:31] <osse> in fairness doesn't bash itself make that easy to do with some #defines ?
[11:10:39] <kurahaupo> So even if they don't have aliases in /etc/bash*, it's less trustworthy
[11:10:43] <osse> or are we talking about actual patches to the actual code
[11:10:59] <willow_>  /usr/share/bash_aliases.d  OMG that would be a nightmare !!!
[11:11:05] <kurahaupo> It's a compile-time option, yes
[11:11:20] <kurahaupo> But off by default
[11:12:32] <doug16k> why is printf putting carriage returns (^M) when I say \n
[11:12:34] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[11:12:44] *** Joins: ionface_ (~ionface@user/ionface)
[11:13:03] <osse> because you didn't say \r
[11:13:05] <kurahaupo> willow_: If you want a real nightmare, have a look at implementing menu-style tab completion IN Bash (rather than as a lib.so plugin)
[11:13:45] <kurahaupo> doug16k: Are there actually \x0d bytes in the output if you redirect it into a file? 
[11:14:06] <willow_> kurahaupo: does that exist?
[11:14:07] <doug16k> less says reverse background ^M  - does that mean yes?
[11:14:24] <doug16k> I'll check hexdump
[11:14:41] <doug16k> yes, 0x0d
[11:15:00] <kurahaupo> doug16k: yes, but are you sure it's Bash that's putting it there, and not, say, the command that Bash got the info from?
[11:15:16] <kurahaupo> willow_: yes, I wrote it.
[11:15:37] <doug16k> I'll try a few string literals that are completely self contained to be sure
[11:16:19] <Soliton> # printf \\n | od -x
[11:16:21] <shbot> Soliton: 0000000 000a
[11:16:21] <shbot> Soliton: 0000001
[11:16:31] *** Joins: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627)
[11:17:03] <kurahaupo> I'll get the link, one minute please
[11:17:31] <doug16k> it is from the input. thanks
[11:18:12] <kurahaupo> github.com/kurahaupo/zcomp
[11:21:04] <willow_> is that similar to the type of completion that cisco ios has?
[11:21:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:21:30] <kurahaupo> Essentially, it provides a function that replaces the built-in "complete" command, and which generates functions that are used as callbacks and uses those with the actual complete built-in. Those generated functions pass the args specified to the "complete" function to the zcomp function, which then calls compgen with those args, displays a menu, lets the user navigate with arrow keys etc, and places the result where the normal completion 
[11:21:30] <kurahaupo> process can find it
[11:22:05] <willow_> wow i'm going to try it.  sounds fascinating
[11:24:18] <kurahaupo> Originally it ran as a post-processor after all the completions had been set, but that was slow and unreliable, so I made it into a "complete" function that's defined early (though it still re-does any previous completions as well)
[11:24:33] <kurahaupo> It's not without bugs unfortunately
[11:24:39] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[11:25:10] <kurahaupo> In particular I suggest turning off the mouse support
[11:26:36] <kurahaupo> I'm also considering changing the key binding for tab, which currently just cycles through the options, so that it  submits the current item
[11:27:02] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[11:27:08] <kurahaupo> Replicable bug reports are much appreciated
[11:27:23] <willow_> kurahaupo: should it also go before /usr/share/bash-completion/bash_completion ?
[11:27:38] *** Quits: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: dtux)
[11:27:41] *** Joins: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[11:27:53] *** Joins: dtux (~dtux@2600:1700:22f0:37bf:bf4e:94dc:d5e7:fe8f)
[11:28:41] <kurahaupo> Before or after doesn't matter but before will be faster
[11:29:09] <willow_> if i put _zcomp.bash in /etc/bash_completion.d/ i think by default /usr/share/bash-completion/bash_completion will come before it.  therefore i would have to remove the link to /usr/share/bash-completion/bash_completion in /etc/bash_completion
[11:29:51] <kurahaupo> put it in as 00_zcomp.bash so it sorts earlier
[11:30:09] <willow_> ok i'll symlink /usr/share/bash-completion/bash_completion in /etc/bash_completion.d/ with lower precedence than _zcomp.bash
[11:32:22] *** Joins: alguien (~alguien@user/alguien)
[11:32:37] <kurahaupo> I can't give bulletproof instructions in the README because every distro puts the files in different places - there are several "bash-completion" packages and none of them is maintained by Chet
[11:34:13] *** Joins: dklyle (~dklyle@jfdmzpr05-ext.jf.intel.com)
[11:35:06] *** Quits: david-lyle (~dklyle@jfdmzpr05-ext.jf.intel.com) (Remote host closed the connection)
[11:35:13] *** Joins: et_ (~et@user/et)
[11:35:40] <willow_> wow this is pretty spectacular!
[11:36:18] <kurahaupo> Btw, Esc to cancel
[11:36:19] *** Quits: et (~et@user/et) (Ping timeout: 264 seconds)
[11:36:19] *** et_ is now known as et
[11:37:47] <kurahaupo> writing three layers of callbacks in shell does kinda mess with your head. It helps to have a whiteboard and internal documentation.
[11:38:17] <kurahaupo> Btw zcomp includes a sideline project: a debugging framework
[11:38:34] <kurahaupo> because I needed it to get it working
[11:38:47] <willow_> i wonder if it were implemented in something like kotlin you could avoid the callbacks 
[11:38:56] <willow_> or go
[11:39:59] <kurahaupo> I went to great lengths to avoid calling external commands, so it's possible to run with tput or with a built-in ANSI mode (though you need to check out different git branches to do so)
[11:40:07] *** Joins: et_ (~et@user/et)
[11:40:46] <willow_> just use lambdas like newer languages do
[11:41:09] <willow_> that would be cool: lambdas in bash
[11:41:30] <kurahaupo> I think I could simplify it somewhat if I split the entire menu handling into a subprocess, and just have the main process read the results from it
[11:43:12] <kurahaupo> There's no getting away from at least 2 layers of callbacks because of how the "complete" commands works
[11:43:24] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[11:43:24] *** et_ is now known as et
[11:46:26] <willow_> https://kotlinlang.org/docs/async-programming.html
[11:46:50] <willow_> in kotlin you could use coroutines
[11:49:14] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 245 seconds)
[11:49:54] *** Joins: ionface (~ionface@user/ionface)
[11:54:07] *** Joins: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr)
[11:55:57] *** Joins: semeion (~semeion@user/semeion)
[11:56:04] <kurahaupo> willow_: lambdas are older that Bash. But in procedural languages, the term just means for "function that's created with a convenient shorthand notation, doesn't need a name, and can see variables in the scope where it was created". That idea is older than Bash, though "not having a name" wasn't considered important initially
[11:56:46] <willow_> anonymous functions
[11:57:55] <kurahaupo> anonymous in the sense that you can have a handle or a pointer that doesn't change when somewhere else a name gets revoked or replaced
[11:59:16] <kurahaupo> In a low level language like C we can just talk about function pointers, and in GnuC, talk about nested functions.
[12:00:03] <kurahaupo> It's not so much the absence of a name that matters, as that the name isn't the primary or most direct way of identifying the function.
[12:00:28] <kurahaupo> Being able to omit the name is nice because it makes the notation shorter
[12:01:54] <kurahaupo> Languages like Lisp, Forth, and PostScript have had these kinds of nameless function references since the 1980s and earlier
[12:02:45] <kurahaupo> And there's always Ada which had almost everything we think of as modern, in 1968
[12:02:56] *** ChanServ sets mode: +o izabera
[12:03:07] *** izabera sets mode: -r 
[12:03:20] *** izabera sets mode: +q $~a
[12:03:43] <izabera> Temporary test, I'll revert if things explode
[12:03:47] *** izabera sets mode: -o izabera
[12:09:34] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[12:09:49] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.1)
[12:10:04] *** Joins: shad (~shad@user/shad)
[12:10:14] <willow_> in java lambdas are a prerequisite to understanding functional interfaces and stream programming   https://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html
[12:10:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[12:11:26] <willow_> kotlin takes stream processing to the next level
[12:11:45] <willow_> with coroutines
[12:12:02] <kurahaupo> Yeah, back in the day you have to define an interface with (usually) a single method, and implement that in some class, and copy any local variables it might want into class data members
[12:12:24] *** Joins: et_ (~et@user/et)
[12:12:34] <willow_> yes i did that in basic programming course ;-)
[12:12:59] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[12:12:59] *** et_ is now known as et
[12:13:18] <kurahaupo> A one-line lambda took 15+ lines at least
[12:13:45] <willow_> luckily i took the optional 4-th semester java programming course and learned streams
[12:14:04] <kurahaupo> On the plus side, you could name the interface for its intent, not just the function parameter and return types
[12:15:23] <kurahaupo> On the downside, you get names like FooMakerTemplateTemplateMakerMaker
[12:17:04] *** Joins: et_ (~et@user/et)
[12:17:34] *** Joins: ionface (~ionface@user/ionface)
[12:18:44] *** Joins: ByteSlayer (~byteslaye@user/byteslayer)
[12:20:58] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[12:20:58] *** et_ is now known as et
[12:24:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[12:24:45] *** Joins: yosijo (~yosijo@business-90-187-142-153.pool2.vodafone-ip.de)
[12:29:56] <earnestly> In the past there was a frequently mentioned concept of "changability", not maintainability (EWD's quip about changing oil) or portability.  How adaptable the code is over time to new requirements, which includes how readable it is by the intent it expresses.  All of this is forgotten but I don't think it's the fault of people simply not reading the right material, it's likely more fundamental
[12:30:14] *** Joins: ionface_ (~ionface@user/ionface)
[12:30:28] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[12:36:36] <earnestly> (And it is my view that lambdas and all such cute features are part of why code becomes so ossified and rigid.  It is ironic that (common) lisp tends to, in the real world, end up with a line count as much as C if not more, and certainly much more dense with little to no syntax to aid discernment.)
[12:37:43] *** Joins: alex2 (~alex3@BSN-77-82-41.static.siol.net)
[12:39:24] *** Quits: alex2 (~alex3@BSN-77-82-41.static.siol.net) (Client Quit)
[12:39:31] *** Joins: alex2 (~alex3@BSN-77-82-41.static.siol.net)
[12:40:12] *** Quits: alex2 (~alex3@BSN-77-82-41.static.siol.net) (Client Quit)
[12:40:18] *** Joins: alex3 (~alex3@BSN-77-82-41.static.siol.net)
[12:44:08] *** Joins: lavaball (felix@31.204.155.215)
[12:46:53] *** Joins: VoidFox (~voidfox@www.voidfox.de)
[12:52:12] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[12:53:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:54:00] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:00:06] *** Quits: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com) (Read error: Connection reset by peer)
[13:01:30] *** Quits: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:02:01] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[13:03:16] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:03:17] *** Joins: nobody__ (~nobody@host-82-60-161-222.retail.telecomitalia.it)
[13:07:02] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[13:08:31] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[13:09:56] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:10:12] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[13:13:28] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[13:14:37] *** Quits: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627) (Quit: Leaving)
[13:14:59] *** Joins: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627)
[13:19:39] *** Quits: nobody__ (~nobody@host-82-60-161-222.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[13:29:22] *** Joins: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com)
[13:31:25] <rendar> any clues?! https://bpa.st/CCRA
[13:32:13] *** Joins: Luks_Nuke (~LuksNuke@94.242.245.63)
[13:32:35] <osse> sudo only applies to iptables. the redirection is controlled by the current shell that is not run under sudo
[13:33:22] *** Quits: darkbit (~db@152.32.99.67) (Quit: WeeChat 3.1)
[13:33:26] <osse> sudo sh -c 'cmd > file'
[13:34:18] <rendar> right
[13:34:39] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 245 seconds)
[13:35:40] <rendar> osse: is that valid also for `sudo sh -c 'cmd < file'`, right?
[13:35:54] <osse> yes
[13:38:32] *** Joins: nobody__ (~nobody@host-82-60-161-222.retail.telecomitalia.it)
[13:41:36] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:42:15] <earnestly> rendar: Although that's often not necessary unless you need higher permissions to *read* the file
[13:42:39] <kurahaupo> rendar: If you want to sudo only99,99 the redirection, use sudo dd if=inputfilename | non-root-command | sudo dd of=outputfilename
[13:42:59] *** Quits: geekthattweaks (uid433447@id-433447.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:43:40] <earnestly> (cat in | ... | tee out)
[13:44:02] <kurahaupo> Adding a built-in to bash that can use sendfd & recvfd would also make it easier to manage access to secure files
[13:44:14] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 245 seconds)
[13:44:24] <kurahaupo> ok, cat for input
[13:44:43] <kurahaupo> tee needs a --no-stdout option
[13:45:37] <kurahaupo> rather than wasting time writing to /dev/null
[13:47:22] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[13:47:54] <geirha> # type cat tee
[13:47:55] <shbot> geirha: cat is a shell builtin
[13:47:55] <shbot> geirha: tee is a shell builtin
[13:47:56] <rendar> ok
[13:49:13] <geirha> I think it would be a good idea for type to distinguish between "builtin" builtins and loadable builtins
[13:50:54] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 272 seconds)
[13:51:00] <earnestly> But is there a difference?
[13:51:17] <earnestly> On the machinary level
[13:51:39] <rendar> so basically if i have `if sudo iptables-restore < "${ipv4_save_file}"; then` i'd need: `if sudo sh -c 'iptables-restore ...'` ? but how to use ${ipv4_save_file} inside the ' ' ?
[13:51:50] <earnestly> iow, do the "official" builtins implement themselves using the same API that loadables use?
[13:52:10] <earnestly> rendar: Pass it as an argument
[13:52:22] <rendar> how?
[13:52:23] <earnestly> rendar: sh -c 'cmd "$1"' arg0 arg1 arg2 arg3
[13:52:46] <rendar> oh
[13:52:50] <rendar> let's see
[13:52:54] <earnestly> rendar: I.e. sh -c 'iptables-restore < "$1"' _ "$ipv4_save_file"
[13:53:27] <rendar> `if sh -c 'iptables-restore < "$1"' _ "$ipv4_save_file"; then print "SUCCESS"; fi`
[13:53:30] <rendar> is this correct?
[13:53:50] <earnestly> Sure
[13:53:53] <Soliton> if you have a print command, sure.
[13:56:12] <rendar> isn't a version with tee cleaner?
[13:56:50] *** Joins: xayto_ (~xayto@cpc69388-oxfd28-2-0-cust366.4-3.cable.virginm.net)
[13:56:58] <Soliton> did you mean cat?
[13:57:52] *** Quits: xayto (~xayto@cpc69388-oxfd28-2-0-cust366.4-3.cable.virginm.net) (Ping timeout: 272 seconds)
[13:57:59] *** Quits: wwilly (~wwilly@2a01:cb10:3e0:4f00:9db7:13a0:ddf:b627) (Ping timeout: 245 seconds)
[13:59:59] <rendar> yeah
[14:00:08] <rendar> cat for input, tee for output, right?
[14:00:09] <earnestly> This probably should be done by a supervisor, btw
[14:00:23] <rendar> huh?
[14:00:48] <earnestly> Like systemd, or runit, or whatever
[14:01:03] <earnestly> rendar: E.g. https://github.com/archlinux/svntogit-packages/blob/packages/iptables/trunk/iptables.service
[14:01:19] <earnestly> (nftables might be better these days, but that's another matter)
[14:01:30] <rendar> if the command iptables-restore exists, it should have some purpose
[14:01:50] <earnestly> Sure, it's not about the command, but how and who manages it
[14:02:44] <earnestly> If you're working with iptables you're already in a context where higher priviledges are needed and so writing shell scripts that try to scatter sudo about the place is mixing two responsibilities that should be separate
[14:03:29] <earnestly> iow, the supervisor is what abstracts the command into an expression that says "load new rules", and it can do this as root, in an isolated manner along with everything else while your user only needs permission to do that
[14:03:44] <earnestly> All the details of how it reads files, loads them, permissions, storage, etc. are handled by the supervisor
[14:04:01] <rendar> this is my local host machine, so.. no worries
[14:05:20] <af> lol
[14:07:08] <rendar> earnestly: yeah, your design principles are sound, and i'd follow that way, normally.. but this is just a quick and dirt configuration script to activate/deactivate something i need to work, and i need to run costantly
[14:07:39] *** Joins: markgrad_ (~markgrady@204.246.246.254)
[14:07:57] <Soliton> why not run it as root?
[14:08:23] <earnestly> This would obviate all the pains of mixing in sudo
[14:08:32] <rendar> Soliton: you mean without using sudo all over the script, but just sudo ./run_that ?
[14:08:51] <Soliton> yes.
[14:09:16] <rendar> well, yeah, i think it would be a better solution for this case
[14:09:19] *** Joins: cdown (~cdown@163.114.131.1)
[14:09:21] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:09:39] <rendar> 50 'sudo' strings into this script
[14:09:47] <rendar> 514 lines of script
[14:09:58] *** Joins: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[14:10:04] <rendar> 10.28 'sudo' per line
[14:10:19] <rendar> err, the inverse
[14:11:00] <rendar> a 'sudo' every 10.28 lines O_O
[14:11:49] *** Joins: metanode (~metanode@user/metanode)
[14:12:10] *** Parts: metanode (~metanode@user/metanode) ()
[14:14:06] <geirha> earnestly: Yeah, only difference is that loadables are separate binaries while the "builtin" builtins are compiled into the bash binary itself. I think that difference warrant a distinction
[14:14:14] *** Quits: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[14:14:20] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[14:15:02] <earnestly> geirha: This is fair, 'x is loadable shell builtin'
[14:15:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:17:38] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[14:17:45] <ychaouche> hello #bash
[14:18:15] <rendar> there is some way to get if i'm running something from root? `if [[ $UID -eq 0 ]];` ?
[14:19:12] <ychaouche> just for confirmation, you can't have two variables in a for loop with syntax can you ?  https://gist.github.com/ychaouche/29fe8ecb15d418ee23999b239134b2c8
[14:19:23] <ychaouche> or similar
[14:19:52] <Soliton> # for i j in {1..6}; do echo $i:$j; done
[14:19:53] <shbot> Soliton: bash: syntax error near unexpected token `j'
[14:23:21] <grovershor> for ((i=j=0; i<6;i++ && j++)); do echo $i $j; done
[14:26:42] *** Joins: metanode (~metanode@185.163.110.120)
[14:26:47] *** Parts: metanode (~metanode@185.163.110.120) ()
[14:31:52] *** Quits: redgloboli_ (~redglobol@user/redgloboli) (Ping timeout: 265 seconds)
[14:31:53] *** Joins: metanode (~metanode@185.163.110.120)
[14:32:40] *** Parts: metanode (~metanode@185.163.110.120) ()
[14:33:48] <ychaouche> grovershor: yes but I'd like to loop on arbitrary data, not necessary sequence of numbers
[14:34:31] <ychaouche> for email name in <list of emails and names>; do create-email $email $name; done;
[14:36:15] <grovershor> ychaouche: why not just put the email as the key and user as a variable in a hash then just loop through the hash then
[14:37:01] <ychaouche> that's an idea
[14:38:24] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[14:38:37] *** Joins: wwilly (~wwilly@2a01:cb10:3e0:4f00:209c:e66c:5b61:7e7a)
[14:39:31] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[14:40:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[14:41:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[14:42:34] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[14:44:06] *** Joins: Adoi (~Adoi@217.138.199.102)
[14:44:39] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[14:44:53] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[14:45:17] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[14:46:11] *** Joins: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[14:47:20] *** Quits: Adoi (~Adoi@217.138.199.102) (Changing host)
[14:47:20] *** Joins: Adoi (~Adoi@user/adoi)
[14:47:34] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[14:47:50] *** Joins: Adoi (~Adoi@user/adoi)
[14:47:55] <Adoi> d
[14:49:50] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[14:50:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[14:52:30] *** gr33n7001 is now known as gr33n7007h
[14:52:38] <gr33n7007h> # declare -A credentials=(["foo@example.com"]="johnny" ["bar@example.com"]="danny"); for key in "${!credentials[@]}"; do printf 'email: %s name: %s\n' "$key" "${credentials[$key]}"; done
[14:52:40] <shbot> gr33n7007h: email: foo@example.com name: johnny
[14:52:40] <shbot> gr33n7007h: email: bar@example.com name: danny
[14:56:02] <ychaouche> gr33n7007h: at which point it is better to use the while loop I guess
[14:56:05] <ychaouche> while + read
[14:56:24] <ychaouche> gr33n7007h: easier to read for my own eyes.
[14:57:25] <gr33n7007h> ychaouche: sure, no problem :)
[14:59:02] *** depesz_ is now known as depesz
[15:00:26] *** Quits: N0ZYC_ (~N0ZYC@173-16-166-245.client.mchsi.com) (Read error: Connection reset by peer)
[15:00:32] *** Joins: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com)
[15:10:23] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[15:10:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:13:54] *** Joins: phillbush (~phillbush@user/phillbush)
[15:16:51] *** Joins: xx (~xx@user/xx)
[15:23:26] *** Quits: lavaball (felix@31.204.155.215) (Quit: lavaball)
[15:25:08] <Soliton> whether you use while or for depends on where your input comes from. in either loop you can save the current item, toggle a flag and process two items every other iteration.
[15:26:42] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[15:27:07] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Client Quit)
[15:27:19] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[15:27:24] *** Quits: brw (~bas@5.9.139.181) (Quit: The Lounge - https://thelounge.chat)
[15:27:56] *** Joins: brw (~bas@5.9.139.181)
[15:28:06] *** Quits: brw (~bas@5.9.139.181) (Client Quit)
[15:28:42] *** Joins: brw (~bas@5.9.139.181)
[15:31:19] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[15:34:19] *** Quits: VoidFox (~voidfox@www.voidfox.de) (Quit: Ping timeout (120 seconds))
[15:35:06] *** Joins: VoidFox (~voidfox@www.voidfox.de)
[15:35:08] *** Joins: sl4ck3r (sl4ck3r@amsterdam.pot-smokin.net)
[15:35:46] *** Mo-jorisin is now known as Mo
[15:38:06] *** Joins: gabriele (~gabriele@user/gabriele)
[15:45:22] *** Quits: Luks_Nuke (~LuksNuke@94.242.245.63) (Ping timeout: 244 seconds)
[15:45:36] *** Joins: pj (~pj@ghettoforge/pj)
[15:49:58] *** Joins: amosbird (~amosbird@13.75.119.182)
[15:50:18] <amosbird> Hello, can I use bash -c to execute a command without terminal connectted
[15:52:20] <Soliton> in what way should bash -c help you?
[15:53:17] <geirha> i++ && j++ -> i++, j++
[15:53:24] *** Joins: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[15:53:30] <geirha> oh, I was scrolled up
[15:53:38] <amosbird> Soliton: I use bash -c "myserver start" to make a daemon
[15:54:05] <Soliton> what's the difference to myserver start?
[15:54:27] <Soliton> what does the additional bash process give you?
[15:54:36] <amosbird> Soliton: it's like a double fork?
[15:54:37] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[15:54:49] <geirha> that depends on bash version
[15:54:58] <amosbird> hmm, ok
[15:55:15] <amosbird> I guess I should use nohup instead
[15:55:17] *** Joins: sgn (~sgn@user/sgn)
[15:55:24] <Soliton> nothing runs in the background there in case that is the implication.
[15:55:41] <geirha> I'd just use redirections
[15:55:50] <depesz> amosbird: check setsid - maybe it does what you want.
[15:56:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[15:56:12] <geirha> (or use systemd instead of trying to reinvent it)
[15:56:41] <amosbird> cool, thanks
[15:57:25] <Soliton> so there is a controlling terminal and you want there to not be one?
[15:57:59] *** Joins: sgn (~sgn@user/sgn)
[15:58:44] <amosbird> Soliton: nope, just as geirha said. I'm trying to reinvent something that systemd does
[16:02:51] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Quit: Quit)
[16:03:37] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[16:04:17] *** Joins: Luks_Nuke (~LuksNuke@94.242.245.63)
[16:04:41] *** Parts: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) ()
[16:04:48] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[16:07:39] *** Parts: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) ()
[16:13:54] *** Quits: Mo (~Mo@dynamic-095-116-214-252.95.116.pool.telefonica.de) (Ping timeout: 252 seconds)
[16:14:25] *** Joins: cactushead (~cactus_he@61-245-149-156.3df595.adl.nbn.aussiebb.net)
[16:20:08] *** Quits: downunder (~downunder@110.151.120.49) (Quit: WeeChat 3.1)
[16:28:21] *** Quits: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:28:28] *** Quits: fresheyeball (~fresheyeb@c-71-237-105-37.hsd1.co.comcast.net) (Quit: WeeChat 2.9)
[16:28:58] *** Joins: zeden (~zeden@user/zeden)
[16:29:02] *** Joins: 076AAB54I (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[16:29:08] *** Quits: af (~af@awalgarg.me) (Ping timeout: 264 seconds)
[16:29:18] *** Joins: shad (~shad@user/shad)
[16:36:00] *** Quits: 076AAB54I (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[16:40:20] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[16:48:52] *** Joins: anton (~anton@antonmcclure.com)
[16:49:17] <ychaouche> Soliton: intended input was administrator adding them on the command line one by one.
[16:50:13] <ychaouche> instead of calling same script multiple times themself, they'd only change arguments and use a loop that use variables as arguments.
[16:50:26] <Soliton> you would use a for loop to go over arguments.
[16:51:03] <ychaouche> I need to understand the flag part which seems key to acheive going through arguments two by two (or three by three or n by n)
[16:51:21] <ychaouche> classic for loop examples only involve 1 variable.
[16:52:00] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:52:27] <ychaouche> and compare that to using while then choosing which is more readable / writable
[16:52:36] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[16:54:50] <Soliton> # set -- foo bar baz; flag=0; for arg in "$@"; do if ((flag)); then flag=0; echo do stuff with "$prev" and "$arg"; else flag=1; prev=$arg; fi; done
[16:54:51] <shbot> Soliton: do stuff with foo and bar
[16:54:53] *** Joins: lavaball (~Melissa@31.204.155.215)
[16:56:44] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[16:58:04] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[16:58:32] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[16:58:37] *** Gerula is now known as Guest9898
[16:58:37] *** Joins: Gerula_ (~Gerula@user/gerula)
[16:58:37] *** Quits: Guest9898 (~Gerula@user/gerula) (Killed (tin.libera.chat (Nickname regained by services)))
[16:58:37] *** Gerula_ is now known as Gerula
[16:58:46] *** Quits: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[17:01:08] *** Joins: af (~af@awalgarg.me)
[17:01:26] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) (Remote host closed the connection)
[17:02:16] *** Quits: Gerula (~Gerula@user/gerula) (Client Quit)
[17:02:29] <geirha> while (( $# > 0 )); do printf 'Doing something with %s and %s\n' "$1" "$2"; shift 2 || break; done
[17:03:13] <Soliton> if you don't need the arguments anymore later.
[17:04:42] <geirha> several simple ways to keep the original arguments if that's needed
[17:06:11] <ychaouche> thanks for teaching me about shift || break
[17:06:23] <ychaouche> that's useful.
[17:07:40] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[17:07:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[17:07:59] <geirha> just be careful when using it in sh
[17:08:01] <ychaouche> that would only hit if there aren't enough arguments left, otherwise the while condition has already a $# > 0, right ? 
[17:08:12] <geirha> right
[17:08:35] <ychaouche> I wonder what is still using sh
[17:08:46] <geirha> quite a lot
[17:08:56] <ychaouche> I only work on linux servers so I only use bash for the moment
[17:09:12] <ychaouche> sometimes gotchas with cron and such
[17:09:18] <geirha> there's a ton of scripts bundled with your OS, and many of them are likely sh scripts
[17:09:21] <ychaouche> in which case I need to specify I need to work with bash
[17:09:31] <ychaouche> geirha: even linux ?
[17:09:38] <geirha> yes
[17:09:47] <ychaouche> interesting
[17:10:16] <grovershor> many linux use dash as sh
[17:10:17] <ychaouche> because they're legacy or beacuse we can't have bash at some stage ?
[17:10:35] <ychaouche> grovershor: isn't that debian flavored ? 
[17:10:46] <grovershor> the at command even warns it runs as sh
[17:10:59] <ychaouche> at and cron got me a few times yes
[17:11:03] <Soliton> any command that invokes a shell is pretty likely using sh not bash.
[17:11:08] <geirha> because if they use bash, it will be very hard to replace bash later one if they decide, like apple, to switch to zsh as default login shell
[17:11:08] <ychaouche> I don't know about sysetmd timers though
[17:11:11] *** Joins: Gerula (~Gerula@user/gerula)
[17:11:33] <ychaouche> oh, so i'ts policy
[17:11:36] <grovershor> could be i didn't chase it that far just ran across it ;)
[17:11:54] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:12:08] <ychaouche> grovershor: yeah I'm using debian distros and I can't remember if that was introduced around debian 8 or debian 7.
[17:12:10] *** Joins: shad (~shad@user/shad)
[17:12:10] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[17:12:31] *** Joins: Gerula (~Gerula@user/gerula)
[17:12:34] <geirha> ubuntu switched sh from bash to dash in 2006, debian followed shortly after
[17:12:55] <ychaouche> I really thought the d in dash was for debian :)
[17:13:07] <geirha> it is
[17:13:24] <ychaouche> So ubuntu still workging closely with debian ?
[17:13:35] <ychaouche> working*
[17:13:55] <geirha> they still steal^Wborrow a lot of packages from debian, sure
[17:14:35] <ychaouche> :p
[17:15:26] <ychaouche> so what might have happened then is dash first appread in some debian unstable first, but ubuntu was first to distribute it on its main branch
[17:15:36] <grovershor> many ubuntu packages hacve the debian developers listed in the maintainers line
[17:16:24] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[17:17:29] <ychaouche> geirha: but how is staying with sh going to help if you ever need to switch to zsh anyway ? you would still need to have both sh and zsh on the system, no ? 
[17:17:34] <ychaouche> same for bash of course.
[17:19:04] <geirha> you'd have to have sh, bash and zsh around instead of just sh and zsh
[17:19:21] *** Quits: af (~af@awalgarg.me) (Ping timeout: 252 seconds)
[17:20:02] *** Quits: Luks_Nuke (~LuksNuke@94.242.245.63) (Quit: Leaving)
[17:20:20] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[17:21:36] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:3eab:165d:967b:3406)
[17:21:44] *** Quits: ychaouche (~ychaouche@user/ychaouche) (Ping timeout: 245 seconds)
[17:22:03] *** Joins: redgloboli (~redglobol@user/redgloboli)
[17:24:56] *** Quits: Starmina (~Starmina@193.32.126.214) (Ping timeout: 264 seconds)
[17:32:41] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:33:09] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[17:37:51] *** Joins: af (~af@awalgarg.me)
[17:40:05] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:41:37] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[17:42:06] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Quit: Leaving)
[17:49:01] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[17:50:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[17:50:09] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[17:54:41] *** Joins: almostdvs (~cody@38.140.123.98)
[17:54:49] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[17:55:55] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[17:56:29] *** Joins: tuxOr (~tux0r@vpn.ahbelo.com)
[17:59:11] *** Quits: nichedev (~tux0r@99-72-201-62.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 244 seconds)
[18:15:28] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[18:15:56] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[18:17:13] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (Read error: Connection reset by peer)
[18:18:31] *** Joins: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[18:21:55] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[18:24:36] *** Joins: Starmina (~Starmina@212.170.25.93.rev.sfr.net)
[18:26:58] *** Quits: eoli3n_ (~eoli3n@162.38.105.222) (Remote host closed the connection)
[18:27:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[18:27:34] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Quit: Konversation terminated!)
[18:28:38] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[18:28:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:29:33] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Client Quit)
[18:29:57] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[18:35:44] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 264 seconds)
[18:36:27] *** Joins: cdown_ (~cdown@89.32.122.5)
[18:38:57] *** Asmodee[T] is now known as liberaTor
[18:39:42] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[18:40:20] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[18:43:28] *** Quits: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:43:54] *** Joins: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[18:45:12] *** Quits: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Client Quit)
[18:47:16] *** Joins: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[18:48:49] *** Quits: hejux (~hejux@104.224.190.144.16clouds.com) (Quit: WeeChat 3.1)
[18:48:59] *** Joins: Starmina_ (~Starmina@212.170.25.93.rev.sfr.net)
[18:49:31] *** Joins: iHorse (~ajw@user/aje)
[18:49:34] *** Parts: iHorse (~ajw@user/aje) ()
[18:50:00] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[18:50:20] *** Joins: apteryx_ (~maxim@dsl-10-129-18.b2b2c.ca)
[18:52:22] *** Quits: Starmina (~Starmina@212.170.25.93.rev.sfr.net) (Ping timeout: 272 seconds)
[18:52:22] *** Starmina_ is now known as Starmina
[18:53:51] *** Quits: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com) (Quit: WeeChat 3.0)
[18:55:59] <thebombzen> posix-compliant shell scripts work in bash and zsh
[18:56:44] <geirha> in their respective posix/sh modes
[18:56:58] <apteryx_> hello!  What happens with C-c (SIGINT) to a shell process when it isn't an interactive shell?
[18:57:31] <geirha> it dies if the currently executing foreground command dies of SIGINT. Otherwise ignored
[18:57:43] <geirha> !sigint
[18:57:43] <greybot> How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[18:59:48] <apteryx_> thanks!
[19:00:25] *** Joins: zebrag (~chris@user/zebrag)
[19:00:51] <apteryx_> is having or not having a TTY something that matters w.r.t. to how signals affect a shell process?
[19:04:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[19:04:39] <Soliton> as you can read in the link above pressing C-c and sending SIGINT are different things.
[19:10:04] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[19:11:04] *** Joins: src (~src@user/src)
[19:12:39] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[19:14:16] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[19:17:19] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[19:17:46] * apteryx_ reads
[19:22:40] *** Joins: pj (~pj@ghettoforge/pj)
[19:27:26] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[19:30:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:32:56] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) ()
[19:34:05] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[19:36:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:38:49] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[19:42:09] *** Joins: k2patel (~k2patel@user/k2patel)
[19:43:24] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 245 seconds)
[19:50:35] *** nobody__ is now known as nobody_
[19:52:22] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:52:57] *** Quits: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk) (Quit: Connection closed)
[19:53:44] *** Joins: donofrio_ (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:53:56] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Remote host closed the connection)
[19:54:24] *** Quits: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au) (Ping timeout: 244 seconds)
[19:54:53] *** Quits: donofrio_ (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Client Quit)
[19:55:23] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:55:51] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:3eab:165d:967b:3406) (Ping timeout: 268 seconds)
[20:02:38] *** Joins: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au)
[20:07:34] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[20:07:34] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 268 seconds)
[20:07:42] *** Joins: kolbe (~kolbe@user/kolbe)
[20:09:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:14:53] *** Joins: gentoolover (~gentoolov@103.197.205.46)
[20:15:16] *** Joins: superboot (~agentgasm@user/superboot)
[20:23:47] *** Quits: gentoolover (~gentoolov@103.197.205.46) (Quit: Client closed)
[20:23:55] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:24:30] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[20:26:11] <clime> hey, in case anyone is interested, I made a simple preprocessing language using bash. Basically, you can put {{{ <code> }}} tags into a text file and if you then run such file through preproc utility, the triple-brace tags will be replaced with stdout of <code> execution.
[20:27:10] <clime> The utility so far is only available in Fedora or the source code is here: https://pagure.io/rpkg-util/blob/master/f/preproc
[20:28:08] <clime> so <code> in the triple-brace tags is any bash code (the utility itself is hacked in python currently)
[20:28:49] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:29:12] <twkm> congratulations.
[20:29:38] <clime> thx
[20:30:40] *** Joins: dorp (~dorp@109-186-55-193.bb.netvision.net.il)
[20:31:37] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[20:31:48] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[20:33:42] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[20:34:18] <clime> also thx for all the provided help by this channel (and the freenode one before)
[20:34:19] <superboot> Hi all. Is there any "eval" pitfalls involved with processing stdin as a script via ssh, as done in the second answer here: https://stackoverflow.com/questions/305035/how-to-use-ssh-to-run-a-local-shell-script-on-a-remote-machine  ?
[20:34:39] <djph> !eval > superboot 
[20:34:39] <greybot> superboot: 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
[20:36:20] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:36:22] <twkm> eval is probably not the tool you want.
[20:36:52] <superboot> djph: I know about the pitfals of normal eval (i.e. I've read the page you just linked to). My question is if these same concerns apply to   ssh host <<ENDHEREDOC bash code here; ENDHEREDOC.
[20:37:23] <superboot> twkm: I know. I'm activly trying to avoid using it. 
[20:38:30] <twkm> then there are no pitfalls.
[20:40:46] <superboot> Does reading command from stdin behave any way like eval? Or is it just the same as reading from a script file?
[20:43:32] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[20:43:50] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[20:43:58] *** Parts: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) ()
[20:45:06] *** Quits: clime (~clime@ip-94-199-195-39.acvyskov.cz) (Ping timeout: 272 seconds)
[20:46:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:47:21] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:38] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[20:47:43] *** Quits: kolbe (~kolbe@user/kolbe) (Quit: leaving)
[20:47:58] * MTecknology misses freenode, it was entirely tolerable
[20:48:29] * MTecknology doesn't miss leenode in any way... hostile takeover of channels *WITH* group registrations?!
[20:48:39] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:48:54] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[20:50:52] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[20:51:51] <ash_worksi> when I am in `/path` directory ag wont match a file in `/path/to/directory` but when I am in `/path/to` it does. Anyone have any idea why? (or know a better place to ask?)
[20:53:42] <ash_worksi> `ag --unrestricted` works from `/path`, but naturally I can't ignore directories I don't want to search, like `/path/to/sessions`
[20:54:15] <ash_worksi> and `/path` is not a symlink
[20:54:16] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:54:34] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[20:55:41] *** Joins: ^-^hi (~^-^hi@user/-hi/x-1729478)
[20:56:16] <^-^hi> does "$(cat file)" ignore the newlines in file?
[20:58:56] <ash_worksi> and even running `ag` as root doesn't match from `/path`
[20:59:12] <ash_worksi> ^-^hi: whats the full command?
[20:59:43] <twkm> command substitution strips trailing newlines.
[21:00:18] *** Joins: keypusher (keypusher@user/keypusher)
[21:00:44] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[21:00:58] <ash_worksi> ^-^hi: ^
[21:01:13] *** Joins: phillbush (~phillbush@user/phillbush)
[21:01:53] <ash_worksi> I really don't get it
[21:04:35] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:04:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:6458:a5ba:9298:c581)
[21:05:55] *** Joins: Filystyn (~piotr@user/filystyn)
[21:07:29] <ash_worksi> even grep isnt working the way I expect. why is it trying to interpret --exclude-dir=session as a filename?
[21:07:39] <ash_worksi> when I start `grep -rnsf`
[21:08:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:13:24] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[21:14:20] <twkm> perhaps consider using find.
[21:17:05] <superboot> ash_worksi: What is ag? I know I'm not helping, but I'm curious. 
[21:17:09] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[21:18:40] <twkm> the_silver_surfer.
[21:18:47] <colo> an alternative to grep, mostly for programmers
[21:19:06] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[21:19:07] <colo> isn't it silver _searcher_, though? :)
[21:19:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:20:28] <twkm> sorry, yes.
[21:20:43] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[21:22:04] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[21:22:32] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[21:22:33] <earnestly> I always remember it as surfer and then spend a minute or two refinding it
[21:22:37] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[21:22:40] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:26:41] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:29:40] *** Joins: magla (~gelignite@55d4f5e7.access.ecotel.net)
[21:30:39] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[21:30:47] *** Quits: clime (~clime@ip-94-199-195-39.acvyskov.cz) (Client Quit)
[21:30:53] <^-^hi> twkm: how can i avoid stripping newlines?
[21:31:00] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[21:32:05] <jetchisel> ^-^hi: mapfile -t file_content < file.txt
[21:32:06] <twkm> you cannot.
[21:32:29] <twkm> ... using $().  you must use something else, e.g., ^^
[21:32:45] <jetchisel> \0/
[21:33:17] <twkm> though using $() you can add after the file that you remove with a pe.  i'd go with mapfile.
[21:33:58] *** Joins: andril (~andril@2601:586:8400:113:63cc:6083:6f5a:e25d)
[21:34:40] *** Joins: keypusher (keypusher@user/keypusher)
[21:34:48] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[21:35:58] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Client Quit)
[21:36:31] <e36freak> ^-^hi: why do you need to keep them?
[21:38:03] *** Joins: nobody__ (~nobody@host-82-60-161-222.retail.telecomitalia.it)
[21:38:07] *** Quits: nobody_ (~nobody@host-82-60-161-222.retail.telecomitalia.it) (Remote host closed the connection)
[21:40:04] *** Quits: ops (~ops@user/echelon) (Ping timeout: 245 seconds)
[21:40:12] *** Joins: ops- (~ops@5.2.77.173)
[21:40:15] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:40:25] *** Quits: ano (~weechat@user/ano) (Ping timeout: 252 seconds)
[21:40:29] *** Quits: ByteSlayer (~byteslaye@user/byteslayer) (Ping timeout: 245 seconds)
[21:40:37] *** Joins: ano (~weechat@user/ano)
[21:44:23] *** Quits: rendar (~rendar@user/rendar) ()
[21:44:57] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:46:46] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:47:21] *** Joins: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[21:55:07] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:55:44] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:56:57] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[21:57:57] <bancroft_> I have a script that runs another script using exec "$@" but when the second script finishes it just sort of hangs, anyone know why?
[21:58:44] <bancroft_> this is the first script https://bpa.st/QUVA
[22:01:02] <twkm> at a guess some command it runs doesn't finish.
[22:01:13] <twkm> xtrace is your friend.
[22:01:16] <bancroft_> it just runs an ansible playbook 
[22:01:21] <bancroft_> ah I'll check xtrace 
[22:02:01] <geirha> you can use shift 2 instead of shift;shift
[22:05:04] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 245 seconds)
[22:05:12] *** Quits: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Quit: bbl)
[22:05:52] *** Joins: lavaball (felix@31.204.155.215)
[22:06:29] *** Joins: L3 (~L3@user/l3)
[22:07:37] <lavaball> can i have both > and output to terminal?
[22:07:55] <larryv> !tee
[22:07:55] <greybot> tee(1) reads from standard input, and writes to standard output *and* zero or more files.
[22:07:57] <lavaball> asking for a friend.
[22:08:33] <cd> /join #wikipedia-abstract
[22:08:36] <cd> oop
[22:08:38] <cd> shit
[22:08:44] <cd> fucking space
[22:08:50] *** Parts: cd (moony@hellomouse/dev/moony) (ow)
[22:09:07] <lavaball> super nice. thanks a bunch.
[22:09:21] <lavaball> ehm... my friend says thank you i mean.
[22:09:27] <larryv> np
[22:09:37] *** Joins: Crypt9a2e (~Crypt9a2e@157.51.21.223)
[22:13:59] *** Joins: greycat (~greg@209.142.155.49)
[22:15:55] *** Quits: lavaball (felix@31.204.155.215) (Quit: Spass und Freude.)
[22:16:13] *** Joins: nattiestnate (~nate@36.70.194.182)
[22:17:28] <nattiestnate> hi, i'm currently trying to write a udev rule that runs a script for changing monitor configs (which uses xrandr). i don't want to hardcode the $DISPLAY and $XAUTHORITY variables but i have no idea how to get them. i have asked this before, to which someone pointed me to the /proc/.../environ file (which helps me get somewhere, thank you) but i can't seem to find a way to select *only* the current
[22:17:30] <nattiestnate> display i'm on
[22:18:08] <twkm> you have an o/s issue.
[22:18:12] <nattiestnate> for example if i'm logged in and running X on tty1 and tty2 at the same time
[22:18:21] <greycat> This is more of an OS channel issue.  If there are no pre-written solutions for this, you'll have to come up with your own approach.
[22:18:48] <nattiestnate> ah oops, i'll move this to another channel. sorry folks
[22:19:16] <greycat> One approach that comes to mind would be for each of your X sessions to run a process that drops a FIFO in a known location.  Then the udev rule can iterate over all the FIFOs in that place and send a message to each one.
[22:19:39] *** grettke is now known as grettke2
[22:19:39] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:19:39] <nattiestnate> oh crap i just realised i clicked on the wrong channel to begin with, this isn't #archlinux
[22:20:18] *** Joins: ibanja (~ibanja@50-80-113-37.client.mchsi.com)
[22:21:22] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 272 seconds)
[22:23:39] *** Joins: Krail (~Krail@user/alexdelarge)
[22:24:58] <bancroft_> maybe a dumb question, how do I use xtrace to find out why my script is hung? 
[22:25:25] <greycat> bash -x yourscript args
[22:25:46] <greycat> (or put set -x inside yourscript, or change the shebang to #!/bin/bash -x)
[22:28:12] <bancroft_> greycat: doesn't that just tell me where it hangs and not why? I know it hangs on an exec "$@" 
[22:28:35] <twkm> you need to xtrace the script that you exec.
[22:28:40] <greycat> Yes, it "just" tells you where it hangs.
[22:29:04] <greycat> you will however also see the expansion of "$@" so you know what was executed
[22:29:28] <twkm> so ''exec "$@"'' needs to be replaced with ''bash -x "$@"''.
[22:29:34] <greycat> Maybe.
[22:29:42] <jetchisel> !debug > bancroft_ 
[22:29:42] <greybot> bancroft_: Debugging requires a good dose of common sense. See http://mywiki.wooledge.org/BashGuide/Practices#Debugging for tips.
[22:29:44] <bancroft_> ooooh!! ok I get it 
[22:29:46] <twkm> sie knows sie is executing another script.
[22:29:53] <greycat> If on the other hand it turns out someone injected sleep 1222335 into "$@" then you have an answer.
[22:32:34] *** Quits: VoidFox (~voidfox@www.voidfox.de) (Quit: Ping timeout (120 seconds))
[22:33:41] *** Quits: simbioz_ (~simbioz@user/simbioz) (Remote host closed the connection)
[22:33:47] <ash_worksi> superboot: ag is a really fast version and imo, simple version of grep
[22:34:06] <ash_worksi> superboot: see https://github.com/ggreer/the_silver_searcher
[22:35:14] <ash_worksi> I like how one of the points on there is that the command name is "33% shorter than ack"
[22:37:54] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:38:37] *** Joins: The_Tablet (~The_Table@198.52.153.176)
[22:39:51] *** Joins: Crassus (~Crassus@user/crassus)
[22:40:32] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[22:41:03] <qswz> Guys, what is the [ -t 0 ] && { for in http://ix.io/  CLIENT script
[22:41:08] *** Quits: ^-^hi (~^-^hi@user/-hi/x-1729478) (Remote host closed the connection)
[22:41:11] <greycat> !isatty
[22:41:11] <greybot> You can see whether a file descriptor is open on a terminal with test -t. Many programs perform a check like this and change their behavior: ls, GNU grep, git, systemctl, etc.
[22:41:27] <qswz> thanks
[22:42:18] <geirha> you accidentally the end of the url
[22:42:28] <greycat> (doesn't matter)
[22:44:06] <qswz> $ echo $0
[22:44:53] <qswz> # x=0; echo "$((x))"
[22:44:54] <shbot> qswz: 0
[22:45:55] <greycat> # x=fourteen; echo "$((x))"
[22:45:56] <shbot> greycat: 0
[22:46:13] <ash_worksi> qswz: if you're not trying to show something specific to the channel, you can play with shbot by directly messaging it
[22:46:47] <qswz> even better, I've my own bash
[22:46:51] <qswz> yea sorry
[22:47:02] <qswz> was confused about shift "$((OPTIND-1))"
[22:47:13] <qswz> but I think I get it now
[22:47:28] <ash_worksi> qswz: not trying to discourage you from using it or anything, I'm just letting you know
[22:48:17] * qswz (looking at http://mywiki.wooledge.org/BashFAQ/035)
[22:49:16] *** Joins: andydude (~arobbins@c-76-111-99-194.hsd1.md.comcast.net)
[22:50:56] *** Joins: jaggz (~jaggz@user/jaggz)
[22:51:30] <jaggz> this is wrong for copying an array, but why is it prepending the assigned one?
[22:51:33] <jaggz> 	locs="${debug_locs[@]}"
[22:51:47] <greycat> you're assigning a serialized string rep of the array to a string variable
[22:52:56] <greycat> if you're not sure why it's doing what it's doing, the first step will be seeing what's actually in the array,  declare -p debug_locs
[22:53:17] <jaggz> greycat, locs already exists from locs=(joe bob); so it's not actually prepending, but overwriting the first item in locs with the serialized string
[22:53:27] <greycat> see what's in the array.
[22:53:42] <greycat> and, once again, you are assigning to a STRING VARIABLE.
[22:53:57] <greycat> even if you thought locs was an array, even if locs actually IS an array, you are assigning to a string variable.
[22:54:21] <greycat> if locs does happen to be an array at this time, then your string variable is locs[0]
[22:54:29] * jaggz <3's declare -p
[22:55:07] <greycat> # locs=([42]=moo meow quack); set -- some args; locs="$@"; declare -p locs
[22:55:09] <shbot> greycat: declare -a locs=([0]="some args" [42]="moo" [43]="meow" [44]="quack")
[22:55:22] <greycat> locs="..." assigns to the string variable locs[0]
[22:55:26] <twkm> you want: locs=("${debug_locs[@]}")
[22:56:52] *** Joins: ^-^hi (~^-^hi@user/-hi/x-1729478)
[22:56:53] <twkm> each element of debug_locs is expanded to a single word, each single word is used to provide data for the array assignment to locs.
[22:57:07] <jaggz> nod, got it. I understand everything now!
[22:57:26] *** Quits: nattiestnate (~nate@36.70.194.182) (Quit: WeeChat 3.1)
[22:57:46] *** Joins: nattiestnate (~nate@36.70.194.182)
[22:58:26] <jaggz> Yahweh akbar!
[22:58:42] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:00:47] *** Quits: nattiestnate (~nate@36.70.194.182) (Client Quit)
[23:01:03] <jaggz> scientifically speaking, any channel you are in is the best channel.
[23:01:07] <jaggz> <3
[23:02:26] *** Joins: nattiestnate (~nate@36.70.194.182)
[23:02:31] *** Quits: nattiestnate (~nate@36.70.194.182) (Client Quit)
[23:02:57] *** Joins: nattiestnate (~nate@36.70.194.182)
[23:04:18] *** Quits: andydude (~arobbins@c-76-111-99-194.hsd1.md.comcast.net) (Quit: andydude)
[23:04:45] *** Quits: lmat (~lawsa@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[23:04:58] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[23:05:28] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:06:28] *** Quits: nattiestnate (~nate@36.70.194.182) (Client Quit)
[23:06:49] *** Joins: nattiestnate (~nate@36.70.194.182)
[23:11:41] <qswz> opinions, I want to make a deploy script, which receive a git remote as argument, and as options you can choose to build some apps. so for example I'm thinking of: ./deploy h -b admin -b units (where h is my remote, admin and units some apps names)
[23:11:53] <greycat> *plonk*
[23:11:55] <qswz> is ths structure good? -b [app-name]
[23:12:43] <twkm> not particularly, unless there's something else you might deploy.
[23:12:56] <qswz> I'll take your plonk as an approval
[23:13:23] <qswz> by default it deploys the server code (so without any -b)
[23:14:58] *** Quits: L3 (~L3@user/l3) (Quit: o/)
[23:15:16] <twkm> no arguments after the host is already different than some arguments.  but whatever.
[23:17:07] <qswz> ./deploy -b admin heroku # other example
[23:18:19] <qswz> I'll make it more cool, ./deploy h -admin -units # where the names are options
[23:21:17] <jaggz> how about +admin +units
[23:22:38] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[23:23:17] <larryv> qswz: what would be wrong with ./deploy <host> [<app1> [<app2> [...]]]
[23:23:40] <larryv> are you planning on supporting multiple hosts
[23:23:47] *** mnrmnaugh is now known as awk
[23:24:09] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[23:24:30] *** Quits: ops- (~ops@5.2.77.173) (Quit: ZNC - http://znc.in)
[23:24:36] *** Joins: ops (~ops@5.2.77.173)
[23:24:36] *** Quits: ops (~ops@5.2.77.173) (Excess Flood)
[23:25:08] *** Joins: ops (~ops@5.2.77.173)
[23:25:08] *** Quits: ops (~ops@5.2.77.173) (Changing host)
[23:25:08] *** Joins: ops (~ops@user/echelon)
[23:25:09] *** Quits: ops (~ops@user/echelon) (Excess Flood)
[23:26:42] *** Joins: ops (~ops@5.2.77.173)
[23:26:43] *** Quits: ops (~ops@5.2.77.173) (Changing host)
[23:26:43] *** Joins: ops (~ops@user/echelon)
[23:26:43] *** Quits: ops (~ops@user/echelon) (Excess Flood)
[23:27:20] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[23:27:32] *** Joins: hejux (~hejux@104.224.190.144.16clouds.com)
[23:27:45] *** Joins: ops (~ops@5.2.77.173)
[23:27:45] *** Quits: ops (~ops@5.2.77.173) (Excess Flood)
[23:27:48] *** Joins: Betal (~Beta@user/betal)
[23:28:09] *** grettke is now known as grettke2
[23:28:09] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:28:18] *** Joins: ops (~ops@5.2.77.173)
[23:28:18] *** Quits: ops (~ops@5.2.77.173) (Excess Flood)
[23:30:02] *** Joins: simbioz (~simbioz@user/simbioz)
[23:31:21] *** Joins: thiras_ (~thiras@user/thiras)
[23:36:06] *** Joins: ops (~ops@5.2.77.173)
[23:36:06] *** Quits: ops (~ops@5.2.77.173) (Excess Flood)
[23:36:38] *** Joins: ops (~ops@5.2.77.173)
[23:36:39] *** Quits: ops (~ops@5.2.77.173) (Changing host)
[23:36:39] *** Joins: ops (~ops@user/echelon)
[23:36:39] *** Quits: ops (~ops@user/echelon) (Excess Flood)
[23:36:56] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 264 seconds)
[23:37:05] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 244 seconds)
[23:37:10] *** Joins: ops (~ops@5.2.77.173)
[23:37:10] *** Quits: ops (~ops@5.2.77.173) (Excess Flood)
[23:37:41] *** Joins: ops (~ops@5.2.77.173)
[23:37:41] *** Quits: ops (~ops@5.2.77.173) (Excess Flood)
[23:37:42] *** Joins: simbioz (~simbioz@user/simbioz)
[23:37:43] <geirha> Hm. Is there a ##fix_your_connection like freenode had I wonder
[23:37:51] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[23:38:12] *** Joins: ops (~ops@5.2.77.173)
[23:38:12] *** Quits: ops (~ops@5.2.77.173) (Changing host)
[23:38:12] *** Joins: ops (~ops@user/echelon)
[23:39:03] <greycat> alis says there is a ##fixyourconnection
[23:39:05] *** Joins: Zucca (~Zucca@user/zucca)
[23:39:16] <greycat> also a ##dodgyconnection
[23:39:38] <geirha> Looks like ops is done with their join/quit spamming though
[23:39:56] <MTecknology> I thought they had a channel of the same name...
[23:39:59] <ops> :)
[23:40:04] <yitz> FN also had a ##bashbans. I never set up either here
[23:40:17] <MTecknology> ##fix_your_connection
[23:40:32] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 272 seconds)
[23:40:45] <ops> sorry. no fucking idea. irc.server.libera.anti_flood_prio_low=2 is not enough apparently
[23:40:55] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[23:41:54] <ops> somewhere else redirected me to ##fix_your_connection yeah
[23:43:24] *** Quits: Crypt9a2e (~Crypt9a2e@157.51.21.223) (Ping timeout: 268 seconds)
[23:44:02] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[23:46:36] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Client Quit)
[23:48:40] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[23:50:58] *** Quits: nattiestnate (~nate@36.70.194.182) (Quit: WeeChat 3.1)
[23:51:18] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[23:53:40] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (Quit: WeeChat 2.8)
[23:56:34] <xx> ##fox_your_connection
[23:57:56] *** Quits: trekkie1701c (~trekkie17@ec2-52-15-173-116.us-east-2.compute.amazonaws.com) (Quit: :P)
[23:59:56] <geirha> ##fax_your_connection_details
[23:59:57] <qswz> larryv: good point
