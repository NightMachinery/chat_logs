[00:00:02] *** Joins: DaNeenjah (~jake@adsl-74-230-6-137.hsv.bellsouth.net)
[00:05:29] *** Quits: DaNeenjah (~jake@adsl-74-230-6-137.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[00:09:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[00:09:31] <kurahaupo> earnestly: ksh can do var=${ cmd and args } without a subprocess; maybe that's what you're thinking of
[00:12:32] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:15:19] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[00:16:15] *** Quits: joo-___ (~joo-_@fsf/member/joo--) (Quit: Lost terminal)
[00:16:23] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Remote host closed the connection)
[00:16:38] *** Joins: joo-_ (~joo-_@80-62-116-90-mobile.dk.customer.tdc.net)
[00:16:38] *** Quits: joo-_ (~joo-_@80-62-116-90-mobile.dk.customer.tdc.net) (Changing host)
[00:16:38] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[00:17:39] <earnestly> I have no idea about the specifics, so probably yes
[00:18:43] *** Quits: yhsiveht (~Nishant@49.37.177.34) (Quit: Leaving)
[00:18:46] *** Quits: unop (~unop@195.91.110.106) (Remote host closed the connection)
[00:19:02] *** Joins: unop (~unop@195.91.110.106)
[00:19:33] *** Quits: kroon (~kroon@37-247-29-68.customers.ownit.se) (Quit: Leaving)
[00:20:00] *** Joins: cooper999 (cooper999@gateway/vpn/protonvpn/cooper999)
[00:23:10] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[00:24:02] *** Joins: joo-_ (~joo-_@80-62-116-90-mobile.dk.customer.tdc.net)
[00:24:02] *** Quits: joo-_ (~joo-_@80-62-116-90-mobile.dk.customer.tdc.net) (Changing host)
[00:24:02] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[00:24:35] *** Joins: eternal_peril (~eternal_p@2607:fea8:3cdf:d1d4:a550:a0c0:1950:b6c2)
[00:28:48] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[00:29:36] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[00:30:47] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[00:40:33] *** Quits: cooper999 (cooper999@gateway/vpn/protonvpn/cooper999) (Quit: Leaving)
[00:44:03] *** Quits: mat001 (~mat001@c-69-181-153-135.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:46:16] *** Joins: mat001 (~mat001@c-69-181-153-135.hsd1.ca.comcast.net)
[00:46:55] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[00:47:10] *** Joins: jinsun (~quassel@user/jinsun)
[00:50:58] *** Joins: sazawal (~sazawal@122.161.85.155)
[00:54:33] *** Joins: son0p (~ff@2800:484:1d81:b700::4)
[00:54:38] *** Quits: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se) (Quit: Have a nice day/morning/evening/night guys, I'm going to bed!)
[00:54:41] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[00:56:23] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:58:19] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[00:58:36] *** Joins: BUSY (~BUSY@user/busy)
[00:59:34] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[00:59:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[01:00:45] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[01:00:57] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[01:01:11] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[01:01:38] *** Joins: Trieste_ (~T@user/pilgrim)
[01:01:49] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[01:03:43] *** Joins: namkeleser (~namkelese@101.179.128.103)
[01:05:07] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[01:05:31] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[01:05:38] *** Quits: Trieste_ (~T@user/pilgrim) (Remote host closed the connection)
[01:07:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[01:07:51] *** Joins: Trieste (T@user/pilgrim)
[01:07:51] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 252 seconds)
[01:08:05] *** Joins: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net)
[01:10:46] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:11:14] *** Quits: inomoz (~inomoz@85.26.232.21) (Ping timeout: 260 seconds)
[01:11:52] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:11:57] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:11:57] *** Joins: tejr (~tejr@user/tejr)
[01:12:02] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[01:12:08] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c090:f547:35ff:6299)
[01:12:08] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c090:f547:35ff:6299) (Changing host)
[01:12:08] *** Joins: skapata (~Skapata@user/skapata)
[01:12:26] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[01:12:34] *** Joins: Atque (~Atque@user/atque)
[01:12:44] *** Joins: Trieste_ (T@user/pilgrim)
[01:12:55] *** Joins: fatal (~0x00@user/fatal)
[01:13:43] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[01:16:34] *** Joins: SuperLag (~akulbe@user/superlag)
[01:17:02] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:17:18] *** Joins: ano (~ano@user/ano)
[01:17:19] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[01:19:41] *** Trieste_ is now known as Trieste
[01:19:55] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[01:22:51] *** Quits: rendar_ (~rendar@user/rendar) (Quit: Leaving)
[01:23:02] *** Quits: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[01:23:02] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 240 seconds)
[01:24:13] *** Joins: inomoz (~inomoz@83.149.19.198)
[01:25:01] <earendel> yes. they are established as they are executed in parallel. the output of p1 is streamed to the active p2 (or technically read in chunks, like line by line by the piped to process).. that process will parallel process that line already .. and spit out its result to the next and to next .. until it reaches some sink.. like stdout of console.. or some video screen. so the whole pipe is established. .. streams<3
[01:25:44] <earnestly> It's blocking IO that is the hero.  Hoare had to invent CSP because he lacked blocking IO
[01:28:23] <earendel> p2 will just read a certain amount of bytes filling its buffer. or it will fill it until it reaches some delimiter. and flushes its buffer to some function processing it. p2 can just pick the next "in the pipe" first in first out.
[01:28:45] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[01:30:28] *** Joins: pajamian (~pj@ghettoforge/pj)
[01:32:05] <earendel> for starters. imagine literally pushing tennis balls into a pipe. on the other side the first ball that got in will get out. this is it.
[01:32:14] <earendel> i hope we have also curious kids around.
[01:33:25] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:33:28] <emanuele6> that does not really explain blocking io
[01:33:40] <earendel> lol.
[01:33:41] <Blondie101010> can you give a similar analogy for a FILO? :P
[01:33:50] <earendel> for that you have to speak with earnestly
[01:34:27] <earendel> i was never talking about blocking. earnestly heard something about blocking at some point. but has no clue
[01:34:45] <emanuele6> pipes are blocking io..
[01:34:59] <earendel> first in last off
[01:35:02] <earendel> ?
[01:35:05] <Blondie101010> IO blocking is a process lock that happens in the kernel when it tries to write to a stream that is full
[01:35:12] <earendel> :>
[01:35:35] <earendel> well. that didnt even hurt.
[01:35:35] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:35:42] <earendel> but streams!
[01:36:09] <Blondie101010> shell pipes are always blocking as far as I know
[01:36:12] <earendel> plaese. step aside. im here for the real kids.
[01:37:23] <earendel> or will tear you to shreads.
[01:37:33] <Blondie101010> non blocking IO requires more program side control to deal with writes that couldn't go through with buffering
[01:37:55] <earendel> so please scroll up and read again on the pipes big boys and girls.
[01:38:36] <earendel> tomorrow i show u the town of my birth.
[01:38:37] <Blondie101010> nothing new there
[01:38:44] <earendel> blondie. what is it.
[01:39:01] <Blondie101010> line based buffering is handled by readline
[01:39:28] <earendel> right. and blondie will assist me.
[01:39:46] <earendel> that'll be it for today.
[01:42:33] *** Joins: rendar (~rendar@user/rendar)
[01:46:28] <thirstii> don't you have to read from a pipe before you write to it again ?
[01:49:51] *** A_Dragon is now known as Festive_Dragon
[01:51:18] <emanuele6> thirstii: no
[01:51:19] <earendel> p1.stdout |  p2.stin (transform..) p2.stdout | p3.stdin (transform  .. *appendix A
[01:52:36] <thirstii> there's an example on woollidge but I can't remember, i thin it might be a fifo that i am thinking of
[01:52:51] * thirstii looking now
[01:53:54] *** Quits: sazawal (~sazawal@122.161.85.155) (Quit: Leaving)
[01:54:01] <emanuele6> thirstii: fifos are pipes. you are probably thinking of the fact that a pipe needs to be open for reading by a process and for writing by the same or another process before execution can continue
[01:54:25] *** Quits: taupiqueur (~taupiqueu@188.106.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[01:55:18] <thirstii> emanuele6: yes, that sounds right
[01:55:51] <emanuele6> # mkfifo a; exec 3< a
[01:55:57] <shbot> emanuele6: no output within the time limit
[01:56:09] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[01:56:22] <emanuele6> the open() run by that exec is blocked until a is also opened for writing
[01:56:43] <emanuele6> # mkfifo a; exec 3> a & exec 3< a
[01:56:44] <shbot> emanuele6: [1] 51
[01:57:25] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:57:51] <emanuele6> but i don't know what wikipage you are referring to
[01:57:55] *** Joins: fatal (~0x00@user/fatal)
[01:59:11] <thirstii> https://mywiki.wooledge.org/BashFAQ/055
[01:59:29] *** Joins: et_ (~et@user/et)
[01:59:31] <thirstii> np ;)
[01:59:33] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[01:59:58] *** et_ is now known as et
[02:00:04] <Blondie101010> that article is only focused on IO redirection order
[02:00:14] <emanuele6> what part of that?
[02:01:38] <thirstii> don't hold yer breath..
[02:03:10] <thirstii> nope, that isn't quite the right one .. searching
[02:03:10] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:05:17] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[02:06:04] <thirstii> *this* one: https://mywiki.wooledge.org/NamedPipes
[02:07:36] *** Quits: eternal_peril (~eternal_p@2607:fea8:3cdf:d1d4:a550:a0c0:1950:b6c2) (Quit: Client closed)
[02:08:05] <thirstii> a "namedpipe", named "pipe" which does blocking ..
[02:08:21] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[02:09:32] <emanuele6> !faq 85
[02:09:33] <greybot> https://mywiki.wooledge.org/BashFAQ/085 -- How to write several times to a fifo without having to reopen it?
[02:09:39] <emanuele6> maybe you meant this one
[02:09:56] <emanuele6> that says that you should open a pipe only once to keep it alive
[02:11:24] <emanuele6> s/keep it alive/not clear the buffer/
[02:11:30] <Blondie101010> each time you reopen a named pipe, it's essential that every process cleans up or you can have residue left
[02:12:13] <Blondie101010> that is common when IO is not necessarily line based, or uses very long lines
[02:12:46] <earendel> in narrow lanes
[02:13:00] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[02:14:49] <michigan> Let's try to make a greycat logo :D
[02:14:49] <earendel> when will we have another bash pyjama computing gathering
[02:15:30] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[02:21:53] <thirstii> i presume, there is a tennis ball stuck in the leg of the last pyjama party, blocking you :)
[02:21:54] <michigan> You guys have had one before? :O
[02:23:02] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[02:24:23] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:25:05] *** Joins: namkeleser (~namkelese@101.179.128.103)
[02:27:14] <thirstii> michigan: the cat has a logo .. it's grey too
[02:29:18] *** edk is now known as demiurge
[02:29:20] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[02:29:45] <earendel> https://soundcloud.com/383project/10-gaiser-vs-heartthrob-nasty
[02:30:17] <earendel> hagbards zauberschatzkiste(tm)
[02:31:20] <michigan> thirstii: I've been told I have great design skills
[02:32:08] <michigan> Here from my most recent project: https://postimg.cc/WF7KBwcK - https://postimg.cc/gw8CNyrf - https://postimg.cc/SYjRcgkp - https://postimg.cc/2Lv6HVbH
[02:35:13] *** Joins: birkoff (birkoff@user/birkoff)
[02:36:23] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[02:38:09] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[02:38:26] <thirstii> if you write the word "dune" with a pencil, just the right way, it will have perfect 180 degree rotational symmetry .. that's quite cool ...
[02:39:04] <thirstii> i found this guy who did the same withe the name "frankherbert" .. he had design skills
[02:39:05] <e36freak> so does 69
[02:39:22] <michigan> hehe
[02:39:28] <thirstii> :)
[02:40:05] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[02:40:33] <thirstii> i think he was on myspace
[02:40:46] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[02:40:58] <michigan> Just kidding btw, those pics were my first exercise in creating the ugliest, dumbest design possible
[02:41:06] <michigan> People usually think I'm serious and go like
[02:41:15] <michigan> "Sorry bro, but I don't think design is for you."
[02:41:17] <earnestly> thirstii: tyrian
[02:41:25] <earnestly> (The game, did that)
[02:41:27] <michigan> "That shit was ugly as hell!"
[02:42:21] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[02:42:26] <michigan> https://imgur.com/a/NlP1bTu
[02:42:49] *** Quits: hackers (~self@user/hackers) (Ping timeout: 252 seconds)
[02:43:59] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[02:44:46] <michigan> * https://imgur.com/a/wPBwhYi
[02:45:01] <earnestly> > not direct link
[02:48:25] <thirstii> here you go: https://paste.pics/7525b5b4c15cc3d66faf96653b354f6b
[02:48:26] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:48:49] *** Joins: lavaball (felix@31.204.155.215)
[02:48:53] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:57] <earendel> "Sorry bro, but I don't think design is for you." lmao
[02:50:21] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[02:50:47] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[02:51:58] <earendel> oh i didn't look at them.
[02:52:09] <earendel> lets see.
[02:52:24] *** nf is now known as nfir
[02:53:27] <earendel> gprs. takes time.
[02:54:22] *** nfir is now known as sapinf
[02:56:14] <earnestly> thirstii: https://i.imgur.com/dX8ZuPv.jpg
[02:57:11] <earnestly> thirstii: Hm, the original was cleaner: https://ia800307.us.archive.org/13/items/Tyrian2000/screenshot_30.jpg
[02:57:19] *** Quits: inomoz (~inomoz@83.149.19.198) (Quit: WeeChat 3.3)
[02:57:54] *** Joins: inomoz (~inomoz@83.149.19.198)
[02:58:14] *** Quits: inomoz (~inomoz@83.149.19.198) (Client Quit)
[02:58:53] <thirstii> earnestly: see u ;-)
[02:59:58] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[03:00:17] *** sapinf is now known as nfir
[03:00:51] *** Joins: glazed (~glazed@2603-8001-6902-f659-fcd6-69dd-1b97-132e.res6.spectrum.com)
[03:01:50] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[03:05:50] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[03:11:00] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: WeeChat 3.3)
[03:11:10] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f213:f2f4:14da:85ef) (Ping timeout: 260 seconds)
[03:11:23] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:12:20] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:12:38] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:14:53] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:21] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:25] *** Joins: arinov (~arinov@213.194.126.155)
[03:17:44] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[03:17:54] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:18:12] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:19:41] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:57] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:22:24] <magyar> hi, is it possible to user the find command exec function to create a backup of the file in the same dir ?
[03:22:52] <e36freak> -execdir would be easier
[03:23:07] <e36freak> -execdir cp {} {}.bak \;
[03:23:25] <e36freak> although i guess -exec cp {} {}.bak \; # would do the same thing
[03:25:05] <magyar> thank you e36freak
[03:25:18] <emanuele6> -execdir sh -c 'cp -- "$1" "$1.bak"' - {} \;    to make it portable
[03:25:41] <geirha> s/-execdir/-exec/
[03:25:57] <magyar> different shell portable ?
[03:25:58] <emanuele6> that's what i meant, thank you
[03:26:23] <emanuele6> magyar: the behaviour of {}.bak is not specified
[03:26:50] <emanuele6> but if you use -execdir, then you don't have to worry about that because -execdir is an extension anyway
[03:27:33] *** Quits: mithrin (~mithrin@bband-dyn255.95-103-164.t-com.sk) (Ping timeout: 252 seconds)
[03:28:07] *** Quits: nitro__ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Quit: Leaving)
[03:28:49] *** Quits: unop (~unop@195.91.110.106) (Remote host closed the connection)
[03:29:21] <emanuele6> (or if you know that you are going to be using GNU find rather; it is not specific to -execdir)
[03:29:25] *** Joins: unop (~unop@195.91.110.106)
[03:30:03] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:13] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:35] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:32:52] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:33:36] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Changing host)
[03:33:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:34:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[03:35:13] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[03:35:39] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[03:36:11] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:45:37] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[03:46:02] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[03:46:50] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:47:31] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[03:48:05] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[03:48:37] *** Joins: userT (~user01@187.140.186.170)
[03:49:00] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[03:49:43] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[03:49:58] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[03:50:10] <userT> I have a doubt with a command's meaning
[03:50:42] <userT> Command: if mount -t iso9660 -o ro "$path" /mnt > /dev/null 2>&1; then [...]
[03:51:04] <userT> What does it mean? That if mount exits with status code 0 it will do stuff?
[03:52:01] <magyar> thank you emanuele6
[03:52:48] <magyar> so I'm running now a find command with -exec zip -q -d {} org/apache/logging/log4j/core/lookup/JndiLookup.class \;  but it's not completing the task, the file is not removed
[03:56:07] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:56:45] <apathor> userT: that's right. if command; then success; else failure; fi
[03:56:56] <emanuele6> # help if
[03:56:56] <shbot> emanuele6: if: if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else COMMANDS; ] fi -- http://ix.io/aSi
[03:58:06] *** Joins: namkeleser (~namkelese@101.179.128.103)
[03:58:44] <magyar> if I run the command on it's own it works fine, I tried escaping the slashes but still not working
[03:59:25] *** Quits: jle (~jle@user/jle) (Ping timeout: 240 seconds)
[03:59:25] <emanuele6> magyar: what is the full find command?
[04:00:00] <userT> What if, in the process of learning, you're doing it wrong with mount command? I.e., trying to mount a vfat partition with type iso9660? Shouldn't that fail?
[04:00:04] <emanuele6> if you remove the -exec part does it print anything? what does it print?
[04:00:16] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[04:02:43] <magyar> emanuele6: I'm a sheep, I had null output :(
[04:02:47] <magyar> it works now
[04:02:57] <magyar> thanks again
[04:03:45] <emanuele6> log4j :)
[04:04:12] *** Joins: seninha (~seninha@user/seninha)
[04:12:41] <Blondie101010> yeah, damn 0days
[04:12:59] <Blondie101010> we updated all our Java installations yesterday
[04:14:00] <userT> ???
[04:15:52] <Blondie101010> there was a 0day released about log4j yesterday which didn't affect the latest Java versions
[04:17:15] *** Quits: geli (~gelignite@55d43f19.access.ecotel.net) (Quit: Stay safe!)
[04:17:16] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[04:22:15] *** Quits: son0p (~ff@2800:484:1d81:b700::4) (Remote host closed the connection)
[04:23:13] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:25:59] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[04:27:12] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[04:28:09] <michigan> Isn't greycat here?
[04:28:12] <michigan> https://i.imgur.com/QK3xz4l.png - https://i.imgur.com/5P1vnlK.png
[04:30:05] <userT> What if, in the process of learning, you're doing it wrong with mount command? I.e., trying to mount a vfat partition with type iso9660? Shouldn't that fail?
[04:32:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c322:682e:8af1:d7c4)
[04:32:21] <emanuele6> !nabq
[04:32:22] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[04:33:15] <userT> sorry
[04:33:53] *** Parts: userT (~user01@187.140.186.170) ()
[04:33:57] <emanuele6> if it doesn't fail, it probably should not fail
[04:34:07] <emanuele6> but i am not familiar with that case in GNU mount
[04:34:14] <emanuele6> oh, they just left.
[04:35:45] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[04:37:13] <emanuele6> (util-linux mount, not GNU mount)
[04:38:59] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:39:36] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:42:52] <texasmynsted> I have seen gnu parallel. I have not really used it. It is possible to run work in the background from bash without it. It there a reason I should explore it for shell scripts?
[04:43:27] <e36freak> !faq parallel
[04:43:27] <greybot> e36freak: No matches found at https://mywiki.wooledge.org/BashFAQ
[04:43:32] <e36freak> !pm
[04:43:32] <greybot> http://mywiki.wooledge.org/ProcessManagement
[04:43:36] *** Joins: finalriposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[04:43:44] <e36freak> it can make things easier
[04:43:50] <e36freak> it all depends on what you're actually doing
[04:44:00] *** Quits: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 256 seconds)
[04:44:05] <e36freak> if you want to run large batches of things in parallel there are certainly ways to do it without
[04:45:55] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:49:45] *** Quits: MacNamera (~mac@c-68-57-42-53.hsd1.ky.comcast.net) (Quit: Leaving)
[04:49:58] <texasmynsted> The use case would be shell scripts running in a remote container like aws EC2. I pay for time. It is wasteful to have an idle virtual CPU and one saturated.
[04:50:05] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[04:53:22] <texasmynsted> I hate to add an external command for something that could be done in bash but maybe the external dependency and added complexity would be worth it.
[04:57:04] *** Joins: fstd (~fstd@xdsl-85-197-54-43.nc.de)
[04:59:26] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[05:00:08] *** Quits: fstd_ (~fstd@xdsl-81-173-139-70.nc.de) (Ping timeout: 252 seconds)
[05:03:50] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:05:14] *** Joins: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net)
[05:05:14] *** Quits: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net) (Changing host)
[05:05:14] *** Joins: ghostboarder (~quassel@user/ghostboarder)
[05:08:52] <e36freak> texasmynsted: see the pm link
[05:08:53] <e36freak> also
[05:08:55] <e36freak> !parallel
[05:08:55] <greybot> parallel() { local workers=$1 handler=$2 w i; shift 2; local elements=("$@"); for (( w = 0; w < workers; ++w )); do for (( i = w; i < ${#elements[@]}; i += workers )); do "$handler" "${elements[i]}"; done & done; wait; }; parallel 5 md5 *.txt
[05:08:57] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:09:27] <texasmynsted> okay
[05:09:46] *** Joins: sublim20 (~sublim20@user/sublim20)
[05:13:11] <texasmynsted> it does not say, but my guess is that if I run things in the background without xargs or gnu parallel they are run concurrently, but not in parallel, i.e. not on a separate CPU.
[05:13:49] <e36freak> huh?
[05:14:09] <e36freak> { foo; bar; } & # are run concurrently in the background
[05:14:10] <texasmynsted> concurrency is not the same as parallel
[05:14:15] <e36freak> foo & bar & # are run in parallel
[05:14:42] <e36freak> the trick is tracking them or running N processes in parallel with a queue
[05:15:00] <texasmynsted> It is possible to time-slice and get concurrency on a single CPU.
[05:15:01] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Quit: Leaving)
[05:15:13] <e36freak> try it and see for yourself
[05:15:37] <e36freak> also that's not concurrent, that's still in parallel but with time sharing
[05:15:38] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:15:42] <e36freak> concurrent means one after another
[05:15:54] <texasmynsted> The difference between concurrent and parallel operations are not easily observable.
[05:16:43] <texasmynsted> no concurrent means "at the same time", sequential means one after another.
[05:16:49] <e36freak> ok fair
[05:17:07] <e36freak> run top or htop or whatever, run a few intensive processes with foo & bar &
[05:17:13] <e36freak> you'll see if it uses multiple cores ro not
[05:17:15] <e36freak> (it should)
[05:17:40] <texasmynsted> I am specifically trying to exploit the difference between concurrency and parallelism
[05:21:42] *** Joins: gpol (~gpol@135-23-207-205.cpe.pppoe.ca)
[05:26:31] *** Quits: kj (~kj@c9s.cloud-ready.com) (Quit: Textual IRC Client: www.textualapp.com)
[05:28:24] *** Joins: Nintendo (~smb3@user/great)
[05:28:42] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:28:46] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:31:15] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:31] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:31:57] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:32:01] <e36freak> texasmynsted: so test and see what it does
[05:33:19] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:33:51] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 250 seconds)
[05:34:10] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[05:34:33] *** Quits: AndrewYu (~andrew@user/andrewyu) (Remote host closed the connection)
[05:38:38] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[05:39:07] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[05:39:16] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:39:22] <thirstii> what is the differenence between concurrent and parallel ?
[05:39:50] *** Joins: AsenMx (~AsenMx@user/asenmx)
[05:39:54] <thirstii> i mean .. are we going to get technical about "parallel" ?
[05:41:26] *** Quits: Nintendo (~smb3@user/great) (Ping timeout: 260 seconds)
[05:44:17] <kurahaupo> thirstii: Parallel is where lots of things run concurrently. Concurrent is where lots of things run in parallel, which is completely different. 😜
[05:44:33] <thirstii> rofl *-)
[05:45:49] <thirstii> i like to run perpendicular to the flo
[05:48:03] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c94c:7b63:2f85:a7d)
[05:48:03] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c94c:7b63:2f85:a7d) (Changing host)
[05:48:03] *** Joins: skapata (~Skapata@user/skapata)
[05:49:40] <kurahaupo> consecutive means one after another, concurrent means running together (it's literally there in the Latin derivation: "con" = "with" (each other), "curr" = to flow, to run; (metaphorically) to follow a line of reasoning)
[05:50:11] <kurahaupo> e36freak: ^^^
[05:53:06] <e36freak> kurahaupo: yeah you're right
[05:53:23] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[05:53:24] <e36freak> i blame booze
[05:53:54] * kurahaupo smacks booze and sets him on fire
[05:54:42] <kurahaupo> (back after OS upgrade+reboot)
[05:54:51] <e36freak> thirstii: generally concurrency means running multiple things at once on one cpu/core, more like time sharing. it switches back and forth between multiple processes instead of running one only after another firishes
[05:55:12] <e36freak> whereas parallelism is actually running multiple things at the same time, across cpus/cores/whatever
[05:55:26] <e36freak> or even across multiple systems, sometimes
[05:55:44] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Quit: Quit)
[06:00:14] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[06:00:39] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[06:04:06] <thirstii> e36freak: thanks, i see there is a difference
[06:04:46] <thirstii> is it for some performance test or something ?
[06:05:08] <e36freak> dunno, ask texasmynsted
[06:05:48] <thirstii> does bash allow for "affinity" to cpu? ..
[06:06:15] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[06:06:55] *** Quits: sublim20 (~sublim20@user/sublim20) (Read error: Connection reset by peer)
[06:09:38] *** Quits: darkstarx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:11:46] *** Quits: n4dir (~user@mue-88-130-56-052.dsl.tropolys.de) (Ping timeout: 260 seconds)
[06:11:47] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c322:682e:8af1:d7c4) (Quit: Leaving)
[06:13:22] *** Joins: n4dir (~user@i5E86C530.versanet.de)
[06:15:30] *** Joins: earendel (uid498179@user/earendel)
[06:23:14] *** Joins: wikan (~wikan@2a02:a31d:8541:e100:213:2ff:fed3:8291)
[06:27:02] *** Joins: Frost (~Frost@167.88.22.154)
[06:30:34] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[06:30:56] *** Joins: fatal (~0x00@user/fatal)
[06:35:12] *** Joins: zebrag (~chris@user/zebrag)
[06:38:04] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:42:59] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[06:43:18] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[06:46:20] *** Quits: gschanuel21 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[06:46:52] *** Joins: gschanuel21 (~gschanuel@user/gschanuel)
[06:48:02] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:49:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[06:49:01] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:49:28] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:50:06] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:50:29] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:51:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:54:07] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[06:54:07] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[06:55:13] *** Joins: sublim20 (~sublim20@user/sublim20)
[06:55:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:57:59] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:58:52] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:59:18] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:59:26] *** Quits: jos1 (~jos3@dyndsl-091-248-054-096.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[07:02:53] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:03:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[07:11:09] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:12:40] *** Joins: jos1 (~jos3@dyndsl-178-142-071-142.ewe-ip-backbone.de)
[07:12:55] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:13:03] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[07:14:49] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:22:25] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[07:23:36] *** Quits: n4dir (~user@i5E86C530.versanet.de) (Remote host closed the connection)
[07:23:58] *** Joins: timj (~timj@user/timj)
[07:29:45] *** Joins: led_belly (~led_belly@196.240.57.117)
[07:30:38] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:33:35] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:34:58] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:38:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[07:38:32] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:39:02] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[07:40:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.3)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:48:02] *** Quits: wikan (~wikan@2a02:a31d:8541:e100:213:2ff:fed3:8291) (Quit: Client closed)
[07:52:34] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[07:53:36] <zumba_addict> Good evening. How do I make -p and -i fail when I don't pass a value? ./myscript -p -i The -i becomes a value in OPTARG - https://bpa.st/DQVQ
[07:57:33] <e36freak> technically it's correct that -i should be an option to -p there
[07:57:42] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[07:57:42] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[07:57:47] <e36freak> or rather an optarg
[07:58:11] <e36freak> if you want to disallow optargs starting with "-", then just check for [[ $OPTARG = -* ]] and error accordingly
[07:58:58] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:00:44] *** Joins: vishal (~vishal@fedora/vishal)
[08:03:51] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[08:06:52] *** Joins: Hawker (~pi@drmons0544w-47-55-147-54.dhcp-dynamic.fibreop.ns.bellaliant.net)
[08:06:52] *** Quits: Hawker (~pi@drmons0544w-47-55-147-54.dhcp-dynamic.fibreop.ns.bellaliant.net) (Changing host)
[08:06:52] *** Joins: Hawker (~pi@user/hawker)
[08:09:44] *** Joins: loganlee (~Thunderbi@user/loganlee)
[08:14:39] *** Quits: Hawker (~pi@user/hawker) (Quit: leaving)
[08:14:55] *** Joins: Hawker (~pi@user/hawker)
[08:15:54] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[08:17:57] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Quit: Konversation terminated!)
[08:23:09] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[08:24:34] *** Quits: Hawker (~pi@user/hawker) (Quit: Lost terminal)
[08:26:26] *** Joins: Hawker (~pi@user/hawker)
[08:29:07] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[08:29:24] *** Joins: relight (~relight@user/relight)
[08:33:38] *** Quits: Hawker (~pi@user/hawker) (Quit: leaving)
[08:34:01] *** Joins: Hawker (~pi@user/hawker)
[08:34:43] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[08:38:29] *** Joins: et_ (~et@user/et)
[08:39:19] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[08:39:19] *** et_ is now known as et
[08:39:42] *** Quits: Frost (~Frost@167.88.22.154) (Ping timeout: 260 seconds)
[08:40:21] *** pajamian is now known as pj
[08:45:29] *** Joins: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se)
[08:46:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:46:41] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Ping timeout: 250 seconds)
[08:48:37] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:50:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:51:49] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[08:52:16] *** Joins: tejr (~tejr@user/tejr)
[08:53:20] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[08:55:20] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[08:56:09] *** Parts: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se) ()
[08:57:13] *** Quits: joerg (~saturn@user/joerg) (Ping timeout: 268 seconds)
[08:57:49] *** Joins: joerg (~saturn@user/joerg)
[08:58:44] *** Joins: n4dir (~user@i5E86C530.versanet.de)
[09:11:46] *** Joins: drewlander_ (~drewlande@74.196.20.3)
[09:12:13] *** Quits: drewlander (~drewlande@74.196.20.3) (Ping timeout: 240 seconds)
[09:12:51] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Quit: ɯlɐɔ uı ʞɹoʍ oʇ ƃuıoƃ)
[09:13:38] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[09:13:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[09:20:52] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:26:03] *** Quits: glazed (~glazed@2603-8001-6902-f659-fcd6-69dd-1b97-132e.res6.spectrum.com) (Quit: Client closed)
[09:26:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:29:16] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[09:29:37] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:19] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:32:30] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[09:34:31] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[09:36:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:36:51] *** Joins: sublim20 (~sublim20@user/sublim20)
[09:37:26] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:37:53] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:45:15] *** Quits: w0ng (~w0ng@103.1.212.92) (*.net *.split)
[09:45:24] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[09:45:40] *** Joins: w0ng (~w0ng@103.1.212.92)
[09:53:54] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[09:55:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:59:44] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:00:27] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[10:03:12] *** Joins: rgrinberg (~textual@187.223.209.106)
[10:05:15] *** Joins: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se)
[10:12:57] *** Joins: han-solo (~han-solo@user/han-solo)
[10:15:01] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[10:15:27] *** Joins: igemnace (~ian@user/igemnace)
[10:16:26] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:19:53] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Remote host closed the connection)
[10:23:23] *** Joins: mei (~mei@user/mei)
[10:31:07] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:32:03] <hejux> hello bash dudes. i'd like to send a domain to 8.8.8.8 and get a return of it's ip addr, by  using bash /dev/udp/8.8.8.8/53
[10:32:10] <hejux> how could i do it?
[10:32:50] <hejux> echo "google.com" >/dev/udp/8.8.8.8/53
[10:32:58] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[10:33:12] <cluelessperson_> hejux, in linux,   dig
[10:33:30] <cluelessperson_> dig +short @8.8.8.8 example.com
[10:33:32] <hejux> yes, i know dig. i want to try this bash feature.
[10:33:51] <Blondie101010> if you want to implement it yourself, then learn the DNS protocol and create the request
[10:34:20] <Blondie101010> of course doing that would be ridiculous, but it's possible
[10:34:23] <cluelessperson_> Does anyone know how to move only 10 files at a time from a directory?
[10:34:36] <cluelessperson_> there's too many files to import with this software
[10:34:43] <cluelessperson_> it tries to do too much and takes too long.
[10:34:45] <hejux> Blondie101010: echo the UDP HEX CODE to /dev/udp?
[10:35:00] <cluelessperson_> mv `ls -1 | head -10` ./target/
[10:35:03] <cluelessperson_> doesn't seem to work for me.
[10:35:14] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[10:35:41] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[10:35:52] <Blondie101010> cluelessperson_:  what does it do
[10:36:19] <hejux> there is a show case on the web:
[10:36:20] <Blondie101010> the fact that target is there might be a source of at least one error
[10:36:22] <hejux> { echo cfc9 0100 0001 0000 0000 0000 0a64 7563 6b64 7563 6b67 6f03 636f 6d00 0001 0001 | xxd -p -r >&6; dd bs=9000 count=1 <&6 2>/dev/null | xxd ; } 6>/dev/udp/8.8.8.8/53
[10:36:44] <hejux> i don't quite understand what it means
[10:37:15] <Blondie101010> did you read the DNS RFCs?
[10:37:26] <Blondie101010> you asked how to do something yourself
[10:37:40] <Blondie101010> for that you have to LEARN the protocol
[10:37:51] <hejux> yes
[10:37:58] <hejux> and no
[10:38:06] <Blondie101010> if you did, you'd know what that request does
[10:39:58] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[10:40:22] <Blondie101010> but my first point was that it is ridiculous to write your own DNS client unless you have extremely unusual requirements, and those would likely justify hiring a specialist who would NOT ask how to implement DNS on bash???
[10:40:39] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[10:40:47] <hejux> i give up. i think it is ridiculous too
[10:41:05] *** Joins: zaden (~maddx@73.92.207.228)
[10:41:40] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[10:58:02] *** Joins: namkeleser (~namkelese@101.179.128.103)
[10:58:57] <e36freak> cluelessperson_: chunk=10; f=0; for file in ./*; do tomove[f]=$file; if ((!(++f % chunk) )); then mv "${tomove[@]}" ./dest/; f=0; fi; done; ((f)) && mv "${tomove[@]}" ./dest/
[11:09:07] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[11:10:17] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 252 seconds)
[11:11:20] *** Joins: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au)
[11:15:35] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[11:18:22] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:21:13] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[11:22:13] *** Joins: RandomGuy21 (~RandomGuy@202.131.157.38)
[11:22:15] *** Quits: RandomGuy21 (~RandomGuy@202.131.157.38) (Client Quit)
[11:24:14] *** Joins: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net)
[11:29:44] *** Quits: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net) (Ping timeout: 256 seconds)
[11:31:30] *** Joins: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net)
[11:32:39] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 250 seconds)
[11:34:29] *** Joins: ravan (~ravan@user/ravan)
[11:42:11] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 252 seconds)
[11:43:09] *** Joins: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de)
[11:44:31] *** Joins: han-solo (~han-solo@178.248.118.17)
[11:49:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[11:51:18] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[11:54:22] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[11:54:31] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:58:58] *** Quits: zaden (~maddx@73.92.207.228) (Quit: WeeChat 3.4-rc1)
[12:08:14] *** Joins: sublim20 (~sublim20@user/sublim20)
[12:11:54] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[12:12:21] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[12:12:42] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[12:14:34] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[12:15:32] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:15:44] *** Joins: taupiqueur (~taupiqueu@11.145.204.77.rev.sfr.net)
[12:16:08] *** Joins: thevishy (~Nishant@2405:201:f005:c007:81f3:ee3c:76f0:8869)
[12:17:00] *** Joins: magla (~gelignite@55d4a165.access.ecotel.net)
[12:19:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[12:19:36] *** Joins: rendar (~rendar@user/rendar)
[12:33:58] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 260 seconds)
[12:40:00] *** Quits: mat001 (~mat001@c-69-181-153-135.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:41:38] *** Joins: bud (~bud@user/bud)
[12:45:03] *** Joins: Mo (~Mo@dynamic-077-008-155-036.77.8.pool.telefonica.de)
[12:46:17] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:48:21] *** Joins: timj (~timj@user/timj)
[12:50:14] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a06f:10d1:179a:1cf6)
[12:50:14] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a06f:10d1:179a:1cf6) (Changing host)
[12:50:14] *** Joins: skapata (~Skapata@user/skapata)
[12:54:03] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[12:58:39] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[13:01:36] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[13:01:47] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[13:01:47] *** Joins: wuseman (~wuseman@user/wuseman)
[13:01:47] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:06:38] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[13:07:48] *** Joins: CaCode (~CaCode@user/cacode)
[13:10:14] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:15:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[13:16:58] *** Joins: zaden (~maddx@73.92.207.228)
[13:20:10] *** Quits: hejux (~hejux@146.56.136.247) (Remote host closed the connection)
[13:20:26] *** Joins: hejux (~hejux@146.56.136.247)
[13:22:05] *** Quits: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se) (Quit: leaving)
[13:27:50] <rendar> best way to grep '[something at the start of the line]whatever[something at the end]' ?
[13:28:03] <sublim20> what do you mean?
[13:28:04] <rendar> let's say line is ABCdlfjeljlXYZ
[13:28:23] <rendar> i will grep for ABC at the start and XYZ at the end
[13:28:25] *** Joins: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de)
[13:28:28] <rendar> and it gets that line
[13:28:49] <sublim20> you could just use a regular expression?
[13:28:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[13:29:09] <rendar> you mean with grep -E ?
[13:29:32] <sublim20> # myLine='ABCdlealXYZ'; grep -E '^ABC.*XYZ$'
[13:29:35] <sublim20> whoops
[13:29:37] <sublim20> yeah,
[13:29:38] <shbot> sublim20: no output within the time limit
[13:29:53] <sublim20> # myLine='ABCdlealXYZ'; grep -E '^ABC.*XYZ$' <<< "$myLine"
[13:29:54] <shbot> sublim20: ABCdlealXYZ
[13:30:03] <rendar> but consider that ABC and XYZ are into strings
[13:30:07] *** Quits: justSleigh (~justache@user/justache) (Remote host closed the connection)
[13:30:29] <rendar> so i'd need grep -E "^${my_var}.*${my_var2}$"
[13:30:30] <rendar> right?
[13:30:33] <sublim20> i don't understand
[13:30:55] <rendar> that ^
[13:30:57] <sublim20> you're probably going to need to build the regex ahead of time, and then apply it
[13:30:59] *** Joins: justSleigh (~justache@user/justache)
[13:31:10] <rendar> how exactly?
[13:31:20] <sublim20> as in, myRegEx="^${my_var}....."
[13:31:30] <sublim20> and then use, grep -E $myRegEx
[13:31:32] *** Quits: han-solo (~han-solo@178.248.118.17) (Quit: leaving)
[13:31:35] <rendar> i see
[13:31:39] <rendar> how that would help?
[13:31:50] *** Joins: han-solo (~han-solo@user/han-solo)
[13:32:08] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[13:32:24] <osse> it wouldn't
[13:32:31] <rendar> ok
[13:32:56] <rendar> osse, so do you agree the best solution is `grep -E "^${my_var}.*${my_var2}$"` ?
[13:33:44] <osse> depends on what they contains
[13:34:01] <sublim20> yeah, this is why you should probably build it ahead of time
[13:34:17] <sublim20> alright, wish ya luck
[13:34:50] <osse> storing the regex in a variable and calling grep with it makes no difference
[13:35:14] <rendar> osse, they will contain paths and/or strings
[13:36:06] <rendar> https://bpa.st/RDUQ like this
[13:37:21] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:37:35] *** Joins: haliucinas (~haliucina@5.20.153.21)
[13:38:13] <osse> awk might do a better job here
[13:38:24] <rendar> uhm, how?
[13:39:27] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:39:35] *** Joins: earnestly (~earnest@user/earnestly)
[13:39:56] <osse> nah maybe not. that again depends on what you want to do with the output
[13:40:22] <rendar> i have to read it line by line to run a function with these lines
[13:40:34] <osse> by anyway, something like this:  awk -va="$a" -vb="$b" '$0 ~ "^"a && $0 ~ b"$"'
[13:43:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:43:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[13:43:37] <pj> !xy
[13:43:37] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[13:43:48] <osse> and what does that function do? it's a bit vague.
[13:43:49] <pj> rendar: what is the actual problem you're trying to solve?
[13:45:23] <rendar> let's say line is ABCdlfjeljlXYZ, i will grep for ABC at the start and XYZ at the end, and it gets that line
[13:45:27] <rendar> pj ^
[13:45:45] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:45:52] *** Lord_of_Life_ is now known as Lord_of_Life
[13:45:53] <pj> rendar: that's the "Y" in the XT above, what's the "X"?
[13:45:57] <pj> errr XY
[13:46:05] <pj> what's the real problem?
[13:46:29] <rendar> pj, i have stated the problem 4 times, and that's pretty simple: grepping lines having the start of a line and the end of that line
[13:47:06] <pj> sorry, if you keep repeating what you think the solution is then I can't really help you solve your actual problem.
[13:47:20] <rendar> i'm stating the PROBLEM not the solution
[13:47:33] <rendar> i have also pasted this  https://bpa.st/RDUQ
[13:47:41] <pj> You've already been told how to do that with grep, so if it solved your problem you wouldn't keep asking.
[13:47:56] <rendar> i have a program outputting lines, i have $START and $END of the lines i want to keep
[13:48:14] <rendar> so i need grep to give me all lines starting with $START and ending with $END
[13:48:36] <rendar> pj, i was not asking, osse was showing me a different solution with awk
[13:48:37] <pj> so you're looking at output with three fields separated by /, and you want to look for specific first and lat fields.
[13:49:10] <rendar> then you come into with your !xy or whatever
[13:50:13] <osse> rendar: I was saying awk might be better, dependant on how you want to use the result (ie. how you process that further, like splitting into path components or whatever).
[13:50:23] <rendar> yes
[13:50:25] <osse> But if that list of lines is the end result then grep is fine
[13:50:50] *** Joins: tangyQED (~tangy@user/tangy)
[13:51:10] <rendar> i have to split into path components yes, so i think i'll use awk version
[13:51:33] <pj> the problem that you have to be careful with grep is that grep will attempt to parse your $a and $b for special regexp characters.
[13:51:53] <rendar> yes, that was a concern
[13:51:54] <pj> in your case it doesn't look like they have any, but if there's a chance that they might then you might have to look at another solution.
[13:51:57] *** Joins: lavaball (felix@31.204.155.215)
[13:52:16] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:52:18] <rendar> i think the osse's awk solution works pretty great
[13:53:03] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 250 seconds)
[13:53:53] <pj> I think it may have the same issue, actually.
[13:54:03] <rendar> how?
[13:54:21] <pj> one sec
[13:54:59] *** Quits: led_belly (~led_belly@196.240.57.117) (Ping timeout: 250 seconds)
[13:55:38] <pj> # awk -va="..." -vb="YYY" '$0 ~ "^"a && $0 ~ b"$"' <<<"XXXabcdYYY"
[13:55:39] <shbot> pj: XXXabcdYYY
[13:56:00] <pj> see "." is a special regexp character, and awk is parsing it as such in the regexp, it's not looking for a literal dot.
[13:56:17] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[13:56:36] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:56:37] <pj> it's the same exact issue as was mentioned with grep
[13:56:50] <hejux> !grep
[13:56:51] <greybot> grep(1) is a tool used to select certain lines from a stream/file. If you want to extract more specific information, use another tool. Maybe sed/awk or a more specific tool for your purpose.
[13:56:55] <pj> grep -P might work, pcre has \Q and \E which could help with that.
[13:56:58] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:57:05] <pj> but -P tends not to be recommended.
[13:57:27] <pj> I don't know if ERE has an equivalent to PCRE's \Q and \E
[13:58:07] <osse> maybe regex isn't needed at all
[13:58:37] <osse> awk -F/ '$1 == a && $NF == b'
[13:59:06] <pj> a=... b=YYY; grep -P '^\Q$a\E.*\Q$b\E$' <<<"XXXblahYYY"
[13:59:13] <pj> # a=... b=YYY; grep -P '^\Q$a\E.*\Q$b\E$' <<<"XXXblahYYY"
[13:59:14] <shbot> pj: no output
[13:59:22] <pj> # a=... b=YYY; grep -P '^\Q$a\E.*\Q$b\E$' <<<"...blahYYY"
[13:59:23] <shbot> pj: no output
[13:59:28] <pj> hrmmmm, doesn't work
[13:59:43] <pj> oh I know why
[14:00:07] <pj> # a=... b=YYY; grep -P '^\Q'"$a"'\E.*\Q'"$b"'\E$' <<<"XXXblahYYY"
[14:00:08] <shbot> pj: no output
[14:00:12] <pj> # a=... b=YYY; grep -P '^\Q'"$a"'\E.*\Q'"$b"'\E$' <<<"...blahYYY"
[14:00:13] <shbot> pj: ...blahYYY
[14:00:31] <pj> so there it's matching the ... literally instead of as any char.
[14:03:37] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[14:05:02] <pj> so the only way that could break is if $a or $b have a literal '\E' in them.
[14:09:02] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[14:09:30] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:14:50] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:18:32] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[14:21:01] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Client Quit)
[14:21:33] <rendar> sorry i was afk, uhm, interesting, i see
[14:22:50] <rendar> pj, thanks, now its clear
[14:23:35] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[14:24:27] *** Quits: liefer (~liefer@user/liefer) (Ping timeout: 250 seconds)
[14:25:07] <pj> rendar: yw.  I don't normally recommend grep -P, though, my understanding is pcre has some issues with multibyte chars, but I'm not entirely sure.
[14:25:22] <pj> you could also just as easily use perl if you have it, btw.
[14:25:32] *** Quits: cluelessperson_ (~cluelessp@user/cluelessperson) (Ping timeout: 252 seconds)
[14:25:53] <emanuele6> osse: index($0, a) == 1 && index($0,b) == length+1-length(b)
[14:25:56] <rendar> ok
[14:26:11] *** Joins: earendel (uid498179@user/earendel)
[14:27:17] *** Quits: n4dir (~user@i5E86C530.versanet.de) (Remote host closed the connection)
[14:27:27] <emanuele6> pj: \Q and \E aren't much useful if you inject $a and $b anyway
[14:28:06] <rendar> let's say i have a list of (non absolute) paths, e.g.: `zpool1/ds1\nzpool1/ds1/cry` and so on. All these paths starts with a common string, which is `zpool1/ds1`: now i want to substitute that starting string with another one, e.g. `zpool2/ds2`, so i will get: `zpool2/ds2\nzpool2/ds2/cry` and so on
[14:28:09] <rendar> what is the best way?
[14:28:17] *** Quits: taupiqueur (~taupiqueu@11.145.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[14:28:24] <pj> emanuele6: they're a lot more useful than not using them at all.  With \Q and \E only '\E' in one of the strings will cause issues, while without them there's a lot of other characters that can cause issues.
[14:29:11] <emanuele6> only \E and everything after..
[14:29:36] <pj> well, onc eyou hit \E all bets are off.
[14:29:50] <emanuele6> if you want to use pcre, just use perl so you can do it properly
[14:30:00] <pj> with perl you can do one better, right
[14:30:30] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[14:30:44] <emanuele6> but in this case, you can use awk: awk -va=... -vb=XXX 'index($0, a) == 1 && index($0, b) == length+1-length(b)'
[14:31:03] <pj> perl -ne 'print if /^\Q$ENV{a}\E.*\Q$ENV{b}\E$/'
[14:31:09] <emanuele6> that is better
[14:33:10] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[14:33:31] *** Quits: kill (~killown@user/killown) (Remote host closed the connection)
[14:34:46] <rendar> emanuele6, nice solution
[14:34:50] <rendar> basically that's won't use regexp
[14:34:59] <emanuele6> # a=... b=YYY; <<< 'XXXblahYYY' awk -va="$a" -vb="$b" 'index($0, a) == 1 && index($0, b) == length + 1 - length(b)'
[14:35:00] <shbot> emanuele6: no output
[14:35:05] <emanuele6> # a=... b=YYY; <<< '...blahYYY' awk -va="$a" -vb="$b" 'index($0, a) == 1 && index($0, b) == length + 1 - length(b)'
[14:35:06] <pj> rendar: something like this, probably: maparray -t list < filename; printf '%s\n' "${list[@]/#zpool2\/ds1/zpool/ds2}"
[14:35:07] <shbot> emanuele6: ...blahYYY
[14:35:34] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:36:10] <emanuele6> in bash, the best way is [[ $var == "$a"*"$b" ]] obviously
[14:36:50] <emanuele6> well, [[ $var == "$a"* && $var == *"$b" ]] to make it equivalent to the other solutions
[14:37:00] *** Joins: sublim20 (~sublim20@user/sublim20)
[14:37:03] <pj> # printf '%s\n' zpool1/ds1\nzpool1/ds1/cry zpool1/ds1\nzpool1/ds1/foo > filelist; maparray -t list < filelist; printf '%s\n' "${list[@]/#zpool1\/ds1/zpool2/ds2}"
[14:37:05] <shbot> pj: bash: maparray: command not found
[14:37:10] <pj> bleh
[14:37:10] <rendar> so && and || can be inside [[ ]] ?
[14:37:20] <pj> # printf '%s\n' zpool1/ds1\nzpool1/ds1/cry zpool1/ds1\nzpool1/ds1/foo > filelist; mapfile -t list < filelist; printf '%s\n' "${list[@]/#zpool1\/ds1/zpool2/ds2}"
[14:37:21] <shbot> pj: zpool2/ds2nzpool1/ds1/cry
[14:37:21] <shbot> pj: zpool2/ds2nzpool1/ds1/foo
[14:37:56] <pj> hrmmmmmm
[14:39:11] <emanuele6> rendar: they are operators of [[, yes.
[14:40:02] <emanuele6> you can also evaluate two [[ blocks and join them with && or || as if they were two commands, but that seems silly.
[14:40:42] <rendar> and what about ((a&&b)||c) ?
[14:40:56] <emanuele6> what is that?
[14:41:04] <rendar> priority parentheses
[14:41:17] <rendar> applied on AND/OR operators
[14:41:18] <earendel> is ((a&&c || b&&c))
[14:41:21] <emanuele6> what?
[14:41:48] <earendel> is (((a&&c) || (b&&c)))
[14:42:03] <earendel> distributivity :p
[14:42:06] <rendar> emanuele6, did you ever use a real programming language? it may happen that you want give priorities to AND and OR operators
[14:42:12] <rendar> earendel, lol
[14:42:24] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:42:35] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:43:57] <earendel> sometimes it pays out to rephrase, keeping in mind short-circuitness
[14:44:03] <earendel> but not often.
[14:44:24] <emanuele6> rendar: so you just started talking about something unrelated and you expected me to understand what you meant?
[14:44:51] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[14:44:55] <rendar> emanuele6, how is that unrelated? we were speaking about || && operators and parentheses
[14:45:15] <emanuele6> when did we speak about "parentheses"?
[14:45:16] <rendar> if you don't know boolean priorities, how can i know that..
[14:45:25] <emanuele6> you just said "what about ((a&&b)||c) ?"
[14:45:28] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:45:34] <earendel> LOL
[14:45:36] <rendar> <rendar> so && and || can be inside [[ ]] ?
[14:45:56] <rendar> ^ this is clearly correlated to ((a&&b)||c)
[14:46:05] <emanuele6> how?
[14:46:23] <rendar> because we're speaking about &&, || and [[, ]]
[14:46:44] <earendel> yes.. i wondered too. [[ cond1 ]] && [[ cond2 ]] would be valid too?
[14:46:48] <earendel> i guess so.
[14:46:58] <rendar> earendel, yes
[14:47:19] <rendar> [[ cond ]] && [[ cond || cond ]] ? who knows
[14:47:51] <rendar> [[ cond ]] && [[ cond || cond ]] ? is a way to specify (A&&(B||C)) ?
[14:47:55] <earendel> but would it make a difference hmhm... i guess no.
[14:48:12] <emanuele6> [[ A && ( B || C ) ]] ...
[14:49:01] <rendar> what about [[ A && [[ B || C ]] ]] ?
[14:49:57] <earendel> ((a||b)&&c) = (((a&&c))||((a&&c))) .. this way.
[14:50:07] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[14:50:22] <emanuele6> rendar: you make no sense
[14:50:27] *** Quits: capn (~capn@user/capn) (Remote host closed the connection)
[14:50:28] <earendel> ((a&&b)||c) = (((a||c))&&((a||c))) and that way.
[14:50:42] <rendar> emanuele6, you make no sense!
[14:50:47] <earendel> lol
[14:50:50] <rendar> lol
[14:51:09] <earendel> psychokiller qu'est-ce que c'est?
[14:51:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[14:54:02] *** Joins: jkwnki (~jkwnki@p2e579fe8.dip0.t-ipconnect.de)
[14:54:03] *** Joins: CaCode_ (~CaCode@user/cacode)
[14:55:02] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 240 seconds)
[14:55:18] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[14:55:32] <rendar> let's say i have a="zpool1/ds1/cry/whatever" and new="zpool222/ds222", now i want that $a becomes b="zpool222/ds222/cry/whatever", best way to achieve this?
[14:55:35] *** Joins: fatal (~0x00@user/fatal)
[14:55:41] <rendar> only the first part of the string must change
[14:56:46] <rendar> if a="a/b/cry/whatever" and new="e/f/g/h/j" i want: b="e/f/g/h/j/cry/whatever"
[14:56:59] <earendel> can u not make that string more readable please?
[14:57:11] <earendel> like apple banana peach
[14:57:17] <rendar> ok
[14:57:49] <earendel> must not be the final names. but they also aren't bad :>
[14:58:02] <rendar> check this out: match="banana/peach"     a="banana/peach/store/com"    new_match="oranges/apples" -> b="oranges/apples/store/com"
[14:59:30] <han-solo> "parameter substiution"
[14:59:53] <han-solo> if i can spell substitution right
[15:00:01] <rendar> yes
[15:00:06] <emanuele6> rendar asks basically the same question every day
[15:00:13] <emanuele6> even on sundays
[15:00:17] <han-solo> ':)
[15:00:17] <earendel> # a=banana/peach/store/com; echo "${a/banana\/match/oranges\/apples}"
[15:00:18] <shbot> earendel: banana/peach/store/com
[15:00:32] <rendar> emanuele6, bash concepts doesn't enter in my head
[15:00:36] <earendel> hm. i see. how to escape theslash?
[15:01:14] <earendel> i know replace was sth with a slash.
[15:01:25] <rendar> consider that you can't do that, earendel
[15:01:42] <rendar> you're hard-coding oranges apples on that ${ .. }
[15:01:46] <earendel> shall i? ok. done :)
[15:01:56] <earendel> ah
[15:02:06] <earendel> i think you can use vars inside that?
[15:02:13] <rendar> you must use only $match, $a, $new_match
[15:02:16] <rendar> and produce $b
[15:02:20] <earendel> or is that no good too?
[15:02:26] <rendar> dunno
[15:02:30] <rendar> i hate bash!
[15:02:32] <emanuele6> # b="oranges/apples/store/com" ; declare -p b
[15:02:33] <shbot> emanuele6: declare -- b="oranges/apples/store/com"
[15:02:34] <emanuele6> done
[15:02:47] <earendel> well i couldn't do it without vars even. because of the slashes.
[15:02:56] <earendel> haha.
[15:03:00] <rendar> lol
[15:03:08] * earendel swats emanuele6 -----##
[15:03:53] <rendar> it's unbelievable how in bash the most basic things are almost impossible, or near impossible
[15:04:08] <earendel> lol
[15:04:11] *** Joins: capn (~capn@user/capn)
[15:04:32] <emanuele6> it sounds trivial to me.
[15:04:42] <rendar> emanuele6, show your solution then
[15:04:44] <earendel> to you.
[15:04:55] <earendel> right. call!
[15:05:27] <emanuele6> rendar: how can anything be easy to you if you say that in bash's [[ ]] && does not have precedence over || when it does..
[15:05:39] <rendar> huh?
[15:05:45] <rendar> move on, dude
[15:06:10] <rendar> that thing was like 10 minutes ago, in 10 minutes Jeff Bezos earns $5.6B
[15:06:20] *** Joins: MentalExcuse (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com)
[15:06:24] <earendel> emanuele6:  && has precedence over || ?
[15:06:55] <earendel>  i don't see the equvalence to [[ ]] &&  .. and || what does that mean?
[15:07:08] <emanuele6> # if [[ 1 || '' && '' ]]; then echo true; else echo false; fi
[15:07:09] <shbot> emanuele6: true
[15:07:15] <emanuele6> # if [[ ( 1 || '' ) && '' ]]; then echo true; else echo false; fi
[15:07:16] <shbot> emanuele6: false
[15:07:50] <rendar> emanuele6, thanks to me you know that ( ) thing now
[15:07:52] <rendar> see?
[15:08:01] <earendel> you i dont understand that gimmicks.
[15:08:08] <earendel> " && "
[15:08:11] <earendel> the fuck is this.
[15:08:23] <rendar> earendel, '' is empty string, so its false
[15:08:23] <emanuele6> rendar: no, i already knew it..
[15:08:25] <earendel> 1 || ""
[15:08:26] <earendel> omg
[15:08:33] <rendar> emanuele6, just kidding :)
[15:08:34] <earendel> aha.
[15:08:34] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:08:46] <earendel> ok.
[15:08:47] <rendar> earendel, lol, yes.. basically that's true || false
[15:09:04] <rendar> earendel, WAIT! you used "" instead of ''
[15:09:12] <rendar> you'll burn in hell
[15:10:32] <earendel> # a=1;b=0;c=0; if ((a && b || c)); then echo TRUE; else echo FALSE; fi
[15:10:33] <shbot> earendel: FALSE
[15:10:39] <earendel> # a=1;b=0;c=1; if ((a && b || c)); then echo TRUE; else echo FALSE; fi
[15:10:40] <shbot> earendel: TRUE
[15:11:03] <earendel> that would be a start.
[15:11:17] <rendar> can we move on to more serious stuff?
[15:11:37] <earendel> # a=1;b=0;c=1; if ((a && (b || c))); then echo TRUE; else echo FALSE; fi
[15:11:38] <shbot> earendel: TRUE
[15:11:46] <emanuele6> rendar: i have no intention to help you on such trivial stuff that has been explained to you at least 5 times..
[15:11:54] <earendel> # a=0;b=0;c=9; if ((a && (b || c))); then echo TRUE; else echo FALSE; fi
[15:11:55] <shbot> earendel: FALSE
[15:11:57] <earendel> ok.
[15:12:04] <earendel> lets move on.
[15:12:06] <rendar> emanuele6, but i can't remember bash cumbersome syntax
[15:12:08] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de)
[15:12:12] <rendar> really, i can't
[15:12:25] <rendar> ${myvar/*.. ?
[15:12:28] <rendar> dunno
[15:12:29] <emanuele6> rendar: hire a bash programmer
[15:13:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:13:02] *** Quits: MenschZwoNull_ (~MenschZwo@p200300c857114700be586f64421856f9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:13:11] *** Joins: MentalEx- (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com)
[15:13:23] *** Quits: MentalExcuse (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[15:13:30] *** MentalEx- is now known as MentalExcuse
[15:13:37] <rendar> but i can't hire a programmer for only very basic questions
[15:13:43] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.3)
[15:14:01] <rendar> i can pay your time, if you want
[15:14:07] <earendel> hire a bash & css programmer.
[15:14:33] <earendel> and watch them becoming the single head of knowledge
[15:14:40] <rendar> lol
[15:14:43] <earendel> in an instant.:P
[15:15:09] <rendar> your company will do AI in bash & css
[15:26:38] *** Quits: jkwnki (~jkwnki@p2e579fe8.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:33:39] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:36:24] *** Joins: cooper999 (~cooper999@89.254.164.96)
[15:39:26] *** Quits: cooper999 (~cooper999@89.254.164.96) (Client Quit)
[15:41:38] <bud> https://www.youtube.com/watch?v=mLQEYWwU74A
[15:42:00] <bud> oops correct window
[15:46:25] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[15:50:50] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[15:51:28] *** Joins: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de)
[15:51:41] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:59:32] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:59:40] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[16:00:02] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[16:00:21] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[16:00:25] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:00:44] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[16:03:41] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[16:05:04] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[16:05:33] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Client Quit)
[16:06:43] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[16:12:47] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 252 seconds)
[16:14:23] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Quit: https://github.com/wuseman)
[16:17:20] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[16:17:42] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[16:18:52] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[16:20:35] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:26:56] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: WeeChat 3.3)
[16:27:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[16:28:12] *** Joins: palwd (~walid@5.107.177.159)
[16:30:37] *** Quits: palwd (~walid@5.107.177.159) (Quit: leaving)
[16:31:02] *** Quits: Dotz0cat (~Dotz0cat@h139.192.186.173.dynamic.ip.windstream.net) (Ping timeout: 260 seconds)
[16:31:26] *** Joins: palwd (~walid@5.107.177.159)
[16:32:39] *** Joins: mongy (~mongy@user/mongy)
[16:34:55] *** Joins: Dotz0cat (~Dotz0cat@h10.234.186.173.dynamic.ip.windstream.net)
[16:35:52] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[16:36:59] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[16:37:11] *** Joins: igemnace (~ian@user/igemnace)
[16:38:17] *** Joins: DaNeenjah (~jake@adsl-74-230-7-13.hsv.bellsouth.net)
[16:39:04] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[16:39:58] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[16:40:50] *** Joins: mat001 (~mat001@c-69-181-153-135.hsd1.ca.comcast.net)
[16:47:01] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[16:47:59] <earendel> confutatis, maladictis! flamis acribus adictis!
[16:50:46] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:55:15] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[16:56:26] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[16:57:04] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[17:01:05] *** Quits: palwd (~walid@5.107.177.159) (Quit: leaving)
[17:06:29] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (Read error: Connection reset by peer)
[17:06:39] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu)
[17:07:40] *** Joins: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[17:08:14] *** Quits: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au) (Killed (NickServ (GHOST command used by kurahaupo_!~kurahaupo@203-194-51-46.static.tpgi.com.au)))
[17:08:28] *** kurahaupo_ is now known as kurahaupo
[17:09:02] *** Joins: gschanuel211 (~gschanuel@user/gschanuel)
[17:12:34] *** Quits: gschanuel21 (~gschanuel@user/gschanuel) (Ping timeout: 260 seconds)
[17:12:34] *** gschanuel211 is now known as gschanuel21
[17:17:12] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (Quit: WeeChat 3.0)
[17:20:08] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[17:22:20] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[17:22:20] *** Joins: wuseman (~wuseman@user/wuseman)
[17:24:46] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:26:27] *** Parts: wheresalice[m] (~wheresali@2001:470:69fc:105::1:33b1) ()
[17:29:18] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:32:21] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[17:32:35] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[17:33:01] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[17:33:13] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[17:34:36] *** Quits: Dotz0cat (~Dotz0cat@h10.234.186.173.dynamic.ip.windstream.net) (Ping timeout: 268 seconds)
[17:42:03] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:42:26] *** Joins: Nact (~l@host-85-27-123-35.dynamic.voo.be)
[17:44:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:45:31] *** Quits: jrofd (~crombie@185.192.69.217) (Ping timeout: 265 seconds)
[17:46:46] <hejux> howdy
[17:47:45] <gr33n7007h> o/
[17:48:47] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[17:52:11] <gr33n7007h> does brace expansion happen before parameter expansion?
[17:53:03] <earendel> !be
[17:53:04] <greybot> Brace and sequence expansion: {a,b,c}1 and {a..c}1 expand to a1 b1 c1, {a..c}{1..3} expands to a1 a2 a3 b1 b2 b3 c1 c2 c3. http://wiki.bash-hackers.org/syntax/expansion/brace http://mywiki.wooledge.org/BraceExpansion
[17:53:19] <han-solo> yes
[17:53:47] <han-solo> # a=1 b=10; echo {$a..$b}
[17:53:47] <shbot> han-solo: {1..10}
[17:53:56] <earendel> oh nice. carthesian product.
[17:54:49] <gr33n7007h> thanks earendel and han-solo :)
[17:55:02] <earendel> can u also say {1..20} but make it two digits? like 01..20?
[17:55:26] <gr33n7007h> earendel: yeah, im tring to get the carthesian product of two arrays.
[17:55:45] <earendel> oh.
[17:56:35] <earendel> i have a bad feeling you won't be able to use be with arrays. tell me me you can
[17:56:52] <han-solo> # printf '<%02d>' {1..20}
[17:56:53] <shbot> han-solo: <01><02><03><04><05><06><07><08><09><10><11><12><13><14><15><16><17><18><19><20>
[17:57:08] <earendel> hm. thanks han.
[17:57:17] <tgq> {01..20}
[17:57:52] <han-solo> hrm, that works too
[17:58:01] <han-solo> # echo {01..20}
[17:58:02] <shbot> han-solo: 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20
[17:58:03] <earendel> oh. oo
[17:58:13] <earendel> must be xmas bash day.
[17:58:42] <emanuele6> # arr1=(1 2 3) arr2=(a b c) result=(); for i in "${arr2[@]}"; do result+=( "${arr1[@]/#/$i}" ); done; declare -p result
[17:58:43] <shbot> emanuele6: declare -a result=([0]="a1" [1]="a2" [2]="a3" [3]="b1" [4]="b2" [5]="b3" [6]="c1" [7]="c2" [8]="c3")
[17:58:47] <earendel> unstable witness:)
[17:59:25] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[17:59:31] <gr33n7007h> emanuele6: awesome!
[17:59:35] <emanuele6> or % instead of #
[17:59:40] <emanuele6> # arr1=(1 2 3) arr2=(a b c) result=(); for i in "${arr2[@]}"; do result+=( "${arr1[@]/%/$i}" ); done; declare -p result
[17:59:41] <shbot> emanuele6: declare -a result=([0]="1a" [1]="2a" [2]="3a" [3]="1b" [4]="2b" [5]="3b" [6]="1c" [7]="2c" [8]="3c")
[17:59:42] <earendel> but no expansion, right? no
[17:59:52] <earendel> how is that awesome:/
[17:59:53] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[18:00:03] <gr33n7007h> just what i needed.
[18:00:21] <emanuele6> earendel: carthesian product of two arrays...
[18:00:30] <earendel> emanuele6: yep.
[18:00:55] *** Joins: dig (~dig@149.167.138.143)
[18:01:27] <tgq> how does that work??
[18:01:45] <emanuele6> (cartesian is spelled without the h, guys)
[18:02:00] <earendel> thanks emanuele6. i just learned about be's. they are nice! of course you can't expand arrays combined with bes and such. but. there is still javascript/ titties and beer.
[18:02:10] <tgq> for each element from arr2, which is a b c you add array 1 with hash substituted for $i??
[18:02:13] <earendel> <3
[18:02:18] <tgq> i dont understand how does it work
[18:02:30] *** Joins: seninha (~seninha@user/seninha)
[18:02:49] <emanuele6> tgq: % matches the end of the element, # matches the start of the element
[18:03:15] <tgq> oooh i didnt know that
[18:03:40] <tgq> it is different than ${foo#prefix}?
[18:03:49] <tgq> # ## % %% are different things?
[18:03:50] <shbot> tgq: no output
[18:04:36] <earendel> tgp combine each elem of one set/array with another
[18:05:00] <earendel> to get all combinations (quasi)
[18:05:20] <earendel> there is also zip.
[18:05:24] *** Quits: dig (~dig@149.167.138.143) (Quit: dig)
[18:05:28] <earendel> can we have a zip?
[18:05:30] <gr33n7007h> # IFS=, x=(a b c); y=(1 2 3); eval echo {"${x[*]}"}{"${y[*]}"}
[18:05:31] <shbot> gr33n7007h: a1 a2 a3 b1 b2 b3 c1 c2 c3
[18:05:37] <gr33n7007h> how does this work?
[18:06:01] <earendel> ui.
[18:06:17] <earendel> excellent.
[18:06:24] <earendel> digga.
[18:06:28] <emanuele6> gr33n7007h: is intentionally quoted like that to be misleading?
[18:06:48] <gr33n7007h> emanuele6: i don't even know how it works myself.
[18:06:57] <emanuele6> # IFS=, x=(a b c) y=(1 2 3); eval echo "{${x[*]}}{${y[*]}}"
[18:06:58] <shbot> emanuele6: a1 a2 a3 b1 b2 b3 c1 c2 c3
[18:07:19] <tgq> the * expansions expands seperating elemens with IFS
[18:07:22] <earendel> guess it works exactly like that. the question is. why.
[18:07:24] <emanuele6> it works by eval-ing `echo {a,b,c}{1,2,3}'
[18:07:42] <tgq> it constructs the brace expansion that bash understands and then evals it
[18:07:42] <gr33n7007h> emanuele6: ah, now i get it. thanks :)
[18:07:42] <emanuele6> that expands to: echo a1 a2 a3 b1 b2 b3 c1 c2 c3
[18:07:45] <earendel> and combination of both is not what .. ahh
[18:07:51] <emanuele6> it is terribly stupid
[18:07:52] <earendel> that block does the  trick?
[18:08:00] <earendel> thats sophisticated.
[18:08:04] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[18:08:16] <earendel> emanuele6: i protest!
[18:08:35] <earendel> but let me digest it.. tomorrow.
[18:08:47] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[18:09:11] <earendel> short conclusion. it's be's!
[18:09:29] <earendel> i must apologize at bash. o/
[18:09:33] <earendel> bash good.
[18:09:50] <earendel> no need for css.
[18:10:01] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[18:10:05] <earendel> take my money.
[18:10:25] <michigan> Yo earendel you seen that movie Frozen? ol
[18:10:36] <earendel> not yet?
[18:10:37] <michigan> * lol
[18:10:47] <earendel> xd
[18:10:54] <michigan> Me neither lol
[18:11:05] <michigan> But I know that main chick is from a place called Earendel
[18:11:17] <earendel> cool.
[18:11:24] <earendel> i like chicks.
[18:11:33] <michigan> Originally https://en.wikipedia.org/wiki/Arendal
[18:11:50] <michigan> yup!
[18:12:56] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:13:14] *** Quits: bud (~bud@user/bud) (Ping timeout: 260 seconds)
[18:13:33] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:15:09] <earendel> beautiful name!
[18:16:49] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:18:42] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[18:19:14] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:20:12] <michigan> Yup
[18:20:39] <michigan> Disney's Frozen "Let It Go" Sequence Performed by Idina Menzel - https://www.youtube.com/watch?v=moSFlvxnbgk
[18:21:57] <michigan> Or the modernized version: Martine Lunde | Fuckboy | TV 2 - https://www.youtube.com/watch?v=H5zHmNc7UgY
[18:23:41] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[18:25:09] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 268 seconds)
[18:28:18] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:28:24] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[18:32:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:32:46] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:33:06] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:33:07] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[18:33:07] *** Joins: wuseman (~wuseman@user/wuseman)
[18:33:07] *** Quits: wuseman (~wuseman@user/wuseman) (Excess Flood)
[18:33:49] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:33:50] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[18:35:14] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:35:15] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[18:35:30] <earendel>    https://en.wikipedia.org/wiki/Aurvandill ..  Eala Earendel, engla beorhtast, ofer middangeard monnum sended .. second  line: frozen toe? :o
[18:36:04] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:36:04] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[18:36:12] <earendel> lulz. synchonicity. that shit gets selperpetuating
[18:36:26] <michigan> I know one of the girls in that video though lol
[18:36:31] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:36:32] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[18:36:32] *** Joins: wuseman (~wuseman@user/wuseman)
[18:36:32] *** Quits: wuseman (~wuseman@user/wuseman) (Excess Flood)
[18:36:53] <michigan> Oh yeah, nice
[18:37:07] <earendel> michigan. i have only gprs now :/ but i promise i will watch the video <3
[18:37:13] <earendel> hihi
[18:38:31] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:38:31] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[18:39:07] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:39:07] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[18:39:38] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:39:38] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[18:39:38] *** Joins: wuseman (~wuseman@user/wuseman)
[18:39:38] *** Quits: wuseman (~wuseman@user/wuseman) (Excess Flood)
[18:40:33] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:41:15] <earendel> who's that brunette friend of the icy princess?
[18:42:21] <earendel> how is the wheather in michigan
[18:43:32] <michigan> no idea lol
[18:43:40] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 268 seconds)
[18:44:19] <michigan> im not gonna watch frozen until i have a real family
[18:44:36] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Client Quit)
[18:44:37] <michigan> and everything else in life is safe and sound
[18:45:06] <michigan> the weather in michigan is alright, thanks for asking
[18:45:39] <michigan> you got the great lakes, you know
[18:45:42] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[18:46:13] *** Joins: Betal (~Betal@user/betal)
[18:46:32] <michigan> large enough to influence the weather in the entire region! :O
[18:46:53] <michigan> but i've never been there, i live a stonesthrow away from arendal 👍
[18:52:45] *** Joins: jrofd (~crombie@185.198.243.246)
[18:53:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:55:31] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[18:55:47] *** Joins: AsenMx (~AsenMx@user/asenmx)
[18:58:35] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:58:44] <earendel> : Old Norse form of the name was probably Arnardalr. The first element is the genitive case of ǫrn which means "eagle" and the last element is dalr which means "valley" or "dale", thus meaning the "eagle valley" :   :3
[18:59:01] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 240 seconds)
[18:59:34] <earendel> ear - sea, wave .. aurr - gold
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:22] <earendel> auza - shiny, liquid shiny ..
[19:02:18] *** Joins: polve (~polve@twcitalia/polve)
[19:09:42] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:10:17] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[19:13:16] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[19:13:29] *** Joins: RandomGuy21 (~RandomGuy@202.131.157.38)
[19:13:54] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[19:14:24] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:14:39] *** Quits: skered (~dereks@user/skered) (Ping timeout: 252 seconds)
[19:15:16] *** Joins: libc (~weechat@user/tessio)
[19:20:23] *** Joins: kdc (~kdc@196.211.197.159)
[19:21:43] <greatgatsby> Hi.  I have a docker env file, which uses FOO=bar syntax.  I'm wondering what the easiest way to source these into my bash environment variables would be?
[19:24:04] <greatgatsby> I thought maybe a symlink in ~/.config/environment.d/foo.conf, but that doesn't seem to work, I'm probably misunderstanding what that directory is for
[19:25:18] <greatgatsby> I think it's systemd only
[19:29:17] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[19:30:06] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[19:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:32:20] <michigan> earendel: Yes sir, a lot of English words are originally Norwegian
[19:32:53] <geirha> while IFS== read -r var value ; do case $var in *[![:alnum:]_]*) continue ;; esac ; export "$var=$value" ; done < foo.env
[19:32:55] <michigan> Like "land" the name England itself
[19:33:23] <michigan> Offtopic, I digress
[19:34:13] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[19:34:16] <greatgatsby> geirha, thanks, appreciated
[19:35:28] <olspookishmagus> all your base are belong to us
[19:36:04] <olspookishmagus> I've very much obliged to all of you who have helped me all those years, once again THANK YOU
[19:36:59] *** Quits: zaden (~maddx@73.92.207.228) (Quit: WeeChat 3.4-rc1)
[19:37:53] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[19:38:59] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:39:10] *** Quits: jrofd (~crombie@185.198.243.246) (Ping timeout: 268 seconds)
[19:39:13] <DPA> Is there a good way to find all functions named do_* in a bash script?
[19:39:27] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[19:39:48] *** Joins: Maxattax97 (~max@199.8.13.227)
[19:39:55] *** Joins: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de)
[19:40:37] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:40:59] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:41:15] *** Quits: TomyLobo (~TomyLobo@p200300e80f0f270028cf74be77922ac0.dip0.t-ipconnect.de) (Quit: Leaving)
[19:42:03] *** Joins: ano (~ano@user/ano)
[19:42:28] <geirha> compgen -A function do_
[19:42:48] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:43:07] <DPA> Thanks
[19:47:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[19:52:28] *** Joins: jrofd (~crombie@185.192.69.54)
[19:55:59] *** Joins: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se)
[19:58:42] *** Quits: jrofd (~crombie@185.192.69.54) (Ping timeout: 260 seconds)
[20:01:58] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[20:03:14] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Quit: https://github.com/wuseman)
[20:03:47] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[20:04:05] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[20:08:00] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:09:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[20:09:47] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: WeeChat 3.3)
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:10:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.3)
[20:10:57] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Quit: Leaving)
[20:11:13] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[20:11:37] *** Joins: mei (~mei@user/mei)
[20:13:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:13:42] *** Joins: jrofd (~crombie@185.198.243.246)
[20:14:03] *** Joins: A|an (~Alan@173.216.51.200)
[20:14:34] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 260 seconds)
[20:15:43] *** Quits: RandomGuy21 (~RandomGuy@202.131.157.38) (Quit: Quit)
[20:16:26] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[20:19:07] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[20:19:34] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[20:22:08] *** Joins: sazawal (~sazawal@122.161.85.155)
[20:25:42] *** Quits: bedroller (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:25:54] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[20:28:37] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[20:31:17] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 252 seconds)
[20:32:41] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:36:55] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:38:00] *** Joins: fling (~fling@user/fling)
[20:38:49] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[20:39:26] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[20:43:25] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:43:38] <Grems> Where can I find the rules or guidelines for the order of functions in a POSIX shell script?
[20:45:09] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Ping timeout: 268 seconds)
[20:45:44] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:48:34] *** Joins: jenhsun (uid342237@id-342237.hampstead.irccloud.com)
[20:48:37] <geirha> not sure what you mean by order of functions, but you're probably after https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18
[20:49:26] *** Quits: jenhsun (uid342237@id-342237.hampstead.irccloud.com) (Client Quit)
[20:49:53] *** Quits: tgq (~tgq@2001:41d0:302:2000::2bca) (Quit: WeeChat 2.8)
[20:50:30] *** Joins: Killdran (~Killdran@164.163.214.58)
[20:50:31] <Grems> geirha: Their order in a file. Whether there are rules/guidelines/conventions for whether function_a comes before function_b
[20:51:37] <geirha> the only thing that matters is that the function is defined by the time you try to run it. Apart from that, the order doesn't matter
[20:51:51] *** Quits: Killdran (~Killdran@164.163.214.58) (Quit: Client closed)
[20:52:05] *** Joins: Killdran (~Killdran@164.163.214.58)
[20:52:22] <Grems> Good to know. What about conventions or guidelines to make it more readable to other people?
[20:52:22] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[20:52:53] *** Quits: Killdran (~Killdran@164.163.214.58) (Client Quit)
[20:55:00] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[20:58:16] *** Joins: ||arifaX (~Commodore@p4fc722af.dip0.t-ipconnect.de)
[20:58:16] *** Quits: ||arifaX (~Commodore@p4fc722af.dip0.t-ipconnect.de) (Changing host)
[20:58:16] *** Joins: ||arifaX (~Commodore@user/arifax/x-9857073)
[21:04:43] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[21:05:07] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:07:16] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[21:08:54] *** Joins: ChmEarl (~chmearl@user/chmearl)
[21:09:54] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:11:02] *** Quits: jrofd (~crombie@185.198.243.246) (Ping timeout: 260 seconds)
[21:14:18] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[21:18:49] <DPA> Is it better to use $PWD or $(pwd)?
[21:21:22] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:22:20] *** Joins: skered (~dereks@user/skered)
[21:23:09] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:25:56] *** Quits: earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[21:26:48] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:27:00] *** Joins: earnestly (~earnest@user/earnestly)
[21:27:23] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 252 seconds)
[21:27:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[21:28:35] *** Joins: jrofd (~crombie@185.198.243.233)
[21:28:46] *** Joins: pra8189 (~pra81@61.2.59.35)
[21:28:49] <pra8189> hello to all
[21:29:32] <pra8189> how to debug a simple command in bash shell ? to see what variables are being used while using command . like to debug the command
[21:29:48] <earnestly> echo
[21:30:46] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[21:30:56] *** Joins: gdd (~gdd@129.199.146.230)
[21:31:01] <pra8189> echo does not help here sir
[21:31:05] <pra8189> earnestly
[21:31:06] <Grems> Why not?
[21:31:12] <pra8189> earendel i mean to say it should show which variable fails like step by step debugging in foreground
[21:31:32] <Grems> Are you looking for something like gdb, but for bash?
[21:31:48] <pra8189> nope
[21:32:22] <DPA> "env" prints out all variables
[21:32:50] <earnestly> pra8189: It varies and is specific so you'll have to provide an example
[21:33:24] <earnestly> Iow, you use the normal tooling that the shell gives you access to, to introspect itself
[21:36:30] <pra8189> Grems
[21:36:36] <pra8189> Grems sir i want to see what the command does in the foreground . what it does in the background
[21:36:40] <pra8189> Grems   sqlplus username/password@tnsentry
[21:36:44] <pra8189> Grems like this command fails but don't know where it fails
[21:37:02] <Grems> Have you looked at what options/flags `sqlplus` has?
[21:38:21] <pra8189> Grems i am asking in general sir not about "sqlplus" its just an example
[21:38:36] <Grems> I think your question is too general
[21:40:04] <pra8189> Grems have you understood my issue ?
[21:40:11] <pra8189> Grems i need to see what the command does . i need to see it in foreground.
[21:40:14] <pra8189> Grems yes it is general sir
[21:40:19] <pra8189> Grems suppose i have a ling "*.sh" script which has a long code
[21:40:27] <Grems> OK. Make the question more specific
[21:40:47] <pra8189> Grems but that script fails . i dont know where the script fails. how to see and diagnose the issue ?
[21:41:02] <pra8189> While executing, it fetches values from some other file to use in it's variables.
[21:41:18] <Grems> Why not show us an example script? :)
[21:41:22] *** Quits: Maxattax97 (~max@199.8.13.227) (Ping timeout: 260 seconds)
[21:41:34] <pra8189> Grems ok let me  see sir
[21:41:53] <DPA> If you pipe data to "sqlplus", you can use something like "something | tee file | sqlplus" or "something | tee /dev/stderr | sqlplus" to see what input it gets.
[21:41:53] <DPA> And to see which commands are executed at any point, "set -x" is very useful.
[21:42:23] <pra8189> After executing, I just see that it executed and gets me back on the command prompt
[21:43:03] <emanuele6> !step
[21:43:03] <greybot> step through your code, look into bashdb or put this where you want to begin stepping: debug_prompt () { read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?" _ ;}; trap 'debug_prompt "$_"' DEBUG
[21:43:42] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[21:47:43] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[21:47:53] *** Quits: pra8189 (~pra81@61.2.59.35) (Ping timeout: 256 seconds)
[21:48:15] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:48:51] <emanuele6> DPA: if you want to print out bash variable for debugging, you should use `export' if you want environment/exported variables, `declare -p' for global variables, `local' for variables local to the current function or sourced file.
[21:48:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:49:34] <emanuele6> `env' just spawns a process that runs the env(1) external command that has the behaviour of printing the variable in its environment by default
[21:50:10] <emanuele6> # a () { local a=2 b=3; : some stuff; local ;}
[21:50:11] <shbot> emanuele6: no output
[21:50:15] <emanuele6> oops
[21:50:17] <emanuele6> # a () { local a=2 b=3; : some stuff; local ;}; a
[21:50:18] <shbot> emanuele6: declare -- a="2"
[21:50:18] <shbot> emanuele6: declare -- b="3"
[21:50:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[21:50:26] <emanuele6> # c=3 b=4; a () { local a=2 b=3; : some stuff; local ;}; a
[21:50:27] <shbot> emanuele6: declare -- a="2"
[21:50:27] <shbot> emanuele6: declare -- b="3"
[21:50:46] <emanuele6> # c=3 b=4; a () { local a=2 b=3; : some stuff; local ;}; declare -p > >(paste -s); wait
[21:50:52] <shbot> emanuele6: declare -- BASH="/bin/bash"     declare -r BASHOPTS="checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquote:force_fignore:globasciiranges:globstar:hostcomplete:interactive_comments:login_shell:progcomp:promptvars:sourcepath"       declare -i BASHPID      declare -A BASH_ALIASES=()      declare -a BASH_ARGC=([0]="0")  declare -a BASH_ARGV=() declare -- BASH_ARGV0   declare -A BASH_\
[21:50:52] <shbot> emanuele6: CMDS=() declare -- BASH_COMMAND declare -a BASH_LINENO=()       declare -x BASH_LOADABLES_PATH="/lib/bash"      declare -a BASH_SOURCE=()       declare -- BASH_SUBSHELL        declare -ar BASH_VERSINFO=([0]="5" [1]="1" [2]="8" [3]="1" [4]="release" [5]="x86_64-pc-linux-gnu")     declare -- BASH_VERSION="5.1.8(1)-release"      declare -- COLUMNS="80" declare -- COMP_WORDBREAKS      declare -a DIRST\
[21:50:52] <shbot> emanuele6: etc... ( http://ix.io/3HSR )
[21:51:08] *** Quits: jrofd (~crombie@185.198.243.233) (Ping timeout: 268 seconds)
[21:51:11] <emanuele6> err, that paste -s was useless, the output was too long anyway
[21:51:36] <emanuele6> # export > >(head -n 3)
[21:51:37] <shbot> emanuele6: declare -x BASH_LOADABLES_PATH="/lib/bash"
[21:51:37] <shbot> emanuele6: declare -x HOME="/root"
[21:51:37] <shbot> emanuele6: declare -x LOGNAME="root"
[21:51:47] *** Joins: namkeleser (~namkelese@101.179.128.103)
[21:51:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:51:57] *** Joins: pra81 (~pra81@61.2.59.35)
[21:52:08] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:52:25] <emanuele6> there is also `declare -f' to dump out all the function definitions and `declare' that is `declare -f' and `declare -p' combined
[21:52:35] *** Joins: taupiqueur_ (~taupiqueu@63.145.204.77.rev.sfr.net)
[21:53:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[21:54:36] <emanuele6> spawning an env(1) process to do such things is not accurate since it will include stuff like _=/usr/bin/env that bash doesn't really have
[21:54:53] <emanuele6> and only works for environment variables inherited by that env process
[21:55:08] <emanuele6> not for regular variables
[21:56:04] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.3)
[21:56:50] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:56:57] *** Quits: pra81 (~pra81@61.2.59.35) (Ping timeout: 256 seconds)
[22:00:52] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[22:01:50] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[22:01:58] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:03:37] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[22:04:02] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[22:04:30] *** Joins: jrofd (~crombie@185.198.243.233)
[22:08:18] *** Joins: bud (~bud@user/bud)
[22:14:19] *** Quits: bud (~bud@user/bud) (Ping timeout: 252 seconds)
[22:15:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:18:00] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 256 seconds)
[22:18:15] *** Joins: tb303brn (~weechat@textualites.club)
[22:21:20] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[22:21:42] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Read error: Connection reset by peer)
[22:22:01] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:23:01] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[22:24:21] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:24:40] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[22:26:07] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[22:26:50] <ztrawhcse> emanuele6: and if you want to debug the environment of the executed command, that's exactly what you want, $_ and all :p
[22:28:09] *** Quits: strudl (~strudl@user/strudl) (Quit: got milk?)
[22:29:07] *** Joins: strudl (~strudl@user/strudl)
[22:29:32] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[22:30:05] *** Joins: bud (~bud@user/bud)
[22:33:02] <emanuele6> $_ is not what env(1) displays as _= ...
[22:34:10] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[22:35:08] <libc> emanuele6: how you doing
[22:37:46] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:38:45] *** Joins: n4dir (~user@i5E86C530.versanet.de)
[22:45:11] *** Quits: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:48:20] *** Joins: e3d3 (~user@2a02-a450-1c17-1-ca60-ff-fe49-35cf.fixed6.kpn.net)
[22:49:18] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:49:29] *** Parts: e3d3 (~user@2a02-a450-1c17-1-ca60-ff-fe49-35cf.fixed6.kpn.net) ()
[22:49:59] * libc slaps emanuele6 in the face
[22:50:17] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[22:50:55] <rendar> a="a/b/c/store/com" match="a/b/c" how can i substitute $match from $a with another string? e.g. $new_match ? any help?
[22:51:34] *** Quits: ghostboarder (~quassel@user/ghostboarder) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:52:11] *** Quits: jrofd (~crombie@185.198.243.233) (Ping timeout: 268 seconds)
[22:52:39] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[22:52:47] <libc> !doesntwork > emanuele6
[22:52:47] <greybot> emanuele6: Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[22:54:23] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:55:56] <libc> rendar: you want to effectively rename assign one variable to another ?
[22:56:01] <libc> s/rename//
[22:56:13] <rendar> the *content* of a variable
[22:56:21] *** Joins: dtux (~dtux@2601:646:8f00:3f2:53eb:355a:694a:c73)
[22:56:23] <rendar> a="a/b/c/store/com" match="a/b/c" i have those 2 vars
[22:56:30] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[22:56:42] <rendar> i want to substitute the *content* of $match into $a with something else, e.g. $new_match
[22:59:30] <libc> i don't understand why not ${a/string/replacement/}
[22:59:49] <libc> a=${a/string/replacement}
[23:00:52] <libc> note that string can be "$match"
[23:01:05] <rendar> libc, i can't do a=${a/${match}/${new_match}}
[23:01:07] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[23:01:11] <rendar> oh
[23:01:29] <rendar> libc, do you mean i can do a=${a/"${match}"/"${new_match}"} ?
[23:01:47] <libc> just "$"
[23:01:50] <libc> no need "${}"
[23:01:57] <libc> it confuses the shell
[23:02:09] <libc> "$match"
[23:02:11] <libc> like that
[23:02:15] <rendar> i see
[23:02:34] <rendar> what about i want to replace $match with $new_match only in the first part of the $a string?
[23:02:37] <rendar> and not everywhere
[23:02:50] <libc> exactly that
[23:02:55] <libc> this is only the first
[23:03:01] <rendar> oh, good
[23:03:17] *** Quits: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se) (Quit: leaving)
[23:04:08] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:04:49] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[23:04:49] *** Joins: wuseman (~wuseman@user/wuseman)
[23:05:38] *** Quits: wuseman (~wuseman@user/wuseman) (Client Quit)
[23:06:10] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[23:07:54] *** Joins: rgrinberg (~textual@187.223.209.106)
[23:11:12] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:15:58] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:16:12] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:16:44] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:17:08] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[23:17:09] *** Joins: wuseman (~wuseman@user/wuseman)
[23:18:48] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:19:04] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: https://github.com/wuseman)
[23:19:30] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:20:15] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[23:21:44] *** Joins: zeden (~zeden@user/zeden)
[23:22:08] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:22:08] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[23:23:21] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[23:23:23] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:23:23] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Excess Flood)
[23:24:27] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:24:28] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[23:24:28] *** Joins: wuseman (~wuseman@user/wuseman)
[23:24:28] *** Quits: wuseman (~wuseman@user/wuseman) (Excess Flood)
[23:25:13] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:25:13] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[23:25:13] *** Joins: wuseman (~wuseman@user/wuseman)
[23:25:49] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:25:56] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:27:28] *** Quits: wuseman (~wuseman@user/wuseman) (Client Quit)
[23:27:57] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:33:55] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[23:33:56] *** Joins: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com)
[23:33:57] *** Quits: wuseman (~wuseman@81-231-55-224-no68.tbcn.telia.com) (Changing host)
[23:33:57] *** Joins: wuseman (~wuseman@user/wuseman)
[23:34:21] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:36:48] <earendel> # re='[0-9]{1,3}'; ip="($re)\.($re)\.($re)\.($re)"; ip=192.168.0.1; if [[ $re = $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:36:49] <shbot> earendel: invalid IP
[23:37:05] <earendel> # re='[0-9]{1,3}'; ip="($re)\.($re)\.($re)\.($re)"; ip=192.168.0.1; if [[ $re ~= $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:37:06] <shbot> earendel: bash: conditional binary operator expected
[23:37:06] <shbot> earendel: bash: syntax error near `~='
[23:37:24] <earendel> how do i do the regexp match again?
[23:39:59] <earendel> # re='[0-9]{1,3}'; ipregex="($re)\.($re)\.($re)\.($re)"; ip=192.168.0.1; if [[ $ipregex = $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:40:00] <shbot> earendel: invalid IP
[23:40:32] <earendel> # re='[0-9]{1,3}'; ipregex="($re)\.($re)\.($re)\.($re)"; ip=192.168.0.1; if [[ $ipregex *= $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:40:33] <shbot> earendel: bash: conditional binary operator expected
[23:40:33] <shbot> earendel: bash: syntax error near `*='
[23:40:51] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:41:10] <earendel> # re='[0-9]{1,3}'; ipregex="($re)\.($re)\.($re)\.($re)"; ip=192; if [[ $re = $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:41:11] <shbot> earendel: invalid IP
[23:41:21] <earendel> # re='[0-9]{1,3}'; ipregex="($re)\.($re)\.($re)\.($re)"; ip=192; if [[ $re = $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:41:22] <shbot> earendel: invalid IP
[23:41:45] <earendel> !regex
[23:41:46] <greybot> Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
[23:42:27] <twkm> validating numeric ip addresses is foolish.
[23:43:07] <earendel> # re='[0-9]{1,3}'; ipregex="($re)\.($re)\.($re)\.($re)"; ip=192.168.0.1; if [[ $ipregex =~ $ip ]]; then echo valid IPv4; else echo invalid IP; fi
[23:43:09] <shbot> earendel: invalid IP
[23:43:15] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:43:46] <twkm> 999.999.999.999 isn't valid.  127.1 is.
[23:43:56] <earendel> i tried it to make it more inviting for you to reach out
[23:45:23] <earendel> yeah. but why is the above regexp failing on that string in $ip
[23:45:58] *** nfir is now known as nf
[23:46:01] <twkm> 0 is valid too, but due to (web url) abuses most will require at least one dot.
[23:46:24] <earendel> i expect it to match on 4 1-3 digited and . separated string
[23:46:32] <twkm> and it fails to handle ipv6 addresses.
[23:46:33] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:46:49] <earendel> ip is not tcp ip address.
[23:47:12] <earendel> its the article number in the quelle katalog.
[23:47:14] <twkm> what does tcp have to do with it?
[23:47:29] <earendel> nothing.
[23:47:29] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[23:47:34] <twkm> ahh, yet called "ipregex".  okay.
[23:47:40] *** Quits: taupiqueur_ (~taupiqueu@63.145.204.77.rev.sfr.net) (Ping timeout: 268 seconds)
[23:48:27] <earendel> is also foolish to use regexp to check on foo and bar?
[23:48:43] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[23:49:50] <earendel> you are correct. the regexp is not a valid ipv4 pattern. yes. my bad.
[23:50:41] *** Joins: eternal_peril (~eternal_p@2607:fea8:3cdf:d1d4:a550:a0c0:1950:b6c2)
[23:52:28] <earendel> # foo='[0-9]{1,3}'; bar="($re)\.($re)\.($re)\.($re)"; a=192; b=192.168.0.1; if [[ $a =~ $foo ]]; then echo 1 else echo 0; fi
[23:52:29] <shbot> earendel: 1 else echo 0
[23:52:40] <earendel> # foo='[0-9]{1,3}'; bar="($re)\.($re)\.($re)\.($re)"; a=192; b=192.168.0.1; if [[ $a =~ $foo ]]; then echo 1; else echo 0; fi
[23:52:41] <shbot> earendel: 1
[23:52:44] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[23:52:55] <earendel> # foo='[0-9]{1,3}'; bar="($re)\.($re)\.($re)\.($re)"; a=192; b=192.168.0.1; if [[ $bar =~ $b ]]; then echo 1; else echo 0; fi
[23:52:56] <shbot> earendel: 0
[23:52:57] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[23:53:20] <earendel> # foo='[0-9]{1,3}'; bar="($re)\.($re)\.($re)\.($re)"; a=192; b=192.168.0.1; if [[ $foo =~ "sc" ]]; then echo 1; else echo 0; fi
[23:53:21] <shbot> earendel: 0
[23:54:15] <earendel> is because i can't compose a regex from parts in the way bar does?
[23:55:32] <twkm> regex goes on the right -- "sc" isn't a regex anyway due to the quoting.
[23:56:04] <earendel> ah. ok. thank you.
[23:56:20] <earendel> # foo='[0-9]{1,3}'; bar="($re)\.($re)\.($re)\.($re)"; a=192; b=192.168.0.1; if [[ $b =~ $bar ]]; then echo 1; else echo 0; fi
[23:56:21] <shbot> earendel: 0
[23:56:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:57:29] <earendel> is bar also no regex anymore, sire.
[23:57:41] <twkm> fyi, 127.1 is short for 127.0.0.1, just as 2606:4700:4700::1001 is short for 2606:4700:4700:0000:0000:0000:0000:1001.  some feel ipv4 doesn't "need" a short form, others don't agree including the rfc author.
[23:57:46] <emanuele6> bar is ()\.()\.()\.() ...
[23:57:52] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Read error: Connection reset by peer)
[23:57:57] <earendel> oh
[23:58:01] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[23:58:02] <earendel> lol. thanks emanuele6
[23:58:11] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[23:58:12] *** Joins: Dotz0cat (~Dotz0cat@h236.192.186.173.dynamic.ip.windstream.net)
[23:58:16] <twkm> due to using $re instead of $foo.
[23:58:33] <earendel> you're on time. i alost cracked spacetime vacuum
[23:58:37] *** Joins: odoood (~odoood@c-73-184-6-164.hsd1.ga.comcast.net)
[23:58:58] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[23:59:36] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[23:59:42] *** Quits: unop (~unop@195.91.110.106) (Remote host closed the connection)
[23:59:58] *** Joins: unop (~unop@195.91.110.106)
