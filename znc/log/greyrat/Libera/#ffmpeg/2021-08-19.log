[00:13:00] <c_14> you'd probably have to pre-process the images to have the same colorspace
[00:17:02] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[00:22:37] <BtbN> that's also not an error
[00:27:15] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:42:45] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[00:51:17] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:12:19] *** Quits: taliho (~taliho@c-73-149-98-40.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[01:17:08] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[01:21:58] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Quit: WeeChat 3.2)
[01:47:26] *** Joins: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com)
[02:09:51] <aphysically> okay my script has officially reached stupid territory
[02:10:06] <aphysically> I subclassed string to represent ffmpeg filters https://dpaste.com/3JTG7C9KS
[02:12:36] <JEEB> I actually like the libavfilter API better where you explicitly build the filter chain instead of just passing a filter chain string :D
[02:12:50] <JEEB> but not really that possible with CLI
[02:13:32] <c_14> why subclass string and not just use __repr__ or __str__ though?
[02:14:11] <aphysically> I considered it, but it avoids me putting str() a ton of places if I subclass string
[02:15:45] <c_14> Wouldn't that only be one str() call at the final spot where you actually build the command and pass it to subprocess?
[02:16:09] *** Joins: cosimone (~user@93-47-229-186.ip115.fastwebnet.it)
[02:17:43] <aphysically> yeah, there might be other reasons to do that too
[02:18:44] <c_14> and doesn't python implicitly call __repr__ or __str__ on anything that has it if it expects a string somewhere?
[02:19:04] <aphysically> no
[02:19:18] <aphysically> in particular for concatenation of the form 'hi' + object
[02:19:28] <aphysically> even if it has __repr__ it will throw an error
[02:19:56] <aphysically> just doing print(object) does it though
[02:20:52] <c_14> I stand corrected, was thinking of just print(object) then
[02:27:04] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Excess Flood)
[02:28:24] <JEEB> I have gotten used to "{} {}".format(thing, another) syntax from python2.7 days
[02:28:33] <JEEB> but 3.6+ has f-strings
[02:28:37] <JEEB> <3
[02:29:06] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[02:38:33] *** Quits: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:58:19] *** Quits: der_richter (~Akemi@p4fde4b89.dip0.t-ipconnect.de) (Quit: Leaving.)
[03:02:25] *** Parts: phisch (~phisch@ip1f10fb97.dynamic.kabel-deutschland.de) (The Lounge - https://thelounge.chat)
[03:05:48] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[03:15:02] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:18:16] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:25:47] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:26:11] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:26:32] *** Joins: mickey (~user@user/mickey)
[03:34:13] *** Quits: cosimone (~user@93-47-229-186.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[03:38:50] *** Joins: mickey5 (~user@user/mickey)
[03:40:06] *** Joins: hpkn_ (~hpkn@gateway/tor-sasl/hpkn)
[03:40:15] *** Quits: hpkn (~hpkn@gateway/tor-sasl/hpkn) (Ping timeout: 244 seconds)
[03:40:16] *** hpkn_ is now known as hpkn
[03:40:46] *** Quits: mickey (~user@user/mickey) (Ping timeout: 244 seconds)
[03:40:47] *** mickey5 is now known as mickey
[03:40:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:51:47] <aphysically> c_14: yeah it's not that bad honestly https://dpaste.com/DFWL4LRGF
[03:52:15] <aphysically> and it still achieves my main goal of not having the script become nigh-unmaintainable garbage like the bash version :D
[03:53:09] *** Joins: mfwitten_ (~unknown@gateway/tor-sasl/mfwitten)
[03:53:53] <aphysically> oops forgot to include the cmd part https://dpaste.com/9MF6PZ56Q
[03:55:45] *** Quits: mfwitten (~unknown@gateway/tor-sasl/mfwitten) (Ping timeout: 244 seconds)
[03:58:33] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (Ping timeout: 268 seconds)
[03:58:36] <aphysically> I still don't know what I'm going to do about more complex filter graphs
[03:59:49] <aphysically> I think I can get away with pretending they don't exist since I always have one input and what output, because I can pretend any subfilter chain that brings in extra streams and does stuff with them is one big "filter" surrounded by null filters, then I can combine it with comma splitting just like anything else
[04:00:01] <aphysically> and trim the null filters with a replace if I want
[04:06:50] *** Joins: Jonno_FTW (~come@api.carswap.me)
[04:30:52] *** Joins: taliho (~taliho@c-73-149-98-40.hsd1.ma.comcast.net)
[04:34:19] *** Quits: CruxOfTheB (~CruxOfThe@bras-base-sttrpq3809w-grc-39-70-52-52-206.dsl.bell.ca) (Ping timeout: 268 seconds)
[04:48:50] *** Joins: mickey7 (~user@user/mickey)
[04:50:31] *** Quits: mickey (~user@user/mickey) (Ping timeout: 244 seconds)
[04:50:32] *** mickey7 is now known as mickey
[05:03:51] *** Quits: pong (~beaver@user/pong) (Remote host closed the connection)
[05:04:38] *** Joins: pong (~beaver@user/pong)
[05:07:31] *** Parts: ladders (~user@c-73-37-50-150.hsd1.or.comcast.net) ()
[05:12:13] *** Parts: mfwitten_ (~unknown@gateway/tor-sasl/mfwitten) ()
[05:17:15] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[05:30:32] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:38] *** Joins: vlm (~vlm@user/vlm)
[05:44:23] *** Quits: pntaylor (~quassel@2405:6e00:102f:af00::8) (Quit: No Ping reply in 180 seconds.)
[05:45:37] *** Joins: pntaylor (~quassel@101.114.57.202)
[05:56:35] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[05:57:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:26:40] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[06:35:30] *** Joins: ChanServ (ChanServ@services.libera.chat)
[06:35:30] *** iridium.libera.chat sets mode: +o ChanServ
[06:47:23] *** Quits: nillyhan (~00000000@user/nillyhan) (Quit: Ping timeout (120 seconds))
[06:47:53] *** Joins: nillyhan (~00000000@user/nillyhan)
[06:50:13] *** Joins: meinside_ (uid24933@id-24933.brockwell.irccloud.com)
[06:59:34] *** Joins: jos2 (~jos3@dyndsl-091-096-045-153.ewe-ip-backbone.de)
[07:02:57] *** Quits: jos1 (~jos3@dyndsl-091-248-048-220.ewe-ip-backbone.de) (Ping timeout: 245 seconds)
[07:14:27] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Ping timeout: 258 seconds)
[07:30:02] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:32:04] *** Joins: haasn (~nand@haasn.dev)
[07:35:43] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[07:37:57] *** Joins: Fohsap (~Muimi@60.20.223.71)
[08:00:25] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[08:01:03] *** Joins: darkapex (~darkapex@user/darkapex)
[08:10:52] *** Joins: gnoo (~gnoo@user/gnoo)
[08:30:50] *** Quits: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com) (Quit: Leaving)
[08:43:28] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Ping timeout: 268 seconds)
[08:44:26] *** Joins: zmt01 (~zmt00@user/zmt00)
[08:48:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 272 seconds)
[08:51:18] *** Quits: babyface (~babyface@user/babyface) (Ping timeout: 272 seconds)
[08:51:28] *** Joins: babyface_ (~babyface@user/babyface)
[08:58:04] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:04:02] *** Joins: BhaveshSGupta (~BhaveshSG@2405:205:c907:26e9:40ef:5cfb:a013:3496)
[09:17:56] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:18:19] *** Joins: mickey (~user@user/mickey)
[09:20:45] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[09:21:09] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[09:22:07] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:22:40] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[09:25:00] *** Joins: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se)
[09:36:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 258 seconds)
[09:43:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:05:56] *** Joins: der_richter (~Akemi@p4fde4f48.dip0.t-ipconnect.de)
[10:10:42] *** Joins: palasso (~palasso@user/palasso)
[10:10:46] *** Quits: taliho (~taliho@c-73-149-98-40.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[10:12:06] *** Joins: demon__ (~user@192.121.82.29)
[10:15:58] *** Quits: anotheruser (~user@41.46.235.248) (Ping timeout: 268 seconds)
[10:22:32] *** Quits: BhaveshSGupta (~BhaveshSG@2405:205:c907:26e9:40ef:5cfb:a013:3496) (Remote host closed the connection)
[10:23:12] *** Joins: BhaveshSGupta (~BhaveshSG@2405:205:c907:26e9:40ef:5cfb:a013:3496)
[10:33:51] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[10:35:11] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[10:36:57] *** Quits: Sylirana (~Sylirana@user/sylirana) (Quit: Leaving)
[10:39:25] *** Joins: darkapex_ (~darkapex@user/darkapex)
[10:39:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:40:27] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 245 seconds)
[10:43:08] *** Joins: gnoo_ (~gnoo@user/gnoo)
[10:45:28] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[10:48:45] *** Joins: anotheruser (~user@41.46.235.248)
[10:52:40] *** Quits: demon__ (~user@192.121.82.29) (Ping timeout: 240 seconds)
[10:59:00] *** gnoo_ is now known as superspider
[10:59:06] *** superspider is now known as gnoo
[11:08:35] *** Quits: der_richter (~Akemi@p4fde4f48.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[11:11:32] *** Joins: der_richter (~Akemi@p4fde4f48.dip0.t-ipconnect.de)
[11:31:43] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[11:38:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[11:41:21] *** Joins: Vonter (~Vonter@user/vonter)
[11:46:42] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[11:47:05] *** Joins: snapple (~apple@2603-800c-4340-d591-0000-0000-0000-1632.res6.spectrum.com)
[12:06:20] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[12:11:40] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[12:11:42] *** Quits: der_richter (~Akemi@p4fde4f48.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[12:11:50] *** Joins: der_richter (~Akemi@p4fde4f48.dip0.t-ipconnect.de)
[12:21:41] *** Joins: Vonter (~Vonter@user/vonter)
[12:27:34] *** Joins: gnoo_ (~gnoo@user/gnoo)
[12:27:46] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[12:35:53] *** Quits: bencc1 (~bencc1@2a00:a040:197:3af:10f8:86d0:ac3f:b5be) (Quit: Leaving)
[12:50:32] *** anotheruser is now known as auser
[12:50:35] *** auser is now known as auser0
[12:51:17] *** Joins: mago (~mago@87.125.55.123)
[13:02:26] *** gnoo_ is now known as gnoo
[13:02:31] *** Quits: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b) (Quit: Bridge terminating on SIGTERM)
[13:02:32] *** Quits: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce) (Quit: Bridge terminating on SIGTERM)
[13:02:32] *** Quits: kepstin (~kepstin@user/kepstin) (Quit: Bridge terminating on SIGTERM)
[13:02:32] *** Quits: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a) (Quit: Bridge terminating on SIGTERM)
[13:02:33] *** Quits: luc65r (~luc65r@2001:470:69fc:105::ee1) (Quit: Bridge terminating on SIGTERM)
[13:02:33] *** Quits: EmanuelLoos[m] (~emanuel-l@2001:470:69fc:105::6260) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: gnurou (~gnurou@2001:470:69fc:105::c23b) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: memst[m] (~memst@2001:470:69fc:105::716) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: msmith12[m] (~msmith12m@2001:470:69fc:105::bdfc) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Quit: Bridge terminating on SIGTERM)
[13:02:35] *** Quits: dittid[m] (~dittidmat@2001:470:69fc:105::789d) (Quit: Bridge terminating on SIGTERM)
[13:02:35] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Quit: Bridge terminating on SIGTERM)
[13:02:35] *** Quits: sixecho (~sixecho@2001:470:69fc:105::32) (Quit: Bridge terminating on SIGTERM)
[13:02:44] *** Quits: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2) (Quit: Bridge terminating on SIGTERM)
[13:05:07] *** Joins: kepstin (~kepstin@user/kepstin)
[13:07:21] *** Joins: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a)
[13:07:21] *** Joins: sixecho (~sixecho@2001:470:69fc:105::32)
[13:07:21] *** Joins: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2)
[13:07:21] *** Joins: msmith12[m] (~msmith12m@2001:470:69fc:105::bdfc)
[13:07:21] *** Joins: EmanuelLoos[m] (~emanuel-l@2001:470:69fc:105::6260)
[13:07:21] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[13:07:31] *** Joins: luc65r (~luc65r@2001:470:69fc:105::ee1)
[13:07:31] *** Joins: memst[m] (~memst@2001:470:69fc:105::716)
[13:07:33] *** Joins: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce)
[13:07:33] *** Joins: dittid[m] (~dittidmat@2001:470:69fc:105::789d)
[13:07:33] *** Joins: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd)
[13:07:34] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[13:07:35] *** Joins: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b)
[13:07:35] *** Joins: gnurou (~gnurou@2001:470:69fc:105::c23b)
[13:11:50] *** Quits: tinytoast (~squeek@user/tinystoat) (Remote host closed the connection)
[13:12:00] *** Joins: tinystoat (~squeek@user/tinystoat)
[13:25:28] *** Quits: mago (~mago@87.125.55.123) (Quit: Client closed)
[13:26:38] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:53:45] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 248 seconds)
[14:04:02] *** Joins: fling (~fling@user/fling)
[14:05:56] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:10:23] *** benbrown_ is now known as benbrown
[14:46:52] *** Quits: fling (~fling@user/fling) (Ping timeout: 252 seconds)
[14:47:16] *** Joins: fling (~fling@user/fling)
[14:51:16] *** Quits: pntaylor (~quassel@101.114.57.202) (Ping timeout: 252 seconds)
[14:52:25] *** Quits: fling (~fling@user/fling) (Read error: Connection reset by peer)
[14:53:38] *** Joins: pntaylor (~quassel@101.112.161.212)
[14:56:37] *** Joins: Blacker47 (~Blacker47@user/blacker47)
[14:57:43] *** Joins: fling (~fling@user/fling)
[15:19:40] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:25:27] *** Joins: mickey (~user@user/mickey)
[15:26:17] *** Quits: haihao (~haihao@192.55.46.52) (Ping timeout: 245 seconds)
[15:26:33] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:28:11] *** Joins: haihao_ (~haihao@192.102.204.51)
[15:38:13] *** Joins: LanDi (~landi@187.19.139.199)
[15:58:32] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[15:58:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[16:00:40] *** Quits: nillyhan (~00000000@user/nillyhan) (Ping timeout: 240 seconds)
[16:02:50] *** Joins: nillyhan (~00000000@user/nillyhan)
[16:09:12] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 258 seconds)
[16:31:29] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:42:53] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:53:43] *** Quits: BhaveshSGupta (~BhaveshSG@2405:205:c907:26e9:40ef:5cfb:a013:3496) (Quit: Quit)
[16:54:45] *** Joins: jos1 (~jos3@dyndsl-091-096-035-163.ewe-ip-backbone.de)
[16:57:25] *** Quits: jos2 (~jos3@dyndsl-091-096-045-153.ewe-ip-backbone.de) (Ping timeout: 268 seconds)
[17:19:04] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:29:30] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:38:45] *** Quits: hpkn (~hpkn@gateway/tor-sasl/hpkn) (Remote host closed the connection)
[17:39:43] *** Joins: hpkn (~hpkn@gateway/tor-sasl/hpkn)
[17:45:52] *** Joins: taliho (~taliho@c-73-149-98-40.hsd1.ma.comcast.net)
[17:50:04] *** Joins: s0beragee (~s0berage@135-23-213-77.cpe.pppoe.ca)
[17:52:10] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[18:07:45] *** Joins: darkapex (~darkapex@user/darkapex)
[18:08:43] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[18:09:12] *** Joins: darkapex_ (~darkapex@user/darkapex)
[18:12:34] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[18:17:08] *** Joins: adrianibanez (~adrianiba@178.197.224.166)
[18:31:08] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[18:36:58] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:37:05] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:39:39] *** Joins: mickey (~user@user/mickey)
[18:43:20] <adrianibanez> Hi. Is anyone aware of comprehensive documentation on timestamps? I'm not an expert on ffmpeg. I'm also aware that it might not be realistic on a non RT OS and tight "integration" but my goal would be to continuously record audio on multiple devices in a "as synchonized as possible" manner. preferably I could rely on a stable external clock like
[18:43:20] <adrianibanez> GPS / PTP. is there a concept like "absolute timestamping" that could be applied to eg. flac streams? I found the option use_wallclock_as_timestamps that sounds somehow relevant but couldn't find any detailed information about it.
[18:47:52] *** Joins: aGNU (~guest5223@p200300d51f151000410754df067b072f.dip0.t-ipconnect.de)
[18:49:21] *** Quits: adrianibanez (~adrianiba@178.197.224.166) (Quit: Connection closed)
[18:50:16] <aGNU> Hey there, I'm having difficulties building a program on Fedora that utilisies the "libavcodec-dev" package. As far as I know I have it installed through the "ffmpeg-devel" package but when I make the program it can't find the libraries.
[19:06:08] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:12:13] *** Joins: adrianibanez (~adrianiba@46-22-24-246-dynamic-cpe.cust.swissbackbone.net)
[19:15:33] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[19:16:02] <aGNU> I was able to fix this: the required header files were in /usr/include/ffmpeg/* so I just moved all the lib-directories one up the directory-hierarchy and now the compiler can find everything
[19:17:43] *** Quits: aGNU (~guest5223@p200300d51f151000410754df067b072f.dip0.t-ipconnect.de) (Quit: Client closed)
[19:23:22] <sfan5> instead of fixing their includes they moved the files inside /usr/include? lol
[19:36:27] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[19:43:21] *** Quits: LanDi (~landi@187.19.139.199) (Remote host closed the connection)
[19:47:32] *** Joins: mago (~mago@87.125.55.123)
[19:48:24] *** Joins: arcatech (~arcatech@user/arcatech)
[19:52:55] *** Parts: mago (~mago@87.125.55.123) ()
[19:58:09] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[20:00:10] *** Quits: s0beragee (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[20:01:58] *** Joins: darkapex (~darkapex@user/darkapex)
[20:02:10] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[20:08:38] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:13:28] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[20:13:44] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[20:24:14] *** Joins: darkapex_ (~darkapex@user/darkapex)
[20:26:28] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[20:32:24] *** Quits: darkapex_ (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[20:32:52] *** Joins: darkapex (~darkapex@user/darkapex)
[20:40:24] *** Joins: XdaddyZX_ (uid456733@id-456733.tinside.irccloud.com)
[20:44:29] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[20:45:09] *** Joins: darkapex (~darkapex@user/darkapex)
[20:50:11] *** Quits: segundo (~coinbird@62.159.119.178) (Ping timeout: 258 seconds)
[20:52:28] *** Joins: segundo (~coinbird@62.159.119.178)
[20:52:40] *** Joins: iconoclasthero (~quassel@pool-74-103-170-240.phlapa.fios.verizon.net)
[20:54:34] *** Joins: rsx (~dummy@ppp-188-174-130-209.dynamic.mnet-online.de)
[20:59:09] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:00:27] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:00:32] *** Quits: treefrob (~treefrob@p57a9648f.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[21:01:55] *** Joins: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de)
[21:05:23] *** Joins: Dennis_ (~Dennis@53-170-177-143.ftth.glasoperator.nl)
[21:05:40] <Dennis_> evening
[21:09:21] <Dennis_> I've got a fairly simple class that does some decoding and encoding of frames, and is pretty close to the examples given. However if I run frames through it it double frees memory for the used frames. I av_free() the data from the inputframe and then call av_frame_free() which blows up. Code https://github.com/defl/videoprocessor/blob/main/src/VideoProcessor-Lib/video_frame_formatter/CFFMpegDecoderVideoFrameFormatter.cpp any ideas?
[21:16:05] <Dennis_> to be even more exact, decoding and all work just fine, the problem is at destruction time
[21:16:16] *** Quits: haihao_ (~haihao@192.102.204.51) (Ping timeout: 252 seconds)
[21:16:39] *** Joins: haihao_ (~haihao@192.55.46.52)
[21:24:04] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[21:24:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[21:25:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[21:36:42] <Dennis_> inputFrame = av_frame_alloc();
[21:38:06] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[21:41:38] *** Joins: darkapex (~darkapex@user/darkapex)
[21:43:08] *** Joins: LurkingBOB (~MightyBOB@76.99.21.35)
[21:43:13] <Dennis_> the only odd thing I'm doing I think is av_image_alloc(mInputFrame->data, <snip>) where that mInputFrame was created by av_frame_alloc() but then again, doesn't look that odd
[21:44:26] *** Quits: MightyBOB (~MightyBOB@76.99.21.35) (Ping timeout: 252 seconds)
[21:44:42] <DeHackEd> Dennis_: freeing the frame will free the frame's image payload anyway. you don't have to free that data. even if you do, you need to NULL out the data so there isn't a dangling pointer
[21:45:15] <DeHackEd> this is why a number of the av_RESOURCE_free() functions except AVResource** double-pointers. they NULL out your variable for you to help prevent mistakes like this.
[21:45:56] <DeHackEd> oh you are doing that
[21:46:37] <DeHackEd> still, especially frames which use refcounted strategies really shouldn't be doing this
[21:47:06] <DeHackEd> look into av_frame_unref() instead maybe?
[21:49:01] <Dennis_> AH! I got it, I was allocating an image buffer for the input frame but if I remove that it still works and there is no crash anymore
[21:49:24] <Dennis_> now the question is, does that make sense.. hmm...
[21:50:44] <DeHackEd> ah. yeah don't do that. honestly the image resolution could change at any moment (in theory) so you don't want that anyway.
[21:51:05] <Dennis_> yeah looking at the codec code it calls ff_get_buffer() so that'll be used
[21:51:13] <Dennis_> thanks for thinking along DeHacked!
[21:51:58] <JEEB> ff_ functions are not public
[21:53:01] <JEEB> anyways, it's not clear what you want to do
[21:53:01] <DeHackEd> yeah, only use functions whose names start with "av*"
[21:53:14] <DeHackEd> functions with no prefix are also off limits
[21:53:20] <JEEB> there is a function to allocate a frame of certain size and pix_fmt
[21:53:22] <JEEB> if you need to
[21:53:33] <Dennis_> no, but they're called inside the codec, that is what allocates the buffer in the frame and hence I didn't need to alloc an image into the frame
[21:54:17] <Dennis_> (line 125 in my link isn't needed)
[21:54:20] <JEEB> indeed, you just send and receive and then after you're done with it, unref
[21:54:39] <DeHackEd> usually you don't. my own program uses sws_scale as well and here my program calls av_frame_get_buffer()
[21:54:39] <JEEB> also swscale is receiving an AVFrame based API now
[21:54:48] <JEEB> if not already in master
[21:54:48] <DeHackEd> oh?
[21:54:55] <JEEB> elenril is doing Deity's work
[21:55:20] <DeHackEd> my git master is aug 5th doesn't have it
[21:55:35] <JEEB> yea it's quite possible it's still on the ML
[21:55:38] <JEEB> and not applied yet
[21:56:13] <DeHackEd> that seems most likely right now
[21:56:50] <Dennis_> I just pulled from master and it's not in there
[21:56:57] <JEEB> yes I know :P
[21:57:04] <JEEB> I've had the time to git grep AVFrame -- libswscale
[21:57:24] <DeHackEd> I've had time to `git pull`
[21:57:33] <JEEB> https://patchwork.ffmpeg.org/project/ffmpeg/list/?series=4502
[21:57:38] <JEEB> this patch set
[21:58:04] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[21:58:40] <clime> hey, does ffplay replayes audio according to sample rate?
[21:58:43] <JEEB> sws_scale_frame etc
[21:59:05] <JEEB> also elenril added multithreading to swscale
[21:59:15] <JEEB> so you can scale in slices
[21:59:26] <DeHackEd> int sws_scale_frame(struct SwsContext *c, AVFrame *dst, const AVFrame *src);   # Pretty...
[21:59:40] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[21:59:43] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[22:00:02] <JEEB> DeHackEd: it has been long overdue considering everything else had an AVFrame based API
[22:00:05] <JEEB> lol
[22:00:12] <JEEB> but I also 100% understand why people don't want to touch swscale
[22:00:29] <JEEB> it's a complicated piece from almost 20 years ago that needs love since things have changed since it was made
[22:00:48] <JEEB> clime: I think it just throws the audio to SDL2, you'll have to see the details in code
[22:01:06] <JEEB> I would guess it would check what SDL2 says it can push out
[22:01:11] <JEEB> and it resamples to that
[22:02:48] <clime> i'll check SDL2 api then. You would probably give some samples to it, but you should also specify which time these samples cover...?
[22:02:57] *** Quits: adrianibanez (~adrianiba@46-22-24-246-dynamic-cpe.cust.swissbackbone.net) (Quit: Connection closed)
[22:03:21] <JEEB> clime: I recommend checking the ffplay code, it is after all an SDL2 client
[22:03:21] <clime> i don't think resampling should be necessary in some basic use-cases
[22:03:27] <clime> ok
[22:03:51] *** Parts: nemo (nemo@hedgewars/dev/nemo) ()
[22:05:25] <clime> JEEB: btw. do you know if ffmpeg/ffplay has some notion of "origin clock/time"? Because the audio should actually be played byt the remote time not by local. To be more clear what remote time is: for mpeg TS the remote time is transmitted by PCRs
[22:07:21] <JEEB> PCR as far as I know is just another program clock reference, I think it is mostly useful for discontinuity handling and possibly something regarding analog conversion.
[22:07:33] <JEEB> but no, it is not exposed since PTS is enough for A/V synchronization
[22:08:14] <clime> ye...but my coleague find out that not always
[22:09:36] <clime> i mean it is as long as pts are consistent with sample rate, i.e. that for 48Khz, 48000 samples correspond to 1s in the remote time
[22:09:47] <JEEB> I'd be surprised, other than with broken streams. or with streams that should be "shown on arrival"
[22:10:06] <clime> at least Safari player seems to require this, i don't know if ffplay
[22:10:41] <clime> like it plays the audio samples by sample rate no actually looking what number of samples is required between two video frames
[22:11:05] <JEEB> so what actual case you have that PTS is not working?
[22:11:10] <clime> i don't know if this common in players or uncommon - maybe it is about the stream should be "shown on arrival" as you say
[22:11:12] <JEEB> otherwise I cannot say much
[22:11:25] <JEEB> shown on arrival is usually emergecy streams etc
[22:11:28] <JEEB> those don't have PTS at all
[22:11:36] <clime> ah i see
[22:12:00] <JEEB> US style closed captions are another, and I guess DVB teletext can be
[22:12:51] *** Joins: darkapex (~darkapex@user/darkapex)
[22:13:28] <JEEB> anyways, without seeing anything you are talking about, it's really hard to tell if whatever your possible problem is, is actually a problem (and where it is)
[22:15:51] <clime> well, so safari player PTS are working as long as pts<sample x+48000> - pts<sample x> is 1 second in PCR time (for 48Khz sample rate), otherwise there are glitches. In this case it's 60fps video stream and actually also these 60 video frames don't spread 1s in PCR time. I think safari is playing video frames according to PTS bt for auudio, it just anchors the first sample to the video frame to be
[22:15:53] <clime> shown and then continues to play the rest of the samples by audio rate (not looking what number of samples is actually needed to be played between this and the next video frame). Audio and video drifts as a result and Safari reanchors/resyncs them occassionally resulting in a glitch.
[22:16:14] *** Quits: Fohsap (~Muimi@60.20.223.71) (Remote host closed the connection)
[22:16:38] <JEEB> if the PTS are actually properly continuous in the stream, this should not be a problem with libavformat
[22:17:04] <JEEB> like, if packet X contains PTS Z and then 1024 samples of that (say, AAC)
[22:17:22] <JEEB> and then packet Y's PTS is properly Z+1024
[22:17:24] <clime> ye
[22:17:28] <clime> that should be the case here
[22:17:45] <JEEB> as long as that is correct, libavformat should be OK with that
[22:17:56] <clime> why libavformat though, i would think libavcodec?
[22:18:04] <JEEB> well libavcodec as well
[22:18:06] <clime> or libavcodec only decodes...?
[22:18:08] <JEEB> demux and decode
[22:18:27] <JEEB> and libavformat of course attempts to interleave packets it outputs in a good manne
[22:18:30] <JEEB> *manner
[22:18:39] <JEEB> so that you get as continuous flow between streams as possible
[22:18:42] <clime> i sees, is libavformat used by ffplay?
[22:18:45] <JEEB> yes
[22:18:52] <clime> ok, thank you!
[22:18:54] <JEEB> libavformat and libavcodec for reading input and decode
[22:19:04] <JEEB> but then after that it's 100% up to the API client
[22:19:25] <JEEB> what it does with that data
[22:19:34] <clime> ok
[22:20:20] <clime> (for the safari player it's with HLS - mpeg ts wrapped in HLS, probably it doesn't matter)
[22:21:07] <clime> well, i wonder what the standard is for replay, so i'll check ffplay
[22:21:27] <JEEB> ffplay is jsut a proof of concept player :P
[22:21:33] <JEEB> minimal'ish thing that plays something
[22:21:33] <clime> rofl, ok
[22:30:06] <aphysically> awww I'm gonna need to figure out the escaping for filters again
[22:30:21] <aphysically> at least in python I only need one level of escaping instead of a second level for shell escaping too
[22:30:44] <JEEB> yes, arguments as an array is good
[22:31:03] <aphysically> for real, so much easier
[22:31:21] <aphysically> well, they were an array in bash too but that didn't save me :P
[22:33:09] <aphysically> in bash I just used a combo of printf %q and ffescape, but I'd rather not depend on ffescape so I'll just implement my own version of whatever it is that's required. I know it's in the docs somewhere so I'll find it again when I get to it
[22:34:13] <aphysically> this is my bash function for when I included a path in a filter graph: https://dpaste.com/HEC3D89TD
[22:34:47] <aphysically> I'm pretty sure it's not exactly correct but it worked on everything I tried at least, including some pretty wonky paths
[22:36:07] <aphysically> I should make some special path torture test or something
[22:36:16] *** Joins: Gribbler (~Gribbler@142.187.230.172)
[22:36:31] <aphysically> actually I could use this opportunity to learn about making unit tests and just add them to the whole script (......maybe)
[22:39:10] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[22:40:23] <aphysically> my zscale filter looks so much dumber because it's the only one that doesn't support the :force_original_aspect_ratio=decrease:force_divisible_by=2 that almost every other scale filter supports (almost)
[22:40:32] <Gribbler> Hi there. I'm trying to follow this example: ffmpeg -i input -force_key_frames "expr:gte(t,n_forced*4)" -c:v libx264 -c:a aac -f segment -segment_time 4 -segment_wrap 6 -segment_list list.m3u8 -segment_list_size 6 seg%d.ts
[22:40:32] <Gribbler> And I get an error regarding "input: no such.." I don't fully understand what it's looking for?
[22:41:02] <aphysically> that might be a patch even I could contribute, but I'd have to figure out how to send stuff to the mailing list without angering everybody with HTML formatting
[22:42:41] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[22:45:09] *** Joins: palasso (~palasso@user/palasso)
[22:46:58] *** Joins: rpthms (~rpthms@user/rpthms)
[22:52:53] <aphysically> I should test if scale flags= overrides the global -sws_flags
[22:57:46] *** Quits: rsx (~dummy@ppp-188-174-130-209.dynamic.mnet-online.de) (Quit: rsx)
[23:04:26] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[23:08:28] *** Quits: taliho (~taliho@c-73-149-98-40.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[23:30:26] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[23:30:26] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[23:30:27] *** Quits: Arsen (~arsen@managarm/dev/Arsen) (*.net *.split)
[23:30:27] *** Quits: wcpan (~quassel@2400:8902::f03c:91ff:fee0:f952) (*.net *.split)
[23:30:27] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[23:30:27] *** Quits: ripdog (~quassel@user/ripdog) (*.net *.split)
[23:30:27] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[23:30:27] *** Quits: colona (~colona@grunt.ycc.fr) (*.net *.split)
[23:30:27] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[23:30:27] *** Quits: michaelni (~michael@213-47-68-29.cable.dynamic.surfer.at) (*.net *.split)
[23:30:27] *** Quits: smashgrab (~smashgrab@bare.metal.computer) (*.net *.split)
[23:30:27] *** Quits: fsphil (fsphil@ursa.sanslogic.co.uk) (*.net *.split)
[23:30:27] *** Quits: jarainf (~jarainf@2a01:4f8:191:512c::2) (*.net *.split)
[23:30:27] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[23:30:27] *** Quits: interru (~interru@fs.host.decodem.io) (*.net *.split)
[23:30:27] *** Quits: TheLink (~TheLink@user/thelink) (*.net *.split)
[23:30:27] *** Quits: fatalis (~fatalis@user/fatalis) (*.net *.split)
[23:30:36] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[23:30:37] *** Joins: jarainf (~jarainf@citizien.eu)
[23:30:38] *** Joins: ripdog (~quassel@user/ripdog)
[23:30:40] *** Joins: wcpan (~quassel@2400:8902::f03c:91ff:fee0:f952)
[23:30:49] *** Joins: michaelni (~michael@213-47-68-29.cable.dynamic.surfer.at)
[23:30:52] *** Joins: Arsen (~arsen@managarm/dev/Arsen)
[23:30:58] *** Joins: interru (~interru@fs.host.decodem.io)
[23:31:02] *** Joins: TheLink (~TheLink@user/thelink)
[23:31:06] *** Joins: fsphil (fsphil@ursa.sanslogic.co.uk)
[23:31:09] *** Joins: fatalis (~fatalis@104.128.62.36)
[23:31:21] *** Quits: fatalis (~fatalis@104.128.62.36) (Changing host)
[23:31:21] *** Joins: fatalis (~fatalis@user/fatalis)
[23:31:22] *** Joins: smashgrab (~smashgrab@bare.metal.computer)
[23:31:27] *** Joins: Henry151 (~bishop@user/henry151)
[23:32:00] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Remote host closed the connection)
[23:32:37] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[23:32:42] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[23:32:56] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[23:35:56] *** Joins: colona (~colona@grunt.ycc.fr)
[23:40:29] *** Joins: s1b1 (~s1b1@user/s1b1)
[23:46:35] <anticw_> vnc -> [rtmp | rtsp] ... does anything exist for this right now?  (vs going via render+capture)
[23:50:09] *** Joins: jokoon (~eio@2a01:e0a:542:b20:3da2:ca44:66c6:d0f8)
[23:50:10] <jokoon> hello
[23:50:22] <jokoon> how can I find bugs in a mp4 video files?
[23:50:25] *** Quits: jerome- (~jerome@78.193.84.130) (Quit: -)
[23:50:40] *** Joins: jerome- (~jerome@78.193.84.130)
[23:50:43] <jokoon> I mean things that are not standard, or malformed, or else?
[23:52:25] *** Quits: jerome- (~jerome@78.193.84.130) (Remote host closed the connection)
[23:52:42] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 256 seconds)
[23:54:07] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[23:54:22] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[23:54:29] *** Joins: jerome- (~jerome@78.193.84.130)
[23:54:31] <aphysically> https://ffmpeg.org/ffmpeg-all.html#Notes-on-filtergraph-escaping
[23:54:56] <JEEB> jokoon: have a mp4 box parser like what is in l-smash's boxdumper, and not only parse but attempt to make some decisions based on that (other than the obvious broken structures)
[23:55:24] <jokoon> so ffprobe is not enough?
[23:57:33] <JEEB> it might notice some completely broken structures and alert you about them, but in general it is very liberal regarding whether something is in the right place or if technically whatever it is - is in some specification
[23:57:42] <JEEB> like for example how Sony puts raw PCM audio into MP4
[23:57:54] <JEEB> it uses an identifier `ipcm` which is not registered anywhere :P
[23:58:04] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[23:58:53] <jokoon> mh
[23:59:00] <JEEB> but still, so that FFmpeg can read those Sony files, support has been added
[23:59:17] <JEEB> is it correct MP4? no. (it's not registered in mp4-ra)
