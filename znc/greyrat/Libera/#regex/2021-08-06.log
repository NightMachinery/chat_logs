[00:00:31] *** Joins: nvmd (~nvmd@user/nvmd)
[00:08:15] <OnlineCop> The step count is even more dramatic when your text between colons grows.
[00:12:49] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[00:25:25] *** Quits: re101-bracke-80 (~re101-bra@67-2-193-183.slkc.qwest.net) (Ping timeout: 246 seconds)
[00:41:40] *** Quits: byanka (~byanka@91.244.10.3) (Ping timeout: 272 seconds)
[00:46:42] *** Quits: gajus (sid202456@id-202456.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:46:47] *** Quits: shush_ (sid21719@id-21719.tinside.irccloud.com) (Ping timeout: 252 seconds)
[00:49:44] *** Quits: re101-macaw-68 (~re101-mac@118-232-73-43.dynamic.kbronet.com.tw) (Quit: Client closed)
[00:49:59] *** Joins: re101-macaw-68 (~re101-mac@118-232-73-43.dynamic.kbronet.com.tw)
[01:02:20] *** Joins: gajus (sid202456@tinside.irccloud.com)
[01:13:45] *** Joins: shush_ (sid21719@tinside.irccloud.com)
[01:15:42] *** Joins: lavaball (~Melissa@31.204.155.215)
[01:15:50] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) ()
[01:17:41] *** Quits: re101-macaw-14 (~re101-mac@118-232-73-43.dynamic.kbronet.com.tw) (Quit: Client closed)
[01:17:43] *** Quits: re101-macaw-68 (~re101-mac@118-232-73-43.dynamic.kbronet.com.tw) (Quit: Client closed)
[01:18:47] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[01:29:38] *** Joins: nvmd (~nvmd@user/nvmd)
[01:34:49] *** Joins: [O-O (aaa@user/druid)
[01:41:45] *** Joins: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[02:15:37] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[03:21:22] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 240 seconds)
[03:22:47] *** Joins: re101-gecko-12 (~re101-gec@175.176.8.251)
[03:23:19] <re101-gecko-12> how to clean excel using regex?
[03:33:02] <Enissay> That is one vague question :-)
[03:33:48] <Enissay> As far as I know, excel doesn't support REGEX, unless you are using macros
[03:34:10] <Enissay> Please be specific and provide examples of what you want to clean
[03:34:23] <[O-O> maybe read excel in language like python and use regex in that
[03:37:49] <re101-gecko-12> here is the regex I want to use, I have thousand of cells that need to clean up > https://regex101.com/
[03:38:05] <re101-gecko-12> sorry, this one > /.*(?<=Optional)(?s)(.*$)/g
[03:41:01] <[O-O> what is test string?
[03:44:28] <re101-gecko-12> <p style="margin: 0px 0px 1em; line-height: 1.4;"><span style="color: #000000; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 15px;">10.2" Android 8.1 Mercedes Benz Vito 3 W447 2014 - 2020 built with the latest cutting edge technology nowadays. We proud ourselves as car navigation specialist. With our capability in product
[03:44:28] <re101-gecko-12> manufacture, all of our car navigators are OEM in highly global standard. While listening to our customersu2019 feedback, we tirelessly improve our car navigation technology.</span><strong style="color: #000000; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 15px;"> 10.2" Android 8.1 Mercedes Benz Vito 3 W447 2014 -
[03:44:29] <re101-gecko-12> 2020</strong><span style="color: #000000; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;"><span style="font-size: 15px;"> is currently our killing product with average 5-star reviews.</span></span></p>
[03:44:29] <re101-gecko-12> <p style="color: #000000; margin: 0px 0px 1em; line-height: 1.4; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 15px;">The product specifications of 10.2" Android 8.1 Mercedes Benz Vito 3 W447 2014 - 2020 are as followed:</p>
[03:44:30] <re101-gecko-12> <p style="color: #000000; margin: 0px 0px 1em; line-height: 1.4; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 15px;"><strong>Display Size:</strong> 10.2"<br /><strong>Resolution:</strong> 1280*720<br /><strong>OSD Language:</strong> Russian,Chinese (Traditional),English,Chinese (Simplified)<br /><strong>Special
[03:44:30] *** ChanServ sets mode: +o rebot
[03:44:30] <re101-gecko-12> Features:</strong> FM Transmitter,MP3 Players,Mobile Phone,Radio Tuner,Built-in GPS,Bluetooth,Touch Screen<br /><strong data-mce-fragment="1">Inner Memory:</strong><span data-mce-fragment="1"> 2GB RAM + 32GB ROM (*Free Upgrade via Our Deal)</span><br /><strong>Item Size:</strong> 10.2 inch<br /><strong>Item Weight:</strong> 2kg<br
[03:44:31] <re101-gecko-12> /><strong>Voltage:</strong> 12V<br /><strong>Operating System:</strong> Android 8.1 (API-27)<br /><strong>Special Feature:</strong> Support Wifi Function,Support Steering Wheel Control,Support Can-Bus<br /><strong>CPU: </strong>4 cores 1.3 GHz 32bit Unisoc UIS8141E ARM CortexTM A7 28NM<br /><strong>Screen:</strong> PS + 2.5D<br /><strong
[03:44:31] *** rebot sets mode: +q-o *!*re101-gec@175.176.8.* rebot
[03:44:32] <rebot> 14re101-gecko-12: You've been muted for posting too many lines too quickly. You'll be unmuted in 0730s14.
[03:45:00] *** ChanServ sets mode: +o rebot
[03:45:01] *** rebot sets mode: -qo *!*re101-gec@175.176.8.* rebot
[03:45:01] <re101-gecko-12> <li>4 Amplifier Audio Pre-outs</li>
[03:45:02] <re101-gecko-12> <li>Audio/Video Outputs</li>
[03:45:02] <re101-gecko-12> <li>1 AUX Audio/Video Input</li>
[03:45:03] <re101-gecko-12> <li>Car Rear View Camera Video Input</li>
[03:45:03] <re101-gecko-12> <li>DVR Dash Cam Driver Recorder Connection - Car Dealz HD Recorder Available</li>
[03:45:03] *** ChanServ sets mode: +o rebot
[03:45:04] <re101-gecko-12> </ul>
[03:45:04] <re101-gecko-12> <p style="color: #000000; margin: 0px 0px 1em; line-height: 1.4; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 15px;"><strong>Optional Premium Accessories from Car Dealz</strong></p>
[03:45:04] *** rebot sets mode: +q-o *!*re101-gec@175.176.8.* rebot
[03:45:05] <rebot> 14re101-gecko-12: You've been muted for posting too many lines too quickly. You'll be unmuted in 075m14.
[03:45:43] *** Quits: re101-gecko-12 (~re101-gec@175.176.8.251) (Quit: Client closed)
[03:50:03] *** ChanServ sets mode: +o rebot
[03:50:04] *** rebot sets mode: -qo *!*re101-gec@175.176.8.* rebot
[03:53:45] *** Quits: palasso_ (~palasso@user/palasso) (Read error: Connection reset by peer)
[04:20:01] *** Joins: d1cor (~diego@179.63.242.114)
[04:36:35] *** Joins: unluckyshrubber- (~unluckysh@097-069-164-025.res.spectrum.com)
[04:37:35] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Ping timeout: 250 seconds)
[04:37:36] *** [O-O is now known as [O-O|
[04:40:42] *** Quits: unluckyshrubber- (~unluckysh@097-069-164-025.res.spectrum.com) (Ping timeout: 240 seconds)
[04:40:44] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[04:51:23] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 258 seconds)
[04:52:10] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 240 seconds)
[04:52:44] *** [O-O| is now known as phunny
[04:54:26] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Ping timeout: 256 seconds)
[04:58:09] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[05:01:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:04:48] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[05:05:33] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[05:09:13] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[05:09:56] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[05:17:13] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[05:18:03] *** Joins: P1RATEZ (piratez@user/p1ratez)
[05:21:38] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 256 seconds)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:38] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:13] *** Joins: vlm (~vlm@user/vlm)
[05:38:34] *** Joins: maetthew (~maetthew@188.150.100.85)
[05:38:35] *** Quits: maetthew (~maetthew@188.150.100.85) (Changing host)
[05:38:35] *** Joins: maetthew (~maetthew@user/maetthew)
[05:43:52] *** Quits: rewt (~default@user/rewt) (Remote host closed the connection)
[05:45:52] *** Joins: rewt (~default@user/rewt)
[05:45:52] *** ChanServ sets mode: +v rewt
[05:48:22] *** Quits: army (~aL@user/army) (Quit: Going offline, see ya! (www.adiirc.com))
[05:55:47] *** Quits: rewt (~default@user/rewt) (Remote host closed the connection)
[05:57:30] *** Joins: rewt (~default@user/rewt)
[05:57:30] *** ChanServ sets mode: +v rewt
[06:00:16] *** Quits: rewt (~default@user/rewt) (Killed (NickServ (GHOST command used by rewt__)))
[06:00:32] *** Joins: rewt (~default@user/rewt)
[06:00:33] *** ChanServ sets mode: +v rewt
[06:18:04] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[06:22:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[06:51:21] *** davido is now known as libera-irc
[06:53:29] *** libera-irc is now known as davido
[07:03:16] *** Joins: re101-gibbon-63 (~re101-gib@047-233-046-055.res.spectrum.com)
[07:04:20] <re101-gibbon-63> What am I doing wrong?  Trying to capture KEYS and VALUES but failing
[07:04:23] <re101-gibbon-63> https://regex101.com/r/ZIpXrc/1
[07:04:44] <digitok> failing is probably the wrong part
[07:05:23] <digitok> only one of those values is preceded by 07-\s
[07:06:54] <re101-gibbon-63> Trying to use a lookbehind but not great at it.  Was trying to ignore all that stuff in the beginning, then grab keys and values.
[07:07:35] <re101-gibbon-63> Was trying this: (?<=-\s)
[07:09:11] <digitok> will the keys be limited to a-zA-Z0-9_
[07:10:05] <digitok> (and space)
[07:10:39] <re101-gibbon-63> Most likely, yes.  Seems that they are separated by at least three spaces too
[07:11:34] <digitok> yea
[07:11:54] <digitok> so you could use https://regex101.com/r/ZIpXrc/2 or https://regex101.com/r/ZIpXrc/3
[07:14:58] <re101-gibbon-63> I was overthinking it lol
[07:15:01] <re101-gibbon-63> Very nice
[07:15:07] <digitok> :p
[07:15:09] <re101-gibbon-63> https://regex101.com/r/dGiPFa/1/ works too
[07:15:40] <digitok> yea, you could simplify that to https://regex101.com/r/dGiPFa/2
[07:16:33] <re101-gibbon-63> Nice, I get loopy at night :)
[07:16:43] <digitok> hehe
[07:18:57] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[07:23:34] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[07:28:26] *** Quits: re101-gibbon-63 (~re101-gib@047-233-046-055.res.spectrum.com) (Quit: Client closed)
[08:11:20] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[08:19:49] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[08:24:31] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[08:49:01] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[08:49:53] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[08:52:45] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[08:53:39] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[09:20:41] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[09:25:05] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[09:56:01] *** Quits: OnlineCopy (~onlinecop@user/onlinecopy) (Read error: Connection reset by peer)
[10:08:46] *** Joins: I-M (~id@78.183.104.1)
[10:19:56] *** Joins: OnlineCopy (~onlinecop@user/onlinecopy)
[10:21:30] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[10:25:54] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 240 seconds)
[10:28:45] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:49:04] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[10:51:48] *** Joins: bin101 (~bin101@user/bin101)
[11:22:09] *** Joins: army (~aL@user/army)
[11:22:21] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[11:26:39] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 250 seconds)
[11:34:50] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:36:44] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[11:46:14] *** Quits: I-M (~id@78.183.104.1) (Read error: Connection reset by peer)
[11:50:37] *** Joins: control (~v1@user/control)
[11:54:26] *** Quits: control (~v1@user/control) (Quit: leaving)
[11:55:07] *** Joins: palasso (~palasso@user/palasso)
[11:58:50] *** Joins: control (~v1@user/control)
[12:02:55] *** Quits: control (~v1@user/control) (Quit: leaving)
[12:53:06] *** Joins: re101-caiman-28 (~re101-cai@251.sub-174-206-33.myvzw.com)
[12:53:38] *** Quits: re101-caiman-28 (~re101-cai@251.sub-174-206-33.myvzw.com) (Client Quit)
[12:53:51] *** Joins: re101-caiman-65 (~re101-cai@251.sub-174-206-33.myvzw.com)
[12:55:09] *** re101-caiman-65 is now known as Frixk
[12:55:24] *** Quits: Frixk (~re101-cai@251.sub-174-206-33.myvzw.com) (Client Quit)
[13:11:25] *** Joins: lavaball (felix@31.204.155.215)
[13:24:35] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[13:26:26] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[13:27:58] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:30:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 272 seconds)
[13:31:51] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[13:37:42] *** Quits: Tobbi_ (~Thunderbi@62.214.69.130) (Ping timeout: 258 seconds)
[14:01:26] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[14:03:51] *** Joins: bin101 (~bin101@user/bin101)
[14:19:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[14:25:34] *** Joins: Rahul (~Rahul@43.242.226.33)
[14:25:40] <Rahul> !rehelp
[14:25:40] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[14:25:42] <Rahul> https://regex101.com/r/ellPjy/1
[14:25:50] <Rahul> always get the last date
[14:27:52] <Rahul> and group capture does not work in my case
[14:35:55] <digitok> https://regex101.com/r/ellPjy/2
[14:43:52] <Rahul> unrecognized escape sequence K
[14:45:11] <digitok> which tool again
[14:45:30] <Rahul> Power Automate
[14:45:36] <Rahul> Microsooft
[14:46:02] <Rahul> so basically .Net i guess
[14:47:15] <digitok> https://regex101.com/r/ellPjy/3
[14:48:35] <Rahul> works! 
[14:48:42] <Rahul> Thannk you! :)
[14:48:47] <digitok> yw
[15:05:45] *** Quits: Rahul (~Rahul@43.242.226.33) (Quit: Client closed)
[15:14:50] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[15:19:10] *** Joins: bin101 (~bin101@user/bin101)
[15:27:30] *** Joins: loganlee (~Thunderbi@user/loganlee)
[16:04:57] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[16:19:04] *** Joins: control (~v1@user/control)
[16:23:03] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 250 seconds)
[16:35:11] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[16:37:49] *** Parts: control (~v1@user/control) ()
[16:40:58] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[16:41:41] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[16:44:39] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[16:44:40] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[16:45:35] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[16:49:13] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[16:53:58] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[16:58:19] *** Joins: re101-camel-21 (~re101-cam@laubervilliers-657-1-68-234.w90-63.abo.wanadoo.fr)
[16:58:26] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[17:00:02] <re101-camel-21> I would like a regex allowing me to only use alpha numeric character "-" & "_" and exclude space and the other, I used "/^[A-Za-z0-9_-]*$" but my tests still do not pass
[17:02:58] <Me-me> !rehelp
[17:02:58] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[17:07:21] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[17:08:21] *** Quits: re101-camel-21 (~re101-cam@laubervilliers-657-1-68-234.w90-63.abo.wanadoo.fr) (Quit: Client closed)
[17:10:20] *** Joins: digitok (~death@about/regex/digitok)
[17:10:24] *** Joins: rebot (~death@about/regex/rebot)
[17:10:24] *** ChanServ sets mode: +v rebot
[17:15:14] *** Joins: anahat (~anahat@116.74.221.85)
[17:35:06] *** Joins: d1cor (~diego@179.63.242.114)
[18:02:41] *** Joins: re101-gecko-87 (~re101-gec@pb-desk.mrc.ox.ac.uk)
[18:03:02] <re101-gecko-87> hello - is there a similar site for converting Regex into C# syntax?
[18:03:23] <Me-me> !codegen
[18:03:23] <perlbot> Select code generator on the left side of regex101 to view sample code for your language of choice.
[18:03:30] <Me-me> Is there not a C# option there?
[18:04:08] <re101-gecko-87> code generator is greyed out, I guess it is a member feature
[18:04:41] <Me-me> No, you just need to have a pattern.
[18:05:13] <re101-gecko-87> ahh lovely
[18:05:16] <re101-gecko-87> thanks guys
[18:05:21] <Me-me> Happy to help.
[18:07:37] <digitok> to be clear, that won't do anything to the regex itself
[18:07:52] <Me-me> Well it adds escapes and delimiters as appropriate.
[18:07:57] <Me-me> What is it skipping?
[18:09:03] <digitok> nonexistent syntax
[18:09:15] <Me-me> I mean, sure.
[18:10:11] <digitok> that's what "converting regex" would be to me
[18:10:24] <digitok> for which there is no tool afaik
[18:10:26] <Me-me> I suppose it's a bit ambiguous.
[18:22:47] *** Joins: re101-bombay-13 (~re101-bom@141.117.35.136)
[18:23:14] <re101-bombay-13> how to test regez for bash
[18:29:20] *** Quits: anahat (~anahat@116.74.221.85) (Quit: Connection closed)
[18:30:32] <JohnDoe2_> re101-bombay-13 if [[ "text" =~ regex ]]; then echo "it matched"; else echo "you suck at it"; fi
[18:44:20] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[18:44:42] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:45:44] *** Joins: lavaball (felix@31.204.155.215)
[18:45:57] <arkanoid> hello! offtopic question, but somehow related, please point me to other channel if you know one. I'm trying to write a PEG to match trailing underscores like in "foo_" and capture "foo"
[18:46:24] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:46:39] <arkanoid> with regex is trivial, but PEG is deterministic and I'm failing to grok the right way
[18:46:50] <JohnDoe2_> arkanoid is that polyethylene glycol?
[18:47:01] <arkanoid> https://en.wikipedia.org/wiki/Parsing_expression_grammar
[18:47:40] <arkanoid> https://www.gnu.org/software/guile/manual/html_node/PEG-Syntax-Reference.html
[18:49:40] *** Quits: re101-bombay-13 (~re101-bom@141.117.35.136) (Quit: Client closed)
[18:49:42] <JohnDoe2_> well I don't see an obvious way to drop previously matched or a lookbehind
[18:50:44] <JohnDoe2_> .&_!(range #\a #\z)
[18:52:16] <JohnDoe2_> unless there's some features I'm afraid I have no clue how to get rid of "any" to only match the trailing _
[18:52:28] <JohnDoe2_> some features = some more features *
[18:54:37] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:58:35] <arkanoid> mmm
[18:58:49] <arkanoid> how did you manage to create it in 120 seconds
[18:59:04] <arkanoid> I've been fighting this for hours
[18:59:16] <arkanoid> but I might have just found "^{ ( !'_' . )* }'_'$"
[18:59:23] <arkanoid> let me understand your solution
[18:59:37] <digitok> jd2 can make 120 seconds feel like hours
[19:00:00] <JohnDoe2_> yeah but if she's really hot it might go down to like 20 seconds.
[19:00:30] <digitok> that's still 30mins in human time
[19:00:44] <JohnDoe2_> no wonder chicks leave me left and right. They get bored.
[19:01:08] <digitok> their loss
[19:01:30] <arkanoid> hey, don't worry, they might lookbehind
[19:01:39] <digitok> :>
[19:01:46] <JohnDoe2_> 🤣
[19:05:06] <re101-gecko-87> gosh, this escalated ^^
[19:06:36] <digitok> climactic even
[19:07:18] <re101-gecko-87> @digitok Not sure I understand the limitations you alluded to earlier. No pressure to explain, I'm sure it will be clear when I actually start using regex in c#
[19:07:49] <digitok> 07JohnDoe2_, reading his q, it seems like he wanted to match foo based on _, i.e. a lookahead type situation. but maybe i misinterpreted
[19:08:28] <JohnDoe2_> digitok you may be right, maybe arkanoid can shed some more light? right now it seems _ is expected at the end of the string?
[19:08:57] <digitok> 07re101-gecko-87, i just meant that the code generator simply inserts your regex into the appropriate surrounding code for a given language, possibly adding some escapes and delimiters where needed; it won't add/remove syntax that's (in)valid in another regex engine to make it valid in c#
[19:10:05] <digitok> 07JohnDoe2_, yea, just going on the "match trailing underscores and capture foo"
[19:10:22] <re101-gecko-87> digitok I see, it just has a generic template for each lang then
[19:10:29] <JohnDoe2_> digitok gotcha
[19:10:31] <digitok> pertty much
[19:10:52] <re101-gecko-87> disappointing, but also more than I expected xD
[19:10:55] <re101-gecko-87> thanks again
[19:11:32] <digitok> it does supply the appropriate code for your selected function, i.e. match, substitute, with and without /g (global), etc
[19:11:42] <digitok> and yw :)
[19:11:50] <JohnDoe2_> digitok, arkanoid so then maybe? "(+ .)"&_!(range #\a #\z)
[19:13:11] <arkanoid> long story short: I'm testing with string "foo_bar_" -> expected output "foo_bar". So I've to capture everything except trailing underscore
[19:14:15] <JohnDoe2_> then !(range ...) can be just $ if that's supported (don't see $ in syntax)
[19:14:26] <digitok> i.e. digitok plus plus
[19:14:31] <digitok> :p
[19:14:32] <JohnDoe2_> digitok++
[19:14:36] <digitok> lol
[19:14:39] <JohnDoe2_> wow
[19:14:46] <JohnDoe2_> perlbot has networksies trouble
[19:15:06] <digitok> hm?
[19:15:23] <JohnDoe2_> perlbot jd2
[19:15:23] <perlbot> JohnDoe2_: <JohnDoe2> well either way, here's something you can play with
[19:15:30] <digitok> :D
[19:15:41] <JohnDoe2_> 😝
[19:16:12] <digitok> that's our jd2
[19:27:12] <digitok> incidentally, seems you could use that _ code atm, jd2
[19:27:26] *** Joins: nate44 (~Nathan22@S0106bcd16583c035.gv.shawcable.net)
[19:27:52] <OnlineCop> My tabstop is 4 spaces. Comments are always aligned to a tabstop. I've just added text to multiple lines and want to now re-align/indent the comments again. Regex is within vscode, which is more-or-less JS.
[19:28:16] <nate44> Hey all. Struggling slightly - trying to match KVPs where the value may not exist. My attempt so far: https://regex101.com/r/MB572j/1 . It seems by making my second group optional it's not greedy enough?
[19:28:30] *** Quits: re101-gecko-87 (~re101-gec@pb-desk.mrc.ox.ac.uk) (Quit: Client closed)
[19:28:39] <nate44> !rehelp
[19:28:39] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[19:29:23] <OnlineCop> The `\s*?` between `(\w+)` and `=` doesn't have to be un-greedy/lazy.
[19:30:02] <OnlineCop> What are you trying to do with the `stu  =  # Comment` line? Match it?
[19:30:06] <nate44> True, makes sense
[19:30:11] <OnlineCop> And, does your regex flavor allow ++ ?
[19:30:16] <OnlineCop> (Or *+ )
[19:30:26] <nate44> OnlineCop: Ideally yes. stu in the first capture group, second capture group empty
[19:31:17] <nate44> OnlineCop: I'm using the C++11 regex library which uses ECMAScript I believe. Not sure if that supports it
[19:31:18] <OnlineCop> Should it capture _any_ non-whitespace characters except '#'? If the line has just as semi-colon, for example? "stu  =  ;  # Comment"
[19:31:45] <OnlineCop> It doesn't; good to know. I'll switch the FLAVOR in regex101 so it matches that.
[19:31:53] <nate44> OnlineCop: In that example I'd want the second capture group empty
[19:31:57] *** Joins: lavaball (felix@31.204.155.215)
[19:32:16] <OnlineCop> Will it be `\w` characters then? Or (parens) or "quotes" or others?
[19:32:32] <OnlineCop> Basically, what would be valid "group 2" contents?
[19:32:43] <OnlineCop> "\w+(?:\s+\w+)*"  ?
[19:32:52] <OnlineCop> (word characters separated by whitespace)
[19:32:59] <nate44> Unfortunately others i.e digits/strings/IPs/
[19:34:00] <OnlineCop> Okay: do you have a list of valid (or invalid) characters that can be part of group2?
[19:34:31] <OnlineCop> Also: Do you want the whitespace after it matched (up to the first ';' or the first '#') ?
[19:34:49] <nate44> OnlineCop: I don't have an exact list unfortunately. Parsing third party configuration files that I don't have a spec for. I was previously using `\S`, but then realized I needed to avoid the semi-colon etc so swapped to that exclusion group instead
[19:34:58] <OnlineCop> The `.*?` at the end will always do "zero" and only do the "or more" if something AFTER it fails and it has to backtrack and do the "or more" so it will match.
[19:35:23] <nate44> I do not want the whitespace after it matches
[19:35:25] <OnlineCop> Well, `[^\s#;]` is fine if those two characters are the only that you want to ignore.
[19:35:47] <OnlineCop> https://regex101.com/r/MB572j/3
[19:35:50] <nate44> Given I don't know what characters they allow, I think that's the safest assumption to make for now
[19:36:09] <OnlineCop> That will make group 2 become NULL if there's no match, instead of returning a 0-length string. Is that what you want?
[19:37:20] <nate44> OnlineCop: Fantastic! Thanks. Yeah this is perfect. I don't understand why my solution didn't work though
[19:39:57] <OnlineCop> Oh; your version had a minimal `.*?` before an "optional" `(...)?` group.
[19:41:20] <OnlineCop> The first pass, the "minimal" matches 0 characters successfully, then tries to match the "optional" group. Since "optional" can match 0 times, it also succeeds, and nothing else after that forces the "minimal" to backtrack and start matching 1 MORE whitespace.
[19:41:45] <OnlineCop> Er, sorry: it was a minimal `\s*?` not a `.*?`. But same logic applies.
[19:42:31] <OnlineCop> "minimal" succeeded, tried to match your group at the current position (immediately after the '=') and failed BUT because it was allowed to match 0-or-more-times, that reported as "success".
[19:42:59] <OnlineCop> If you _know_ the line will have a comment, you could try `(?=#)` or `(?=\s*#)` to assert that a '#' comes after it.
[19:43:50] <OnlineCop> Actually, that was wrong: that fails to match some of the others.
[19:44:38] <nate44> They don't always have comments unfortunately. But I just ran some quick tests and this seems to work on everything I've thrown at it. So thanks a bunch!
[19:44:48] <OnlineCop> Awesome!
[19:45:03] <nate44> I think I'll need to brush up on the more intricate details of how the engine functions haha :D 
[19:45:44] <OnlineCop> If you have 50 minutes to spare, !tuts has a YouTube video by Damian Conway.
[19:46:20] <OnlineCop> He breaks down how regex engines work from a programmer's perspective (how loops work, how this "minimal" `*?` works, etc.)
[19:47:09] <OnlineCop> The video starts out like it's going to be really complicated, really fast, but then he backs up and explains everything in extremely simple terms, with examples.
[19:53:39] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 250 seconds)
[19:56:34] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 240 seconds)
[19:57:10] <nate44> OnlineCop: Thanks for the recommendation. I felt pretty confident in my regex skills but clearly I have a lot to learn haha
[19:57:38] <OnlineCop> No worries. Oh, by the way, are you using any IDE that uses regex?
[19:57:53] <OnlineCop> Like vscode, Visual Studio, Notepad++, vim, etc.?
[19:58:09] <nate44> VSCode
[19:58:18] <nate44> Although I get suckered into using Vim regex occasionally
[19:58:28] <OnlineCop> That uses ECMAscript, which allows "variable-length" look-behinds.
[19:58:51] <OnlineCop> It's convenient for doing things like `(?<=^...something...)regex`
[19:59:32] <OnlineCop> I didn't know whether you were aware of that kind of stuff, so you can filter things you're looking for where a line contains (or doesn't contain) certain stuff before what you're looking for.
[19:59:40] <OnlineCop> Anyway, o/  I'm back to work now.
[19:59:41] <nate44> Yeah super useful
[20:22:05] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[20:27:16] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 272 seconds)
[20:29:19] *** Joins: Gus (~Gus@2.24.63.159)
[20:29:33] <Gus> Hey evereone! 
[20:29:40] <Gus> Just a question here..
[20:30:27] <yitz> Skip the hello and preface next time please :) 
[20:30:43] <yitz> Or at least compress it to one line
[20:30:43] <Gus> How do I use the same this regex to capture the 3 groups... 
[20:31:06] <Gus> (Create Account Email address|Email address|Password) ...
[20:31:53] <OnlineCop> Does it start with '(', end with ')', and has '|' as delimiters?
[20:32:11] <Gus> I dont wanna repeat 'Email Address' twice, but wanna capture ("Create Account Email address", "Email address", "Password")
[20:32:42] <OnlineCop> `\(([^|]*)\|([^|]*)\|([^)]*)\)`
[20:33:18] <OnlineCop> Broken apart for readability: `(?x)   \(   ( [^|]* )   \|   ( [^|]* )    \|    ( [^)]* )    \)`
[20:33:19] <Gus> something like.. (Create Account ?= Email address|Password)
[20:33:51] <OnlineCop> Could you post a link on regex101 with a few sample text so we can see exactly what the text would look like?
[20:34:40] <digitok> (?:Create Account )?Email address|Password
[20:34:43] <OnlineCop> That is, you match the `(` character, then match anything except the `|` character, which you capture into group 1. Then, you match the first `|` character.
[20:35:00] <OnlineCop> Oh, you don't want 3 separate capture groups?
[20:35:16] <OnlineCop> Yeah; then digitok's will do it.
[20:36:17] <Gus> https://regex101.com/r/XltCol/1
[20:36:45] <OnlineCop> Gus: Which do you want: a single group, or 3 separate groups in the same match?
[20:37:40] <OnlineCop> Gus: Your regex matches nothing at all in the TEST STRING. That's where you put the text `I set "blah" on the Password box` or `I set "example" on the Create Account Email Address box`
[20:38:21] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[20:38:22] *** Quits: Gus (~Gus@2.24.63.159) (Quit: Client closed)
[20:38:50] <OnlineCop> Gus: https://regex101.com/r/XltCol/2
[20:42:16] *** Joins: Gus (~Gus@2.24.63.159)
[20:42:24] <Gus> Sorry guys.. I wanna capture "Email Address", "Create Account Email Address" or "Password"  
[20:42:24] <Gus> I could use this => (Create Account Email address|Email address|Password) <= but I wanna know if there is a way of not repeat 'Email Address' 2x
[20:42:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 245 seconds)
[20:42:40] <OnlineCop> Gus: Did you not see the earlier links?
[20:43:13] *** Joins: re101-gerbil-4 (~re101-ger@2409:4051:2e82:31e1:f1c6:6a10:8aad:63d1)
[20:43:30] <re101-gerbil-4> !rehelp
[20:43:30] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[20:44:13] <Gus> ((?:Create Account )?Email address|Password)  Do not work when I try to capture just "Email Address"
[20:44:50] <OnlineCop> "address" is lowercase.
[20:45:15] <Gus> checking
[20:45:22] <OnlineCop> Make it case-insensitive, or use [Aa]ddress
[20:45:51] <OnlineCop> `((?:[Cc]reate [Aa]ccount )?[Ee]mail [Aa]ddress|[Pp]assword)` :D
[20:46:08] <OnlineCop> re101-gerbil-4: It helps if you can post a link and/or what you're trying to do.
[20:47:19] <Gus> It's working! It was a space before the word 'Email' ... I remove it and it worked!
[20:47:34] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Quit: Connection closed)
[20:47:52] <Gus> Thanks guys!
[20:49:08] <OnlineCop> Cool.
[20:49:11] <re101-gerbil-4> https://regex101.com/r/Zvv2ke/1
[20:51:07] <OnlineCop> re101-gerbil-4: If I get rid of the last {2} then there's a match.
[20:52:04] <OnlineCop> re101-gerbil-4: Consider changing `([^"]|"")*` to `([^"]+|"")*`  (add a '+' after the closing ']')
[20:52:30] *** Quits: Gus (~Gus@2.24.63.159) (Quit: Client closed)
[20:53:02] <OnlineCop> re101-gerbil-4: https://regex101.com/r/Zvv2ke/2
[20:54:15] <OnlineCop> This has an outer `(...)` capture group. Inside that, I have a non-capturing group that can repeat those alternatives 0 or more times.
[20:55:07] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[20:55:35] <OnlineCop> Finally after it matches the closing double quote, it matches anything left to the end of the line (acts the same as the `.` character, but is safe for when you have "single-line" mode activated), followed by 1 or more newlines.
[20:55:59] <OnlineCop> The next line wouldn't match because it has '$text=' which matches fine, but the next character isn't a double quote.
[20:57:50] <OnlineCop> re101-gerbil-4: Is it possible for $query to concatenate multiple elements together? Such as `$query=$prefix + "some text" + $suffix + "even ""more"" text";`
[20:58:19] *** Joins: Chaphasilor (~Chaphasil@p549cb47c.dip0.t-ipconnect.de)
[20:58:45] <Chaphasilor> !rehelp
[20:58:46] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[20:59:41] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[21:01:08] <Chaphasilor> Hi there! I have a technical question: Is it possible to replace certain characters inside a match group?
[21:01:19] <Chaphasilor> What I have in mind is this: https://regex101.com/r/MOj7KY/1
[21:02:05] <Chaphasilor> As you can see, there are dots in the first match group, which I would like to replace with spaces instead. But so far I haven't figured out a way to do this...
[21:02:27] <JohnDoe2_> Chaphasilor what are you doing this in?
[21:02:46] <Chaphasilor> In Microsoft PowerTools' PowerRename :)
[21:03:02] <OnlineCop> Chaphasilor: Why not allow spaces, in addition to dots?
[21:03:14] <OnlineCop> `([a-zA-Z. ]+)`
[21:03:41] <JohnDoe2_> Chaphasilor can the tool take multiple replacement regexes?
[21:03:43] <Chaphasilor> Because there are no spaces in the source text :)  I'm not sure if I understand your question?
[21:03:53] *** Quits: re101-gerbil-4 (~re101-ger@2409:4051:2e82:31e1:f1c6:6a10:8aad:63d1) (Quit: Client closed)
[21:04:10] <digitok> he wants spaces in the output, not the input
[21:04:21] <Chaphasilor> exactly :)
[21:04:29] <OnlineCop> The other solution I usually go for is two-fold: keep an outer capturing group. Inside the group, make a non-capturing group that matches either `[a-zA-Z\.]+` OR a space followed by something you'd naturally expect there.
[21:05:04] <Chaphasilor> I don't think the tools supports multiple regexes, it works the same way as Regex101, only "search for" and "replace with" 
[21:05:04] <OnlineCop> Ah; are you trying to extract names from dates?
[21:05:24] <digitok> :|
[21:05:44] <OnlineCop> For the first part: `([a-zA-Z]+(?:\.[a-zA-Z]+)*)`
[21:05:50] <Chaphasilor> it's not a date, but yeah, I'm trying to dynamically extract the name and replace the dots with spaces
[21:06:05] <digitok> did you look at the link OnlineCop
[21:06:52] <OnlineCop> The `[a-zA-Z]+` will match "[The].Boys.2019. ..." and then the `(?:\.[a-zA-Z]+)*` will match "The[.Boys].2019. ..."` and then stop because the dot after that is ".2019".
[21:06:56] <digitok> i mean clearly you did, but your suggestion seem odd
[21:07:02] <digitok> +s
[21:07:18] <OnlineCop> I think I just misunderstood the question.
[21:07:47] <digitok> indeed
[21:07:48] <JohnDoe2_> this might be a multi-run replacement 
[21:09:01] <OnlineCop> Chaphasilor: After '2019.' it shows "S##E##". Your regex will match the first digit after "S" but what if it's non-zero, like "S11" or "S23" instead of "S0#" ? Do you want to keep it?
[21:09:13] <Chaphasilor> yeah, another example input would be `The.Queens.Gambit.2012.S01E01.Openings.2160p.NF.WEBRip.DDP5.1.x265-NTb`. so it's not always exactly two words...
[21:09:44] <digitok> damn pirates
[21:09:55] <Chaphasilor> OnlineCop yeah that's fine, if I ever run into problems I can adapt it myself :)
[21:09:56] <OnlineCop> (Look in the Library link on the left: someone already made a "Pirate filename" parser a while ago. :D)
[21:10:16] <Chaphasilor> digitok it's subtitles :P
[21:10:31] <digitok> of course
[21:10:37] <OnlineCop> Chaphasilor: Do you want "S##" to match "S[01]" through "S[09]" or leave off the leading 0?
[21:11:27] <OnlineCop> https://regex101.com/r/MOj7KY/3
[21:11:31] <Chaphasilor> seasons should not have a leading 0 in the output, that's intended behavior :)
[21:11:51] <OnlineCop> That version will remove the leading `0` of episides, though, so you may not want that.
[21:12:13] <OnlineCop> https://regex101.com/r/MOj7KY/4 preserves the leading Episode '0'
[21:12:34] <Chaphasilor> OnlineCopy no I would like to keep it ^^. it's really just about the first part with the dots...
[21:12:48] <OnlineCop> Oh yeah; it would help if I knew what the desired out put was. Did you want to keep the date like that?
[21:13:04] <NiLon> you should keep the 0 for higher compatibility, many parsers expect double digit season and episode number
[21:13:05] <digitok> The.Boys > The Boys
[21:13:37] <digitok> basically no, regex alone can't do it
[21:13:40] <Chaphasilor> digitok right!
[21:13:52] <Chaphasilor> okay, that's what I feared ^^
[21:14:10] <digitok> 07NiLon, i've never seen 01x01
[21:14:50] <Chaphasilor> that's a bummer, but no big deal. I was just thinking maybe it would work with inner capturing groups or something, but didn't have high hopes...
[21:15:01] <Chaphasilor> thanks a ton for your time, guys! :D
[21:15:02] <OnlineCop> To get rid of the dots in the name itself, just run the renamer twice.
[21:15:39] <NiLon> digitok using x is more rare, S01E01 is by far the most common
[21:15:45] <OnlineCop> Choose whether to rename the dots in the first or second pass, and then you would adjust the regexes to expect spaces.
[21:15:46] <Chaphasilor> OnlineCop of course that would be an option, but the tool only remembers the last regex used, so I'd like to keep it the same...
[21:15:47] <NiLon> 99% of them
[21:16:02] <digitok> 07NiLon, absolutely, but x is what he's outputting
[21:16:33] <Chaphasilor> it's my own custom format and I like it, so stop arguing about if it's good or not :P
[21:16:36] <OnlineCop> Chaphasilor: Sure, so rename everything on the first pass with this regex. Once that completes, run a second rename but this time, replace only the '.' characters in the first portion (the title) and stop parsing after that.
[21:17:04] <NiLon> sure, but even then having the 0 increases to compatibility as 01x01 or S01x01 are more expected formats
[21:17:33] <digitok> i've never seen either of those
[21:17:37] <Chaphasilor> OnlineCop the problem is, in that case I would need to have to regexes saved somewhere and swap them out...
[21:17:45] <Chaphasilor> two*
[21:17:56] <NiLon> digitok for the reason that S01E01 is prefered
[21:18:16] <Chaphasilor> I usually just not have the first capturing group and fill in the name myself, which works pretty well
[21:18:29] <digitok> no, i've seen 1x01 plenty of times
[21:18:30] <Chaphasilor> I was just wondering if there was an even better way to do it
[21:18:34] <digitok> never with leading 0
[21:19:06] <NiLon> for every one of those, you find 99 with leading 0
[21:19:38] <OnlineCop> Chaphasilor: Do you know the max number of title "words" that could be in a name? Up to 10? 20?
[21:19:51] <NiLon> and by all means, use whatever you like. I'm just saying you have higher compatibility when you do what 99% do
[21:20:10] <Chaphasilor> I'd say more than 7 would be unusual
[21:20:26] <OnlineCop> `([a-zA-Z]+)(?:\.([a-zA-Z]+))?` <- Now, repeat   `(?:\.([a-zA-Z]+))?`  7-8 times.
[21:20:30] <OnlineCop> Then the rest of the regex.
[21:20:49] <OnlineCop> Also, consider if names can contain digits or non-[A-Za-z].
[21:21:43] <NiLon> also note, sometimes you might have the episode name included, so it could be 20 parts
[21:22:35] <OnlineCop> Welp: I was hoping `(?:\.([a-zA-Z]+))?`-spamming would work, but forgot that in the substitution, you have to add ' $1 $2 $3 ...` and all those spaces will add up when there aren't that many groups.
[21:22:56] <Chaphasilor> damn, we're getting closer! https://regex101.com/r/0MorpG/1
[21:23:36] <OnlineCop> https://regex101.com/r/MOj7KY/5
[21:23:37] <digitok> 07NiLon, a) i doubt he's concerned about compatibility, and b) you're incorrect about 01x01 being more common than 1x01
[21:24:00] <NiLon> digitok I said S01E01, not 01x01
[21:24:20] <NiLon> <NiLon> digitok using x is more rare, S01E01 is by far the most common
[21:24:21] <digitok> then you're confused as well
[21:24:48] <OnlineCop> Chaphasilor: You'll have to take the hit of a second rename, either replacing consecutive spaces, or replacing the '.' in the name-only portion.
[21:25:01] <Chaphasilor> OnlineCop is there like an "optional matching" operator that only adds a group if it was matched?
[21:25:03] <digitok> <digitok> no, i've seen 1x01 plenty of times <digitok> never with leading 0 <NiLon> for every one of those, you find 99 with leading 0
[21:25:09] <OnlineCop> I'd personally think a simple `s/[ ]{2,}/ /g` would be the easiest.
[21:25:15] <NiLon> also: <NiLon> sure, but even then having the 0 increases to compatibility as 01x01 or S01x01 are more expected formats
[21:25:34] <digitok> yes, you're wrong about that
[21:25:48] <OnlineCop> Chaphasilor: If you make a captured group optional with `(...)?` then it is basically a NULL for a match.
[21:26:22] <Chaphasilor> can we do that in the replacement regex somehow?
[21:26:33] <digitok> if someone writes a parser "expecting" 01x01 then they're silly
[21:26:37] <Chaphasilor> only add the space if the capturing group is non-empty?
[21:26:57] <digitok> because it's very uncommon
[21:27:00] <NiLon> digitok yet that is the reality
[21:27:20] <digitok> if you say so
[21:28:04] <NiLon> I don't care if you believe or not. I'm just telling you experience from 20 years of dealing with these. Take or leave it
[21:28:13] <OnlineCop> Chaphasilor: almost none of the current regex flavors allow "optional substitution".
[21:28:57] <Chaphasilor> but there are some that do?
[21:29:06] <Chaphasilor> at this point I'm just curious ^^
[21:29:17] <OnlineCop> https://docs.microsoft.com/en-us/windows/powertoys/powerrename indicates that it supports both ECMAScript as well as the boost library (which enables some extended features), but I don't believe that supports it.
[21:29:57] <OnlineCop> Perl and PHP have substitution callbacks which basically run additional code on the part that was captured.
[21:30:18] <OnlineCop> PHP's `preg_match_callback` I believe
[21:30:29] <Chaphasilor> ah, what a bummer :(
[21:30:38] <OnlineCop> Whoops: `preg_replace_callback`.
[21:30:47] <Chaphasilor> but thanks for your help anyway, much appreciated!
[21:30:55] <Chaphasilor> have a wonderful day :D
[21:30:59] <OnlineCop> You said this tool only "remembers the last regex used"?
[21:31:19] <Chaphasilor> yeah, the way I have it set up at least
[21:31:28] <OnlineCop> If your original regex is the one posted above, and your second regex simply went through and removed 2+ spaces, would that be an option?
[21:31:55] <OnlineCop> Is there a way to run it (or another tool) with flags that won't remember the "remove 2+ spaces" regex?
[21:36:20] <digitok> 07NiLon, fwiw https://kodi.wiki/view/Naming_video_files/Episodes
[21:36:52] *** Quits: army (~aL@user/army) (Ping timeout: 258 seconds)
[21:37:50] <digitok> additionally, if you search predb for 01x01, you'll find 10 releases, vs ~1200 for 1x01
[21:38:10] *** Joins: Venia (~Venia@c-73-95-2-152.hsd1.co.comcast.net)
[21:39:05] <Venia> Hello, I believe OnlineCop helped me last time to figure out a regular expression that would highlight different parts of a format within InDesign.  I have been working on it a bit over the past several days now and it is still not working.  Can I possibly recieve further assistance? 
[21:39:12] <Venia> What I need: 
[21:39:20] <OnlineCop> Original link?
[21:39:29] <Venia> https://regex101.com/r/Uy8ds9/14
[21:39:43] <Venia> Indesign requires the expression be written in 4 different styles.  one to target each piece of content. 
[21:39:56] <digitok> i posted solutions to that
[21:39:57] <Venia> I've gotten the first one to work, but the following three will not work unless it is all one expression. 
[21:40:21] <digitok> check version 19 of your link
[21:40:22] <Venia> oh.  I think I talked to you and you said you could help in a bit but I had left before then. 
[21:40:26] <OnlineCop> What are the "first one" and the "following 3" ?
[21:40:39] <OnlineCop> Wow. Up to version 22. :D
[21:40:57] <digitok> change {0} to 1/2/3 to get the subsequent matches
[21:41:15] <OnlineCop> It might help if you added Unit Tests so you could keep track of "this should match" and "this should not match" instead of updating the TEST STRING and making it hard to track what you're after.
[21:42:07] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[21:43:00] *** Quits: nate44 (~Nathan22@S0106bcd16583c035.gv.shawcable.net) (Ping timeout: 268 seconds)
[21:43:21] <OnlineCop> But anyway, to catch me up to speed: What are you trying to do here? Choose a specific group to match?
[21:43:28] <Venia> This 19 code looks like it works in 101 but isn't working in indesign. 
[21:43:30] <Chaphasilor> OnlineCop no, sadly there's no way to exclude the modified version, and there isn't a history-dropdown either... I'll leave it as it is :)
[21:43:35] *** Quits: Chaphasilor (~Chaphasil@p549cb47c.dip0.t-ipconnect.de) (Quit: Client closed)
[21:43:46] <Venia> do you think it could be the wrong language? Online cop and I did check before starting but perhaps we were wrong? 
[21:43:58] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[21:44:16] <Venia> yeah, so here's what we got: 
[21:44:22] <OnlineCop> ECMAScript allows for variable-length look-behinds. Most other flavors don't allow for that.
[21:44:38] <digitok> ok then that means indesign isn't using a version of java which supports it
[21:44:48] <digitok> so no it won't work
[21:44:57] <OnlineCop> InDesign uses Java?
[21:45:16] <Venia> I need to find, in varying positions throughout a 300 page document, paragraphs matching the following format: {CONTENT / CONTENT / CONTENT / CONTENT} and turn each CONTENT a different color. 
[21:45:54] <Venia> no where else in the document will you find { or } but the format I'm looking for
[21:46:09] <OnlineCop> These newer versions are simply matching 1 of those 3/4 sections. It's no longer capturing each one individually.
[21:46:12] <Venia> and no where else will you find [space]/[space] but in between each CONTENT set. 
[21:46:31] <Venia> This is what I started with and it never worked: 
[21:46:32] <Venia> GREP 1: (\{(.+)\s\/\s.+\s\/\s.+\s\/\s.+\})
[21:46:33] <Venia> GREP 2: (\{.+\s\/\s(.+)\s\/\s.+\s\/\s.+\})
[21:46:33] <Venia> GREP 3: (\{.+\s\/\s.+\s\/\s(.+)\s\/\s.+\})
[21:46:34] <Venia> GREP 4: (\{.+\s\/\s.+\s\/\s.+\s\/\s(.+)\})
[21:46:49] <OnlineCop> I think version /15 was the last one that was matching all 4 CONTENT, wasn't it?
[21:47:02] <Venia> yeah - hence why I posted it
[21:47:12] <digitok> 07Venia, can you try enabling useJavaAsRegexEngine
[21:47:20] *** Joins: army (~aL@user/army)
[21:47:23] <Venia> but it has to identify each one in a different grep which I think digitok accomplished - but that code isn't recognized. 
[21:48:14] <OnlineCop> Starting with 15, remove the capture groups, but leave the (?:...)
[21:48:36] <OnlineCop> Actually, no: Change 3 of the 4 from capture groups into non-capturing groups.
[21:48:41] <OnlineCop> Then you'll just be left with a single capture group.
[21:48:53] <digitok> he needs a single fullmatch
[21:49:43] <OnlineCop> https://regex101.com/r/Uy8ds9/23
[21:50:12] <OnlineCop> For capturing group 2: https://regex101.com/r/Uy8ds9/24 and so on, and so forth.
[21:50:38] <OnlineCop> I think it's important that he keep the [^...] instead of using `.`-plus-quantifier.
[21:50:53] <digitok> you don't read my msgs do you lol
[21:51:07] <digitok> anyway, going now. good luck
[21:51:09] <OnlineCop> How would a single full match help
[21:51:30] <digitok> because it's what he requires
[21:51:31] <OnlineCop> s/help/help?/
[21:51:32] <rebot> 14OnlineCop meant: How would a single full match 07help?
[21:51:33] <Venia> ?
[21:51:41] <digitok> nothing else will help him
[21:52:02] <OnlineCop> In that case, simply replace ALL capture groups with non-capturing. Boom.
[21:52:10] <digitok> sigh
[21:52:18] <digitok> look at version 19
[21:52:23] <digitok> that's what he needs
[21:52:43] <OnlineCop> Yes, but verison 19 uses look-behinds.
[21:52:44] <digitok> ( and 20/21/22 )
[21:52:54] <digitok> you're missing the point
[21:52:59] <digitok> he needs that output
[21:53:10] <digitok> no capture groups
[21:53:50] <OnlineCop> Unfortunate that Java doesn't support `\K`.
[21:54:26] <Venia> I'm looking at 20 21 and 22.  From what I can tell it's telling indesign to find the look behind and find the 1st 2nd or 3rd iteration of a format and style that one. 
[21:54:28] <digitok> Java supports vwlb depending om version
[21:54:30] <Venia> am I reading that right? 
[21:54:51] <Venia> OnlineCop how do I change the Regex engine in InDesign? I'm not finding a way to do that 
[21:54:51] <digitok> hence why i requested he check if that flag makes it work
[21:54:55] <purplex> It seems nothing supports \K except pcre, am right? (just got here)
[21:55:18] <Venia> This is still all I could find on the Indesign language
[21:55:18] <Venia> https://community.adobe.com/t5/indesign/grep-what-is-the-base-syntax-of-indesign-grep/td-p/10321905
[21:55:25] <OnlineCop> Venia: No idea. It was digitok's suggestion, wasn't it?
[21:56:25] <digitok>  <digitok> Venia, can you try enabling useJavaAsRegexEngine
[21:56:28] <OnlineCop> It says on that page that it's using `boost::regex`. Boost supports `\K`.
[21:56:29] <Venia> oh, perhaps, I got a bit lost in the conversation wilst googling (not to throw another wrench but I'm also female btw ;D)
[21:56:50] <OnlineCop> ^ Good to know. Sorry for the assumption.
[21:57:07] <purplex> i use \K in my notepad++
[21:57:36] <OnlineCop> Venia: Since the boost.org docs say that it supports \K, switch the regex101 flavor back to something like PCRE and try a \K solution.
[21:58:34] <OnlineCop> Basically, are you trying to get a (non-capturing) match but for only a single section?
[21:59:02] <Venia> yes. 
[21:59:23] <Venia> And it must be 4 seperate expressions because adobe does not support multiple styles applied to one expression
[22:00:00] <OnlineCop> https://regex101.com/r/Uy8ds9/25
[22:00:49] <OnlineCop> I don't remember whether boost supported the `(?x)` there at the top, but it does say it has a `/x` flag, which does the same thing.
[22:01:31] *** Joins: d1cor (~diego@179.63.242.114)
[22:01:34] <OnlineCop> What this does, it matches "stuff" as normal. If it hits a `\K`, it continues matching from that point forward, but drops what was in the match so far. So everything AFTER that point will be what gets returned.
[22:01:50] <digitok> 07Venia, https://regex101.com/r/Uy8ds9/26
[22:02:34] <OnlineCop> Ooh, that one's a lot more convenient. Go with ^ that one.
[22:03:31] <Venia> oooh
[22:03:32] <Venia> okay
[22:03:32] <Venia> so this targets the first. 
[22:03:34] <Venia> What change is to be made for the second content? 
[22:03:45] <digitok> {0} > {1}
[22:05:02] <Venia> IT WORKED! 
[22:05:47] <OnlineCop> Also, since we know that it's boost::regex, we also know that recursion will work.
[22:06:01] <OnlineCop> So you can have {nested {brackets {if} you} want}
[22:06:31] <Venia> interesting! 
[22:06:45] <Venia> I'll have to pick apart this setup over the next bit to be sure I can produce this in the future <3  
[22:07:20] <OnlineCop> Be sure that somewhere in your comments/code, you link to the https://www.boost.org/doc/libs/1_67_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html of allowed regexes.
[22:07:51] <Venia> That's handy! 
[22:08:08] <Venia> I'll slack this now and then add the comment when I know what I'm doing because there are parts of this regex I'm not understanding XD  
[22:09:18] <OnlineCop> I mean, we can always extend digitok's /26 version with the `/x` flag so you can make it a bit more readable.
[22:14:03] <Venia> That's an option but I'm not sure wholly necessary atm.  
[22:14:12] <Venia> regardless this has been INCREDIBLY helpful. 
[22:14:22] <OnlineCop> https://regex101.com/r/Uy8ds9/27
[22:14:23] <Venia> I really didn't want to have to manually find over 700 instances of the format to make it work. 
[22:14:57] *** Joins: re101-quokka-96 (~re101-quo@2405:201:5504:a0a1:1c46:5869:445d:bbfd)
[22:14:57] <digitok> https://regex101.com/r/Uy8ds9/28
[22:14:59] <OnlineCop> digitok: Do we know whether boost::regex supports  (?<=(?=)) syntax?
[22:15:11] <re101-quokka-96> jhgtuygtuyg
[22:15:15] <OnlineCop> :D
[22:15:27] <re101-quokka-96> ;)
[22:15:28] <digitok> dunno, i'd assume so
[22:15:39] <OnlineCop> That gives a capturing group, though...
[22:16:01] <digitok> that's ok
[22:16:52] <OnlineCop> {1} would mean that there's both a match AND a captured group.
[22:17:07] <digitok> correct
[22:17:15] <OnlineCop> ¯\_(ツ)_/¯
[22:17:19] <re101-quokka-96> 2131545468
[22:17:21] <digitok> the former is what's importanr
[22:17:24] <digitok> important
[22:17:39] <OnlineCop> !phone re101-quokka-96
[22:17:50] <OnlineCop> Is this a phone number you're trying to match?
[22:18:32] <OnlineCop> `\b(\d{3})(?!555)(\d{3})(\d{4})\b`
[22:19:35] *** Quits: re101-quokka-96 (~re101-quo@2405:201:5504:a0a1:1c46:5869:445d:bbfd) (Client Quit)
[22:23:09] <Venia> A'ight, following up the client is happy! 
[22:23:14] <Venia> Thank you all :)  
[22:23:19] <Venia> Coffees and donations incoming. 
[22:23:25] <OnlineCop>  \o/
[22:23:30] <Venia> I do need to go though. I have a meeting in a few minutes. 
[22:23:47] *** Quits: Venia (~Venia@c-73-95-2-152.hsd1.co.comcast.net) (Quit: Client closed)
[22:25:56] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 258 seconds)
[22:26:36] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[22:35:58] <NiLon> digitok did you see minimum required and recommended episode name in that wiki page
[22:42:56] *** Joins: SnowCode (~debian@vps-709aceac.vps.ovh.net)
[22:43:11] <SnowCode> !rehelp
[22:43:12] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[22:47:03] <SnowCode> https://regex101.com/r/zDGp30/1
[22:47:45] <JohnDoe2_> yay, you did it SnowCode!
[22:47:46] <SnowCode> Hello, I would like to create a regex selector that could select .useful but also its parent (the @media) without selecting the useless classes
[22:48:30] <SnowCode> I'm trying to make a purgeCSS alternative in bash using sed and grep
[22:48:52] <JohnDoe2_> too much time on your hands? :D
[22:48:58] <SnowCode> :P
[22:49:02] <SnowCode> ye xD
[22:49:16] <SnowCode> Also, JS runs really slow on my laptop
[22:49:41] <SnowCode> So it can take 1 minute to purge the css using purgecss
[22:50:02] <SnowCode> (against a few seconds for my prototype)
[22:50:05] <JohnDoe2_> not really buying it but it's cool https://regex101.com/r/zDGp30/2
[22:52:07] <SnowCode> JohnDoe2_: Thanks :) Why is useless selected as well though :thinking:
[22:52:29] <SnowCode> Oh never mind, I'm blind xD
[22:52:37] <JohnDoe2_> https://regex101.com/r/zDGp30/3 typo
[22:52:59] <JohnDoe2_> selected because you want to keep it, whatever's got a color other than blue is a capture group (meaning keep this part of match, assign an ID to it for later)
[22:55:12] <JohnDoe2_> https://regex101.com/r/zDGp30/4 if you care about maintaining indentation and your linted your css files
[22:55:25] <JohnDoe2_> you linted your *
[22:55:54] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net)
[22:59:59] <SnowCode> Thanks :)
[23:00:26] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcb9-847d-ae36-44e6.fixed6.kpn.net) (Ping timeout: 258 seconds)
[23:01:26] <OnlineCop> Can `.useful {` contain nested { and } ?
[23:01:50] <JohnDoe2_> hopefully it's not scss
[23:02:23] <SnowCode> OnlineCop: What do you mean?
[23:02:24] <OnlineCop> Will that trailing `[^@]+` be a problem if this is at the top of a very large file?
[23:02:57] <OnlineCop> "@media (...) { ... .useful { can this {contain} nested { brackets } ? } ... }"
[23:03:12] <SnowCode> (btw the file is huge, 18 8353 lines)
[23:03:22] <JohnDoe2_> if a css file is 1+ mb you're doing it very wrong. :D 
[23:03:28] <SnowCode> s/18 8353/188 353/g
[23:03:29] <rebot> 14SnowCode meant: (btw the file is huge, 07188 35314 lines)
[23:03:49] <OnlineCop> I see some potential issues for `.*?` forward-tracking and `[^@]+` backtracking...
[23:03:55] <SnowCode> JohnDoe2_: The file is tailwind. It's big by design, that's the point of using purge
[23:04:28] <JohnDoe2_> dev version of it?
[23:04:34] <SnowCode> yes
[23:04:43] <JohnDoe2_> is it not modular?
[23:04:50] <SnowCode> I'm not using js
[23:04:50] <OnlineCop> Paste some of your @media into the regex101 page (you don't have to save/upload) and see if it times out.
[23:05:02] <OnlineCop> You said you're trying this with grep and sed?
[23:05:07] <SnowCode> Yes
[23:05:31] <OnlineCop> GNU grep support PCRE (with the `-P` flag), but sed at most has `-r`.
[23:06:01] <OnlineCop> If you're doing it from the command line, I'd go with command-line perl pie over those two for stuff like this.
[23:06:17] <SnowCode> Why?
[23:06:23] <SnowCode> u
[23:06:34] <SnowCode> (btw, I can't make it work with grep and sed)
[23:06:46] <SnowCode> grep -oP '/(@media \([^)]+\) {)[^@]+?(\.useful {[^}]+})[^@]+(})/p' test.txt
[23:06:48] <OnlineCop> Perl can support recursion, has optimizations you can use to get rid of the *? and *, etc.
[23:07:00] <SnowCode> That commands gives no output (with the same text as in the website)
[23:07:22] <SnowCode> OnlineCop: What does it mean it "support recursion"
[23:07:28] <OnlineCop> The [space]{ needs the '{' to be escaped.
[23:07:55] <OnlineCop> SnowCode: You can have it start at @media... '{' and end at its closing '}'
[23:08:12] <OnlineCop> When it finds nested {...}, it can recurse into them, so you know you'll always have balanced brackets.
[23:09:17] <SnowCode> Re: escaped : Which one should be escaped in particular?
[23:09:28] <OnlineCop> `grep -P` can do recursion as well, but if you're piping that into sed, then you'll have to just use sed's limitations on regex.
[23:09:49] <OnlineCop> `(@media \([^)]+\) {)` <-- the trailing '{' before the closing paren.
[23:10:13] <OnlineCop> `(@media \([^)]+\) {)` <-- This '{' as well.
[23:11:01] <OnlineCop> I typically escape the closing } as well even though it's not necessary (as they're not "special" unless there's an open '{' to the left that is being repeated).
[23:12:02] <SnowCode> Like that: 
[23:12:04] <SnowCode> grep -oP '(@media \([^)]+\) \{)[^@]+?(\.useful {[^}]+})[^@]+(\})' test.txt
[23:12:07] <SnowCode> ?
[23:12:32] <OnlineCop> `(\.useful {[^}]+})` needs the { escaped
[23:12:35] <OnlineCop> The one after the space.
[23:14:42] <OnlineCop> I've often transferred regexes around via bash aliases and functions and have often had to escape (and double/triple/etc. -escape) meta characters that I want to match as literals. When that happens, I just wrap those special characters in a character group: `([.]useful [{][^}]+[}])` (for example).
[23:14:45] <SnowCode> That way?
[23:14:48] <SnowCode> grep -oP '(@media \([^)]+\) \{)[^@]+?(\.useful \{[^}]+})[^@]+(\})' test.txt
[23:14:50] <OnlineCop> If you're not doing any of that, you don't have to worry.
[23:15:04] <OnlineCop> That looks better, yes.
[23:15:12] <OnlineCop> Does it still error?
[23:15:22] <SnowCode> There are no error, just no output
[23:15:46] <OnlineCop> Start trimming off stuff from the end of the regex until you get matches.
[23:15:55] <OnlineCop> Oh, grep is single-line. Use `-z`
[23:16:07] <OnlineCop> Unless you're using pcregrep which supports multiline with `-M`
[23:16:26] <OnlineCop> `grep -oPz ...`
[23:17:35] <SnowCode> When I use the -oPz, it just selects the whole thing (including .useless)
[23:18:15] <OnlineCop> `grep -o` is intended to get the entire @media {...} section, isn't it?
[23:18:47] <OnlineCop> Then with those results, you'll need to actually extract the .useful{} stuff.
[23:18:51] <OnlineCop> (via sed)
[23:19:02] <OnlineCop> ...or perl, or awk, or...
[23:19:07] <SnowCode> No the -o is to get only the regex
[23:19:10] <SnowCode> Oh ok
[23:20:15] <SnowCode> I thought there would be a way to only extract the useful + outer css
[23:20:38] <OnlineCop> With perl, yes. With grep+sed, probably not (easily?).
[23:21:14] <SnowCode> How does the substitution thing works?
[23:21:21] <OnlineCop> If you want to use recursion for grep to pull out only the @media{...}, you could also try this: `(^[\t ]*)(@media\s*[(][^()]+[)]\s*)(?&Brace)(?(DEFINE)(?<Brace>[{](?>[^{}]+|(?&Brace))*[}]))`
[23:22:38] <OnlineCop> Actually, defining the `Brace` group may be overkill as you're only doing it once. If you were to use it more, it might make more sense.
[23:23:25] <SnowCode> In perl or in grep? 
[23:24:09] <OnlineCop> Question for you: inside @media(){...}, will styles always be [dot]something{...} or will it accept any CSS decorator besides [dot]?
[23:24:31] <SnowCode> No, it's only [dot]something, only classes
[23:24:48] <SnowCode> also they all are like this .md\:something
[23:25:00] <SnowCode> or like this .sm\:something
[23:25:11] <OnlineCop> I'm considering changing the `[^@]+?` to `[^.]*` then since that will be faster.
[23:25:14] <SnowCode> md, sm or lg defines the size of the screen
[23:25:52] *** Joins: Tobbi_ (~Thunderbi@212.23.159.130)
[23:28:35] <SnowCode> https://hastebin.com/ixozezujus.rb
[23:28:44] <SnowCode> Do you see something off in the paste I gave you ?
[23:29:00] <SnowCode> I'm trying to select (without the @media) .md\:mx-5
[23:29:48] <OnlineCop> I'm not entirely familiar with sed's -n or /p notation. Is this simply printing those lines? Or are you trying substitution?
[23:30:56] <SnowCode> No it's not substitution here
[23:31:04] <SnowCode> I think it's really just printing stuff
[23:31:08] <OnlineCop> sed doesn't consider '{' to be a special character (escaping it as \{ makes it special). `sed -r` makes { special and \{ a literal (non-special).
[23:31:53] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:a924:4956:68bc:291f)
[23:32:13] <SnowCode> OK, but why can I select .mx-5 but not .md\:mx-5
[23:32:54] <OnlineCop> `.` is a special character; I don't know whether `:` is or needs to be escaped.
[23:33:52] <SnowCode> ".md\:mx-5" is written like that in the original css code
[23:34:22] <SnowCode> so I tried ".md\:mx-5" and ".md\\:mx-5" but nothing changes
[23:34:39] <OnlineCop> SnowCode: Does https://regex101.com/r/zDGp30/5 do what you want?
[23:35:13] <OnlineCop> Whoops: guess the substutution was a little off.
[23:35:35] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[23:40:21] <SnowCode> I think I will tackle this differently. 
[23:40:26] <SnowCode> Thanks for your help :)
[23:47:53] *** shush_ is now known as shush
[23:48:40] *** Quits: shush (sid21719@tinside.irccloud.com) ()
[23:48:47] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:48:51] *** Joins: shush (sid21719@id-21719.tinside.irccloud.com)
[23:49:11] *** Parts: shush (sid21719@id-21719.tinside.irccloud.com) ()
[23:54:22] *** Quits: subie (~subie@2601:4c0:4080:bc0:1024:f42:22ee:4297) (Ping timeout: 272 seconds)
[23:56:28] *** Joins: subie (~subie@2601:4c0:4080:bc0:342d:5fc2:5a63:8ca5)
