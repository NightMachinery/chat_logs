[00:00:18] *** Joins: stonkey (~stonkey@user/stonkey)
[00:01:03] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[00:01:41] *** Joins: stonkey (~stonkey@user/stonkey)
[00:02:17] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[00:02:47] *** Joins: stonkey (~stonkey@user/stonkey)
[00:02:49] *** Quits: Guest19 (~Guest19@120-069-158-163.dynamic.caiway.nl) (Quit: Connection closed)
[00:03:02] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:03:20] <SnoopJ> relevant article from a newsletter that landed in my inbox today: https://rednafi.github.io/reflections/dont-wrap-instance-methods-with-functoolslru_cache-decorator-in-python.html
[00:03:23] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[00:03:25] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[00:03:39] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9147-67d7-a45c-bb0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:04:05] <SnoopJ> (tl;dr store an instance of lru_cache() per object so the cache is inside the object)
[00:04:11] *** kl1n3 is now known as kline
[00:04:55] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[00:06:08] *** Joins: nicode (~nic@2607:f2c0:9479:8500:1518:aee1:e163:8981)
[00:06:22] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com)
[00:06:31] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Remote host closed the connection)
[00:07:27] <parv> Besired LRU functionality, how is lrc_cache use different than a dict (in module as global variable or as a class attribute)?
[00:07:37] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[00:07:43] <parv> s/Besired/Besides/
[00:08:53] *** Quits: erdem (~quassel@88.236.70.180) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:09:14] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[00:09:37] *** Joins: erdem (~quassel@88.236.70.180)
[00:10:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com) (Client Quit)
[00:10:17] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:10:39] *** Parts: erdem (~quassel@88.236.70.180) ()
[00:10:49] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[00:11:25] *** Joins: nyah (~nyah@94.6.71.219)
[00:13:17] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Ping timeout: 240 seconds)
[00:13:46] *** Quits: jay-m126 (~jay-m@154.72.162.87) (Ping timeout: 256 seconds)
[00:14:01] <AhmedAmerican> graingert: you there ?
[00:14:28] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[00:14:30] <graingert> Yes
[00:14:32] *** Joins: theprophet (~theprophe@85.114.228.184)
[00:14:54] <AhmedAmerican> graingert: how you doing ? long time am not here :P hopefully you are doing well
[00:15:10] <SnoopJ> parv, the Python implementation of lru_cache *is* a dict, so I think the answer to your question is "not a lot" if you're talking about the Python impl, aside from making it threadsafe. The C implementation has some differences explained in its source: https://github.com/python/cpython/blob/main/Modules/_functoolsmodule.c#L737-L756
[00:15:23] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[00:16:15] <SnoopJ> and here's the lock in the Python impl: https://github.com/python/cpython/blob/main/Lib/functools.py#L536
[00:16:25] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Client Quit)
[00:16:50] <AhmedAmerican> graingert: check trio chat if you've a chance :P thanks in advance Thomas
[00:17:06] <theprophet> can you please help me understand, https://dpaste.org/VS8Q how  key at line 10 when i print it, only shows keys from dictionary(favorite_languages) , but after line 13 when i print the same key it shows key and the values together ?
[00:18:10] *** Joins: Pickchea (~private@user/pickchea)
[00:18:42] <SnoopJ> theprophet, because Line 10 only prints a key, and Line 13 prints a key and a value
[00:19:05] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[00:19:05] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Read error: Connection reset by peer)
[00:19:29] <theprophet> SnoopJ why? cause it checks the friends = []?
[00:19:29] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:20:01] <SnoopJ> theprophet, I'm not really sure what you're asking me. The program is written with two print statements, and one of them prints both the key and the value, which was retrieved on Line 12.
[00:20:10] <theprophet> SnoopJ and friends=[] is all keys?
[00:20:36] <SnoopJ> no, it's only the two keys you defined it with, 'phil' and 'sarah'
[00:20:46] <theprophet> SnoopJ my question is why? because seonc print uses the same key that was used in for loop
[00:21:07] <kungp_> do you mean the first {} prints more than the key?
[00:21:08] <theprophet> second*
[00:21:21] <theprophet> second one prints more than key
[00:21:26] <SnoopJ> theprophet, right, and it prints the same key, which is why you see "Sarah" and then "\tSarah, I see you love c!", because the key is "Sarah" in both cases.
[00:21:39] <SnoopJ> are you asking why it's "\tSarah" instead of '\tsarah' ?
[00:21:45] <theprophet> so sara and phill are keys?
[00:21:47] <theprophet> no
[00:21:49] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[00:21:54] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[00:22:04] <theprophet> and they grab values in favorite language?
[00:22:17] <SnoopJ> 'sarah' and 'phil' are string objects, and they are used in two places: as keys in the dict, and as entries in the list
[00:22:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:22:27] <SnoopJ> `favorite_languages[key]` looks up the value associated with the key
[00:23:01] <theprophet> thats the part i dont get it
[00:23:09] <theprophet> i know that key looks for value
[00:23:22] <theprophet> but look at this
[00:23:29] <theprophet> for key in favorite_languages.keys():
[00:23:42] <theprophet> i am only searching for key without value
[00:23:47] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[00:24:06] <theprophet> so how come that , when key is attached to favorite language
[00:24:14] <theprophet> in here language = favorite_languages[key]
[00:24:20] <theprophet> also searches for value?
[00:24:22] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[00:24:23] <SnoopJ> I have no idea what you are asking me
[00:24:23] <kungp_> but favorit_languages[key] looks up the value associated with that key
[00:24:27] <theprophet> but not only key
[00:24:31] <bjs> theprophet: that's what that syntax means.  `some_dict[some_key]` returns the value
[00:25:03] <kungp_> rewrite it as for name in favorite_languages.key() maybe
[00:25:05] <SnoopJ> `some_dict[some_key]` translates to English as "get the value in some_dict associated with the key some_key"
[00:25:08] <bjs> theprophet: it doesn't "search" for a value, a dictionary stores a value for each key and then that syntax "gets" the value for the key you give it.
[00:25:11] *** Joins: audio (~audio@user/audio)
[00:25:13] <kungp_> keys* sorry
[00:25:19] <theprophet> bjs so that [key] is not a part of the for key in favorite_languages.keys() anymore?
[00:25:28] <SnoopJ> kungp_, that is exactly line 9
[00:25:32] <audio> are there any tests i can take to see if i'm a good python dev? the linkedin tests are super easy
[00:25:37] <bjs> theprophet: I'm not sure what you mean, that key is the same key as the one in the loop
[00:25:45] <SnoopJ> kungp_, err, except for transposing `name` for `key`
[00:25:54] <kungp_> SnoopJ I meant rename the loop variable key for name, might be clearer
[00:25:57] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Ping timeout: 240 seconds)
[00:26:10] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 250 seconds)
[00:26:24] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-dc67-681f-ccd6-3dd0.res6.spectrum.com)
[00:26:26] <theprophet> bjs if it the same as in loop, how come it ignores this? favorite_languages.keys():
[00:26:27] <SnoopJ> kungp_, the misunderstanding seems a little deeper than syntax aesthetic here
[00:26:34] <bjs> theprophet: what do you mean ignores it?
[00:26:40] <theprophet> bjs is not key() only looks at keys without value?
[00:26:54] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:26:58] <bjs> theprophet: I really am not sure what you mean,  what is being ignored?
[00:27:05] <theprophet> this method
[00:27:07] <theprophet> key()
[00:27:13] <theprophet> for example
[00:27:16] <SnoopJ> .keys() is a method that returns an iterable of keys in the dictionary
[00:27:16] <theprophet> in first print
[00:27:20] <bjs> theprophet: why do you say it's being ignored? what are you actually seeing that makes you say something is being ignored
[00:27:22] <theprophet> i only get keys
[00:27:35] <bjs> theprophet: yes, the first print(key.title()) is printing out the key
[00:27:45] <theprophet> because i only have 1 temprorary value for the key in dictionary
[00:28:00] <theprophet> well yea
[00:28:03] <kungp_> i think you should look up how dictionaries work and how you access their items
[00:28:04] <theprophet> now my question is
[00:28:15] *** Quits: greedom (~greedom@p200300de6718db00ecea82a06443de9b.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:28:25] <theprophet> if that key which is printed second time
[00:28:34] <theprophet> is the part of the loop
[00:28:38] <theprophet> where theres this method
[00:28:40] <theprophet> keys()
[00:28:48] <bjs> theprophet: what do you mean "second time"?
[00:28:54] <theprophet> how its still printing values with keys
[00:29:06] <theprophet> second time i mean the second print in code i sent
[00:29:14] <theprophet>  print(f"\t{key.title()}, I see you love {language}!")
[00:29:15] <bjs> theprophet: the second print isn't *only* printing the key
[00:29:19] <bjs> see it also prints language
[00:29:34] <theprophet> ye and why its printing language also?
[00:29:41] <theprophet> when the key here
[00:29:45] <bjs> theprophet: because you tell it to, that's what the {language} part means
[00:29:48] <theprophet> language = favorite_languages[key]
[00:29:53] <bjs> theprophet: printf("... {language}") prints the language
[00:30:03] <theprophet> is also part of the loop where i only search for key without value?
[00:30:15] <bjs> theprophet: yes that's the whole purpose of a dictionary
[00:30:23] <bjs> theprophet: you give the dictionary the key, it gives you the value.
[00:30:26] <theprophet> no no friend sorry listen
[00:30:33] <theprophet> i know that
[00:30:36] <theprophet> but look at this
[00:30:38] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:30:42] <theprophet> for key in favorite_languages.keys():
[00:30:47] <bjs> theprophet: what about it?
[00:30:54] <theprophet> this suppose to output only key from dict right?
[00:30:58] <SnoopJ> yes, and it does
[00:31:00] <theprophet> without value
[00:31:00] <bjs> theprophet: yes.
[00:31:05] <theprophet> ok now look
[00:31:08] <SnoopJ> your code gets the value separately
[00:31:14] <theprophet> its because i got key() method there
[00:31:15] <SnoopJ> using the value of key for each iteration
[00:31:18] <theprophet> is that correct?
[00:31:23] <bjs> theprophet: now look at what?
[00:31:27] *** Joins: elBit0r (~victor@195.32.87.115)
[00:31:28] <theprophet> what i am saying
[00:31:41] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:32:01] <theprophet> if i had two temporary variable it would give me key and value
[00:32:03] <theprophet> right?
[00:32:04] <bjs> theprophet: I'm still not sure,  the reason you see the language is because you print(f"... {language}") and language = favorite_languages[key].
[00:32:05] <apocalyptech> theprophet: Using the the `key` variable you got from `for key in favorite_languages.keys():`, you then look up the language with `language = favorite_languages[key]`.  That's how you get the language
[00:32:12] <theprophet> but i am specificly telling it to only give me key
[00:32:23] <SnoopJ> ...and then you are using the key to get the value
[00:32:24] <apocalyptech> Yes, your top-level loop only gets the keys.  But then you do a lookup yourself to find the value.
[00:32:24] <bjs> theprophet: this `language = favorite_languages[key]` line is *looking up* the value for that particular key, and storing in the "language" variable
[00:32:35] <theprophet> thats the part i am not getting
[00:32:45] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[00:32:46] <SnoopJ> what part of "you are using the key to get the value" is not clear
[00:32:48] <theprophet> if all the KEY variables are part of the for loop
[00:32:52] <theprophet> how is this part
[00:32:58] <theprophet>  language = favorite_languages[key]
[00:33:12] <theprophet> ignores the fact that i am looking for only key in dict
[00:33:15] <theprophet> without value?
[00:33:18] <apocalyptech> The loop just gives you a different value inside `key` each time it goes through.  The code then looks up the language each time
[00:33:27] <apocalyptech> The *only* thing the loop does is give you a new `key` for each iteration
[00:33:27] <theprophet> how is python doing this?
[00:33:30] <bjs> theprophet: that line literally says "please lookup the value for this key"
[00:33:35] <SnoopJ> 15:54 <bjs> theprophet: that's what that syntax means.  `some_dict[some_key]` returns the value
[00:33:37] <kungp_> if you do favorite_languages['sarah'] you get 'c'
[00:33:46] <bjs> theprophet: I think you think the for loop is doing something it is not
[00:34:04] <SnoopJ> maybe it would be helpful to review the section of the tutorial about dictionaries: https://docs.python.org/3/tutorial/datastructures.html#dictionaries
[00:34:18] <theprophet> ok so the key here  language = favorite_languages[key]
[00:34:26] <theprophet> is not the part of the
[00:34:32] <theprophet> for key in favorite_languages.keys():
[00:34:34] <theprophet> this?
[00:34:34] <SnoopJ> so what?
[00:34:44] <bjs> theprophet: forget the `for` loop for a moment, think about something like https://bpa.st/MLFQ
[00:35:21] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[00:35:22] <bjs> theprophet: `key` is just a variable that stores a string which is one of the keys in the dictionary.  Then by going `favorite_language[key]` I ask the dictionary to give me the value back, and then I print it
[00:35:33] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[00:35:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[00:35:38] <theprophet> ok i get it now
[00:35:53] <bjs> theprophet: this is exactly what your `for` loop is doing
[00:36:00] *** Quits: ebrau (~ebrau@142.126.175.200) (Quit: Leaving)
[00:36:09] <theprophet> one more little question
[00:36:28] <theprophet> when looping on dict
[00:36:34] <theprophet> if i have 1 temporary variable
[00:36:41] <theprophet> it only gives me key?
[00:36:52] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[00:36:52] <theprophet> right?
[00:36:53] <bjs> theprophet: no it's not about how many variables you use it's about what you loop over
[00:37:05] <bjs> theprophet: `for ... in some_dict:` or `for ... in some_dict.keys()` both loop over the keys
[00:37:17] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Ping timeout: 240 seconds)
[00:37:24] <theprophet> yes
[00:37:25] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[00:37:38] *** Joins: matsaman (~matsaman@user/matsaman)
[00:37:46] <theprophet> but if i have like this
[00:37:53] <theprophet> for key, value
[00:37:55] *** Joins: fikran (~fikran@user/fikran)
[00:38:07] <theprophet> i get both key and value in dict right?
[00:38:16] <bjs> theprophet: no like I said `for ... in some_dict:` gives you just the keys
[00:38:33] <bjs> if you go `for a, b in some_dict:` you're looping over just the keys.  You're quite likely to get an error on this line
[00:38:51] <bjs> theprophet: if you want both keys and values you can go `for item in some_dict.items():`  or `for key, value in some_dict.items():`
[00:39:01] <bjs> dict.items() is a list of (key,value) pairs.
[00:39:16] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[00:39:32] <theprophet> but when i print for key it only shows me key without value
[00:39:41] <RayT> theprophet : you might need to use items()         (  for k,v in mydict.items()  )
[00:39:48] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:5de6:1c42:8396:cb23)
[00:39:53] <theprophet> oh ok
[00:40:14] <bjs> theprophet: yes, because when you loop over the dict, or the_dict.keys() you get only the keys. If you want to loop over both then like I say you can loop over the_dict.items() instead.
[00:40:25] <bjs> or lookup the value `for k in some_dict.keys(): v = some_dict[k]; ...`
[00:40:42] <theprophet> ok i see
[00:40:44] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:cc80:b7f7:3c19) (Remote host closed the connection)
[00:41:02] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[00:41:37] <theprophet> thank you all, thank you very much
[00:41:41] <theprophet> thank you bjs
[00:41:50] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[00:42:27] *** Quits: Narrat (~omnius@p200300df5f0d7b8106ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:42:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Remote host closed the connection)
[00:46:13] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[00:46:16] *** Quits: tonitch (~tonitch@user/tonitch) (Quit: ZNC 1.8.2 - https://znc.in)
[00:46:18] *** Quits: jim87 (~gfurlan@93.55.249.30) (Quit: Konversation terminated!)
[00:47:02] *** Joins: tonitch (~tonitch@user/tonitch)
[00:47:08] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[00:47:09] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Read error: Connection reset by peer)
[00:47:32] *** Joins: Guddu (~Guddu@122.161.91.9)
[00:48:36] *** Quits: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:48:54] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:49:23] <c4017w> How can I use numpy to select a range of a sorted array? like `np.where(0.1 < data < 2)`
[00:49:31] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:50:23] *** Histausse is now known as Hist
[00:50:59] <SnoopJ> c4017w, `lo, hi = np.searchsorted(data, [0.1, 2]); selected = data[lo:hi]` perhaps?
[00:51:32] *** Joins: r3m (~launch@user/r3m)
[00:51:57] <c4017w> SnoopJ, yes, that will work thanks
[00:52:03] <SnoopJ> or `data[(0.1 < data) & (data < 2)]` if you don't care about doing it in multiple passes
[00:52:53] *** Joins: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net)
[00:52:59] *** Joins: ice9 (~ice9@user/ice9)
[00:58:01] *** Quits: cosimone (~user@93-47-229-195.ip115.fastwebnet.it) (Remote host closed the connection)
[01:00:38] *** Joins: Deepspeed (~yep@235.sub-174-215-149.myvzw.com)
[01:00:46] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:00:55] *** Joins: snakey_hiss (~scott@101.100.131.161)
[01:02:03] <cYmen> I am doing some long running computations in a notebook.
[01:02:16] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[01:02:25] <cYmen> I would like to record how much time the computations take but timeit somehow messes with the environment and the variables are not set properly.
[01:02:28] <cYmen> Is there way around that?
[01:03:17] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[01:03:32] <SnoopJ> cYmen, does the %time magic do what you want? https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-time
[01:03:56] <mefistofeles> cYmen: you can use profilers for that, depending on what you actually want to measure, they do have some overhead, though. On the other hand, not sure what you mean by timeit messing things up, how? Do you have an example?
[01:03:58] <SnoopJ> or %timeit if you like, I'm not really sure what the problem is
[01:04:10] <greentree> is there a way to limit pip to only list versions compat for 2.x
[01:04:50] <SnoopJ> greentree, list? which subcommand are you using?
[01:05:00] <greentree> install
[01:05:16] <greentree> i guess a better choice of word could be "resolve"
[01:06:12] <SnoopJ> greentree, is --python-version what you want?
[01:07:23] <cYmen> https://imgur.com/a/YIyB8gh here you can see the problem
[01:07:39] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[01:07:46] <cYmen> Maybe I am using it wrong? *hope*
[01:08:02] <greentree> --python-version is a valid parameter for pip?
[01:08:24] <SnoopJ> for pip-install, yes https://pip.pypa.io/en/stable/cli/pip_install/#cmdoption-python-version
[01:10:05] <kungp_> was python 1 any good?
[01:10:20] <grym> good enough to make another one!
[01:10:26] <SnoopJ> kungp_, depends on what "good" means
[01:10:46] <kungp_> just never seen anything about it
[01:10:57] <JayDoubleu> is there a way to automatically escape single and double quotes in strings ? so `a = "string'with'quote"` would become `a = "string\'with\'quote"`
[01:11:13] <mefistofeles> cYmen: if you just want to measure time, not doing the repetitions and statistics, you might want to use %%time instead of %%timeit
[01:11:21] <SnoopJ> JayDoubleu, those are the same string
[01:11:59] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Quit: No Ping reply in 180 seconds.)
[01:12:01] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:bdd7:db0a:643d:2c50)
[01:12:06] <JayDoubleu> I mean to encode it so the value becomes actual `"string\'with\'quote"`
[01:12:06] *** Joins: greaser|q (greaser@antihype.space)
[01:12:08] *** Quits: RayT (~RayT@2a01cb0c04d44a004907a0588c84c4f4.ipv6.abo.wanadoo.fr) (Changing host)
[01:12:08] *** Joins: RayT (~RayT@user/RayT)
[01:12:22] <kungp_> r"raw\string" maybe
[01:12:23] <SnoopJ> JayDoubleu, does `r"string\'with\'quote"` do what you want?
[01:12:31] <cYmen> mefistofeles: yes, but it has the same problem
[01:12:41] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[01:13:02] *** Joins: guil (~guil@2a02:a03f:a19b:dd00:8f95:76ed:894d:b901)
[01:13:28] *** guil is now known as QUICKguils
[01:13:43] *** Quits: QUICKguils (~guil@2a02:a03f:a19b:dd00:8f95:76ed:894d:b901) (Client Quit)
[01:14:24] *** Joins: cosimone (~user@93-47-229-195.ip115.fastwebnet.it)
[01:14:28] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:3547:6761:cb41:5054) (Ping timeout: 268 seconds)
[01:14:46] <SnoopJ> cYmen, %%time will bind the name if you just want to know the execution for a single repetition (which looks like it's the case)
[01:14:58] <cYmen> that sounds like exactly what I want
[01:14:58] * SnoopJ forgot about repeating the % for cell mode
[01:15:08] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[01:15:18] <mefistofeles> cYmen: no, it doesn't
[01:15:35] <mefistofeles> cYmen: consider I'm saying %%time (as in the block magic), not %time the inline magic
[01:16:00] <cYmen> ah, I misread that
[01:16:13] <cYmen> Well, great!
[01:16:15] <cYmen> %%time it is
[01:16:22] <cYmen> Thank you both, gentlemen!
[01:16:22] <SnoopJ> yea ipython has this distinction between applying a magic to a single line or an entire cell, %% is the latter
[01:16:29] <mefistofeles> cYmen: no problem
[01:16:57] <SnoopJ> and the timeit version isolates the cell I guess
[01:17:11] *** Joins: skapata (~Skapata@user/skapata)
[01:17:22] *** Joins: guest (uid537313@id-537313.helmsley.irccloud.com)
[01:17:28] <SnoopJ> (it kinda has to, you don't want state to bleed over between repetitions)
[01:18:07] <cYmen> Yeah, I get why they did it.
[01:18:14] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[01:18:14] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Read error: Connection reset by peer)
[01:18:33] <cYmen> But I would have been okay with it. It even tells you it did repetitions. :P
[01:18:46] <JayDoubleu> <SnoopJ> "JayDoubleu, does `r"string\'with..." <- No. I have a string which I dont want to escape myself. I want something to escape it for me. Single and double quotes only
[01:19:00] <JayDoubleu> And I'm not sure if there is anything I can use for it or I should use replace or something
[01:19:22] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:19:43] <SnoopJ> I would probably do `"string'with'quotes".replace("'", r"\'")` unless you have richer escaping requirements
[01:19:58] <SnoopJ> uh and assuming there aren't any existing escaped quotes
[01:20:01] *** guest is now known as guest7776
[01:20:13] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 240 seconds)
[01:21:09] <kungp_> then some regex should do it
[01:21:25] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[01:21:28] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[01:21:30] <xheimlich> act 1: you have a problem.
[01:21:40] <xheimlich> act 2: you're going to use regexes!
[01:22:02] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[01:22:23] <grym> intermezzo: xml
[01:22:36] *** Joins: rsrx (~rsrx@109-93-126-62.dynamic.isp.telekom.rs)
[01:22:56] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[01:23:13] <SnoopJ> the closest thing the stdlib has to a quote function that does this is shlex.quote() and it isn't very close at all
[01:23:16] <Deepspeed> https://pastebin.com/Mg4dDG89           Can someone help me understand this predicate / sequence thing?  I'm not sure what the predicate is and what the options are or how to handle them.
[01:23:45] *** Joins: jayray (~jayray@user/jayray)
[01:24:26] <SnoopJ> Deepspeed, the function takes a sequence (an iterable that can be indexed with ints) and a callable that returns True/False for given values
[01:24:42] <kungp_> i guess one list of items that when passed to pred() returns true, and one where they return false
[01:25:06] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[01:25:57] <Deepspeed> back up a second.. wtf is a predicate exactly in Python?
[01:25:59] <xheimlich> act 2.5: bing is officially better than google or queries like "example of a long convoluted regex"
[01:26:02] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:26:05] <bjs> Deepspeed: nothing
[01:26:08] <SnoopJ> Deepspeed, Python doesn't have such a concept
[01:26:21] <SnoopJ> but it's a common term for "function that maps its inputs to true/false"
[01:26:21] <bjs> Deepspeed: they've called one of the arguments a "predicate"
[01:26:55] *** Quits: rsrx (~rsrx@109-93-126-62.dynamic.isp.telekom.rs) (Client Quit)
[01:27:02] <xheimlich> informally, a predicate is a function returning a boolean. or maybe a troolean, Union[bool|None]
[01:27:03] <Deepspeed> Right.  But how am I supposed to know what that argument is going to be?  Are they saying they're always going to be using this "is_odd" argument or that it can be anything?
[01:27:19] <kungp_> sounds like a filter
[01:27:21] <SnoopJ> all that you know is that it's a function and the caller is supposed to give you one that maps things to true/false
[01:27:47] *** Quits: magla (~gelignite@55d4ea14.access.ecotel.net) (Quit: Stay safe!)
[01:27:56] <Deepspeed> so the predicate would be another, separate function?
[01:27:58] <SnoopJ> yes
[01:28:05] <Deepspeed> ok..
[01:28:09] <SnoopJ> (or anything that can be called, it doesn't *have* to be a function)
[01:28:13] <grym> Deepspeed: you can pass entire functions in python, they're just objects
[01:28:21] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[01:28:23] <Deepspeed> gotcha
[01:28:37] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Ping timeout: 240 seconds)
[01:28:49] *** Quits: ubert (~Thunderbi@p200300ecdf099440f4ae4d8df8b0fc6d.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:28:49] *** ub is now known as ubert
[01:28:51] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:6d49:c345:8222)
[01:28:53] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:28:57] <grym> presumably inside partition() you're going to actually call pred()
[01:29:02] <grym> probably more than once
[01:29:07] <Deepspeed> ok, that makes sense.
[01:29:12] <kungp_> SnoopJ what's callable that's not a function?
[01:29:19] <SnoopJ> kungp_, anything that implements __call__()
[01:29:44] <kungp_> well yes but won't that kind of create a function?
[01:30:17] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:30:17] <SnoopJ> MyObject.__call__ itself is a function, but `obj = MyObject()` is not. All the same, obj() is still meaningful.
[01:31:08] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Remote host closed the connection)
[01:31:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:31:50] <SnoopJ> kungp_, https://bpa.st/LL2A
[01:31:59] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[01:32:39] <xheimlich> kungp_: real-life example https://bpa.st/CHAA
[01:33:10] <kungp_> fair enough
[01:33:17] <xheimlich> see, Transformation is not a function, it has a function.
[01:33:22] <SnoopJ> classes themselves are callables and not functions
[01:33:22] <kungp_> in my head it kinda resolves to a function
[01:33:45] *** Joins: zeden (~zeden@user/zeden)
[01:33:46] <kungp_> but i see the difference
[01:33:50] <SnoopJ> kungp_, confusingly, the bytecode instruction that handles the call is named CALL_FUNCTION even though the thing being called may not *be* a function
[01:34:08] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:34:18] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: bye)
[01:34:30] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[01:34:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:34:38] *** Joins: dav1d (~dav1d@user/dav1d)
[01:36:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:37:01] <kungp_> huh ok
[01:37:06] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:37:37] <SnoopJ> hmm, and callable() implies that things that are True under that are "some kind of function"
[01:38:53] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f9:d1b2:cd97:e581:7ed0:8fb7)
[01:39:42] *** Quits: NoxTurminal (~Noxturmin@user/noxturminal) (Quit: The Lounge - https://thelounge.chat)
[01:40:13] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Remote host closed the connection)
[01:40:37] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[01:40:41] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:41:10] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[01:43:49] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.39)
[01:43:54] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[01:44:44] <nickdiaz1wag209> i have one file script, but i want to test some functions out from the file, so i was thinking maybe i could import the function from the file within ipython. But it wont work unless i make it a package (by adding __init__.py)?
[01:45:07] *** Joins: NoxTurminal (~Noxturmin@user/noxturminal)
[01:47:05] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Quit: Leaving)
[01:47:40] <cluelessperson> nickdiaz1wag209,    I like simple unittesting.
[01:47:57] <cluelessperson> you can define a tests.py file, or directory, or just have unittests inside the module alongside the functions.
[01:48:26] <SnoopJ> nickdiaz1wag209, you don't need an __init__.py to do an import, no. But if the functionality would make sense in an installable package, it would be a good idea to make it one.
[01:48:37] <cluelessperson> like:   python -m package.tests     or   python -m unittest package
[01:48:42] <nickdiaz1wag209> oh ok, im running into issues because the file im trying to import from contains a hyphen ("-")
[01:48:53] <cluelessperson> yeah, that would do it.
[01:49:04] <nickdiaz1wag209> :/ i guess there are some work arounds...
[01:49:10] <nickdiaz1wag209> ill follow the links i found on google, thanks guys! :)
[01:49:10] <SnoopJ> ah, yes, that does present a problem
[01:49:14] <cluelessperson> probably convert that to camelCase or _
[01:49:15] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[01:49:17] *** Quits: snakey_hiss (~scott@101.100.131.161) (Ping timeout: 240 seconds)
[01:49:42] <SnoopJ> if you make it a proper package, foo-bar be importable as foo_bar, but I guess this doesn't apply to "namespace" packages (i.e. foo-bar.py by itself)
[01:49:53] <nickdiaz1wag209> i was thinking symlinking the file into another file with the same name but replacing - with _
[01:49:58] *** Joins: stonkey (~stonkey@user/stonkey)
[01:50:06] <SnoopJ> that would work too
[01:50:17] <nickdiaz1wag209> cool thx
[01:50:19] <SnoopJ> you wouldn't want to rely on it for more than just messing around, though
[01:50:25] <nickdiaz1wag209> yah just want to mess around locally
[01:50:33] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:50:41] <nickdiaz1wag209> eventually ill refactor the file name
[01:50:48] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[01:51:01] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Read error: Connection reset by peer)
[01:51:35] *** Joins: snakey_hiss (~scott@101.100.131.161)
[01:51:37] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[01:52:24] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[01:52:26] <yates> how do you generate an importable library?
[01:52:36] <Deepspeed> https://pastebin.com/iJW4fG5K    I don't have a way to test this code right off.  Can anyone tell me if it's right or broken?
[01:52:43] <SnoopJ> yates, generate from what?
[01:52:49] <yates> is there a document describing the approach?
[01:53:01] <yates> SnoopJ: i mean write, with my hands!
[01:53:06] <SnoopJ> yates, PyPA maintains a good deal of documentation on packaging at https://packaging.python.org/en/latest/
[01:53:09] <yates> from my head
[01:53:25] <SnoopJ> it's...still kind of a mess, but https://packaging.python.org/en/latest/tutorials/packaging-projects/ is probably what you want
[01:53:26] <yates> ok thanks
[01:53:34] <yates> cool
[01:55:00] <SnoopJ> the really short version: write a pyproject.toml (or perhaps setup.cfg/setup.py, or both!) with your package's metadata and arrange your files in the order that you want, making sure to have an __init__.py for each package.
[01:55:09] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Client Quit)
[01:55:36] <SnoopJ> pyproject.toml is the newer thing, and now that pip knows how to do editable installs with it, I recommend using it pretty much exclusively
[01:55:57] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[01:58:48] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[01:59:12] <Deepspeed> Does anyone see anything blatantly wrong with the little function I pasted up there? ^^
[01:59:21] <Deepspeed> I don't need you to rewrite it, just tell me if I did anything totally stupid.
[01:59:35] <grym> Deepspeed: you misspelled True
[01:59:40] <Deepspeed> lol
[01:59:48] <bjs> Deepspeed: did you want the function to return something?
[01:59:57] <grym> Deepspeed: you could equivalently just `if pred(seq[i]): ... else: ...`
[02:00:14] <kungp_> Deepspeed you can't do seq[i] like that
[02:00:23] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:00:27] <bjs> Deepspeed: also note that Python's loops loop over elements not indexes.  So `for elem in seq: if pred(elem) ...` instead
[02:00:29] <The-Compiler> Deepspeed: += adds a list to another list, I think you mean .append(seq[i])
[02:00:31] <Deepspeed> So in python, it has to be 'True' and not TRUE?
[02:00:38] *** Quits: {4144} (~{4144}@46.56.67.115) (Ping timeout: 250 seconds)
[02:00:40] <bjs> Deepspeed: yes
[02:00:42] *** Joins: ice9 (~ice9@user/ice9)
[02:00:54] <nedbat> Deepspeed: did you not run the code?
[02:01:00] <grym> for i in seq: if pred(i): ... else: ... `
[02:01:02] <Deepspeed> ok, cool.  And yes, I need it to return the lists it makes.  I need to add the return bits.
[02:01:11] <bjs> Deepspeed: Python is case-sensitive, so upper/lowercase matters.  Why can't you test this code btw?
[02:01:20] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:01:23] <Deepspeed> I don't have the functions which feed info into it
[02:01:23] *** Joins: SorinQ (~Q@79.117.171.83)
[02:01:28] <grym> Deepspeed: write one!
[02:01:37] <grym> (like, why not?)
[02:01:46] <nedbat> Deepspeed: line 3 is practically a runnable test
[02:01:57] <Deepspeed> It's my second day with python.  I'm just getting used to it.  Not sure how to write the functions to make this work.  I'm used to C.
[02:02:37] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[02:02:43] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[02:02:56] <Deepspeed> kungp_> Deepspeed you can't do seq[i] like that   <-- why not?
[02:03:12] <kungp_> because i is the actual item, not the index
[02:03:12] <SnoopJ> beacuse of what bjs said, you are getting the values in the sequence, not the indices
[02:03:13] <grym> Deepspeed: bit.ly/pyiter is a nice thing you might like to read about now
[02:03:23] <grym> especially if you're coming from C :)
[02:03:33] <SnoopJ> getting used to not thinking about indices is imo one of the biggest hurdles coming from C (or a language with the same loop syntax)
[02:03:57] *** Joins: hightower2 (~hightower@95.168.118.7)
[02:03:59] <Deepspeed> definitely not the same loop syntax lol.  It's bass ackwards to me.
[02:04:14] <grym> it cuts out the index-juggling middleman!
[02:04:20] <Deepspeed> I like that middleman
[02:04:25] <Deepspeed> lol
[02:04:28] <grym> i always run off the end of his fence :(
[02:04:34] <nedbat> Deepspeed: you are used to it, but you can get used to other things :)
[02:04:36] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:04:55] <SnoopJ> preferences aside, in Python, loops work like: `for value in iterable:`
[02:04:57] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[02:05:07] <SnoopJ> the pyiter link above is quite good, well worth reading/watching
[02:05:57] <Deepspeed> Cool.  I'll give it a look.
[02:05:57] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[02:06:09] <kungp_> can always do 'for i in range(len(iterable)) if you really want to
[02:06:17] *** Quits: RayT (~RayT@user/RayT) (Quit: Client closed)
[02:06:18] *** Quits: hightower2 (~hightower@95.168.118.7) (Read error: Connection reset by peer)
[02:06:30] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[02:06:53] <kungp_> you shouldn't though
[02:07:08] <SnoopJ> it may not even be possible if `iterable` doesn't *have* a length
[02:07:21] <kungp_> true
[02:07:28] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:07:29] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[02:07:40] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:08:01] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[02:09:01] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:12:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:12:29] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:12:58] *** Quits: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:13:16] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:13:31] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[02:13:48] *** Joins: {4144} (~{4144}@46.56.68.191)
[02:14:37] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[02:14:55] *** Quits: snakey_hiss (~scott@101.100.131.161) (Remote host closed the connection)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[02:15:47] <Deepspeed> ok, I wrote more on it, but it seems to say my declaration of truelist = [] makes an int.  How do i force it to be a list?
[02:15:51] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:15:59] <bjs> Deepspeed: that is a list
[02:16:18] <bjs> why do you say it's an int?
[02:16:40] *** Joins: humberto1 (~humbertow@189.236.30.209)
[02:16:44] <Deepspeed> my terminal says so.  At least I think that's what it's saying.
[02:16:58] <bjs> Deepspeed: okay... can you show us what the code is and what you did in the terminal so we can see?
[02:17:23] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[02:17:26] <Deepspeed> https://pastebin.com/VCrE2vy5
[02:17:28] <Deepspeed> yeah, pasting now.
[02:17:44] <Deepspeed>   File "partition.py", line 9, in partition
[02:17:45] <Deepspeed>     falselist += seq[i]
[02:17:45] <Deepspeed> TypeError: 'int' object is not iterable
[02:18:00] <bjs> Deepspeed: did you mean to .append() rather than +=
[02:18:08] <Deepspeed> probably...
[02:18:12] <bjs> Deepspeed: it's saying that seq[i] is an int, not that falselist is an int
[02:18:16] *** Joins: Sora2 (~Guest@static.82.113.12.49.clients.your-server.de)
[02:18:20] <Deepspeed> ok
[02:18:30] *** Joins: marcello1 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3)
[02:19:42] *** Quits: Sora (~Guest@user/sora) (Ping timeout: 250 seconds)
[02:20:01] <Deepspeed> I think I got it now :)
[02:20:02] <Deepspeed> thanks
[02:20:08] <Deepspeed> it's working
[02:20:40] <bjs> Deepspeed: note you still have the seq[i] stuff so you want to fix that
[02:21:11] <Deepspeed> fix it how?  The code works now that I used append instead of +=.
[02:21:16] *** Joins: snakey_hiss (~scott@101.100.131.161)
[02:21:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:21:37] <bjs> Deepspeed: like we said, in Python `for` loops loop over the *elements* not the indexes
[02:21:54] <bjs> it happens to work for range(10) because range(10)[i] == i :P
[02:21:55] *** Joins: alex11 (~alex11@user/alex11)
[02:21:56] <Deepspeed> so just use i instaead of seq[i]?
[02:22:09] <bjs> Deepspeed: yes (although I might not call it "i" otherwise you might think it's an index)
[02:22:32] *** Quits: cosimone (~user@93-47-229-195.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:23:41] <Deepspeed> https://pastebin.com/HvdcvRxj
[02:23:43] <Deepspeed> better?
[02:25:14] <nedbat> Deepspeed: don't call it i
[02:25:40] <SnoopJ> `val` or `elem` are nice names
[02:26:02] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f9:d1b2:cd97:e581:7ed0:8fb7) (Read error: Network is unreachable)
[02:26:07] <Deepspeed> alright.  Changed to val.
[02:26:16] <bjs> Deepspeed: you also don't need the `== True` part if you really want to make the code as slick as possible
[02:26:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:26:49] <SnoopJ> in the same way that you can write `if (thing) { ... }` instead of `if (thing == true) { ... }` in C
[02:26:58] <Deepspeed> so it does the C thing of automatically assuming you mean '== True' if you don't put any other conditions there?
[02:27:05] <Deepspeed> cool
[02:27:09] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[02:27:34] <SnoopJ> it's slightly more complex, you can think of it as equivalent to `if bool(thing):` (i.e. if the thing is not a bool, it will be turned into one first)
[02:27:40] <nedbat> Deepspeed: technically, it's not the same as `== True`.  for instance,  `if 2:` will run the code, but `2 == True` is false.
[02:27:54] <nedbat> (thought that is very similar to C)
[02:28:01] <bjs> nedbat: it is :P
[02:28:05] <bjs> but in Python it's more principled
[02:28:19] <nedbat> idk that we need to make judgements like that :)
[02:28:20] <SnoopJ> is the principle "bools are actually ints?" ;P
[02:28:22] <Deepspeed> well yeah, true/false are boolean conditions.  Same in C.
[02:28:31] <Soni> is there a DB-API 2.0 wrapper that just uses a mutex?
[02:28:44] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[02:29:19] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[02:29:22] <grym> 1==True, though ^_^
[02:29:32] <Deepspeed> yep :)
[02:29:40] <grym> (this is _gross_, but here we are)
[02:29:56] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[02:29:58] <SnoopJ> the equivalence is not as gross as bool being a subtype, but it is what it is
[02:29:59] *** Joins: vlm (~vlm@user/vlm)
[02:30:14] <grym> yeah that's more of what i was aiming at
[02:30:14] <bjs> Deepspeed: note that it's not just conversion to integers,  in Python all types have a truthiness and `if` does that for you automatically
[02:30:14] <Deepspeed> lol well 0 == off/false.  1 == on/true.  I'm used to that.
[02:30:45] <grym> Deepspeed: `if "foo":` will also enter the if-branch; ie, nonempty strings act like they're true in a boolean context
[02:31:20] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:31:24] <Deepspeed> yeah, some boolean conditions like that work like "if the thing exists".  Those annoy me.
[02:31:32] <SnoopJ> https://docs.python.org/3/library/stdtypes.html#truth
[02:32:06] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:32:07] <grym> Deepspeed: this might spin your head: `if partition:` is also a valid test.  (and function objects return true)
[02:32:15] <grym> s/return true/evaluate truthily
[02:32:26] <SnoopJ> it's simpler to say that all objects do, except the ones that don't
[02:32:29] <Deepspeed> I hope I don't have to do a lot of python at this job lol
[02:32:37] <grym> you do get used to it
[02:33:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:23] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[02:35:02] <Deepspeed> I'm sure it will get easier.  But it's like switching from English to Hebrew.  Just because I can doesn't mean I really want to :P
[02:35:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[02:35:40] *** Joins: blackleitus (~blackleit@189.195.195.100)
[02:35:44] <grym> chances it'll find a display bug in your terminal: vastly smaller
[02:36:36] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[02:36:40] <SnoopJ> eh?
[02:36:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:36:46] <grym> pynames1 and pyiter are going to be very useful for you to really think through, though.  that and playing around at the repl
[02:36:58] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[02:37:07] <grym> RTL text has made putty blow up on me before, in ages past of crappier support for such things
[02:37:12] *** Joins: ghormoon_ (~ghormoon@ghorland.net)
[02:37:21] <SnoopJ> oh, you were talking about Hebrew, not C.
[02:37:23] <grym> yeah
[02:37:25] *** Quits: toxictra1h (~toxictras@host-91-237-158-49.anfa.net.pl) (Ping timeout: 240 seconds)
[02:37:25] *** Quits: grawity (grawity@star.nullroute.lt) (Ping timeout: 240 seconds)
[02:37:25] *** Quits: ghormoon (~ghormoon@ghorland.net) (Ping timeout: 240 seconds)
[02:38:25] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[02:38:37] *** ghormoon_ is now known as ghormoon
[02:38:50] *** Joins: grawity (grawity@star.nullroute.lt)
[02:40:05] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:917f:5682:2150:7527) (Quit: Leaving)
[02:42:06] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:42:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[02:42:56] *** Quits: marcello1 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3) (Read error: Connection reset by peer)
[02:42:59] *** Joins: marcello2 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3)
[02:43:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:44:42] *** Joins: bit0r (~viktor@195.32.87.115)
[02:45:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:45:18] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[02:45:46] <Soni> uh this looks like correct use of threads yeah? https://bpa.st/RFAA
[02:46:46] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:47:16] *** Joins: fikran (~fikran@user/fikran)
[02:49:09] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[02:49:35] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[02:49:53] *** Joins: audiocat (~audio@user/audio)
[02:49:53] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:50:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:50:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:50:57] <Soni> uh hmm...
[02:51:15] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:51:16] <Soni> subprocess.CalledProcessError: Command '('git', 'clone', '--bare', '--shared', PosixPath('/home/soniex2/.cache/ganarchy/ganarchy-cache.git'), PosixPath('/home/soniex2/.cache/ganarchy/ganarchy-fetch-0.git'))' returned non-zero exit status 128.
[02:52:02] *** Quits: elBit0r (~victor@195.32.87.115) (Quit: Leaving)
[02:52:07] *** Joins: millido (~millido@84.210.150.128)
[02:52:20] <Soni> oh, that seems to be "the thing already exists"
[02:52:23] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:bdd7:db0a:643d:2c50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:30] <Soni> ah well, time to figure out wtf we did wrong
[02:52:45] <bjs> Soni: doesn't git give you an error on stderr
[02:53:17] <Soni> bjs: yes but because stderr is PIPE it doesn't show up in the exception
[02:53:19] *** bit0r is now known as elBit0r
[02:53:30] <bjs> Soni: the CompletedProcess object has a .stderr attribute
[02:53:49] <Soni> bjs: check=True
[02:53:50] <bjs> sorry the CalledProcessError* object
[02:53:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:53:56] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[02:54:00] <Soni> bjs: yes and it's useless if it just gets re-raised apparently
[02:54:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[02:54:12] <bjs> Soni: what do you mean?
[02:54:18] * SnoopJ isn't sure what that means, either
[02:54:34] <Soni> bjs: if you just raise one of those and let it bubble up, it doesn't print the stderr
[02:54:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[02:54:44] <Soni> just the error itself
[02:54:44] <KnowledgeShark> Having some difficulties. I am reading pandas documentation and for datatype "dtype"; I don't quite understand how to specify column #5 on my script; default is TEXT and my data is too long. I need to specify it to LONGTEXT. This is what I am working with. It worked fine until I got to row 2. https://dpaste.com/6T4G7MMQG (Thanks if anyone knows how I achieve this). *stumped*.
[02:54:48] <bjs> Soni: right, if you catch it and print e.stderr you'll see it probably
[02:54:51] <SnoopJ> yes, you will have to write your own error handling to make use of it
[02:54:53] <bjs> even if you delete the try/except in 30 seconds later
[02:55:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[02:55:15] <Soni> anyway that was easier to debug than we expected
[02:55:17] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[02:55:58] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:56:50] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[02:56:51] <Soni> now here's hoping this actually does work
[02:57:51] <Soni> sqlite3 supports sharing a db between threads yeah?
[02:57:52] <bjs> Soni: functools.partial is much better than a lambda
[02:58:03] <bjs> you won't have to worry about scoping and when variables are accessed etc
[02:58:07] *** Joins: summersault (~summersau@179.221.251.36)
[02:58:50] <bjs> Soni: you can share a db but can't share a connection
[02:58:55] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:59:02] *** Joins: skapata (~Skapata@user/skapata)
[02:59:19] <Soni> bjs: isn't that what threading.Lock is for?
[02:59:32] <bjs> Soni: well if you put a Lock around it then you can share anything you want.
[02:59:36] *** Joins: dob1_ (~dob1@user/dob1)
[02:59:38] <Soni> By default, check_same_thread is True and only the creating thread may use the connection. If set False, the returned connection may be shared across multiple threads. When using multiple threads with the same connection writing operations should be serialized by the user to avoid data corruption.
[03:00:00] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:6d49:c345:8222) (Ping timeout: 250 seconds)
[03:00:08] <SnoopJ> right, so it would be better to use a separate connection on each thread
[03:00:19] <Soni> SnoopJ: eh, it's not the bottleneck
[03:00:26] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 250 seconds)
[03:00:28] <SnoopJ> Soni, I don't know what that means
[03:00:46] <bjs> Soni: yeah, it has a built-in check that you aren't sharing connection objects. if you do want to share connection objects you have to disable that check, but then it's up to you to use locking to make sure there's not actually any races
[03:00:55] <bjs> well no data races
[03:00:59] <SnoopJ> yea, you can turn off the check and get zero guarantees about safety
[03:01:04] <Soni> SnoopJ: so this thing is slow and benefits from threads because it runs a lot of git fetch. the sqlite stuff is the fast part, the git fetch stuff is the part that takes forever.
[03:01:20] <SnoopJ> Soni, if you say so, sounds like you're on to another topic entirely now
[03:02:09] <Deepspeed> this is off topic, but does anyone know a good place to get help with ubuntu packaging?  The channel for it on this server is pretty dead.
[03:03:16] <Soni> point being wrapping sqlite connection with Lock doesn't make this noticeably slower. in fact it makes it faster, because we get to use threads at all.
[03:03:22] <SnoopJ> Deepspeed, are you talking about #ubuntu? I've never asked a packaging question there but they've been active/helpful for other ubuntu matters.
[03:03:31] <bjs> Soni: sure
[03:03:38] <bjs> Soni: you can share whatever you want between threads if you use a Lock
[03:03:41] <Deepspeed> I meant #ubuntu-packaging.  Haven't tried that chan yet.  Let me check.  Thanks.
[03:03:54] <SnoopJ> if #ubuntu can't answer your question they might point you in the direction of some more help
[03:04:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:06:11] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:06:16] <SnoopJ> bjs, at the expense of rewriting synchronization code that already exists in this case, heh
[03:06:42] *** Quits: marcello2 (~mp@2001:1a81:1204:8a00:3991:cbbc:67fd:83b3) (Read error: Connection reset by peer)
[03:06:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[03:06:48] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[03:07:34] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:07:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:07:49] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:09:15] *** Quits: zeden (~zeden@user/zeden) (Remote host closed the connection)
[03:09:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[03:09:56] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[03:10:00] <Soni> SnoopJ: old: https://soniex2.autistic.space/git-repos/ganarchy.git/browse/commits/332368115922b8b61ae4471681172a413fb42d63/tree/ganarchy/cli/run_targets.py/ new: https://soniex2.autistic.space/git-repos/ganarchy.git/browse/commits/e205879303c2aaeb9ea1a537ce3a8145ebe6fce0/tree/ganarchy/cli/run_targets.py/
[03:10:04] *** Joins: zeden (~zeden@user/zeden)
[03:10:20] <Soni> not sure how you'd bolt on thread support into this without using a Lock
[03:10:42] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[03:10:42] *** Joins: greaser|q (greaser@user/greasemonkey)
[03:10:47] <bjs> Soni: you'd need to make a connection-per-thread
[03:10:53] *** greaser|q is now known as GreaseMonkey
[03:11:03] <Soni> and yes, we really mean "bolt on", because we really don't wanna do this properly with the whole "rewrite it in rust" thing in the queue
[03:11:16] <bjs> I'm still unsure if that Thread(target=lambda: ...) is safe, I think it is but I still would use partial
[03:11:21] <bjs>  so you don't have to think
[03:12:27] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:12:31] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:12:39] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[03:12:40] <Soni> bjs: fwiw the functions also take upvalues
[03:12:49] <bjs> Soni: upvalues?
[03:12:54] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:5de6:1c42:8396:cb23) (Quit: CodePoint)
[03:12:55] <grym> not much, what's up value you?
[03:12:57] *** Quits: dreamon (~dreamon@pd9503284.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:13:01] <Soni> bjs: uhh nonlocals?
[03:13:05] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:917f:5682:2150:7527)
[03:13:25] <Soni> or uh what are we missing here?
[03:13:29] *** Quits: Guddu (~Guddu@122.161.91.9) (Read error: Connection reset by peer)
[03:14:17] <Soni> oh, because each run of the loop uses the same variables
[03:14:18] *** Joins: hyiltiz (~quassel@31.220.5.250)
[03:14:20] <bjs> Soni: `lambda: f(i)` is not exactly the same as `partial(f, i)` because in the lambda case `i` is evaluated when the function is called
[03:14:25] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[03:14:26] <bjs> which happens *in the other thread*
[03:14:31] <bjs> So just be aware of that.
[03:14:46] <ac_slater> holy cow, how do people even use pycharm? Basic shit like using an existing venv just doesnt work
[03:14:56] <Soni> yeah so lambda i=i, work_repo=work_repo: ...?
[03:15:00] <bjs> Soni: or partial
[03:15:09] <johnkeats6> so is it actually a good idea to do dependency injection using super?
[03:15:11] <Soni> bjs: this is intentionally bad code
[03:15:26] <bjs> Soni: then why are you asking how to make it better if you don't want to make it better :l
[03:15:51] <Soni> bjs: well, data races are bad
[03:16:11] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:16:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[03:17:01] <Soni> we're too used to rust where stuff like this just wouldn't compile
[03:17:01] <Soni> but thanks for pointing that out
[03:17:11] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[03:17:21] *** Joins: blackleitus (~blackleit@189.195.195.100)
[03:18:10] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[03:18:16] <KnowledgeShark> Solved: https://dpaste.com/5Z5KBF3WQ | Defining Pandas Datatype "dtype" of CSV->SQL [MariaDB 10.3.x] column name from default "TEXT" to specified "LONGTEXT". Thank you everyone for this channel! :)
[03:18:53] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[03:19:04] <nedbat> ac_slater: i find that when I think a widely used thing is stupid, that I have a different model of what it is trying to do than its creators did
[03:20:03] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[03:20:11] <ac_slater> nedbat: yea same. The shame of large tools is their audience is likely beginners
[03:20:29] <bjs> ac_slater: https://www.jetbrains.com/help/pycharm/configuring-python-interpreter.html#add-existing-interpreter  doesn't this cover your case?
[03:20:38] <bjs> I don't think PyCharm is aimed at beginners
[03:20:50] <ac_slater> bjs: no sadly. They just don't call "activate". They just invoke the intepreter
[03:20:55] <ac_slater> I think it is
[03:21:07] <bjs> ac_slater: you think what is?  why would they call activate
[03:21:32] *** Quits: amrx (~amrx@access-63-249-98-253.static.cruzio.net) (Read error: Connection reset by peer)
[03:21:34] <ac_slater> bjs: fine. Don't call activate but at least look at the site_packages in the venv
[03:21:36] <ac_slater> they dont even do that
[03:21:39] <aphysically> jinsun: https://github.com/microsoft/pyright/issues/2906
[03:21:46] <bjs> ac_slater: if you use the venv interpreter it will see the venv packages
[03:21:51] <bjs> that are installed into the venv
[03:22:14] <nedbat> ac_slater: can you print sys.executable and sys.path ?
[03:22:49] *** Joins: pepper (~pepper@user/pepper)
[03:22:58] <grym> ac_slater: autodetection of venvs is semi-tricky in general (everyone puts theirs somewhere else!) , but there's a direnv plugin for pycharm that's quite good
[03:23:17] <ac_slater> nedbat: sys.path includes /usr/lib... so it's weird
[03:23:18] <grym> it's gotten better lately; reconfiguring my interpreter location by clickig through menus is tiresome
[03:23:27] <nedbat> ac_slater: what is weird about that?
[03:24:02] <ac_slater> I think pycharm wants to use my global path for site_packages and venv for interpreter
[03:24:02] <nedbat> (I'm not saying it's not weird. i'm saying i don't know what part of it is weird)
[03:24:20] <ac_slater> it's a hint where use the GUI to install a package (e.g., urllib3) and it asks for sudo
[03:24:22] <nedbat> ac_slater: what is telling you that it's not using the venv site package?
[03:24:50] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:25:13] *** Quits: elBit0r (~viktor@195.32.87.115) (Remote host closed the connection)
[03:25:17] <ac_slater> for one, it doesnt list the packages in the GUI and asks to install setuptools (which is included in the venv)
[03:25:32] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:25:38] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[03:26:03] *** Joins: blackleitus (~blackleit@189.195.195.100)
[03:26:12] <ac_slater> if I do this `python -m venv venv ; source venv/bin/activate && pip install urrlib3 ; pip list` I'll see urllib3. If I point pycharm to that venv, it doesnt list urllib3
[03:26:37] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[03:26:57] <ac_slater> (typos aside ;))
[03:27:00] <grym> ac_slater: yes it will
[03:27:14] <ac_slater> grym: hmm I can't get it to
[03:27:38] <ac_slater> glat it should work! Maybe its me then :(
[03:28:19] <ac_slater> glad *
[03:28:27] <bjs> ac_slater: what does venv/bin/python -m pip list show
[03:28:53] <bjs> just to check you actually installed into the venv,  and then check that the interpreter you're using in PyCharm really is the venv you just made
[03:29:03] <bjs> (e.g. by printing sys.path)
[03:29:07] <ac_slater> ok I think I figured out the problem... the venv was created in a docker container against deb11. Maybe that's an issue
[03:29:38] <ac_slater> the simple command line above with urllib3 does totally work. So my venv I'm trying to use is just a bit incompatible with my host
[03:29:58] <ac_slater> maybe I should pay the $80 for proper docker support
[03:32:17] <ac_slater> sorry to bother you guys, thanks for the help
[03:33:12] *** Joins: d1cor (~diego@179.63.242.120)
[03:34:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:35:20] *** Joins: bluedust (~bluedust@117.241.183.103)
[03:38:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[03:38:00] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[03:38:37] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:38:54] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[03:39:55] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[03:40:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:40:28] *** Joins: BurgerW (~BurgerW@222.244.79.166)
[03:41:10] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:41:36] *** Quits: marcello42 (~mp@2001:1a81:1204:8a00:ea0c:2047:6cd8:7a12) (Ping timeout: 250 seconds)
[03:42:27] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:42:41] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 256 seconds)
[03:42:51] *** Quits: lord_daemon (~lord_daem@187.36.203.244) (Read error: Connection reset by peer)
[03:43:40] *** Joins: marcello42 (~mp@2001:1a81:121a:ec00:31d0:9741:cc4a:a42b)
[03:44:56] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b) (Ping timeout: 268 seconds)
[03:45:05] *** Joins: humberto1 (~humbertow@189.236.30.209)
[03:45:08] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[03:46:12] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:46:17] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[03:46:17] *** Quits: BurgerW (~BurgerW@222.244.79.166) (Ping timeout: 240 seconds)
[03:46:54] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Quit: WeeChat 3.4)
[03:47:11] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[03:47:47] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[03:48:38] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:50:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[03:51:01] *** Joins: blackleitus (~blackleit@189.195.195.100)
[03:51:13] <SnoopJ> ac_slater, you're using the venv in a context other than the one in which it was created?
[03:51:38] <ac_slater> SnoopJ: I was creating a venv on a different machine (docker) and trying to use it on my host with pycharm
[03:51:59] <ac_slater> apparently it's a no-no. It's binary compatible but something isn't lining up
[03:52:21] <SnoopJ> venvs have a lot of hard-coded paths in them so they're very very hard to relocate and it's almost never worth trying to do it
[03:52:53] <SnoopJ> the only case in which I've done it is making a venv in one docker stage and copying it into another, and this only made sense there because the images had the same base
[03:52:55] *** Quits: d1cor (~diego@179.63.242.120) (Read error: Connection reset by peer)
[03:53:03] <foul_owl> How do you create a defaultdict of tuple? I'm getting the error "first argument must be callable or None"
[03:53:17] *** Quits: aknot (~aknot@2603:900a:1503:17bb:8061:bf4c:95c9:6d2) (Ping timeout: 240 seconds)
[03:53:30] <SnoopJ> foul_owl, does `defaultdict(tuple)` not work for you?
[03:53:37] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:8d27:e107:2edb:b4a9) (Ping timeout: 240 seconds)
[03:53:51] <ac_slater> SnoopJ: roger that. Most paths are local to the venv, but there is some issues
[03:54:02] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:54:13] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[03:54:14] <ac_slater> anyway, I'm trying to move my docker python runtime to a conda env... maybe it'll solve someother things.
[03:54:14] <foul_owl> That's what throws the error
[03:54:26] <SnoopJ> ac_slater, yea, enough of them that the community is largely settled on "don't try, just remake the env"
[03:54:33] *** Joins: tomasfarias9 (~tomasfari@user/tomasfarias)
[03:54:35] <SnoopJ> foul_owl, can you share the complete code and error report?
[03:54:40] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:54:43] <foul_owl> https://pastebin.com/1AR3DQPy
[03:55:14] <SnoopJ> foul_owl, you want a dict whose default value is *that* tuple?
[03:56:09] <SnoopJ> that'd be `defaultdict(lambda: (1.0, 1.0, 1.0, 1.0))`
[03:56:17] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[03:56:17] *** tomasfarias9 is now known as tomasfarias
[03:56:17] *** Joins: cyphase (~cyphase@user/cyphase)
[03:56:23] <foul_owl> Yes, exactly
[03:56:24] <foul_owl> Thank you!!!
[03:56:39] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Ping timeout: 268 seconds)
[03:57:16] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 268 seconds)
[03:57:32] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[03:58:27] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Client Quit)
[03:58:59] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[04:01:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:01:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:03:20] <SnoopJ> foul_owl, does it make sense?
[04:04:03] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[04:04:03] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:04:04] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:04:45] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 250 seconds)
[04:05:35] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:d1f9:413d:96f3:931c) (Quit: Konversation terminated!)
[04:10:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:10:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:11:01] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[04:11:08] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:11:54] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:14:06] *** Quits: emerent (~quassel@p200300cd57044360ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:14:26] *** Quits: avu (~jan@user/avu) (Quit: avu)
[04:14:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:14:47] <blackleitus> what exactly means integration developer? someone know integrate codes from some else ( github, own code , third party codes ) into a functional one with easy to integration , scalability, faster, different vertical industry application etc.
[04:14:49] *** Joins: emerent (~quassel@p200300cd5704433bba27ebfffed28a59.dip0.t-ipconnect.de)
[04:14:53] <toma> SnoopJ: Can you explain the defaultdict, lambda thing? I didn't get it.
[04:15:26] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[04:15:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:15:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:15:41] *** Joins: avu (~jan@user/avu)
[04:16:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:16:01] <blackleitus> lambda is an anonymous function toma
[04:16:05] *** Joins: Wulf (~Wulf@user/wulf)
[04:16:55] *** Joins: pepper (~pepper@user/pepper)
[04:17:23] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[04:17:26] <blackleitus> defaultdict is a high level approach that if one key doesnt exit instead of throwing an error , creates a new entry
[04:17:28] <toma> blackleitus: but why can't I just put a tuple in the defaultdict() thing? I read the __init__ for defaultdict() (__init__(self, /, *args, **kwargs)
[04:17:28] <toma> ) and that didn't help me as I don't know what that  slash is doing in there.
[04:17:57] *** Joins: freefall (~owner@2600:6c40:1600:39ec:88fa:94dc:210a:d16e)
[04:18:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:18:35] <blackleitus> that slash , I am not sure , but it needs to dig where it comes from or context
[04:18:46] <braxas> I'm in no way affiliated with psf, but please do consider becoming a sponsor of psf: https://github.com/sponsors/python
[04:18:53] <toma> blackleitus: thanks. I should probably become more familiar with both lambda and defaultdict before trying to understand the two together :)
[04:18:55] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:18:56] <bjs> toma: defaultdict takes a function which it calls to create the default value
[04:19:33] <bjs> toma: for `d = defaultdict(func)` when I go `d["hello"]` if the key doesn't exist, it creates it with a new value got by calling func()
[04:19:50] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 252 seconds)
[04:20:30] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[04:20:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[04:20:58] <bjs> toma: so `lambda: (1.0, 1.0, 1.0, 1.0)` is just a function that always returns that tuple.  This is just how defaultdict works, maybe it'd have been nicer if it was designed differently so you didn't need the function/lambda at all
[04:21:12] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:21:18] <toma> bjs: cool. thanks that makes sense.
[04:21:59] *** Joins: jazzy (~jaziz@user/jaziz)
[04:22:00] <toma> can you tell me what that slash thing means in the __init__(self, /, *args, **kwargs) from help(defaultdict)
[04:22:24] <bjs> toma: it means self is a positional argument
[04:22:41] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[04:22:55] <toma> bjs: I'm gonna google that one. Thanks.
[04:22:56] <bjs> toma: dict(self=42)  # is valid, because dict.__init__'s "self" argument is positional so this doesn't clash
[04:23:35] <toma> bjs: I think I have to re-learn classes because it's zooming over me. Hopefully Think Python 2e does a good job of explaining it.
[04:23:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:23:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:23:58] <bjs> it's an absolutely tiny and insignificant point and it's a shame that the / pollutes so many documentation things when it's 99.9999998% of the time totally irrelevant
[04:24:23] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:24:29] * SnoopJ considers a joke about how there'd be room for return types if / were dropped
[04:24:38] <SnoopJ> which reminds me, I should close that PR/ticket
[04:24:48] <toma> bjs: no worries. I'm still in the infancy phase of learning python, so it was just something that looked different.
[04:24:51] <toma> bjs: thanks.
[04:24:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:25:14] <bjs> SnoopJ: you mean return values
[04:25:22] <SnoopJ> I do
[04:25:36] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:25:40] <bjs> Annotating every function with its return type was my idea and would totally be rejected
[04:25:45] <bjs> so I don't even bother with a PR :P
[04:25:59] <bjs> even though it's obviously a good idea :(
[04:26:12] <toma> When I type "help(type(self))" in the interpreter I get a NameError. Can someone else try too?
[04:26:34] <bjs> toma: well, is self defined anywhere?
[04:26:37] <SnoopJ> toma, that's happening because `self` doesn't refer to anything
[04:26:56] <SnoopJ> (it has no special meaning in Python, it's just convention to use it to refer to "this instance")
[04:27:06] <toma> __init__(self, /, *args, **kwargs)
[04:27:12] <toma> oops p[lease ignore that
[04:27:19] <bjs> toma: those are arguments to the function, they are not defined outside the function
[04:27:22] <bjs> so you can't get their type
[04:27:25] <bjs> oh okay, I'll ignore :)
[04:27:53] <SnoopJ> `self` in an __init__() will be an instance of whatever the class is
[04:27:59] <toma> in the help(defaultdict) under __init__ it said "Initialize self.  See help(type(self)) for accurate signature" so I thought I could type it
[04:28:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:28:16] <freefall> ok im stumped on this one
[04:28:26] <freefall> https://bpa.st/VDGQ
[04:28:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:28:58] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[04:29:24] <freefall> i keep getting a typeerror: 'float' object is not subscriptable.... i done try the google searching it an everything but still hitting a wall
[04:29:30] <SnoopJ> toma, that's "just" the default docstring for __init__
[04:29:45] <SnoopJ> if you do `class Foo: pass` and then `help(Foo.__init__)` you'll see the same thing
[04:29:57] <bjs> freefall: on line 33?
[04:30:01] <freefall> https://stackoverflow.com/questions/61104362/how-to-get-actual-stock-prices-with-yfinance
[04:30:09] <toma> k. as long as it's not my python installation messing up.
[04:30:21] <freefall> it has to do with the ['close'] part
[04:30:22] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[04:30:35] <SnoopJ> nope, just another example of less than awesome documentation :|
[04:30:41] <bjs> freefall: well, what is just stock.info['regularMarketPrice']
[04:31:18] <freefall> im not sure what the need for the close i dont know if the yfinance need it as it leave a file open or not
[04:31:18] <SnoopJ> toma, in the case of defaultdict, it's telling you to look at `help(defaultdict)` for more information
[04:31:23] <bjs> freefall: it sounds like stock.info['regularMarketPrice'] returned a number, not something that had a "Close"
[04:31:35] <toma> SnoopJ: hmmm, that's what I was reading :)
[04:31:37] <SnoopJ> toma, where it tells you that the expected signature is `defaultdict(default_factory[, ...])`
[04:31:44] <InPhase> freefall: Add in:  print('stock_info:', stock.info.__class__, stock.info) right before line 33
[04:32:00] <SnoopJ> toma, well, kinda. Looking at the help() for a class will *also* show you the docs for the methods on the class.
[04:32:24] <SnoopJ> But this pretty obtuse message is saying "look at the class's documentation for more specific information, I can't tell you more because I'm a default message"
[04:32:34] <freefall> no cause if you move the ['close'] anywhere then it error at that line it place at
[04:32:39] <toma> SnoopJ: we're over my head. I'm on Chapter 13 of TP2e and classes are Chapter 15-17. I think I should read those chapters first before I ask too many questions here.
[04:32:58] <SnoopJ> toma, I'm just trying to explain why the help that shows up for __init__() is worthless here
[04:32:59] <InPhase> freefall: Oh, repeat what I said but for stock.info['regularMarketPrice']
[04:33:00] <toma> SnoopJ: but I appreciate the help
[04:33:02] <freefall> like if you move it to where you have it return the variable it error there
[04:33:09] *** Joins: Elodin (~weechat@user/elodin)
[04:33:19] <SnoopJ> Think Python does a pretty good job overall, so it's a decent reference if you're new to the idea of classes
[04:33:33] <toma> SnoopJ: cool. thanks. sorry I just am apprehensive of wasting your time when it's something I need to cover myself and that I hopefully can resolve on my own.
[04:33:39] *** Joins: constxd_ (~brad@142.167.170.88)
[04:33:46] <InPhase> freefall: Whenever you get an error like that, step 1 is to see what the data is that you're really working with.  So, print it out, see what it really is, and then work backwards from there to figure out why.
[04:34:03] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:34:12] <toma> SnoopJ: Is there a book that you would be a good book after TP for classes?
[04:34:29] <freefall> right i have try using float() or int() at the variable .. i thought maybe it was a list or something but it isnt as i have it print what in it
[04:34:43] <toma> SnoopJ: maybe Design Patterns by Gamma and Helm?
[04:34:53] <InPhase> freefall: Show the output of what I requested...
[04:35:44] <SnoopJ> toma, it depends on what you want to learn, but for sure if you are *only* reading books, you won't really learn much at all. With any text you choose, you should be writing programs to play around with the ideas you're learning
[04:35:51] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[04:35:55] <InPhase> freefall:  As, print("stock_info['regularMarketPrice']", stock_info['regularMarketPrice'].__class__, stock_info['regularMarketPrice'])
[04:35:58] <toma> SnoopJ: doing that :)
[04:36:05] *** Joins: BUSY (~BUSY@user/busy)
[04:36:19] <toma> SnoopJ: not writing enough code but definately doing some.
[04:36:20] *** Joins: ebrau (~ebrau@142.126.175.200)
[04:36:33] <SnoopJ> toma, TP and/or the official tutorial on classes (https://docs.python.org/3/tutorial/classes.html) should be enough to get you off the starting line, and the rest is "just" reading and writing code over time
[04:36:55] <freefall> https://bpa.st/7HFA
[04:37:10] <SnoopJ> this is not to say useful things aren't in other books, but it's all using the same building blocks, really.
[04:37:21] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[04:37:29] <freefall> oh ok give me a moment to put that in
[04:37:41] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[04:37:44] <bjs> freefall: is 43.99 the result of printing stock.info['regularMarketPrice'] ?
[04:37:48] <bjs> and if so, is that the number you wanted to get?
[04:37:53] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[04:38:07] <InPhase> freefall: There was a reason I typed it out the way I did...
[04:39:09] <toma> SnoopJ: thanks didn't know about the official tutorials.
[04:39:11] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:40:45] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[04:41:21] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:41:42] <freefall> it didnt print that
[04:41:56] <freefall> i got what i put in ""
[04:42:16] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7383:58e3:41e7:460a) (Ping timeout: 250 seconds)
[04:42:56] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[04:43:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:43:18] <bjs> freefall: I don't know what you mean by that
[04:43:20] <bjs> what did you put in "" ?
[04:43:27] <InPhase> freefall: It looks like you might have changed your code to:  returnqoute = float(getqoute);   return returnqoute ['Close'] #[0]
[04:44:35] <InPhase> freefall: If I have that correct, this is definitely going to fail.  You are doing a dictionary key lookup on a float, which is, as it says, incorrect.  But you should also pastebin code alongside the error that generates this so that these match.  Otherwise we're stumbling around in the dark unable to see the code that makes the errors.
[04:44:40] <freefall> i try that and it seem to still die at the close
[04:44:46] <SnoopJ> toma, also, don't feel apprehensive about getting help here in #python. It's topical, after all. To paraphrase someone in the local user group: "we're all beginners, but some of us have been doing it longer"
[04:45:06] <bjs> freefall: what is the close doing though? it sounds like you already got a number out without the close
[04:45:16] <bjs> is the number the number you wanted? are you trying to get something different with that close?
[04:45:22] <freefall> i really dont know bjs
[04:45:37] <freefall> https://stackoverflow.com/questions/61104362/how-to-get-actual-stock-prices-with-yfinance
[04:45:45] <freefall> it even used in these example
[04:45:47] <bjs> freefall: okay well,  it sounds like just stock.info['regularMarketPrice'] returned a number
[04:45:59] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:917f:5682:2150:7527) (Ping timeout: 268 seconds)
[04:46:22] *** Joins: BurgerW (~BurgerW@222.244.79.166)
[04:46:23] <bjs> freefall: the ones with close look at the history(), the ones with regularMarketPrice look at stock.info
[04:46:31] <bjs> you may have tried to merge the two ?
[04:48:55] <freefall> https://bpa.st/53KQ
[04:49:05] <freefall> this is the program with the output im getting
[04:49:47] <bjs> freefall: sure, your program is printing a number out.  Is that number the one you wanted?  Do you actually know what value you are expecting to see?
[04:50:15] <freefall> that is the number that should be come back as that is adient plc closing number of today
[04:50:19] *** Joins: nickdiaz3wag209 (~bjpenn_@98.42.87.100)
[04:50:54] *** Quits: ebrau (~ebrau@142.126.175.200) (Quit: WeeChat 3.4)
[04:51:22] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[04:51:32] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[04:52:33] <freefall> only thing from google is 'close' has to do with file command.. not sure what connecting to the internet has to do with a file handle
[04:52:37] *** Quits: marcello42 (~mp@2001:1a81:121a:ec00:31d0:9741:cc4a:a42b) (Ping timeout: 240 seconds)
[04:52:37] *** Quits: nickdiaz1wag209 (~bjpenn_@13.110.54.39) (Ping timeout: 240 seconds)
[04:53:43] *** Joins: skapata (~Skapata@user/skapata)
[04:53:46] <freefall> im kinda wondering if it really needed
[04:54:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:54:59] <bjs> freefall: the things in that stackoverflow post that talk about Close get the history() and then ask the close from that
[04:55:19] <bjs> rather than stock.info()
[04:56:15] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Quit: leaving)
[04:56:37] *** Joins: fikran (~fikran@user/fikran)
[04:57:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:57:29] *** Joins: blei (~blei@209.201.38.106)
[04:57:31] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:58:14] <blei> clever way to evaluate concatenated tuples in a str? ie '()()()'
[04:58:31] <blei> ie perhaps listifying the sequence of tuples
[04:58:41] <SnoopJ> eh? what would the result be for that input?
[04:58:47] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:58:56] <blei> ie [(),(),())
[04:59:04] <blei> oops [(),(),()]
[04:59:42] <constxd_> can they be nested?
[04:59:59] <blei> tuples could contain anything, but i wasn't considering recursion no
[05:00:20] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:c888:576e:95d3:5aca)
[05:00:25] *** Joins: bluedust_ (~bluedust@117.241.176.36)
[05:00:38] <constxd_> they can contain anything?
[05:00:53] *** Quits: bluedust (~bluedust@117.241.183.103) (Ping timeout: 256 seconds)
[05:00:55] <blei> they will contain something yes
[05:01:11] <InPhase> blei: Can you give a real example of this with content?
[05:01:27] <blei> (1+2+3+4)(5+6+7)(8+9+10)
[05:01:40] <InPhase> That's why I ask.  That's not a tuple.  :)
[05:01:50] <blei> i am interested in the tuple component though
[05:02:01] *** Quits: kmh (~kmh@2a00:6020:5004:6800:1743:f411:8593:8ada) (Ping timeout: 268 seconds)
[05:02:05] <InPhase> And what do you mean by that.  You want (1,2,3,4) out for the first one?
[05:02:16] <blei> i am doing that yes (although i wasn't asking about it, but yes)
[05:02:29] <freefall> im tried to find the example i used from but cant.. but a few others it say "close" not 'close'
[05:02:33] <InPhase> Or do you want '1+2+3+4' out?
[05:02:45] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[05:02:54] <blei> i have it as a string '(1+2+3+4)(5+6+7)(8+9+10)'  currently parsing to list of lists
[05:03:27] <InPhase> Do you need input validation?
[05:03:44] <blei> yes i am thinking about that
[05:04:20] <InPhase> Aside from checking the outer parentheses:  [e.split('+') for e in s[1:-1].split(')(')]
[05:04:34] *** Joins: cresusjist (~dayim@50.233.164.153)
[05:04:34] <freefall> but if i # out the [close] [0] it works with no error..
[05:04:54] <constxd_> eval('[' + s.replace(')', ',),') + ']')
[05:04:57] <constxd_> based
[05:05:22] <InPhase> constxd_: Repeat after me:  "Do not eval the input."  :)
[05:05:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[05:06:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[05:06:17] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[05:06:37] *** Joins: jdmark (~jdmark@user/jdmark)
[05:06:40] <blei> what about a sequence of tuples though, ignoring the input format
[05:06:47] <blei> i was wondering if there was something clever
[05:06:49] *** Joins: greknod2826 (~grek@120.88.171.98)
[05:06:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:06:56] <blei> '()()()'
[05:07:03] <InPhase> blei: "clever" depends on the content.
[05:07:30] <InPhase> My above routine returns [[''], [''], ['']] for that.
[05:09:00] <InPhase> s[1:-1].split(')(') alone returns ['', '', '']
[05:09:25] *** Quits: greknod282 (~grek@120.88.171.98) (Ping timeout: 268 seconds)
[05:09:25] *** greknod2826 is now known as greknod282
[05:09:41] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leaving…)
[05:09:52] <InPhase> If you go and put spaces between, it all falls apart.  If you lack a strict specification, you start entering the regime of complicated parsers.
[05:10:20] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:11:20] <blei> i am slightly surprised concatenated tuples isn't a data format. json has jsonlines
[05:11:33] <blei> ie homoiconic
[05:12:10] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[05:12:29] *** Joins: zaquest (~notzaques@5.130.79.72)
[05:12:53] <InPhase> blei: csv is the thing you're looking for.
[05:12:58] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[05:13:27] <InPhase> blei: Rather than parentheses that are a mess to parse, newlines.
[05:14:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[05:15:23] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[05:15:48] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[05:15:51] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[05:16:37] *** Joins: zmt01 (~zmt00@user/zmt00)
[05:16:56] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[05:17:12] *** Quits: freefall (~owner@2600:6c40:1600:39ec:88fa:94dc:210a:d16e) (Quit: Leaving)
[05:17:26] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[05:17:30] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:17:49] <White_Flame> I'm looking at code that keeps a stateful iterable object (reading lines of text from a socket), and it gets reused in a `for line in iterable: if line == "boundary": break` iteration.  Is this bad/invalid use of iterators?  What's the lifecycle of the yielding __iter_ function?
[05:18:03] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 268 seconds)
[05:18:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:18:08] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:18:38] <White_Flame> meaning, that object gets passed multiple times to a function that does a FOR loop on that parameter, until the program finishes
[05:18:47] <bjs> that’s fine
[05:19:12] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[05:19:16] <bjs> each time you iterate it calls iter again to get a new iterators
[05:19:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[05:19:41] <bjs> if you call iter yourself, you can loop over the same iterator many times and that is also fine.
[05:19:41] *** Quits: randall (~randall@user/randall) (Read error: Connection reset by peer)
[05:20:01] *** Joins: ub (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[05:20:23] *** Joins: mpoletiek (~mpoletiek@2001:470:69fc:105::1:6595)
[05:20:37] <White_Flame> the __iter__ function has local variables
[05:20:47] *** Joins: humberto1 (~humbertow@189.236.30.209)
[05:21:09] <White_Flame> when the FOR loop is BREAK'd, does the __iter__ function exit, or does it stay on its yielded paused state until the next FOR loop?
[05:21:10] <bjs> White_Flame: what are you worried about
[05:21:16] *** Quits: ubert (~Thunderbi@p200300ecdf0994402d77270a91cab57e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:21:17] *** ub is now known as ubert
[05:21:30] <bjs> once the for loop ends the iterator will get discarded
[05:21:33] <White_Flame> eg, losing internal state of the iteration
[05:22:25] *** Joins: pepper (~pepper@user/pepper)
[05:22:27] <White_Flame> the socket is held on an instance variable (not sure about the python preferred terms), while the message boudnary reconstruction is in the __iter__ local vars, and I think those are getting lost
[05:22:38] <bjs> White_Flame: I need to clarify at this point whether you have an iterator or the iterable
[05:22:41] *** Quits: SorinQ (~Q@79.117.171.83) (Remote host closed the connection)
[05:22:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:22:56] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:23:22] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:23:23] <bjs> White_Flame: for loops will call __iter__ and then once the for loop finishes the iterator it made is discarded
[05:23:26] <White_Flame> bjs: I'd love to answer that precisely if I knew the distinction :)  this is a new instance of a class which has __iter__
[05:23:45] <White_Flame> that instance is passed over and over into a function which does `for line in <obj>:`
[05:23:59] <White_Flame> where the obj's __iter__ has local variables wanting to retain state between for loops
[05:24:11] <bjs> White_Flame: iterator is the thing __iter__ returns, presumably for you the generator?
[05:24:12] <White_Flame> bjs: ok, yeah I think this makes sense
[05:24:40] <bjs> if obj is an instance of that class, then each for loop will call __iter__ again and make a new generator
[05:24:43] <White_Flame> so this is acceptable use of an instance with __iter__, just the state should be on the instance, and not in the __iter_ function's locals
[05:25:02] <bjs> but you can say lines_iter = iter(obj) then loop over that multiple times instead
[05:25:08] <bjs> to reuse the same generator
[05:25:23] <bjs> (resuming where it stopped last time)
[05:25:33] <White_Flame> does __iter__ get called once per loop or only once total?
[05:25:40] <White_Flame> for that particular reuse pattern
[05:25:47] <bjs> White_Flame: once per loop
[05:25:54] <White_Flame> right, that's what's killing this
[05:26:02] <bjs> but my pattern calls __iter__ on obj only once
[05:26:06] <White_Flame> I didn't write it, just lookign for why it's buggy
[05:26:23] *** Joins: Fiji- (~Fiji@user/fiji)
[05:26:33] <White_Flame> so lines_iter = iter(obj), for line in lines_iter:....break; for line in lines_iter: ... break
[05:26:40] <White_Flame> __iter__ is only ever called once?
[05:26:50] *** Joins: greknod2822 (~grek@120.88.171.98)
[05:26:54] <bjs> objs iter is only called once yes
[05:27:02] <White_Flame> ok
[05:27:02] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[05:27:26] <White_Flame> but I think that moving the local vars into instance vars would also fix it, without changing the code that uses it.  that seem right?
[05:27:55] <White_Flame> since __iter__ could be called as many times as it wants, without reinitializing the local vars (and losing the prior iterations state)
[05:28:12] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[05:28:16] *** Quits: greknod282 (~grek@120.88.171.98) (Ping timeout: 256 seconds)
[05:28:16] *** greknod2822 is now known as greknod282
[05:28:31] <bjs> Both are reasonable.  I think iter() is fine
[05:28:48] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[05:28:50] <bjs> other iterables like lists and tuples don’t store their iteration state for example
[05:29:33] *** Joins: Atque (~Atque@user/atque)
[05:29:58] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[05:30:01] <White_Flame> right, obviously a basic socket reading iteration mutates per iteration
[05:30:15] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:34] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[05:30:44] <bjs> if restarting from scratch doesn’t make sense like it does for a list, maybe it’s better to have it be on the instance
[05:30:57] <White_Flame> yep
[05:31:04] <bjs> it’s up to you. files are iterables that store that info on the instance
[05:31:10] <bjs> as an example of doing it that way
[05:31:11] *** Joins: guest (~anon@50-27-60-176.mdlncmtk01.res.dyn.suddenlink.net)
[05:31:12] <toma> SnoopJ: appreciate that [apprehensive, topical, we're all beginners...]
[05:31:50] <White_Flame> bjs: thank you very much
[05:32:16] *** Joins: blei (~blei@209.201.38.106)
[05:32:22] <bjs> White_Flame: (actually files are technically iterators, and get this for free by making __iter__ return self, which might actually be the best option for you too)
[05:32:38] *** Joins: califax- (~califax@user/califx)
[05:32:48] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[05:32:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[05:33:00] <White_Flame> I don't know python well enogh to know the implications of that :)
[05:33:16] <bjs> it means define __next__
[05:34:57] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[05:35:02] *** Joins: skapata (~Skapata@user/skapata)
[05:35:31] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:35:39] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:35:40] *** califax- is now known as califax
[05:36:26] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:36:26] *** brabrax_ is now known as brabrax
[05:36:46] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 256 seconds)
[05:36:50] *** Joins: kaokao (~kaokao@ool-4576847c.dyn.optonline.net)
[05:37:41] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[05:38:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:38:19] <kaokao> why aren't there  numpy data types between 8 bits and 16 bits?
[05:38:21] *** Quits: cresusjist (~dayim@50.233.164.153) (Quit: WeeChat 2.8)
[05:39:00] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:39:10] <kaokao> e.g. I only need to store numbers between 1 and 512, so 9 bits
[05:39:40] <kaokao> What's the best way to do that? Is it really worth allocating 2 bytes?
[05:39:45] <nedbat> kaokao: because they want to access them on byte boundaries.
[05:39:49] <nedbat> use 16 bits
[05:39:50] <bparker> probably because there are no native computer types that size
[05:40:53] *** Joins: humberto1 (~humbertow@189.236.30.209)
[05:41:08] <kaokao> but 16 bits is almost 2x as much as I really need for my data
[05:41:14] <kaokao> is there really not a more efficient way?
[05:41:21] <demsh> no
[05:41:26] <White_Flame> space effecient vs speed efficient
[05:41:42] <demsh> CPU accesses memory by bytes
[05:41:50] <White_Flame> you'd take a quite noticeable hit to bit-pack them into actual sequential 9-bit values
[05:41:57] <demsh> to read 9 bits it has to read 16 bits and ignore 7 bits
[05:41:58] <White_Flame> spread aacross bytes
[05:42:51] <White_Flame> if you're running out of memory, then consider an alternative
[05:42:53] <kaokao> I guess I can create 2 8-bit arrays, A and B, and if a value n > 255, I can store n - 255 in B, and then recover the value by adding the corresponding entries in A and B
[05:42:55] <BtbN> It's very often even better to just use 32 bit ints for bools, since CPUs are tuned to work with those
[05:43:07] <demsh> that's grossly simplifying it, really modern x86 uses 64 byte cache lines so it fetches 64 bytes from RAM to CPU cache
[05:43:44] <kaokao> is the idea I just described very bad for some reason?
[05:44:20] <BtbN> What idea?
[05:44:34] <kaokao> "I guess I can create 2 8-bit arrays, A and B, and if a value n > 255, I can store n - 255 in B, and then recover the value by adding the corresponding entries in A and B"
[05:44:41] <BtbN> Why though?
[05:44:54] <kaokao> hmm
[05:45:03] <kaokao> I guess in the end that's using the same number of bits?
[05:45:12] <BtbN> It'd be INSANELY slow for saving a few bits
[05:45:15] <kaokao> Since 1 16 bit val is the same as 2 8 bit vals
[05:45:24] <kaokao> so there is no benefit
[05:45:30] <White_Flame> kaokao: are you running out of memory?
[05:45:48] <kaokao> White_Flame no, I was just curious
[05:45:57] <White_Flame> ok
[05:45:59] <kaokao> :p
[05:46:31] <White_Flame> curiosity is good.  it just sounded like you were actually going to try it :)
[05:47:32] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Ping timeout: 240 seconds)
[05:47:46] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[05:47:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:49:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:49:34] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[05:49:50] <kaokao> haha thanks
[05:50:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:51:48] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[05:52:07] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-8485-0ba6-5ca5-89ec.res6.spectrum.com)
[05:53:01] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:54:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-dc67-681f-ccd6-3dd0.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:55:24] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:55:56] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 250 seconds)
[05:56:20] <kaokao> How does bumpy treat operations between arrays of different types?
[05:57:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[05:57:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[05:57:32] <kaokao> Does it just cast the smaller dtype to the bigger type?
[05:57:35] *** Joins: tejr (~tejr@user/tejr)
[05:58:15] <grym> kaokao: tias
[06:00:08] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:01:00] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[06:01:56] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Read error: Connection reset by peer)
[06:01:57] *** Parts: White_Flame (~quassel@user/white-flame/x-6930243) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:03:03] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6445-a70e-e260-03f3.res6.spectrum.com) (Read error: Connection reset by peer)
[06:03:38] *** Joins: hanzo (uid532183@user/hanzo)
[06:03:45] *** Joins: mgedmin (~mg@user/mgedmin)
[06:04:08] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:04:23] <kaokao> grym ?
[06:04:32] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 256 seconds)
[06:04:37] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[06:04:59] *** Joins: mossman93 (~quassel@user/mossman93)
[06:05:49] <grym> kaokao: 'try it and see'
[06:05:57] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[06:06:20] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:7ad9:4c95:662c:fb7c)
[06:06:36] *** Quits: synbiose (~synbiose@user/synbiose) (Ping timeout: 245 seconds)
[06:07:30] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:08:18] <Boarders_> is it possible to overload the power operator in python by defining a __mul__ method?
[06:08:19] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[06:09:53] <phy1729> Might be the __pow__ dunder
[06:10:22] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[06:10:32] <Boarders_> ok thank you!
[06:10:50] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:10:51] <phy1729> Yep it's __pow__ https://docs.python.org/3/reference/expressions.html#the-power-operator
[06:11:05] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[06:13:04] <Boarders_> cool, thanks
[06:13:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[06:13:37] *** Joins: blackleitus (~blackleit@189.195.195.100)
[06:14:10] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:14:37] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[06:16:58] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:17:06] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[06:18:55] *** Joins: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com)
[06:19:25] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[06:19:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:20:39] *** Joins: r3m (~launch@user/r3m)
[06:21:26] *** Joins: pepper (~pepper@user/pepper)
[06:21:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:21:55] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 256 seconds)
[06:23:15] *** Joins: skapata (~Skapata@191.177.185.183)
[06:23:15] *** Quits: skapata (~Skapata@191.177.185.183) (Changing host)
[06:23:15] *** Joins: skapata (~Skapata@user/skapata)
[06:24:46] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:25:33] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:fc64:57d8:839:ae6f)
[06:25:55] *** Joins: wpostma (~wpostma@135.129.113.111)
[06:27:57] *** Quits: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[06:28:52] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:30:10] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[06:30:51] *** Joins: giusb (~giusb@user/giusb)
[06:30:57] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:34:33] <jinsun> aphysically: so pyright is just not complaining about unassigned Final in dataclass now, instead of having to use the field() workaround
[06:34:46] <jinsun> aphysically: your original problem still needs field() or ClassVar + Final though if remember right
[06:35:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:36:52] *** Joins: cyphase (~cyphase@user/cyphase)
[06:37:33] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:37:40] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[06:39:10] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[06:40:53] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[06:41:02] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:41:25] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:fc64:57d8:839:ae6f) ()
[06:41:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[06:47:56] *** Joins: skapata (~Skapata@191.177.185.183)
[06:47:56] *** Quits: skapata (~Skapata@191.177.185.183) (Changing host)
[06:47:56] *** Joins: skapata (~Skapata@user/skapata)
[06:48:37] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[06:48:48] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[06:49:11] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[06:49:19] *** Joins: programmar (~whatever@118.69.128.37)
[06:49:27] *** Parts: programmar (~whatever@118.69.128.37) ()
[06:50:52] *** Joins: eson123 (~whatever@user/eson123)
[06:51:38] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.4)
[06:52:25] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[06:54:25] *** Quits: kaokao (~kaokao@ool-4576847c.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[06:54:52] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[06:55:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[06:55:18] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Ping timeout: 250 seconds)
[06:56:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[06:57:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[06:57:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:57:31] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:57:31] *** finn_elija is now known as FinnElija
[06:57:37] <eson123> imagine if my parent script have over 1 child process, like threee different Popen(), if i stand in another terminal and kill one of the child, how can i detect which SIGCHLD is being sent to which child so i can wait() properly ?
[06:58:22] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:58:36] <KirkMcDonald> eson123: You could call os.wait() to wait for the completion of any child process.
[06:58:45] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:59:05] <eson123> Hm, let's me try
[06:59:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[07:00:47] <eson123> ok thk it does work
[07:02:15] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:03:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:04:40] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:04:53] *** Joins: NatKing1u1z (~NatKing1u@2601:19b:100:e1b0:dc1d:37f4:58e6:d0c)
[07:05:04] *** Joins: randall (~randall@user/randall)
[07:05:58] *** Joins: fikran (~fikran@user/fikran)
[07:06:41] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[07:06:41] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:07:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:08:35] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[07:10:17] *** Quits: tekniq (~tekniq@82-169-181-124.biz.kpn.net) (Remote host closed the connection)
[07:10:19] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487lo5o8at1bg85.ipv6.telus.net) (Quit: Leaving)
[07:11:37] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[07:13:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[07:13:57] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[07:14:41] *** Joins: adeliktas0 (~adeliktas@i59F4DB7C.versanet.de)
[07:15:42] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:57] *** Quits: adeliktas (~adeliktas@i59F52DD4.versanet.de) (Ping timeout: 240 seconds)
[07:15:57] *** adeliktas0 is now known as adeliktas
[07:16:45] *** Joins: kaokao (~kaokao@ool-4576847c.dyn.optonline.net)
[07:17:14] <kaokao> why does running a spicy function once, and then running again make it 100x faster the second time
[07:18:00] <mefistofeles> kaokao: I guess it depends on what it does, but probably due to caching
[07:18:14] *** Parts: mpoletiek (~mpoletiek@2001:470:69fc:105::1:6595) ()
[07:18:54] <kaokao> it applies a convolution to a matrix mefistofeles
[07:19:06] <kaokao> spicy.ndimage's convolve1d
[07:19:09] *** Quits: NatKing1u1z (~NatKing1u@2601:19b:100:e1b0:dc1d:37f4:58e6:d0c) (Ping timeout: 256 seconds)
[07:19:48] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[07:19:48] <mefistofeles> kaokao: is it a big matrix?
[07:19:57] <kaokao> randomly generated big matrices
[07:20:06] <mefistofeles> kaokao: a you mean scipy, not spicy :)
[07:20:10] <kaokao> not too big, 1000x1000
[07:20:12] <mefistofeles> no, spicy sounds like a nice name for something
[07:20:16] <kaokao> I think convolve1d uses C bindings, does it have something to do with them being compiled the first time I run it?
[07:20:17] <kaokao> haha
[07:20:18] <mefistofeles> *now
[07:20:28] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:20:37] *** Joins: KombuchaKip (~kip@192.252.230.5)
[07:21:45] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[07:22:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:22:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:23:12] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:23:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[07:24:05] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[07:25:13] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[07:25:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:25:57] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[07:26:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:26:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:28:11] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[07:28:12] *** Joins: chgtg (~chg@116.3.20.6)
[07:29:11] *** [_] is now known as [itchyjunk]
[07:29:42] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:15] *** Joins: NatKing1u1z (~NatKing1u@2601:19b:100:e1b0:dc1d:37f4:58e6:d0c)
[07:31:00] <mefistofeles> kaokao: yes, that's also a likely explanation
[07:31:21] *** Joins: haasn (~nand@haasn.dev)
[07:32:16] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:41] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[07:32:56] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:33:00] <NatKing1u1z> Hi I'm new to the channel and I'm just getting back into coding I've started a project making a pong like game via 101computing. I'm issues with "import" and would like some assistance, also I have googled for the past three days just assure you im not wasting your time.
[07:33:37] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[07:35:55] *** Joins: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:21] <NatKing1u1z> If anyone is willing to give a few pointer here is my gist https://gist.github.com/4th3LuLz0fIt/6ea4ace766f5fffc5b26ba8fbe40e294
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:34] *** Quits: NatKing1u1z (~NatKing1u@2601:19b:100:e1b0:dc1d:37f4:58e6:d0c) (Remote host closed the connection)
[07:36:40] *** Joins: NatKing1u1z (~NatKing1u@2601:19b:100:e1b0:dc1d:37f4:58e6:d0c)
[07:36:49] <xheimlich> now this is annoying https://bpa.st/I6VA
[07:37:25] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[07:38:18] <xheimlich> scrolling the ast docs in all directions and can't find why function node .id would be just the namspace
[07:38:32] <NatKing1u1z> I had to reset my client if anyone responded to me
[07:38:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:38:57] <xheimlich> NatKing1u1z: you mean you solved your problem?
[07:39:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:39:13] *** Joins: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net)
[07:39:15] <NatKing1u1z> I dont need you to solve anthing just help
[07:39:28] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[07:39:31] <NatKing1u1z> as into why my class is not being seen by pylance
[07:40:58] <NatKing1u1z> I can access my other custom module and all files are in the same working folder or project folder
[07:41:40] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[07:42:29] *** Joins: BlankGT (uid537360@id-537360.hampstead.irccloud.com)
[07:43:19] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[07:43:35] *** Joins: mickey8 (~user@user/mickey)
[07:43:45] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[07:44:02] <xheimlich> so.
[07:44:22] *** Quits: wpostma (~wpostma@135.129.113.111) (Quit: Leaving)
[07:44:28] <xheimlich> you can either "import ball"  and then refer to classes/functions as ball.Ball and so on.
[07:44:45] <xheimlich> or you can "from ball import Ball" and just refer to the class as Ball.
[07:45:06] <NatKing1u1z> from ball import ball is the issue
[07:45:22] <NatKing1u1z> from ball import * does not work as well
[07:45:30] <xheimlich> you're doing it right for Paddle.
[07:45:53] <xheimlich> you say "from paddle import Paddle and then just say Paddle in breakout main line 31.
[07:45:58] <SnoopJ> xheimlich, the 'other' part of your annotation is in the .attr property on the Attribute node (and this nesting can continue arbitrarily): https://bpa.st/47NA
[07:46:17] <xheimlich> but in line 37 you're saying ball.Ball
[07:46:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[07:47:15] <NatKing1u1z> Yes, that's how the original code
[07:47:19] <NatKing1u1z> is implemented
[07:47:26] <NatKing1u1z> in the tutorial
[07:47:34] <xheimlich> maybe they just oopsed.
[07:47:40] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:47:42] <SnoopJ> xheimlich, i.e. an attribute access `foo.bar` generates an Attribute node whose id is 'foo' and whose attr is 'bar' (or another Attribute node if it's a chain of dots)
[07:48:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:49:05] <NatKing1u1z> Should I just go back to the basics and refresh on creating modules and classes
[07:49:24] <xheimlich> SnoopJ: that fixes my problem I guess (doesn't for types that would be more nested, but I don't have those atm)
[07:49:38] <xheimlich> NatKing1u1z: you should replace "from ball import Ball" to just "import ball" and see if it works.
[07:50:14] <NatKing1u1z> will do
[07:50:48] <SnoopJ> xheimlich, if you truly need to delve this deeply into a parse tree, you should consider walking the tree procedurally using a NodeVisitor instead of trying to anticipate every possible tree: https://docs.python.org/3/library/ast.html#ast.NodeVisitor
[07:52:04] *** Roey is now known as Roey|nonsheep
[07:52:06] <NatKing1u1z> It worked, I have an attribut error but I resolve that on my own thanks, Best Wishes
[07:52:09] *** Parts: NatKing1u1z (~NatKing1u@2601:19b:100:e1b0:dc1d:37f4:58e6:d0c) ()
[07:52:53] *** Quits: Roey|nonsheep (~Roey@user/Roey) (Quit: Client exiting)
[07:53:18] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[07:53:43] <xheimlich> pay it forward. SnoopJ kindly looked at my mess of nested ifs and fixed my problem. :)
[07:54:02] <SnoopJ> xheimlich, compiling the function and inspecting the result may be simpler, though
[07:54:03] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:54:09] <SnoopJ> if that is a possibility
[07:54:37] *** Quits: k5tux (~k5tux@67.6.92.143) (Ping timeout: 240 seconds)
[07:55:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:55:20] <xheimlich> maybe. This is meant to be a quick and dirty way of producing a graphviz dot file. It's working, both for is-a (class inheritance) and has-a (annotated arguments referencing classes/types).
[07:55:31] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:55:49] <xheimlich> now, to learn what's the correct Generalized Abstract UML arrow shape for is-a and has-a.
[07:56:35] *** Joins: k5tux (~k5tux@67.6.92.143)
[07:56:38] *** Joins: frost (~frost@user/frost)
[07:57:48] *** Joins: humberto1 (~humbertow@189.236.30.209)
[07:59:00] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[07:59:01] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[07:59:35] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:59:56] *** Quits: kaokao (~kaokao@ool-4576847c.dyn.optonline.net) (Quit: Client closed)
[08:00:45] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[08:01:18] <SnoopJ> I'm not sure I've looked at a disassembly of an annotated function before, it's stuzzy: https://bpa.st/UNVQ
[08:02:47] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[08:03:17] <SnoopJ> MAKE_FUNCTION always consumes a qualified name and code object, and then possibly other stuff based on the bitfield argument
[08:04:06] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:04:24] <SnoopJ> Unfortunately that means that working backwards from just the bytecode would be pretty annoying, and evaluating the code object to get at __annotations__ is the most convenient (and also most dangerous!) way to do it
[08:05:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:05:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:05:54] *** Joins: stblaha (~stblaha@user/stblaha)
[08:05:54] *** Joins: Terexen (~terexen@user/terexen)
[08:06:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:06:46] <SnoopJ> ahh, but I forgot about ast.unparse() !
[08:08:52] *** Quits: sreve (~quassel@p549d70a6.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:09:11] *** Joins: sreve (~quassel@p4ff44f6f.dip0.t-ipconnect.de)
[08:09:13] *** Joins: pilyn (~pilyn@user/pilyn)
[08:11:17] <SnoopJ> xheimlich, in 3.9+ you can use this function to turn the relevant node(s) back into the source that created them: https://bpa.st/GBJQ
[08:11:28] *** Quits: eson123 (~whatever@user/eson123) (Ping timeout: 256 seconds)
[08:11:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[08:12:13] <SnoopJ> you would probably want to unparse() on the annotation if any is present, but it was simpler to present an example that unparses the entire arg() node
[08:12:45] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[08:13:01] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[08:14:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:14:58] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[08:14:59] <SnoopJ> a nice tidy solution to arbitrarily complex annotations, it handles `x: thisis(an(annoyingly.elaborate(annotation)))` with ease
[08:15:02] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[08:15:02] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:15:49] *** Joins: queue (~nerd@rektnet.com)
[08:16:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[08:16:21] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:17:09] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[08:20:14] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Ping timeout: 250 seconds)
[08:20:15] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Client Quit)
[08:21:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:22:07] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:24:36] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:29:36] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:30:16] *** Quits: snakey_hiss (~scott@101.100.131.161) (Quit: WeeChat 2.8)
[08:31:15] *** Joins: frost (~frost@user/frost)
[08:35:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:36:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:37:11] *** Joins: JordiGH (~jordi@user/jordigh)
[08:38:32] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:39:03] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[08:39:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:40:27] <Forty-Bot> is it possible to have a "*args" or "*kwargs" method when using PyArg_ParseTupleAndKeywords?
[08:40:51] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[08:40:58] *** Joins: nunggu (~q@user/nunggu)
[08:41:36] *** Joins: panella32 (~panella32@173.245.206.157)
[08:42:04] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-8485-0ba6-5ca5-89ec.res6.spectrum.com) (Quit: jarthur_)
[08:42:27] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[08:42:28] *** Quits: bluedust_ (~bluedust@117.241.176.36) (Read error: Connection reset by peer)
[08:42:50] *** Joins: bluedust (~bluedust@89.45.90.230)
[08:43:12] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:43:12] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[08:44:17] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[08:44:27] *** Quits: panella32 (~panella32@173.245.206.157) (Client Quit)
[08:44:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:44:57] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[08:44:59] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:46:18] *** Joins: xx (~xx@user/xx)
[08:47:10] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[08:48:20] *** Joins: bluedust_ (~bluedust@117.241.176.36)
[08:50:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:50:38] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b2ee:b7f7:693a:725a)
[08:50:51] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:50:51] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[08:51:03] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[08:51:08] *** Quits: bluedust (~bluedust@89.45.90.230) (Ping timeout: 256 seconds)
[08:51:12] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1012:304e:ad65:3e09)
[08:51:36] *** Joins: CombatVet (~c4@user/combatvet)
[08:51:37] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:52:18] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:53:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[08:53:29] *** Joins: blackleitus (~blackleit@189.195.195.100)
[08:53:53] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 268 seconds)
[08:54:14] <SnoopJ> Forty-Bot, I would think so, since it all ends up being a tuple and dict in the end. The doc mentioning positional-only args seems to indicate *args would be fine, and I don't see why **kwargs wouldn't be, it's "just" more keys
[08:54:27] <SnoopJ> (but I don't know from experience)
[08:55:01] <Forty-Bot> well, from what I can tell you can't e.g. https://paste.debian.net/1227888/
[08:55:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[08:56:11] <SnoopJ> what's the signature of Lock?
[08:56:14] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[08:56:20] *** Joins: frost15 (~frost@user/frost)
[08:56:30] *** Quits: frost15 (~frost@user/frost) (Client Quit)
[08:56:46] *** Joins: frost21 (~frost@user/frost)
[08:57:15] *** Quits: frost21 (~frost@user/frost) (Client Quit)
[08:57:36] *** Joins: Guest20 (~Guest20@106.201.15.154)
[08:58:01] *** Joins: frost31 (~frost@user/frost)
[08:58:50] *** Joins: nunggu (~q@user/nunggu)
[08:58:51] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:58:58] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8485-0ba6-5ca5-89ec.res6.spectrum.com)
[08:59:04] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:00:21] *** frost31 is now known as frost
[09:00:30] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:01:37] *** Quits: Guest20 (~Guest20@106.201.15.154) (Client Quit)
[09:02:33] *** Joins: Guest20 (~Guest20@106.201.15.154)
[09:03:20] *** Quits: Guest20 (~Guest20@106.201.15.154) (Client Quit)
[09:04:51] <Forty-Bot> SnoopJ: O|p
[09:05:34] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[09:05:46] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:06:02] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[09:06:17] *** Quits: pilyn (~pilyn@user/pilyn) (Quit: Leaving)
[09:06:52] <SnoopJ> and the args are named "something" and "foo" ?
[09:06:52] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:07:42] <SnoopJ> or hm, that doesn't make any sense, you're asking about variadic to presumably there's something like that in there
[09:09:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:10:12] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[09:10:12] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[09:10:12] *** Joins: JordiGH (~jordi@user/jordigh)
[09:10:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[09:11:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[09:11:26] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[09:11:29] <Forty-Bot> no, the args are not named "something" or "foo"
[09:11:42] <Forty-Bot> the errors are "correct"
[09:12:04] <SnoopJ> Forgive me, I can't see even as much of the problem as you can.
[09:12:09] <Forty-Bot> but there's no way to say "ok, stick extra arguments in a new tuple"
[09:12:23] <Forty-Bot> you have to specify everything
[09:12:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:15:19] *** Joins: fikran (~fikran@user/fikran)
[09:16:52] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[09:17:04] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:17:14] *** Quits: earthbre| (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Ping timeout: 260 seconds)
[09:17:15] *** Quits: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576) (Quit: Reticulating Splines)
[09:17:27] *** Joins: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576)
[09:17:31] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:17:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[09:17:56] *** Joins: earthbreaker (~earthbrea@li778-229.members.linode.com)
[09:18:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[09:19:44] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[09:20:03] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:21:42] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[09:22:01] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:23:30] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[09:25:06] *** Joins: frost (~frost@user/frost)
[09:26:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[09:27:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[09:28:10] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:28:37] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:30:23] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[09:30:40] *** Joins: analoq (~yashi@user/dies)
[09:32:11] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:32:12] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:4de3:f824:1243:8d01)
[09:32:18] *** Joins: llh (~llh@user/llh)
[09:32:40] <Guest19> hello. If ive string like 'january 20, 2022; what regex do i need to match everything except the date?
[09:32:40] *** Joins: mexen (uid495612@user/mexen)
[09:33:20] *** Joins: han-solo (~hanish@user/han-solo)
[09:34:13] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:34:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:35:39] <phy1729> the whole string is a date
[09:36:14] <phy1729> It'd be helpful to explain the larger goal
[09:36:48] *** Joins: upsala (~zcb@185.209.196.170)
[09:37:47] *** Joins: panella32 (~panella32@216.131.117.50)
[09:38:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:39:25] *** Quits: Jong (~Jong@2620:10d:c090:400::5:263a) (Ping timeout: 240 seconds)
[09:41:16] *** Joins: parv (~quass@user/parv)
[09:43:31] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[09:44:14] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:45:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[09:46:07] *** Joins: blackleitus (~blackleit@189.195.195.100)
[09:50:14] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[09:50:51] <hifi> I'm trying to execv() python from python but it seems to lose PYTHONPATH or somethign in-between as it can't find pip installed modules, what am I missing from the equation? I'm trying to preserve environment but something is off
[09:52:16] *** Joins: carl- (~carl-@185.103.188.130)
[09:52:32] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8485-0ba6-5ca5-89ec.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:53:15] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[09:53:44] <hifi> god, forgot the first argument is the path to the executable in execv
[09:54:15] *** Joins: cyphase (~cyphase@user/cyphase)
[09:54:44] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[09:54:56] *** Quits: guest (~anon@50-27-60-176.mdlncmtk01.res.dyn.suddenlink.net) (Quit: Leaving)
[09:55:46] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:56:25] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:56:50] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[09:58:00] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[09:58:23] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 256 seconds)
[09:59:33] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d873-1113-a348-98f0.res6.spectrum.com)
[10:01:32] *** Joins: yac (~user@user/yac)
[10:01:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:02:30] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:02:52] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:02:56] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[10:03:00] *** Quits: Bakunin (~Bakunin@user/lindis) (Remote host closed the connection)
[10:03:06] *** Joins: Liam (~Liam@88.121.162.133)
[10:05:37] *** Quits: Liam (~Liam@88.121.162.133) (Client Quit)
[10:07:52] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[10:08:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[10:09:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[10:15:23] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[10:16:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:18:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[10:19:37] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[10:22:05] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[10:24:06] *** Quits: greentree (~greentree@user/greentree) (Quit: greentree)
[10:25:13] *** Joins: upsala (~zcb@185.209.196.170)
[10:27:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[10:28:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[10:28:07] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[10:28:11] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-227.poda.cz)
[10:28:38] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-227.poda.cz) (Client Quit)
[10:28:53] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:29:08] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:30:40] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-227.poda.cz)
[10:31:10] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[10:32:23] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[10:34:40] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:37:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[10:37:39] *** Joins: erdem (~quassel@88.236.70.180)
[10:38:28] *** Quits: erdem (~quassel@88.236.70.180) (Client Quit)
[10:38:36] *** Joins: tessler (~user@user/tessler)
[10:38:55] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[10:39:17] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[10:41:13] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[10:42:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:42:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[10:43:03] *** Joins: blackleitus (~blackleit@189.195.195.100)
[10:43:41] *** Quits: panella32 (~panella32@216.131.117.50) (Quit: Textual IRC Client: www.textualapp.com)
[10:45:29] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[10:46:47] *** Quits: tessler (~user@user/tessler) (Quit: ERC (IRC client for Emacs 27.2))
[10:47:30] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:48:17] *** Joins: mud (~mud@user/kadoban)
[10:49:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[10:49:21] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:49:55] *** Joins: seednode99 (~seednode@user/seednode)
[10:50:02] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[10:50:08] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Ping timeout: 256 seconds)
[10:50:31] *** Quits: grym (~grym@user/grym) (Ping timeout: 256 seconds)
[10:51:05] *** Quits: edr (~edr@user/edr) (Ping timeout: 256 seconds)
[10:51:24] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:51:30] *** Joins: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08)
[10:51:47] *** Joins: edr (~edr@enlo.co)
[10:51:47] *** Quits: edr (~edr@enlo.co) (Changing host)
[10:51:47] *** Joins: edr (~edr@user/edr)
[10:51:56] *** Joins: grym (~grym@user/grym)
[10:53:27] *** Joins: tessler (~ct@user/tessler)
[10:56:02] *** Joins: rmagyar (~rmagyar@54038678.catv.pool.telekom.hu)
[10:56:04] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[10:56:19] *** Quits: parv (~quass@user/parv) (Quit: parv)
[10:57:10] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[10:57:24] *** Joins: elink (~elink@user/elink)
[10:58:35] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:9542:c242:82e6:5d52)
[10:58:39] <amosbird> Hmm, does os.makedirs only throw OSError with e.errno == errno.EEXIST  instead of FileExistsError?
[11:00:06] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f9:d1b2:f192:f14c:2bd5:212c)
[11:00:15] *** Joins: frost (~frost@user/frost)
[11:01:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:01:41] *** Joins: dvx (~dvx@5.181.92.64)
[11:02:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:02:29] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:02:33] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:04:00] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:9542:c242:82e6:5d52) (Ping timeout: 268 seconds)
[11:04:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[11:04:25] *** Quits: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[11:04:49] <jinsun> I get FileExistsError on 3.10
[11:05:20] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[11:05:26] *** Quits: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[11:06:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[11:07:14] *** Joins: cheater (~Username@user/cheater)
[11:07:31] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:09:44] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:09:58] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:10:20] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[11:11:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[11:11:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[11:11:44] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6801:602e:39b9:ecd0)
[11:12:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:12:53] *** Joins: rendar (~rendar@user/rendar)
[11:15:44] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[11:15:51] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Remote host closed the connection)
[11:17:20] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[11:17:26] *** Quits: onichomp (~onichomp@2806:264:4408:1d4:2535:2f81:327c:26d8) (Read error: Connection reset by peer)
[11:17:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:18:03] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[11:18:04] *** Joins: onichomp (~onichomp@2806:264:4408:1d4:2535:2f81:327c:26d8)
[11:18:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[11:18:41] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[11:18:55] *** Quits: bluedust_ (~bluedust@117.241.176.36) (Remote host closed the connection)
[11:18:58] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[11:19:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[11:19:40] *** Joins: bluedust (~bluedust@103.160.233.171)
[11:20:02] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[11:20:03] *** Joins: thorbw_ (~tw@46.230.130.50)
[11:21:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[11:21:12] *** Joins: manti7 (~manti7@176.10.104.94)
[11:21:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[11:22:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[11:22:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[11:22:34] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[11:22:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[11:23:40] *** Joins: jpic (~jpic@82.142.9.130)
[11:23:59] *** gentooclimax is now known as climax
[11:24:24] *** climax is now known as gentooclimax
[11:24:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[11:24:40] *** Joins: fikran (~fikran@user/fikran)
[11:24:55] *** Joins: cyphase (~cyphase@user/cyphase)
[11:25:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[11:25:26] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:25:28] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00cd435cd27fd11e23.dip0.t-ipconnect.de)
[11:26:10] *** Quits: pythia (~pythia@ti0044a400-1030.bb.online.no) (Remote host closed the connection)
[11:26:50] <elink> what way are you running latest python on OSes without official package for it? (I'm aware of https://docs.python.org/3/using/unix.html#getting-and-installing-the-latest-version-of-python and asking about your experiences)
[11:27:42] *** Joins: pycode (~pycode3@2001:b07:5d28:551:4aac:44d2:5105:e0f9)
[11:28:18] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 250 seconds)
[11:28:43] <Repiphany> pyenv
[11:29:42] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[11:30:11] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:31:31] *** Joins: palasso (~palasso@user/palasso)
[11:32:38] *** Quits: dsrt^ (~dsrt@207.182.73.202) (Ping timeout: 256 seconds)
[11:33:24] <elink> Repiphany, may I ask os release and architecture are you on?
[11:33:30] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:34:23] <Repiphany> Mainly do python stuff on ubuntu
[11:35:10] *** Joins: debayer9482 (~debayer@76.82.226.116)
[11:35:21] *** Joins: pythia (~pythia@ti0044a400-1030.bb.online.no)
[11:35:28] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 256 seconds)
[11:36:01] <elink> I was wondering why my scientist buddies use conda instead of pyenv, could there be any reason
[11:36:02] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Ping timeout: 256 seconds)
[11:36:18] <elink> I liked pyenv more
[11:37:10] <Repiphany> Anaconda just comes with most of the data science packages like the scipy stack included
[11:37:33] *** Joins: Jong (~Jong@2620:10d:c090:400::5:4f54)
[11:37:53] *** Joins: slav0nic (slav0nic@python.su)
[11:38:07] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:38:45] <elink> I assumed python executable handling of pyenv and conda should be uncooperative with each other
[11:39:06] *** Joins: debayer948 (~debayer@76.82.226.116)
[11:39:34] *** Quits: debayer9482 (~debayer@76.82.226.116) (Ping timeout: 250 seconds)
[11:39:38] <Repiphany> You can even install anaconda/miniconda through pyenv
[11:39:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:40:03] <elink> really? I was looking for something cooperative
[11:40:21] <elink> that's interesting news to me then
[11:40:45] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:41:54] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[11:42:32] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[11:44:59] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[11:45:55] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-001.client.tudelft.eduvpn.nl)
[11:46:43] *** Joins: mrwick (~mrwick@user/mrwick)
[11:48:57] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 240 seconds)
[11:49:06] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[11:49:16] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[11:51:24] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:56:13] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:58:50] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[11:59:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[12:00:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:01:05] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[12:02:09] <Atque> elink: Pyenv is low level. Some software developers like pipenv. Conda and miniconda are an alternative too. Anaconda comes with conda and stats packages.
[12:02:22] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Client Quit)
[12:02:37] <elink> Atque, thanks
[12:05:46] *** Quits: earthbreaker (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[12:05:57] <Atque> Another popular way of managing dependencies is docker too I guess, especially if you are doing anything cloud deployment-related.
[12:06:05] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[12:06:17] <Atque> Docker and python work well together, and take care a lot of things, like platform issues.
[12:06:48] <elink> Atque, I've tried pipenv on focal with pipenv --python 3.10 and it didn't seem to solve the question of having latest python on a platform that doesn't package it
[12:06:48] *** Joins: kosh (~kosh@user/kosh)
[12:06:49] *** Joins: someuser (~user@197.54.58.85)
[12:07:05] *** Joins: debayer9482 (~debayer@76.82.226.116)
[12:07:05] *** Joins: nomad1 (~nomad@user/spacenomad)
[12:07:26] *** Quits: debayer9482 (~debayer@76.82.226.116) (Remote host closed the connection)
[12:07:40] <Atque> elink: Which platform?
[12:07:48] <elink> Atque, I don't know how well would graphical applications work out of an interpreter from inside a containre
[12:07:48] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:08:07] *** Joins: debayer9480 (~debayer@76.82.226.116)
[12:08:22] <elink> Atque, by "focal" I meant ubuntu 20.04 "focal" LTS amd64
[12:08:22] <Atque> Yeah, you couldn't use it for clientside applications I guess.
[12:08:41] <Atque> elink: Why do you need to target python3.10?
[12:09:26] <Atque> You would just target 3.9 or whatever is available if you need to use a specific platform for some reason. You would also build 3.10 I suppose, but it would be unnecessary and a waste of time.
[12:09:30] *** Parts: nickdiaz3wag209 (~bjpenn_@98.42.87.100) ()
[12:09:57] *** Quits: debayer948 (~debayer@76.82.226.116) (Ping timeout: 240 seconds)
[12:09:57] *** debayer9480 is now known as debayer948
[12:09:58] <elink> Atque, just a general development policy
[12:09:59] *** Quits: nomad1 (~nomad@user/spacenomad) (Client Quit)
[12:10:31] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[12:10:41] <Atque> Yeah, so you would need to wait for a build I suppose from the vendor.
[12:11:03] <Atque> But you don't need to target the very newest releases of languages, compilers etc. if they are not available for your platform.
[12:11:05] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[12:11:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:11:25] <elink> Atque, so this question is not about not having the latest python but what are you doing if you do have it
[12:11:37] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 240 seconds)
[12:12:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:12:18] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[12:12:19] <Atque> I honestly don't know the differences between 3.9 and 3.10, but 3.10 is very new. On macOS, I think the build I have was only from early Jan.
[12:12:52] <elink> Atque, https://docs.python.org/3/whatsnew/3.10.html
[12:13:03] <elink> I like pep 634-636
[12:13:29] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:f981:e2b1:518d:d697) (Remote host closed the connection)
[12:13:44] *** Joins: jpic (~jpic@82.142.9.130)
[12:14:25] <elink> the other thing factored from this particular release was 604 and 613
[12:14:46] <Atque> elink: In general though, you will find packages might not be available for 3.10 yet. For example, tensorflow only supports 3.7-3.9. Spark is similar, only support Scala2.*, not 3.*.
[12:14:46] <Atque> elink: There's not much use in lots of development situations to using the newest release until the upstream products are updated.
[12:14:48] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:16:57] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[12:17:39] <Atque> Yeah, they're just language features... useful for the long run but not super important for development imo
[12:18:43] <Atque> elink: You might be able to install a nightly build or something. Just check if it's available. otherwise, you'd need to install it from source and troubleshoot issues potentially.
[12:19:37] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6801:602e:39b9:ecd0) (Ping timeout: 240 seconds)
[12:19:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[12:19:59] *** Joins: upsala (~zcb@185.209.196.170)
[12:20:05] *** Joins: cliluw (~cliluw@47.147.73.223)
[12:21:44] *** Quits: onichomp (~onichomp@2806:264:4408:1d4:2535:2f81:327c:26d8) (Read error: Connection reset by peer)
[12:21:56] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[12:22:09] *** Joins: LimeOn (~user@user/limeon)
[12:22:29] *** Joins: andreasbuhr (~quassel@p549db547.dip0.t-ipconnect.de)
[12:22:32] *** Joins: Auron (~Auron956@user/auron)
[12:22:43] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:24:10] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[12:24:31] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:24:47] <elink> Atque, writing if-elses for new code only to replace later with pattern matching doubles the work
[12:25:12] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Client Quit)
[12:25:32] <elink> I mean that's one point where you might pick road A over road B or vice versa
[12:25:45] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[12:25:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi)
[12:25:57] *** Joins: Naan (~Naan@user/naan)
[12:26:23] *** Joins: panella32 (~panella32@164.215.206.60)
[12:28:11] *** Quits: panella32 (~panella32@164.215.206.60) (Client Quit)
[12:28:23] *** Quits: bluedust (~bluedust@103.160.233.171) (Read error: Connection timed out)
[12:28:55] *** Joins: panella32 (~panella32@216.131.117.55)
[12:29:03] *** Quits: Deepspeed (~yep@235.sub-174-215-149.myvzw.com) (Quit: Leaving)
[12:29:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[12:29:20] *** Joins: bluedust (~bluedust@103.160.233.171)
[12:29:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[12:29:53] <Atque> elink: It'd also be doing this: https://en.wikipedia.org/wiki/Reinventing_the_wheel
[12:30:44] *** Joins: stonkey (~stonkey@user/stonkey)
[12:30:52] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[12:30:57] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:30:57] <Atque> idk, man, up to you. I think using 3.9 while waiting for 3.10 would be the best approach.
[12:31:32] *** Joins: constxd_ (~brad@142.167.170.88)
[12:31:39] <elink> Atque, let's take followups to #python-offtopic
[12:31:42] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:32:18] <Atque> elink: No need. I don't have anything else to say on this really.
[12:32:47] <Atque> Just the language keeps improving, so you usually just use what you can when you can to keep moving your projects forward
[12:33:24] *** gentooclimax is now known as climax
[12:33:29] *** climax is now known as gentooclimax
[12:33:38] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:33:45] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[12:33:50] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:35:32] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[12:36:19] *** Joins: jazzy (~jaziz@user/jaziz)
[12:36:29] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:36:40] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[12:37:14] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:40:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:45:17] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[12:46:07] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[12:46:17] *** Quits: Lightsword (~Lightswor@user/lightsword) (Ping timeout: 240 seconds)
[12:46:23] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 252 seconds)
[12:46:41] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[12:46:49] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[12:47:01] *** Quits: MightyMu (~MightyMu@104.131.138.31) (Ping timeout: 240 seconds)
[12:47:15] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (Ping timeout: 256 seconds)
[12:47:15] *** Quits: meejah (~meejah@rutas.meejah.ca) (Ping timeout: 256 seconds)
[12:48:05] *** Joins: shad (~shad@user/shad)
[12:48:08] *** Quits: greknod282 (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[12:48:40] *** Joins: klys (~mdasoh@show.op8.us)
[12:48:42] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[12:48:47] *** Joins: meejah (~meejah@rutas.meejah.ca)
[12:48:51] *** Joins: Lightsword (~Lightswor@user/lightsword)
[12:48:52] *** Joins: dstein64 (~dstein64@dannyadam.com)
[12:48:59] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:17c:7455:c683:1f78)
[12:49:06] *** Joins: phantomcircuit (~phantomci@2604:a880:1:20::f2:c001)
[12:49:32] *** Joins: greknod282 (~grek@120.88.171.98)
[12:49:59] *** Joins: hightower2 (~hightower@95.168.118.68)
[12:50:33] *** Joins: teut (~teut@2401:4900:1c68:6b85:29a1:5e80:8386:5c5c)
[12:50:57] *** Quits: Lightsword (~Lightswor@user/lightsword) (Remote host closed the connection)
[12:51:56] *** Joins: Lightsword (~Lightswor@user/lightsword)
[12:54:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[12:55:11] *** Quits: teut (~teut@2401:4900:1c68:6b85:29a1:5e80:8386:5c5c) (Ping timeout: 256 seconds)
[12:55:29] *** Joins: mixfix41 (~homefame@user/mixfix41)
[12:55:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:56:34] *** Joins: nyah (~nyah@94.6.71.219)
[12:56:57] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:58:19] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[12:58:45] *** Joins: mud (~mud@user/kadoban)
[12:59:02] <mickey8> in order to have something like x, y = afunc(), what does afunc() need to return? x is a big dataframe and y is just a float
[12:59:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[12:59:07] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[12:59:09] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[12:59:15] <mickey8> a tuple sounds about right, but a big dataframe inside a tuple doesn't really?
[12:59:30] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:59:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[13:00:37] *** Quits: Lightsword (~Lightswor@user/lightsword) (Ping timeout: 240 seconds)
[13:01:35] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:01:47] *** Quits: phantomcircuit (~phantomci@2604:a880:1:20::f2:c001) (Ping timeout: 268 seconds)
[13:01:47] *** Joins: phantomcircuit_ (~phantomci@192.241.205.97)
[13:01:51] *** Joins: Lightsword (~Lightswor@user/lightsword)
[13:01:57] *** Joins: MightyMu_ (~MightyMu@104.131.138.31)
[13:01:59] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[13:02:08] *** Quits: MightyMu (~MightyMu@104.131.138.31) (Read error: Connection reset by peer)
[13:02:10] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[13:02:13] <Repiphany> Anything that unpacks into two elements
[13:02:21] *** Joins: klys (~mdasoh@show.op8.us)
[13:02:25] *** Joins: dlam (~dlam@dlam.me)
[13:02:46] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[13:03:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi)
[13:04:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:04:18] *** Joins: dstein64 (~dstein64@dannyadam.com)
[13:04:27] *** Joins: ubert1 (~Thunderbi@p200300ecdf09943ef05cebfd8a506150.dip0.t-ipconnect.de)
[13:05:42] <deniska> mickey8: you can put anything in a tuple
[13:05:57] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:05:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:06:41] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:144d:695f:3542:acbe)
[13:06:46] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[13:07:37] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[13:07:47] <Zweimer> https://stackoverflow.com/a/68154039/4596901  < What is the reason for the second "if proc.exitcode is None:"? Does anyone understand the reason for this?
[13:08:24] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 256 seconds)
[13:09:47] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:17c:7455:c683:1f78) (Quit: Konversation terminated!)
[13:10:11] *** Joins: vanessa (~annada@103.160.128.7)
[13:11:35] *** Quits: panella32 (~panella32@216.131.117.55) (Remote host closed the connection)
[13:13:48] *** Joins: aniketgm (~aniketgm@49.36.59.102)
[13:14:05] *** Joins: idiocrash (~textual@191.101.132.96)
[13:14:05] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:14:11] <idiocrash> good evening
[13:14:39] <elink> Zweimer, signal.sigterm can be handled by signal.signal() while signal.sigkill cannot: https://docs.python.org/3/library/signal.html#signal.SIGKILL
[13:15:08] <idiocrash> can anyone see me
[13:15:14] <elink> idiocrash, yes
[13:15:19] <idiocrash> ok
[13:15:24] <idiocrash> good evening
[13:15:50] <Zweimer> elink, so that second if has what purpose?
[13:16:10] <elink> Zweimer, by design of unix-like operating systems including linux, sigterm just asks a process to exit while sigkill removes it from the OS without asking
[13:16:54] *** Quits: BinarySavior_ (~BinarySav@josh.vet) (Ping timeout: 256 seconds)
[13:16:56] <elink> Zweimer, the purpose of the second if is to stop the process whether it wants to be stopped or not
[13:16:57] <Zweimer> Ah right. Is there a good reason to not straight away kill it if the process is not responding?
[13:17:04] *** Quits: grym (~grym@user/grym) (Ping timeout: 250 seconds)
[13:17:35] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[13:17:37] <elink> Zweimer, yes, usually a process needs to flush its io buffers for example from memory to disk etc.
[13:17:46] *** Joins: grym (~grym@user/grym)
[13:18:04] <elink> Zweimer, also libreoffice writer might ask the user if any unsaved changes should be saved
[13:18:12] <elink> (to give an example)
[13:18:15] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[13:18:22] <Zweimer> I see. Good point. Thank you for the explanation!
[13:18:57] <elink> with the tendency for applications to move away from asking save-type questions, they still need to do the sync(2) system call in the background
[13:18:57] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:19:07] <elink> Zweimer, welcome
[13:21:49] *** Joins: newdimension (~newdimnes@user/newdimension)
[13:22:01] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:24:02] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:24:08] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:25:07] *** Joins: backes (~backes@85.195.206.214)
[13:26:18] *** Quits: Lightsword (~Lightswor@user/lightsword) (Quit: ZNC)
[13:26:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[13:27:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[13:28:08] *** Joins: idiocrash_ (~textual@c-208-82-96-253.rev.sailinternet.net)
[13:28:18] *** Joins: upsala (~zcb@185.209.196.170)
[13:28:37] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[13:29:03] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:29:13] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:29:21] <idiocrash_> is there an "official" python data science IRC channel
[13:29:52] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[13:29:54] <idiocrash_> or how about for pandas
[13:30:05] *** Quits: backes (~backes@85.195.206.214) (Quit: Lost terminal)
[13:30:17] *** Quits: idiocrash (~textual@191.101.132.96) (Ping timeout: 240 seconds)
[13:30:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:30:39] *** Joins: onichomp (~onichomp@2806:264:4408:1d4:f894:ff33:3665:77fd)
[13:32:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:32:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[13:32:43] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:f981:e2b1:518d:d697)
[13:33:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[13:33:17] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 240 seconds)
[13:33:43] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:33:43] *** Quits: MightyMu_ (~MightyMu@104.131.138.31) (Ping timeout: 256 seconds)
[13:33:44] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[13:33:54] *** Quits: phantomcircuit_ (~phantomci@192.241.205.97) (Ping timeout: 256 seconds)
[13:33:54] *** Quits: meejah (~meejah@rutas.meejah.ca) (Ping timeout: 256 seconds)
[13:33:58] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 250 seconds)
[13:34:01] *** Joins: fikran (~fikran@user/fikran)
[13:34:57] *** Quits: onichomp (~onichomp@2806:264:4408:1d4:f894:ff33:3665:77fd) (Ping timeout: 240 seconds)
[13:35:39] *** Joins: plastico (~plastico@neomutt/plastico)
[13:36:22] <jinsun> idiocrash_: nope, pandas readme says ask on stackoverflow with pandas tag, or on the pydata mailing list https://github.com/pandas-dev/pandas#getting-help
[13:36:43] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:37:17] <jinsun> idiocrash_: you can try asking here, you won't be kicked for asking pandas questions here
[13:39:10] *** Quits: MightyMu (~MightyMu@104.131.138.31) (Ping timeout: 250 seconds)
[13:42:10] *** Joins: panella32 (~panella32@216.131.117.56)
[13:43:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[13:44:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[13:45:45] <mickey8> any idea why pandas' dropna() won't drop a NaN with this? df['Value_0'] = df['Value_0'].diff().dropna()
[13:45:50] <mickey8> the diff() works
[13:46:02] <mickey8> splitting into separate lines doesn't help
[13:46:09] *** Joins: bluedust_ (~bluedust@117.241.176.36)
[13:46:19] *** Quits: botfather (~botfather@shell2.dds.nl) (Remote host closed the connection)
[13:47:37] *** Quits: bluedust (~bluedust@103.160.233.171) (Ping timeout: 240 seconds)
[13:49:24] <mickey8> row 0 remains after the diff with NaN
[13:50:37] *** Quits: panella32 (~panella32@216.131.117.56) (Quit: Textual IRC Client: www.textualapp.com)
[13:50:55] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[13:52:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:52:42] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[13:53:33] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[13:53:39] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:53:41] <jinsun> mickey8: how are you checking whether NA is dropped or not?
[13:53:41] <mickey8> this is the head() before and after running this line https://dpaste.org/X5uJ
[13:54:15] <mickey8> i also have adfuller() complaining about having nan values
[13:55:19] *** Joins: klys (~mdasoh@show.op8.us)
[13:55:22] <jinsun> df['Value_0'].diff().dropna() will drop NAs from the result of df["Value_0"].diff()
[13:55:49] *** Joins: dstein64 (~dstein64@dannyadam.com)
[13:56:04] <jinsun> but when you assign it back to the df, it won't remove NAs from the original df
[13:56:04] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[13:56:08] *** Joins: dlam (~dlam@dlam.me)
[13:56:37] <jinsun> you probably want to dropna on the df after the assignment
[13:56:41] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[13:57:04] *** Quits: adeliktas (~adeliktas@i59F4DB7C.versanet.de) (Quit: like, subscribe, turn notifications on, buy my merch, write me an email and have a nice day.)
[13:57:34] <jinsun> in that case try, `df['Value_0'] = df['Value_0'].diff(); df.dropna(inplace=True)`
[13:57:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:57:49] *** Joins: han-solo (~hanish@178.248.115.11)
[13:58:07] *** Joins: meejah (~meejah@rutas.meejah.ca)
[13:58:21] *** Joins: adeliktas (~adeliktas@i59F4DB7C.versanet.de)
[13:59:47] *** Quits: BurgerW (~BurgerW@222.244.79.166) (Ping timeout: 256 seconds)
[13:59:58] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:00:28] <mickey8> but doesnt df['Value_0
[14:00:39] <mickey8> but doesnt df['Value_0'] = ... actually alter df itself?
[14:02:21] <mickey8> also, i have other columns in df that i dont want to dropna()
[14:02:51] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[14:04:49] <jinsun> how is that supposed to work?
[14:05:06] <jinsun> you can't remove single cells from a dataframe
[14:05:17] <jinsun> you can remove entire rows or entire columns
[14:06:16] <jinsun> the way to "remove" cells is just putting NA in them, but you don't want that
[14:06:21] <mickey8> if value_0 is nan, then remove the row. if value_1 is nan, it doesn't mean anything
[14:06:42] <mickey8> df.dropna() will remove the row in both cases
[14:07:09] <jinsun> ah you should be able to control which columns it will check for NA
[14:07:11] <newdimension> Anyone know how I can use an except_ close in SQLAlchemy to filter a q1 on q2 on certain columns but then return all columns?
[14:07:17] <newdimension> *clause
[14:07:18] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[14:08:10] *** Joins: debayer948 (~debayer@76.82.226.116)
[14:08:44] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10f9:d1b2:f192:f14c:2bd5:212c)
[14:08:53] *** Joins: fanis30 (~anon@adsl-116.37.6.163.tellas.gr)
[14:12:05] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f9:d1b2:f192:f14c:2bd5:212c) (Ping timeout: 268 seconds)
[14:12:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[14:12:51] <jinsun> mickey8: so one way is `df = df.drop(df.index[df["Value_0"].isna()])`, that will drop all rows for which "value_0" is NA, looks like dropna itself doesn't have a way to choose columns
[14:13:37] <mickey8> jinsun thanks a lot for the help. i'll play with it, but it's clear why it wasnt removing the value_0 nans earlier, so it's already progress
[14:14:01] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:14:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:15:05] *** Joins: teut (~teut@2401:4900:1c68:6b85:29a1:5e80:8386:5c5c)
[14:15:18] *** Lord_of_Life_ is now known as Lord_of_Life
[14:17:17] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Ping timeout: 240 seconds)
[14:19:14] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:19:33] *** Joins: Lightsword (~Lightswor@user/lightsword)
[14:20:31] <jinsun> mickey8: well an even simpler way will be `df = df[df["Value_0"].notna()` but the .drop way will allow you to do it inplace also
[14:21:37] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:26:24] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[14:26:51] <dfkfs> how can you match a text before whitespace or at the end?
[14:30:06] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[14:31:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:32:00] <summonner> trim then regex   ".+(capture group)$"
[14:32:46] <elink> pip compatible tool for removing orphaned packages an uninstall? (ie. without knowing pip-autoremove)
[14:33:15] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:33:16] <dfkfs> unfortunately whitespace can be within string
[14:33:22] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:33:31] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[14:36:37] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[14:36:44] *** Joins: shad (~shad@user/shad)
[14:37:32] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[14:37:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:38:23] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[14:39:22] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[14:39:47] *** Joins: debayer948 (~debayer@76.82.226.116)
[14:40:50] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[14:42:00] *** Quits: Arw| (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[14:42:23] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:42:28] *** Quits: debayer948 (~debayer@76.82.226.116) (Client Quit)
[14:42:38] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[14:42:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:43:21] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[14:43:29] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[14:43:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[14:44:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[14:44:39] *** Joins: synbiose (~synbiose@user/synbiose)
[14:44:55] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:47:40] *** Joins: Arw| (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[14:48:42] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:49:19] *** Quits: aniketgm (~aniketgm@49.36.59.102) (Quit: leaving)
[14:49:49] *** Joins: aniketgm (~aniketgm@49.36.59.102)
[14:49:57] *** Quits: Sylhouette (~johan@87.233.191.146) (Remote host closed the connection)
[14:49:58] *** Quits: greknod282 (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[14:50:07] *** Joins: debayer948 (~debayer@76.82.226.116)
[14:51:15] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:51:33] *** gentooclimax is now known as climax
[14:52:32] *** Joins: greknod282 (~grek@120.88.171.98)
[14:53:57] *** Joins: marcello42 (~mp@2001:1a81:121a:ec00:31d0:9741:cc4a:a42b)
[14:54:56] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:55:29] *** Joins: cdown (~cdown@163.114.131.1)
[14:55:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[14:56:13] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:56:21] *** Joins: blackleitus (~blackleit@189.195.195.100)
[14:56:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:57:38] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[14:57:42] *** climax is now known as gentooclimax
[14:57:48] *** Joins: elbit0r (~viktor@195.32.87.115)
[14:58:03] *** Joins: blackleitus (~blackleit@189.195.195.100)
[14:58:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:59:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[14:59:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[14:59:39] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[15:00:04] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:00:09] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10f9:d1b2:f192:f14c:2bd5:212c) (Read error: No route to host)
[15:00:20] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f9:d1b2:809d:35b3:ab45:1702)
[15:00:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:00:38] *** Quits: pycode (~pycode3@2001:b07:5d28:551:4aac:44d2:5105:e0f9) (Ping timeout: 250 seconds)
[15:00:45] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[15:01:47] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:02:30] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:04:32] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:04:33] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[15:04:44] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:05:07] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:3cd5:850f:984a:e858)
[15:06:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:06:21] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f9:d1b2:809d:35b3:ab45:1702) (Ping timeout: 268 seconds)
[15:07:17] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:11:36] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f9:d1b2:809d:35b3:ab45:1702)
[15:11:56] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:12:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:14:47] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[15:14:55] <dfkfs> i tried \b but it doesn't work when the matched text is not a word
[15:15:05] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:16:29] *** Quits: amaenli (~amaenli@user/amaenli) (Read error: Connection reset by peer)
[15:18:09] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:18:34] *** Joins: amaenli (~amaenli@aries.uberspace.de)
[15:19:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:19:17] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 240 seconds)
[15:19:48] *** Joins: fef (~thedawn@user/thedawn)
[15:19:55] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:21:45] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:22:17] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[15:23:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[15:23:20] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Client Quit)
[15:24:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:25:15] <Zweimer> I am communicating with a multiprocess using a JoinableQueue. I access the elements in the Queue one by one and call task_done() after the process is finished with the element. My caller has a queue.join() to wait for the process to wait for the task_done(). However, if the process is processing the element and there is an error occuring, the
[15:25:16] <Zweimer> join() wait indefinately. There is just no timeout for the queue's join() function. Is there an alternative solution?
[15:25:21] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:25:43] <nedbat> dfkfs: r"foo( |$)"   ?
[15:26:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:28:40] *** Joins: justm33_ (~Username@82-171-85-246.fixed.kpn.net)
[15:29:32] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:30:04] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[15:31:01] *** Quits: justm33 (~Username@82-171-85-246.fixed.kpn.net) (Ping timeout: 256 seconds)
[15:31:28] *** Quits: fanis30 (~anon@adsl-116.37.6.163.tellas.gr) (Quit: WeeChat 3.4)
[15:33:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[15:33:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[15:33:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:34:04] *** Joins: dez (uid92154@user/dez)
[15:34:21] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[15:34:44] *** Joins: kevr (~kevr@user/kevr)
[15:35:06] *** Joins: esther (~esther@2607:fb90:5fea:6ef9:ca17:1927:1b75:50ea)
[15:35:39] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:35:43] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:03] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:36:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:38:17] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Ping timeout: 240 seconds)
[15:39:12] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[15:39:17] *** Quits: esther (~esther@2607:fb90:5fea:6ef9:ca17:1927:1b75:50ea) (Ping timeout: 240 seconds)
[15:39:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[15:39:33] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[15:39:57] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:40:15] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[15:40:20] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:40:58] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:41:10] *** Joins: jmd (~user@de.cellform.com)
[15:41:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:41:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:41:23] *** Joins: arschus (~Guest96@wsip-184-178-59-136.ok.ok.cox.net)
[15:41:30] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Client Quit)
[15:42:37] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[15:43:22] *** Joins: fikran (~fikran@user/fikran)
[15:43:56] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[15:44:13] *** Joins: sammie (~sammie@217-122-207-100.cable.dynamic.v4.ziggo.nl)
[15:44:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:45:06] <jmd> I'm instantiating an object, and for reasons I won't go into now the constructor throws an exception.  I'm a bit confused as to why the destructor also throws an exception.  Surely it shouldn't even be called?   I have no try/catch statements so I expected the program simple to have ended.
[15:45:28] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:46:56] <Yhg1s> jmd: If by constructor you mean __init__, it's called after the object is actually created (to initialize it). If by destructor you mean __del__, it's called when the object is destroyed even if __init__ raised an exception.
[15:47:13] <Yhg1s> If you're talking about a C type, it's a little different. (You'll have to show code and output.)
[15:47:21] <sammie> Hi, I'm struggling to get treesitter to work with norg (file types). I get an 'Error detected while processing .nord files' when opening files, and 'invalid node at (...)' lua errors. `:TSUpdate` doesn't solve the issue. If anyone has experience and is brave to help me out, please let me know
[15:47:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:47:52] <sammie> oops, wrong window, sorry
[15:48:07] <jmd> Yhg1s: I was talking about __init__ and __del__
[15:48:33] <Yhg1s> jmd: I highly, highly recommend never using __del__.
[15:48:42] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[15:49:01] <jmd> So how would you recommend freeing resources that __init__ has taken?
[15:49:36] <p-i-> Is there any issue with reading from a file that's being written to by another running process?
[15:49:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:49:54] <Yhg1s> jmd: it depends on the resources. If they're Python objects, normally, just let them be destroyed by Python. If something more needs to be done, and it can't be done explicitly, perhaps a weakref callback.
[15:50:20] <Yhg1s> p-i-: it depends on the platform. Windows doesn't really let you do that, for example.
[15:50:23] <wyre> could I get requests.get().json() as a python dictionary? 🤔
[15:50:35] <wyre> should I import json.load?
[15:50:38] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[15:50:44] <Yhg1s> p-i-: it also depends on how you're writing to it and what you expect to happen.
[15:50:50] <lesshaste> is there a chat room to discuss stable-baselines?
[15:50:51] *** Joins: pudup (~pudup@180.148.44.210)
[15:50:57] <jinsun> wyre: .json() will give you a dict
[15:51:02] <Yhg1s> wyre: requests.get().json() will decode the JSON data and give you Python objects (usually a dict, yes)
[15:51:25] <wyre> Yhg1s, jinsun, thank you guys 😜
[15:51:43] <p-i-> It's an ubuntu box
[15:52:01] <p-i-> I'm storing data that's coming in from a websocket
[15:52:14] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[15:52:26] <p-i-> But I want to be able to read data stored using another process
[15:53:18] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:53:56] <Yhg1s> p-i-: generally speaking that's fine.
[15:54:07] <p-i-> 👍
[15:54:58] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[15:56:55] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[15:57:11] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[15:58:03] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:58:09] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Client Quit)
[15:59:58] *** Quits: pythia (~pythia@ti0044a400-1030.bb.online.no) (Remote host closed the connection)
[16:00:19] *** Joins: pythia (~pythia@ti0044a400-1030.bb.online.no)
[16:01:26] *** dob1_ is now known as dob1
[16:02:21] <lesshaste> what do ep_len_mean  and ep_rew_mean  mean in stable-baselines?
[16:03:28] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:03:37] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 240 seconds)
[16:03:53] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[16:04:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:05:25] *** Quits: arschus (~Guest96@wsip-184-178-59-136.ok.ok.cox.net) (Quit: Connection closed)
[16:05:39] *** Joins: nomic (~nomic@185.192.69.41)
[16:05:49] *** Joins: jpic (~jpic@82.142.9.130)
[16:06:02] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[16:06:09] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[16:06:10] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b) (Ping timeout: 268 seconds)
[16:06:23] <lesshaste> I don't fully understand lambda function. In this line make_vec_env(lambda: BitFlipEnv(array_length=50), n_envs=12)  what exactly is being passed to the make_vec_env function?
[16:06:58] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:07:02] *** Joins: shad (~shad@user/shad)
[16:07:17] *** Quits: percyc (~percyc@183.236.188.154) (Ping timeout: 256 seconds)
[16:07:17] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[16:08:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[16:08:07] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:08:11] *** Joins: debayer948 (~debayer@76.82.226.116)
[16:08:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[16:08:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[16:08:47] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[16:09:00] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:09:08] <mar77i> hey guys, I have a conceptual thing I'm wondering about: I have a base class that overloads get_size() and draw() methods, but those should actually replace any overloaded method. outside of reassigning the wrapped method in __init__ and nasty, badly stackable `__getattribute__` hacks, I can't really think of a good way.
[16:10:03] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[16:10:14] *** Joins: bluedust (~bluedust@103.160.194.145)
[16:10:24] <lericson> reject the ideals of the fascist class hierarchy
[16:10:38] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[16:11:32] *** Joins: nunggu (~q@user/nunggu)
[16:11:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[16:12:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[16:12:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:12:36] <lericson> make something that draws() and gets_size() and let it be its own class instead of trying to force subclasses into compliance
[16:12:49] <jinsun> lesshaste: 2 things are being supplied, the lambda as the first argument, and n_envs=12 as a keyword argument
[16:13:17] *** Quits: bluedust_ (~bluedust@117.241.176.36) (Ping timeout: 240 seconds)
[16:14:47] <dfkfs> is there a safe way to address a list?
[16:14:57] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[16:15:08] <lericson> there are only safe ways, dfkfs
[16:16:12] *** Joins: Klinda (~superleag@user/klinda)
[16:16:13] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Client Quit)
[16:16:32] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 256 seconds)
[16:16:44] *** Joins: percyc (~percyc@183.236.188.154)
[16:16:47] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[16:17:48] *** Quits: pudup (~pudup@180.148.44.210) (Quit: Leaving)
[16:18:08] *** Joins: d1cor (~diego@179.63.242.120)
[16:18:30] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[16:18:30] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[16:18:30] <dfkfs> it does throw an exception when index is out of bounds
[16:18:54] <p-i-> My .venvs are playing funny games with me.  https://bpa.st/O54Q
[16:19:01] <vlt> dfkfs: Sounds very safe to me :D
[16:19:19] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[16:19:51] <xheimlich> I'm having increible problems getting glob.glob to do what I want.
[16:20:11] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:20:25] <xheimlich> import glob; glob.glob("~home/xheimlich/*")  # why would this return an empty list
[16:20:48] <lericson> because you must os.expanduser, xheimlich
[16:20:58] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:20:59] <mar77i> lericson: interesting, yeah. thing is that the get_size() part is pretty finnicky, as it relates to the "frames" in an ascending manner, while we'd probably want to draw() descendingly (apply each frame in iteration). hmm. maybe a sort of sub-object group with the frames (around the actual object) in them.
[16:21:01] *** Joins: KvL (~KvL@user/KvL)
[16:21:06] <lericson> and ~home refers to the home of the user home, so /home/home
[16:21:10] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[16:21:33] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[16:21:36] <xheimlich> lericson: yes, that was a mistypo of a simpler example I contrived to ask the question. Thanks for the tip on expanduser.
[16:21:47] <p-i-> How is this possible? I `deactivate` then `. ../.venv/bin/activate` but `which python` still comes up as `/usr/bin/python`
[16:22:04] <lericson> mar77i: all i can say is that i have had very limited success with the classroom-taught oop patterns, you always get odd warts and it never feels quite right
[16:22:22] <p-i-> Also if I make my script executable and `#!../.venv/bin/python` it is failing to use the correct .venv python.
[16:22:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[16:23:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:23:40] <p-i-> I created the .venv with `/Users/pi/.pyenv/versions/3.10.0/bin/python -m venv .venv`
[16:23:56] <p-i-> I've done this twenty times before and never bumped into this
[16:26:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:27:19] <p-i-> virtualenvs have consistently been my #1 painpoint since using Python
[16:27:45] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 268 seconds)
[16:27:53] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[16:29:13] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[16:31:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:31:32] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[16:32:02] *** Quits: algebwarf (~dw4rfc4t@78.167.65.212) (Client Quit)
[16:32:24] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[16:32:31] <lericson> p-i-: you probably need a stronger grasp of how your system works then
[16:32:38] <lericson> virtualenvs are pretty simple
[16:32:59] <p-i-> How can I figure out what's going on here?
[16:33:26] *** Quits: algebwarf (~dw4rfc4t@78.167.65.212) (Client Quit)
[16:33:37] *** Quits: someuser (~user@197.54.58.85) (Ping timeout: 240 seconds)
[16:33:43] <lesshaste> what does the -f do in pip install dgl -f https://data.dgl.ai/wheels/repo.html ?
[16:33:58] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:33:58] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:33:58] *** Joins: JordiGH (~jordi@user/jordigh)
[16:34:42] <lericson> lesshaste: pip install --help
[16:35:00] <lericson> p-i-: look at your PATH and look at what's inside .venv/bin, you should be able to piece together what's going on
[16:35:12] *** Joins: nunggu (~q@user/nunggu)
[16:35:44] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:84e4:394d:7448:ee01:64ca)
[16:36:12] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[16:36:23] <lesshaste> lericson,  thanks but what is the point of it? pip install dgl appears to work just fine
[16:37:14] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:37:26] <lericson> lesshaste: ¯\_(ツ)_/¯
[16:37:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[16:38:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[16:38:07] <p-i-_> lrwxr-xr-x  1 pi  staff    43B 21 Jan 17:58 python@ -> /Users/pi/.pyenv/versions/3.10.0/bin/python
[16:39:02] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:f981:e2b1:518d:d697) (Ping timeout: 240 seconds)
[16:39:12] <p-i-_> oh wait. Something's wrong.
[16:39:25] <p-i-_> I must have renamed the project folder after creating the .venv
[16:39:53] <lericson> ta da
[16:39:55] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[16:40:01] <lericson> good job, you solved your own problem!
[16:40:04] <p-i-_> $PATH has /Users/pi/Desktop/src/2022-01-21-yobi/.venv/bin but I renamed the folder to 2022-01-21--yobi
[16:40:17] <lericson> never relocate your virtualenvs
[16:40:24] <p-i-_> dangit!
[16:40:25] <p-i-_> Thanks
[16:41:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:42:02] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:42:24] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:42:41] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[16:43:20] *** Joins: martums5 (~martums@user/martums)
[16:44:48] *** Joins: gusto (~Augustus@109.255.100.54)
[16:44:59] *** Quits: aoei (~aoei@nethackscoreboard/aoei) (Quit: WeeChat 3.4)
[16:45:13] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[16:46:52] *** Quits: aniketgm (~aniketgm@49.36.59.102) (Ping timeout: 268 seconds)
[16:47:49] *** Joins: smacky (~smacky@87.196.80.173)
[16:48:10] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:48:52] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:51:11] *** Quits: nicode (~nic@2607:f2c0:9479:8500:1518:aee1:e163:8981) (Ping timeout: 268 seconds)
[16:52:02] *** Joins: teut93 (~teut@2401:4900:1c68:6b85:29a1:5e80:8386:5c5c)
[16:52:15] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:53:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:54:44] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:54:47] <xheimlich> I can't get the id attribute of an ast.Name object. Any obvious reasons?
[16:55:23] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[16:55:27] *** Quits: teut (~teut@2401:4900:1c68:6b85:29a1:5e80:8386:5c5c) (Ping timeout: 256 seconds)
[16:55:31] <xheimlich> nor oes getattr work
[16:56:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:56:43] *** Joins: someuser (~user@197.54.58.85)
[16:56:51] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[16:57:06] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[16:57:25] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[16:57:39] <xheimlich> nevermind. Sometimes in the parse tree it turns out that the body of an ast.ClassDef has ast.AnnAssign that are not ast.Name
[16:57:43] *** Joins: georgios (~georgios@user/georgios)
[16:59:02] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:59:04] *** Joins: xkuru (~xkuru@user/xkuru)
[16:59:17] *** Joins: Atque (~Atque@user/atque)
[16:59:44] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:02:28] *** Joins: cosimone (~user@93-47-230-23.ip115.fastwebnet.it)
[17:03:37] *** Quits: han-solo (~hanish@178.248.115.11) (Changing host)
[17:03:37] *** Joins: han-solo (~hanish@user/han-solo)
[17:03:53] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[17:03:57] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:04:35] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[17:05:52] *** Joins: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net)
[17:09:48] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[17:10:06] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:10:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[17:14:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[17:14:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:16:07] *** Joins: barry1 (~Thunderbi@222.129.38.226)
[17:16:23] *** Quits: cosimone (~user@93-47-230-23.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[17:17:10] *** Joins: frost (~frost@user/frost)
[17:18:02] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:19:07] *** Joins: pycode (~pycode3@2001:b07:5d28:551:ad16:74a2:e382:1ca9)
[17:20:05] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[17:20:15] *** Quits: fuz (~fuz@user/fuz) (Remote host closed the connection)
[17:20:23] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[17:22:17] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:22:25] *** Joins: cosimone (~user@93-47-230-23.ip115.fastwebnet.it)
[17:23:51] *** Joins: arschus (~connectic@wsip-184-178-59-136.ok.ok.cox.net)
[17:24:16] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:24:19] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:24:40] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:24:40] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[17:25:00] *** Parts: algebwarf (~dw4rfc4t@78.167.65.212) (Leaving)
[17:26:10] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[17:27:45] *** Quits: sammie (~sammie@217-122-207-100.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.0.1)
[17:27:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[17:27:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[17:28:01] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[17:29:36] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[17:29:50] <newdimension> Is there any utility to help me convert raw SQL into SQLAlchemy code?
[17:29:51] *** Quits: rmagyar (~rmagyar@54038678.catv.pool.telekom.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:30:35] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:31:31] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:33:23] *** Quits: cosimone (~user@93-47-230-23.ip115.fastwebnet.it) (Remote host closed the connection)
[17:33:47] *** Quits: smacky (~smacky@87.196.80.173) (Quit: Quit)
[17:34:47] *** Joins: cpach (sid296028@id-296028.helmsley.irccloud.com)
[17:35:22] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:5d6a:d89f:b418:cca2)
[17:35:26] *** Joins: bluedust_ (~bluedust@89.45.90.110)
[17:35:41] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:144d:695f:3542:acbe) (Ping timeout: 256 seconds)
[17:35:50] *** Joins: cosimone (~user@93-47-230-23.ip115.fastwebnet.it)
[17:35:57] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:36:49] *** Quits: teut93 (~teut@2401:4900:1c68:6b85:29a1:5e80:8386:5c5c) (Ping timeout: 256 seconds)
[17:38:17] *** Quits: bluedust (~bluedust@103.160.194.145) (Ping timeout: 240 seconds)
[17:38:52] <deniska> newdimension: probably not, but you can always go with something along the lines of `execute(text('here goes raw sql')` if you are porting some code
[17:38:57] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:84e4:394d:7448:ee01:64ca) (Ping timeout: 240 seconds)
[17:39:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:39:20] *** Joins: bloody (~bloody@user/bloody)
[17:40:28] <cpach> hi folks. i'm writing a small program to do some housekeeping on a file server. old files will first be compressed and then the original file will be deleted.
[17:40:41] <cpach> i'm thinking about doing something like this: with ZipFile(ar.zip, 'w') as myzip: myzip.write("doc.txt")
[17:40:45] <cpach> (linebreak was omitted)
[17:41:05] <cpach> then i want to run os.remove('doc.txt')
[17:41:06] *** Joins: Bardon (~Bardon@user/Bardon)
[17:41:07] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Read error: Connection reset by peer)
[17:41:26] <cpach> however... should i perhaps check for any errors from ZipFile() before deleting the original file?
[17:41:32] <cpach> any ideas on how to do that?
[17:41:34] <chilversc> I'd be tempted to stick with using tried and tested linux tools such as tar, gz, zip etc
[17:41:43] <cpach> chilversc: why?
[17:41:50] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[17:41:55] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 256 seconds)
[17:42:10] <chilversc> they're well tested and robust, most edge cases they've already seen and fixed
[17:42:16] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:2fa:9603:e9a8:8ca1)
[17:43:17] <cpach> except for stuff like filenames containing spaces...
[17:43:45] <chilversc> depends on the tool, that's something you'd need to check
[17:44:06] <deniska> cpach: space related problems typically occure due to shell
[17:44:09] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[17:44:14] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[17:44:16] <cpach> deniska: indeed
[17:44:31] <deniska> cpach: you can still subprocess to tar via python :)
[17:44:44] <cpach> the reason i went for python is that i need some logic on how to select which files to operate on
[17:45:06] <cpach> otoh, if i want to i could use python for that, and then emit a list that i feed to xargs
[17:45:12] *** Joins: nomic (~nomic@185.192.69.41)
[17:45:23] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:45:29] <chilversc> though if implementing in python, you just need to decide how much verification you want to perform, vs the time cost. As after creating the compressed file, you could compare the original file to the compressed file (decompressing it) to check they match
[17:45:58] <cpach> chilversc: good point
[17:45:59] <deniska> I'd expect native python function to raise an exception if something goes wrong
[17:46:01] <grym> cpach: i like your xargs idea
[17:46:07] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:46:24] <cpach> deniska: i suck at exception handling. any suggestion on how to check for that?
[17:46:33] <chilversc> cpach: also, if its a single file you might want to just pick a compression algorithm such as gzip, or lzma
[17:46:36] <cpach> grym: yeah it's not too bad if i might say so myself :-p
[17:46:49] <deniska> cpach: oh, if you don't check for it, a program will just crash and won't execute os.remove :)
[17:47:03] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:47:04] <newdimension> deniska: I expected as much. Are you familiar with SQLAlchmey? This is where I reached but I wasn't able to do the final JOIN  https://dpaste.org/pNJ8
[17:47:11] <cpach> chilversc: yeah i opted for zip file since i know that the user will be able to handle it on windows 10 without any 3rd-party applications
[17:47:19] <Swayze> orm bad
[17:47:21] <cpach> deniska: haha
[17:47:22] <Swayze> tsql good
[17:47:23] *** Joins: greedom (~greedom@p200300de670c8a006f004628596dd926.dip0.t-ipconnect.de)
[17:47:33] * Swayze grin
[17:48:05] <grym> cpach: ah ok because my next question was going to be "well, why not rsync actually" :D
[17:48:20] <cpach> grym: does rsync compress files?
[17:48:45] <CrtxReavr> In transit, you mean?
[17:48:49] <chilversc> cpach: one thing I'd advise you test is that the ZipFile implemenation supports >4GiB files
[17:49:10] <chilversc> cpach: another thing to consider is file type, as some files there's no point compressing
[17:49:14] <CrtxReavr> rsync uses ssh by default. . . which does support compression, but it's  non-default option.
[17:49:28] <chilversc> cpach: also perhaps consider using the OS native support for compression at the file system level
[17:49:29] *** Quits: arschus (~connectic@wsip-184-178-59-136.ok.ok.cox.net) (Remote host closed the connection)
[17:49:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[17:49:39] <grym> i'm not sure you can compress over the wire
[17:49:48] <grym> doing it locally first is, of course, silly with rsync
[17:49:55] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[17:49:55] <grym> the whole point is incremental diffs, right
[17:50:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[17:50:15] <CrtxReavr> If you want the file to be written compressed remotely, rsync will not do that.
[17:50:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[17:50:22] <CrtxReavr> It'd have to be compressed first.
[17:50:31] <grym> right.
[17:50:34] *** Joins: shad (~shad@user/shad)
[17:50:37] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:50:41] *** Joins: xkuru (~xkuru@user/xkuru)
[17:51:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:51:43] <chilversc> newdimension: you have to start a new query, and then you should be able to join to the existing query
[17:52:12] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[17:52:17] *** Joins: esther (~esther@2607:fb90:5fe0:ad1e:b463:b6c1:b0ee:95de)
[17:52:17] <chilversc> newdimension: https://docs.sqlalchemy.org/en/14/orm/queryguide.html#joining-to-subqueries
[17:52:43] *** Joins: fikran (~fikran@user/fikran)
[17:54:41] <chilversc> newdimension: though what database are you using, as you might be able to re-write that query as; SELECT * FROM indeed_posts WHERE (company_name, title) NOT IN (SELECT company_name, title FROM linkedin_posts)
[17:56:02] <newdimension> chilversc: I'm using Postgres
[17:56:17] *** Quits: esther (~esther@2607:fb90:5fe0:ad1e:b463:b6c1:b0ee:95de) (Ping timeout: 240 seconds)
[17:56:17] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[17:56:28] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:56:37] <CrtxReavr> The dataset module makes DB interaction a whole lot simpler.
[17:56:45] *** Joins: apteryx (~maxim@dsl-205-236-230-254.b2b2c.ca)
[17:57:02] <apteryx> hello!  How can I create a list containing 6 different instances of dict?
[17:57:02] <CrtxReavr> https://dataset.readthedocs.io/en/latest/
[17:57:02] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:57:02] <chilversc> newdimension: Postgres will support NOT IN on a tuple
[17:57:25] <apteryx> I naively tried: [{}] * 6, but that seems to give me 6 references to the *same* dict
[17:57:26] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[17:57:47] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 268 seconds)
[17:57:54] *** Joins: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:57:54] *** Joins: faceface (~faceface@user/faceface)
[17:57:57] <CrtxReavr> apteryx, you can append the dict to a list.
[17:58:02] <chilversc> newdimension: though I can't quite remember the SQLAlchemy to do that, it would be similar to the join on a subquery version, only using where with a not in predicate, where you're saying something like where(notin(subquery))
[17:58:23] <CrtxReavr> apteryx, though. . . you might find a dict of dicts more useful.
[17:58:25] <han-solo> `[{} for _ in range(6)]`
[17:58:28] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Quit: Client closed)
[17:59:48] *** Joins: __that__ (~dgg@139.47.33.165)
[17:59:48] <CrtxReavr> han-solo, double-up on your ``s and it'll be proper markdown.  >=]
[17:59:53] <apteryx> han-solo: thanks;  any clues as to why [{}] * does not work?
[17:59:54] <__that__> Afternoon everybody
[18:00:15] <chilversc> newdimension: ah, here's the not_in version https://stackoverflow.com/a/33631517
[18:00:29] <grawity> apteryx: because you're applying the * to an actual list that already contains the dict object
[18:00:32] <han-solo> CrtxReavr: i thought single ` highlighted that in some web clients
[18:00:40] <CrtxReavr> apteryx, so you intend to slice to reference individual dicts?
[18:00:43] <grawity> CrtxReavr: it's proper markdown in every parser I've seen
[18:00:57] *** Joins: frost (~frost@user/frost)
[18:01:05] <__that__> is anyone here working in Data Science with Python? I am not a data scientist myself but having used Python for a while I am having a hard time to accept R... It is a very primitive language in my opinion.
[18:01:06] <grawity> apteryx: ...and not to the literals themselves
[18:01:10] *** Quits: greedom (~greedom@p200300de670c8a006f004628596dd926.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:01:29] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[18:01:29] <newdimension> chilversc: Could you tell me what I'm doing wrong with the join version ? https://dpaste.org/QnT6#L6
[18:01:31] <__that__> I wondered if there is anyone here using Python consistently for Data Science without having to go bak to R
[18:01:35] <apteryx> CrtxReavr: my code references each dict via the list index, then modify specific keys
[18:01:39] <__that__> seeking what it is not found yet in Python
[18:01:45] <CrtxReavr> grawity, I've always seen ``stuff`` for a single line of "code" and ``` stuff ``` for blocks of "code."
[18:01:52] *** Joins: zeden (~zeden@user/zeden)
[18:01:54] *** Joins: greedom (~greedom@p200300de670c8a006f004628596dd926.dip0.t-ipconnect.de)
[18:01:56] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:01:57] *** Joins: dirtwash (~dirtwash@user/dirtwash)
[18:02:09] <han-solo> CrtxReavr: `` works, i think
[18:02:11] <CrtxReavr> apteryx, I'd not advise that. .. go for a dict of dicts.
[18:02:12] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Ping timeout: 250 seconds)
[18:02:31] <apteryx> what is the rationale?
[18:02:31] <han-solo> apteryx: do you have a sample code of what you are going for ?
[18:02:40] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:02:52] <grawity> CrtxReavr: always? doubt it
[18:02:59] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:5d6a:d89f:b418:cca2) (Remote host closed the connection)
[18:03:03] <dirtwash> I got a question that is not directly python relevant but not sure where else to ask right now. How does one go about dev/staging/production if your data is environment sensitive? That meaning that I can't dump prod into staging because it would cause issues. Are there any standard ideas/rules about stuff like that?
[18:03:19] *** Joins: killadi (~u0_a161@27.97.169.11)
[18:03:25] <grawity> CrtxReavr: `` is also valid, e.g. if your stuff has a ` in itself (one ``two`three`` four), but a single ` is valid as well and seems to be much more common in markdown sources I've seen
[18:03:31] <phy1729> apteryx: https://docs.python.org/3/library/stdtypes.html#common-sequence-operations   s * n or n * s  equivalent to adding s to itself n times
[18:03:31] <CrtxReavr> apteryx, explicit, vs. implicit.
[18:03:52] <chilversc> newdimension: you're trying to access "subquery.title" which doesn't exist, as subquery is a Query object, not a table. Note in the example the final call to .subquery() on the query object
[18:04:09] <phy1729> apteryx: note 2 explicitly lists this pitfall
[18:04:22] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[18:04:42] <chilversc> newdimension: so currently your subquery variable is of type Query https://docs.sqlalchemy.org/en/14/orm/query.html#sqlalchemy.orm.Query
[18:05:30] <chilversc> newdimension: you need to be calling this method to give you back an alias for that query https://docs.sqlalchemy.org/en/14/orm/query.html#sqlalchemy.orm.Query.subquery
[18:05:33] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[18:05:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[18:05:58] *** Joins: vats (~vats@103.158.91.47)
[18:06:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[18:06:21] <apteryx> han-solo: here's the (now working) code: https://bpa.st/U6AA
[18:06:24] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:06:57] *** Joins: michagogo (uid14316@user/michagogo)
[18:06:58] <grawity> that looks like it's halfway between original and working
[18:07:08] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[18:07:11] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Remote host closed the connection)
[18:07:14] *** Joins: Fiji (~Fiji@user/fiji)
[18:07:40] *** Joins: debayer948 (~debayer@76.82.226.116)
[18:08:05] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[18:08:20] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[18:08:29] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:08:40] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:4de3:f824:1243:8d01) (Quit: Client closed)
[18:08:45] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[18:08:50] <newdimension> chilversc: You're saying I should do subquery.subquery().title? That doesn't work eithher
[18:09:34] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:10:21] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:11:09] *** Joins: p-i- (~Ohmu@2001:44c8:4611:d672:3090:516f:ee09:e4be)
[18:11:13] <chilversc> newdimension: I was more thinking; subquery = indeed.except_(linked).subquery()
[18:11:15] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:11:34] *** killadi is now known as ott
[18:11:37] <chilversc> newdimension: as its the alias you need to join on to
[18:12:03] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:12:56] <chilversc> newdimension: note in the example it is; subq = ( select(Address)...subquery() ); stmt = select(User).join(subq, ...)
[18:13:18] <chilversc> newdimension: and you don't want to call, .subquery() multiple times, as each one will give you a new alias, distinct from the previous alias
[18:13:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:14:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:14:40] *** Joins: minto (~mintograd@47.201.5.61)
[18:14:58] *** Joins: rsx (~dummy@ppp-188-174-133-55.dynamic.mnet-online.de)
[18:15:01] <newdimension> chilversc: Same error https://dpaste.org/x1Nd#L18  The example isn't using the ORM as far as I can tell. Do I need to switch to that style?
[18:15:45] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:01] <chilversc> newdimension: no, but you'll need to use a different API if you're not using the ORM, I can't quite remember the syntax but its similar to the ORM
[18:16:28] <chilversc> newdimension: so you're using the core expression API?
[18:16:42] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:16:47] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[18:16:59] *** Joins: odwtt (~odwtt@96.74.34.85)
[18:17:08] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:17:10] <han-solo> apteryx: Okay, i assume the first values count will be the max actuator count
[18:17:32] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 240 seconds)
[18:17:38] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:17:47] <newdimension> chilversc: This is a very small project where I'm using SQLAlchemy in order to learn it. So far I've only used the ORM because I wanted to learn it. From what I can tell the ORM wants there to be a relationship in order to JOIN and that why I'm having a hard time to join a subquery with a table
[18:18:12] <CrtxReavr> grawity, I guess you're right: https://www.markdownguide.org/basic-syntax/#code - though I've used editors that default to ``
[18:18:17] <chilversc> newdimension: doensn't have to be, relationships just let it auto join without needing to specify the join condition / columns
[18:18:31] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[18:18:49] *** Joins: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de)
[18:19:10] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[18:19:13] <newdimension> chilversc: In that case I'm not really following what I'm doing wrong then. I've defined a query (indeed.except_(linked)) why can't I just join a table with it?
[18:19:19] *** Quits: Schrostfutz (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Ping timeout: 256 seconds)
[18:19:55] *** Joins: blingrang (~blingrang@user/blingrang)
[18:21:55] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:22:24] <chilversc> newdimension: you can, we're just missing something subtle
[18:23:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[18:23:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[18:23:53] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:23:58] *** Joins: drogas (~drogas@jump2.jet.uk)
[18:24:04] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:25:03] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e5b7:2049:7be:2775)
[18:25:03] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e5b7:2049:7be:2775) (Changing host)
[18:25:03] *** Joins: skapata (~Skapata@user/skapata)
[18:25:10] *** Joins: dante-as (~dante-as@86.121.90.224)
[18:25:18] *** Joins: Pickchea (~private@user/pickchea)
[18:25:57] *** Joins: grooverman (~grooverma@152.254.155.18)
[18:25:57] <dante-as> Hi guys, how can I add the function name and the line number inside the context when calling a class? For name I nailed it with os.path.basename(__file__)
[18:26:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[18:27:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[18:27:14] *** Joins: grooverman_ (~grooverma@177.102.119.200)
[18:27:17] <chilversc> newdimension: as an initial test, you could try it without the .execpt_(linked), i.e. just subquery = indeed.subquery(); and see if that then runs
[18:27:26] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[18:27:36] <han-solo> dante-as: maybe use logging, with proper format string ?
[18:27:40] <apteryx> han-solo: yes
[18:28:03] *** Joins: shad (~shad@user/shad)
[18:28:06] <han-solo> dante-as: https://docs.python.org/3/library/logging.html#logrecord-attributes
[18:28:25] <newdimension> chilversc: Same error "AttributeError: 'Subquery' object has no attribute 'title'"
[18:28:26] <han-solo> apteryx: alright then
[18:28:57] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[18:29:18] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[18:29:34] *** Joins: CombatVet (~c4@user/combatvet)
[18:29:57] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[18:30:06] <chilversc> newdimension: try subquery.c.title
[18:30:21] *** Joins: Elodin (~weechat@user/elodin)
[18:30:24] <dante-as> han-solo: yes, I am using the logging class for that, but I am using it as "context=os.path.basename(__file__)". How can I add 2 arguments to context?
[18:30:40] <chilversc> newdimension: ah, yeah, overlooked that when reading the "Joining to Subquery" section, they have subq.c.user_id
[18:30:48] <han-solo> what is context ?
[18:30:55] <newdimension> chilversc: that worked
[18:31:01] <newdimension> should I try it with the except now?
[18:31:12] <chilversc> newdimension: yup, I knew it was something subtle I'd forgotten
[18:31:13] *** Quits: grooverman (~grooverma@152.254.155.18) (Ping timeout: 256 seconds)
[18:31:13] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[18:32:12] <lesshaste> is there some way to get a manual in pdf format? I would like to get https://docs.dgl.ai/guide/index.html
[18:32:17] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 240 seconds)
[18:32:21] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[18:32:37] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:32:44] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[18:32:50] *** Joins: Pickchea (~private@user/pickchea)
[18:32:57] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[18:32:58] *** Quits: blingrang (~blingrang@user/blingrang) (Quit: WeeChat 3.2.1)
[18:33:06] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[18:34:10] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[18:35:22] *** Joins: newdimension (~newdimnes@user/newdimension)
[18:35:40] *** Quits: andi_ (~andi@2a01:4f8:c0c:a014::2) (Changing host)
[18:35:40] *** Joins: andi_ (~andi@user/andi/x-3467420)
[18:36:09] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:36:21] <chilversc> newdimension: though you should try the WHERE NOT IN variation if you can, if for some reason either of those tables had two posts by the same company with the exact same title you'd end up with duplicates in the output using join
[18:36:52] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6445-a70e-e260-03f3.res6.spectrum.com)
[18:36:57] <newdimension> chilversc: Sorry my client got d/c so I missed some of your messages
[18:37:15] *** Joins: rmagyar (~rmagyar@54038678.catv.pool.telekom.hu)
[18:37:38] <newdimension> chilversc: I got an attribute error when I changed back to the exept() https://dpaste.org/V0CR#L18
[18:38:53] *** Joins: blddk (~blddk@user/blddk)
[18:39:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:39:24] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:39:41] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[18:40:16] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:40:33] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[18:40:37] *** Quits: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[18:40:48] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:40:52] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[18:41:26] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[18:41:52] *** Quits: blddk (~blddk@user/blddk) (Quit: The Lounge - https://thelounge.chat)
[18:42:08] *** Joins: blddk (~blddk@user/blddk)
[18:43:36] <chilversc> newdimension: looks like its this issue https://github.com/sqlalchemy/sqlalchemy/issues/5399
[18:43:43] *** Quits: grooverman_ (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[18:44:01] *** Joins: aniketgm (~aniketgm@49.36.59.102)
[18:44:20] <chilversc> newdimension: looks like you need to label the column that you're selecting otherwise it gets a random name https://stackoverflow.com/a/26251749
[18:44:43] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:45:03] <chilversc> newdimension: so that would be something like; linked = session.query(PostLinkedIn.company_name.label('foo')) then you can use subq.c.foo
[18:46:34] *** Joins: grooverman (~grooverma@152.254.155.18)
[18:46:57] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[18:47:25] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:48:04] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:49:20] *** Joins: Elodin (~weechat@user/elodin)
[18:49:30] *** Joins: Fiji_ (~Fiji@user/fiji)
[18:49:47] *** Quits: rmagyar (~rmagyar@54038678.catv.pool.telekom.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:51:10] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[18:51:32] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:51:57] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[18:52:21] <newdimension> chilversc: Is the ON clause correct here? session.query(PostIndeed).join(items, PostIndeed.title == items.c.title, PostIndeed.company_name == items.c.company_name). The docs say the second argument is the ON but I didn't know how to have two conditions so I just passed it to the third
[18:52:45] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[18:52:47] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[18:52:47] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:53:22] <chilversc> newdimension: I think it accepts either join(target, condition, condition, ...) or join(target, [condition, condition, ...])
[18:53:24] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:53:36] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[18:53:54] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 268 seconds)
[18:54:01] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[18:54:20] *** Quits: p-i- (~Ohmu@2001:44c8:4611:d672:3090:516f:ee09:e4be) (Remote host closed the connection)
[18:54:37] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:54:48] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Quit: Leaving)
[18:55:29] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Quit: Leaving)
[18:55:48] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:fdbe:513b:57e2:ec26) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:56:04] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[18:56:07] *** Joins: ornxka (~ornxka@user/ornxka)
[18:56:14] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[18:57:14] <ornxka> the python 2.7/python 3 transition and its consequences have been a disaster for the human race
[18:57:14] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[18:57:38] <chilversc> newdimension: though it can't hurt to wrap that in and_(...)
[18:57:54] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[18:57:56] <newdimension> chilversc: tried both forms and got an error. Trying and_ now
[18:58:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:59:16] *** Quits: tessler (~ct@user/tessler) (Quit: Using Circe, the loveliest of all IRC clients)
[19:01:26] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 256 seconds)
[19:01:39] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:02:04] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[19:02:31] *** Quits: WantToHelp (~WantToHel@user/wanttohelp) (Quit: Lost terminal)
[19:03:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:03:26] <newdimension> chilversc: This finally worked :D https://dpaste.org/HVcs#L18,19   :D
[19:04:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[19:04:32] <newdimension> Would you mind elaborating on the "WHERE NOT IN" variation? You mentioned it would be a better approach. Also, is there any resource that can complement the official docs? I can't seem to really follow them
[19:04:51] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[19:04:52] <chilversc> newdimension: yeah, you hit two of the more complex parts of SQL Alchemy, unions and subqueries
[19:04:52] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:05:11] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Changing host)
[19:05:11] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[19:05:29] <chilversc> newdimension: not really, its that or search for the concept and hope you get an answer from something like StackOverflow
[19:05:46] <chilversc> newdimension: though it does help once you know the name of what you're after, eg. subquery, alias, etc
[19:05:51] *** Joins: whaley (~whaley@2603-6080-a301-33d1-8cca-2f16-7418-e2aa.res6.spectrum.com)
[19:06:14] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[19:06:18] <chilversc> newdimension: and the fact that when reading the API you see that except/include all refer to union, and knowing union is more popular I searched for issues around that instead of except
[19:07:25] *** Joins: p-i- (~Ohmu@2403:6200:8978:84e4:30d2:136a:bbe0:502d)
[19:07:25] <chilversc> newdimension: as for the; NOT IN clause, the standard syntax is WHERE column NOT IN (SELECT column FROM ...); but many databases also support the tuple variant which is; WHERE (col1, col2, ...) NOT IN (SELECT col1, col2, ... FROM ...)
[19:08:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:08:15] <chilversc> newdimension: the only thing to watch out for with IN/NOT IN is handling of nulls, its best to filter out nulls from the subquery, e.g. NOT IN (SELECT col1, col2 FROM foo WHERE col1 IS NOT NULL AND col2 IS NOT NULL)
[19:08:28] *** Joins: Elodin (~weechat@user/elodin)
[19:09:34] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.4)
[19:09:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[19:09:56] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Quit: Leaving)
[19:10:40] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 250 seconds)
[19:11:18] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[19:11:42] *** Joins: Elodin (~weechat@user/elodin)
[19:12:59] <newdimension> chilversc: thank you for all the help :)
[19:13:25] *** Joins: shad (~shad@user/shad)
[19:13:31] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[19:13:56] *** Joins: Elodin (~weechat@user/elodin)
[19:15:10] <zerosum> hello, so i'm using this python library which uses a yaml config file.. I set some env variables and then try to use them inside this YAML file but it's not picking them up.. do I have to do something within my python script even though those vars are being called in a separate YAML file?
[19:16:26] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[19:18:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:18:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[19:18:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:19:04] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:19:13] <randall> zerosum: Usually the docs to the lib will tell you how to configure it. No idea what you're doing wrong without knowing which lib you're talking about.
[19:19:42] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:20:18] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:20:37] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 240 seconds)
[19:20:52] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00cd435cd27fd11e23.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:21:05] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[19:21:41] <apocalyptech> zerosum: I wouldn't expect environment variables to be interpreted when found inside a YAML file.  Whatever reads the YAML file would have to be intentionally doing that itself, which I doubt is a common thing to do.
[19:21:53] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:21:57] <zerosum> randall the library is called Nornir https://nornir.readthedocs.io/en/latest/index.html but have no idea what I should be looking in there for
[19:22:31] *** Joins: Bardon (~Bardon@user/Bardon)
[19:22:41] <zerosum> apocalyptech that's what I was thinking too!
[19:22:45] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:22:51] *** Joins: dfinr (~dfinr@user/dfinr)
[19:24:39] *** Joins: funkytwig (~funkyttwi@82.40.234.47)
[19:25:01] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[19:25:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:25:35] <zerosum> the library looks for a YAML file containing a group of hosts called groups.yaml https://nornir.readthedocs.io/en/v3.1.1/tutorial/inventory.html
[19:25:43] *** Joins: zeden (~zeden@user/zeden)
[19:26:02] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:27:14] <zerosum> so I'm just putting in my env variable as one of those values (username/pass) to connect to host but when I run my python script it just doesnt seem to connect..
[19:28:23] *** resmo_ is now known as resmo
[19:28:52] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[19:29:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:30:04] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:30:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:31:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:32:10] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[19:32:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[19:32:52] <apocalyptech> zerosum: Yeah, there's about zero chance that it would try to substitute environment vars for you
[19:33:03] *** Joins: Elodin (~weechat@user/elodin)
[19:33:47] <apocalyptech> zerosum: Things that read from YAML or JSON or other serialization formats like that are just expecting a standalone chunk of data.  Any environment var you put in there would just be interpreted literally.  So it's probably trying to use the literal string `${PASSWORD}` or whatever to do the auth.
[19:34:48] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[19:35:18] *** Joins: Elodin (~weechat@user/elodin)
[19:35:21] *** Quits: dante-as (~dante-as@86.121.90.224) (Quit: Client closed)
[19:35:46] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[19:36:27] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[19:37:17] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[19:37:35] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-227.poda.cz) (Quit: Leaving)
[19:37:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:37:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[19:38:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:39:06] *** Quits: yaraju (~yaraju@user/yaraju) (Remote host closed the connection)
[19:39:31] *** Joins: yaraju (~yaraju@user/yaraju)
[19:39:43] <zerosum> umm ok..
[19:40:15] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[19:41:06] *** Quits: yaraju (~yaraju@user/yaraju) (Remote host closed the connection)
[19:41:32] *** Joins: yaraju (~yaraju@user/yaraju)
[19:42:03] *** Joins: Barones (~Barones@189.50.80.77)
[19:42:16] *** Quits: lyr (~lyr@user/lyr) (Quit: Ping timeout (120 seconds))
[19:42:31] *** Joins: lyr (~lyr@user/lyr)
[19:42:55] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[19:43:06] *** Joins: Babar (~Babar@2405:4803:a04c:a7e0:c560:9559:fb0c:1a1b)
[19:43:15] *** Joins: sharksauce (sharksauce@user/sharksauce)
[19:43:22] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:43:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:44:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:44:08] *** Joins: reset (~reset@user/reset)
[19:45:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:45:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:45:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:45:59] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:46:13] <causasui> anybody in here have a general opinion on this site? is it worth recommending? https://python-patterns.guide/
[19:46:48] <grym> causasui: brandon rhoades usually knows what's up
[19:46:59] <grym> at a minimum he's interesting to listen to
[19:47:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:48:05] *** Joins: shad (~shad@user/shad)
[19:48:13] *** Joins: han-solo (~han-solo@user/han-solo)
[19:48:34] <causasui> yeah I've thumbed through this and I feel like my opinionated n00b ass isn't going to immediately agree with everything but if I agree with everything immediately then I'll never learn anything from it either
[19:48:49] <xavierdarkness>  
[19:48:50] <causasui> so it's thought provoking for sure
[19:48:57] <SnoopJ> Gang of Four is pretty abstract stuff, but Brandon Rhodes +1
[19:49:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[19:50:52] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[19:50:58] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[19:52:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[19:52:26] *** Joins: Auron (~Auron956@user/auron)
[19:52:30] *** Joins: montybanksnyc (~montybank@108.50.135.21)
[19:52:35] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[19:52:38] *** Quits: whaley (~whaley@2603-6080-a301-33d1-8cca-2f16-7418-e2aa.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:53:53] *** Joins: rendar (~rendar@user/rendar)
[19:54:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:54:37] *** Quits: hightower2 (~hightower@95.168.118.68) (Ping timeout: 240 seconds)
[19:54:38] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[19:55:13] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:30c7:6c33:e839:6e4c)
[19:55:13] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:30c7:6c33:e839:6e4c) (Changing host)
[19:55:13] *** Joins: skapate (~Skapata@user/skapata)
[19:55:22] *** Joins: Guest19 (~Guest19@120-069-158-163.dynamic.caiway.nl)
[19:55:47] *** Joins: Elodin (~weechat@user/elodin)
[19:55:51] <Guest19> Someone here interested in python that also likes to play runescape?
[19:56:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[19:57:16] <pycode> hello i am doing  df[start:end].values and then i get:   FutureWarning: Indexing a timezone-aware DatetimeIndex with a timezone-naive datetime is deprecated and will raise KeyError in a future version.  Use a timezone-aware object instead.
[19:57:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[19:57:21] <pycode> could anyone translate it? :D
[19:57:32] <pycode> df = pandas dataframe
[19:58:19] <SnoopJ> pycode, the DataFrame's .index understands timezones, but the objects you're indexing with (start, end) do not
[19:58:30] <grym> pycode: one day, you'll update pandas and that line will throw a KeyError
[19:58:46] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[19:59:15] <pycode> SnoopJ, yes but i do not get the problem i mean .values return a numpy array...so i do not need the index
[19:59:24] <SnoopJ> pycode, you are indexing the DataFrame
[19:59:35] <SnoopJ> that is necessarily an interaction with the .index
[19:59:37] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[19:59:55] <pycode> SnoopJ, so could you give me an exmaple on how i should do that? i am a bit confused
[20:00:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:00:16] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:01:17] *** Joins: legola (~legola@46.235.100.54)
[20:01:26] *** Quits: barry1 (~Thunderbi@222.129.38.226) (Quit: barry1)
[20:01:30] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[20:01:30] <SnoopJ> pycode, perhaps you want to use pd.date_range() and set the `tz` argument? https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#time-zone-handling
[20:01:30] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[20:01:57] <SnoopJ> as long as your keys are 1) something pandas understands 2) aware of timezones, it should avoid the warning
[20:02:04] *** Joins: fikran (~fikran@user/fikran)
[20:02:19] <pycode> the index is datetimeindex
[20:02:21] *** Joins: erkan (~erkan@p200300d3470e4c62a14063fbcc50603f.dip0.t-ipconnect.de)
[20:02:26] *** Guest19 is now known as the
[20:02:38] <pycode> so i should select by datetime (with tz) instead of df[0:10]
[20:02:39] <pycode> ?
[20:02:43] <SnoopJ> pycode, do you understand what I am saying to you? Your keys do not have a timezone.
[20:02:57] <SnoopJ> If you don't understand this bit, we need to get there, because the rest isn't going to make any sense to you if it doesn't.
[20:03:26] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[20:03:28] <pycode> SnoopJ, what do you mean with "keys" ? the index? or the start:end i am using to filtering the df ?
[20:03:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[20:03:41] <grym> pycode: it looks like your dataframe is indexed with datetime objects that have a timezone associated with them, but you're trying to slice it with integers
[20:03:45] *** the is now known as Contagua
[20:03:53] <SnoopJ> pycode, the objects `start` and `end` do not know about timezones.
[20:04:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[20:04:17] <pycode> grym, yes exactly the situation
[20:04:19] <SnoopJ> grym, why do you say they're integers? The warning makes it look like they're datetime objects of some sort
[20:04:31] <pycode> so basically instead of using integer i should use datetime with tz
[20:04:36] *** Joins: paul424 (~tom@ip-5-172-237-88.multi.internet.cyfrowypolsat.pl)
[20:04:36] <SnoopJ> pycode, by keys I mean `start` and `stop`
[20:04:42] <SnoopJ> uh, `start` and `end`*
[20:04:51] <pycode> start and end are integer now
[20:04:56] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:04:59] <pycode> so i have to change how i filter the df using timestamps
[20:05:00] <SnoopJ> pycode, use .iloc then
[20:05:02] <erkan> hi there
[20:05:11] <grym> SnoopJ: pycode spoke of [0:10
[20:05:17] <SnoopJ> pycode, `df.iloc[start:end].values`
[20:05:17] <pycode> SnoopJ, using iloc is slower?
[20:05:31] <SnoopJ> pycode, is that a question, or snark?
[20:06:03] <pycode> SnoopJ, ahahah i mean....is iloc filter slower than direct filter using df[timestamp1:timestamp2]
[20:06:04] <pycode> ?
[20:06:16] <SnoopJ> pycode, I doubt it, it's probably substantially faster
[20:06:24] <pycode> ok
[20:06:29] <SnoopJ> because it just looks up the corresponding values in each Series
[20:06:39] <SnoopJ> if you're worried about it, time it
[20:06:54] *** justJustache is now known as justache
[20:07:04] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[20:07:08] <pycode> no no just curiosity, the speed it is not a problem now,
[20:07:09] <pycode> thanks!
[20:07:18] *** Joins: theseb (~theseb@c-98-200-200-66.hsd1.tx.comcast.net)
[20:07:32] <erkan> I have a problem, can somebody help
[20:07:40] <SnoopJ> erkan, only if you ask us a question related to the problem
[20:07:43] *** Joins: debayer948 (~debayer@76.82.226.116)
[20:08:03] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[20:08:11] <erkan> no it is different kind of problem
[20:08:37] <Wooble> how are we supposed to know if we can help without knowing what the problem is?
[20:09:18] <erkan> i have written a code do delete an empty folder
[20:09:23] <erkan> it is buggy
[20:09:29] *** Joins: magla (~gelignite@55d4db0b.access.ecotel.net)
[20:09:39] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[20:09:46] <Swayze> paste the code in the link in the topic
[20:10:01] <erkan> https://bpa.st/PDAQ
[20:10:04] *** Joins: blackleitus (~blackleit@189.195.195.100)
[20:10:17] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:10:41] <erkan> it works if I have one folder which is empty
[20:10:41] <Swayze> and whats the bug?
[20:11:23] <erkan> but if two empty folders within, it deletes only the last one
[20:11:37] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[20:11:42] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:11:45] *** Quits: pigweed (~pigweed@97.119.204.166) (Quit: Leaving)
[20:11:46] <erkan> and on empty folder file stays
[20:11:51] <erkan> one
[20:12:08] <SnoopJ> erkan, os.rmdir() can only remove empty directories, so you have to work your way from the inside-out in that case. You might want to look at shutil.rmtree() instead
[20:12:26] *** Joins: thiras (~thiras@user/thiras)
[20:12:43] <erkan> SnoopJ, that is what I want
[20:12:49] *** Joins: XV8 (~XV8@2601:5cb:c001:50:552:a21c:75c1:657)
[20:12:57] <erkan> remove an empty directory
[20:13:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:13:24] <erkan> the provided code does it
[20:13:31] <erkan> but only one time
[20:13:34] *** Joins: EvilDMP_ (~textual@cpc2-horn3-2-0-cust135.6-1.cable.virginm.net)
[20:13:42] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:14:19] <Swayze> https://stackoverflow.com/questions/47093561/remove-empty-folders-python
[20:14:24] <Swayze> there are two working examples here
[20:14:24] <erkan> I have a mac by the way and there no hidden files in the empty folders
[20:14:37] <Swayze> see if that helps
[20:14:45] <Swayze> one uses shutil.rmtree
[20:15:31] *** Quits: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[20:15:36] <SnoopJ> erkan, I can't reproduce this, if I `mkdir -p /tmp/foo/bar /tmp/foo/baz` and then call that function with the argument `/tmp/foo` it deletes both inner directories. It would help to see a complete reproduction of the bug.
[20:15:48] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[20:16:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 256 seconds)
[20:16:54] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:17:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:17:09] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[20:17:17] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[20:17:59] <SnoopJ> https://bpa.st/A7SQ
[20:18:41] <Swayze> i think he means nested
[20:18:51] <erkan> yes nested
[20:18:53] *** Joins: kosh (~kosh@user/kosh)
[20:18:56] <Swayze> /tmp/foo/bar/1 /tmp/foo/bar/2
[20:19:15] *** Quits: EvilDMP_ (~textual@cpc2-horn3-2-0-cust135.6-1.cable.virginm.net) (Read error: Connection reset by peer)
[20:19:32] <SnoopJ> works in that case too
[20:19:57] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 240 seconds)
[20:20:01] *** Joins: ice9 (~ice9@user/ice9)
[20:20:08] <Swayze> after removing 1 and 2 does it remove 'bar'
[20:20:15] <SnoopJ> yes
[20:20:17] <Swayze> nice
[20:20:20] <Swayze> :-p
[20:20:21] <InPhase> erkan: Can you do an ls -lR on the directories in question to show us the permissions and ownership on them?
[20:20:35] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[20:20:52] *** Joins: EvilDMP_ (~textual@cpc2-horn3-2-0-cust135.6-1.cable.virginm.net)
[20:20:57] <SnoopJ> good idea InPhase, could be some other form of OSError not related to non-emptiness
[20:21:06] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:21:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:21:18] *** Quits: pycode (~pycode3@2001:b07:5d28:551:ad16:74a2:e382:1ca9) (Ping timeout: 250 seconds)
[20:21:22] <Wooble> it should be printing the errors, though...
[20:21:34] <InPhase> Did we see an output?  :)
[20:21:39] *** Quits: __that__ (~dgg@139.47.33.165) (Remote host closed the connection)
[20:22:03] <SnoopJ> don't think so
[20:22:07] <InPhase> erkan: Also, show the output from trying it in a pastebin.
[20:22:23] <erkan> I get [Errno 66] Directory not empty: '/Users/erkanacar/Pictures/Groningen/untitled folder'
[20:23:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[20:23:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[20:23:33] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[20:23:40] *** Joins: Bardon (~Bardon@user/Bardon)
[20:24:00] <SnoopJ> ah, if I put a file in one of those directories, I can get the parent directory to linger
[20:24:02] <erkan> ls -l
[20:24:02] <erkan> total 0
[20:24:02] <erkan> drwxr-xr-x  2 erkanacar  staff  64 21 Jan 17:52 nested
[20:24:03] <Wooble> I vaguely remember a similar problem where someone's filesystem wasn't keeping up with the code, but now I forget all of the details.
[20:24:19] <SnoopJ> so, yea, this is the "you have to work inside-out" problem
[20:24:37] *** Quits: someuser (~user@197.54.58.85) (Ping timeout: 240 seconds)
[20:24:43] <Wooble> they are working inside out already.
[20:24:56] <InPhase> erkan: You missed the "R" in ls -lR
[20:25:01] <SnoopJ> hmm, and so they are
[20:25:23] <InPhase> Wooble: Probably nfs.  This is often a mess.
[20:25:41] <erkan> ls -lR
[20:25:41] <erkan> total 0
[20:25:41] <erkan> drwxr-xr-x  2 erkanacar  staff  64 21 Jan 17:52 nested
[20:25:42] <InPhase> That could potentially be the case here because the group is "staff".
[20:25:43] <erkan> ./nested:
[20:25:58] <SnoopJ> it's hard to tell what's going on since we only have about half of the problem description
[20:26:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:295b:27c3:87b1:2b8f) (Ping timeout: 240 seconds)
[20:26:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:26:13] *** Joins: Betal (~Betal@user/betal)
[20:26:46] <InPhase> erkan: Let's try that one more time with ls -alR but put it in a pastebin.
[20:27:02] <InPhase> erkan: You might have a hidden non-directory which rmdir will not handle.
[20:27:23] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[20:27:27] <erkan> what is a pastebin
[20:27:32] <erkan> ?
[20:27:33] <InPhase> https://bpa.st
[20:28:33] <erkan> https://bpa.st/IRQQ
[20:28:49] <erkan> yes; I that is the case
[20:28:49] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[20:28:49] <Wooble> it's always .DS_Store
[20:29:20] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:29:25] <Swayze> lol
[20:29:31] <InPhase> :)
[20:29:39] *** Quits: EvilDMP_ (~textual@cpc2-horn3-2-0-cust135.6-1.cable.virginm.net) (Ping timeout: 256 seconds)
[20:29:44] <Swayze> nice debugging InPhase ;-)
[20:29:50] <Swayze> ls -alSr
[20:29:52] <Swayze> ftw
[20:29:57] <InPhase> erkan: Next, there is this procedure called defenestration that you should attempt on your Mac to permanently resolve this issue.
[20:30:09] <Wooble> but uh... nested/ doesn't have .DS_Store
[20:30:19] <SnoopJ> yea I don't understand why nested/ would persist because of this
[20:30:24] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[20:30:24] *** Quits: remedan (~remedan@octo.cafe) (Ping timeout: 256 seconds)
[20:30:44] <erkan> no nested gets deleted
[20:30:52] <erkan> doppelt stays
[20:31:01] <erkan> and is empty too
[20:31:02] * SnoopJ has no idea what doppelt is
[20:31:20] <erkan> just another directory
[20:31:42] <Wooble> is it the one with the .DS_Store file?
[20:31:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:32:06] <erkan> yes
[20:32:18] <InPhase> erkan: So if you want a recursive deleter, you should add file deletion to it.
[20:32:39] <Swayze> he wants to delete empty folders
[20:32:42] <Wooble> (or at least .DS_Store deletion, if you want to keep otherwise-nonempty dirs
[20:32:46] <Swayze> the question is does he cosnider .ds_store folder to be empty
[20:32:50] <InPhase> Okay, well you are successfully deleting empty folders.
[20:32:53] <Swayze> if so he needs to code for it specifically
[20:33:01] <Swayze> :-p
[20:33:09] *** Quits: ott (~u0_a161@27.97.169.11) (Read error: Connection reset by peer)
[20:33:16] <Wooble> tbh apple's filesystem should just consider them empty and let you remove them :)
[20:33:26] <Swayze> technicalities to be argued
[20:33:40] <Swayze> its not empty and if you suddenly lost a bunch of configs that way
[20:33:45] <Swayze> :(
[20:34:23] <Wooble> i'm not advocating for including all dotfiles, just the ones that are useless they insist on adding
[20:34:26] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[20:34:43] <SnoopJ> Swayze, what is it that is being lost if you are removing a directory and decide to allow that to implicitly remove the subdir that holds config *for* the directory?
[20:34:47] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:34:49] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[20:34:55] <Swayze> fair enough @ Wooble
[20:34:55] <Wooble> (thanks, nextstep!)
[20:35:10] <SnoopJ> (assuming that .DS_Store/ is being used in a sane way which is unlikely because .DS_Store is fairly insane)
[20:35:22] <Swayze> lol ok i get it
[20:35:25] *** Joins: remedan (~remedan@octo.cafe)
[20:35:30] <Swayze> lets just make a special case for ds_store
[20:35:32] * SnoopJ meant the question seriously
[20:35:36] <InPhase> Apparently Finder does not even show .DS_Store files, so it's effectively empty.
[20:35:47] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[20:36:04] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[20:36:04] *** Joins: menace (~someone@user/menace)
[20:36:08] *** menace is now known as Deknos
[20:36:08] <ChrisWarrick> that’s a weird argument
[20:36:08] *** Quits: grooverman (~grooverma@152.254.155.18) (Read error: Connection reset by peer)
[20:36:13] <Swayze> i dont see how you would code for ds_store to be this special cases and in which scenarios, just seems messy
[20:36:16] <InPhase> If you configure it to show all files, they special case .DS_Store to be invisible.
[20:36:17] *** Quits: thorbw_ (~tw@46.230.130.50) (Read error: Connection reset by peer)
[20:36:26] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:36:29] <InPhase> So it's reasonable to special-case it in a deleter as a file to just delete.
[20:36:29] <ChrisWarrick> also, is there no way to convince Finder to show .DS_Store?
[20:36:49] <InPhase> ChrisWarrick: According to wikipedia, no, not as of 10.12.something
[20:36:51] <SnoopJ> Swayze, I'd probably try to rmtree() it in every directory on OSX, heh.
[20:36:54] *** Joins: grooverman (~grooverma@177.102.119.200)
[20:37:44] <SnoopJ> or maybe collect targets for removal in a scan phase and do the actual removal in a second phase with rmtree()
[20:37:48] <Wooble> defaults write com.apple.finder AppleShowAllFiles TRUE; killall Finder apparently
[20:37:57] <SnoopJ> where the predicate would be "contains nothing, or only .DS_Store"
[20:38:23] <Wooble> SnoopJ: race condition
[20:38:33] <SnoopJ> mm, also has the inside-out problem
[20:38:54] <InPhase> Well os.walk will return a list of files, so you just iterate that first and check for .DS_Store and delete it.
[20:39:02] * SnoopJ probably doesn't worry about racing the disk often enough
[20:39:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[20:39:20] <InPhase> Or blindly attempt a delete of .DS_Store and ignore the failures.
[20:39:30] *** Joins: dstein64 (~dstein64@dannyadam.com)
[20:39:31] <SnoopJ> yea the blind delete seems like the smallest set of changes
[20:39:41] <InPhase> Ah, no...  That's "bad" if there are still files.
[20:39:48] <SnoopJ> yea, you'd want a guard
[20:39:51] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:39:56] <InPhase> One needs to do the os.walk of the files, and delete .DS_Store if it's the only file.
[20:40:09] <InPhase> So if len is 1, and the only file is that.
[20:40:15] <InPhase> Special special case.
[20:40:33] <InPhase> erkan: Does that make sense?
[20:40:37] <TML> find . -name .DS_Store -delete && find . -type d -empty -delete
[20:40:54] <erkan> yes it makes sense
[20:40:55] <TML> Not a particularly pythonic solution, I'll grant :)
[20:41:08] <Wooble> tbh the edge cases where anyone would miss them even in non-empty dirs are so tiny they probably don't matter
[20:41:28] <TML> Wooble: and if they would, they'll be rebuilt on the next time they're needed
[20:42:18] <Wooble> if you manually set view options per folder and really feel strongly about them sticking around... well, seek help? :)
[20:42:20] *** Quits: MrAureliusR_ (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[20:42:43] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[20:43:06] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[20:43:06] *** gentooclimax is now known as climax
[20:43:27] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:43:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[20:43:35] *** Quits: michagogo (uid14316@user/michagogo) (Quit: Connection closed for inactivity)
[20:45:02] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:45:08] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[20:46:26] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 250 seconds)
[20:46:27] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e6:8fde:809d:35b3:ab45:1702)
[20:46:49] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[20:47:02] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-001.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[20:48:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:48:57] *** climax is now known as gentooclimax
[20:49:11] *** Quits: dambuster (~dambuster@185.193.170.225) (Quit: Leaving)
[20:49:32] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[20:49:32] *** Joins: nmz787_ (~nmz787@user/nmz787)
[20:49:35] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:49:50] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f9:d1b2:809d:35b3:ab45:1702) (Ping timeout: 268 seconds)
[20:50:34] <nmz787_> anyone know a good library for using Excel as a database... I really wish sqlite supported it somehow, and am wondering if I should figure out how to shim import/export cleanly (i.e. override methods like commit, etc)
[20:50:42] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[20:51:23] <InPhase> nmz787_: Well, you really shouldn't be using Excel as a database...
[20:51:38] <nmz787_> yeah but....
[20:51:44] <InPhase> nmz787_: Although pandas will read and write Excel files.
[20:51:54] <MacGyver> But what?
[20:51:59] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[20:52:08] <nmz787_> if my app goes down it will be easy to maintain the status quo of accessing the files my team is used to
[20:52:09] <MacGyver> What could you *possibly* say here that justifies using a spreadsheet as a database?
[20:52:13] *** Joins: maryo (~Maryo@user/maryo)
[20:52:22] <nmz787_> and I don't have to deal with shitty IT dbaas engagement
[20:52:28] <ChrisWarrick> nmz787_: in what circumstances would it go down?
[20:52:39] <nmz787_> I already got sharepoint API access figured out
[20:52:43] <ChrisWarrick> nmz787_: reading and writing excel is going to break in so many places
[20:52:55] <nmz787_> how so? I've done it for years for various apps
[20:53:16] <ChrisWarrick> nmz787_: just use a real database, but keep a way to go back to excel if necessary (be ready to export a CSV file?)
[20:53:16] <Payam> Hi
[20:53:50] <nmz787_> ChrisWarrick: I don't want to deal with the IT database infrastructure, here at the company I work for
[20:53:53] <InPhase> nmz787_: Yeah.  You can definitely save out backups to another format if you don't trust a codebase or you want alternate access methods.
[20:54:13] <ChrisWarrick> nmz787_: how will your app be accessed?
[20:54:17] <MacGyver> So use sqlite and have that ready for export to csv?
[20:54:17] <nmz787_> plus the VM infrastructure is stateless
[20:54:27] <nmz787_> so a sqlite db will just go to trash if the VM restarts
[20:54:36] <nmz787_> ChrisWarrick: Flask webapp
[20:54:36] <InPhase> CSV is a great choice for export, as Excel can import it just fine.
[20:54:45] <ChrisWarrick> nmz787_: that sounds like an issue with your VM infrastructure
[20:55:02] <ChrisWarrick> nmz787_: there must be a way to configure persistent storage
[20:55:05] <MacGyver> Exactly how would a spreadsheet *not* go to trash if the VM restarts?
[20:55:09] <nmz787_> InPhase: lots of data already in Excel native format, for some data I'm just wrapping a Flask app around it as another view
[20:55:27] <nmz787_> MacGyver: every time there's a save, it's gonna upload to sharepoint
[20:55:33] *** Joins: tessler (~user@user/tessler)
[20:55:34] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:56:20] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:56:55] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:84e4:2585:d887:c726:2569)
[20:57:04] *** Quits: Speed2u (~Speed2u@bnc.speed2u.nu) (Quit: ZNC - https://znc.in)
[20:57:19] <SnoopJ> openpyxl is useful for working with Excel files, but you'd have to write the "database" parts yourself, especially the parts that keep everything from exploding that you'll get for free with a 'real' database
[20:57:25] <nmz787_> yes I realize I can load Excel and import into a new sqlite database, and also export from sqlite and write rows/cols to Excel... I just haven't found a library that already ironed out things, only snippets for import OR export... just don't want to reinvent the wheel if at all possible
[20:57:34] <InPhase> nmz787_: Well you need a primary format, and Excel files do not come with locks, so this is a sketchy choice for a primary format.
[20:57:48] <nmz787_> I believe sharepoint does come with locks, actually
[20:57:49] <ChrisWarrick> nmz787_: the lack of libraries might be caused by this being a terrible idea
[20:57:56] <InPhase> nmz787_: But you can convert to a sensible primary format, and keep exporting backups in whatever form you choose.
[20:58:02] <SnoopJ> nmz787_, I think InPhase means there is no application-level locking
[20:58:23] <nmz787_> ChrisWarrick: well there's plenty of terrible idea libraries out there :P I can't imagine this is the worst
[20:58:35] <InPhase> Yes.  So if people are just accessing these files directly as an "alternate" method, that's chaos.
[20:58:52] <SnoopJ> although it's worth pointing out that going the other direction (feeding an Excel sheet from a DB) is possible, Excel has an ODBC driver
[20:59:06] <nmz787_> SnoopJ: that's why I thought of just importing and exporting from Excel to sqlite, so sqlite handles all that in-app locking
[20:59:17] *** Joins: ice9 (~ice9@user/ice9)
[20:59:28] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[20:59:34] <nmz787_> SnoopJ: unfortunately I'm just using sharepoint as a file-repo, with no local instance of Excel executable
[20:59:59] <SnoopJ> ouch
[21:00:28] *** Joins: upsala (~zcb@185.209.196.170)
[21:00:31] *** Joins: Speed2u (Speed2u@bnc.speed2u.nu)
[21:00:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:84e4:30d2:136a:bbe0:502d) (Ping timeout: 240 seconds)
[21:01:14] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[21:01:37] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[21:02:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:03:35] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Read error: Connection reset by peer)
[21:03:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[21:04:21] *** Joins: blackleitus (~blackleit@189.195.195.100)
[21:04:58] *** Quits: rsx (~dummy@ppp-188-174-133-55.dynamic.mnet-online.de) (Quit: rsx)
[21:05:38] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[21:06:09] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:06:13] *** Quits: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:06:27] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[21:06:31] *** Joins: spithash_ (~spithash@user/spithash)
[21:07:39] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:7ad9:4c95:662c:fb7c) (Quit: Leaving)
[21:08:20] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[21:08:26] *** Joins: enquora (~enquora@2605:6440:3008:4000::c23a)
[21:08:30] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[21:10:38] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[21:11:07] *** Quits: aniketgm (~aniketgm@49.36.59.102) (Quit: leaving)
[21:12:04] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[21:13:17] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:13:40] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:14:19] *** Joins: dreamon (~dreamon@p54b14230.dip0.t-ipconnect.de)
[21:15:59] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:16:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[21:16:39] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:18:30] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[21:18:32] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Client Quit)
[21:18:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:21:42] *** Joins: x4rchimedes (~archimed3@host-92-10-235-32.as13285.net)
[21:22:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[21:22:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:23:35] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[21:23:55] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[21:24:03] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[21:24:15] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:24:48] *** Joins: kickingv1gas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:25:35] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[21:26:19] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:26:29] *** Joins: Meliso (~Meliso@68.red-2-137-6.dynamicip.rima-tde.net)
[21:26:42] *** Joins: archimedesx (~archimed3@host-92-10-235-32.as13285.net)
[21:26:50] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[21:26:55] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[21:27:25] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[21:27:26] <archimedesx> Can anyone help me with this error? I have completely fucked my Python/Spyder installation: https://i.imgur.com/Br5XEDB.png
[21:28:15] <SnoopJ> archimedesx, looks like the locale directory doesn't exist. If you installed this with your system's package manager, I would try a reinstall there
[21:29:20] *** Quits: x4rchimedes (~archimed3@host-92-10-235-32.as13285.net) (Ping timeout: 250 seconds)
[21:29:44] *** Quits: greedom (~greedom@p200300de670c8a006f004628596dd926.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:29:53] *** Joins: vicfred (~vicfred@user/vicfred)
[21:29:55] *** Quits: enquora (~enquora@2605:6440:3008:4000::c23a) (Remote host closed the connection)
[21:30:52] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Remote host closed the connection)
[21:30:52] <p-i-_> If I'm `yield`ing from a generator, next time I call it, it'll pick up from the same code location...
[21:31:01] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[21:31:07] <p-i-_> Is it possible to pass params into the generator?
[21:31:13] *** Joins: xarchimedes (~archimed3@host-92-10-235-32.as13285.net)
[21:31:35] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:31:47] <p-i-_> If so, how does that work? Will the variables just have the new values when the post-yield line picks up the trail?
[21:32:28] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[21:32:30] <xarchimedes> SnoopJ
[21:32:43] <xarchimedes> I've tried reinstalling python and spyder, I get the same error
[21:32:48] <xarchimedes> any other ideas?
[21:32:48] <Wooble> p-i-_: yes, with generator.send()
[21:32:55] *** Quits: ubert1 (~Thunderbi@p200300ecdf09943ef05cebfd8a506150.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:33:07] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[21:33:40] *** Quits: archimedesx (~archimed3@host-92-10-235-32.as13285.net) (Ping timeout: 250 seconds)
[21:33:43] <bjs> p-i-_: `value = yield` if you `generator.send(42)` when the generator is paused at the yield, then value will be 42.
[21:34:22] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[21:34:43] *** Joins: parv (~quass@user/parv)
[21:35:05] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[21:35:10] <p-i-_> I'm wondering if I can avoid using a class for an async httpx.Client() (session)
[21:35:20] *** Joins: enquora (~enquora@2605:6440:3008:c000::c049)
[21:35:21] <SnoopJ> xarchimedes, not really. Did you try a complete uninstall first?
[21:35:38] <SnoopJ> (back up any custom configuration you have before trying that)
[21:35:42] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[21:35:47] <bjs> p-i-_: it's not obvious to me how these two things relate
[21:35:53] <p-i-_> https://bpa.st/ZFYA
[21:35:55] <p-i-_> Something like this
[21:36:11] <bjs> p-i-_: what do you want the `async yield` thing to do?
[21:36:38] <p-i-_> So the first time I call it, it creates the session and makes the request
[21:36:48] <p-i-_> but subsequent calls make the request through the already open session
[21:37:14] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[21:37:18] <bjs> p-i-_: that's not quite the API of a generator, you don't call a generator many times to make it step through, you loop over it (either with a `for` loop or manually with next());  but sure
[21:37:35] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[21:37:37] <dob1> does the python web server support live reload?
[21:37:45] <bjs> p-i-_: maybe you want `url = yield; ...; yield (await ...)` or something
[21:38:19] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[21:38:28] <dob1> no
[21:39:10] <xarchimedes> whats the command for complete uninstall SnoopJ
[21:39:17] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:a5f8:a755:9a96:8e06)
[21:39:18] <xarchimedes> on linux terminal
[21:39:34] <Meliso> l[5:] = [0] * (len(l) - 5)
[21:39:34] <Meliso> Any more elegant way to fill list end with zeros? :-)
[21:40:53] <Wooble> dob1: are you talking about the toy thing in the http.server module?
[21:40:54] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Remote host closed the connection)
[21:41:29] <p-i-_> I'm thinking something along the lines of https://bpa.st/DVJQ
[21:41:48] *** Joins: Fiji- (~Fiji@user/fiji)
[21:42:17] *** Quits: five64333 (~five6@8.40.26.70) (Ping timeout: 240 seconds)
[21:42:18] <p-i-_> Mainly I'm trying to figure out if this is a viable modern async pattern to avoid classes, or impractical/impoassible
[21:42:20] <bjs> p-i-_: i'm not seeing where the passing params in is coming yet
[21:42:28] <bjs> p-i-_: again I don't see what the classes has to do with this
[21:42:58] <p-i-_> bjs: every time it's invoked, it'll be a different http request, like `GET http://foo.com/bar?a=1&b=2`
[21:43:11] <bjs> p-i-_: did you see our comments about being able to .send() into a generator
[21:43:42] <SnoopJ> xarchimedes, it varies per distribution. What distribution are you using?
[21:43:48] <xarchimedes> mint
[21:43:58] <xarchimedes> apt-get remove --purge?
[21:44:23] *** Joins: dfrey (~dfrey@172.103.152.101)
[21:44:26] <p-i-_> I see, ok makes sense now
[21:44:55] <dob1> Wooble, yes
[21:44:56] <SnoopJ> xarchimedes, try `sudo apt remove spyder3` (or maybe `spyder` depending on what you installed in the first place)
[21:45:00] <p-i-_> ok I feel like this is going against the sanity-grain
[21:45:05] <p-i-_> I should just make a class I think
[21:45:06] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[21:45:19] <p-i-_> clean > clever
[21:45:32] <Wooble> dob1: technically you could probably reload as well as anywhere else in python, i.e., not very well.
[21:45:37] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[21:46:03] <s33ker> hi guys is anyone familiar with eikon api and knows any alternatives for linux...i am running jupyter lab on linux server and need some huge finantial databse to play with ?
[21:46:32] <dob1> Wooble, to be honest I am a bit surprised, or I didn't search very well so my bad, that on linux there is not a web server with live reload for development use (not just in python system)
[21:46:45] <p-i-_> The problem with a class is I can no longer use an `async with` block over my httpx.AsyncClient
[21:47:17] <p-i-_> so I was thinking to maybe abuse a generator to achieve that
[21:47:37] <Wooble> dob1: it's very messy to get right; much easier to just spawn a new worker when changes are detected
[21:48:12] <dob1> Wooble, you know hugo ssg? it have this auto-reload feature, it's very useful
[21:49:44] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b2ee:b7f7:693a:725a) (Quit: pvergain)
[21:49:49] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[21:50:04] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:50:18] <Wooble> dob1: well, it's easier if you're just dealing with a static site and the tool can inject a reload script on the client side :)
[21:50:20] <xheimlich> what I wish someone had told me when I first tried Python was that classes are sort-of-like types
[21:50:25] <xarchimedes> SnoopJ i did remove --purge python spyder and spyder3
[21:50:31] <xarchimedes> then reinstalled spyder
[21:50:35] <xarchimedes> and I still get this: https://i.imgur.com/u06soA7.png
[21:51:00] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[21:51:09] <Wooble> xheimlich: are you coming from another language that makes to insert the "sort-of" disclaimer? :)
[21:51:15] <Wooble> s/to/you/
[21:51:55] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[21:51:58] <xheimlich> well, ABCs are like types.
[21:52:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[21:52:41] *** Joins: five64333 (~five6@8.40.26.70)
[21:52:43] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[21:53:00] *** Joins: blackleitus (~blackleit@189.195.195.100)
[21:53:02] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[21:53:10] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[21:53:31] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[21:54:01] <SnoopJ> in Python they *are* types
[21:54:55] <SnoopJ> xarchimedes, looks like something's wrong with IPython, you might try reinstalling that too.
[21:55:21] *** Joins: octav1a (~quassel@173.195.145.98)
[21:56:16] *** Joins: sidro (~sidro@86.122.231.222)
[21:56:23] *** Joins: greedom (~greedom@p200300de670c8a006f004628596dd926.dip0.t-ipconnect.de)
[21:57:10] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:57:28] <octav1a> Hello, can anyone explain how to install cuda versions pytorch from pypi? I see instructions for example here: https://pytorch.org/get-started/previous-versions/  ; which give commands like $ pip install torch==1.9.0+cu111  ; however, pip says it can only find the plain version variants (without the +cu111 part) , which does seem to be the case when looking at pypi https://pypi.org/project/torch/#history  -- so where can I get these cuda versions from
[21:57:28] <octav1a> then?
[21:58:18] <xheimlich> then life is still beautiful.
[21:58:30] <xheimlich> even if pytorch is hard to get running right now.
[21:58:39] *** Joins: Nutte35 (~Nutte@202.153.82.158)
[21:59:03] *** Parts: erkan (~erkan@p200300d3470e4c62a14063fbcc50603f.dip0.t-ipconnect.de) (Leaving...)
[21:59:04] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:59:10] <grym> octav1a: just 'torch' will get you GPU-enabled wheels by default
[21:59:29] <Meliso> levelCounter[level:] = [0] * (len(levelCounter) - level)
[21:59:29] <Meliso> Any improvements for a more pythonistic approach?
[21:59:40] <octav1a> grym: the plain 'torch' version for some reason is installing cuda 10.x, whereas my system uses 11.x
[21:59:53] <jinsun> that pytorch page says you have to put -f https://download.pytorch.org/whl/torch_stable.html after pip install
[21:59:53] <ChrisWarrick> Meliso: what do you want to do, what is the end goal?
[21:59:55] <grym> octav1a: it can't install cuda itself, but it may be built for 10.2
[22:00:13] <grym> jinsun: yeah i bet they have a weird half-pypi-ish thinng too
[22:00:25] <grym> detectron2 does, and it's the same company, so..
[22:00:30] *** Joins: LiwiLiwi (~LiwiLiwi@103.152.126.77)
[22:00:34] <Meliso> ChrisWarrick: fill the end of the list with zeros
[22:00:53] *** Joins: botfather (~botfather@shell1.dds.nl)
[22:00:58] <octav1a> jinsun: on, I guess my browser width is too small :x
[22:01:01] <octav1a> oh*
[22:01:10] <ChrisWarrick> Meliso: this doesn’t feel clean to me
[22:01:27] <grym> xheimlich: `class Foo: ... ; isinstace(Foo, type)`
[22:01:35] <grym> isinstance*
[22:01:41] <ChrisWarrick> Meliso: I’d perhaps write it as [0 if n >= level else i for n, i in enumerate(levelCounter)]
[22:01:50] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[22:01:58] <octav1a> grym: yeah, it does 'work' , but fp16 / apex fails then
[22:02:02] <octav1a> :s
[22:02:11] <xheimlich> yeah. I mean, my first contact with Python was when 3/2==1.
[22:02:23] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-109.range86-160.btcentralplus.com)
[22:02:34] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:02:38] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[22:02:39] <ELFrederich> anybody got a nice recipe of using concurrent futures with a click.progressbar?
[22:03:02] <grym> xheimlich: it's true in py2, too
[22:03:03] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[22:03:17] <grym> octav1a: ah yes, a familiar pain :(
[22:03:33] <xheimlich> now with dataclasses and enums it's easier to start writing models as product and sum classes.
[22:03:38] <SnoopJ> grym, octav1a it doesn't always give you the GPU version, I've found I need to pass -f [whatever the URL is] to actually get a GPU-aware version
[22:03:46] *** Quits: Speed2u (Speed2u@bnc.speed2u.nu) (Quit: ZNC - https://znc.in)
[22:04:10] <SnoopJ> -f https://download.pytorch.org/whl/torch_stable.html
[22:04:11] <xheimlich> to *think* that way, I mean.
[22:04:17] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 240 seconds)
[22:04:26] *** Quits: marcello42 (~mp@2001:1a81:121a:ec00:31d0:9741:cc4a:a42b) (Ping timeout: 250 seconds)
[22:04:42] <grym> xheimlich: have you encountered pydantic's nod to dependent typing yet
[22:04:42] <SnoopJ> (I have no idea why, but I happened to blunder into this problem with torch 1.7 last week)
[22:04:46] *** Joins: kts (~kts@103.73.237.172)
[22:04:49] <octav1a> SnoopJ: it's so random and unpredictable sometimes -.-
[22:04:50] <xheimlich> yeeea
[22:04:51] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[22:04:52] <grym> SnoopJ: i'll ... add that to the list of pain, i think
[22:04:57] <xheimlich> pydantic is just the best.
[22:05:02] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[22:05:08] <grym> it's not true for 1.6, but forewarned is good
[22:05:20] <grym> xheimlich: conlist is <3
[22:05:21] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[22:05:30] <xheimlich> I don't annotate thoroughly enough that mypy is useful to me. Also mypy with numpy requires some dark incantations.
[22:05:35] <SnoopJ> Since it exhibits on any version at all, I would be hesitant to make such a sweeping remark that it *never* happens
[22:05:42] <SnoopJ> But if you mean "I've never seen that," sure
[22:05:52] *** Joins: tom_ (~tom@ip-5-172-237-88.multi.internet.cyfrowypolsat.pl)
[22:05:56] <SnoopJ> (I can't check because of the $project conflict with 1.6)
[22:05:59] *** Joins: raym (~raym@user/raym)
[22:06:15] <grym> xheimlich: significantly improves my confidence in the structure of incoming POST data, anyway
[22:06:22] *** Joins: Speed2u (Speed2u@bnc.speed2u.nu)
[22:06:37] <xheimlich> exa
[22:06:37] <SnoopJ> the installation instructions don't really clarify why some of the instructions have -f and some don't
[22:06:50] *** Quits: paul424 (~tom@ip-5-172-237-88.multi.internet.cyfrowypolsat.pl) (Killed (NickServ (GHOST command used by tom_)))
[22:06:57] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[22:06:59] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[22:07:02] *** Quits: sidro (~sidro@86.122.231.222) (Remote host closed the connection)
[22:07:03] *** tom_ is now known as paul424
[22:07:25] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[22:07:33] <xheimlich> ctly
[22:07:43] <SnoopJ> could potentially be a Windows quirk; octav1a what platform?
[22:07:46] *** Joins: debayer948 (~debayer@76.82.226.116)
[22:08:04] *** Joins: sidro (~sidro@86.122.231.222)
[22:08:23] <xheimlich> pydantic is like a parser for key value languages like json that outputs idiomatic python.
[22:08:31] <xarchimedes> Can anyone help with this error? https://i.imgur.com/cxwlhp6.png
[22:08:32] <SnoopJ> oh, you're actually reporting a slightly different issue, aren't you. 10.2 is AFAIK the default, you have to ask for 11.x with +cuNNN
[22:08:40] <SnoopJ> (per https://pytorch.org/get-started/locally/)
[22:08:43] <xheimlich> from where  you can even generate c=ode in arduino-c++ or whatever.
[22:08:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[22:09:08] <octav1a> SnoopJ: ubuntu 20.04
[22:09:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:09:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:09:36] <SnoopJ> octav1a, I think you just have to ask for the CUDA version here, the default target is 10.2 at the moment
[22:09:37] <grym> xheimlich: and you get semantically useful errors back to the caller for "free", too
[22:09:48] *** Joins: tomaw_ (tom@libera/staff/tomaw)
[22:10:06] <SnoopJ> xheimlich, I've never seen a part of pydantic that does code generation. What part are you talking about?
[22:10:07] <xheimlich> like a parser for a programming language, yes.
[22:10:18] <xheimlich> not a part of pydantic.
[22:10:32] <SnoopJ> perhaps I misunderstood what "pydantic...outputs idiomatic python" then
[22:10:35] <SnoopJ> means* then
[22:10:46] <xheimlich> just something you can do with
[22:11:01] <han-solo> xarchimedes: what's the `traitlets` version ?
[22:11:04] <xheimlich> idiomatic python objects, not code. idiomatic is the wrong word
[22:11:21] <SnoopJ> it's "just" a framework with lots of useful behavior
[22:11:25] *** Joins: fikran (~fikran@user/fikran)
[22:11:32] <han-solo> xarchimedes: also when pasting errors or code, please consider text instead of image
[22:11:57] <xheimlich> so is lark, a full parser.
[22:12:00] <SnoopJ> xarchimedes, did you try my suggestion to reinstall IPython? If not, you should probably do that.
[22:12:42] <Meliso> ChrisWarrick: thanks, your idea is much more clean
[22:12:44] <xarchimedes> yes SnoopJ didn't work
[22:13:36] *** Quits: LiwiLiwi (~LiwiLiwi@103.152.126.77) (Quit: Leaving)
[22:13:42] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:13:45] *** Joins: arseru (uid515527@user/arseru)
[22:13:59] <xheimlich> i have a 9mo baby in my lap
[22:14:39] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e) (Quit: Textual IRC Client: www.textualapp.com)
[22:14:48] *** Quits: Meliso (~Meliso@68.red-2-137-6.dynamicip.rima-tde.net) (Quit: Client closed)
[22:14:52] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[22:15:12] <xarchimedes> han-solo, how can i find out which version of traitlets i have
[22:15:15] *** Joins: theprophet (~theprophe@85.114.228.184)
[22:16:08] *** Quits: tomaw (tom@libera/staff/tomaw) (Ping timeout: 612 seconds)
[22:16:08] *** tomaw_ is now known as tomaw
[22:16:17] <SnoopJ> xarchimedes, perhaps you can reinstall the python3-traitlets package which I think is what's providing that.
[22:16:20] <octav1a> SnoopJ: do you have an idea how I can install for cuda version 110 ?  I see available torch 1.7.0+cu110 and 1.7.1+cu110 ; and then torchvision 0.8.1+cu110 and 0.8.2+cu110   ; after first trying to install both for 110 I get an error like:
[22:16:20] <octav1a> The conflict is caused by:    The user requested torch==1.7.1+cu110    torchvision 0.8.1+cu110 depends on torch==1.7.0
[22:16:22] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 256 seconds)
[22:16:34] <han-solo> `python -m pip freeze | grep traitlets` whichever python Ipython is using
[22:17:00] *** Joins: pycode (~pycode3@2001:b07:5d28:551:a8cc:3fd7:e5c8:ca52)
[22:17:05] <SnoopJ> octav1a, right, torch 1.7.1 is associated with torchvision 0.8.2, which is documented on the website: https://pytorch.org/get-started/previous-versions/
[22:17:12] <SnoopJ> https://pytorch.org/get-started/previous-versions/#v171 more specifically
[22:17:14] <xarchimedes> han-solo no module named pip
[22:17:33] <han-solo> how id you install Ipython, some package manager ?
[22:17:39] <SnoopJ> you may need to spell it `python3`
[22:17:47] <han-solo> ah yeah
[22:18:00] *** Quits: enquora (~enquora@2605:6440:3008:c000::c049) (Remote host closed the connection)
[22:18:09] <theprophet> SnoopJ remember yesterday i was asking about this code? https://dpaste.org/Wx0t
[22:18:16] <SnoopJ> theprophet, yep
[22:18:27] <theprophet> SnoopJ can you please help me to understand 1 thing?
[22:18:31] <xheimlich> anyway wittgenstein once said the limits of my language are the limits of my world.
[22:18:33] <theprophet> what i want to know is
[22:18:34] <xheimlich> that's a parser
[22:19:27] <octav1a> SnoopJ: thank you ; I guess I'm often too impatient.
[22:19:28] <theprophet> SnoopJ  as you can see when you iterate over dict list it shows only keys , but when you reach this part --> language = favorite_languages[name]
[22:19:39] <theprophet> it also shows values
[22:19:45] <theprophet> how that happens?
[22:19:56] <bjs> theprophet: that's what `some_dict[key]` does.  Given the key, it returns the value
[22:20:13] <bjs> You loop over the keys, then you use that key to find the value in the dictionary.
[22:20:13] <SnoopJ> theprophet, https://docs.python.org/3/tutorial/datastructures.html#dictionaries
[22:20:28] *** Quits: stonkey (~stonkey@user/stonkey) (Read error: Connection reset by peer)
[22:20:33] <grym> octav1a: it doesn't help that torch and torchvision have this weird little dance
[22:20:36] <SnoopJ> (the answer hasn't changed since yesterday)
[22:20:36] <theprophet> yes i undersand that its syntax
[22:20:47] <SnoopJ> oh, you're asking about the implementation?
[22:20:51] <theprophet> yes
[22:21:02] <bjs> theprophet: it's not just the syntax, a dictionary remembers what value you saved for each key.
[22:21:28] <octav1a> grym: yeah, it would be cool if the depends message was a little clearer...or they just kept the same versioning scheme. Oh well.
[22:21:45] <bjs> theprophet: oh, it's basically like a phone book. You can find someone's phone number if you know their name, by looking it up in the book.
[22:21:53] *** Quits: tessler (~user@user/tessler) (Quit: ERC (IRC client for Emacs 27.2))
[22:22:20] *** Parts: arseru (uid515527@user/arseru) ()
[22:22:34] <grym> octav1a: the message is perfectly clear i think
[22:22:37] <grym> it's just annoying
[22:22:58] <theprophet> well if its like that , how come i need to do this [name] if the favorite_languages is by itself what [name[ does?
[22:23:07] <bjs> theprophet: or like a dictionary!  you know the word, and you look up what it means.  A Python `dict` is basically that, a big list of (key,value) things that it can look up the value given the key.
[22:23:14] <SnoopJ> `favorite_languages` doesn't "do" anything, it's an object.
[22:23:15] *** Joins: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net)
[22:23:16] <bjs> theprophet: it's like a function call, you can write `favorite_languages.get(name)` instead.
[22:23:42] <theprophet> yea but it has value right?
[22:23:45] <bjs> theprophet: like with lists, `L = ["a", "b", "c"]` you can go `print(L[1])` to print "b"
[22:23:52] <bjs> looking up the value, given the index.
[22:24:12] <octav1a> grym: when the versions get nit-picky, my mind goes to wondering why it says it depends on 1.7.0 instead of depends on 1.7.0+cu110
[22:24:21] <grym> octav1a: read more closely though
[22:24:26] <bjs> theprophet: the value is inside the dictionary. Like in my list example, the value is inside the list.  I can go L[1] to get "b". I didn't have the value before, but using the index I can get the value out
[22:24:34] <grym> octav1a: `The user requested torch==1.7.1+cu110`
[22:24:44] <grym> and 1.7.1 isn't 1.7.0
[22:25:23] <octav1a> right, the lack of +cu part threw me a bit, where I came to ask again instead of iterating. (because these are very large download sizes)
[22:25:37] <octav1a> maybe it's just me in hindsight.
[22:25:54] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:26:07] *** Joins: tessler (~user@user/tessler)
[22:26:20] <theprophet> bjs that i understand
[22:27:00] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[22:27:02] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[22:27:03] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[22:27:08] <bjs> theprophet: maybe what you are missing is the idea that a dictionary is a hashtable.
[22:27:18] <SnoopJ> (*usually*)
[22:28:10] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[22:28:16] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[22:28:18] <SnoopJ> the interpreter can implement it some other way, if it wants to, as long as the behavior is correct
[22:28:39] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[22:28:58] <theprophet> bjs for example. if i will print  this ---> language = favorite_languages['some key'] i will only get value.
[22:29:07] <bjs> theprophet: yes,  is that what you expected?
[22:29:08] *** Joins: slav0nic (slav0nic@python.su)
[22:29:09] <bjs> or not/
[22:29:11] <theprophet> but this  --> language = favorite_languages[name]
[22:29:18] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[22:29:21] <theprophet> this will print key and value
[22:29:23] <theprophet> how?
[22:29:31] <SnoopJ> that line won't print anything
[22:29:47] <theprophet> it will in if name is in for loop
[22:29:56] <bjs> theprophet: do you also have a line in the for loop printing the key?
[22:30:03] <bjs> if so, it's that line that's printing out the key.
[22:30:06] <theprophet> yes
[22:30:14] <SnoopJ> theprophet, we're getting back into the discussion we had yesterday: if you write code that uses both the key and value, that code will use both the key and the value.
[22:30:28] <bjs> theprophet: but that print has nothing to do with the line you're talking about
[22:30:39] <theprophet> just tell me this
[22:30:40] <SnoopJ> except that the value comes from this line
[22:30:43] <theprophet> in my code
[22:30:51] <theprophet> language = favorite_languages[name]
[22:30:52] <theprophet> this part
[22:30:56] <theprophet> is not a for loop part?
[22:31:01] <theprophet> this is independet?
[22:31:09] <SnoopJ> in *your* code, it is part of the loop
[22:31:11] <theprophet> independent*
[22:31:30] *** Quits: greedom (~greedom@p200300de670c8a006f004628596dd926.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:31:37] <SnoopJ> theprophet, are you confused about where the for loop starts and ends?
[22:31:53] <theprophet> yes now tell me this, if that [name] is the part of the loop , i mean the temprorary variable. is not that temprorary variable only holding key part of the dictionary?
[22:32:04] <bjs> theprophet: maybe it's the for loop you are misunderstanding. It's *inside* the for loop. Your code is saying: "for each name in the favorite_languages dictionary keys, print that name, and then if that name is a friend, then get the favourite language of the person with that name, and then print that"
[22:32:06] <theprophet> how is it changing so later it holds key and value same time
[22:32:07] <theprophet> ?
[22:32:17] <SnoopJ> `name` holds the key, `language` holds the value. you are talking about *two* variables, not one.
[22:32:42] <bjs> theprophet: it's not, `language` only has the value.
[22:32:47] <nmz787_> theprophet: maybe you're confused that the variable `name` exists after your loop ends?
[22:32:57] <nmz787_> it retains the last value the loop assigned to it
[22:33:10] <theprophet> nmz787_ yes exactly.
[22:33:32] <theprophet> bjs yes thats what is confusing me.
[22:33:34] <bjs> theprophet: `name` is the variable (that the `for` loop created) that stores the name,  `language` is a variable that you create that stores the value
[22:33:35] * SnoopJ has completely lost track of the question
[22:33:37] <bjs> theprophet: why is it confusing you?
[22:33:53] <bjs> theprophet: that's what `var = some_dict.get(some_key)` does.  It assigns the value to var.
[22:33:56] *** Quits: theseb (~theseb@c-98-200-200-66.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[22:34:02] <ELFrederich> I thought that concurrent.futures.ThreadPoolExecutor was good for cpu bound stuff.  Is it only good for IO constrained stuff?
[22:34:25] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:34:31] <Wooble> theprophet: what I assume you're missing is python doesn't have block scope.
[22:34:46] <han-solo> ELFrederich: yes
[22:34:50] *** Quits: bluedust_ (~bluedust@89.45.90.110) (Remote host closed the connection)
[22:35:05] <bjs> ELFrederich: it's good for anything where threads is good.  You are probably asking about the GIL? The GIL says that no two threads can be "touching" Python objects at the same time. So for "CPU bound" work that is entierly inside Python the threads basically cannot run at the same time
[22:35:13] *** Joins: bluedust (~bluedust@89.45.90.110)
[22:35:19] <theprophet> Wooble whats a blockescope?
[22:35:19] *** Quits: bluedust (~bluedust@89.45.90.110) (Remote host closed the connection)
[22:35:23] <bjs> so in that sense, yes it's not good for CPU work.  But this does not apply for e.g. working with numpy and things like that, where most of the work is outside Python
[22:35:31] <bjs> Wooble: I don't think so, theprophet's code is like perfectly nested
[22:35:35] <theprophet> Wooble oh ok ok nvm, yes maybe that too confuse me.
[22:35:54] <theprophet> my mainconfusion is
[22:36:04] <theprophet> in for loop name only holds keys
[22:36:09] <SnoopJ> numpy also does its own threading already
[22:36:12] <theprophet> but after if
[22:36:20] <theprophet> it holds key and value
[22:36:23] <theprophet> thats what i dont get
[22:36:24] <bjs> theprophet: no, name is only the key
[22:36:27] <bjs> it doesn't change
[22:36:35] <theprophet> i dont mean directly
[22:36:47] <theprophet> i know it still holds key
[22:36:55] <theprophet> but still shows value
[22:37:07] <theprophet> meanwhile same does not happen in for loop
[22:37:07] <bjs> theprophet: language has the value
[22:37:10] <bjs> you have *2* variables
[22:37:17] <theprophet> and if i remove the IF part. i only get keys from dict
[22:37:36] <bjs> one has the name (the key), and then you use that key to look up the value and you store that value in `language`.
[22:37:40] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[22:37:47] <bjs> theprophet: yes if you remove the if you remove the line that looks up the value.
[22:38:06] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[22:38:16] <theprophet> bjs language = favorite_languages[name] this is that part?
[22:38:17] <bjs> theprophet: think about https://bpa.st/O26A
[22:38:58] <theprophet> that link is exactly what i am confused about
[22:38:58] <bjs> theprophet: yes, that is getting the value from the dictionary which was saved with a key that is equal to whatever `name` is, and then saves that into `language`
[22:39:11] <SnoopJ> it does not change `name` in any way
[22:39:30] <bjs> theprophet: the `name` variable (with the key) is still there, it didn't get changed or anything
[22:39:32] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:39:45] <bjs> you just have a new second variable as well, that contains the value.
[22:39:53] <theprophet> ohhhhhhhhhhh
[22:39:57] <theprophet> oooooooooooooooooooooooooooooooooooooo
[22:40:01] <theprophet> ooooooooooooooooooooooooooooooooooooo
[22:40:04] <theprophet> aaaaaaaaaaaaaaa
[22:40:11] <theprophet> JFC
[22:40:23] <theprophet> omg finnaly
[22:40:36] <theprophet> language is new variable
[22:40:49] <bjs> theprophet: yes `foo = ...` is assigning to a variable
[22:40:50] <theprophet> and it holds the name
[22:41:01] <theprophet> omg
[22:41:02] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[22:41:07] <SnoopJ> does it make sense now? :)
[22:41:13] <theprophet> oh wow yessss
[22:41:28] <theprophet> bjs SnoopJ love you , thanks mannn.
[22:41:47] <SnoopJ> I think bjs deserves the credit
[22:42:22] <theprophet> both of you do
[22:42:39] <theprophet> i was missing the fact that , language is a new variable .. ffs
[22:42:40] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[22:42:44] *** Joins: goldfish (~goldfish@user/goldfish)
[22:43:05] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[22:43:09] *** Joins: Fiji_ (~Fiji@user/fiji)
[22:43:15] <theprophet> because seperataly i knew what ----> language = favorite_languages[name]  did.
[22:43:28] <theprophet> i am so stupid jfc
[22:43:30] *** Joins: blackleitus (~blackleit@189.195.195.100)
[22:43:51] *** Quits: Fiji_ (~Fiji@user/fiji) (Client Quit)
[22:44:21] <SnoopJ> the joys of programming
[22:44:27] <theprophet> lol
[22:44:29] <theprophet> :D
[22:45:24] <nmz787_> I've been programming for ~20 years and sometimes I just have to sit on a problem for a few days before making a few key lines of change to fix a problem that stumped me during hours of debugging
[22:45:28] <mefistofeles> hey, I don't know if this makes sense, but is there a way to avoid asking if some class has some attribute to do something? I'm just thinking of avoiding if statements for performance. I'm doing something like `if self.attribute is None:` and wondering if one can avoid that with some python magic
[22:45:44] <nmz787_> mefistofeles: try except
[22:45:56] <nmz787_> it is faster than if, if I recall correctly, except in the exception case
[22:46:01] *** Quits: blackleitus (~blackleit@189.195.195.100) (Client Quit)
[22:46:04] <mefistofeles> ah true, yeah, that should work
[22:46:42] <theprophet> nmz787_ do you take breaks in situation like yours?
[22:46:47] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[22:46:47] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:47:17] <mefistofeles> nmz787_: thanks, will try it
[22:47:26] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:47:33] <SnoopJ> mefistofeles, n.b. that testing `is None` is still requiring the class to have the attribute. If you aren't even sure it exists, that's what hasattr() does
[22:47:37] <nmz787_> theprophet: yeah, do something else completely, let my subconscious try to relax... or otherwise just try to regroup and get good sleep before tackling things again
[22:47:59] <theprophet> nmz787_ will have that in mind..
[22:48:03] <SnoopJ> although you can also catch the AttributeError if you prefer to just try it
[22:48:25] *** Joins: audiocat (~audio@user/audio)
[22:48:59] <Wooble> theprophet: BTW I highly recommend pythontutor.com to visualize small samples like this, it makes things *really* clear.
[22:49:03] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[22:49:31] <theprophet> Wooble ok, ill search for it rn. thank you.
[22:50:05] <theprophet> Wooble wow this is nice.. greatt..
[22:51:26] *** Quits: sidro (~sidro@86.122.231.222) (Quit: Konversation terminated!)
[22:51:56] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e6:8fde:809d:35b3:ab45:1702) (Ping timeout: 268 seconds)
[22:51:59] *** Joins: Roey (~Roey@user/Roey)
[22:52:54] <mefistofeles> SnoopJ: yeah, they should have the attribute initialized on __init__(), thanks for the heads up, though
[22:52:58] <Wooble> now if it could just generate permalinks that didn't embed all of the code and make them hard to share... :)
[22:53:56] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[22:54:16] <SnoopJ> mefistofeles, `getattr(obj, "something", DEFAULT)` is also often helpful
[22:54:27] <Wooble> mefistofeles: checking if something is None is pretty fast, though, and reasoning about what exception you'll get if an attribute is None may be trickier...
[22:55:55] <mefistofeles> Wooble: yeah true, in this case it's very likely an AttributeError, but I understand what you mean
[22:56:10] <mefistofeles> SnoopJ: yeah, that should also work, thanks. I guess those are still slower than checking if None, right?
[22:56:26] *** Quits: pycode (~pycode3@2001:b07:5d28:551:a8cc:3fd7:e5c8:ca52) (Ping timeout: 250 seconds)
[22:56:49] <SnoopJ> mefistofeles, it does the same work
[22:57:07] <SnoopJ> but getattr() lets you do it even when the object did not initialize it
[22:57:24] <SnoopJ> (so it's moot in your case)
[22:58:14] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Remote host closed the connection)
[23:01:13] *** Joins: crashrep (~crashrep@user/crashrep)
[23:02:31] *** Joins: lntl (~joey@50.234.12.38)
[23:03:08] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[23:03:33] <lntl> If I open an unbuffered fileobject "with open(file, wb, 0) as f" do I need to call f.flush after f.write?
[23:03:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[23:04:03] <SnoopJ> lntl, it should flush when the context manager exits
[23:04:14] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:04:20] <SnoopJ> oh, unbuffered. uh, I guess not
[23:04:24] <nmz787_> lntl: only if you want to access the data quickly elsewhere
[23:04:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:04:43] <lntl> I am writing large files which cannot fit in system memory
[23:04:47] *** Joins: shad (~shad@user/shad)
[23:05:02] <Wooble> if there's no buffer to flush I'd assume .flush does nothing...
[23:05:07] <SnoopJ> same
[23:05:13] <nmz787_> the file object should handle that sort of issue... flushing is more useful if you have a second process or something that wants to use the data NOW
[23:05:15] <lntl> That's what I was thinking too
[23:05:39] <lntl> Thanks for the confidence folks :)
[23:05:49] <lntl> You're all rock starts
[23:05:50] <Wooble> yeah, having buffering on won't fill your memory anyway, the buffer is like 8K
[23:06:28] <lntl> Hmmm good to know
[23:07:03] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b) (Quit: Konversation terminated!)
[23:07:58] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[23:07:59] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[23:12:30] <SnoopJ> looks like you get IOBase's flush() if you use buffering=0 and yea, that's a no-op
[23:12:56] <pyeveryt_> Hi, could you please have a look at my question on stackoverflow? try to make the X and Y axis range equal and draw a 45 degree reference line on the already drawn scatterplot using matplotlib https://stackoverflow.com/questions/70806829/drawing-a-45-degrees-reference-line-as-well-as-making-x-and-y-axis-equal-range
[23:13:01] <SnoopJ> https://github.com/python/cpython/blob/main/Modules/_io/iobase.c#L146-L170
[23:13:50] *** Quits: Nutte35 (~Nutte@202.153.82.158) (Read error: Connection reset by peer)
[23:14:16] *** Joins: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8)
[23:14:38] *** Quits: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8) (Read error: Connection reset by peer)
[23:15:11] *** Joins: funkytwig_ (~funkyttwi@82.40.234.47)
[23:15:15] *** Joins: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8)
[23:15:34] *** Quits: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8) (Read error: Connection reset by peer)
[23:16:12] *** Joins: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8)
[23:16:31] *** Quits: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8) (Read error: Connection reset by peer)
[23:16:49] *** Quits: vats (~vats@103.158.91.47) (Ping timeout: 256 seconds)
[23:17:08] *** Joins: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8)
[23:17:16] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:17:25] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[23:17:41] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[23:17:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[23:18:17] *** Quits: funkytwig (~funkyttwi@82.40.234.47) (Ping timeout: 240 seconds)
[23:18:19] *** Joins: Guest60 (~Guest60@1.39.169.183)
[23:18:56] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:19:03] *** Joins: grooverman (~grooverma@177.102.119.200)
[23:20:50] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[23:21:13] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:21:54] *** Joins: cliluw (~cliluw@47.147.73.223)
[23:22:53] *** Joins: ham5 (iamfive@user/ham5)
[23:23:10] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[23:24:52] *** Quits: Guest60 (~Guest60@1.39.169.183) (Quit: Client closed)
[23:25:08] *** Joins: oprypin (~irc@pryp.in)
[23:27:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:27:35] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:29:02] *** Quits: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8) (Read error: Connection reset by peer)
[23:29:39] *** Joins: node1 (~node1@2402:3a80:cca:7167:8c2d:84ee:aeda:a361)
[23:29:43] *** Joins: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8)
[23:29:48] *** node1 is now known as id
[23:29:54] *** Quits: onichomp (~onichomp@2806:264:4408:40:6de9:a169:2cda:7b8) (Read error: Connection reset by peer)
[23:30:18] *** id is now known as Guest5076
[23:30:44] *** Guest5076 is now known as node1
[23:31:05] *** Quits: node1 (~node1@2402:3a80:cca:7167:8c2d:84ee:aeda:a361) (Changing host)
[23:31:05] *** Joins: node1 (~node1@user/node1)
[23:32:05] *** Joins: stonkey (~stonkey@user/stonkey)
[23:33:18] <mawk> there are responses to your post pyeveryt_
[23:33:26] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[23:33:30] <mawk> is the reference line y = x ?
[23:33:33] <mawk> you can just plot that
[23:33:37] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 240 seconds)
[23:34:10] <mawk> or for another angle you plot y = tan(θ)x
[23:35:29] *** Quits: tomaw (tom@libera/staff/tomaw) (Read error: Connection reset by peer)
[23:35:30] <mawk> you can also set aspect ratio accordingly instead of changing the limits
[23:39:39] *** Joins: tomaw (tom@libera/staff/tomaw)
[23:40:51] *** Joins: nicode (~nic@2607:f2c0:9479:8500:f5de:3d8e:616d:e80f)
[23:41:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:42:10] *** Joins: isk (~isk@c-67-176-120-242.hsd1.co.comcast.net)
[23:45:19] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:45:26] *** spithash_ is now known as spithash
[23:46:34] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:48:08] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:49:42] *** Parts: apteryx (~maxim@dsl-205-236-230-254.b2b2c.ca) ()
[23:51:42] <pyeveryt_> mawk: thank you yeah the answer is what I looked for
[23:52:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[23:54:42] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[23:54:57] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:56:32] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[23:56:52] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:57:55] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 268 seconds)
[23:58:10] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
