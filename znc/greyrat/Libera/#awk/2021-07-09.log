[00:15:47] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[00:33:00] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:09:39] <Patsie> # awk -v mydate="5/3/21" 'BEGIN { split(mydate, d, "/"); printf("%02d/%02d/%02d\n", d[1], d[2], d[3]) }'
[01:09:41] <shbot> Patsie: 05/03/21
[01:10:17] <Patsie> it's just 0-padding, right? then there's no real use for 'date' or other date/time functions
[01:11:15] <Patsie> ohw, the year also needs to expand
[01:12:26] <Patsie> could cheat and just always add '20' in front of your year :) "%02d/%02/20%02d"
[01:14:40] <Patsie> # printf "%s\n" "5/3/21" "5/3/99" | awk '{ split($1, d, "/"); printf("%02d/%02d/%d%02d\n", d[1], d[2], (d[3]<22)?"20":"19", d[3]) }'
[01:14:41] <shbot> Patsie: 05/03/2021
[01:14:41] <shbot> Patsie: 05/03/1999
[01:14:51] <Patsie> already a bit more complicated, but still works
[01:17:57] *** Joins: zenema (~zenema@user/zenema)
[01:18:32] <Patsie> # printf "%s\n" "5/3/01" "5/3/99" "5/3/1898" | awk '{ split($1, d, "/"); printf("%02d/%02d/%s%02d\n", d[1], d[2], (d[3]<100)?((d[3]<22)?"20":"19"):"", d[3]) }'
[01:18:34] <shbot> Patsie: 05/03/2001
[01:18:34] <shbot> Patsie: 05/03/1999
[01:18:34] <shbot> Patsie: 05/03/1898
[01:18:44] <Patsie> ok, enough
[01:20:43] <zenema> Hi, I have the following posix awk script processing a 6.4GB file, and it seems to slow down over time. Is there anything obvious I should be considering? I started without fflush() and added it to test, but it doesn't seem to make any difference.
[01:21:10] <zenema> http://sprunge.us/Afopng
[01:24:45] <zenema> (The shebang is to work around the irregularities with /usr/bin/env on different platforms)
[01:31:01] <zenema> The intention for the script is to add a single character to use as a record separator (as I'm limited to a single character instead of a pattern with posix awk).
[01:40:44] <geirha> Have you tried without the "exec" "awk"... part, which is testet for every single line? e.g. by passing the awk script as single quoted argument to awk instead: awk 'BEGIN ... ' "$@"
[01:42:36] <zenema> geirha: Not yet, I will do to eliminate it, but I would have thought any impact from that would remain constant?
[01:43:09] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:43:54] <geirha> yeah, I guess it should
[01:45:56] <geirha> don't really see anything that could accumulate in that awk
[01:47:57] <zenema> Nope, I'm a bit stumped by it. The awk process isn't using any more memory as it slows.
[01:50:55] <zenema> I might try writing to /dev/null, in the hope that would eliminate anything filesystem related.
[01:53:55] <zenema> At 1GB output file size, it was taking ~2mins for the next 100MB, now at 2.1GB output file size it's taking ~15mins for the next 100MB.
[01:55:02] <zenema> I'll generate a similar input file with known regular "<page>" interval too, in case it's the input data.
[01:56:41] *** Joins: Torr (~Torr@user/torr)
[02:27:50] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:45:45] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:58:36] *** Joins: phillbush_ (~phillbush@user/phillbush)
[06:01:18] *** Quits: phillbush (~phillbush@user/phillbush) (Ping timeout: 272 seconds)
[06:21:26] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[06:25:33] *** Joins: downunder (~downunder@110.151.19.142)
[07:05:02] *** Quits: phillbush_ (~phillbush@user/phillbush) (Quit: Leaving)
[08:07:02] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[08:25:20] *** Joins: roarde (~roarde@user/roarde)
[08:41:53] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 255 seconds)
[08:56:15] *** Quits: ^[ (~user@user//x-8473491) (Read error: Connection reset by peer)
[08:56:43] *** Joins: ^[ (~user@user//x-8473491)
[09:00:53] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[09:59:11] *** Joins: waldo323_ (~waldo323@d149-67-45-83.clv.wideopenwest.com)
[10:01:58] *** Quits: waldo323 (~waldo323@d149-67-45-83.clv.wideopenwest.com) (Ping timeout: 272 seconds)
[10:18:10] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:55:49] <Patsie> zenema: could it be a system limitation instead? system is configured to have longer and CPU/IO intensive applications have less resources on the system.
[10:56:12] <Patsie> because as geirha said, the awk is simple and straightforward. nothing there to optimize
[10:56:22] <Patsie> and it dhouldn't show any form of slowdown over time
[10:56:30] <Patsie> shouldn't*
[10:59:24] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[11:00:09] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[11:19:42] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[12:06:10] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 240 seconds)
[12:17:47] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[12:19:39] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[12:40:33] *** Joins: kensanata (~user@user/kensanata)
[12:42:10] *** Joins: lavaball (felix@31.204.155.215)
[13:03:03] *** Joins: simbioz_ (~simbioz@user/simbioz)
[13:04:33] *** Joins: earnestly (~earnest@user/earnestly)
[13:06:56] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 255 seconds)
[13:06:58] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 272 seconds)
[13:25:44] *** Quits: eoli3n (~eoli3n@162.38.105.222) (Remote host closed the connection)
[13:26:29] *** Joins: eoli3n (~eoli3n@162.38.105.222)
[15:31:03] *** Quits: downunder (~downunder@110.151.19.142) (Quit: WeeChat 3.2)
[15:39:35] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[15:53:11] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[16:28:16] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[16:53:38] *** Joins: phillbush (~phillbush@user/phillbush)
[17:07:35] *** Joins: lgc (~lgc@user/lgc)
[17:29:40] *** Joins: kensanata (~user@user/kensanata)
[17:37:39] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[17:37:52] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:53:08] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (Remote host closed the connection)
[17:53:33] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[17:59:17] *** Quits: rs_ (~ubuntu@ec2-18-222-18-102.us-east-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[18:00:00] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[18:00:55] *** Joins: rs_ (~ubuntu@ec2-18-222-18-102.us-east-2.compute.amazonaws.com)
[18:44:44] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[18:56:52] *** Joins: Torr (~Torr@user/torr)
[19:16:58] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:17:10] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[19:19:42] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[19:40:14] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 255 seconds)
[19:40:47] *** Joins: kensanata (~user@user/kensanata)
[19:41:28] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[19:58:05] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[19:59:44] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[20:11:17] *** Quits: zenema (~zenema@user/zenema) (Quit: leaving)
[20:11:56] *** Joins: zenema (~zenema@user/zenema)
[20:11:57] <nmz> oh left, such a shame
[20:12:57] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:13:05] <nmz> zenema: try different awks
[20:13:22] <nmz> fortunately you can use mawk here
[20:13:57] <zenema> nmz: I'm going to experiment with it this weekend, I've been meaning to give mawk a whirl :)
[20:14:16] <nmz> maybe you don't have to flush as much also?
[20:14:36] <zenema> Patsie: I shouldn't have any such resource limits in place, but I'll check by seeing how long it takes when just dumping to /dev/null
[20:15:00] <zenema> nmz: Well, initially I wasn't. I thought I'd add it to see if there was any difference, but it didn't seem to make any.
[20:15:22] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[20:15:46] <nmz> and the flush should come after the print
[20:15:59] <nmz> however, you could just let sh handle the >
[20:16:18] <nmz> you should also use gnu parallel
[20:17:11] <zenema> I did have that too (instead), I thought I'd try just flushing for each of my records, not every line. 
[20:17:37] <zenema> nmz: I had tried that also (the sh redirect)
[20:17:39] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[20:17:50] <zenema> I was meaning to ask if there are any current parallel awk implementations.
[20:18:05] <zenema> I've been looking at solutions for parallelizing, but I really wanted to find something POSIX.
[20:18:40] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[20:18:41] <zenema> It's not a deal-breaker, and GNU parallel does look quite impressive.
[20:19:05] <zenema> To my disappointment the -P option on xargs is not part of the POSIX spec.
[20:19:14] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:19:39] <zenema> nmz: Out of interest, Why do you suggest the sh redirect over the awk built-in?
[20:19:39] <nmz> there is no need for a parallel awk because gnu parallel does what it should
[20:20:10] <zenema> This is fair!
[20:22:52] <nmz> and awk is kind of dead too
[20:22:57] <nmz> implementation wise
[20:23:06] <nmz> only gawk is getting extensions
[20:23:45] <nmz> can't the code just be this  awk '{ sub("<page>","\036<page>") } 1' $files > awkoutput
[20:24:50] <nmz> zenema: if the bottleneck is awk, then switching to sh should do the trick, if it doesn't, then its a system thing
[20:25:20] <nmz> like patsie says
[20:25:52] <nmz> fwiw you can just use sed for this
[20:29:54] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[20:34:13] *** Joins: waldo323__ (~waldo323@d149-67-45-83.clv.wideopenwest.com)
[20:34:51] <zenema> nmz: Ah, actually, yes! I was thinking I should only make it do the sub on /pattern/ match, but that was probably a bad idea. Plus, I didn't realize I could do the octal directly like that.
[20:34:54] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[20:35:16] <zenema> nmz: Makes sense, I'll see how it goes when I output to /dev/null.
[20:36:34] *** Quits: waldo323_ (~waldo323@d149-67-45-83.clv.wideopenwest.com) (Ping timeout: 240 seconds)
[20:36:59] <zenema> Indeed, I just wanted to do it with awk, in case I might learn some more :)
[20:47:52] <zenema> nmz: I just tried your suggestion, and it completed the whole 6.4G in < 3 minutes!
[20:48:19] <zenema> So there's something about my previous way of doing it that slows down over time, I'm most intrigued!
[20:48:49] <zenema> nmz: Also, thanks! :)
[20:58:34] <nmz> zenema: IDK if you can \036 in sed, but you can save the octal on a variable, then sed 's/<page>/'$octal'<page>/'
[20:58:41] <nmz> I hope so
[21:00:12] <nmz> maybe
[21:01:34] <zenema> Well, no need now, awk just tore through it using your much simplified suggestion. I might experiment with my over-complicated one to try and identify at what point the slow-down occurs.
[21:01:50] <zenema> As like yourself and Patsie noted, there doesn't appear to be anything there that would accumulate.
[21:06:29] <nmz> You should add a NR%1000==0 {flush(file)}
[21:07:13] <nmz> man page of nawk doesn't say that flush() works on all open fd, so you may need to specify the file
[21:07:33] <earnestly> And in posix awk, there is no flush :(
[21:07:46] <nmz> what's posix awk?
[21:08:45] <earnestly> The posix definition of awk
[21:12:05] <nmz> wow, just checked
[21:12:10] <nmz> I'd rather just use busybox awk then
[21:13:04] <zenema> nmz: I'll add that to the list of things to test.
[21:14:03] <zenema> earnestly: I had assumed I was using POSIX awk, in the base system on FreeBSD, but it turns out it's got a few extras.
[21:14:07] <zenema> The flags -d, -safe, and -version as well as the commands fflush, compl,
[21:14:12] <zenema> and, or, xor, lshift, rshift, are extensions to that specification.
[21:14:15] <nmz> zenema: that's probably nawk
[21:15:17] <nmz> The flags -d, -safe, and -version as well as the commands fflush, compl,
[21:15:19] <nmz>      and, or, xor, lshift, rshift, are extensions to that specification.
[21:15:30] <nmz> from the manpage
[21:16:16] <zenema> Umm, I'm not entirely sure. It's named as "one-true-awk" in the source, and the README notes:
[21:16:20] <zenema> This is the version of awk described in "The AWK Programming Language",
[21:16:22] <zenema> by Al Aho, Brian Kernighan, and Peter Weinberger
[21:16:25] <zenema> (Addison-Wesley, 1988, ISBN 0-201-07981-X).
[21:19:14] <nmz> Well, its not nawk
[21:22:13] <zenema> Nope, seems to be "The One True awk" and compliant iwth POSIX.1, but with some extensions to that spec.
[21:35:50] <earnestly> # type oawk
[21:35:51] <shbot> earnestly: oawk is /bin/oawk
[21:36:16] <earnestly> oawk is old awk, fwiw
[21:36:30] <earnestly> # echo /bin/*awk
[21:36:32] <shbot> earnestly: /bin/awk /bin/gawk /bin/mawk /bin/nawk /bin/oawk
[21:52:25] <zenema> Ah, this is nawk.
[21:53:38] <zenema> I should really get a copy of the "The AWK Programming Language".
[22:11:35] <zenema> earnestly: Seems there is fflush in POSIX now - https://www.austingroupbugs.net/view.php?id=634#c1427
[22:12:34] <earnestly> zenema: Hm, 2012, yet not in the documentation yet: https://pubs.opengroup.org/onlinepubs/9699919799/utilities/awk.html
[22:12:48] <earnestly> "desired action", I guess
[22:13:16] <earnestly> It's marked as accepted though, there's a few features like that.  This is nice, hopefully soon
[22:13:32] <earnestly> zenema: Also I don't mind using 'marked as accepted' features, I feel it is justified enough
[22:13:55] <earnestly> Although does fflush() accept "stdout"?
[22:14:08] <earnestly> Or even fflush(1)
[22:14:58] <earnestly> fflush("/dev/fd/1"); eh
[22:17:22] <zenema> earnestly: This is true, it does show "Resolved => Applied" on 2020-03-23. Definitely justified!
[22:17:54] <earnestly> zenema: Here's some for make: https://0x0.st/-OPD.txt
[22:18:25] <zenema> I'd assume so ( fflush(stdout) ), that's show here at least: https://pubs.opengroup.org/onlinepubs/9699919799/
[22:18:49] <earnestly> These links don't work
[22:18:58] <earnestly> You have to get the iframe url
[22:19:36] <zenema> Oh gawd, yes!
[22:19:41] <earnestly> ikr
[22:19:59] <zenema> https://pubs.opengroup.org/onlinepubs/9699919799/functions/fflush.html
[22:23:08] <earnestly> Yeah but that's C
[22:23:24] <earnestly> gawk treats "/dev/stdout" especially, for example
[22:28:29] <zenema> Ah yes, right! Well, I'm not sure. I'll have to leave this as an investigation for the weekend.
[22:28:42] <zenema> Time for food and drink! :)
[23:24:10] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 246 seconds)
