[00:03:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 258 seconds)
[00:05:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:05:50] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[00:06:30] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:39:10] *** Quits: shangxiao (~davids@101.181.108.207) (Quit: WeeChat 3.2)
[00:54:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:59:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[01:00:01] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:11:47] *** Joins: jochum (~jochum@user/jochum)
[01:13:50] *** Joins: Preston (~liminalcr@c-24-125-222-206.hsd1.ga.comcast.net)
[01:14:18] <jochum> Would you guys use STATIC_ROOT during development (someon asking in #python) not sure I gave/give the right answer.
[01:14:23] <Preston> o/ Hey everyone, sorry to bother. I was just curious -- should I bother setting STATIC_ROOT if I don't intend to deploy anytime soon? If I did, would it hurt me later on?
[01:14:31] <jochum> there he is :)
[01:14:36] <Preston> does it even matter
[01:14:42] <Preston> jochum: thanks I appreciate your help
[01:15:29] <jochum> Preston: these people know better than I do, I would say it matters as dev should be as most the same as prod as possible. People might disagree.
[01:16:58] <GinFuyou> Preston, it's just setting
[01:17:24] <jochum> collecstatic is the thing, I believe.
[01:17:46] <GinFuyou> If you don't run it doesn't matter
[01:18:10] <GinFuyou> If you want to use a real webserver in dev, it's up to you
[01:20:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:20:46] *** ChanServ sets mode: +v EvilDMP
[01:21:25] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[01:24:55] <Preston> GinFuyou: Appreciate it
[01:27:25] *** Joins: bytesized (~IceChat95@45.112.13.185)
[01:29:02] *** Parts: bytesized (~IceChat95@45.112.13.185) ()
[01:56:54] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:59:20] *** Quits: jansenh (~jansenh@202-130-238-185.connected.by.freedominter.net) (Ping timeout: 272 seconds)
[02:05:28] *** Joins: stats4647 (~stats4647@104-8-67-55.lightspeed.irvnca.sbcglobal.net)
[02:05:56] *** Quits: stats4647 (~stats4647@104-8-67-55.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[02:12:50] *** Joins: xkuru (~xkuru@user/xkuru)
[02:17:09] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[02:17:33] *** Joins: xkuru (~xkuru@user/xkuru)
[02:17:37] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[02:18:48] *** Joins: thiras (~thiras@user/thiras)
[02:19:12] *** Joins: xkuru (~xkuru@user/xkuru)
[02:33:56] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:48:20] *** Joins: bambanxx (~bambanx@190.5.54.194)
[03:02:18] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[03:02:50] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[03:03:08] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[03:09:22] *** Joins: Elzington__ (~Elzington@68.235.43.22)
[03:11:54] *** Quits: Elzington_ (~Elzington@68.235.43.14) (Ping timeout: 240 seconds)
[03:19:14] *** Quits: bambanxx (~bambanx@190.5.54.194) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:27:31] *** Joins: bambanxx (~bambanx@190.5.54.194)
[03:29:00] *** Joins: Elzington (~Elzington@68.235.43.20)
[03:30:52] *** Quits: Elzington__ (~Elzington@68.235.43.22) (Ping timeout: 258 seconds)
[03:35:44] *** Quits: bambanxx (~bambanx@190.5.54.194) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:39:52] *** Joins: Elzington_ (~Elzington@68.235.43.37)
[03:40:50] *** Quits: Elzington (~Elzington@68.235.43.20) (Ping timeout: 258 seconds)
[03:47:01] *** Joins: jansenh (~jansenh@2a10:3781:4dd:a:906e:1144:d769:19d9)
[03:56:58] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[04:23:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:23:43] *** Joins: flynn (~mcbloch@user/flynn)
[04:29:02] *** Joins: Steve-Dusty (~Steve-Dus@user/steve-dusty)
[04:29:13] <Steve-Dusty> Guys help
[04:29:14] <Steve-Dusty> https://dpaste.org/68nB
[04:29:37] <Steve-Dusty> I don't want it to redirect to /dashboard/<student_id> after it's done
[04:30:04] <Steve-Dusty> I want get_success_url() in ClasssStudentDeleteView to return to the previous pk
[04:30:13] <Steve-Dusty> which is /dashboard/<class_id>
[04:30:26] <Steve-Dusty> I want the pk to load Class pk but I can't put 2 model
[04:40:54] *** Joins: chiz (~alkjkljkl@72.249.250.67)
[04:42:03] *** Joins: dre (~dre@2001:8003:c932:c301:1048:7720:d398:8580)
[04:43:41] <GinFuyou> Why can't you?
[04:43:58] <GinFuyou> Also it doesn't look you need 2 models, just pk for one?
[04:47:49] <Steve-Dusty> GinFuyou it gets the /student_id
[04:47:55] <Steve-Dusty> I want it to get the current class_id
[04:47:59] <Steve-Dusty> do I  do _set for student?
[04:48:29] <Steve-Dusty> but where do  I put it? self.kwargs['class_id.student_set'] doesnt work
[04:48:40] <GinFuyou> why set?
[04:48:58] <GinFuyou> also can't you get it from object you delete?
[04:49:29] <GinFuyou> if not - it has to be in the url... I think we went over it before?
[04:49:58] <Steve-Dusty> yes but not from CBVs
[04:50:42] <GinFuyou> really? well, difference is only using self.kwargs but you seem to know it
[04:52:07] <GinFuyou> dashboard/<int:pk>/delete_student/ well, does it work as intended for a start?
[04:52:40] <GinFuyou> it seem to pass a single pk... which is class pk? Doesn't it take it for student-to-delete pk?
[04:52:40] <Steve-Dusty> yes
[04:53:17] <Steve-Dusty> ClassStudentDeleteView deletes a studfent
[04:53:30] <GinFuyou> correct one?
[04:53:47] <GinFuyou> does it know which to delete from POST?
[04:53:56] <Steve-Dusty> yes
[04:54:14] <Steve-Dusty> when I click on a button it deletes the student the button is representing
[04:54:45] <GinFuyou> Ok, if you are sure about it, fine
[04:55:13] <GinFuyou> well, you only need to pull pk from the kwargs, or I'm missing something
[04:57:01] <Steve-Dusty> ok how do I pull class pk?
[04:57:28] <GinFuyou> by name stated in url pattern
[04:57:52] <GinFuyou> * path converter name, not url name
[04:57:52] <Steve-Dusty> `        return reverse('class-student-list', kwargs={'pk': pk})`
[04:58:09] <Steve-Dusty> what's a path converter name?
[04:58:55] <GinFuyou> https://docs.djangoproject.com/en/3.2/topics/http/urls/#path-converters
[04:59:41] <GinFuyou> well, section above is more relevant
[05:02:33] <Steve-Dusty> WAIT
[05:02:35] <Steve-Dusty> GinFuyou
[05:02:45] <Steve-Dusty> remember when u asked me if it knew which one to delete
[05:02:58] <Steve-Dusty> i meant if I didn't reverse to "class-student-list" it would work
[05:03:01] <Steve-Dusty> otherwise it wouldn't delete
[05:03:28] <GinFuyou> reverse is irrelevant to deletion
[05:04:06] <GinFuyou> if there is not atomic transaction involved it will delete as soon as corresponding code reached
[05:04:53] <Steve-Dusty> nevermind
[05:04:57] <Steve-Dusty> I just forgot to reload
[05:05:14] <GinFuyou> basically here http://ccbv.co.uk/projects/Django/3.1/django.views.generic.edit/DeleteView/#delete
[05:06:27] <GinFuyou> but looking at get object... it looks like I'm right after all - it take object to delete from url "pk" kwarg
[05:08:59] <Steve-Dusty> `print(self.object.class_name_id)`
[05:09:12] <Steve-Dusty> i was able to find ID with tis
[05:09:57] <GinFuyou> Yes, but is that PK which you wanted?
[05:10:23] <GinFuyou> It's not clear to me since url looks like it passes dashboard id
[05:10:27] <Steve-Dusty> https://dpaste.org/giD4 this works
[05:10:33] <Steve-Dusty> yes, it's the PK that I want
[05:11:12] <GinFuyou> yes, that's what I meant by
[05:11:17] <GinFuyou> <GinFuyou> also can't you get it from object you delete?
[05:15:11] <Steve-Dusty> idk how to do that
[05:16:07] <GinFuyou> you just did
[05:16:58] <Steve-Dusty>        `        pk = self.kwargs['object.class_name_id']` no work
[05:17:16] <GinFuyou> why would it work?
[05:17:41] <GinFuyou> What do you think it tells django to do?
[05:20:20] <Steve-Dusty> get kwargs
[05:21:13] *** Joins: baroobob (~jwbwater@98.215.243.94)
[05:21:15] <GinFuyou> too vague. And not quite correct.
[05:21:23] <GinFuyou> self.kwargs['object.class_name_id']`
[05:21:35] <GinFuyou> can you explain to what each refers
[05:21:54] <GinFuyou> "self" "." "kwargs" "[]" and so on?
[05:22:31] <Steve-Dusty> self represents the instance of the class
[05:23:00] <Steve-Dusty> kwargs are keyword arguments
[05:23:48] <GinFuyou> which instance of the class? any instance?
[05:24:20] <Steve-Dusty> instance of ClassStudentDeleteView
[05:24:32] <Steve-Dusty> Deleteview*
[05:25:32] <GinFuyou> that's correct, but it's not what important. what would be difference with var = ClassStudentDeleteView() ?
[05:25:33] <dre> Steve-Dusty, you might need an editor that highlights strings
[05:25:47] <Steve-Dusty> I have an editor that highlights strings
[05:26:00] <Steve-Dusty> I use VScode
[05:26:17] <GinFuyou> Nope, I believe problem is confusion of things
[05:26:36] <GinFuyou> Steve-Dusty, seem to know everything needed for the job
[05:27:19] <GinFuyou> but apparently it's not sorted out well yet
[05:27:23] <Steve-Dusty> var = ClassStudentDeleteView()   iz
[05:27:27] <Steve-Dusty> uhh
[05:27:34] <Steve-Dusty> same thing?
[05:29:10] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[05:29:11] <GinFuyou> technically it is. What's important about self, it's referring that instance of class, which class method mentions it
[05:29:28] <GinFuyou> so it's like "current" instance
[05:30:03] <Steve-Dusty> ok
[05:30:17] <Steve-Dusty> so what's the point
[05:30:18] <GinFuyou> Thus `self.kwargs` means "get me kwargs of current instance of the view"
[05:30:31] <Steve-Dusty> kk so it wouldn't work
[05:30:37] <GinFuyou> why?
[05:31:13] <GinFuyou> kwargs are parsed from url and passed to the view, as we previously found out
[05:32:04] <GinFuyou> so what ['object.class_name_id'] refers to?
[05:32:29] <Steve-Dusty> nothing
[05:33:11] <GinFuyou> That no true. Previous part meant "get me kwargs attribute of current view instance"
[05:33:55] <GinFuyou> this one mean "get me value (from kwargs) which key is string 'object.class_name_id'"
[05:34:25] <GinFuyou> And what keys do you have in kwargs?
[05:34:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:36:28] <Steve-Dusty> what you just said the keys
[05:36:36] <Steve-Dusty> key is string 'object.class_name_id'
[05:36:36] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[05:37:16] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:37:25] <GinFuyou> m?
[05:38:38] <Steve-Dusty> <GinFuyou> which key is string 'object.class_name_id'"
[05:40:05] <GinFuyou> yes, D[KEY] means get value from D by key KEY
[05:40:18] <GinFuyou> usually keys are strings
[05:40:32] <GinFuyou> (but not always, doesn't matter now)
[05:41:30] <GinFuyou> D could be like D = {'a': 42, 'b': False}
[05:42:12] <GinFuyou> And what keys do you have in your view's kwargs?
[05:49:46] *** Quits: ente_ (~ente@p200300dc5f34ec005771f8e422bb0c79.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:51:22] *** Joins: ente_ (~ente@p200300dc5f4358007418074540032b42.dip0.t-ipconnect.de)
[05:58:54] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Remote host closed the connection)
[06:05:43] *** Joins: uwadmin (~uwadmin@cpe-174-97-241-199.ma.res.rr.com)
[06:06:44] <uwadmin> Good evening/morning/afternoon all! So excited to have found this place!
[06:07:08] <uwadmin> I was hoping to get some advice around bulk_create() and registering django users with a custom user model.
[06:08:09] <uwadmin> The custom user model is setup and working, but I'd like to be able to allow an end user to upload a csv of all of their teammates and autogenerate the user
[06:09:30] <uwadmin> I'd also like to achieve this without the end user having access to the admin panel
[06:14:25] *** Joins: Slimgin (~Thunderbi@2603:9001:207:a100:8918:d4a6:c81d:5551)
[06:17:27] <Steve-Dusty> sorry I was eating
[06:19:01] <Slimgin> What were you eating?
[06:20:10] <Steve-Dusty> leftover from lunch. bbq chicken
[06:20:25] <Slimgin> That sounds good.
[06:20:39] <Steve-Dusty> yes it's phillipine food
[06:24:28] <uwadmin> LOL I instantly thought US/Texas when I read BBQ chicken
[06:24:51] <Slimgin> Yeah thats what I was thinking as well.
[06:28:35] *** Joins: tone0 (~tone0@071-011-252-111.res.spectrum.com)
[06:34:52] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 258 seconds)
[06:40:21] *** Quits: uwadmin (~uwadmin@cpe-174-97-241-199.ma.res.rr.com) (Quit: Client closed)
[06:42:28] *** Quits: dre (~dre@2001:8003:c932:c301:1048:7720:d398:8580) (Ping timeout: 256 seconds)
[07:06:26] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:28:57] *** Quits: Slimgin (~Thunderbi@2603:9001:207:a100:8918:d4a6:c81d:5551) (Quit: Slimgin)
[07:48:08] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[09:12:15] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:23:27] <Quacc> which do you guys like more tailwindcss or sass/scss
[09:25:04] <Steve-Dusty> what kind of question is that
[09:25:25] <Quacc> a question of what people perfer to use more in websites
[09:26:15] <Steve-Dusty> they're incomparable for the 999th time is there anything we can clarify for you?
[09:26:53] <Quacc> you can compare which you like using more
[09:26:58] <Quacc> which was my origional question
[09:27:00] <Steve-Dusty> you can use both at the same time
[09:27:21] <Steve-Dusty> tailwindCSS
[09:27:30] <Steve-Dusty> https://tailwindcss.com/docs/using-with-preprocessors
[09:28:16] <Quacc> doesnt matter im asking which is one would enjoy using the most
[09:29:19] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:37:55] <Steve-Dusty> u can learn sass in an hour
[09:38:29] <Steve-Dusty> but it takes longer to learn master tailwindCSS than learning JS
[09:42:25] <Steve-Dusty> I think more people would enjoy sass cuz it ez
[09:42:43] *** Quits: Steve-Dusty (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[10:16:25] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[11:27:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[11:46:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:46:55] *** ChanServ sets mode: +v EvilDMP
[12:01:09] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[12:40:03] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[13:08:18] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[13:08:54] *** Joins: pycode (~pycode@2001:b07:5d28:551:837c:7172:bd70:50a7)
[13:20:50] *** Quits: Preston (~liminalcr@c-24-125-222-206.hsd1.ga.comcast.net) (Quit: WeeChat 3.2)
[13:28:58] *** Quits: audiocat (~audio@2603-8081-1800-00ad-9156-ebc1-6da9-7c72.res6.spectrum.com) (Ping timeout: 272 seconds)
[13:30:53] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:39:36] *** Quits: pycode (~pycode@2001:b07:5d28:551:837c:7172:bd70:50a7) (Ping timeout: 258 seconds)
[13:41:31] *** Joins: dre (~dre@2001:8003:c932:c301:201a:59c7:e77c:7ce)
[13:59:03] *** Quits: chiz (~alkjkljkl@72.249.250.67) (Quit: Leaving)
[14:07:52] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Ping timeout: 256 seconds)
[14:14:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Read error: Connection reset by peer)
[14:16:22] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 256 seconds)
[14:16:53] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 250 seconds)
[14:17:23] *** Joins: kiska9 (~kiska@user/kiska)
[14:17:30] *** Quits: kiska (~kiska@user/kiska) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[14:17:30] *** kiska9 is now known as kiska
[14:17:37] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 245 seconds)
[14:18:09] *** Joins: dongcarl1 (~dongcarl@96.224.58.144)
[14:18:48] *** Joins: rje (~rje@50.35.241.164)
[14:18:56] *** Quits: dongcarl (~dongcarl@96.224.58.144) (Ping timeout: 252 seconds)
[14:18:56] *** dongcarl1 is now known as dongcarl
[14:20:20] *** Quits: urth (~urth@geertswei.nl) (Ping timeout: 256 seconds)
[14:20:20] *** Quits: znpy (~znpy@user/znpy) (Ping timeout: 256 seconds)
[14:21:01] *** Joins: bjs (sid190364@user/bjs)
[14:21:32] *** Quits: Knyght (sid365271@id-365271.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:22:02] *** Quits: schinckel (uid38120@id-38120.charlton.irccloud.com) (Ping timeout: 256 seconds)
[14:23:44] *** Quits: hemebond (~james@240b:12:12e2:f00:5604:a6ff:fe2c:50df) (Ping timeout: 256 seconds)
[14:24:52] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 256 seconds)
[14:25:26] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Ping timeout: 256 seconds)
[14:31:11] *** Joins: Knyght (sid365271@id-365271.brockwell.irccloud.com)
[14:31:15] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[14:31:35] *** Joins: schinckel (uid38120@id-38120.charlton.irccloud.com)
[14:32:16] *** Joins: hemebond (~james@240b:12:12e2:f00:5604:a6ff:fe2c:50df)
[14:32:23] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:35:52] *** Joins: dlam (~dlam@dlam.me)
[14:35:59] *** Joins: esaym153 (~esaym153@net153.net)
[14:37:12] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 245 seconds)
[14:38:40] *** Joins: deepy (deepy@user/deepy)
[14:40:23] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 252 seconds)
[14:40:41] *** Joins: dlam (~dlam@dlam.me)
[14:42:12] *** Quits: puckoh (~pucko@static.244.198.216.95.clients.your-server.de) (Ping timeout: 245 seconds)
[14:44:05] *** Joins: puckoh (~pucko@static.244.198.216.95.clients.your-server.de)
[14:45:03] *** Joins: urth (~urth@geertswei.nl)
[14:50:32] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 245 seconds)
[14:51:22] *** Quits: Knyght (sid365271@id-365271.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[14:51:27] *** Joins: esaym153 (~esaym153@net153.net)
[14:52:06] *** Joins: Knyght (sid365271@id-365271.brockwell.irccloud.com)
[14:53:02] *** Quits: SallyAhaj (sallyahaj@user/sallyahaj) (Ping timeout: 245 seconds)
[14:53:26] *** Joins: SallyAhaj (sallyahaj@user/sallyahaj)
[15:12:12] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[15:17:54] *** Joins: IceMichael (~IceMichae@ip-37-201-117-255.hsi13.unitymediagroup.de)
[15:46:29] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[15:54:19] *** Joins: uwadmin (~uwadmin@cpe-174-97-241-199.ma.res.rr.com)
[16:01:30] *** Quits: uwadmin (~uwadmin@cpe-174-97-241-199.ma.res.rr.com) (Quit: Client closed)
[16:02:39] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 276 seconds)
[16:03:05] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[16:13:27] *** Quits: IceMichael (~IceMichae@ip-37-201-117-255.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[16:29:18] *** Quits: jansenh (~jansenh@2a10:3781:4dd:a:906e:1144:d769:19d9) (Read error: Connection reset by peer)
[16:33:52] *** Joins: dez (uid92154@user/dez)
[17:47:34] *** Joins: Atque (~Atque@user/atque)
[17:53:36] *** Joins: IceMichael (~IceMichae@dynamic-046-114-158-142.46.114.pool.telefonica.de)
[18:03:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:16:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:44:20] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:01:54] *** Joins: hyper_dave (~hyper_dav@197.156.107.121)
[19:03:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:03:06] *** ChanServ sets mode: +v EvilDMP
[19:06:45] *** Joins: audiocat (~audio@2603-8081-1800-00ad-c97d-d801-aa27-1842.res6.spectrum.com)
[19:07:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[19:20:01] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[19:22:16] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[19:23:31] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:25:13] *** Joins: bytesized (~IceChat95@45.112.13.143)
[19:35:36] *** Joins: barrios (~barrios@D4709A49.rev.sefiber.dk)
[19:36:22] *** Quits: audiocat (~audio@2603-8081-1800-00ad-c97d-d801-aa27-1842.res6.spectrum.com) (Ping timeout: 245 seconds)
[19:38:06] *** Quits: barrios (~barrios@D4709A49.rev.sefiber.dk) (Quit: Quit)
[19:38:21] *** Joins: barrios (~barrios@D4709A49.rev.sefiber.dk)
[19:38:39] *** Quits: barrios (~barrios@D4709A49.rev.sefiber.dk) (Client Quit)
[19:39:22] *** Joins: barrios (~barrios@D4709A49.rev.sefiber.dk)
[19:41:33] *** Quits: barrios (~barrios@D4709A49.rev.sefiber.dk) (Read error: Connection reset by peer)
[19:41:48] *** Joins: barrios (~barrios@D4709A49.rev.sefiber.dk)
[19:44:45] *** Quits: hyper_dave (~hyper_dav@197.156.107.121) (Read error: Connection reset by peer)
[19:49:13] *** Joins: hyper_dave (~hyper_dav@197.156.107.121)
[20:11:30] *** Quits: bytesized (~IceChat95@45.112.13.143) (Ping timeout: 240 seconds)
[20:18:04] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[20:19:03] *** Joins: Quacc (~youbuntoe@user/quacc)
[20:37:21] *** Quits: jess (~jess@libera/staff/jess) ()
[20:46:40] *** Quits: hyper_dave (~hyper_dav@197.156.107.121) (Ping timeout: 272 seconds)
[20:47:19] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[20:48:03] *** Joins: hyper_dave (~hyper_dav@197.156.107.78)
[21:04:11] *** Quits: davidsmith (~pi@cpc119776-dudl14-2-0-cust74.16-1.cable.virginm.net) (Quit: WeeChat 2.3)
[21:20:54] *** Quits: IceMichael (~IceMichae@dynamic-046-114-158-142.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[21:29:55] *** Joins: audiocat (~audio@2603-8081-1800-00ad-3ab8-1376-7265-848f.res6.spectrum.com)
[21:30:48] *** Quits: barrios (~barrios@D4709A49.rev.sefiber.dk) (Ping timeout: 252 seconds)
[21:54:26] *** Quits: audiocat (~audio@2603-8081-1800-00ad-3ab8-1376-7265-848f.res6.spectrum.com) (Ping timeout: 272 seconds)
[22:01:22] *** Quits: hyper_dave (~hyper_dav@197.156.107.78) (Ping timeout: 240 seconds)
[22:01:27] *** Quits: stdout (~stdout@50.115.255.72) (Quit: Leaving)
[22:04:35] *** Quits: Patternmaster (~georg@li1192-118.members.linode.com) (Quit: leaving)
[22:09:26] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[22:11:47] *** Joins: stdout (~stdout@50.115.255.72)
[22:22:34] *** Joins: Trieste_ (T@user/pilgrim)
[22:22:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[22:43:06] *** Joins: hEXE90 (~hEXE90@ip70-180-255-41.lv.lv.cox.net)
[22:47:54] *** Joins: audiocat (~audio@2603-8081-1800-00ad-4244-d5da-54a7-0c8c.res6.spectrum.com)
[23:22:03] *** Quits: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com) (Ping timeout: 276 seconds)
[23:23:14] *** Joins: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com)
[23:25:16] *** Joins: leElvyn (~leElvyn@user/leelvyn)
[23:26:40] <leElvyn> Hi, is there a way to check if the app is currently running as a server, or just for the `migrate` / `makemigrations` from the ready of the AppConfig
[23:28:27] *** Joins: barrios (~barrios@D4709A90.rev.sefiber.dk)
[23:35:08] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
