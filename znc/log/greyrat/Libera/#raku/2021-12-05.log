[00:10:13] *** Joins: Guest12 (~Guest12@109.144.219.114)
[00:11:21] <Guest12> I just got "This server could not prove that it is commaide.com; its security certificate expired in the last day. This may be caused by a misconfiguration or an attacker intercepting your connection."
[00:12:18] *** Joins: monkey_ (~user@190.104.116.153)
[00:13:04] *** Joins: [Coke]_ (~coke@172.58.225.143)
[00:14:53] *** Quits: ptc (~cochrane@static.150.233.203.116.clients.your-server.de) (Ping timeout: 256 seconds)
[00:15:00] *** Joins: ptc (~cochrane@static.150.233.203.116.clients.your-server.de)
[00:15:27] *** Quits: [Coke] (~coke@172.58.225.143) (Ping timeout: 256 seconds)
[00:15:37] <Guest12> My guess is that the message is due to an attacker on my system, but confirmation by anyone here that commaidea.com works would be appreciated.
[00:15:56] <Guest12> commaide.com
[00:16:01] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[00:16:01] *** Quits: Ergo444 (~Ergo444@2E8B6AFC.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[00:16:55] <MasterDuke> their cert expired today. i mentioned it to some of the devs a couple minutes ago, but it's kind of late in the evening on a weekend, so they might not be able to fix right away
[00:17:15] <MasterDuke> but i can confirm i went ahead and downloaded the new comma ok
[00:27:11] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:40:27] <Guest12> MasterDuke: Thanks!
[00:41:21] <MasterDuke> np
[00:44:53] *** Joins: monkey_ (~user@190.104.116.153)
[00:56:18] <discord-raku-bot> <pie_flavor#7868> Why is it that `((5,5,5),(2,3,4)).grep(5 xx 3)` errors with "The iterator of this Seq is already in use/consumed by another Seq"?
[00:58:56] <MasterDuke> m: say ((5,5,5),(2,3,4)).grep((5 xx 3).cache)
[00:58:56] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´((5 5 5))‚ê§¬ª
[01:00:26] <discord-raku-bot> <pie_flavor#7868> no, I know I can cache it, but why's it do that
[01:00:27] <discord-raku-bot> <pie_flavor#7868> I thought reading out a lazy list just made it into a non-lazy list
[01:02:05] <MasterDuke> 5 xx 3 isn't a lazy list, it's a Seq. and those can only be iterated once. grep is iterating it to match it
[01:05:18] *** Joins: tejr (~tejr@user/tejr)
[01:10:22] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:12:13] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[01:37:26] <japhb> Skarsnik: If you want to be writing large integers and reading bytes, generally a buf8 + the write-int64/read-uint8 methods are what you want.  Don't forget to specify BigEndian or LittleEndian (if you're not just using NativeEndian).
[01:38:29] <japhb> (With a buf8, you can also read the bytes directly by indexing it as a positional as well -- but at least the write needs the method)
[01:57:31] *** Quits: Guest12 (~Guest12@109.144.219.114) (Ping timeout: 256 seconds)
[02:06:22] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[02:06:31] *** [Coke]_ is now known as [Coke]
[02:08:00] <lizmat> tbrowder: my fez config consists of JSON with an "un" and a "key" key
[02:12:33] <tbrowder> okay, but no "zef:" in front of yr un, right?
[02:12:59] <lizmat> nope
[02:13:04] <tbrowder> i
[02:14:23] <tbrowder> cool, that turned out to be my bad because i had failed to remove the :auth in the module, and it is not ignored, if it exists, it must match.
[02:16:28] <tbrowder> but then, when i was well on the way to a good release, there was a problem with fez reporting it couldn't find the meta in the *.tar.gz file.
[02:18:23] <tbrowder> so i've made a script log of the whole affair and filed the same issue with fez and mi6. if it's my error again, i guess i owe some beers at the next live raku gatthering.
[02:19:00] <discord-raku-bot> <pie_flavor#7868> if I have a list of lists of lists, why does `¬ª.say` give me the inner elements instead of the lists of lists?
[02:19:00] <discord-raku-bot> <pie_flavor#7868> and what's the shortest way to flatten the middle list so it's only a list of lists?
[02:19:23] <tbrowder> at any rate, i'm collecting good notes for an advent blurb
[02:20:02] <lizmat> cool!  :-)
[02:25:47] *** Quits: djerius_ (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[02:26:04] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:31:49] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[02:32:05] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:52:39] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:00:32] *** Parts: xenu (~xenu@carychium-tridentatum.xenu.pl) ()
[03:06:17] <[Coke]> I have a class with a few array attributes; is there an easy way to get a clone of an object that clones the arrays or do I have to write a clone method ?
[03:07:41] <tbrowder> .tell tonyo i need help with my fez issue #49. mi6 barfs on the "fez upload --file=Foo.tar.gz" part, and i don't understand yr readme on the tar issue.
[03:07:42] <Skarsnik> hm, @ attributes are not cloned?
[03:07:42] <tellable6> tbrowder, I'll pass your message to tonyo
[03:08:34] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[03:09:40] <[Coke]> m: class A { has @.stuf}; my $a = A.new(:stuf<1 2 3 4>); my $b = $a.clone; $a.stuf=<4 5 6>; dd $b
[03:09:41] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´A $b = A.new(stuf => [IntStr.new(4, "4"), IntStr.new(5, "5"), IntStr.new(6, "6")])‚ê§¬ª
[03:13:25] <[Coke]> eh. replaced the .clone with an explicit .new
[03:14:09] <[Coke]> ... which I don't think worked either. afk
[03:15:37] *** Joins: monkey_ (~user@190.104.116.153)
[03:32:54] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:34:48] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:39:28] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:41:28] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[03:58:32] <Geth> ¬¶ doc/codesections-eager-sub: 97761a036b | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Type/List.pod6
[03:58:32] <Geth> ¬¶ doc/codesections-eager-sub: Remove &eager sub form
[03:58:32] <Geth> ¬¶ doc/codesections-eager-sub: 
[03:58:32] <Geth> ¬¶ doc/codesections-eager-sub: This removes the &eager sub, which does not seem to exist.
[03:58:32] <Geth> ¬¶ doc/codesections-eager-sub: 
[03:58:33] <Geth> ¬¶ doc/codesections-eager-sub: (There's an .eager method and an eager statement prefix, but no sub)
[03:58:33] <Geth> ¬¶ doc/codesections-eager-sub: review: https://github.com/Raku/doc/commit/97761a036b
[03:59:07] <Geth> ¬¶ doc: codesections++ created pull request #3994: Remove &eager sub form
[03:59:08] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3994
[04:31:59] *** Quits: patrickb (~quassel@37.123.120.35) (Quit: Quit.)
[04:41:02] *** Quits: japhb (~geoff@mugs/japhb) (Ping timeout: 252 seconds)
[04:41:17] *** Joins: japhb (~geoff@mugs/japhb)
[04:53:12] *** gordonfish- is now known as gordonfish
[04:55:31] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:00:45] <Geth> ¬¶ doc/master: 4 commits pushed by Coke++
[05:00:45] <Geth> ¬¶ doc/master: b1475019ce | prefer american spelling
[05:00:46] <Geth> ¬¶ doc/master: 9cf1aba142 | new words
[05:00:46] <Geth> ¬¶ doc/master: 8ef295d1e0 | whitespace
[05:00:46] <Geth> ¬¶ doc/master: be4282d1b8 | typo
[05:00:46] <Geth> ¬¶ doc/master: review: https://github.com/Raku/doc/compare/c712268b89af...be4282d1b8bd
[05:18:46] *** Quits: kjp (~kevin@180.216.176.95) (Quit: WeeChat 2.8)
[05:25:35] *** Quits: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net) (Ping timeout: 252 seconds)
[05:34:09] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:40:54] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:44:26] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[05:45:15] *** Joins: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201)
[05:47:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:47:35] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[05:50:04] *** Joins: monkey_ (~user@190.104.116.153)
[06:46:16] <[Coke]> ended up avoiding the need for the clone entirely by making the object a tad smarter.
[06:50:05] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:50:05] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:50:11] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:52:59] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:54:06] *** Joins: dmc00 (~dmc@47.186.241.232)
[06:57:57] *** Joins: monkey_ (~user@190.104.116.153)
[07:52:51] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:52:52] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:52:52] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:52:52] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:52:52] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:52:52] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:52:52] *** Joins: small_petit (~small_pet@102.176.65.109)
[08:53:59] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:54:34] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:54:57] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:54:58] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[08:55:07] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:55:11] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[08:55:25] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[08:55:48] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:58:11] <small_petit> I don't know if this is the right place.... Please when is Raku supporting mobile applications? It's just a shame that the language that has got things right does not support android, ios, desktop apps as at now. I just keep getting sad every other day. Thanks.
[08:58:35] <small_petit> I don't know if this is the right place.... Please when is Raku supporting mobile applications? It's just a shame that the language that has got things right does not support android, ios, desktop apps as at now. I just keep getting sad every other day. Thanks.
[09:08:56] *** Quits: small_petit (~small_pet@102.176.65.109) (Quit: Connection closed)
[09:10:52] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[09:33:03] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:21] *** Joins: frost (~frost@user/frost)
[09:53:11] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[09:54:09] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:54:26] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:55:43] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[10:33:23] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:53:50] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[10:55:33] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:55:56] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:56:06] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[11:05:30] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:06:23] *** Joins: seednode (~seednode@user/seednode)
[11:07:03] *** Quits: gabiruh_ (~gabiruh@vps19177.publiccloud.com.br) (Quit: ZNC 1.7.5 - https://znc.in)
[11:07:17] *** Joins: gabiruh (~gabiruh@vps19177.publiccloud.com.br)
[11:27:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:31:58] <Geth> ¬¶ doc: 7648392313 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Type/List.pod6
[11:31:58] <Geth> ¬¶ doc: Remove &eager sub form (#3994)
[11:31:59] <Geth> ¬¶ doc: 
[11:31:59] <Geth> ¬¶ doc: This removes the &eager sub, which does not seem to exist.
[11:31:59] <Geth> ¬¶ doc: 
[11:31:59] <Geth> ¬¶ doc: (There's an .eager method and an eager statement prefix, but no sub)
[11:31:59] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/7648392313
[11:32:01] <linkable6> Link: https://docs.raku.org/type/List
[11:32:44] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[11:35:15] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[11:36:05] *** Joins: small_petit (~small_pet@154.160.25.40)
[11:43:30] *** Quits: small_petit (~small_pet@154.160.25.40) (Quit: Connection closed)
[11:54:13] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[11:54:46] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[12:31:37] *** Quits: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201) (Quit: Leaving)
[13:13:27] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Ping timeout: 252 seconds)
[13:14:29] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[13:54:12] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[13:54:18] <atroxaper> Hello, #raku
[13:54:29] <atroxaper> m: multi trait_mod:<is>(Mu:D $m, :$name!) {}; class A is name {}
[13:54:30] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§'A' cannot inherit from 'name' because it is unknown.‚ê§Did you mean 'Same'?‚ê§‚ê§at <tmp>:1‚ê§¬ª
[13:54:46] <atroxaper> How can I write a trait for a class?
[14:01:10] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:10:33] <discord-raku-bot> <Nemokosch#9980> Hi
[14:11:10] <discord-raku-bot> <Nemokosch#9980> Thanks for codesections for even caring about my complaint with (@a, @b) on the LHS, also vrurg for the answer under the issue I opened for it
[14:12:37] <discord-raku-bot> <Nemokosch#9980> However, to be honest, I'm a bit disappointed by the lack of attention this draws when this behavior is a top 1 WAT candidate in Raku I have seen so ar
[14:12:38] <discord-raku-bot> <Nemokosch#9980> However, to be honest, I'm a bit disappointed by the lack of attention this draws when this behavior is a top 1 WAT candidate in Raku I have seen so far
[14:12:38] <discord-raku-bot> <Nemokosch#9980> And so far the arguments have been anything but convincing
[14:14:41] <discord-raku-bot> <Nemokosch#9980> If there are other arguments than "it is already common to do in certain situations", please go ahead and say it
[14:18:48] <atroxaper> Never mind about my question. It's just Mu:U parameter type.
[14:26:01] *** Quits: atroxaper (~atroxaper@178.49.194.113) ()
[14:28:11] *** Joins: MoC (~moc@user/moc)
[14:38:45] *** Joins: jjido (~Denis@90.213.58.125)
[14:53:35] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[14:56:33] *** Joins: abraxxa-home (~alex@smtp.hartmaier.priv.at)
[15:24:54] *** Joins: mscha (~mscha@logger.mscha.org)
[15:25:35] <mscha> Is there a way to specify a two-dimensional array of Ints, without fixed boundaries?
[15:26:11] <mscha> E.g.: my Int @foo[*;*] 
[15:26:45] <mscha> m: my Int @foo[*;*]
[15:26:46] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´Jagged array shapes not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[15:27:03] <mscha> I can do simply: my @foo
[15:27:29] <lizmat> no, not yet, as the message implied :-)
[15:27:32] <mscha> That works, but I can't declare it as Int then.
[15:28:10] <mscha> OK, thanks, lizmat.  I'll stick to "my @foo" then.
[15:32:42] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:32:54] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:04:40] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[16:29:42] *** Quits: mscha (~mscha@logger.mscha.org) (Quit: Connection closed)
[16:32:36] *** Joins: jjido (~Denis@90.213.58.125)
[16:38:48] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[16:40:23] <Zero_Dogg> Is there any quick way to get a filehandle for a Blob object? (usecase: have a Blob from LWP::Simple.get() that I need to pass to Compress::Zlib for decompression, Compress::Zlib throws `No such method 'eof' for invocant of type 'Buf'.`if I provide it with a Buf)
[16:41:39] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[16:42:27] <lizmat> hmm... doesn't LWP::Simple provide you with a method to get an IO::Handle compatible object ?
[16:48:41] <Zero_Dogg> lizmat: not that I'm aware of (and not that I was able locate by skimming through the source)
[16:51:43] <lizmat> I'm usually using Cro::HTTP::Client nowadys: https://cro.services/docs/reference/cro-http-client
[16:52:00] <lizmat> I think that has support for decompression built in
[16:58:05] <Zero_Dogg> Thanks, I'll give that a go. Has something changed with zef recently? It's failing to locate CBOR::Simple (which is an indirect dependency of Cro::HTTP::Client apparently)
[16:58:58] <lizmat> japhb ^^  ??
[16:59:44] <lizmat> Zero_Dogg: perhaps do a "zef upgrade zef", there's been a new release with a lot of fixes
[17:00:56] <Zero_Dogg> Already have the latest
[17:01:06] <lizmat> oki
[17:01:21] <lizmat> I'd suggest first installing CBOR::Simple 
[17:01:22] <Zero_Dogg> (or so zef says, anyway)
[17:01:35] <lizmat> $ zef --version
[17:01:35] <lizmat> v0.13.4
[17:01:44] <lizmat> is what I have
[17:02:45] *** Joins: monkey_ (~user@190.104.116.153)
[17:02:50] <Zero_Dogg> Okay so that's a lot newer than I have
[17:10:31] *** Joins: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net)
[17:13:31] <Zero_Dogg> Outdated distro-provided zef (I thought I had it installed from rakudo-pkg). Replacing it with shiny new one did the trick.
[17:21:54] *** Joins: aoeuidhtns (~aoeuidhtn@31-208-34-104.cust.bredband2.com)
[17:22:35] <lizmat> cool
[17:26:09] <Zero_Dogg> Looks like it doesn't decompress though, and also returns a Blob for binary data.
[17:31:54] <Zero_Dogg> Solved it with Libarchive::Filter :)
[17:32:22] <Zero_Dogg> It accepts blobs
[17:42:16] <Skarsnik> m: my Array of Int @foo; say @foo.WHAT
[17:42:16] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´(Array[Array[Int]])‚ê§¬ª
[17:45:04] *** Quits: aoeuidhtns (~aoeuidhtn@31-208-34-104.cust.bredband2.com) (Quit: Connection closed)
[18:08:55] *** Joins: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201)
[18:15:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[18:29:17] *** Joins: monkey_ (~user@190.104.116.153)
[18:48:26] <timo> m: my @foo is Array of Int; say @foo.WHAT
[18:48:26] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´(Array[Int])‚ê§¬ª
[18:48:29] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[18:58:44] <Skarsnik> I wonder if there could be a nice way to tell the method FALLBACK to not be called when you misscall something in it (so it's not called again)
[18:59:50] *** Quits: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201) (Quit: Leaving)
[19:02:55] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[19:03:56] <atroxaper> lizmat: Hello. I've write the new blog. I'm thinking to proposal it to the advent. But, as you know, i'm not a native English. Could somebody to edit a google translate version and make the text be more Christmas?
[19:04:34] <corwin> atroxaper: I bet there are folks here that could help with that! Post your translation here, and let's see!
[19:06:03] <atroxaper> https://rakurs-atroxaper-net.translate.goog/2021-12-05-java-annotations?cda&_x_tr_sl=ru&_x_tr_tl=en&_x_tr_hl=ru
[19:07:02] <merryprog> Ack. Russian to English google translate is /really/ bad.
[19:08:17] <atroxaper> Not always, actually.
[19:08:32] <sienet_ja_LSD[m]> have you tried this, https://www.deepl.com/translator
[19:12:17] <atroxaper> Now. As I see, it a little bit better. Anyway, could somebody help me with it? I agree to gift the authorship and the idea of the post :)
[19:15:47] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[19:22:02] *** Joins: vodkra (~vodkra@user/vodkra)
[19:25:13] *** Joins: monkey_ (~user@190.104.116.153)
[19:31:55] <SmokeMachine> Will it be called if you ‚Äúdisallow‚Äù it on signature?
[19:33:50] <SmokeMachine> m: class A { method FALLBACK(‚Äútest‚Äù) { say ‚Äúfallback‚Äù; 42 }; A.test; A.something-else
[19:33:51] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3allback‚Äù; 42 }; A.test; A.something-else7‚èè5<EOL>‚ê§    expecting any of:‚ê§        statement end‚ê§        statement modifier‚ê§        statement modifier l‚Ä¶¬ª
[19:34:15] <SmokeMachine> m: class A { method FALLBACK(‚Äútest‚Äù) { say ‚Äúfallback‚Äù; 42 }}; A.test; A.something-else
[19:34:15] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´fallback‚ê§Constraint type check failed in binding to parameter '<anon>'; expected "test" but got "something-else"‚ê§  in method FALLBACK at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[19:50:40] <tbrowder> atroxaper: you could make a provisional entry in the Raku/advent title list for 2021 with a link to the article and need for help.
[19:51:17] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Ping timeout: 252 seconds)
[19:51:44] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[19:53:36] *** Joins: mathias[m]12 (~mathiasma@2001:470:69fc:105::1:4713)
[19:57:41] <Skarsnik> m:  class A { method FALLBACK($name) { say $name; self.foo }; A.new.hello;
[19:57:41] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3e) { say $name; self.foo }; A.new.hello;7‚èè5<EOL>‚ê§¬ª
[19:57:49] <Skarsnik> m:  class A { method FALLBACK($name) { say $name; self.foo }}; A.new.hello;
[19:58:11] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´(timeout)hello‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§foo‚ê§‚Ä¶¬ª
[19:58:26] <Skarsnik> m:  class A { method FALLBACK($name) { say $name; self.foo(42, 11) }}; A.new.hello;
[19:58:27] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´hello‚ê§Too many positionals passed; expected 2 arguments but got 4‚ê§  in method FALLBACK at <tmp> line 1‚ê§  in method FALLBACK at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[19:59:18] <Skarsnik> I am more talking about this, kinda confusing since the error point to FALLBACK again. x)
[20:01:29] *** Joins: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201)
[20:09:24] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:12:53] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:f767:b15a:e5b1:96f0)
[20:18:05] *** Joins: monkey_ (~user@190.104.116.153)
[20:28:33] <Skarsnik> I am more talking about this, kinda confusing since the error point to FALLBACK again. x)
[20:28:40] <Skarsnik> oops x)
[20:30:00] <Skarsnik> Is there a more clever way to get an enum value from a Str representing the key name than ASM65816::AddressingMode(ASM65816::AddressingMode.enums{$/[1]}[0]) ?
[20:30:23] <Skarsnik> $/[1] contains the enum entry name
[20:33:05] *** Quits: Woodi (~Woodi@n8236h162.sprintdatacenter.net) (Ping timeout: 252 seconds)
[20:40:10] <MasterDuke> does ASM65816::AddressingMode("string") work?
[20:41:53] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[20:42:29] <MasterDuke> m: enum A <B C>; say A("B")  # huh, i thought this worked
[20:42:29] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´No value 'B' found in enum A‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[20:42:59] <Skarsnik> A() expect the value, not the key x)
[20:43:15] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[20:45:48] <MasterDuke> m: enum A <B C>; my $b = "B"; say A::<<$b>>.value
[20:45:48] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´0‚ê§¬ª
[20:51:08] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:56:49] <Skarsnik> Oh thanks :)
[20:58:41] *** Quits: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201) (Quit: Leaving)
[21:05:08] *** Joins: monkey_ (~user@190.104.116.153)
[21:16:42] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[21:16:52] *** Joins: jjido (~Denis@90.213.58.125)
[21:25:17] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:27:27] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[21:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:35:33] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:38:54] *** Joins: Woodi (~Woodi@n8236h162.sprintdatacenter.net)
[21:56:07] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[21:56:36] *** Joins: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201)
[22:01:15] *** Joins: monkey_ (~user@190.104.116.153)
[22:26:29] *** Quits: jgaz (~jgaz@2600:8805:d982:4233:2e0:4cff:fe00:e201) (Quit: Leaving)
[22:40:21] *** Quits: avar (avar@vm.nix.is) (Quit: Lost terminal)
[22:40:45] *** Joins: Skarsnik_ (~Skarsnik@91-170-31-218.subs.proxad.net)
[22:42:25] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 256 seconds)
[22:42:27] *** Joins: jjido (~Denis@90.213.58.125)
[22:42:59] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 256 seconds)
[22:43:33] *** Quits: abraxxa-home (~alex@smtp.hartmaier.priv.at) (Ping timeout: 256 seconds)
[22:44:40] *** Quits: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net) (Ping timeout: 256 seconds)
[22:45:25] *** Joins: abraxxa-home (~alex@smtp.hartmaier.priv.at)
[22:46:55] *** Joins: avar (avar@vm.nix.is)
[22:47:05] *** Quits: vasko (~vasko@137.220.91.123) (Quit: The Lounge - https://thelounge.chat)
[22:50:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[22:52:29] *** Joins: vasko (~vasko@137.220.91.123)
[23:06:14] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Remote host closed the connection)
[23:23:11] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[23:25:06] <ggoebel> I must be missing something obvious, but I can't see it. Anyone willing to look at my nearly identical solutions to today's Advent Of Code puzzles in raku and perl and tell me why the raku one gives incorrect answers?
[23:25:15] <ggoebel> raku: https://gist.github.com/ggoebel/f06857bd3b856f7bc055ac433f1e2c1f
[23:25:17] <evalable6> ggoebel, rakudo-moar 925d0bef8: OUTPUT: ¬´(exit code 1) Failed to open file /home/bisectable/git/whateverable/input: No such file or directory‚ê§  in block <unit> at ./sandbox/05.raku line 3‚ê§‚ê§¬ª
[23:25:30] <ggoebel> perl: https://gist.github.com/ggoebel/0dff89aa09ff88e0eb49046a4a4110f3
[23:27:19] <vasko> I'd look but I haven't done challenge 5 yet myself :P
[23:27:57] <[Coke]> style note, you don't have to () the for or if params.
[23:28:28] <ggoebel> coke: perl habits die hard :-)
[23:29:24] <gfldex> style note, %grid{$x1}{$y} is equivalent to %grid{$x1;$y}
[23:30:15] <vasko> gfldex Is the same true for arrays?
[23:30:21] <gfldex> yes
[23:30:50] <ggoebel> noted thx
[23:31:00] <vasko> Cool, I only found out about multi-dim arrays yesterday and thought they were a different beast.
[23:31:23] <vasko> I'm eagerly anticipating the addition of ragged arrays and views.
[23:31:56] <gfldex> A SemiList is a general concept in Raku.
[23:32:07] <gfldex> m: @a = (1,2;3,4); dd @a;
[23:32:07] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '@a' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5@a = (1,2;3,4); dd @a;‚ê§¬ª
[23:32:12] <[Coke]> multi dim is different, yes
[23:32:12] <gfldex> m: my @a = (1,2;3,4); dd @a;
[23:32:12] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´Array @a = [(1, 2), (3, 4)]‚ê§¬ª
[23:32:40] <vasko> Btw, I'm learning raku with AoC and am wondering how to make my $verbose arg from main global neatly. Anything better than `my $VERBOSE; sub MAIN(Bool :v(:$verbose)) { $VERBOSE = $verbose }`?
[23:33:20] <gfldex> call it $*VERBOSE
[23:33:39] <ggoebel> m: my @a = (1,2;3,4); @a[0;0]=5; .raku.say
[23:33:39] <camelia> rakudo-moar d7152ea59: OUTPUT: ¬´Cannot modify an immutable List ((1 2))‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[23:33:55] *** Joins: monkey_ (~user@190.104.116.153)
[23:35:05] <ggoebel> so I guess I couldn't have used ++%grid{$x1;$y}
[23:35:28] <gfldex> that works because $x1 and $y are containers.
[23:37:02] <ggoebel> Cannot resolve caller prefix:<++>(List:D); the following candidates
[23:37:02] <ggoebel> match the type but require mutable arguments:
[23:37:02] <ggoebel>     (Mu:D $a is rw)
[23:37:33] <gfldex> vasko: if you want to go fancy on dynvars, this might help: https://gfldex.wordpress.com/2020/08/17/defined-or-dynvar/
[23:37:34] <[Coke]> so, the bug is in the second half (answers for part 1 are correct)
[23:38:02] <ggoebel> I don't get the correct answer for part one when using my input... I do when using the example input
[23:38:37] <ggoebel> just a sec, I'll share my input
[23:39:25] <vasko> gfldex: Thanks! I think `say $foo if $*verbose;` is quite neat. :)
[23:39:34] <ggoebel> input: https://gist.github.com/ggoebel/d0417c4100df80ae822c69942c6547c5
[23:40:24] <[Coke]> er, sorry.
[23:40:29] <gfldex> vasko: I would stuff the check against $*verbos into a `sub debug(|c) { say(|c) if $*verbose }` .
[23:40:52] <[Coke]> if you print out the "diag" coordinates it's looping over, they don't look right.
[23:41:49] <[Coke]> on the real input, first line, it swaps the coordinates, then is incrementing x by 10?
[23:42:24] <[Coke]> try making sure you're working with numbers and not strings, I think.
[23:42:24] <gfldex> ggoebel: did you consider to have a type constraint in line 10? `my (Int:D $x1, Int:D $y1, Int:D $x2, Int:D $y2)` might catch mistakes.
[23:42:34] <[Coke]> afk
[23:43:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:45:07] <vasko> gfldex: What's the most idiomatic way to make it support calls as`debug 2, "Only print if -v 2 is set"`?
[23:45:26] <vasko> I can't find the docs for the `|c` annotation.
[23:45:51] <ggoebel> I changed line 10 to:     my ($x1, $y1, $x2, $y2) = .split(/\D+/, :skip-empty).map({+$_});
[23:45:54] <gfldex> vasko: https://docs.raku.org/type/Signature#Capture_parameters
[23:45:58] <ggoebel> and that fixed it...
[23:46:15] <ggoebel> thanks! 
[23:46:27] <vasko> Thanks, can I combine that with an optional `Int` infront of it?
[23:46:44] <vasko> I guess the multi signatures is what I want.
[23:46:50] <gfldex> well, you have to do a sub signature then.
[23:47:54] <ggoebel> Still a bit surprised $x1 .. $x2 was incrementing x by 10  
[23:50:56] <ggoebel> hmm... $x1 .. $x2 -> $x was not incrementing x by 10. So I'm still not understanding how forcing numeric context fixed it.
[23:51:38] <gfldex> vasko: https://gist.github.com/9c317047a1cabafcdc9d2298a76425e7
[23:53:02] <gfldex> vasko: you just made me find an ENODOC :)
[23:53:10] <gfldex> two ENODOCs acutally
[23:53:50] <gfldex> well, I better check roast before I accuse to docs of incompleteness ‚Ä¶
[23:58:49] <ggoebel> what is perl automagically doing that I take for granted that raku is not?
[23:59:03] <vasko> Thanks, I got that bit, but I want to have it take a level as well.
