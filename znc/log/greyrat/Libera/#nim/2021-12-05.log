[00:01:21] <FromDiscord> <enthus1ast> i think the only way is to loop through it
[00:04:29] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[00:06:30] <FromDiscord> <Solitude> In reply to @TryAngle "but I'm using glfwInit": do you need header pragmas there? im guessing they are causing conflicts?
[00:14:59] <FromDiscord> <TryAngle> In reply to @Solitude "do you need header": removing them works again ü§î ‚Üµwhat is the difference between including them vs not including them?
[00:15:03] <FromDiscord> <TryAngle> (edit) 04removed "again"
[00:15:27] *** Quits: PMunch (~PMunch@user/pmunch) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 256 seconds)
[00:15:45] *** Joins: anddam (~anddam@user/anddam)
[00:15:50] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[00:15:51] *** Joins: PMunch (~PMunch@user/pmunch)
[00:16:33] <FromDiscord> <Solitude> nimgl takes liberties with procedure signatures, but at runtime it doesnt matter. but when you include headers which contain correct definitions they start to conflict.
[00:17:34] <FromDiscord> <Solitude> basically, you have to use the same ffi convention as the wrapper
[00:17:42] <FromDiscord> <TryAngle> ah and I included a header that is from a different version of GLFW I suppose?
[00:17:48] <FromDiscord> <Solitude> no
[00:17:55] <FromDiscord> <Solitude> you include headers, nimgl doesnt
[00:19:43] <FromDiscord> <TryAngle> oh thanks
[00:20:10] <FromDiscord> <Solitude> just importc and cdecl your stuff and you will be fine
[00:20:52] <FromDiscord> <TryAngle> ok, seems to work, sadly what I'm doing is using Vulkan so I have to make it run on main windows and not WSL üòî
[00:20:57] <FromDiscord> <TryAngle> btw when using libraries that have‚Üµwhen defined(X)‚Üµhow can I define X when using that library?
[00:21:33] <FromDiscord> <Solitude> add `-d:X` to nim.cfg if you want it always
[00:22:36] <FromDiscord> <TryAngle> can I also put this into the project.nimble file?
[00:22:42] <FromDiscord> <Solitude> no
[00:23:39] <FromDiscord> <TryAngle> where would I put this file üòÇ ?‚ÜµSorry been using nim for only 2 days now
[00:23:50] <FromDiscord> <Solitude> where your source is
[00:24:05] <FromDiscord> <TryAngle> ok I will try that later thaks!
[00:38:07] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 252 seconds)
[00:45:19] *** Joins: [RMS] (~rs@genoce.org)
[00:46:16] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 260 seconds)
[00:54:59] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[01:06:48] *** Joins: src (~src@user/src)
[01:10:22] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:10:46] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[01:33:29] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 252 seconds)
[01:36:42] *** [RMS] is now known as [R]
[01:49:47] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[01:50:55] *** Joins: neurocyte0132889 (~neurocyte@IP-213188116193.dynamic.medianet-world.de)
[01:50:55] *** Quits: neurocyte0132889 (~neurocyte@IP-213188116193.dynamic.medianet-world.de) (Changing host)
[01:50:55] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[02:05:49] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[02:22:36] *** Joins: Schnouki (e7aa4cfb39@user/schnouki)
[02:23:14] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:28:07] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 252 seconds)
[02:32:04] *** Joins: audiophile (~audiophil@user/audiophile)
[02:37:12] <FromDiscord> <TryAngle> I have a .lib and a .h file, how would I statically wrap that in a nim project?‚ÜµIs there an example somewhere?
[02:38:15] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[02:41:32] <FromDiscord> <el__maco> I just used the --clib:mylib command line parameter
[03:08:55] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[03:12:20] *** Joins: lumo_e (~enrico@93-40-14-151.ip36.fastwebnet.it)
[03:23:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:31:11] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 252 seconds)
[03:50:51] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3H2e
[03:51:08] <FromDiscord> <Elegantbeef> "the variation"?
[03:51:41] <FromDiscord> <TryAngle> the enum variation‚Üµe.g a, b  and c
[03:52:15] <FromDiscord> <TryAngle> something like:‚Üµassert A.c.toInt() == -8
[03:52:16] <FromDiscord> <Elegantbeef> I do not follow
[03:52:21] <FromDiscord> <Elegantbeef> ah
[03:52:24] <FromDiscord> <Elegantbeef> `ord`
[03:52:38] <FromDiscord> <Elegantbeef> I'd say "integer value" üòÄ
[03:53:30] <FromDiscord> <TryAngle> ah thanks üôÇ
[03:53:44] <FromDiscord> <TryAngle> is there also a way to echo ints in hex format?
[03:53:48] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3H2h
[03:53:59] <FromDiscord> <Elegantbeef> `import std/strutils` `toHex`
[03:54:13] <FromDiscord> <TryAngle> üëç
[03:54:40] <FromDiscord> <Elegantbeef> In Nim using holey enums is a detriment since it doesnt allow some features if the range is wide enough
[03:54:48] <FromDiscord> <el__maco> somewhat related question is there an easy way to echo floats with fewer decimal places
[03:55:04] <FromDiscord> <Elegantbeef> `import std/strutils` `formatFloat` i believe
[03:55:53] <FromDiscord> <Elegantbeef> You can also use `std/strformat` `fmt` with `{yourFloat: 2}` i believe
[03:57:49] <FromDiscord> <TryAngle> @ElegantBeef ok now a bit different, I'm using cint vor value now
[03:57:57] <FromDiscord> <TryAngle> but ord still returns int?
[03:58:02] <FromDiscord> <el__maco> ``import math,std/strutils‚Üµecho PI.formatFloat(ffDecimal,2)``‚Üµthis seems to work, not sure about the second option
[03:58:38] <FromDiscord> <Elegantbeef> `import std/[math, strformat]; echo fmt"{PI: 2}"` üòõ
[03:58:48] <FromDiscord> <Elegantbeef> Though that's not capable of being user defined or dynamic
[03:59:09] <FromDiscord> <Elegantbeef> You can just do `ord.cint`
[04:00:10] <FromDiscord> <TryAngle> thanks again üòÑ
[04:02:25] *** Quits: lumo_e (~enrico@93-40-14-151.ip36.fastwebnet.it) (Quit: Quit)
[04:21:52] <FromDiscord> <codic> ord always returns int
[04:30:02] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3H2t
[04:30:05] <FromDiscord> <codic> why does this not build? using <https://github.com/nim-lang/cairo>
[04:30:11] <FromDiscord> <codic> which has cairoxlib.nim: <https://github.com/nim-lang/cairo/blob/master/src/cairoxlib.nim>
[04:37:23] *** Quits: [R] (~rs@genoce.org) (Read error: Connection reset by peer)
[04:37:30] *** Joins: [R] (~rs@genoce.org)
[04:41:11] <FromDiscord> <codic> nimble sucks I might just copy this to my project
[04:41:14] <FromDiscord> <codic> what am I doing wrong tho
[04:41:48] <FromDiscord> <Elegantbeef> What's the build error?
[04:44:17] <FromDiscord> <codic> cannot open file: cairo/cairoxlib
[04:44:41] <FromDiscord> <codic> it also looks like the cairoxlib module is using the wrong imports for X11, so I'll just vendor this (and PR upstream later) until I figure out Pixie with X11
[04:44:46] <FromDiscord> <codic> which is definitely the most ideal
[04:44:53] <FromDiscord> <codic> cuz pure nim
[04:45:18] <FromDiscord> <Elegantbeef> it should be `cairoxlib` just cause of how the packaging works
[04:45:27] <FromDiscord> <Elegantbeef> not `cairo/cairoxlib`
[04:46:06] <FromDiscord> <codic> oh i see
[04:46:13] <FromDiscord> <codic> still doesn't work because the module is broken: `/home/user/.nimble/pkgs/cairo-1.1.1/cairoxlib.nim(8, 10) Error: cannot open file: x`
[04:46:17] <FromDiscord> <codic> (x should be x11/x)
[04:46:25] <FromDiscord> <codic> so I'll just keep a local copy yea
[04:47:25] <FromDiscord> <Elegantbeef> I mean you can always fork it and maintain it for yourself
[04:47:39] <FromDiscord> <Elegantbeef> Then depend upon that instead of copying it into your project
[04:48:05] <FromDiscord> <codic> Yeah
[04:51:04] <FromDiscord> <codic> it works! https://media.discordapp.net/attachments/371759389889003532/916861694905561138/unknown.png
[04:51:12] <FromDiscord> <Elegantbeef> Congrats
[05:07:31] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[05:11:42] <FromDiscord> <codic> now to do something more useful than an empty rectangle
[05:23:17] *** Joins: audiophile_ (~audiophil@user/audiophile)
[05:26:41] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[05:26:49] *** audiophile_ is now known as audiophile
[05:28:28] <FromDiscord> <codic> give up, cairo sucks
[05:42:20] <FromDiscord> <ynfle (ynfle)> try https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwiQ-NzTysv0AhVwR_EDHWmlD4MQFnoECAUQAQ&url=https%3A%2F%2Fgithub.com%2Ftreeform%2Fpixie&usg=AOvVaw3xMtM-8Yvrs8eRQaS6U3ND
[05:42:33] <FromDiscord> <ynfle (ynfle)> Try https://github.com/treeform/pixie
[05:46:39] <FromDiscord> <codic> Indeed
[05:46:50] <FromDiscord> <codic> It took me 1/4 the time and I've already started making things, pixie is awesome
[05:47:15] <FromDiscord> <codic> Finally figured out how to draw it to a X pixmap, I think I'll PR an example because that took me some time to figure out
[05:49:12] <FromDiscord> <Klaufir> sent a code paste, see https://play.nim-lang.org/#ix=3H2G
[05:49:36] <FromDiscord> <codic> lol, and as I speak @treeform has released a new version of pixie
[05:49:36] <FromDiscord> <codic> epic
[05:49:40] <FromDiscord> <Elegantbeef> You should interpret it as a result
[05:50:10] <FromDiscord> <Elegantbeef> It's an expression so result = the expression
[05:50:21] <FromDiscord> <Elegantbeef> Really you can drop the `result =` assignment and it'd be the exact same logic
[05:50:33] <FromDiscord> <Klaufir> sent a code paste, see https://play.nim-lang.org/#ix=3H2H
[05:50:45] <FromDiscord> <codic> what is the syntax error
[05:50:51] <FromDiscord> <Elegantbeef> User defined code is not the same as macro generated in some cases
[05:50:53] <FromDiscord> <Klaufir> (edit) "https://play.nim-lang.org/#ix=3H2H" => "https://play.nim-lang.org/#ix=3H2I"
[05:51:21] <FromDiscord> <Klaufir> I get `test.nim(5, 5) Error: invalid indentation` for the above
[05:52:27] <FromDiscord> <treeform> In reply to @codic "lol, and as I": Thank you for using Pixie. I am excited to report that with this new version we are now faster than Cairo in most cases we benchmark. Hope it continues to work great for you.
[05:52:33] <FromDiscord> <codic> awesome!
[05:52:50] <FromDiscord> <treeform> Adding more examples is very welcome.
[05:52:59] <FromDiscord> <codic> yeah I spent too much time failing to get cairo to work properly, pixie is just wonderful
[05:53:05] <FromDiscord> <treeform> üôÇ
[05:53:07] <FromDiscord> <codic> created an issue, will create a PR soon
[05:53:52] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3H2K
[05:54:14] <FromDiscord> <Elegantbeef> If you look at the treeRepr of that you will see the right side of the `var name =` is a `StmtList`
[05:54:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3H2L
[05:54:47] <FromDiscord> <Elegantbeef> Since all a statement list is really is a block of code
[05:55:03] <FromDiscord> <Klaufir> Ah, thank you
[05:55:08] <FromDiscord> <Klaufir> didn't know this was possible
[05:55:34] <FromDiscord> <Elegantbeef> `()` can be used fairly often to make Nim play nice
[05:55:39] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:55:46] <FromDiscord> <codic> Indeed
[05:55:46] <FromDiscord> <Elegantbeef> Not that it's really suggested, but alas
[05:55:57] <FromDiscord> <codic> Yeah I wouldn't use result there
[05:56:24] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3H2N
[05:56:40] <FromDiscord> <Elegantbeef> But yes there is 0 reason to use result unless you use the value after
[05:56:56] <FromDiscord> <Elegantbeef> Implicit results are preferred where usable
[05:57:28] <FromDiscord> <codic> that is valid??
[05:57:33] <FromDiscord> <Klaufir> https://discord.com/channels/371759389889003530/371759389889003532/916876307390935061‚ÜµThis is how memlib (tool on windows to load dlls from memory) ensured that `memlookup` is only called once
[05:57:37] <FromDiscord> <Elegantbeef> Of course `=` is just an operator
[05:58:54] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3H2O
[06:00:13] <FromDiscord> <Elegantbeef> Anywho the "invalid code" you're seeing is just rendering of macros back into readable code
[06:00:28] <FromDiscord> <Elegantbeef> stmtlists do not include `()` for readability reasons i assume
[06:01:04] <FromDiscord> <codic> pixie bouncy ball https://media.discordapp.net/attachments/371759389889003532/916879312601382942/unknown.png
[06:01:08] <FromDiscord> <codic> with x11 backend
[06:01:16] <FromDiscord> <Elegantbeef> Cause you very well might have nested stmtlists  randomly
[06:01:28] <FromDiscord> <Elegantbeef> Nice, might have to use your reference code when i get back to goodwm
[06:01:38] <FromDiscord> <Elegantbeef> Right now i'm dumbly using sdl2 to display the image
[06:03:15] <FromDiscord> <codic> when goodwm is not good
[06:03:38] <FromDiscord> <Elegantbeef> It's never good
[06:03:44] <FromDiscord> <Elegantbeef> The name is a joke based on awesomeWm
[06:05:34] <FromDiscord> <codic> https://github.com/treeform/pixie/pull/340 PR'd example
[06:05:43] *** Quits: audiophile (~audiophil@user/audiophile) (Quit: Default Quit Message)
[06:18:04] *** Joins: audiophile (~audiophil@user/audiophile)
[06:21:32] *** Quits: audiophile (~audiophil@user/audiophile) (Client Quit)
[06:44:14] <FromDiscord> <treeform> If you like X11 we are working on windy (which is not ready) - which will be a wrapper around win32, mac and x11 that does all of that window stuff: https://github.com/treeform/windy/
[06:44:28] <FromDiscord> <treeform> Some things already work.
[06:50:45] <FromDiscord> <retkid> Ngl
[06:51:02] <FromDiscord> <retkid> Nim is my favorite Lang for single threaded
[06:51:06] <FromDiscord> <retkid> But
[06:51:26] <FromDiscord> <retkid> Otherwise, it‚Äôs a nightmare
[06:52:16] <FromDiscord> <retkid> It‚Äôs pretty disgusting
[06:54:44] <FromDiscord> <codic> that is an interesting way at looking at it
[06:54:54] <FromDiscord> <codic> nim's threads and async pretty cool
[06:55:19] <FromDiscord> <codic> In reply to @treeform "If you like X11": oh, so like serving the niche of x11
[06:55:20] <FromDiscord> <codic> (edit) "x11" => "sdl"
[06:55:22] <FromDiscord> <codic> very cool
[06:55:27] <FromDiscord> <codic> will try it out
[06:55:29] <FromDiscord> <retkid> asynchronous is good
[06:55:37] <FromDiscord> <retkid> But have you tried to use threads?
[06:55:53] <FromDiscord> <retkid> Not just read about it
[06:56:03] <FromDiscord> <retkid> Like actually write a ton of code in threads
[06:56:06] <FromDiscord> <Elegantbeef> I've used them
[06:56:16] <FromDiscord> <Elegantbeef> Channels + threads = happy me
[06:56:24] <FromDiscord> <retkid> Channels is cool
[06:56:34] <FromDiscord> <retkid> Until you‚Äôre afraid of it crashing randomly
[06:56:37] <FromDiscord> <retkid> Which happens
[06:56:58] <FromDiscord> <retkid> They are unstable currently
[06:57:07] <FromDiscord> <retkid> That‚Äôs basically my only critique
[06:57:17] <FromDiscord> <retkid> Without that, it would be easy
[07:04:32] <FromDiscord> <codic> I have used nim threads
[07:04:46] <FromDiscord> <codic> I haven't written a huge ton of code, but I've written an ok amount and it works just fine for me
[07:12:22] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:23:41] <FromDiscord> <exelotl> heyy, is there a way to reliably get the AST for a whole module?
[07:24:46] <FromDiscord> <Elegantbeef> Sadly nope
[07:25:05] <FromDiscord> <Elegantbeef> Well not in the same compiler context
[07:26:42] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3H35
[07:27:08] <FromDiscord> <exelotl> (edit) "https://play.nim-lang.org/#ix=3H35" => "https://play.nim-lang.org/#ix=3H36"
[07:27:13] <FromDiscord> <Elegantbeef> If you dont want symbols you can always find the file and load it yourself, but that doesnt give symbols so it's mostly pointles
[07:27:59] <FromDiscord> <exelotl> I guess I'll just have to do without symbols üôÉ
[07:28:24] <FromDiscord> <Elegantbeef> Yea it sucks, was looking for something similar for nimscripter, sadly no API yet
[07:29:09] <FromDiscord> <exelotl> I'm doing this for a documentation tool, so having the typed AST would be _nice_ but I can get by without, I guess.
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:35] <FromDiscord> <codic> @treeform two questions about pixie:‚Üµ - 1) i have a hexadecimal number which is either in the form `0xAARRGGBB` or `0xRRGGBB` (in which case AA = 255). how can I convert this to a Pixie `rgba`?‚Üµ - 2) is there support for bitmap fonts?
[07:38:42] <FromDiscord> <codic> and actually 3) how can I find a font based on the font name?
[07:40:20] <FromDiscord> <codic> sorry for all the questions but it also seems that the fonts are a bit blurry https://media.discordapp.net/attachments/371759389889003532/916904293548822528/unknown.png
[07:43:22] <FromDiscord> <treeform> 1) use rgba(123,123,123,123) constructor
[07:43:44] <FromDiscord> <treeform> 2) bit map fonts are not supported
[07:44:10] <FromDiscord> <treeform> Bit there are plants of .ttf pixel fonts if you want that pixel look
[07:44:25] <FromDiscord> <treeform> (edit) "Bit" => "But" | "plants" => "planty"
[07:44:39] <FromDiscord> <codic> Yeah I guess that's fair
[07:45:03] <FromDiscord> <codic> I might just use Xft and then use Pixie's stuff on top of that
[07:45:20] <FromDiscord> <treeform> 3) we usually assume you have font next to your program, we don't have a way to query or load system fonts.
[07:46:10] <FromDiscord> <codic> Got it
[07:46:21] <FromDiscord> <codic> Shouldn't be too hard to use fontconfig for that
[07:46:23] <FromDiscord> <treeform> 4) fonts bury can be many issues,
[07:46:47] <FromDiscord> <codic> bury?
[07:47:26] <FromDiscord> <Elegantbeef> blurry of course
[07:47:37] <FromDiscord> <codic> oh I did not realize that ü§¶‚Äç‚ôÇÔ∏è
[07:47:54] <FromDiscord> <codic> It seems to not happen with Xft or cairo, only with Pixie
[07:48:28] <FromDiscord> <exelotl> In reply to @Elegantbeef "If you dont want": weh, if I use parseStmt to get the untyped AST, there's no lineinfo
[07:49:31] <FromDiscord> <exelotl> at this rate I'm thinking I'll just have to parse the file myself :/
[07:50:13] <FromDiscord> <Rika> probably because pixie doesnt do font hinting
[07:50:25] <FromDiscord> <Rika> (and its a matter of preference as well)
[07:50:36] <FromDiscord> <Rika> i prefer "blurry fonts" since they look nicer to me
[07:50:54] <FromDiscord> <codic> Fair, they look terribly unreadable to my eyes
[07:50:54] <FromDiscord> <Elegantbeef> Yep exelotl that's the shame, i believe there is a PR that enables more information
[07:51:00] <FromDiscord> <codic> I think I'll just do Xft for text and overlay Pixie on top
[07:51:57] <FromDiscord> <Rika> if it follows system configs for fonts then üëç
[07:52:33] <FromDiscord> <codic> yeah xft follows fontconfig
[07:53:09] <FromDiscord> <codic> so I can have all the goodies of text following your system configuration, plus gradients and svgs and all the other fancy stuff
[07:54:56] *** Joins: audiophile (~audiophil@user/audiophile)
[07:59:09] *** Joins: audiophile_ (~audiophil@user/audiophile)
[08:01:14] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[08:03:15] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[08:05:41] <FromDiscord> <codic> gradient titlebar with pixie https://media.discordapp.net/attachments/371759389889003532/916910677044629504/unknown.png
[08:05:52] <FromDiscord> <pyautogui> Any good JPEG lib
[08:05:53] <FromDiscord> <pyautogui> ?
[08:06:24] <FromDiscord> <pyautogui> I am wondering because I was looking at the treeform/pixie repo, and there is no JPEG output. I would like to add it.
[08:08:00] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3H3h
[08:08:10] <FromDiscord> <codic> the gradient will only go so big
[08:08:43] <FromDiscord> <codic>  https://media.discordapp.net/attachments/371759389889003532/916911440512843786/unknown.png
[08:10:08] <FromDiscord> <codic> (it won't go as big as attr.width.float32, but only after a certain point)
[08:14:00] <nrds> <09SpaceDuck99> Has anyone done heavy database work with Nim? Just curious if there are any issues with CTE queries and/or ODBC to MSSQL
[08:17:23] <nrds> <06Prestige99> Hm maybe check issue trackers for the different sql libraries
[08:19:38] <nrds> <09SpaceDuck99> Thx for showing me this... I'm going to go get super high and do some Nim programming
[08:27:28] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:35:05] *** Quits: [R] (~rs@genoce.org) (Remote host closed the connection)
[08:35:12] *** Joins: [R] (~rs@genoce.org)
[09:10:36] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Read error: Connection reset by peer)
[09:11:03] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[09:31:05] <FromDiscord> <TryAngle> wait do procs have an implicit "result" variable?
[09:31:21] <FromDiscord> <Yardanico> yes
[09:31:35] <FromDiscord> <Yardanico> every proc with a return type has an implicit `result`  variable
[09:31:48] <FromDiscord> <Yardanico> so you don't have to say `var result = 0; # get result; return result`
[09:31:57] <FromDiscord> <Yardanico> you just write `result = computation`
[09:31:59] <FromDiscord> <TryAngle> üò≥
[09:42:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[10:28:51] <FromDiscord> <Cypheriel> out of curiosity... is there better editor support than the one nim plugin on VSCode
[10:29:02] <FromDiscord> <Cypheriel> or are pretty much all the solutions this janky
[10:29:50] <FromDiscord> <Cypheriel> I feel like this plugin is contributing to my stress levels lol
[10:30:20] <FromDiscord> <Rika> They all depend on nimsuggest which is the main cause of problems
[10:31:42] <FromDiscord> <Cypheriel> I hear often something about some Nim LSP
[10:31:48] <FromDiscord> <Cypheriel> I'm not sure how it compares
[10:32:06] <FromDiscord> <Rika> Same issue
[10:32:09] <FromDiscord> <Rika> Depends on nimsuggest
[10:32:34] <FromDiscord> <Cypheriel> goes to show how much I know about these things
[10:32:41] <FromDiscord> <Cypheriel> (none, basically)
[10:32:50] <FromDiscord> <Rika> That‚Äôs fine
[10:32:56] <FromDiscord> <Rika> No one knows anything right off the bat
[10:33:30] <FromDiscord> <Cypheriel> I just wish I didn't feel like both me and my linter are incompetent lol
[10:33:36] <FromDiscord> <Cypheriel> I can't trust myself nor these suggestions
[10:35:12] <FromDiscord> <Rika> Dunno
[10:35:29] <FromDiscord> <Rika> I personally never really relied on suggestions being completely right
[10:43:24] <FromDiscord> <Cypheriel> Neither am I, but... that's not exactly preferable
[10:51:13] <FromDiscord> <Solitude> In reply to @Cypheriel "Neither am I, but...": trust yourself, dont let the machine tell you what to do.
[10:52:20] <FromDiscord> <Cypheriel> In reply to @Solitude "trust yourself, dont let": I'm just too new to the language to really assume I know what I'm doing, and a lot of my logic is carried over from Python
[10:52:28] <FromDiscord> <Cypheriel> and a lot of things just do not act like I'd expect them
[10:52:47] <FromDiscord> <Cypheriel> meanwhile, VSCode is telling me about errors that... really don't even exist and I have no idea where they came from or what they even mean
[10:52:52] <FromDiscord> <codic> What issues do you have with nimsuggest? it works pretty decently for me
[10:52:58] <FromDiscord> <codic> can you give an example?
[10:53:19] <FromDiscord> <Cypheriel> In reply to @codic "What issues do you": I have no idea how to qualify them at the moment, but for one thing it's usually pretty slow
[10:53:40] <FromDiscord> <Cypheriel> sometimes it just doesn't even work lol
[10:54:12] <FromDiscord> <Solitude> In reply to @Cypheriel "meanwhile, VSCode is telling": only trust compiler output about errors
[10:54:22] <FromDiscord> <Cypheriel> yeah, which I've begun to do
[10:54:36] <FromDiscord> <Cypheriel> but there's also the issue of sometimes there's absolutely no info about an error
[10:54:54] <FromDiscord> <Cypheriel> sometimes it's literally the equivalent of "Error: " and no info given
[10:55:31] <FromDiscord> <Solitude> damn, it do be like that sometimes
[10:55:47] <FromDiscord> <codic> weird, nimsuggest is pretty darn fast for me
[10:56:04] <FromDiscord> <Cypheriel> In reply to @codic "weird, nimsuggest is pretty": Perhaps it's a problem with VSCode's autosave
[10:56:07] <FromDiscord> <Cypheriel> but like
[10:56:17] <FromDiscord> <Cypheriel> I have to wait a good few seconds for the suggestions to be accurate
[10:56:23] <FromDiscord> <codic> weird
[10:56:55] <FromDiscord> <Cypheriel> things like this are quite weird as well https://media.discordapp.net/attachments/371759389889003532/916953767918829588/Screenshot_20211205_002642.png
[10:57:07] <FromDiscord> <Cypheriel>  https://media.discordapp.net/attachments/371759389889003532/916953812416217089/Screenshot_20211205_002658.png
[10:57:16] <FromDiscord> <Cypheriel> like what on Earth is it doing there
[10:58:22] <FromDiscord> <Cypheriel> for reference, input and sample are defined on line 22-23
[11:01:00] <FromDiscord> <Cypheriel> oh and another gripe, as well... I almost regret using snake_case because this plugin doesn't provide good suggestions outside of camelCase
[11:01:28] <FromDiscord> <Solitude> yeah, you should regret it
[11:01:46] <FromDiscord> <Cypheriel> In reply to @Solitude "yeah, you should regret": hopefully for reasons other than preference >_>
[11:46:57] <NimEventer> New thread by Kobi: Async with delegates, how to pass parameters?, see https://forum.nim-lang.org/t/8679
[13:39:51] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[14:38:48] *** Joins: jjido (~Denis@90.213.58.125)
[15:14:31] *** Joins: kobi (~kobi@82.166.168.241.fix.netvision.net.il)
[15:14:36] <kobi> hi
[15:14:53] <kobi> a friend is having trouble connecting to the forum, who should i ask?
[15:15:04] <kobi> connecting = registering
[15:18:46] <FromDiscord> <hugogranstrom> In reply to @kobi "a friend is having": @dom96 @narimiran
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:01:14] *** Joins: PMunch (~PMunch@user/pmunch)
[16:04:40] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[16:10:42] <FromDiscord> <Southern_Cross_Au> hello
[16:10:55] <FromDiscord> <Southern_Cross_Au> looking for trouble shooting üòÑ
[16:12:06] <kobi> shoot your trouble
[16:12:57] <FromDiscord> <Southern_Cross_Au> going though nim in action: Getting the following error
[16:13:21] <FromDiscord> <Southern_Cross_Au>  https://media.discordapp.net/attachments/371759389889003532/917033399737253928/unknown.png
[16:14:13] <kobi> do you have gcc installed? try typing gcc in the terminal
[16:14:17] <FromDiscord> <Southern_Cross_Au> I have played with PATH several times, not sure what I did wrong. I also download the compiler from the website and distributed it into the bin and complier folders
[16:14:33] <FromDiscord> <Southern_Cross_Au> In reply to @kobi "do you have gcc": yes
[16:16:22] <kobi> you can see the gcc path there, with requested command not found.
[16:16:48] <kobi> but if it's in that location, maybe the error msg is hiding some other issue.
[16:17:12] <FromDiscord> <Southern_Cross_Au> I have to add the Gcc path ? ok will find it and add it
[16:17:35] <kobi> okay, cool
[16:18:08] <kobi> btw, u can use shortcuts like nim c -r yourfile.nim
[16:18:32] <FromDiscord> <Southern_Cross_Au> In reply to @kobi "btw, u can use": that was VSC doing üòÑ
[16:18:40] <FromDiscord> <Southern_Cross_Au> I have too many GCC's
[16:18:43] <FromDiscord> <Southern_Cross_Au>  https://media.discordapp.net/attachments/371759389889003532/917034750298951690/unknown.png
[16:24:10] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H5c
[16:24:37] <FromDiscord> <dain> how do I extract a subtuple from `foo`, with the value `("brown", "fox", "jumps")`
[16:24:37] <kobi> i think the one with x86_64-w64-mingw32-gcc.exe from C:/nim-1.6.0/dist/bin
[16:25:28] <FromDiscord> <Rika> In reply to @dain "why can't I index": because they can be of different types, and how would that work
[16:25:41] <FromDiscord> <dain> why would that be a problem?
[16:25:45] <FromDiscord> <dain> i want a tuple as an output
[16:25:46] <FromDiscord> <dain> not an array
[16:25:52] <FromDiscord> <Rika> i guess there can be a `[]`(tuple, static range): tuple
[16:26:00] <FromDiscord> <Rika> but i dont know if its currently possible
[16:26:08] <FromDiscord> <Rika> i mean without a macro
[16:26:24] <FromDiscord> <Rika> it probably is
[16:26:46] <PMunch> You could easily write a macro that does [..] for tuples
[16:26:57] <PMunch> But nothing like that exists in the standard library afaik
[16:27:37] <kobi> usually when you return a tuple from a function, you do: let (a,b,c) = procThatReturnsATrio
[16:27:46] <kobi> or var (a,b,c)..
[16:28:25] <kobi> the more idiomatic way is to return a sequence or array if it's of the same type, or build a type and return that object
[16:30:18] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[16:30:51] <kobi> u can also access tuples with tupl[idx]
[16:31:19] <FromDiscord> <dain> I'm doing it for AOC, I'm getting tuples from `scan_tuple` where the first element is a bool for whether the parsing succeeded, and the rest of the elements are what I want. I want to be able to just get a tuple with the first element dropped. so ideally I would write:‚Üµ‚Üµ`list_of_strings.map(x => x.scan_tuple(".....")[1..^1])`
[16:31:21] <kobi> like an array, but slice is not implemented for it. so u don't have the .. syntax that you opted to get
[16:31:32] <FromDiscord> <dain> but rn it's kind of awkward because I have to unpack it first into explicit variables
[16:32:25] *** Joins: jjido (~Denis@90.213.58.125)
[16:33:23] <kobi> i don't think it's awkward, just not a one-liner. a foreach loop is nice and readable imo.
[16:33:48] <FromDiscord> <dain> yeah I know, I'll probably do the for loop
[16:34:02] <kobi> can scan_tuple return a seq ?
[16:34:31] <kobi> or if u want, you can augment the stdlib with what u want. impl the slice operation for example
[16:34:50] <kobi> i am not sure it can work, but it's not hidden from your hands
[16:34:57] <FromDiscord> <dain> it has to return a tuple because the first item is always a boolean
[16:35:02] <FromDiscord> <dain> yeah I'll try writing a macro for it
[16:35:29] <FromDiscord> <dain> (edit) "it has to return a tuple because the first item is always a boolean ... " 03added "and the other items are not guaranteed to be of the same type"
[16:35:31] <kobi> you can do proc scan_tuple(x:string):(bool, seq[int])
[16:35:51] <kobi> ah, are they strings which u can parse?
[16:36:03] <FromDiscord> <dain> yeah
[16:36:11] <kobi> Nim is not a dynamic language
[16:36:39] <kobi> u can likely use the json module to represent that
[16:37:02] <kobi> it's an object variant..
[16:38:14] <kobi> but maybe it's an overkill. what happens if u stay with strings, until the moment u need to parse into a result?
[16:41:00] <FromDiscord> <dain> what do you mean>
[16:41:03] <FromDiscord> <dain> (edit) "mean>" => "mean?"
[16:41:39] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[16:44:29] <PMunch> Haven't had a look at todays AoC yet, but if you're not using the tuple unpacking attributes of scanTuple I think there are other tools that are more suited for parsing your input data
[16:53:35] <arkanoid> I'm experimenting nim-python interop with nimpy, but more generally I want to track down where I'm passing by copy or by reference. How can I get a proper view where I'm consuming time/memory?
[16:56:06] <kobi> Isn't it always by ref in python?
[16:57:53] <kobi> I want to run the same proc 4 times in parallel. They should run asyncly, and when they finish, continue execution. if I use waitFor, does it halt execution for all of them until the first one finishes?
[16:58:03] <FromDiscord> <Rika> python calls it "by name" afaik
[16:58:07] <FromDiscord> <Rika> or "by label"
[16:58:21] <kobi> asyncCheck, waitFor, and await.. when to use which?
[16:58:22] <FromDiscord> <Rika> waitFor is running as sync
[16:58:43] <kobi> ok. what is asyncCheck for?
[16:59:01] <FromDiscord> <Rika> await + basic error handling
[16:59:11] <FromDiscord> <Rika> for procs that do not return
[16:59:49] <FromDiscord> <Rika> if you want to do parallel you do `waitFor all([torun(), torun(), torun(), torun()])` afaik
[16:59:51] <kobi> I see. but it seems that if I want to store the future and run it later on, it doesn't work.
[16:59:59] <FromDiscord> <Rika> you can do that
[17:00:19] <FromDiscord> <Rika> `let temp = toRun(); echo waitFor temp`
[17:00:51] <kobi> so in my code it already runs on the assignment.
[17:01:29] <FromDiscord> <Rika> if you do not have any `await` in your async proc then there is nothing async in the proc
[17:01:34] <FromDiscord> <Rika> and it will run like sync
[17:01:43] <FromDiscord> <Rika> and immediately run on `()`
[17:02:05] <kobi> I am just new to this, that's all :-)
[17:02:13] <FromDiscord> <Rika> no thats fine
[17:05:50] <kobi> if I use withTimeout, the first is a future[bool] and to see if it failed, i use the original future ref right?
[17:06:03] <kobi> I mean, if timeout failed, i get the bool
[17:06:19] <kobi> but if the (wrapped?) future failed, just with .failed
[17:06:59] <kobi> maybe I am missing some guide or manual. sorry for the newbie questions
[17:07:12] <PMunch> You might be interested in this: https://peterme.net/asynchronous-programming-in-nim.html
[17:07:30] <kobi> cool, PMunch thanks
[17:07:46] <PMunch> Tries to go into detail about how async programming works, and how to use it in Nim
[17:09:01] <kobi> I am trying to build a general library for making download manager type applications. to have the convenience of queues. I am missing the async crucial mechanism, and when that is solved, the thing will be able to work.
[17:10:25] <kobi> so to do that I want to pass the "user" procs or callbacks actually.
[17:11:11] <kobi> on completion, on success, on failed, on timeout, the main work. all these are combined together to run as an async task. 
[17:11:27] <kobi> maybe I'm starting big again
[17:11:30] <kobi> :/
[17:11:41] <arkanoid> Rika, that was not what I was asking. I'm dealing with nim-python interop with nimpy. On the edge between the two languages you can pass data by marshalling/unmarshalling (so copy) or by raw buffer, but it means that the structure and management of if must be know in advance between the two sides.
[17:12:01] <FromDiscord> <Rika> wait what are you replying to
[17:13:32] <arkanoid> Well, let's reset the question and make it TL;DR; how can I track down where memory is consumed? 
[17:13:54] <FromDiscord> <Rika> i dont remember answering that question
[17:14:04] <FromDiscord> <Rika> was it a few days ago
[17:14:20] <FromDiscord> <Rika> anyway there are memory profilers
[17:17:47] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H5v
[17:18:06] <kobi> Rika, what is wrong here: https://play.nim-lang.org/#ix=3H5u
[17:18:07] <FromDiscord> <Rika> theres also the relatively basic trackers in https://nim-lang.org/docs/gc.html
[17:18:14] <FromDiscord> <Rika> ill look one moment
[17:18:48] <kobi> it gets executed on assignment
[17:18:50] <FromDiscord> <Rika> In reply to @dain "why am I getting": what docs? can you show me so i can see? you're not supposed to call the enum values like that
[17:19:18] <FromDiscord> <Solitude> In reply to @dain "why am I getting": that doesnt look right. where is this in the docs?
[17:19:23] <FromDiscord> <dain> https://nim-lang.org/docs/macros.html#callsslashexpressions-tuple-constructors
[17:19:25] <FromDiscord> <dain> right here
[17:19:32] <FromDiscord> <Rika> kobi: that is correct, when you run an async proc at first it will run everything up to the first await call
[17:20:05] <FromDiscord> <Rika> then `await` will wait, and then run the next part of the code
[17:20:13] <FromDiscord> <Rika> (edit) "then `await` ... will" 03added "on the future"
[17:23:04] <kobi> so this is not what I want.
[17:23:36] <kobi> I just want to store it, not start to run it.
[17:23:38] <FromDiscord> <razzlom> Finally made my first nim program.
[17:23:50] <FromDiscord> <razzlom> –°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ –æ—Ç 2021-12-05 16-53-15.png https://media.discordapp.net/attachments/371759389889003532/917051140116463626/2021-12-05_16-53-15.png
[17:24:12] <FromDiscord> <razzlom> It's just bunch of echoes, but...
[17:24:36] <FromDiscord> <konsumlamm> In reply to @dain "https://nim-lang.org/docs/macros.html#callsslashexp": those are examples of how the ASTs for tuple constructors look like, not code you can put in a macro
[17:25:00] <arkanoid> Rika, thanks
[17:25:39] <FromDiscord> <Rika> kobi: you cant store it without running the first portion of code (before the first await)
[17:26:03] <FromDiscord> <Rika> you can prolly "hack it" by doing `await sleepAsync(0)` at the start
[17:26:44] <FromDiscord> <Rika> i dont know why you want to do that though, doing it would not improve performance or runtime
[17:26:50] <FromDiscord> <Rika> i guess to prevent stale data?
[17:28:04] <kobi> hmm... so my only option is to wrap it all in a proc() = block?
[17:28:28] <kobi> well, I want to store it in a Task type, and later run those tasks.
[17:29:25] <FromDiscord> <dom96> Why don‚Äôt you store metadata about what you want to run instead?
[17:29:26] <kobi> but when I run them, I want it to be done in parallel.
[17:29:36] <kobi> hi dom
[17:29:48] <kobi> what do u mean?
[17:30:36] <FromDiscord> <dom96> I mean store the inputs to your function
[17:30:36] <FromDiscord> <Rika> instead of  storing futures, store the parameters
[17:30:41] <FromDiscord> <Rika> then make the futures when you need them
[17:30:45] <FromDiscord> <dom96> Yeah
[17:31:20] <kobi> that's a very good idea. thank you. 
[17:31:29] <kobi> do u have a suggestion of a general way to do that?
[17:31:45] <kobi> would I need to "pollute" all my code with some T generic?
[17:32:17] <kobi> (pollute because each usage also requires to mark the using proc with T)
[17:32:59] <PMunch> @dain, that part of the documentation is a bit confusing. Essentially those just show the data structure, it's not runnable code. You can do nnkTupleConstr.newTree(args, go, here) in order to generate a nnkTupleConstr for example. Another alternative is to use the `newX` procedures from the macros module to create them. You can use `dumpAstGen` on a block of code to get the code you need to put in a macro to generate that call. Or you can use `quote` from the 
[17:32:59] <PMunch> macros module to generate these trees directly from Nim code. Another option is to use my macroutils module which will give you more or less the syntax you're already trying to use: https://github.com/PMunch/macroutils/
[17:34:26] <FromDiscord> <Rika> you can try to use implicit generics if you do not like using explicit ones
[17:34:42] <FromDiscord> <Rika> or just use a proxy object that holds your parameters
[17:37:18] <kobi> I think I'll use inheritance for the Task type, Task[T], task[T1,T2] etc.
[17:37:50] <kobi> wait, no, i am not sure i am thinking straight.
[17:38:11] <FromDiscord> <tandy> is there a nim code formatter?
[17:38:27] <kobi> i'll need to experiment a little
[17:38:29] <FromDiscord> <dom96> kobi: I think you want to use object variants
[17:39:10] <kobi> dom96, but I can't use the same field names
[17:39:36] <FromDiscord> <Rika> tandy nimpretty
[17:39:37] <PMunch> @tandy, yes nimpretty
[17:40:01] <FromDiscord> <tandy> does vscode use it automatically?
[17:40:01] <PMunch> But depending on who you ask it's not really recommended to use it
[17:40:15] <FromDiscord> <Rika> no it does not
[17:40:29] <FromDiscord> <tandy> hmm
[17:40:40] <FromDiscord> <tandy> why not?
[17:40:49] <PMunch> It has an unfortunate tendency to break code
[17:41:13] <kobi> i think i'll just start with plain objects and casting
[17:41:15] <FromDiscord> <Solitude> In reply to @tandy "why not?": you dont need it, your code is fine
[17:41:48] <kobi> PMunch, it doesn't break code if you define --indent:2
[17:41:53] <FromDiscord> <tandy> i ran it on my test suite and no breaks \:)
[17:42:21] <kobi> but maybe u have more advanced usages with macros and all
[17:42:28] <PMunch> Oh yeah, I didn't say that it always breaks code. But it has been known to sometimes break code, which isn't exactly great
[17:43:19] <kobi> I only found it get confused when the indent was not specified. it would sometimes double the spaces, for no apparent reason
[17:45:21] <Zevv> amazing how much more I enjoy PMunch sessions when his fire is lit
[17:45:46] <PMunch> Haha, guess it's time to throw another log on the fire then
[17:46:07] <PMunch> I'm about to stream day 5, and there's only embers left at the moment
[17:46:20] <Zevv> there you go, light up indeed :)
[17:47:09] <Zevv> I planned not to bother with AOC this year, but still it's fun to do
[17:47:17] <Zevv> I'm not doing nim this year tho, sorry for that :)
[17:47:53] <PMunch> They are quite fun :)
[17:48:05] <PMunch> What language has the pleasure this year?
[17:48:09] <Zevv> elixir
[17:48:33] <FromDiscord> <dain> In reply to @PMunch "<@225449938258100225>, that part of": ah thank you
[17:48:39] <PMunch> Hmm, maybe I should record my fireplace to use as the "Stream is starting soon" screen instead of the test image
[17:48:53] <FromDiscord> <dain> btw what is the type for expressions like `1..10`
[17:48:55] <PMunch> Aha, elixir, I've been meaning to look into that a bit more
[17:49:07] <FromDiscord> <tandy> hmm i used nimprety but it didnt realy help my long line problem haha
[17:49:11] <FromDiscord> <Rika> slice
[17:49:13] <FromDiscord> <dain> i did `echo typeof(1..10` and it just gave `int` which doesn't seem right
[17:49:13] <FromDiscord> <Rika> or hslice
[17:49:16] <PMunch> !eval echo typeof(1..10)
[17:49:20] <NimBot> int
[17:49:25] <PMunch> Huh, that is strange indeed
[17:49:30] <FromDiscord> <dain> (edit) "typeof(1..10`" => "typeof(1..10)`"
[17:49:36] <PMunch> It should be a HSlice I believe
[17:49:57] <Zevv> PMunch: I love it big time. there's smelly nooks and crannies of course, but the sheer solidity of the OTP and utter ease of multithreading and clustering is amazing.
[17:49:57] <FromDiscord> <tandy> oh wait it did, nvm
[17:50:45] <Zevv> and it can be pretty consise. https://raw.githubusercontent.com/zevv/aoc2021/master/lib/day05.ex
[17:50:54] *** Joins: arkurious (~arkurious@user/arkurious)
[17:52:47] <FromDiscord> <Solitude> !eval echo typeof(1..10, typeOfProc)
[17:52:51] <NimBot> HSlice[system.int, system.int]
[17:53:03] <FromDiscord> <Solitude> typeof defaults to iterators
[17:53:11] <PMunch> @Zevv, I can't be looking at day 5 before I've solved it :P
[17:53:30] <Zevv> fair enough. you can squint to just see the shape of it then :)
[17:53:32] <Zevv> i'll allow it
[17:53:47] <PMunch> I do wish Nim had a more solid multithreading story. Hopefully one day
[17:54:27] <Zevv> one day
[17:55:06] <PMunch> Stream is live! https://www.twitch.tv/pmunche
[17:55:20] <qwr> currently its still a bit ahead of ocaml in threading ;)
[17:55:32] <FromDiscord> <tandy> nvm, it broke my code lmao
[18:10:24] <kobi> dom96, what do u think: https://play.nim-lang.org/#ix=3H5J
[18:10:48] <kobi> "waitFor all" does very similar to what I want, 
[18:12:13] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H5K
[18:13:11] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H5L
[18:15:28] <FromDiscord> <Yardanico> Because i is outside the quote do
[18:15:39] <FromDiscord> <Yardanico> you need to enclose it in backticks as well
[18:15:59] <FromDiscord> <dain> oooh
[18:16:10] <FromDiscord> <dain> i tried that way back and it didnt work either
[18:16:22] <FromDiscord> <dain> must have had another mistake that got fixed in the meantime and i didnt realise
[18:16:41] <FromDiscord> <dain> okei it works now thank you
[18:30:59] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[18:31:57] *** Joins: xet7 (~xet7@user/xet7)
[18:32:41] *** Quits: kobi (~kobi@82.166.168.241.fix.netvision.net.il) (Quit: Leaving)
[18:58:32] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[18:59:49] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[19:00:37] *** Joins: src (~src@user/src)
[19:02:27] <Zevv> PMunch: "sparse map" is the word
[19:36:30] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H6r
[19:38:29] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[19:42:48] <FromDiscord> <claude> that is probably a bug, if you are trying to index tuples with a slice i found this code which is one implementation https://play.nim-lang.org/#ix=3H6t
[19:44:26] <FromDiscord> <claude> it seems to be because of the `when i is BackwardsIndex`
[19:46:10] <FromDiscord> <claude> changing it to `typeof(i) is BackwardsIndex` works
[19:47:06] <FromDiscord> <Solitude> or making foo a proc works too
[19:48:58] <FromDiscord> <dain> In reply to @claude "changing it to `typeof(i)": thank you
[19:59:13] <FromDiscord> <dain> In reply to @claude "that is probably a": what does the `{.inline.}` pragma do
[19:59:41] <FromDiscord> <claude> its just an optimization passed to the C compiler
[20:01:07] <FromDiscord> <claude> if you set small enough procs to be inline the C compiler can directly embed them into the code where they're called
[20:04:10] <FromDiscord> <dain> ah
[20:04:27] <FromDiscord> <dain> so what's the reason for defining a macro inside a `func` and then immediately invoking the macro
[20:05:46] <FromDiscord> <dain> i dont really get what's happening there
[20:06:41] <FromDiscord> <dain> how does the compiler figure out the return type of the `[]` defined on e.g. line 8
[20:07:03] <FromDiscord> <dain> or does it not have to because it's inlined?
[20:12:57] <FromDiscord> <Solitude> In reply to @dain "how does the compiler": it just looks at the type of returned value, if its the same type in all branches
[20:14:08] <FromDiscord> <Solitude> In reply to @dain "so what's the reason": because the macro is only relevant to this function, so it doesnt pollute outer namespace
[20:15:06] <FromDiscord> <dain> does that have any runtime overhead
[20:15:13] <FromDiscord> <Solitude> no
[20:16:39] *** Joins: neurocyte0132889 (~neurocyte@94.46.79.27)
[20:16:39] *** Quits: neurocyte0132889 (~neurocyte@94.46.79.27) (Changing host)
[20:16:39] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:17:00] <FromDiscord> <dain> In reply to @claude "that is probably a": btw where did you find this, is there a discussion thread I can read?
[20:35:48] *** Joins: smvg (~smvg@5634797d.rev.stofanet.dk)
[20:37:28] <smvg> is there a way of including #defines from a C header into Nim when interfacing with the language ? or do I need to add them manually in Nim ?
[20:50:11] <FromDiscord> <Schelz> Is there anyway that i can use nim with php ?
[20:50:26] <FromDiscord> <Schelz> (edit) "anyway" => "any way"
[21:07:27] <FromDiscord> <geekrelief> In reply to @smvg "is there a way": For the most part it's manual. I can't speak for other tooling, but I use nimterop and depending on the nature of the `#define` if it's a simple constant or can map to a call like expression then those can be handle kind of automatically with a little setup.  But if the `#define` is like an inline function definition you have to manually convert it.
[21:08:52] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H6U
[21:10:21] <smvg> ok thanks for the info @geekrelief
[21:15:23] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3H6Y
[21:15:44] <FromDiscord> <geekrelief> maybe cause `len` is a magic?
[21:16:41] *** Joins: jjido (~Denis@90.213.58.125)
[21:18:28] <FromDiscord> <geekrelief> that works too
[21:18:30] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3H71
[21:19:29] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3H72
[21:20:20] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H73
[21:27:01] <FromDiscord> <geekrelief> https://play.nim-lang.org/#ix=3H74
[21:27:50] <FromDiscord> <geekrelief> If you were to implement this without sugar, I'm not sure you could do it without macros.
[21:28:32] <FromDiscord> <dain> thanks
[21:28:59] <FromDiscord> <dain> why doesnt my way work though? can you not have anonymous generic procs?
[21:29:55] <FromDiscord> <geekrelief> good question, I don't know off hand. Not something I ever experimented with but I'm curious now.
[21:32:59] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3H77
[21:34:39] <FromDiscord> <geekrelief> Weird it works on playground
[21:35:47] <FromDiscord> <geekrelief> the above link has the wrong code use this: https://play.nim-lang.org/#ix=3H78
[21:35:53] *** Joins: xet7 (~xet7@user/xet7)
[21:35:54] <FromDiscord> <dain> okay it works when I do `as_func(len)` but breaks when I do `len.as_func`
[21:36:12] <FromDiscord> <dain> does UFCS not work on templates?
[21:36:14] <FromDiscord> <geekrelief> hmm how do you strikethrough on discord
[21:37:14] <FromDiscord> <the cws came hme> \~~like this~~
[21:38:38] <FromDiscord> <geekrelief> thx
[21:38:42] <FromDiscord> <geekrelief> In reply to @dain "does UFCS not work": https://nim-lang.github.io/Nim/manual.html#templates-limitations-of-the-method-call-syntax
[21:38:52] <FromDiscord> <geekrelief> it does not work on templates
[21:39:06] <FromDiscord> <dain> aww that sucks
[21:44:00] <FromDiscord> <geekrelief> In reply to @dain "hmm .. I can": I don't think this version of `as_func` makes any sense.
[21:44:03] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[21:44:49] <FromDiscord> <dain> how comes
[21:47:25] <FromDiscord> <Solitude> In reply to @dain "aww that sucks": it doesnt work in some edge cases, usually it works
[21:48:12] <FromDiscord> <dain> ya
[21:48:17] <FromDiscord> <dain> anyway thank you all for the help :)
[21:52:59] <FromDiscord> <geekrelief> In reply to @dain "how comes": Hmm maybe it's a compiler bug?
[21:53:48] <FromDiscord> <Fish-Face> sent a code paste, see https://play.nim-lang.org/#ix=3H7f
[21:54:02] <FromDiscord> <Fish-Face> (edit) 
[21:56:07] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[22:00:14] *** Joins: src (~src@user/src)
[22:01:07] <FromDiscord> <geekrelief> In reply to @dain "how comes": I got this to work using `auto` which should be the same as a generic parameter type, but it doesn't work when I swap in `[T]` like `proc[T](y:T): auto = x(y)` https://play.nim-lang.org/#ix=3H7g
[22:01:38] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 252 seconds)
[22:04:11] <FromDiscord> <geekrelief> In reply to @Fish-Face "Can anyone spot why": code?
[22:04:22] <FromDiscord> <Zoom> It means that you're trying to pass a built in to procedure variable  It's the same error you got earlier‚Üµ(@dain)
[22:04:51] <FromDiscord> <Zoom> I've asked in #internals about fixing the error msg but received no reply yet
[22:05:33] <arkanoid> damn, the more I bench python vs nim, the more I fear python is faster
[22:05:55] <FromDiscord> <Fish-Face> sent a code paste, see https://play.nim-lang.org/#ix=3H7k
[22:06:22] <FromDiscord> <Zoom> @dain\: the recommended workaround is either an alias for a builtin or an anonymous function
[22:07:07] <FromDiscord> <Zoom> See\: https://github.com/nim-lang/Nim/issues/2172#issuecomment-304609785
[22:09:19] <FromDiscord> <Solitude> In reply to @Fish-Face "Can anyone spot why": https://nim-lang.org/docs/manual.html#types-open-arrays
[22:09:23] <FromDiscord> <Solitude> you cant nest openarrays
[22:10:14] <FromDiscord> <Fish-Face> oh rihgt
[22:10:16] <FromDiscord> <Fish-Face> right
[22:10:26] <FromDiscord> <Fish-Face> sounds like an opportunity at least for a better compile error
[22:15:42] *** Joins: xet7 (~xet7@user/xet7)
[22:18:01] <FromDiscord> <geekrelief> In reply to @arkanoid "damn, the more I": What's the benchmark doing?
[22:20:46] *** Quits: smvg (~smvg@5634797d.rev.stofanet.dk) (Remote host closed the connection)
[22:29:39] <arkanoid> geekrelief: reverse a string. pystr[::-1] seems way faster than unicode.reversed
[22:30:08] <arkanoid> what's the fastest way to reverse a string in nim?
[22:30:30] <FromDiscord> <Fish-Face> a C string or a unicode string...
[22:30:38] <arkanoid> I know that python str are unicode so nim's unicode.reversed should be appropriate
[22:31:44] <FromDiscord> <Fish-Face> how do you filter an iterator? e.g. I want to do `table.values.filterIt(...)`
[22:32:38] <arkanoid> Fish-Face, you can use sequtils but if you have to chain more than one transformation is faster if you use zero-functional
[22:32:38] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[22:33:07] <FromDiscord> <Fish-Face> I want to chain a `foldl` but I don't care too much about speed
[22:33:27] <FromDiscord> <Fish-Face> I care more about the syntax not being ugly
[22:35:11] <FromDiscord> <Fish-Face> arkanoid, can you expand on "use sequtils"? `filterIt` is in that module
[22:35:55] <FromDiscord> <Fish-Face> (the above expression does not compile, because; it fails with `undeclared field: 'values'` because values is an iterator
[22:35:58] <FromDiscord> <Fish-Face> (edit) "iterator" => "iterator)"
[22:37:33] <FromDiscord> <Zoom> You don't chain iterators in Nim, unfortunately. I use zero\_functional for this‚Üµ(@Fish-Face)
[22:42:29] *** Joins: jjido (~Denis@90.213.58.125)
[22:42:57] <FromDiscord> <Fish-Face> bleh üò¶
[22:43:05] <FromDiscord> <Fish-Face> maybe I will check it out
[22:43:24] <FromDiscord> <Zoom> From what I'm seeing ZF is a bit fragile, especially if you start using openArrays. But it gets me 80% of the way
[22:46:16] <arkanoid> Zoom are you sure you can't chain iterator in latest nim?
[22:46:26] <arkanoid> Zoom I'm quite sure you can, let me try
[22:47:19] <NimEventer> New thread by Geekrelief: Understanding error with generic anonymous vs auto, see https://forum.nim-lang.org/t/8680
[22:47:24] <FromDiscord> <Zoom> If I remember correctly, the only thing which take iterable for now is `toSeq`.
[22:48:57] <FromDiscord> <Zoom> Or wait, it works
[22:51:16] <FromDiscord> <Zoom> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/917130090125623337): You ~~don't~~ can chain iterators in Nim, but it's very limited, unfortunately. I use zero\_functional for this
[22:51:51] <arkanoid> actually I'm failing with the most trivial example
[22:52:08] <arkanoid> I step on this quite frequently. Sometimes I feel it's working, sometimes is not
[22:54:11] <FromDiscord> <Zoom> This is exactly my experience
[22:55:36] <arkanoid> for example "let myList = countup(0, 1000).filterIt(it mod 2 == 0)" doesn't compile
[22:58:00] <PMunch> Might be a iterator vs. closure iterator thing
[22:58:54] <FromDiscord> <Solitude> In reply to @arkanoid "for example "let myList": because filterIt works on an openArray, not iterator
[23:01:20] <arkanoid> now I am even more confused. I'm quite sure I've been using filterIt with my surprise on an interator somewhere, let me ripgrep my nim playground
[23:01:26] <FromDiscord> <Zoom> This is the main issue. Everything worked on sequences (now at least some openArrays are used) and produced a ton of intermediate collections.
[23:03:21] <arkanoid> well, openArrays are still non-lazy things
[23:03:40] <arkanoid> so to unleash the iterator power you need zero functional anyway
[23:04:39] <FromDiscord> <dain> In reply to @geekrelief "I got this to": huh I didn't even know you could use `auto` as an argument parameter, i thought it was only for return types
[23:05:50] <FromDiscord> <geekrelief> me neither. üôÇ I just read the docs and experimented
[23:07:56] <FromDiscord> <geekrelief> In my current work I don't deal with generics or auto at all, and I wonder if that's to my detriment because I rely on templates and macros a lot.
[23:09:08] <arkanoid> according to my benchmarks nim unicode.reversed in 10x slower than python
[23:09:44] <FromDiscord> <ynfle (ynfle)> @arkanoid are you using `-d:release`?
[23:12:07] <arkanoid> ynfle: have a look at the last comment in https://github.com/yglukhov/nimpy/issues/243 (just posted)
[23:34:58] <arkanoid> I'm quite surprised that there's not a string reverse function in stdlib, is there a reason for this?
[23:35:46] <FromDiscord> <Solitude> In reply to @arkanoid "I'm quite surprised that": https://nim-lang.org/docs/algorithm.html#reverse%2CopenArray%5BT%5D
[23:36:56] <arkanoid> Solitude, the inplace one might do it, but `reversed` returns a seq[char] instead of a string
[23:38:47] <FromDiscord> <Solitude> ye, probably someone faced a dilemma is it should go into strutils or in algorithm
[23:41:11] <FromDiscord> <dain> In reply to @arkanoid "I'm quite surprised that": https://qntm.org/trick
[23:42:31] <FromDiscord> <ynfle (ynfle)> @arkanoid have you test on the same string directly in nim itself without out nimpy? for `-d:danger` I got 0.042 ms
[23:42:39] <arkanoid> dain: https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/unicode.nim#L843
[23:45:17] <FromDiscord> <dain> omg
[23:47:20] <arkanoid> dain, the nim algorith might not be exact, but here what I'm benchmarking is pythons [::-1] vs nim unicode.reversed
[23:47:50] <FromDiscord> <ynfle (ynfle)> @arkanoid did you try in nim directly?
[23:49:21] <arkanoid> ynfle writing the benchmark in such a way it reads a unicode text file instead, so that I can use it independently
[23:49:39] <FromDiscord> <ynfle (ynfle)> Ya
[23:49:53] <FromDiscord> <ynfle (ynfle)> Maybe converting to nim stuff is taking the time
[23:49:57] <FromDiscord> <ynfle (ynfle)> I don't know
[23:50:31] <FromDiscord> <ynfle (ynfle)> I just got much better results when doing it in nim natively (ie. reading in a file from the creation method that you had in that github issue comment)
[23:51:48] <arkanoid> sure but the problem I'm trying to solve is if it's worth or not switch my project from python to nim, but afaik interop is slow, so it depends on the frequency of calls
[23:52:09] <arkanoid> basically I'm trying to understand if zero-copy interop is possible or not and on which types
[23:53:04] <arkanoid> sadly scientific tools on python are strong, and I can't just dump them and rewrite in nim. Fast interop is the only way
[23:53:44] <FromDiscord> <ynfle (ynfle)> Just curious, which tools
[23:54:21] <arkanoid> scipy stack in general, and also scikit
[23:54:51] <FromDiscord> <ynfle (ynfle)> But I think your claim that unicode reversal in nim is 10x slower than python is wrong. And if it's true, it's not evident from the code in the issue
[23:54:57] <FromDiscord> <ynfle (ynfle)> Not machine learning stuff
[23:55:10] <FromDiscord> <ynfle (ynfle)> Which stuff in scipy?
[23:55:15] <FromDiscord> <ynfle (ynfle)> For your project
[23:55:49] <arkanoid> sure, but what I'm trying to get is low cost interop. What I expose in that issue is that there's no zero-copy option
[23:56:30] <arkanoid> ynfle, just thinkg about pandas manipulation, or xarray ones
