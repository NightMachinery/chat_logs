[00:01:48] <FromDiscord> <Casey.McMahon> sent a code paste, see https://paste.rs/Coe
[00:02:39] <FromDiscord> <geekrelief> In reply to @Casey.McMahon "hello, I would like": use `ptr PwmConfig` as the type for the argument
[00:04:37] <FromDiscord> <Casey.McMahon> In reply to @geekrelief "use `ptr PwmConfig` as": thanks! I'll give that a go.
[00:05:37] <FromDiscord> <geekrelief> This is so weird.  I don't understand why I need to call `getTypeImpl` twice here: https://play.nim-lang.org/#ix=3KTU
[00:07:48] *** Parts: Guest8731 (~Guest87@c-73-212-207-38.hsd1.md.comcast.net) ()
[00:10:32] <FromDiscord> <Casey.McMahon> sent a code paste, see https://play.nim-lang.org/#ix=3KTY
[00:10:52] <FromDiscord> <geekrelief> `config.addr`
[00:11:13] <FromDiscord> <geekrelief> https://nim-lang.github.io/Nim/system.html#addr%2CT
[00:11:47] <FromDiscord> <geekrelief> There's also `unsafeAddr` which you may need to use depending on how config is defined.
[00:13:00] <FromDiscord> <Casey.McMahon> In reply to @geekrelief "There's also `unsafeAddr` which": you had to use `unsafeAddr`.
[00:13:06] <FromDiscord> <Casey.McMahon> (edit) "you" => "yeah,"
[00:20:24] <NimEventer> New thread by Geekrelief: `getTypeImpl` bug?, see https://forum.nim-lang.org/t/8767
[00:35:21] <FromDiscord> <yallxe> how do I write `byte` to string buffer (from `std/streams`)? so the string will be like `"\x00"` if byte is 0
[00:48:45] <FromDiscord> <geekrelief> In reply to @yallxe "how do I write": not sure what you're asking for.
[00:49:49] <FromDiscord> <Elegantbeef> They want to escape non printable charas
[00:49:52] <FromDiscord> <geekrelief> you want to `strm.write('\x00')` and have it return what?
[00:51:33] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KU6
[00:51:58] <FromDiscord> <treeform> In reply to @yallxe "how do I write": You can see how I do that in my print library: https://github.com/treeform/print/blob/master/src/print.nim#L70-L85
[00:52:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[01:08:26] <FromDiscord> <Hamid_Bluri> Hey treeform
[01:08:43] <FromDiscord> <Hamid_Bluri> any news about fidget?
[01:11:44] <FromDiscord> <yallxe> In reply to @geekrelief "you want to `strm.write('\x00')`": yes but i have a byte type
[01:12:17] <FromDiscord> <yallxe> i converted byte to int and made stream.write($chr(n))
[01:12:27] <FromDiscord> <yallxe> seems to work pretty good
[01:13:00] *** Joins: drewr (~drew@user/drewr)
[01:13:17] <FromDiscord> <hmmm> also will fidget2 follow the venerable pokemon naming standards and be called fidgeotto?
[01:13:28] <FromDiscord> <hmmm> naming matters in nim-land üßê
[01:13:33] <FromDiscord> <yallxe> In reply to @yallxe "i converted byte to":  https://media.discordapp.net/attachments/371759389889003532/927678596632444958/IMG_20220103_224258_395.jpg
[01:13:37] <FromDiscord> <yallxe> like this
[01:13:59] <FromDiscord> <yallxe> and no stream actually
[01:15:12] <FromDiscord> <Solitude> you dont need to `$` chars to add them to string
[01:21:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:22:13] <FromDiscord> <yallxe> In reply to @Solitude "you dont need to": strange cuz my vscode plugin was telling me that this is incorrect
[01:22:36] <FromDiscord> <Solitude> never trust  vscode plugin
[01:31:02] <FromDiscord> <krisppurg> @treeform thought id ping you this because this is a bit more important‚Üµhttps://discord.com/channels/371759389889003530/371759389889003532/927495259062140928
[01:31:45] <FromDiscord> <evoalg> In reply to @kevin "Is there a recommended": Does https://github.com/juancarlospaco/psutil-nim help?
[01:36:34] <FromDiscord> <yallxe> In reply to @kevin "Is there a recommended": you may use EnumProcesses from c++
[01:36:39] <FromDiscord> <yallxe> import it or use winim
[01:37:03] <FromDiscord> <yallxe> or use the easier option if you do not care about dependencies
[01:37:07] <FromDiscord> <yallxe> above one
[01:37:39] <FromDiscord> <treeform> In reply to @krisppurg "<@!107140179025735680> thought id ping": It's strange my tests did not catch that.
[01:42:32] <FromDiscord> <krisppurg> jsony to me is acting weird sometimes for me
[01:43:41] <FromDiscord> <kevin> In reply to @evoalg "Does https://github.com/juancarlospaco/psutil-nim h": Yeah, this looks promising. I will try to make this work. Thank you for the suggestion! üòÑ
[01:57:32] <FromDiscord> <hmmm> [Finished in 425.5s] ü§î
[02:11:37] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[02:11:50] <FromDiscord> <treeform> In reply to @krisppurg "jsony to me is": I pushes some bug fixes
[02:12:14] <FromDiscord> <Smarc> If anyone has some spare time and is willing to help an amateur, I would really appreciate someone reviewing my code and give me some advice on how to optimize it :)‚Üµhttps://github.com/Smarcy/connect_the_dotfiles
[02:30:37] <FromDiscord> <Solitude> Please, for the love of god, dont commit binaries to git...
[02:36:51] <nrds> <06Prestige99> Why not
[02:40:02] <FromDiscord> <hmmm> u r not my supevisor
[02:40:04] <FromDiscord> <hmmm> I have the photo of my lover on git
[02:44:14] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3KUL
[02:45:46] <FromDiscord> <IsaacPaul> If this was production code. I'd say it needs more error handling.  `open` and `readFile` probably can crash...
[02:48:12] <FromDiscord> <IsaacPaul> Also don't have sections of commented code if they're already in your git history
[02:50:31] <FromDiscord> <congusbongus> binary dependencies are ok if the language doesn't have a good package manager‚Üµotherwise use the build system for distributing binaries, they don't belong in source control
[03:13:32] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[03:21:49] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[03:42:21] <FromDiscord> <evoalg> In reply to @hmmm "I have the photo": Does your lover know about this?
[03:45:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[03:47:00] <FromDiscord> <hmmm> In reply to @evoalg "Does your lover know": of course! I'll show you her in #offtopic
[03:51:32] <FromDiscord> <evoalg> In reply to @IsaacPaul "use a consistent naming": I use that `return` for early exit in proc's all the time (if I'm understanding what you're saying correctly) as I don't like lots of nesting, but I've been told by some of the guru's that it's not recommended, and that I should use the built in result, and also only have one exit point so that the compiler can optimize it more easily ... or something like that ... but I still like to be 
[03:53:51] <FromDiscord> <IsaacPaul> I always prioritize readability over optimization
[03:54:40] <FromDiscord> <IsaacPaul> Also that information could easily be outdated or become outdated
[03:55:21] <FromDiscord> <congusbongus> I have not heard of single exit point being more optimal before; sounds like out-of-date info from when compilers/processors were much less smart
[03:56:30] <FromDiscord> <congusbongus> it is less readable however if you have random exits scattered throughout the function, but you can avoid that by placing early exits at the start, or having sensible helper functions
[03:59:16] <FromDiscord> <Elegantbeef> Shun evo shun evo!‚Üµ(@evoalg)
[04:00:10] <FromDiscord> <evoalg> I know, I'm naughty and I have no guilt üòâ
[04:01:59] <FromDiscord> <Elegantbeef> Uhhh do i start calling you an aussie until you change your ways?
[04:02:22] <FromDiscord> <evoalg> I repent, I repent
[04:03:33] <FromDiscord> <hmmm> Beefy~sama, I found one of your creations in the forum with a handy arrow to expand a seq in a proc call
[04:04:14] <FromDiscord> <evoalg> it's as bad as me asking you where abouts in the US you are, as you all sound the same to me üòâ ... except when you say "out"
[04:04:28] <FromDiscord> <Elegantbeef> Or when i say sorry
[04:04:33] <FromDiscord> <evoalg> LOL
[04:04:44] <FromDiscord> <hmmm> it worked in a test example but it died in the place where I wanted to use it üò¶
[04:04:49] <FromDiscord> <Elegantbeef> Those dumb yanks tend to say sau-ri instead of sore-y
[04:04:57] <FromDiscord> <hmmm> such is life ü§î
[04:05:17] <FromDiscord> <Elegantbeef> Eh it was probably an example not a proper use case
[04:05:41] <FromDiscord> <hmmm> yea it I used like a blackbox, no idea on how it worked
[04:09:10] <FromDiscord> <Elegantbeef> Macros arent overly complicated so i beliieve in you
[04:09:14] <FromDiscord> <Elegantbeef> What're you trying to do anyway?
[04:11:01] *** Quits: lumo_e (~enrico@151.29.77.175) (Read error: Connection reset by peer)
[04:11:11] *** Joins: lumo_e (~enrico@151.29.77.175)
[04:15:25] <FromDiscord> <hmmm> hmmm feeding a variable number of question marks to a prepared sql statement proc was my latest understanding of what I was doing lol
[04:16:25] <FromDiscord> <hmmm> I think I was doing it because normal exec inserts were too slow but I'm now not so sure
[04:17:19] <FromDiscord> <Elegantbeef> If only one could profile code!
[04:17:34] <FromDiscord> <hmmm> haha but that would be cheating üòÉ
[04:18:03] <FromDiscord> <Elegantbeef> Yea it'd show you where the slowdown was
[04:18:42] <FromDiscord> <hmmm> ok next time 4 sure, I'm going to sleep now, happy coding beefy
[04:24:03] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Ping timeout: 256 seconds)
[04:25:07] <FromDiscord> <evoalg> I want to know how much mem some vars are taking, but when I do, eg, `sizeof("f")` it saying it's 16, and when I do `sizeof("foo")` it still says 16, so I guess sizeof isn't what I'm after?
[04:27:42] <FromDiscord> <Elegantbeef> I mean it is it's telling you the `sizeof(string)` which is `16`
[04:28:06] <FromDiscord> <evoalg> but wouldn't longer strings take more?
[04:28:34] <FromDiscord> <evoalg> oh I think I see what you mean
[04:28:47] <FromDiscord> <Elegantbeef> The type `string` is 16 bytes large
[04:29:02] <FromDiscord> <evoalg> then for "foo" do I times by 3?
[04:29:03] <FromDiscord> <Elegantbeef> If you want to see the size the string takes overall you use \`len
[04:30:07] <FromDiscord> <evoalg> `sizeof(string)  "foo".len` ?
[04:30:30] <FromDiscord> <Elegantbeef> No
[04:30:53] <FromDiscord> <Elegantbeef> `"foo".len` tells you the amount of data, so it'd be `"foo".len + sizeof(string)` for the total memory usage
[04:31:07] <FromDiscord> <Elegantbeef> and it'd actually be different since `len` isnt the capacity
[04:31:08] <FromDiscord> <evoalg> ohhhhhh!
[04:32:07] <FromDiscord> <Elegantbeef> You cannot get how much a variable occupies unless the type exposes it/you know how it works
[04:34:19] <FromDiscord> <evoalg> ok ... so if I write a small program using bitty and another one that uses bool's, I could do some calculations to see how much I'm saving ... but how would I see how much mem each executable is using? Is it easy?
[04:34:45] <FromDiscord> <evoalg> I don't need this, just being curious
[04:35:14] <FromDiscord> <Elegantbeef> `/usr/bin/time -v youProgram` iirc does show memory usage
[04:45:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[04:48:11] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3KVf
[04:48:16] <FromDiscord> <creikey> (edit) "https://play.nim-lang.org/#ix=3KVf" => "https://paste.rs/Dy7"
[04:49:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:49:55] <FromDiscord> <exelotl> It should be allowed
[04:50:35] <FromDiscord> <exelotl> Oh, maybe because staticRead has to occur in a static context?
[04:51:16] <FromDiscord> <creikey> In reply to @exelotl "Oh, maybe because staticRead": this is the error yeah
[04:52:30] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3KVh
[04:53:27] <FromDiscord> <Elegantbeef> Does `echotest( (const s = staticRead(); s))` work?
[04:53:49] <FromDiscord> <exelotl> It should do
[04:53:53] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:53:53] <FromDiscord> <creikey> In reply to @exelotl "So you'd have to": is there like a static string I can specify as the parameter for overloading
[04:53:57] *** Quits: lumo_e (~enrico@151.29.77.175) (Quit: Quit)
[04:54:13] <FromDiscord> <Elegantbeef> yes
[04:54:15] <FromDiscord> <creikey> lol yeah what
[04:54:19] <FromDiscord> <Elegantbeef> `text: static string`
[04:54:25] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3KVi
[04:54:25] <FromDiscord> <Elegantbeef> It's legitmately what you asked üòÄ
[04:54:49] <FromDiscord> <Elegantbeef> no real point making a template imo, but you do you
[04:55:24] <FromDiscord> <exelotl> If you wanted to allow both static and non-static, maybe `proc echoText(text: string|static[string])` would work?
[04:55:38] <FromDiscord> <Elegantbeef> It would
[04:56:10] <FromDiscord> <creikey> In reply to @Elegantbeef "no real point making": I have no idea what's going on here
[04:56:12] <FromDiscord> <Elegantbeef> Worth noting that `static T` turns it into a generic procedure
[04:56:23] <FromDiscord> <creikey> In reply to @exelotl "If you wanted to": you can or types like that?? so cool
[04:56:40] <FromDiscord> <Elegantbeef> Dont join the `|` club
[04:56:44] <FromDiscord> <Elegantbeef> üòõ
[04:56:51] <FromDiscord> <creikey> does static[string] like upgrade to string
[04:57:21] <FromDiscord> <Elegantbeef> `static T` is an implicit generic and all uses of that parameter are replaced with the constant
[04:57:24] <FromDiscord> <creikey> so like if just static[string] is taken as a parameter can it also take string
[04:57:50] <FromDiscord> <Elegantbeef> No `static string` is forced at compile time to be from static
[04:57:59] <FromDiscord> <exelotl> Static means the value is known at compile time
[04:58:16] <FromDiscord> <creikey> I see
[04:58:26] <FromDiscord> <creikey> and strings are like dynamically resizable and mutable in nim right
[04:58:38] <FromDiscord> <Elegantbeef> Yes
[04:58:43] <FromDiscord> <creikey> so that's why
[04:59:02] <FromDiscord> <Elegantbeef> `static string` are constants at runtime
[05:00:26] <FromDiscord> <exelotl> In reply to @creikey "and strings are like": Yes but only if its a `var` variable or `var` parameter
[05:05:28] <FromDiscord> <creikey> In reply to @exelotl "Yes but only if": so if it's not a var string parameter can't it be assumed that static strings be safely passed to a function?
[05:05:37] <FromDiscord> <creikey> what can a `string` parameter do that a `static[string]` parameter can't
[05:06:18] <FromDiscord> <Elegantbeef> I mean static string can be passed to string
[05:06:20] <FromDiscord> <Elegantbeef> That's not the issue
[05:07:28] <FromDiscord> <Elegantbeef> The issue  is that `staticRead` needs  a compile time environment to run and it doesnt have that when you call it inside a call
[05:08:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KVn
[05:10:02] <FromDiscord> <exelotl> I find the error surprising tbh. Like why can't it just be equivalent to your `(const c = staticRead(...); c)`
[05:11:21] <FromDiscord> <evoalg> don't confuse me ... yesterday I was told that `let` is evaluated at runtime not compiletime
[05:11:33] <FromDiscord> <Elegantbeef> It is
[05:11:59] <FromDiscord> <Elegantbeef> Well i mean exelotl the proc is annotated `{.compiletime.}` so implicit usage of it is bad im
[05:12:35] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KVo
[05:12:39] <FromDiscord> <Elegantbeef> Since it's not forced to run at CT
[05:14:17] <FromDiscord> <Elegantbeef> The benefit of using a proc over a template here is if you read the file multiple times only a single constant is in the program
[05:16:29] <FromDiscord> <creikey> Is there a way to construct explicitly typed array literals, like `array[int64]([1, 2, 3, 4])` or something
[05:17:06] <FromDiscord> <Elegantbeef> `[1i64, 2, 3, 4]`
[05:19:39] <FromDiscord> <creikey> In reply to @Elegantbeef "`[1i64, 2, 3, 4]`": thanks that's cool that that works
[05:26:07] <FromDiscord> <evoalg> In reply to @Elegantbeef "Dont join the `|`": why isn't this such a good idea?
[05:26:22] <FromDiscord> <Elegantbeef> It's fine it's up to what you prefer
[05:26:24] <FromDiscord> <Elegantbeef> I prefer `x or y`
[05:26:48] <FromDiscord> <evoalg> oh  yea ... that's nicer imo
[05:33:41] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Ping timeout: 245 seconds)
[05:54:25] <FromDiscord> <Goryleküòö> Hello
[05:54:28] <FromDiscord> <Goryleküòö> Im new
[05:56:57] <FromDiscord> <Elegantbeef> Hello
[06:03:58] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[06:05:57] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:05:57] *** neurocyte0 is now known as neurocyte
[06:07:24] <FromDiscord> <huantian> hello o/
[06:17:44] <FromDiscord> <Rika> hello new
[06:43:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:51:42] <FromDiscord> <sOkam!> In reply to @Elegantbeef "I prefer `x or": or prefer `x | y`
[06:52:04] <FromDiscord> <sOkam!> hope you get the silly joke, otherwise its gonna look confusing üôà
[07:11:31] <FromDiscord> <huantian> is there something similar to python's asyncio gather for running a bunch of async functions concurrently?‚ÜµIdeally with a max currenency
[07:15:40] <FromDiscord> <Rika> In reply to @huantian "is there something similar": ‚Äúall‚Äù? In asyncdispatch I think
[07:17:17] <FromDiscord> <huantian> I see all in asyncfutures
[07:17:31] <FromDiscord> <huantian> but not sure if that's concurrent?
[07:18:32] <FromDiscord> <huantian> I think it is?
[07:19:04] <FromDiscord> <huantian> wait futures "start" happening as soon as they're made not when they're awaited so ig it is
[07:23:00] <FromDiscord> <Rika> as soon as theyre made until the first yield
[07:40:25] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:59:59] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:17:40] <FromDiscord> <creikey> is nim js gonna be abandoned for its C backend -> webassembly?
[08:29:51] <FromDiscord> <Rika> Probably not?
[09:15:12] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3KWp
[09:15:29] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=
[09:17:08] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KWr
[09:17:47] <FromDiscord> <Hamid_Bluri> thanks beef
[09:17:54] <FromDiscord> <Hamid_Bluri> you're my hero : D
[09:18:05] <FromDiscord> <Elegantbeef> Worth noting though that'll work on all arrays üòÄ
[09:18:14] <FromDiscord> <Elegantbeef> since arrays implicitly get a range as their first generic parameter
[09:18:17] <FromDiscord> <Hamid_Bluri> good
[09:18:35] <FromDiscord> <Elegantbeef> You dont really need a constraint
[09:18:40] <FromDiscord> <Hamid_Bluri> why
[09:18:50] <FromDiscord> <Elegantbeef> `[idx, T]` would work just fine
[09:18:55] <FromDiscord> <Elegantbeef> Cause array already is constrained
[09:19:07] <FromDiscord> <Hamid_Bluri> you're right
[09:35:43] *** Quits: perro_ (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 256 seconds)
[09:59:48] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[10:17:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[10:34:37] <NimEventer> New thread by Oyster: 2 questions on json mudule, see https://forum.nim-lang.org/t/8768
[10:35:35] <PMunch> Hmm, it would be nice to have a block pragma. It would be able to attach to tings that already create a scope, like if, when, for, etc. and name the block so it could be broken out of
[10:37:48] <FromDiscord> <Elegantbeef> I feel like there isnt an ergonomic way of doing that
[10:39:10] <PMunch> I was thinking something like this: https://play.nim-lang.org/#ix=3KWN
[10:39:39] <FromDiscord> <Elegantbeef> I rest my case üòõ
[10:41:02] <FromDiscord> <Elegantbeef> I'd say since they already create scope perhaps `break if` that goes up to the first `if` it encounters
[10:41:43] <PMunch> Well sure, but I'm basically trying to early-return from something that isn't a proc
[10:42:03] <PMunch> And I don't want to indent my code an extra level to have a block there
[10:42:41] <FromDiscord> <Elegantbeef> Hmmm can i see code?
[10:43:35] <FromDiscord> <Elegantbeef> Clearly it should be `if(scopeLabel) condition`
[10:44:24] <PMunch> I was able to do something similar with a template `blockIf`
[10:44:48] <PMunch> Which looks like this: http://ix.io/3KWP
[10:45:30] <PMunch> And the code then looks like this: http://ix.io/3KWQ
[10:46:20] <PMunch> I agree that `if(scopeLabel) condition` would look better though
[10:46:40] <PMunch> But I don't think that could be done with a macro..
[10:47:31] <FromDiscord> <Elegantbeef> No it cannot
[10:48:04] <PMunch> And my template solution will only work for the things I would write a block-variant of
[10:48:12] <PMunch> And it can't work for e.g. else
[10:49:24] <PMunch> Unfortunately I can't simply add a `block X:` on the same line because it complains about requiring indentation
[10:49:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KWS
[10:49:39] <FromDiscord> <Elegantbeef> I mean you could if you abused stmtlists
[10:49:52] <PMunch> Could you though?
[10:50:10] <PMunch> How would you be able to grab the following scope?
[10:50:44] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KWU
[10:50:45] <FromDiscord> <Elegantbeef> That works
[10:53:11] <PMunch> Hmm, that's true..
[10:54:02] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3KWV
[10:54:14] <PMunch> Maybe what we need is a "treat this as indented one level further" operator
[10:54:17] <FromDiscord> <geekrelief> I think the issue is the double for block and body for if
[10:54:33] <FromDiscord> <geekrelief> you need the parens to separate them
[10:54:33] <PMunch> e.g. https://play.nim-lang.org/#ix=3KWW
[10:55:19] <FromDiscord> <Elegantbeef> Well geek yours doesnt work for `if elif`
[10:57:41] <FromDiscord> <geekrelief> In reply to @Elegantbeef "Well geek yours doesnt": What do you mean?
[10:57:42] <FromDiscord> <geekrelief> https://play.nim-lang.org/#ix=3KWX
[10:58:13] <FromDiscord> <Elegantbeef> I meant if you wanted a named branch for each `if`/`elif`
[11:00:29] <FromDiscord> <geekrelief> do you have an example?
[11:00:41] <NimEventer> New thread by GordonBGood: Anyone written an Android app using Nim-generated Native code lately?, see https://forum.nim-lang.org/t/8769
[11:00:58] <FromDiscord> <yallxe> how can i pass `size` as a mutable var into buffer.read()? https://media.discordapp.net/attachments/371759389889003532/927826424881090610/unknown.png
[11:01:27] <FromDiscord> <yallxe> the issue is that buffer.read() accepts `var T` only
[11:01:49] <FromDiscord> <yallxe> but mine isn't var and how do i just create a copy of size and make it var?
[11:04:34] <PMunch> var varSize = size; buffer.read(varSize)
[11:19:19] <PMunch> Hmm, anyone know how to cross compile to rasperry pi?
[11:19:47] <FromDiscord> <Elegantbeef> If it's a pico yes üòõ
[11:21:09] <PMunch> It can't be easier to cross-compile for a Pico :P
[11:21:19] <PMunch> I know I've done this before, I just don't remember how
[11:22:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[11:28:16] <FromDiscord> <impbox [ftsf]> PMunch, I think i had most luck just doing it on device
[11:28:32] <FromDiscord> <impbox [ftsf]> what are you cross compiling from?
[11:29:41] <PMunch> A normal Linux machine
[11:30:02] <PMunch> Arch based if it matters
[11:30:25] <FromDiscord> <impbox [ftsf]> encountering issues?
[11:31:30] <PMunch> Haven't tried anything yet
[11:46:09] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[11:47:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[11:51:57] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[11:52:27] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[12:12:00] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[12:12:14] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[12:16:45] <FromDiscord> <Isofruit> I kinda wish nim had interfaces right now
[12:17:03] <PMunch> What problem are you trying to solve?
[12:17:36] <FromDiscord> <Isofruit> This is more a design question than anything.‚ÜµI'm currently having a small discussion with the beautiful person that maintains norm (which I'm really liking so far)
[12:17:40] <PMunch> Hmm, for some reason pakku isn't able to find an AUR library..
[12:18:11] <FromDiscord> <Isofruit> They have an object "Model" and something like "ReadOnlyModel" is about to be added (And chances are in the future something like "View" will also be added)
[12:18:49] <FromDiscord> <Isofruit> (edit) ""View"" => ""ViewModels""
[12:18:52] <FromDiscord> <Isofruit> Models are supposed to have full CRUD functionality on the database, ReadOnlyModel should, well, only Read.‚ÜµViewModels should also have full CRUD functionality
[12:19:52] <FromDiscord> <Isofruit> You could inherit `Model = ref type of ReadOnlyModel`, but the naming doesn't suit that since ReadOnlyModel, by its name, would make more intuitive sense that it inherits from Model
[12:20:40] <FromDiscord> <Isofruit> When all you'd really want is for the select/update/delete/insert methods to check at compile time "Does this object have the ability to select/update/delete/insert"
[12:20:59] <FromDiscord> <Elegantbeef> So concepts
[12:23:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:24:30] <PMunch> Is it just me, or are descriptions on YouTube videos in the browser broken?
[12:24:45] <PMunch> They seem to only have a small part of them shown, with no expand button..
[12:34:03] <FromDiscord> <Clonkk> Can a macro argument be used in a const expression ?
[12:34:37] <FromDiscord> <Elegantbeef> I dont think so, but i think it should
[12:34:55] <FromDiscord> <Clonkk> That'd be useful
[12:35:41] <FromDiscord> <Elegantbeef> Indeed
[12:36:38] <PMunch> What do you mean @Clonkk?
[12:37:18] <FromDiscord> <Elegantbeef> Doing something like `macro doThing(a: static int) = var a: array[a, int]` i think
[12:42:12] <FromDiscord> <Clonkk> For example‚Üµ(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[12:42:44] <FromDiscord> <Clonkk> `macro loadRessources(dirname: static string) = const res = staticExec("ls " & " dirname)`
[12:42:55] <FromDiscord> <Clonkk> To embed ressources in a binary at compile time
[12:43:17] <FromDiscord> <Clonkk> For a single file it's easy enough, but recursing through a directory at compile times proves annoying
[12:46:17] <FromDiscord> <Clonkk> Ultimately I want to call `staticRead` on the result
[12:46:53] <FromDiscord> <Elegantbeef> You can make a proc that does as such
[12:47:44] <FromDiscord> <Clonkk> A proc that iterate through directory at compile-time from a static string ?
[12:48:02] <FromDiscord> <Clonkk> The ressources are needed during run time
[12:48:59] <FromDiscord> <Elegantbeef> Ah nvm you have to do it with the macro output
[12:54:45] <PMunch> I do something similar in my autotemplates thingy: https://github.com/PMunch/autotemplate/blob/master/src/autotemplates.nim#L10
[12:55:45] <PMunch> There you can see the `const rawIdent = content` thing which is the raw content of the file
[12:55:52] <FromDiscord> <Solitude> In reply to @PMunch "Hmm, for some reason": pakku is abandoned and broken, is it not?
[12:56:05] <PMunch> Has been working fine up until now
[13:23:32] <FromDiscord> <SirOlaf> Has the net module broken on latest devel?
[13:23:59] <FromDiscord> <Elegantbeef> More information is needed
[13:25:05] <FromDiscord> <SirOlaf> sent a code paste, see https://paste.rs/82d
[13:29:30] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KXy
[13:29:40] <FromDiscord> <Elegantbeef> Oh latest devel
[13:29:49] <FromDiscord> <Elegantbeef> I'm blind
[13:30:23] <FromDiscord> <Elegantbeef> Yep you're right
[13:30:40] <FromDiscord> <SirOlaf> That's not great to say the least
[13:33:46] <FromDiscord> <Elegantbeef> Indeed
[13:33:52] <FromDiscord> <Elegantbeef> Atleast it hasnt been changed much so shouldnt be hard to find what caused it
[13:34:00] <FromDiscord> <Rika> It‚Äôs devel, I wouldn‚Äôt rely on it
[13:34:16] <FromDiscord> <Elegantbeef> Yea devel isnt supposed to be stable üòõ
[13:35:25] <FromDiscord> <SirOlaf> Of course not, I just like switching things around for more excitement sometimes
[13:35:51] <FromDiscord> <Rika> Well congrats on getting that excitement
[13:53:33] <FromDiscord> <Isofruit> Are gifs allowed to be posted in this channel?
[13:54:52] <PMunch> As long as they're on topic, sure
[13:55:08] <FromDiscord> <Isofruit> In reply to @SirOlaf "Of course not, I": https://tenor.com/view/austin-powers-dangerously-gif-20939086
[13:55:35] <FromDiscord> <Isofruit> ... The fact this isn't resolving into the gif properly makes me sad, but the URL name at least tells what it is
[13:55:40] <FromDiscord> <Solitude> dont click, its a virus
[13:56:42] <FromDiscord> <Isofruit> I'm not sure if this is a joke or if tenor is known for spreading virusses and I'm not aware
[13:57:40] <FromDiscord> <Isofruit> Changed the URL to the proper URL to the gif... which also doesn't resolve+
[13:57:48] <FromDiscord> <Isofruit> (edit) "resolve+" => "resolve. Oh well"
[13:58:03] <PMunch> Ironically the gif works on IRC :P
[13:58:22] <FromDiscord> <Isofruit> IRC > Discord ! I knew it!
[13:58:36] <PMunch> Huh?
[13:59:41] <FromDiscord> <SirOlaf> https://github.com/nim-lang/Nim/commit/4b5cecd902cc4126ff9d6cda9edb78a13a421239 This commit killed me
[13:59:45] <FromDiscord> <Isofruit> Ah, I was just trying to be funny, stating IRC is superior to discord solely because of the gif thing.
[13:59:56] <FromDiscord> <SirOlaf> In reply to @SirOlaf "https://github.com/nim-lang/Nim/commit/4b5cecd902cc": Compiled the compiler with the commit right before and then this one
[14:00:46] <PMunch> Ah, you actually used > as greater than and not an arrow :P
[14:13:17] <FromDiscord> <hmmm> apparently if you wrap your sqlite calls in transactions you go from 85 insertions per second to 23000 ips
[14:13:30] <FromDiscord> <hmmm> software is mysterious ü§î
[14:14:55] <FromDiscord> <Isofruit> Makes sense to me
[14:21:20] <FromDiscord> <SirOlaf> sent a code paste, see https://paste.rs/mfQ
[14:21:25] <FromDiscord> <SirOlaf> Was there a change with how . casts are handled or something
[14:21:51] <FromDiscord> <SirOlaf> Or is this related to the fact that it is untyped
[14:24:09] <FromDiscord> <Yardanico> In reply to @SirOlaf "So, on my devel": It's better if you open an issue anyway, as it might be a real problem with that PR
[14:24:26] <FromDiscord> <Elegantbeef> Probably untyped issue `SockLen(sizeof(sockaddress))` is proper
[14:24:54] <FromDiscord> <Elegantbeef> Needs `bind SockLen` before i think
[14:25:21] <FromDiscord> <SirOlaf> You're right, `SockLen(sizeof(sockaddress))` works too
[14:26:42] <FromDiscord> <SirOlaf> In reply to @Yardanico "It's better if you": Would the issue just be incorrect cast syntax in net.nim?
[14:41:14] *** Joins: tinytoas1 (~squeek@user/tinystoat)
[14:42:21] <FromDiscord> <SirOlaf> Opened one. At least this finally gave me an excuse to play with the compiler for a bit
[14:42:56] *** Quits: tinytoast (~squeek@user/tinystoat) (Read error: Connection reset by peer)
[15:15:20] *** tinytoas1 is now known as tinystoat
[16:07:06] <FromDiscord> <Smarc> In reply to @IsaacPaul "use a consistent naming": I appreciate your insights, but I dont really understand the `if paramCount() > 0:` part .. What exactly is incorrect or bad practice there?
[16:08:48] *** Joins: badsektor (~badsektor@user/badsektor)
[16:08:48] *** Quits: badsektor (~badsektor@user/badsektor) (Client Quit)
[16:12:42] <FromDiscord> <Rika> Having it there
[16:13:57] <FromDiscord> <Smarc> Could you elaborate?
[16:14:20] <FromDiscord> <Rika> I just read your code, I don‚Äôt know what he means either
[16:14:54] <FromDiscord> <Rika> Maybe put the when check around the if statement instead of inside the else
[16:19:08] <FromDiscord> <Smarc> hm, guess that makes sense. Thank you
[16:28:11] <FromDiscord> <yallxe> how do I define that field can be `nil` in object? https://media.discordapp.net/attachments/371759389889003532/927908771882233896/unknown.png
[16:28:37] <FromDiscord> <Solitude> do you really need to? `ref whatever`
[16:29:16] <FromDiscord> <yallxe> In reply to @Solitude "do you really need": well yes i do
[16:31:53] <FromDiscord> <hmmm> hey if I have a proc that returns a string and I use a branch to return "false" and check for it in another proc am I committing a grave sin against the gods? Should I use options? ü§î
[16:33:21] <FromDiscord> <hmmm> options are ugly but checking for false in a string seems ugly too so I am in an ugly / ugly situation
[16:34:18] <FromDiscord> <Yardanico> In reply to @yallxe "well yes i do": if you to check if that type exists or not you can use Option
[16:37:03] <FromDiscord> <planetis> Hmmm either return a tuple string, bool or an empty string if you can
[16:37:53] <FromDiscord> <planetis> Or return a bool and use a var string parameter
[16:39:16] <FromDiscord> <enthus1ast> there was a "better options" or "safer options" in nimble but i cannot find it.
[16:40:41] <FromDiscord> <enthus1ast> ah no, it was PMunch'/nim-optionsutils
[16:41:00] <FromDiscord> <enthus1ast> https://github.com/PMunch/nim-optionsutils
[16:42:25] <FromDiscord> <hmmm> documentation for optionsutils seems broken
[16:42:46] <PMunch> Broken how?
[16:42:59] <FromDiscord> <hmmm> I click the link and there is an empty page
[16:43:15] <PMunch> And @hmmm, any checking against the values of strings for anything but parsing is a sin in my book :P
[16:43:34] <FromDiscord> <Rosen> also dead page for me I think
[16:43:53] <FromDiscord> <hmmm> In reply to @PMunch "And <@887269570765791243>, any checking": haha deep down I thought it was something a good principled boi wouldn't do
[16:44:09] <FromDiscord> <hmmm> so we must find a way that is less painful than options
[16:44:57] <FromDiscord> <enthus1ast> another option is to have a proc like this\:
[16:45:08] <FromDiscord> <hmmm> the tuple idea of planetis is kinda nice, can I do something like return (result : string, check : bool) packed into a tuple?
[16:45:30] <FromDiscord> <enthus1ast> `proc doStuff(myStr: var string): bool =`
[16:45:41] <FromDiscord> <enthus1ast> then if doStuff is true, use the myStr
[16:45:47] *** Joins: rockcavera (~rc@192.12.114.203)
[16:45:47] *** Quits: rockcavera (~rc@192.12.114.203) (Changing host)
[16:45:47] *** Joins: rockcavera (~rc@user/rockcavera)
[16:45:56] <FromDiscord> <enthus1ast> much c like
[16:46:07] <FromDiscord> <hmmm> nu myStr gets calculated inside the proc
[16:46:14] <PMunch> Hmm, seems to be a problem with the nimble directory..
[16:46:22] <PMunch> You can always generate the docs yourself
[16:46:30] <PMunch> Or just read them as doc-comments on GitHub
[16:46:34] <FromDiscord> <planetis> Just (string, bool) otherwise you're reinventing options
[16:47:10] <PMunch> Isn't (string, bool) already reinventing options?
[16:47:59] <FromDiscord> <hmmm> so the checker proc takes the tuple, checks for the bool and if it's good uses the string? Seems kinda nice, why am I feeling most of the people don't do it this way?
[16:49:59] <PMunch> Because most people uses options, which provides the exact same thing
[16:50:04] <FromDiscord> <enthus1ast> imho the reason is to keep track which proc actually changes the input string
[16:51:12] <FromDiscord> <enthus1ast> this sometimes gets very hairy in a c program
[16:53:17] <FromDiscord> <hmmm> hmm ok it's decided I will use options, I'd like to check if optionsutils shaves off some hassle, how do I check the docs pmunchie?
[16:53:53] *** Joins: jjido (~Denis@90.213.58.125)
[16:54:25] <PMunch> You know that every time you add an e to the end of my nickname I don't get pinged right? If you type it out like it is it's easier for me to notice your message :)
[16:54:43] <PMunch> You can either just read the doc comment here: https://github.com/PMunch/nim-optionsutils/blob/master/src/optionsutils.nim
[16:55:01] <PMunch> Or you can run `nim doc` on that file and open the html output
[16:55:09] <FromDiscord> <hmmm> but I don't want to disturb your big brain üòÉ , anyway yea I'm inside the nim file now ty!
[17:05:18] <FromDiscord> <hmmm> üëÄ
[17:05:48] <FromDiscord> <hmmm> with optionutlis i can do something like found?.doStuff() and it will do stuff only if it's some?
[17:06:05] <PMunch> Yup, that's the idea
[17:06:13] <FromDiscord> <hmmm> üëÄ
[17:06:28] <FromDiscord> <hmmm> this might be the confiest thing ever
[17:06:35] <FromDiscord> <hmmm> brb installing
[17:09:05] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3KZk
[17:09:16] <FromDiscord> <Yardanico> these warnings have been around since forever
[17:09:29] <FromDiscord> <Yardanico> and not everyone agrees with the directory structure nimble wants your project to have
[17:10:30] <PMunch> I mean this library literally exposes two modules, both which are fine to import separately
[17:10:38] <PMunch> So any other structure wouldn't make sense
[17:19:49] <PMunch> @Solitude, do you know of an AUR wrapper that is actually up to date and working?
[17:24:36] <PMunch> Hmm, apparently I was using pakku-git from AUR, which is a maintained fork
[17:25:02] <PMunch> But for some reason it's not able to find this package https://aur.archlinux.org/packages/arm-linux-gnueabihf-gcc-stage2
[17:26:29] *** Joins: badsektor (~badsektor@user/badsektor)
[17:35:20] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[17:48:13] <FromDiscord> <Michal Mar≈°√°lek> Is it possible to have different definitions for a type based on a generics parameter? I can achieve something similar with a template that returns `typedesc` but is it possible to achieve with the standard type system and the standard `[]`?
[17:50:22] <FromDiscord> <konsumlamm> you can use `when` in your type definition
[17:50:36] <FromDiscord> <Michal Mar≈°√°lek> How? I tried it
[17:51:03] <FromDiscord> <Michal Mar≈°√°lek> (edit) "it" => "`type MyType[T:static int] = (when T == 1: int else: array[T,int])`"
[17:51:50] <FromDiscord> <konsumlamm> ah, so you just want a type alias rather than a new type?
[17:51:58] <FromDiscord> <Michal Mar≈°√°lek> (edit) "How? I tried `type MyType[T:static int] = (when T == 1: int else: array[T,int])`" => "sent a code paste, see https://play.nim-lang.org/#ix=3KZO"
[17:52:21] <FromDiscord> <Michal Mar≈°√°lek> (edit) "https://play.nim-lang.org/#ix=3KZO" => "https://play.nim-lang.org/#ix=3KZP"
[17:53:39] <FromDiscord> <konsumlamm> not sure what the error for your code means or wether it's intended
[17:53:56] <FromDiscord> <Michal Mar≈°√°lek> I don't know what the real difference is but semantically it should be a new type... but `distinct` would suffice but it doesn't owkr either
[17:54:09] <FromDiscord> <Michal Mar≈°√°lek> (edit) 04removed "but"
[17:54:46] <FromDiscord> <Michal Mar≈°√°lek> (edit) "owkr" => "work"
[17:55:13] <FromDiscord> <haxscramper> you can't put `when` in the type alias definition, you can only do it using `object`
[17:55:45] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3KZQ
[17:56:25] <FromDiscord> <Michal Mar≈°√°lek> Is object with a single field more expensive than a type alias?
[17:57:17] <FromDiscord> <haxscramper> define "expensive". Purely from performance reasons it should not affect anything
[17:57:30] <FromDiscord> <Michal Mar≈°√°lek> memory?
[17:57:53] <FromDiscord> <Michal Mar≈°√°lek> I mean does it lead to the same (similar) binary?
[17:58:18] <FromDiscord> <haxscramper> if you get too fancy with `when` sections field padding might work out differently, but ultimately this should not be a problem with a single field
[17:58:26] <FromDiscord> <haxscramper> the question is whether you really need this
[17:58:54] <FromDiscord> <Michal Mar≈°√°lek> In reply to @haxscramper "the question is whether": Yeah it this is always the question
[17:58:55] <FromDiscord> <haxscramper> `array[1, int]` takes the same amount of space as `int`
[17:59:15] <FromDiscord> <haxscramper> or similar amount of space
[17:59:15] <FromDiscord> <Michal Mar≈°√°lek> In reply to @haxscramper "`array[1, int]` takes the": that was just a simple example this is not what I want to use it for
[18:00:09] <FromDiscord> <el__maco> an int doesn't have to allocate memory at all however. Its a good question if the compiler can reason about array[1,int] in a similar way
[18:00:34] <FromDiscord> <haxscramper> `array` is on-stack, by-value type
[18:01:12] <FromDiscord> <haxscramper> `seq` might've been done differently, with things live short vector optimization, but in case of array there are no hidden semantics
[18:01:13] <FromDiscord> <Michal Mar≈°√°lek> Thank you everyone, I will use √≤bject`. üôÇ
[18:01:35] <FromDiscord> <el__maco> a local variable can be on stack or it can exist in machine registers
[18:07:02] *** Joins: arkurious (~arkurious@user/arkurious)
[18:18:51] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:08:17] *** Joins: drewr (~drew@user/drewr)
[19:14:44] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[19:20:06] <FromDiscord> <Smarc> What would be the best practice approach to delete a single line from a txt file?
[19:23:39] <FromDiscord> <Rika> where is the line located
[19:24:07] <FromDiscord> <Smarc> It is a txt file with several lines
[19:24:36] <FromDiscord> <Rika> if its in the start or middle it's bound to be slow i believe
[19:24:42] <FromDiscord> <Rika> at the end is idea'
[19:24:43] <FromDiscord> <Rika> (edit) "idea'" => "ideal"
[19:25:16] <FromDiscord> <Smarc> In most cases it would be in the middle I guess. But I think speed does not play that big a role, since the file won't be that huge
[19:26:49] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[19:27:39] *** Joins: rockcavera (~rc@192.12.114.203)
[19:27:39] *** Quits: rockcavera (~rc@192.12.114.203) (Changing host)
[19:27:39] *** Joins: rockcavera (~rc@user/rockcavera)
[19:27:54] <FromDiscord> <Rika> the "basic algo" is prolly this‚Üµfind the \n before the line you want to delete‚Üµfind \n after that‚Üµreplace the whole range with one \n
[19:29:27] <FromDiscord> <Smarc> Is there a built-in proc to replace in a file?
[19:29:53] <FromDiscord> <Rika> not that i know of
[19:30:02] <FromDiscord> <Smarc> Alright, thank you
[19:31:33] <FromDiscord> <el__maco> can't you just open the file, read lines except the one you wanted to delete, and then write back
[19:32:25] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Ping timeout: 256 seconds)
[19:33:18] *** Joins: Vladar (~Vladar@46.162.2.53)
[19:33:43] <FromDiscord> <Yardanico> that's not really efficient
[19:33:47] <FromDiscord> <Yardanico> imagine a file with 150 million lines
[19:34:40] <FromDiscord> <el__maco> in which way its not efficient I wonder
[19:34:52] <FromDiscord> <el__maco> either you read the entire file to memory, or you don't
[19:35:03] <FromDiscord> <Yardanico> you don't have to read the entire file to delete a line
[19:35:07] <FromDiscord> <el__maco> if you don't, you probably write the lines as you read them to another file
[19:35:09] <FromDiscord> <demotomohiro> Open the file for reading, open temporary file for writing, read each lines and only write a line you want to temporary file. If write to temp file success, delete source file and rename temp file to souece file.
[19:35:13] <FromDiscord> <Yardanico> i mean read as in read the lines into memory
[19:35:37] <FromDiscord> <Yardanico> i think there was an example of this
[19:36:46] <FromDiscord> <Yardanico> oh guess there's no other way, i'm wrong then
[19:38:43] <FromDiscord> <el__maco> what isn't efficient is reading the whole file in memory as a continuous block and then removing something at the middle. That's why I suggested reading one line at a time. Of course you can write to another file as you go or alternatively replace the original file after you read all lines to memory
[19:39:36] <FromDiscord> <Rika> dont you have to shift everything else after "deleting"
[19:40:09] <FromDiscord> <Rika> oh
[19:40:13] <FromDiscord> <Rika> i misunderstood
[19:40:20] <FromDiscord> <Rika> yeah i dont think im reading correctly today
[19:45:26] *** Quits: bkay (~beshr@c-8b80e355.09-52-616c6b1.bbcust.telenor.se) (Ping timeout: 260 seconds)
[19:47:18] *** Joins: beshr (~beshr@user/beshr)
[19:54:31] <FromDiscord> <IsaacPaul> In reply to @Smarc "Is there a built-in": https://nim-lang.org/docs/memfiles.html has a `lines` iterator. You're going to want to stream a copy to another file, skip the line you don't want, then delete / rename when you're done.
[19:56:55] <FromDiscord> <IsaacPaul> There's a more efficient way that doesn't create a string for each line unless you need to analyze the lines to determine which to remove.
[19:57:47] <FromDiscord> <IsaacPaul> Or does it create a string ü§î  if it already exists in memory... not sure how nim string works
[20:03:51] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[20:05:06] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[20:05:55] <FromDiscord> <Smarc> Thank all of you guy for your help, I'll try to accomplish what I wanted to and report back if I get stuck again :)
[20:16:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[20:20:57] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[20:31:48] *** Joins: drewr (~drew@user/drewr)
[20:34:28] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: The Lounge - https://thelounge.chat)
[20:35:05] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[20:35:05] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[20:37:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[20:45:57] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[20:56:34] <FromDiscord> <Shiba> Is it possible to make a nim to computer language Compiler?,  i mean if someone is gonna try that
[20:57:48] <FromDiscord> <Shiba> (edit) "Compiler?," => "Compiler? Just for fun,"
[21:00:21] <PMunch> What do you mean?
[21:00:24] <FromDiscord> <auxym> In reply to @Shiba "Is it possible to": Sure, I mean, in an "everything is possible" way
[21:00:59] <FromDiscord> <auxym> In reply to @PMunch "What do you mean?": I assume they mean writing a new backend for nim that emits native machine code instead of C?
[21:02:04] <FromDiscord> <konsumlamm> if you mean assembly by "computer language", it already is that, it just compiles to C inbetween
[21:02:49] <FromDiscord> <konsumlamm> there's not really any advantage of emitting machine code directly and it isn't a goal (though ofc you're free to write your own Nim backend)
[21:04:54] <FromDiscord> <Shiba> Iam already learning nim so iam still too far away from doing expirements such as this one
[21:07:39] <NimEventer> New Nimble package! nimtesseract - A wrapper to Tesseract OCR library for Nim, see https://github.com/DavideGalilei/nimtesseract
[21:07:55] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[21:08:19] <FromDiscord> <auxym> In reply to @Shiba "Iam already learning nim": That sort of project would be less about "Nim" and more about assembly and compiler theory.
[21:09:14] <FromDiscord> <Shiba> "Nim compiler Implemanted in Nim"
[21:09:29] <FromDiscord> <Clonkk> A classic exercise is to implement a brainfuck interpretrer‚Üµ(@Shiba)
[21:09:34] <FromDiscord> <auxym> the current nim compiler is already implemented in nim
[21:09:54] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[21:10:02] <FromDiscord> <Clonkk> The language is simple enough that it doesn't become a huge project, but it stills shows you the different problematic of it
[21:10:03] <FromDiscord> <Shiba> In reply to @Clonkk "A classic exercise is": Oh yeah i made one in lua,  now in Nim
[21:17:40] <FromDiscord> <0000> In reply to @NimEventer "New Nimble package! nimtesseract": cool
[21:59:35] <FromDiscord> <hmmm> In reply to @kaletaa "cool": yea I got it working on linux and it was spotless on my first example
[22:00:00] <FromDiscord> <hmmm> windows hates this stuff apparently so it didn't work
[22:00:37] <FromDiscord> <hmmm> I guess it doesn't work on pdfs tho
[22:03:04] *** Joins: drewr (~drew@user/drewr)
[22:12:03] *** drewr is now known as drewr-test
[22:14:08] *** drewr-test is now known as drewr
[22:15:02] *** Joins: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21)
[22:28:56] *** Quits: drewr (~drew@user/drewr) (Quit: ERC (IRC client for Emacs 27.2))
[22:40:41] <FromDiscord> <ajusa> man I really wish Nim supported duplicated field names across object variants, I think folks have been asking for 7 years now? It always trips me up
[23:01:20] *** Joins: vicfred (~vicfred@user/vicfred)
[23:02:17] *** Joins: drewr (~drew@user/drewr)
[23:09:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[23:22:29] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 256 seconds)
[23:22:32] *** Joins: rwb (~augh@theguntretort.com)
[23:22:57] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[23:23:16] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[23:23:54] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3L1P
[23:24:03] <FromDiscord> <Smarc> Why is this deleting all lines in the given file?!
[23:24:09] *** rwb is now known as rb
[23:25:11] <FromDiscord> <Smarc> It is supposed to just skip the entered filename and write every other line that is already in the file in the file again
[23:34:25] *** Quits: rb (~augh@theguntretort.com) (Remote host closed the connection)
[23:35:53] *** Joins: rwb (~augh@theguntretort.com)
[23:44:52] <FromDiscord> <haxscramper> I"m not exactly sure if you can read and write to a file at the same time
[23:45:28] <FromDiscord> <Smarc> I figured that, so I adjusted it like that
[23:45:38] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3L1T
[23:46:32] *** Joins: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113)
[23:48:17] <FromDiscord> <Smarc> with `f = open(StorageFile, fmRead)`
[23:48:41] <FromDiscord> <Smarc> At least it is not erasing the file anymore, but still not writing the lines I want to the temp file
