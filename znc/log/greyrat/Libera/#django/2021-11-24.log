[00:04:54] *** Joins: Matthia__ (~Matthias1@casewireless11.CWRU.Edu)
[00:05:21] *** Quits: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu) (Ping timeout: 245 seconds)
[00:05:31] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:05:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:05:59] *** ChanServ sets mode: +v EvilDMP
[00:10:03] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 264 seconds)
[00:20:10] *** Quits: Matthia__ (~Matthias1@casewireless11.CWRU.Edu) ()
[00:23:00] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:24:38] *** Quits: paulbx (~paul@172.103.72.107) (Quit: leaving)
[00:40:43] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net) (Quit: Client closed)
[01:19:06] *** Quits: Camilo (~hugh@88-111-238-140.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[01:24:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:29:31] *** Joins: lucascastro (~lucascast@192-140-51-192.static.oncabo.net.br)
[01:33:44] *** Joins: monokrome (~monokrome@50.215.11.140)
[01:34:04] *** Joins: Hazem (~Hazem@194.36.108.92)
[01:34:49] *** Quits: Hazem (~Hazem@194.36.108.92) (Client Quit)
[01:36:25] *** Quits: Oxygene (~Oxygene@lfbn-lil-1-421-45.w81-49.abo.wanadoo.fr) (Quit: Leaving)
[01:48:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:50:07] *** Joins: fikran (~fikran@user/fikran)
[01:51:21] *** Joins: withered_wolf (~withered_@2600:1008:b153:3d22:cd27:9f04:ed7a:ed76)
[01:56:15] *** Quits: withered_wolf (~withered_@2600:1008:b153:3d22:cd27:9f04:ed7a:ed76) (Ping timeout: 264 seconds)
[02:14:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:27:16] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:37:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[02:38:17] *** Quits: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr) (Quit: Lost terminal)
[02:39:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:40:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[02:41:41] *** Joins: djapo (~archangel@user/djapo)
[02:41:45] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:42:55] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:46:39] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[02:58:16] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 245 seconds)
[03:05:02] *** Joins: thiras (~thiras@user/thiras)
[03:14:23] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[03:20:06] *** Joins: yanchai (~yanchai@222.127.97.162)
[03:22:30] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:26:15] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[03:28:03] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:37:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:42:27] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 264 seconds)
[03:57:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:59:27] *** Joins: fikran (~fikran@user/fikran)
[04:04:31] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:11:06] *** Joins: luigibu (~luigibu@80.30.201.209)
[04:11:11] *** Quits: rje (~rje@65.141.156.170) (Quit: My computer has gone to sleep. ZZZzzz…)
[04:12:11] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:12:27] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[04:16:51] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:25:10] *** Joins: withered_wolf (~withered_@2600:1008:b153:3d22:cd27:9f04:ed7a:ed76)
[04:29:51] *** Quits: withered_wolf (~withered_@2600:1008:b153:3d22:cd27:9f04:ed7a:ed76) (Ping timeout: 264 seconds)
[04:31:35] *** Quits: defjam (~eb0t@90.197.81.95) (Ping timeout: 256 seconds)
[04:40:05] *** Joins: defjam (~eb0t@90.199.243.141)
[04:46:34] *** Joins: rje (~rje@50.35.241.164)
[04:55:27] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:03:53] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 256 seconds)
[05:04:04] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:11:51] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[05:24:15] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:34:05] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:b4bd:ed21:7e07:d0e0)
[05:38:34] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[05:39:58] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:42:04] *** Joins: jpic (~jpic@82.142.20.182)
[05:44:31] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[05:46:30] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:55:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[05:56:28] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[05:57:01] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:57:19] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[06:00:43] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:00:58] *** Joins: dre (~dre@2001:8003:c932:c301:6392:af25:80a5:9caa)
[06:03:17] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:04:14] *** vinleod is now known as vdamewood
[06:06:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:07:00] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:e81a:fa7:1342:3782)
[06:08:48] *** Joins: fikran (~fikran@user/fikran)
[06:09:27] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:b4bd:ed21:7e07:d0e0) (Ping timeout: 264 seconds)
[06:09:52] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:13:38] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[06:15:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:17:59] *** Quits: tonitch (~tonitch@user/tonitch) (Ping timeout: 246 seconds)
[06:19:23] *** Quits: optiz0r (~quassel@universe.sihnon.net) (Ping timeout: 246 seconds)
[06:19:53] *** Joins: optiz0r (~quassel@universe.sihnon.net)
[06:20:02] *** Joins: tonitch (~tonitch@user/tonitch)
[06:20:21] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:e81a:fa7:1342:3782) (Ping timeout: 245 seconds)
[06:22:21] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:50e8:62eb:be31:28d8)
[06:29:43] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[06:34:10] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[06:37:54] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:47:51] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:50e8:62eb:be31:28d8) (Ping timeout: 245 seconds)
[06:49:54] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:fd83:28f5:d4ef:37d4)
[06:56:37] *** Quits: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Ping timeout: 268 seconds)
[06:58:24] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[07:00:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:00:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:da6:ed1e:9ca5:1d2)
[07:02:51] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:fd83:28f5:d4ef:37d4) (Ping timeout: 264 seconds)
[07:10:26] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2900:5624:d5f:15dc)
[07:13:03] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:da6:ed1e:9ca5:1d2) (Ping timeout: 264 seconds)
[07:21:46] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:88c3:30a7:232e:140)
[07:23:51] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2900:5624:d5f:15dc) (Ping timeout: 264 seconds)
[07:30:08] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:88c3:30a7:232e:140) (Quit: WeeChat 3.3)
[07:39:43] *** Quits: kurfen (~kurfen@45.152.181.20) (Ping timeout: 256 seconds)
[07:55:25] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:00:58] *** Joins: sreve (~quassel@p4ff44a93.dip0.t-ipconnect.de)
[08:06:36] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 245 seconds)
[08:07:31] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 268 seconds)
[08:16:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[08:18:10] *** Joins: fikran (~fikran@user/fikran)
[08:21:36] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[08:22:43] *** Joins: Atque (~Atque@user/atque)
[08:22:59] *** Joins: djapo (~archangel@user/djapo)
[08:24:14] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:27:14] *** Joins: noobsec (~user@user/noobsec)
[08:28:38] <noobsec> hi i have a html code in database that also have url pointers {% url 'home_url'%} , however when i print in the template by {{database_Veriable}}, the url is not rendered {% url 'home_url'%}
[08:28:42] <noobsec> any help
[08:29:49] <noobsec> hi i have a html code in database that also have url pointers {% url 'home_url'%} , however when i print in the template by {{database_Veriable}}, the url is not rendered {% url 'home_url'%} and get displayed as it is instead of http://www.url.com/urlpath/
[08:51:01] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[08:52:37] *** Joins: Steve-Dusty (~Steve-Dus@user/steve-dusty)
[08:52:42] <Steve-Dusty> Hello
[08:52:49] <Steve-Dusty> could someone see if my github profile is job-ready?
[08:52:59] <Steve-Dusty> ik it depends but how competent i am
[08:53:02] <Steve-Dusty> https://github.com/Steve-Dusty
[08:58:53] *** Joins: yanchai (~yanchai@222.127.97.162)
[09:04:54] *** Joins: shangxiao (~davids@124.187.230.212)
[09:18:54] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[09:22:30] *** Joins: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl)
[09:31:23] *** Quits: shangxiao (~davids@124.187.230.212) (Ping timeout: 268 seconds)
[09:32:19] *** Joins: dor (~erg@78.11.12.207)
[09:32:45] *** Joins: mattil (~mattil@d4ccvwjmd-wyl11q5hp-4.rev.dnainternet.fi)
[09:32:59] *** Joins: shangxiao (~davids@124.187.230.212)
[09:39:16] *** Quits: Steve-Dusty (~Steve-Dus@user/steve-dusty) (Ping timeout: 256 seconds)
[09:43:06] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:44:31] *** Quits: mattil (~mattil@d4ccvwjmd-wyl11q5hp-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:44:59] *** Joins: mattil (~mattil@d4ccvwjmd-wyl11q5hp-4.rev.dnainternet.fi)
[09:45:45] *** Quits: mattil (~mattil@d4ccvwjmd-wyl11q5hp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[09:45:57] *** Joins: mattil (~mattil@87-95-64-20.bb.dnainternet.fi)
[09:50:51] *** Quits: mattil (~mattil@87-95-64-20.bb.dnainternet.fi) (Ping timeout: 264 seconds)
[09:50:57] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (Quit: .)
[09:54:21] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[09:56:04] <FunkyBob> noobsec: rendering a variable in a template doesn't magically parse it and render its contents like it's another template...
[09:56:15] <noobsec> FunkyBob,
[09:56:16] <noobsec> i know
[09:56:24] <noobsec> thats why asked what can be done ?
[09:57:08] <noobsec> i have found an answer on stack over flow
[09:57:41] <noobsec> but i dont understand as im using function based views not class based lol
[09:57:42] <noobsec> https://stackoverflow.com/questions/66503812/is-there-a-way-to-pass-url-template-tag-from-database-to-template-in-django
[09:58:02] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 260 seconds)
[09:59:06] <FunkyBob> as always, be highly suspicious of anything  you fidn on stack overflow
[10:00:18] <noobsec> lol
[10:00:24] <FunkyBob> some years ago I had a cms in django... and I used this https://github.com/funkybob/kopytka/blob/master/kopytka/templatetags/cms.py
[10:00:41] <FunkyBob> it lets you do {% template %} ... {% endtemplate %}  and anything inside that block is parsed and rendered
[10:00:56] <FunkyBob> so it renders, then parses, then renders... :P
[10:01:18] <noobsec> sweeet
[10:01:20] <FunkyBob> that said, what's in that SO post isn't bad, for what it shows
[10:02:50] <FunkyBob> not sure why the add it to self.object.. that's not really necessary
[10:08:30] *** Joins: mattil (~mattil@d4ccvx-qssqb8hhsrb8-4.rev.dnainternet.fi)
[10:13:51] <shangxiao> speaking of templates…
[10:14:09] <shangxiao> the other day I wanted to {% include … %} an svg from a static dir
[10:14:33] <shangxiao> anyone know what the best way to setup that up is?  is it just a matter of adding the static dir to TEMPLATES?
[10:15:06] <shangxiao> i didn't give it much thought and ended up just putting the svg in my templates/ dir as it was only ever used inline like that
[10:15:10] *** Quits: mattil (~mattil@d4ccvx-qssqb8hhsrb8-4.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[10:16:14] <FunkyBob> shangxiao: err
[10:16:22] <FunkyBob> include ... from static... no.
[10:16:44] <FunkyBob> yes, turning it into a template is the only way you can... treat it like a template.
[10:24:59] <shangxiao> well as long as i'm not violating the principle of least astonishment
[10:25:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:26:12] <shangxiao> (for context: it was an icon. I wanted to include it to get style effects like hover, etc)
[10:27:31] *** Joins: fikran (~fikran@user/fikran)
[10:42:42] *** Joins: aavrug (uid524982@id-524982.lymington.irccloud.com)
[10:46:16] <serafeim> hello my frends
[10:57:33] *** Joins: serghei (~egrep@user/serghei)
[10:57:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[11:09:17] *** Quits: noobsec (~user@user/noobsec) (Remote host closed the connection)
[11:17:25] *** Joins: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr)
[11:34:55] *** Joins: captain_morgan2 (~morgan@oit.cloud)
[11:35:47] *** Quits: wht (~wht@havoc.proulx.com) (Ping timeout: 264 seconds)
[11:36:03] *** Joins: wht (~wht@havoc.proulx.com)
[11:36:17] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 250 seconds)
[11:36:43] *** Quits: captain_morgan (~morgan@oit.cloud) (Ping timeout: 250 seconds)
[11:36:43] *** captain_morgan2 is now known as captain_morgan
[11:40:25] *** Joins: mastardet (~mastardet@user/mastardet)
[11:46:53] *** Joins: luigibu (~luigi@80.30.201.209)
[11:50:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:50:49] *** ChanServ sets mode: +v EvilDMP
[11:53:50] *** Quits: dre (~dre@2001:8003:c932:c301:6392:af25:80a5:9caa) (Ping timeout: 268 seconds)
[12:00:30] *** Joins: Rikem (~mike@user/rikem)
[12:02:19] *** Joins: ugubok (~ugubok@user/ugubok)
[12:04:21] *** Quits: gitly (~gitly@85.255.235.212) (Ping timeout: 256 seconds)
[12:06:03] <shangxiao> how do you clone a queryset?
[12:06:22] *** Joins: gitly (~gitly@148.252.129.73)
[12:07:35] <ugubok> shangxiao, Just do qs_clone = qs.all()
[12:07:56] <shangxiao> ugubok: thx 👍
[12:11:33] <ugubok> How do I define "default" tabular inline values in Django Admin? I have TabularInline to "Additive" model M2M relation, values is "additive" (rawid) and "count"
[12:11:41] <ugubok> I made custom formset for that inline and override __init__ method to set kwargs["initial"] = {"additive": 42, "count": 1}
[12:12:38] <ugubok> So in django admin I see that prepopulated inline, but when I click "save", there is nothing about that in request payload! So relation doesn't actually created
[12:18:13] *** Joins: mad_moses (~mad_moses@2a02:6d40:2348:4601:1bd:b962:e1a6:7bdf)
[12:18:33] <ugubok> They say it works in django 2.2 https://stackoverflow.com/questions/15376874/how-to-set-default-values-in-tabularinline-formset-in-django-admin
[12:18:40] <ugubok> However I have django 1.11
[12:19:08] <mad_moses> Hi, after saving an address I want to start a geocoding task in the background to not block the response. How do you do this kind of jobs?
[12:20:21] <GinFuyou> mad_moses, task queue like celery and others, also something was said to be included in uwsgi
[12:21:28] <mad_moses> GinFuyou: so "task queue" is the keyword I should search for? And celery is an example of an "task queue" ?
[12:23:44] <GinFuyou> It's should do for a start. Celery might have simpler alternatives
[12:24:35] <mad_moses> GinFuyou: and what is uwsgi? I thought this is somethink like mod_wsgi which runs the code at the end?
[12:25:05] *** Parts: yanchai (~yanchai@222.127.97.162) ()
[12:26:00] <GinFuyou> not sure what you mean "at the end" but it's wsgi server like gunicorn, standalone as opposed to mod_wsgi being apache module I think?
[12:26:39] <GinFuyou> uwsgi apparently also has some mechanism to offload tasks, but I never explored it
[12:26:57] <mad_moses> ahh okay, so better stick to something like celery to be independent?
[12:30:01] <jho> i've had good experience with huey, it's a lot more lightweight whereas celery has everything and the kitchen sink
[12:30:39] <jho> not a bad choice if you need all that, but if all you need is a simple task queue, huey with its built-in huey.contrib.djhuey django integration is more to my liking
[12:34:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[12:34:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:36:52] *** Joins: fikran (~fikran@user/fikran)
[12:38:55] <mad_moses> jho: actually I just need something to send emails and to geocode in the background.
[12:39:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:41:32] <jho> sounds like just the job for huey :)  https://huey.readthedocs.io/en/latest/
[12:42:39] <ugubok> mad_moses, You need separate worker process for that, and task queue to put tasks in that worker. So it called Distributed Task Queues
[12:44:08] <mad_moses> ugubok: thank you
[12:44:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[12:44:39] <mad_moses> jho: is there also something build in to see the queue and the process status in the browser?
[12:45:39] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:45:47] <ugubok> mad_moses, Celery have "flower" https://docs.celeryproject.org/en/2.2/userguide/monitoring.html
[12:47:38] <jho> mad_moses: sadly no, huey can store the results of the jobs in redis or whatever other backend you use with it, and you can fetch them from there but there is no ready view for those
[12:48:13] <jho> if you need that, then maybe celery is the better choice. i've also heard good things about Django Q but i've no personal experience with it. it looks to have a slick integration with django admin though. https://django-q.readthedocs.io/en/latest/
[12:51:54] <mad_moses> thank you. I will continue reading :)
[12:53:10] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:54:29] <jho> the basic premise is the same in all: you have a queue backed by some sort of database (usually redis or some other key-value store), and then a consumer process (or multiple) constantly running and taking jobs from the queue as they show up
[12:54:30] <carlio> django-q is pretty straight forward but it's not updated much these days, at an old contract we were moving away from it for that reason. They decided to go with dramatiq but that had issues (such as no built-in scheduler and odd segfaults due to its strange multithreading approach). I've used celery a lot, very mature and has lots of supporting libraries, but it can be quite large and possibly overkill if
[12:54:36] <carlio> you need just a few simple tasks. That said, I always go for it myself, but mostly due to familiarity I guess.
[12:56:21] <mad_moses> I think I will just use celery. It has the biggest community and I am stressed up replacing libraries every year because a project is dead.
[12:57:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:58:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:58:05] *** ChanServ sets mode: +v EvilDMP
[13:02:20] *** Quits: aavrug (uid524982@id-524982.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:19:11] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:f42b:bd3c:c2bb:83fd)
[13:22:32] <pycode1> good morning
[13:23:49] *** Joins: sandeepk (~sandeepk@202.14.122.130)
[13:32:22] <mad_moses> good morning
[13:34:45] <pycode1> guys i have a question about signals, how do you handle signals if for example you update the values from many sources? for example i have "won_deal" signal, i can set a deal as won from many places, so should i replicate the call on every place i update the won?
[13:35:01] *** Joins: Niyati (~Kao@lmontsouris-657-1-116-115.w82-127.abo.wanadoo.fr)
[13:35:02] <pycode1> or should i override then main save() method of the model and add a logic there
[13:35:11] <pycode1> to understand if won field has been set
[13:35:19] <pycode1> ?
[13:35:23] <pycode1> hello mad_moses!
[13:36:10] <GinFuyou> pycode1, why it's a signal in the first place?
[13:36:35] <pycode1> GinFuyou, basically an event i should notify the event when happen
[13:36:55] <pycode1> because there are other parts of the application that need to "listen" at that event
[13:37:17] <pycode1> so inside my Quote application i need to manage signals
[13:37:44] <pycode1> so ther rest of the project can know when an event is triggered
[13:38:15] <GinFuyou> It's not how django works
[13:38:59] <pycode1> GinFuyou, uh ?
[13:39:01] <pycode1> https://docs.djangoproject.com/en/3.2/topics/signals/
[13:39:22] <GinFuyou> django is not event-driven
[13:39:31] <pycode1> signal-driven? :D
[13:39:40] <pycode1> i do not know i found that documentation
[13:39:41] <GinFuyou> nope
[13:39:44] <pycode1> and i see no solution
[13:39:52] <pycode1> i mean...i need to send notification when something happen but
[13:39:58] <pycode1> as i wrote i have this Quote application
[13:40:03] *** Quits: gitly (~gitly@148.252.129.73) (Ping timeout: 264 seconds)
[13:40:07] <pycode1> the rest of the project should understand when i set won = True
[13:40:16] <pycode1> inside the Quote i just save the won
[13:40:25] <pycode1> i do not know what other part will need that information
[13:40:34] <pycode1> so i think signals are good for that
[13:40:35] <pycode1> why not?
[13:40:42] <GinFuyou> because it doesn't work
[13:41:33] <pycode1> what is the alternative? i mean..reading the doc it seems that signals are basically """event""" to notify when something happen and then other part of the project should listen to a signal, and that's it
[13:41:39] *** Joins: gitly (~gitly@148.252.129.73)
[13:41:52] <pycode1> GinFuyou, i do not understand the problem, what  is the alternative GinFuyou ?
[13:41:59] <pycode1> or ...how should i handle it ?
[13:42:03] <GinFuyou> no, signals are not events, they are "hooks"
[13:42:19] <GinFuyou> You are trying to stretch in a foreign paradigm here
[13:42:51] *** Quits: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl) (Quit: Textual IRC Client: www.textualapp.com)
[13:43:09] <pycode1> GinFuyou, ok hooks but i think they work in a similar way... i mean. i can add a dispatcher and then other part of the project listen to the correct hook
[13:43:12] <pycode1> no?
[13:43:12] <GinFuyou> Try to adapt your goal to django paradigm. You have just a request-response cycle
[13:43:21] <GinFuyou> no
[13:43:22] <pycode1> pardon i "receiver"
[13:43:26] <pycode1> a receiver
[13:43:27] <Niyati> Hi, I'm having some issues trying to use filters in a view for a django api.
[13:43:42] <pycode1> GinFuyou, so is tehre an alternative? when should i use signals ?
[13:43:52] <Niyati> I'm trying to filter on a related field, I have something like that : https://dpaste.org/zvoj
[13:43:57] <pycode1> GinFuyou, >>> Django includes a “signal dispatcher” which helps decoupled applications get notified when actions occur elsewhere in the framework. <<<
[13:44:00] <pycode1> that's what i need
[13:44:05] <GinFuyou> https://lincolnloop.com/blog/django-anti-patterns-signals/ has a good summary
[13:44:06] <pycode1> why not? i am just trying to understand
[13:44:21] <Niyati> And this is what I'm generating as json : https://dpaste.org/0ZcG
[13:44:25] <GinFuyou> If you case is here, sure use signals
[13:45:48] <Niyati> The issue is that on the json I just sent, i'm supposed to filter on card__rarity = "common" So i would like to see only collections that have common cards (this is working) but to see only those common cards like here: https://dpaste.org/0COh
[13:46:09] <Niyati> But instead of that I'm getting all the cards of collection that do have common cards
[13:47:09] <pycode1> GinFuyou, i do not understand why... i mean...quote is a separate app, that i import inside the project, that app should "alert" (pardon for the wrong term here) the prohect what something happen
[13:48:54] <GinFuyou> Is there is no "app" and "project". There is only a project withing a request-response cycle. There are ways to call different parts of it. Signals are one of them.
[13:49:24] <GinFuyou> *within
[13:50:35] <pycode1> GinFuyou, yes but the thing i am trying to explain is that my Quote application is just working for creating quote/offer, so it has a list/create/update view that's it ... it knows nothing about the rest of the project, so i am asking how can i know WHEN a deal will be set as WON.
[13:51:04] <pycode1> should i change the create/update view and there put a giant list of all the functions i need to call
[13:51:11] <pycode1> of the rest of the project to notify it ?
[13:52:32] <pycode1> GinFuyou, >> Extending the functionality of a third-party library. If you're using an app with models where you don't control the code, signals are a more robust alternative to monkey-patching for taking specific actions on save or delete.
[13:52:44] <GinFuyou> I still don't understand what you mean by "notify".
[13:53:44] <pycode1> GinFuyou, project needs to understand WHEN a quote is set as WON....change notify with alert/notification/event/call/ping as you prefer :P
[13:54:06] <GinFuyou> none of those things exists in django
[13:54:53] <GinFuyou> You can only run some code. If signals do it for you - sure it's fine.
[13:55:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:55:16] <pycode1> that point i found on the article you gave me is just saying is ok when you do not contrl the code, otherwise as i wrote i need to hack the updateview and the createview add an if there like if self.cleaned_data['won'] == True: and then i giant list of function to call of the entire project
[13:56:42] <GinFuyou> Well again, I don't understand the end goal in django terms. If it's what you need - good
[13:56:53] *** Quits: gitly (~gitly@148.252.129.73) (Ping timeout: 250 seconds)
[13:57:55] <GinFuyou> but you mentioned modifying save before... if you can modify save, it takes down some of reasons for signals
[13:58:29] <pycode1> GinFuyou, that's my goal and i am trying to convert it in django terms... i just need to call other part of the projects to let them know that a quote as been set to won, so the solutions are two (i think) one create a signal called "won_deal" that every part of the project can "receive" with a receiver....or add a login as i wrote above
[13:58:44] <pycode1> ok
[13:58:57] *** Joins: gitly (~gitly@85.255.233.103)
[14:00:20] <pycode1> GinFuyou, or maybe i can create a task and then call that task with a name and then celery will call every task with that name
[14:01:06] <pycode1> hmmm no
[14:01:12] <pycode1> the thing i just said is wrong
[14:01:17] <pycode1> i cannot set a name of a task
[14:01:28] <pycode1> i should do myfunc.delay(...)
[14:01:32] <pycode1> so i need to call functions
[14:01:34] <pycode1> hmm idk
[14:01:36] <GinFuyou> with celery system becomes different, since it's async, so it can be event-driven afaik
[14:02:36] <pycode1> no no wait
[14:02:40] <pycode1> i just checked that with celery
[14:02:42] <pycode1> i can do
[14:02:53] <pycode1> app.send_task('name')
[14:02:57] <pycode1> hmm interesting
[14:04:16] <GinFuyou> Yes, with celery you have a message queue and background workers that can listen for messages.
[14:04:55] <pycode1> GinFuyou, so basically i can add all the task i want grouped by the same task name
[14:05:01] <GinFuyou> That's why things like celery are very useful to extend django beyond it's typical request-response
[14:05:07] <pycode1> so when i send_task() i will do something like send_task('won_deal')
[14:05:59] <GinFuyou> Probably, but do you need it async?
[14:06:07] <pycode1> GinFuyou, no
[14:06:23] <GinFuyou> well, then probably you don't need celery really
[14:06:40] <pycode1> i mean...it is not a problem, i can run those tasks without a specific orde
[14:06:43] <pycode1> rorder
[14:06:45] <pycode1> order
[14:07:48] <GinFuyou> well, it's not about order, it's about if it has to be executed before sending response to http client
[14:09:17] <pycode1> well i thought to signals for that reason because if there is something heavy i call a task from the receiver...if needed
[14:09:29] <pycode1> however ok i try to do m y best :D
[14:09:31] <GinFuyou> Like, if you need to send a email notification to user who won the deal, it's could be either.
[14:09:40] <pycode1> GinFuyou, yes exactly
[14:10:13] <GinFuyou> But if you need to change user status to winner and show it to the user when he load the winning page, it has to be syncronous
[14:10:14] <pycode1> for that reason i have a reicever inside another part of the project that hook to that signal and then call a task because it could takes time
[14:10:27] <pycode1> yes
[14:12:52] *** Quits: Niyati (~Kao@lmontsouris-657-1-116-115.w82-127.abo.wanadoo.fr) (Quit: Connection closed)
[14:18:02] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[14:22:10] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[14:22:29] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Client Quit)
[14:26:40] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[14:32:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 256 seconds)
[14:33:03] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[14:35:39] <mad_moses> I use gunicorn behind an apache proxy. My test server is protected by basic authentication. Unfortutely basic-authentication + bearare token is not working. Any explanation why this is not working?
[14:35:42] *** Joins: yanchai (~yanchai@115.147.17.121)
[14:35:51] <yanchai> hi everyone!
[14:36:05] <yanchai> do you have links for tutorial on implementing multiple profiles?
[14:36:09] <FunkyBob> mad_moses: you're using _both_ auth mechanisms together?
[14:36:25] <yanchai> FunkyBob: mate i really need your help :(
[14:36:39] <FunkyBob> yanchai: you need to justify this 'multiple profiles' concept first
[14:37:06] <mad_moses> FunkyBob: Yes. In production I use bearer token but to hide the dev server for google and others I activated basic authentication.
[14:37:38] <yanchai> FunkyBob: i'd like to create 3 user profiles for student, teacher and admin
[14:37:39] *** Quits: gitly (~gitly@85.255.233.103) (Ping timeout: 264 seconds)
[14:37:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:37:39] *** ChanServ sets mode: +v EvilDMP
[14:38:00] <FunkyBob> mad_moses: and none of the tools you're using support multiple Auth headers?
[14:38:02] <yanchai> FunkyBob: students have infos not applicable to teachers and admin same with the others
[14:38:04] <FunkyBob> yanchai: why?
[14:38:25] <FunkyBob> ok, so you need to store different details
[14:38:27] <FunkyBob> where's the problem?
[14:38:35] <FunkyBob> 3 models, related to user
[14:38:41] <yanchai> FunkyBob: yes mate
[14:39:10] <yanchai> FunkyBob: can you show me a sample implementation code? or snippets? i cant find a tutorial online :(
[14:39:16] *** Joins: gitly (~gitly@185.69.145.153)
[14:40:00] <yanchai> FunkyBob: you are my last hope :(
[14:40:04] <FunkyBob> huh?
[14:40:06] <FunkyBob> of models?
[14:40:08] <FunkyBob> related to user?
[14:40:15] <yanchai> FunkyBob: yes mate
[14:40:16] <mad_moses> FunkyBob: not sure where the problem is coming from. My request looks like that curl --location --request POST 'https://test:test@dev.example.com/rest/mycall/' --header 'authorization: Token 2ur32jf0j230fj2309jf293jf'
[14:40:19] <FunkyBob> how is this not a trivial thing, yanchai ?
[14:40:21] <FunkyBob> ForeignKey
[14:40:22] <FunkyBob> done
[14:40:42] <FunkyBob> mad_moses: yes, but you _also_ need to pass the Basic auth in an Authorization header
[14:41:03] <yanchai> FunkyBob: 3 user types with 3 different profiles will work?
[14:41:11] <FunkyBob> yanchai: why 3 user types?
[14:41:24] <yanchai> FunkyBob: students, teacher and admin
[14:41:25] <FunkyBob> 1 user type
[14:41:26] <mad_moses> FunkyBob: you mean instead of calling it like that  'https://test:test@ ... I can place the username and password in the header?
[14:41:43] <FunkyBob> mad_moses: no, I mean when you do that, curl is placing those details in the header
[14:41:46] <FunkyBob> https://en.wikipedia.org/wiki/Basic_access_authentication
[14:41:55] <FunkyBob> that's how basic auth _works_
[14:42:24] <yanchai> FunkyBob: you mean 1 user table for auth and 3 profiles for students, teacher and admin?
[14:42:41] <FunkyBob> yanchai: that's what I said.
[14:42:52] <GinFuyou> yanchai, 1 User model, 3 (StudentProfile, TeacherProfile, AdminProfile) with ForeignKey(User)
[14:42:56] <FunkyBob> probably want a OneToOneField, of course...
[14:43:07] <GinFuyou> oh, yeah OneToOne
[14:43:10] <yanchai> FunkyBob: thanks mate
[14:43:22] <yanchai> FunkyBob: last question
[14:43:47] <yanchai> FunkyBob: is it possible to let student use username to login and email for the teacher?
[14:43:53] <FunkyBob> yes
[14:43:58] <FunkyBob> I told you how the other week
[14:44:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:44:11] <FunkyBob> add a custom auth backend that looks up by email
[14:44:13] <mad_moses> FunkyBob: ohh, so basic auth or bearer auth are using the same "key" for the header?
[14:44:20] <FunkyBob> mad_moses: yes
[14:44:50] <yanchai> FunkyBob: oh ok so that is what i will look for then custom auth backend tutorials
[14:44:59] <FunkyBob> documentation
[14:45:01] <yanchai> FunkyBob: thanks mate
[14:45:19] <mad_moses> FunkyBob: Hmm, how to solve this? Or how do you put a test environment to the internet?
[14:45:27] <yanchai> GinFuyou: thanks mate i really appreciate thanks for your time.
[14:45:34] <yanchai> More power to you guys!
[14:46:13] *** Joins: fikran (~fikran@user/fikran)
[14:52:01] <mad_moses> FunkyBob: I will try this https://stackoverflow.com/questions/29282578/multiple-http-authorization-headers
[14:52:36] <FunkyBob> which might work, depending on how well your auth tools are implemented
[14:52:56] <FunkyBob> which is why I asked:
[14:52:57] <FunkyBob> 10:18 < FunkyBob> mad_moses: and none of the tools you're using support multiple Auth headers?
[14:54:01] <mad_moses> FunkyBob: not sure. Bearer Token auth is used from Django-Rest-Framework and Basic Auth comes from Apache2.
[14:54:55] <FunkyBob> well, one way to find out
[14:55:05] <FunkyBob> any particular reason you're using token auth, btw?
[14:55:35] <mad_moses> FunkyBob: I use it for my Vue-Based application and soon for an Android app => not good? What would you choose
[14:55:56] <FunkyBob> doesn't explain w hy you need tokens
[14:56:11] <FunkyBob> what's wrong with the stock cookie/sessioin auth?
[14:56:33] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[14:57:24] <FunkyBob> if you're not delegating rights to services, or using a 3rd party auth service... tokens rarely make much sense
[14:59:00] <mad_moses> FunkyBob: Can I use cookie/session auth for my android app? I think I head problems with my vue application served on completely different domains using cookie/session auth. But I am not sure anymore
[14:59:36] <FunkyBob> if your android app's http lib doesn't support cookiies... get a better lib
[15:00:04] <FunkyBob> as for cross domain... that's an old problem that's well solved on  the web
[15:00:25] *** Joins: luigibu (~luigibu@80.30.201.209)
[15:00:31] <FunkyBob> since the session cookie is set from your APIs domain, the browser should send it properly
[15:00:31] <mad_moses> FunkyBob: so you would recommend using this https://www.django-rest-framework.org/api-guide/authentication/#sessionauthentication instead of token?
[15:00:46] <FunkyBob> if that means DRF will use django's normal built-in auth... yes
[15:01:17] <mad_moses> FunkyBob: is there any downside or security reason in not using token auth?
[15:01:29] <FunkyBob> there's plenty of up-sides
[15:01:33] <FunkyBob> like you can invalidate a login
[15:01:46] <FunkyBob> and... it just works.
[15:02:00] <FunkyBob> your client side doesn't need to be taught to keep passing the magic header
[15:02:39] <FunkyBob> https://blog.tinbrain.net/blog/jwt-auth.html
[15:07:16] <mad_moses> FunkyBob: what about csrf tokens for post calls?
[15:09:06] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:f42b:bd3c:c2bb:83fd) (Ping timeout: 245 seconds)
[15:10:23] <FunkyBob> the way I do it
[15:10:34] <FunkyBob> is I make the SPA do a GET on the user details/state...
[15:10:38] <FunkyBob> so it can check if you're logged in
[15:10:39] *** Quits: yanchai (~yanchai@115.147.17.121) (Ping timeout: 264 seconds)
[15:10:44] <FunkyBob> THAT endpoint always sets CSRF token
[15:10:51] <FunkyBob> if you're not logged in, POST to log in...
[15:11:00] *** Joins: thiras (~thiras@user/thiras)
[15:11:06] <FunkyBob> https://django-nap.readthedocs.io/en/latest/examples.html#case-2-login-view
[15:11:10] <FunkyBob> that's how I do it in django-nap
[15:12:20] <mad_moses> FunkyBob: so every time you want to post you have to call the user details/state?
[15:15:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[15:16:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:16:01] *** ChanServ sets mode: +v EvilDMP
[15:17:50] <FunkyBob> no
[15:18:00] <FunkyBob> the cookies will last for as long as you've set the expiration
[15:18:03] <FunkyBob> 2 weeks is default
[15:18:12] <FunkyBob> I do the login check only on app load
[15:18:19] <FunkyBob> you know, when you want to know if the user is logged in:)
[15:21:05] <mad_moses> FunkyBob: hmm okay. I think I should a littble bit test arround with postman
[15:23:56] <FunkyBob> sure
[15:24:06] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[15:25:29] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:25:50] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:36:44] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Read error: Connection reset by peer)
[15:38:11] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[15:50:17] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:00:59] <mad_moses> FunkyBob: apache understands multiple auth headers but not django rest framework
[16:01:27] *** Joins: withered_wolf (~withered_@174.25.131.17)
[16:03:36] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[16:03:52] *** Joins: withered_wolf (~withered_@174.25.131.17)
[16:09:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[16:14:18] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:14:58] *** Quits: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[16:16:06] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[16:25:08] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[16:30:54] <mad_moses> FunkyBob: I just renamed the header into "bearer" and will maybe use in the near future session authentication instead
[16:36:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:44:12] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[16:48:16] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 245 seconds)
[16:50:26] *** Joins: iomari891 (~iomari891@129.205.113.32)
[16:53:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:55:33] *** Joins: fikran (~fikran@user/fikran)
[17:08:15] *** Quits: monokrome (~monokrome@50.215.11.140) (Ping timeout: 264 seconds)
[17:13:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:14:15] *** Quits: iomari891 (~iomari891@129.205.113.32) (Ping timeout: 264 seconds)
[17:15:40] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:d8b:7cf3:7679:ba2a)
[17:16:03] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 264 seconds)
[17:16:50] *** Joins: luigibu (~luigibu@80.30.201.209)
[17:17:27] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:19:48] *** Joins: Elzington (~Elzington@68.235.43.172)
[17:26:33] *** Joins: withered_wolf (~withered_@174.25.131.17)
[17:26:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[17:30:45] *** Quits: withered_wolf (~withered_@174.25.131.17) (Ping timeout: 256 seconds)
[17:35:51] *** Quits: gitly (~gitly@185.69.145.153) (Ping timeout: 264 seconds)
[17:37:36] *** Joins: gitly (~gitly@148.252.129.70)
[17:39:39] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[17:39:59] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:39:59] *** Joins: mattil (~mattil@87-95-64-20.bb.dnainternet.fi)
[17:42:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:43:39] *** Quits: mattil (~mattil@87-95-64-20.bb.dnainternet.fi) (Read error: Connection reset by peer)
[17:43:47] *** Joins: mattil (~mattil@d4ccvwthhjn-fl50f6z-4.rev.dnainternet.fi)
[17:46:15] *** Quits: mattil (~mattil@d4ccvwthhjn-fl50f6z-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:05:29] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[18:06:49] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:14:42] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[18:16:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[18:24:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:30:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[18:39:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:44:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[18:46:51] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Read error: Connection reset by peer)
[18:47:14] *** Joins: rje_ (~rje@50.35.241.164)
[18:47:15] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[18:49:03] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 264 seconds)
[18:52:07] <pycode1> hello i have a mixin to check if the user is logged and if it has the correct "role", it is very simple: https://bpa.st/2Y3A
[18:52:33] <pycode1> is it possible to put that check in other place instead of importing the mixin on every class ?
[18:52:57] <pycode1> i mean...i have an app called salesagent ALL the classes there must be accessible if logged and if the user is a sales_Agent
[18:53:16] <pycode1> quite repetitive to put that mixin everywhere
[18:54:49] <carlio> you could use the @permission_required decorator instead (https://docs.djangoproject.com/en/3.2/topics/auth/default/#the-permission-required-decorator) though you'd have to put that around each view in urls.py
[18:54:57] <carlio> so perhaps a middleware would make more sense for you
[18:55:28] <pycode1> carlio, can i use a middleware just for specific urls?
[18:55:45] <carlio> no sadly not (unless you check 'request.path' in it but that's not ideal)
[18:56:49] <pycode1> carlio, so how can i check it?
[18:57:12] <pycode1> i mean if i create a new middleware how can i check if the permissions are ok for specific path ,,,,and other permissions for other paths
[18:58:00] <carlio> hmm ; middleware has access to the 'request' object but you'd have to put them *after* the authentication middleware in settings.py to be able to access request.user in your middleware
[18:58:08] <carlio> it's a bit of a bad solution actually, now I think about it!
[18:59:02] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:03:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[19:04:22] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[19:04:46] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[19:04:54] *** Joins: fikran (~fikran@user/fikran)
[19:07:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:07:28] <pycode1> hmmm ok
[19:09:49] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 268 seconds)
[19:12:12] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[19:41:04] *** Quits: ugubok (~ugubok@user/ugubok) (Remote host closed the connection)
[19:41:12] *** Joins: rapha (~jrs@user/rapha)
[19:41:15] <rapha> hi all
[19:41:34] <rapha> is there a way to influence what columns are displayed in a django app's /admin screens?
[19:43:30] <dodo> rapha: https://docs.djangoproject.com/en/3.2/ref/contrib/admin/#modeladmin-options
[19:45:25] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:46:22] *** Joins: koo5_ (~quassel@51.140.155.227)
[19:51:11] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:d8b:7cf3:7679:ba2a) (Ping timeout: 245 seconds)
[19:57:00] *** Quits: gitly (~gitly@148.252.129.70) (Ping timeout: 260 seconds)
[19:57:29] *** Quits: sandeepk (~sandeepk@202.14.122.130) (Quit: Leaving)
[19:58:55] *** Joins: gitly (~gitly@185.69.145.151)
[19:59:08] *** Joins: dez (uid92154@user/dez)
[20:03:57] <rapha> dodo: thx!
[20:25:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:26:18] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:27:19] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:31:03] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[20:32:51] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Ping timeout: 245 seconds)
[20:33:04] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[20:34:55] *** Quits: gitly (~gitly@185.69.145.151) (Ping timeout: 256 seconds)
[20:36:39] *** Joins: gitly (~gitly@148.252.133.95)
[20:37:30] *** Joins: thiras_ (~thiras@user/thiras)
[20:37:42] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[20:38:33] *** Joins: flynn6 (~mcbloch@user/flynn)
[20:38:41] *** Joins: captain_morgan2 (~morgan@oit.cloud)
[20:39:25] *** Joins: henbruas_ (~henbruas@ti0003a400-4203.bb.online.no)
[20:40:14] *** Joins: syberspa1e (~syberspac@xiaoxiao.anvor.at)
[20:40:20] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[20:41:47] *** Joins: rundown (~eb0t@90.199.243.141)
[20:41:48] *** Joins: tonitch_ (~tonitch@user/tonitch)
[20:41:55] *** Joins: krisd_ (krisd@s0.mydevil.net)
[20:42:03] *** Joins: jpic_ (~jpic@82.142.20.182)
[20:42:08] *** Joins: bparker_ (~nobody@user/bparker)
[20:42:10] *** Joins: wht_ (~wht@havoc.proulx.com)
[20:46:36] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:46:43] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (*.net *.split)
[20:46:43] *** Quits: vinleod (~vdamewood@fedora/vdamewood) (*.net *.split)
[20:46:43] *** Quits: luigibu (~luigibu@80.30.201.209) (*.net *.split)
[20:46:43] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (*.net *.split)
[20:46:43] *** Quits: thiras (~thiras@user/thiras) (*.net *.split)
[20:46:43] *** Quits: wht (~wht@havoc.proulx.com) (*.net *.split)
[20:46:43] *** Quits: captain_morgan (~morgan@oit.cloud) (*.net *.split)
[20:46:43] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (*.net *.split)
[20:46:43] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[20:46:44] *** Quits: defjam (~eb0t@90.199.243.141) (*.net *.split)
[20:46:44] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (*.net *.split)
[20:46:44] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[20:46:44] *** Quits: jpic (~jpic@82.142.20.182) (*.net *.split)
[20:46:44] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[20:46:44] *** Quits: ubernost1um (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (*.net *.split)
[20:46:44] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f) (*.net *.split)
[20:46:44] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[20:46:45] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (*.net *.split)
[20:46:45] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[20:46:45] *** Quits: syberspace (~syberspac@xiaoxiao.anvor.at) (*.net *.split)
[20:46:45] *** Quits: bparker (~nobody@user/bparker) (*.net *.split)
[20:46:45] *** Quits: krisd (krisd@s0.mydevil.net) (*.net *.split)
[20:46:45] *** captain_morgan2 is now known as captain_morgan
[20:46:45] *** henbruas_ is now known as henbruas
[20:46:45] *** flynn6 is now known as flynn
[20:46:52] *** Joins: gopar_ (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[20:49:38] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[20:50:54] <LordKalma> Quick question: Django (rest-framework) API backend + JS SPA (Vue.js in this case) framework for frontend.
[20:51:05] <LordKalma> Is it necessary, or differently, how to handle CSRF?
[20:51:26] *** Quits: gitly (~gitly@148.252.133.95) (Ping timeout: 260 seconds)
[20:52:55] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[20:52:55] *** Joins: debnet (sid330295@python/afpy/debnet)
[20:52:55] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f)
[20:52:55] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[20:53:47] *** Joins: mdk (~mdk@python/psf/mdk)
[20:57:08] *** Joins: gitly (~gitly@85.255.232.161)
[21:00:31] *** Joins: xkuru (~xkuru@user/xkuru)
[21:09:48] *** Quits: gitly (~gitly@85.255.232.161) (Ping timeout: 260 seconds)
[21:12:11] *** Joins: gitly (~gitly@185.69.145.151)
[21:12:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[21:14:14] *** Joins: fikran (~fikran@user/fikran)
[21:15:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:18:46] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:19:04] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:20:21] *** Quits: gitly (~gitly@185.69.145.151) (Ping timeout: 245 seconds)
[21:22:39] *** Joins: gitly (~gitly@85.255.234.182)
[21:23:52] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[21:29:18] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:30:49] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[21:31:34] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[21:34:15] *** Joins: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl)
[21:34:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:35:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:35:47] *** ChanServ sets mode: +v EvilDMP
[21:39:41] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 250 seconds)
[21:46:34] *** Joins: dre (~dre@2001:8003:c932:c301:5609:7507:d2a0:8e2b)
[21:46:54] *** Joins: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58)
[21:49:23] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:51:23] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:54:54] *** Quits: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr) (Ping timeout: 260 seconds)
[21:55:23] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[21:55:40] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[21:59:30] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 260 seconds)
[22:08:41] *** Quits: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:13:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[22:16:53] *** Joins: Atque (~Atque@user/atque)
[22:17:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:34:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:34:27] *** ChanServ sets mode: +v EvilDMP
[22:36:59] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[22:37:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[22:52:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:01:56] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[23:01:59] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:02:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:07:53] *** Quits: gitly (~gitly@85.255.234.182) (Ping timeout: 250 seconds)
[23:09:57] *** Joins: gitly (~gitly@85.255.232.171)
[23:11:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:11:24] *** ChanServ sets mode: +v EvilDMP
[23:19:45] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:21:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[23:23:35] *** Joins: fikran (~fikran@user/fikran)
[23:34:54] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[23:39:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:42:44] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[23:43:07] *** Joins: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl)
[23:46:41] *** Quits: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl) (Client Quit)
[23:50:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[23:51:21] *** Joins: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl)
[23:56:11] *** Quits: bambanxx (~bambanx@181-163-34-45.baf.movistar.cl) (Ping timeout: 250 seconds)
