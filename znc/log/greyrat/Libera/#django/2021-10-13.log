[00:01:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[00:02:53] *** Joins: fikran (~fikran@user/fikran)
[00:15:05] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:20:42] *** Joins: Rikem (~mike@user/rikem)
[00:25:38] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[00:28:41] *** Joins: dez (uid92154@user/dez)
[00:34:59] <pycode> hello
[00:35:04] <pycode> i have a field called won_time
[00:35:16] <pycode> i wonder if i should create a field called "won" too
[00:35:22] <pycode> basically i am creating a very small crm
[00:35:36] <pycode> won = boolean and won_time = datetime
[00:36:16] <pycode> i thinking having a boolean field will help in form, but i think i have to override the save method because if won = 1 i need to set won_time too
[00:36:19] <pycode> is that correct?
[00:39:40] <pycode> i need won_time but i think having "won" will help me with forms no? otherwise i need to set the datetime in the template before saving the won_time
[00:39:53] <pycode> but i think is better to get the now() server-side
[00:43:05] <FunkyBob> you know the form doesn't have to match the fields exactly, right?
[00:43:09] <FunkyBob> your code exists for a reason
[00:43:39] <FunkyBob> sounds like a good plan... the user just wants to flag it as done, the DB does that by setting the won_time, ys?
[00:44:05] <pycode> FunkyBob, so you mean i should create the "won" on the form only and then ...where should i put the logic that check if won=1 if yes set the won_time = now() ?
[00:44:19] <pycode> FunkyBob, yes
[00:44:20] <pycode> exactly
[00:44:31] <pycode> done = set now() to won_time
[00:44:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[00:45:33] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[00:48:25] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[00:49:29] <pycode> FunkyBob, should i put that logic in save?
[00:49:32] <pycode> should i override it?
[00:52:04] <FunkyBob> in the form save method, yes
[00:52:26] <FunkyBob> you could put it in the clean method, but likely makes more sense on save...
[00:52:47] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[00:53:39] <pycode> ok
[00:56:34] <pycode> thanks
[00:58:55] *** Joins: zircona (~zircona@c-73-207-108-132.hsd1.ga.comcast.net)
[01:00:16] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:00:41] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[01:01:33] <pycode> FunkyBob, i have a doubt...
[01:01:49] <pycode> lets suppose i have a field like "won"
[01:01:53] <pycode> as i said..
[01:01:59] <pycode> if i set it to 1
[01:02:20] <pycode> the i think i should reset that value for bounded form
[01:02:32] <pycode> otherwise if i am going to save it again i will send won=1 again
[01:02:41] <pycode> it is an hidden input
[01:02:47] <pycode> i set its value via JS
[01:02:57] <pycode> so i need to find a way to set it to "" after save
[01:03:12] <pycode> how can i do that FunkyBob ?
[01:03:59] <FunkyBob> wait... what's a hidden input and why?
[01:04:00] <pycode> this is a piece of the form's save method https://bpa.st/4MYA
[01:04:17] <pycode> FunkyBob, because i have a button that the user can click then set won=1 and then submit
[01:04:25] <pycode> i do not have a visible checkbox
[01:04:37] <pycode> i set those "state" with a click on button
[01:04:45] <FunkyBob> ok
[01:04:57] <FunkyBob> so there's still a checkbox, it's just hidden.
[01:05:32] <pycode> yes exactly
[01:05:34] <pycode> hidden
[01:05:46] <FunkyBob> when you said hidden I thought you meant input type=hidden...
[01:05:57] <FunkyBob> which is usually a sign you're doing it wrong :)
[01:06:12] <FunkyBob> so... after submit you want to clear the won field because...?
[01:06:56] <pycode> no no wait
[01:06:58] <pycode> wait...
[01:07:06] <pycode> i have that hidden field
[01:07:14] <pycode> i set won=1 on that hidden field
[01:07:22] <pycode> why wrong?
[01:07:33] <FunkyBob> in this case, it's not.
[01:09:36] <pycode> in widget i do 'won': forms.HiddenInput(),
[01:09:55] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[01:09:58] <pycode> in template i see <input type="hidden" name="won" id="id_won">
[01:10:01] <pycode> FunkyBob, ^
[01:11:14] <pycode> why is this wrong? how should i do that? as i said i must change those values via js (because i have button that set the value and then submit())
[01:11:20] <pycode> instead of checkboxes.
[01:11:32] <FunkyBob> i just said... in this case... it's not
[01:15:05] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[01:16:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[01:19:31] <pycode> it is not what? it is an hidden field i create that form input witha that widget
[01:19:41] <pycode> however it is like a checkbox yes, hidden checkbox
[01:19:49] <pycode> how do you usually do?
[01:22:33] <pycode> i would like to understand why you said it is wrong
[01:24:05] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[01:25:48] *** Quits: dre (~dre@2001:8003:c932:c301:b1a7:f172:e0ac:f5a0) (Remote host closed the connection)
[01:26:08] *** Joins: dre (~dre@2001:8003:c932:c301:e309:8ed:b76f:cbc5)
[01:31:51] <pycode> FunkyBob, still there?
[01:32:18] <FunkyBob> in a meeting
[01:33:33] <pycode> just tell me when you can why using hidden input field is a bad idea
[01:33:49] <pycode> as i said i must set their value with button
[01:33:55] <pycode> i do not understand whats wrong with that
[01:34:11] <pycode> but.. i need to prevent that hidden field is usend on template again
[01:34:25] <pycode> to avoid sending won=1 again and again after each save()
[01:42:01] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 252 seconds)
[02:04:58] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:10:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:12:14] *** Joins: fikran (~fikran@user/fikran)
[02:12:32] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:14:49] *** Joins: rje (~rje@65.141.156.170)
[02:19:28] <FunkyBob> ok, back now
[02:19:45] <FunkyBob> pycode: I would have left it a checkbox input in the Form class
[02:19:52] <FunkyBob> and made the input not visible with styling, etc...
[02:20:12] <FunkyBob> why would you care if won was set again on an update?
[02:20:27] <FunkyBob> if your save code sees the won_at timestamp is set, don't set it again
[02:21:18] <pycode> FunkyBob, yes i should add that control too
[02:21:22] <pycode> because as i wrote i have https://bpa.st/4MYA
[02:21:33] <pycode> so i need to check if it has been already set
[02:24:08] <FunkyBob> if self.cleaned_data['sent'] and not self.sent_time:
[02:24:11] <FunkyBob> etc etc
[02:30:54] <pycode> yes yes
[02:30:56] <pycode> done
[02:30:58] <pycode> thanks!
[02:38:04] <PaulWay[w]> Feels like a won_time = DateTimeField(nulls=True) in your model is a more accurate way of dealing with the dual states of "this (x) has not been won" and "this (x) was won at (time)".
[02:40:21] <pycode> thanks PaulWay[w]
[02:40:24] <pycode> i have to go
[02:40:26] <pycode> bye
[02:45:05] *** Quits: pycode (~pycode@2001:b07:5d28:551:9bbb:9a2e:32bf:a227) (Ping timeout: 264 seconds)
[02:54:20] *** Joins: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:ac08:8774:7e5b:2a4)
[03:21:24] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:35:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:36:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:39:20] <FunkyBob> PaulWay[w]: that is what the discussion was implementing... only the form had the boolean
[03:48:36] *** Quits: bhoman (~bhoman@pool-74-102-26-111.nwrknj.fios.verizon.net) (Ping timeout: 265 seconds)
[03:53:13] <PaulWay[w]> FunkyBob: *shrugs*
[03:53:17] <PaulWay[w]> Just a different take on the idea.
[03:56:46] *** Joins: bhoman (~bhoman@pool-74-102-26-111.nwrknj.fios.verizon.net)
[03:58:41] <FunkyBob> PaulWay[w]: umm... no?
[03:58:51] <FunkyBob> you proposed... exactly what was being done
[04:01:07] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Konversation terminated!)
[04:01:31] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[04:05:49] <PaulWay[w]> I thought pycode was going with two separate fields?
[04:06:29] *** Quits: bhoman (~bhoman@pool-74-102-26-111.nwrknj.fios.verizon.net) (Ping timeout: 265 seconds)
[04:08:05] *** Joins: bhoman (~bhoman@pool-74-102-26-111.nwrknj.fios.verizon.net)
[04:08:09] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 268 seconds)
[04:10:11] *** Quits: rje (~rje@65.141.156.170) (Quit: My computer has gone to sleep. ZZZzzzâ€¦)
[04:19:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:21:21] *** Quits: gitly (~gitly@85.255.234.91) (Ping timeout: 245 seconds)
[04:21:35] *** Joins: fikran (~fikran@user/fikran)
[04:23:26] *** Joins: gitly (~gitly@85.255.237.21)
[04:37:51] *** Joins: djapo (~archangel@user/djapo)
[04:38:52] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:41:53] *** Joins: rje (~rje@50.35.241.164)
[04:43:24] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Konversation terminated!)
[04:49:30] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[04:55:29] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:06:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[05:07:00] *** Quits: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:ac08:8774:7e5b:2a4) (Quit: Textual IRC Client: www.textualapp.com)
[05:19:28] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[05:20:55] *** Quits: zircona (~zircona@c-73-207-108-132.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[05:21:03] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[05:21:55] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[05:38:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:38:47] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[05:39:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:02:50] *** Joins: Atque (~Atque@user/atque)
[06:12:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:17:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:20:36] *** Joins: Buliarou1 (~gypsydang@185.207.166.57)
[06:26:25] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[06:28:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[06:30:56] *** Joins: fikran (~fikran@user/fikran)
[06:33:01] *** Joins: djapo (~archangel@user/djapo)
[07:23:08] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[07:46:04] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[07:46:29] *** Joins: pidroid (~pidroid@user/pidroid)
[07:48:34] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:58:43] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Ping timeout: 252 seconds)
[08:04:41] *** Joins: sandeepk (~sandeepk@202.14.122.154)
[08:22:03] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[08:22:19] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[08:38:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:40:18] *** Joins: fikran (~fikran@user/fikran)
[08:52:52] *** Joins: dor (~erg@78.11.12.207)
[09:24:45] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[09:25:54] *** Joins: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr)
[09:35:03] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[10:04:31] *** Joins: pradhvan (~pradhvan@dgplug/pradhvan)
[10:06:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:17:28] *** Joins: pycode (~pycode@2001:b07:5d28:551:3d44:7d5b:1572:1a91)
[10:21:19] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 250 seconds)
[10:21:40] *** Joins: Thala (~Mika@p5099462a.dip0.t-ipconnect.de)
[10:32:54] <Thala> Hi all. I have a question about file uploads. As this is a feature used by more or less every webserver, I feel that the question might be a bit stupid but I hope you can point me in the right direction.
[10:33:22] <Thala> When I upload large files, it seems that the full request is saved into memory and parsed first, before the upload handlers are called.
[10:33:43] <Thala> This results in an OOM kill of my application if the memory is not sufficient, regardless of if the upload handler would write the file directly into the filespace or not.
[10:33:55] <serafeim> hello friends
[10:34:02] <Thala> I tested it with a docker container limited to 2G RAM and uploading a 6GB file using either the default upload handlers or my own one.
[10:34:32] <Thala> Also, even if memory is sufficient, it takes a long time as the file is first read into memory, waiting the upload to finish, *then* the handler is called and the file is written to disk.
[10:34:45] <Thala> I've expected that the file would be written to disk as soon as the uploads starts.
[10:39:28] <mahtikebab> i'm not sure about how django works but in general i guess you'd have to stream the file to disk?
[10:42:33] <Thala> Hi mahtikebab, yes, I think so too, unfortunately the upload handler is only called after the upload finishes so I don't know how I can "redirect" the file to disk instead of memory
[10:45:03] <Thala> that is also true for the default `TemporaryFileUploadHandler` provided by django. If I use this one, the same issue happens.
[10:47:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:49:38] *** Joins: fikran (~fikran@user/fikran)
[10:53:38] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[11:53:51] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[11:54:13] *** Joins: optiz0r (~quassel@universe.sihnon.net)
[11:54:34] *** Joins: blip2 (~blip2@blip2.net)
[11:54:41] *** Joins: tonitch (~tonitch@user/tonitch)
[11:54:47] *** Server sets mode: +cnrt 
[11:56:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:57:00] *** Quits: veb (sid43929@id-43929.ilkley.irccloud.com) (*.net *.split)
[11:57:00] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (*.net *.split)
[11:57:00] *** Quits: jrabbit (~jack@user/jrabbit) (*.net *.split)
[12:00:18] *** Joins: orsel (~vince@orsel.revenni.com)
[12:00:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[12:01:19] *** Joins: iwkse (~iwkse@iurit.com)
[12:03:41] *** Joins: veb (sid43929@id-43929.ilkley.irccloud.com)
[12:03:41] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:03:41] *** Joins: jrabbit (~jack@user/jrabbit)
[12:04:34] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:06:02] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[12:07:28] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Ping timeout: 252 seconds)
[12:10:00] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[12:10:06] *** enkrypt_ is now known as enkrypt
[12:11:00] *** Joins: Byteflux (~byte@byteflux.net)
[12:15:49] *** Joins: shangxiao (~davids@124.187.230.212)
[12:18:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:20:51] *** Joins: jor (~jor@jor.link)
[12:21:02] *** Joins: derelict (derelict@user/derelict)
[12:21:04] *** Joins: kevr (~kevr@user/kevr)
[12:21:21] *** Joins: felixx (felixx@django/moderator/felixx)
[12:21:21] *** ChanServ sets mode: +v felixx
[12:21:22] *** Joins: himcesjf (uid409730@id-409730.tinside.irccloud.com)
[12:21:34] *** Joins: graingert (sid128301@2a03:5180:f::1:f52d)
[12:21:35] *** Quits: sandeepk (~sandeepk@202.14.122.154) (Remote host closed the connection)
[12:21:53] *** Joins: UnnamedBeer (~UnnamedBe@117.red-83-46-8.dynamicip.rima-tde.net)
[12:22:00] *** Joins: sandeepk (~sandeepk@202.14.122.154)
[12:23:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[12:28:00] *** Joins: wallbroken (wallbroken@user/wallbroken)
[12:36:06] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[12:37:50] *** Quits: sandeepk (~sandeepk@202.14.122.154) (Ping timeout: 265 seconds)
[12:43:48] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:52:16] *** Joins: sandeepk (~sandeepk@202.14.122.154)
[13:00:28] *** Joins: Atque (~Atque@user/atque)
[13:14:40] <w0rp> Does anyone know a quick and easy way to exclude classes from the E307 field error for the `check` command? It's the one that says the app doesn't provide a model.
[13:15:01] <w0rp> I'm just setting up `check` in an integration test for different settings to look for other problems, and I want to somehow ignore some classes that are generated only in tests for mocking things.
[13:15:31] <w0rp> > central.MockKlass.challenge_ptr: (fields.E307) The field central.MockKlass.challenge_ptr was declared with a lazy reference to 'central.mockklass', but app 'central' doesn't provide model 'mockklass'
[13:15:34] <w0rp> That kind of error.
[13:28:10] *** Quits: easter_egg (~jeffry@user/easter-egg/x-4406379) (Ping timeout: 252 seconds)
[13:29:16] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: brownan (~brownan@2001:470:69fc:105::e01b) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: carl0s[m] (~carl0s@2001:470:69fc:105::305b) (Quit: Bridge terminating on SIGTERM)
[13:29:21] *** Quits: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f) (Quit: Bridge terminating on SIGTERM)
[13:29:22] *** Quits: code1 (~code1@2001:470:69fc:105::c807) (Quit: Bridge terminating on SIGTERM)
[13:29:23] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Quit: Bridge terminating on SIGTERM)
[13:29:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:31:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[13:33:35] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[13:35:09] *** Joins: thiras (~thiras@user/thiras)
[13:35:19] *** Quits: Buliarou1 (~gypsydang@185.207.166.57) (Ping timeout: 252 seconds)
[13:36:49] *** Joins: Buliarous (~gypsydang@185.207.166.57)
[13:41:10] <moldy> w0rp: if you have models that are only used in tests, consider putting them into an app that you only include in your test settings module
[13:41:12] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[13:41:12] *** Joins: carl0s[m] (~carl0s@2001:470:69fc:105::305b)
[13:41:12] *** Joins: mambang[m] (~mambang@user/mambang)
[13:41:25] *** Joins: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f)
[13:41:25] *** Joins: allegary (~allegary@apache/committer/gjm)
[13:41:25] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[13:41:25] *** Joins: brownan (~brownan@2001:470:69fc:105::e01b)
[13:41:25] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[13:41:25] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[13:41:32] <w0rp> moldy: I ended up just catching the exception, ripping the text out, and looking for other lines besides those ones.
[13:41:39] *** Joins: code1 (~code1@2001:470:69fc:105::c807)
[13:41:43] <w0rp> Good enough for catching issues in a pinch when I have only a few minutes to add a new test.
[13:42:22] <w0rp> I often do a few things where I go, "Okay, good enough. Time to stop thinking about it."
[13:52:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:54:19] *** Joins: fikran (~fikran@user/fikran)
[13:55:18] *** Quits: kiska (james@user/kiska) (Quit: Ping timeout (120 seconds))
[13:55:46] *** Joins: kiska (james@user/kiska)
[13:56:16] *** Quits: audiocat (~audio@2603-8081-1800-1546-c83b-26d7-50b9-7442.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:06:13] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[14:10:06] *** Quits: ops (~ops@user/echelon) (Ping timeout: 245 seconds)
[14:10:14] *** Quits: sandeepk (~sandeepk@202.14.122.154) (Ping timeout: 268 seconds)
[14:11:44] <pycode> does anyone use django-filters ? i have a select (choice) and a field called won_time (datetime) i should only filter yes = won_time not null  no = won_time null
[14:11:47] <pycode> can i do that?
[14:14:20] <serafeim> pycode: not easily
[14:14:47] <pycode> serafeim, now i do https://bpa.st/NTMA
[14:14:57] <serafeim> pycode: what i usually do is say something like: Filter.Meta.fields = { ... "submit_group__created_on": ["isnull"] }
[14:15:17] <serafeim> and then on __init__: self.filters["submit_group__created_on__isnull"].label = "Submit date is empty"
[14:15:28] <serafeim> this is the *reverse* of what you want. but it's easy to do
[14:16:25] <pycode> serafeim, look at my code if i use null_value='0' it works because i see the SQL it use wiew_time IS NULL
[14:16:27] *** Joins: ops (~ops@user/echelon)
[14:16:32] *** Parts: gitesh (uid423739@id-423739.ilkley.irccloud.com) ()
[14:16:35] <pycode> so i should "not" handle the view=1
[14:16:40] <pycode> or
[14:16:48] <pycode> put is NOT NULL somewhere
[14:16:54] <pycode> or maybe create a custom filter method
[14:17:03] <serafeim> i told you how to do it easily.
[14:17:15] <serafeim> if you don't want to do whgat i propse you need to create a custom filter method as you mention
[14:18:05] <serafeim> i have somewhere the code for the custom filter method however i don't have time now to search it
[14:18:11] <pycode> serafeim, i did not understand what you said
[14:18:12] <pycode> ok
[14:18:14] <serafeim> and i can't recollect it from my mind
[14:19:01] <serafeim> pycode: i always use the Meta.fields to generate the filterset: https://django-filter.readthedocs.io/en/stable/guide/usage.html#generating-filters-with-meta-fields
[14:19:04] <serafeim> and the dict kind
[14:19:40] <serafeim> here's a sample filter: https://dpaste.org/xpdF
[14:19:47] <pycode> look
[14:19:57] <serafeim> i always use such filters i almost never add the filter fields one by one
[14:20:17] <serafeim> that's it i can't help you anymore cause i don't remember the filter api
[14:20:29] <pycode> serafeim, it is cool, submit_group__created_on <--
[14:20:29] <pycode> but
[14:20:32] <serafeim> because i just use the dict thingie
[14:20:36] <pycode> how do you form it ? i mean
[14:20:49] <pycode> in the dict you have created_{value} ?
[14:20:56] <serafeim> what dict ?
[14:21:07] <pycode>  Filter.Meta.fields
[14:21:13] <serafeim> yes i send you the docs
[14:21:29] <serafeim> read it first
[14:23:09] <pycode> serafeim, i know we can use model__other_related_model_field but i do not get where the on is coming from
[14:23:12] <pycode> is a field called that way?
[14:23:18] <pycode> a value coming from the form ?
[14:24:11] <pycode> maybe i do not know that django lookup can work on values too
[14:24:36] <pycode> won_time__1: "notnull" won_time__0: "null"
[14:25:22] <serafeim> these come from the model
[14:25:57] <pycode> so you have a field called created_on on model
[14:26:36] <pycode> but in that case you are assigning created_on --> isnull i need to customize that isnull checking if created is 1 or 0
[14:26:47] <pycode> Ã¹let me read again what you said
[14:34:01] *** Joins: slav0nic (slav0nic@python.su)
[14:44:16] <pycode> cant make it works
[14:48:13] *** Joins: sandeepk (~sandeepk@202.14.122.154)
[14:50:41] *** chowmein__ is now known as chowmeined
[14:54:45] *** Quits: diverdud1 (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 260 seconds)
[15:03:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 265 seconds)
[15:07:29] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: No route to host)
[15:12:43] *** Quits: pycode (~pycode@2001:b07:5d28:551:3d44:7d5b:1572:1a91) (Ping timeout: 252 seconds)
[15:13:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[15:20:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:22:20] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[15:25:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[15:33:59] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:35:23] *** Joins: zircona (~zircona@c-73-207-108-132.hsd1.ga.comcast.net)
[15:38:56] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:01:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:03:39] *** Joins: fikran (~fikran@user/fikran)
[16:07:05] *** Quits: sandeepk (~sandeepk@202.14.122.154) (Ping timeout: 260 seconds)
[16:10:23] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:13:58] *** Joins: sandeepk (~sandeepk@202.14.122.154)
[16:15:23] *** Joins: pycode (~pycode@2001:b07:5d28:551:435d:a4b3:745c:523a)
[16:16:50] *** Joins: Elodin (~weechat@user/elodin)
[16:27:46] <w0rp> moldy: I ended up undoing my idea anyway.
[16:27:58] <w0rp> I'm just going to run `manage.py check` in a shell script separate from the test suite in CI.
[16:28:16] <w0rp> If `check` fails, no PR merge for that dev.
[16:29:37] <w0rp> It all came about because servers have a slightly different settings file from dev machines, so we need to run `check` with the server settings in CI to detect problems that will break on deployment.
[16:40:23] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[16:42:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (lead.libera.chat (Nickname regained by services)))
[16:42:07] *** vinleod is now known as vdamewood
[17:04:15] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:15:53] *** Quits: kevr (~kevr@user/kevr) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:16:12] *** Joins: kevr (~kevr@user/kevr)
[17:19:43] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[17:29:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:42:51] *** Joins: Elodin (~weechat@user/elodin)
[17:53:25] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[17:56:20] *** Quits: pradhvan (~pradhvan@dgplug/pradhvan) (Quit: Leaving)
[18:01:21] *** Joins: audiocat (~audio@2603-8081-1800-1546-9f5a-e373-8203-155a.res6.spectrum.com)
[18:11:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:13:00] *** Joins: fikran (~fikran@user/fikran)
[18:14:43] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 265 seconds)
[18:17:52] *** Joins: node1 (~node1@user/node1)
[18:17:52] *** Quits: node1 (~node1@user/node1) (Client Quit)
[18:18:23] *** Joins: node1 (~node1@user/node1)
[18:19:22] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:27:55] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 252 seconds)
[18:28:54] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[18:29:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:38:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[18:39:51] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 265 seconds)
[18:40:47] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[18:41:18] *** Quits: zircona (~zircona@c-73-207-108-132.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[18:50:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:50:31] *** Quits: beterraba (~beterraba@86.107.21.198) (Ping timeout: 252 seconds)
[18:52:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[18:52:40] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[18:52:44] *** Joins: beterraba (~beterraba@86.107.21.198)
[18:54:01] *** Quits: sandeepk (~sandeepk@202.14.122.154) (Ping timeout: 265 seconds)
[18:56:02] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:58:51] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:02:30] *** Joins: cellofellow (~user@68.69.167.233)
[19:03:35] <cellofellow> is there a way to set response timeouts?
[19:05:56] *** Joins: djapo (~archangel@user/djapo)
[19:07:24] *** Quits: beterraba (~beterraba@86.107.21.198) (Ping timeout: 265 seconds)
[19:08:43] <Rikem> I think that will need doing on either the web server or application server
[19:13:48] <cellofellow> ok, I think I tried to find some stuff like that for gunicorn without much luck; I'll look again
[19:14:15] <cellofellow> There is a timeout in the load balancer but that doesn't kill running (blocked) processes
[19:22:41] *** Joins: jasonbra- (jasonbraga@user/jasonbraganza)
[19:22:55] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Ping timeout: 252 seconds)
[19:25:55] *** Quits: pycode (~pycode@2001:b07:5d28:551:435d:a4b3:745c:523a) (Ping timeout: 265 seconds)
[19:27:42] *** Joins: sandeepk (~sandeepk@202.14.122.154)
[19:30:17] *** Quits: UnnamedBeer (~UnnamedBe@117.red-83-46-8.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[19:38:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:38:58] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:42:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[19:43:55] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:55:58] *** Joins: rickybob_ (rickybob@gateway/vpn/protonvpn/rickybob)
[19:56:14] *** rickybob_ is now known as rickybob
[20:01:06] *** Joins: stdout (~stdout@216.163.21.11)
[20:03:37] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[20:08:31] *** Joins: bss (bss@rie.incorporeal.org)
[20:14:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[20:16:41] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:20:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[20:22:21] *** Joins: fikran (~fikran@user/fikran)
[20:25:28] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Quit: Leaving)
[20:41:26] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[20:43:06] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[20:56:27] *** Joins: beterraba (~beterraba@185.183.107.221)
[21:08:34] *** Quits: kydd (~kydd@212.237.178.212) (Read error: Connection reset by peer)
[21:14:44] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[21:17:43] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[21:18:23] *** Quits: beterraba (~beterraba@185.183.107.221) (Ping timeout: 265 seconds)
[21:20:29] *** Quits: rje (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzzâ€¦)
[21:34:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[21:45:38] *** Joins: dodo__ (~dodo@user/dodo)
[21:46:21] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 245 seconds)
[21:49:45] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:51:07] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[21:52:03] *** Quits: sandeepk (~sandeepk@202.14.122.154) (Remote host closed the connection)
[21:53:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[21:54:32] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[21:58:01] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[21:58:41] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:58:54] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[22:01:23] *** Joins: rje (~rje@65.141.156.170)
[22:03:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[22:10:10] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:10:45] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:13:14] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:20:49] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[22:22:14] *** Joins: beterraba (~beterraba@185.183.107.213)
[22:25:14] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 265 seconds)
[22:27:03] *** Joins: rje (~rje@65.141.156.170)
[22:29:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[22:29:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[22:31:42] *** Joins: fikran (~fikran@user/fikran)
[22:33:26] *** Joins: djapo (~archangel@user/djapo)
[22:34:09] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[22:35:19] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[22:45:25] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:45:43] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[22:58:10] *** saschi_ is now known as saschi
[23:02:08] *** Quits: gitly2 (~gitly@85.255.234.86) (Ping timeout: 246 seconds)
[23:02:16] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[23:02:55] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[23:04:20] *** Joins: gitly2 (~gitly@85.255.233.120)
[23:05:52] *** Quits: bhoman (~bhoman@pool-74-102-26-111.nwrknj.fios.verizon.net) (Remote host closed the connection)
[23:09:00] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[23:10:27] *** dodo__ is now known as dodo
[23:12:16] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[23:18:30] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[23:19:12] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[23:26:04] *** Joins: carljm (~carljm@163.114.132.5)
[23:31:21] *** Quits: beterraba (~beterraba@185.183.107.213) (Ping timeout: 245 seconds)
[23:44:47] *** Joins: ssb1067 (~ssb10@ool-18bd347f.dyn.optonline.net)
[23:45:21] *** Quits: ssb1067 (~ssb10@ool-18bd347f.dyn.optonline.net) (Client Quit)
[23:46:19] *** Joins: ssb1048 (~ssb10@ool-18bd347f.dyn.optonline.net)
[23:46:58] *** Quits: ssb1048 (~ssb10@ool-18bd347f.dyn.optonline.net) (Client Quit)
[23:47:13] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[23:47:35] *** Joins: zircona (~zircona@c-73-122-128-26.hsd1.ga.comcast.net)
[23:49:52] *** Joins: pycode (~pycode@2001:b07:5d28:551:c857:78db:bc04:4a38)
[23:57:55] <stdout> how can i generate a random to saved in a model that is unique without querying if the rand has already been used? is it even possible?
[23:59:31] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
