[00:06:00] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) ()
[00:09:31] *** Quits: anotheruser (~user@50.228.255.19) (Remote host closed the connection)
[00:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:16:45] *** Joins: fikran (~fikran@user/fikran)
[00:17:15] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:27:05] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 260 seconds)
[00:29:50] *** Quits: lack (~lack@user/lack) (Ping timeout: 265 seconds)
[00:31:38] *** Joins: lack (~lack@user/lack)
[00:35:08] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:41:02] *** Joins: sheldon (~sheldon@user/sheldon)
[00:46:24] *** Quits: vs^ (~vsl@68.101.54.227) (Remote host closed the connection)
[00:47:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[00:47:35] *** Joins: independent_ (~independe@95.144.68.39)
[00:50:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[00:50:34] *** Joins: independent_ (~independe@95.144.68.39)
[00:53:39] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:10:06] *** Joins: Torr (~Torr@user/torr)
[01:11:50] *** Quits: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[01:13:14] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[01:22:22] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[01:24:41] *** Joins: hexfive (~eric@50.35.83.177)
[01:28:18] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[01:42:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:53:50] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[01:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[01:55:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:05:54] *** Joins: k0ta (~k0ta@151.210.172.18)
[02:16:47] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:17:08] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[02:20:02] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 245 seconds)
[02:21:55] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:d535:196b:a57:3722) (Quit: WeeChat 3.2.1)
[02:24:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:26:08] *** Joins: fikran (~fikran@user/fikran)
[02:27:53] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[02:28:25] *** Quits: jinks (~jinks@2001:470:1f18:3aa:1d8:0:1c:34ac) (Ping timeout: 260 seconds)
[02:30:45] *** Joins: LiftLeft (~LiftLeft@172.98.92.75)
[02:32:24] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9)
[02:34:37] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com) (Ping timeout: 245 seconds)
[02:35:27] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:37:07] *** Joins: jinks (~jinks@104.161.79.77)
[02:37:54] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[02:41:12] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[02:46:24] *** Quits: DM43078421 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[02:46:43] *** Joins: DM43078421 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[02:51:46] *** Quits: darkapex (~darkapex@user/darkapex) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:54:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[02:57:31] *** Joins: darkapex (~darkapex@user/darkapex)
[02:58:52] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Remote host closed the connection)
[03:00:14] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[03:05:24] *** Joins: moto (~moto@user/moto)
[03:09:16] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Write error: Connection reset by peer)
[03:09:16] *** Quits: mickey0 (~user@user/mickey) (Write error: Connection reset by peer)
[03:09:16] *** Quits: thing (~thing@user/thing) (Write error: Connection reset by peer)
[03:09:16] *** Quits: ninjin (~ninjin@user/ninjin) (Write error: Connection reset by peer)
[03:09:16] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Write error: Broken pipe)
[03:10:23] *** Joins: holgersson (~quassel@user/holgersson)
[03:14:03] *** Joins: Snyp (~Snyp@49.207.220.4)
[03:19:21] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:26:55] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:31:50] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:11] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:57] *** Joins: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[03:38:42] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[03:39:07] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[03:43:37] *** Joins: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[03:47:24] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Read error: Connection reset by peer)
[03:54:51] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[03:55:19] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[03:58:05] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:00:42] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[04:05:09] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:05:23] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 265 seconds)
[04:10:22] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[04:11:28] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:17:26] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[04:22:01] *** Joins: yoonkn (~user@175.197.208.79)
[04:23:07] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:23:50] *** Joins: Snyp (~Snyp@49.207.220.4)
[04:24:24] *** Quits: Snyp (~Snyp@49.207.220.4) (Client Quit)
[04:24:51] *** Joins: Snyp (~Snyp@49.207.220.4)
[04:28:28] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[04:33:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:35:30] *** Joins: fikran (~fikran@user/fikran)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[05:05:55] *** Quits: src (~src@user/src) (Ping timeout: 260 seconds)
[05:08:56] *** Joins: zys (~zys@61.140.185.86)
[05:16:10] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:24:47] *** Joins: sheldon (~sheldon@user/sheldon)
[05:26:02] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com)
[05:29:07] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9) (Ping timeout: 252 seconds)
[05:29:40] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 252 seconds)
[05:33:03] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2)
[05:36:44] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.2)
[05:53:17] *** Joins: Snyp (~Snyp@49.207.220.4)
[05:54:28] *** Quits: Snyp (~Snyp@49.207.220.4) (Client Quit)
[05:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[05:54:51] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:02:40] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 252 seconds)
[06:04:46] *** Joins: ninjin (~ninjin@user/ninjin)
[06:05:02] *** Joins: Snyp (~Snyp@49.207.220.4)
[06:10:16] *** Joins: codebam (~codebam@user/codebam)
[06:10:51] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:12:03] *** Joins: kiril (~kiril@85.91.153.163)
[06:15:17] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:17:36] *** Joins: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2)
[06:19:19] *** Joins: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-0100.inf6.spectrum.com)
[06:19:43] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[06:24:30] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[06:25:54] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:33:46] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:42:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:43:31] *** Joins: Snyp (~Snyp@49.207.220.4)
[06:44:52] *** Joins: fikran (~fikran@user/fikran)
[06:54:10] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:11:52] *** Quits: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-0100.inf6.spectrum.com) (Quit: WeeChat 3.2)
[07:13:18] *** Quits: KekSi (~KekSi@x4db480f6.dyn.telefonica.de) (Ping timeout: 260 seconds)
[07:14:59] *** Joins: gggp (~textual@111.63.44.6)
[07:17:20] *** Joins: KekSi (~KekSi@x4db9a5e0.dyn.telefonica.de)
[07:26:51] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:29:56] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[07:34:30] *** Joins: oxum (~oxum@106.203.195.217)
[07:34:46] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[07:36:32] *** Joins: gggp (~textual@60.10.194.45)
[07:37:11] *** Joins: frost (~frost@59.71.242.61)
[07:39:26] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 260 seconds)
[07:44:44] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:28] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[08:01:31] *** Joins: wroathe (~wroathe@user/wroathe)
[08:01:42] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:02:16] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[08:11:32] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2)
[08:18:44] *** Joins: thing (~thing@user/thing)
[08:19:34] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[08:20:49] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[08:21:00] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[08:21:09] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[08:36:48] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[08:37:22] *** Joins: gggp (~textual@60.10.23.169)
[08:38:21] <dostoyevsky2> Is it possible in Go to make the source of a File a byte/string?  And also to make a the destination of a File a byte/string?
[08:42:32] <seebs> No. But you can make io.Reader or Writer from bytes; see bytes.Buffer, etc
[08:47:50] *** Joins: thing (~thing@user/thing)
[08:50:27] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[08:52:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[08:54:15] *** Joins: fikran (~fikran@user/fikran)
[08:54:54] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[08:56:31] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[08:59:41] *** Joins: thing_ (~thing@user/thing)
[09:00:49] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[09:01:19] *** thing_ is now known as thing
[09:17:02] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[09:20:15] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:23:47] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[09:24:18] *** Joins: thing (~thing@user/thing)
[09:26:45] *** Joins: jpw (~jpw@user/jpw)
[09:30:09] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[09:32:36] <dg> dostoyevsky2: depending what interface you need the io/fs abstraction can let you do it, although there's only https://pkg.go.dev/testing/fstest without external code... (there's e.g. https://github.com/psanford/memfs although not used that)
[09:35:56] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:37:25] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[09:44:36] *** Joins: gggp (~textual@111.63.44.6)
[09:49:48] *** Joins: Doraemon (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de)
[09:52:01] *** Quits: neocron (~NeoCron@p200300c4cf3ba70012c3036b63257be6.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:54:17] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[09:54:59] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:03:29] *** AndrewYu is now known as xeroxIRC
[10:03:29] *** xeroxIRC is now known as Guest591
[10:04:00] *** Guest591 is now known as AndrewIRC
[10:10:35] *** Quits: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2) (Quit: Client closed)
[10:11:00] *** Joins: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2)
[10:11:06] *** Quits: zys (~zys@61.140.185.86) (Ping timeout: 260 seconds)
[10:13:32] *** Quits: homarlone (~homarlone@2804:14d:baa3:4341:a4ed:9e92:1eb0:a3e2) (Changing host)
[10:13:32] *** Joins: homarlone (~homarlone@user/homarlone)
[10:19:33] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[10:23:41] *** Joins: shka (~herr@109.231.62.239)
[10:28:41] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[10:29:09] *** Joins: homarlone (~homarlone@user/homarlone)
[10:32:41] *** Joins: mrig (~mrig@user/mrig)
[10:36:10] *** Joins: gggp (~textual@60.10.23.169)
[10:36:48] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[10:47:39] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:01:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:03:22] *** Quits: jespada (~jespada@90.254.245.194) (Ping timeout: 260 seconds)
[11:03:38] *** Joins: fikran (~fikran@user/fikran)
[11:06:02] *** Joins: jespada (~jespada@90.254.245.194)
[11:15:43] *** Joins: GalzuFromQ (~GalzuFrom@c-76-31-61-239.hsd1.tx.comcast.net)
[11:15:59] *** Parts: GalzuFromQ (~GalzuFrom@c-76-31-61-239.hsd1.tx.comcast.net) ()
[11:17:46] *** Joins: oxum (~oxum@106.203.195.217)
[11:19:25] *** Quits: LiftLeft (~LiftLeft@172.98.92.75) (Ping timeout: 265 seconds)
[11:20:31] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[11:21:06] *** Quits: k0ta (~k0ta@151.210.172.18) (Ping timeout: 260 seconds)
[11:22:13] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[11:28:00] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:29:43] *** Joins: oxum (~oxum@106.203.195.217)
[11:34:53] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 265 seconds)
[11:35:19] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[11:35:28] *** Joins: independent_ (~independe@95.144.68.39)
[11:35:51] *** Joins: dcompoze (~dcompoze@5E98D6D9.static.tld.pl)
[11:36:04] *** Quits: dcompoze (~dcompoze@5E98D6D9.static.tld.pl) (Client Quit)
[11:37:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[11:38:31] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[11:42:57] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[11:43:00] *** Joins: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net)
[11:43:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[11:43:28] *** Joins: independent_ (~independe@95.144.68.39)
[11:47:50] *** Quits: svemz (~everest@c-76-126-12-166.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:49:35] *** Joins: svemz (~everest@c-76-126-12-166.hsd1.ca.comcast.net)
[11:50:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[11:50:28] *** Joins: independent_ (~independe@95.144.68.39)
[11:54:44] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[11:55:09] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[11:55:51] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[11:56:27] *** Joins: homarlone (~homarlone@user/homarlone)
[12:03:30] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[12:09:26] *** Quits: cim (~cim@205.185.117.110) (Quit: The Lounge - https://thelounge.chat)
[12:09:54] *** Joins: cim (~cim@205.185.117.110)
[12:12:49] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[12:25:28] *** Quits: Doraemon (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[12:37:47] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[12:43:28] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[12:45:54] *** Joins: someuser (~user@41.46.233.226)
[12:48:42] *** Joins: Everything (~Everythin@37.115.210.35)
[12:49:18] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[12:50:14] *** Quits: someuser (~user@41.46.233.226) (Ping timeout: 260 seconds)
[12:50:24] *** Joins: oxum (~oxum@106.203.195.217)
[12:50:27] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: Either rebooting or something broke.)
[12:50:54] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[12:53:13] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[12:55:10] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[13:04:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:04:29] *** Joins: independent_ (~independe@95.144.68.39)
[13:09:40] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:09:59] *** Joins: independent_ (~independe@95.144.68.39)
[13:11:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[13:11:20] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[13:13:01] *** Joins: fikran (~fikran@user/fikran)
[13:13:02] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[13:14:16] *** Quits: menace (~someone@user/menace) (Quit: menace)
[13:18:06] *** Joins: gggp (~textual@123.113.181.187)
[13:18:42] *** Quits: gggp (~textual@123.113.181.187) (Client Quit)
[13:22:01] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[13:22:45] *** Joins: ddrtns^ (~ddrtns@68.101.54.227)
[13:28:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:28:28] *** Joins: independent_ (~independe@95.144.68.39)
[13:32:40] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:32:58] *** Joins: independent_ (~independe@95.144.68.39)
[13:38:46] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[13:39:26] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[13:45:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[13:49:00] *** Joins: gggp (~textual@111.63.44.6)
[13:51:52] *** Joins: esperegu (~quassel@ip-213-124-221-102.ip.prioritytelecom.net)
[13:54:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[13:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[13:56:50] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:57:23] *** Joins: holgersson (~quassel@user/holgersson)
[13:57:44] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[14:08:08] *** Joins: michelem (~Adium@51.154.167.11)
[14:09:14] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[14:09:20] <michelem> hello folks. In a test I receive an error "rpc error: code = Canceled desc = context canceled". The test is similar to others, but longer (more items). I tried to reduce the items with no success. I don't have any code to explicitly cancel contexts. How can I trace where that cancellation originates?
[14:11:04] <j416> michelem: follow the call path; something that called your function somewhere up the line cancelled it
[14:13:07] <michelem> ok, thank you.
[14:16:20] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[14:17:57] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[14:20:38] *** Quits: esperegu (~quassel@ip-213-124-221-102.ip.prioritytelecom.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:21:52] *** Joins: kayprish (~kayprish@cable-188-2-153-140.dynamic.sbb.rs)
[14:37:20] *** Joins: oxum (~oxum@106.203.195.217)
[14:42:15] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 260 seconds)
[14:43:51] <dostoyevsky2> Will generics make go much slower to compile?
[14:49:50] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:50:19] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[14:54:54] *** Joins: gggp (~textual@111.63.44.6)
[15:14:17] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[15:15:54] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:19:00] *** Joins: oxum (~oxum@106.203.195.217)
[15:20:22] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:20:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:22:23] *** Joins: fikran (~fikran@user/fikran)
[15:23:40] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[15:26:24] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[15:37:11] *** Quits: independent_ (~independe@95.144.68.39) (Read error: Connection reset by peer)
[15:39:25] *** Joins: independent56 (~independe@95.144.68.39)
[15:40:05] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[15:40:54] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[15:44:46] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:56:34] *** Quits: kayprish (~kayprish@cable-188-2-153-140.dynamic.sbb.rs) (Remote host closed the connection)
[16:00:27] *** Joins: gggp (~textual@60.10.23.169)
[16:05:18] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[16:06:08] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:18:22] *** Joins: oxum (~oxum@106.203.195.217)
[16:21:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[16:23:02] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 260 seconds)
[16:23:43] *** Joins: Snyp (~Snyp@49.207.200.242)
[16:25:29] *** Joins: src (~src@user/src)
[16:27:18] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:28:28] *** Joins: anotheruser (~user@41.46.233.226)
[16:34:02] *** Joins: kayprish (~kayprish@cable-188-2-153-140.dynamic.sbb.rs)
[16:43:57] *** Joins: gravelch (~gravelch@36.80.124.239)
[17:11:25] *** Quits: Snyp (~Snyp@49.207.200.242) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[17:15:19] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:15:44] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:16:08] *** Joins: independent56 (~independe@95.144.68.39)
[17:17:11] *** Joins: robs (~rw@2401:c080:1c02:b7b:5400:3ff:fe43:b5cd)
[17:17:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:17:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:20:59] *** Joins: Snyp (~Snyp@49.207.200.242)
[17:23:44] *** Joins: ir0nm4n (~the_ironm@2a02:8084:60a3:cf00:9159:bfde:b9ed:ab2d)
[17:27:16] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[17:28:55] *** Quits: znpy (~znpy@user/znpy) (Remote host closed the connection)
[17:29:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:30:30] *** Joins: weechat1 (~weechat@188.166.44.58)
[17:31:46] *** Joins: fikran (~fikran@user/fikran)
[17:33:58] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Ping timeout: 260 seconds)
[17:46:52] *** Joins: znpy (~znpy@user/znpy)
[17:49:26] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[17:49:50] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[17:50:03] <lazyreader> dostoyevsky2 impossible to say
[17:53:09] *** Joins: independent56 (~independe@95.144.68.39)
[17:53:40] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[17:54:14] *** Joins: Atque (~Atque@user/atque)
[17:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:54:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[17:55:54] *** Parts: pkal (~pkal@2a01:4f8:1c1c:bd2c::1) (Killed buffer)
[18:00:01] *** Joins: frm (~frm@user/frm)
[18:01:50] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[18:02:00] *** Joins: oxum (~oxum@106.203.195.217)
[18:02:09] *** Joins: independent56 (~independe@95.144.68.39)
[18:02:12] *** Quits: ir0nm4n (~the_ironm@2a02:8084:60a3:cf00:9159:bfde:b9ed:ab2d) (Remote host closed the connection)
[18:03:45] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[18:04:00] *** Quits: znpy (~znpy@user/znpy) (Quit: The Lounge - https://thelounge.chat)
[18:04:42] *** Joins: gggp (~textual@123.113.181.187)
[18:06:57] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[18:07:14] *** Quits: gravelch (~gravelch@36.80.124.239) (Ping timeout: 250 seconds)
[18:08:53] *** Joins: gravelch (~gravelch@36.80.124.239)
[18:09:07] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[18:15:14] *** Joins: znpy (~znpy@user/znpy)
[18:15:35] *** Quits: gggp (~textual@123.113.181.187) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:16:19] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:17:45] <Sam> It will be slower. Depends what you mean by "much" though.
[18:18:22] *** Quits: weechat1 (~weechat@188.166.44.58) (Quit: WeeChat 3.2.1)
[18:21:10] *** Joins: duban (uid517682@id-517682.highgate.irccloud.com)
[18:21:21] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[18:21:38] *** Joins: CRThaze (~weechat@188.166.44.58)
[18:23:54] *** Quits: Snyp (~Snyp@49.207.200.242) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:24:07] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[18:27:52] *** Joins: Snyp (~Snyp@49.207.200.242)
[18:28:45] <dostoyevsky2> Sam: I guess we might not see it in the beginning, only when a lot of standard packages begin to heavily rely on it
[18:29:27] <dostoyevsky2> Can I call a goroutine a thread?
[18:30:11] *** Quits: Snyp (~Snyp@49.207.200.242) (Client Quit)
[18:33:33] *** Joins: szilagyi (~ptr@catv-178-48-153-245.catv.broadband.hu)
[18:34:02] <duban> dostoyevsky2:  I think they are more comparable to green threads
[18:34:47] <dostoyevsky2> First time using race detector to make threaded code safe: https://play.golang.org/p/zJ0g1OfIXUV
[18:37:03] <dostoyevsky2> yeah, I think worker is the term that's usually used on golang.. not thread
[18:37:51] <bpalmer> goroutine , really.
[18:38:02] <bpalmer> a goroutine is a goroutine.
[18:41:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[18:42:06] *** Quits: gravelch (~gravelch@36.80.124.239) (Read error: Connection reset by peer)
[18:46:04] *** Quits: szilagyi (~ptr@catv-178-48-153-245.catv.broadband.hu) (Quit: Leaving...)
[18:46:34] *** Joins: ptr (~ptr@catv-178-48-153-245.catv.broadband.hu)
[18:47:34] *** Joins: gravelch (~gravelch@36.80.124.239)
[18:47:57] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[18:48:19] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:49:33] <dostoyevsky2> I see in compiler explorer that https://godbolt.org/z/T18b7jdM4 `go func() { }()'  calls runtime.newproc(SB) // are these synonymous with goroutines?
[18:52:31] <dostoyevsky2> also sync.Mutex seems to have a biased locking implementation, that only does lockSlow() when you lock across different cpu threads
[18:53:33] <bpalmer> for the most part, you want to let the go runtime and the go standard library worry about threads; just think in terms of (possibly concurrent) goroutines.
[18:54:02] *** Quits: gravelch (~gravelch@36.80.124.239) (Ping timeout: 250 seconds)
[18:55:44] *** Joins: gravelch (~gravelch@36.80.124.239)
[18:58:40] *** Quits: ptr (~ptr@catv-178-48-153-245.catv.broadband.hu) (Remote host closed the connection)
[19:01:03] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[19:05:15] <dostoyevsky2> So how does one figure out a good value for a number of cpu-intensive workers in a worker pool... usually with thread-based models one woule choose somehting like: runtime.NumCPU threads... if you use more, you are going to thrash the cpu caches...
[19:05:20] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:05:39] *** Joins: independent56 (~independe@95.144.68.39)
[19:07:20] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:07:39] <CommunistWolf> empirically, I guess. you might find that n-1 is a better number, so the runtime has space to do its thing, for instance
[19:07:40] *** Joins: independent56 (~independe@95.144.68.39)
[19:08:51] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[19:09:04] <CommunistWolf> nothing particularly wrong with spinning up 10,000 goroutines on a 4-core machine, though. GOMAXPROCS will limit concurrency for you
[19:09:09] <CommunistWolf> parallelism*
[19:10:27] <bpalmer> dostoyevsky2: and as CommunistWolf alludes to, you can certainly build your worker pool based on runtime.GOMAXPROCS()
[19:11:43] <bpalmer> runtime.GOMAXPROCS(0), I should say.
[19:13:32] *** Quits: gravelch (~gravelch@36.80.124.239) (Ping timeout: 250 seconds)
[19:14:12] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com) (Ping timeout: 245 seconds)
[19:14:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:14:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:14:47] *** Joins: wroathe (~wroathe@user/wroathe)
[19:15:05] <dostoyevsky2> Are green threads in golang implemented like: each time you call the standard library, there could be a context switch to another goroutine?  Ideal for handling lots of parallel io in a webserver e.g.
[19:15:11] *** Joins: gravelch (~gravelch@210.16.120.231)
[19:15:42] <CommunistWolf> there could be a context switch at more or less any time, I think it's entirely implementation-dependent
[19:16:15] <CommunistWolf> There's runtime.LockOSThread() if you need some crude control. if you need fine-grained control, you probably want to write it in not-go
[19:17:26] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[19:18:40] <CommunistWolf> I often get myself into trouble in go by thinking of it as "C with garbage collection and green threads". it's just not
[19:19:17] <dostoyevsky2> https://golang.org/doc/go1.14#runtime <- from 1.14 runtime.GOMAXPROCS(0) returned runtime.NumCPU, before it was 1... implying that with green-threads for loops without a function call could deadlock... I guess they also changed the semantics of green threads in case they go over runtime.GOMAXPROCS(0)
[19:19:26] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 260 seconds)
[19:20:05] *** Parts: CommunistWolf (~gulag@user/communistwolf) (The cause of labour is the hope of the world)
[19:20:07] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:21:01] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Read error: Connection reset by peer)
[19:21:55] <bpalmer> I am not sure what the for loop you're thinking of that would deadlock would be.
[19:22:35] <dostoyevsky2> > Goroutines are now asynchronously preemptible. As a result, loops without function calls no longer potentially deadlock the scheduler or significantly delay garbage collection.
[19:23:24] <dostoyevsky2> (From the 1.14 release notes)
[19:24:59] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:26:01] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Remote host closed the connection)
[19:26:34] *** Quits: gravelch (~gravelch@210.16.120.231) (Quit: Lost terminal)
[19:26:55] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:28:01] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Remote host closed the connection)
[19:29:02] *** Joins: LiftLeft (~LiftLeft@172.98.92.55)
[19:37:32] *** Joins: oxum (~oxum@106.203.195.217)
[19:38:15] *** Joins: Compy_ (~compy@user/compy)
[19:38:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[19:41:04] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[19:41:09] *** Joins: fikran (~fikran@user/fikran)
[19:42:37] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[19:44:20] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:44:38] *** Joins: independent56 (~independe@95.144.68.39)
[19:48:50] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:49:10] *** Joins: independent56 (~independe@95.144.68.39)
[19:50:18] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[19:52:36] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[19:53:47] *** Joins: amk (~amk@109.255.169.126)
[19:54:37] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[19:54:42] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[19:55:03] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[19:55:12] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[19:56:02] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:56:55] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Read error: Connection reset by peer)
[19:57:57] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:58:55] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Read error: Connection reset by peer)
[19:59:39] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-212b-81a8-60e0-4eb8.inf6.spectrum.com)
[20:01:25] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-212b-81a8-60e0-4eb8.inf6.spectrum.com) (Remote host closed the connection)
[20:08:03] *** Joins: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com)
[20:09:41] *** Quits: CRThaze (~weechat@188.166.44.58) (Quit: WeeChat 3.2.1)
[20:10:07] *** Joins: CRThaze (~weechat@188.166.44.58)
[20:11:46] *** Parts: gjnoonan_ (sid95422@id-95422.lymington.irccloud.com) ()
[20:13:59] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100a)
[20:20:20] *** Joins: jpw (~jpw@user/jpw)
[20:21:29] *** Joins: gjnoonan (sid95422@id-95422.lymington.irccloud.com)
[20:21:48] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[20:23:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:34:35] *** Quits: CRThaze (~weechat@188.166.44.58) (Quit: WeeChat 3.2.1)
[20:35:09] *** Quits: kayprish (~kayprish@cable-188-2-153-140.dynamic.sbb.rs) (Remote host closed the connection)
[20:37:21] *** Joins: CRThaze (~weechat@188.166.44.58)
[20:38:32] <nevivurn> Yeah, before non-cooperative prevention (some implementations of) spinlocks could soft-deadlock, where the runtime would not detect the deadlock and panic.
[20:38:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[20:38:58] <nevivurn> Among other foot-guns.
[20:39:56] *** Quits: CRThaze (~weechat@188.166.44.58) (Client Quit)
[20:40:25] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[20:41:15] *** Joins: CRThaze (~weechat@188.166.44.58)
[20:41:42] *** Quits: CRThaze (~weechat@188.166.44.58) (Client Quit)
[20:42:24] *** Joins: CRThaze (~weechat@188.166.44.58)
[20:45:44] *** Quits: CRThaze (~weechat@188.166.44.58) (Client Quit)
[20:45:57] *** Joins: CRThaze (~weechat@188.166.44.58)
[20:46:31] <dostoyevsky2> I mean technically you only need cpu threads when you do cpu-intensive work, whereas if you are just sleeping for io most of the time, then you'd better be part of an event-loops... seems like goroutines can detect the workload and schedule them accordingly
[20:50:41] <nevivurn> Yup. When Go sees that a goroutine is going to make a blocking syscall, it removes the goroutine from its M, so another goroutine can be scheduled onto the M.
[20:51:41] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 265 seconds)
[20:51:42] <nevivurn> When the goroutine becomes unblocked, the runtime places it a queue so it can eventually be picked up by an M so it can continue running.
[20:52:03] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[20:52:34] *** Joins: mrig (~mrig@user/mrig)
[20:54:06] *** Joins: independent56 (~independe@51.158.144.31)
[20:56:35] *** Quits: CRThaze (~weechat@188.166.44.58) (Quit: WeeChat 3.2.1)
[20:56:44] *** Joins: CRThaze (~weechat@188.166.44.58)
[21:05:12] *** Joins: independent_ (~independe@95.144.68.39)
[21:07:50] *** Quits: independent56 (~independe@51.158.144.31) (Ping timeout: 260 seconds)
[21:10:48] *** Joins: oxum (~oxum@106.203.195.217)
[21:10:59] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[21:32:52] *** Parts: anotheruser (~user@41.46.233.226) ()
[21:33:01] *** Joins: someuser (~user@41.46.233.226)
[21:33:02] *** Quits: duban (uid517682@id-517682.highgate.irccloud.com) ()
[21:34:27] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[21:34:40] *** Joins: duban (uid517682@id-517682.highgate.irccloud.com)
[21:36:48] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[21:37:54] *** since__ is now known as since
[21:38:48] *** since is now known as since_
[21:46:24] *** Joins: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe)
[21:47:24] *** Joins: andlabs_ (~andlabs@70.107.171.168)
[21:48:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[21:50:17] *** Quits: andlabs (~andlabs@70.107.171.168) (Ping timeout: 252 seconds)
[21:50:32] *** Joins: fikran (~fikran@user/fikran)
[21:51:08] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[21:54:45] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[21:55:09] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:56:46] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[22:01:43] <someuser> hello, what is the best way if i have a byte array to read bytes as int, as big endian or little endian ?
[22:03:12] <fizzie> There's "encoding/binary" in the standard library.
[22:03:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[22:03:42] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Remote host closed the connection)
[22:03:58] <fizzie> The ByteOrder type's low-level functions (Uint{16,32,64}, PutUint{16,32,64}) can be used directly without using the rest of the Reader/Writer style frippery.
[22:05:20] <fizzie> So `binary.BigEndian.Uint32(slice[8:12])` would interpret bytes 8..11 of `slice` (a []byte) as a big-endian 32-bit unsigned integer, for example.
[22:05:45] <fizzie> (Reading literally "as int" is probably not a good idea, given that `int` might be either 32 or 64 bits.)
[22:06:37] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[22:08:34] <someuser> never knew of encoding/binary. Thank you will look at it atm
[22:10:51] *** Joins: codebam (~codebam@user/codebam)
[22:11:12] *** Quits: codebam (~codebam@user/codebam) (Client Quit)
[22:11:25] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[22:13:28] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[22:15:47] *** Joins: codebam (~codebam@user/codebam)
[22:18:13] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[22:18:39] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:19:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:19:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:19:18] *** Joins: wroathe (~wroathe@user/wroathe)
[22:20:31] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[22:20:56] *** Joins: sheldon (~sheldon@user/sheldon)
[22:23:21] *** Quits: duban (uid517682@id-517682.highgate.irccloud.com) ()
[22:23:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[22:24:32] *** Joins: duban (uid517682@id-517682.highgate.irccloud.com)
[22:25:38] *** Quits: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe) (Quit: Reconnecting)
[22:25:53] *** Joins: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe)
[22:27:12] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[22:27:34] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 252 seconds)
[22:28:00] *** Quits: duban (uid517682@id-517682.highgate.irccloud.com) (Client Quit)
[22:28:52] *** Joins: nullp0inter (~nullp0int@64.67.40.244.res-cmts.sell.ptd.net)
[22:30:56] <nullp0inter> is it standard/best practice to pass the http request context to the service layer of an API, or is it standard practice to list out each parameter individually in the controller when it calls the service layer? I can imagine this is one of those personal preference type things, but I can't find any information about it online. I am using echo v4 if that matters
[22:34:48] *** Quits: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247) (Quit: WeeChat 3.2)
[22:38:10] *** Quits: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com) (Quit: leaving)
[22:42:49] *** Quits: fmac (~fmac@2a01:4f9:c011:29a2::2) (Read error: Connection reset by peer)
[22:43:57] *** Joins: fmac (~fmac@2a01:4f9:c011:29a2::2)
[22:44:31] <nevivurn> What do you mean by the first option? Is it like passing a context.WithValue() with the parameters so your service layer can retrieve them with ctx.Value()?
[22:45:34] *** Joins: src (~src@user/src)
[22:47:36] <nullp0inter> nevivurn, yes exactly. I'm seeing a lot of mention of keeping the service layer verbose with each individual parameter that is being passed in, but the context would be much easier
[22:49:59] <nevivurn> nullp0inter: I would recommend against it. It forces you into using interface{}s, which are both difficult to read and error-prone. It's also more explicit and easier to read, both from the caller and the callee side, when it's just a regular old function call and the input parameters are not hidden under the context.
[22:50:02] *** Joins: codebam (~codebam@user/codebam)
[22:50:35] <nullp0inter> nevivurn, yeah i agree, even though i dont want to xD
[22:51:18] <nullp0inter> ty
[22:56:45] *** Joins: homarlone (~homarlone@user/homarlone)
[22:57:51] *** Quits: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe) (Quit: Reconnecting)
[22:58:08] *** Joins: duban[m] (~duban@2001:470:69fc:105::f5fe)
[23:03:32] *** Joins: oxum (~oxum@106.203.195.217)
[23:04:23] *** Quits: duban[m] (~duban@2001:470:69fc:105::f5fe) (Quit: Reconnecting)
[23:04:38] *** Joins: duban[m] (~duban@2001:470:69fc:105::f5fe)
[23:05:54] *** Joins: Guest23 (~Guest23@216.106.142.65)
[23:06:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:06:15] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:06:15] *** Joins: wroathe (~wroathe@user/wroathe)
[23:06:15] *** Joins: temp123123412 (~temp12312@216.106.142.65)
[23:06:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[23:06:36] *** Quits: Guest23 (~Guest23@216.106.142.65) (Client Quit)
[23:06:38] *** Quits: temp123123412 (~temp12312@216.106.142.65) (Remote host closed the connection)
[23:07:42] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[23:08:34] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 260 seconds)
[23:09:02] *** Joins: duban (uid517682@id-517682.highgate.irccloud.com)
[23:14:04] *** Quits: duban[m] (~duban@2001:470:69fc:105::f5fe) (Quit: issued !quit command)
[23:15:28] *** Quits: duban (uid517682@id-517682.highgate.irccloud.com) ()
[23:16:53] *** Quits: ddrtns^ (~ddrtns@68.101.54.227) (Remote host closed the connection)
[23:18:07] *** Joins: duban (~duban@2001:470:69fc:105::f5fe)
[23:19:19] *** Quits: nullp0inter (~nullp0int@64.67.40.244.res-cmts.sell.ptd.net) (Quit: Leaving)
[23:19:21] *** Joins: Guest8642 (~Guest86@216.106.142.65)
[23:19:36] *** Quits: Guest8642 (~Guest86@216.106.142.65) (Client Quit)
[23:27:12] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[23:31:02] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:49:33] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[23:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[23:55:12] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[23:56:03] *** Joins: tdsltl^ (~tdsltl@68.101.54.227)
[23:56:27] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[23:57:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:59:54] *** Joins: fikran (~fikran@user/fikran)
