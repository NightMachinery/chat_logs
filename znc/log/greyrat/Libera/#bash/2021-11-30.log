[00:00:01] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[00:00:19] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[00:00:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[00:00:47] <phogg> see also 'set -h'
[00:00:48] <CrtxReavr> Looking at tcsh(1) on FreeBSD. . .
[00:01:06] <CrtxReavr> Bill Joy is the original author of csh. . .
[00:01:20] <CrtxReavr> Filename completion was added in '81.
[00:01:48] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:02:38] *** Quits: esselfe (~steph@user/esselfe) (Quit: done)
[00:03:09] <phogg> wikipedia says csh was 1978
[00:04:32] *** Joins: esselfe (~steph@user/esselfe)
[00:06:36] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[00:06:42] <hejux> very interesting : https://dev.to/meleu/checking-if-an-array-contains-an-element-in-bash-5bn1
[00:06:54] <pyeverything> ls: cannot access '*.pt': No such file or directory for $ ls -l *.pt | wc -l OMGOMG --> not so accurate -- I want to list all directories in the root dir and tell how many .pt files each of them have in total
[00:06:58] <hejux> this is the best
[00:07:22] <Soliton> !faq empty
[00:07:22] <greybot> https://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files, or count how many there are?
[00:07:56] <CrtxReavr> If a directory has a shit-ton of files, you can break wildcards.
[00:08:01] <CrtxReavr> Though, there is a kludge.
[00:08:19] *** Quits: TomyWork (~TomyLobo@p200300e80f0f270088f808e325e1c9fc.dip0.t-ipconnect.de) (Quit: Leaving)
[00:08:27] <hejux> that is better than `local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1`
[00:08:46] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:08:46] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:09:19] <hejux> i mean, faster
[00:09:51] <hejux> Soliton: what do you think
[00:09:51] *** Joins: csm3105 (~csm3105@47.62.122.10)
[00:11:38] <Soliton> use an associative array instead if you need to check membership all the time.
[00:12:43] <hejux> ohh right!
[00:14:46] *** Quits: DocNostril (~DrNostril@82.102.21.197) (Quit: Smell ya later~~)
[00:17:01] *** Joins: rgrinberg (~textual@200.5.63.76)
[00:17:08] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[00:17:28] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Client Quit)
[00:17:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:18:12] <larryv> # joinByChar() { local IFS="$1"; shift; echo "$*"; }; elementInArray() { local element="$1"; shift; local array=("$@"); [[ "$element" == @($(joinByChar '|' "${array[@]//|/\\|}")) ]]; }; arr=('*'); elementInArray foo "${arr[@]}"; echo "$?"
[00:18:13] <shbot> larryv: 0
[00:18:25] <larryv> sad trombone
[00:22:10] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:24:52] *** Parts: Vartaxy (~taxy@p200300ea970f64b000a65fa019bf6d68.dip0.t-ipconnect.de) ()
[00:25:44] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[00:26:19] *** Joins: voices- (~voices_@84.238.197.28)
[00:27:19] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[00:27:45] *** Joins: prompt32 (~kapad@user/kapad)
[00:31:45] *** Quits: marw (4988ea31b1@knopi.disroot.org) (Remote host closed the connection)
[00:32:05] *** Quits: DrNostril (~DrNostril@82.102.21.197) (Quit: Smell ya later~~)
[00:32:38] *** Quits: prompt32 (~kapad@user/kapad) (Client Quit)
[00:33:02] *** Joins: prompt32 (~kapad@user/kapad)
[00:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:39:45] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[00:40:08] <hejux> larryv: what do you mean
[00:40:28] <hejux> lol
[00:40:40] <hejux> bad too bad
[00:41:48] *** Quits: peve (~peve@ucb-np2-234.colorado.edu) (Quit: Leaving)
[00:43:02] <hejux> larryv: english please. you mean it does not work when array has '*'
[00:43:36] *** Joins: Csm319_ (~csm3105@47.62.122.10)
[00:44:07] <larryv> hejux: the code you linked is not robust. it can produce incorrect results if elements of the searched array contain pattern characters
[00:44:47] <hejux> removed
[00:44:54] <hejux> thanks for the heads up
[00:45:09] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[00:45:46] <rendar> how to get "b/c" from "a/b/c" ? because `${var%/*}` instead gives me "a/b" :|
[00:46:24] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[00:46:33] <larryv> # var=a/b/c; printf '%s' "${var#*/}"
[00:46:34] <shbot> larryv: b/c
[00:46:48] *** Joins: prompt32 (~kapad@user/kapad)
[00:47:14] *** Quits: csm3105 (~csm3105@47.62.122.10) (Ping timeout: 252 seconds)
[00:47:28] <rendar>  # var=a/b/c/d/e/f; printf '%s' "${var#*/}"
[00:47:34] <rendar> # var=a/b/c/d/e/f; printf '%s' "${var#*/}"
[00:47:34] <shbot> rendar: b/c/d/e/f
[00:47:42] <rendar> it seems to work, thanks..
[00:47:57] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:48:22] *** Quits: roadie (~user@2a02:8108:ec0:1427:c0d3:dc09:809f:9fd0) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[00:51:28] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[00:52:11] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 252 seconds)
[00:52:47] *** Joins: hackers (~remote@user/hackers)
[00:53:08] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[00:53:59] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[00:54:39] *** Quits: tinystoat (~squeek@user/tinystoat) (Remote host closed the connection)
[00:54:48] *** Joins: tinystoat (~squeek@user/tinystoat)
[00:55:29] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[00:57:10] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[01:05:22] *** Joins: zro (~zro@58.128-255-62.static.virginmediabusiness.co.uk)
[01:10:13] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[01:10:14] *** Quits: esselfe (~steph@user/esselfe) (*.net *.split)
[01:10:14] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[01:10:14] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[01:10:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[01:10:14] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[01:10:14] *** Quits: bertptrs (~quassel@user/bertptrs) (*.net *.split)
[01:10:14] *** Quits: dreinull3 (~dreinull@2a01:4f8:1c1c:8981::1) (*.net *.split)
[01:10:14] *** Quits: l4yer (~l4yer@2a07-a880-3101-1051-a922-bb49-135a-4393.pool6.ovpn.com) (*.net *.split)
[01:10:14] *** Quits: xx (~xx@user/xx) (*.net *.split)
[01:10:14] *** Quits: linnet (~linnet@149.155.223.155) (*.net *.split)
[01:10:14] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[01:10:14] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (*.net *.split)
[01:10:14] *** Quits: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (*.net *.split)
[01:10:14] *** Quits: zebrag (~chris@user/zebrag) (*.net *.split)
[01:10:14] *** Quits: at_work (~at_work@user/at-work/x-5282331) (*.net *.split)
[01:10:14] *** Quits: a1 (~ekaj@user/ekaj) (*.net *.split)
[01:10:14] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (*.net *.split)
[01:10:14] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[01:10:14] *** Quits: noord (~noord@user/noord) (*.net *.split)
[01:10:14] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (*.net *.split)
[01:10:14] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (*.net *.split)
[01:10:14] *** Quits: dsrt^ (~dsrt@68.101.58.90) (*.net *.split)
[01:10:14] *** Quits: cdown (~cdown@163.114.131.1) (*.net *.split)
[01:10:14] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (*.net *.split)
[01:10:14] *** Quits: polve (~polve@twcitalia/polve) (*.net *.split)
[01:10:14] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (*.net *.split)
[01:10:14] *** Quits: tirnanog (~tirnanog@user/tirnanog) (*.net *.split)
[01:10:14] *** Quits: earnest (~earnest@user/earnestly) (*.net *.split)
[01:10:14] *** Quits: tex (~super@user/dix) (*.net *.split)
[01:10:14] *** Quits: deetwelve (~deetwelve@user/deetwelve) (*.net *.split)
[01:10:14] *** Quits: maledictium (~crux@bl14-67-155.dsl.telepac.pt) (*.net *.split)
[01:10:14] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[01:10:14] *** Quits: lachesis (~lachesis@user/lachesis) (*.net *.split)
[01:10:14] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (*.net *.split)
[01:10:14] *** Quits: Csm319_ (~csm3105@47.62.122.10) (*.net *.split)
[01:10:15] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[01:10:15] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (*.net *.split)
[01:10:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (*.net *.split)
[01:10:15] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (*.net *.split)
[01:10:15] *** Quits: hata (~hata@hata.moe) (*.net *.split)
[01:10:15] *** Quits: sbodin (~Android@185.12.224.209) (*.net *.split)
[01:10:15] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (*.net *.split)
[01:10:15] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (*.net *.split)
[01:10:15] *** Quits: justache (~justache@user/justache) (*.net *.split)
[01:10:15] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (*.net *.split)
[01:10:15] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[01:10:15] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (*.net *.split)
[01:10:15] *** Quits: YaoNai (~YaoNai@user/yaonai) (*.net *.split)
[01:10:15] *** Quits: wuseman (~wuseman@user/wuseman) (*.net *.split)
[01:10:15] *** Quits: ChmEarl (~chmearl@user/chmearl) (*.net *.split)
[01:10:15] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[01:10:15] *** Quits: sublim20 (~sublim20@user/sublim20) (*.net *.split)
[01:10:15] *** Quits: eleventh (~eleventh@143.131.13.208) (*.net *.split)
[01:10:15] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (*.net *.split)
[01:10:15] *** Quits: superboot (~agentgasm@user/superboot) (*.net *.split)
[01:10:15] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (*.net *.split)
[01:10:15] *** Quits: lorimer (~lorimer@user/lorimer) (*.net *.split)
[01:10:15] *** Quits: seninha (~seninha@user/seninha) (*.net *.split)
[01:10:15] *** Quits: timj (~timj@user/timj) (*.net *.split)
[01:10:15] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[01:10:15] *** Quits: ztx (~ztx@user/ztx) (*.net *.split)
[01:10:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (*.net *.split)
[01:10:15] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[01:10:15] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[01:10:15] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[01:10:15] *** Quits: Camusensei (~Camusense@megaman.thican.net) (*.net *.split)
[01:10:15] *** Quits: ccl (ccl@shell.xshellz.com) (*.net *.split)
[01:10:15] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[01:10:15] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[01:10:15] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[01:10:15] *** Quits: Tadgy (~tadgy@slackware.uk/founder/tadgy) (*.net *.split)
[01:10:15] *** Quits: modin (~modin@user/modin) (*.net *.split)
[01:10:15] *** Quits: haro (beau@saweet.net) (*.net *.split)
[01:10:16] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (*.net *.split)
[01:10:16] *** Quits: Guest7716 (az@stable.bnc.by.bnc4you.xyz) (*.net *.split)
[01:10:16] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[01:10:16] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[01:10:16] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[01:10:16] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (*.net *.split)
[01:10:16] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[01:10:16] *** Quits: sdu (~doo@185.44.146.165) (*.net *.split)
[01:10:16] *** Quits: itachi19 (~itachi19@46.232.210.60) (*.net *.split)
[01:10:16] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (*.net *.split)
[01:10:16] *** Quits: lopid (~lopid@user/lopid) (*.net *.split)
[01:10:16] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (*.net *.split)
[01:10:16] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (*.net *.split)
[01:10:16] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[01:10:16] *** Quits: luva (~luva@45.141.152.44) (*.net *.split)
[01:10:16] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (*.net *.split)
[01:10:16] *** Quits: nahcetan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[01:10:16] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (*.net *.split)
[01:10:16] *** Quits: waxfire (~waxfire@65.119.2.240) (*.net *.split)
[01:10:16] *** Quits: modobasico (~modobasic@2001:470:69fc:105::1:1bc) (*.net *.split)
[01:10:16] *** Quits: td001 (~td001@172.245.134.58) (*.net *.split)
[01:10:16] *** Quits: randm (~randm@user/randm) (*.net *.split)
[01:10:16] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (*.net *.split)
[01:10:16] *** Quits: Noventicx1 (~Noventicx@crux.uberspace.de) (*.net *.split)
[01:10:16] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[01:10:16] *** Quits: hubvu (sid495858@user/hubvu) (*.net *.split)
[01:10:16] *** Quits: ljharb (sid43720@user/ljharb) (*.net *.split)
[01:10:16] *** Quits: mongrel (uid508343@id-508343.ilkley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[01:10:17] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[01:10:17] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[01:10:17] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[01:10:17] *** Quits: led_belly (~led_belly@5.180.62.139) (*.net *.split)
[01:10:17] *** Quits: moviuro (~moviuro@car.popho.be) (*.net *.split)
[01:10:17] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (*.net *.split)
[01:10:17] *** Quits: acegalla- (~Ace@71-33-215-114.hlrn.qwest.net) (*.net *.split)
[01:10:17] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (*.net *.split)
[01:10:17] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[01:10:17] *** Quits: gordonfish (~gordonfis@user/gordonfish) (*.net *.split)
[01:10:17] *** Quits: fsg (^^@2600:3c00::f03c:92ff:fec6:da18) (*.net *.split)
[01:10:17] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (*.net *.split)
[01:10:17] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[01:10:17] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (*.net *.split)
[01:10:17] *** Quits: geirha (~geirha@user/geirha) (*.net *.split)
[01:10:17] *** Quits: dionys (dionys@user/dionys) (*.net *.split)
[01:10:17] *** Quits: son0p (~ff@181.136.122.143) (*.net *.split)
[01:10:17] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (*.net *.split)
[01:10:17] *** Quits: libsys (~libsys@186.105.139.10) (*.net *.split)
[01:10:17] *** Quits: damyan (damyan@mail.0x4711.org) (*.net *.split)
[01:10:17] *** Quits: Darkfoe (sid402081@id-402081.helmsley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: int (~int@0x4.cx) (*.net *.split)
[01:10:17] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (*.net *.split)
[01:10:17] *** Quits: k-man (~jason@user/k-man) (*.net *.split)
[01:10:17] *** Quits: cim (~cim@205.185.117.110) (*.net *.split)
[01:10:17] *** Quits: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[01:10:17] *** Quits: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[01:10:17] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: invra (~invra@mail.aletheianature.es) (*.net *.split)
[01:10:17] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (*.net *.split)
[01:10:17] *** Quits: travisghansen (~travisgha@192.74.130.86) (*.net *.split)
[01:10:17] *** Quits: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com) (*.net *.split)
[01:10:17] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (*.net *.split)
[01:10:17] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[01:10:17] *** Quits: twkm (twkm@rfc1459.net) (*.net *.split)
[01:10:17] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[01:10:17] *** Quits: cryptonector (~nico@24.28.108.183) (*.net *.split)
[01:10:17] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[01:10:17] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (*.net *.split)
[01:10:17] *** Quits: unixman (~aunixman@209.165.134.7) (*.net *.split)
[01:10:17] *** Quits: compuguy (ahall@user/compuguy) (*.net *.split)
[01:10:17] *** Quits: Grems (~grems@194.19.73.77) (*.net *.split)
[01:10:17] *** Quits: b0b (~bob@user/b0b) (*.net *.split)
[01:10:18] *** Quits: osse (~osse@zsh/user/osse) (*.net *.split)
[01:10:18] *** Quits: Razva (sid17541@user/razva) (*.net *.split)
[01:10:18] *** Quits: termos (sid18647@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: kenyon (sid496813@uxbridge.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: odc (sid197788@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: guardian (~guardian@planet-d.net) (*.net *.split)
[01:10:18] *** Quits: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com) (*.net *.split)
[01:10:18] *** Quits: thib (~thib@wikimedia/Thibaut120094) (*.net *.split)
[01:10:18] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[01:10:18] *** Quits: xD- (~|_|@194.5.249.141) (*.net *.split)
[01:10:18] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (*.net *.split)
[01:10:18] *** Quits: sjs (~sjs@user/sjs) (*.net *.split)
[01:10:18] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[01:10:18] *** Quits: bwe (~bwe@2a01:4f8:1c1c:4878::2) (*.net *.split)
[01:10:18] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (*.net *.split)
[01:10:18] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (*.net *.split)
[01:10:18] *** Quits: supernov1h (~supernova@mail.ijk.nz) (*.net *.split)
[01:10:18] *** Quits: abrotman (~abrotman@user/abrotman) (*.net *.split)
[01:10:18] *** Quits: dawg_ (dirtydawg@triton.blinkenshell.org) (*.net *.split)
[01:10:18] *** Quits: cardtrick (~cardtrick@40.ip-192-99-166.net) (*.net *.split)
[01:10:18] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (*.net *.split)
[01:10:18] *** Quits: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de) (*.net *.split)
[01:10:18] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[01:10:18] *** Quits: jramsay (~lack@user/lack) (*.net *.split)
[01:10:18] *** Quits: guifipedro_ (~quassel@207.188.174.249) (*.net *.split)
[01:10:18] *** Quits: brw (~bas@haring.bas.sh) (*.net *.split)
[01:10:18] *** Quits: FoodMan_ (~glucose@user/foodman) (*.net *.split)
[01:10:18] *** Quits: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (*.net *.split)
[01:10:18] *** Quits: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[01:10:18] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (*.net *.split)
[01:10:18] *** Quits: lockywol- (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (*.net *.split)
[01:10:18] *** Quits: dysfigured (~dfg@li490-89.members.linode.com) (*.net *.split)
[01:10:18] *** Quits: alz (~alzee@157.136.233.35.bc.googleusercontent.com) (*.net *.split)
[01:10:18] *** Quits: azerty (~azerty@user/badwolf) (*.net *.split)
[01:10:18] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (*.net *.split)
[01:10:18] *** Quits: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[01:10:18] *** Quits: relight (~relight@user/relight) (*.net *.split)
[01:10:19] *** Quits: bertieb (~bertieb@217.155.39.147) (*.net *.split)
[01:10:19] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[01:10:19] *** Quits: selckin (~selckin@user/selckin) (*.net *.split)
[01:10:19] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[01:10:19] *** Quits: harleypig (thelounge@harleypig.com) (*.net *.split)
[01:10:19] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[01:10:19] *** Quits: ParkerR (ParkerR@znc.withg.org) (*.net *.split)
[01:10:19] *** Quits: arash (arash@thinks.life.is-a.beauty) (*.net *.split)
[01:10:19] *** Quits: ialokin (znc@user/ialokin) (*.net *.split)
[01:10:19] *** Quits: jkssodhxu[m] (~barzarian@2001:470:69fc:105::1:3a12) (*.net *.split)
[01:10:19] *** Quits: hussam (~hussam@user/hussam) (*.net *.split)
[01:10:19] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (*.net *.split)
[01:10:19] *** Quits: nicoty (~nicoty@user/nicoty) (*.net *.split)
[01:10:19] *** Quits: makara1 (~makara@196.214.171.83) (*.net *.split)
[01:10:19] *** Quits: tedster (~Tedster@rampage.tedster.net) (*.net *.split)
[01:10:19] *** Quits: Hash (~Hash@hashsecurity.org) (*.net *.split)
[01:10:19] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[01:10:19] *** Quits: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net) (*.net *.split)
[01:10:19] *** Quits: Oddly (~sacr@mailserver.rshs.nl) (*.net *.split)
[01:10:19] *** Quits: Muzer (~muzer@tim32.org) (*.net *.split)
[01:10:19] *** Quits: hendry (~hendry@210.23.22.8) (*.net *.split)
[01:10:19] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[01:10:19] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (*.net *.split)
[01:10:19] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[01:10:19] *** Quits: fling (~fling@user/fling) (*.net *.split)
[01:10:19] *** Quits: bobo (~bobo@irc.webirc.eu) (*.net *.split)
[01:10:19] *** Quits: CRThaze1 (~weechat@188.166.44.58) (*.net *.split)
[01:10:19] *** Quits: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com) (*.net *.split)
[01:10:19] *** Quits: funabashi (funabashi@185.52.0.236) (*.net *.split)
[01:10:19] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[01:10:19] *** Quits: capn (~capn@user/capn) (*.net *.split)
[01:10:19] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[01:10:19] *** Quits: r00t`work (~r00t@82-198-216-115.briteline.de) (*.net *.split)
[01:10:19] *** Quits: rj1 (~rj1@i.dont.know.how.com.puters.work) (*.net *.split)
[01:10:19] *** Quits: Buliarous (~gypsydang@185.207.166.57) (*.net *.split)
[01:10:19] *** Quits: gl (~x@pwn.lu) (*.net *.split)
[01:10:19] *** Quits: vishal (~vishal@fedora/vishal) (*.net *.split)
[01:10:19] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (*.net *.split)
[01:10:19] *** Quits: jos1 (~jos3@dyndsl-091-248-052-116.ewe-ip-backbone.de) (*.net *.split)
[01:10:19] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[01:10:20] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[01:10:20] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[01:10:20] *** Quits: magyar (~magyar@user/magyar) (*.net *.split)
[01:10:20] *** Quits: jcbjoe2021 (~joe@user/jcbjoe2021) (*.net *.split)
[01:10:20] *** Quits: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com) (*.net *.split)
[01:10:20] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[01:10:20] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[01:10:20] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[01:10:20] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[01:10:20] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[01:10:20] *** Quits: aphorise (aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[01:10:20] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (*.net *.split)
[01:10:20] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[01:10:20] *** Quits: moto (~moto@user/moto) (*.net *.split)
[01:10:20] *** Quits: ntwk (~ntwk@user/ntwk) (*.net *.split)
[01:10:20] *** Quits: Delf (Delf@user/delf) (*.net *.split)
[01:10:20] *** Quits: mongy (~mongy@user/mongy) (*.net *.split)
[01:10:20] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[01:10:20] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (*.net *.split)
[01:10:20] *** Quits: jaskal (jaskal@user/jaskal) (*.net *.split)
[01:10:20] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[01:10:20] *** Quits: tolecnal (tolecnal@login.xiro.net) (*.net *.split)
[01:10:20] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (*.net *.split)
[01:10:20] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[01:10:20] *** Quits: chrfle (~chrfle@217-209-195-249-no206.tbcn.telia.com) (*.net *.split)
[01:10:20] *** Quits: ops (~ops@user/echelon) (*.net *.split)
[01:10:20] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[01:10:20] *** Quits: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net) (*.net *.split)
[01:10:20] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[01:10:20] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (*.net *.split)
[01:10:20] *** Quits: rigid (~rigid@user/rigid) (*.net *.split)
[01:10:20] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[01:10:20] *** Quits: hedon (~hedon@user/hedon) (*.net *.split)
[01:10:20] *** Quits: Kholuendara (~Kholuenda@user/kholuendara) (*.net *.split)
[01:10:20] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[01:10:20] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (*.net *.split)
[01:10:20] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[01:10:20] *** Quits: bidouille (~arf@trois.potager.org) (*.net *.split)
[01:10:20] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[01:10:20] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (*.net *.split)
[01:10:20] *** Quits: bobloblaw (~bobloblaw@185.52.3.117) (*.net *.split)
[01:10:20] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[01:10:20] *** Quits: laris (undead@37.221.209.36) (*.net *.split)
[01:10:20] *** Quits: mattcen (~mattcen@2001:470:69fc:105::936) (*.net *.split)
[01:10:20] *** Quits: shalok (~shalok@user/shalok) (*.net *.split)
[01:10:20] *** Quits: wolf_ (~101@bad.wolf.gr) (*.net *.split)
[01:10:20] *** Quits: Guest6179 (MrA@2602:ff75:7:3ccc::20) (*.net *.split)
[01:10:20] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[01:10:20] *** Quits: Mmike (~mario@user/mmike) (*.net *.split)
[01:10:20] *** Quits: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com) (*.net *.split)
[01:10:20] *** Quits: tangy (~tangy@user/tangy) (*.net *.split)
[01:10:20] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (*.net *.split)
[01:10:20] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[01:10:20] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[01:10:20] *** Quits: Milos (~Milos@user/milos) (*.net *.split)
[01:10:20] *** Quits: gnoo (gnoo@user/gnoo) (*.net *.split)
[01:10:20] *** Quits: WinterStar (~IceLight@user/icelight) (*.net *.split)
[01:10:20] *** Quits: shush (sid21719@id-21719.tinside.irccloud.com) (*.net *.split)
[01:10:21] *** Quits: iliv (~iliv@user/iliv) (*.net *.split)
[01:10:21] *** Quits: StathisA (~StathisA@178-147-218-75.haap.dm.cosmote.net) (*.net *.split)
[01:10:21] *** Quits: hsv (~unknown@user/hsv) (*.net *.split)
[01:10:21] *** Quits: jrayhawk (~jrayhawk@user/jrayhawk) (*.net *.split)
[01:10:21] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[01:10:21] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[01:10:21] *** Quits: user3456 (user3456@user/user3456) (*.net *.split)
[01:10:21] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (*.net *.split)
[01:10:21] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (*.net *.split)
[01:10:21] *** Quits: mooz (~none@23.254.112.158) (*.net *.split)
[01:10:21] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (*.net *.split)
[01:10:21] *** Quits: CarlFK (~carlfk@2001:470:69fc:105::5d8) (*.net *.split)
[01:10:21] *** Quits: JulianDannenberg (~julianjuh@2001:470:69fc:105::1:27e2) (*.net *.split)
[01:10:21] *** Quits: hackshish[m] (~hackshish@2001:470:69fc:105::1:29e6) (*.net *.split)
[01:10:21] *** Quits: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e) (*.net *.split)
[01:10:21] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[01:10:21] *** Quits: infidel (~ecrump@67-0-208-202.albq.qwest.net) (*.net *.split)
[01:10:21] *** Quits: Sketch (sketch@2604:180:2::a506:5c0d) (*.net *.split)
[01:10:21] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[01:10:21] *** Quits: wiscii (~tct@user/wiscii) (*.net *.split)
[01:10:21] *** Quits: peb (~PEB@debian/peb) (*.net *.split)
[01:10:21] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[01:10:21] *** Quits: tkazi (~tkazi@user/tkazi) (*.net *.split)
[01:10:21] *** Quits: nanowire_ (rob@user/nanowire) (*.net *.split)
[01:10:21] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[01:10:21] *** Quits: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[01:10:21] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (*.net *.split)
[01:10:21] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (*.net *.split)
[01:10:21] *** Quits: icebearii[m] (~icebearii@2001:470:69fc:105::1:3135) (*.net *.split)
[01:10:21] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (*.net *.split)
[01:10:21] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (*.net *.split)
[01:10:21] *** Quits: pj (~pj@ghettoforge/pj) (*.net *.split)
[01:10:21] *** Quits: ionface (~ionface@user/ionface) (*.net *.split)
[01:10:21] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (*.net *.split)
[01:10:21] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (*.net *.split)
[01:10:21] *** Quits: mindhunter (mindhunter@user/mindhunter) (*.net *.split)
[01:10:21] *** Quits: phogg (~phogg@user/phogg) (*.net *.split)
[01:10:22] *** Quits: aeadio (~aead@user/aead) (*.net *.split)
[01:10:22] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (*.net *.split)
[01:10:22] *** Quits: Lunatrius (~Lunatrius@77.38.22.219) (*.net *.split)
[01:10:22] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[01:10:22] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (*.net *.split)
[01:10:22] *** Quits: Yorick- (znc@vps.freegamehosting.eu) (*.net *.split)
[01:10:22] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: userdocs[m] (~userdocsm@2001:470:69fc:105::1:3b3f) (*.net *.split)
[01:10:22] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[01:10:22] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[01:10:22] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (*.net *.split)
[01:10:22] *** Quits: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b) (*.net *.split)
[01:10:22] *** Quits: M9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc) (*.net *.split)
[01:10:22] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (*.net *.split)
[01:10:22] *** Quits: expipiplus1 (~expipiplu@2001:470:69fc:105::d713) (*.net *.split)
[01:10:22] *** Quits: Friithian (gunqqer@friithian.dev) (*.net *.split)
[01:10:22] *** Quits: Benett (~Benett@xnetx.de) (*.net *.split)
[01:10:22] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[01:10:22] *** Quits: edr (~edr@user/edr) (*.net *.split)
[01:10:22] *** Quits: root_ (~root@dhcp-24-53-243-12.cable.user.start.ca) (*.net *.split)
[01:10:22] *** Quits: hesco3 (~hesco@209.195.11.75) (*.net *.split)
[01:10:22] *** Quits: noent (~quassel@squint.a-oben.org) (*.net *.split)
[01:10:22] *** Quits: userdocs (~userdocs@78.141.217.143) (*.net *.split)
[01:10:22] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[01:10:22] *** Quits: picooz_ (~picooz@user/picooz) (*.net *.split)
[01:10:22] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (*.net *.split)
[01:10:22] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[01:10:22] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[01:10:22] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[01:10:22] *** Quits: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7) (*.net *.split)
[01:10:22] *** Quits: auri (~quassel@fsf/member/auri) (*.net *.split)
[01:10:23] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[01:10:23] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[01:10:23] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (*.net *.split)
[01:10:23] *** Quits: topoi (~topoi@user/topoi) (*.net *.split)
[01:10:23] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[01:10:23] *** Quits: soifou (~soifou@51.68.77.7) (*.net *.split)
[01:10:23] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[01:10:23] *** Quits: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net) (*.net *.split)
[01:10:23] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: bunny (~bunny@user/bunny) (*.net *.split)
[01:10:23] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (*.net *.split)
[01:10:23] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[01:10:23] *** Quits: mrhands (~mrhands@user/mrhands) (*.net *.split)
[01:10:23] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (*.net *.split)
[01:10:23] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[01:10:23] *** Quits: gajus (sid202456@id-202456.tinside.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: Enissay (~Enissay@user/enissay) (*.net *.split)
[01:10:23] *** Quits: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net) (*.net *.split)
[01:10:23] *** Quits: joo-__ (~joo-_@fsf/member/joo--) (*.net *.split)
[01:10:23] *** Quits: armands (~armands@46.109.8.165) (*.net *.split)
[01:10:23] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[01:10:23] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[01:10:23] *** Quits: mrtnt_ (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0) (*.net *.split)
[01:10:23] *** Quits: depesz (~quassel@lana.depesz.com) (*.net *.split)
[01:10:23] *** Quits: siodor (~quassel@140.238.211.102) (*.net *.split)
[01:10:23] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[01:10:23] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[01:10:23] *** Quits: redgloboli (~redglobol@user/redgloboli) (*.net *.split)
[01:10:23] *** Quits: creme[m] (~creme@2001:470:69fc:105::31c8) (*.net *.split)
[01:10:23] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (*.net *.split)
[01:10:23] *** Quits: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5) (*.net *.split)
[01:10:23] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[01:10:24] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (*.net *.split)
[01:10:24] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[01:10:24] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (*.net *.split)
[01:10:24] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[01:10:24] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[01:10:24] *** Quits: dramz (~anders@145.51-174-96.customer.lyse.net) (*.net *.split)
[01:10:24] *** Quits: Tabmow (~tabmow@user/tabmow) (*.net *.split)
[01:10:24] *** Quits: NickMirage (~NickMirag@user/nickmirage) (*.net *.split)
[01:10:24] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (*.net *.split)
[01:10:24] *** Quits: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d) (*.net *.split)
[01:10:24] *** Quits: lautre[m] (~lautreg@2001:470:69fc:105::311f) (*.net *.split)
[01:10:24] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (*.net *.split)
[01:10:24] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[01:10:24] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[01:10:24] *** Quits: chunky (~chunky@i.dont.know.how.com.puters.work) (*.net *.split)
[01:10:24] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[01:10:25] *** Quits: skreech (skreech@user/skreech) (*.net *.split)
[01:10:25] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: MercilessDeth (~brad@136.49.59.177) (*.net *.split)
[01:10:25] *** Quits: varazir (~mircwars@217-115-51-247.cust.bredband2.com) (*.net *.split)
[01:10:25] *** Quits: nomn (nomn@user/nomn) (*.net *.split)
[01:10:25] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[01:10:25] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[01:10:25] *** Quits: skipper (~whatsupbo@user/scobydoo) (*.net *.split)
[01:10:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (*.net *.split)
[01:10:25] *** Quits: go4godvin (~go4godvin@user/go4godvin) (*.net *.split)
[01:10:25] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (*.net *.split)
[01:10:25] *** Quits: Bikooo2[m] (~bikooo2ma@2001:470:69fc:105::1:1962) (*.net *.split)
[01:10:25] *** Quits: lkhn (~lkhn@user/lkhn) (*.net *.split)
[01:10:26] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (*.net *.split)
[01:10:26] *** Quits: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de) (*.net *.split)
[01:10:26] *** Quits: ryo (foobar@user/ryo) (*.net *.split)
[01:10:26] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[01:10:26] *** Quits: przemoc (~przemoc@user/przemoc) (*.net *.split)
[01:10:26] *** Quits: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[01:10:26] *** Quits: oldlaptop (~quassel@45.63.78.126) (*.net *.split)
[01:10:26] *** Quits: sybariten (~jake@157.90.217.120) (*.net *.split)
[01:10:26] *** Quits: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com) (*.net *.split)
[01:10:26] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[01:10:26] *** Quits: drwasabi (drwasabi@tilde.team) (*.net *.split)
[01:10:26] *** Quits: smorgasbord (buggy@user/smorgasbord) (*.net *.split)
[01:10:26] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[01:10:26] *** Quits: oj (oj@user/oj) (*.net *.split)
[01:10:26] *** Quits: Quack (~Quack@185.21.216.169) (*.net *.split)
[01:10:26] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[01:10:26] *** Quits: jochum (~quassel@user/jochum) (*.net *.split)
[01:10:26] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d) (*.net *.split)
[01:10:26] *** Quits: samy1028b (~samy1028@068-184-115-031.res.spectrum.com) (*.net *.split)
[01:10:26] *** Quits: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net) (*.net *.split)
[01:10:26] *** Quits: kyr (~kyr@167.71.50.12) (*.net *.split)
[01:10:26] *** Quits: barjac (~quassel@94.197.170.57.threembb.co.uk) (*.net *.split)
[01:10:26] *** Quits: parst (sid30815@id-30815.helmsley.irccloud.com) (*.net *.split)
[01:10:26] *** Quits: deem_ (~karaktaka@fry.ethernerd.net) (*.net *.split)
[01:10:26] *** Quits: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net) (*.net *.split)
[01:10:26] *** Quits: Square (~a@user/square) (*.net *.split)
[01:10:26] *** Quits: cache (~cache@user/cacheyourdreams) (*.net *.split)
[01:10:27] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (*.net *.split)
[01:10:27] *** Quits: nf (~n@monade.li) (*.net *.split)
[01:10:27] *** Quits: tsp (~tsp@srv1.xen.prgmr.com) (*.net *.split)
[01:10:27] *** Quits: yac (~user@user/yac) (*.net *.split)
[01:10:27] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[01:10:27] *** Quits: Psi-Jack[m] (~psi-jack@user/psi-jack) (*.net *.split)
[01:10:27] *** Quits: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4) (*.net *.split)
[01:10:27] *** Quits: Celmor[m] (~celmormat@2001:470:69fc:105::434) (*.net *.split)
[01:10:27] *** Quits: groscon (~groscon@ns3180824.ip-37-187-100.eu) (*.net *.split)
[01:10:27] *** Quits: wheresalice[m] (~wheresali@2001:470:69fc:105::1:33b1) (*.net *.split)
[01:10:27] *** Quits: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57) (*.net *.split)
[01:10:27] *** Quits: VSpike (~johncc@2001:bc8:47ac:1a22::1) (*.net *.split)
[01:10:27] *** Quits: Doqnach (~bofh@2a01:7c8:aab1:94:5054:ff:fef4:3181) (*.net *.split)
[01:10:27] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (*.net *.split)
[01:10:27] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[01:10:27] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[01:10:27] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[01:10:27] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (*.net *.split)
[01:10:27] *** Quits: PeGaSuS (BlackHole@user/pegasus) (*.net *.split)
[01:10:27] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[01:10:27] *** Quits: CoreISP (~LvH@simplemachines/serverteam/CoreISP) (*.net *.split)
[01:10:27] *** Quits: kewl_fft (~kewl_fft@2a01:e0a:9cb:8950:feaa:14ff:fec1:c4d4) (*.net *.split)
[01:10:27] *** Quits: mboehn (mathias@hh1.nuxis.org) (*.net *.split)
[01:10:27] *** Quits: ianmacd (~ianmacd@faust.caliban.org) (*.net *.split)
[01:10:27] *** Quits: BrowseMan (~BrowseMan@78.130.185.116) (*.net *.split)
[01:10:27] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[01:10:28] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (*.net *.split)
[01:10:28] *** Quits: avalon (avalon@coredump.net) (*.net *.split)
[01:10:28] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[01:10:28] *** Quits: rs (~rs@user/rs) (*.net *.split)
[01:10:28] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (*.net *.split)
[01:10:28] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[01:10:28] *** Quits: Hamled (sid129388@id-129388.uxbridge.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: fstd (~fstd@xdsl-87-79-98-69.nc.de) (*.net *.split)
[01:10:28] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[01:10:28] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[01:10:28] *** Quits: dfdx (~F@user/dfdx) (*.net *.split)
[01:10:28] *** Quits: llua (~llua@zsh/developer/llua) (*.net *.split)
[01:10:28] *** Quits: eoli3n__ (~eoli3n@162.38.105.222) (*.net *.split)
[01:10:28] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: mnabid (uid448607@user/mnabid) (*.net *.split)
[01:10:28] *** Quits: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de) (*.net *.split)
[01:10:29] *** Quits: samsmith (~samsmith@li1371-152.members.linode.com) (*.net *.split)
[01:10:29] *** Quits: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659) (*.net *.split)
[01:10:29] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (*.net *.split)
[01:10:29] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[01:10:29] *** Quits: bakerst (bakerst@libera/staff/bakerst) (*.net *.split)
[01:10:29] *** Quits: Momentum (momentum@tilde.team) (*.net *.split)
[01:10:29] *** Quits: ZarTek (~ZarTek@user/zartek) (*.net *.split)
[01:10:29] *** Quits: Kobaz (~libera@its.kobaz.net) (*.net *.split)
[01:10:29] *** Quits: grossing (~grossing@user/grossing) (*.net *.split)
[01:10:29] *** Quits: burrows (burrows@user/burrows) (*.net *.split)
[01:10:29] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[01:10:29] *** Quits: rkta (~rkta_@2a00:f48:1003:1::8bee:ec40) (*.net *.split)
[01:10:29] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[01:10:29] *** Quits: swoolley (~seth@user/swoolley) (*.net *.split)
[01:10:29] *** Quits: lunario (~no@vmi455770.contaboserver.net) (*.net *.split)
[01:10:29] *** Quits: sixwheeledbeast (~zem@user/sixwheeledbeast) (*.net *.split)
[01:10:29] *** Quits: greybot (~greybot@remote.wooledge.org) (*.net *.split)
[01:10:29] *** Quits: vegetux (~vegetux@user/vegetux) (*.net *.split)
[01:10:29] *** Quits: ds (~ds@user/ds) (*.net *.split)
[01:10:30] *** Quits: JyZyXy (~jyz@88-112-115-81.elisa-laajakaista.fi) (*.net *.split)
[01:10:30] *** Quits: leftyfb (leftyfb@ubuntu/member/leftyfb) (*.net *.split)
[01:10:30] *** Quits: hid3 (~arnoldas@78.157.71.116) (*.net *.split)
[01:10:30] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (*.net *.split)
[01:10:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (*.net *.split)
[01:10:30] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[01:10:30] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[01:10:30] *** Quits: saki (~saki@gateway/tor-sasl/saki) (*.net *.split)
[01:10:30] *** Quits: ano (~ano@user/ano) (*.net *.split)
[01:10:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (*.net *.split)
[01:10:30] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (*.net *.split)
[01:10:30] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[01:10:30] *** Quits: tejr (~tejr@user/tejr) (*.net *.split)
[01:12:52] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 264 seconds)
[01:14:29] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Max SendQ exceeded)
[01:14:29] *** Quits: Spydar007 (~spydar007@user/spydar007) (Max SendQ exceeded)
[01:14:29] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[01:14:31] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[01:14:31] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:14:31] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:14:31] *** Joins: tinystoat (~squeek@user/tinystoat)
[01:14:31] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[01:14:31] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[01:14:31] *** Joins: esselfe (~steph@user/esselfe)
[01:14:31] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:14:31] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:14:31] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[01:14:31] *** Joins: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d)
[01:14:31] *** Joins: lautre[m] (~lautreg@2001:470:69fc:105::311f)
[01:14:31] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[01:14:31] *** Joins: mattcen (~mattcen@2001:470:69fc:105::936)
[01:14:31] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:14:31] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[01:14:31] *** Joins: Betal (~Betal@user/betal)
[01:14:31] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:14:31] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[01:14:31] *** Joins: bertptrs (~quassel@user/bertptrs)
[01:14:31] *** Joins: dreinull3 (~dreinull@2a01:4f8:1c1c:8981::1)
[01:14:31] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[01:14:31] *** Joins: l4yer (~l4yer@2a07-a880-3101-1051-a922-bb49-135a-4393.pool6.ovpn.com)
[01:14:31] *** Joins: sbodin (~Android@185.12.224.209)
[01:14:31] *** Joins: hata (~hata@hata.moe)
[01:14:31] *** Joins: xx (~xx@user/xx)
[01:14:31] *** Joins: mixfix41 (~homefame@user/mixfix41)
[01:14:31] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[01:14:31] *** Joins: Momentum (momentum@tilde.team)
[01:14:31] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[01:14:31] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[01:14:31] *** Joins: justache (~justache@user/justache)
[01:14:31] *** Joins: linnet (~linnet@149.155.223.155)
[01:14:31] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[01:14:31] *** Joins: sgn (~sgn@user/sgn)
[01:14:31] *** Joins: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de)
[01:14:31] *** Joins: YaoNai (~YaoNai@user/yaonai)
[01:14:31] *** Joins: wuseman (~wuseman@user/wuseman)
[01:14:31] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[01:14:31] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[01:14:31] *** Joins: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[01:14:31] *** Joins: zebrag (~chris@user/zebrag)
[01:14:31] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[01:14:31] *** Joins: a1 (~ekaj@user/ekaj)
[01:14:31] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[01:14:31] *** Joins: ChmEarl (~chmearl@user/chmearl)
[01:14:31] *** Joins: SuperLag (~akulbe@user/superlag)
[01:14:31] *** Joins: beencubed (~beencubed@209.131.238.248)
[01:14:31] *** Joins: noord (~noord@user/noord)
[01:14:31] *** Joins: eleventh (~eleventh@143.131.13.208)
[01:14:31] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[01:14:31] *** Joins: superboot (~agentgasm@user/superboot)
[01:14:31] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[01:14:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:14:31] *** Joins: samy1028b (~samy1028@068-184-115-031.res.spectrum.com)
[01:14:31] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[01:14:31] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[01:14:31] *** Joins: cdown (~cdown@163.114.131.1)
[01:14:31] *** Joins: lorimer (~lorimer@user/lorimer)
[01:14:31] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[01:14:31] *** Joins: polve (~polve@twcitalia/polve)
[01:14:31] *** Joins: timj (~timj@user/timj)
[01:14:31] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[01:14:31] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[01:14:31] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:14:31] *** Joins: earnest (~earnest@user/earnestly)
[01:14:31] *** Joins: ztx (~ztx@user/ztx)
[01:14:31] *** Joins: tex (~super@user/dix)
[01:14:31] *** Joins: deetwelve (~deetwelve@user/deetwelve)
[01:14:31] *** Joins: iomari891 (~iomari891@105.112.138.38)
[01:14:31] *** Joins: maledictium (~crux@bl14-67-155.dsl.telepac.pt)
[01:14:31] *** Joins: birkoff (birkoff@user/birkoff)
[01:14:31] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:14:31] *** Joins: Chaser (~Chaser@user/chaser)
[01:14:31] *** Joins: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7)
[01:14:31] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[01:14:31] *** Joins: lachesis (~lachesis@user/lachesis)
[01:14:31] *** Joins: icebearii[m] (~icebearii@2001:470:69fc:105::1:3135)
[01:14:31] *** Joins: auri (~quassel@fsf/member/auri)
[01:14:31] *** Joins: modobasico (~modobasic@2001:470:69fc:105::1:1bc)
[01:14:31] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[01:14:31] *** Joins: chronon (~chronon@user/chronon)
[01:14:31] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[01:14:31] *** Joins: topoi (~topoi@user/topoi)
[01:14:31] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[01:14:31] *** Joins: mweckbecker (~matthias@weckbecker.name)
[01:14:31] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[01:14:31] *** Joins: chunky (~chunky@i.dont.know.how.com.puters.work)
[01:14:31] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[01:14:31] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[01:14:31] *** Joins: soifou (~soifou@51.68.77.7)
[01:14:31] *** Joins: Camusensei (~Camusense@megaman.thican.net)
[01:14:31] *** Joins: ccl (ccl@shell.xshellz.com)
[01:14:31] *** Joins: theglass (~glass@user/theglass)
[01:14:31] *** Joins: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net)
[01:14:31] *** Joins: capn (~capn@user/capn)
[01:14:31] *** Joins: td001 (~td001@172.245.134.58)
[01:14:31] *** Joins: quesker (~idnet@mail.89vx.net)
[01:14:31] *** Joins: randm (~randm@user/randm)
[01:14:31] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[01:14:31] *** Joins: shalok (~shalok@user/shalok)
[01:14:31] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[01:14:31] *** Joins: Tadgy (~tadgy@slackware.uk/founder/tadgy)
[01:14:31] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[01:14:31] *** Joins: modin (~modin@user/modin)
[01:14:31] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[01:14:31] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[01:14:31] *** Joins: r00t`work (~r00t@82-198-216-115.briteline.de)
[01:14:31] *** Joins: wolf_ (~101@bad.wolf.gr)
[01:14:31] *** Joins: rj1 (~rj1@i.dont.know.how.com.puters.work)
[01:14:31] *** Joins: haro (beau@saweet.net)
[01:14:31] *** Joins: Guest6179 (MrA@2602:ff75:7:3ccc::20)
[01:14:31] *** Joins: Buliarous (~gypsydang@185.207.166.57)
[01:14:31] *** Joins: gl (~x@pwn.lu)
[01:14:31] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d)
[01:14:31] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[01:14:31] *** Joins: hubvu (sid495858@user/hubvu)
[01:14:31] *** Joins: ljharb (sid43720@user/ljharb)
[01:14:31] *** Joins: BlueShark (sid10311@user/blueshark)
[01:14:31] *** Joins: vishal (~vishal@fedora/vishal)
[01:14:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:14:31] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[01:14:31] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[01:14:31] *** Joins: jos1 (~jos3@dyndsl-091-248-052-116.ewe-ip-backbone.de)
[01:14:31] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[01:14:31] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[01:14:31] *** Joins: vlm (~vlm@user/vlm)
[01:14:31] *** Joins: magyar (~magyar@user/magyar)
[01:14:31] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[01:14:31] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:14:31] *** Joins: jcbjoe2021 (~joe@user/jcbjoe2021)
[01:14:31] *** Joins: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com)
[01:14:31] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[01:14:31] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[01:14:31] *** Joins: Delf (Delf@user/delf)
[01:14:31] *** Joins: Guest7716 (az@stable.bnc.by.bnc4you.xyz)
[01:14:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[01:14:31] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[01:14:31] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[01:14:31] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[01:14:31] *** Joins: pj (~pj@ghettoforge/pj)
[01:14:31] *** Joins: nickodd (~nickodd@user/nickodd)
[01:14:31] *** Joins: useretail (~useretail@185.132.19.151)
[01:14:31] *** Joins: millido (~millido@84.210.150.128)
[01:14:31] *** Joins: ano (~ano@user/ano)
[01:14:31] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[01:14:31] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[01:14:31] *** Joins: Mmike (~mario@user/mmike)
[01:14:31] *** Joins: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com)
[01:14:31] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:14:31] *** Joins: sdu (~doo@185.44.146.165)
[01:14:31] *** Joins: itachi19 (~itachi19@46.232.210.60)
[01:14:31] *** Joins: aphorise (aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl)
[01:14:31] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[01:14:31] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[01:14:31] *** Joins: parst (sid30815@id-30815.helmsley.irccloud.com)
[01:14:31] *** Joins: lopid (~lopid@user/lopid)
[01:14:31] *** Joins: Trieste (T@user/pilgrim)
[01:14:31] *** Joins: moto (~moto@user/moto)
[01:14:31] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[01:14:31] *** Joins: ntwk (~ntwk@user/ntwk)
[01:14:31] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[01:14:31] *** Joins: Gerula (~Gerula@user/gerula)
[01:14:31] *** Joins: mongy (~mongy@user/mongy)
[01:14:31] *** Joins: luva (~luva@45.141.152.44)
[01:14:31] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[01:14:31] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:14:31] *** Joins: peb (~PEB@debian/peb)
[01:14:31] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[01:14:31] *** Joins: jaskal (jaskal@user/jaskal)
[01:14:31] *** Joins: bunny (~bunny@user/bunny)
[01:14:31] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[01:14:31] *** Joins: nahcetan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[01:14:31] *** Joins: yitz (~yitz@exercism/yitz)
[01:14:31] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[01:14:31] *** Joins: tangy (~tangy@user/tangy)
[01:14:31] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[01:14:31] *** Joins: waxfire (~waxfire@65.119.2.240)
[01:14:31] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[01:14:31] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[01:14:31] *** Joins: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net)
[01:14:31] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:14:31] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[01:14:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[01:14:31] *** Joins: Milos (~Milos@user/milos)
[01:14:31] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[01:14:31] *** Joins: gnoo (gnoo@user/gnoo)
[01:14:31] *** Joins: keypusher (keypusher@user/keypusher)
[01:14:31] *** Joins: Grems (~grems@194.19.73.77)
[01:14:31] *** Joins: mhmd (~mhmd@37.48.90.208)
[01:14:31] *** Joins: mrhands (~mrhands@user/mrhands)
[01:14:31] *** Joins: kyr (~kyr@167.71.50.12)
[01:14:31] *** Joins: WinterStar (~IceLight@user/icelight)
[01:14:31] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:14:31] *** Joins: skreech (skreech@user/skreech)
[01:14:31] *** Joins: fluter (~fluter@user/fluter)
[01:14:31] *** Joins: led_belly (~led_belly@5.180.62.139)
[01:14:31] *** Joins: moviuro (~moviuro@car.popho.be)
[01:14:31] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[01:14:31] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[01:14:31] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[01:14:31] *** Joins: acegalla- (~Ace@71-33-215-114.hlrn.qwest.net)
[01:14:31] *** Joins: barjac (~quassel@94.197.170.57.threembb.co.uk)
[01:14:31] *** Joins: shush (sid21719@id-21719.tinside.irccloud.com)
[01:14:31] *** Joins: Hamled (sid129388@id-129388.uxbridge.irccloud.com)
[01:14:31] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[01:14:31] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[01:14:31] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[01:14:31] *** Joins: MercilessDeth (~brad@136.49.59.177)
[01:14:31] *** Joins: ionface (~ionface@user/ionface)
[01:14:31] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[01:14:31] *** Joins: son0p (~ff@181.136.122.143)
[01:14:31] *** Joins: setesat (~setesat@94.4.156.220)
[01:14:31] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[01:14:31] *** Joins: fstd (~fstd@xdsl-87-79-98-69.nc.de)
[01:14:31] *** Joins: iliv (~iliv@user/iliv)
[01:14:31] *** Joins: fsg (^^@2600:3c00::f03c:92ff:fec6:da18)
[01:14:31] *** Joins: StathisA (~StathisA@178-147-218-75.haap.dm.cosmote.net)
[01:14:31] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[01:14:31] *** Joins: JanC (~janc@user/janc)
[01:14:31] *** Joins: varazir (~mircwars@217-115-51-247.cust.bredband2.com)
[01:14:31] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[01:14:31] *** Joins: geirha (~geirha@user/geirha)
[01:14:31] *** Joins: dionys (dionys@user/dionys)
[01:14:31] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[01:14:31] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[01:14:31] *** Joins: mindhunter (mindhunter@user/mindhunter)
[01:14:31] *** Joins: deem_ (~karaktaka@fry.ethernerd.net)
[01:14:31] *** Joins: phogg (~phogg@user/phogg)
[01:14:31] *** Joins: aeadio (~aead@user/aead)
[01:14:31] *** Joins: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net)
[01:14:31] *** Joins: Square (~a@user/square)
[01:14:31] *** Joins: cache (~cache@user/cacheyourdreams)
[01:14:31] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[01:14:31] *** Joins: abrotman (~abrotman@user/abrotman)
[01:14:31] *** Joins: dawg_ (dirtydawg@triton.blinkenshell.org)
[01:14:31] *** Joins: cardtrick (~cardtrick@40.ip-192-99-166.net)
[01:14:31] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[01:14:31] *** Joins: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de)
[01:14:31] *** Joins: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[01:14:31] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[01:14:31] *** Joins: brw (~bas@haring.bas.sh)
[01:14:31] *** Joins: jramsay (~lack@user/lack)
[01:14:31] *** Joins: guifipedro_ (~quassel@207.188.174.249)
[01:14:31] *** Joins: FoodMan_ (~glucose@user/foodman)
[01:14:31] *** Joins: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[01:14:31] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[01:14:31] *** Joins: lockywol- (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[01:14:31] *** Joins: dysfigured (~dfg@li490-89.members.linode.com)
[01:14:31] *** Joins: bkhl (~bkhl@user/bkhl)
[01:14:31] *** Joins: alz (~alzee@157.136.233.35.bc.googleusercontent.com)
[01:14:31] *** Joins: gajus (sid202456@id-202456.tinside.irccloud.com)
[01:14:31] *** Joins: azerty (~azerty@user/badwolf)
[01:14:31] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[01:14:31] *** Joins: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[01:14:31] *** Joins: relight (~relight@user/relight)
[01:14:31] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[01:14:31] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[01:14:31] *** Joins: nomn (nomn@user/nomn)
[01:14:31] *** Joins: Lunatrius (~Lunatrius@77.38.22.219)
[01:14:31] *** Joins: Enissay (~Enissay@user/enissay)
[01:14:31] *** Joins: libsys (~libsys@186.105.139.10)
[01:14:31] *** Joins: damyan (damyan@mail.0x4711.org)
[01:14:31] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:14:31] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[01:14:31] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[01:14:31] *** Joins: gdd (~gdd@129.199.146.230)
[01:14:31] *** Joins: ttys000 (~ttys000@user/ttys000)
[01:14:31] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[01:14:31] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[01:14:31] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[01:14:31] *** Joins: skipper (~whatsupbo@user/scobydoo)
[01:14:31] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[01:14:31] *** Joins: joo-__ (~joo-_@fsf/member/joo--)
[01:14:31] *** Joins: hsv (~unknown@user/hsv)
[01:14:31] *** Joins: Darkfoe (sid402081@id-402081.helmsley.irccloud.com)
[01:14:31] *** Joins: dfdx (~F@user/dfdx)
[01:14:31] *** Joins: llua (~llua@zsh/developer/llua)
[01:14:31] *** Joins: eoli3n__ (~eoli3n@162.38.105.222)
[01:14:31] *** Joins: int (~int@0x4.cx)
[01:14:31] *** Joins: armands (~armands@46.109.8.165)
[01:14:31] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[01:14:31] *** Joins: k-man (~jason@user/k-man)
[01:14:31] *** Joins: cim (~cim@205.185.117.110)
[01:14:31] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[01:14:31] *** Joins: nf (~n@monade.li)
[01:14:31] *** Joins: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com)
[01:14:31] *** Joins: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl)
[01:14:31] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[01:14:31] *** Joins: tejr (~tejr@user/tejr)
[01:14:31] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[01:14:31] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[01:14:31] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[01:14:31] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[01:14:31] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[01:14:31] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[01:14:31] *** Joins: invra (~invra@mail.aletheianature.es)
[01:14:31] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[01:14:31] *** Joins: travisghansen (~travisgha@192.74.130.86)
[01:14:31] *** Joins: tsp (~tsp@srv1.xen.prgmr.com)
[01:14:31] *** Joins: mnabid (uid448607@user/mnabid)
[01:14:31] *** Joins: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com)
[01:14:31] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[01:14:31] *** Joins: xcm_ (~xcm@user/xcm)
[01:14:31] *** Joins: twkm (twkm@rfc1459.net)
[01:14:31] *** Joins: haliucinas (~haliucina@5.20.153.21)
[01:14:31] *** Joins: userdocs[m] (~userdocsm@2001:470:69fc:105::1:3b3f)
[01:14:31] *** Joins: cryptonector (~nico@24.28.108.183)
[01:14:31] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[01:14:31] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[01:14:31] *** Joins: unixman (~aunixman@209.165.134.7)
[01:14:31] *** Joins: yac (~user@user/yac)
[01:14:31] *** Joins: Philonous (~Philonous@user/philonous)
[01:14:31] *** Joins: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de)
[01:14:31] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[01:14:31] *** Joins: compuguy (ahall@user/compuguy)
[01:14:31] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[01:14:32] *** Joins: b0b (~bob@user/b0b)
[01:14:32] *** Joins: osse (~osse@zsh/user/osse)
[01:14:32] *** Joins: Razva (sid17541@user/razva)
[01:14:32] *** Joins: termos (sid18647@helmsley.irccloud.com)
[01:14:32] *** Joins: kenyon (sid496813@uxbridge.irccloud.com)
[01:14:32] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[01:14:32] *** Joins: odc (sid197788@helmsley.irccloud.com)
[01:14:32] *** Joins: guardian (~guardian@planet-d.net)
[01:14:32] *** Joins: e36freak (~e36freak@user/e36freak)
[01:14:32] *** Joins: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com)
[01:14:32] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[01:14:32] *** Joins: jrayhawk (~jrayhawk@user/jrayhawk)
[01:14:32] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[01:14:32] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[01:14:32] *** Joins: bertieb (~bertieb@217.155.39.147)
[01:14:32] *** Joins: selckin (~selckin@user/selckin)
[01:14:32] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[01:14:32] *** Joins: xD- (~|_|@194.5.249.141)
[01:14:32] *** Joins: vancz (~vancz@user/vancz)
[01:14:32] *** Joins: harleypig (thelounge@harleypig.com)
[01:14:32] *** Joins: sjs (~sjs@user/sjs)
[01:14:32] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[01:14:32] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[01:14:32] *** Joins: ParkerR (ParkerR@znc.withg.org)
[01:14:32] *** Joins: bwe (~bwe@2a01:4f8:1c1c:4878::2)
[01:14:32] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[01:14:32] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[01:14:32] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:14:32] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[01:14:32] *** Joins: mrtnt_ (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0)
[01:14:32] *** Joins: depesz (~quassel@lana.depesz.com)
[01:14:32] *** Joins: siodor (~quassel@140.238.211.102)
[01:14:32] *** Joins: Emil (emil@emil.fi)
[01:14:32] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[01:14:32] *** Joins: arash (arash@thinks.life.is-a.beauty)
[01:14:32] *** Joins: redgloboli (~redglobol@user/redgloboli)
[01:14:32] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[01:14:32] *** Joins: cebor (~cebor@user/cebor)
[01:14:32] *** Joins: ialokin (znc@user/ialokin)
[01:14:32] *** Joins: jkssodhxu[m] (~barzarian@2001:470:69fc:105::1:3a12)
[01:14:32] *** Joins: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57)
[01:14:32] *** Joins: samsmith (~samsmith@li1371-152.members.linode.com)
[01:14:32] *** Joins: user3456 (user3456@user/user3456)
[01:14:32] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[01:14:32] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[01:14:32] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[01:14:32] *** Joins: infidel (~ecrump@67-0-208-202.albq.qwest.net)
[01:14:32] *** Joins: mooz (~none@23.254.112.158)
[01:14:32] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[01:14:32] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[01:14:32] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:14:32] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[01:14:32] *** Joins: hussam (~hussam@user/hussam)
[01:14:32] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:14:32] *** Joins: Psi-Jack[m] (~psi-jack@user/psi-jack)
[01:14:32] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[01:14:32] *** Joins: Celmor[m] (~celmormat@2001:470:69fc:105::434)
[01:14:32] *** Joins: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4)
[01:14:32] *** Joins: CarlFK (~carlfk@2001:470:69fc:105::5d8)
[01:14:32] *** Joins: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659)
[01:14:32] *** Joins: creme[m] (~creme@2001:470:69fc:105::31c8)
[01:14:32] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[01:14:32] *** Joins: groscon (~groscon@ns3180824.ip-37-187-100.eu)
[01:14:32] *** Joins: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b)
[01:14:32] *** Joins: wheresalice[m] (~wheresali@2001:470:69fc:105::1:33b1)
[01:14:32] *** Joins: M9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc)
[01:14:32] *** Joins: Bikooo2[m] (~bikooo2ma@2001:470:69fc:105::1:1962)
[01:14:32] *** Joins: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e)
[01:14:32] *** Joins: hackshish[m] (~hackshish@2001:470:69fc:105::1:29e6)
[01:14:32] *** Joins: JulianDannenberg (~julianjuh@2001:470:69fc:105::1:27e2)
[01:14:32] *** Joins: expipiplus1 (~expipiplu@2001:470:69fc:105::d713)
[01:14:32] *** Joins: nicoty (~nicoty@user/nicoty)
[01:14:32] *** Joins: lkhn (~lkhn@user/lkhn)
[01:14:32] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[01:14:32] *** Joins: tolecnal (tolecnal@login.xiro.net)
[01:14:32] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[01:14:32] *** Joins: makara1 (~makara@196.214.171.83)
[01:14:32] *** Joins: kuku (~kuku@user/kuku)
[01:14:32] *** Joins: tedster (~Tedster@rampage.tedster.net)
[01:14:32] *** Joins: Hash (~Hash@hashsecurity.org)
[01:14:32] *** Joins: wolfshappen (~waff@irc.furworks.de)
[01:14:32] *** Joins: chrfle (~chrfle@217-209-195-249-no206.tbcn.telia.com)
[01:14:32] *** Joins: hedon (~hedon@user/hedon)
[01:14:32] *** Joins: ops (~ops@user/echelon)
[01:14:32] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[01:14:32] *** Joins: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net)
[01:14:32] *** Joins: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net)
[01:14:32] *** Joins: edk (edk@libera/staff/edk)
[01:14:32] *** Joins: Oddly (~sacr@mailserver.rshs.nl)
[01:14:32] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[01:14:32] *** Joins: rigid (~rigid@user/rigid)
[01:14:32] *** Joins: Muzer (~muzer@tim32.org)
[01:14:32] *** Joins: hendry (~hendry@210.23.22.8)
[01:14:32] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[01:14:32] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[01:14:32] *** Joins: Kholuendara (~Kholuenda@user/kholuendara)
[01:14:32] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[01:14:32] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[01:14:32] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[01:14:32] *** Joins: enyc (~enyc@user/enyc)
[01:14:32] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu)
[01:14:32] *** Joins: fling (~fling@user/fling)
[01:14:32] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[01:14:32] *** Joins: bobo (~bobo@irc.webirc.eu)
[01:14:32] *** Joins: bidouille (~arf@trois.potager.org)
[01:14:32] *** Joins: mcint (mcint@user/mcint)
[01:14:32] *** Joins: CRThaze1 (~weechat@188.166.44.58)
[01:14:32] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[01:14:32] *** Joins: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com)
[01:14:32] *** Joins: funabashi (funabashi@185.52.0.236)
[01:14:32] *** Joins: bobloblaw (~bobloblaw@185.52.3.117)
[01:14:32] *** Joins: Dev0n (~Dev0n@user/dev0n)
[01:14:32] *** Joins: mspe (~user@tilde.team/user/mspe)
[01:14:32] *** Joins: hid3 (~arnoldas@78.157.71.116)
[01:14:32] *** Joins: leftyfb (leftyfb@ubuntu/member/leftyfb)
[01:14:32] *** Joins: ds (~ds@user/ds)
[01:14:32] *** Joins: vegetux (~vegetux@user/vegetux)
[01:14:32] *** Joins: greybot (~greybot@remote.wooledge.org)
[01:14:32] *** Joins: lunario (~no@vmi455770.contaboserver.net)
[01:14:32] *** Joins: swoolley (~seth@user/swoolley)
[01:14:32] *** Joins: rs (~rs@user/rs)
[01:14:32] *** Joins: queue- (~nerd@user/queue/x-7267619)
[01:14:32] *** Joins: avalon (avalon@coredump.net)
[01:14:32] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[01:14:32] *** Joins: [R] (~rs@genoce.org)
[01:14:32] *** Joins: BrowseMan (~BrowseMan@78.130.185.116)
[01:14:32] *** Joins: ianmacd (~ianmacd@faust.caliban.org)
[01:14:32] *** Joins: mboehn (mathias@hh1.nuxis.org)
[01:14:32] *** Joins: kewl_fft (~kewl_fft@2a01:e0a:9cb:8950:feaa:14ff:fec1:c4d4)
[01:14:32] *** Joins: CoreISP (~LvH@simplemachines/serverteam/CoreISP)
[01:14:32] *** Joins: n-st (~n-st@user/n-st)
[01:14:32] *** Joins: PeGaSuS (BlackHole@user/pegasus)
[01:14:32] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[01:14:32] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[01:14:32] *** Joins: dstein64 (~dstein64@dannyadam.com)
[01:14:32] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[01:14:32] *** Joins: jochum (~quassel@user/jochum)
[01:14:32] *** Joins: oprypin (~irc@pryp.in)
[01:14:32] *** Joins: Quack (~Quack@185.21.216.169)
[01:14:32] *** Joins: oj (oj@user/oj)
[01:14:32] *** Joins: Riviera (Riviera@user/riviera)
[01:14:32] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[01:14:32] *** Joins: Doqnach (~bofh@2a01:7c8:aab1:94:5054:ff:fef4:3181)
[01:14:32] *** Joins: bleb (~cm@user/bleb)
[01:14:32] *** Joins: VSpike (~johncc@2001:bc8:47ac:1a22::1)
[01:14:32] *** Joins: smorgasbord (buggy@user/smorgasbord)
[01:14:32] *** Joins: drwasabi (drwasabi@tilde.team)
[01:14:32] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[01:14:32] *** Joins: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com)
[01:14:32] *** Joins: sybariten (~jake@157.90.217.120)
[01:14:32] *** Joins: oldlaptop (~quassel@45.63.78.126)
[01:14:32] *** Joins: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953)
[01:14:32] *** Joins: NickMirage (~NickMirag@user/nickmirage)
[01:14:32] *** Joins: Tabmow (~tabmow@user/tabmow)
[01:14:32] *** Joins: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de)
[01:14:32] *** Joins: dramz (~anders@145.51-174-96.customer.lyse.net)
[01:14:32] *** Joins: przemoc (~przemoc@user/przemoc)
[01:14:32] *** Joins: wyre (~wyre@user/wyre)
[01:14:32] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[01:14:32] *** Joins: ryo (foobar@user/ryo)
[01:14:32] *** Joins: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de)
[01:14:32] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[01:14:32] *** Joins: strudl (~strudl@user/strudl)
[01:14:32] *** Joins: chymera (~chymera@ns1000526.ip-51-81-46.us)
[01:14:32] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[01:14:32] *** Joins: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com)
[01:14:32] *** Joins: jelly (jelly@user/jelly)
[01:14:32] *** Joins: nanowire_ (rob@user/nanowire)
[01:14:32] *** Joins: tkazi (~tkazi@user/tkazi)
[01:14:32] *** Joins: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[01:14:32] *** Joins: userdocs (~userdocs@78.141.217.143)
[01:14:32] *** Joins: picooz_ (~picooz@user/picooz)
[01:14:32] *** Joins: noent (~quassel@squint.a-oben.org)
[01:14:32] *** Joins: hesco3 (~hesco@209.195.11.75)
[01:14:32] *** Joins: root_ (~root@dhcp-24-53-243-12.cable.user.start.ca)
[01:14:32] *** Joins: edr (~edr@user/edr)
[01:14:32] *** Joins: mz` (~mz`@user/mz/x-8532539)
[01:14:32] *** Joins: AndrewYu (~andrew@user/andrewyu)
[01:14:32] *** Joins: JyZyXy (~jyz@88-112-115-81.elisa-laajakaista.fi)
[01:14:32] *** Joins: Sketch (sketch@2604:180:2::a506:5c0d)
[01:14:32] *** Joins: Chex (~Chex@user/chex)
[01:14:32] *** Joins: con3 (~con3@143.198.53.32)
[01:14:32] *** Joins: Benett (~Benett@xnetx.de)
[01:14:32] *** Joins: Friithian (gunqqer@friithian.dev)
[01:14:32] *** Joins: sixwheeledbeast (~zem@user/sixwheeledbeast)
[01:14:32] *** Joins: rkta (~rkta_@2a00:f48:1003:1::8bee:ec40)
[01:14:32] *** Joins: deltab (~deltab@user/deltab)
[01:14:32] *** Joins: wiscii (~tct@user/wiscii)
[01:14:32] *** Joins: burrows (burrows@user/burrows)
[01:14:32] *** Joins: grossing (~grossing@user/grossing)
[01:14:32] *** Joins: Kobaz (~libera@its.kobaz.net)
[01:14:32] *** Joins: ZarTek (~ZarTek@user/zartek)
[01:14:32] *** Joins: Exa (exa@irc.moe)
[01:14:32] *** Joins: MetaNova (zero-one@znc/supporter/metanova)
[01:14:32] *** Joins: bakerst (bakerst@libera/staff/bakerst)
[01:14:32] *** Joins: laris (undead@37.221.209.36)
[01:14:32] *** Quits: sbodin (~Android@185.12.224.209) (Ping timeout: 256 seconds)
[01:14:33] *** Quits: glider (~glider@user/glider) (Max SendQ exceeded)
[01:14:48] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[01:15:08] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[01:15:14] *** Joins: Spydar007 (~spydar007@user/spydar007)
[01:15:19] *** Joins: glider (~glider@user/glider)
[01:21:00] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:23:07] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Quit: Quit)
[01:23:54] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[01:24:01] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[01:24:41] *** Joins: sazawal_ (~sazawal@223.190.82.88)
[01:26:40] *** Quits: sazawal (~sazawal@122.161.84.237) (Ping timeout: 264 seconds)
[01:27:07] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:27:49] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[01:28:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[01:30:17] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[01:33:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:34:47] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:39:24] *** Joins: akoana (~ah@user/akoana)
[01:40:47] *** Joins: dre (~dre@2001:8003:c932:c301:ca62:53a2:f102:5ef0)
[01:41:39] *** Joins: seninha (~seninha@user/seninha)
[01:44:04] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[01:45:49] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:50:18] *** Parts: hackers (~remote@user/hackers) ()
[01:51:51] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:52:09] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:55:08] *** Joins: arinov (~arinov@213.194.126.155)
[01:58:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[01:59:40] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[02:00:44] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[02:03:10] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:03:17] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:04:44] *** Joins: GuiToris (~GuiToris@user/guitoris)
[02:05:00] <GuiToris> hello, what is wrong here? https://bpa.st/raw/LQRQ
[02:05:11] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[02:05:30] *** Joins: archer (~archer@141.226.73.54)
[02:05:34] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:05:50] *** Joins: voices- (~voices_@84.238.197.28)
[02:06:00] *** archer is now known as extern
[02:07:11] *** Joins: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se)
[02:07:46] *** Quits: extern (~archer@141.226.73.54) (Client Quit)
[02:08:30] <jelly> { printf '%q ' if true;
[02:08:38] <jelly> what is this, Perl?
[02:10:32] <currybullen> if i have a script /path/to/script.sh that must never be run in parallel with itself, is it a reasonable approach to put something like "flock /path/to/script.sh date" at the start of the script, or are there cases where this will not work?
[02:10:36] *** Joins: seninha (~seninha@user/seninha)
[02:11:01] <currybullen> date was just thrown in there as i couldn't think of a more suitable noop command
[02:11:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:12:15] <GuiToris> can't I use  more ; { printf '%q ' HERE "${args[@]}" ; printf '\n'; }  ?
[02:12:16] <earnest> There must be a technical, testable reason for why something cannot be run in parallel.  Either fix the limitation or predicate on that.  Better approaches might be to use fifos as queuing mechanism
[02:13:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:15:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[02:16:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:16:28] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[02:17:30] <e36freak> !faq only > currybullen
[02:17:30] <greybot> currybullen: https://mywiki.wooledge.org/BashFAQ/036 -- How can I get all lines that are: in both of two files (set intersection) or in only one of two files (set subtraction).
[02:17:33] <e36freak> erm
[02:17:33] <earnest> (ime, arbitrary locks to try and prevent scripts from running often tells me to look deeper at the context and find ways to obviate such brutal solutions)
[02:17:42] <e36freak> !faq mutual
[02:17:43] <greybot> https://mywiki.wooledge.org/BashFAQ/045 -- How can I ensure that only one instance of a script is running at a time (mutual exclusion, locking)?
[02:18:15] <earnest> (I do often use the mkdir trick because the code I use makes use of stuff in that directory)
[02:18:26] <e36freak> flock is great
[02:18:26] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:18:32] <earnest> I end up not using it
[02:18:44] <earnest> I used to
[02:18:52] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 264 seconds)
[02:19:26] <earnest> e36freak: This used to use flock: https://0x0.st/-xSk.txt - don't have the old code anymore though
[02:19:27] <e36freak> { flock -n 9 || exit; stuff; more stuff; even more stuff; } 9>/path/to/lock/file
[02:20:18] <e36freak> or as in that faq page,
[02:20:23] <earnest> It used to run a subfunction that locked itself, it was awful
[02:20:28] <e36freak> exec 9>/lock/file; flock -n 9 || exit; stuff
[02:20:50] <earnest> e36freak: flock can take a directory btw, which often avoids the annoying need to manage a lock file
[02:21:02] <e36freak> but yeah queueing mechanism or whatever is better for parallelization
[02:21:19] <e36freak> flock makes more sense for something that should literally only be used once at a time
[02:21:29] <e36freak> package manager is a good example for something that should use a lock file
[02:21:33] <earnest> idk, I just always find flock to be unnecessary after thinking a little about the problem
[02:22:15] <earnest> e36freak: (Or use a package manager that doesn't need to be locked, extraction can be done in parallel, updating can be atomic over symlink to directory :P)
[02:23:09] <e36freak> that's just asking for trouble
[02:23:18] <e36freak> there are perfectly good use cases for locking
[02:23:27] <earnest> But joking aside (they do exist tho), I question why someone would end up in a situation where commands are used like that.  It can happen, and that really suggests something else should be done
[02:23:47] <earnest> e36freak: The filesystem itself already does locking, so taking advantage of that can free up a lot of bother (see maildir)
[02:24:04] <earnest> But yeah, flock is generic answer.  A nice solution isn't :/
[02:24:32] <akoana> hmm, there are scenarios where you can't create a lock file, e.g. read-only filesystem
[02:24:35] <earnest> Imagine giving a load of users access to update via package manager, ouch
[02:24:48] <earnest> akoana: flock can take a directory
[02:25:40] <earnest> akoana: E.g. you can flock pwd with exec 9<. lol
[02:25:50] <akoana> hehe
[02:26:10] <earnest> It is a very nice tool
[02:26:13] <currybullen> so... given that my suggested is unelegant and there probably are better ways... would it still work?
[02:27:21] <earnest> No one knows your requirements, based on what you wrote, flock is the only answer
[02:27:22] <e36freak> currybullen: the lock in your example will only persist for the time it takes to run that date command
[02:27:28] <e36freak> currybullen: not the rest of the script
[02:27:36] <e36freak> you'll want to use one of the two methods i showed with flock
[02:27:45] <earnest> (I assume they read the FAQ)
[02:27:55] <currybullen> oh right, stoopid
[02:28:26] <earnest> Should start saying shewed
[02:28:33] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 256 seconds)
[02:30:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Ping timeout: 264 seconds)
[02:31:23] *** Joins: AntonioPt (~puppy@129.85.63.94.rev.vodafone.pt)
[02:31:32] <AntonioPt> g'even all
[02:31:47] <AntonioPt> web_path=`dirname "$0"`
[02:31:47] <AntonioPt>     sed -i -e `s#^DocumentRoot.*#DocumentRoot \"$web_path/www\"#g`  ${httpd_conf}
[02:32:27] <AntonioPt> and out put gives me variant instead full path what im doing wrong thxx in advanc
[02:33:55] <earnest> he thanc but he also advanc
[02:34:45] *** Joins: rgrinberg (~textual@200.5.63.76)
[02:35:04] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 264 seconds)
[02:35:08] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:35:12] <AntonioPt> earnest, got any clue?
[02:35:27] <earnest> No, I don't know
[02:35:50] <e36freak> stop using back ticks, first of all
[02:35:52] <AntonioPt> ahh i got it change ` to "
[02:36:12] <e36freak> use $(), never `. ` has been deprecated for ages
[02:36:26] <e36freak> also you need to quote "$httpd_conf", braces are not a substitute for quoting
[02:36:40] <AntonioPt> ok
[02:36:49] <AntonioPt> let me check it that way
[02:37:12] <e36freak> dirname $0 is also problematic, but it might be good enough
[02:37:14] <e36freak> !faq location
[02:37:14] <AntonioPt> e36freak,
[02:37:14] <greybot> https://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
[02:37:45] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:37:53] <AntonioPt> yes e36freak i know that but for linux version that im using works
[02:38:05] <e36freak> like i said, it *might* be good enough
[02:38:10] <e36freak> there's no robust way to do that though
[02:38:14] <AntonioPt> indeed :)
[02:39:54] <xx> and in any case you should quote the $0
[02:40:12] <xx> oh nvm
[02:41:16] <xx> I wonder, should we be doing $(dirname -- "$0") instead? I.e. with the --
[02:42:00] <e36freak> if it's not in PATH it should be being invoked with ./ or a full path so it doesn't matter, but it won't hurt anything
[02:42:37] <xx> I just spotted that if I run it on interactive shell just like that, then it is a problem because $0 is -bash, which gets interpreted as an option to dirname
[02:42:39] <earnest> xx: Just never do it
[02:42:40] <AntonioPt> im guessing old way `dirname "$0"` new way $(dirname "$0")
[02:42:47] <xx> # echo "$0"
[02:42:48] <shbot> xx: bash
[02:43:00] <xx> hmm, shbot does not run a login shell
[02:43:16] <earnest> (It's that simple, just don't do it.  Pretend the option doesn't exist)
[02:43:25] <xx> earnest: "It hurts when I poke my thigh" "So... don't poke your thigh then?"
[02:43:50] <earnest> Yeah, or without analogy, just don't do the thing that is unreliable
[02:44:43] <earnest> The long tail grows fat!
[02:47:24] <e36freak> # echo $-
[02:47:25] <shbot> e36freak: himBs
[02:49:33] <xx> earnest: that sounds like some wise statement, but I don't know what it means
[02:50:07] <earnest> Got to have some esoteric secrets
[02:50:16] <prompt32> shbot, Try & Check: echo 'echo "$_ $0"'>s0; chmod +x s0; ./s0; bash ./s0;
[02:50:51] <earnest> !check
[02:50:52] <checkbot> earnest: Looks good to me
[02:50:55] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:713a:c3a0:ebd0:8790) (Read error: Connection reset by peer)
[02:51:01] <earnest> Does !check take shell
[02:51:10] <e36freak> !check echo foo
[02:51:10] <checkbot> e36freak: Looks good to me
[02:51:16] <e36freak> !check echo $foo
[02:51:16] <checkbot> e36freak: Line 1: foo is referenced but not assigned. Line 1: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb28076
[02:51:20] <e36freak> apparently yes
[02:51:23] <earnest> So it does
[02:51:34] <earnest> !check echo 'echo "$_ $0"'>s0; chmod +x s0; ./s0; bash ./s0;
[02:51:34] <checkbot> earnest: Line 1: Expressions don't expand in single quotes, use double quotes for that. See https://shellcheck.net/?id=cb28094
[02:52:05] <e36freak> checkbot isn't checking the *contentsC of s0 though, so don't know if it's going to warn anything about that
[02:52:22] <earnest> # echo 'echo "$_ $0"'>s0; chmod +x s0; ./s0; bash ./s0;
[02:52:22] <shbot> earnest: ./s0 ./s0
[02:52:23] <shbot> earnest: /bin/bash ./s0
[02:52:27] <prompt32> shbot, as for 'thisdir i always use: thisdir=$(dirname $(readlink -f "$0))
[02:52:39] <earnest> Don't though
[02:52:46] <e36freak> still not reliable
[02:52:49] <earnest> Just don't do this, don't require it, don't build systems around it
[02:53:16] <earnest> Redesign the requirement out of existence
[02:53:23] <e36freak> hardcode the path for your config file, and include it in the docs or make it obvious at the beginning and changeable
[02:53:27] <e36freak> don't rely on script location, ever
[02:53:51] <e36freak> if it' being distributed do it with a package that creates the config file in the appropriate location and, again, document it
[02:54:05] <e36freak> hell, put it in --help output
[02:54:16] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[02:54:38] <prompt32> e36freak, why ?
[02:54:59] <earnest> There's a myth about 'hardcoding', a thought terminating cliche.  DJB's article on file location quickly dispells it, as it's obviously silly
[02:55:35] <earnest> 'Best practice' is going to ruin everything, just you watch ;o
[02:55:45] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 256 seconds)
[02:56:25] <e36freak> !faq location > prompt32
[02:56:25] <greybot> prompt32: https://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
[02:56:58] <earnest> I was also convinced by tedu's article on programs that change behaviour based on $0
[02:57:06] <e36freak> link?
[02:57:43] <earnest> e36freak: https://flak.tedunangst.com/post/a-prog-by-any-other-name
[02:57:47] <e36freak> thanks
[02:57:56] <earnest> # exec -a thisisstupid ls --help | head -n 1
[02:57:57] <shbot> earnest: Usage: /bin/ls [OPTION]... [FILE]...
[02:58:00] <earnest> Oh
[02:58:08] <earnest> shbot's help is builtin?
[02:58:10] <earnest> # type ls
[02:58:11] <shbot> earnest: ls is /usr/bin/ls
[02:58:28] <earnest> Oh well, on gnu coreutils, it changes usage: thisistupud [...]
[02:58:34] *** Joins: Guest51 (~Guest51@p5ded513a.dip0.t-ipconnect.de)
[02:58:42] *** Quits: sazawal_ (~sazawal@223.190.82.88) (Quit: Leaving)
[02:58:42] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:59:15] <earnest> Unless the bash is too old for exec -a
[02:59:18] <Guest51> Hi guys, i want to create a array from a output, and already found out that this would work: test=( $(borg list /mnt/nfs_solaris/Backups/Borg/1950X/ | awk '{ print $1 }') )
[02:59:58] <Guest51> but know i want to add in the actual output (wich runs before that), the numbers wich are the indexes(?) in the array?
[03:00:02] <e36freak> earnest: that i care less about, but relying on $0 for location is just dumb and asking for failure
[03:00:19] <e36freak> $0 for usage is arguable both ways
[03:00:20] <Guest51> 1) galaxias-2021-11-24-172503
[03:00:21] <Guest51> 2) galaxias-2021-11-25-191859
[03:00:21] <Guest51> 3) galaxias-2021-11-26-221400
[03:00:23] <Guest51> for example
[03:00:50] <e36freak> that's a terrible way to create an array, but what does your full output look like?
[03:00:51] <earnest> e36freak: Yeah, this was a side point.  Legitimate security issue with doas as mentioned.  I don't like surprising computers, most of my time seems to be spent more on defending myself against the internet and other things
[03:00:53] <Guest51> so if i choose 1 with read, it takes $[test[1]}
[03:01:10] <e36freak> use mapfile to create your array, not wordsplitting
[03:01:19] <Guest51> e36freak i could show you, what pastebin u prefer?
[03:01:22] <e36freak> mapfile -t test < <(borg list ...)
[03:01:26] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:01:51] <e36freak> Guest51: you may find select useful
[03:01:53] <e36freak> "help select"
[03:01:55] <earnest> borg list has --json and --format.  It has {NL}, I'm not sure it has {NUL} or something, but it's probably guaranteed to not have newlines in wrong places
[03:02:12] <e36freak> otherwise just iterate over the indices and print the menu accordingly
[03:02:15] <earnest> Oh it does have NUL
[03:02:24] <Guest51> here is borg list without awk https://dpaste.com/E4CNUXDEY
[03:02:27] <earnest> Well that's very nice of borg
[03:02:34] <e36freak> for i in "${!test[@]}"; do printf '%d %s\n' "$i "${test[i]}"; done
[03:03:05] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[03:03:26] <earnest> (I would skip arrays entirely and just consume input and output in one big pipeline.  Also because my self-imposed limit of using sh means I don't get arrays)
[03:03:47] <Guest51> sry, you guys are little to fast for me:)
[03:03:51] <earnest> Especially because borg list has two very nice output formats
[03:04:04] <Guest51> [00:32:34] <e36freak> for i in "${!test[@]}"; do printf '%d %s\n' "$i "${test[i]}"; done
[03:04:05] <Guest51>  that didnt work? i get only a > in terminal
[03:04:12] <e36freak> PS3="Choice? "; select choice in "${test[@]}"; do echo "$choice"; break; done
[03:04:16] <e36freak> oh i missed a quote
[03:04:18] <e36freak> "$i"
[03:04:19] <earnest> Guest51: The "$i needs a "$i"
[03:04:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:04:51] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 268 seconds)
[03:05:03] <Guest51> ah ok
[03:05:09] <earnest> I'd be all borg list ... | menu | { do stuff with selection(s); }
[03:05:23] <Guest51> earnest how do you would do it?:)
[03:05:25] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:05:32] <e36freak> i mean it sounds like he's exactly trying to implement select
[03:05:39] <earnest> Yeah
[03:05:44] <e36freak> so... just use select
[03:05:50] <Guest51> https://github.com/solisinvictum/borgrestore
[03:06:05] <Guest51> this is what im working on it. and want to implement a easier select mechanism
[03:06:32] <e36freak> well the loop i showed will print index -> value, you can adjust the printf accordingly
[03:06:34] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[03:06:43] *** Joins: kill (~killown@user/killown)
[03:06:44] <earnest> Guest51: If you define your $confirmation variable as lowercase only, you don't need to check all cases of yes/no
[03:06:55] <e36freak> or use "${confirmation,,}"
[03:06:59] <earnest> Yeah
[03:07:08] <earnest> Guard rm -rf with --, this spooks me
[03:07:23] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (Quit: Quitting)
[03:07:24] <e36freak> # var=StUfF; echo "${var,,}"; echo "${var^^}"
[03:07:25] <shbot> e36freak: stuff
[03:07:25] <shbot> e36freak: STUFF
[03:07:29] <Guest51> yeah, but like you can see, i used it from a homepage. wrote it in the command :)
[03:07:32] *** Joins: rgrinberg (~textual@200.5.63.76)
[03:08:09] <Guest51> [00:37:07] <earnest> Guard rm -rf with --, this spooks me
[03:08:10] <Guest51> what do you mean?
[03:08:34] <earnest> Guest51: rm -rf -- "$variable", now if $variable starts with - it won't be interpreted as a flag
[03:08:35] <e36freak> rm -rf -- "$file"
[03:09:03] <Guest51> ah
[03:09:06] <Guest51> i understand
[03:09:10] <Guest51> great fix, thanks
[03:09:46] <earnest> e36freak: I was just peeking about and thought you might like this construction: https://0x0.st/-hij.txt
[03:09:57] <earnest> Except for %F, this is posix lol
[03:10:16] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[03:10:16] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[03:10:30] <earnest> Won't work on BSD though because they don't implement touch -d, too new for them
[03:10:34] <e36freak> heh
[03:11:05] <Guest51> thanks for that: https://github.com/solisinvictum/borgrestore/commit/07779fbe5429387a346eef46245edb1adb9a2ecb
[03:11:06] <earnest> All because find(1p) doesn't do sub-24hour resolution
[03:12:49] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[03:12:52] <earnest> (Which is half the fun, tbh)
[03:13:04] <Guest51> i didnt understand select right. it works with predefined options i wrote in the code? but the output of borg list is dynamic
[03:13:15] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[03:13:53] <e36freak> you pass it a list of WORDS to select between
[03:14:08] <e36freak> it won't assign the index though, it will assign the value to the NAME
[03:14:14] <e36freak> could be good or bad, depneding on whaty ou want
[03:14:39] <e36freak> try: array=(foo bar baz); select choice in "${array[@]}"; do echo "$choice"; break; done
[03:14:57] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:02] <Guest51> aahhhh
[03:15:06] <Guest51> now i understand
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:28] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[03:16:33] <prompt32> e36freak, what about if your script (s0) have this:
[03:16:35] <prompt32> echo 'echo "$_ $0"'>/tmp/.x$$; chmod +x /tmp/.x$$; . /tmp/.x$$;
[03:16:54] <prompt32> bash -c ./s0 >>>> /tmp/.x3803424 ./s0
[03:17:45] <earnest> prompt32: Why don't you use "$magical_script_location_variable" instead?
[03:17:56] <earnest> The variable always holds the correct location
[03:18:45] <prompt32> i dont have that version of bash
[03:18:57] <earnest> Ah, that's too bad
[03:19:20] <e36freak> i have no idea what that's attempting to do
[03:19:20] <prompt32> ! but is definitly possible to find your script location.
[03:19:29] <prompt32> run it
[03:19:31] <e36freak> if it's even on the local machine
[03:19:34] <Guest51> can i change the "#?" from select to anything another?
[03:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:41] *** Quits: AntonioPt (~puppy@129.85.63.94.rev.vodafone.pt) (Ping timeout: 252 seconds)
[03:21:02] <e36freak> Guest51: PS3
[03:21:05] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[03:21:34] <Guest51> PS3? :)
[03:21:51] <e36freak> PS3='Prompt? '
[03:22:09] <Guest51> https://unix.stackexchange.com/questions/193659/in-which-situations-are-ps2-ps3-ps4-used-as-the-prompt#193660 i understand
[03:22:12] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[03:23:05] *** Joins: xizhendu_ (~xizhendu@36.112.188.169)
[03:23:20] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:24:23] <Guest51> array=($(borg list /mnt/nfs_solaris/Backups/Borg/1950X/ | awk '{ print $1 }')); select choice in "${array[@]}"; do echo "$choice"; break; done
[03:24:40] <Guest51> do i understand right, that this is a loop because of the break ?
[03:25:42] <e36freak> mapfile -t array < <(borg list ... | awk ...)
[03:25:48] <e36freak> don't rely on wordsplitting
[03:26:04] <e36freak> that could fail spectacularly depending on what's in borg's output
[03:26:15] <e36freak> yes, select is a loop
[03:26:34] <earnest> Guest51: You don't need awk, borg list has --format
[03:26:42] <e36freak> or that
[03:27:01] <earnest> --format '{name}'
[03:27:49] <earnest> Or --format '{barchive}{NUL}' and then fix mapfile to use nul delimiters instead of newlines
[03:27:52] <Guest51> array=($(borg list --format '{name}' /mnt/nfs_solaris/Backups/Borg/1950X/)); select choice in "${array[@]}"; do echo "$choice"; break; done
[03:27:53] <Guest51> 1) EndeavourOS with KDEgalaxias-2021-11-24-172503galaxias-2021-11-25-191859galaxias-2021-11-26-221400galaxias-2021-11-27-141300galaxias-2021-11-28-212400galaxias-2021-11-29-084740galaxias-2021-11-29-140551galaxias-2021-11-29-150559galaxias-2021-11-29-160559galaxias-2021-11-29-170559galaxias-2021-11-29-180559galaxias-2021-11-29-190559galaxias-2021-1
[03:27:53] <Guest51> 1-29-200600galaxias-2021-11-29-210600galaxias-2021-11-29-230600galaxias-2021-11-30-000601
[03:28:19] <earnest> Guest51: Stop doing array=($(...))
[03:29:04] <Guest51> sry, but you guys way to fast for me:)  im started to understand the whole array thing:)
[03:29:06] <earnest> Read the manual for borg-list, it describes the format flag
[03:29:29] <Guest51> and now you give me input about mapfile or something :)
[03:29:38] <e36freak> you're still relying on wordsplitting. use mapfile, as i've shown twice now
[03:29:41] <Guest51> earnest ok, doing this first
[03:31:18] <Guest51> ok
[03:31:20] <Guest51> borg list --short /mnt/nfs_solaris/Backups/Borg/1950X/
[03:31:20] <Guest51> EndeavourOS with KDE
[03:31:21] <Guest51> galaxias-2021-11-24-172503
[03:31:21] <Guest51> galaxias-2021-11-25-191859
[03:31:27] <Guest51> the --short is the right for me
[03:31:32] <e36freak> ok
[03:31:44] <e36freak> then assign those values to the array using mapfile -t array < <(borg ...)
[03:31:48] <Guest51> and now, you suggest mapfile ?
[03:31:50] <Guest51> ok
[03:32:00] <e36freak> !faq 5
[03:32:00] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[03:33:06] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[03:33:53] <Guest51> and use mapfile in combination with select right?
[03:33:53] *** Quits: dermoth (~dermoth@dsl-149-192.b2b2c.ca) (Changing host)
[03:33:53] *** Joins: dermoth (~dermoth@user/dermoth)
[03:34:02] <earnest> mapfile creates the array
[03:34:21] <Guest51> yep, seems so
[03:36:54] *** Joins: ponies (~ponies@61.69.203.88)
[03:37:40] *** Joins: sublim20 (~sublim20@user/sublim20)
[03:38:00] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[03:38:15] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:38:20] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:39:53] <Guest51> i think this wouldnt work or? https://dpaste.com/3BPCZTP59
[03:41:02] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:41:40] *** Joins: edk (edk@libera/staff/edk)
[03:41:48] *** Joins: AntonioPt (~puppy@129.85.63.94.rev.vodafone.pt)
[03:42:37] <e36freak> did you try it?
[03:42:42] <Guest51> no
[03:42:47] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:42:50] <e36freak> why not?
[03:42:58] <Guest51> good point :)
[03:43:35] <Guest51> hehe ok
[03:44:15] <Guest51> but i didnt understand why do
[03:44:15] <Guest51> echo "$choice"
[03:44:16] <Guest51> break
[03:44:16] <Guest51> done
[03:44:17] <Guest51> is necessary
[03:44:37] <Guest51> because its outputs only the one selection
[03:45:05] <Guest51> but so far i understand select is a kind of a loop if i see it right
[03:45:49] *** Joins: igemnace (~ian@user/igemnace)
[03:46:39] *** Quits: dermoth (~dermoth@user/dermoth) (Quit: Leaving)
[03:46:40] <e36freak> it's a demonstration of how you might use select
[03:46:40] <Guest51> and select didnt care if the input is correct or not. it simply do the same like read? i thought it would ask again if the input is invalid/not in the selection list?
[03:46:47] <e36freak> i don't know what you're actually doing with it
[03:46:55] *** Joins: dermoth (~dermoth@user/dermoth)
[03:47:14] <Guest51> https://dpaste.com/2CVLGJTWW
[03:47:22] <e36freak> ''help select''
[03:47:26] <pyeverything> find . -maxdepth 1 -type d | while read -r dir  --> then in > type: do printf "%s:\t" "$dir"; find "$dir" -name "*.pt" | wc -l; done
[03:47:29] <e36freak> read it, use it according to how select behaves
[03:47:32] <Guest51> the user get this selection, it should select a snapshot. then
[03:47:43] <e36freak> not gonna write the whole thing for you
[03:47:43] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[03:47:59] <pyeverything> do you know how can I count the number of 0s shown in the result of this command? find . -maxdepth 1 -type d | while read -r dir  --> then in > type: do printf "%s:\t" "$dir"; find "$dir" -name "*.pt" | wc -l; done
[03:48:09] *** Joins: zaden (~maddx@73.92.207.228)
[03:48:19] <e36freak> that doesn't look valid? what is --> then in > type
[03:48:37] <Guest51> e36freak hehe, no! i want to do it by my self:)   im only try to understnd. dont worry
[03:48:46] <e36freak> if you're just looping over dirs no reason to use find or anything, for dir in ./*/; do
[03:49:14] <pyeverything> so you first paste find . -maxdepth 1 -type d | while read -r dir  and then in the prompt that shows paste do printf "%s:\t" "$dir"; find "$dir" -name "*.pt" | wc -l; done
[03:49:28] *** Joins: Atque (~Atque@user/atque)
[03:49:52] <pyeverything> well e36freak the command works for me, I just need to count the number of results where the output of command is 0
[03:49:57] <e36freak> for dir in ./*/; do printf '%s:\t' "$dir"; find "$dir" -name '*.pt' -printf x | wc -c; done
[03:50:00] <e36freak> better way to do that
[03:50:23] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[03:50:24] <e36freak> but one way would be to pipe the whole thing to awk '$NF==0{t++} END {print t}'
[03:51:27] <e36freak> you could also store the find | wc output and count it while in the loop
[03:51:31] <pyeverything> e36freak, thanks a lot, confirming that your solution is working, I am gonna try the pipe part now (will take quite a while)
[03:51:45] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[03:51:57] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[03:51:58] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[03:52:39] <pyeverything> e36freak, trying this as you suggested now for dir in ./*/; do printf '%s:\t' "$dir"; find "$dir" -name '*.pt' -printf x | wc -c; done | awk '$NF==0{t++} END {print t}'
[03:52:44] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:53:07] <e36freak> zeroes=0; for dir in ./*/; do pt_count=$(find "$dir" -name '*.pt' -printf x | wc -c); printf '%s:\t%d\n' "$dir" "$pt_count"; ((pt_count || zeroes++)); done; printf 'total:\t%d\n' "$zeroes"
[03:53:10] <pyeverything> so is /*/ acting as maxdepth 1? right? e36freak
[03:53:22] <e36freak> a glob ending in / only matches directories
[03:53:39] <pyeverything> but what is my directories have subdirectories? e36freak
[03:53:48] <e36freak> the glob is not recursive
[03:53:55] <pyeverything> I only want to get this stat at the depth 1 dirs
[03:54:40] <pyeverything> gotcha I think what you mean is /*/ is a glob. I have been mostly using glob.glob method as in Python. Thanks a lot e36freak
[03:55:18] <pyeverything> I have 3000 directories and some of them might have up to 10,000 files in them, I guess this will quite take a while
[03:55:21] *** Quits: hingoanashi1209 (~hingoanas@user/hingoanashi1209) (Quit: Leaving)
[03:55:31] *** Joins: noord (~noord@user/noord)
[03:55:37] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[03:57:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[03:58:20] <Guest51> if i understand "help select" right, this should work: https://dpaste.com/8XZ9GWPSX
[03:58:28] <Guest51> but it didnt :)
[03:59:04] <e36freak> if you're using [ you MUST quote the variable
[03:59:12] <e36freak> [ -z $foo ] with an empty variable becomes [ -z ]
[03:59:19] <e36freak> and since -z is a non-empty string, it's true
[03:59:26] <e36freak> so [ -z $var ] is ALWAYS true
[03:59:29] <Guest51> ah ok
[03:59:38] <e36freak> either use [[ -z $var ]] or [ -z "$var" ]
[03:59:42] <e36freak> the former is preferred in bash
[03:59:46] <Guest51> so there is a another way to use if as with []?
[03:59:52] <e36freak> in fact always quote your array expansions
[03:59:54] <e36freak> ![
[03:59:54] <greybot> [ or test is the POSIX test command. It can do simple tests on files and strings. In bash, you should use the more powerful [[ instead and ban [ for sake of consistency. [[ can do pattern matching, is faster and safer to use. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals http://mywiki.wooledge.org/BashFAQ/031
[03:59:58] <e36freak> !if[
[03:59:58] <greybot> [ is NOT part of the `if' syntax. It's a normal, ordinary COMMAND, like grep and rm. Like `if grep ..', `if [' just checks its exit status. And just like `ifgrep`, `if[` is wrong. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals
[04:00:48] <e36freak> all "if" does is check the exit status of a command. it can be any command
[04:01:52] <e36freak> also echo "$name", never echo $name. and it's generally bad practice to use all-caps variable names
[04:02:25] <Guest51> hmm, select still dont set the NAME variable if selected a correct selection. i used [ -z "$NAME" ]
[04:02:40] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Ping timeout: 264 seconds)
[04:02:44] <Guest51> i debug first with simple echo to look what in that
[04:02:46] <e36freak> erm sorry about the [ -z $foo ] always being true, but regardless the expansions need to be quoted
[04:03:09] <e36freak> oh. it's settich "$choice", not "$NAME"
[04:03:22] <e36freak> NAME is where you put the variable in the syntax, not the name of a variable itself
[04:03:25] <e36freak> it's not like REPLY
[04:03:51] <e36freak> just like case WORD in [PATTERN, WORD and PATTERN are not literal
[04:04:12] <Guest51> hm? in "help select" is written, if a correct number is choosen wich exist, than that corresponding name is written in NAME
[04:04:15] <e36freak> if [ -z "$choice" ]; then
[04:04:25] <e36freak> NAME as in the NAME you provide select NAME in ...
[04:04:28] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 264 seconds)
[04:04:55] <Guest51> rofl
[04:04:57] <Guest51> sry
[04:05:00] <e36freak> i can see how that could be confusing
[04:05:08] <e36freak> especially because REPLY actually is a variable name
[04:06:15] <Guest51> now it works :)
[04:06:28] <e36freak> you get used to that stuff after reading a lot of documentation and it gets less confusing
[04:10:49] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[04:11:03] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[04:11:20] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 265 seconds)
[04:11:27] *** Joins: Gerula (~Gerula@user/gerula)
[04:12:30] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[04:13:02] *** Joins: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[04:13:59] *** Joins: ntwk (~ntwk@user/ntwk)
[04:15:08] *** Quits: tex (~super@user/dix) (Ping timeout: 252 seconds)
[04:15:18] *** Joins: rgrinberg (~textual@200.5.63.76)
[04:16:31] <Guest51> thanks to you e36freak https://github.com/solisinvictum/borgrestore/commit/b9333ba840e3fc91afde4b842db1571182a14555
[04:17:27] *** Quits: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net) (Client Quit)
[04:17:52] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[04:20:17] <pyeverything> e36freak, so I am running for dir in ./*/; do printf '%s:\t' "$dir"; find "$dir" -name '*.pt' -printf x | wc -c; done | awk '$NF==0{t++} END {print t}' to understand how many directories are yet to be processed by my python code. I had 3113 directories, and so far 594 is left. This code has been running over 3 days or so. I would like to know if I could use the command starting with for in order to guage how long more should I wait until all
[04:20:17] <pyeverything> directories are done. A directory processing is done if number of .pt files in all of its subdirectories won't add up to 1. Thanks a lot for any feedback
[04:21:16] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Quit: Leaving)
[04:22:21] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (Quit: leaving)
[04:22:40] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[04:22:46] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:23:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:25:04] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[04:25:34] *** Joins: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[04:27:20] *** Quits: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net) (Client Quit)
[04:28:05] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[04:28:41] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[04:29:28] *** Joins: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[04:29:45] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:29:58] *** Quits: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net) (Client Quit)
[04:31:55] *** Joins: diamondbond (~diamondbo@175.157.188.250)
[04:32:05] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[04:32:24] *** Quits: diamondbond (~diamondbo@175.157.188.250) (Read error: Connection reset by peer)
[04:32:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:32:49] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[04:34:53] *** Joins: killown (~killown@user/killown)
[04:35:28] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[04:37:41] *** Quits: kill (~killown@user/killown) (Ping timeout: 252 seconds)
[04:37:41] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[04:42:56] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[04:43:32] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 240 seconds)
[04:44:07] *** Joins: timj (~timj@user/timj)
[04:44:20] *** Quits: AntonioPt (~puppy@129.85.63.94.rev.vodafone.pt) (Quit: Leaving)
[04:44:32] *** Joins: AntonioPt (~puppy@129.85.63.94.rev.vodafone.pt)
[04:45:34] *** Quits: Guest51 (~Guest51@p5ded513a.dip0.t-ipconnect.de) (Quit: Client closed)
[04:46:07] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:46:28] <ponies> pyeverything: -printf x | < ?
[04:46:29] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[04:46:59] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[04:47:51] *** Quits: libsys (~libsys@186.105.139.10) (Ping timeout: 245 seconds)
[04:48:17] *** Joins: libsys (~libsys@186.105.152.49)
[04:50:27] *** Joins: pj (~pj@ghettoforge/pj)
[04:50:53] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[04:55:00] *** lockywol- is now known as lockywolf
[04:58:16] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[04:58:18] <KillerWasp> hello
[04:58:33] *** Quits: xx (~xx@user/xx) (Quit: -upgrade)
[04:59:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[04:59:38] <KillerWasp> $ f="/usr/lib/libglib-2.0.so.0"
[04:59:39] <KillerWasp> $ echo "${f:-4}"
[04:59:43] <KillerWasp> /usr/lib/libglib-2.0.so.0
[05:00:40] <KillerWasp> i want get the last 4 characters, and don't happen: https://stackoverflow.com/questions/17542892/how-to-get-the-last-character-of-a-string-in-a-shell
[05:01:49] <sublim20> try inserting a space
[05:02:09] <sublim20> # f='1234567'; echo "${f: -4}"
[05:02:10] <shbot> sublim20: 4567
[05:04:29] *** Joins: user3456 (~user3456@user/user3456)
[05:04:42] *** Joins: Atque (~Atque@user/atque)
[05:06:48] <sublim20> though a double :: might work too
[05:07:03] <sublim20> # f='1234567'; echo "${f::-4}"
[05:07:04] <shbot> sublim20: 123
[05:07:16] <sublim20> nope, that's some other syntax.  whoops.  ignore that
[05:08:25] <e36freak> pyeverything: -printf x always prints one character per filename, and so is safe for any filename, including those with newlines
[05:08:50] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:09:09] <e36freak> pyeverything: probably would have been wise to have python output its progress, but a little late for that now. lesson for the future :)
[05:09:39] *** Joins: xx (~xx@user/xx)
[05:10:02] <e36freak> i'm not entirely sure what you mean though. if you want to know how many directories have no .pt files in them, that loop should work, though it is time intensive. not really a faster way to go through the directory tree unless you have a database
[05:10:20] <e36freak> you could do a few at a time in parallel to speed things up
[05:11:24] *** Joins: user3456_ (user3456@user/user3456)
[05:11:33] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[05:12:12] <KillerWasp> sublim20ᐒ thanks, work with a space
[05:12:16] *** Quits: user3456 (~user3456@user/user3456) (Ping timeout: 264 seconds)
[05:12:35] <KillerWasp> also, with a :: is a inverse cut string
[05:12:43] <e36freak> you can also use parenthesis if you'd prefer
[05:12:49] <e36freak> echo "${f:(-4)}"
[05:13:10] <sublim20> ahhh, yes.  that's the other syntax i was thinking of.  thanks e36
[05:13:31] <KillerWasp> if i called the file bash itself, it's a jump or a call?
[05:13:56] <e36freak> sorry?
[05:14:25] *** user3456_ is now known as user3456
[05:14:29] <KillerWasp> if i write the file itself
[05:15:04] <e36freak> oh you mean have the script recursively execute itself?
[05:15:05] <KillerWasp> echo "./foo.sh" > ./foo.sh && chmod u+x foo.sh && ./foo.sh
[05:15:12] <KillerWasp> yes
[05:15:19] <e36freak> it's going to fork and exec a new process
[05:15:29] <e36freak> it doesn't just jump back to the beginning
[05:15:29] <KillerWasp> e36freakᐒ and late can go back?
[05:15:32] <e36freak> if that's what you're asking
[05:15:46] <KillerWasp> go back and continue
[05:16:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:16:10] <KillerWasp> assuming you have a counter to make it finite.
[05:16:11] <e36freak> still don't understand what you're asking. there is no goto, or "start again"
[05:16:21] <e36freak> if you want to loop, enclose the whole thing in a loop
[05:16:47] <KillerWasp> it's gosub?
[05:17:18] <e36freak> does not exist
[05:17:35] <e36freak> i mean, there are functions which do the same thing
[05:17:41] <e36freak> but there are no labels or anything
[05:18:03] *** Quits: Feuermagier_ (~Feuermagi@154.28.188.22) (Ping timeout: 268 seconds)
[05:18:08] <e36freak> !guide > KillerWasp
[05:18:08] <greybot> KillerWasp: http://mywiki.wooledge.org/BashGuide or in PDF: http://s.ntnu.no/bashguide.pdf
[05:19:44] *** Quits: OlCe (~user@lfbn-nic-1-564-52.w90-118.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:21:10] *** Joins: thysermip (~thysermip@152.249.76.17)
[05:21:14] *** Quits: thysermip (~thysermip@152.249.76.17) (Remote host closed the connection)
[05:22:52] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[05:23:11] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[05:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:41] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[05:33:42] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[05:34:42] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[05:35:32] *** Joins: peve (~peve@2601:281:8700:5880::8577)
[05:43:59] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (Read error: Connection reset by peer)
[05:46:43] *** Joins: MetaNova (zero-one@znc/supporter/metanova)
[05:47:57] <joshbaptiste> hmm is there a pure bash way to emulate cut -f/ -d1-3 ? /foo/bar/baz/bom/rug ... want to always parse first 3 dirs "/foo/bar/baz"
[05:48:55] <joshbaptiste> assuming directory subdir length is variable
[05:49:25] *** Joins: OlCe` (~user@lfbn-nic-1-262-221.w90-116.abo.wanadoo.fr)
[05:51:41] <ponies> #p=/foo/bar/baz/bom/rug; echo "${p%%baz*}"
[05:51:47] <ponies> # p=/foo/bar/baz/bom/rug; echo "${p%%baz*}"
[05:51:47] <shbot> ponies: /foo/bar/
[05:52:06] <ponies> # p=/foo/bar/baz/bom/rug; echo "${p%%bar*}"
[05:52:07] <shbot> ponies: /foo/
[05:52:12] *** Joins: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com)
[05:53:31] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:53:55] *** Joins: sgn (~sgn@user/sgn)
[05:56:36] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[05:57:14] *** Quits: dfdx (~F@user/dfdx) (Quit: leaving)
[05:57:19] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[05:57:34] *** Joins: dfdx (~F@user/dfdx)
[05:58:02] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[06:01:21] *** Joins: keypusher (keypusher@user/keypusher)
[06:05:30] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[06:07:35] *** Joins: shroomreactionar (~shroomrea@2001:470:69fc:105::1:409e)
[06:08:26] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:12:50] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[06:13:33] *** Quits: AntonioPt (~puppy@129.85.63.94.rev.vodafone.pt) (Quit: Leaving)
[06:15:17] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[06:15:50] *** Joins: gschanuel27 (~gschanuel@user/gschanuel)
[06:19:28] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 264 seconds)
[06:19:28] *** gschanuel27 is now known as gschanuel2
[06:20:19] *** Joins: raffaele_ (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net)
[06:22:26] <e36freak> !faq 100 > joshbaptiste
[06:22:26] <greybot> joshbaptiste: https://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
[06:22:47] *** Quits: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net) (Ping timeout: 250 seconds)
[06:23:31] <e36freak> # var=/foo/bar/baz/bom/rug; tmp=${var#/*/*/*/}; echo "${var%"$tmp"}"
[06:23:31] <shbot> e36freak: /foo/bar/baz/
[06:23:49] <e36freak> or you could split it into an array and grab whichever indices you want
[06:24:17] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[06:24:26] <joshbaptiste> ah gotcha
[06:25:03] <e36freak> # var=/foo/bar/baz/bom/rug; IFS=/ read -ra parts <<<"$var"; (IFS=/; echo "/${parts[*]:1:3}")
[06:25:04] <shbot> e36freak: /foo/bar/baz
[06:26:42] *** Quits: Kruppt (~Kruppt@50-111-48-108.drhm.nc.frontiernet.net) (Quit: Leaving)
[06:26:51] <joshbaptiste> thx
[06:27:35] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:28:20] <e36freak> just a couple options, there are more ways to do it. do see the faq entry for ideas
[06:28:53] <joshbaptiste> ok
[06:29:08] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:29:28] *** Joins: sgn (~sgn@user/sgn)
[06:34:44] <phy1729> e36freak: you can nest on the RHS
[06:35:00] *** Joins: ferdna (~ferdna@user/ferdna)
[06:35:37] <phy1729> # var=/foo/bar/baz/bom/rug; echo "${var%"/${var#/*/*/*/}"}"
[06:35:38] <shbot> phy1729: /foo/bar/baz
[06:38:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:39:44] *** Joins: millido (~millido@84.210.150.128)
[06:41:51] *** Joins: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com)
[06:41:57] *** Quits: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com) (Quit: smeeagle)
[06:43:17] <e36freak> ah true that
[06:43:31] <e36freak> that would mean like
[06:43:34] <e36freak> thinking about what i'm doing
[06:45:19] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[06:45:44] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:45:50] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[06:46:41] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[06:47:31] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 256 seconds)
[06:48:54] *** Joins: superboot (~agentgasm@user/superboot)
[06:52:43] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[06:54:16] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[06:54:32] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[06:54:44] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[06:55:32] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[06:56:48] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[06:57:31] <kurahaupo> What should we do when folk offer antipattern shell scripting advice in other channels, notably #Linux? Say, when someone asks for the command to tell which path a command is found on, from PATH, and a bunch of people pile in and recommend "which".
[06:57:38] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:59:28] <Blondie101010> just correct them or give better suggestions
[06:59:43] *** Joins: namkeleser (~namkelese@101.175.102.188)
[07:00:35] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[07:02:40] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[07:03:01] *** Joins: sublim20 (~sublim20@user/sublim20)
[07:03:37] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[07:08:23] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[07:08:57] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[07:09:11] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[07:09:12] *** Quits: jos1 (~jos3@dyndsl-091-248-052-116.ewe-ip-backbone.de) (Ping timeout: 265 seconds)
[07:10:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:10:40] *** Joins: sgn (~sgn@user/sgn)
[07:11:31] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 250 seconds)
[07:11:38] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:04] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[07:12:08] *** Joins: ionface (~ionface@user/ionface)
[07:14:04] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[07:14:42] <phy1729> kurahaupo: does #linux consider that to be topical?
[07:14:58] <e36freak> also don't be a dick about it
[07:15:19] <phy1729> being a dick is only topical for #bash /s
[07:15:24] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[07:15:46] <kurahaupo> phy1729: #linux treats "anything that runs on Linux" as topical.
[07:16:02] <kurahaupo> e36freak: That's the heart of my question: how?
[07:16:09] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[07:16:23] <phy1729> that's ... broad. Could refer them to greybot factoids or the wiki
[07:16:25] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[07:16:25] <Blondie101010> yeah, and they even accept trolls, as long as they don't abbreviate
[07:16:33] <e36freak> i think it partially depends on how egregious the error is
[07:16:38] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[07:16:55] <e36freak> pasting factoids/wiki articles isn't a bad move
[07:17:06] <e36freak> tone matters, as much as it can come across on irc
[07:17:32] <phy1729> Could also refer them to #bash if they argue about the reasoning for X is not ideal.
[07:17:49] <phy1729> (which goes for X as a placeholder and X11 itself)
[07:19:49] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:21:53] <kurahaupo> I've tried suggesting "command -v" instead of "which" (since people won't read links) but that just starts an argument about how that reports aliases (as if that's a bad thing)
[07:21:58] *** Joins: jos1 (~jos3@dyndsl-178-142-066-218.ewe-ip-backbone.de)
[07:22:39] <e36freak> using which isn't a big deal in most contexts, at least
[07:22:53] *** Parts: KillerWasp (KillerWasp@user/killerwasp) (YOU KIDDING ME?? YOU KIDDING MEEE???? (PC drinking beer) *kernel panic!*)
[07:24:14] *** Joins: wodencafe (wodencafe@woden.cafe)
[07:24:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:24:31] <kurahaupo> e36freak: I agree that "which" does do what it says on the tin. But asking for and/or using it is a bad smell.
[07:24:42] *** Joins: emanuele6 (~emanuele6@net-93-65-50-99.cust.vodafonedsl.it)
[07:24:53] *** Quits: emanuele6 (~emanuele6@net-93-65-50-99.cust.vodafonedsl.it) (Changing host)
[07:24:53] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[07:25:10] <kurahaupo> So uncritical responses are encouraging horrible scripting
[07:26:10] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[07:28:23] *** Joins: rgrinberg (~textual@200.5.63.76)
[07:29:55] *** Joins: kdc (~kdc@196.211.197.159)
[07:30:40] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:33:59] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.3)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:22] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:40:53] *** Joins: killall (~killown@user/killown)
[07:41:11] <shroomreactionar> Can I use bash to accept HTML forms on my server?
[07:41:21] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[07:41:44] <phy1729> I guess, but don't
[07:41:58] <e36freak> lol
[07:45:16] *** Quits: killown (~killown@user/killown) (Ping timeout: 264 seconds)
[07:45:52] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 264 seconds)
[07:46:32] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:50:58] <pj> reference the hammer and nail discussion from yesterday
[07:52:26] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:55:47] *** Quits: l4yer (~l4yer@2a07-a880-3101-1051-a922-bb49-135a-4393.pool6.ovpn.com) (Remote host closed the connection)
[07:58:50] *** Joins: l4yer (~l4yer@2a07-a880-3101-1052-a135-751a-e6a7-8249.pool6.ovpn.com)
[08:03:47] <kurahaupo> shroomreactionar: It's a Turing complete language (except for the "unlimited" bit) so yes it's possible. However that doesn't make it a good idea
[08:04:48] <kurahaupo> pj: "When the only tool you have is a hammer, all your fingers start looking like targets"?
[08:04:56] <pj> lol
[08:08:37] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:11:43] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:11:47] *** Joins: sgn_ (~sgn@user/sgn)
[08:13:17] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:15:50] *** Joins: ionface_ (~ionface@user/ionface)
[08:15:52] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 264 seconds)
[08:18:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:20:27] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 256 seconds)
[08:20:30] *** Joins: ionface (~ionface@user/ionface)
[08:22:12] *** Quits: peve (~peve@2601:281:8700:5880::8577) (Quit: Leaving)
[08:34:47] *** Quits: dfdx (~F@user/dfdx) (Quit: leaving)
[08:35:11] *** Joins: dfdx (~F@user/dfdx)
[08:39:21] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[08:39:26] <shroomreactionar> I hate web, very gay
[08:39:33] <shroomreactionar> want minimalist web
[08:39:36] <shroomreactionar> need web form
[08:40:26] <shroomreactionar> I guess I'll use PHP, that is a great language
[08:47:07] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[08:49:07] *** sgn_ is now known as sgn
[08:50:40] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[08:53:32] *** Joins: han-solo (~hanish@user/han-solo)
[08:56:21] *** Quits: joerg (~saturn@user/joerg) (Ping timeout: 268 seconds)
[08:57:07] *** Joins: joerg (~saturn@user/joerg)
[08:57:21] *** Joins: nrl^ (~nrl@68.101.58.90)
[09:05:40] *** Joins: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67)
[09:06:03] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[09:08:14] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:09:06] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:15:49] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:16:45] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Read error: Connection reset by peer)
[09:17:05] *** Joins: xizhendu_ (~xizhendu@36.112.188.169)
[09:18:11] *** Joins: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[09:20:56] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[09:25:25] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:32] *** Joins: TMan459_ (~TMan459@068-113-237-069.res.spectrum.com)
[09:26:31] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (Ping timeout: 250 seconds)
[09:29:38] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) ()
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:09] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:36:48] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[09:43:45] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:51:42] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[09:52:10] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:52:28] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 264 seconds)
[09:53:27] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[09:53:44] *** Joins: sgn (~sgn@user/sgn)
[09:53:44] *** Joins: konsolebox (~konsolebo@37.120.210.110)
[10:02:35] *** Joins: sublim20 (~sublim20@user/sublim20)
[10:03:35] *** Quits: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Read error: Connection reset by peer)
[10:03:56] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[10:05:12] *** Joins: aniketgm (~Aniket@49.36.107.115)
[10:09:01] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:12:07] *** Joins: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de)
[10:14:04] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[10:16:21] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[10:16:46] *** Joins: ano (~ano@user/ano)
[10:17:03] *** Parts: aniketgm (~Aniket@49.36.107.115) ()
[10:18:29] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[10:20:13] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:24:31] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[10:25:45] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[10:26:53] *** Quits: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com) (Quit: Leaving.)
[10:27:45] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:29:28] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[10:29:35] *** Joins: vysn (~vysn@user/vysn)
[10:30:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:32:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:33:32] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:38:34] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[10:39:59] <quazimodo> im struggling to reset "$@" to an empy value
[10:41:04] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 264 seconds)
[10:41:40] <quazimodo> ha fixed it
[10:41:43] <quazimodo> i am smrt
[10:42:42] *** Joins: earendel (uid498179@user/earendel)
[10:43:04] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[10:46:30] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[10:49:47] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[10:54:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:03:03] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[11:03:18] *** Joins: zenobit (~zen@88.103.31.15)
[11:03:49] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Read error: Connection reset by peer)
[11:05:27] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[11:05:27] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[11:07:37] *** Quits: nahcetan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[11:07:42] *** Quits: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67) (Ping timeout: 268 seconds)
[11:08:15] *** Joins: rendar (~rendar@user/rendar)
[11:08:45] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 256 seconds)
[11:09:10] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:11:20] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[11:12:51] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[11:14:36] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:15:03] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[11:16:00] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[11:25:39] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[11:30:52] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:24d3:2aa8:afd:ebec) (Ping timeout: 264 seconds)
[11:34:32] *** Joins: pilyn (~pilyn@user/pilyn)
[11:36:39] *** Quits: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9) (Changing host)
[11:36:39] *** Joins: izabera (izabera@user/izabera)
[11:38:21] *** Quits: konsolebox (~konsolebo@37.120.210.110) (Remote host closed the connection)
[11:39:44] *** Joins: n4dir (~user@mue-88-130-56-187.dsl.tropolys.de)
[11:41:10] *** Joins: kurahaupo_ (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[11:43:28] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 264 seconds)
[11:43:35] *** Joins: konsolebox (~konsolebo@37.120.210.110)
[11:43:45] *** Joins: arinov (~arinov@213.194.126.155)
[11:49:26] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 252 seconds)
[11:50:50] *** Quits: konsolebox (~konsolebo@37.120.210.110) (Remote host closed the connection)
[11:51:18] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:53:52] *** Joins: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de)
[11:55:01] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[11:56:04] *** Joins: konsolebox (~konsolebo@37.120.210.110)
[11:59:45] *** Quits: kurahaupo_ (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:59:53] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Ping timeout: 252 seconds)
[11:59:57] <hejux> in a function A() {}, is there a difference for another function B that runs A? array=( x y ) VS declare -ag array=( x y ) . i found that latter has some problem, B can't see the $array correctly
[12:00:52] <Soliton> declare is the same as local in a function.
[12:01:05] <hejux> but i gave a `g`
[12:01:26] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[12:01:28] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[12:02:04] *** Quits: xx (~xx@user/xx) (Ping timeout: 264 seconds)
[12:05:12] *** Joins: tex (~super@user/dix)
[12:05:20] <hejux> so in this case : set_var() { declare -ag array=( set1 set2 ) ; } ; conf_ipset() {for i in "$array[@]" ; do ipset ....} ;  main () {set_var ; conf_ipset ; } , it works fine
[12:05:28] <hejux> but in my another example, it does not work
[12:05:59] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[12:06:13] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[12:06:48] *** Joins: narendra (~user@2a02:8109:b63f:ff7c::56c2)
[12:07:16] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[12:07:16] *** Quits: tex (~super@user/dix) (Client Quit)
[12:07:50] *** Joins: b0b (~bob@user/b0b)
[12:09:22] <hejux> but in an exteranl xx.conf file, if i don't declare -A -g ass_array=() ; in main() {source /etc/xxx/xx.conf ; rest_code} , rest_code won't be able to see tha ass_array
[12:10:24] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Quit: Leaving)
[12:10:26] <pj> hejux: declare -ag is the same as simply assigning the array directly, but declare -A is certainly different, that is required for an associate array.
[12:10:28] <hejux> -g only works with -A?
[12:11:12] <pj> # f(){ declare -ag ar=(foo bar baz); }; f; declare -p ar;
[12:11:13] <shbot> pj: declare -a ar=([0]="foo" [1]="bar" [2]="baz")
[12:11:21] <pj> # f(){ declare -a ar=(foo bar baz); }; f; declare -p ar;
[12:11:22] <shbot> pj: bash: declare: ar: not found
[12:11:34] <pj> ^^^^ the "g" makes it global...
[12:11:43] <pj> # f(){ ar=(foo bar baz); }; f; declare -p ar;
[12:11:44] <shbot> pj: declare -a ar=([0]="foo" [1]="bar" [2]="baz")
[12:11:52] <pj> works the same ^^^^
[12:12:09] <hejux> in some cases -ag does not work at all
[12:12:23] <pj> please show the code where it doesn't work, then.
[12:12:45] <pj> ...because as I just demonstrated it works just fine.
[12:14:20] <earendel> is every non local variable declared in a function a global variable?
[12:14:41] <hejux> # f1() { local k1=v1 k2=v2 ; declare -ag ar=( $k1 $k2) ; } ; f2() { f1 ; declare -p ar ; }
[12:14:42] <shbot> hejux: no output
[12:14:43] <pj> yes, unless the function is run in a subshell.
[12:14:59] <hejux> ^^^ case above
[12:15:09] <hejux> # f1() { local k1=v1 k2=v2 ; ar=( $k1 $k2) ; } ; f2() { f1 ; declare -p ar ; }
[12:15:10] <shbot> hejux: no output
[12:15:24] <Soliton> what if you call any function?
[12:15:34] <pj> hejux: you never actually run either of those functions in your code htere.
[12:15:34] <earendel> when is a function run in a subshell?
[12:15:44] <Soliton> declaring is fun and all but doesn't do much.
[12:16:02] <pj> f()( echo "This is in a subshell"; ); f;
[12:16:09] <pj> # f()( echo "This is in a subshell"; ); f;
[12:16:10] <shbot> pj: This is in a subshell
[12:16:20] <pj> # f(){ echo "This is not in a subshell"; }; f;
[12:16:20] <shbot> pj: This is not in a subshell
[12:16:31] <hejux> # f1() { local k1=v1 k2=v2 ; ar=( $k1 $k2 ) ; } ; f2() { f1 ; declare -p ar ; } ; f2
[12:16:32] <shbot> hejux: declare -a ar=([0]="v1" [1]="v2")
[12:16:47] <hejux> # f1() { local k1=v1 k2=v2 ; declare -ag ar=( $k1 $k2 ) ; } ; f2() { f1 ; declare -p ar ; } ; f2
[12:16:48] <shbot> hejux: declare -a ar=([0]="v1" [1]="v2")
[12:17:26] *** Quits: dre (~dre@2001:8003:c932:c301:ca62:53a2:f102:5ef0) (Quit: Leaving)
[12:18:11] <pj> # f()( s="foobar" ); f; echo "$s"
[12:18:11] <shbot> pj: no output
[12:18:16] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 264 seconds)
[12:18:19] <hejux> # f1() { local k1=v1 k2=v2 ; declare -ag ar=( $k1 $k2 ) ; } ; f2() { f1 ; if f1 ; then echo $ar ; fi ; } ; f2
[12:18:19] <pj> # f(){ s="foobar" }; f; echo "$s"
[12:18:20] <shbot> hejux: v1
[12:18:26] <shbot> pj: Missing terminating quote, bracket or keyword
[12:18:27] <earendel> is the function running in a subshell .. or just that block
[12:18:32] <pj> # f(){ s="foobar"; }; f; echo "$s"
[12:18:33] <shbot> pj: foobar
[12:18:44] <earendel> nyways ok.
[12:19:00] <pj> delimiting the block with () explicitly tells bash to run it in a subshell.
[12:19:33] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Quit: bye...)
[12:19:50] <pj> # f()( s="foobar" ); f; echo "$s"; declare -f f
[12:19:55] <shbot> pj:
[12:19:55] <shbot> pj: f ()
[12:19:55] <shbot> pj: etc... ( http://ix.io/3Gyo )
[12:20:21] <earendel> so non local declared vars in functions are like local declared ones in subshells?
[12:20:38] *** Joins: skylite (~skylite@46.107.44.214)
[12:20:49] <earendel> how many scopes can be named?
[12:21:07] <earendel> global, local ... what about exported vars?
[12:21:09] <pj> a subshell simply does not retain any variables, functions or settings when the subshell exits.
[12:21:51] <earendel> not even those declared global?
[12:23:07] <hejux> # f1() { local k1=v1 k2=v2 ; declare -ag ar=( $k1 $k2 ) ; } ; f2() { if f1 ; then echo $ar ; fi ; } ; f2
[12:23:08] <shbot> hejux: v1
[12:24:04] <pj> hejux: you do realize that in bash $ar is the same as ${ar[0]}, right?  In other words it just returns the first element.
[12:24:04] <earendel> # declare -g blah;  f() ( blah=4 ); f; echo blah
[12:24:05] <shbot> earendel: blah
[12:24:12] <earendel> # declare -g blah;  f() ( blah=4 ); f; echo $blah
[12:24:13] <shbot> earendel: no output
[12:24:17] <hejux> pj: yes i do
[12:24:25] <earendel> # declare -g blah;  f() { blah=4 }; f; echo $blah
[12:24:31] <hejux> i just want to see if that $ar is seen or not
[12:24:31] <shbot> earendel: Missing terminating quote, bracket or keyword
[12:24:59] <hejux> # f1() { local k1=v1 k2=v2 ; declare -a ar=( $k1 $k2 ) ; } ; f2() { if f1 ; then echo $ar ; fi ; } ; f2
[12:25:00] <shbot> hejux: no output
[12:25:06] <earendel> # declare -g blah;  f() ( blah=4; ); f; echo $blah
[12:25:07] <shbot> earendel: no output
[12:25:18] <earendel> # declare -g blah;  f() { blah=4; }; f; echo $blah
[12:25:18] <shbot> earendel: 4
[12:25:30] <hejux> ok . i think something was wrong with my code in my script . -g works actually.
[12:25:41] <earendel> #  f() { blah=4; }; f; echo $blah
[12:25:42] <shbot> earendel: 4
[12:26:17] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:5d22:e824:4395:30a2)
[12:26:48] <earendel> # f() {  declare -g blah=4; }; (f); echo $blah
[12:26:48] <shbot> earendel: no output
[12:27:39] <earendel> hejux: what is g doing?
[12:28:37] <earendel> #  declare -g blah; f() { blah=4; }; (f); echo $blah
[12:28:38] <shbot> earendel: no output
[12:28:38] <hejux> make it global
[12:28:54] <earendel> meaning?
[12:29:19] <hejux> so it is seen by other codes
[12:29:33] <pj> <earendel> # f() {  declare -g blah=4; }; (f); echo $blah # you're running f in a subshell, so it obviously won't retain any variable changes there.
[12:30:34] <pj> declare -g works, but no amount of decalrations can make a variable that is set in a subshell visible to the parent.
[12:30:57] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:5d22:e824:4395:30a2) (Ping timeout: 268 seconds)
[12:31:34] <earendel> pj: "a subshell simply does not retain any variables, functions or settings when the subshell exits." earendel: "not even those declared global?"
[12:32:09] <pj> earendel: Well technically they're global within the scope of the subshell, but as soon as the subshell exits they will be lost.
[12:32:12] <hejux> only use -g with -A , rest cases, just array=()
[12:32:18] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[12:33:17] <earendel> is the -g switch always implicit on non local decalred vars?
[12:33:28] <pj> oh, and btw, I tend to not use declare to declare a local variable.  I much prefer to use local for that, and I believe it makes my code much clearer.
[12:33:59] <earendel> is it implicit?
[12:34:05] <hejux> yeah. just local , readonly .
[12:34:07] <pj> earendel: if declare is used in a subshell then the variable is local unless -g is specified.
[12:34:20] <hejux> when delcare is used, use it with -A or -n
[12:34:40] <emanuele6> hejux: why?
[12:35:05] <hejux> -n reference
[12:35:10] <hejux> -A ass_array
[12:35:32] <hejux> you need declare for these 2
[12:35:39] <pj> you have to have a fairly new version of bash for -n to work.
[12:35:44] <emanuele6> there are also other uses
[12:35:46] *** Joins: furrymcgee (~devuan@cgn-89-1-209-86.nc.de)
[12:35:53] <pj> and yes, there are certainly other uses.
[12:36:08] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:36:08] <hejux> who does not have bash 5?
[12:36:12] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[12:36:18] <emanuele6> apple
[12:36:29] <earendel> pj: and you definitely mean local within the function of the subshell?
[12:36:29] <hejux> typeset -n same as declare -n ?
[12:36:33] <earendel> to make that sure.
[12:36:39] <hejux> all zsh althe way
[12:36:40] <pj> # echo "$BASH_VERSION"
[12:36:41] <pj> 4.2.46(2)-release
[12:36:41] <shbot> pj: 5.1.8(1)-release
[12:36:54] <hejux> * apple zsh all the way
[12:36:56] <pj> # echo "$BASH_VERSION"
[12:36:56] <pj> 4.4.20(1)-release
[12:36:56] <emanuele6> hejux: see `help typeset'
[12:36:57] <shbot> pj: 5.1.8(1)-release
[12:37:01] <pj> a lot of people.
[12:37:51] <hejux> # helo typset
[12:37:51] <shbot> hejux: bash: helo: command not found
[12:37:56] <hejux> # help typset
[12:37:57] <shbot> hejux: bash: help: no help topics match `typset'.  Try `help help' or `man -k typset' or `info typset'.
[12:38:04] <earendel> if i declare it in a subshell it will be local. even outside a function. lol
[12:39:12] <earendel> hm. maybe i could have asked for an example line demonstrating the difference the -g switch would make.
[12:39:21] <hejux> earendel: declare anywhere without  -g, is a local
[12:40:02] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:40:29] <earendel> a local or synonmous with using the keyword local?
[12:41:14] <earendel> i still believe that is what you asked. lol
[12:42:10] *** Joins: shad (~shad@user/shad)
[12:44:19] <earendel> how do i redirect the output to a file (which can be written only by superuser) using sudo?
[12:44:41] <earendel> echo hello > sudo protectedfile .. doesn't work
[12:44:55] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:45:07] <pj> [2021-11-30 22:09:21] <hejux> earendel: declare anywhere without  -g, is a local
[12:45:11] <pj> This is wrong ^^^^^
[12:45:12] <earendel> sudo echo hello > protectedfile doesn't wok too
[12:45:24] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[12:46:46] <osse> sudo sh -c 'echo hello > protectedfile'
[12:46:59] <pj> earendel: sudo tee protectedfile >/dev/null
[12:48:16] <osse> and that covers the two workarounds given on the pitfalls page :)
[12:48:24] <pj> heh
[12:48:53] <earendel> osse pj ..oof. ok. do you personally prefer using sudo or a separate root / unprivileged user combo?
[12:49:16] <pj> earendel: generalyl speaking if a script needs root access I prefer to run it as root.
[12:49:23] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[12:50:03] <earendel> pj: not using sudo?
[12:50:06] <osse> earendel: I use sudoedit the most
[12:50:46] <pj> earendel: not using sudo in the script, no.  I have no issues running the entire script under sudo, though.
[12:50:52] *** Joins: earnest (~earnest@user/earnestly)
[12:52:23] <earendel> pj: thats actually the only case where i thought sudo definitely beats root, as it allows not to run all commands with unrestricted access.
[12:52:54] <pj> if a script needs to do protected stuff then it should be run with the appropriate privileges, otherwise you end up with surprises like: $ sudo somecommand ... $ myscript and you don't realize that myscript is doing protected stuff because the sudo is still active from your previous command.
[12:53:56] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.3)
[12:54:44] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[12:54:50] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[12:55:34] <pj> it's just me, I like to be the one who gives permissions, not have a script go get them on its own.
[12:55:34] *** Joins: WinterStar (~IceLight@user/icelight)
[12:55:37] <earendel> also i get the idea the privileges can get more nuanced when using sudo .. for which it seems to invent another quite complicated mechanism ..
[12:55:47] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:57:14] <earendel> which was a bit demoralizing as i thought such privileges could be perfectly ruled out via groups and file access decsriptors
[12:58:46] <earendel> rutkowska even completely abandons unprivileged accounts like. compleltely meaningless. lol
[12:58:52] <earendel> savage.
[12:59:04] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[12:59:36] *** bkhl is now known as bkhl_
[12:59:49] <earendel> and i trust her opinion.
[13:00:49] <earendel> you know her?
[13:00:57] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[13:03:47] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[13:05:00] *** Joins: tessio (~weechat@141.226.73.54)
[13:05:55] *** Joins: falkor (~falkor@90.242.155.158)
[13:07:35] <hejux> most scripts needs sudo to run
[13:08:02] *** Quits: bkhl_ (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[13:08:02] <hejux> NOPASSWD:ALL
[13:08:20] <furrymcgee> different users for different use cases that is separation of concerns
[13:09:21] *** Quits: tessio (~weechat@141.226.73.54) (Client Quit)
[13:09:37] *** Joins: tessio (~weechat@141.226.73.54)
[13:10:43] *** Quits: falkor (~falkor@90.242.155.158) (Quit: Leaving)
[13:11:55] <hejux> how do i make an array=( pre_a pre_b pre_c ...) to newarray=(a b c)?
[13:12:17] <earendel> but why can't privileges not be configured via chmod.. especially since "everything in unix is a  file"?
[13:12:58] <earendel> or is it?
[13:12:58] <han-solo> # array=( pre_a pre_b pre_c ...); echo "${array[@]##pre_}"
[13:12:59] <shbot> han-solo: a b c ...
[13:13:35] <hejux> ohh, that is short .
[13:13:40] <hejux> i thought about for do done
[13:13:45] <tessio> that is han-solo
[13:14:01] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 250 seconds)
[13:16:37] *** Joins: arinov (~arinov@178.240.181.140)
[13:17:44] <earendel> parameter extension is definitely a highlight of BASH
[13:19:03] *** Quits: zaden (~maddx@73.92.207.228) (Quit: WeeChat 3.4-dev)
[13:19:23] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[13:19:29] <lopid> newarray=( … )
[13:19:41] <earendel> can i somehow set an automatic pager for the console?
[13:20:01] <lopid> ask your terminal
[13:20:57] <lopid> but that could be a good idea, if the shell knows the value of LINES
[13:20:57] <earendel> i mean the standard ones on .. ctrl+alt+f1 .. f6
[13:21:05] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[13:21:29] <earendel> in grub i can just set pager=1 or so
[13:21:36] <earendel> or efishell
[13:21:57] *** Quits: tessio (~weechat@141.226.73.54) (Quit: WeeChat 3.2)
[13:22:10] <lopid> bash itself can't
[13:22:59] <earendel> yes. it was not a bash question.
[13:23:06] <lopid> !nabq
[13:23:06] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[13:23:07] *** Joins: tessio (~weechat@141.226.73.54)
[13:23:39] <earendel> you can give me a hint.
[13:23:52] <earendel> i wont tell.
[13:23:54] <lopid> another one?
[13:24:03] <earendel> so i do set LINES
[13:24:11] <earendel> and then it works. ok. i will try.
[13:24:18] <lopid> no
[13:24:22] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:25:13] <earendel> somebody else?
[13:28:23] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[13:28:56] <earendel> that was ukraine. stuemper.
[13:31:05] *** Joins: sublim20 (~sublim20@user/sublim20)
[13:33:08] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:33:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:34:28] *** Lord_of_Life_ is now known as Lord_of_Life
[13:37:16] *** Quits: n4dir (~user@mue-88-130-56-187.dsl.tropolys.de) (Remote host closed the connection)
[13:39:21] *** Joins: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67)
[13:44:40] *** Joins: netrunner (~netrunner@user/netrunner)
[13:45:20] *** Quits: netrunner (~netrunner@user/netrunner) (Client Quit)
[13:45:49] *** Joins: netrunner (~netrunner@user/netrunner)
[13:45:56] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:46:36] <Camusensei> shalok: wow, that's a great idea!, I'll do that, thank you very much!
[13:47:54] *** Joins: DrNostril (~DrNostril@37.120.201.174)
[13:49:14] *** Quits: OlCe` (~user@lfbn-nic-1-262-221.w90-116.abo.wanadoo.fr) (Quit: ERC (IRC client for Emacs 27.1))
[13:49:19] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:49:41] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:50:03] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[13:51:51] *** Joins: OlCe (~user@lfbn-nic-1-262-221.w90-116.abo.wanadoo.fr)
[13:53:02] *** Joins: TomyWork (~TomyLobo@p200300e80f0f270095753661921d7c06.dip0.t-ipconnect.de)
[13:54:09] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[13:59:28] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[14:02:44] *** Joins: mpagano (~quassel@gentoo/developer/mpagano)
[14:03:02] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:03:04] *** Joins: RandomGuy21 (~RandomGuy@202.140.45.240)
[14:03:42] *** Quits: RandomGuy21 (~RandomGuy@202.140.45.240) (Client Quit)
[14:05:33] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[14:05:37] <roxlu> hi
[14:07:48] <roxlu> I'm looking for a way to do something like this: 1) start app/util, 2) also start `sar` 3) start other tool.  ... and it would be great if I could see/log the output of these 3 tools. Someone around with experience with this?
[14:09:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:10:28] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:10:29] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[14:11:55] *** Joins: tex (~super@user/dix)
[14:12:53] <earnest> You might have to elaborate on what the problem is
[14:13:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[14:18:46] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:19:12] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[14:19:55] <roxlu> earnest: hi, I want to profile an app (1) using some tools. These tools give me the average input on CTRL+C; but when I do this manually the measurements are not really exact (as I might be slower/faster to close the app)
[14:20:36] <roxlu> .. maybe I can find the pid and then kill them to prevent that ... but then I have the problem that I'm still starting them manually which results in the same issue
[14:21:02] <Soliton> app & sleep ...; kill -INT $!
[14:22:03] <roxlu> Soliton: how would that start 3 apps?
[14:22:13] <roxlu> Soliton: can you maybe explain a bit what you mean
[14:22:55] <Soliton> app1 & pid1=$!; app2 & pid2=$!; app3 & pid=$!; sleep ...; kill -INT ...
[14:23:03] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:23:15] <Soliton> not sure what's to explain. start the apps you want and kill them when you want.
[14:23:40] <roxlu> but when I run them like this I won't be able to see their output
[14:23:40] <pj> pids=(); app1& pids+=("$!"); app2& pids+=("$!"); app3& pids+=("$!"); sleep ...; kill -INT "${pids[@]}"
[14:23:56] <Soliton> why?
[14:24:12] <pj> sheesh, talk about moving the goalposts.
[14:24:20] <roxlu> or would I?
[14:24:31] <Soliton> perhaps you want to write separate logfiles or something.
[14:24:53] <Soliton> i have no clue what your goal is or what you tried or if you just wildly guess.
[14:25:22] <roxlu> Soliton: yeah I'll do that, I can use what you suggested with e.g. `tee something.log`
[14:25:41] <roxlu> no probs, thanks for your suggestions Soliton, this will help me
[14:25:54] *** Quits: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de) (Quit: Leaving)
[14:26:18] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[14:27:31] <rendar> if i have an array of "-o opt1" "-o opt2" ... how can i transform it in an array of "-O opt1", ... ?
[14:27:47] <Soliton> that seems wrong to begin with.
[14:28:21] <Soliton> surely it should be "-o" "opt1" ...
[14:29:10] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[14:29:21] <earnest> sar has logging capabilities itself
[14:29:38] <earnest> E.g. var/log/sa
[14:29:54] <Soliton> # arr=(-o opt1 -o opt2); echo "${arr[@]/#-o/-O}" # will also change any element starting with -o
[14:29:55] <shbot> Soliton: -O opt1 -O opt2
[14:30:01] <earnest> But also has -o
[14:30:06] <pj> The question as presented is easy enough to answer, but in order for it to work as presented you would have to allow the shell to do unquoted word-splitting which is extremely problematic.
[14:30:07] <earnest> (sar can read from it with -f)
[14:31:20] <pj> Soliton: too bad you can't do: "${arr[@]/#-o%/-O}"
[14:32:34] <pj> ...or something like that to anchor the expression to both ends.
[14:33:33] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:34:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:34:18] <rendar> yes its "-O" "opt1" and so on...
[14:34:19] <rendar> sorry
[14:34:41] <rendar> Soliton,  i see thanks
[14:35:04] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 264 seconds)
[14:35:05] <pj> # arr=(-oopt1 -oopt2); echo "${arr[@]/#-o/-O}" #btw, most single-arg options you can do this
[14:35:06] <shbot> pj: -Oopt1 -Oopt2
[14:35:43] <pj> # arr=(opt1 opt2); echo "${arr[@]/#/-O}" #...or even this
[14:35:44] <shbot> pj: -Oopt1 -Oopt2
[14:36:39] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:36:47] <rendar> what about i do: second_array+="${arr[@]/#-o/-O}" ?
[14:37:25] <roxlu> When `app1` would be something like: `sar -u 1 |& tee test-sar.log` how would I start it in the background? Do I add `&` at the end, like so: sar -u 1 |& tee test-sar.log &` I'm asking because I don't the app is put in the background
[14:37:43] *** Parts: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se) (WeeChat 3.3)
[14:37:44] <rendar> maybe `second_array=( ); second_array+=( "${arr[@]/#-o/-O}" )` is better
[14:38:44] <pj> rendar: second_array=("${arr[@]/#-o/-O}")
[14:39:45] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:41:06] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:43:46] <roxlu> ok this seems to work: `sar -u 1 > sar.log 2>&1 &`
[14:43:56] <rendar> pj, thanks
[14:44:14] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:45:06] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:45:34] *** Joins: setesat8 (~setesat@94.4.156.220)
[14:45:53] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[14:47:26] *** Quits: setesat (~setesat@94.4.156.220) (Ping timeout: 245 seconds)
[14:47:26] *** setesat8 is now known as setesat
[14:48:15] *** Joins: lavaball (felix@31.204.155.215)
[14:49:52] <rendar> it seems that to set encryption key iterations i have to use change-key, but with `zfs change-key -o pbkdf2iters=500000 zpool1/ds2` it also asks me a new passphrase, but i don't want to change it
[14:50:53] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[14:51:51] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:55:15] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[15:02:16] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:04:51] <rendar> ops sorry.. wrong window! :)
[15:17:20] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 252 seconds)
[15:18:22] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[15:19:14] *** Joins: emanuele6 (~emanuele6@net-93-65-50-99.cust.vodafonedsl.it)
[15:19:22] *** Quits: emanuele6 (~emanuele6@net-93-65-50-99.cust.vodafonedsl.it) (Changing host)
[15:19:22] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:20:55] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Remote host closed the connection)
[15:24:33] *** Joins: legola (~legola@46.235.101.65)
[15:26:21] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[15:27:26] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[15:27:39] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[15:27:43] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 256 seconds)
[15:28:14] *** Joins: ionface (~ionface@user/ionface)
[15:28:58] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[15:29:31] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:31:03] *** Joins: Guest30 (~Guest30@2a02:168:4186::353)
[15:33:53] <Guest30> Hey Bash people. I'm looking for a way to read arguments with spaces into a Bash script without quoting them. Something like: ./myScript.sh this is all part of one thing - I thought it may be possible with shift, but I don't have any experience with it so I can't say if it's possible ...
[15:33:57] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[15:34:55] <selckin> !$@
[15:34:55] <greybot> The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
[15:35:23] *** Joins: Atque (~Atque@user/atque)
[15:35:31] <izabera> lol
[15:38:35] *** Quits: zro (~zro@58.128-255-62.static.virginmediabusiness.co.uk) (Quit: WeeChat 3.3)
[15:39:29] <Guest30> I don't quite understand:/  Can you elaborate?
[15:39:37] <Soliton> # bash -c 'printf "<%s>" "$*"' bash this is all part of one thing
[15:39:38] <shbot> Soliton: <this is all part of one thing>
[15:39:40] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[15:39:52] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 264 seconds)
[15:40:22] <lopid> args=$*
[15:41:22] <Guest30> Ah, I see. Would this also work with getopts?
[15:41:39] <Soliton> what does getopts have to do with this?
[15:41:41] <lopid> only if you process getopts first
[15:41:46] <lopid> and shift off
[15:42:15] <Guest30> I wonder if I can run my script like this: ./myScript -a argument with spaces
[15:42:27] <Soliton> what is -a for?
[15:42:35] <lopid> what would be the point of -a?
[15:42:45] <Guest30> And then with getopts have a) args="$*"
[15:42:49] <Soliton> do you expect some magic to know when the arguments stop?
[15:43:03] <Guest30> It would be until the end
[15:43:07] <Soliton> argument with spaces cannot begin with a dash or what?
[15:43:24] <NRK[m]> you could just quote the arg...
[15:43:29] <Soliton> if it's tiwuntil the end then what is the point of option processing?
[15:44:02] <Guest30> I'll give some context...
[15:44:09] <Soliton> you want a bunch of options and at some point the rest is one big argument?
[15:44:19] <Guest30> yes ^
[15:44:33] <Soliton> so just do your option processing and take the rest.
[15:46:35] *** Joins: emanuele6 (~emanuele6@net-93-65-50-143.cust.vodafonedsl.it)
[15:46:35] *** Quits: emanuele6 (~emanuele6@net-93-65-50-143.cust.vodafonedsl.it) (Changing host)
[15:46:35] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:47:14] <Guest30> so, while getopts ... esac ; done and then everythingUntilEnd="$*" ?
[15:47:43] <Soliton> if you don't leave out the shift after option processing, yes.
[15:48:08] <Guest30> Ok, cool. I'll try that. Thanks a bunch for the help :)
[15:48:11] <aphorise> why would I get a kill 9 for an exclutable that otherwise works if `./name --help` it directly?
[15:48:39] <Soliton> what does "get a kill 9" mean?
[15:49:15] <Soliton> if you're asking why some program does what it does then perhaps ask the author or check documentation.
[15:49:17] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[15:50:08] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:52:55] *** Joins: gschanuel20 (~gschanuel@user/gschanuel)
[15:53:13] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[15:55:04] *** Quits: narendra (~user@2a02:8109:b63f:ff7c::56c2) (Ping timeout: 268 seconds)
[15:56:40] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 264 seconds)
[15:56:40] *** gschanuel20 is now known as gschanuel2
[15:56:56] *** Joins: timj (~timj@user/timj)
[15:58:02] *** Quits: DrNostril (~DrNostril@37.120.201.174) (Ping timeout: 252 seconds)
[15:59:20] *** Quits: CrypticS_ (~CrypticS_@user/crypticsquared) (Read error: Connection reset by peer)
[16:01:20] *** Quits: konsolebox (~konsolebo@37.120.210.110) (Ping timeout: 252 seconds)
[16:02:34] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[16:04:54] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:09:02] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[16:10:36] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:14:38] *** Joins: tradar (~tradar@user/tradar)
[16:15:05] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:16:51] *** Joins: johnnyjohn (~johnnyjoh@82.210.42.22)
[16:17:53] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[16:20:02] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 252 seconds)
[16:20:40] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 264 seconds)
[16:21:01] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Quit: Laters)
[16:22:07] *** Quits: eleventh (~eleventh@143.131.13.208) (Ping timeout: 256 seconds)
[16:23:05] *** Joins: eleventh (~eleventh@143.131.13.208)
[16:23:20] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[16:23:23] *** Joins: vlm (~vlm@user/vlm)
[16:28:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d1b6:b8ac:f1fb:836e)
[16:28:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d1b6:b8ac:f1fb:836e) (Changing host)
[16:28:33] *** Joins: skapata (~Skapata@user/skapata)
[16:30:08] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:30:10] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:32:11] *** Joins: shad (~shad@user/shad)
[16:36:07] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[16:36:45] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[16:37:00] *** Joins: narendra (~user@2a02:8109:b63f:ff7c::56c2)
[16:38:41] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[16:39:16] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:42:30] <hejux> is there something in bash ? `MARK_BEGIN \n Arr1=() \n Arr2=() \n MARK_END` and then get all the array names between MARK_BEGIN and MARK_END?
[16:42:35] *** Quits: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67) (Ping timeout: 252 seconds)
[16:44:11] *** Parts: johnnyjohn (~johnnyjoh@82.210.42.22) ()
[16:44:23] <hejux> right now i use prefix method : prefix_arr1=() ; prefix_arr2=() ; arr_names=(${prefix_@})
[16:44:42] <hejux> right now i use prefix method : prefix_arr1=() ; prefix_arr2=() ; arr_names=(${!prefix_@})
[16:45:27] <hejux> but i hate to use the prefix... i have to break and join later
[16:48:20] *** Quits: samy1028b (~samy1028@068-184-115-031.res.spectrum.com) (Ping timeout: 260 seconds)
[16:48:35] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[16:50:00] <phogg> are you reading lines from a file?
[16:50:13] *** Joins: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67)
[16:51:29] <hejux> phogg: in a config
[16:51:52] <hejux> i need to put all the array names to an array.
[16:52:20] <phogg> I'm still not clear on what you want
[16:52:26] <hejux> but the config file has some other arrays ,which i don't want to do that to them
[16:52:46] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[16:52:58] <hejux> or say, i only want to put my associate array names to a new array
[16:52:59] <phogg> you can extract lines from a start line to an end line using sed and regular expressions
[16:53:24] *** Joins: dreamon (~dreamon@ppp-88-217-67-53.dynamic.mnet-online.de)
[16:53:49] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67)
[16:54:33] *** Joins: samy1028 (~samy1028@068-184-115-031.res.spectrum.com)
[16:54:42] <hejux> in my config file i have 2 types of arrays : declare -Ag ass_arrays and arrays=()
[16:54:53] *** Quits: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67) (Ping timeout: 268 seconds)
[16:55:07] <hejux> i want to put only the ass_array names to a new array
[16:55:33] <hejux> newarray=( ass_1 ass_2 ass_3 .... )
[16:56:00] <hejux> well i can write that new array down  in the config. but i prefer to get it automatically
[16:56:25] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[16:57:00] <hejux> if manual, say i add a new ass_4=([k]=v ...) , then i can add it to newarray=(ass_1 ass_2 ass_3 ass_4 ...)
[16:57:30] <hejux> but if there is an auto method, that would be nice .
[16:57:57] <hejux> grep -E  'declare -Ag' config_file ?
[16:59:52] *** Quits: Guest30 (~Guest30@2a02:168:4186::353) (Quit: Client closed)
[17:01:10] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:01:45] <phogg> I can't tell if your processing strings out of a text file or writing shell code. If you are doing the former and can isolate the line declaring the array you can eval it.
[17:02:40] <hejux> it is funny when i grep the config file , grep 'declare', the file got sourced ...
[17:03:20] <hejux> that says, my  array=(), shows `declare -ag array=(` in grep result
[17:03:57] *** Joins: new_guest_21 (~new_guest@183.82.153.163)
[17:03:59] *** Parts: new_guest_21 (~new_guest@183.82.153.163) ()
[17:04:07] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[17:04:08] <hejux> phogg: i write bash script. i have declare -Ag in external conf file.
[17:04:48] *** Joins: bud (~bud@user/bud)
[17:04:53] <hejux> because i need ass array and user needs to configure the value of keys.
[17:06:50] <bud> guess its time to blow the dust of my aoc_init.bash
[17:07:08] <geirha> set a variable before you source. Use that variable in the sourced script to determine what to "expose"
[17:07:20] <superboot> hejux: You can do declare -P | grep 'declare -A' | cut -d'=' -f1 | cut -d' ' -f3
[17:08:12] <superboot> to get all the associative array names.
[17:08:31] <hejux> including ones from shell env?
[17:08:41] <superboot> Only the env.
[17:09:27] <hejux> ...
[17:09:35] <superboot> Oh, I see. Wrong solution.
[17:09:51] <hejux> if i source /path/to/config in my script?
[17:10:05] <geirha> you basically want features and data types bash doesn't have, so any "solution" will be an ugly hack
[17:10:06] <hejux> can i only show the ass arrays in my config?
[17:10:41] <bud> please don't show the ass
[17:10:47] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[17:11:02] <geirha> if [[ $only_show_ass ]]; then ...; else ...
[17:11:05] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:11:17] *** Joins: Guest9070 (~Guest90@49.205.116.48)
[17:12:01] <bud> i have not seen your guys full discussion, but maybe this is related.
[17:12:17] <bud> i have a script that generates a massive associative array.
[17:12:27] <bud> i use it like this:
[17:12:38] <bud> declare -A massive
[17:12:49] *** Joins: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[17:12:58] <bud> eval "$(massive_array_generator.sh)"
[17:13:07] <Guest9070> Is there any resource that is more beginner friendly than the Bash manual?
[17:13:18] <geirha> !guide
[17:13:18] <greybot> http://mywiki.wooledge.org/BashGuide or in PDF: http://s.ntnu.no/bashguide.pdf
[17:13:36] <bud> the output of massive_array_generator is: massive[hello]=1 ; massive[something]="good times"
[17:13:42] *** Joins: arinov (~arinov@213.194.126.155)
[17:13:48] <tangy> also the gnu manual is an easier read
[17:14:16] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:14:33] <geirha> what's "the gnu manual"?
[17:14:46] <bud> they must have made updates to the gnu docs somewhat recently. i have found myself realizing that both make, bash and awk gnu docs are really good.
[17:14:49] <phogg> the manual is good, but a manual isn't equivalent to a tutorial
[17:15:00] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[17:15:06] *** Quits: pilyn (~pilyn@user/pilyn) (Remote host closed the connection)
[17:15:19] <tangy> https://www.gnu.org/software/bash/manual/
[17:15:49] <geirha> Ah, the reference manual
[17:15:53] *** Joins: n4dir (~user@mue-88-130-56-187.dsl.tropolys.de)
[17:16:02] <Guest9070> geirha: This seems slightly more accessible. Thanks.
[17:17:12] <bud> Guest9070: also the 'help' command. just enter it in a terminal. help will list all bash builtins
[17:17:13] *** Joins: Kruppt (~Kruppt@50-111-48-108.drhm.nc.frontiernet.net)
[17:17:30] <bud> help COMMAND , will display info about that specific builtin COMMAND.
[17:18:18] <Guest9070> Okay
[17:18:23] *** Joins: sky-8 (~sky@user/sky-)
[17:18:40] *** Quits: Guest9070 (~Guest90@49.205.116.48) (Quit: Client closed)
[17:20:06] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:20:27] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:22:28] *** Quits: sky- (~sky@user/sky-) (Ping timeout: 264 seconds)
[17:22:28] *** sky-8 is now known as sky-
[17:22:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:22:34] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:27:35] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Quit: Laters)
[17:28:48] <superboot> bud: The combination of "massive" and "eval" is worrysome.
[17:32:07] *** Joins: zro (~zro@user/zro)
[17:32:41] <hejux> # a=(1 2 3 4) ; declare -Ag a ; declare -p a
[17:32:42] <shbot> hejux: bash: declare: a: cannot convert indexed to associative array
[17:32:42] <shbot> hejux: declare -a a=([0]="1" [1]="2" [2]="3" [3]="4")
[17:33:29] *** Quits: samy1028 (~samy1028@068-184-115-031.res.spectrum.com) (Read error: Connection reset by peer)
[17:33:31] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:33:35] <hejux> # a=([n]=1 [m]=2) ; declare -Ag a ; declare -p a
[17:33:36] <shbot> hejux: bash: declare: a: cannot convert indexed to associative array
[17:33:36] <shbot> hejux: declare -a a=([0]="2")
[17:33:46] *** stemid_ is now known as stemid
[17:33:59] <hejux> # a=( [n]=1 [m]=2 ) ; declare -Ag a ; declare -p a
[17:34:00] <shbot> hejux: bash: declare: a: cannot convert indexed to associative array
[17:34:00] <shbot> hejux: declare -a a=([0]="2")
[17:34:03] <hejux> wtf
[17:34:13] <Soliton> you need to declare an associative array.
[17:34:39] <Soliton> with declare -A that is. there is no other way.
[17:34:55] <hejux> # declare -Ag a=( [n]=1 [m]=2 ) ; declare -p a
[17:34:56] <shbot> hejux: declare -A a=([n]="1" [m]="2" )
[17:35:08] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[17:35:31] <hejux> Soliton: yeah, that is why i have to put that declare -Ag in conf file and source it in script
[17:35:51] *** Quits: narendra (~user@2a02:8109:b63f:ff7c::56c2) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[17:36:09] <Soliton> you can declare before sourcing as well.
[17:36:32] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:36:37] <hejux> really? i can? oh that is great
[17:37:02] <hejux> thinking...
[17:39:36] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:39:50] <hejux> Soliton: well, that is not going to work
[17:40:04] <bud> superboot: regarding eval "$(massive)". 1. it is safe, it always outputs an array. 2. source is eval , no one complains when people source, but as soon as you have eval you drop the spaghetti.
[17:40:21] <hejux> because i don't know how many assarays in my conf and their names
[17:40:26] <bud> source <(massive_array_generator.sh)
[17:41:03] <hejux> always source , do not eval
[17:41:15] <superboot> bud: Good point. I hadn't thought of it like that (source). Thanks for the feedback.
[17:41:47] <bud> i would say, be very careful with source and eval. but sometimes they are the best solution.
[17:42:38] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:44:54] <geirha> why write an sh script that generates bash code though, instead of just sourcing a bash script?
[17:45:16] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[17:46:45] *** Joins: Client90 (~Username@host-95-246-102-34.retail.telecomitalia.it)
[17:46:54] *** Joins: legola (~legola@46.235.101.65)
[17:47:01] *** Parts: Client90 (~Username@host-95-246-102-34.retail.telecomitalia.it) ()
[17:48:17] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[17:51:05] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[17:51:14] *** Joins: csmiga1 (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[17:53:01] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[17:53:21] *** Quits: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[17:53:21] *** csmiga1 is now known as csmiga
[17:55:28] <bud> geirha: in my case the generated array contains info about the desktop session, like: active_window, active_workspace etc.
[17:56:05] <bud> so it is handy when i want to make a quick script that operates on those things, i add that eval "$(mm...)" at the top
[17:56:23] <bud> and can use, mm[active_window_id] in the script.
[17:56:53] *** Joins: seninha (~seninha@user/seninha)
[17:56:58] <Soliton> but why generate code instead of simply writing it normally?
[17:57:42] <bud> i can also execute it interactively to get an overview in a terminal.
[17:57:43] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[17:58:05] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[17:58:07] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[17:58:13] <bud> the output is actually more like this: "array[window_id]=12234 # active_window id"
[17:58:28] <phogg> write your hash generator in C for efficiency! Then eval the output for inefficiency!
[17:58:31] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[17:58:33] <bud> and it is a quite massive script that fetches all of this, and it is 98% awk.
[17:58:39] *** Joins: Guest23 (~Guest23@49.205.116.48)
[17:58:51] <bud> phogg: exactly
[17:59:00] <bud> except awk instead of c
[17:59:19] <bud> and the resulting bash scripts are efficient enough.
[17:59:58] <bud> they are more or less always triggered by the user, and triggered rarely.
[18:00:59] *** Quits: Guest23 (~Guest23@49.205.116.48) (Client Quit)
[18:02:33] <bud> and sure, the script could have been made in a way that it creates the array and you source it instead. but what would be the difference? also if you want to re-execute it, its more convenient to do a new, eval "$(script)"
[18:06:16] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 264 seconds)
[18:07:11] <bud> the script also has its own getopts, which i think is kind of a terrible idea to source
[18:08:00] <bud> eval "$(script --window-class URxvt)"
[18:08:32] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:10:05] <furrymcgee> eval might exit your shell, maybe you can use readarray instead
[18:10:05] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[18:11:34] <bud> source might also exit your shell
[18:12:17] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[18:12:42] <furrymcgee> I am not advocating source over eval
[18:13:13] <bud> mapfile would not work here, because i really want an associative array.
[18:13:24] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[18:13:25] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[18:13:25] *** Joins: Bercik (~Redomen@user/bercik)
[18:13:48] <bud> it would be cool with that option to mapfile, to make it do ass arrays.
[18:14:33] *** Joins: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it)
[18:14:33] <bud> like mapfile -y '%k: %v' < FILE
[18:14:50] *** Quits: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it) (Changing host)
[18:14:50] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:15:04] <bud> cat FILE ... first_key: value\nkey_two: 42
[18:15:43] <bud> echo ${ARRAY[key_two]} => 42
[18:18:34] <bud> the generated array contains ~100 elements. but sometimes it is ~50
[18:18:50] <bud> so it would be impossible to make use of it if was not Ass
[18:20:53] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[18:21:06] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:23:26] <chilversc> is there anything specific I have to do to enable patterns such as; for disk in /dev/disk/by-id/google-source-*([0-9])
[18:23:57] <furrymcgee> might be possible with two arrays named $key and $value
[18:24:21] <chilversc> I keep getting the error, "syntax error near unexpected token (" when its running as a start up script, but while running from the terminal it works fine
[18:26:03] <bud> chilversc: maybe extglob shopt
[18:26:18] <bud> https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html
[18:26:28] <bud> ^ search for extglob
[18:28:04] <chilversc> ah, I forgot about shopt, I was only looking at set
[18:28:11] <chilversc> thanks
[18:29:41] <bud> description of assoc_expand_once shopt <3
[18:29:41] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:29:50] <bud> >If set, the shell suppresses multiple evaluation of associative array subscripts during arithmetic expression evaluation, while executing builtins that can perform variable assignments, and while executing builtins that perform array dereferencing.
[18:31:27] *** Joins: zoe (~zoe@fsf/member/zoe)
[18:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:36:54] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[18:37:17] *** Joins: Guest84 (~Guest84@h-195-178-170-174.A498.priv.bahnhof.se)
[18:37:45] <Guest84> what is the correct way to do this?
[18:37:45] <Guest84> echo "hello-world-nice-day"|read -r -d '-' a b c d;echo "a=$a b=$b c=$c d=$d"
[18:37:48] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[18:37:52] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[18:37:58] <phy1729> !faq disappear
[18:37:58] <greybot> https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[18:38:04] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Ping timeout: 264 seconds)
[18:38:07] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:38:10] *** Quits: n4dir (~user@mue-88-130-56-187.dsl.tropolys.de) (Remote host closed the connection)
[18:38:53] <Soliton> # IFS=- read -r a b c d <<< hello-world-nice-day; echo "a=$a b=$b c=$c d=$d"
[18:38:53] <shbot> Soliton: a=hello b=world c=nice d=day
[18:39:34] <Guest84> oh.. i thought one didnt need to do things with IFS when declaring the delimiter with -d
[18:39:48] <Soliton> !ifs
[18:39:48] <greybot> Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and https://wiki.bash-hackers.org/syntax/words
[18:40:07] <Guest84> yes, but I used -d '-'
[18:40:20] <Guest84> which tels read which delimiter to use.
[18:40:20] <Soliton> IFS is for field splitting and -d for where to stop reading.
[18:40:27] <Guest84> oh..
[18:40:34] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[18:40:37] <Guest84> ooooooh... that explains it all :-)
[18:40:48] <Guest84> thanks
[18:41:38] <wyre> hi guys, I've got this script https://bpa.st/4H3Q but I'm not sure how to perform that arithmetic operations at line 29 and 30 :think
[18:41:38] <checkbot> wyre: I think the problem is on line 29. Remove spaces around = to assign (or use [ ] to compare, or quote '=' if literal). See 10 issues on https://shellcheck.net/?id=cb85098
[18:41:40] <wyre> 🤔
[18:41:50] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:42:09] <wyre> oh, it was because the spaces?
[18:42:26] *** Joins: YaoNai (~YaoNai@user/yaonai)
[18:42:28] <Soliton> var=$((<math>))
[18:42:36] <Soliton> if integer math is enough for you.
[18:43:12] <wyre> Soliton, I see ... what's that double wrap for? 🤔
[18:43:25] <wyre> (I mean the double brackets)
[18:43:25] <Soliton> !$((
[18:43:25] <greybot> $((...)) is an arithmetic substitution. After doing the arithmetic, the whole thing is replaced by the value of the expression. See <http://mywiki.wooledge.org/ArithmeticExpression>.
[18:43:35] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Ping timeout: 252 seconds)
[18:43:43] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[18:43:53] <wyre> Soliton, but is this syntax used for more situations?
[18:44:02] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[18:44:16] <Soliton> for anywhere you need math.
[18:44:43] *** Joins: igemnace (~ian@user/igemnace)
[18:45:17] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[18:46:08] <wyre> Soliton, I mean ... for evaluating commands or such things ... I've seen sometimes things like $``
[18:46:15] <wyre> or just $()
[18:46:17] *** Joins: zostj (~rue@1-162-46-144.dynamic-ip.hinet.net)
[18:46:23] <Soliton> !$(
[18:46:23] <greybot> Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
[18:46:45] <Soliton> most expansions involve $.
[18:46:48] <wyre> Soliton, sure, my question actually is if ... has that $( something to do with $((
[18:46:49] *** Quits: dawg_ (dirtydawg@triton.blinkenshell.org) (Ping timeout: 250 seconds)
[18:46:57] <Soliton> no.
[18:47:10] <Soliton> one captures output the other does math.
[18:47:26] <wyre> I see ... so I'm not actually substituting (<math>), right?
[18:47:31] <wyre> or expanding
[18:47:40] <Soliton> you're substituting <math>
[18:48:02] <Soliton> period=$((1000000/frequency))
[18:48:21] <CrtxReavr> What's that wooledge URL you share for BASH arrays?
[18:48:26] <wyre> Soliton, I see, my initial thought was that ... as you are using $( for command substitution ... maybe (<math>) is interpreted as a command ..
[18:48:30] *** Joins: drogas (~drogas@jump2.jet.uk)
[18:48:40] <Soliton> you should check that frequency is set and not 0.
[18:48:43] <osse> wtf is this. the period is 1/frequency
[18:49:07] *** Parts: drogas (~drogas@jump2.jet.uk) ()
[18:49:08] <wyre> osse, depends on what units you want to give the frequency 😉
[18:49:11] *** Quits: MercilessDeth (~brad@136.49.59.177) (Remote host closed the connection)
[18:49:22] <Soliton> !faq 5 > CrtxReavr
[18:49:23] <greybot> CrtxReavr: https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[18:49:44] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:49:50] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[18:51:25] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[18:52:52] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[18:53:45] *** Quits: MercilessDeth (~brad@136.49.59.177) (Remote host closed the connection)
[18:54:24] <CrtxReavr> Soliton, thanks.
[18:54:40] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:55:41] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Ping timeout: 252 seconds)
[18:57:07] *** Quits: NoelFlantier (~Hubert@gifi.cassossie.net) (Remote host closed the connection)
[18:57:27] *** Joins: NoelFlantier (~Hubert@gifi.cassossie.net)
[18:58:22] *** Joins: dawg (dirtydawg@triton.blinkenshell.org)
[18:59:51] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:59:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:00:05] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 252 seconds)
[19:00:07] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:10:09] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[19:10:54] <wyre> Soliton, frequency is always set by default at 750
[19:10:54] *** Joins: legola (~legola@46.235.101.65)
[19:10:56] <wyre> btw
[19:11:20] *** Joins: sublim20 (~sublim20@user/sublim20)
[19:12:00] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[19:15:08] *** Parts: bud (~bud@user/bud) (Leaving.)
[19:15:52] <wyre> but sure, somebody could set -f as 0 🤔
[19:16:27] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[19:20:27] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[19:22:10] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:7df4:d380:f3b2:b419)
[19:25:38] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:25:56] *** Quits: dreamon (~dreamon@ppp-88-217-67-53.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[19:32:04] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 264 seconds)
[19:32:07] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[19:32:25] *** Joins: gabriele (~gabriele@user/gabriele)
[19:32:46] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:33:46] *** Joins: superboot (~agentgasm@user/superboot)
[19:35:47] *** Quits: zro (~zro@user/zro) (Read error: Connection reset by peer)
[19:36:39] *** Joins: zro (~zro@user/zro)
[19:41:18] *** uhu- is now known as uhu
[19:44:24] *** Quits: roadie` (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[19:47:14] <Guest84> Soliton: I still don't get this to work :-/  https://pastebin.com/ynPtgdxB
[19:47:14] <pasteban> Paste is available without ads on https://pastebin.com/raw/ynPtgdxB
[19:47:56] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[19:48:02] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[19:48:52] <gnoo> Guest84: did you read the !disappear factoid greybot linked?
[19:49:06] <tangy> piping data to read is an error, yes?
[19:49:38] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[19:49:45] <wyre> Soliton, ty, I've modified a little the script https://bpa.st/62ZA but now ... I'm not sure why sometimes I'm having these write errors https://bpa.st/PZHA
[19:51:45] <tangy> Guest84, https://mywiki.wooledge.org/BashFAQ#BashFAQ.2F024.I_set_variables_in_a_loop_that.27s_in_a_pipeline._Why_do_they_disappear_after_the_loop_terminates.3F_Or.2C_why_can.27t_I_pipe_data_to_read.3F
[19:52:14] *** Joins: joo-_ (~joo-_@80-62-116-174-mobile.dk.customer.tdc.net)
[19:52:14] *** Quits: joo-_ (~joo-_@80-62-116-174-mobile.dk.customer.tdc.net) (Changing host)
[19:52:14] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[19:52:20] <tangy> ! faq 24 > Guest84
[19:52:38] <tangy> !faq 24 > Guest84
[19:52:38] <greybot> Guest84: https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[19:53:14] *** Joins: tobybl (~tobybl@213.31.134.21)
[19:56:00] *** Joins: new_guest_21 (~new_guest@183.82.153.163)
[19:56:08] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[19:56:23] <new_guest_21> Hello, can anyone tell me what's wrong with this one-liner? `shopt -s nullglob dotglob; torrents=(~/'torrents/watch'/*.torrent); transmission-remote -w ~/'torrents/download/' "${torrents[@]/#/-a }"; shopt -u nullglob dotglob`
[19:56:24] <Soliton> Guest84: what is the actual goal? is echo stand-in for another command?
[19:56:45] *** Joins: dtcvector (~dtcvector@2603-8000-3602-57d6-0000-0000-0000-0498.res6.spectrum.com)
[19:57:07] <Soliton> "${torrents[@]/#/-a }" will not expand to -a ... it will expand to "-a ..."
[19:57:12] <osse> new_guest_21: transmission-remote won't know what "-a foo.torrent" means
[19:57:33] <Soliton> perhaps "${torrents[@]/#/-a}" works.
[19:57:43] <Soliton> otherwise you have to do it differently.
[19:57:44] <Guest84> Soliton: well, maybe my approach is stupid from the start. I want to return several parameters, which might contain white spaces
[19:58:02] <Soliton> Guest84: return from what? for what?
[19:58:49] <new_guest_21> It's supposed to run commands like: `transmission-remote -w /home/user/torrents/download/ -a /home/user/torrents/watch/a.torrent`. Instead it's simply iterating `-a /home/user/torrents/watch/a.torrent` and so on...
[19:58:53] <tangy> wyre, does line 17 need a trailinh ';;'?
[19:58:58] <Soliton> if you want to output a list of space separated arguments with spaces in them then you need to encode spaces some way.
[19:59:04] <new_guest_21> osse: You mean `-a /home/user/torrents/watch/a.torrent` isn't passed to trans-remote each time?
[19:59:12] <gnoo> oh yeah, -a is supposed to be it's own argument
[19:59:14] <new_guest_21> Trying the other suggestion
[19:59:19] <gnoo> (sorry, that's my fault)
[19:59:21] <osse> new_guest_21: it is, but as one argument
[19:59:34] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:59:51] <Guest84> Soliton: I parse a string having  lots of   a="something" b="something else" at several places and thought to create a generic function to send such string to returning the parsed string | separated
[19:59:52] <new_guest_21> Oh, you mean without the space? `-a/home/user/torrents/watch/a.torrent`
[20:00:01] <new_guest_21> osse: ^
[20:00:08] <osse> if it doesn't work without the space you will have to create a new array in which you inject -a as separate element
[20:00:17] <gnoo> no, it'll pass "-a /home/user/..." when it should pass "-a" "/home/user/..."
[20:00:18] <new_guest_21> I see
[20:00:20] <osse> new_guest_21: no, I mean as it stands it will be one arge with a space in it.
[20:00:30] <Soliton> Guest84: how is that generic? now you need to escape the pipe instead?
[20:00:31] <Guest84> Soliton: then I got stuck just wanting it to work
[20:00:33] <new_guest_21> Ah
[20:00:39] <osse> new_guest_21: But changing it to without a space *might* work
[20:00:46] <new_guest_21> Checking...
[20:00:54] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[20:01:13] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:01:34] <Soliton> Guest84: if you want to work with lists of arguments use arrays. don't print and parse strings.
[20:02:00] <Guest84> hmm.. can I return an array?
[20:02:03] <Soliton> a list as a string is always going to be cumbersome.
[20:02:08] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:02:10] <Soliton> !return
[20:02:10] <greybot> Every Unix process returns an exit status code to its parent. This is an unsigned 8-bit integer, 0 to 255 inclusive, with 0 meaning "success" and 1-255 meaning "failure". A script returns the exit status of the last command executed, unless you call "exit" with an argument. Functions "return" an 8-bit status code also.
[20:02:15] <Guest84> Soliton: yeah, noticed ;-)
[20:02:28] <Soliton> you cannot return anything really.
[20:02:44] <Guest84> Soliton: true, but I can make the function print a string :-)
[20:03:10] <Soliton> sure, but that's terrible to handle lists. and slow in any case.
[20:03:13] <new_guest_21> osse & gnoo: Nope. Still get a similar error: "Unknown option: -a/home/user/torrents/watch/". So I guess the longer format or something else is the way to go.
[20:03:18] <gnoo> i wanted to avoid a loop in "${torrents[@]/#/-a }" but it might not be possible :'(
[20:03:25] <Soliton> just set an output variable or use a different language.
[20:03:33] <osse> new_guest_21: yep, you must create a new array
[20:03:49] <CrtxReavr> When I wrote QA scripts, I would always exit 0 on pass, 2 on failure, and if something un-expected was encounted, the script would of course exit with a default code of 1.
[20:04:01] <Guest84> Soliton: you mean use a global variable?  I was trying to avoid that, but maybe its the only way?
[20:04:01] <new_guest_21> Okay, thanks for the pointers!
[20:04:02] <osse> new_guest_21: for t in ~/'torrents/watch'/*.torrent; do args+=(-a "$t"); done
[20:04:09] <CrtxReavr> Found this useful for executig a shit-ton of test scripts with a wrapper script.
[20:04:15] <Soliton> !weakness > Guest84
[20:04:15] <greybot> Guest84: http://mywiki.wooledge.org/BashWeaknesses
[20:04:21] <osse> new_guest_21: or you can loop over the existing array if you wish
[20:04:49] *** Joins: Dr-007 (~nope@92-108-90-26.cable.dynamic.v4.ziggo.nl)
[20:04:50] <gnoo> osse: funnily enough that was the anser new_guest_21 had and threw !stackoverflow over them >_<;
[20:04:58] <gnoo> s/and/and i/
[20:05:02] <new_guest_21> :D
[20:05:55] <Guest84> Soliton: yeah, you are right, It would do better in Perl. I was just trying to see if I could crack it somehow only using bash.
[20:06:19] <Soliton> you can if you can get over not wanting to use global variables.
[20:06:22] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[20:06:26] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:06:34] <Soliton> otherwise it's going to be awkward.
[20:06:37] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:06:53] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:07:03] <new_guest_21> Now I'm curious, if it's any better or same as (i.e. just a different way of expressing): `for i in ~/'torrents/watch'/*.torrent; do transmission-remote -a "$i"  -w ~/'torrents/download/'; done`
[20:07:18] <Soliton> like you could print declare -p array and eval it but...
[20:07:43] <Guest84> Solition: yeah, in this case it might be a good idea, the script is written to be universal for unknown users (mostly Mac).
[20:07:48] <gnoo> new_guest_21: using an array will call transmission-remote only once while this will call it many times
[20:08:02] <new_guest_21> Ah, right!
[20:08:07] <new_guest_21> missed that!
[20:08:35] <Guest84> Soliton: I will go for the global variable, thanks for your input :-)
[20:08:49] <Guest84> Soliton: (global array)
[20:09:06] <Soliton> note that apple switched to zsh and bash is ancient on macos.
[20:09:23] <Dr-007> question; i'd like to return a string from a bash script that has been executed. should i make a file that the parent bash script just reads in when the other bash script exits, or is there a return functionability thats im overseeing?
[20:10:02] <Soliton> print the string to stdout and capture it?
[20:10:24] <Soliton> string=$(myscript)
[20:10:35] <Dr-007> mkay
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:10:46] <Dr-007> im glad i asked
[20:11:47] <Guest84> Soliton: true, bash scripts generally seem to work though.
[20:12:21] *** Joins: MenschZwoNull_ (~MenschZwo@p200300c857124b0024b8e274af66c0d1.dip0.t-ipconnect.de)
[20:12:27] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[20:12:35] <Soliton> sure, just have to pay attention to not use some newer features. but if you test on macos you'll notice, i guess.
[20:13:01] *** Joins: dza5 (~dza@user/dza)
[20:13:02] <Guest84> Soltion: yes i do, thanks for the heads up.
[20:13:04] *** Joins: Alternity2 (~Alternity@user/alternity)
[20:13:22] *** Quits: laksith (~laksith@laksith.dev) (Ping timeout: 256 seconds)
[20:13:22] *** Quits: bloodElk (~bloodElk@user/bloodelk) (Ping timeout: 256 seconds)
[20:13:44] <furrymcgee> maybe you can use default variable like this# set - $(...)
[20:13:55] *** Joins: Tahvok_ (~Tahvok@user/tahvok)
[20:13:55] *** Joins: noarb- (~noarb@user/noarb)
[20:13:55] *** Joins: carwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[20:13:56] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[20:13:56] *** Joins: earthbreaker (~earthbrea@li778-229.members.linode.com)
[20:13:56] *** Quits: marlinc_ (~marlinc@user/marlinc) (Ping timeout: 256 seconds)
[20:13:56] *** Quits: sebastorama (~sebastora@104.131.87.249) (Ping timeout: 256 seconds)
[20:14:00] *** Joins: WTFguy (~uid0@user/p3rl)
[20:14:00] *** Joins: lazyrat (~lazycat@user/lazycat)
[20:14:01] *** Joins: sebastorama_ (~sebastora@104.131.87.249)
[20:14:01] *** Joins: woky_ (~woky@li1651-31.members.linode.com)
[20:14:01] *** Joins: pocketprotector (~pocketpro@user/pocketprotector)
[20:14:02] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[20:14:02] *** Joins: artlogic_ (~artlogic@znc.kruth.org)
[20:14:09] *** Joins: cluelessperson_ (~cluelessp@user/cluelessperson)
[20:14:13] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[20:14:30] *** Quits: pocketprotector- (~pocketpro@user/pocketprotector) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: artlogic (~artlogic@znc.kruth.org) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: woky (~woky@li1651-31.members.linode.com) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 256 seconds)
[20:14:31] *** Quits: Tahvok (~Tahvok@user/tahvok) (Ping timeout: 256 seconds)
[20:14:32] *** Joins: marlinc (~marlinc@user/marlinc)
[20:15:01] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: fcser (~fcser@booty.farted.net) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: rwp (~invalid@havoc.proulx.com) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: anderson (~ande@user/anderson) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: cisco87_ (~quassel@static.128.104.12.49.clients.your-server.de) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: Alternity (~Alternity@user/alternity) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: dza (~dza@user/dza) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: Naib (~j@user/naib) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: nisstyre (~wes@user/nisstyre) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: xaxas (~quassel@nebulosa.jtopia.org) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: davidl (~quassel@217-64-148-110.pool.ovpn.com) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: p3rL (~uid0@user/p3rl) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: raz (~raz@user/raz) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: MenschZwoNull (~MenschZwo@p57926bd6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: earthbre- (~earthbrea@li778-229.members.linode.com) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: Uqbar (~sandbox@user/uqbar) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: lazycat (~lazycat@user/lazycat) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: pooby (~pooby@167.99.100.8) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: obiwahn (~heini@user/obiwahn) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: GTAXL (~gtaxlnetw@user/gtaxl) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: MentalExcuse (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[20:15:05] *** WTFguy is now known as p3rL
[20:15:13] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[20:15:21] *** Joins: davidl (~quassel@217-64-148-110.pool.ovpn.com)
[20:15:35] *** Joins: xaxas (~quassel@nebulosa.jtopia.org)
[20:15:53] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[20:15:57] *** Joins: bodicceaII (~bodiccea@user/bodiccea)
[20:15:58] *** Joins: simplicity (~yti@user/simplicity)
[20:16:08] *** Joins: eqw (~eqw@31.134.178.99)
[20:16:32] *** Joins: laksith (~laksith@laksith.dev)
[20:16:42] *** Joins: Uqbar (~sandbox@user/uqbar)
[20:16:49] *** Joins: Alternity (~Alternity@user/alternity)
[20:16:52] *** Joins: dza (~dza@user/dza)
[20:16:54] *** Joins: rwp (~invalid@havoc.proulx.com)
[20:17:05] *** Joins: anderson (~ande@user/anderson)
[20:17:43] *** Joins: Tahvok (~Tahvok@user/tahvok)
[20:17:45] *** Joins: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de)
[20:17:52] *** Joins: reallymemorable (~reallymem@2603:3005:1605:b100:89fe:9896:4552:8206)
[20:18:04] <Dr-007> this seems like a split net
[20:18:12] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (Read error: Connection reset by peer)
[20:18:22] *** Joins: marlinc_ (~marlinc@user/marlinc)
[20:18:25] *** Quits: Tahvok_ (~Tahvok@user/tahvok) (Ping timeout: 256 seconds)
[20:18:42] <Dr-007> but not reported like one
[20:18:49] <Dr-007> via irc status
[20:18:59] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: Alternity2 (~Alternity@user/alternity) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: dza5 (~dza@user/dza) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 256 seconds)
[20:19:06] *** Joins: MentalExcuse (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com)
[20:19:33] *** Joins: dtcvector_ (~dtcvector@2603-8000-3602-57d6-0000-0000-0000-0498.res6.spectrum.com)
[20:19:53] *** Joins: GTAXL (~gtaxlnetw@user/gtaxl)
[20:19:54] *** Joins: fcser (~fcser@booty.farted.net)
[20:20:19] *** Quits: dtcvector (~dtcvector@2603-8000-3602-57d6-0000-0000-0000-0498.res6.spectrum.com) (Read error: Connection reset by peer)
[20:20:38] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:20:41] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[20:20:44] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 606 seconds)
[20:21:23] *** Joins: raz (~raz@2604:180:1::6193:c4c7)
[20:21:23] *** Quits: raz (~raz@2604:180:1::6193:c4c7) (Changing host)
[20:21:23] *** Joins: raz (~raz@user/raz)
[20:21:39] <new_guest_21> osse & gnoo: Can you tell what I'm doing wrong here?
[20:21:41] <new_guest_21> `torrents=(); for t in ~/'torrents/watch'/*.torrent; do torrents+=(-a "$t"); done; transmission-remote "${torrents[@]}" -w ~/'torrents/download/'`
[20:21:46] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:22:14] <Soliton> what's the error?
[20:22:26] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:22:46] <new_guest_21> It's iterating over `-a /home/user/torrents/watch/a.torrent -w ~/torrents/download/` now
[20:22:50] <new_guest_21> I used echo
[20:22:58] <new_guest_21> Scared to let the actual command run :P
[20:23:16] <new_guest_21> (that's an example)
[20:23:38] <gnoo> you mean -a file1 -w /path -a file2 -w /path -a file3 -w /path ?
[20:23:39] <Soliton> i don't get what the issu eis.
[20:23:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:24:08] <yitz> Looks good to me, too
[20:24:38] <osse> looks dank AF
[20:24:54] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:24:56] <new_guest_21> Ah, give me a sec... I may have tested it wrong. brb.
[20:25:02] <new_guest_21> (with actual test instead of echo)
[20:26:18] <Soliton> oh, looks like the command works differently.
[20:26:36] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:26:46] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[20:26:48] <Soliton> it's just transmission-remote -a ~/'torrents/watch'/*.torrent
[20:27:14] <Dr-007> hey guys, question. ive got a bash script using a program called `dialog`. so maybe im in the wrong channel.. this is my script: https://bpa.st/OF6A and my question; in this script i have a case $CHOICE which relies on the input of the user being 1, 2, 3... etc. it would be nice if i could use var names instead. is this possible?
[20:27:15] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:21] *** Quits: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 250 seconds)
[20:27:24] <gnoo> Soliton: new_guest_21 said it didn't work
[20:27:28] <Soliton> i would put that stuff last and make sure no filename can start with a dash.
[20:27:37] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[20:27:44] <Soliton> well, https://linux.die.net/man/1/transmission-remote says so.
[20:28:13] <new_guest_21> Soliton: That doesn't work with transmission-remote, unfortunately. Yes, manpage says otherwise, but it doesn't.
[20:28:18] *** Joins: nisstyre (~wes@user/nisstyre)
[20:28:21] *** Joins: niko (~niko@libera/staff/niko)
[20:28:21] *** Joins: pooby (~pooby@167.99.100.8)
[20:28:34] <Soliton> and -a torrent1 -a torrent2 works?
[20:28:35] *** Joins: dlam (~dlam@dlam.me)
[20:28:37] <new_guest_21> yes
[20:28:45] *** Joins: Naib (~j@176.248.222.197)
[20:28:46] *** Quits: Naib (~j@176.248.222.197) (Changing host)
[20:28:46] *** Joins: Naib (~j@user/naib)
[20:28:46] *** Joins: obiwahn (~heini@user/obiwahn)
[20:28:49] <Soliton> ok, then all is good.
[20:29:02] <Soliton> i guess they saw the error of their ways.
[20:29:17] <gnoo> the man page has examples like:            $ transmission-remote -a one.torrent two.torrent
[20:29:27] <gnoo>            $ transmission-remote -a ~/Desktop/*torrent
[20:29:42] <gnoo> ¯\_(ツ)_/¯
[20:29:44] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:29:50] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[20:30:23] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:30:43] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[20:31:24] <Soliton> Dr-007: i mean change your options array to contain strings and not numbers? if dialog supports that that is.
[20:31:28] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 264 seconds)
[20:31:37] <new_guest_21> Just tested `shopt -s nullglob dotglob; torrents=(); for t in ~/'torrents/watch'/*.torrent; do torrents+=(-a "$t"); done; transmission-remote "${torrents[@]}" -w ~/'torrents/download/'; shopt -u nullglob dotglob` -- it worked brilliantly!
[20:31:54] <new_guest_21> Thank you all! \o/
[20:32:23] <jelly> Dr-007, tags don't have to be 1 2 3 4 5 6, you could use erase unpack remove bla... in their place.  So says man dialog.
[20:32:25] <new_guest_21> I hope I am setting and unsetting shopt opts right. I've seen `+s` being used instead but manpages suggest `-u`.
[20:32:37] *** Joins: cdown_ (~cdown@188.214.11.14)
[20:33:03] <Soliton> +/- is for set. i.e. set -x and set +x.
[20:34:10] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:34:25] <new_guest_21> okay
[20:34:35] * gnoo burris face under ground
[20:34:56] <new_guest_21> :P
[20:35:00] <gnoo> this is why half-knowledge is bad
[20:35:14] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[20:35:25] *** cdown_ is now known as cdown
[20:36:23] <Dr-007> Soliton, i havent tried anything yet. so seems a logical answer
[20:37:08] <new_guest_21> Just to confirm I'm understanding this right, is this what the iteration/expansion of `torrents=(); for t in ~/'torrents/watch'/*.torrent; do torrents+=(-a "$t"); done; transmission-remote "${torrents[@]}" -w ~/'torrents/download/'` looks like?
[20:37:08] <new_guest_21> transmission-remote -a '/home/user/torrents/watch/a.torrent' -a '/home/user/torrents/watch/b.torrent' -w '/home/user/torrents/download/'
[20:37:12] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:37:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[20:37:58] <Soliton> "${torrents[@]}" will expand to -a torrent1 -a torrent2 ...
[20:37:59] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 252 seconds)
[20:38:09] <Soliton> because it was set that way in the loop.
[20:39:01] <new_guest_21> So I am right, about `transmission-remote -a '/home/user/torrents/watch/1.torrent' -a '/home/user/torrents/watch/2.torrent' -w '/home/user/torrents/download/'` -- on the whole.
[20:39:24] *** Joins: kdc (~kdc@196.211.197.159)
[20:39:38] <new_guest_21> understood.
[20:41:31] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:41:36] <new_guest_21> I'll modify it so that `"${torrents[@]}"` expands to `-a torrent1 torrent2` instead. Would align best with manpage example, just in case Transmission prefers it (performance, for e.g.)
[20:42:04] <Soliton> but you said that doesn't work??
[20:42:04] <new_guest_21> Thanks again, everyone!
[20:42:07] <Dr-007> Soliton, so ive tried your suggestion. this is the script now: https://bpa.st/5ZWQ and when it/dialog loads it now shows the array keys instead of 1,2,3... which is good. but when i select the first one: erase it shows me this error: https://bpa.st/RJVA
[20:42:12] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:42:13] <Dr-007> perhabs it should be in quotes?
[20:42:20] <Dr-007> (im a noob @ bash)
[20:42:43] <Soliton> you forgot ;; on the previous case.
[20:43:24] <new_guest_21> Soliton: I said `transmission-remote -a ~/Desktop/*torrent` (from manpages: https://manpages.debian.org/bullseye/transmission-cli/transmission-remote.1.en.html) doesn't work. OTOH, `transmission-remote -a one.torrent two.torrent` has always worked.
[20:43:29] <Dr-007> ah
[20:43:50] <Dr-007> yep
[20:43:59] <Soliton> new_guest_21: that makes no sense.
[20:44:07] <Dr-007> i put everything in quotes now, i wonder if it still works without
[20:44:46] <Dr-007> you know.. on the other hand, it doesnt really matter.. with or without quotes
[20:44:47] <Dr-007> thanks
[20:44:50] <Soliton> new_guest_21: either it is -a <multiple arguments> or it's not.
[20:45:04] <new_guest_21> Soliton: I know. It doesn't work with `transmission-show` either, but works with `transmission-edit`.
[20:45:19] <Dr-007> new_guest_21, what exactly are you trying to accomplish?
[20:45:24] <new_guest_21> It's simple enough that I doubt I did anything wrong when issuing the command.
[20:45:35] <Dr-007> recently i had some transmission stuff
[20:45:47] <Dr-007> and i found i had to use certain vars
[20:46:02] <Soliton> i also doubt that it supports either  -a <multiple arguments>  or  -a arg1 -a arg2
[20:46:02] <new_guest_21> Add all torrents in a direct to a running transmission instance (transmission-daemon) via CLI (using transmission-remote)
[20:46:50] *** Joins: polve (~polve@twcitalia/polve)
[20:47:04] <new_guest_21> Soliton: I just tested `-a arg1 -a arg2` (using the for loop and array command you all helped me with) and it added all the torrents in the dir.
[20:47:22] <new_guest_21> As for `-a <multiple arguments>` I had tested it before and it worked.
[20:47:23] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:47:45] <new_guest_21> Let me check again, just to be 100% certain.
[20:47:47] <Dr-007> new_guest_21, this was my transmission thing: https://bpa.st/LULA i wanted to run a script when a torrent was done downloading. and i figured i had to use bash's $1 or $2 inputs to gain information. but i had to use this instead
[20:47:48] <Soliton> i guess it's -a <multiple arguments> and you can simply repeat it.
[20:48:14] <Dr-007> (but you're talking about transmission-remote)
[20:49:42] <new_guest_21> Dr-007: What are you trying to accomplish by adding those to the log manually?
[20:50:30] <Dr-007> new_guest_21, it was just a test to see if i could get the info supplied from transmission
[20:50:57] <Dr-007> when i saw the option to run a script on completion i assumed i could use $1 and $2
[20:51:01] <Dr-007> but this wasnt the case
[20:51:05] <new_guest_21> Oh, I see. I didn't know about that.
[20:51:10] <new_guest_21> Good to know.
[20:51:14] <Dr-007> they have their own special vars that get exported
[20:51:32] <Soliton> new_guest_21: so if -a takes multiple arguments as documented then i so no reason why  transmission-remote -a ~/'torrents/watch'/*.torrent  should not work just fine.
[20:51:33] <Dr-007> which you can then ammend in your script
[20:51:45] <Dr-007> but then again.. i dont really know what you guys are trying to accomplish
[20:51:52] <Dr-007> so im just dumping info
[20:51:56] <Soliton> putting the glob in an array first is not going to change anything.
[20:52:36] *** Joins: n4dir (~user@mue-88-130-56-187.dsl.tropolys.de)
[20:52:54] <Soliton> torrents=(~/'torrents/watch'/*.torrent); transmission-remote -a "${torrents[@]}"  will end up calling the exact same command.
[20:53:00] <new_guest_21> Soliton: I will test it right away, just in case I messed up multiple times before (unlikely but you never know!).
[20:53:18] <new_guest_21> I see, hmm
[20:55:10] <Dr-007> also this is some php code i build upon transmission: https://bpa.st/7FPQ
[20:55:20] <Dr-007> maybe you can interpet
[20:55:40] <Soliton> it's an odd interface though. you have to be careful that torrents contains at least one argument or who knows what happens. and as mentioned before surely no torrent filename may start with a dash or it won't work.
[20:56:17] <Soliton> at least i assume the argument parsing collects arguments after -a until one starts with a dash.
[20:57:26] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[20:58:43] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[20:58:47] <new_guest_21> Soliton: Just tested `transmission-remote -a ~/'torrents/watch'/*.torrent -w ~/'torrents/download/'` and it added just 1 torrent (not even the 1st one in alphabetical order).
[20:59:12] <new_guest_21> Dr-007: Sorry, bash is the only code I can read/understand at all with plenty of googling.
[20:59:48] <CrtxReavr> Struggling a bit with find(1) syntax. . .  how do I match all files under X days old?
[20:59:51] <new_guest_21> But what you shared earlier (transmission's own ENV variables), it's good info, that could be useful. Thanks for that.
[21:00:34] <Soliton> new_guest_21: you can do  echo transmission-remote -a ~/'torrents/watch'/*.torrent -w ~/'torrents/download/'  to see that it should call exactly the same as with the array (if you change it to just one -a).
[21:00:52] <new_guest_21> Right, brb
[21:01:00] *** Joins: Strykar (~wakka@signald/Strykar)
[21:02:22] <Dr-007> so it's a watch folder you're trying to set up?
[21:03:33] *** Joins: lavaball (felix@31.204.155.215)
[21:03:56] *** Joins: kj (~kj@beta.aerisnetwork.net)
[21:04:50] <wiscii> # [ $(( 0xFF > 0x77 )) ] && echo ok
[21:04:51] <shbot> wiscii: ok
[21:04:57] <wiscii> # [ $(( 0xFF < 0x77 )) ] && echo ok
[21:04:57] <shbot> wiscii: ok
[21:05:01] <new_guest_21> Damn, I'm unable to get the * to expand with `echo "transmission-remote 19701 -a /home/user/torrents/watch/"*.torrent" -w /home/user/torrents/download/"`
[21:05:03] <wiscii> wtf ?
[21:05:17] <new_guest_21> It just shows the same
[21:05:21] <Soliton> (( 0xFF < 0x77 ))
[21:05:36] <wiscii> # [ (( 0xFF > 0x77 )) ] && echo ok
[21:05:37] <shbot> wiscii: bash: syntax error near unexpected token `('
[21:05:47] <Soliton> remove []
[21:06:01] <wiscii> # $(( 0xFF > 0x77 )) && echo ok
[21:06:02] <shbot> wiscii: bash: 1: command not found
[21:06:07] <Soliton> good god.
[21:06:10] <wiscii> lol
[21:06:13] <phy1729> You added a $
[21:06:14] <Soliton> # (( 0xFF > 0x77 )) && echo ok
[21:06:15] <shbot> Soliton: ok
[21:06:19] <wiscii> that was my mistake ;-)
[21:06:24] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:07:30] <new_guest_21> Soliton: Any idea what I'm doing wrong with `echo "transmission-remote -a /home/user/torrents/watch/"*.torrent" -w /home/user/torrents/download/"` that the asterisk isn't expanding?
[21:07:43] <Soliton> now you quoted the glob.
[21:08:04] <Soliton> echo transmission-remote -a /home/user/torrents/watch/*.torrent -w /home/user/torrents/download/
[21:08:21] *** Parts: dtcvector_ (~dtcvector@2603-8000-3602-57d6-0000-0000-0000-0498.res6.spectrum.com) (Leaving)
[21:08:25] <Soliton> well, you didn't but it wouldn't match anything the way you quoted.
[21:09:05] <phy1729> Is that safe if the glob expands to more than one file?
[21:09:18] <new_guest_21> Why? I always thought I wasn't supposed to pass anything with spaces to echo and always enclose such in quotes 🤦‍♂️
[21:09:27] <Soliton> there is conflicting info but supposedly so.
[21:09:58] <Soliton> well, you want the glob to expand to multiple arguments to see what command you would call.
[21:10:10] <Soliton> this is just for a simple test.
[21:12:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:16:00] <new_guest_21> Soliton: Okay, the output looks like this: `transmission-remote -a /home/user/torrents/watch/this is one.torrent /home/user/torrents/watch/this is another.torrent  -w /home/user/torrents/download/`
[21:16:43] <new_guest_21> I didn't check if `-a <multiple args` works at all. (Only checked `-a *`.) Allow me to clear that up as well.
[21:17:12] <Soliton> but -a * means multiple args unless there is just a single match.
[21:18:13] <Soliton> # echo cmd -a /*
[21:18:14] <shbot> Soliton: cmd -a /bin /dev /etc /init /lib /lib64 /proc /root /tmp /usr /var
[21:18:34] <Soliton> that works the same way whether you put the arguments in an array first or not.
[21:19:24] <Soliton> so if cmd -a file1 file2 works then -a file* will work just the same. (provided those files are there of course.)
[21:20:13] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:20:55] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:20:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:20:59] <new_guest_21> Okay, apparently the manpage is wrong again. `transmission-remote -a one.torrent two.torrent` actually doesn't work either.
[21:21:08] <new_guest_21> Such wasted time!
[21:21:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:21:23] <phy1729> Does it if you repeat -a ?
[21:21:46] <new_guest_21> I recall testing it but not as sure as `-a ~/path/to/*.torrent`
[21:21:54] <new_guest_21> phy1729 yep!
[21:22:14] <phy1729> The glob won't repeat the flag for you; you need an array
[21:22:27] <Soliton> we've build the whole solution already.
[21:22:57] <Soliton> it's just that there was conflicting info from documentation etc.
[21:23:24] <new_guest_21> Yeah, yeah. Done and dusted. I was hoping this would work, but it explains everything that went wrong today.
[21:25:22] *** Joins: rgrinberg (~textual@200.5.63.76)
[21:26:56] *** Joins: ravan (~ravan@user/ravan)
[21:27:43] *** Quits: reallymemorable (~reallymem@2603:3005:1605:b100:89fe:9896:4552:8206) (Remote host closed the connection)
[21:28:44] *** Quits: TomyWork (~TomyLobo@p200300e80f0f270095753661921d7c06.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:29:01] *** Joins: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de)
[21:30:00] *** Joins: seninha (~seninha@user/seninha)
[21:30:40] *** Joins: tobybl (~tobybl@213.31.134.21)
[21:31:13] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:31:42] *** Joins: Penguin666x (~Penguin66@217.138.205.135)
[21:33:54] <new_guest_21> Dr-007: I decided not to use Transmission's watch feature. It auto renames files in the watch directory (*.torrent → *.torrent.added) upon adding them to the instance, while I'd like them to be left intact. So I wrote a simple watch script using inotify which when running automatically adds torrents to the running transmission-daemon instance.
[21:33:55] <new_guest_21> OTOH, my question here is about when I have a lot of torrents in a single directory (that isn't being watched) that I'd like to add to transmission.
[21:34:07] <new_guest_21> ^ In response to "so it's a watch folder you're trying to set up?"
[21:35:00] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:35:04] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Ping timeout: 264 seconds)
[21:36:10] <Dr-007> ah, i see
[21:36:17] <new_guest_21> i.e. How do I add all the torrents in current directory to transmission via command-line? The manpage examples don't work and are bad. That's where the problem arose.
[21:36:37] <new_guest_21> Now I have the solution and the knowledge of what's wrong in the manpage.
[21:37:13] <Dr-007> wrong.. wrong... its more or less about the subtle differences between linux flavours
[21:37:22] <Dr-007> and desktop managers
[21:37:25] <Dr-007> and all that
[21:37:47] <Dr-007> but let me have a looksy if i can shed some light on your question
[21:38:05] <Soliton> a bug report would probably be a good idea.
[21:39:02] <new_guest_21> yeah, I will do that
[21:39:48] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[21:40:02] <Dr-007> new_guest_21, so are you trying to add them directly via cli or are you using the web/remote stuff?
[21:40:14] <Dr-007> the latter was what i assumed, hence the php stuff
[21:40:16] <new_guest_21> cli using transmission-remote
[21:40:46] <Dr-007> in ubuntu i dont have that command
[21:41:04] <Dr-007> but i assume you set up transmission to handle remote requests via the web browser
[21:41:13] <Dr-007> as i saw a screenshot of this earlier
[21:41:38] <Dr-007> give me a minute or 3
[21:42:34] <new_guest_21> Nope. Not me. My transmission instances are configured to allow only local requests.
[21:42:57] <Dr-007> yeah, but local on a http port
[21:43:09] <new_guest_21> Web UI is bad for performance and usability when dealing with multiple instances & large number of torrents.
[21:43:14] <Dr-007> so can you now visit transmission in your browser?
[21:43:21] <Dr-007> ok
[21:43:31] <Dr-007> then i dont know either.. im sorry
[21:43:59] <new_guest_21> np. Like I said I have a working solution now with the help of others here and on #transmission channel
[21:44:07] <new_guest_21> :)
[21:44:11] *** Joins: reallymemorable (~reallymem@2603:3005:1605:b100:89fe:9896:4552:8206)
[21:44:27] <Dr-007> i figured the remote stuff you/Soliton were talking talking about was based upon transmission set up accepting 'remote' connections
[21:44:45] <Dr-007> essentially thats transmission opening up a socket/door for you to connect trough via the web
[21:44:59] <Dr-007> and pushing stuff via curl
[21:45:01] <Dr-007> or whatever
[21:45:24] <Dr-007> and ofcourse, this could be webbased only on your local lan
[21:45:40] *** Joins: paws_ (uid89121@id-89121.lymington.irccloud.com)
[21:45:44] <Dr-007> but if its speed/multiple instances you're looking for
[21:45:48] <Dr-007> then im not sure
[21:46:13] <Dr-007> so you've got a cli command transmission-remote?
[21:46:23] *** Joins: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de)
[21:47:00] <new_guest_21> https://manpages.debian.org/bullseye/transmission-cli/transmission-remote.1.en.html
[21:47:11] <new_guest_21> There are examples there
[21:48:10] <Dr-007> how do you start this?
[21:48:13] <Dr-007> or install
[21:48:21] <Dr-007> via apt-get transmission-remote ?
[21:48:35] <Dr-007> im on ubuntu and this isnt installed with transmission
[21:49:19] <Soliton> you can see there that the package name is transmission-cli.
[21:49:46] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[21:50:09] <new_guest_21> Issue submitted: https://github.com/transmission/transmission/issues/2252
[21:50:18] <Dr-007> i see https://bpa.st/THCA
[21:50:58] <new_guest_21> `sudo apt-get install transmission-cli transmission-common transmission-daemon` should do it on Debian-based systems
[21:51:41] <Dr-007> and how do you notice your drop in performence
[21:51:50] <Dr-007> i saw you and Soliton chat earlier
[21:51:57] <new_guest_21> Then you run transmission-daemon with the proper config. flags, and use transmission-remote to manage it.
[21:52:05] <Dr-007> i assume you iterated trough all files and added them seperately?
[21:52:43] <Dr-007> which how you noticed it 'sucked'
[21:52:52] *** Joins: dj (~dj@162.223.44.49)
[21:53:07] <new_guest_21> I didn't talk about drop in performance. I said compared to Web UI using CLI would offer better performance (e.g. better use of resources, such as RAM, etc. when dealing with multiple instances and many number of torrents).
[21:53:36] <new_guest_21> I don't think that's me.
[21:54:03] *** Joins: tobybl (~tobybl@213.31.134.21)
[21:54:19] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:54:26] *** Quits: reallymemorable (~reallymem@2603:3005:1605:b100:89fe:9896:4552:8206) (Ping timeout: 252 seconds)
[21:54:42] <Dr-007> ok
[21:55:06] <Dr-007>        transmission-remote [http(s?)://host:port/transmission/] [options]
[21:55:15] <Dr-007> thats what im presented thought
[21:55:28] <Dr-007> when i run transmission-remote in cli
[21:55:41] <Dr-007> so i think it just hooks onto the stuff i showed you earlier
[21:55:44] <Dr-007> the php stuff
[21:56:10] <Dr-007> so without the package transmission-remote you could achieve the same with a bash script and only curl installed
[21:56:28] <Dr-007> but those are assumptions i make
[21:56:34] <Dr-007> but im pretty sure
[21:57:03] <new_guest_21> I guess so. But that's way over my head. It's hard enough already. :D
[21:57:25] <Dr-007> mmkay
[21:57:53] <new_guest_21> Maybe as I learn more and more code (bash, python, etc.) I'll figure out better ways to manage things.
[21:57:57] <Dr-007> so let me draw up an example that scan a directory and then tries to push this via curl real quick
[21:58:05] <Soliton> if they specifically provide a client to do it there is little reason to try to do it with curl yourself.
[21:58:20] <Dr-007> i assume youve got a transmission-gui infront of you?
[21:58:26] <new_guest_21> no
[21:58:40] <Soliton> unless you want to participate in every protocol change that the client will hide from you.
[21:58:42] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[21:58:56] <Dr-007> you dont have debian/ubuntu running with transmission?
[21:59:02] <Dr-007> clicking it visually
[21:59:07] *** Joins: thiras (~thiras@user/thiras)
[21:59:26] <new_guest_21> Don't bother Dr-007, I am not going to run something that don't fully understand and know how to modify anyway.
[21:59:56] <new_guest_21> No. My transmission instance is running on a server somewhere in Germany. And I am accessing it from terminal.
[22:00:15] <Dr-007> okay
[22:00:38] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[22:00:53] <new_guest_21> Anyway, I'll go rest now. :)
[22:01:07] <new_guest_21> Thank you so much for your time and all the help Soliton
[22:01:13] <new_guest_21> You all have a good day!
[22:01:36] <Soliton> you're welcome.
[22:01:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[22:01:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:02:21] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[22:02:28] *** Quits: new_guest_21 (~new_guest@183.82.153.163) (Quit: new_guest_21)
[22:04:14] <Dr-007> Soliton, did you ever get the part that transmission-remote is asking about a weburl that `transmission` is running itself
[22:04:34] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:05:22] <Soliton> the manpage says host:port, no url.
[22:05:25] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:06:07] <Soliton> presumably you don't need it when you run the daemon on the default port on the same host.
[22:06:35] <Dr-007> i get what you mean
[22:06:44] <Dr-007> but you havent installed the tool itself?
[22:06:48] <Dr-007> ah never mind
[22:06:52] <Soliton> no
[22:06:56] *** Joins: tijuco (~tijuco@user/tijuco)
[22:06:57] <Dr-007> you helped me out in 5 sec
[22:07:06] <Dr-007> he just didnt understand i think
[22:07:30] <Dr-007> for his problem it was pretty easy without the apt-get package `transmission-remote`
[22:07:42] <Dr-007> but im not sure what his actual problem was
[22:07:51] <Dr-007> im thinking load/cpu speed issues
[22:08:05] <Dr-007> when its a big directory it doesnt work good
[22:08:17] <Dr-007> (thats what he said/ i got)
[22:08:42] <Dr-007> anyways.. doesnt matter
[22:11:09] *** Joins: reallymemorable (~reallymem@2603:3005:1605:b100:ddf6:84a1:902d:7030)
[22:11:21] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[22:13:33] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:13:41] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 245 seconds)
[22:14:28] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:14:33] *** Joins: zebrag (~chris@user/zebrag)
[22:15:50] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[22:17:25] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[22:18:23] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:20:56] *** Joins: zeden (~zeden@user/zeden)
[22:23:52] *** Quits: Jong (~Jong@2620:10d:c090:400::5:6ce8) (Read error: Connection reset by peer)
[22:24:12] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:24:32] *** Joins: zebrag (~chris@user/zebrag)
[22:27:25] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:28:15] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[22:29:00] *** gordonfish- is now known as gordonfish
[22:34:00] *** Joins: keypushe- (keypusher@user/keypusher)
[22:34:59] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[22:37:13] *** keypushe- is now known as keypusher
[22:38:06] *** Quits: zeden (~zeden@user/zeden) (Remote host closed the connection)
[22:39:41] *** Joins: zeden (~zeden@user/zeden)
[22:39:43] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:39:55] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[22:43:09] *** Joins: spawnmc (~spawnmc@192-184-144-150.fiber.dynamic.sonic.net)
[22:45:53] *** Quits: zostj (~rue@1-162-46-144.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:46:28] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 264 seconds)
[22:46:41] *** Quits: reallymemorable (~reallymem@2603:3005:1605:b100:ddf6:84a1:902d:7030) (Ping timeout: 252 seconds)
[22:46:45] <spawnmc> hi all... quick silly question.... I was under the impression this would work with bash 4.4.... am i missing something? https://paste.centos.org/view/3a05b4fd
[22:48:16] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:48:17] *** Parts: r3m (~launch@user/r3m) (WeeChat 3.4-dev)
[22:48:33] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[22:49:09] *** Joins: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net)
[22:49:50] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[22:50:11] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[22:51:09] <geirha> 17G is not a number
[22:51:12] <omegatron> spawnmc: remove the 'G' from your variable
[22:51:13] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[22:51:23] *** Quits: mongrel (uid508343@id-508343.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:51:29] <omegatron> argn, beaten by two seconds  =D
[22:51:45] <tar_xvf> beat me as well
[22:52:00] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[22:52:03] * omegatron goes to the "tools room" ..
[22:53:34] <spawnmc> i  "removed" the G with ${var%?}
[22:53:41] <spawnmc> or at least that was the expectation...
[22:54:02] <larryv> only for one of the comparisons
[22:54:56] <spawnmc> to give it some context the var would be getting it's content from df -h / , so if the value is 0 there will be no G
[22:55:17] <larryv> it doesn't really matter where it comes from. this doesn't work
[22:55:20] <larryv> # [[ 17G -eq 0 ]]
[22:55:21] <shbot> larryv: bash: [[: 17G: value too great for base (error token is "17G")
[22:55:45] <Soliton> !df
[22:55:45] <greybot> http://mywiki.wooledge.org/BashFAQ/094 (parsing df output)
[22:55:48] <spawnmc> actually i just made it work on a machine with a newer version of bash so i guess the bash version is the culprit ....
[22:55:58] <larryv> # echo "$BASH_VERSION"; [[ 17G -eq 0 ]]
[22:55:59] <shbot> larryv: 5.1.8(1)-release
[22:55:59] <shbot> larryv: bash: [[: 17G: value too great for base (error token is "17G")
[22:56:18] <omegatron> just remove any suffix from your variable
[22:56:51] <omegatron> or create a function which can compare numbers which contain a suffix ..
[22:57:36] <Soliton> why would you tell df to output human readable stuff in the first place.
[22:59:03] *** Guest6179 is now known as Ders
[22:59:08] *** Quits: Ders (MrA@2602:ff75:7:3ccc::20) (Changing host)
[22:59:08] *** Joins: Ders (MrA@user/ders)
[22:59:32] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:59:37] <spawnmc> actually it didn't work... i was using the wrong variable heh
[23:00:26] <spawnmc> the intention was to remove the suffix with ${var%?} on the fly but that doesn't seems to work inside the conditional .... but yeah i guess i should just not use -h
[23:00:43] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:01:24] <Soliton> it works fine but you have to do it consistently.
[23:01:33] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:01:34] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:01:53] <Soliton> but removing a random suffix is weird to begin with. as if it doesn't matter if it's a G or M or whatever.
[23:02:14] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:02:28] <spawnmc> well the specific thing im looking at is guaranteed to be G's
[23:02:41] <Soliton> "still 17 bytes left, all good!"
[23:03:25] <spawnmc> this is silly though i agree haha
[23:04:06] <omegatron> homo sapiens - a long history of wrong assumptions ..
[23:04:27] <spawnmc> i know i know.... it's bad to make assumptions
[23:04:42] <spawnmc> even if im 99% sure it will always be in g's
[23:04:43] <omegatron> it's bad to make WRONG assumptions
[23:16:10] *** Quits: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net) (Quit: andydude)
[23:16:28] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 264 seconds)
[23:21:55] *** Joins: earendel (uid498179@user/earendel)
[23:22:41] *** Joins: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net)
[23:23:06] *** Joins: wigums (~wigums@user/wigums)
[23:25:08] *** Joins: greycat (~greg@209.142.155.49)
[23:25:44] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:27:00] <ljharb> it doesn't matter if they're wrong or not
[23:27:11] <ljharb> it's bad to be right for the wrong reasons
[23:27:39] *** Quits: n4dir (~user@mue-88-130-56-187.dsl.tropolys.de) (Remote host closed the connection)
[23:31:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67)
[23:32:12] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[23:32:43] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[23:33:26] *** Joins: Betal (~Betal@user/betal)
[23:34:31] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 245 seconds)
[23:38:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c5ed:3c67:1c78:cc2e)
[23:38:34] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c5ed:3c67:1c78:cc2e) (Changing host)
[23:38:34] *** Joins: skapata (~Skapata@user/skapata)
[23:38:50] <earnest> omegatron: It will always be assumptions because perfect knowledge would break turing's proof
[23:40:04] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:41:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:41:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:43:09] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:47:34] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[23:47:55] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[23:50:00] *** Quits: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67) (Remote host closed the connection)
[23:50:14] *** Joins: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67)
[23:55:28] *** Quits: roadie (~user@2a02:8108:ec0:1427:4cc4:4891:d6ae:7c67) (Ping timeout: 264 seconds)
[23:58:36] *** Joins: rgrinberg (~textual@200.5.63.76)
