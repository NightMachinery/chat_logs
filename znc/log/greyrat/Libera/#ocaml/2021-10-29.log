[00:03:59] *** Quits: mro (~mro@port-92-195-214-115.dynamic.as20676.net) (Ping timeout: 260 seconds)
[00:06:27] <reynir> that's awesome and fun, sherlocode
[00:07:39] <reynir> oh, I found a dead link
[00:07:55] <reynir> hm no contact info on the page
[00:11:11] <companion_cube> does anyone know what it uses internally?
[00:20:41] *** Joins: faultline (~christian@nat-eduroam-01.scc.kit.edu)
[00:20:47] *** Quits: faultline (~christian@nat-eduroam-01.scc.kit.edu) (Read error: Connection reset by peer)
[00:23:17] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[00:30:33] <d_bot> <undu> the page source is... interesting ðŸ™‚
[00:36:01] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[00:54:40] *** Joins: kurfen (~kurfen@45.152.181.20)
[01:10:49] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:11:58] *** Joins: rgrinberg (~textual@190.113.111.74)
[01:17:15] *** Quits: rgrinberg (~textual@190.113.111.74) (Ping timeout: 260 seconds)
[01:28:16] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[01:34:02] *** Joins: olle (~olle@i5E86C5FA.versanet.de)
[01:41:13] <companion_cube> Wow, turns out I'm the only one to have use for a List.fold_filter_map
[01:41:15] <companion_cube> Sad
[01:44:59] <Armael> lol
[01:46:00] <companion_cube> At least someone else is using fold_flat_map
[01:59:05] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[02:04:48] *** Joins: jess (~jess@libera/staff/jess)
[02:05:47] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Ping timeout: 260 seconds)
[02:06:59] *** Quits: olle (~olle@i5E86C5FA.versanet.de) (Ping timeout: 264 seconds)
[02:07:11] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 260 seconds)
[02:09:00] *** Joins: gdd (~gdd@129.199.146.230)
[02:15:16] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[02:18:00] *** Quits: spip (~bobo@37.166.43.19) (Ping timeout: 258 seconds)
[02:18:03] *** Joins: bobo (~bobo@37.170.127.124)
[02:22:10] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[02:37:07] *** Parts: jess (~jess@libera/staff/jess) ()
[02:49:20] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[02:52:23] *** Joins: brettgilio (~brettgili@x-node.gq)
[02:54:46] *** Joins: Skyfire (~pyon@user/pyon)
[03:02:06] *** Joins: rgrinberg (~textual@190.113.111.74)
[03:07:05] *** Quits: rgrinberg (~textual@190.113.111.74) (Ping timeout: 260 seconds)
[03:16:21] *** Quits: hackinghaunt (~hackingho@user/hackinghorn) (Ping timeout: 245 seconds)
[03:24:12] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[03:24:25] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[03:36:55] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[03:38:43] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[04:06:05] *** Joins: rgrinberg (~textual@190.113.111.74)
[04:23:45] *** Joins: hackinghaunt (~hackingho@user/hackinghorn)
[05:09:10] *** Quits: notnotdan (~notd@v22019068545391262.megasrv.de) (Ping timeout: 244 seconds)
[05:22:24] *** Joins: notnotdan (~notd@v22019068545391262.megasrv.de)
[05:27:40] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 260 seconds)
[06:21:45] *** Joins: mbuf (~Shakthi@171.61.174.60)
[06:26:00] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[06:48:25] *** Quits: jonasbits (~quassel@2a00:66c0:1:1::58) (Ping timeout: 252 seconds)
[06:54:11] *** Joins: jonasbits (~quassel@2a00:66c0:1:1::58)
[08:13:56] *** Joins: gravicappa (~gravicapp@h178-129-169-162.dyn.bashtel.ru)
[08:15:23] <sim642> Are there any examples of containerizing an opam package installation in a lightweight manner? That is, the final image shouldn't contain any opam/ocaml stuff (like the repository, compiler, etc) that aren't necessary for executing a binary installed by the package
[08:56:18] *** Quits: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027) (Remote host closed the connection)
[08:56:55] *** Joins: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027)
[08:57:59] *** Quits: cbarrett (sid192934@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[08:59:10] *** Joins: cbarrett (sid192934@id-192934.helmsley.irccloud.com)
[09:03:14] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:07:39] *** Quits: gravicappa (~gravicapp@h178-129-169-162.dyn.bashtel.ru) (Ping timeout: 260 seconds)
[09:13:05] *** Joins: rgrinberg (~textual@190.113.111.74)
[09:15:00] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:17:45] *** Quits: rgrinberg (~textual@190.113.111.74) (Ping timeout: 258 seconds)
[09:41:19] *** Joins: sagax (~sagax_nb@user/sagax)
[09:44:04] *** Joins: rgrinberg (~textual@190.113.111.74)
[09:51:26] *** Joins: mro (~mro@port-92-195-176-214.dynamic.as20676.net)
[09:52:13] *** Quits: rgrinberg (~textual@190.113.111.74) (Ping timeout: 265 seconds)
[10:08:15] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:24:34] <d_bot> <Jektrix> You mean like in Docker?
[10:32:35] *** Quits: mro (~mro@port-92-195-176-214.dynamic.as20676.net) (Remote host closed the connection)
[10:35:01] *** Joins: mro (~mro@2002:5cc3:b0d6:0:2031:ab4f:45c4:3b)
[10:59:49] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[11:00:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:04:00] *** Joins: olle (~olle@mue-88-130-56-167.dsl.tropolys.de)
[11:32:23] <d_bot> <Splingush> The keyword is "multistage docker container". You have one stage where you install your build tools and compile, then a next stage where you only copy the compiled binary over (and copy/install libraries that are dynamically linked). Alpine linux worked for me for the final stage.
[11:32:49] <d_bot> <Splingush> <https://docs.docker.com/develop/develop-images/multistage-build/>
[11:34:04] <d_bot> <Splingush> I checked via ldd to see what libraries are needed for the final container, to be able to run the binary.
[11:36:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:33] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:41:07] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[11:58:55] *** Joins: bartholin (~bartholin@158.110.155.0)
[12:07:37] <d_bot> <undu> @companion_cube you're not the only one, it's just that I need to update the compiler first on the product :(
[12:42:07] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[13:24:41] *** Joins: jlrnick (~josephler@2a01cb040a1594005d8c4559219abc2e.ipv6.abo.wanadoo.fr)
[13:39:01] *** Quits: mro (~mro@2002:5cc3:b0d6:0:2031:ab4f:45c4:3b) (Remote host closed the connection)
[13:41:53] *** Joins: mro (~mro@port-92-195-176-214.dynamic.as20676.net)
[13:46:01] *** Joins: wonko (~wjc@user/wonko)
[13:49:57] *** Quits: jlrnick (~josephler@2a01cb040a1594005d8c4559219abc2e.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:50:24] *** Joins: jlrnick (~josephler@2a01cb040a1594005d8c4559219abc2e.ipv6.abo.wanadoo.fr)
[13:54:32] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:05:23] *** Quits: mro (~mro@port-92-195-176-214.dynamic.as20676.net) (Remote host closed the connection)
[14:09:38] *** Joins: mro (~mro@port-92-195-176-214.dynamic.as20676.net)
[14:13:28] *** Quits: mro (~mro@port-92-195-176-214.dynamic.as20676.net) (Remote host closed the connection)
[14:16:35] <d_bot> <Jektrix> I was going to say pretty much exactly what Splingush said ðŸ˜…
[14:17:36] *** Joins: spip (~bobo@37.172.25.232)
[14:17:47] *** Quits: bobo (~bobo@37.170.127.124) (Ping timeout: 264 seconds)
[14:18:23] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[14:39:32] *** Joins: xd1le (~xd1le@user/xd1le)
[14:50:03] *** Joins: rgrinberg (~textual@190.113.111.74)
[14:51:29] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[14:56:55] *** Quits: rgrinberg (~textual@190.113.111.74) (Ping timeout: 252 seconds)
[14:59:48] *** Joins: mro (~mro@port-92-195-176-214.dynamic.as20676.net)
[15:04:11] *** Quits: mro (~mro@port-92-195-176-214.dynamic.as20676.net) (Ping timeout: 260 seconds)
[15:10:02] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[16:03:18] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[16:08:42] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[16:53:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[16:54:57] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:10:11] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 246 seconds)
[17:30:03] *** Quits: jlrnick (~josephler@2a01cb040a1594005d8c4559219abc2e.ipv6.abo.wanadoo.fr) (Read error: Connection reset by peer)
[17:31:53] *** Joins: jlrnick (~josephler@2a01cb040a1594005d8c4559219abc2e.ipv6.abo.wanadoo.fr)
[17:41:27] *** Quits: jlrnick (~josephler@2a01cb040a1594005d8c4559219abc2e.ipv6.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[17:45:19] *** Joins: gravicappa (~gravicapp@178.214.244.228)
[18:13:50] <d_bot> <Mukal> Hi, I want to write an interpreter with OCaml. I'm still a beginner, still at the semantics and syntax part, so maybe still a long way to go. But would appreciate it if there are readings that I can already access or even better a guide that specific for OCaml which I haven't found. The other guide I found was mainly for other languages, or it does not matter actually? The motivation of writing an interpreter is mainly to understan
[18:14:43] <companion_cube> maybe look at "crafting interpreters"? it uses java in the first half, but OCaml would be suited too
[18:17:47] *** Joins: rgrinberg (~textual@190.113.111.74)
[18:23:00] <d_bot> <Mukal> I've just looked it, looks good. But, what do you mean by "would be suited too"?
[18:25:11] <companion_cube> well, it'd work at least as well as java for the first half
[18:26:08] <d_bot> <Mukal> All right, thank you very much ðŸ™‚
[18:30:22] <dmbaturin> The concepts remain the same, mostly. ASTs, environments etc. It's easier to express with algebraic types for sure.
[18:34:26] <d_bot> <Mukal> I see, that's nice then.
[19:11:59] *** Quits: Franciman (~Franciman@mx1.fracta.dev) (Remote host closed the connection)
[19:12:47] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[19:18:52] *** Quits: rgrinberg (~textual@190.113.111.74) (Ping timeout: 268 seconds)
[19:23:51] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[19:27:41] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[19:54:49] *** Quits: bartholin (~bartholin@158.110.155.0) (Quit: Leaving)
[19:56:46] *** Joins: Yehowshua (~Yehowshua@2601:c9:8000:14b8:843c:4bf2:b79e:94f0)
[19:57:14] <Yehowshua> I was kind of hoping that `dune utop` would drop me into a seesion where the names in my main are already accessible
[19:57:24] <Yehowshua> but this doesn't seem to be the case?
[19:57:36] <Yehowshua> I have a directory with the two following files:
[19:57:37] <Yehowshua> https://paste.debian.net/1217293/
[19:57:43] <Yehowshua> https://paste.debian.net/1217294/
[19:59:12] <Yehowshua> I should mention I'm a bit new to dune and ocaml in general
[20:01:44] <Yehowshua> Any suggestions on how I might be able to load my main.mlin a repl along with the dependencies of that file?
[20:05:04] *** Quits: JSharp (sid4580@lymington.irccloud.com) (Ping timeout: 244 seconds)
[20:07:00] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[20:11:47] *** Quits: olle (~olle@mue-88-130-56-167.dsl.tropolys.de) (Ping timeout: 264 seconds)
[20:14:50] <sim642> @Splingush That's what I ended up doing but it feels extremely dirty to have to pick the right things out of the build into the final container. Was hoping dune could do that because it knows all the dependencies and non-dependencies
[20:25:13] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:25:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:37:29] *** Joins: Ekho- (~Ekho@user/ekho)
[20:38:06] *** Joins: cross_ (~cross@spitfire.i.gajendra.net)
[20:38:48] *** Joins: motherfs1 (~motherfsc@user/motherfsck)
[20:41:56] *** Quits: kakadu (~kakadu@195.19.236.234) (Quit: Konversation terminated!)
[20:42:51] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[20:43:19] *** Quits: motherfsck (~motherfsc@user/motherfsck) (*.net *.split)
[20:43:19] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[20:43:19] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[20:50:49] *** Joins: olle (~olle@mue-88-130-56-167.dsl.tropolys.de)
[20:53:41] *** Ekho- is now known as Ekho
[21:06:19] <d_bot> <Splingush> sim642: I do not know a better approach than that, but my use-case differs a bit from your apparently as well. I've only ever used it for binaries built myself.
[21:06:20] <d_bot> <Splingush> But I'm confused there for a bit: I thought the dune-stanza-files were specifying on a ocaml-level what dependencies there are, but not on an OS-level. If you built your binary, the used ocaml-libraries for it won't be necessary afterwards, but on an OS-level it will need some dynamically linked libraries at runtime.
[21:06:21] <d_bot> <Splingush> I might be misunderstanding it, my knowledge there is just sufficient to get things going.
[21:17:01] <d_bot> <Splingush> Is your example public? I might not be able to help you further, but providing more concrete information will let others suggest other approaches as well.
[21:33:29] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[21:40:23] *** Quits: mbuf (~Shakthi@171.61.174.60) (Quit: Leaving)
[21:50:59] *** Joins: mro (~mro@port-92-195-176-214.dynamic.as20676.net)
[21:54:23] *** Quits: gravicappa (~gravicapp@178.214.244.228) (Ping timeout: 246 seconds)
[21:58:28] <d_bot> <RegularSpatula> I have an example of a multistage Docker image with a static ocaml binary if youâ€™re interested in a concrete exampleâ€¦itâ€™s a bit messy but it may be useful to see
[22:05:31] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[22:05:48] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[22:07:44] *** Joins: rgrinberg (~textual@190.113.111.74)
[22:10:06] *** Quits: mro (~mro@port-92-195-176-214.dynamic.as20676.net) (Remote host closed the connection)
[22:15:59] *** Quits: motherfs1 (~motherfsc@user/motherfsck) (Quit: quit)
[22:17:42] *** Quits: olle (~olle@mue-88-130-56-167.dsl.tropolys.de) (Ping timeout: 268 seconds)
[22:24:16] <sim642> Here's what I hacked together today (needs cleanup and comments): https://github.com/goblint/analyzer/blob/docker/Dockerfile
[22:25:09] *** Quits: Yehowshua (~Yehowshua@2601:c9:8000:14b8:843c:4bf2:b79e:94f0) (Ping timeout: 256 seconds)
[22:25:36] <sim642> One big annoyance in my case is the apron dependency which has C shared libraries. And for some reason --relocatable build still has their RUNPATH as absolute in the binary, so I have to manipulate the binary to make it relative
[22:29:32] <d_bot> <RegularSpatula> Will a static build work in your case?
[22:31:43] *** Joins: vicfred (~vicfred@user/vicfred)
[22:31:54] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[22:32:41] <sim642> I haven't tried, but if it's possible then it might even be better for ease of use
[22:39:51] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:43:18] <d_bot> <RegularSpatula> Yeah it was convenient, but my app was pure ocaml so it was no big deal to build it staticâ€¦not sure with yours how itâ€™ll go with those C reps tho
[22:58:05] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[23:38:47] *** Joins: rgrinberg (~textual@190.113.111.74)
[23:49:07] *** Joins: mro (~mro@port-92-195-176-214.dynamic.as20676.net)
[23:55:55] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
