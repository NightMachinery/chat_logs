[00:00:56] <Byteflux> arash: what makes them special? any printable ASCII character that isn't a-zA-Z0-9? if so, you can use ranges in a character class
[00:02:02] <TinoDidriksen> arash, define special. There are Unicode classes for symbols and punctuation.
[00:03:11] <TinoDidriksen> And the inverse, anything that's not a number or letter: [^\pL\pM\pN]
[00:03:25] <arash> TinoDidriksen, I mean symbols, SHIFT + 1-0 in top of the keyboard in windows.
[00:03:41] <TinoDidriksen> They are from many different categories.
[00:03:53] <TinoDidriksen> And they differ across regions.
[00:04:00] <__adrian> arash: that's a completely arbitrary group of characters
[00:04:08] <Byteflux> That seems to depend entirely on keyboard layout
[00:04:09] <__adrian> hence you'd need to list them explicitly.
[00:04:13] <arash> !@#$%^&*()
[00:04:20] <__adrian> right
[00:04:24] <TinoDidriksen> If you want exactly those, list exactly those.
[00:04:31] <__adrian> there's nothing inherently similar/special about those characters
[00:04:37] <__adrian> so you'd have to list them
[00:04:42] <Byteflux> yeah there's nothing special about that, you have just manually make a list of it
[00:05:00] <arash> ok. i get it. thank you
[00:05:23] <__adrian> NOW... the fact that you're trying to treat them differently is suspicious, and make me wonder if you're trying to do something that makes no sense...  :)
[00:05:30] <TinoDidriksen> Indeed
[00:05:32] <__adrian> we can figure that out, if you want
[00:07:20] <arash> I just thought they are different! i thought maybe there is a shortcut to cover all of them instead of typing them one by one. but seems its not true.
[00:08:01] <biberu> arash: why do you need to match those characters?
[00:08:41] <da_wunder> better question - what are you trying to do exactly and why?
[00:10:53] <arash> the problem is i tried to match a sentences between src=blah.blah.bla end. I used src=([a-zA-Z0-9]*)end but i findout i should add more characters in order to my regex works, I added & then i findout i should add () so it came to my mind maybe there is a shortcut for those symbols!
[00:11:25] <TinoDidriksen> src=...? Sounds like you should use a DOM parser.
[00:12:06] <TinoDidriksen> Oh, or is that a literal "end" token?
[00:12:34] <arash> TinoDidriksen, yes. I can do it.but in this case i prefer using regex, because its done by regex in the past and i don't have time to replace all those regex with xpath
[00:12:43] <__adrian> "arash> the problem is i tried to match a sentences between src=blah.blah.bla"  that does not look like a "sentence" at all. it looks like an html attribute value.
[00:12:53] <arash> TinoDidriksen, no, there i no token.
[00:13:19] <__adrian> "no time to replace them all" is not the same as "keep adding more"
[00:13:28] <arash> __adrian, yes. its an html attribute value.
[00:13:54] <__adrian> i'd STRONGLY recommend doing it the right way for new code/changes. you can go back to pre-existing cases as you have time.
[00:14:27] <Byteflux> The value of an HTML attribute is clearly delimited by matching opening and closing quotes.
[00:14:35] <Byteflux> Parsers are pretty good about knowing things like this.
[00:14:50] <__adrian> well...  :)
[00:15:04] <arash> __adrian, i understand it. good suggestion. thank you
[00:15:12] <__adrian> very clear spec, yes, but not necessarily delimited.
[00:15:39] <Byteflux> In the event it's not delimited, all you really can do is delimit it by whitespace :P
[00:15:41] <__adrian> and not a _simple_ spec.
[00:15:54] <Byteflux> Or an end of tag closing bracket
[00:17:38] <TinoDidriksen> If you absolutely must use regex, then maybe something like src=(["']?)(\S.*?)\1(?: |>) ... and hope the attribute is well formed and non-empty.
[00:18:37] <__adrian> " ... and hope"
[00:18:51] <TinoDidriksen> Parsing without a parser involves a lot of hope.
[00:19:24] <biberu> arash: if you can show the input perhaps someone can give you a dom example using e.g. xpath instead
[00:21:06] <arash> biberu, i know xpath very well. i works with xpath for almost 2 years. so i can do it. its not the problem, i was too lazy to create a dom object with php, and do it with xpath, it coded by regex so it was easier for me to fix that regex!
[00:22:17] <biberu> doesn't look like it was ^^
[00:23:19] *** Quits: magla (~gelignite@55d4ac4e.access.ecotel.net) (Quit: Stay safe!)
[00:23:37] <arash> what do you mean? I don't understand
[00:24:47] <biberu> arash: it doesn't look like it was easier to use regex
[00:25:58] <biberu> which makes sense, considering that the pattern doesn't understand the actual structure of your input
[00:27:19] <arash> biberu, yes. I mean maybe. creating dom, fix html errors, fix utf-8 problems when using xpath, create an object of dom class, then pass it to xpath class...so i decided not to do that.
[00:28:12] <biberu> if it's an obstacle to instantiate a dom document perhaps you should just bite the bullet and do it more
[00:28:44] <biberu> same goes for encodings
[00:29:00] <biberu> if the document isn't valid though, that might be tricky
[00:32:28] <biberu> arash: fwiw, you've got to be careful with encodings when using regular expressions too
[00:32:36] <arash> biberu, yes. i should practice more working with php DOM class, i have some problems with using DOM class in php, there is a good library https://simplehtmldom.sourceforge.io/ for doing xpath, but the problem with this one is it using file_get_contents instead of curl and also it use css selector (its very similar with xpath) but sometimes the problem don't solve with css selector
[00:32:49] <biberu> or just in general real, always know how your text is encoded
[00:33:30] <arash> biberu, copy. thank you
[00:34:45] <biberu> s/real/really/, the phone is autocorrupting for me ^^
[00:43:06] *** Woet_ is now known as Woet
[00:47:00] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:53:13] *** Joins: sharpertool (sid80151@id-80151.stonehaven.irccloud.com)
[00:56:56] *** Quits: lall- (~alek@2001:44c8:4551:4319:d105:c07a:f02a:e103) (Ping timeout: 272 seconds)
[00:59:31] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[01:34:31] <relipse> has anyone had a job offer rescinded?
[01:42:34] *** Joins: guidoc (~guido@151.57.183.203)
[01:49:57] <relipse> ok SEO , what is the secret? I've learned that if you just use html5 tags correctly you should be good to go?
[01:50:03] <relipse> I guess you also need sitemaps and robots.txt
[02:26:56] <funhouse> make sure to use SSL as well
[02:32:38] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[02:55:14] <s17> seo is a scam
[02:57:19] *** Parts: Lvl4Sword (sid483043@user/lvl4sword) (Leaving)
[03:03:44] *** Joins: keypusher (keypusher@user/keypusher)
[03:04:58] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:23:14] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 272 seconds)
[03:27:25] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[03:28:03] *** Joins: de-facto (~de-facto@user/de-facto)
[03:30:42] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[03:46:44] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[03:47:20] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 268 seconds)
[03:49:27] *** Joins: de-facto (~de-facto@user/de-facto)
[03:50:22] *** Joins: cheli (~cheli@ip044.net185-5-84.es.excom.net)
[03:50:27] *** Joins: evilbug (~evilbug@191.101.174.118)
[03:52:41] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 248 seconds)
[04:08:52] *** Quits: pmercado (~pmercado@190.22.89.183) (Ping timeout: 245 seconds)
[04:24:22] *** Joins: gastus (~marc@5.83.191.71)
[04:24:46] <gastus> I'd like to implement trying to get lock using mysqlnd driver eg mysqli_poll and if it fails cancel the locking and retry some seconds later.
[04:25:06] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Ping timeout: 252 seconds)
[04:25:15] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Ping timeout: 276 seconds)
[04:25:23] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Ping timeout: 272 seconds)
[04:26:17] <gastus> The problem is mysqli_reap_asnyc_qurey doesn't seem to return on LOCK TABLE
[04:28:13] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[04:29:02] <Blondie101010> what do you mean exactly by "doesn't seem to return on LOCK TABLE"?  what does it do?
[04:30:03] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[04:38:33] <gastus> it just hangs until I unlock the locked table.
[04:38:44] <gastus> What I expect is that it returns 'no data available yet' like.
[04:38:56] <gastus> In mysql cmd line tool you can do lock table then abort with ctlr-c
[04:39:35] <gastus> I lookde at the code 'kill query thread_id' command is used.
[04:40:23] <Blondie101010> so you run a lock async, and then try to get the result from it?
[04:41:23] <Blondie101010> can't imagine what you'd expect different from that
[04:43:54] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[05:22:33] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:42] *** Joins: vlm (~vlm@user/vlm)
[05:35:29] *** Quits: guidoc (~guido@151.57.183.203) (Read error: Connection reset by peer)
[05:44:14] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:56:08] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:10:29] *** Joins: guidoc (~guido@151.43.201.63)
[06:15:56] *** Parts: cheli (~cheli@ip044.net185-5-84.es.excom.net) ()
[06:24:33] *** Joins: ferdna (~ferdna@user/ferdna)
[06:27:32] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:29:02] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[06:30:04] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[06:31:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[06:32:12] *** Joins: keypusher (keypusher@user/keypusher)
[06:44:08] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[07:15:57] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[07:18:04] *** Joins: Rockwood (~Rocky@user/rocky)
[07:18:39] *** Joins: bobdobbs (~user@150.107.174.237)
[07:19:37] *** Quits: gastus (~marc@5.83.191.71) (Ping timeout: 248 seconds)
[08:03:57] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:04:13] *** Joins: jgrim23 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[08:08:12] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[08:29:52] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[08:31:30] <Rockwood_> cya
[08:45:41] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[08:52:58] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[09:03:27] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 245 seconds)
[09:32:35] *** Joins: molt (~molt@79.140.150.21)
[09:35:17] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:42:04] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:45:35] *** Quits: nbin_ (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[09:45:54] *** Joins: nbin (~nbin@user/nbin)
[09:46:53] *** Joins: jgrim234 (~jgrim@172.56.10.129)
[09:50:08] *** Quits: jgrim23 (~jgrim@d60-65-211-197.col.wideopenwest.com) (Ping timeout: 258 seconds)
[09:50:09] *** jgrim234 is now known as jgrim23
[09:50:33] *** Quits: evilbug (~evilbug@191.101.174.118) (Quit: Connection closed)
[09:53:42] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[09:56:27] *** Joins: jgrim237 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[10:00:09] *** Quits: jgrim23 (~jgrim@172.56.10.129) (Ping timeout: 248 seconds)
[10:00:09] *** jgrim237 is now known as jgrim23
[10:12:22] *** Quits: guidoc (~guido@151.43.201.63) (Ping timeout: 272 seconds)
[10:12:51] *** Quits: Stanley (~stanley@d162-156-50-3.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[10:13:08] *** Joins: Stanley (~stanley@d162-156-50-3.bchsia.telus.net)
[10:17:34] *** Joins: jgrim231 (~jgrim@172.56.10.129)
[10:20:12] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[10:20:57] *** Quits: jgrim23 (~jgrim@d60-65-211-197.col.wideopenwest.com) (Ping timeout: 248 seconds)
[10:20:57] *** jgrim231 is now known as jgrim23
[10:28:22] *** Joins: jgrim238 (~jgrim@172.58.120.44)
[10:30:46] *** Quits: jgrim23 (~jgrim@172.56.10.129) (Ping timeout: 258 seconds)
[10:30:57] *** Joins: jgrim23 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[10:31:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:34:17] *** Quits: jgrim238 (~jgrim@172.58.120.44) (Ping timeout: 248 seconds)
[10:36:04] *** Joins: jgrim237 (~jgrim@172.58.120.44)
[10:39:37] *** Quits: jgrim23 (~jgrim@d60-65-211-197.col.wideopenwest.com) (Ping timeout: 248 seconds)
[10:39:37] *** jgrim237 is now known as jgrim23
[10:49:42] *** Joins: jgrim238 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[10:53:29] *** Quits: jgrim23 (~jgrim@172.58.120.44) (Ping timeout: 248 seconds)
[10:53:29] *** jgrim238 is now known as jgrim23
[11:05:17] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[11:05:46] *** Joins: novns (~novns@user/novns)
[11:06:46] *** Quits: novns (~novns@user/novns) (Client Quit)
[11:07:16] *** Joins: novns (~novns@user/novns)
[11:49:12] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:04:14] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::7845)
[12:15:32] *** Joins: WishBoy (~WishBoy@user/wishboy)
[12:28:15] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:32:27] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[12:44:25] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[13:03:54] *** Quits: celphi (uid97751@user/celphi) (Quit: Connection closed for inactivity)
[13:06:16] *** Joins: entuland (~entuland@user/entuland)
[13:08:21] *** Joins: guidoc (~guido@151.47.51.53)
[13:10:50] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[13:10:58] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 268 seconds)
[13:15:43] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:27:16] *** Joins: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net)
[13:30:33] <AceSlash> hello, I'm trying to convince a customer to switch from php 7.1.33 to a newer version but he tells me that there are no vulnerabilities for this version and that I have to prove that there is a real risk, any idea how to do that? when looking for CVE, I indeed see nothing for this version
[13:38:05] <da_wunder> if you just look https://www.cvedetails.com/product/128/PHP-PHP.html?vendor_id=74 site you will see that php 7.1 has multiple cve
[13:38:26] <da_wunder> eg. https://www.cvedetails.com/vulnerability-list/vendor_id-74/product_id-128/year-2017/opdos-1/PHP-PHP.html
[13:38:37] <biberu> is that the only reason to upgrade? o_O
[13:39:51] <da_wunder> and really you should show this page to your customer - https://www.php.net/supported-versions.php
[13:49:48] <AllenJB> If the PHP install is the old, what else is also out of date on the server? And it's not just PHP itself, but the version of PHP installed will likely limit how far you can update the apps written in PHP that are running on the server.
[13:52:05] <AceSlash> only php is old, installed via http://ppa.launchpad.net/ondrej/php/ubuntu
[13:52:37] <AceSlash> php 7.2 breaks their website... I don't know how or why, I'm not a developer
[13:53:19] <biberu> adding to what AllenJB said: also how long they'll be able to use externally developed dependencies or software packages, find developers etc, what would the impact on their business be if they were still on 5 or 4? what would it cost to do that upgrade in one huge step instead of incrementally?
[13:54:31] <AceSlash> the answer is "new website is in development, will be ready by the end of 2021"
[13:54:45] <AceSlash> don't want to invest anything in the old one
[13:54:45] <biberu> ideally updating the version shouldn't even be a manual operation, just bump it in the scripts that configure your environment and run your tests
[13:56:22] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[13:57:13] *** Joins: entuland (~entuland@user/entuland)
[14:31:58] *** Joins: nucc1 (~nucc1@user/nucc1)
[14:34:17] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 245 seconds)
[14:42:01] <nucc1> is it possible to pass a file handle as a function argument with strict typing? what type do you specify?
[14:45:45] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:46:30] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[14:46:45] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:51:56] *** Joins: alkavan (~wdna@bzq-79-183-26-245.red.bezeqint.net)
[14:57:38] *** Joins: [twisti] (~twisti@toadwater.com)
[14:59:19] <[twisti]> we have a method that is a kickoff for a complex export pipeline. the options for exporting have increased, and now the method has ten optional parameters and we are looking at at least 5 more. in java, which i am more comfortable with, we have the patterns of config objects, is there any established pattern like that for php, or do i just roll my own ?
[14:59:50] <TinoDidriksen> Passing an object is quite normal.
[15:00:40] <TinoDidriksen> E.g. https://php.net/setcookie ran into the same problem, so instead of adding an 8th optional arg they turned it into an options[] arg.
[15:00:55] <olle> [twisti]: DTO
[15:02:29] <[twisti]> TinoDidriksen: that looks like what i was thinking of, thanks
[15:03:06] <biberu> may just want to make it an object instead of an array
[15:03:28] <AllenJB> I would use a declared class rather than an array of options / anonymous object. This will allow you to more easily see what options are available, document them, and what the defaults are
[15:03:30] <[twisti]> is there a reason to prefer one over the other ?
[15:03:36] <[twisti]> i see
[15:04:38] <nucc1> the downside of using a class is afaik, that you can't use the convenient array syntax for filling the object up.
[15:05:59] <AllenJB> The array syntax isn't that convenient. A class will give you autocompletion, type hints and documentation
[15:06:38] <AllenJB> It also makes it much easier to find where options may be being used from if you want to change or deprecate / remove them.
[15:06:46] <nucc1> i mean, you don't need getters and setters for an array
[15:06:57] <biberu> and you can combine the constructor with factory methods for (variations of) common configurations, one of those could even take an array if you need that for some reason
[15:06:58] <nucc1> but |I don't disagree with you.
[15:07:07] <AllenJB> Don't need getters and setters for an object with public properties
[15:09:01] *** Quits: alkavan (~wdna@bzq-79-183-26-245.red.bezeqint.net) (Quit: WeeChat 3.2)
[15:13:21] <[twisti]> what about builder pattern ? is that a common thing in php ?
[15:15:37] <[twisti]> ah, google is leading me to suspect that the term 'builder pattern' is used differently in php than what im used to
[15:16:40] <olle> nucc1: you can use array to the DTO constructor to fill it up, best of both words (until you used named arguments)
[15:16:44] <olle> unless*
[15:17:06] <nucc1> olle i completely forgot that you can simply have a class with public properties and that is already much better than an array :)
[15:17:22] <nucc1> the baggage i carry :)
[15:17:53] <olle> nucc1: readonly public, if you can...
[15:17:59] <olle> PHP 8.1
[15:18:34] <olle> There was an article on this pattern.
[15:18:38] <olle> sticher.io?
[15:18:39] <nucc1> if you're just replacing a function parameter that takes an array with an object, i think readonly public might make it more inconvenient, as i was worried about, no?
[15:19:03] <nucc1> let me read up on this readonly public thing.
[15:19:12] <olle> This: https://stitcher.io/blog/evolution-of-a-php-object
[15:19:52] <nucc1> if you can have like a readonly function argument, that might be nice
[15:21:07] <olle> No, only for object properties
[15:21:24] <nucc1> yea, seen. it's not the solution for what was being discussed though, I think.
[15:21:53] <nucc1> array vs object with public properties : object wins for the reasons AllenJB cited
[15:22:08] <nucc1> that is, type hints, autocomplete etc.
[15:22:33] <biberu> nucc1: https://stitcher.io/blog/constructor-promotion-in-php-8 ?
[15:23:03] <biberu> ah, it's already mentioned in olles link too
[15:25:05] <nucc1> thanks for the links, useful things to learn.
[15:28:47] *** Joins: keypusher (keypusher@user/keypusher)
[15:38:48] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[15:39:30] <olle> DTO is the solution to everything. That and command object - all you need xD
[15:41:57] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:52:48] *** Quits: guidoc (~guido@151.47.51.53) (Read error: Connection reset by peer)
[15:53:08] *** Joins: guidoc (~guido@151.47.51.53)
[16:15:56] *** Joins: gefd_ (~Geoff@user/gefd)
[16:33:49] *** Joins: ordos (~ordos@user/ordos)
[16:41:52] *** Quits: gefd_ (~Geoff@user/gefd) (Ping timeout: 268 seconds)
[16:58:12] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:03:41] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[17:04:17] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[17:05:18] *** Quits: guidoc (~guido@151.47.51.53) (Ping timeout: 272 seconds)
[17:17:06] *** Joins: Akimb (~Akimb@86.100.13.100)
[17:21:39] *** Joins: pmercado (~pmercado@190.22.89.183)
[17:37:21] *** Joins: gastus (~marc@5.83.191.94)
[17:38:11] <gastus> https://dpaste.com/3QQTPUNHW this is what I want to do: mysqli LOCK TABLES and if it doesn't succeed within a some time cancel it. HOwever I get this out of sync error I don't understand/expect. THe mysql command line tool can cancel lock table with ctlr-c and the .c code is using kill query command.
[17:39:50] <__adrian> you're trying to use the same connection to do two things at once
[17:40:20] <__adrian> why lock tables? do you need a transaction, maybe?
[17:40:46] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 272 seconds)
[17:41:23] <__adrian> "out of sync" means you're doing two things, "A" and "B", but you tried to start doing "B" before "A" was finished.
[17:44:41] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 248 seconds)
[17:44:52] *** Joins: Akimb (~Akimb@86.100.13.100)
[17:47:14] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::7845) (Ping timeout: 256 seconds)
[17:47:29] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:54:19] <Naktibalda> gastus: you could set mysql lock_wait_timeout variable to 1: https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lock_wait_timeout
[18:06:36] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[18:14:42] *** Joins: impliednude (~impliednu@104.232.118.176)
[18:15:16] <impliednude> What's php's default system for handling oauth2 request
[18:15:36] <impliednude> does it have a oauth2 client?
[18:17:18] *** Joins: celphi (uid97751@user/celphi)
[18:18:50] <AllenJB> impliednude: No - you'd need to use a library. Search on https://packagist.org for Composer libraries.
[18:23:15] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:37:21] *** Quits: ham5 (iamfive@user/ham5) (Remote host closed the connection)
[18:38:29] <impliednude> that's a shame. I know they used to have a native method aka OAuth::fetch
[18:39:46] <__adrian> that was a pecl extension
[18:39:50] <__adrian> and it was version 1
[18:39:56] <impliednude> I know.
[18:40:51] <impliednude> I always thought though it was native. aka every version I ever used had it installed
[18:41:55] *** Joins: ham5 (iamfive@user/ham5)
[18:44:52] <de-facto> what does it mean when a file begins with <?  ..... and does not have any corresponding ending tag for that?
[18:45:11] <de-facto> i dont understand that syntax, i thought it would be <?php ... ?>
[18:45:13] <impliednude> php doesn't need an ending tag in that regard
[18:45:31] <impliednude> if you're doing a single inline function as long as you have the <?php its good
[18:45:38] <de-facto> but including that file prints out the source code in the browser
[18:45:41] *** Joins: Poboy (~Poboy@user/poboy)
[18:45:50] <impliednude> then your server is not setup properly
[18:46:23] <impliednude> or your file isn't correct. when doing pure php functions the closing isn't required
[18:46:36] <Poboy> Configuring Xdebug is like, impossible or something.
[18:46:36] <impliednude> https://stackoverflow.com/questions/4410704/why-would-one-omit-the-close-tag
[18:47:26] <de-facto> and <? is the same as <?php ?
[18:47:39] <AllenJB> Note that <? as opposed to <?php is a short open tag and can be disabled by ini setting (think it's disabled by default in recent PHP versions), This does not apply to <?= (short echo)
[18:48:54] <de-facto> hmm where do i enable that then?
[18:49:04] <TinoDidriksen> Don't enable that.
[18:49:11] <TinoDidriksen> Use <?php
[18:49:16] <de-facto> no i cant
[18:49:23] <TinoDidriksen> Why not?
[18:49:24] <de-facto> the source code comes from upstream
[18:49:27] <AllenJB> It's a php.ini setting
[18:49:36] <de-facto> i need to setup the server to not choke on it
[18:49:47] <AllenJB> Check the output of phpinfo() (top section) to see where your ini files are
[18:49:50] <TinoDidriksen> So change the code and file a bug upstream. It's a pretty trivial search/replace.
[18:49:54] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[18:50:21] <AllenJB> (Note that commandline PHP may use different ini files to web requests)
[18:50:52] <de-facto> short_open_tag=On
[18:51:04] <de-facto> how do i set that with nginx without modifying php.ini?
[18:51:37] <Poboy> So if I run php --ini, and I see Loaded Configuration File:         /usr/local/etc/php/7.4/php.ini, then this php.ini file is the one I'm supposed to add zend_extension="xdebug/path/here" ?
[18:52:38] <Poboy> Because I'm getting Warning: Failed loading Zend extension 'xdebug/path/here.so'
[18:52:39] <AllenJB> Poboy: If you're manually compiling PHP, yes. If you're installing PHP & the extension via package management, the ini files will usually be set up for you.
[18:52:54] <AllenJB> On some distros you have to run an additional command to enable installed extensions
[18:53:07] <AllenJB> (php-en-mod I think it's usually called)
[18:53:36] <de-facto> ls
[18:53:38] <Poboy> I've been switching php versions lately, trying to upgrade this project from 7.1  and I'm following https://www.jetbrains.com/help/phpstorm/2020.1/configuring-xdebug.html#updatingPhpIni, to no avail
[18:58:54] <Naktibalda> Poboy: have you tried to use correct path?
[18:59:15] <Byteflux> On Debian/Ubuntu, whether using official or Ondrej's PPA packages, there's phpenmod and phpdismod. By default xdebug would be enabled if you installed it like I did with `apt install php74-xdebug` which creates a file in /etc/php/7.4/mods-available/xdebug.ini that gets automatically loaded containing the zend_debug line.
[18:59:39] <Byteflux> zend_extension line, rather.
[18:59:54] <Poboy> Naktibalda no clue.
[19:02:11] <Byteflux> Regardless of installation method/source, `php -i` or phpinfo() should show extension_dir, where it expects xdebug.so to be located.
[19:03:06] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:04:00] <Poboy> Byteflux oh interesting!  extension_dir => /usr/local/lib/php/pecl/20190902 => /usr/local/lib/php/pecl/20190902
[19:06:33] <Naktibalda> all you need is zend_extension=xdebug.so
[19:06:45] *** Joins: molt (~molt@79.140.150.21)
[19:07:08] <__adrian> de-facto: you can't do it without modifying your php.ini.
[19:07:26] <Byteflux> Assuming you've installed it, and properly, it would've ended up that extension_dir yeah so all you *should* need is zend_extension=xdebug.so
[19:07:33] <__adrian> de-facto: BUT note that "fix the php tag" is the much, much better solution. open a PR with the upstream repo.
[19:07:40] <Byteflux> How you install xdebug will depend on how you installed your PHP 7.4.
[19:07:47] <Poboy> ok so I somehow installed it wrong or I'm looking in the wrong location
[19:08:02] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 268 seconds)
[19:08:26] <__adrian> using short tags is bad - it causes portability problems like the one you have right now.
[19:09:00] <Poboy> php@7.4 via homebrew,  xdebug installed via `pecl install xdebug`
[19:09:30] <Byteflux> If you have multiple PHP installations, `pecl` might not be the one you think it is.
[19:09:35] <Byteflux> Maybe
[19:09:37] <Poboy> lol, now I see this  "Warning: You should ignore any prompts to add "extension=xdebug.so" to php.ini — this will cause problems."  https://xdebug.org/docs/install
[19:10:27] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:11:52] <Byteflux> What does `pecl version` say?
[19:12:09] <Byteflux> It may be using the PHP 7.1 bin if you still have it
[19:12:43] *** Joins: Pixi (~Pixi@user/pixi)
[19:12:47] <Poboy> other than Warning: Failed loading Zend extension, PEAR Version: 1.10.12, PHP Version: 7.4.22, Zend Engine Version: 3.4.0
[19:14:53] <Byteflux> Going back to that previous warning, make sure the extension=xdebug.so line didn't get added to your php.ini and did you ever check to see that xdebug.so was in the location it's expected to be in?
[19:19:47] *** Joins: cspray (~cspray@75.76.18.60)
[19:27:44] *** Quits: bin4ry (~bin4ry@128.199.135.148) (Quit: Ping timeout (120 seconds))
[19:30:15] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[19:40:43] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 268 seconds)
[19:52:07] *** Joins: lall- (~alek@2001:44c8:4188:e9f1:d105:c07a:f02a:e103)
[20:06:10] *** Joins: genom (~g@37.214.25.247)
[20:08:58] *** Quits: olle (~olle@p578524f9.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[20:17:13] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 248 seconds)
[20:22:20] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:22:54] *** Quits: gastus (~marc@5.83.191.94) (Ping timeout: 272 seconds)
[20:27:00] <relipse> is there a ui/ux channel?
[20:29:13] <no_gravity> relipse: There are both
[20:29:26] <relipse> where?
[20:29:31] <no_gravity> relipse: #ui #ux
[20:29:55] <no_gravity> relipse: There also is #design
[20:41:05] <no_gravity> Ok, #design was not the best advice.
[20:50:32] <AnrDaemon> https://3v4l.org/DYcH7
[20:52:35] <AllenJB> AnrDaemon: Explicitly documented: https://www.php.net/manual/en/language.exceptions.php#language.exceptions.finally
[20:52:41] <AnrDaemon> I know.
[20:53:02] <AnrDaemon> Sad it doesn't work the same with die();
[21:01:17] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[21:03:31] *** Joins: keypusher (keypusher@user/keypusher)
[21:04:11] <__adrian> cal evans and I were complaining about that. that's why it's mentioned in the manual now   >__<
[21:04:33] <__adrian> imo still not the desirable result
[21:04:42] <__adrian> but, ya know
[21:05:57] <impliednude> lol
[21:07:15] <impliednude> anyone have any resources for oauth 2 on php
[21:07:25] <impliednude> advice, etc.. aka how to change from curl to that
[21:07:34] <impliednude> I dislike curl
[21:08:16] <impliednude> I actually dislike postman only giving curl examples
[21:08:25] <impliednude> that's the better reason
[21:11:20] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[21:22:44] <biberu> __adrian: am i missing something about that try/finally example? are you not expecting it to throw?
[21:22:53] <__adrian> advice: curl is widely (nearly universally) compatible and understandable; learn it
[21:24:01] <__adrian> biberu: well, i know what it does. the part that's not great imo is return in finally takes over from return in try
[21:24:20] <__adrian> return would be better off not allowed in finally{}, imo.
[21:24:33] <__adrian> but it is how it is.
[21:25:04] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[21:25:09] <biberu> yeah, that's odd
[21:25:38] <biberu> but i don't see the issue with the example on 3v4l
[21:26:18] <__adrian> no, it's not show there. the docs made me think of it
[21:26:21] <__adrian> *n
[21:26:23] <biberu> ah
[21:26:53] <impliednude> may I see the 3v4l example ^_^?
[21:27:06] <biberu> 18:20 <AnrDaemon> https://3v4l.org/DYcH7
[21:30:18] <impliednude> ahh yeah
[21:30:35] <impliednude> __adrian> weird isnt it?
[21:31:05] <nucc1> __adrian I always naturally expected that if i'm using finally, then I cannot have return in my try.
[21:31:23] <nucc1> I didn't even know about this interaction until now.
[21:32:40] <nucc1> I just make sure that the data I expect to return is in scope in the finally block.
[21:34:20] <__adrian> which way is best might be debatable; allowing both just allows for confusion/mistakes imo
[21:35:00] <biberu> finally should be used for cleaning up resources even in case of failure, returns should be handled by try or catch blocks
[21:35:25] <nucc1> if it is always executed, it makes sense to be the place where you actually produce output
[21:36:19] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:36:27] *** Quits: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net) (Quit: Leaving)
[21:37:15] <nucc1> the way I typically organise mine is,  try and catch blocks do things and set variables. finally block sends the response, which if the try succeeded, would be a positive response. If any of the catch blocks executed, then the variables would be set such that the output produced by finally indicates this error condition to the client
[21:38:53] <biberu> that sounds like extra, mutable, probably error prone, code, just to ensure that things are in scope before returning
[21:38:58] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[21:38:58] <__adrian> heh. well i'll just generally disagree there
[21:39:34] <__adrian> but not really worth debating
[21:39:44] <biberu> but it's the internet
[21:39:53] <biberu> and someone is wrong ><
[21:40:00] <__adrian> there's lots of internet
[21:40:08] <biberu> i like this part
[21:40:13] *** Joins: Rockwood (~Rocky@user/rocky)
[21:41:16] <nucc1> https://paste.ubuntu.com/p/2BbmgXX87g/
[21:41:59] <biberu> you don't even need a finally there
[21:42:10] <biberu> it'd be less code and the same result if you just left it out
[21:42:46] <nucc1> if I did that then i'd have to have sendOutput() in every block.
[21:42:46] <biberu> also send output isn't returning, it appears to be some sort of side effect
[21:43:16] <nucc1> yea, there's no explicit return to be fair
[21:43:47] <__adrian> try {} should be the success path
[21:44:01] <__adrian> finally {} shouldn't exist unless there's cleanup
[21:44:04] <biberu> no, you could just return to another function that does the send output if you can always handle a failure like that
[21:44:37] <__adrian> s/cleanup/a "regardless" path/
[21:44:43] <nucc1> so this would be an API endpoint, and sendOutput is sending a HTTP response back to the client.
[21:45:06] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:45:39] <nucc1> the try is indeed the successful case, and if doSomething() ran successfully, $response would be an object that encapsulates a HTTP 200 response. Otherwise, the different error conditions will set the relevant response code and body, then finally transmits it
[21:45:41] <__adrian> so every handler has to take care of its own error responses:  .__·
[21:46:04] <Rockwood_> __adrian, hi how are you sir?
[21:46:13] <nucc1> yes, the catch blocks could be NotAuthenticatedException (for example) and there the response code needs to be a 401
[21:46:17] <biberu> nucc1: https://3v4l.org/HGV6E
[21:46:18] <__adrian> you're making the whole try..catch into an if..then
[21:46:24] <Rockwood_> biberu, o/
[21:46:31] <biberu> evening Rockwood o/
[21:46:33] <__adrian> defeats the point of using exceptions
[21:46:39] <__adrian> of *throwing
[21:46:56] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[21:48:06] <nucc1> just to be clear, i'm arguing for the sake of learning here. I think that it simplifies doSomething()... because it can throw an appropriate exception depending on the conditions it's encountered
[21:48:48] <biberu> sure, we're just talking :)
[21:49:01] <biberu> talking is good
[21:49:05] <nucc1> and then the over-arching try-catch helps you generate a n appropriate response type
[21:50:47] <__adrian> "nucc1> it simplifies doSomething()... because it can throw an appropriate exception depending on the conditions it's encountered"
[21:50:54] <__adrian> sure, but it always could.
[21:51:07] <__adrian> (and should)
[21:51:48] <nucc1> biberu I understand your example, but I think it sacrifices simplicity
[21:52:50] <__adrian> how?
[21:52:57] <__adrian> because it's not all happening in the same place?
[21:53:37] <nucc1> __adrian so do-something doesn't have to worry about catching exceptions mostly in my case, it can allow them to bubble up
[21:54:31] <__adrian> btw going with this being an api controller,  try { sendResponse(Something()); } catch (Whatever $e) { sendErrorResponse($e); }
[21:55:00] <nucc1> yea, I can agree with that
[21:55:02] <__adrian> i think biberu's example is wrapping up your entire process in a()
[21:55:20] <__adrian> think of it being "zoomed out"
[21:56:15] <nucc1> yea.
[21:56:47] <nucc1> I can see that the finally is entirely optional
[21:57:11] <nucc1> for some reason, seeing it as "it's always executed" made it seem like a logical place to have sendResponse().
[21:57:16] <biberu> yeah, zoomed out seems like a good way of describing it
[21:57:46] <Rockwood_> __adrian, whats going on these days?
[21:57:52] <biberu> and in practice the return type would probably be something more complicated than a string, the point is just to demonstrate how you can wrap it like that
[21:58:16] <nucc1> yes, the return type is a class that encapsulates what a http response would be
[21:58:18] <nucc1> headers and all.
[21:58:40] <biberu> would probably abstract that further, but it depends on where it's happening
[21:59:33] <nucc1> can you clarify what you mean by "abstract that further"?
[22:00:37] <nucc1> are you referring to the response type, or the whole structure we've been discussing?
[22:01:29] <biberu> nucc1: if you're calling a remote api i'd try to hide how the communication happens from most of my application, it should know that it's using http, ftp, or carrier pigeons
[22:02:12] <nucc1> this is the API endpoint... it's the thing that is at the other end of a client request.
[22:02:29] <nucc1> so it needs to send back a HTTP response because that's the only protocol that is accepted.
[22:02:45] <biberu> ah, sorry, it's the response you're returning to a client? then yeah, sure
[22:02:51] <nucc1> yes.
[22:04:22] <__adrian> fft: transport (how you deliver a response) is not the same as the response itself
[22:05:54] *** Quits: impliednude (~impliednu@104.232.118.176) ()
[22:07:05] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[22:08:55] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[22:13:21] *** Quits: autopsy (~autopsy@2600:8800:ff0d:400:802e:52a3:5fa9:b1e2) (Remote host closed the connection)
[22:14:28] <biberu> it should *not* know above, ofc
[22:15:56] <biberu> and yes, in a typical api i'd get an either<error, value> from my domain and convert that to the api's types only at the very edge of the application
[22:18:22] <biberu> the important part being that those errors/values also know nothing of the api
[22:32:00] *** Quits: cspray (~cspray@75.76.18.60) (Read error: Connection reset by peer)
[22:39:59] *** Quits: nucc1 (~nucc1@user/nucc1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:53] *** Joins: wovixo (~wovixo@128.104.205.49)
[22:52:12] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[23:01:15] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:10:45] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:28:15] *** Quits: dimbag (~dimbag@pppoe246h31.ppp.kmv.ru) (Read error: Connection reset by peer)
[23:34:12] *** Joins: wilk (~wilk@user/wilk)
[23:36:31] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
