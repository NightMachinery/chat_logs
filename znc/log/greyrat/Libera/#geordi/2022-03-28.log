[02:43:09] *** Joins: badone (~badone@209.132.189.152)
[07:14:14] *** Joins: xiongxin (~Thunderbi@2409:8954:3814:5943:4c51:c061:a965:2878)
[07:18:36] *** Quits: xiongxin (~Thunderbi@2409:8954:3814:5943:4c51:c061:a965:2878) (Ping timeout: 240 seconds)
[08:59:14] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[09:05:49] *** Quits: TinoDidriksen (~TinoDidri@tinodidriksen.com) (*.net *.split)
[09:05:50] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (*.net *.split)
[09:06:04] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[09:45:40] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[10:53:58] *** Joins: xiongxin (~Thunderbi@117.136.33.130)
[11:18:29] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[12:50:54] <TinoDidriksen> geordi --version
[12:50:54] <geordi> GCC 12.0.1 20220327 (experimental)
[13:01:18] *** Quits: Cyp (~cyp@213.237.85.100) (Read error: Connection reset by peer)
[13:03:03] *** Joins: Cyp (~cyp@213.237.84.236)
[13:07:43] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:36fc:f177:e967:2de3:80eb)
[13:10:43] *** Quits: xiongxin (~Thunderbi@117.136.33.130) (Ping timeout: 246 seconds)
[13:11:23] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:155:24cb:e9df:d924:87eb)
[13:12:13] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:36fc:f177:e967:2de3:80eb) (Ping timeout: 250 seconds)
[13:20:36] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:155:24cb:e9df:d924:87eb) (Ping timeout: 240 seconds)
[13:44:59] *** Joins: xiongxin (~Thunderbi@117.136.40.172)
[14:28:12] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:21e7:3c97:3b7b:5477:b92)
[14:31:51] *** Quits: xiongxin (~Thunderbi@117.136.40.172) (Ping timeout: 260 seconds)
[14:34:59] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:21e7:3c97:3b7b:5477:b92) (Ping timeout: 250 seconds)
[14:58:59] *** Joins: xiongxin (~Thunderbi@117.136.40.176)
[15:08:39] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:238c:7f88:ea0:54ea:d5a)
[15:12:03] *** Quits: xiongxin (~Thunderbi@117.136.40.176) (Ping timeout: 250 seconds)
[15:12:03] *** xiongxin1 is now known as xiongxin
[15:31:33] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:238c:7f88:ea0:54ea:d5a) (Ping timeout: 260 seconds)
[15:48:21] *** Joins: xiongxin (~Thunderbi@117.136.33.131)
[16:11:18] *** Quits: xiongxin (~Thunderbi@117.136.33.131) (Read error: Connection reset by peer)
[16:27:48] *** Joins: Guest94 (~Guest94@2a02:fe0:c140:6061:948a:8e3d:dbc9:7591)
[16:30:40] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:133b:d7a1:eab5:64b4:5441)
[16:57:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:133b:d7a1:eab5:64b4:5441) (Ping timeout: 256 seconds)
[18:06:02] *** Joins: xiongxin (~Thunderbi@117.136.40.175)
[18:15:53] *** Joins: xiongxin1 (~Thunderbi@117.136.39.222)
[18:19:11] *** Quits: xiongxin (~Thunderbi@117.136.40.175) (Ping timeout: 252 seconds)
[18:19:11] *** xiongxin1 is now known as xiongxin
[18:47:46] *** Quits: xiongxin (~Thunderbi@117.136.39.222) (Read error: Connection reset by peer)
[18:57:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:02:31] *** Quits: Guest94 (~Guest94@2a02:fe0:c140:6061:948a:8e3d:dbc9:7591) (Quit: Client closed)
[19:22:04] <CarloWood> { auto v = gen(0); SHOW(v); } std::vector<int> gen(int depth) { return { depth, depth }; }
[19:22:05] <geordi> v = {0, 0}
[19:23:09] <CarloWood> { vector<int> v; gen(v); SHOW(v); } std::vector<int> moves(int depth) { return { depth, depth }; } void gen(std::vector<int>& v) { v = moves(0); }
[19:23:10] <geordi> v = {0, 0}
[19:25:21] <CarloWood> { vector<int> v; int d = 0; gen(v); SHOW(v); } std::vector<int> moves(int depth) { return { depth, depth }; } void gen(std::vector<int>& v, int& d) { if (d == 4) return {}; ++d; auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); --d; }
[19:25:21] <geordi> error: return-statement with a value, in function returning 'void'
[19:26:18] <CarloWood> { vector<int> v; int d = 0; gen(v); SHOW(v); } std::vector<int> moves(int depth) { if (depth == 4) return {}; return { depth, depth }; } void gen(std::vector<int>& v, int& d) { ++d; auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); --d; }
[19:26:18] <geordi> error: too few arguments to function 'void gen(vector<int>&, int&)'
[19:26:27] <CarloWood> { vector<int> v; int d = 0; gen(v, d); SHOW(v); } std::vector<int> moves(int depth) { if (depth == 4) return {}; return { depth, depth }; } void gen(std::vector<int>& v, int& d) { ++d; auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); --d; }
[19:26:28] <geordi> v = {0, 0}
[19:27:50] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } std::vector<int> moves(int depth) { if (depth == 4) return {}; return { depth, depth }; } void gen(std::vector<int>& v, int d) { ++d; auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); for (auto i : v2) { gen(v, d); } --d; }
[19:27:51] <geordi> Undefined behavior detected.
[19:29:56] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } std::vector<int> moves(int d) { if (d == 2) return {}; return { d, d }; } void gen(std::vector<int>& v, int d) { auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:29:57] <geordi> Same output.
[19:32:21] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } vector<int> moves(int d) { if (d >= 2) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:32:23] <geordi> Still same output.
[19:34:06] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } vector<int> moves(int d) { if (d >= 2) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(d); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:34:07] <geordi> v = {0, 0, 1, 1, 1, 1}
[19:34:19] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } vector<int> moves(int d) { if (d >= 4) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(d); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:34:20] <geordi> v = {0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 1, 1, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3}
[19:34:52] <CarloWood> { vector<int> v; gen(v, 0); v.sort(); SHOW(v); } vector<int> moves(int d) { if (d >= 4) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(d); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:34:53] <geordi> error: 'class vector<int>' has no member named 'sort'
[19:35:08] <CarloWood> { vector<int> v; gen(v, 0); sort(v.begin(), v.end()); SHOW(v); } vector<int> moves(int d) { if (d >= 4) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(d); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:35:10] <geordi> v = {0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}
[20:23:34] *** Joins: xiongxin (~Thunderbi@117.136.40.183)
[20:25:04] *** Quits: xiongxin (~Thunderbi@117.136.40.183) (Read error: Connection reset by peer)
[20:25:43] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:1922:b0bb:f21:d408:d79e)
[20:44:31] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:1922:b0bb:f21:d408:d79e) (Ping timeout: 245 seconds)
