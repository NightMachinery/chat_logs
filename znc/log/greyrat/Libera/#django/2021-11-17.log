[00:00:27] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:04:01] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 268 seconds)
[00:05:18] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[00:05:53] *** Quits: ednhmn (~ednhmn@200.173.176.121) (Remote host closed the connection)
[00:06:28] *** Joins: ednhmn (~ednhmn@200.173.176.121)
[00:09:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:09:42] *** ChanServ sets mode: +v EvilDMP
[00:11:08] *** Joins: sisel4 (lysy@user/sisel4)
[00:11:11] *** Quits: ednhmn (~ednhmn@200.173.176.121) (Ping timeout: 264 seconds)
[00:13:52] *** Joins: djapo (~archangel@user/djapo)
[00:18:59] *** Joins: mimmy (~mimmy@146.70.75.156)
[00:23:54] <LordKalma> I'll add that there's the reverse use case. I'm a hobbyist that doesn't know SQL, nor cares. I do know python though. And django models for me are greeaaaat
[00:24:42] *** Joins: ednhmn (~ednhmn@200.173.176.121)
[00:25:42] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:29:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[00:29:38] <dminuoso> nbjoerg: Virtually all databases have bindings that provide formal methods for parametrized queries, and most simple bindings usually provide access to th ese.
[00:30:12] <dminuoso> Though I dont know about the state in Python really as I mostly dont write in Python.
[00:32:59] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[00:33:45] <dminuoso> The main grief people usually have is that you dont have guaranteed coherence between a) your tables, b) your queries and c) the parsing logic back into your language. ORMs at best take some burden off in terms of migration support, but in my experience you sometimes spend an absurd amount of time in working around various quirks. Writing simple DDL + script migrations gets the job done as well,
[00:33:48] <dminuoso> with the added benefit of full introspectability
[00:34:31] <dminuoso> That being said, I do get how people can be comfortable with them and they do have their reasons. I just do not relate to those reasons
[00:35:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:38:42] *** Quits: explore (uid233125@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:43:10] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[00:43:25] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[00:48:25] <nbjoerg> dminuoso: I'm not talking about parametrized queries
[00:48:34] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:48:43] <nbjoerg> dminuoso: consider a simple search form with three conditions
[00:48:58] <nbjoerg> dminuoso: parametrized queries don't help you to build the search conditions
[00:54:05] *** Joins: luigibu (~luigibu@80.30.201.209)
[00:54:45] *** Joins: Atque (~Atque@user/atque)
[00:56:31] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[00:57:38] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[01:16:09] *** Quits: ednhmn (~ednhmn@200.173.176.121) (Remote host closed the connection)
[01:16:24] *** Joins: ednhmn (~ednhmn@200.173.176.121)
[01:19:42] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[01:21:13] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Client Quit)
[01:23:43] <dre> mornin' all
[01:25:43] *** Quits: ednhmn (~ednhmn@200.173.176.121) (Remote host closed the connection)
[01:28:23] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Ping timeout (120 seconds))
[01:28:59] <dre> if crispy-forms and "bootstrap4-tags" aren't good ways for styling the frontend, how is it best done? though giving attributes to widgets?
[01:30:22] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 260 seconds)
[01:30:54] *** Quits: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr) (Ping timeout: 256 seconds)
[01:33:19] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[01:33:54] *** Joins: aquijoule_ (~richbridg@089144202142.atnat0011.highway.a1.net)
[01:34:08] *** Joins: luigibu (~luigibu@80.30.201.209)
[01:36:34] *** Quits: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net) (Ping timeout: 256 seconds)
[01:41:07] *** Quits: mimmy (~mimmy@146.70.75.156) (Ping timeout: 250 seconds)
[01:43:22] *** Joins: ednhmn (~ednhmn@200.173.176.121)
[01:46:35] *** Quits: nicode (~nic@2607:f2c0:9598:9800:8797:a1c4:b386:57ae) (Ping timeout: 264 seconds)
[01:48:28] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:49:27] *** Joins: koo5_ (~quassel@51.140.155.227)
[01:50:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[01:51:55] *** Joins: fikran (~fikran@user/fikran)
[01:51:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[02:06:06] *** Joins: mimmy (~mimmy@146.70.75.156)
[02:13:04] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[02:13:52] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[02:21:58] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:22:38] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 260 seconds)
[02:24:35] *** Joins: luischi (~luigi@80.30.201.209)
[02:25:26] *** Joins: dor (~erg@78.11.12.207)
[02:25:45] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[02:25:49] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:25:56] *** Joins: luigibu (~luigibu@80.30.201.209)
[02:31:57] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[02:33:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:34:29] *** Joins: dor (~erg@78.11.12.207)
[02:40:23] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:46:46] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[02:48:59] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 264 seconds)
[02:49:05] <mimmy> hey any tips on how to create a superuser for a django app that's been deployed to AWS elastic beanstalk?
[02:49:30] <mimmy> the official doc says you can create a superuser locally and then deploy to production, but i don't get how that's possible (and it doesn't work when I try it)
[02:49:34] <mimmy> docs here: https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html#python-django-update-app
[02:50:17] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[02:51:20] <mimmy> my understanding is that i either have to 1) ssh into server and create a superuser there or 2) include a script that does it automatically when the app is deployed.
[02:51:47] <mimmy> but this is my first time doing it so this is all new to me
[02:52:31] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[02:52:49] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[02:53:07] <dang`r`us> mimmy, from that page: "This tutorial uses SQLite, which is a database engine included in Python. The database is deployed with your project files. "
[02:53:25] <dang`r`us> so it will in fact deploy the superuser
[02:53:49] <dang`r`us> (it goes on to say "For production environments, we recommend that you use Amazon Relational Database Service (Amazon RDS), ...")
[02:54:28] *** Joins: luigibu (~luigibu@80.30.201.209)
[02:55:05] <mimmy> dang`r`us, ahh okay that make sense
[02:55:50] <mimmy> my app is using a postgres db (on amazon RDS)
[02:57:56] <mimmy> so i should add that the real problem i'm trying to solve is accessing the admin panel in production so that I can more easily interact with the database
[02:58:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:59:53] <dang`r`us> mimmy, https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-ssh.html maybe?
[03:00:15] <dang`r`us> ssh in and then do createsuperuser
[03:00:16] *** Joins: fikran (~fikran@user/fikran)
[03:03:12] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[03:05:06] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Read error: Connection reset by peer)
[03:08:15] <dre> ^
[03:08:45] *** Joins: luigibu (~luigibu@80.30.201.209)
[03:09:38] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[03:09:57] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[03:12:45] <mimmy> thanks i'm trying it now. running into an issue when i run createsuperuser because the instance can't find the SECRET_KEY.
[03:16:18] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[03:16:33] <Santzes> Hey, I deleted my tables from sql, I've run manage.py flush, deleted myapp/migrations, if I run makemigrations I get "No changes detected", makemigrations myapp it makes "Create model" -migrations, but running migrate or migrate myapp just says "No migrations to apply."
[03:16:38] <Santzes> and the tables don't appear
[03:16:55] <Santzes> how can I get back to starting point or force run the migrations or something
[03:17:46] *** Joins: luigibu (~luigibu@80.30.201.209)
[03:17:51] *** Quits: ednhmn (~ednhmn@200.173.176.121) (Remote host closed the connection)
[03:19:39] <Santzes> and "manage.py migrate myapp zero" throws exception because of the missing tables
[03:19:51] *** Joins: ednhmn (~ednhmn@200.173.176.121)
[03:23:45] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[03:23:49] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[03:24:14] *** Quits: ednhmn (~ednhmn@200.173.176.121) (Ping timeout: 256 seconds)
[03:26:15] *** Joins: luigibu (~luigibu@80.30.201.209)
[03:27:28] *** Joins: addi (~addi@node-1w7jr9ss4mmea0h4xfq3odqf9.ipv6.telus.net)
[03:29:09] <Santzes> Getting the migrations with sqlmigrate and piping to postgresql worked. Though my Binary type primary key still doesn't seem to work well in the admin :/
[03:30:52] *** Joins: rje (~rje@65.141.156.170)
[03:31:11] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 250 seconds)
[03:32:41] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[03:33:04] *** Quits: rje_ (~rje@65.141.156.170) (Ping timeout: 268 seconds)
[03:34:00] *** Joins: Kvothe (~weechat@user/elodin)
[03:35:49] <addi> Has anyone else seen issues with postgresql via docker on mac (docker4mac, obviously) displaying errors like these during testsuite runs (pytest runner here)? "psycopg2.OperationalError: FATAL:  could not open file "base/315992/1259". Curious where i should be looking.
[03:37:50] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:45:27] *** Joins: yanchai (~yanchai@222.127.97.162)
[03:45:28] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[03:46:42] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:51:03] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[04:00:24] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[04:00:52] <bancroft> how do I do text searches and search suggestions in django? any recommendations?
[04:08:32] *** Joins: ednhmn (~ednhmn@179-241-195-40.3g.claro.net.br)
[04:14:40] *** Joins: explore (uid233125@hampstead.irccloud.com)
[04:14:54] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (WeeChat 3.2)
[04:17:06] *** Quits: ednhmn (~ednhmn@179-241-195-40.3g.claro.net.br) (Read error: Connection reset by peer)
[04:17:32] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[04:20:03] *** Joins: ednhmn (~ednhmn@179-241-195-40.3g.claro.net.br)
[04:21:57] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[04:24:52] *** Quits: ednhmn (~ednhmn@179-241-195-40.3g.claro.net.br) (Ping timeout: 268 seconds)
[04:24:53] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:25:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:33:42] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 260 seconds)
[04:35:59] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:55:49] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 265 seconds)
[05:01:23] *** Joins: monokrome (~monokrome@50.215.11.140)
[05:01:25] <monokrome> yo
[05:02:33] <monokrome> does anyone know if there's a way to move models from one app to another without creating an entirely separate model? Essentially, I want to just rename the table, change the new app's initial migration to depend on the other app's last migration, then migrations from then on would be in the new app. Is this possible?
[05:02:57] <monokrome> The whole "create new model, copy all the data, delete old model" thing is not ideal here
[05:05:48] <monokrome> renaming the table is optional as well since we can manually specifc table name - but the real heart of the question is how to transfer future migrations to the new app
[05:06:01] <monokrome> specify*
[05:07:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[05:09:37] *** Joins: fikran (~fikran@user/fikran)
[05:10:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 268 seconds)
[05:10:53] *** Joins: mimmy_ (~mimmy@72.142.88.18)
[05:13:36] *** Quits: mimmy (~mimmy@146.70.75.156) (Ping timeout: 256 seconds)
[05:15:46] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 260 seconds)
[05:28:06] <moldy> monokrome: SeparateDatabaseAndState
[05:29:06] <moldy> monokrome: make sure you have 3 backups ;) https://fleschenberg.net/moving-a-django-model-to-another-app/
[05:38:07] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[05:42:42] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 265 seconds)
[05:47:56] <monokrome> thanks moldy :)
[05:48:44] <monokrome> that looks perfect
[05:50:07] *** Joins: rje (~rje@50.35.241.164)
[05:51:13] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:56:31] *** Joins: gkarthik (~gkarthik@2402:3a80:191b:88c5::2)
[05:59:52] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[06:02:25] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 250 seconds)
[06:17:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:18:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:22:05] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[06:23:05] *** Quits: explore (uid233125@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:31:26] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[06:31:41] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[06:35:40] *** Joins: jabrahams (~jabrahams@user/josephabrahams)
[06:36:16] *** Quits: jabrahams (~jabrahams@user/josephabrahams) (Client Quit)
[06:51:49] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 265 seconds)
[06:57:10] <esaym153> what is the 'right' way to handle nested data structures (coming in via rest)? I assume I can't just pass the entire structure to get_or_create() and it will automagically figure out the relations (and create if necessary)?
[06:57:40] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[06:58:55] *** Joins: aquijoule__ (~richbridg@213-225-12-152.nat.highway.a1.net)
[07:01:26] *** Quits: mimmy_ (~mimmy@72.142.88.18) (Quit: WeeChat 3.3)
[07:01:29] *** Quits: aquijoule_ (~richbridg@089144202142.atnat0011.highway.a1.net) (Ping timeout: 265 seconds)
[07:10:38] <monokrome> esaym153: what do you mean by "coming in from rest" here?
[07:14:01] <esaym153> monokrome: good point. Its a route that get ajax posted to it (but not using django rest framework). Think of it like: order = { person: {name: 'test', company: {name: 'test company'}}, price: 1, items:[...]}, etc
[07:14:24] <esaym153> so an 'order' relates to a person, which relates to a company.
[07:14:48] <monokrome> ok
[07:15:13] <monokrome> So, you're PUTing to it and you want to know how to PUT a nested structure? Are you using DRF/
[07:15:15] <monokrome> ?
[07:15:59] <monokrome> If so, have you seen this section? https://www.django-rest-framework.org/api-guide/relations/#writable-nested-serializers
[07:16:08] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:16:39] <monokrome> I think there's a more specific part of their docs that talks about nested relations as well
[07:16:43] <esaym153> monokrome: not using DRF
[07:16:57] <monokrome> ooh ok
[07:17:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[07:17:18] <esaym153> manually creating via Order.objects.create(...)
[07:17:45] <esaym153> just annoyed have to make sure all other relations exists first, seems like a common problem
[07:18:58] *** Joins: fikran (~fikran@user/fikran)
[07:20:06] <monokrome> you probably want to include an ID w/ all the resources, otherwise it is ambiguous what is going on I think?
[07:20:28] <monokrome> (or a URL to the resource)
[07:21:30] <esaym153> monokrome: there might be an ID if it is existing...
[07:22:39] <monokrome> You're creating all these resources?
[07:23:59] <esaym153> monokrome: well, the order doesn't exist, but the person and or company might
[07:26:46] *** Quits: Guddu (~Guddu@186.106.137.158) (Quit: Leaving)
[07:27:03] <monokrome> esaym153: so that's why I said it's ambiguous :)
[07:31:24] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[07:47:10] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 256 seconds)
[07:50:21] *** Joins: explore (uid233125@hampstead.irccloud.com)
[07:58:18] *** Joins: audiobirb (~audio@user/audio)
[08:01:17] *** Joins: yanchai (~yanchai@222.127.97.162)
[08:38:38] *** Quits: jgee (~jgee@186.80.49.20) (Quit: The Lounge - https://thelounge.chat)
[08:39:51] *** Joins: jgee (~jgee@186.80.49.20)
[08:43:46] *** Quits: jgee (~jgee@186.80.49.20) (Client Quit)
[08:45:23] *** Joins: jgee (~jgee@186.80.49.20)
[09:07:06] *** Joins: rje_ (~rje@50.35.241.164)
[09:09:09] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 268 seconds)
[09:18:40] *** Joins: zBeeble (~zBeeble@107-179-205-94.cpe.teksavvy.com)
[09:19:18] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (Read error: Connection reset by peer)
[09:19:18] *** Quits: zBeeble (~zBeeble@107-179-205-94.cpe.teksavvy.com) (Read error: Connection reset by peer)
[09:21:00] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[09:24:59] *** Joins: zBeeble42 (~zBeeble@107-179-205-94.cpe.teksavvy.com)
[09:25:13] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Read error: Connection reset by peer)
[09:25:13] *** Quits: zBeeble42 (~zBeeble@107-179-205-94.cpe.teksavvy.com) (Read error: Connection reset by peer)
[09:26:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:26:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[09:26:28] *** Joins: zBeeble42 (~zBeeble@2001:1928:1::35)
[09:28:19] *** Joins: fikran (~fikran@user/fikran)
[09:29:57] *** Joins: djapo (~archangel@user/djapo)
[09:30:23] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[09:39:42] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[09:40:01] *** Joins: dor (~erg@78.11.12.207)
[09:46:27] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 250 seconds)
[09:51:18] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:51:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:54:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[09:54:20] *** ChanServ sets mode: +v EvilDMP
[09:57:07] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[09:57:07] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[10:09:48] *** Joins: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr)
[10:25:04] *** Joins: kuter (~kuter@public-gprs524281.centertel.pl)
[10:31:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:36:03] *** Joins: mrwick (~mrwick@user/mrwick)
[10:38:53] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 250 seconds)
[10:39:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[10:45:14] *** Joins: yanchai (~yanchai@222.127.97.162)
[10:45:34] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:07:52] *** Joins: luischi (~luigi@80.30.201.209)
[11:09:21] *** Quits: jgee (~jgee@186.80.49.20) (Quit: The Lounge - https://thelounge.chat)
[11:20:23] *** Joins: pycode (~pycode@2001:b07:5d28:551:8c70:d21c:37a8:6eb9)
[11:24:21] *** Joins: djapo (~archangel@user/djapo)
[11:31:01] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[11:32:22] *** Quits: kuter (~kuter@public-gprs524281.centertel.pl) (Quit: leaving)
[11:32:57] *** Joins: kuter (~kuter@public-gprs524281.centertel.pl)
[11:35:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[11:37:40] *** Joins: fikran (~fikran@user/fikran)
[11:38:26] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 265 seconds)
[12:02:05] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[12:15:54] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[12:30:13] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Quit: You have been kicked for being idle)
[12:31:59] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[12:32:19] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:33:41] *** Parts: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) ()
[12:35:37] *** Parts: yanchai (~yanchai@222.127.97.162) ()
[12:42:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:53:00] *** Quits: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c) (Ping timeout: 268 seconds)
[13:10:50] *** Joins: slav0nic (slav0nic@python.su)
[13:12:36] *** Joins: Rikem (~mike@user/rikem)
[13:12:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:12:37] *** ChanServ sets mode: +v EvilDMP
[13:15:34] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[13:17:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[13:27:03] <pycode> hello i have a booleandfield i would like to create two radio buttons Yes or No the problem is that i need to put them in a specific part of the design is it possible to get the "YES" option code and then the "NO" option html code, somehow?
[13:28:53] *** Joins: luigibu (~luigibu@80.30.201.209)
[13:28:56] <GinFuyou> just type it?
[13:29:28] <GinFuyou> Problem that between radio items there would be other elements?
[13:30:11] <pycode> GinFuyou, i have a field called "single_payment" i am inside th QuoteForm so basically the user should select if he want to pay in one solution or with installments, so it is a Yes or No field
[13:30:29] <pycode> the problem yes exactly
[13:30:34] <pycode> those are in different divs
[13:30:56] <pycode> i have two blocks where i put the total (per month) if he choose the installments (so single_payment = no)
[13:31:26] <pycode> etc, so yes graphically it is different so for that reason i would like to work with each radio button
[13:31:30] <GinFuyou> Did a quick check, and looks I remember correctly: it
[13:31:32] <pycode> and put it where i need it
[13:31:47] <GinFuyou> it's not a problem, radio inputs can be anywhere
[13:32:10] <GinFuyou> they are grouped as long as the have same name attr
[13:32:11] <pycode> GinFuyou, no wait... i have TWO RADIO BUTTONs i mean...
[13:32:18] <pycode> the radio for YES and the radio for NO
[13:32:37] <pycode> HOw can i create two with the same name and different value (yes/no)
[13:32:40] <GinFuyou> It's wouldn't have sense to have one radio button it would make it a checkbox
[13:33:15] <GinFuyou> <input type='radio' value='something'> ?
[13:33:24] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[13:33:27] <pycode> GinFuyou, yes but i mean if i create a radiobutton two radio buttons django will put them togheter (near)
[13:33:34] <pycode> i need to get the first one
[13:33:40] <pycode> oh do you think create the input html myself
[13:33:55] <GinFuyou> by typing it with your keyboard
[13:33:57] <pycode> i thought to use {{form.single_payment.yes}} {{for.single_payment.no}}
[13:34:04] <pycode> or something similar
[13:34:11] <pycode> so i must create them directly
[13:34:29] <pycode> no no it is not a problem ok just asking if i can use the form object or not
[13:34:32] <pycode> but seems not
[13:35:01] <GinFuyou> have to see the widger for radio input but I guessing not, at least not easily
[13:35:19] <pycode> ok i will create the input "manually"
[13:35:20] <pycode> thanks
[13:35:43] <GinFuyou> yes, just make it manually with correct name attr
[13:37:10] <pycode> oook
[13:37:11] <pycode> thanks
[13:40:50] <pycode> <GinFuyou> by typing it with your keyboard
[13:40:52] <pycode> :DD
[13:42:58] <GinFuyou> In coding, don't get obstinate with some patterns. Sometimes it's better a take a step back, and do something differently
[13:43:04] *** Quits: explore (uid233125@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:43:36] <pycode> GinFuyou, you are right!
[13:43:48] <pycode> GinFuyou, one more question how can i get just the name of the input?
[13:44:07] <pycode> i can put it manually sure
[13:44:18] <pycode> but i remember it was possible somehow
[13:44:27] <pycode> just to recall it correctly
[13:44:46] <GinFuyou> yes, you should be able to get those out of field
[13:44:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[13:46:08] <pycode> auto_id will give me the "id"
[13:46:12] <pycode> i try .name or something similar
[13:47:01] *** Joins: fikran (~fikran@user/fikran)
[13:47:03] <GinFuyou> yeah, {{ field.name }}  probably
[13:47:25] <pycode> yeah .name
[13:47:27] <pycode> ok thanks
[13:47:27] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:47:41] *** Joins: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro)
[13:47:47] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[13:54:14] *** Quits: gkarthik (~gkarthik@2402:3a80:191b:88c5::2) (Read error: Connection reset by peer)
[13:54:30] *** Joins: gkarthik (~gkarthik@2402:3a80:191b:88c5::2)
[13:59:12] *** Joins: TuringSystem (~TuringSys@lfbn-idf1-1-1141-128.w82-125.abo.wanadoo.fr)
[14:04:50] *** Quits: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro) (Quit: ciurca)
[14:09:06] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Read error: Connection reset by peer)
[14:10:12] <Santzes> how do I always end up spending hour+ just trying to nuke a database.. Yes I know I can't have two primary keys, that's why I nuked the tables and deleted all the migrations, I just want to start over without the old pk
[14:20:13] <mad_moses> Hi, I am building a REST-API and have some calls which I want to protect somehow. The api call will be consumed by an android app. Is there something to sign each call (RSA Private / Public keys?) with a key which I will store in the android app? The informations are not critical, but I don't want to make it web scrapper to easy to extract this data.
[14:21:06] <TuringSystem> HTTPs won't do the job for this ?
[14:23:16] <mad_moses> That's not what I mean. Currently I have a few bots which are extracting phone numbers from my website and sell the data to others (I guess). But once I detect someone is extracting data from my website I return fake phone numbers and everything is fine. Now they use the rest API to get the phone numbers.
[14:23:45] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[14:24:05] <mad_moses> I thought to sign my request with a private key. (key + timestamp + something else) for example and block this kind of requests
[14:27:39] *** Joins: luigibu (~luigibu@80.30.201.209)
[14:29:53] *** Joins: yanchai (~yanchai@203.177.194.130)
[14:30:10] <yanchai> hi guys
[14:30:54] <yanchai> is it possible to have multiple user auth model like for example a student uses student SNnumber to login instead of username and email while teachers uses email?
[14:31:00] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[14:31:32] <yanchai> FunkyBob: any idea sir?
[14:35:02] <FunkyBob> it's possible, but inadvisable
[14:36:22] <FunkyBob> credentials and user don't have to be the same model
[14:36:36] <FunkyBob> also, you can have multiple auth mechanisms
[14:41:05] <yanchai> FunkyBob: do you have links for this multi uath mechanisms sir?
[14:41:23] *** Joins: Kvothe (~weechat@user/elodin)
[14:41:44] <FunkyBob> they're stackable, it's in the docs
[14:43:11] <yanchai> FunkyBob: the prob with my project is, students must use their SN number to login with theri password while teacher uses email to login. is there a better way to settle this problem?
[14:44:31] *** Joins: Camilo (~hugh@88-111-238-140.dynamic.dsl.as9105.com)
[14:48:09] <dminuoso> Just write your own authentication backend?
[14:48:15] <dminuoso> Seems quite trivial, honestly
[14:48:55] <dminuoso> You can simply subclass some existing backend you like, and simply do this "look for either" dance in that subclass, and then forward the rest to the superclass that implements your favourite authentication method
[14:49:00] <yanchai> dminuoso: do you have a link for this tutorial?
[14:49:11] <dminuoso> https://docs.djangoproject.com/en/3.2/topics/auth/customizing/
[14:49:24] <yanchai> ty
[14:49:37] <dminuoso> Or like FunkyBob pointed out, just have multiple backends
[14:50:01] <GinFuyou> I made a custom backend once, can't say it was that trivial, but neither something notably hard.
[14:50:29] <dminuoso> GinFuyou: Subclassing an existing to add some additional flavour is definitely trivial
[14:50:51] <GinFuyou> well, it did auth against extetnal api so that might have added to complexity
[14:51:45] <dminuoso> Sure, but the complexity does not lie in the "how do I make this happen in django" part, but merely in whatever it is you wanted to have in the first place
[14:55:34] *** Quits: coldmountain (sid484352@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[14:55:35] *** Quits: schinckel (uid38120@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[14:57:50] *** Joins: coldmountain (sid484352@helmsley.irccloud.com)
[14:57:54] *** Joins: schinckel (uid38120@ilkley.irccloud.com)
[15:10:36] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:12:35] *** Joins: pro_z (~pro_z@37.214.34.194)
[15:14:50] *** Quits: pycode (~pycode@2001:b07:5d28:551:8c70:d21c:37a8:6eb9) (Ping timeout: 268 seconds)
[15:16:10] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[15:17:50] <GinFuyou> hm, I thought I could use annotations in admin list_display, do I remember wrong?
[15:18:08] <GinFuyou> Had to make an admin method to access it
[15:21:00] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[15:23:29] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[15:24:08] *** Joins: Atque (~Atque@user/atque)
[15:24:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:32:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:32:21] *** ChanServ sets mode: +v EvilDMP
[15:54:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[15:55:29] *** Joins: pycode (~pycode@2001:b07:5d28:551:ffa3:78c3:761b:1bfa)
[15:56:22] *** Joins: fikran (~fikran@user/fikran)
[15:57:38] *** Joins: luischi (~luigi@80.30.201.209)
[15:58:28] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 265 seconds)
[15:59:15] *** Joins: explore (uid233125@hampstead.irccloud.com)
[16:05:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:12:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:13:53] *** Joins: thiras (~thiras@user/thiras)
[16:14:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[16:16:27] *** Quits: pycode (~pycode@2001:b07:5d28:551:ffa3:78c3:761b:1bfa) (Ping timeout: 250 seconds)
[16:17:43] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[16:24:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:27:51] *** Joins: pgcd (~pgcd@ip5f5bf2a3.dynamic.kabel-deutschland.de)
[16:29:15] <pgcd> hey all - I'm absolutely stumped with something unusual: can anybody think of a way of getting the Nth result in a subquery, where N depends on a field in the outer query?
[16:30:15] <pgcd> It's possible in SQL - you can write LIMIT (select x from y) - but the slicing in django doesn't seem to allow it
[16:31:03] <pgcd> (and google is completely useless, of course)
[16:37:30] <GinFuyou> I can't reverse an admin url by only using object instance, right?
[16:39:16] *** Joins: lutoma (~lutomaoha@user/lutoma)
[16:41:12] <pgcd> GinFuyou yes, like f"{instance._meta.app_label}_{instance._meta.model}_change"
[16:41:58] <pgcd> (or variants thereof)
[16:42:08] <GinFuyou> right, but since it's for template, I guess I need a method on the model.
[16:43:33] <pgcd> ah yes, that's what we do
[16:43:48] <pgcd> admin_permalink property with the above
[16:47:03] <GinFuyou> Works, thanks
[16:48:01] <pgcd> =)
[16:49:49] <GinFuyou> good I designed that originally with abstract base model!
[16:50:27] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[16:52:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:54:09] <pgcd> smart choice =D
[17:04:34] *** Joins: _ganapathi_ (~ganapathi@60.243.65.32)
[17:07:00] <_ganapathi_> am using django app with uwsgi on docker. while starting docker using 43MB of Memory usage. but within few min or hours its increasing to 100-200MB on simple one request. after closing also memory not reducing it.
[17:07:29] <_ganapathi_> anyway to troubleshooting where was the memory leak.
[17:10:47] <GinFuyou> Ok, now to a harder problem: I have to implement merging of instances, where they have like 10 foreing keys potentionally pointing on them
[17:12:08] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[17:13:33] <dminuoso> _ganapathi_: Note, it might not be a memory leak.
[17:13:51] <pgcd> ginfuyou i can help with that, actually
[17:13:57] <dminuoso> Could just be a space leak too
[17:17:18] <pgcd> https://gist.github.com/pgcd/b46a3f16881c62aa169e99fdde57828e
[17:17:27] <pgcd> (works for us, YMMV)
[17:17:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[17:18:18] <GinFuyou> pgcd, oh, thanks, it will indeed help
[17:19:09] <pgcd> i ripped out the parts that were clearly for internal use, though, so please test before real use
[17:19:12] <_ganapathi_> dminuoso: didn't understand. so its normal as u saying ?. so what would happen to release  or once memory filled
[17:20:10] <dminuoso> _ganapathi_: Try triggering the gc manually
[17:20:23] <_ganapathi_> how do validate/differentiate its space leak or memory leak.
[17:20:24] <dminuoso> See if that changes the memory footprint
[17:20:32] <_ganapathi_> gc means
[17:20:38] <dminuoso> Memory leaks are rare and usually indicative of FFI or internal bugs
[17:20:56] <dminuoso> Usually its space leaks that ramp up memory usage. A space leak is just holding references to objects, preventing their disposal
[17:21:03] <dminuoso> _ganapathi_: garbage collector
[17:22:01] <_ganapathi_> so anyway to reduce those objects or clearing those objects.
[17:22:03] <_ganapathi_> ooh
[17:23:08] <dminuoso> _ganapathi_: Normally this should happen automatically. Im not saying a manual gc is necessary, but if a manual GC collection reduces memory footprint you have no problem
[17:23:14] <dminuoso> If it doesnt, you likely have a space leak
[17:23:33] <_ganapathi_> ooh ok.
[17:24:07] <dminuoso> Slow moving programs often have a saw tooth shape in external memory view
[17:24:18] <dminuoso> Even if a gc doesnt help
[17:24:34] <dminuoso> So if you plot it over a long time, and its a saw tooth shape, all is good.
[17:27:06] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[17:27:08] <_ganapathi_> ook. i don't know much detail on this. am trying to understand. So as per google understood as GC means, just an object store/reference once DB query executed and created object then its keep it forever to access it again if am not wrong.
[17:27:25] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:28:03] <_ganapathi_> user = users.objects.filter(enabled=True) - it would create user object and stored . rgt
[17:28:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:28:26] <_ganapathi_> entire object will store or code file or model, view related file will stored
[17:32:05] *** Joins: yanchai (~yanchai@203.177.194.130)
[17:32:28] <yanchai> GinFuyou: hi mate
[17:33:14] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:33:18] <yanchai> GinFuyou: i have this scenario and can't figure out how to do it
[17:34:00] <dminuoso> _ganapathi_: So Python uses two simultaneous methods of garbage collection. First, objects have a reference counter, and they get deleted if that reference counter drops to zero.
[17:34:47] <_ganapathi_> ok and.
[17:35:08] <dminuoso> _ganapathi_: The other is via an irregularly ran garbage collector that, roughly, traces the entire world, marks all reached objects, and throws away the rest. And that latter thing might not trigger as frequently
[17:35:16] <dminuoso> Thirdly
[17:35:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:ed72:45db:341f:4f3e)
[17:35:48] <dminuoso> Python and its underlying C library provides memory management in such a way, that it doesn't instantly release memory back to the operating system.
[17:35:54] <yanchai> GinFuyou: on the docs, we always use 1 users table for authentication right? what if i have 3 types of user. user A: Students uses their SN number to login and only students have SN number. User B: employees uses email to login and User C: guests uses email too. but employess and guest doesnt have SN number which means they will be in a different table?
[17:35:58] *** Joins: READ10 (~dallan@user/read10)
[17:36:26] <dminuoso> _ganapathi_: So this can amplify this apparent nature of "doesnt seem to go back on memory usage"
[17:36:47] <yanchai> GinFoyou: any tips?
[17:36:56] <dminuoso> _ganapathi_: On the previous discussed methods: If of course you keep holding a reference such that neither the reference count drops to zero, and its still found as reachable, that object will be kept alive in memory forever
[17:37:03] <GinFuyou> Well, my recipe is simple: don't have multiple user classes.
[17:37:21] <_ganapathi_> understood
[17:42:46] <yanchai> anyone encountered the same issue i have right now?
[17:43:46] <pgcd> yanchai just use different auth backends
[17:44:09] <pgcd> and one table with all the fields you need across the different kinds of users
[17:46:04] <yanchai> pgcd: SN number are for students, if i put users table sn number that will make a null entry to other user types that are not student?
[17:46:44] <pgcd> yes, that's not a problem at all in general
[17:47:10] <pgcd> but if you want to do it properly you can add another table that only stores SN number and a foreignkey to the user
[17:47:31] <pgcd> and then your auth backend can check that table to see if the SN number is correct
[17:48:34] *** Joins: dor (~erg@78.11.12.207)
[17:49:12] <yanchai> pgcd: if sn number is in a separate table and users table is the auth table, is there a way to auth a user using the separate table?
[17:50:43] <pgcd> yes, that's what I mean. if your other table has a ForeignKey('User', related_name='sn_number') you can do
[17:50:44] <pgcd> User.objects.get(sn_number=<the number you want to check>)
[17:52:02] <yanchai> pgcd: thanks mate! i really appreciate it!
[17:52:12] <pgcd> happy to help
[17:55:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[18:03:05] *** Quits: explore (uid233125@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:03:15] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[18:04:00] *** Joins: thiras (~thiras@user/thiras)
[18:04:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:05:43] *** Joins: fikran (~fikran@user/fikran)
[18:15:27] *** Parts: _ganapathi_ (~ganapathi@60.243.65.32) ()
[18:16:18] *** Quits: kuter (~kuter@public-gprs524281.centertel.pl) (Remote host closed the connection)
[18:22:26] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[18:27:07] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Read error: Connection reset by peer)
[18:27:20] *** Joins: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro)
[18:41:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[18:44:10] *** Quits: READ10 (~dallan@user/read10) (Quit: WeeChat 3.3)
[18:45:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:50:36] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:50:40] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[18:51:08] <pycode> hello how do you handle the problem of html conversions in pdf for contracts? basically i have this form that generate a page then i use wkhtmltopdf for covnersion
[18:51:12] <pycode> but it could takes times
[18:51:14] <pycode> time
[18:52:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[18:56:31] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[18:58:44] <pgcd> pycode if you're on AWS there are convenient lambdas you can set up in minutes
[18:59:02] <pgcd> then you send the html to the lambda and the pdf gets stored to s3
[19:00:41] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[19:00:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:03:25] *** Joins: luigibu (~luigibu@80.30.201.209)
[19:11:33] *** Joins: xkuru (~xkuru@user/xkuru)
[19:12:16] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[19:15:24] <pycode> pgcd, or really? i need to check that
[19:15:25] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:15:27] <theseb> Why do people use the word "API" like it is some new innovative thing? e.g. If you set up a URL people can call, you have created an "API" right?
[19:16:14] <theseb> Also what is an "endpoint"? is it just a specific URL call with specific GET parameters?
[19:16:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:20:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[19:20:40] <nbjoerg> theseb: just the URL
[19:20:55] <nbjoerg> theseb: GET parameters are normally considered the arguments
[19:21:20] <nbjoerg> pycode: why wkhtmltopdf?
[19:21:37] <pycode> nbjoerg, to have a tool inside my dedicated server
[19:21:38] <pycode> why?
[19:21:40] <pycode> is not good?
[19:22:10] <nbjoerg> pycode: and not e.g. weasyprint
[19:22:44] <pycode> nbjoerg, oh i did not know that..
[19:22:46] <pycode> let me check
[19:23:32] <nbjoerg> wkhtmltopdf was always way too heavy for me
[19:23:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:23:53] *** Joins: luigibu (~luigibu@80.30.201.209)
[19:24:51] <pycode> i need to compare their results
[19:24:56] <pycode> thanks nbjoerg
[19:27:07] *** Quits: yanchai (~yanchai@203.177.194.130) (Ping timeout: 250 seconds)
[19:29:42] <pycode> another question is there a mixins or a cbv that redirect in case of form_Valid and form_invalid
[19:29:43] <pycode> ?
[19:33:33] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[19:33:41] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[19:34:47] *** Joins: luischi (~luigi@80.30.201.209)
[19:34:52] *** Joins: luigibu (~luigibu@80.30.201.209)
[19:37:31] *** Quits: rje_ (~rje@50.35.241.164) (Ping timeout: 250 seconds)
[19:38:54] *** Quits: lucascastro (~lucascast@177-185-133-154.dynamic.isotelco.net.br) (Ping timeout: 256 seconds)
[19:40:36] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[19:45:36] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[19:46:07] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Ping timeout: 265 seconds)
[19:50:15] *** Quits: WhyNotHugo (bc7d0f0b52@chat.sr.ht) (Remote host closed the connection)
[19:52:22] *** Joins: luigibu (~luigibu@80.30.201.209)
[19:56:47] *** Joins: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28)
[20:03:02] *** Quits: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro) (Ping timeout: 265 seconds)
[20:05:14] *** Joins: rje (~rje@65.141.156.170)
[20:10:54] *** Joins: djapo (~archangel@user/djapo)
[20:12:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:15:04] *** Joins: fikran (~fikran@user/fikran)
[20:18:18] *** Joins: The_Jag (~The_Jag@host-87-9-29-108.retail.telecomitalia.it)
[20:24:26] *** Joins: lucascastro (~lucascast@45-167-143-6.netfacil.inf.br)
[20:33:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:36:58] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[20:37:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:37:28] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:37:46] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:40:26] *** Quits: pycode (~pycode@2001:b07:5d28:551:ed72:45db:341f:4f3e) (Ping timeout: 268 seconds)
[20:46:27] *** Quits: pgcd (~pgcd@ip5f5bf2a3.dynamic.kabel-deutschland.de) (Quit: Client closed)
[20:48:47] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[20:49:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:50:38] *** Joins: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro)
[20:53:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:53:20] *** ChanServ sets mode: +v EvilDMP
[20:53:54] *** Joins: thiras (~thiras@user/thiras)
[20:54:05] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[21:03:44] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[21:04:45] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[21:05:02] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[21:05:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:14:00] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:14:40] *** Quits: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[21:15:23] *** Quits: gkarthik (~gkarthik@2402:3a80:191b:88c5::2) (Ping timeout: 264 seconds)
[21:16:24] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:16:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:17:26] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[21:20:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:20:19] *** ChanServ sets mode: +v EvilDMP
[21:24:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Quit: Leaving)
[21:36:43] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:40:39] *** Joins: aselman4 (~aselman4@chipr015-p2.nls.ford.com)
[21:44:55] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[21:48:06] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[21:48:06] *** Joins: luigibu (~luigibu@80.30.201.209)
[21:49:26] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[21:50:00] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[21:50:16] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[21:56:24] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:58:45] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[21:59:26] *** Joins: luigibu (~luigibu@80.30.201.209)
[22:04:21] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[22:09:11] *** Quits: pro_z (~pro_z@37.214.34.194) (Ping timeout: 250 seconds)
[22:11:59] *** Quits: aselman4 (~aselman4@chipr015-p2.nls.ford.com) (Quit: Client closed)
[22:15:47] *** Joins: luigibu (~luigibu@80.30.201.209)
[22:16:19] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[22:22:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[22:24:28] *** Joins: fikran (~fikran@user/fikran)
[22:25:46] *** Joins: la_croix_ (~la_croix@cpc117350-walt24-2-0-cust237.13-2.cable.virginm.net)
[22:26:58] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[22:29:57] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[22:31:17] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 250 seconds)
[22:31:22] <la_croix_> Does django have a hook related to the creation of test databases? I have a custom model field that creates a database type in its init function. This works fine normally (including migrating a clean db), but in tests, the type is missing in the db. I think this happens: create type -> create test db (without type) -> migrate (and fail due to missing type). Can I hook into the migration process of the t
[22:31:22] <la_croix_> est db?
[22:31:28] *** Joins: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[22:32:34] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[22:35:29] *** Joins: djapo (~archangel@user/djapo)
[22:36:16] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[22:37:58] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[22:52:47] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[22:53:40] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[22:54:50] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (Remote host closed the connection)
[22:59:38] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[23:01:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:01:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:01:48] *** ChanServ sets mode: +v EvilDMP
[23:07:24] *** Joins: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro)
[23:07:37] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:09:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 264 seconds)
[23:11:38] *** Quits: ciurca (~Thunderbi@5-15-40-153.residential.rdsnet.ro) (Client Quit)
[23:16:26] *** Joins: Thanatos (~Thanatos@105.112.183.97)
[23:28:02] *** Joins: thiras_ (~thiras@user/thiras)
[23:30:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:30:18] *** ChanServ sets mode: +v EvilDMP
[23:30:37] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[23:31:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[23:31:58] *** Joins: djapo (~archangel@user/djapo)
[23:33:44] *** Quits: lucascastro (~lucascast@45-167-143-6.netfacil.inf.br) (Remote host closed the connection)
[23:34:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 256 seconds)
[23:37:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:37:16] *** ChanServ sets mode: +v EvilDMP
[23:41:46] *** Quits: ops (~ops@user/echelon) (Ping timeout: 245 seconds)
[23:48:16] *** Joins: bambanxx (~bambanx@181-163-37-62.baf.movistar.cl)
[23:48:25] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[23:53:04] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[23:56:31] *** Quits: rje (~rje@65.141.156.170) (Quit: rje will be back)
[23:57:40] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[23:59:44] *** Joins: thiras (~thiras@user/thiras)
[23:59:54] *** Joins: rje (~rje@65.141.156.170)
