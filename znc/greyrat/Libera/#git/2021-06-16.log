[00:00:22] *** Joins: thiago_ (~thiago@2601:1c0:4501:635c:2713:5c93:a1e:a1dd)
[00:00:38] *** Quits: thiago_ (~thiago@2601:1c0:4501:635c:2713:5c93:a1e:a1dd) (Client Quit)
[00:01:30] *** Joins: thiago_ (~thiago@c-73-11-93-254.hsd1.or.comcast.net)
[00:04:20] *** Quits: thiago_ (~thiago@c-73-11-93-254.hsd1.or.comcast.net) (Client Quit)
[00:04:48] *** Joins: thiago_ (~thiago@2601:1c0:4501:635c:624d:97e3:ee41:818)
[00:06:41] *** Joins: oriba (~oriba@x4db7020b.dyn.telefonica.de)
[00:11:18] *** squirrel is now known as sqrrl
[00:13:56] *** Joins: NoName_ (~idk@8.20.127.195)
[00:13:58] *** Quits: kevr (~kevr@user/kevr) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:14:57] *** Joins: kevr (~kevr@user/kevr)
[00:18:12] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:19:33] *** Parts: jgilchrist (~jpg@user/jgilchrist) (o/)
[00:20:35] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1002)
[00:24:28] *** Quits: NoName_ (~idk@8.20.127.195) (Quit: https://www.endfgm.eu/what-can-you-do/donate/)
[00:29:11] *** Quits: Riviera (Riviera@user/riviera) (Quit: leaving)
[00:29:27] *** Joins: Riviera (Riviera@user/riviera)
[00:33:55] *** Joins: Guest50 (~Guest50@c80-217-180-75.bredband.tele2.se)
[00:35:30] *** Quits: ThorMojito1 (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Ping timeout: 240 seconds)
[00:37:16] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:37:42] *** Quits: thiago (~thiago@2601:1c0:4501:635c:df6b:2ff6:971:e7c8) (Quit: leaving)
[00:37:55] *** thiago_ is now known as thiago
[00:48:15] *** Joins: jgn (~jgn@user/jgn)
[00:49:51] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[00:50:38] *** Joins: absc (~absc@dynamic-adsl-94-34-192-209.clienti.tiscali.it)
[00:51:11] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[00:52:25] *** Quits: ano (~weechat@user/ano) (Ping timeout: 252 seconds)
[00:53:44] *** Joins: ano (~weechat@user/ano)
[00:58:03] *** Joins: Kill-Animals (uid481358@id-481358.highgate.irccloud.com)
[00:58:57] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[00:58:59] *** Quits: Noisytoot (noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[00:59:19] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[00:59:25] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[01:03:16] *** Joins: Noisytoot (noisytoot@sourcehut/user/noisytoot)
[01:04:11] *** Techcable_ is now known as Techcable
[01:06:45] *** Joins: welovfree (~welovfree@196.77.160.36)
[01:06:46] *** Quits: murd1c (~murd0c@2800:810:492:ee:146a:1fa8:c5be:829b) (Read error: Connection reset by peer)
[01:06:49] *** Parts: welovfree (~welovfree@196.77.160.36) (Leaving)
[01:09:35] *** Quits: alissa (~ryan@hashbang/bdfl) (Quit: WeeChat 2.9 <:3)~)
[01:10:43] *** Joins: daddy (~ryan@hashbang/bdfl)
[01:15:41] *** Kill-Animals is now known as kill-anirnals
[01:18:29] *** Joins: surfist (surfist@gateway02.insomnia247.nl)
[01:21:55] *** kill-anirnals is now known as Kill-Animals
[01:26:06] *** Quits: jrm (~jrm@156.34.187.65) (Ping timeout: 264 seconds)
[01:26:25] *** Joins: jrm (~jrm@156.34.187.65)
[01:32:34] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[01:33:54] *** Quits: XV8 (~XV8@2601:5cb:c001:50:91ef:c6b5:cda7:9415) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:34:58] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[01:36:45] *** Quits: davve (davve@bsd.douchedata.com) (Read error: Connection reset by peer)
[01:36:52] *** Joins: davve (davve@bsd.douchedata.com)
[01:37:07] *** Joins: cfjk5 (~cfjk@user/cfjk)
[01:37:29] *** Quits: absc (~absc@dynamic-adsl-94-34-192-209.clienti.tiscali.it) (Quit: Leaving.)
[01:37:32] *** Quits: antto (~pewpew@134.209.89.227) (Excess Flood)
[01:38:10] *** Joins: antto (~pewpew@imightbe.antonsavov.net)
[01:38:58] *** Quits: cfjk (~cfjk@user/cfjk) (Ping timeout: 244 seconds)
[01:38:58] *** cfjk5 is now known as cfjk
[01:45:16] *** Joins: milosz__ (~milosz@user/milosz)
[01:45:41] *** Quits: milosz_ (~milosz@user/milosz) (Read error: Connection reset by peer)
[01:46:08] *** Joins: Vonter (~Vonter@user/vonter)
[01:48:18] *** Quits: BinaryUnit (~glitch@user/binaryunit) (Ping timeout: 240 seconds)
[01:54:25] *** Parts: zzz (~yin@user/yin) ()
[01:55:23] *** Joins: dcompoze (~dcompoze@5E98D6D9.static.tld.pl)
[02:01:36] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[02:03:03] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 244 seconds)
[02:07:27] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:10:12] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[02:12:16] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:16:52] *** sibilant__ is now known as sibilant
[02:20:34] *** Quits: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: Client closed)
[02:22:33] *** Joins: welovfree (~welovfree@196.77.160.36)
[02:24:51] *** Joins: majors (~majors@user/majors)
[02:25:01] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[02:25:09] *** Quits: aruns (~aruns@94.9.193.231) (Quit: leaving)
[02:28:09] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 272 seconds)
[02:29:53] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Client closed)
[02:30:53] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[02:31:09] *** Joins: Adoi (~Adoi@user/adoi)
[02:31:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 240 seconds)
[02:31:31] *** Quits: welovfree (~welovfree@196.77.160.36) (Quit: Leaving)
[02:31:50] *** Joins: welovfree (~welovfree@196.77.160.36)
[02:31:56] *** Joins: thetourist108[m] (~thetouris@2001:470:69fc:105::3112)
[02:32:10] *** Quits: Guest9 (~Guest9@103.250.137.187) (Quit: Connection closed)
[02:32:17] *** Quits: welovfree (~welovfree@196.77.160.36) (Client Quit)
[02:32:25] *** Joins: welovfree (~welovfree@196.77.160.36)
[02:33:19] <thetourist108[m]> /msg alis LIST linux
[02:34:07] *** Quits: welovfree (~welovfree@196.77.160.36) (Client Quit)
[02:34:16] *** Joins: welovfree (~welovfree@196.77.160.36)
[02:34:44] *** Parts: thetourist108[m] (~thetouris@2001:470:69fc:105::3112) ()
[02:35:29] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[02:36:03] *** Quits: Guest50 (~Guest50@c80-217-180-75.bredband.tele2.se) (Quit: Client closed)
[02:45:31] *** Quits: filePeter (~filePeter@user/filepeter) (Ping timeout: 268 seconds)
[02:47:59] *** Joins: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net)
[02:54:11] *** Joins: burningserenity_ (~burningse@2603:9001:f01:ad99::1002)
[02:55:43] *** Joins: sibilant_ (~sibilant@host-95-197-90-27.mobileonline.telia.com)
[02:55:43] *** Quits: sibilant_ (~sibilant@host-95-197-90-27.mobileonline.telia.com) (Changing host)
[02:55:43] *** Joins: sibilant_ (~sibilant@user/sibilant)
[02:56:49] *** Quits: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net) (Quit: Leaving)
[02:57:27] *** Joins: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net)
[02:57:54] *** Quits: sibilant (~sibilant@user/sibilant) (Ping timeout: 240 seconds)
[02:59:46] *** Quits: theoceaniscool (~theoceani@188.127.173.202) (Ping timeout: 272 seconds)
[03:01:14] *** Quits: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net) (Client Quit)
[03:02:33] *** Quits: securethemews (~securethe@2a00:23c4:1e98:ef00::1) (Ping timeout: 272 seconds)
[03:11:55] *** Joins: tabakhase (tabakhase@user/tabakhase)
[03:15:50] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Remote host closed the connection)
[03:16:11] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[03:16:59] *** Quits: thiago (~thiago@2601:1c0:4501:635c:624d:97e3:ee41:818) (Quit: Lost terminal)
[03:19:16] *** Joins: NoName_ (~idk@8.20.127.195)
[03:22:26] *** Joins: mohamez (~mohamez@196.77.160.36)
[03:23:08] *** Quits: mohamez (~mohamez@196.77.160.36) (Client Quit)
[03:25:57] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Remote host closed the connection)
[03:27:05] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[03:31:17] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Remote host closed the connection)
[03:31:39] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[03:32:21] *** Joins: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net)
[03:32:32] *** Joins: ferdna (~ferdna@user/ferdna)
[03:33:51] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[03:38:10] *** Quits: mzsr (~mzsr@user/mzsr) (Quit: The Lounge - https://thelounge.chat)
[03:40:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:41:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:43:17] *** Joins: thiago (~thiago@c-73-11-93-254.hsd1.or.comcast.net)
[03:44:15] *** Joins: jazzy (~jaziz@2600:380:4547:d128:8473:ff3e:752d:860f)
[03:50:35] *** Quits: zeenk (~zeenk@188.26.30.39) (Quit: Konversation terminated!)
[03:51:38] *** Quits: hbautista (~hbautista@187.171.126.106) (Read error: Connection reset by peer)
[03:51:43] *** Joins: hbautista_ (~hbautista@187.171.126.106)
[03:52:02] *** Joins: filePeter (~filePeter@user/filepeter)
[03:53:00] *** Quits: jrm (~jrm@156.34.187.65) (Quit: ciao)
[03:53:39] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:58:30] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 264 seconds)
[04:00:20] *** Quits: mike (~mike@45.126.44.146) (Quit: WeeChat 1.9.1)
[04:02:41] *** Quits: thiago (~thiago@c-73-11-93-254.hsd1.or.comcast.net) (Quit: Lost terminal)
[04:03:49] *** Joins: thiago (~thiago@2601:1c0:4501:635c:e06b:f3f5:f375:430a)
[04:04:43] *** Joins: jrm (~jrm@156.34.187.65)
[04:07:10] *** Quits: lgc (~lgc@2001:41d0:fe1d:5300:b261:a327:94dc:9c28) (Quit: WeeChat 3.2-dev)
[04:09:43] *** Joins: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net)
[04:14:43] *** Quits: burningserenity_ (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[04:19:20] *** Joins: R2robot (~R2robot@user/r2robot)
[04:20:42] *** Quits: thiago (~thiago@2601:1c0:4501:635c:e06b:f3f5:f375:430a) (Ping timeout: 240 seconds)
[04:22:08] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[04:22:38] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:26:16] *** Joins: BinaryUnit (~glitch@user/binaryunit)
[04:26:25] *** Joins: thiago (~thiago@2601:1c0:4501:635c:50fe:568:2ce0:1e74)
[04:27:24] *** Joins: mrquincy_ (~mrquincy_@c-76-113-57-134.hsd1.nm.comcast.net)
[04:27:55] *** Quits: NoName_ (~idk@8.20.127.195) (Quit: https://www.endfgm.eu/what-can-you-do/donate/)
[04:28:18] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 240 seconds)
[04:31:27] *** Quits: mrquincy (~mrquincy_@c-76-113-57-134.hsd1.nm.comcast.net) (Ping timeout: 268 seconds)
[04:32:18] *** Quits: thiago (~thiago@2601:1c0:4501:635c:50fe:568:2ce0:1e74) (Ping timeout: 240 seconds)
[04:32:41] *** Quits: mrquincy_ (~mrquincy_@c-76-113-57-134.hsd1.nm.comcast.net) (Ping timeout: 268 seconds)
[04:36:24] *** Joins: thiago (~thiago@2601:1c0:4501:635c:4ebf:e21f:b6ec:87cc)
[04:37:30] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[04:37:56] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:41:01] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[04:41:17] *** Quits: SleePy (~SleePy@simplemachines/siteteam/SleePy) (Quit: I quit, that is all)
[04:41:51] *** Joins: SleePy (~SleePy@simplemachines/siteteam/SleePy)
[04:43:06] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[04:44:58] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[04:45:25] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:46:37] *** Quits: nyah_ (~nyah@90.221.186.180) (Quit: leaving)
[04:47:30] *** Quits: thiago (~thiago@2601:1c0:4501:635c:4ebf:e21f:b6ec:87cc) (Ping timeout: 240 seconds)
[04:48:14] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[04:49:43] *** Joins: nyah (~nyah@90.221.186.180)
[04:52:43] *** Quits: guardian` (~guardian@planet-d.net) (Remote host closed the connection)
[04:57:43] *** Quits: Kill-Animals (uid481358@id-481358.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:00:34] *** Joins: thiago (~thiago@2601:1c0:4501:635c:4ebf:e21f:b6ec:87cc)
[05:01:22] *** Joins: hbautista (~hbautista@187.171.126.106)
[05:01:25] *** Quits: hbautista_ (~hbautista@187.171.126.106) (Read error: Connection reset by peer)
[05:01:27] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:01:47] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:02:26] *** Joins: vicfred (~vicfred@user/vicfred)
[05:04:25] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:10:31] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: Changing server...)
[05:16:37] *** Quits: Ram-Z (Ram-Z@2a01:7e01::f03c:91ff:fe57:d2df) (Ping timeout: 272 seconds)
[05:17:03] *** Quits: rewt (default@user/rewt) (Killed (NickServ (GHOST command used by rewt__!~default@user/rewt)))
[05:17:18] *** Joins: rewt (~default@user/rewt)
[05:25:59] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:d648:1b69:add9:923) (Remote host closed the connection)
[05:26:36] *** Quits: dcompoze (~dcompoze@5E98D6D9.static.tld.pl) (Quit: WeeChat 3.2)
[05:30:16] *** Quits: oriba (~oriba@x4db7020b.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:30:48] *** Quits: welovfree (~welovfree@196.77.160.36) (Quit: Leaving)
[05:33:32] *** Quits: PaMeDa (~apauli@dynamic-095-112-171-221.95.112.pool.telefonica.de) (Ping timeout: 244 seconds)
[05:43:51] *** Joins: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com)
[05:48:32] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[05:49:05] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[05:50:37] *** Joins: Ram-Z (Ram-Z@2a01:7e01::f03c:91ff:fe57:d2df)
[06:08:03] *** Quits: Wuzzy (~Wuzzy@p57a2f693.dip0.t-ipconnect.de) (Quit: Wuzzy)
[06:11:15] *** Quits: rewt (~default@user/rewt) (Read error: Connection reset by peer)
[06:11:45] *** Joins: rewt (~default@user/rewt)
[06:15:23] *** Quits: hbautista (~hbautista@187.171.126.106) (Ping timeout: 244 seconds)
[06:17:35] *** Joins: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt)
[06:18:09] *** Parts: markmarkmark (~mark@user/markmarkmark) (WeeChat 2.9)
[06:18:43] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 240 seconds)
[06:27:47] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[06:28:38] *** Joins: jiffe (~jiffe@mail.nsab.us)
[06:29:40] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[06:31:46] <jiffe> I have a user that has a local git directory complete with binary and libexec/git-core that seems to work just fine, but trying to copy that folder into another user's directory, git executes but if I try to clone a repo it complains it can't fine the https helper which leads me to believe it doesn't know to look under ~/git/libexec/git-core and I don't know what about the original user's setup
[06:31:46] *** Joins: bLeDy[m] (~bledymatr@2001:470:69fc:105::648)
[06:31:46] *** Joins: cpackham[m] (~cpackhamm@2001:470:69fc:105::927)
[06:31:46] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[06:31:47] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[06:31:47] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[06:31:47] <jiffe> addresses that, any idea?
[06:32:18] <jiffe> this is linux, I see a .gitconfig file in there but nothing path related in there
[06:32:35] *** Joins: tejr (~tejr@user/tejr)
[06:33:38] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:36:18] <jiffe> git --exec-path says /usr/libexec/git-core for both
[06:42:20] *** Joins: Quot_ (~Quot@2601:3c4:300:6a0:ddf5:f5dc:4514:fa70)
[06:43:52] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:47:14] *** Joins: nicolas17 (~nicolas@KDE/nalvarez)
[06:47:28] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[06:51:47] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[06:52:42] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[06:57:50] *** Joins: chrisgs (~Mutter@pool-98-111-206-106.pitbpa.fios.verizon.net)
[06:58:25] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Remote host closed the connection)
[06:59:34] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[06:59:53] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:59:53] *** FinnElija is now known as Guest7201
[06:59:53] *** Quits: Guest7201 (~finn_elij@user/finn-elija/x-0085643) (Killed (silver.libera.chat (Nickname regained by services)))
[06:59:53] *** finn_elija is now known as FinnElija
[07:00:11] *** Quits: chrisgs (~Mutter@pool-98-111-206-106.pitbpa.fios.verizon.net) (Remote host closed the connection)
[07:00:50] *** Joins: chrisgs (~Mutter@pool-98-111-206-106.pitbpa.fios.verizon.net)
[07:01:07] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:01:18] *** Quits: chrisgs (~Mutter@pool-98-111-206-106.pitbpa.fios.verizon.net) (Remote host closed the connection)
[07:09:12] *** Joins: chrisgs (~Mutter@pool-98-111-206-106.pitbpa.fios.verizon.net)
[07:10:06] *** Quits: chrisgs (~Mutter@pool-98-111-206-106.pitbpa.fios.verizon.net) (Client Quit)
[07:18:34] *** Quits: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt) (Ping timeout: 268 seconds)
[07:25:06] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[07:46:03] *** Joins: bobmight57 (~bobmight5@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[07:52:37] *** Quits: xikkub (me@user/xikkub) (Quit: .)
[07:52:59] *** Joins: xikkub (me@user/xikkub)
[08:00:50] *** Joins: Vonter (~Vonter@user/vonter)
[08:01:08] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (Ping timeout: 268 seconds)
[08:02:52] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[08:03:36] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[08:04:03] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:05:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[08:05:17] *** Lord_of_Life_ is now known as Lord_of_Life
[08:20:24] *** Joins: Xatenev (~xatenev@2a02:8108:963f:9cb8:ac5e:f4e5:ebe5:5ef)
[08:20:40] *** Quits: Xatenev (~xatenev@2a02:8108:963f:9cb8:ac5e:f4e5:ebe5:5ef) (Changing host)
[08:20:40] *** Joins: Xatenev (~xatenev@user/xatenev)
[08:20:46] *** Parts: Xatenev (~xatenev@user/xatenev) ()
[08:30:11] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[08:37:55] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[08:38:07] *** Joins: vicfred (~vicfred@user/vicfred)
[08:39:50] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[08:42:39] *** Joins: Kill-Animals (uid481358@id-481358.highgate.irccloud.com)
[08:42:43] *** Kill-Animals is now known as Kill-Anirnals
[08:46:20] *** Quits: Milos (~Milos@user/milos) (Remote host closed the connection)
[08:46:44] *** Joins: Milos (~Milos@user/milos)
[08:54:10] *** Joins: dviola (~diego@user/dviola)
[08:54:46] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[08:56:56] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:58:05] *** Joins: hbautista (~hbautista@187.171.126.106)
[08:59:45] *** Joins: vishal (~vishal@fedora/vishal)
[09:09:17] <ikke> jiffe: does the first user happen to have an installation of git in /usr/libexec/git-core as well?
[09:09:30] <ikke> the exec path is compiled in
[09:10:14] <ikke> jiffe: or does the first user have GIT_EXEC_PATH set
[09:12:40] *** Joins: hbautista_ (~hbautista@187.171.126.106)
[09:12:43] *** Quits: hbautista (~hbautista@187.171.126.106) (Remote host closed the connection)
[09:12:52] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Remote host closed the connection)
[09:13:10] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[09:14:21] *** Quits: hbautista_ (~hbautista@187.171.126.106) (Client Quit)
[09:14:36] *** Joins: hbautista (~hbautista@187.171.126.106)
[09:16:03] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[09:18:53] *** Aleksejs_Home is now known as Aleksejs
[09:22:21] *** Parts: BinaryUnit (~glitch@user/binaryunit) (Leaving)
[09:26:05] *** Joins: Guest1814 (~Guest18@189.146.237.171)
[09:28:06] *** Quits: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net) (Quit: Leaving)
[09:29:06] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[09:32:25] *** Joins: arcatech (~arcatech@user/arcatech)
[09:33:30] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[09:35:29] *** Quits: dviola (~diego@user/dviola) (Quit: WeeChat 3.2)
[09:38:34] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[09:44:34] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[09:44:42] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[09:45:06] *** Quits: thiago (~thiago@2601:1c0:4501:635c:4ebf:e21f:b6ec:87cc) (Ping timeout: 240 seconds)
[09:45:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:45:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:46:56] *** Joins: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net)
[09:48:29] *** Quits: Codaraxis (~Codaraxis@s13490149139.blix.com) (Read error: Connection reset by peer)
[09:54:07] *** Joins: Guest50 (~Guest50@c80-217-180-75.bredband.tele2.se)
[09:54:19] *** Joins: jrobin (~jrobin@189.146.237.171)
[09:55:30] *** Quits: jrobin (~jrobin@189.146.237.171) (Quit: WeeChat 3.1)
[09:55:52] *** Quits: Guest50 (~Guest50@c80-217-180-75.bredband.tele2.se) (Client Quit)
[09:56:50] *** Joins: furrymcgee (~devuan@31.179.186.66)
[09:58:16] *** Joins: sixrobin (~jrobin@189.146.237.171)
[10:15:36] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:15:55] *** Joins: tejr (~tejr@user/tejr)
[10:20:16] *** Quits: sixrobin (~jrobin@189.146.237.171) (Quit: WeeChat 3.1)
[10:22:56] *** Quits: Guest1814 (~Guest18@189.146.237.171) (Quit: Client closed)
[10:23:46] *** Joins: PaMeDa (~apauli@dynamic-077-010-108-145.77.10.pool.telefonica.de)
[10:37:37] *** Joins: dermoth_ (~dermoth@user/dermoth)
[10:37:52] *** Quits: dermoth (~dermoth@user/dermoth) (Killed (NickServ (GHOST command used by dermoth_)))
[10:37:56] *** dermoth_ is now known as dermoth
[10:39:33] *** Joins: lgc (~lgc@2001:41d0:fe1d:5300:3340:8590:acd0:6739)
[10:40:51] *** Joins: Kulrak (Kulrak@n122-109-33-182.rdl1.qld.optusnet.com.au)
[10:43:30] *** Quits: hbautista (~hbautista@187.171.126.106) (Ping timeout: 264 seconds)
[10:46:38] *** Quits: lgc (~lgc@2001:41d0:fe1d:5300:3340:8590:acd0:6739) (Ping timeout: 244 seconds)
[10:48:00] *** Joins: dimi1947 (~dimi1947@2a02:1388:96:a72e:c95c:20bd:bdf9:41ae)
[10:48:25] *** Joins: lgc (~lgc@2001:41d0:fe1d:5300:a217:ee36:5e41:40a9)
[10:58:17] *** Joins: schmillin (~schmillin@user/schmillin)
[10:58:34] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[10:58:51] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[11:02:45] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[11:04:45] *** Quits: steam (~steam@user/steam) (Quit: Closing)
[11:05:00] <Kill-Anirnals> sorry I am a bit sick here
[11:05:32] *** Joins: steam (~steam@user/steam)
[11:06:18] *** Joins: gareppa (~gareppa@user/gareppa)
[11:06:59] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[11:09:51] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:09:59] *** Quits: steam (~steam@user/steam) (Client Quit)
[11:10:41] *** Joins: steam (~steam@user/steam)
[11:22:36] *** Joins: Codaraxis__ (~Codaraxis@89.45.7.134)
[11:25:47] *** Joins: prince781 (~prince781@ool-18bfdb17.dyn.optonline.net)
[11:27:04] *** Quits: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) (Ping timeout: 272 seconds)
[11:30:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[11:31:30] *** Joins: zeenk (~zeenk@188.26.30.39)
[11:32:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[11:37:38] *** Quits: prince781 (~prince781@ool-18bfdb17.dyn.optonline.net) (Quit: prince781)
[11:37:40] *** Quits: unluckyshrubbery (~unluckysh@097-070-104-004.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:38:11] *** Quits: sibilant_ (~sibilant@user/sibilant) (Quit: Leaving)
[11:38:34] *** Joins: sibilant_ (~sibilant@host-95-197-90-27.mobileonline.telia.com)
[11:38:34] *** Quits: sibilant_ (~sibilant@host-95-197-90-27.mobileonline.telia.com) (Changing host)
[11:38:34] *** Joins: sibilant_ (~sibilant@user/sibilant)
[11:38:58] *** Joins: feriman (~feriman@188.163.113.127)
[11:40:39] *** Quits: sibilant_ (~sibilant@user/sibilant) (Client Quit)
[11:40:56] *** Joins: sibilant (~sibilant@user/sibilant)
[11:48:39] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[11:48:59] *** Joins: cliluw (~cliluw@47.147.80.149)
[11:50:36] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[11:57:06] *** Quits: Quot_ (~Quot@2601:3c4:300:6a0:ddf5:f5dc:4514:fa70) (Ping timeout: 240 seconds)
[11:57:50] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[11:58:58] *** Joins: jmcantrell (~weechat@86.106.143.100)
[12:03:48] *** Quits: Rhonda (~rhonda@wesnoth/developer/rhonda) (Ping timeout: 272 seconds)
[12:04:08] *** Joins: NeoCron (~NeoCron@p548a2a2e.dip0.t-ipconnect.de)
[12:09:18] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 244 seconds)
[12:12:18] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[12:13:12] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[12:20:19] *** Joins: Rhonda (~rhonda@wesnoth/developer/rhonda)
[12:21:04] *** Joins: BlessJah (~BlessJah@user/blessjah)
[12:21:31] *** Quits: NeoCron (~NeoCron@p548a2a2e.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:24:54] *** Quits: bobmight57 (~bobmight5@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Ping timeout: 250 seconds)
[12:30:40] *** wacko_ is now known as wacko
[12:37:52] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[12:38:40] *** Joins: TomyWork (~TomyLobo@p200300e80f133c009dd79b4b96334160.dip0.t-ipconnect.de)
[12:41:19] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.1)
[12:41:50] *** Quits: kixx (~kixx@user/kixx) (Ping timeout: 268 seconds)
[12:43:36] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[12:47:30] *** Quits: theoceaniscool (~theoceani@188.127.173.202) (Ping timeout: 240 seconds)
[12:48:01] *** Quits: tsdh (~user@j289989.servers.jiffybox.net) (Quit: G)
[12:49:27] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:49:56] *** Joins: tsdh (~user@j289989.servers.jiffybox.net)
[12:54:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:59:25] *** Quits: iokill (~dave@static.16.105.130.94.clients.your-server.de) (Quit: leaving)
[13:00:49] *** Joins: iokill (~dave@static.16.105.130.94.clients.your-server.de)
[13:01:23] *** Parts: dextaa (~DV@aftr-37-201-214-197.unity-media.net) (Leaving)
[13:01:47] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Quit: Leaving)
[13:05:27] *** Joins: Guest90 (~Guest90@2a02:8071:8180:9300:c700:f1c:e74b:4c34)
[13:16:06] *** Parts: Guest90 (~Guest90@2a02:8071:8180:9300:c700:f1c:e74b:4c34) ()
[13:20:55] *** Quits: drew (~drew@user/drew) (Ping timeout: 244 seconds)
[13:26:11] *** Quits: phroa (~phroa@user/phroa) (Ping timeout: 272 seconds)
[13:27:48] *** Joins: phroa (~phroa@user/phroa)
[13:33:26] *** Joins: kixx (~kixx@93.114.96.194)
[13:33:26] *** Quits: kixx (~kixx@93.114.96.194) (Changing host)
[13:33:26] *** Joins: kixx (~kixx@user/kixx)
[13:40:17] *** Joins: unluckyshrubbery (~unluckysh@097-070-104-004.res.spectrum.com)
[13:41:15] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[13:41:49] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Read error: Connection reset by peer)
[13:43:34] *** Quits: xD- (~|_|@194.5.249.141) (Quit: bye)
[13:43:59] *** Joins: xD- (~|_|@194.5.249.141)
[13:55:18] *** Joins: CRCinAU (~CRCinAU@user/crcinau)
[13:56:02] <CRCinAU> hi all - so I'm trying to figure out how to do my merging between devel + master branches - so that essentially devel is where all the commits go, then a single commit happens to sync devel -> master, then devel keeps on going
[13:56:45] <bookworm> easy then, merge devel to master
[13:56:55] <bookworm> keep working on devel, case solved
[13:57:05] <bookworm> what are you missing?
[13:57:24] <osse> the single commit
[13:57:35] <CRCinAU> yeah - right now I'm doing: git fetch -a; git checkout master; git merge devel --squash; git commit -a -m "Release - Merge with devel"; git push
[13:57:36] <bookworm> a merge commit is a single commit
[13:57:46] <CRCinAU> does that seem right?
[13:58:08] <osse> heh that was the opposite of what I expected
[13:58:36] <osse> bookworm: your procedure wouldn't generate a merge commit at all, so I was about to suggest --no-ff to get that "parallel tracks" look like you see in git-flow diagrams
[13:58:55] <bookworm> ah yes
[13:59:10] <CRCinAU> that's the bit I'm trying to figure out - is the tree that gets printed in the commit graph seems to be all over the shot - so I'm now trying the above
[13:59:17] <bookworm> but you assume that a ff merge is possible which may not always be true
[13:59:31] <bookworm> but yes, --no-ff it is
[13:59:42] *** Joins: alzgh (~alzgh@216.155.158.214)
[13:59:43] <CRCinAU> ie the only blobs on the master should be from when a merge goes from devel -> master
[13:59:55] <osse> CRCinAU: your latest approach wouldn't generate a tree at all. you just blast all of devel into master as one huge splat
[14:00:09] <CRCinAU> that's what I'm trying to figure out how to change hahah
[14:00:15] <osse> don't use --squash
[14:00:27] <CRCinAU> doesn't that then duplicate the commit messages between devel -> master?
[14:00:33] <osse> no
[14:00:33] <CRCinAU> I had that problem at one point in time
[14:01:03] <osse> that is probably a symptom of something else (like rebasing something that was pushed already)
[14:01:24] <CRCinAU> ahhh - rebase was one of the things one of the devs at work suggested....
[14:01:30] <CRCinAU> but it doesn't do what I want hahah
[14:01:36] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[14:01:37] *** Quits: heftig[m] (~heftig@archlinux/developer/heftig) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: blue_penquin[m] (~bluepenqu@2001:470:69fc:105::829) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: lieuwex (~lieuwelie@2001:470:69fc:105::4e6) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: pinage404 (~pinage404@2001:470:69fc:105::25c) (Quit: Bridge terminating on SIGTERM)
[14:01:38] *** Quits: tuxayo (~tuxayomat@2001:470:69fc:105::5bf) (Quit: Bridge terminating on SIGTERM)
[14:01:38] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[14:01:38] *** Quits: crysisanon[m] (~crysisano@2001:470:69fc:105::1687) (Quit: Bridge terminating on SIGTERM)
[14:01:38] *** Quits: PenguinAtHome[m] (~tmsbrdrsm@2001:470:69fc:105::254) (Quit: Bridge terminating on SIGTERM)
[14:01:40] *** Quits: silvio[m] (~silv-ioma@2001:470:69fc:105::2f06) (Quit: Bridge terminating on SIGTERM)
[14:01:40] *** Quits: bLeDy[m] (~bledymatr@2001:470:69fc:105::648) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: cpackham[m] (~cpackhamm@2001:470:69fc:105::927) (Quit: Bridge terminating on SIGTERM)
[14:01:45] <CRCinAU> so you're saying that just removing --squash should do that?
[14:01:51] <osse> you want to work on devel forever, then occasionally do git merge --no-ff devel from master
[14:02:11] <CRCinAU> oh - --no-ff.... I don't quite understand what that does....
[14:02:12] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:a0e9:5ac8:9436:b228)
[14:02:20] <Timvde> It avoids a fast-forward merge
[14:02:26] *** digdilem_ is now known as digdilem
[14:02:27] <Timvde> So that a merge commit is always created
[14:02:44] <CRCinAU> oh - so then I don't need a git commit afterwards?
[14:03:03] <Timvde> It will already create a merge commit, unless there are conflicts that need to be solved
[14:03:16] <CRCinAU> ahhh - so squash told it not to do a commit in the merge process?
[14:03:38] <bookworm> no it told it to aggregate all changes into a single commit
[14:03:39] <osse> http://sprunge.us/FkY4MI
[14:03:52] <Timvde> bookworm: --squash doesn't create a commit according to the man page (I haven't ever used it myself)
[14:04:09] <osse> technically true, but it stages everything and such
[14:04:13] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[14:04:19] <osse> not sure why it stops there
[14:04:20] *** Joins: heftig[m] (~heftig@archlinux/developer/heftig)
[14:04:20] *** Joins: bLeDy[m] (~bledymatr@2001:470:69fc:105::648)
[14:04:20] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[14:04:20] *** Joins: lieuwex (~lieuwelie@2001:470:69fc:105::4e6)
[14:04:20] *** Joins: cpackham[m] (~cpackhamm@2001:470:69fc:105::927)
[14:04:27] <bookworm> really?
[14:04:32] *** Joins: tuxayo (~tuxayomat@2001:470:69fc:105::5bf)
[14:04:32] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[14:04:36] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[14:04:36] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[14:04:36] *** Joins: kadoban (~kadoban@user/kadoban)
[14:04:37] <osse> really
[14:04:42] *** Joins: PenguinAtHome[m] (~tmsbrdrsm@2001:470:69fc:105::254)
[14:04:42] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[14:04:42] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[14:04:42] *** Joins: Guest2504 (~bluepenqu@2001:470:69fc:105::829)
[14:04:50] <bookworm> why? doesn't seem symmetric with all other merge options
[14:04:52] *** Joins: crysisanon[m] (~crysisano@2001:470:69fc:105::1687)
[14:05:00] <osse> agreed
[14:05:04] *** Joins: silvio[m] (~silv-ioma@2001:470:69fc:105::2f06)
[14:05:08] <osse> and you can't abort it with git merge --abort either
[14:05:14] <bookworm> nice...
[14:05:16] <osse> i'm working on that :p
[14:05:16] <Timvde> You can just reset though
[14:05:20] <CRCinAU> and hence I decend into confusion hahahahah
[14:05:31] <osse> see my link for an explanation of the ff stuff
[14:05:47] <CRCinAU> yeah - the --no-ff seems to be the tree stuff I want as the output
[14:06:08] <CRCinAU> I just figure in that diagram, I J K L are not required?
[14:06:09] <Timvde> I personally like fast-forward merges, I don't see a need to have merge commits, they just clutter my history
[14:06:15] <CRCinAU> or they happen in the background?
[14:06:25] <Timvde> But I guess that's just taste :)
[14:06:42] <osse> CRCinAU: those letters are supposed to depict commits made on the feature branch
[14:07:23] <bookworm> Timvde: muddles the history, kind of hard to see which feature introduces which commits. So unless you are actively rebasing + squashing prior to a merge it can be noisy
[14:07:34] <bookworm> but yes it's a matter of taste
[14:07:43] <Timvde> bookworm: I am actively rebasing prior to a merge :)
[14:08:57] <CRCinAU> jesus - so straight away, my next --no-ff merge is a conflict :\
[14:09:39] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[14:09:47] <Timvde> That means that you have committed straight to master, not by merging from your devel branch
[14:09:55] *** Joins: feriman (~feriman@188.163.113.127)
[14:10:06] <Timvde> If you only ever merge from your devel branch, you would never have any merge conflicts
[14:10:11] <osse> http://sprunge.us/k60i3P
[14:10:45] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[14:11:19] <CRCinAU> so in theory, if I fix this conflict, using --no-ff from now on should be ok?
[14:11:25] <osse> CRCinAU: if you got a conflict you would have gotten that anyway
[14:11:45] <osse> yes
[14:11:56] <CRCinAU> this is the problem from just trying multiple things based on different peoples advice hahaha
[14:12:28] <Timvde> CRCinAU: I'd advise you to not test it straight in production :P
[14:12:37] <osse> that's fine. just beware that one piece of advice can interfere with another
[14:13:01] *** Quits: Guest2504 (~bluepenqu@2001:470:69fc:105::829) (Quit: Reconnecting)
[14:13:12] <CRCinAU> thankfully, my code isn't changing - only my 'merge-to-master' script - cos if I don't script that, at some point I'll screw it up again ;)
[14:13:15] <osse> in this case we assumed there were no commits on master, but there were
[14:13:17] *** Joins: Guest2504 (~bluepenqu@2001:470:69fc:105::829)
[14:13:30] <Kill-Anirnals> I just did a commit, then did `git push kill-animals kill-animals/dev`, but it says everything is up to date, and no changes were made. Why am I an idiot?
[14:13:33] <CRCinAU> I think it was just my prior attempt with the --squash
[14:13:56] <osse> yes that could be
[14:13:59] <Kill-Anirnals> or rather, what am I doing wrong?
[14:14:09] <osse> since --squash creates a commit on master
[14:14:32] <osse> Kill-Anirnals: hard to tell, but it's likely you want 'git push kill-animals dev'
[14:14:47] <osse> assuming dev is the name of the local branch you want to push
[14:15:07] <CRCinAU> so now after fixing that conflict, it won't conflict again when doing a merge --no-ff?
[14:15:18] <CRCinAU> cos that's technically a commit to master hahaha
[14:15:19] <osse> correct
[14:15:31] <Kill-Anirnals> osse `error: src refspec dev does not match any` << the origin also has a `dev` bcanch and I think they are conflicting
[14:15:42] <CRCinAU> let me just make a BS change to something to do a test merge and see
[14:15:59] <Kill-Anirnals> `error: failed to push some refs to 'https://github.com/Kill-Animals/sc-im.git'`
[14:16:13] <osse> Kill-Anirnals: then you must explain in english what you want to, ie. what the names of the branches involved are
[14:16:45] <osse> 'git push remotename branchname'  or  'git push remotename srcname:destname'
[14:17:19] <Kill-Anirnals> osse: Sure. My current branch is `feature-576-Search_through_sheets` -- I made some edits, and wanted to share it with a friend so he could help me. I made a commit, and tried pushing it to `dev` on my  github fork.
[14:17:44] <osse> then you want git push kill-animals feature-576-Search_through_sheets:dev
[14:18:04] <Kill-Anirnals> osse: Thank you very much. I swear I am reading the manual
[14:22:05] *** Quits: dimi1947 (~dimi1947@2a02:1388:96:a72e:c95c:20bd:bdf9:41ae) (Ping timeout: 244 seconds)
[14:22:54] <osse> yeah but it has to be the right one
[14:23:12] <osse> You can't just read the Haynes manual for a Ford Mondeo 2014-2016
[14:24:12] <osse> but the text that describes 'git push remotename this-thing-right-here' is a bit heavy
[14:24:40] <osse> just just gotta power through the first few paragrahs
[14:24:40] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[14:25:30] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (Ping timeout: 240 seconds)
[14:25:43] <CRCinAU> eyyyyyy - so after a few test commits with just bogus changes, it seems to be how I want it now....
[14:26:00] <CRCinAU> yeah - only doing one commit per merge still looks dodgy - but the structure is right at least
[14:27:26] <osse> https://haynes.com/en-gb/ford/mondeo/2014-15-petrol-437866
[14:27:51] <osse> TIL the Mondeo is not sold in murica
[14:28:50] <osse> -ish
[14:29:24] *** Guest2504 is now known as blue_penquin[m]
[14:30:42] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[14:32:38] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 272 seconds)
[14:34:27] *** jpic is now known as is_null
[14:38:27] *** Quits: is_null (~jpic@bernadette.objectif-libre.com) (Quit: leaving)
[14:39:01] <CRCinAU> thanks for your help guys - that's made me a happy chappy now :D
[14:39:11] <osse> You drive a Mondeo too?
[14:39:21] <CRCinAU> until I screw it all up again and come back asking for help to unscrew it ;)
[14:39:29] <CRCinAU> nah - they don't have them in Australia
[14:40:32] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[14:41:45] <osse> Wikipedia seems to disagree, unless I misunderstand something. Might be called Fusion
[14:42:54] <osse> ah they don't anymore
[14:43:22] *** Parts: CRCinAU (~CRCinAU@user/crcinau) ()
[14:43:39] *** Joins: id (jeda@hellomouse/dev/cryb.jeda)
[14:43:53] *** Joins: __that__ (~Guest25@195.59.168.125)
[14:43:56] <__that__> Hi all
[14:44:23] <osse> Hi one
[14:45:02] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[14:45:32] <__that__> Someone in my organisation has migrated repos from Git Enterprise to Github.com. As part of that migration some repo's history has been rewritten so somehow now all .csv files are shown on Github.com as LFS rather than the raw content. It is a night mare to switch branches when the VPN on as we have some issues with git LFS.
[14:46:58] <selckin> that doesn't happen 'somehow', someone did that on purpose
[14:47:08] <jast> what a weird thing to do
[14:47:15] <__that__> selckin, sure but wrongly so
[14:47:47] <__that__> I just would like to get the whole thing as it was. What can I do to do so?
[14:48:00] *** Joins: Adoi (~Adoi@user/adoi)
[14:48:00] <__that__> It is a nightmare.
[14:49:13] <jast> well, find a copy of the old repo
[14:49:18] <jast> force push that, tell everyone to re-clone
[14:49:54] <jast> you can change the remote URL in a clone, to more easily re-point it to a new host
[14:50:38] <jast> conceptually: git clone --mirror <old repo URL>; git remote set-url origin <new repo URL>; git push --mirror --force
[14:51:35] <selckin> probably good idea to ask the person that did it why
[14:52:24] <__that__> grrrr it is just frustrating
[14:52:35] <jast> I can imagine
[14:52:47] <jast> is finding the person responsible and applying a cluebat an option? ;)
[14:56:58] *** Joins: cation21 (cation@user/cation)
[14:57:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:57:18] *** Quits: cation (cation@user/cation) (Ping timeout: 264 seconds)
[14:57:32] <__that__> he did it because the original developer had large files in the history of the commits I guess so the person migrating the repo had to convert them to LFS. However he forgot to exclude certain files that have only a couple of KB and they are the ones giving us headaches
[14:58:00] <jast> it's *probably* easiest to re-do the conversion
[14:58:19] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[14:58:22] *** Quits: mhi (~mhinz@46.23.94.209) (Changing host)
[14:58:22] *** Joins: mhi (~mhinz@user/mhi)
[14:58:33] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[14:58:40] <__that__> he actually posted the command he used but I have forgotten where it is
[15:00:33] *** cation21 is now known as cation
[15:00:38] <__that__> I see, this is what he did: *.csv filter=lfs diff=lfs merge=lfs -text
[15:00:50] <__that__> in the .gitattributes
[15:02:25] *** Joins: jpic_ (~jpic@82.142.9.26)
[15:04:32] <__that__> how can I list the lfs-ed files? Just to know which ones I need to repush
[15:04:47] *** Quits: jmcantrell (~weechat@86.106.143.100) (Ping timeout: 268 seconds)
[15:05:47] <selckin> you need to rewrite history, not a simple 'repush'
[15:06:01] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 268 seconds)
[15:07:31] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[15:07:36] <__that__> do you mean that all .csv files along the history of the commits would have been lfs-ed converted?
[15:07:50] <__that__> and therefore I need to rewrite the history for them all?
[15:09:42] *** Joins: hmmmas (~chenqisu1@183.217.200.246)
[15:18:34] *** Joins: pulse (~pulse@user/pulse)
[15:24:34] *** Quits: sangy (~sangy@2001:19f0:5:68eb:5400:1ff:feb6:2224) (Ping timeout: 272 seconds)
[15:25:20] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[15:31:59] *** Joins: GoLiath_ (~GoLiath@80.179.69.241.cable.012.net.il)
[15:32:30] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[15:32:42] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[15:32:47] *** Joins: tejr (~tejr@user/tejr)
[15:34:37] *** Joins: discipulus (~discipulu@user/discipulus)
[15:34:39] *** Joins: andreas303 (~andreas@gateway/tor-sasl/andreas303)
[15:34:59] *** Quits: andreas303 (~andreas@gateway/tor-sasl/andreas303) (Client Quit)
[15:35:26] *** Joins: andreas303 (~andreas@gateway/tor-sasl/andreas303)
[15:35:52] <cbreak> just get the original before the screwup
[15:36:07] *** GoLiath_ is now known as Quizzicalliodd
[15:36:25] <cbreak> and really, why would  you put csv into lfs? Those files are text files
[15:37:43] *** Quizzicalliodd is now known as WTaF
[15:38:50] <__that__> cbreak I just don't get it either
[15:39:21] <__that__> in fact I just did a  git lfs migrate info --everything --top=100 and there are no files beyond 10Mb at all
[15:39:33] *** Quits: hmmmas (~chenqisu1@183.217.200.246) (Quit: Leaving.)
[15:39:33] <__that__> all csv files are 16kb
[15:39:46] <__that__> I mean the largest one is 16KB
[15:43:12] *** Joins: nandeco (~Fernando@2804:14c:145:9ec5::1004)
[15:45:22] *** Quits: nandeco (~Fernando@2804:14c:145:9ec5::1004) (Remote host closed the connection)
[15:47:04] *** Joins: Tomte (~th@p200300db9f18940088b0c354bc14c830.dip0.t-ipconnect.de)
[15:49:17] <__that__> Is this https://dpaste.org/70GA telling me that there are 127 csv files and that the largest is 16KB or that all those files combined are 16KB please?
[15:51:28] <__that__> And if I do git-migrate do everyone need to reclone again?
[15:51:53] <__that__> or yeah, they are going to have to reclone again
[15:56:41] *** Quits: andreas303 (~andreas@gateway/tor-sasl/andreas303) (Remote host closed the connection)
[15:57:11] *** Joins: andreas303 (~andreas@gateway/tor-sasl/andreas303)
[15:57:19] *** Joins: Guest9 (~Guest9@103.250.139.6)
[15:58:33] *** Quits: __that__ (~Guest25@195.59.168.125) (Quit: Client closed)
[16:01:12] *** Joins: teut (~teut@182.69.85.39)
[16:01:22] <teut> Uploaded file: https://uploads.kiwiirc.com/files/712ac92dc65fbf0ed0fe8c51ed4d06a5/image.png
[16:01:47] <teut> I did something and now I m confused with what has happened
[16:02:34] <teut> so I was at   HEAD~1/ or 2       at the `working-on-relative`  branch
[16:03:13] <teut> and I forgetting that I was in detached head made a cimmit
[16:03:17] <teut> o*
[16:03:55] <teut> I looked at SO and it was written that  make a branch in such situation so I created `temp`
[16:03:55] <osse> go on
[16:04:19] <teut> now the tree structure doesnt look like as expected
[16:04:39] <osse> what does 'git rev-list --count temp' say?
[16:04:47] <cbreak> !lol
[16:04:47] <gitinfo> A nifty view of branches, tags, and other refs: git log --oneline --graph --decorate --all
[16:05:10] <teut> 19
[16:05:12] <osse> ah ok
[16:05:25] <osse> the it sounds like you were detached at HEAD and not HEAD~1 or 2
[16:05:28] <osse> *then
[16:05:50] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[16:06:48] <teut> isnt HEAD~2 a detached head?
[16:07:10] <osse> yes
[16:07:29] <teut> the it sounds like you were detached at HEAD and not HEAD~1 or 2   ???
[16:07:35] <osse> shit
[16:08:05] <osse> no, I stand by that
[16:08:22] <osse> it looks like the temp branch comes after working-on-relative.
[16:08:56] <osse> meaning that when you started committing with detached head you started at 077edd9
[16:08:56] <teut> the branch name is the branch pointer right?
[16:09:02] <osse> yes
[16:09:20] <osse> what does git rev-parse temp~2 say
[16:09:39] <teut> 077edd963879ecb45627dcdcad386c88b685ab58
[16:09:52] <teut> ok I was here before
[16:09:56] <osse> yep, that os tje same as work-on-relative
[16:10:31] <osse> ok, maybe I just misunderstood your initial message.
[16:10:37] <osse> Anyway, what do you want to do now
[16:10:51] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[16:12:31] *** Joins: FUZxxl (~fuz@fuz.su)
[16:12:33] <FUZxxl> Hello!
[16:12:51] <FUZxxl> Is there a way to cherry-pick a range of commits such that the cherry pick is squashed into one commit?
[16:13:15] <osse> use --no-commit, then run git commit after
[16:13:21] <FUZxxl> ah thanks
[16:13:44] <teut> Uploaded file: https://uploads.kiwiirc.com/files/aacbebfc74106c8eb4168b5a4e598d27/image.png
[16:14:15] <teut> what has happened after creating the new branch temp?
[16:14:21] <teut> to this structure?
[16:15:01] <osse> you created a new branch pointer that points to 2de8a0b
[16:15:48] <teut> is the  "working-on-reltive"  moved to 077ed?
[16:16:39] <teut> has the*
[16:16:56] <osse> https://i.imgur.com/shRlh4W.png
[16:17:40] <osse> since none of us know exactly what happened, I can't say for sure
[16:17:56] <osse> but nothing at all has happened to working-on-relative since you became detached
[16:18:04] <osse> that much I can say for sure
[16:18:33] <teut> when you commit on deteached head, git just automatically creates a new branch right?
[16:18:41] <teut> an unnamed one
[16:18:55] <osse> no
[16:19:00] <teut> then?
[16:19:05] <osse> it does nothing
[16:19:07] <teut> that was my mental image
[16:19:21] <osse> it just creates commits in the void
[16:19:29] <FUZxxl> osse: ugh... that one does not seem to work right when faced with a merge conflict
[16:19:48] <FUZxxl> I edit the file to fix the conflict, then git add; git cherry-pick --continue
[16:20:06] <ikke> teut: a branch can refer to 2 things in git
[16:20:07] <FUZxxl> but git refuses to continue claiming I have local changes
[16:20:16] <teut> in the void, so that means you will lose it if you switch to lets say master and can be only retrived by the hash
[16:20:24] <ikke> A ref pointer, and divergent history
[16:20:36] <osse> teut: correct, hence the suggestion to create a branch (even if only temporarily)
[16:20:42] <teut> i know the first but I ll have to look for second ikke
[16:21:03] *** Joins: gareppa (~gareppa@user/gareppa)
[16:21:35] <ikke> Divergent history happens naturally when you commit
[16:21:36] <teut> and that temp branch picked the commit from the void?
[16:21:42] <osse> yes
[16:22:05] <osse> because since you just created it, it is also the one that is checked out
[16:22:55] <osse> 'git branch temp' creates a new branch at HEAD, and HEAD is 2de8a0b
[16:24:20] <teut> that commit  aef5b was on the 'relative ' branch
[16:24:29] <teut> how did it jumped to temp?
[16:24:33] <teut> jump*
[16:24:40] <osse> it was not on the relative branch
[16:24:49] <teut> thats peculier
[16:25:25] <osse> My guess is that you had working-on-relative checked out. Then you became detached for some reason (but at the same commit 077edd9) then you made two commits
[16:25:33] <osse> actually. Look at  git reflog HEAD
[16:26:12] <teut> Uploaded file: https://uploads.kiwiirc.com/files/c8e46103231b7422e057f111ba2e7198/pasted.txt
[16:26:52] *** Joins: nyah (~nyah@90.221.186.180)
[16:26:55] <osse> "077edd9 (working-on-relative) HEAD@{6}: checkout: moving from fix-listformsetmodelview to 077edd963879ecb45627dcdcad386c88b685ab58"
[16:26:57] <osse> there
[16:27:14] <teut> I dont remember if I made 2 commits , oh it could have been that I made 2 commits in the void
[16:27:18] <osse> you went from fix-listformsetmodelview but not to working-on-relative, but directly to that commit
[16:29:16] <teut> hmm, looks like I jumped a lot while being at detached head
[16:30:01] <teut> you went from fix-listformsetmodelview but not to working-on-relative, but directly to that commit   <---  but that commit was on that branch
[16:30:09] <osse> yes
[16:30:11] <teut> so isnt it same?
[16:30:13] <osse> no
[16:30:15] *** Parts: robertdfrench (~robert@2600:1700:55c0:9510:4cc0:4b6e:4139:ff1f) (WeeChat 3.0.1)
[16:30:53] <teut> I had that misconception then
[16:30:54] <osse> if you really want to you can find out exactly when this happened by looking at .git/logs/HEAD
[16:31:10] <osse> there is a unix timestamp there
[16:31:18] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[16:31:21] <teut> but I m on windows
[16:31:55] <osse> so what
[16:32:24] <teut> yes, I can see the time
[16:32:29] <teut> thanks osse
[16:34:03] *** Quits: Tomte (~th@p200300db9f18940088b0c354bc14c830.dip0.t-ipconnect.de) (Quit: Leaving)
[16:34:18] <osse> if you meant to create the two commits on working-on-relative you can do this: git checkout working-on-relative; git merge temp; git branch -d temp
[16:34:33] *** Parts: FUZxxl (~fuz@fuz.su) ()
[16:34:41] <osse> and we can pretend this never happened. I promise not to tell anyone
[16:35:26] <teut> yes , I ll do that
[16:40:04] <teut> git log --graph --oneline --all     , what does the --all do?
[16:40:35] <teut> without --all I get no tree
[16:40:51] <osse> same as: git log --graph --oneline master origin/master v1.2.3 temp working-on-relative .... {all the possible branches here}
[16:42:12] <teut> understood, so thats why it was linear for current branch
[16:42:41] <osse> yes, if you only show one branch you will only see a tree if there are merge commits
[16:42:45] *** Joins: solarjoe4 (~solarjoe4@p57ab27a3.dip0.t-ipconnect.de)
[16:42:47] <osse> otherwise it's just a straight line
[16:42:53] *** Joins: masoudd (~masoudd@user/masoudd)
[16:42:59] <teut> Uploaded file: https://uploads.kiwiirc.com/files/a26f154961551efc55482781551895f2/pasted.txt
[16:43:13] <teut> so are here merge conflicts?
[16:43:17] <osse> yeah, you see the * symbols next to each
[16:43:32] <osse> what do you mean
[16:43:35] <teut> what dies the * indicate , isnt it just a commit?
[16:43:42] <osse> yes
[16:43:55] <osse> I mean you see the * as you also do when you see the actual tree
[16:44:55] <teut> oh I didnt realise when I started this branch
[16:45:29] <teut> thats why I got confused, there 's still a long way for me to use git effectively
[16:45:47] *** Joins: arcatech (~arcatech@user/arcatech)
[16:49:09] *** Joins: Guest48 (~Guest48@203.247.149.239)
[16:51:55] *** Quits: Kill-Anirnals (uid481358@id-481358.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[16:53:23] *** Joins: gareppa (~gareppa@user/gareppa)
[16:54:12] *** Joins: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net)
[16:55:53] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[16:56:17] <nyuszika7h> where can I suggest a feature for git? it's something that I find myself wishing for quite often on the daily
[16:56:37] <nyuszika7h> in `git add -p`, I would love to have a "no, don't stage this change, AND discard it so it never asks me again"
[16:57:02] <nyuszika7h> because I end up quitting `git add -p` to commit something and then going back and repeatedly pressing n on changes I've already excluded... I suppose I could open a second terminal window/tab but still
[16:57:57] <nyuszika7h> also, fetching submodules in parallel would be nice... doing `git pull --recurse-submodules` on a project with 18 submodules is not fun
[16:58:26] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[16:58:34] <osse> there is a shortcut for "no, don't stage this change AND don't ask me for the rest of this file". it sometimes helps a bit
[16:58:39] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[16:58:42] <osse> that said...
[16:58:44] <osse> !list
[16:58:44] <gitinfo> [!mailing_list] The mailing list can be reached via git@vger.kernel.org. You don't need to subscribe to the list, you will always be put in cc on reply. Read archives at http://public-inbox.org/git
[16:58:54] <nyuszika7h> yeah I know about that, but that isn't fully what I wanted
[16:59:04] <nyuszika7h> re the second thing: I found a -j option in meantime, nice
[17:03:11] <masoudd> Is there any difference between "git switch existing_branch" and "git checkout existing_branch"?
[17:05:40] <mhi> f
[17:05:43] <mhi> ~
[17:06:30] <osse> masoudd: no
[17:06:39] <masoudd> Thanks
[17:06:40] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:07:00] <mackerman> masoudd: git swtich is branch only, and possibly what you want for a simple branch switch
[17:07:35] <masoudd> Oh I see. as opposed to git checkout where you can give specific commit?
[17:08:21] <mackerman> checkout can do commits and tags and files which is complicated and strange if all you want is to swtich branches.
[17:09:14] <mackerman> But note that for example Pro Get book is from before  switch and  uses checkout effectively.
[17:10:24] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[17:10:26] <mackerman> * Pro Git
[17:15:22] <jast> "git switch" and "git restore" are still marked experimental in the manual. they're basically just the "git checkout" command split in half.
[17:15:30] *** Joins: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt)
[17:16:27] <jast> personally I think "switch" should be marked stable, and "restore" should be torn down and re-imagined to do all of the file-level operations of "git reset" and "git checkout"
[17:16:43] *** jor_ is now known as jor
[17:17:02] <jast> having "git restore" do only the "checkout paths" stuff is a waste of an opportunity to also clean up "git reset"
[17:17:48] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[17:20:52] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[17:21:04] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 268 seconds)
[17:25:01] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[17:26:46] *** Quits: mic4ael (~mic4ael@kolodzie-pc.cern.ch) (Client Quit)
[17:27:09] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[17:28:09] *** Joins: cehteh (~ct@mue-88-130-77-206.dsl.tropolys.de)
[17:28:50] *** Joins: Guest1834 (~Guest18@2a00:23a8:8c5:cf00:18e9:b45:a3:52cd)
[17:28:59] *** Guest1834 is now known as __that__
[17:29:40] <__that__> Hi all
[17:30:20] <cehteh> is there any tool/trick for maintaining branch-local files, that is one can edit/commit a file in a branch, but on merges/changing branches it gets ignored
[17:30:29] *** Quits: dmlloyd (sid331705@redhat/dmlloyd) ()
[17:30:41] *** Joins: dmlloyd (sid331705@redhat/dmlloyd)
[17:30:47] <jast> cehteh: hm, that's not really the way merges are intended to work
[17:30:53] <jast> merges are all-or-nothing
[17:31:18] <jast> if a file exists on only one branch that usually works out, but if you then merge that branch back to somewhere else, the file will come with
[17:31:30] <cehteh> yes i know, its not trivial, i am aware of that, basically this has to be maintained somewhat separately
[17:31:44] <jast> if you can avoid merging that branch elsewhere, it will work
[17:31:57] <jast> for instance, suppose you have a master branch without the file, and a mymod branch with the file
[17:31:57] <osse> aaaand now I'll have "All or nothing" by Small Faces on repeat in my head. Thanks, jast
[17:32:06] <jast> osse: yw
[17:32:07] <cehteh> just wondering .. people do all shits with git, maybe someone did such already
[17:32:28] <jast> now if master is the branch where all of the normal activity happens, you can just merge master to mymod without trouble
[17:32:36] <jast> and use mymod only to modify that one file
[17:32:46] <jast> the other type of approach is using a patch queueing system
[17:32:58] <jast> that exists for git but I don't think any of them are maintained
[17:33:01] <__that__> so when a large file is uploaded to your repo on commit_x and you are now on commit x+i any developer needing to download commit_x and commit_x+i would download that file, however this is a one-off operation correct? So long that large file is no longer modified, subsequent pull won required to download that file again and again, as it happens for
[17:33:02] <__that__> any other file
[17:33:11] *** Quits: andreas303 (~andreas@gateway/tor-sasl/andreas303) (Quit: andreas303)
[17:33:13] <jast> !stgit
[17:33:21] <jast> huh, where did that go
[17:33:49] <jast> .trigger_edit topgit -
[17:33:49] <gitinfo> jast: Okay.
[17:34:08] *** Joins: Monchito (~Monchito@6.red-83-37-245.dynamicip.rima-tde.net)
[17:34:09] <__that__> I am saying that because we have a large 175MB file in the long distant past of our repo but git lfs is creating a lot of troubles with our proxy so I am well willing to pay the price of having to download it only once as such files are no longer in use and won't be
[17:34:19] <Monchito> Hi everyone
[17:34:23] <cbreak> __that__: yes.
[17:34:27] <cehteh> jast: idea here is to have different config files for tests (experimental branches only need to pass compilation, master will run full testsuite)
[17:34:31] <cbreak> every time you clone fresh, you have to get it
[17:34:37] <cbreak> and after that, you have it.
[17:35:19] <Monchito> I'm starting to learn git and github now, but I've my first trouble. Anyone can help me? thanks
[17:35:19] <jast> cehteh: if your merges go from experimental branches to master but never the other way around, that should be fine
[17:35:30] <__that__> sure, I a no worry about that at all. Git LFS would do the same anyway. The pointer is stored but the file needs to be stored too in the lfs cache so at least once need to be downloaded.
[17:35:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:35:37] <jast> that said, that's probably not realistic because new branches will likely branch off of master
[17:35:45] <jast> but there's a trick to do it
[17:35:51] <jast> basically you never work directly on master
[17:36:01] <jast> or, maybe the other way around is easier to understand
[17:36:28] <cehteh> but i think i have an idea how i do that. make a ./testconfigs/ dir ... and within that experimental.conf, master.conf and so on .. and then a non versioned symlink ./test.conf -> ./testconfs/*.conf
[17:36:39] <jast> that's another way to do it, sure
[17:36:51] <jast> many development frameworks have a concept of environments
[17:36:59] <jast> e.g. development vs. staging vs. production
[17:37:14] <cehteh> may even have some rules engine in the hooks which switches these symlinks
[17:37:21] <jast> and you have environment configs in the repo... but which one gets used is decided by out-of-repo config
[17:38:07] <cehteh> well i am fan of having almost everything in the repo, not depending on external configuration
[17:38:41] <jast> yeah, in this case the name of the environment to be used is the only thing that isn't in the repo
[17:38:51] <cehteh> anyway that symlink think will work and can be improved incrementally over time
[17:38:52] <jast> you'd default it to "development" and override it on other types of machines
[17:38:55] <__that__> I am not 100% what *.csv !text !filter !merge !diff means. Could anyone please explain?
[17:38:55] <gitinfo> [!filters] Filters can be very useful for automatically making changes to files at checkout(smudge) and checkin/add(clean). See 'man gitattributes' for more information
[17:38:56] <gitinfo> 'git merge' takes two diverged lines of history (series of commits, e.g. on different branches), and recombines them with a "merge commit" on top. This creates an explicit record of you doing the merge, unless there were no local changes (which does a !fast_forward merge instead). If you don't need to keep a record like that, !rebase may produce easier-to-read history, but the two don't always mix well... see also !merge_vs_r
[17:38:56] <gitinfo> "git diff": show unstaged changes. "git diff --cached": show staged changes. "git diff HEAD": show all uncommitted changes.
[17:39:14] <jast> ignore the bot
[17:39:36] <jast> the basic idea is that it treats .csv files as binary and never tries showing a textual diff or automatically merging anything, or converting line endings
[17:40:58] <__that__> Oh I see that makes sense. Well that is total bull*. The guy who actually migrated my repo has no clue about what the code does with those CVS
[17:42:40] *** Quits: Celelibi (celelibi@user/celelibi) (Read error: Connection reset by peer)
[17:43:21] <__that__> also I just realised that at git checkout large files in the distant past of the history of the repo will all the time be part of that branch snapshot, won't they? -  I mean if no LFS is in place
[17:43:47] <jast> yes, they stay part of the history
[17:44:16] <jast> actually "checking out" the branch (loading the current files into the working directory) doesn't access the old file, but it's still there in the history and you could get at it at any time
[17:44:21] <__that__> in other words those large files are copied over every time one  creates a new branch
[17:44:26] <jast> no
[17:44:36] <jast> it's part of the new branch's history, but no actual copying happens
[17:44:55] <jast> git internally deduplicates objects, so it's only a reference to the old commits (which in turn reference the old file)
[17:45:19] <__that__> so why is then LFS effective? What is the LFS use case then? Sorry I am confused here
[17:45:29] <jast> well, imagine you have a largish file and you update it often
[17:45:50] <jast> let's say it's 200 MB and you update it weekly
[17:46:10] <jast> after two years that's ~20 GB
[17:46:19] <jast> and you will have that data in every single clone
[17:46:36] <ajs124> except if it's shallow
[17:47:04] <jast> yeah, but shallow repos are usually not so nice for development, because you can't easily look through the history
[17:47:14] <__that__> I thought at cloning time irrespective of lfs you had to download the content of the file anyway
[17:47:19] <jast> in a normal clone I can, at any time, see the full history of every file
[17:47:50] <jast> I've never used LFS, but on the git side it works by basically referencing a file that is hosted outside of the repo itself
[17:48:43] *** Joins: zebrag (~chris@user/zebrag)
[17:48:49] <jast> so the file is actually fetched from a  not when you clon
[17:48:55] <jast> whoops
[17:49:20] <jast> ... fetched from a "large file store" not when you clone, but when you checkout a commit/branch, and then only the specific versions you need
[17:49:21] *** Joins: Celelibi (celelibi@user/celelibi)
[17:49:26] <jast> it may or may not locally cache fetched versions
[17:49:32] *** Joins: rsx (~dummy@ppp-188-174-130-150.dynamic.mnet-online.de)
[17:50:53] <__that__> Right that is where I got confused. The first time you push a large file, lfs is going to give Git's DAG a pointer however the file needs to be uploaded to the remote lfs cache anyway. A developer cloning the repo may just download the pointer initially but once the checkout is done, the file needs to be store locally
[17:51:05] <jast> yeah
[17:51:17] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[17:51:21] <__that__> so the advantage then is that it is the lfs cache the one growing vs the git repo, but the bytes transfer in and out are exactly the same.
[17:51:23] <jast> but since Git itself doesn't require the local version, there is no technical requirement of keeping all historical versions locally
[17:51:27] <Monchito>  Hello, I'm starting to learn git and github now, but I've my first trouble. Anyone can help me? thanks
[17:51:45] <nedbat> Monchito: ask! :)
[17:51:45] <jast> for instance if you checkout the most recent versions, you may never need to actually download the 20 older versions of the same file
[17:51:48] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:51:59] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:52:02] <__that__> jast I see
[17:52:07] <Monchito> I created a repository in github
[17:52:38] <Monchito> when I try to make a push my cursor keep blinking, and nothing else happens
[17:52:40] <__that__> jast while if you don't use LFS that large file is always cloned.
[17:52:53] *** Joins: eoli3n (~eoli3n@82-64-112-150.subs.proxad.net)
[17:53:15] <__that__> well I see git lfs a benefit when you have very large files that you are updating often. However when you have medium-size files that are not updated or rarely updated it is just unnecessary
[17:53:26] *** Quits: Guest9 (~Guest9@103.250.139.6) (Quit: Connection closed)
[17:53:42] <jast> __that__: yeah, I tend to agree
[17:53:51] <__that__> which is my case. The largest file I have is 175MB - another matter is how on earth a developer allows that for no reason -. However that file will no longer be used ever
[17:53:57] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[17:54:05] <Monchito> I used:  git remote add origin git@github.com:*****/miPrimeraPrueba.git
[17:54:11] <eoli3n> Hi, i'm trying to setup a post-receive hook on gitolite, which triggers a jekyll site build in a freebsd jail. Following this -> https://jekyllrb.com/docs/deployment/automated/#git-post-receive-hook the script needs to git clone, but i don't want to create a ssh keypair only for this. Is there a way to "git clone" a bare repo directly from the filesystem ?
[17:54:15] <jast> in some cases you can actually rewrite the repo and get rid of the file, but that tends to be a hassle
[17:54:39] <__that__> Yeah, thought about that myself :)
[17:54:55] <Monchito> and then: git push -u origin main
[17:55:17] <eoli3n> ... git clone /path/to/bare/repo
[17:55:37] <jast> eoli3n: yes - either just with an absolute/relative part (which will hardlink the object metadata, saving even more space), or using a file:/// URL (which copies the data on the disk)
[17:56:21] <eoli3n> as I git clone in a jail over a nullfs mount (from ZFS) not sure it will hardlink
[17:56:21] <jast> s/part/path/
[17:56:33] <jast> it will try hardlinking, but there are other mechanisms it can use
[17:56:36] <eoli3n> thanks for the file:// if it fails
[17:56:41] <eoli3n> ok
[17:56:44] <jast> and it will fall back to copying if necessary
[17:56:51] <eoli3n> perfect, lets try
[17:56:55] <jast> for a temporary repo using normal paths is basically always the best choice
[17:57:12] <jast> Monchito: and you get absolutely no output after that?
[17:57:17] <jast> other than the blinking cursor
[17:57:36] <Monchito> that's it
[17:57:39] <jast> hmm
[17:57:49] <jast> does "ssh git@github.com" give you output?
[17:57:56] *** Joins: dimi1947 (~dimi1947@2a02:1388:97:d9f6:a4d2:deb2:4f62:ed69)
[17:58:14] <Monchito> I've used either ssh and https
[17:58:26] <jast> as a shell command I mean
[17:58:35] *** Joins: natrys (~natrys@user/natrys)
[17:59:12] <Monchito> no output, just cursor blinking
[17:59:25] <jast> okay, so it's a network or SSH issue, not an issue with your repo
[17:59:44] <jast> try "ssh -vv git@github.com", see if that gives you any more information
[17:59:45] <Monchito> other commands work good
[18:00:37] <Monchito> this is the first line, afterthat:
[18:00:38] <Monchito> OpenSSH_8.5p1, OpenSSL 1.1.1k  25 Mar 2021
[18:01:59] <eoli3n> jast https://x0.at/4aVm.txt
[18:02:17] *** Quits: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt) (Ping timeout: 252 seconds)
[18:02:35] <jast> eoli3n: okay, that means the clone succeeded, but the default branch from the original repo is set up incorrectly. you can still cd into the repo and "git checkout" the correct branch
[18:02:54] <eoli3n> how to fix in the repo ?
[18:03:27] <Monchito> there are many information bellow
[18:03:43] <jast> eoli3n: I'm not actually sure if there's an official way to do it in bare repos, but basically you can run this inside the bare repo: git symbolic-ref HEAD refs/heads/mybranch
[18:03:54] <jast> Monchito: can you submit the output to a pastebin, e.g. https://upaste.de/
[18:04:12] <eoli3n> thanks jast
[18:04:51] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 268 seconds)
[18:04:53] <jast> I think there's a gitolite custom command to let people change HEAD via SSH, but it's probably not set up by default
[18:05:30] *** Joins: pete443 (~pete@user/pete443)
[18:07:12] <eoli3n> i checked out
[18:07:25] <eoli3n> this has the benefit to be declarative in my script
[18:07:40] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[18:07:44] <jast> you can also pass a branch name as an option to "git clone"
[18:07:50] <jast> -b I think
[18:08:11] *** Quits: __that__ (~Guest18@2a00:23a8:8c5:cf00:18e9:b45:a3:52cd) (Quit: Client closed)
[18:08:44] <eoli3n> lets try
[18:09:03] <Monchito> step by step, I'm very noob, haha
[18:09:28] <Monchito> the branch is correct, because is only the "main"
[18:09:37] *** Joins: sibilant_ (~sibilant@194.59.250.58)
[18:09:37] *** Quits: sibilant_ (~sibilant@194.59.250.58) (Changing host)
[18:09:37] *** Joins: sibilant_ (~sibilant@user/sibilant)
[18:09:57] <eoli3n> jast yes it worked, thanks again
[18:12:15] *** Quits: sibilant (~sibilant@user/sibilant) (Ping timeout: 268 seconds)
[18:14:46] *** Quits: pete443 (~pete@user/pete443) (Quit: ZNC 1.8.2 - https://znc.in)
[18:15:07] *** Joins: pete443 (~pete@dynamic-078-054-099-114.78.54.pool.telefonica.de)
[18:15:36] *** Quits: pete443 (~pete@dynamic-078-054-099-114.78.54.pool.telefonica.de) (Remote host closed the connection)
[18:16:32] *** Joins: pete443 (~pete443@user/pete443)
[18:18:01] *** Joins: Guest7853 (~Guest78@195.59.168.126)
[18:19:05] *** Guest7853 is now known as __that__
[18:19:28] <Monchito> eoli3n, I did upaste.de, and now?
[18:19:36] <eoli3n> not me
[18:19:38] <eoli3n> jast
[18:20:00] <eoli3n> but I think he wants you to paste and give the link here
[18:20:01] <Monchito> sorry
[18:20:15] <eoli3n> to show your problem
[18:20:32] <Monchito> https://upaste.de/xXc
[18:22:24] <jast> hmm, that looks like the connection succeeded this time but you don't have an SSH key set up that GitHub recognizes
[18:22:42] <jast> using GitHub via SSH needs an SSH keyfile
[18:22:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 268 seconds)
[18:23:08] <jast> that said, maybe this was a temporary problem, you could also try the https:// variant again
[18:23:22] <jast> (by "this" I mean the "you don't get any output at all)
[18:23:24] <Monchito> but I used https:  https://github.com/****/miPrimeraPrueba.git, also, and the output was the same
[18:23:50] <jast> the https output said "Permission denied (publickey)"?
[18:24:01] *** gordonfish- is now known as gordonfish
[18:25:39] <Monchito> @jast, the https output said nothing, just cursor blinking, like ssh
[18:25:56] <Monchito> yesterday and today
[18:26:00] <jast> yeah, but does that still happen? because the ssh command did output something this time
[18:26:08] *** Quits: __that__ (~Guest78@195.59.168.126) (Quit: Client closed)
[18:28:24] *** Parts: nicolas17 (~nicolas@KDE/nalvarez) (Konversation terminated!)
[18:29:00] <Monchito> Excuseme,  the problem is with command: git push -u origin main
[18:29:21] <jast> yes, but internally the first thing that does is establish an SSH connection
[18:29:21] *** Joins: dslegends (~dslegends@user/dslegends)
[18:29:28] <Monchito> after this command + enter, the cursor keep blinking in next line
[18:29:31] <jast> and you said that "ssh git@github.com" didn't output anything at all, either, the first time through
[18:29:39] <jast> which indicates that the SSH connection is what was having issues
[18:29:49] <jast> but then when you pasted the output from "ssh -vv ...", you did get output from the server
[18:30:07] <jast> so it looks to me like there was an issue with the server before you did the last attempt, and now it's gone
[18:30:35] <Monchito> let me try it
[18:30:44] <jast> I can't promise anything, though :)
[18:31:05] <Monchito> $ git push -u origin main
[18:31:05] <Monchito> git@github.com: Permission denied (publickey).
[18:31:06] <Monchito> fatal: Could not read from remote repository.
[18:31:06] <Monchito> Please make sure you have the correct access rights
[18:31:07] <Monchito> and the repository exists.
[18:31:14] <jast> right, that's the SSH key issue I mentioned
[18:31:27] <jast> so, the "blinking cursor only" thing was a separate issue on their side that they have fixed
[18:31:40] <jast> you might have more luck with HTTP now if you don't want to set up an SSH key file
[18:33:12] *** Quits: kixx (~kixx@user/kixx) (Read error: Connection reset by peer)
[18:33:35] *** Joins: kixx (~kixx@93.114.96.194)
[18:33:35] *** Quits: kixx (~kixx@93.114.96.194) (Changing host)
[18:33:35] *** Joins: kixx (~kixx@user/kixx)
[18:34:09] *** Quits: Henry151 (~bishop@user/henry151) (Quit: leaving)
[18:35:07] *** Joins: s0ullight (~s0ullight@143.169.223.186)
[18:35:30] <Monchito> then.. I've removed the remote origin form my bash, then add origin with https url and then: git push -u origin main
[18:35:40] <Monchito> cursor blinking, nooooooo, hahahah
[18:35:48] <jast> dang :)
[18:35:56] <jast> well, you can always set up an SSH key and try that
[18:36:58] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:37:01] <Monchito> "well, you can always set up an SSH key and try that"  and... how?
[18:37:44] <jast> https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh
[18:37:53] <s0ullight> imagine two repos: a and b, at some point the content of b was merged in a (a/b) but continued work happened on both repos. how can I compare a/b to b?
[18:38:19] <jast> s0ullight: the simplest way is to add one as a remote to the other and fetch the remote
[18:38:23] <jast> suppose you're in B:
[18:38:39] <Monchito> @jast, thank you so so so much for your time
[18:38:39] <jast> git remote add a <url>; git fetch a; git diff a/branch branch
[18:38:40] *** Quits: zeenk (~zeenk@188.26.30.39) (Quit: Konversation terminated!)
[18:38:48] <jast> Monchito: you're welcome, good luck!
[18:39:13] <s0ullight> hmm
[18:39:20] <s0ullight> lemme try that, thanks
[18:39:41] *** Joins: Henry151 (~bishop@user/henry151)
[18:39:53] *** sgn- is now known as sgn
[18:40:36] *** Quits: Henry151 (~bishop@user/henry151) (Client Quit)
[18:41:41] *** Joins: Henry151 (~bishop@user/henry151)
[18:41:42] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Quit: WeeChat 2.8)
[18:42:06] *** Joins: thiago (~thiago@2601:1c0:4501:635c:4ebf:e21f:b6ec:87cc)
[18:43:49] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[18:44:28] *** Quits: discipulus (~discipulu@user/discipulus) (Quit: WeeChat 3.2)
[18:46:11] *** Quits: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[18:46:13] <s0ullight> jast "git diff a/branch branch" didn't work
[18:48:13] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:53:28] *** Joins: mrquincy_ (~mrquincy_@c-76-113-57-134.hsd1.nm.comcast.net)
[18:53:43] <jast> s0ullight: you did substitute the actual name of your branch? e.g. a/master master
[18:57:01] <Monchito> jast, I'm crying with joy
[18:57:17] <Monchito> It worked at the end, yoohooo. Thanks again
[18:57:47] <Monchito> I've used ssh, after generate a SSH key
[18:57:53] *** Quits: sibilant_ (~sibilant@user/sibilant) (Ping timeout: 268 seconds)
[18:59:59] <s0ullight> jast yes
[18:59:59] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[19:00:55] *** Quits: solarjoe4 (~solarjoe4@p57ab27a3.dip0.t-ipconnect.de) (Quit: Leaving)
[19:01:14] <jast> Monchito: nice!
[19:01:31] <jast> s0ullight: check that the branches have been fetched properly: git branch -r should show all of the branches fetched from all remotes
[19:01:59] <s0ullight> that might be the issue as the branches aren't the masters
[19:02:32] <jast> oh
[19:02:48] <jast> for the last argument, try origin/branch, that should exist and point to wherever you cloned from
[19:06:09] <s0ullight> that seems to have worked
[19:06:25] <s0ullight> can I add > filename.txt to put it all in a text file?
[19:06:33] <jast> absolutely
[19:06:41] <s0ullight> <3
[19:06:41] <osse> indubitably
[19:06:48] <jast> positively
[19:06:51] <s0ullight> thank you very much
[19:06:58] *** Quits: s0ullight (~s0ullight@143.169.223.186) (Quit: Client closed)
[19:07:02] *** Quits: Monchito (~Monchito@6.red-83-37-245.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[19:10:34] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[19:11:05] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[19:17:56] *** Quits: dimi1947 (~dimi1947@2a02:1388:97:d9f6:a4d2:deb2:4f62:ed69) (Quit: Leaving)
[19:18:14] *** Joins: dimi1947 (~dimi1947@2a02:1388:97:d9f6:a4d2:deb2:4f62:ed69)
[19:19:21] *** Joins: anton (~anton@antonmcclure.com)
[19:21:23] *** Quits: Henry151 (~bishop@user/henry151) (Quit: leaving)
[19:22:44] *** Joins: Henry151 (~bishop@user/henry151)
[19:23:19] *** Quits: Henry151 (~bishop@user/henry151) (Client Quit)
[19:24:23] *** Quits: dimi1947 (~dimi1947@2a02:1388:97:d9f6:a4d2:deb2:4f62:ed69) (Quit: Leaving)
[19:24:45] *** Joins: sangy (~sangy@2001:19f0:5:68eb:5400:1ff:feb6:2224)
[19:25:14] *** Joins: dimi1947 (~dimi1947@2a02:1388:97:d9f6:a4d2:deb2:4f62:ed69)
[19:25:42] *** Joins: Henry151 (~bishop@user/henry151)
[19:26:02] *** Joins: kaisyu (uid37155@id-37155.charlton.irccloud.com)
[19:28:00] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:29:08] *** Quits: Henry151 (~bishop@user/henry151) (Client Quit)
[19:29:26] *** Joins: Henry151 (~bishop@user/henry151)
[19:29:51] *** Quits: Henry151 (~bishop@user/henry151) (Client Quit)
[19:33:18] *** Joins: Henry151 (~bishop@user/henry151)
[19:36:49] *** Joins: Benett (~Benett@2a03:4000:1a:7aa::2)
[19:37:51] *** Joins: maroloccio (~marolocci@200.243.99.194)
[19:39:54] *** Quits: jazzy (~jaziz@2600:380:4547:d128:8473:ff3e:752d:860f) (Ping timeout: 264 seconds)
[19:40:11] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[19:40:27] *** Quits: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net) (Quit: Leaving)
[19:46:19] *** Joins: umbramalison (~umbramali@cust71-dsl49.idnet.net)
[19:48:18] *** Quits: dimi1947 (~dimi1947@2a02:1388:97:d9f6:a4d2:deb2:4f62:ed69) (Quit: Leaving)
[19:48:42] *** Quits: cehteh (~ct@mue-88-130-77-206.dsl.tropolys.de) (Ping timeout: 240 seconds)
[19:49:34] *** Joins: maroloccio (~marolocci@200.243.99.194)
[19:49:34] <umbramalison> Hi, 7 years ago I used filter-branch (IIRC) to split a repo up into multiple repos. I'm now being asked to bring these repos back to a single repo. In the process of splitting out each repo, I kept what was left as the last repo. Based on the size of this last repo, I think it still contains hidden history of previous repos. With this, is there a
[19:49:35] <umbramalison> obvious way I should proceed? or will any documentation on joining repos be sufficient?
[19:49:42] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[19:50:54] *** Joins: Torr (~Torr@user/torr)
[19:52:39] <imMute> you could look into 'git subtree merge ...'   it's the opposite of 'git subtree split' which is sorta the same as what you did with filter-branch.
[19:52:41] *** Joins: jlang (~jlang@user/jlang)
[19:54:32] *** Quits: pete443 (~pete443@user/pete443) (Quit: Leaving)
[19:56:02] <umbramalison> isn't git subtree a multi-repo solution? like submodules but very different in their compromises?
[19:56:57] <osse> umbramalison: when you say size do you mean the physical size of the .git dir?
[19:57:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:57:23] <ikke> (talking about physical size refering to bits and bytes :D)
[19:57:50] <umbramalison> well i mean the time it takes to clone! but i'm sure that would correlate with the physical size of the repo.
[19:58:00] <osse> ah ok
[19:58:12] <osse> my theory's out the window then
[19:58:12] *** Quits: madewokherd` (~urk@65-128-250-224.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:58:14] <imMute> umbramalison: it can be.  but you can use split/merge as one-time operations too.  I've done that before (a library started out in one repo, then it split off into a separate repo that two projects pulled in as submodules, then one project died so the other merged it in (so no more submodules))
[19:58:17] <osse> (not a physical window)
[19:58:36] <imMute> osse's idea was defenstrated.
[19:59:03] <umbramalison> i *believe* i have in my multi-repos, a single repo with everything as it was 7 years ago, but dormant...
[19:59:26] <imMute> the split up repos didn't have any changes made to them since the split?
[19:59:59] *** Quits: kixx (~kixx@user/kixx) (Ping timeout: 244 seconds)
[20:00:01] <umbramalison> oh yes they have all moved on a lot. but i was hoping their history would replay
[20:00:38] *** Joins: guardian (~guardian@planet-d.net)
[20:00:51] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[20:01:28] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:01:43] <umbramalison> imMute: i'll try subtree merge too then. only hdd space will constrain my efforts
[20:02:30] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[20:06:16] *** Joins: pete443 (~pete@user/pete443)
[20:06:18] *** Joins: cehteh (~ct@i59F7206F.versanet.de)
[20:13:42] *** Joins: feriman (~feriman@188.163.113.127)
[20:16:00] *** Quits: umbramalison (~umbramali@cust71-dsl49.idnet.net) (Quit: Client closed)
[20:17:09] *** Quits: adlternative (~adl@117.32.216.94) (Remote host closed the connection)
[20:17:41] *** Joins: adlternative (~adl@117.32.216.79)
[20:24:00] *** Joins: kixx (~kixx@2a02:2f09:341d:a000:1b:b1d3:c345:f4d9)
[20:24:00] *** Quits: kixx (~kixx@2a02:2f09:341d:a000:1b:b1d3:c345:f4d9) (Changing host)
[20:24:00] *** Joins: kixx (~kixx@user/kixx)
[20:27:51] *** Quits: kixx (~kixx@user/kixx) (Read error: Connection reset by peer)
[20:28:55] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[20:31:24] <Swahili> Q: I'd like to use the repo commit state to control caching in a process (a CI that fetches data from a remote repo). As such, I thought would be nice to get the latest commit hash, but so far only know how to git log remote > file and then hashing the file
[20:31:37] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:31:54] <Swahili> Ideally, would like to get the HEAD commit of particular branch. Any hints are appreciated ;)
[20:31:59] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 272 seconds)
[20:32:08] <ikke> git rev-parse branch@{upstream}
[20:32:34] <osse> i don't understand the question fully but i'll answer git ls-remote anyway
[20:32:51] <ikke> yeah, I was thinking of ls-remote as well
[20:33:10] <ikke> man git ls-remote
[20:33:10] <gitinfo> the git-ls-remote manpage is available at https://gitirc.eu/git-ls-remote.html
[20:33:34] <Swahili> ikke: osse thanks for looking! The command git rev-parse branch@{upstream} works amazingly well!
[20:33:51] <Swahili> Can I do the same by looking into a remote repo?
[20:33:57] <Swahili> I'll check ls-remote ikke
[20:34:01] <ikke> then you need ls-remote, like osse suggested
[20:34:15] <ikke> git ls-remote origin refs/heads/branchname
[20:34:35] <ikke> (for example)
[20:35:47] <Swahili> ikke: I'd have to git add remote x first, or can I hard type the repo url there?
[20:36:00] <ikke> you can
[20:36:19] <Swahili> Ok I'll check the man :)
[20:36:23] <Swahili> thank you very much!
[20:37:03] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[20:42:15] *** Joins: amanita (~amanita@user/amanita)
[20:42:52] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[20:45:15] *** Quits: amanita_ (~amanita@user/amanita) (Ping timeout: 244 seconds)
[20:46:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:38] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) ()
[20:51:29] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[20:53:53] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[20:58:21] *** Joins: noobineer (~noobineer@64.136.226.130)
[20:58:23] *** Joins: maroloccio (~marolocci@200.243.99.194)
[21:05:43] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[21:06:23] *** Joins: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt)
[21:06:28] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[21:06:42] *** Joins: Guest9 (~Guest9@103.250.139.6)
[21:08:59] *** Joins: Betal (~Beta@user/betal)
[21:09:25] *** Quits: jrm (~jrm@156.34.187.65) (Quit: ciao)
[21:09:48] *** Joins: jrm (~jrm@156.34.187.65)
[21:11:32] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[21:13:33] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[21:14:34] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:14:59] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:16:43] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[21:16:50] *** Joins: Narrat (~omnius@p200300df5f0a430006ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:17:11] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[21:19:43] *** Quits: jlang (~jlang@user/jlang) (Ping timeout: 268 seconds)
[21:20:12] *** Joins: realestninja (~quassel@149.172.159.57)
[21:23:25] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[21:23:38] *** Joins: ahunt (uid230904@id-230904.stonehaven.irccloud.com)
[21:31:08] *** Joins: jlang (~jlang@user/jlang)
[21:34:13] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[21:34:19] <Swahili> made a mistake and committed a private token (I can revoke it), but have done so just locally; how to completely remove the file from history?
[21:34:55] <ikke> Is it the last commit?
[21:35:38] <Swahili> ikke: thanks for looking! was 3 commits ago
[21:35:48] *** Quits: kaisyu (uid37155@id-37155.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:36:04] <ikke> you can use interactive rebase to 'edit' the commit to remove the token
[21:36:14] <Swahili> ikke: good idea! Thanks :)
[21:40:14] *** Joins: gast0n (~g4570n@user/gast0n)
[21:42:18] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:43:19] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Client closed)
[21:47:55] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:49:19] <imMute> Swahili: you should still consider that token compromised and change it out.
[21:49:37] <Swahili> imMute: yeh, was done ;)
[21:51:27] *** Quits: Guest48 (~Guest48@203.247.149.239) (Quit: Client closed)
[21:53:05] *** Quits: jlang (~jlang@user/jlang) (Quit: WeeChat 3.1)
[22:13:11] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:18:18] *** Quits: teut (~teut@182.69.85.39) (Ping timeout: 268 seconds)
[22:21:42] *** Quits: Guest9 (~Guest9@103.250.139.6) (Quit: Connection closed)
[22:27:15] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Quit: chelas! donde estan las chelas?!)
[22:28:14] *** Joins: Guest9 (~Guest9@103.250.139.6)
[22:30:11] *** Quits: WTaF (~GoLiath@80.179.69.241.cable.012.net.il) (Read error: Connection reset by peer)
[22:30:39] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[22:31:33] *** Joins: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il)
[22:39:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:42:07] *** Joins: randallb (~rsbecker@cpe00fc8d49d843-cm00fc8d49d840.cpe.net.cable.rogers.com)
[22:42:59] *** Joins: keypusher (keypusher@user/keypusher)
[22:43:02] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[22:44:02] *** Quits: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:44:29] *** Joins: GoLiath_ (~GoLiath@80.179.69.241.cable.012.net.il)
[22:47:49] *** Joins: teut (~teut@182.69.85.39)
[22:53:18] *** Quits: Guest9 (~Guest9@103.250.139.6) (Quit: Connection closed)
[22:58:06] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[22:58:29] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[23:00:01] *** Joins: maroloccio (~marolocci@200.243.99.194)
[23:10:12] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[23:10:30] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 264 seconds)
[23:12:04] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 268 seconds)
[23:12:11] *** Joins: gast0n_ (~g4570n@user/gast0n)
[23:12:55] *** Quits: rsx (~dummy@ppp-188-174-130-150.dynamic.mnet-online.de) (Quit: rsx)
[23:13:08] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-11-95.play-internet.pl)
[23:13:42] *** Joins: pulse_ (~pulse@user/pulse)
[23:14:32] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[23:15:31] *** Joins: dflick (~dflick@50.224.164.150)
[23:19:32] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-11-95.play-internet.pl) (Quit: Leaving)
[23:25:01] *** Joins: Bilge (~u@2001:41d0:1:e300:0:1:fee1:900d)
[23:25:42] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[23:26:41] *** Quits: noobineer (~noobineer@64.136.226.130) (Quit: Client closed)
[23:33:07] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[23:33:20] *** Quits: ahunt (uid230904@id-230904.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[23:35:37] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:43:29] *** Quits: TomyWork (~TomyLobo@p200300e80f133c009dd79b4b96334160.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:43:35] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[23:49:03] *** Joins: Celeo (~Celeo@2603-8001-3301-2e00-8c77-d35a-f4b2-66eb.res6.spectrum.com)
[23:54:09] *** Joins: Guest50 (~Guest50@c80-217-180-75.bredband.tele2.se)
[23:54:30] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[23:58:41] *** Quits: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt) (Ping timeout: 244 seconds)
