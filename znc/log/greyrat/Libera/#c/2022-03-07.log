[00:00:12] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 240 seconds)
[00:00:55] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[00:02:22] *** Quits: cruncher (~cruncher@79.116.74.120) (Changing host)
[00:02:22] *** Joins: cruncher (~cruncher@user/cruncher)
[00:04:02] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:04:25] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:05:27] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Remote host closed the connection)
[00:05:34] <pragma-> yeah, I seem to have somehow missed or mishandled that case. Fixing soonish.
[00:06:39] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.156)
[00:06:45] <pragma-> <- [*stopped,reason="exited",exit-code="0377"]
[00:09:12] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[00:09:36] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[00:10:48] <bnchs> ok
[00:11:11] *** Quits: frostygoth_ (~frostygot@98.97.80.133) (Ping timeout: 245 seconds)
[00:11:30] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.156) (Ping timeout: 272 seconds)
[00:12:14] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[00:12:19] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[00:13:01] <pragma-> ,cc return 1;
[00:13:03] <candide> pragma-:  exit 01
[00:13:12] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:13:31] <bnchs> ok i didn't know that this was a bug
[00:13:56] <bnchs> ,cc return INT_MAX;
[00:13:58] <candide> bnchs:  exit 0377
[00:14:16] <cousteau> To dobry bot.
[00:14:50] <bnchs> i just thought what if i returned INT_MAX in main function
[00:15:04] <cousteau> bnchs: disclaimer: in Linux et al, the exit code is restricted to the range 0..255
[00:15:21] <bnchs> ok then why is it 377
[00:15:22] <fizzie> 0377 is 255.
[00:15:29] <bnchs> oh
[00:15:31] <fizzie> ,cc printf("%d", 0377);
[00:15:33] <candide> fizzie: Use of uninitialized value in numeric ne (!=) at /usr/local/bin/guest-gdb line 452, <GEN1> line 125.  255
[00:15:38] <pragma-> what
[00:15:44] <fizzie> Well, *that's* not right.
[00:15:54] <pragma-> well it's got the 255 at the end
[00:16:02] <fizzie> Fair.
[00:16:04] <fizzie> ,cc printf("%d", 0377); return 1;
[00:16:06] <candide> fizzie: 255 exit 01
[00:16:17] <fizzie> I guess you broke it for successful returns now. :)
[00:16:38] <strajder> ,cc struct some_type { int i; }; struct some_type* p; struct some_type* vec = calloc(5, sizeof(struct some_type)); p = vec + 2; printf("%d\n", p->i);
[00:16:40] <candide> strajder: Use of uninitialized value in numeric ne (!=) at /usr/local/bin/guest-gdb line 452, <GEN1> line 132.  0
[00:17:19] <strajder> hmm, uninitialized, after calloc?
[00:17:27] <fizzie> That's not about your code.
[00:17:34] <strajder> ah
[00:17:42] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: bertvvvs)
[00:17:47] <pragma-> ,cc printf("%d", 0377);
[00:17:49] <candide> pragma-: 255
[00:17:55] <fizzie> Yay.
[00:17:56] <strajder> anyway, rpaezbas, this is how you could do it
[00:17:59] <cousteau> 99 little bugs in the code, 99 little bugs.  Take one down, patch it around.  255 little bugs in the code.
[00:18:10] <bnchs> well uhh hmmm
[00:18:15] <bnchs> hmmm uhh well
[00:18:27] <bnchs> ,cc return;
[00:18:28] <candide> bnchs: [warning: 'return' with no value, in function returning non-void [-Wreturn-type]  note: declared here]  exit 0256
[00:18:41] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[00:18:42] <cousteau> ,cc return 1025
[00:18:44] <candide> cousteau:  exit 01
[00:19:20] * cousteau is curious about the meaning of 0256 and how much it resembles the decimal value 256, except in octal
[00:19:34] <cousteau> ,cc printf("%d", 0256)
[00:19:36] <candide> cousteau: 174
[00:20:08] <cousteau> ...yeah that number doesn't say anything to me.  Probably the result of UB.
[00:20:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:21:02] <bnchs> ,cc printf();
[00:21:03] <candide> bnchs: error: too few arguments to function 'printf'
[00:21:35] <cousteau> you can use a private conversation with candide to test stuff, by the way :)
[00:21:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:22:03] <bnchs> ,cc char *pointer = getenv("SHELL"); pointer += strlen(pointer); printf(pointer);
[00:22:05] <candide> bnchs: no output: pointer = 0x7fffffffe6db ""
[00:22:10] <bnchs> ok fine
[00:23:36] <cousteau> btw, any string plus its length will always be the empty string
[00:24:21] <nomagno> Uh, what? How does that work?
[00:24:55] <strajder> see: strings in C
[00:25:00] <bnchs> i thought they would return the next env variable
[00:25:04] <cousteau> a string + X = the same string but starting X chars after the end (e.g. "abcde\0" + 2 = "cde\0"
[00:25:11] <bnchs> since they're next by each other
[00:25:20] <bnchs> ,cc char *pointer = getenv("SHELL"); pointer += strlen(pointer) + 1; printf(pointer);
[00:25:22] <candide> bnchs: HISTCONTROL=ignoredups
[00:25:32] <bnchs> skip over the null terminator
[00:25:35] <cousteau> yes but adding the string LENGTH will give you a pointer pointing to the terminating null, not right past it
[00:25:49] <nomagno> OOOH, THE POINTER
[00:25:51] <nomagno> POINTER ARITHMETIC
[00:25:56] <cousteau> ,cc char mem[] = "abcd\0efgh"; puts(mem + strlen(mem))
[00:25:58] <candide> cousteau: No output.
[00:25:58] <nomagno> That's a different thing.
[00:26:06] <cousteau> ,cc char mem[] = "abcd\0efgh"; puts(mem + strlen(mem) + 1)
[00:26:08] <candide> cousteau: efgh
[00:26:11] <nomagno> I was thinking adding the characters
[00:27:01] <cousteau> ...well, strings are usually pointers or arrays
[00:27:20] *** Quits: mahmutov (~mahmutov@37.155.51.74) (Ping timeout: 272 seconds)
[00:27:30] <cousteau> (or rather, represented as pointers or arrays)
[00:27:54] <strajder> when strings are mentioned in C, the mental picture is some chunk of memory ending with a NUL
[00:28:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[00:28:18] <edk> that's what a string is
[00:28:28] <cousteau> it's a SEQUENCE of characters ending in a NUL
[00:28:34] <edk> it's not represented as a pointer or array; it's referred to by a pointer and/or stored in an array
[00:28:51] <cousteau> edk: but that implied using 2 verbs and I was lazy...
[00:29:07] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[00:29:25] *** Quits: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:29:39] <cousteau> strajder: so pretty much, yeah
[00:30:26] <cousteau> but there's this annoying concept separation between the string and the memory containing it
[00:31:31] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:c486:dc7e:8ce4:e6c9) (Read error: Connection reset by peer)
[00:31:36] <cousteau> (an array may CONTAIN a string, or a pointer may point TO a string, and not into a string, or at least that's how I often see the term used)
[00:31:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Quit: WeeChat 3.4)
[00:31:52] <edk> pointing into a string is much more common than pointing to the whole thing
[00:31:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:32:26] <edk> but, as we've just seen, people are lazy about this sort of thing
[00:32:44] <strajder> chunks of memory can contain NULs (and other values of char) inside
[00:32:50] <edk> i don't think there is any difference here between strings and any other kind of datastructure
[00:32:57] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[00:33:05] <cousteau> I thought the phrase was "point TO a string" because, unlike arrays, a string was seen as "a sequence", i.e. "the first character, followed by the ones after it"
[00:33:19] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[00:33:23] <edk> i can't make any sense of that thought
[00:33:26] <cousteau> so pointing to a string means pointing to a character where the string starts
[00:33:43] <edk> in my mind it just means you're too lazy to say "pointing to the first character of a string"
[00:34:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:04] <cousteau> edk: well, I've been living with that thought in my head for several years.  Now you understand why I'm this crazy.
[00:34:13] <edk> indeed
[00:35:03] <edk> i think pointing to the first character of a string is like pointing to the root of a tree or the head of a list
[00:35:10] <cousteau> but yeah I had this whole story set up in my head where there was a secret semantical reason to say "point TO a string" and it had to do with the concept of "sequence"
[00:35:34] <cousteau> interesting.  Would you say that pointing to the head of a list is the same as pointing to a list?
[00:35:47] <edk> not exactly
[00:36:04] <cousteau> I would say it is, because the way you have to point to a list is to point to its head
[00:36:14] <cousteau> and there really isn't a way to point to the whole list
[00:36:22] <edk> right, but there doesn't need to be
[00:36:25] *** Parts: Camilo (~hugh@host-92-0-13-2.as13285.net) (WeeChat 2.8)
[00:36:29] <edk> if you are pointing to the head of a list you could just say that
[00:36:43] <cousteau> (specially if it's not contained inside an array or something)
[00:37:48] <edk> i think we use heads of lists as a convenient way to refer to the list as a whole, and this is generally a useful thing to do with any kind of recursive datastructure, including strings, but i don't think it hurts to be precise about what one is doing there
[00:38:22] <strajder> if you point to a member of a list you are pointing to _some_ list, whose head is currently pointed to
[00:39:26] <strajder> there could be more of the members allocated "behind", but those are not pointed to in a one-way list
[00:39:32] <edk> right
[00:40:08] <strajder> so just "pointing to list" should do it
[00:40:56] <edk> well, in my book one might as well just talk about pointing to a list node; of course there is a list reachable through it
[00:41:19] *** Joins: Red (~Red@41.92-221-233.customer.lyse.net)
[00:41:50] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.4)
[00:41:56] <edk> but i mean, it doesn't matter much. i just find it clearer to think about the element that is pointed to
[00:42:50] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e0b4:325e:50ed:8971)
[00:42:50] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e0b4:325e:50ed:8971) (Changing host)
[00:42:50] *** Joins: skapata (~Skapata@user/skapata)
[00:44:03] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:44:03] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[00:45:20] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:b805:1ee3:3bd1:e74)
[00:46:26] *** Quits: rpaezbas (~rpaezbas@68.242.15.37.dynamic.jazztel.es) (Remote host closed the connection)
[00:46:53] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[00:46:53] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[00:46:53] *** Joins: Teukka (~teukka@user/Teukka)
[00:49:30] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[00:50:25] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:54:39] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[00:56:35] <cousteau> strajder: that's surprisingly similar to pointing to an arbitrary character of a string
[00:58:29] *** Joins: pulse (~pulse@user/pulse)
[00:58:30] *** Joins: frostygoth (~frostygot@104-186-97-153.lightspeed.wchtks.sbcglobal.net)
[00:58:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:00:09] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:02:34] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:02:51] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[01:03:05] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[01:03:57] *** Quits: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[01:04:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[01:04:31] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Client Quit)
[01:10:30] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:20] *** Joins: unlink2 (~unlink@p200300ebcf357f0041bdfa1926ef3549.dip0.t-ipconnect.de)
[01:16:11] *** Quits: cruncher (~cruncher@user/cruncher) (Quit: Leaving)
[01:16:26] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[01:16:38] *** Joins: JanC (~janc@user/janc)
[01:17:46] <pragma-> ,cc puts("hi"); return 42;
[01:17:47] <candide> pragma-: hi  [Exit 42]
[01:17:50] * pragma- nods.
[01:18:00] <pragma-> ,cc return 42;
[01:18:02] <candide> pragma-: Exit 42.
[01:18:17] <Maxdamantus> ,cc puts("Exit 42.");
[01:18:18] <pragma-> All polished up.
[01:18:18] <candide> Maxdamantus: Exit 42.
[01:18:28] <pragma-> That's... that's not... that... what?
[01:18:39] <APic> ,cc puts("Exit Node.")
[01:18:41] <candide> APic: Exit Node.
[01:19:04] <APic> Whoah, even works without Semicolon 😌
[01:19:24] <Maxdamantus> That's because Node has automatic semicolon insertion.
[01:20:09] <bnchs> ,cc puts((char*)(getenv("SHELL") + strlen(getenv("SHELL")) + 1));
[01:20:11] <candide> bnchs: HISTCONTROL=ignoredups
[01:22:57] <cousteau> bnchs: there you go :)
[01:25:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[01:25:47] *** Joins: pilipilihoho (~pilipilih@d154-20-227-112.bchsia.telus.net)
[01:28:25] *** Quits: pilipilihoho (~pilipilih@d154-20-227-112.bchsia.telus.net) (Client Quit)
[01:30:51] *** Quits: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net) (Quit: WeeChat 3.4)
[01:31:08] *** Joins: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net)
[01:31:16] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[01:32:46] *** Joins: Atque (~Atque@user/atque)
[01:34:57] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[01:36:36] *** Quits: bnchs (~bnchs@160.177.100.240) (Remote host closed the connection)
[01:37:29] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 256 seconds)
[01:39:20] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Client Quit)
[01:39:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:42:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[01:43:29] *** Joins: Elladan (~elladan@user/elladan)
[01:43:30] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Client Quit)
[01:45:32] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[01:45:48] *** Joins: pulse (~pulse@user/pulse)
[01:46:57] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[01:47:16] *** Joins: pulse (~pulse@user/pulse)
[01:47:39] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[01:52:02] *** Quits: magla (~gelignite@55d44ff4.access.ecotel.net) (Quit: Stay safe!)
[01:54:01] *** Joins: Lallero (~Lallero@134.0.3.7)
[01:54:22] *** Joins: Nadalle (~elladan@user/elladan)
[01:54:28] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:54:49] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 256 seconds)
[01:54:49] *** Nadalle is now known as Elladan
[01:55:18] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Quit: Leaving)
[02:02:29] *** Quits: Lallero (~Lallero@134.0.3.7) (Read error: Connection reset by peer)
[02:03:56] *** Joins: korg815 (~korg815@user/korg815)
[02:04:00] *** Joins: davros (~davros@host86-183-171-240.range86-183.btcentralplus.com)
[02:04:08] *** Joins: Lallero (~Lallero@134.0.3.7)
[02:06:10] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[02:07:00] *** Joins: davros_ (~davros@host86-183-171-240.range86-183.btcentralplus.com)
[02:07:16] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:12:40] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[02:20:08] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Remote host closed the connection)
[02:21:04] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[02:23:24] *** Quits: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[02:23:29] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:23:50] *** Quits: lispy (~lispy@user/lispy) (Ping timeout: 250 seconds)
[02:25:24] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[02:25:24] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[02:25:24] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[02:25:56] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:26:02] *** Joins: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net)
[02:26:09] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[02:27:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:31:25] *** Joins: nostart (~nostar@107.175.102.52)
[02:33:21] *** Quits: Kawazaki (~Kawazaki@user/Kawazaki) (Ping timeout: 256 seconds)
[02:33:24] *** Quits: pizdets (~pizdets@183.182.114.199) (Ping timeout: 240 seconds)
[02:33:32] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[02:33:37] *** Joins: pizdets_ (~pizdets@183.182.110.37)
[02:33:48] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 240 seconds)
[02:33:55] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 256 seconds)
[02:34:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:33] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[02:36:01] *** Quits: Akuli (~Akuli@82-203-164-15.bb.dnainternet.fi) (Quit: Akuli)
[02:36:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (erbium.libera.chat (Nickname regained by services)))
[02:36:12] *** vinleod is now known as vdamewood
[02:36:43] *** Joins: lispy (~lispy@user/lispy)
[02:37:35] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:38:14] *** Joins: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se)
[02:38:57] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[02:39:34] *** Joins: hiroshi_ (~freedom@151.47.50.105)
[02:39:41] *** Joins: MiLLiYeTC (~farid@5.197.255.175)
[02:40:33] *** Quits: MiLLiYeTC (~farid@5.197.255.175) (Remote host closed the connection)
[02:41:10] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:c731:e273:a007:5879) (Ping timeout: 250 seconds)
[02:43:10] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:8911:efbc:6ba0:c242)
[02:43:31] *** Joins: System_Error (~SystemErr@user/systemerror)
[02:48:26] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[02:50:13] *** Quits: alch (~alch@151.82.79.192) (Read error: Connection reset by peer)
[02:54:09] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:54:21] *** Joins: alch (~alch@151.82.84.15)
[02:55:28] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:8911:efbc:6ba0:c242) (Ping timeout: 250 seconds)
[02:57:10] *** Joins: pulse (~pulse@user/pulse)
[02:57:30] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:7f03:8b0:a81c:56d7)
[02:57:38] *** Quits: vekay (~vekay@user/vekay) (Quit: Leaving)
[03:00:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:00:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:01:48] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:05:03] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-543d-a065-e6d9-3062.res6.spectrum.com) (Remote host closed the connection)
[03:06:56] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[03:08:21] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[03:08:43] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[03:09:17] <epicout> Hi guys, on a typical linux distribution where is stored the libc objects ?
[03:09:34] <epicout> stdio, stdlib etc..
[03:09:54] *** Quits: jrm (~jrm@156.34.173.250) (Ping timeout: 260 seconds)
[03:09:59] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[03:10:01] *** Joins: dfury (sid375135@2a03:5180:f:1::5:b95f)
[03:10:55] <BtbN> objects? You mean headers?
[03:11:24] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[03:11:30] *** Quits: hiroshi_ (~freedom@151.47.50.105) (Quit: hiroshi_)
[03:11:33] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[03:12:22] <epicout> oh fuck yeah they are headers actually mb
[03:13:38] <BtbN> Usually somewhere in /usr/include
[03:13:39] *** Parts: dfury (sid375135@2a03:5180:f:1::5:b95f) ()
[03:13:44] <BtbN> if in doubt, just use find
[03:14:42] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: bertvvvs)
[03:15:04] *** Joins: jrm (~jrm@156.34.173.250)
[03:16:58] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:21:27] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:22:04] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[03:25:50] *** Joins: pilipilihoho (~pilipilih@d154-20-227-112.bchsia.telus.net)
[03:26:05] *** Quits: pilipilihoho (~pilipilih@d154-20-227-112.bchsia.telus.net) (Changing host)
[03:26:05] *** Joins: pilipilihoho (~pilipilih@user/pilipilihoho)
[03:26:55] *** Quits: Lallero (~Lallero@134.0.3.7) (Quit: Leaving)
[03:27:49] *** Quits: pilipilihoho (~pilipilih@user/pilipilihoho) (Client Quit)
[03:28:20] *** Joins: pilipilihoho (~pilipilih@user/pilipilihoho)
[03:29:12] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:30:16] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:34:02] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:34:53] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:39:29] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[03:40:48] *** Joins: rgrinberg (~textual@2806:101e:7:134:4c27:f276:4d75:f0f0)
[03:41:28] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:42:39] *** Joins: wroathe (~wroathe@user/wroathe)
[03:45:33] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[03:47:23] *** Joins: vicfred (~vicfred@user/vicfred)
[03:49:14] *** Quits: oriba (~oriba@dynamic-078-054-198-245.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:50:04] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[03:50:24] *** Quits: ymwm__ (~yingmanwu@27.153.167.245) (Ping timeout: 256 seconds)
[03:53:10] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 272 seconds)
[03:53:27] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[03:53:38] *** Quits: pilipilihoho (~pilipilih@user/pilipilihoho) (Quit: See ya!)
[03:53:45] *** Joins: slimbo (~qooupapn@216.118.151.186)
[03:54:11] *** Joins: ymwm__ (~yingmanwu@27.153.167.245)
[03:55:36] *** Joins: slimbo_ (~devnull@216.118.151.186)
[03:56:30] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[03:59:03] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[03:59:33] *** Quits: rgrinberg (~textual@2806:101e:7:134:4c27:f276:4d75:f0f0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:02:31] *** Quits: slimbo (~qooupapn@216.118.151.186) (Remote host closed the connection)
[04:04:08] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:f9d5:fa75:afb0:4e06)
[04:04:15] *** Quits: Luke- (~ldm@hacksoc/member) (Changing host)
[04:04:15] *** Joins: Luke- (~ldm@hacksoc/alumni/ldm)
[04:07:52] *** Joins: Soni (~quassel@autistic.space)
[04:08:14] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:08:30] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:10:55] *** Joins: Goodbye_Vincent (~Goodbye_V@freakshells.net)
[04:11:47] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[04:14:01] *** Joins: constxd_ (~brad@142.134.78.128)
[04:16:04] *** Joins: korg815 (~korg815@user/korg815)
[04:16:40] *** Joins: rgrinberg (~textual@2806:101e:7:134:4c27:f276:4d75:f0f0)
[04:17:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:17:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:17:44] *** Joins: wroathe (~wroathe@user/wroathe)
[04:20:15] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:30:04] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:31:36] *** Joins: lispy (~lispy@user/lispy)
[04:31:54] *** Joins: Wulf (~Wulf@user/wulf)
[04:35:32] *** Joins: ejjfunky (~ejjfunky2@125.164.22.70)
[04:42:06] *** Joins: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com)
[04:42:56] *** sweetsymph_ is now known as thelma
[04:51:21] *** Quits: acerbic (~acerbic@cs-xdata-50-86-51-236.cspire.com) (Read error: Connection reset by peer)
[04:52:07] *** Joins: vysn (~vysn@user/vysn)
[04:53:37] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Remote host closed the connection)
[04:54:13] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[04:55:05] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Remote host closed the connection)
[04:57:00] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 240 seconds)
[04:57:57] *** Joins: frost (~frost@user/frost)
[05:01:31] *** immibis_ is now known as immibis
[05:02:36] *** Quits: pert (~pert@fsf/member/pert) (Ping timeout: 240 seconds)
[05:03:22] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[05:04:43] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[05:05:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[05:06:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:07:09] *** Joins: constxd_ (~brad@142.134.78.128)
[05:11:38] *** Quits: thelma (uid509475@id-509475.lymington.irccloud.com) ()
[05:11:42] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[05:12:25] *** Joins: flynn (~mcbloch@user/flynn)
[05:12:49] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-1c52-7a09-75d4-5be2.res6.spectrum.com)
[05:16:44] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[05:17:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[05:17:31] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[05:19:09] *** Joins: pert (~pert@2603:900a:ff00:1c:5de7:3403:ec7b:d597)
[05:19:27] *** Quits: pert (~pert@2603:900a:ff00:1c:5de7:3403:ec7b:d597) (Remote host closed the connection)
[05:20:56] *** Joins: frost (~frost@user/frost)
[05:26:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[05:27:00] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:29:18] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[05:29:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[05:31:02] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[05:31:16] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[05:36:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[05:36:24] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[05:37:17] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 240 seconds)
[05:38:34] *** Joins: frost (~frost@user/frost)
[05:40:11] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[05:42:07] *** Joins: slimbo (~qooupapn@user/slimbo)
[05:42:26] *** Joins: alex11 (~alex11@user/alex11)
[05:43:10] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[05:43:40] *** Quits: slimbo_ (~devnull@216.118.151.186) (Quit: leaving)
[05:45:08] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[05:45:19] *** Joins: bebyx1 (~Thunderbi@user/bebyx)
[05:47:37] *** bebyx1 is now known as bebyx
[05:48:09] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[05:51:40] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Ping timeout: 256 seconds)
[05:52:09] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[05:52:57] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:55:25] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[06:01:40] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:02:19] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Max SendQ exceeded)
[06:02:49] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:04:01] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Client Quit)
[06:04:21] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:07:40] *** Joins: constxd_ (~brad@142.134.78.128)
[06:10:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:10:19] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Read error: Connection reset by peer)
[06:10:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[06:10:54] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Client Quit)
[06:11:05] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:16:45] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:17:17] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[06:17:39] *** Joins: zer0x (~zer0x@1.55.170.131)
[06:18:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:18:50] *** Joins: Inline__ (~Inline@p200300cd4708ce00867bc6986b1102af.dip0.t-ipconnect.de)
[06:19:20] *** Joins: pulse (~pulse@user/pulse)
[06:21:11] *** Quits: Inline (~Inline@p200300cd473dda00d9049d80a70df8bf.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:21:18] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[06:28:12] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 240 seconds)
[06:29:06] *** Joins: frost (~frost@user/frost)
[06:32:18] <constxd_> kings
[06:33:32] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:39:01] <pony> quings
[06:39:42] *** Joins: fe23 (~fe23@2409:8a34:466:6010:61c5:f65d:3802:922d)
[06:40:52] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[06:42:41] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:f9d5:fa75:afb0:4e06) (Quit: Textual IRC Client: www.textualapp.com)
[06:49:44] *** Joins: korg815 (~korg815@user/korg815)
[06:49:45] *** Quits: alch (~alch@151.82.84.15) (Read error: Connection reset by peer)
[06:54:24] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:45] *** Joins: alch (~alch@151.82.94.166)
[06:54:56] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 272 seconds)
[06:56:30] <constxd_> is it ub for a pthread to exit while holding a mutex lock
[06:57:23] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:00:38] *** Quits: boB_K7IQ (~boB_K7IQ@c-67-161-97-77.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[07:01:38] *** Joins: boB_K7IQ (~boB_K7IQ@c-67-161-98-47.hsd1.wa.comcast.net)
[07:01:48] <constxd_> nvm im retarded
[07:06:23] <wroathe> I self identify as a peasant
[07:06:28] *** Quits: boB_K7IQ (~boB_K7IQ@c-67-161-98-47.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[07:08:00] <lispy> i identify as (std::size_t) -1
[07:08:36] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:08:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:09:41] <constxd_> started 250mg/week test e
[07:09:48] <constxd_> enhances programming productivity for sure
[07:09:56] *** Quits: Nahra` (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[07:10:03] <pony> 250mg what?
[07:10:19] <constxd_> test enanthate
[07:10:58] <pony> ok
[07:12:06] <constxd_> pony: u working on anything king
[07:12:36] <pony> just some data structures
[07:12:45] <constxd_> did u ever do the k&r histogram
[07:12:46] <pony> linked list and hashtable
[07:12:50] <pony> and playing around with raylib
[07:12:51] <pony> yes
[07:12:55] <constxd_> based
[07:13:13] <pony> I did it years ago but lost the work :( I was quite proud of it
[07:13:44] <pony> going to read K&R2 in its entirety soon I hope, if I can find the motivation
[07:14:10] <constxd_> very good
[07:14:40] <constxd_> i should start re-doing some of the exercises
[07:15:09] <constxd_> pragma-: u up king
[07:15:19] <pony> it's more the explanations I'm interested in but yeah
[07:15:24] <pony> the exercises make you better too
[07:15:31] <pony> rn I'm reading Pro Git
[07:15:35] <pony> going to read K&R2 after that.
[07:15:47] <constxd_> nice i should read pro git maybe
[07:18:08] <pony> yeah
[07:22:35] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 240 seconds)
[07:27:36] *** Joins: fstd_ (~fstd@xdsl-87-79-45-162.nc.de)
[07:28:54] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[07:30:50] *** Quits: fstd (~fstd@xdsl-78-34-125-135.nc.de) (Ping timeout: 256 seconds)
[07:35:28] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:38] *** Quits: lispy (~lispy@user/lispy) (Ping timeout: 272 seconds)
[07:41:48] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 240 seconds)
[07:43:36] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[07:44:17] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[07:59:12] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[08:01:26] *** Quits: zer0x (~zer0x@1.55.170.131) (Ping timeout: 256 seconds)
[08:02:11] *** Joins: hinata (~hinata@2409:4042:e8e:2dda:8d8:4e45:bea:a5c)
[08:06:04] *** Joins: semeion (~semeion@user/semeion)
[08:09:16] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90)
[08:10:18] *** Quits: freakazoid333 (~matt@35.136.233.205) (Ping timeout: 272 seconds)
[08:13:48] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:15:46] *** Joins: drbeco (~beco@user/beco)
[08:16:02] *** Quits: drbeco (~beco@user/beco) (Client Quit)
[08:18:50] *** Quits: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[08:19:22] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[08:19:51] *** Joins: constxd_ (~brad@142.134.78.128)
[08:21:10] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[08:23:13] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[08:28:08] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[08:29:49] <anshupatia> pony: what K&R? The C Programming Language?
[08:30:01] <pony> yeah
[08:30:22] <anshupatia> I've read that one
[08:30:35] <anshupatia> it's a classic
[08:31:30] <pony> I read some of it a while back
[08:31:36] <pony> want to do it properly
[08:31:50] <pony> there's also a copy of Effective C sitting on my reading desk
[08:33:20] <anshupatia> some of the outdated stuff like getchar() just instructs the computer to wait... .-.
[08:36:41] *** Joins: Satin (uid193953@user/Seten)
[08:37:34] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[08:39:24] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[08:42:36] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[08:48:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:48:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[08:57:48] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:58:26] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[08:59:58] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90) (Read error: Connection reset by peer)
[09:00:05] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:00:38] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90)
[09:01:19] <Satin> would a function declaration like int function_name(int x, int y) {
[09:01:29] <Satin> count as constant time, when trying to calculate runtime?
[09:03:04] *** Inline__ is now known as Inline
[09:03:32] *** Quits: rgrinberg (~textual@2806:101e:7:134:4c27:f276:4d75:f0f0) (Ping timeout: 252 seconds)
[09:08:25] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[09:08:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:08:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:08:41] *** Joins: wroathe (~wroathe@user/wroathe)
[09:09:58] <kurahaupo> Satin: A function declaration doesn't have time complexity. The body of a function may have any such complexity.
[09:10:18] *** Joins: kts (~kts@103.73.237.247)
[09:10:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:10:22] <Satin> thank you
[09:10:48] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[09:11:33] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[09:12:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:12:36] <kurahaupo> Satin: calling a function usually takes time that's proportional to the size of the arguments and the size of the return value, and since that's fixed (arrays are not copied), then that's constant time as well
[09:13:23] *** Joins: masoudd (~masoudd@user/masoudd)
[09:14:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:14:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:14:25] *** Joins: wroathe (~wroathe@user/wroathe)
[09:16:14] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[09:21:33] *** Joins: ironman (~ironman@49.36.55.91)
[09:23:03] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:27:05] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[09:27:51] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[09:31:23] *** Quits: foul_owl (~kerry@23.82.193.89) (Quit: WeeChat 2.3)
[09:33:32] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[09:34:55] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[09:35:58] *** Joins: tejr (~tejr@user/tejr)
[09:46:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:46:17] *** Joins: rgrinberg (~textual@2806:101e:7:134:b8e9:103c:7bf9:67b)
[09:47:50] *** Quits: rgrinberg (~textual@2806:101e:7:134:b8e9:103c:7bf9:67b) (Client Quit)
[09:48:32] *** Joins: Burgundy (~NA@86.121.143.206)
[09:52:35] *** Joins: malloy (~jimery@116.30.220.175)
[09:54:54] *** Joins: XRODRiGO (xrodrigo@softbank126130110109.bbtec.net)
[09:57:02] *** Quits: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[09:57:33] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[09:57:58] *** Joins: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net)
[09:59:39] *** Joins: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[10:02:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:08:54] *** Joins: ekathva (~ekathva@n14jq7u7k2ywvrb09-1.v6.elisa-mobile.fi)
[10:10:25] *** Joins: rgrinberg (~textual@2806:101e:7:134:b8e9:103c:7bf9:67b)
[10:16:20] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:19:07] *** Quits: ejjfunky (~ejjfunky2@125.164.22.70) (Quit: Leaving)
[10:22:23] *** Joins: zer0x (~zer0x@1.55.170.131)
[10:33:09] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:33:26] *** Joins: tejr (~tejr@user/tejr)
[10:33:35] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[10:35:49] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[10:38:08] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[10:38:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:38:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:41:37] *** Quits: sebito91 (~sborza@45.55.74.66) (Quit: laterz, coffee...)
[10:41:50] *** Joins: sebito91 (~sborza@45.55.74.66)
[10:44:18] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:47:17] *** Quits: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[10:48:04] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[10:49:24] *** Joins: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl)
[10:51:57] *** Quits: alch (~alch@151.82.94.166) (Ping timeout: 240 seconds)
[10:53:10] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:54:07] *** Joins: alch (~alch@151.82.53.247)
[10:56:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[10:57:43] *** Joins: bug2000 (~bug@user/bug)
[10:58:26] *** imm__ is now known as imm_
[10:58:42] *** Quits: Nex8192_ (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[10:58:43] <bug2000> Hi. I'm having hard time to find clear cut answer, but is = {0}; equivalent to memset as of c11? I'm still trying to figure what happens with the padding. In general, when should I prefer each of them?
[10:58:58] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[11:00:21] <dave0> i think the wording is something like it is initialized like you would if you had included `static` in the declaration
[11:00:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:01:20] <dave0> bug2000: it's nearly but not quite memset ... memset(..0...) is all-bits-zero but c doesn't guarantee that for pointers or float ... but in reality it works
[11:02:13] <bug2000> Which raises the question of which is more correct.
[11:02:40] <dave0> initialized like a static variable would be is more correct
[11:02:53] <dave0> but if you want a running program, memset will work
[11:03:00] <dave0> there's just too much code that would break
[11:03:47] <dave0> that would break if memset didn't work
[11:03:50] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.55)
[11:04:22] <bug2000> True, but the question is if it works with = {0}; Because if it does, then my C11 moves to that.
[11:04:34] <dave0> ={0} always works
[11:04:50] <bug2000> Awesome! Thanks!
[11:04:56] <dave0> :-) no problem
[11:05:12] <bug2000> Though your always is c11+. I think the static part was only added there.
[11:05:52] <dave0> ={0} has worked since c90
[11:05:56] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:06:03] <bug2000> Really? With padding?
[11:06:23] <dave0> i'm not sure what they say about padding
[11:06:39] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[11:06:48] <dave0> are you dumping a raw struct to a file?
[11:06:57] <dave0> then you might worry about padding
[11:07:02] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:07:11] <dave0> or you hashing the raw bytes of a struct?
[11:07:55] <bug2000> Thinking of poor man polymorphism of C. Right now I have the socket API in mind, but consider all the other structs that are used with syscalls.
[11:07:56] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[11:07:56] *** Joins: namkeleser (~namkelese@101.175.104.107)
[11:08:10] <bug2000> The places where I have no idea what kind of voodoo is done on the other side.
[11:08:31] <bug2000> And since all the examples ever use memset, I'm trying to figure if it is requirement or just not updated to C90.
[11:09:25] <namkeleser> A quick question, N-tier architecture is also called multi tier so does that means all arc ex 2-tier , 3-tier are n-tier?
[11:09:25] <namkeleser> my assignment ques is ⦁    Discuss the N-tiered architectural model of JAVA EE with diagram.
[11:09:26] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:09:26] <namkeleser> so i just need to write about JAVA EE arch , just?
[11:09:26] <namkeleser> https://docs.oracle.com/cd/E19263-01/817-5764/architecture.html
[11:09:27] <namkeleser> is this the one im looking for?
[11:09:27] *** ChanServ sets mode: +o candide
[11:09:28] <bug2000> Hashing doesn't sound smart, since assignment isn't going to preserve padding. At least as far as I can glean from the spec.
[11:09:29] *** candide sets mode: +b *!~namkelese@101.*
[11:09:41] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:10:15] <bug2000> namkeleser, You just banned yourself for pasting too many lines. Also Java? In #c?
[11:10:43] <bug2000> Though 2-tier, 3-tier are n-tier where n=2, n=3.
[11:10:51] *** Quits: kts (~kts@103.73.237.247) (Read error: Connection reset by peer)
[11:10:58] *** candide sets mode: -b *!~namkelese@101.*
[11:12:44] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:12:59] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[11:13:08] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90) (Remote host closed the connection)
[11:13:43] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-bd92-f30c-7395-6f90.inf6.spectrum.com)
[11:14:36] *** Quits: ironman (~ironman@49.36.55.91) (Ping timeout: 272 seconds)
[11:14:50] <bug2000> dave0, https://www.anmolsarma.in/post/stop-struct-memset/ says that for sockets api, designator syntax is fine. but won't set padding to 0? I'm not sure. As we saw for all initializer it causes static which means it will zero the padding.
[11:14:55] <bug2000> the internet is full of confusing data.
[11:15:38] <dave0> why are you so concerned with padding?
[11:16:04] *** Joins: kts (~kts@103.73.237.247)
[11:16:05] <bug2000> ? I just wrote it above.
[11:16:13] <bug2000> <bug2000> And since all the examples ever use memset, I'm trying to figure if it is requirement or just not updated to C90.
[11:18:30] <dave0> it's not a requirement.. ={0} is correct and will always work.. memset is less correct but in practise it will always work too
[11:18:35] <dave0> it comes down to style
[11:18:57] *** Joins: mrig (~mrig@user/mrig)
[11:19:03] <dave0> ={0} is 4 characters, that's what i would pick
[11:19:15] <bug2000> So would I. The internet never got updated.
[11:19:17] <bug2000> Thank you very much :)
[11:19:32] <dave0> okay no worries
[11:20:08] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:20:33] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[11:20:56] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:21:09] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[11:24:13] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[11:25:12] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[11:26:00] *** Quits: ncrowl (~ncrowl@83-233-50-39.cust.bredband2.com) (Ping timeout: 272 seconds)
[11:26:35] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[11:27:15] *** Joins: mrig (~mrig@user/mrig)
[11:27:30] *** Joins: freddietilley (~freddieti@217.119.232.174)
[11:27:30] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8035:5627:13f2:2efa)
[11:28:36] *** Quits: freddietilley (~freddieti@217.119.232.174) (Client Quit)
[11:29:06] *** Quits: rgrinberg (~textual@2806:101e:7:134:b8e9:103c:7bf9:67b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:29:10] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[11:31:00] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:32:15] *** Joins: ncrowl (~ncrowl@94-255-226-39.cust.bredband2.com)
[11:32:18] *** Joins: teepee_ (~teepee@openscad/teepee)
[11:32:35] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 252 seconds)
[11:32:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[11:32:55] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[11:32:57] *** teepee_ is now known as teepee
[11:34:46] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:35:44] *** Joins: aiden (~iceneko@user/iceneko)
[11:35:57] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[11:36:36] *** Quits: bparker (~nobody@user/bparker) (Ping timeout: 245 seconds)
[11:37:56] *** Joins: aradesh (~aradesh@user/aradesh)
[11:40:03] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Ping timeout (120 seconds))
[11:40:17] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[11:40:37] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:41:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[11:41:41] *** Joins: krychu (~krychu@static.152.151.251.148.clients.your-server.de)
[11:41:49] *** Quits: krychu_ (~krychu@static.152.151.251.148.clients.your-server.de) (Ping timeout: 240 seconds)
[11:41:58] *** Quits: kts (~kts@103.73.237.247) (Quit: Konversation terminated!)
[11:43:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:43:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:44:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[11:45:31] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[11:45:44] *** Joins: Rounin (~david@84.212.130.215)
[11:45:48] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:46:48] *** Joins: lleo (~leo@31-161-159-124.mobile.kpn.net)
[11:48:27] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:49:33] *** Joins: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se)
[11:56:35] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:59:25] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[11:59:44] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 250 seconds)
[12:00:12] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 272 seconds)
[12:00:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:00:38] *** Joins: mrig (~mrig@user/mrig)
[12:00:38] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[12:01:24] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:01:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:02:11] *** Quits: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[12:02:27] *** Quits: lwhjp (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf) (Read error: Connection reset by peer)
[12:03:12] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 250 seconds)
[12:09:46] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[12:10:20] *** Quits: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[12:11:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:12:45] *** Joins: foul_owl (~kerry@23.82.193.87)
[12:15:46] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 245 seconds)
[12:18:47] *** Quits: ymwm__ (~yingmanwu@27.153.167.245) (Remote host closed the connection)
[12:19:01] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[12:19:16] *** Joins: ymwm__ (~yingmanwu@27.153.167.245)
[12:19:24] *** Quits: haniaF (~haniaF@79.191.94.234.ipv4.supernova.orange.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[12:19:40] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[12:19:52] *** Joins: haniaF (~haniaF@79.191.94.234.ipv4.supernova.orange.pl)
[12:26:26] *** Joins: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au)
[12:29:04] *** Joins: masoudd (~masoudd@user/masoudd)
[12:29:08] *** Quits: pizdets_ (~pizdets@183.182.110.37) (Quit: pizdets)
[12:29:47] *** Joins: pizdets (~pizdets@183.182.110.37)
[12:29:58] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[12:34:33] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[12:40:32] *** Quits: hinata (~hinata@2409:4042:e8e:2dda:8d8:4e45:bea:a5c) (Quit: Leaving)
[12:42:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[12:42:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:49:18] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.55) (Ping timeout: 256 seconds)
[12:53:09] *** aiden is now known as iceneko
[12:56:49] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:58:33] *** Joins: random-nick (~random-ni@87.116.176.196)
[13:01:40] *** Joins: Red_ (~Red@41.92-221-233.customer.lyse.net)
[13:02:02] *** Quits: Red (~Red@41.92-221-233.customer.lyse.net) (Killed (NickServ (GHOST command used by Red_)))
[13:02:06] *** Red_ is now known as Red
[13:05:12] *** Joins: Klinda (~superleag@user/klinda)
[13:06:38] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:07:56] *** Joins: rkta__ (~rkta@2001:4ba0:cafe:eaf::1)
[13:08:25] *** Quits: rkta__ (~rkta@2001:4ba0:cafe:eaf::1) (Client Quit)
[13:08:40] *** Joins: lwhjp (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf)
[13:09:18] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:b805:1ee3:3bd1:e74) (Read error: Connection reset by peer)
[13:09:31] *** candide sets mode: -o candide
[13:09:33] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584)
[13:18:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[13:31:59] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[13:32:34] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:34:12] *** Quits: marshmallow (~marshmall@94.177.224.11) (Changing host)
[13:34:12] *** Joins: marshmallow (~marshmall@user/marshmallow)
[13:37:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[13:40:10] *** Joins: noteness (~noteness@user/noteness)
[13:46:07] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:46:49] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[13:50:36] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584) (Ping timeout: 240 seconds)
[13:50:51] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584)
[13:51:04] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[13:52:26] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[13:52:28] <Dean> hello
[13:53:07] *** Joins: unknow (~i.am@user/marlboro)
[13:53:10] *** Joins: seninha (~chatzilla@user/seninha)
[13:59:55] *** Joins: ironman_ (~ironman@49.36.55.91)
[14:00:21] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Remote host closed the connection)
[14:02:12] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[14:04:32] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[14:05:37] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:05:44] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[14:05:57] *** Quits: ymwm__ (~yingmanwu@27.153.167.245) (Ping timeout: 240 seconds)
[14:10:12] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-24-41.pa.qld.optusnet.com.au)
[14:11:08] <constxd_> Dean: hey king
[14:12:34] *** Quits: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[14:13:29] *** Joins: hinata (~hinata@2409:4042:e8e:2dda:8d8:4e45:bea:a5c)
[14:14:13] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.4)
[14:16:39] *** Quits: lleo (~leo@31-161-159-124.mobile.kpn.net) (Quit: butterflies in 1024 bits mobius trumpets)
[14:16:58] *** ironman_ is now known as ironman
[14:18:52] *** Joins: user24037 (~user47239@user/user282069)
[14:19:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:22:47] *** Quits: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk) (Quit: ZNC 1.8.2 - https://znc.in)
[14:23:15] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[14:30:44] *** Quits: iceneko (~iceneko@user/iceneko) (Ping timeout: 256 seconds)
[14:31:53] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8035:5627:13f2:2efa) (Quit: Textual IRC Client: www.textualapp.com)
[14:32:44] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:37:41] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[14:40:07] *** Joins: kts (~kts@103.73.237.247)
[14:40:30] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584) (Remote host closed the connection)
[14:46:10] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:47:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 272 seconds)
[14:47:25] *** Joins: cursey (~cursey@user/cursey)
[14:47:59] *** Joins: iceneko (~iceneko@user/iceneko)
[14:48:55] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[14:49:05] *** Quits: kts (~kts@103.73.237.247) (Quit: Konversation terminated!)
[14:49:55] *** Quits: alch (~alch@151.82.53.247) (Read error: Connection reset by peer)
[14:50:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:53:54] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[14:54:27] *** Joins: alch (~alch@mi-18-20-101.service.infuturo.it)
[14:54:33] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[14:55:21] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[15:03:15] *** Joins: Vollstrecker (~werner@p200300d92f1667002e4d54fffe5896ba.dip0.t-ipconnect.de)
[15:06:49] *** Quits: bug2000 (~bug@user/bug) (Remote host closed the connection)
[15:09:04] *** Parts: Vollstrecker (~werner@p200300d92f1667002e4d54fffe5896ba.dip0.t-ipconnect.de) (Konversation terminated!)
[15:09:04] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.55)
[15:17:58] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:18:28] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[15:19:25] *** Joins: shivesh (~shivesh@user/shivesh)
[15:27:36] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:02] *** Joins: csrf (~csrf@user/csrf)
[15:31:10] *** Joins: kts (~kts@103.73.237.247)
[15:33:11] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[15:33:29] *** Joins: fluter (~fluter@user/fluter)
[15:34:00] <the_lanetly_052> Hi all, could clone syscall start thread execution during creating?
[15:34:02] <the_lanetly_052> https://bpa.st/BHRA
[15:34:11] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:35:20] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 256 seconds)
[15:35:35] <the_lanetly_052> I've tried in gdb that after executing syscall instruction it creates and starts thread execution
[15:35:52] <the_lanetly_052> as I know there should be join or detach to start thread execution.
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:27] <fizzie> It's very Linux-specific, but clone with the CLONE_THREAD flag *is* what starts threads.
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:05] <fizzie> (And neither "join" or "detach" usually means *starting* a thread.)
[15:38:40] *** Quits: kts (~kts@103.73.237.247) (Quit: Konversation terminated!)
[15:39:16] <the_lanetly_052> when I use pthread_create it calls clone as well but doesn't create thread till join or detach.
[15:39:38] <fizzie> That sounds quite unlikely.
[15:41:05] <clarity> I once saw a flying quadruped after I called pthread_create.
[15:41:33] <the_lanetly_052> yes :/ let me check clone that with pure assembly
[15:42:14] <fizzie> (Especially the part about waiting for a join before creating a thread, since it would pretty much defeat the point of using threads to do things concurrently.)
[15:43:33] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:46:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:47:59] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:54:16] *** Joins: oakyy (~oaky@2001:6b0:1:1041:8c94:956d:cf13:23a4)
[16:01:06] *** Joins: namkeleser (~namkelese@101.175.104.107)
[16:01:11] *** Quits: oakyy (~oaky@2001:6b0:1:1041:8c94:956d:cf13:23a4) (Quit: Leaving)
[16:10:01] *** Joins: ymwm (~yingmanwu@27.153.167.245)
[16:11:31] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[16:12:24] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[16:14:26] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-bd92-f30c-7395-6f90.inf6.spectrum.com) (Read error: Connection reset by peer)
[16:15:06] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90)
[16:15:38] *** Joins: kts (~kts@103.73.237.247)
[16:15:43] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[16:16:01] *** Joins: xcm (~xcm@user/xcm)
[16:16:12] *** Quits: phryk (~totallyno@user/phryk) (Read error: Connection reset by peer)
[16:16:31] *** Joins: phryk (~totallyno@user/phryk)
[16:28:52] *** Joins: ekathva_ (~ekathva@mobile-access-b04863-163.dhcp.inet.fi)
[16:29:46] *** Joins: ekathva__ (~ekathva@mobile-access-b0486a-162.dhcp.inet.fi)
[16:30:34] *** Quits: ekathva (~ekathva@n14jq7u7k2ywvrb09-1.v6.elisa-mobile.fi) (Ping timeout: 250 seconds)
[16:30:38] *** Quits: kts (~kts@103.73.237.247) (Ping timeout: 272 seconds)
[16:30:52] *** Joins: dc86 (~dc86@2a01:cb16:50:51f0:6b5:f2a:c23a:7f11)
[16:31:13] *** Joins: constxd (~brad@142.134.78.128)
[16:31:17] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[16:31:17] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[16:31:22] *** Joins: john99 (~john99@175.246.103.34.bc.googleusercontent.com)
[16:31:50] *** Joins: kurahaupo (~kurahaupo@pa49-182-4-190.pa.qld.optusnet.com.au)
[16:32:32] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[16:33:08] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-24-41.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[16:33:21] *** Joins: adip (~adip@dhy11.neoplus.adsl.tpnet.pl)
[16:33:25] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[16:33:42] *** Quits: ekathva_ (~ekathva@mobile-access-b04863-163.dhcp.inet.fi) (Ping timeout: 256 seconds)
[16:34:20] *** Joins: ymwm_ (~yingmanwu@117.26.70.231)
[16:34:52] *** Quits: ymwm_ (~yingmanwu@117.26.70.231) (Max SendQ exceeded)
[16:35:00] *** Quits: dld (~davidlowr@2601:197:600:1210:fddb:e1db:6b56:f9d3) (Ping timeout: 240 seconds)
[16:35:07] *** Joins: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com)
[16:35:13] *** Quits: sweetsymph_ (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[16:35:18] *** Joins: ymwm_ (~yingmanwu@117.26.70.231)
[16:36:41] *** Quits: dc86 (~dc86@2a01:cb16:50:51f0:6b5:f2a:c23a:7f11) (Quit: WeeChat 3.4)
[16:37:36] *** Quits: ymwm (~yingmanwu@27.153.167.245) (Ping timeout: 272 seconds)
[16:37:49] *** Parts: iceneko (~iceneko@user/iceneko) (Leaving)
[16:38:22] *** Joins: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl)
[16:39:01] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[16:41:27] *** Joins: kts (~kts@103.73.237.247)
[16:45:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:45:44] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[16:46:07] *** Joins: jjido (~Denis@94.4.149.217)
[16:48:31] <john99> Hi, exist some way to do this? https://godbolt.org/z/TW9drGs5r especifically error: case label does not reduce to an integer constant
[16:49:04] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[16:50:58] <masoudd> so you want to do: case ((int)("a") << 1):
[16:51:02] <masoudd> no
[16:52:58] <john99> yes, i have a list of defines and i want use a swith becouse the fallthrought is convenient
[16:53:06] <masoudd> do you really want to cast a char * to int and then shift it?
[16:53:23] <john99> well, replace _X by _X[0]
[16:53:36] <john99> the shift is simply as example
[16:54:05] <john99> the point i dont understand why donsn't expand at compile time to integer or how i can achieve taht
[16:54:09] <fizzie> Case labels need to be integer constant expressions, and "a"[0] isn't one.
[16:54:34] <john99> exist some workaround?
[16:55:02] <fizzie> Not really. Other than sticking to character constants. 'a' would work, for example.
[16:55:24] <john99> i ahve a string of 1 2 or 3 characters
[16:56:02] <john99> no options, i have to stick to if else then?
[16:56:18] <john99> i ahve to use*
[16:57:39] <sham1> Yes, no option
[16:57:42] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:57:46] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[16:57:58] <sham1> Although if you're lucky, your branches will get optimized, but you can't necessarily count on that
[16:58:12] <fizzie> Probably, unless you can manage to keep them as separate characters, possibly by abusing the preprocessor to turn them into strings where needed.
[16:59:28] *** Joins: Atque (~Atque@user/atque)
[16:59:45] <john99> mmm, too complex, i will keep simple, tnaks guys
[16:59:49] <john99> thanks*
[16:59:53] <fizzie> If you really want a "fallthrough" style behavior, an `if (x) goto is_x; else if (y) goto is_y; else goto is_default; is_x: ...; is_y: ...; is_default: ...;` construct could be used to replace a switch statement with arbitrary conditions.
[16:59:57] <dave0> ,cc int a = 'test'; switch(a) { case 'test': puts("yep"); break; default: puts("nope"); break; }
[16:59:59] <candide> dave0: [warning: multi-character character constant [-Wmultichar]  warning: multi-character character constant [-Wmultichar]] yep
[16:59:59] *** Quits: ironman (~ironman@49.36.55.91) (Quit: Leaving)
[17:00:49] <dave0> now you just need to turn your string into a multi-character character constant
[17:01:34] <john99> lol, its working but i dont understand why XD
[17:01:46] <jamesmartinez> dave0: maw
[17:01:50] <dave0> maw jamesmartinez
[17:03:47] *** Joins: strajder (~strajder@user/strajder)
[17:04:19] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com)
[17:04:34] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Remote host closed the connection)
[17:04:55] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:08:08] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[17:09:02] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[17:09:43] *** Quits: hinata (~hinata@2409:4042:e8e:2dda:8d8:4e45:bea:a5c) (Quit: Leaving)
[17:10:34] *** Joins: plastico (~plastico@neomutt/plastico)
[17:11:05] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Client Quit)
[17:12:28] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[17:16:20] *** Joins: bnchs (~bnchs@196.65.48.194)
[17:16:52] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[17:17:04] *** Joins: ekathva_ (~ekathva@n14jpfd4dnmq637eu-1.v6.elisa-mobile.fi)
[17:18:02] <john99> dave0, sorry i am a bit lost, how i can do that? https://godbolt.org/z/Wr9frKedT
[17:19:25] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[17:19:32] *** Quits: ekathva__ (~ekathva@mobile-access-b0486a-162.dhcp.inet.fi) (Ping timeout: 250 seconds)
[17:20:01] <bnchs> why does a program's memory usage skyrocket when you link certain libraries to it
[17:20:15] <bnchs> like opengl
[17:20:17] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:20:47] <fizzie> john99: You'd have to replicate the (implementation-defined) interpretation of multi-character character constants, which typically involves packing the relevant bytes in an int.
[17:21:20] *** Joins: Kawazaki (~Kawazaki@85.24.253.51)
[17:21:21] *** Quits: Kawazaki (~Kawazaki@85.24.253.51) (Changing host)
[17:21:21] *** Joins: Kawazaki (~Kawazaki@user/Kawazaki)
[17:21:35] <fizzie> Casting a pointer to an `int`, as `(int) a` does there, will just do an (also implemetation-defined) conversion of the pointer value, not what it points at.
[17:21:58] <edk> is there a reasonable way to find the maximum value of time_t?
[17:22:16] <john99> check the type and MAX_TYPE
[17:22:45] <edk> code can't know the type time_t will be everywhere it might be compiled
[17:23:04] <sham1> bnchs: well opengl specifically needs a way to interact with the operating system and the graphics card, and thus it needs all the code and data for that. It also needs all the static data for the opengl state machine
[17:23:35] <john99> edk, the type of time_t is know at compile time
[17:23:39] <sham1> edk: your configure-script or equivalent should know, even for cross-compilation
[17:24:12] <john99> in fact i am pretty sure with sizeof you can do a macro for all cases
[17:24:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:24:23] <fizzie> Before C11, `time_t` was allowed to be a complex type, which doesn't even *have* a maximum value. ;)
[17:24:33] <john99> ammmmmmmmmm
[17:24:36] <sham1> What the hell
[17:24:49] <fizzie> I don't think any system ever used a complex `time_t`, and C11 restricted it to real types, so that's maybe not a concern.
[17:25:01] <john99> yeah
[17:25:18] <sham1> Do you mean that time_t would be a struct or that it'd be a complex number, because the former is absolutely disgusting and the latter is something I'd like to see
[17:25:19] <edk> finding the maximum value of a floating type is still pretty hard unless you count infinity
[17:25:20] <sham1> Spinning time
[17:25:25] <bnchs> time_t is either 32-bit or 64-bit
[17:25:31] <sham1> No
[17:25:34] <fizzie> sham1: It couldn't have been a struct; but it could have been a complex number.
[17:25:45] <bnchs> in GCC?
[17:25:55] <edk> for the avoidance of doubt, i know what i'm doing and am not looking for answers that involve solving an easier problem
[17:25:55] <sham1> GCC doesn't care
[17:25:56] <fizzie> No, just in general. As in, allowed by the standard.
[17:26:07] <bnchs> ok guess i'm wrong
[17:26:34] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[17:26:41] <fizzie> C99 7.23.1p3: "The types declared are -- `time_t` -- which are arithmetic types --"; C11 7.27.1p3: "The types declared are -- `time_t` -- which are real types --".
[17:26:51] <sham1> IIRC time_t doesn't have a smallest permitted size if it were to be an integer
[17:27:01] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[17:27:11] <sham1> Yeah so you could make it an 8-bit number. Not useful at all, but you could
[17:27:37] <sham1> Or whatever CHAR_BITS sized type you'd have
[17:27:51] <sham1> CHAR_BIT*
[17:28:05] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[17:28:05] <edk> well, it might be useful for a system that will be moving at the speed of light
[17:28:08] <sham1> I'm annoyed that CHAR_BIT is not plural
[17:29:11] <edk> as it happens i just want to deal with overflow, and floating types already do that, so it's not strictly necessary to get an answer if time_t is not an integer type
[17:30:26] <sham1> Well in that case you could at compile-time or at build configuration time check whether time_t is integral and if so get its size
[17:30:40] <sham1> That's probably the best solution
[17:30:45] <fizzie> I don't think there's an obvious way. If you're okay with the assumption that it's going to be one of the standard types (rather than an implementation-defined type), you could always write a big _Generic expression that lists all of them. But that's just giving up.
[17:30:59] <edk> yeah
[17:31:32] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[17:31:45] *** Quits: kts (~kts@103.73.237.247) (Ping timeout: 256 seconds)
[17:31:55] <pragma-> ,add artofasm http://www.phatcode.net/res/223/files/html/toc.html
[17:31:55] <candide> artofasm added to #c.
[17:31:58] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[17:32:40] <bnchs> ,artofasm
[17:32:40] <candide> artofasm is http://www.phatcode.net/res/223/files/html/toc.html
[17:33:32] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[17:33:57] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[17:34:04] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[17:36:33] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:36:40] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:40:09] <fizzie> john99: Oh, forgot to link this... here's something that uses the multi-character character constant approach in a switch, but just to reiterate, the interpretation of those character constants is implementation-defined so not necessarily portable: https://godbolt.org/z/YEcPEh9sE
[17:40:12] <fizzie> (For hopefully obvious reasons it also won't work if any of the wide characters are actually wide, or even just don't have equivalent values to their narrow counterparts.)
[17:41:47] <john99> fizzie, yes, i was looking just that but i am not 100% confortable writing no portable code without necesity, i will keep the if else
[17:43:06] <sham1> If your strings are constant, you can be reasonably assured that the ifs can be compiled to jump tables
[17:43:46] <john99> its more about legibility that about performance
[17:44:14] <john99> okay, anyway i earned something new today XD
[17:44:19] <john99> learned*
[17:44:43] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:46:15] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.182)
[17:46:31] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:49:04] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.55) (Ping timeout: 256 seconds)
[17:50:00] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[17:50:00] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:52:01] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[17:52:12] *** Joins: alex11 (~alex11@user/alex11)
[17:52:52] *** Joins: vysn (~vysn@user/vysn)
[17:53:44] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:57:57] <gnoo> if i have const char *name[] = { "a", "bc" };, is there a way to find out it's length during compile-time ? (in this case 2)
[17:58:02] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[17:58:25] <gnoo> i have a global array like that which i expect to increase later and want to loop over it
[17:59:04] <fizzie> Yes: `sizeof name / sizeof *name`.
[17:59:46] <gnoo> oh, thanks! i thought it might not work since the first element's size may be different than the size of the rest of the elements
[17:59:54] <fizzie> Often wrapped inside something like `#define ARRAY_SIZE(arr) (sizeof (arr) / sizeof *(arr))`. Or with `*(arr)` replaced with `(arr)[0]`.
[18:00:04] <fizzie> All the elements are `const char *` objects, and have the same size.
[18:00:19] <fizzie> (The strings they *point* at may have different lengths, but the pointers themselves are the same size.)
[18:00:22] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:00:37] <gnoo> oh, right. thanks!
[18:00:53] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Client Quit)
[18:00:54] *** Joins: bnchs__ (~bnchs@196.74.42.99)
[18:01:20] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:01:39] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Client Quit)
[18:01:54] <edk> you could do sizeof (arr) / sizeof 0[arr] to combing the readability of (arr)[0] with the low character count of *(arr)
[18:01:57] *** Joins: bnchs___ (~bnchs@196.74.42.99)
[18:02:00] <edk> or combine
[18:02:40] *** Quits: bnchs (~bnchs@196.65.48.194) (Ping timeout: 256 seconds)
[18:03:52] <gnoo> ok, i went with #define ARRAY_SIZE(arr) sizeof(arr)/sizeof(arr[0])
[18:03:53] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com) (Read error: Connection reset by peer)
[18:04:13] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:04:25] *** Joins: bnchs (~bnchs@105.154.74.182)
[18:05:28] *** Quits: bnchs__ (~bnchs@196.74.42.99) (Ping timeout: 250 seconds)
[18:06:09] <NRK> big mistake
[18:06:28] <NRK> you need to paren the entire thing
[18:07:15] <Inline> #define (ARRAY_SIZE(arr)) {sizeof(arr)/sizeof(arr[0])}
[18:07:32] *** Quits: bnchs___ (~bnchs@196.74.42.99) (Ping timeout: 272 seconds)
[18:09:10] <fizzie> And by convention also each use of the parameter inside the macro, so `(arr)[0]` instead of `arr[0]`. Not that the macro is *likely* to be invoked for parameters where it would make a difference. In fact, I don't think I can come up with a realistic example (not that many operators can have array-typed results). But still, consistency.
[18:09:16] <NRK> :>
[18:09:48] <NRK> gnoo: http://c-faq.com/cpp/safemacros.html
[18:10:19] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:10:30] *** Joins: Waynes (~Waynes@user/waynes)
[18:10:35] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:10:46] <gnoo> oh, thanks, NRK
[18:20:58] *** Joins: pulse (~pulse@user/pulse)
[18:21:04] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:21:06] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: bertvvvs)
[18:21:36] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Ping timeout: 245 seconds)
[18:22:54] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Quit: Leaving)
[18:23:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[18:25:55] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:27:23] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Remote host closed the connection)
[18:30:43] *** Joins: dld (~davidlowr@192.91.235.243)
[18:31:20] *** Quits: XRODRiGO (xrodrigo@softbank126130110109.bbtec.net) (Remote host closed the connection)
[18:32:15] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[18:34:36] *** Quits: unlink2 (~unlink@p200300ebcf357f0041bdfa1926ef3549.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:35:00] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:35:39] *** Joins: toulene (~toulene@user/toulene)
[18:37:30] *** Joins: seninha (~chatzilla@user/seninha)
[18:37:55] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[18:38:21] *** Joins: freakazoid12345 (~matt@35.136.233.205)
[18:38:47] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[18:40:26] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90) (Ping timeout: 260 seconds)
[18:42:22] *** Quits: bnchs (~bnchs@105.154.74.182) (Ping timeout: 272 seconds)
[18:48:57] *** Joins: lispy (~lispy@user/lispy)
[18:49:43] *** Quits: zer0x (~zer0x@1.55.170.131) (Ping timeout: 256 seconds)
[18:49:45] *** Quits: alch (~alch@mi-18-20-101.service.infuturo.it) (Read error: Connection reset by peer)
[18:53:53] *** Joins: alch (~alch@mi-18-9-39.service.infuturo.it)
[18:55:23] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:57:06] *** Joins: Satin (uid193953@user/Seten)
[18:57:06] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[18:57:16] *** Joins: kts (~kts@103.73.237.80)
[18:59:13] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[19:01:40] *** Joins: cailt^ (~cailt@50.232.121.75)
[19:02:30] *** Quits: kts (~kts@103.73.237.80) (Quit: Konversation terminated!)
[19:04:20] *** Joins: kts (~kts@103.73.237.80)
[19:06:36] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[19:07:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:09:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:18ed:159e:a9f9:33bb)
[19:10:47] *** Quits: cailt^ (~cailt@50.232.121.75) (Remote host closed the connection)
[19:11:06] *** Joins: magla (~gelignite@55d48440.access.ecotel.net)
[19:13:26] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:18ed:159e:a9f9:33bb) (Client Quit)
[19:13:56] *** Quits: john99 (~john99@175.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[19:15:04] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:3119:cbb9:a9db:3cc5)
[19:15:04] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:3119:cbb9:a9db:3cc5) (Changing host)
[19:15:04] *** Joins: skapata (~Skapata@user/skapata)
[19:23:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[19:23:43] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[19:25:54] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com)
[19:27:16] *** Quits: ymwm_ (~yingmanwu@117.26.70.231) (Remote host closed the connection)
[19:27:37] *** Joins: ymwm_ (~yingmanwu@117.26.70.231)
[19:27:44] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[19:28:49] *** Quits: ymwm_ (~yingmanwu@117.26.70.231) (Client Quit)
[19:29:44] *** Quits: kektagen (~kektagen@kektagen.org) (Quit: Disconnected)
[19:30:55] *** Joins: kektagen (~kektagen@kektagen.org)
[19:31:57] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Client closed)
[19:32:51] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[19:33:32] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90)
[19:34:30] *** Joins: john99 (~john99@175.246.103.34.bc.googleusercontent.com)
[19:34:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:36:11] *** Quits: freakazoid12345 (~matt@35.136.233.205) (Ping timeout: 256 seconds)
[19:37:00] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 240 seconds)
[19:43:48] *** Quits: toulene (~toulene@user/toulene) (Quit: ZNC - https://znc.in)
[19:44:35] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com) (Read error: Connection reset by peer)
[19:46:56] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[19:46:56] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 256 seconds)
[19:47:03] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:59:26] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:00:27] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bd92-f30c-7395-6f90.inf6.spectrum.com)
[20:00:51] *** Joins: Guest12 (~Guest12@171.50.175.113)
[20:01:04] <Guest12> https://bpa.st/WCJA is printing 32 instead of 4
[20:02:46] *** Joins: strajder (~strajder@user/strajder)
[20:02:59] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90) (Ping timeout: 252 seconds)
[20:05:19] *** Quits: john99 (~john99@175.246.103.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[20:06:47] *** Joins: mahmutov (~mahmutov@37.155.47.214)
[20:07:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[20:08:13] <NRK> Guest12: for me it prints 65 :)
[20:08:32] <Guest12> yep
[20:09:04] <NRK> why did u expect it would print 4?
[20:09:22] <Guest12> I changed it to `sizeof(map)` and it works correctly now
[20:09:23] <NRK> im not seeing 4 anywhere in that code.
[20:09:36] <Guest12> and added fgets before sscanf
[20:09:37] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[20:10:03] <Guest12> NRK what would be the output of `sizeof(*map)`?
[20:10:33] <constxd> ,sizeof
[20:10:33] <candide> The sizeof operator yields a size_t, that is the size (in bytes) of its operand, which may be an expression or the parenthesized name of a type. e.g. `sizeof expr` and `sizeof (int)`. That expression is not evaluated unless it is a variable-length array. sizeof does not have function call semantics; don't confuse people by writing it with function call syntax.
[20:10:46] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:11:16] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[20:11:28] <NRK> depends on what type `*map` is, in your case it's a char
[20:11:31] <NRK> so it'll always be 1
[20:11:37] *** Joins: john99 (~john99@175.246.103.34.bc.googleusercontent.com)
[20:12:21] <Guest12> yeah...
[20:12:41] *** Joins: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl)
[20:12:57] <NRK> Guest12: did you figure out why the original code you pasted didn't work?
[20:13:01] <Guest12> yeah
[20:13:10] <Guest12> I forgot to add fgets before sscanf
[20:13:38] <Guest12> https://bpa.st/WRFA
[20:14:59] <constxd> hell yeah
[20:15:14] <Guest12> ?
[20:15:22] *** Quits: fe23 (~fe23@2409:8a34:466:6010:61c5:f65d:3802:922d) (Quit: fe23)
[20:16:05] <constxd> glad u fixed it
[20:16:10] <constxd> looks solid
[20:16:20] <constxd> keep us updated
[20:16:36] *** Joins: X-Scale` (~ARM@46.50.5.194)
[20:16:51] <Guest12> ok, so now I'm not getting the correct output
[20:16:59] <constxd> why not
[20:17:06] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[20:17:31] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:17:32] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[20:17:38] <Guest12> It only prints two lines `rgbRBG` and one more line, with newlines in between
[20:18:03] <constxd> what did you enter as input?
[20:18:07] *** Joins: tiotags (~tiotags@user/tiotags)
[20:18:19] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[20:18:58] <Guest12> https://bpa.st/LIDQ
[20:19:16] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 272 seconds)
[20:19:17] *** X-Scale` is now known as X-Scale
[20:19:27] <fizzie> A `char[7]` isn't long enough to hold the entire line "rgbBRG\n\0".
[20:20:00] <Guest12> oops, I forgot I have to capture `\n` too
[20:20:00] <fizzie> So the first fgets will read "rgbBRG\0", the second "\n\0", the third "RgbrBG\0" and the fourth "\n\0".
[20:20:39] <Guest12> Makes sense
[20:22:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[20:23:43] <Guest12> thanks, it works
[20:24:10] <constxd> based
[20:24:37] <Guest12> ?
[20:25:05] <constxd> happy it works now
[20:25:13] <Guest12> Ah okay
[20:26:33] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[20:26:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:27:17] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 240 seconds)
[20:27:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 268 seconds)
[20:30:43] *** Joins: AmR (~AmREiSa@156.199.236.198)
[20:31:09] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:31:25] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[20:31:43] <Guest12> `int cmp(void const *a, void const *b) { return *(char*) a - *(char*) b; }` is not working correctly...
[20:31:52] *** Joins: mjoerg (~user@user/mjoerg)
[20:33:28] <caze> How many characters do you want to compare?
[20:33:30] *** Joins: caildt^ (~cailt@50.232.121.75)
[20:33:51] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[20:34:01] <Guest12> 6
[20:34:29] <caze> Oh, it's a comparator function.
[20:34:32] <fizzie> Is that supposed to be for sorting the characters within a single string? I imagine it should work for that, given the correct qsort call.
[20:34:43] <caze> I just noticed that.
[20:34:55] <Guest12> `qsort(map, sizeof map, sizeof(*map), cmp)`
[20:35:51] <fizzie> ,cc int cmp(const void *pa, const void *pb) { const char *a = pa, *b = pb; return *a - *b; } char str[] = "hello, world"; qsort(str, strlen(str), 1, cmp); puts(str); // should be fine
[20:35:53] <candide> fizzie:  ,dehllloorw
[20:36:21] <fizzie> Sounds like you're also sorting the terminating '\0'.
[20:36:39] <fizzie> Because `sizeof map` includes all bytes of the array.
[20:36:39] <Guest12> yeah, I changed the size to 6 and it works
[20:37:16] <Guest12> how many times do I have to remind myself not to use sizeof inside qsort lol
[20:37:29] <sham1> Bleh, comparison by subtracting
[20:38:08] <constxd> very sus
[20:38:23] <constxd> what if char is unsigned??
[20:38:59] <Guest12> ?
[20:39:01] <fizzie> It'll promote to `int` (on most systems) before the subtraction. I was tempted to comment on it though.
[20:39:12] <Guest12> All chars are unsigned
[20:39:21] <fizzie> No, they're not.
[20:39:25] *** Quits: mjoerg (~user@user/mjoerg) (Remote host closed the connection)
[20:39:45] <fizzie> ,cc printf("%d to %d", CHAR_MIN, CHAR_MAX); // looks pretty signed
[20:39:47] <candide> fizzie: -128 to 127
[20:40:32] <Guest12> ah
[20:40:50] <fizzie> It can be unsigned, though; unlike the other types, the signedness of plain `char` is implementation-defined.
[20:41:16] <Guest12> I'm only dealing with `r`, `g` and `b`
[20:41:59] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[20:42:54] <constxd> doesn't matter what you're dealing with, my concern was that *a - *b would always be non-negative, but apparently i don't know my integer promotion rules very well
[20:43:02] <Guest12> hm
[20:43:34] <Guest12> I'll remove qsort from this program
[20:43:40] <sham1> And of course *a - *b can be a disaster on less common platforms
[20:44:33] <sham1> At least (*a < *b) - (*a - *b) can't possibly give the wrong answer
[20:44:37] <sham1> Err
[20:44:46] <Guest12> D: \O/
[20:44:52] <sham1> (*a < *b) - (*a > *b)
[20:45:12] <sham1> Wait, I got it backwards. Regardless
[20:45:26] <sham1> (*a > *b) - (*a < *b)
[20:45:42] <constxd> based
[20:46:09] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[20:46:53] <Guest12> yeah i've removed qsort from this program, idk why I was using it
[20:47:01] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[20:47:34] *** Quits: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[20:47:50] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[20:47:50] <sham1> Well for future reference
[20:47:51] <sham1> E
[20:48:38] <Guest12> yeah
[20:49:49] <cassepipe> Hi all ! I was wondering if when I give a float literal like 1.0 I get an exact 1 or do I have to 1.00000000 ?
[20:50:09] <sham1> Exactly one
[20:50:09] <cassepipe> For comparison purposes
[20:50:16] <cassepipe> That's wonderful
[20:50:20] <sham1> Unless the compiler fails to read it appropriately
[20:50:30] <sham1> You should be fine though
[20:51:08] <cassepipe> Precision loss is for very big and very small numbers right ?
[20:51:16] <sham1> Really what you should do is define some epsilon inside of which two values are the same, and then use that if you need to compare stuff, especially if either of the values comes from a long computation
[20:51:17] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[20:51:42] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[20:51:46] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[20:52:34] <fizzie> Fun fact: a floating literal like 1.0 *is* allowed to yield either the nearest representable value (the exact 1), or the nearest larger or smaller one.
[20:52:51] <lilibyte> ,kr4-14 can anyone explain what the point of this exercise is? is `swap(t,x,y) t y, t x` too simple? i feel like i'm missing what the exercise is asking
[20:52:51] <candide> Chapter 4: Functions and Program Structure; Exercise 4-14. Define a macro swap(t,x,y) that interchanges two arguments of type t. (Block structure will help.)
[20:52:52] <fizzie> You'd have to have a pretty bad implementation where 1.0 didn't give the exact value though.
[20:53:17] <sham1> Especially when you have IEEE 754 wherein 1.0 can be represented exactly
[20:54:01] <sham1> lilibyte: that doesn't do what you think it does
[20:54:26] *** Joins: gce108 (~gce@user/gce108)
[20:54:55] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[20:54:56] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:55:08] *** Quits: john99 (~john99@175.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[20:55:15] <fizzie> lilibyte: It's (probably) looking for a macro definition which makes it so that `int x = 123, y = 456; swap(int, x, y); printf("x=%d, y=%d\n", x, y);` will print "x=456, y=123".
[20:55:51] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:57:22] <sham1> That's how I understand it, since it brings in the type t
[20:57:54] <lilibyte> thank you ill try that
[20:59:09] <sham1> Of course it can be done without, although you'd probably then have to enforce that X and Y have the same type.
[21:00:45] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:01:04] <sham1> Although that way needs a VLA now that I think of it
[21:02:31] <sham1> Or actually no, but it does either require GNUisms or C2011
[21:03:32] <fizzie> Does it? The version I'm thinking of doesn't (as long as x/y themselves aren't VLAs).
[21:05:07] <caze> You can't assign to arrays anyway.
[21:05:26] <sham1> Yeah it doesn't need VLAs. Although it does require _Static_asset to check the sizes of X and Y
[21:05:47] *** Joins: cherrry9 (~jan@deh49.neoplus.adsl.tpnet.pl)
[21:06:23] <fizzie> There are (less pretty) way to arrange for constraint violations based on constant expressions other than _Static_assert.
[21:07:47] *** Joins: Waynes (~Waynes@user/waynes)
[21:08:17] <sham1> Yeah, one can make something like char foo[sizeof((x)) == sizeof((y))] but I do like _Static_assert more, especially when not written in this standardized reserved identifier way
[21:09:22] <fizzie> You might want to assert more than just the sizes, anyway, otherwise it'll happily swap an `int` with a `float` if the sizes happen to match. (Of course depending on your perspective, maybe that's a feature.)
[21:10:46] *** Quits: Guest12 (~Guest12@171.50.175.113) (Quit: Client closed)
[21:10:52] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:11:30] <lilibyte> `t __TEMP_FOR_SHITTY_MACRO = y; y = x; x = __TEMP_FOR_SHITTY_MACRO;` works then? seems to
[21:12:01] <fizzie> An `do { ... } while (0)` wrapper is often recommended.
[21:12:20] <fizzie> (Consider a context like `if (x) swap(int, y, z);`.)
[21:12:45] <lilibyte> oh makes sense
[21:13:10] <fizzie> I kind of suspect that's what the "block structure will help" comment might be alluding to, though it's a slightly odd way to put it.
[21:13:25] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[21:13:33] <sham1> Also then one wouldn't need a __TEMP_FOR_SHITTY_MACRO and one can give it an actual name
[21:13:39] <caze> Well you need a new block just to introduce the temp variable.
[21:14:11] <fizzie> Oh, right, in C89 (which is the K&R context) that's even more true.
[21:14:17] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[21:14:18] <caze> (In C89)
[21:14:20] <sham1> Thus you use the block structure
[21:14:20] <caze> yeah
[21:14:32] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[21:15:06] <fizzie> You do still need to give it a somewhat obscure name, because the macro will fail if either `x` or `y` is the same name as the chosen temporary.
[21:15:54] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:15:58] <sham1> tmp works
[21:17:06] <fizzie> Not if you're calling `swap(tmp, tmp2);`.
[21:17:22] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[21:18:10] <sham1> Hm, fair
[21:18:13] <fizzie> ,cc #define compatible_types(x, y) _Generic((x), __typeof__(y): 1, default: 0) \n int i, j; double k; printf("%d %d", compatible_types(i, j), compatible_types(i, k)); // out of curiosity, can you do this?
[21:18:15] <candide> fizzie: 1 0
[21:18:48] <sham1> Ooh, neat
[21:18:54] <fizzie> I guess one more reason why a typeof would be nice.
[21:19:13] <sham1> And thankfully it'll be a thing
[21:20:23] <sham1> One thing that might be neat would be `memswp` to complement memcpy and such
[21:20:41] <pragma-> "I'm staying with C90."  "Our coding standards requires C99."
[21:23:19] <sham1> Would that be much of a difference other than now you might be able to declare a variable in the middle of a block
[21:23:41] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:26:04] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[21:26:11] *** Parts: ta180m (~ta180m@2001:470:69fc:105::1d3) ()
[21:26:32] *** Parts: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) ()
[21:26:52] *** Quits: esselfe (~steph@user/esselfe) (Quit: rebooting)
[21:29:56] *** Quits: caildt^ (~cailt@50.232.121.75) (Remote host closed the connection)
[21:30:11] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[21:30:43] <sham1> Like you get _Bool I guess, but really, a lot of th upgrades of C1999 probably wouldn't be useful in such coding standards
[21:32:26] *** Joins: Betal (~Betal@user/betal)
[21:33:06] *** Joins: esselfe (~steph@user/esselfe)
[21:33:31] *** Joins: bnchs (~bnchs@105.154.74.182)
[21:35:11] *** Joins: Guest7453 (~Guest@host236.190-137-37.telecom.net.ar)
[21:36:17] *** Quits: davros (~davros@host86-183-171-240.range86-183.btcentralplus.com) (Quit: Leaving)
[21:36:52] *** Joins: nostar__ (~nostar@68.51.221.108)
[21:37:06] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[21:38:24] *** Quits: nostar__ (~nostar@68.51.221.108) (Client Quit)
[21:38:33] <fizzie> You have to start adding `int` everywhere and declaring your functions before calling them, if The Management makes you move to new-fangled standards like C99.
[21:38:34] *** Joins: jjido (~Denis@94.4.149.217)
[21:39:24] *** Quits: nostart (~nostar@107.175.102.52) (Ping timeout: 240 seconds)
[21:42:53] <bnchs> ,cc printf((clock_t)(-1))
[21:42:56] <candide> bnchs: [warning: passing argument 1 of 'printf' makes pointer from integer without a cast [-Wint-conversion] note: expected 'const char * restrict' but argument is of type 'long int']  Program received signal SIGSEGV, Segmentation fault in __strchrnul_sse2 () called by main (argc=1, argv=0x7fffffffe428) at statement: printf((clock_t)(-1))
[21:43:25] <bnchs> uhhh wait
[21:43:39] <bnchs> ,cc printf("%l", (clock_t)(-1));
[21:43:41] <candide> bnchs: [warning: conversion lacks type at end of format [-Wformat=]  warning: too many arguments for format [-Wformat-extra-args]] %
[21:47:18] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[21:47:29] <sham1> ,cc printf("%ld", (clock_t)(-1));
[21:47:31] <candide> sham1: -1
[21:47:43] <bnchs> oh
[21:48:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:48:23] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[21:49:47] <sham1> ,cc printf("%s", asctime(gmtime(&(time_t){-1})));
[21:49:49] <candide> sham1: Wed Dec 31 23:59:59 1969
[21:49:54] <sham1> Nice
[21:51:12] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Client closed)
[21:51:27] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[21:52:44] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 256 seconds)
[21:53:10] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[21:53:47] <bnchs> ,cc printf("%s", asctime(gmtime(&(time_t){-100000000000})));
[21:53:48] <candide> bnchs: Thu Feb 15 14:13:20 -1199
[21:53:55] <bnchs> too far
[21:59:03] *** Quits: travankor (travankor@user/travankor) (Read error: Connection reset by peer)
[21:59:28] <pragma-> ,sh date -u
[21:59:29] <candide> pragma-: Mon Mar  7 06:29:29 PM UTC 2022
[22:03:13] <sham1> ,cc printf("%s", asctime(gmtime(&(time_t){1<<52})));
[22:03:15] <candide> sham1: [warning: left shift count >= width of type [-Wshift-count-overflow]]  runtime error: shift exponent 52 is too large for 32-bit type 'int'  Thu Jan  1 00:00:00 1970
[22:03:17] <sham1> Wait
[22:03:25] <sham1> ,cc printf("%s", asctime(gmtime(&(time_t){1L<<52})));
[22:03:27] <candide> sham1: Sat Dec  6 03:48:16 142715360
[22:03:27] *** Joins: seninha (~chatzilla@user/seninha)
[22:03:57] *** Quits: emias (~holger@home.zedat.fu-berlin.de) (Quit: WeeChat 3.0)
[22:06:25] *** Joins: gareppa (~gareppa@user/gareppa)
[22:08:00] <twkm> praying what type time_t will be, always fun.
[22:08:24] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:09:20] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:10:09] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Client closed)
[22:13:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:13:54] <bnchs> ,cc printf("%s", asctime(gmtime(&(time_t){INT_MAX})));
[22:13:56] <candide> bnchs: Tue Jan 19 03:14:07 2038
[22:14:07] <bnchs> ,cc printf("%s", asctime(gmtime(&(time_t){INT_MAX+1})));
[22:14:09] <candide> bnchs: [warning: integer overflow in expression of type 'int' results in '-2147483648' [-Woverflow]] Fri Dec 13 20:45:52 1901
[22:14:20] <bnchs> oh no it's 32-bit???
[22:15:03] <twkm> ee.g., you don't even know for certain whether it will be an integer.
[22:16:08] <bnchs> ,cc printf("%s", asctime(gmtime(&(__time64_t){INT_MAX+1})));
[22:16:10] <candide> bnchs: error: '__time64_t' undeclared; did you mean '__timer_t'?
[22:16:52] <twkm> __ prefix, so really guessing now.
[22:17:20] <bnchs> i'm pretty sure __time64_t exists
[22:17:25] <bnchs> it's an internal type
[22:18:11] <twkm> sigh.
[22:18:59] <bnchs> unfortunately guared by ifdefs
[22:19:21] <sham1> ,cc printf("%s", asctime(gmtime(&(time_t){INT_MAX + 1L})));
[22:19:23] <candide> sham1: Tue Jan 19 03:14:08 2038
[22:19:24] *** Joins: rgrinberg (~textual@2806:101e:7:5086:c127:9b59:bd2c:b6b3)
[22:19:25] <twkm> so more assuming.  that will bite you one day.
[22:19:39] <bnchs> it's not like i'm making a real program
[22:19:54] <sham1> Not that hard. Of course on POSIX it's less assuming because at least you can trust on it being integral IIRC
[22:20:20] <twkm> nope.
[22:20:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[22:21:02] <twkm> oh, posix.  yes an integer of some kind there.
[22:22:20] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[22:22:25] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[22:22:31] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Client Quit)
[22:22:32] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Quit: Leaving)
[22:22:36] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:22:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[22:24:28] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[22:26:27] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[22:27:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[22:28:14] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:29:31] *** Quits: ekathva_ (~ekathva@n14jpfd4dnmq637eu-1.v6.elisa-mobile.fi) (Ping timeout: 245 seconds)
[22:31:24] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:32:59] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:34:25] *** Joins: caildddddt^ (~cailddddd@50.232.121.75)
[22:34:29] *** Joins: soul-d (~uknown@user/soul-d)
[22:35:52] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:03] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.182) (Ping timeout: 250 seconds)
[22:39:32] *** Quits: shokara (8a599707f6@198.108.77.17) (Quit: Gateway shutdown)
[22:40:19] *** Joins: savolla (~quassel@95.10.239.22)
[22:40:46] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[22:41:01] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[22:42:01] *** Quits: FluffyMask (~masque@user/fluffymask) (Ping timeout: 268 seconds)
[22:42:35] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Client Quit)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:16] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[22:46:42] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[22:46:49] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 256 seconds)
[22:47:48] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-bcf7-7fb4-918f-bdd4.fixed6.kpn.net)
[22:47:59] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:44] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:49:02] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[22:49:59] *** Quits: alch (~alch@mi-18-9-39.service.infuturo.it) (Read error: Connection reset by peer)
[22:50:31] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:52:12] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-bcf7-7fb4-918f-bdd4.fixed6.kpn.net) (Ping timeout: 240 seconds)
[22:54:14] *** Joins: alch (~alch@151.34.147.173)
[22:57:46] *** Joins: tazle (tazle@kapsi.fi)
[23:01:05] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.202)
[23:07:33] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[23:08:40] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[23:08:49] *** Joins: vicfred (~vicfred@user/vicfred)
[23:09:08] *** Quits: savolla (~quassel@95.10.239.22) (Remote host closed the connection)
[23:09:24] *** Joins: Wulf (~Wulf@user/wulf)
[23:09:25] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.202) (Ping timeout: 250 seconds)
[23:09:42] *** Quits: rgrinberg (~textual@2806:101e:7:5086:c127:9b59:bd2c:b6b3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:10:56] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[23:12:01] *** Joins: vicfred_ (~vicfred@user/vicfred)
[23:12:29] *** Joins: Akuli (~Akuli@87-94-108-89.bb.dnainternet.fi)
[23:13:23] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:14:17] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[23:17:39] *** Quits: caildddddt^ (~cailddddd@50.232.121.75) (Remote host closed the connection)
[23:18:20] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[23:21:08] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:22:06] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 268 seconds)
[23:24:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:25:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:25:56] *** Lord_of_Life_ is now known as Lord_of_Life
[23:26:06] *** Joins: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com)
[23:26:27] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[23:27:11] *** Quits: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com) (Client Quit)
[23:32:41] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[23:36:22] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:40:06] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[23:42:19] <NRK> ,cc system("date -u");
[23:42:22] <candide> NRK: Mon Mar  7 08:12:21 PM UTC 2022
[23:42:33] <NRK> :)
[23:47:27] <bnchs> ,cc system((char*)NULL);
[23:47:31] <candide> bnchs: Success (no output).
[23:48:32] <strajder> ,cc system("uname -a");
[23:48:35] <candide> strajder: Linux fedora 5.17.0-0.rc2.83.fc36.x86_64 #1 SMP PREEMPT Mon Jan 31 22:36:48 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
[23:48:49] <bnchs> ,cc char *shit = system("cat /dev/urandom");
[23:49:00] <candide> bnchs: [Timed-out]
[23:49:00] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[23:49:10] <bnchs> thats the POINT
[23:52:54] <esselfe> !sh grep system /usr/include/stdlib.h
[23:53:15] <esselfe> ,sh grep system /usr/include/stdlib.h
[23:53:16] <candide> esselfe: extern int system (const char *__command) __wur;
[23:53:16] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:d94a:5af7:3b65:8539) (Ping timeout: 245 seconds)
[23:53:26] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[23:53:54] <bnchs> ohh it returns an int
[23:55:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[23:56:12] <fizzie> ,cc ptype(system); // I was very disappointed by the output of this
[23:56:14] <candide> fizzie:  system = <unknown return type> ()
[23:56:52] <fizzie> ,cc __typeof__(&system) s; ptype(*s); // slightly better
[23:56:53] <candide> fizzie:  *s = int (const char *)
[23:58:19] <bnchs> ,cc time64_t time_1;
[23:58:20] <candide> bnchs: error: unknown type name 'time64_t'; did you mean 'timer_t'?
[23:58:21] *** Joins: meator (~meator@user/meator)
[23:59:01] *** Joins: alefir_ (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[23:59:28] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Killed (NickServ (GHOST command used by alefir_)))
[23:59:32] *** alefir_ is now known as alefir
