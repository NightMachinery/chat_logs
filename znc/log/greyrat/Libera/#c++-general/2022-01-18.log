[00:00:21] <PJBoy> I don't understand how clang-tidy is missing these `*it` -> `it` conversions
[00:00:33] <hnOsmium0001[m]> going to call it without checking: no because clangd just includes clang tidy's headers and do the integration within their executable
[00:00:40] <PJBoy> the case where it gets it is also identical to the case where it doesn't
[00:00:48] <LordKalma> hnOsmium0001[m], you're right :D
[00:00:48] <PJBoy> only the text in a string literal is different
[00:01:18] *** Joins: syrius (syrius@titan.stormtek.net)
[00:01:53] <LordKalma> PJBoy, what's your ubuntu, again=?
[00:01:59] <PJBoy> 20.04
[00:02:46] <PJBoy> although I'm getting suspicious now
[00:03:01] <PJBoy> it didn't get this wrong when I ran clang-tidy on that file manually
[00:03:12] <hnOsmium0001[m]> PJBoy: homebrew has LLVM 12 (maybe LLVM 13, haven't checked in a while) but it's going to be a(nother) package manager on your system
[00:03:16] <LordKalma> I'm checking on ubuntu's website, indeed clang-tidy on Focal is 10.0
[00:03:35] <LordKalma> but if you're permitted to add focal-updates you can get 12
[00:03:45] <LordKalma> https://packages.ubuntu.com/search?suite=focal-updates&keywords=clang-tidy
[00:03:51] <hnOsmium0001[m]> I personally don't mind having multiple PMs, and use it for testing old compiler compatbility
[00:04:04] <LordKalma> https://packages.ubuntu.com/focal-updates/clang-tidy-12
[00:04:09] <LordKalma> you can even download the .dev
[00:04:11] <LordKalma> *deb
[00:04:57] <LordKalma> https://packages.ubuntu.com/focal-updates/amd64/clang-tidy-12/download
[00:05:04] <rpav> meanwhile, on arch, it's been over a _month_ since clang/llvm were updated
[00:05:10] <LordKalma> *just do it* meme
[00:05:34] <rpav> though it's unclear based on LLVM's website if 13.0.1 ever actually made it out on Dec 13; it seems to have not
[00:05:42] <LordKalma> I'm going to convince PJBoy to install clangd at-least-12 and stop having a shit experience
[00:05:44] <PJBoy> nah I'm gonna do the complaining about linux meme
[00:05:54] <LordKalma> JUST DO IT
[00:05:56] <PJBoy> whilst not making any effort to improve my situation meme
[00:05:59] <hnOsmium0001[m]> meanwhile, on arch, there are no easily discoverable prebuilt binaries for old versions of the compiler
[00:06:22] <LordKalma> OPENSUSE TUMBLEWEED FTW
[00:06:23] <hnOsmium0001[m]> which means every time they rush to gcc's latest version ( which is good) I have to rebuild gtk from source in conan
[00:06:28] <LordKalma> a shame nobody gives a fuck about opensuse
[00:06:30] <hnOsmium0001[m]> and now my .conan is like 20GB
[00:06:49] <LordKalma> you can always delete your .conan every time
[00:07:00] <LordKalma> we need to add the rest of llvm to conan
[00:07:06] <LordKalma> and some other good stuff still missing
[00:07:14] <LordKalma> (and do the massive cleanup process for conan 2.0)
[00:07:32] <rpav> i can't tell what opensuse has ðŸ¤” looks like some community package but i can't figure out what version
[00:07:46] <rpav> nix looks like a "build it yourself" but i can't tell there either
[00:08:04] <hnOsmium0001[m]> LordKalma: I haven't been following CCI for a while, and now the style has changed so much I don't recognize a thing in package_info() lol
[00:08:14] <LordKalma> hahaha it did
[00:08:18] <LordKalma> I'm not up do date either
[00:08:27] <LordKalma> and I've already warned them, they are pulling a python 3
[00:08:36] <LordKalma> and thinking C++ people want to move fast and break things
[00:08:44] <LordKalma> and we're going to be fucked
[00:08:48] *** Joins: RabidToaster1 (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:08:55] <LordKalma> rpav, https://software.opensuse.org/package/clang 13.0.0
[00:09:13] <rpav> ok nix looks liek it has 13 https://github.com/NixOS/nixpkgs/tree/master/pkgs/development/compilers/llvm/13
[00:09:29] <rpav> LordKalma: ah huh i stumbled onto the wrong thing (llvm-clang)
[00:09:38] <LordKalma> https://software.opensuse.org/package/clang-tools 13 also :)
[00:09:42] <rpav> nice
[00:10:32] <LordKalma> I really like openSUSE
[00:10:38] <LordKalma> a shame it's not popular, it really deserved to be
[00:11:15] <rpav> yeah i've occasionally heard people saying as much
[00:11:32] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[00:11:32] *** RabidToaster1 is now known as RabidToaster
[00:11:44] <rpav> since they're still going apparently strong, it must be relatively popular with some peoples
[00:12:07] <LordKalma> https://distrowatch.com/table.php?distribution=opensuse
[00:12:11] <LordKalma> Popularity: 12 (751 hits per day)
[00:12:34] <LordKalma> OpenSUSE does have something that annoys me. Or rather, doesn't have. The live image doesn't have an installer and vice-versa
[00:12:38] <LordKalma> really annoying
[00:12:53] <rpav> oh, so live image or installer image, but not both?
[00:12:58] <LordKalma> yes
[00:13:04] <LordKalma> really annoys the crap out of me
[00:13:13] <rpav> well, it could be worse .. until recently, arch's install ISO didn't have an installer either ;)
[00:13:24] <rpav> unless you count bash and a page of instructions
[00:13:30] <LordKalma> but the installer image has all the DEs and a really complete set of packages bundled
[00:13:45] <LordKalma> you can pick at install time, convenient in that regard
[00:14:06] <hnOsmium0001[m]> rpav: a page seems like an under-exaggration (english dictionaries: help needed)
[00:14:18] <rpav> still, the initial setup is fairly straightforward and unlike ubuntu, you're not then continuously climbing up the mountain of dist-update
[00:14:45] <LordKalma> I've read the arch wiki to get nvidia dual graphics crap working, on SUSE :D hahaha
[00:14:54] <LordKalma> i mean, mostly to read about the different tools and pick one
[00:15:06] <rpav> hnOsmium0001[m]: ok, a page with underemphaized links to a number of other pages ;)
[00:15:19] <LordKalma> rpav, openSUSE tumbleweed: sharp edge (not bleeding, or they would have llvm 13.0.1 hehe), rolling :D
[00:15:34] <rpav> if you miss the "go here to set up networking now" like i have a few times, it's going to be a second ISO boot and fixage
[00:15:45] <rpav> LordKalma: cool
[00:16:18] <rpav> speaking of sharp edges, distrowatch looks like cutting edge web design from 1997
[00:16:29] <LordKalma> hahaha
[00:16:39] <LordKalma> today I was talking to a friend about something like that
[00:17:27] <LordKalma> https://fmscan.org/ https://www.mwlist.org https://www.fmlist.org  are all from the same owner. If I could, I would buy them the database and websites and bring them to this century
[00:17:56] <rpav> well no doubt they have a database
[00:18:12] <rpav> probably the latest 2000s mysql
[00:18:17] <ville> LordKalma: suse went to bed with micros~1 in 2006 and killed the brand in lot of eyes
[00:18:29] <rpav> yeah but isn't opensuse like, separate
[00:19:38] <LordKalma> ville, and manjaro had shady financial managers, and update scripts that are scary to look at, and all the kids love their discount arch
[00:19:45] <ville> it has suse in the name. it's tainted all the same
[00:21:27] <rpav> dunno i'd still use gentoo if it just didn't take forever to build all the things .. plus there was awhile gentoo was lagging on the updates
[00:21:45] <rpav> but "build my entire system with external debug symbols" is pretty handy for dev
[00:21:47] <ville> novell launched opensuse in 200x, then novell made the patent deal in 2006 and that killed the suse name
[00:21:54] <comrad> LordKalma: tumbleweed is a tested rolling release, so obviously not git-commit-newest ;)
[00:21:56] <LordKalma> what patent deal?
[00:22:04] <rpav> break in libc -> get actual source
[00:22:09] <ville> LordKalma:  with micros~1
[00:22:58] <ville> the early 2000s were a time when micros~1 was still flexing the possibility of patent lawsuits against linux
[00:23:42] <LordKalma> early 2000s MS was evil AF
[00:23:47] <ville> ballmer in full force
[00:24:19] <LordKalma> have you read about the theories about a MS mole in Nokia in the Symbian era?
[00:24:19] <rpav> they still are, just older and slower and less in-touch
[00:24:55] <ville> LordKalma: i am a finn... we all love elop
[00:25:03] <LordKalma> ah right
[00:25:04] <LordKalma> hahah
[00:25:06] <rpav> now they're like "hey, you know that walled garden and app store stuff that's what all the kids are doing now, we should try that"
[00:25:26] <rpav> "that new-fangled walled garden" at that
[00:25:34] <LordKalma> rpav, what I like about MS now is the MS-software-house, not the MS-OS-developers
[00:25:41] <rpav> i mean they were still trying to win the set-top war with the Xbox One
[00:25:43] <LordKalma> their software that's not windows is pretty cool
[00:25:51] <rpav> i dunno
[00:26:11] <rpav> office is sortof irrelevant and/or commodity and i'm not sure what else they do that matters
[00:26:25] * CarloWood managed to not own or use windows his whole life.
[00:26:29] <LordKalma> I mean really like dev tools, like x-platform .net and that sort of stuff
[00:26:46] *** Joins: gehn (~gehn@user/gehn)
[00:26:48] <rpav> otoh, i have one of their surface go 2 and it makes an excellent if slightly glitchy (due to some shitty peripheral hardware) linux box
[00:27:02] <rpav> CarloWood: you must be young
[00:27:08] <ville> LordKalma: never forget. never forgive
[00:27:09] <CarloWood> :)
[00:27:10] <LordKalma> linux on touch devices is shit
[00:27:31] <rpav> LordKalma: it is surprisingly awesome actually .. with a bit of setup and love, the first tablet device i use constantly
[00:27:42] <LordKalma> surprising
[00:27:54] <LordKalma> I once tried to set a small hybrid I have as a linux box
[00:28:06] <LordKalma> no hinge sensor, no rotation
[00:28:14] <LordKalma> are there even decent on-screen keyboards?
[00:28:15] <LordKalma> etc etc
[00:28:23] <rpav> chrome makes a great touch-based browser right out of the box, and you combine a tiling WM with some gestures and a touch menu, and http://www.styluslabs.com/ for notes, and it's great
[00:28:31] <rpav> i have steam on there and puzzle quest, so what else could i possibly ask for ;)
[00:28:44] <rpav> LordKalma: there's onboard, which sucks and i want to replace, but it works well enough
[00:29:01] <rpav> i have a custom script setup for handling device plugs and rotation
[00:29:03] <hnOsmium0001[m]> rpav: somehow I have never realized what iPadOS is basically a tiling WM on steriods until now!
[00:29:18] <rpav> hnOsmium0001[m]: if by "on steroids" you mean "seriously shit" then yes
[00:29:38] <hnOsmium0001[m]> also that, but I meant conceptually
[00:29:41] <rpav> well kinda
[00:29:55] <rpav> mobile stuff has basically been tiling, at least as far as it even supports multiple windows
[00:30:15] <hnOsmium0001[m]> didn't some android variant supports flotaing windows?
[00:30:23] <LordKalma> ville, the fins are an interesting folk. always in the european stats as the most "isolationists", practiced social distancing well before the pandemic, and then really cuddly on saunas haha
[00:30:25] <rpav> touch interface on ios/android are pretty terrible compared to potential though
[00:30:44] <rpav> hnOsmium0001[m]: yeah, but it's kinda crap too, though i think like samsung has a desktop-mode for some of their shit which is probably more useful
[00:30:53] <LordKalma> hnOsmium0001[m], paranoid android had bubbles/floating windows since like 7 or 8
[00:31:04] <LordKalma> then paranoid died, and now there's other stuff
[00:31:19] <LordKalma> and android itself upstreamed some of that crap, but worse
[00:31:36] <rpav> but like, i have it set up so i "slice" with 3 fingers horizontally or vertically and split the screen, then tap/app, or swipe for desktop switching, etc
[00:32:43] <rpav> touchegg needs rotates though ;/ and really the UI could be even slicker .. hlwm doesn't support nice drag/swap for example, but this isn't conceptually difficult
[00:34:12] <LordKalma> bah, linux on tablets/hybrids is still shit
[00:34:17] <LordKalma> a shame
[00:34:28] <LordKalma> it's the price of fragmentation, as we said in the afternoon
[00:35:54] <rpav> everything's shit
[00:36:08] <rpav> you mostly need to find the thing that does the most things you need
[00:36:20] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Quit: Leaving.)
[00:36:29] <hnOsmium0001[m]> looked around on the internet a bit, most solutions of tiling WM under tablet mode doesn't seem optimal at all
[00:37:01] <hnOsmium0001[m]> having to click a button on your status bar to move windows around seems just unintuitive, compared to having e.g. a VS style docking system and simply drag windows around
[00:37:05] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[00:37:54] <hnOsmium0001[m]> though it's not like any of my laptops runs linux at the moment...
[00:38:06] <rpav> you have to do a fair bit of custom work and be creative
[00:38:33] <LordKalma> I'll say this again and again, I find some things in linux shocking. Some result of "radical freedom". I was once watching an interview with a full time linux dev, the #2, right after Linus, I forget his name. And he was talking about something I do own. Fake-as prolifix serial-usd adapts. And how they write drivers that work and etc etc. And I was thinking "wuuut? why the fuck are YOU developing the drivers of a product of some
[00:38:33] <LordKalma> company?!?!". I think the whole idea of "forcing" drivers to be upstreamed, and lack of external APIs really to hinder closed source stuff just puts works on THEM that could be better spent imho. But I know manhy of you will disagree, and think it's worth it. I don't, just that.
[00:38:44] <hnOsmium0001[m]> in fact
[00:38:53] <hnOsmium0001[m]> why isn't a WM based on qt-advanced-docking-system a thing!?
[00:38:59] <rpav> dragging windows isn't really a priority for me when typically i just want fullscreen with keyboard, but occasionally a split with some-other-thing
[00:39:10] <rpav> hnOsmium0001[m]: because qt's thing is shit
[00:39:33] <LordKalma> hnOsmium0001[m], Qt-ADS is kinda shit. I've reported a couple things to the dev.. I think I have a PR merged even. but the thing isn't that good...
[00:39:34] <hnOsmium0001[m]> QDockWidget is, qt-advanced-docking-system is, not in my opinion
[00:39:45] <LordKalma> QDockWidget is just useless crap
[00:39:47] <hnOsmium0001[m]> s/is, not/is not,/
[00:39:53] <LordKalma> Qt-ADS is mehhhhh
[00:40:04] <rpav> i dunno
[00:40:08] <rpav> docking is not what i want though
[00:40:17] <rpav> i want "make a split" then "put a window there"
[00:40:42] <rpav> and if i close the window, the split shoudl remain .. ideally it'd have a nice button when i hover for moving it, but one step at a time
[00:40:46] <LordKalma> the application I envision to build would have a VS-style advanced UI, and I looked at Qt-ADS and the KDAB equivalent
[00:40:49] <LordKalma> neither of thjem good
[00:40:59] <rpav> hlwm does most of this .. no resizing or window drag but those are not things i commonly care about
[00:41:32] <LordKalma> KDDockWidgets is also weird. Thick ass borders that take half your pixels
[00:41:35] <rpav> for touch i want big gestures for basic control .. finer-grained multitouch for other things would be neat, but
[00:41:36] <hnOsmium0001[m]> I'm mainly talking about the scenario of using a tiling WM without a keyboard, i.e. tablet mode
[00:41:42] <rpav> hnOsmium0001[m]: i am too
[00:41:54] <rpav> i'm talking about what i literally use and have working
[00:42:11] *** Joins: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:b838:af46:b551:85b)
[00:42:12] <LordKalma> on android there is split mode for two apps that's kinda of like a tiling VM
[00:42:13] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[00:42:18] <rpav> take three fingers and slash across the screen up or down, get a split that direction .. you can do this multiple times for multiple sub-splits
[00:42:24] <LordKalma> and you basically go to the open apps view and drag one to an edge
[00:42:36] <rpav> 4-finger pinch will close hte app, then close that split if you do it again
[00:42:58] <rpav> 3-finger pinch will C-w because it closes app windows / browser tabs / etc, and that's commonly useful
[00:43:19] <rpav> 4-finger swipe will switch desktops, 3-finger tap brings up a pie menu of apps
[00:43:26] *** Quits: rg (~r-g@163.172.58.132) (Quit: rg)
[00:43:30] <LordKalma> how long took you to do that? hahah
[00:43:47] <rpav> not long .. touchegg handles the swipes, i just assign the command it calls to do the hlwm operation
[00:44:14] <rpav> i figured i'd have to write my own wm to do similar til li realized i could wire up the things
[00:45:42] <rpav> the _most_ work has really been handling (fucking) dbus events and doing the right xinput calls and making sure e.g. keyboard plug sets the keymap right (caps=ctrl), etc
[00:47:53] <rpav> but, while the CPU is shitty in modern terms .. mostly a dog at compiling C++ .. it's fast enough in every other regard it feels very snappy, with a real web browser, etc
[00:48:06] <rpav> i should set up some kind of distributed thing so i can write C++ on there and have it compile remotely
[00:48:18] <LordKalma> haha setup github actions on your repos :p
[00:48:42] <rpav> or distcc or whatever
[00:49:10] <LordKalma> I once managed to setup jenkins on docker on my vps
[00:49:19] <hnOsmium0001[m]> meanwhile over here, I have a GPU that struggles to run glxgear at fullscreen 1440p
[00:49:27] <rpav> hnOsmium0001[m]: o.o
[00:49:27] <LordKalma> and give access to docker to jenkings (on docker) for it to create workers on the fly
[00:49:31] <hnOsmium0001[m]> struggle as in I get 20fps
[00:49:37] <rpav> wtf are you using
[00:49:38] <hnOsmium0001[m]> yeah......
[00:50:21] <hnOsmium0001[m]> to be fair, I got almost all of the parts this machine for free including this quadro fx 1800 from a friend of mine
[00:50:40] <LordKalma> slow GPU, but certified GPU
[00:50:49] <hnOsmium0001[m]> so I guess I can't complain that much? btw it's a xeon so no igpu
[00:50:54] <LordKalma> if you linus from LTT you'd think you need a quadro to run solidworks
[00:51:07] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:51:11] <PJBoy> I hate the android split screen
[00:51:21] <LordKalma> I don't use it either
[00:51:23] <LordKalma> but it's there
[00:51:24] <PJBoy> one of the apps is suspended when you focus on the other, so it's not even very useful
[00:51:41] <PJBoy> and if you bring up the keyboard, it scrolls the top half off-screen
[00:51:50] <hnOsmium0001[m]> LordKalma: I would very much rather have intel graphics at this point, due to all the pain I've went through trying to get the nvdia driver to work on linux
[00:52:08] <PJBoy> it's just an annoyance for when your phone lags while you're pressing the task manager button
[00:52:09] <rpav> this will run glxgears at 1920x1280 at 328fps, which let's face it isn't great, but i mean picom works pretty well
[00:52:16] <LordKalma> you can very likely get a cheap ass CPU off ebay for whatever socket/mobo you have
[00:52:19] <rpav> and so does basic steam stuff
[00:52:29] <hnOsmium0001[m]> both the latest nvidia driver and nouveau won't work
[00:52:54] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[00:52:57] <hnOsmium0001[m]> and win10 is just laggy as shit for about 5 minutes every time it wakes up from sleep, due to its questinoable opmization for HDDs
[00:53:13] <rpav> hnOsmium0001[m]: oh, you are probably not using the appropriate legacy driver
[00:53:23] <rpav> assuming that's an older card
[00:53:30] <LordKalma> see what I said about linux and drivers?
[00:53:33] <rpav> which if the latest doesn't work, is likely the case :P
[00:53:40] <rpav> LordKalma: bullshit
[00:53:44] <hnOsmium0001[m]> I am, I've tried literally every possible driver in the arch repo and AUR, the current 340xx one is the best so far
[00:53:51] <rpav> nvidia stuff is pretty specific and their deprecation of old stuff is very specific
[00:53:51] <hnOsmium0001[m]> but it's still quite broken
[00:54:07] <rpav> basically _every other thing_ in linux is plug-and-play; i don't even need to download anything
[00:54:28] <rpav> weird offbeat serial/usb stuff, bam recognized
[00:54:39] <LordKalma> rpav, I just think the kernel should have stable A[P|B]Is for drivers
[00:54:40] <gehn> linux is best nux
[00:54:43] <hnOsmium0001[m]> as in, textures randomly turn into garbage when it wakes from sleep (basically white noise)
[00:54:51] <LordKalma> instead of forcing you to the kernel ones
[00:54:57] <rpav> LordKalma: but why
[00:55:01] <LordKalma> I don't hate nvidia for wanting to control their software
[00:55:09] <LordKalma> but I can't say that around linux hahah
[00:55:18] <rpav> i don't want the Window situation where i have to go download some shady bullshit driver from some site
[00:55:23] <rpav> i want everything to be built in and work
[00:55:34] <LordKalma> windows downloads the official one for you anyway
[00:55:42] <LordKalma> and linux  distros have package managers
[00:55:46] <hnOsmium0001[m]> rpav: I know that part, I've also had the pleasure(!) to use a celeron something from like 7 years ago: it had trouble rendering youtube.com in <20 seconds
[00:55:52] <rpav> i don't hate nvidia, i think they're kinda idiots but what can you do .. the competition can't keep up so they kinda get to play it however they want
[00:55:55] <PJBoy> dodgy drivers four life
[00:56:02] <hnOsmium0001[m]> the sound system and display was painless though
[00:56:02] <rpav> hnOsmium0001[m]: o.O
[00:56:14] <rpav> like, _old_ celeron?
[00:56:15] <LordKalma> I just don't think 1) everything must be on the kernel, and 2) linux core devs should replace companies
[00:56:22] <LordKalma> and the latter happens because of the former
[00:56:30] <hnOsmium0001[m]> rpav: yes, old old
[00:56:47] <rpav> hnOsmium0001[m]: oh, yeah i can see that then .. they were pretty crap even when they were new
[00:57:19] <rpav> LordKalma: how about "companies ought to make hardware that conforms to a standard interface, so drivers are mostly unnecessary" :p
[00:57:57] <LordKalma> the lack of a kernel interface is my complain :p
[00:58:24] <hnOsmium0001[m]> I'm just angry that CUPs won't work nicely on windows, so I either have to eat printer manufacturers' shitty drivers, or trying to run CUP in WSL
[00:58:26] <LordKalma> afaik nvidia installs a kernel module as middleware to their drivers because GPL
[00:58:26] <rpav> it would solve nothign
[00:59:16] <rpav> e.g. you already get nvidia 3rd party drivers and dkms takes care of the things and "ABI" would not really change anything
[00:59:34] <rpav> i literally just point at nvidia driver packages and they install/work
[00:59:51] <rpav> nvidia doesn't even have to do anything because it builds for the kernel i'm using
[00:59:56] <LordKalma> that's usually the experience, if you don't have hybrid graphics, like I do, since I use a laptop
[01:00:40] <rpav> dunno, i never bothered with the optimus stuff
[01:01:07] <LordKalma> but in all honestly, those were shit even on windows in the beginning. I remember having to install intel's drivers before the AMD ones on a laptop I had or it would go to shit
[01:01:08] <rpav> i heard a number of years back it worked pretty well though, which is better than it did in like 2013
[01:01:15] <LordKalma> and there was some dude making custom driver packages
[01:01:35] <rpav> windows drivers are surprisingly shit these days .. tons of bundled crapware and generally poorly written
[01:01:49] <LordKalma> it's not just optimus... there are other software packages, all do different crap... it's a mess
[01:02:01] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:02:07] <rpav> like the lenovo yoga i have you basically get to choose between some set of functionality and windows fully working
[01:03:06] <LordKalma> we seem to arrive always to the same conclusion
[01:03:08] <LordKalma> everything's shit
[01:04:16] <rpav> i think it's hard to reach another conclusion if you use most things to the Nth degree
[01:04:43] *** Joins: sbrothy (~sbrothy@192038134061.mbb.telenor.dk)
[01:05:08] <rpav> like i prefer linux and i think it does quite well on a number of fronts, but it's still got a bunch of crufty holdover shit in UI-land etc
[01:05:19] <rpav> it's sortof scary how much of a dumpster fire basically everything is
[01:05:31] <LordKalma> I know, right?
[01:05:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:c6d6:7de6:6176:c300) (Ping timeout: 240 seconds)
[01:06:21] <rpav> like tons of money in mobile and the web, because they make the money, but like .. mobile is hardly a paragon of anything, and awash in a sea of trashy apps and games
[01:06:36] <rpav> the web is a towering nightmare of aging browser modules
[01:07:40] <rpav> while i'm not the hugest fan of "simplified" apps like polybar, i can kinda see the point of having a small, manageable codebase that does the things, and is pretty transparent
[01:08:49] <LordKalma> relevant: https://drewdevault.com/2020/03/18/Reckless-limitless-scope.html
[01:09:28] <rpav> like in C++ it's definitely nice to use small, straightforward modules for things, but like, boost/qt/etc are definitely similar aging byzantine labyrinths .. even std to no small degree
[01:09:46] <rpav> yeah i saw that
[01:10:06] <LordKalma> the problem is big libraries and frameworks like Qt is that they become large in scope and slow moving
[01:10:19] <rpav> i mean, i think the same article likely applies word-for-word to OS's, but
[01:10:28] <LordKalma> Widgets, even though they are mostly a solved problem, yeah, I know and etc, like, you can't really touch them now
[01:10:35] <LordKalma> the barrier to entry of any feature is hugeeeeee
[01:10:36] <rpav> yeah
[01:10:42] <rpav> tech is also a bit of a moving target
[01:11:05] <LordKalma> yes, tech moves fast, and big frameworks are hard to move... F=ma...
[01:11:10] *** Joins: markong (~kvirc@213.146.188.203)
[01:11:13] <LordKalma> big m means big F for little a
[01:11:23] <rpav> as slow as C++ developed, _it's_ a huge moving target in the time Qt's been around, not to mention we went from "dma is pretty neat" to "hardware-backed GL rendering"
[01:12:17] <LordKalma> Qt's API hasn't aged particularly well. that same API today would be shared_ptrs... like copperScipe's API
[01:12:39] <rpav> or even unique_ptr since everything is single-parent
[01:12:50] <LordKalma> yes, good point
[01:13:09] <rpav> though really the whole thing ought to be torn apart, since e.g. you can't display the same widget in 2 places
[01:14:34] <LordKalma> widgets are so massive and untoucheable and the API so bad they made a literal JS runtime and pseudo-language instead of renovating widgets hahah
[01:14:46] <rpav> heh
[01:14:46] <LordKalma> probably in part also because "MAH API STABILITY"
[01:15:26] <rpav> this seems more lazy and "let's steal what the cool kids are doing" but i dunno
[01:15:54] <rpav> maybe it was the most expedient way to provide an alternative and hope everyone moves there
[01:16:02] <rpav> though JS runtime .. eugh
[01:16:07] <LordKalma> it was clearly a desperate attempt at catering to companies with the following pitch "see? you can hire cheap webdevs to do your car's UIs instead of expensive C++ programmers"
[01:16:19] <rpav> and the CSS stuff that's so halfassed (and CSS is halfassed to begin with)
[01:16:28] <rpav> probably
[01:16:32] <LordKalma> likely
[01:16:56] <rpav> "develop once for both the web and desktop!"
[01:17:07] <LordKalma> it was to remove scary c++ off the loop and replace it with the cheapest programming labor force
[01:17:17] *** Quits: proller (~p@2a02:6b8:b081:8014::1:1e) (Ping timeout: 240 seconds)
[01:17:33] <LordKalma> also, CSS... yeah, let me rant another thing. After i started using CSS in this JS project.. why the fuck didn't Qt implement MORE of CSS-ish stuff on their APIs?
[01:17:58] <LordKalma> god, like, why do I need to add spacers with some behaviour to vboxlayouts? why can't I use a flex-like API?
[01:18:28] <LordKalma> the wrappers most web libraries have for flex, like the bootstrap classes, are so convenient once you understand the basics
[01:18:33] <rpav> i'm not sure flex is really the best, but
[01:18:36] <LordKalma> col and col-auto go a loooong way
[01:18:52] * rpav is still more like "why isn't the web just boxes and glue"
[01:19:04] <LordKalma> div class="row" with div class="col" or div class="row auto" is very convenient stuff
[01:19:11] <rpav> eh
[01:19:18] <LordKalma> not the crude flex css :D
[01:19:20] <rpav> it's still like, A-B problem sortof
[01:19:39] <LordKalma> still, Qstylesheets suck in comparison indeed
[01:19:39] <LordKalma> anyway
[01:19:51] <rpav> not that deeply hierarchical layouts is better, but it's not the only alternative
[01:20:07] <rpav> yeah qt stylesheet stuff lacks a lot of highly necessary things to be generally useful too
[01:20:12] <rpav> like "use the default, except"
[01:20:14] <LordKalma> even the xaml crap is decent enough, if you forgive the XML part of xaml
[01:20:29] <rpav> you can either style something, or not touch it and have the default look, for some things
[01:20:35] <LordKalma> xml is soo verbose, ffs
[01:20:47] <LordKalma> same with html I guess
[01:20:54] <LordKalma> anything with closing tags
[01:20:56] <rpav> yeah i think everyone is finally on the same page with "xml is bad"
[01:21:18] <LordKalma> it's just annoying to write
[01:21:38] <LordKalma> at leasdt when I'm writing html now on vscode I installed a couple extensions that, for example, rename the closing tag while I edit the opening tag
[01:22:22] <rpav> that's a neat idea
[01:22:42] <rpav> though honestly i think editing text for such is pretty last-century ;/
[01:22:49] <LordKalma> yeah, it does like a shadow cursor on the equivalent position on the closing tag so you edit both at the same time
[01:24:00] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[01:24:39] *** Quits: geli (~gelignite@55d4fbf8.access.ecotel.net) (Quit: Stay safe!)
[01:25:52] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:27:09] *** Quits: robod34 (~Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:30:55] *** Joins: proller (~p@2a02:6b8:b081:8010::1:3b)
[01:35:03] *** Joins: nelubit (~nelubit@user/nelubit)
[01:37:45] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:40:07] <rpav> slow c++ day
[01:41:08] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:09] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[01:41:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:15] *** ChanServ sets mode: +v npaperbot
[01:48:05] <DSpider> is this a good way to get the extension from a path to a file?
[01:48:13] <DSpider> 'const std::string extension = path.substr(path.size() - 3).data();'
[01:48:17] <rpav> are you on c++17
[01:48:39] <DSpider> the path is an std::string_view
[01:48:41] <DSpider> yes
[01:48:44] <LordKalma> no, it's not
[01:48:54] <imMute> DSpider: absolutely not, first of all, it breaks if the extension is not exactly 3 chars, or if tehre's no extension at all
[01:48:57] <LordKalma> files can have more than 3 chars of extension since white a while
[01:49:09] <imMute> LordKalma: since pretty much anything other than really old windows
[01:49:20] <LordKalma> I would use some regex like \..* and use the last match haha
[01:49:42] <imMute> take everything after the last '.'  and do $WhateverYouWant for when there's no '.'
[01:49:46] <rpav> DSpider: std::filsystem::path::exension
[01:49:50] <rpav> err, extension
[01:51:06] <DSpider> I'm only expecting 3 characters, since that's what most video formats use
[01:51:19] <LordKalma> dont' do thinks that will break
[01:51:50] <rpav> never assume
[01:52:14] <rpav> { filesystem::path a = "foo.bar"; filesystem::path b = "foo"; cout << a.extension(), b.extension(); }
[01:52:15] <geordi> ".bar", ""
[01:52:18] <DSpider> there's also .rmvb or .m2ts, but it has zero support for those
[01:52:29] <rpav> { filesystem::path a = "foo."; cout << a.extension(); }
[01:52:30] <geordi> "."
[01:53:01] <imMute> rpav: that seems dumb that the . is included if there's an extension, but not if there isn't..
[01:53:06] <rpav> but then generally you can compare vs ".ext" and you can still tell if it's a . or no-.
[01:53:15] <rpav> imMute: only if you don't think about it
[01:53:24] <imMute> rpav: ah, that's a good point
[01:53:25] *** Joins: seninha (~seninha@user/seninha)
[01:53:53] <rpav> fs is sortof a "well if it worsk sortof like modren FS's" which doesn't include a ton of weird ass old shit, but .. that's really a point in its favor imo
[01:56:22] <DSpider> and another thing, should std::string_view be passed as 'const' as a function parameter?
[01:56:38] <DSpider> I read somewhere that it doesn't matter
[01:56:49] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:57:37] <DSpider> since it doesn't store its own data, right?
[01:58:33] <RandomReader> DSpider - the substring approach would have a file named "unfortunate clavi" be treated like a movie file
[01:58:41] <RandomReader> there's also .mpeg and .webm in common use
[01:58:49] <RandomReader> (so no, do it right :P)
[01:59:00] *** Quits: sbrothy (~sbrothy@192038134061.mbb.telenor.dk) (Quit: leaving)
[01:59:23] <RandomReader> it's normal to pass string_view as a value, not as a reference
[01:59:47] <RandomReader> assuming that's what you were asking .. just "const" is a different matter
[01:59:58] <DSpider> thank you
[02:00:09] <DSpider> const reference, yeah
[02:00:35] <imMute> pass by value or const value.  passing by reference adds an indirection that might not get optimized out
[02:01:51] <DSpider> an std::string_view is just a pointer and a size, right? should be cheap enough to pass by value
[02:03:02] *** Quits: oknenavin (~nomo@95.87.208.95) (Ping timeout: 240 seconds)
[02:04:00] <LordKalma> { filesystem::path a = ".gitignore"; cout << a.extension(); }
[02:04:01] <geordi> ""
[02:04:05] <LordKalma> hum... interesting
[02:04:30] <LordKalma> imMute, yes, I think only DOS had that limitation?
[02:04:54] <imMute> LordKalma: one of the early windows kernels and/or filesystems, IDK exactly which.
[02:06:07] <LordKalma> I remember perfectly being a teenager and during a project being presented to SolidWorks and see a 6 char extension for the first time
[02:06:16] <LordKalma>  .sldprt and also .sldasm
[02:06:31] <LordKalma> in fact, soliworks insisted on .SLDPRT and .SLDASM
[02:09:29] <ville> gotta love it when you're trying out combinations to get something to work and don't see you hit the right one because you've so much debug output. that's an hour i'll never get back
[02:09:46] <RandomReader> LordKalma - that's one of those cases where std::filesystem deviates from platform conventions
[02:10:12] <LordKalma> of course it does. have you ever saw a stdlib feature being sensibly implemented? hahah
[02:10:15] <RandomReader> Windows treats that as a no-name, all-extension case
[02:10:36] <LordKalma> windows doesn't even let you create that file from explorer, anyway
[02:10:41] <ville> LordKalma: being consistent across platforms is a reasonable choice
[02:10:55] <LordKalma> yes, it is, I was just throwing shade
[02:11:08] <imMute> LordKalma: windows 10 does
[02:11:27] <PJBoy> windows has allowed that since 7 I believe
[02:11:31] <PJBoy> XP definitely didn't
[02:11:53] <PJBoy> but the save-as dialog did allow it
[02:12:12] <RandomReader> FAT is the filesystem with 8-char name, 3-char extension, with the . not even being present at all
[02:12:26] <PJBoy> oh that's a FAT limitation?
[02:12:31] <PJBoy> TIL
[02:12:53] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:13:09] <RandomReader> VFAT is the extension on top of it that adds additional name data
[02:13:09] <imMute> yeah, I seemed to remember that it was the FS that had the limitation, not necessarily the rest of DOS
[02:13:24] <RandomReader> which I *think* is tied to FAT32, at least in MS implementations, but I can't remember
[02:14:07] <RandomReader> FAT just stores fixed-width fields, space as filler
[02:15:19] <PJBoy> gotta say, I love the NTFS metadata
[02:15:42] <PJBoy> wish it was easier to edit with code though
[02:16:31] <LordKalma> sure, because all I want is for my filesystem records to be easily editable
[02:16:33] <RandomReader> yeah I like NTFS's design, it's amazingly flexible
[02:16:57] <LordKalma> there aren't like 23234534534534 malwares that attack  files or anything
[02:17:18] <RandomReader> plenty of newer filesystems with features I'd also like, but as a base design, NTFS is neat
[02:17:27] <LordKalma> since that old annying thing from many years ago that put an icon inside thumb drives for the thumb drive that run a replicating script before opening the dir haha
[02:17:58] <LordKalma> to ransomware
[02:18:33] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[02:19:08] <RandomReader> ntfsfastfind is one of those tools that's simultaneously awesome and also should not have to exist...
[02:20:02] <PJBoy> oh neat
[02:20:26] <PJBoy> I might start using that
[02:21:07] <RandomReader> I've only used it a handful of times, but when I have, it's because I was *that* disorganized :D
[02:21:33] <PJBoy> googling for it led me to https://github.com/ariccio/altWinDirStat
[02:21:41] <PJBoy> which is a hilariously honest github repo
[02:22:00] <RandomReader> lol
[02:22:04] *** Joins: sbrothy (~sbrothy@192038134061.mbb.telenor.dk)
[02:22:27] <sprout> cannot decide.  what do you people think?  does it make sense to put a bunch of functions into a class as static member or should I better inline?
[02:23:11] <sprout> guess I should inline... kind of tempted to go full OO on it
[02:23:19] <RandomReader> not entirely sure what you're asking .. class in C++ is a custom type, not an organizational container, if that's what you mean -- we have namespaces for that
[02:23:19] <PJBoy> wcscpy_s and wcsrchr are two of the worst function names I've ever seen in my life
[02:23:33] <RandomReader> inline seems entirely unrelated
[02:25:00] <sprout> yah,  I agree
[02:25:46] <PJBoy> > Build finished with exit code 0
[02:25:54] <PJBoy> yo I got there in the end
[02:27:49] *** Joins: Youmu (uid129469@user/condy)
[02:28:27] <LordKalma> Hahaha crashes at runtime
[02:28:39] <PJBoy> fixed ~1300 of what clang-tidy calls warnings
[02:28:46] <RandomReader> Wide Char String CoPY, etc
[02:28:54] <RandomReader> makes about as much sense as any of the C-era names do
[02:29:40] <PJBoy> yeah and like Wide Char String Reverse CHaRacter search for the other one
[02:30:03] <PJBoy> I never managed to think of a reasonable expansion of "chr" that implies a search
[02:30:30] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[02:30:38] <LordKalma> All C APIs suck because of this. Lack of overloading and templating means you'll have an api based around naming construction and suffixes
[02:31:19] <PJBoy> I wouldn't mind one bit if it was `find_char_reverse_wide` or whatever
[02:31:28] <LordKalma> Not to say those features are good or not. But the lack thereof results in crap like this
[02:31:42] <PJBoy> but wcsrchr is the kind of name a cat comes up with
[02:33:03] <PJBoy> (you know, when it walks on your keyboard)
[02:36:00] <sbrothy> memfrob("Still havin fun with my precompiled header", 42);
[02:36:00] <sbrothy> memfrob("Though I think I will go to sleep now. Bye", 42);
[02:36:06] *** Joins: EdFletcher (~PKD@user/edfletcher)
[02:40:43] *** Joins: ferdna (~ferdna@user/ferdna)
[02:41:21] *** Joins: jkaye (~jkaye@2601:281:8300:7530:443b:68a:5f3e:dbe3)
[02:42:11] *** Quits: sbrothy (~sbrothy@192038134061.mbb.telenor.dk) (Read error: Connection reset by peer)
[02:43:38] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 250 seconds)
[02:46:41] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Quit: Quit)
[02:53:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:443b:68a:5f3e:dbe3) (Ping timeout: 240 seconds)
[02:55:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:57:56] *** Quits: proller (~p@2a02:6b8:b081:8010::1:3b) (Ping timeout: 250 seconds)
[02:59:58] *** Joins: BauComeTeuCu (~cppcon@12.159.165.130)
[03:00:32] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[03:03:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[03:03:36] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[03:13:24] *** Joins: proller (~p@2a02:6b8:b081:7215::1:4)
[03:15:32] *** Quits: jsbach (~jsbach@2a01:c23:613f:6700:1138:8625:6687:4d6c) (Ping timeout: 240 seconds)
[03:16:31] <kalven> using zig as a c++ compiler is pretty neat
[03:17:16] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[03:20:40] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[03:28:16] <Ameisen> ok, why the heck does VS2022 add files in the temp directory as 'Entire Solution'?
[03:31:22] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:32:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[03:45:34] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:29] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[03:56:21] *** Quits: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c) (Quit: WeeChat 3.4)
[04:01:23] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:02:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:04:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[04:05:04] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (Quit: The BNC has broken!)
[04:05:20] *** Joins: FLHerne_ (flh@flherne.uk)
[04:06:11] *** Quits: ambasta (~ambasta@2001:470:69fc:105::1:3973) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: FLHerne (flh@flherne.uk) (Ping timeout: 268 seconds)
[04:08:18] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:09:03] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[04:09:27] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:09:27] *** FLHerne_ is now known as FLHerne
[04:09:34] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:09:44] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:09:51] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:10:21] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[04:12:33] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:12:56] <BauComeTeuCu> Ameisen, community>
[04:12:58] <BauComeTeuCu> ?
[04:13:58] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[04:16:31] <Ameisen> ?
[04:20:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[04:20:49] *** Joins: ambasta (~ambasta@2001:470:69fc:105::1:3973)
[04:22:02] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 240 seconds)
[04:23:23] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Ping timeout: 256 seconds)
[04:23:56] <BauComeTeuCu> community version?
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:25:37] *** Joins: EdFletcher (~PKD@user/edfletcher)
[04:30:11] *** Quits: DSpider (~DSpider@82.79.237.35) (Ping timeout: 256 seconds)
[04:31:32] *** Quits: proller (~p@2a02:6b8:b081:7215::1:4) (Ping timeout: 250 seconds)
[04:34:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[04:34:15] *** Joins: pulse (~pulse@user/pulse)
[04:35:18] *** Joins: proller (~p@80.240.216.69)
[04:38:55] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:40:13] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[04:40:36] *** Joins: proller (~p@2a02:6b8:b081:6429::1:14)
[04:42:21] *** Joins: NovumDXW (~NovumDXW@2409:8a28:3610:29b0:74d8:d16b:92b3:8d89)
[04:47:05] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:47:13] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:48:50] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[04:51:35] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[04:52:06] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[04:52:37] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[04:53:55] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[04:54:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e9a6:1557:3796:678c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:54:58] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[04:55:02] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[05:03:53] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:06:24] *** Quits: BauComeTeuCu (~cppcon@12.159.165.130) (Quit: This computer has gone to sleep)
[05:07:57] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[05:10:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:12:08] *** Quits: proller (~p@2a02:6b8:b081:6429::1:14) (Ping timeout: 268 seconds)
[05:13:56] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[05:14:58] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[05:15:28] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[05:16:12] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[05:16:52] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[05:18:13] *** Joins: malloy (~jimery@113.116.52.211)
[05:19:58] *** Joins: BauComeTeuCu (~cppcon@12.159.165.130)
[05:22:35] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[05:24:00] <Alipha> LordKalma: I've started reading the backlog. Juliu has been here, sighs
[05:26:11] *** Quits: irrenhaus3 (~xenon@HSI-KBW-046-005-002-171.hsi8.kabel-badenwuerttemberg.de) (Quit: Lost terminal)
[05:26:26] *** Joins: proller (~p@2a02:6b8:b081:6419::1:a)
[05:26:58] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:30:50] *** Joins: spartacus0117 (~root@104-237-135-91.ip.linodeusercontent.com)
[05:30:59] *** Parts: spartacus0117 (~root@104-237-135-91.ip.linodeusercontent.com) ()
[05:31:25] <RandomReader> do I need to take a closer look?
[05:34:19] *** Quits: NovumDXW (~NovumDXW@2409:8a28:3610:29b0:74d8:d16b:92b3:8d89) (Quit: Leaving)
[05:35:24] *** Quits: BauComeTeuCu (~cppcon@12.159.165.130) (Quit: This computer has gone to sleep)
[05:39:19] <kalven> nah
[05:40:05] <RandomReader> ok, there's hope then
[05:40:44] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[05:41:08] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:16] *** ChanServ sets mode: +v npaperbot
[05:49:31] <kalven> Juliu in a nutshell: https://xkcd.com/793/
[05:56:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[05:59:40] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[06:00:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[06:14:24] *** Joins: hexingb (~hexingb@111.32.64.41)
[06:23:59] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[06:26:58] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:36:44] <hnOsmium0001[m]> shower thought: why isn't there language lawyering with web standards, unlike with c++?
[06:37:23] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:39:08] <Alipha> RandomReader: the conversation was civil. It's just Juliu comes in with a lot of notions that need correcting, which generates a lot of dialog
[06:50:02] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:55:38] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:56:30] <AmR> I try build openssl with " perl Configure VC-WIN32 no-shared no-stdio no-sock no-asm --prefix=C:\OpenSSL " I got that error " makefile(243) : fatal error U1001: syntax error : illegal character '{' in macro " Any one know How Fix that ?
[07:05:28] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:11:00] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 250 seconds)
[07:11:52] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[07:16:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[07:17:12] *** Joins: adeliktas1 (~adeliktas@i59F4A1E6.versanet.de)
[07:19:02] *** Quits: adeliktas (~adeliktas@i59F4DA04.versanet.de) (Ping timeout: 240 seconds)
[07:19:02] *** adeliktas1 is now known as adeliktas
[07:21:34] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:25:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:26:08] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[07:26:56] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[07:35:19] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[07:36:02] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[07:37:17] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:39:09] *** Joins: sigma_ (~sigma@164.215.199.59)
[07:39:19] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:40:02] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 240 seconds)
[07:42:36] <sigma_> hi, i tried attach to lib to gether. i have main exe , and many libs, but lib 1 need lib 2 and then attach to main. i using cmake for do this
[07:53:55] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[07:55:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:57:09] <gehn> sigma_, target_link_libraries(main lib1 lib2)
[07:57:24] <gehn> er, probably need PUBLIC/PRIVATE/INTERFACE with that actually iirc
[07:57:32] <gehn> target_link_libraries(main PRIVATE lib1 lib2)
[07:58:05] <gehn> sigma_, also ask #cmake
[07:59:51] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[08:01:23] *** Joins: smeso (~smeso@user/smeso)
[08:06:28] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[08:06:56] *** Quits: Figworm (FiggyWitIt@user/figworm) (Remote host closed the connection)
[08:08:07] *** Joins: Figworm (FiggyWitIt@user/figworm)
[08:08:33] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[08:18:31] *** Joins: hexingb (~hexingb@2409:8902:78c3:b022:a84e:32c2:c130:a06)
[08:25:02] *** Quits: hexingb (~hexingb@2409:8902:78c3:b022:a84e:32c2:c130:a06) (Ping timeout: 240 seconds)
[08:29:43] *** Joins: hexingb (~hexingb@111.32.64.41)
[08:32:36] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[08:37:42] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[08:39:47] *** Joins: malloy (~jimery@113.116.52.211)
[08:54:02] <sigma_> gehn: i know but if lib 1 need lib 2. you say if main need libs. i have a include thread on lib 1 but thread is a other lib
[08:55:19] <kalven> you can use target_link_libraries(lib1 lib2), then if you do target_link_libraries(main lib1), it will also get lib2
[08:55:57] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[08:57:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:04:15] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:04:22] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:06:57] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[09:10:01] <sigma_> kalven: tnx for your help, but if lib 2 attach to lib 1 , lib 2 can't attach to main. you need defined in main too
[09:19:04] <hnOsmium0001[m]> sigma_: if you want your linked libraries to be transitive, use PUBLIC instead PRIVATE
[09:19:33] <hnOsmium0001[m]> using it without a scope (i.e. PRIVATE/INTERFACE/PUBLIC) should be transitive too, but it's heavily unrecommended
[09:19:34] <johnny> hnOsmium0001[m], i'd like for you to expand on that. also is there any other language ecosystem with similiar properties with all these different compilers and libraries to deal with? python only has stuff like PEPs. there could be some of that there, but most of them don't make it any more diffiult for other implementations. unless they change syntax or something
[09:20:06] <johnny> but even so, in the end, it's still mostl ok to say.. my application requires python X. and you just can't use it with < X
[09:20:16] <johnny> or librarie*
[09:20:29] <hnOsmium0001[m]> johnny: is that regarding the language lawyering question?
[09:20:36] <johnny> yes
[09:20:44] <johnny> also python tends to be pretty practical
[09:20:46] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[09:20:53] <johnny> so it's not just that, it's also a cultural thing
[09:21:30] <hnOsmium0001[m]> well, for the case of web, you have multiple implementation: firefox, chromium, and edgehtml (in past tense) and the existence of the W3C standard that everyone should conform to
[09:21:34] <johnny> rust is in a similiar position as python structurally, minus the stdlib part
[09:22:11] <johnny> both have alternative implementations, but no real formal standard
[09:22:19] <hnOsmium0001[m]> what I find is that when talking about behavior differences between browsers, they just say "check on all of them" and rare do people talk about which one is actually standard conforming
[09:22:47] <hnOsmium0001[m]> I do agree lawyering can't really exist in e.g. python and rust, where the de facto implementatino (CPython and rustc, respectively) are bigger than the standards
[09:22:51] <johnny> well ie6 hate was a thing, and now it's safari hate (i'm using hate with a bit of hyperbole)
[09:23:37] <johnny> because many folks feel like safari is holding back the ecosystem. which is a big deal because you can't even use any other engine on ios!
[09:24:16] <johnny> at least on android , mac, windows, and linux you can install alternative engines. which is the only reason firefox was able to break out
[09:24:59] <johnny> i guess i feel like i've talked about which ones were and weren't standards conforming before trident died
[09:25:31] <johnny> there was a similiar movement to drop ie7 as well now that i'm remembering, and then ie8 . and then pople were kind of feeling the same about ie11
[09:25:43] *** Quits: sigma_ (~sigma@164.215.199.59) (Quit: Konversation terminated!)
[09:26:15] <johnny> HOWEVER.. most people were totally happy polyfilling and writing js with transformers to give them features not natively supported!
[09:26:31] <johnny> that's not something ive' seen in C++, or any other ecosystem really
[09:26:46] <johnny> the closest was python's import whatever from __future__
[09:27:11] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[09:28:44] <johnny> they did'nt just pollyfill stuff on the js side, but also for html and css whereever possible!
[09:29:04] *** Joins: Burgundy (~NA@86.121.143.206)
[09:29:11] <kalven> hnOsmium0001[m]: "check on all of them" is the pragmatic approach if you want to ship something that supports multiple browsers. It doesn't really matter what the standards say when you need to ship.
[09:29:40] <johnny> i think he was going for a depeer meaning than that.
[09:29:46] <johnny> or rahter they were*
[09:29:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:30:06] <hnOsmium0001[m]> that's a very good point, the web standard doesn't actaully have any "undefined behaviors" while C++ does
[09:30:29] <hnOsmium0001[m]> which means in the former you will always get consistent results
[09:30:34] <johnny> hnOsmium0001[m], also, we used/use stuff like this https://caniuse.com/
[09:30:51] <hnOsmium0001[m]> whereas in the latter, if you don't pay attention to the standard, you can plant hidden mines in your code
[09:31:45] <johnny> hnOsmium0001[m], heck.. did you know that folks embed caniuse results into their buildsystem so they can choose which engines and versions to target?
[09:32:17] <kalven> When it comes to shipping apps made in C++, you're typically in control of the compiler used.
[09:32:59] <johnny> i swear most folks just tend to use whatever compiler comes with their system unless you're using an IDE
[09:33:01] <hnOsmium0001[m]> johnny: no that was really just a shower thought question, I was sitting on the couch letting my thoughts wonder and stumbled upon it
[09:33:07] <hnOsmium0001[m]> "huh why don't people do it to the web stuff?" is all it really is
[09:33:21] <johnny> it's a good though to have
[09:33:32] <hnOsmium0001[m]> nothing particularly deep, but you're enthusiasm on elaborating is appreciated :)
[09:34:04] <johnny> my point being isn't about these specific technical factors but the cultural factors that make such lawyering both possible and encouraged
[09:37:18] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 268 seconds)
[09:40:47] <johnny> i think we used to see a lot more languge lawyering in webdev, back when html seemed frozen before the movement to the whatwg
[09:41:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:17] *** ChanServ sets mode: +v npaperbot
[09:41:20] <johnny> now people feel like all the bits are there, and things mostly work as expected. so it's rare that you have to actually go rea it
[09:41:35] <johnny> and if something doesn't behave as you expect, you just make your own thing
[09:43:09] <johnny> hnOsmium0001[m], i bet we would have seen more language lawyering continue in webdev if xhtml had taken off. because then more people would hae to be more familiar with the spec
[09:43:25] <johnny> but rendering engines are so freakin forgiving
[09:44:07] <kalven> When people talk about language lawyering in relation to C++, it's typically about getting to the bottom about what the standard has to say about something.
[09:44:46] <kalven> In the olden days of HTML, language lawyering wasn't a thing because IE was the de facto spec anyway.
[09:52:55] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[09:53:20] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:01:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:01:21] <kalven> heh, the clang included with zig is pretty neat. Download a 40MB package and you get a clang 13.0 that builds the standard library on demand.
[10:08:08] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[10:10:39] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:12:18] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Remote host closed the connection)
[10:12:39] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:14:50] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Remote host closed the connection)
[10:15:09] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:17:26] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:20:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[10:26:26] <RandomReader> I think part of it is the approach too: C++ is a portable *language*, many of the others since simply define the environment
[10:26:53] <RandomReader> e.g. even something as simple as "int" having variable sizes isn't a concept elsewhere
[10:27:02] <RandomReader> which means there's much less to debate about "guarantees"
[10:31:53] <ville> c++ is just too complex. i can do a non-terrible job of reading and understanding a "rule" from the specification. at the end of the day i'm mostly left with the thought that this just shouldn't be a thing. these sort of things are not the the kind of things i should be spending effort on. 10+ years ago i remembered far more details than i bother with now
[10:32:09] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[10:33:53] <comrad> RandomReader: there are a lot of language that let you define the exact size of an integer
[10:33:59] <comrad> +s
[10:34:15] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[10:34:50] <ville> comrad: he was making the opposite point. c++ being one where you can't even though you have to care about it
[10:35:35] <ville> and yeah it doesn't help that it's complex that the rules in the specification are then buggy/inconsistent. when i do spend the effort to read and understand something from the specification it's hard to make the jump from blaming my own stupidity into blaming the standard for being buggy.
[10:36:43] *** Joins: fcc977 (~kaph@151.19.243.144)
[10:39:16] <ville> comrad: say javascript or python and such they just say their "number" type is something fairly specific. where as c++ leaves it quite open and floating point types even more so. now if you try to be portable you've to understand quite few implications from that and make allowances for that in code
[10:39:17] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Ping timeout: 240 seconds)
[10:39:53] <ville> or java even i guess
[10:40:09] <comrad> since i've learned that int is platform dependent and you want to wrote portable code you have to use the more specific types
[10:40:18] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 250 seconds)
[10:40:35] <comrad> ville: in java the types are guaranteed to be of a specific size, regardless of the platform below
[10:41:07] <kalven> you don't say
[10:41:24] <ville> comrad: yes i was lumping it with the "other" languages, not with c++
[10:41:39] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[10:41:59] <ville> (but admittedy it's been 15+ years since i programmed java)
[10:42:01] <comrad> but i always thought of this as the more system language specific part
[10:42:21] <comrad> in python i probably dont care and want it to be taken care of for me
[10:45:19] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[10:45:30] *** Quits: fcc977 (~kaph@151.19.243.144) (Remote host closed the connection)
[10:45:44] <comrad> i have to exchange data in binary format from 16bit to 64bit, it is a good thing that the type length is not hidden behind abstraction
[10:45:50] *** Joins: fcc977 (~kaph@151.19.243.144)
[10:48:14] *** Joins: oknenavin (~nomo@95.87.208.95)
[10:50:40] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:50:42] <RandomReader> right, I was saying that with C++, the language itself adapts to the target, so it changes, which makes it more complex and so there's more discussion about "is this the right way" or "is this result guaranteed"
[10:50:59] <RandomReader> many others don't do that, they say "this is the way it is everywhere", so there's no question and less to discuss
[10:54:15] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[11:01:32] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 250 seconds)
[11:02:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[11:02:55] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[11:10:39] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (Ping timeout: 256 seconds)
[11:17:37] *** Joins: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[11:21:01] <comrad> RandomReader: both things are good, but not optimal in every situation
[11:25:56] *** Quits: fcc977 (~kaph@151.19.243.144) (Read error: Connection reset by peer)
[11:28:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801)
[11:29:41] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:33:15] *** Quits: fcc977 (~kaph@151.43.53.126) (Remote host closed the connection)
[11:34:32] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:34:36] *** Joins: szymon (~ugh@37.120.156.250)
[11:35:17] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[11:37:11] *** Quits: szymon (~ugh@37.120.156.250) (Remote host closed the connection)
[11:37:57] *** Quits: fcc977 (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[11:38:11] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:38:48] *** Quits: chozorho (~chozorho@2601:146:300:c30::29ed) (Ping timeout: 250 seconds)
[11:39:39] *** Joins: szymon (~ugh@37.120.156.250)
[11:45:53] *** Quits: Figworm (FiggyWitIt@user/figworm) (Remote host closed the connection)
[11:49:38] *** Joins: szymon_ (~ugh@37.120.156.250)
[11:52:42] *** Quits: szymon_ (~ugh@37.120.156.250) (Client Quit)
[11:54:24] *** Quits: fcc977 (~kaph@151.43.53.126) (Ping timeout: 250 seconds)
[11:54:28] *** Joins: tesuji (~quassel@2a02:908:180:9500:64dc:7373:6d3:d9e5)
[11:55:56] *** Joins: jsbach (~jsbach@2a01:c23:5cd4:5d00:242d:9ac5:ca5a:20b9)
[12:06:04] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[12:09:43] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5324)))
[12:09:44] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[12:14:06] *** Joins: andreasbuhr (~quassel@p549db05b.dip0.t-ipconnect.de)
[12:14:06] *** Quits: andreasbuhr (~quassel@p549db05b.dip0.t-ipconnect.de) (Client Quit)
[12:15:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:15:02] *** Joins: Figworm (FiggyWitIt@user/figworm)
[12:16:49] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:20:50] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[12:21:29] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[12:22:34] *** Quits: szymon (~ugh@37.120.156.250) (Ping timeout: 250 seconds)
[12:31:05] *** Joins: szymon (~ugh@37.120.156.250)
[12:31:15] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[12:31:46] <foul_owl> Does anyone know how I can append a single extra LDFLAGS to make ?
[12:32:09] *** Joins: szymon_ (~ugh@37.120.156.250)
[12:32:28] <ville> foul_owl: a make file does not necessarily respect anything you set outside of it
[12:33:11] <ville> foul_owl: further the rules and their recipies don't necessarily utilize the LDFLAGS variable
[12:33:42] <ville> foul_owl: so the surefire way is to edit the makefile directly
[12:33:46] *** Joins: robod34 (~Username@79.113.195.239)
[12:33:52] <foul_owl> Ahhh
[12:34:09] <foul_owl> So the project in question is using cmake to generate those makefiles
[12:34:20] <ville> foul_owl: but if it's a "sane" makefile then the answer may be different
[12:34:28] <foul_owl> and unfortunately cmake doesn't seem to be accepting ldflags either
[12:34:49] <ville> can you edit the cmakelists.txt then?
[12:35:26] <LordKalma> cmake does respect ldflags
[12:35:39] <foul_owl> I tried invoking cmake with: cmake -E env LDFLAGS="-lstdc++fs" cmake ..
[12:35:48] <LordKalma> when you first configure it. you might need a clean build for that to work (namele deleting the cmake cahe)
[12:36:07] <foul_owl> Each test I try I nuke the entire source repo and do a fresh git clone
[12:36:39] <foul_owl> I'm running make with: make VERBOSE=1
[12:36:45] <LordKalma> what about `LDFLAGS="-lstdc++fs" cmake`
[12:36:54] <foul_owl> and make never passes -lstdc++fs in the linking step unfortuantely
[12:36:56] <LordKalma> (also, do out of source builds :D)
[12:37:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[12:37:08] <foul_owl> Thank you!! Let me try that :)
[12:38:03] <foul_owl> Ah still no luck
[12:38:20] <foul_owl> Also I've been building out of source ie mkdir build; cd build; cmake ..
[12:38:27] <LordKalma> good good
[12:39:19] <foul_owl> But with this not working I figured I would try recloning each time just to be safe
[12:39:51] <foul_owl> So unfortuantely `LDFLAGS="-lstdc++fs" cmake` doesn't work either
[12:39:52] <LordKalma> a stackoverflow thread seems to use '' instead of "", dunno if that makes a difference... `LDFLAGS='-lstdc++fs' cmake ..`
[12:41:04] *** Quits: proller (~p@2a02:6b8:b081:6419::1:a) (Ping timeout: 268 seconds)
[12:41:51] <foul_owl> No lucky sadly
[12:41:59] <LordKalma> https://cmake.org/cmake/help/latest/envvar/LDFLAGS.html
[12:42:03] <LordKalma> docs say it's supposed to work
[12:42:11] <LordKalma> " Its initial value is taken from the calling process environment."
[12:42:25] <ville> it's shell so of course it does in general, but not in this specific case. roughly speaking "" variables will be expanded, '' variables won't be expanded
[12:42:31] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[12:42:32] <barometz> it's possible for a CMakeLists.txt to override that, but they really shouldn't
[12:42:34] <LordKalma> foul_owl, would you mind checking your CmakeCache.txt for  CMAKE_EXE_LINKER_FLAGS_INIT, CMAKE_SHARED_LINKER_FLAGS_INIT, and CMAKE_MODULE_LINKER_FLAGS_INIT
[12:42:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:43:30] <ville> you can try: ls "$?" and ls '$?' commands in your shell
[12:43:39] <LordKalma> lemme see
[12:44:08] <ville> ($? being the environment variable that holds the exit status of last command)
[12:44:58] <LordKalma> $ ls "$?"
[12:44:58] <LordKalma> ls: cannot access '2': No such file or directory
[12:44:58] <LordKalma> $ ls '$?'
[12:44:58] <LordKalma> ls: cannot access '$?': No such file or directory
[12:45:02] <LordKalma> interesting, thanks
[12:45:13] <ville> oh i guess cat "$?" and cat '$?' would have been better
[12:45:17] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[12:45:28] <ville> err echo. anyways
[12:46:11] <LordKalma> I know cmakecache is supposed to be able to be used for controlling the build without regening the cmake system
[12:46:22] <LordKalma> I'm not sure how that works and whether that works with makefiles
[12:46:34] <LordKalma> so there's the real possibility make gets it from the cmake cache
[12:46:41] <LordKalma> thus why I suggested checking those variables
[12:47:22] <foul_owl> One second....looking
[12:48:02] *** Quits: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu) (Ping timeout: 240 seconds)
[12:48:08] <foul_owl> None of those flags show up in CMakeCache.txt
[12:48:14] <LordKalma> weird
[12:48:19] <LordKalma> whose cmakelists is it?
[12:48:26] <LordKalma> some project on the webs? or your project?
[12:48:35] <foul_owl> https://github.com/dashodanger/Obsidian
[12:49:23] <LordKalma> seems to be good cmake at a glance
[12:49:47] <LordKalma> CMakeSettings (now CMakeProfiles, but whatever)
[12:49:50] <LordKalma> toolchain files
[12:49:59] *** Quits: mitch0 (~mitch@84-236-20-10.pool.digikabel.hu) (Ping timeout: 256 seconds)
[12:50:13] *** Joins: baltazar (~baltazar@84-236-26-21.pool.digikabel.hu)
[12:50:37] <foul_owl> Of course I'm on Debian 10 and it's impossible to build because Debian 10 uses gcc 8 which requires special linking apparently for std::filesystem :(
[12:51:07] <LordKalma> can I suggest.... a gcc-latest docker image? hahah
[12:51:13] <foul_owl> lolll
[12:51:29] <foul_owl> But then whatever libs are in there probably mismatch my system etc
[12:51:48] <foul_owl> Can I modify the cmakelists file to include these linker flags?
[12:52:09] <LordKalma> sure you can
[12:52:16] <foul_owl> Like as the last line in the file, just append something to force it to link to -lstdc++fs
[12:52:25] <foul_owl> What does that syntax look like? o_O
[12:52:31] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:52:53] <LordKalma> add set(CMAKE_EXE_LINKER_FLAGS "-lstdc++fs") ibn line 34
[12:53:06] <foul_owl> thank you so much
[12:53:09] <foul_owl> let me try that...
[12:54:00] *** Joins: plastico (~plastico@neomutt/plastico)
[12:54:16] <LordKalma> don't forget to rm build :)
[12:55:16] *** Joins: szymon__ (~ugh@5.253.206.218)
[12:55:29] *** Quits: szymon (~ugh@37.120.156.250) (Ping timeout: 256 seconds)
[12:55:32] <foul_owl> Wait a sec...is it possible there is some sort of global cache for cmake somewhere
[12:55:41] <LordKalma> no, only the cmake cache file
[12:55:50] <foul_owl> Because I nuked the entire project dir again, didn't specify verbose, and I'm still getting verbose output
[12:55:52] *** Quits: szymon_ (~ugh@37.120.156.250) (Ping timeout: 268 seconds)
[12:58:24] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 276 seconds)
[12:58:26] <foul_owl> There must be some sort of global cache for cmake somewhere
[12:58:49] <LordKalma> if you deleted all cmake files, there isn't
[12:58:56] <LordKalma> git clean -xdf will cleanup your repo
[12:59:04] <LordKalma> you don't need to clone every time btw
[12:59:46] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[12:59:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:00:46] *** Joins: pulse (~pulse@user/pulse)
[13:01:19] <ville> LordKalma: take it you've not done much shell programming in bash or others? sticking different/more quotes is how you fix all problems
[13:01:35] <LordKalma> yeah, I haaven't
[13:01:45] <ville> and it's as horrible as it sounds
[13:02:00] <LordKalma> I had to do like the simplest script ever to make a docker entrypoint do different crap according to an env variable
[13:02:06] <LordKalma> and I tool longer than I'd like to admit
[13:02:10] <LordKalma> and it's still janky
[13:02:18] *** Joins: szymon_ (~ugh@37.120.211.213)
[13:02:36] <LordKalma> https://github.com/ruilvo/radioamadorismo-website/blob/master/frontend/entrypoint.sh#L6
[13:02:40] <LordKalma> ended up using this
[13:02:58] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:05:02] *** Quits: szymon__ (~ugh@5.253.206.218) (Ping timeout: 250 seconds)
[13:05:13] <LordKalma> foul_owl, git clean -xdf and git reset --hard are the best tools ever to come out of git
[13:05:48] <LordKalma> even though I've been bit by forgetting to stach new files and mindlessly run git clean -xdf only thinking about other stff *facepalm*
[13:06:27] <foul_owl> Thank you!!
[13:06:50] <foul_owl> No idea what is going on but after cloning in /tmp the flag is being passed now!
[13:06:52] <foul_owl> Thank you!!
[13:06:59] <foul_owl> Thank you so much for all your help :)
[13:07:01] <lionkor> Why is there no std api to create subprocesses (fork+exec, CreateProcess (or whatever WinAPI does))? With all the random stuff added, we might as well.
[13:07:31] <foul_owl> Ok so one last small issue
[13:07:41] <foul_owl> The flag has to go at the end it seems
[13:07:46] <foul_owl> https://stackoverflow.com/questions/46983630/add-l-flag-after-the-rest-of-the-flags
[13:07:58] <foul_owl> It's the first flag passed and its getting passed now but still getting that linker error
[13:08:11] <foul_owl> Is there a way to tell cmake I want that flag as the *last* flag passed?
[13:08:29] <LordKalma> target_link_libraries(YourExeTarget stdc++fs), the solution proposed, seems best to be
[13:08:36] <LordKalma> add that line as the last line in the cmake file
[13:08:48] <foul_owl> How do I say "all targets"
[13:08:55] <LordKalma> you don't
[13:09:06] <LordKalma> that file only has like one
[13:09:14] <ville> lionkor: do you try to push the "hello world"-level interface or some production-level interface through the committee?
[13:09:15] <foul_owl> Aha!
[13:09:23] <LordKalma> add_executable(
[13:09:23] <LordKalma>   obsidian
[13:09:24] <foul_owl> Thank you, sorry I don't know what a target is
[13:09:30] <LordKalma> is the only onew
[13:09:30] <foul_owl> Gotcha!!
[13:09:32] <foul_owl> Thank you!!!
[13:09:39] <LordKalma> so you'd add  target_link_libraries(obsidian stdc++fs)
[13:09:47] <LordKalma> add that at the end
[13:10:17] <ville> lionkor: and someone will come out and say there aren't necessarily processes that you can launch on all platforms c++ is targeting
[13:11:14] <LordKalma> idk, the freestanding implementation is a joke already anyway
[13:11:32] <LordKalma> and what the standard decides to acknowledge or not is so arbitrary
[13:11:48] <LordKalma> barely acknowledges shared libs, but accepts filesystems as a thing
[13:11:49] <LordKalma> so idk
[13:12:12] <foul_owl> So it chokes on linking qsavetex
[13:12:40] <foul_owl> I basically just need to pass -lstdc++fs to every single linking operation
[13:12:43] <LordKalma> ah I didn't notice those dependencies
[13:12:47] *** Joins: seninha (~seninha@user/seninha)
[13:13:03] <LordKalma> foul_owl, ah, I was being dumb
[13:13:11] <LordKalma> you have a way to globally set that
[13:13:22] <LordKalma> link_libraries(stdc++fs)
[13:13:28] <LordKalma> no target_* _D
[13:13:44] <LordKalma> add that in line 4, before any of the sub projects are added
[13:13:49] <LordKalma> so it propagates to them
[13:13:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:14:07] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:14:19] <foul_owl> Aha!
[13:14:20] <foul_owl> Thank you :)
[13:14:24] <LordKalma> PJBoy, why don't you use docker to get clan 13? or just build llvm from source?
[13:14:53] <lionkor> ville: same with threads - not all platforms have threads, not all platforms have hardware concurrency, even. I'd say the common subset of "create a process" arguments and abilities across major platforms is quite small. It's basically "path, arguments" and a return value. `system()` exists from C, and it does the trick for simple things, but it's really just a joke. Exactly what you said, ville: The standard already has filesystem stuff (to a
[13:14:55] <lionkor> stupid degree of detail), threads, localization, and I/O also makes a bunch of assumptions about the platform.
[13:16:48] <ville> lionkor: yes i am aware those things exist already. doesn't mean the above points won't act as detractors for every new thing you'd like to add
[13:18:04] <lionkor> I feel like i'm half-serious, half argumenting ad absurdum against a lot of std features
[13:19:08] <PJBoy> LordKalma, I don't get paid enough to build llvm from source
[13:20:24] <foul_owl> LordKalma: Thank you so much for the help! That worked!!
[13:22:25] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[13:24:10] *** Joins: Burgundy (~NA@86.121.143.206)
[13:24:21] *** Joins: szymon__ (~ugh@37.120.156.163)
[13:24:43] *** Parts: Burgundy (~NA@86.121.143.206) ()
[13:25:12] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:6d96:190f:824f:1d2)
[13:25:21] <LordKalma> No problems, glad it worked
[13:25:26] *** Joins: Burgundy (~NA@86.121.143.206)
[13:26:32] *** Quits: szymon_ (~ugh@37.120.211.213) (Ping timeout: 240 seconds)
[13:35:14] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[13:37:15] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Client Quit)
[13:37:35] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[13:38:32] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (Ping timeout: 240 seconds)
[13:41:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:18] *** ChanServ sets mode: +v npaperbot
[13:45:39] <LordKalma> PJBoy, you could just try to build the clang-extra-tools package, just that one
[13:47:28] *** Joins: proller (~p@2a02:6b8:0:40c:d6ea:b953:76ed:c329)
[13:48:49] *** Joins: szymon_ (~ugh@185.244.214.217)
[13:51:34] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[13:51:59] *** Quits: szymon__ (~ugh@37.120.156.163) (Ping timeout: 268 seconds)
[13:52:41] *** Joins: foul_owl (~kerry@174-21-143-101.tukw.qwest.net)
[13:52:51] *** Joins: szymon__ (~ugh@37.120.211.206)
[13:55:41] *** Quits: szymon_ (~ugh@185.244.214.217) (Ping timeout: 268 seconds)
[14:04:50] <very_sneaky> PJBoy: or there's https://hub.docker.com/r/conanio/clang13-ubuntu16.04, which you could use in a CI task, or not
[14:05:22] <PJBoy> maybe some other time
[14:06:01] <very_sneaky> I've always been a bit surprised there isn't better support for getting previous/experimental versions of compilers on linux
[14:06:04] <PJBoy> also I'm on 20.04
[14:06:06] <very_sneaky> it's very distro dependant
[14:06:25] <very_sneaky> does that matter? just means you'd be building with an older glibc
[14:06:32] <very_sneaky> which should still be forward compatible
[14:06:41] <PJBoy> I saw 16.04 and assumed that mattered, idk
[14:06:46] <very_sneaky> nah it shouldn't
[14:06:47] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 268 seconds)
[14:07:41] *** Joins: hexingb (~hexingb@36.155.28.143)
[14:07:54] *** Joins: szymon_ (~ugh@185.156.174.147)
[14:08:05] *** Quits: szymon_ (~ugh@185.156.174.147) (Remote host closed the connection)
[14:08:09] <PJBoy> assuming things won't be forward compatible is what allows those things to evolve :p
[14:08:37] <very_sneaky> glibc is famously forward compatible
[14:09:40] <PJBoy> I've never heard that before tbh
[14:09:42] <very_sneaky> which is honestly better than backward compatible tbh
[14:09:53] *** Joins: fcc977 (~kaph@151.43.53.126)
[14:10:02] <PJBoy> and no mention on their wikipedia page
[14:10:06] <PJBoy> <_<
[14:10:29] *** Quits: szymon__ (~ugh@37.120.211.206) (Ping timeout: 268 seconds)
[14:11:11] <very_sneaky> wait. maybe it is backward compatibility
[14:11:15] <very_sneaky> now i'm confusing myself
[14:11:33] <very_sneaky> if you build with glibc 2.17 it works with 2.28 but not 2.12
[14:11:43] <very_sneaky> https://developers.redhat.com/blog/2019/08/01/how-the-gnu-c-library-handles-backward-compatibility
[14:11:53] <very_sneaky> it does say that it's an unwritten rule
[14:12:01] <PJBoy> even the C stdlib changes though
[14:12:10] <PJBoy> it can't be completely futureproof
[14:12:26] <PJBoy> like they made lots of stuff threadsafe in C11
[14:13:29] *** Quits: fcc977 (~kaph@151.43.53.126) (Client Quit)
[14:13:41] *** Joins: fcc977 (~kaph@151.43.53.126)
[14:13:42] <very_sneaky> there's also a bit of a write up on the conan teams rationale for building everything on ubuntu 16.04 here: https://github.com/conan-io/conan-docker-tools/tree/master/modern
[14:16:08] <ville> PJBoy: no such thing as future-proof
[14:16:17] <PJBoy> what about fortran?
[14:16:23] <very_sneaky> PJBoy: it looks like they internally version each of the function implementations
[14:18:49] <ville> PJBoy: not sure what you're implying there. because it's been around since 50s? whilst i don't have experience there i am going to go out on a limb that 0) program from the 50s won't run on current release 1) if it did you'd still write it differently in a current release and with current hardware in mind
[14:19:45] <very_sneaky> the dynamic symbol table has functions annotated with the glibc version, i.e. for a function glob64(), in the symbol table it's `glob64@GLIBC_2.1` or `glob64@@GLIBC_2.2` where @@ indicates default version
[14:20:35] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[14:22:07] <PJBoy> yeah because all the old fortran code still runs today
[14:22:22] <PJBoy> and it's a dead language, so it's always going to work
[14:22:26] <very_sneaky> is fortran still being developed
[14:22:27] <ville> all is a hell of a quantifier
[14:22:40] <ville> very_sneaky: yes there was a spec in 2018?
[14:22:48] <very_sneaky> TIL
[14:23:02] <ville> sometime last 5 years anyway
[14:23:15] <PJBoy> also fair play to glibc
[14:23:32] *** Joins: kaph (~kaph@151.43.53.126)
[14:23:50] *** Joins: artok (~azo@mobile-access-b0486a-186.dhcp.inet.fi)
[14:24:27] *** Quits: fcc977 (~kaph@151.43.53.126) (Ping timeout: 256 seconds)
[14:26:02] *** Joins: markong (~kvirc@213.146.188.203)
[14:26:55] *** Quits: kaph (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[14:28:23] *** Joins: kaph (~kaph@151.43.53.126)
[14:29:32] <LordKalma> PJBoy, you could at least try the simple `mkdir build; cmake ..; cmake --build` on clang-extra-tools package
[14:29:46] <LordKalma> `mkdir build; cd build; cmake ..; cmake --build`
[14:29:49] <PJBoy> you forgot the cd build
[14:29:51] <PJBoy> damn it
[14:30:12] <PJBoy> maybe one day
[14:30:14] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[14:31:13] <very_sneaky> LordKalma: that's not the modern way of invoking cmake, tsk tsk
[14:31:20] <LordKalma> sh
[14:32:18] <very_sneaky> I should actually try to remember what the modern command is - i've been using conan to invoke cmake recently, and that's useless when you don't have conan about
[14:33:00] *** Quits: kaph (~kaph@151.43.53.126) (Remote host closed the connection)
[14:34:07] <very_sneaky> `cmake -S . -B build` or something
[14:34:37] <very_sneaky> `cmake -S . -B build --build`
[14:35:28] <very_sneaky> nope, idk
[14:36:44] <LordKalma> yes, those are the flags
[14:36:49] <LordKalma> but you'd use sibling directories
[14:39:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:41:02] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 240 seconds)
[14:41:23] <very_sneaky> i wish documentation for things more frequently gave usage examples
[14:41:32] <very_sneaky> sometimes the template just isn't clear enough
[14:41:42] *** Joins: kaph (~kaph@151.43.53.126)
[14:41:46] <LordKalma> cmake's docs are notorious reference documentation, not guides
[14:41:58] <LordKalma> they got an official tutorial like last year
[14:42:03] <very_sneaky> yeah, i think that's what makes them so hard to read
[14:42:33] *** Quits: Kerr (~Kerr@2601:602:ce01:1f0:d0b9:9f3c:59d9:5e72) (Quit: Client closed)
[14:46:24] <very_sneaky> ah, i was almost there. `cmake -S . -B build -G "Unix Makefiles" && cmake --build build`
[14:47:26] <PJBoy> wtf did the godbolt compiler selection massively shrink?
[14:47:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[14:47:37] <PJBoy> oh site's being update
[14:47:38] <PJBoy> d
[14:47:45] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[14:51:08] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[14:59:51] <PJBoy> bah, I'm having that coredump issue again
[15:02:15] *** Quits: kaph (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[15:05:38] *** Joins: kaph (~kaph@151.43.53.126)
[15:07:49] <PJBoy> any way I can get find -name to only look at file names?
[15:08:50] <MaddHatter> that's what it does already? (You need -path to match against directory components of the path)
[15:09:11] <ville> what do you mean filename?
[15:09:25] <ville> pick from /a/b/c.d
[15:09:31] <PJBoy> c.d
[15:09:50] <PJBoy> currently I'm searching for "core" and I'm getting lots and lots of results of directories named core
[15:11:36] <MaddHatter> oh; add -type f (or alternatively, \! -type d)
[15:12:05] <PJBoy> great!
[15:12:07] <PJBoy> thanks
[15:13:45] *** Quits: kaph (~kaph@151.43.53.126) (Ping timeout: 256 seconds)
[15:17:16] *** Joins: DSpider (~DSpider@82.79.237.80)
[15:20:06] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[15:23:47] *** Joins: Kerr (~Kerr@c-73-193-43-154.hsd1.wa.comcast.net)
[15:26:05] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[15:26:17] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[15:28:11] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 268 seconds)
[15:28:53] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[15:29:19] *** Joins: Furai (~Furai@furai.pl)
[15:35:59] *** Joins: mitch0 (~mitch@84-236-26-21.pool.digikabel.hu)
[15:37:11] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[15:38:37] *** Quits: mitch0 (~mitch@84-236-26-21.pool.digikabel.hu) (Client Quit)
[15:39:44] *** Joins: mitch0 (~mitch@84-236-26-21.pool.digikabel.hu)
[15:56:57] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[15:59:51] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[16:00:30] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:01:48] *** Joins: jkaye (~jkaye@2601:281:200:1958:8e74:ef22:c471:c2e)
[16:03:24] <PJBoy> ok I'm quite sure at this point that my coredumps aren't getting generated
[16:06:49] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:08:14] <ville> blame systemd
[16:08:49] <Shell> PJBoy: what does coredumpctl give you
[16:13:48] *** Quits: DSpider (~DSpider@82.79.237.80) (Quit: Leaving)
[16:14:57] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 256 seconds)
[16:15:03] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Ping timeout: 268 seconds)
[16:15:25] *** Joins: hexingb (~hexingb@111.32.64.41)
[16:15:51] *** flooded is now known as _flood
[16:18:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:20:13] *** Quits: jackblasted (~quassel@45.131.194.40) (Ping timeout: 256 seconds)
[16:20:41] *** Joins: jackblasted (~quassel@45.131.194.235)
[16:21:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:22:31] <PJBoy> ok having installed systemd-coredump I see an lz4 file in my /var/lib/systemd/coredump
[16:23:10] <PJBoy> is there any way I can get my convenient ready-made current directory coredumps back? :<
[16:27:48] <LordKalma> systemd is just fine
[16:28:30] <LordKalma> don't @ me
[16:29:01] <PJBoy> I mean it's better than nothing, which is what I had before
[16:29:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:29:23] <comrad> it solves a lot of problems
[16:29:44] <PJBoy> the lz4 compression is kinda annoying though
[16:29:51] <comrad> and creates new ones ;)
[16:29:58] <PJBoy> :D
[16:30:17] <comrad> but i eases some annonying problems we had with the sysv-init-system
[16:31:29] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[16:31:44] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[16:43:24] *** Joins: pulse (~pulse@user/pulse)
[16:44:04] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[16:48:05] *** Joins: sbrothy (~sbrothy@192038134061.mbb.telenor.dk)
[16:48:22] <PJBoy> first time trying asan and ubsan with this code
[16:48:33] <PJBoy> and ubsan has worked wonders :D
[16:48:39] <PJBoy> asan has horribly crashed
[16:48:55] <sbrothy> twas me with teh static library woes. as usual a new day brought the solution. I was compiling with the '-fPIC' switch.
[16:49:14] <PJBoy> ah is that bad?
[16:49:31] <LordKalma> PIC shouldn't do anything when building static(?)
[16:49:32] <sbrothy> not for dynamic libs
[16:49:38] <sbrothy> well it did here
[16:49:57] <sbrothy> im still learning here
[16:50:08] <sbrothy> but everything works anyway
[16:50:13] <PJBoy> I'm certainly going to consider omitting it
[16:50:41] <PJBoy> can't make sense of the crash atm
[16:53:00] *** Quits: sbrothy (~sbrothy@192038134061.mbb.telenor.dk) (Quit: leaving)
[16:53:35] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:56:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:02:17] <PJBoy> there's some crap that tries to overload operator new that I'm suspicious of
[17:05:54] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[17:21:07] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[17:35:35] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[17:36:33] <dfkfs> with normal strings, you can "eat" characters from the start and the end; is there similar functionality for "string"?
[17:36:52] *** Joins: Roughy (~mdaw45ns@user/roughy)
[17:37:03] <PJBoy> erase or substr
[17:37:16] <PJBoy> depending on if you want to modify the current string or make a new one
[17:37:44] <PJBoy> also string_view offers remove_{pre,suf}fix, which works more like the char pointers
[17:39:36] <PJBoy> wow microsoft bought activision
[17:39:55] <Haohmaru> activision was still alive?
[17:40:52] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[17:41:02] <Haohmaru> !fact
[17:41:04] <nolyc> Haohmaru: A reference can be thought of as a name of an object.
[17:41:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:11] <PJBoy> activision / blizzard
[17:41:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:17] *** ChanServ sets mode: +v npaperbot
[17:41:22] <Haohmaru> what, did those two merge?
[17:41:47] <PJBoy> yeah they merged a while ago
[17:42:02] <PJBoy> 2008
[17:42:02] <Haohmaru> did blizzard release starcraft 2 ever?
[17:42:19] <PJBoy> yeah
[17:42:21] <LordKalma> isn't activision the company that has been under heat for being china chills?
[17:42:23] <PJBoy> 2010
[17:42:27] <PJBoy> yeah it is
[17:42:37] <Haohmaru> i'm very out-of-date on games
[17:42:40] <PJBoy> and a US company just bought them
[17:42:49] <PJBoy> crazy shit
[17:43:11] <TinoDidriksen> Activision is under active investigation by the Californian government.
[17:43:35] <PJBoy> MS probably have the legal resources to deal with this that Activision don't >_>
[17:43:47] <PJBoy> also means MS can now legally provide candy crush with Windows
[17:43:57] <LordKalma> and hopefully MS game studios can give them decent C-level execs
[17:44:07] <TinoDidriksen> More that Phil Spencer can step in and clean up.
[17:44:30] <LordKalma> yes, I hope they sweep all the administration out
[17:44:46] <Haohmaru> "china chills" ?
[17:45:05] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:45:20] <LordKalma> Haohmaru, banning players for saying Taiwan is a country, amongst other things
[17:45:26] <LordKalma> there were like 2 or 3 episodes last year
[17:45:28] *** Joins: bobb_ (~bobb_@dslb-092-074-241-177.092.074.pools.vodafone-ip.de)
[17:45:30] *** Quits: hexingb (~hexingb@111.32.64.41) (Read error: Connection reset by peer)
[17:45:45] *** Joins: hexingb (~hexingb@111.32.64.41)
[17:45:55] <PJBoy> https://en.wikipedia.org/wiki/Blitzchung_controversy for the details
[17:46:28] <PJBoy> they also have systematic sexual abuse allegations they're dealing with
[17:46:45] <PJBoy> Blizzard is a shitshow
[17:46:48] <LordKalma> ah yes, that too
[17:46:51] <LordKalma> I didn't even remember that
[17:47:10] <Haohmaru> oh
[17:47:17] <LordKalma> they need a thorough cleanup
[17:47:29] <Haohmaru> aww
[17:49:04] <LordKalma> ah yes, it was about HK, not Taiwan
[17:50:41] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[17:51:07] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[17:51:22] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[17:52:18] <dfkfs> an old version of gcc cannot find the proper constructor. is it fixable?
[17:52:32] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[17:53:07] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:53:08] <dfkfs> (ca 2000)
[17:53:15] <Haohmaru> dfkfs gcc version?
[17:53:31] <rpav> by betteridge's law of headlines, no
[17:53:58] *** Quits: bobb_ (~bobb_@dslb-092-074-241-177.092.074.pools.vodafone-ip.de) (Quit: Client closed)
[17:54:03] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[17:54:11] *** Joins: bobb_ (~bobb_@dslb-092-074-241-177.092.074.pools.vodafone-ip.de)
[17:54:34] *** Joins: Simplar (~Simplar@188.163.93.76)
[17:54:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:55:07] <dfkfs> 2.95.3
[17:55:36] <rpav> ah the hellish days of 2.95
[17:55:50] <rpav> from whence came the likes of egcs and pgcc
[17:56:02] <lmat> What's litb up to?
[17:56:09] <amosbird> Hmm, is it normal that I cannot use gdb to step into a std::make_shared call in DEBUG build?
[17:59:44] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801)
[18:00:57] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:01:35] <ville> dfkfs: well you got the source so in theory yes...
[18:02:12] <bobb_> Hi, https://en.cppreference.com/w/cpp/string/byte/memmove states that src and dest are reinterpreted as arrays of unsigned char. What does "reinterpreted" really mean here? I created https://coliru.stacked-crooked.com/a/8d2f4919569cf10a and i'm a bit confused why the values stay negative. What is my misunderstanding here?
[18:02:58] <ville> bobb_: just think it means magic
[18:03:37] <bobb_> ville magic in what terms?
[18:03:53] <rpav> ville: one would have to argue that altering the source would likely still mean "no," because then it would no longer be gcc 2.95.3 .. as if you _could_ alter the source, patches from later versions to current are also readily available
[18:03:56] <PJBoy> unsigned char pointers can alias objects and read their object representation
[18:04:10] <rpav> that said, i think "upgrade your goddamn compiler" is still the best solution
[18:04:20] <PJBoy> it's just a way to say that ctors and crap aren't copied, just stuff that can be validly copied as if by the bytes
[18:04:22] <ville> bobb_: https://port70.net/~nsz/c/c11/n1570.html#7.24.1p3
[18:05:13] <ville> bobb_: that's c99. magic as in it just does what it does. if cppreference chose to use the word reinterpreted in particular don't read too much into it
[18:05:16] <PJBoy> there's wording in the C++ spec about objects having their storage provided by unsigned char arrays
[18:05:32] <bobb_> ville "copies n characters" sounds more what i expected
[18:05:54] <bobb_> PJBoy okay i understand
[18:06:09] <rpav> PJBoy: actually maybe that's a workaround for the (nonissue) that you can't "read past the end of the array", i.e. you reinterpret_cast it _to_ an array, and you're good
[18:06:49] <PJBoy> you can alias whatever X as a unsigned char*, not sure that you can alias whatever X as an array
[18:07:19] <ville> PJBoy: except they never says such an object is created. if no such object exists you can't access it and its elements and...
[18:07:21] <rpav> not sure
[18:07:36] <PJBoy> yeah I'm not gonna try and look into this again
[18:07:38] <rpav> it's a nonissue in any case, despite the insistance of some
[18:07:48] <bobb_> "you can alias whatever X as a unsigned char*" you are right
[18:07:50] <rpav> "insistence" can i tpye
[18:08:20] <PJBoy> what ville said does sound like the conclusion of the last time we talked though
[18:08:55] <PJBoy> if the array were to somehow being spawned into existence, it would imply the object itself had ended its lifetime
[18:08:55] <rpav> only if you interpret the standard as being 100% accurate and having no defects that are generally acknowledged
[18:09:40] <bobb_> when i connect what you just said and what i know about the C++ type aliasing rules stuff gets clear to me
[18:10:01] *** Quits: emerent (~quassel@p5b265a25.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:10:03] <dfkfs> ok I'm bootstrapping gcc 3.0.4 maybe it will help
[18:10:24] <rpav> dfkfs: why are you literal decades in the past
[18:10:49] <dfkfs> a retro project
[18:11:28] <rpav> retro _tools_ is one too far
[18:11:31] <ville> dfkfs: faster just port the project to a modern c++ standard?
[18:11:44] <ville> dfkfs: or do you need bit-perfect builds or something?
[18:11:58] <dfkfs> the project is newer than the os
[18:16:02] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[18:17:21] *** Joins: emerent (~quassel@p200300cd570443e6ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:19:29] <LordKalma> afaik the c++ standard "blesses" char and std::byte as valid reinterpret casts from/to objects
[18:20:39] <LordKalma> not sure the exact wording now, because, for example, when you have serialized data you're supposed to first create the objects and then memcpy the buffer contents into them
[18:20:57] <LordKalma> so that object lifetime rules kick in, and the objects had a proper beginning of life
[18:21:16] <LordKalma> but yeah, the standard blesses you with being able to memcpy from char/std::byte into *created* objects
[18:21:33] <LordKalma> (afaik, not a language lawyer anyway)
[18:22:00] <LordKalma> "ville> PJBoy: except they never says such an object is created." Exactly
[18:23:11] <LordKalma> rpav, well, I in dfkfs' defense, I know active projects, in embedded, that require arm gcc 4
[18:25:44] <rpav> LordKalma: sure, but that would be a different answer to "why" ;/ though i'd be slightly dubious about the requirement of said projects too
[18:25:56] <rpav> like, did gcc literally drop architecture support, or are they bug-dependent
[18:26:25] <LordKalma> honestly no idea
[18:27:02] <LordKalma> https://github.com/airspy/airspyone_firmware/wiki/Linux-how-to-build-airspy-firmware
[18:27:05] <rpav> yeah that's why i'm like "ok is this because the people on the project are simply stuck in the past, or is gcc shitty, or what"
[18:27:07] <LordKalma> "ONLY use GNU_ARM_4_7_2013q3 to build the firmware."
[18:27:14] <rpav> ah sounds bug-dependent
[18:28:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Quit: Quit)
[18:30:12] *** Quits: arch-angel (~arch-ange@2001:e68:5400:628:98f4:a0ee:dd7:976f) (Remote host closed the connection)
[18:35:39] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[18:38:40] <Simplar> Which phenomenal results of analytic geometry do you know?
[18:39:22] <LordKalma> algebraists do not distinguis between homeomorphic spaces
[18:39:30] <LordKalma> distinguish*
[18:42:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:44:03] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[18:44:56] <LordKalma> So Qt made the Qt compiler half commercial only
[18:44:57] <LordKalma> ffs
[18:45:04] <LordKalma> *the QML compiler I mean
[18:45:57] <rpav> ðŸ¤£
[18:46:18] <rpav> this is like, QML -> C++ or whatever?
[18:47:42] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c9e8:b7fb:cb1d:72ee)
[18:47:42] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c9e8:b7fb:cb1d:72ee) (Changing host)
[18:47:42] *** Joins: skapata (~Skapata@user/skapata)
[18:48:00] <LordKalma> "Qt Quick Compiler Extensions" (containing qmlsc) will also be available for general application development starting latest with the Qt 6.3.0 release. "
[18:48:01] <LordKalma> so maybe not
[18:48:03] <LordKalma> rpav, yes
[18:48:07] <LordKalma> https://www.qt.io/blog/the-new-qtquick-compiler-technology
[18:48:09] <LordKalma> https://www.qt.io/blog/the-numbers-performance-benefits-of-the-new-qt-quick-compiler
[18:50:28] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[18:52:17] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Remote host closed the connection)
[18:52:38] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[18:54:03] <dfkfs> good news, 3.0.4 did the job
[18:54:12] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[18:54:33] <PJBoy> I seem to remember an old BSD blogpost about how GCC used to be super well tested and stable
[18:54:51] <PJBoy> and then started missing the mark and opting for rapid development instead
[18:55:04] <PJBoy> I assume it was around v4 that they were complaining about
[19:00:55] <ville> LordKalma: just stop worrying about qml and all the related crap
[19:02:50] <rpav> heh, you could `auto x = (boolean-statement) * enum-value + ...; switch(x) { ... }`
[19:03:03] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:05:07] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[19:07:26] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Leaving)
[19:07:37] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:60e9)
[19:08:26] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:12:47] <dfkfs> bad news, it also introduced so hell
[19:17:39] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[19:17:54] *** Quits: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0) (Write error: Connection reset by peer)
[19:17:54] *** Quits: riksteri (d20812115c@2604:bf00:561:2000::1e6) (Remote host closed the connection)
[19:18:27] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[19:18:37] *** Joins: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0)
[19:19:06] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[19:23:28] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:a00b:5133:f79:4e8b)
[19:23:34] <supernova> Hey folks!
[19:23:50] <supernova> ofstream outPrintFile( "print.txt", ios::out ); is it possible to replace "print.txt" into string variable?
[19:29:35] *** Joins: galik (~galik@217.138.195.27)
[19:29:49] <ville> you mean is it possibly to read the contents of a file into an std::string variable?
[19:29:53] <ville> err possible
[19:30:04] <supernova> nah
[19:30:15] <supernova> i need to set file name from varible string
[19:31:55] <supernova> as per my school exercise
[19:33:07] <imMute> supernova: std::string filename = "print.txt";  ofstream outPrintFile(filename, ios::out);
[19:33:16] <imMute> supernova: std::string filename = "print.txt";  std::ofstream outPrintFile(filename, ios::out);
[19:33:23] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[19:34:53] *** Joins: AmR (~AmREiSa@41.36.185.103)
[19:34:59] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[19:35:34] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:40:44] <AmR> I have problem with QDate aqnd QLocale when I insert and select from db, Any one Can help ?
[19:45:30] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:49:41] <dld> AmR: it would probably be a good idea to include enough information about your problem for someone to be able to help you. (But *not too much*. https://sol.gfxile.net/dontask.html)
[19:53:21] *** Quits: proller (~p@2a02:6b8:0:40c:d6ea:b953:76ed:c329) (Ping timeout: 268 seconds)
[19:54:38] *** Joins: proller (~p@2a02:6b8:0:40c:fa4f:e67b:1250:9531)
[19:55:07] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (Changing host)
[19:55:07] *** Joins: tct (~tct@user/tct)
[19:59:21] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[20:04:27] *** Quits: proller (~p@2a02:6b8:0:40c:fa4f:e67b:1250:9531) (Ping timeout: 268 seconds)
[20:06:31] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[20:11:50] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:15:59] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:19:49] <AmR> dld: I set my sys to arabic egypt locale when I try save date to db by insert from QDateEdit I got it But when I try view it with qtablewidget I can't display it and I try to set qdateedit to eng us but it's same.
[20:23:08] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 250 seconds)
[20:24:22] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:effa:89db:fc47:330a)
[20:24:22] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:effa:89db:fc47:330a) (Changing host)
[20:24:22] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:25:59] *** Joins: paul424 (~tom@ip-5-172-237-8.multi.internet.cyfrowypolsat.pl)
[20:27:11] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[20:29:43] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[20:31:15] <LordKalma> !fact
[20:31:16] <nolyc> LordKalma: The nested-name-specifier :: names the global namespace.
[20:32:29] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[20:32:51] <PJBoy> hm, might have bricked my linux VM
[20:32:55] <LordKalma> hahaha
[20:33:38] <PJBoy> oh no, it was just really really slow
[20:35:54] <PJBoy> so far I've been able to get core dumps caused by ctrl+\ to work
[20:36:01] <PJBoy> but not the core dump that I actually want
[20:36:06] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[20:36:20] <Haohmaru> not the desired dump
[20:37:15] <Haohmaru> give it some laxatives
[20:37:34] <Haohmaru> !fact
[20:37:35] <nolyc> Haohmaru: Calling the set_* and get_* functions shall not incur a data race.
[20:38:35] <Alipha> does that means i just need to name all my functions set_* and get_* to be thread safe???
[20:38:41] <LordKalma> yes
[20:39:22] <PJBoy> provided they end in `terminate` or `new_handler`
[20:41:36] <Alipha> set_alipha_terminate ;-)
[20:41:48] <PJBoy> yeah I'd call that
[20:41:59] <Alipha> :-(
[20:42:50] *** Joins: magla (~gelignite@55d4217a.access.ecotel.net)
[20:42:50] <Alipha> we need 2-line grabs. there would be so many more grabbable statements if you could grab someone's message and someone else's reply
[20:43:02] <Haohmaru> +1
[20:43:08] <Haohmaru> !polygrab
[20:43:09] <nolyc> Haohmaru: Error: "polygrab" is not a valid command.
[20:43:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[20:43:55] *** Quits: skapata (~Skapata@user/skapata) (Quit: Äœis.)
[20:43:56] <Alipha> ... and then abuse it to mix and match messages that aren't actually related to each other
[20:44:18] <Haohmaru> i'll never do that, that's a crime
[20:46:39] *** Joins: proller (~p@2a02:6b8:0:40c:6a90:8029:2258:b514)
[20:47:16] <TinoDidriksen> Multi-line is just a C++-specific bash.org
[20:48:03] <Haohmaru> then link nolyc to bash.org ;P~
[20:48:23] <Haohmaru> maybe with a channel filter
[20:50:14] <PJBoy> wow bash.org
[20:50:16] <PJBoy> that takes me back
[20:52:44] * PJBoy rubs eyes
[20:53:21] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[20:53:23] <PJBoy> temptation to drop back to ubuntu 18.04 is increasing
[20:55:37] *** Joins: teepee (~teepee@openscad/teepee)
[20:56:21] <Haohmaru> aww, crapbuntu
[20:57:33] <TinoDidriksen> 18.04 has nothing that's better than 20.04, but if it's GUI then Xubuntu is nicer overall.
[20:58:29] <Alipha> i'm in bash.org, lol. i totally staged that though: http://bash.org/?search=Alipha&sort=0&show=25
[20:58:53] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801)
[20:59:49] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[21:01:07] *** Quits: bobb_ (~bobb_@dslb-092-074-241-177.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:02:11] <Haohmaru> i'm not
[21:02:14] * Haohmaru so innocent
[21:05:17] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[21:07:07] *** Joins: jimmio92 (~jimmio92@pool-96-227-111-47.phlapa.fios.verizon.net)
[21:07:26] <Haohmaru> !fact
[21:07:27] <nolyc> Haohmaru: Friend classes or functions can be declared within a class template.
[21:07:46] <Haohmaru> class templates are unfriendly
[21:08:08] <Haohmaru> oh, i read "can't"
[21:08:25] <Haohmaru> class templates are.. friendly \o/
[21:09:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[21:09:56] <rpav> Alipha: aren't most bash.org quotes staged? ;)
[21:10:12] <rpav> also, nice, that's a relatively old one isn't it
[21:10:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:12:31] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:13:29] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:21:06] <PJBoy> ah you don't see tables used for layout too much anymore
[21:21:20] <PJBoy> the good ol' days
[21:21:40] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:21:53] <Haohmaru> vintage.html
[21:24:23] <PJBoy> google homepage used tables for the longest time
[21:25:08] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[21:25:37] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:27:20] *** Joins: pulse (~pulse@user/pulse)
[21:29:50] <PJBoy> anyways ubuntu 18.04 core dumps were more reliable >:(
[21:30:28] <PJBoy> having removed the systemd thing and the ubuntu apport thing
[21:30:44] <PJBoy> I just want my core dumps in the current directory :(
[21:35:02] *** Quits: jkaye (~jkaye@2601:281:200:1958:8e74:ef22:c471:c2e) (Ping timeout: 240 seconds)
[21:35:03] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[21:38:11] <LordKalma> did you know that Black Mesa, the game, uses QML menus?
[21:38:16] <LordKalma> Qt + Source engine
[21:38:17] <LordKalma> hahah
[21:38:45] <PJBoy> never heard of that game before
[21:38:50] <PJBoy> perhaps that's why :p
[21:38:56] <LordKalma> oh don't be like that
[21:39:01] <LordKalma> it's an amazing game, honestly
[21:39:07] <LordKalma> it's a remake of Half Life 1
[21:39:09] <LordKalma> and it's like WOW
[21:39:14] <LordKalma> and I really mean wow
[21:39:18] <PJBoy> ah right, I never got into those valve games
[21:40:55] <LordKalma> if you decide to get into them, play Black Mesa :D
[21:41:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:18] *** ChanServ sets mode: +v npaperbot
[21:41:49] <PJBoy> noted
[21:54:07] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7907:7dad:41ed:706e)
[21:56:41] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:56:50] *** Quits: johnny (~johnny@user/johnny) (Read error: Connection reset by peer)
[22:02:07] <cbreak> the best valve game is Portals
[22:02:09] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:d714:5de5:c7ec:11d9)
[22:02:10] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:d714:5de5:c7ec:11d9) (Changing host)
[22:02:10] *** Joins: RoKenn (~RoKenn@user/rokenn)
[22:04:09] <cbreak> PJBoy: have you changed /proc/sys/kernel/core_pattern ?
[22:04:17] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[22:04:46] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[22:05:57] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Quit: Rebooting, please hold)
[22:06:08] *** Quits: Friithian (~gunqqer@friithian.dev) (Remote host closed the connection)
[22:06:11] <PJBoy> yeah
[22:06:29] <PJBoy> it's currently just: core
[22:06:59] <PJBoy> my ctrl+\ to kill `sleep 30` does generate a core dump
[22:07:08] <PJBoy> so I'm ultra confused
[22:08:21] *** Joins: Friithian (~gunqqer@friithian.dev)
[22:08:51] *** Joins: gentoosclimax (~gentooscl@81-64-65-213.rev.numericable.fr)
[22:11:26] *** Joins: RazielZ (~Raziel@user/raziel)
[22:11:34] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[22:11:43] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Client Quit)
[22:12:46] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[22:13:19] <PJBoy> also the systemd-coredump does manage to get its version of a core dump
[22:13:40] <PJBoy> but I want the normal core dump :<
[22:14:36] *** Quits: galik (~galik@217.138.195.27) (Quit: Leaving)
[22:14:57] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 256 seconds)
[22:17:16] *** Quits: gentoosclimax (~gentooscl@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[22:21:21] *** Quits: proller (~p@2a02:6b8:0:40c:6a90:8029:2258:b514) (Ping timeout: 268 seconds)
[22:21:34] *** Quits: magla (~gelignite@55d4217a.access.ecotel.net) (Quit: Stay safe!)
[22:22:35] <cbreak> you did set the core limit with ulimit?
[22:22:39] <cbreak> (to something bigger than 0)
[22:22:47] <cbreak> hmm...
[22:23:10] <cbreak> the program you try to debug is started from a shell or differently?
[22:23:16] *** Joins: magla (~gelignite@55d4217a.access.ecotel.net)
[22:24:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:26:30] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:27:24] *** Joins: sbrothy (~sbrothy@192038130004.mbb.telenor.dk)
[22:27:45] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:28:35] *** Quits: sbrothy (~sbrothy@192038130004.mbb.telenor.dk) (Client Quit)
[22:28:48] *** Joins: sbrothy (~sbrothy@192038130004.mbb.telenor.dk)
[22:31:04] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:32:20] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[22:32:44] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:33:25] <PJBoy> ulimits are as unlimited as can be
[22:33:53] <PJBoy> I'm running the executable directly
[22:33:59] <PJBoy> from the terminal
[22:34:08] <PJBoy> though I was previously running it via shell script
[22:37:50] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Remote host closed the connection)
[22:40:49] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[22:40:49] <rpav> cbreak: yeah they had interesting gameplay and some amusing writing
[22:40:56] <LordKalma> indeed
[22:41:21] <rpav> i could never get into HL* because of the like hallway shooter thing, and the story wasn't much to write home about
[22:41:31] <LordKalma> In fact: https://i.gyazo.com/4e9b8450672036f1c1196aec3ad467e6.png
[22:41:32] <rpav> and the shooting wasn't great .. like a monster every now and then
[22:43:52] *** Quits: sbrothy (~sbrothy@192038130004.mbb.telenor.dk) (Quit: leaving)
[22:44:07] *** Joins: sbrothy (~sbrothy@192038130004.mbb.telenor.dk)
[22:44:22] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Quit: Quit)
[22:44:49] <rpav> oh yeah hl1 was modified quake1 engine right, so not much C++ ;/
[22:45:01] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:52:11] *** gentooclimax is now known as climax
[22:52:17] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:a00b:5133:f79:4e8b) (Ping timeout: 240 seconds)
[22:55:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006)
[23:04:43] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c94d:2005:ed45:6900)
[23:04:43] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c94d:2005:ed45:6900) (Changing host)
[23:04:43] *** Joins: skapata (~Skapata@user/skapata)
[23:05:12] *** Quits: ville (~ville@user/ville) (Ping timeout: 250 seconds)
[23:06:13] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:09:13] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:09:42] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[23:13:36] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:15:23] *** Joins: seninha (~seninha@user/seninha)
[23:17:44] *** Joins: ville (~ville@user/ville)
[23:18:38] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[23:19:35] <imMute> rpav: check out Black Mesa on steam.  it's a community remaster/remake of HL1 with the Source engine. very good graphics, good gameplay, and they fixed the shitty story ending
[23:19:53] *** climax is now known as gentooclimax
[23:19:59] <rpav> for some value of "fixed," and also, it's still basically HL1 ;/
[23:21:01] <jimmio92> I loved the half-life series. Best Valve series, imo. Must admit I never finished HL1 though... played a lot of Left 4 Dead, but it's too fast paced for my liking.
[23:22:18] <rpav> yeah still looks like "hallways with an occasional thing to shoot"
[23:23:02] <rpav> i personally consider halflife to be the beginning of the downhill descent of modern gaming
[23:23:16] <imMute> lmao
[23:23:18] <Terminus> jimmio92: lol i bought black mesa because i figured i really should finish HL1. still haven't finished black mesa. my primary motivation to buy a copy of HL1 in the late 90s was to run counterstrike.
[23:23:50] <rpav> it's basically not terribly far off from the modern "narrative-driven" "push X to pay respects" "walk forward for cutscene" "here have some gameplay for a bit" game
[23:24:16] <rpav> and i can't think of much before it that really popularly kicked off the trend
[23:24:36] <Terminus> grinds are also terrible in modern games. i can't be bothered to spend hundreds of hours grinding away.
[23:25:48] <Terminus> i do have something like 3000 hours in dota. steep learning curve for newbies though. i don't mind it because i know how the game works. generally.
[23:26:01] <Terminus> haven't played it in months anyway. used to play it daily.
[23:31:00] <rpav> i'm not sure grinds exist as much as people think they do, at least outside freemium stuff
[23:31:24] <rpav> or like, dumb achievement challenges or something, but
[23:31:33] <jimmio92> I cannot stand DOTA 2... Even if the Basshunter track is playing in my head right now hahaha... I may have 3000 hours in GTA Online though. Just too much fun to play with friends; we can't put it down even though I bitch about it every single time I launch it...
[23:31:51] <rpav> aren't those both freemium
[23:32:07] <jimmio92> GTA isn't free, but DOTA 2 is I think
[23:32:22] <rpav> doesn't gta have mtx?
[23:32:58] <rpav> ok i guess the other exception are checklist simulator games, which one could qualify as nothing _but_ grind .. asscreed etc
[23:33:02] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 240 seconds)
[23:36:18] <jimmio92> Uhh.. don't think I know what mtx is... I do know Cockstar they went with client authoritative so it's been modded to hell and back. I will never forget getting hit with 5 busses at 330MPH... or the time they attached a power generating windmill to my pelvis... or the time they made me invincible and kept spawning exploding C4 at my pelvis so I
[23:36:19] <jimmio92> flew above the skybox...
[23:36:33] <rpav> microtransactions?
[23:37:05] <jimmio92> Oh, sorta. "Shark Cards". Pay real cash for in game cash.
[23:37:20] <rpav> yea
[23:37:31] <jimmio92> I know a guy who blew over $600 on shark cards x_x
[23:37:37] <rpav> pay money to increment a number in a game you paid for
[23:38:01] <jimmio92> Yeah. Bullshit on so many levels. And the grind is pretty awful at first, too.
[23:38:19] *** Quits: sbrothy (~sbrothy@192038130004.mbb.telenor.dk) (Read error: Connection reset by peer)
[23:39:07] *** Joins: Terminus (~null@user/terminus)
[23:43:17] *** Joins: proller (~p@2a02:6b8:b081:8824::1:3)
[23:47:53] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[23:48:51] *** Joins: xkuru (~xkuru@user/xkuru)
