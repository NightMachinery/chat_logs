[00:02:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:02:31] <FromDiscord> <tandy> nvm i figured out a better solution \:)
[00:21:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[00:28:05] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[00:30:32] <FromDiscord> <b4mbus> How do I put a quote in a regex ;-;
[00:30:48] <FromDiscord> <b4mbus> doesnt seem to work for some reason
[00:30:49] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Rx1
[00:30:59] <FromDiscord> <b4mbus> it basically generates hella syntax errors
[00:34:17] *** Joins: PMunch (~PMunch@user/pmunch)
[00:41:39] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[00:45:20] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:b805:1ee3:3bd1:e74)
[00:54:01] <FromDiscord> <ynfle> Use triple quotes on the outer one and remove the backslashes
[00:58:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:08:21] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 252 seconds)
[01:11:42] <FromDiscord> <b4mbus> In reply to @ynfle "Use triple quotes on": Thanks, worked
[01:12:16] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:12:29] <FromDiscord> <ynfle> üëç
[01:16:01] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Rxd
[01:16:16] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Rxe
[01:17:40] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[01:18:18] <FromDiscord> <b4mbus> It does correctly match the values, correctly splits them
[01:18:23] <FromDiscord> <b4mbus> But Im not sure about the conversion part
[01:18:46] <FromDiscord> <b4mbus> And with the `.get()` I assume the input is always correct, not point in error handling for now
[01:19:27] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:20:07] <FromDiscord> <typedeck> looks like it doesnt like 3 length hex codes
[01:21:32] <FromDiscord> <b4mbus> Well I can implement literally everything or some parts of it by hand but the Nims stdlib is so big that I assumed I'd find all the tools I needed
[01:21:54] <FromDiscord> <typedeck> what are your trying to do hex string to int?
[01:21:59] <FromDiscord> <typedeck> (edit) "do" => "do,"
[01:22:19] <FromDiscord> <b4mbus> (?) Well I said what I wanna do
[01:22:24] <FromDiscord> <b4mbus> I have some codepoints in hex
[01:22:38] <FromDiscord> <b4mbus> I want to convert them to utf8 characters
[01:23:32] <FromDiscord> <typedeck> maybe fromHex[uint8](codepoint)
[01:23:46] <FromDiscord> <typedeck> mmm no thats too small
[01:24:03] <FromDiscord> <typedeck> erm idk
[01:24:12] <FromDiscord> <typedeck> try it and see
[01:24:22] <FromDiscord> <b4mbus> Well aight I'll just implement some stuff by hand
[01:24:35] <FromDiscord> <b4mbus> In reply to @typedeck "maybe fromHex[uint8](codepoint)": A codepoint can range from 1 to 4 bytes, technically even 6
[01:25:23] <FromDiscord> <typedeck> yeah so just parse as the largest uint and then chop off values not defeined by utf-8
[01:26:49] <FromDiscord> <ynfle> https://nim-lang.org/docs/strutils.html#parseHexInt%2Cstring
[01:28:44] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[01:32:11] <FromDiscord> <b4mbus> In reply to @ynfle "https://nim-lang.org/docs/strutils.html#parseHexInt": well yeah but that will just give me the codepoint in an integer form but I want to turn the codepoint into a sequence of UTF8 encoded characters
[01:36:13] <FromDiscord> <Elegantbeef> Add the characters to a string then use `toRunes`
[01:36:22] <FromDiscord> <typedeck> .mapIt(fromHex[int32](it).Rune)
[01:37:04] <FromDiscord> <b4mbus> :OOOOOOOOOO
[01:37:27] <FromDiscord> <b4mbus> that works
[01:37:30] <FromDiscord> <b4mbus> hell yeah, thanks a lot
[01:37:30] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Rxo
[01:37:51] <FromDiscord> <b4mbus> Im wondering, why cant I do `it.fromHex[int32]().Rune`, but `fromHex[int32](it).Rune` is fine?
[01:38:30] <FromDiscord> <typedeck> i think cause its casting, but im not sure
[01:39:21] <FromDiscord> <Elegantbeef> No the issue is MCS doesnt work with generics
[01:39:29] <FromDiscord> <Elegantbeef> you need to do `it.fromHex[: int32]().Rune`
[01:39:43] <FromDiscord> <typedeck> whats mcs?
[01:40:06] <FromDiscord> <Elegantbeef> Method call syntax
[01:41:23] <FromDiscord> <b4mbus> what's with the `:` there?
[01:42:38] <FromDiscord> <ynfle> In reply to @b4mbus "what's with the `:`": Clarify it's a generic param as apposed to array index
[01:44:01] <FromDiscord> <Elegantbeef> It makes it so the procedure is resolved properly
[01:44:41] <FromDiscord> <Elegantbeef> `it.fromHex[int]` is taken as a `[]` operator of `it.fromHex` but `it.fromHex[:int]` is taken as `fromHex[int](it)`
[01:44:47] <FromDiscord> <typedeck> would be cool if Rune could be thrown in since it is implemented as int32
[01:45:54] <FromDiscord> <ynfle> In reply to @typedeck "would be cool if": It is
[01:46:18] <FromDiscord> <Elegantbeef> Well it's a distinct, so that's kinda the point üòõ
[01:46:18] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=
[01:46:26] <FromDiscord> <typedeck> yeah...
[01:47:24] <FromDiscord> <typedeck> ah i see
[01:48:26] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rxp
[01:49:07] <FromDiscord> <huantian> Is it better to have the method return sig be T or Rune here
[01:49:22] <FromDiscord> <huantian> Ig it doesn‚Äôt matter since T is always Rune
[01:49:58] <FromDiscord> <Elegantbeef> Well you dont want to make it so you have to call `strutils.fromhex` everywhere
[01:51:32] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=3Rxq
[01:51:37] <FromDiscord> <ynfle> Ya
[01:51:40] <FromDiscord> <Elegantbeef> It's a type conversion yes
[01:51:48] <FromDiscord> <Elegantbeef> Command syntax instead of method call syntax
[01:52:08] <FromDiscord> <Elegantbeef> Command syntax is `()` less calls
[01:52:28] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3Rxr
[01:53:14] <FromDiscord> <Elegantbeef> But `Rune (it,)` is not üòõ
[01:53:36] <FromDiscord> <ynfle> That's an issue with nimfmt
[01:54:25] <FromDiscord> <Elegantbeef> It doesnt let you do dumb things?
[01:55:11] <FromDiscord> <ynfle> See first example https://github.com/FedericoCeratto/nimfmt#examples with the foo call
[01:55:35] <FromDiscord> <Elegantbeef> Yea like i said it doesnt let you do dumb things
[01:55:48] <FromDiscord> <ynfle> How do you echo a tuple?
[01:55:52] <FromDiscord> <Elegantbeef> If you have a procedure which has a single argument that's a tuple
[01:56:11] <FromDiscord> <huantian> I do wish we had a full Nim formatted like pythons black
[01:56:11] <FromDiscord> <Elegantbeef> Who the fuck echo's a tuple they constructed on the line of the echo?
[01:56:43] <FromDiscord> <ynfle> ü§∑‚Äç‚ôÇÔ∏è
[01:56:48] <FromDiscord> <huantian> Maybe you‚Äôre testing a custom $ you made for your tuple üòõ
[01:57:17] <FromDiscord> <Elegantbeef> Sure
[01:57:23] <FromDiscord> <Elegantbeef> And then who makes a custom `$` for a tuple
[01:57:36] <FromDiscord> <Elegantbeef> Way to ruin everything
[01:58:49] <FromDiscord> <Elegantbeef> If you're making operators or procedures for specific tuples i hate you, you need help üòõ
[01:58:55] <FromDiscord> <ynfle> In reply to @huantian "Maybe you‚Äôre testing a": It won't ruin anything because `$` would disambiguate tuple, versus multiple params
[01:59:42] <FromDiscord> <Elegantbeef> What?
[01:59:45] <FromDiscord> <Elegantbeef> `$` would effect all tuples of that type
[01:59:50] <FromDiscord> <Elegantbeef> They are not distinct
[02:01:23] <FromDiscord> <ynfle> That's not what I was trying to say, but what I was trying to say wasn't right either
[02:01:45] <FromDiscord> <Elegantbeef> Ok i'm mostly joking anyway so it doesnt matter
[02:08:12] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[02:37:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[02:55:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:59:10] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[03:00:44] <FromDiscord> <Waldecir Santos> How can I clone on `ref object` ? deepCopy is the write tool for the job ?
[03:02:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:02:02] <FromDiscord> <Elegantbeef> Depends on the fields but probably
[03:02:34] <FromDiscord> <Waldecir Santos> My object have another object and a `Option[seq[T]]`
[03:02:52] <FromDiscord> <Waldecir Santos> I'll play around with it, thank you @ElegantBeef !
[03:30:16] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:47:23] *** Joins: vicfred (~vicfred@user/vicfred)
[04:10:58] *** Joins: Goodbye_Vincent (~Goodbye_V@freakshells.net)
[05:06:48] <FromDiscord> <Girvo> Hi all üôÇ
[05:07:09] <FromDiscord> <Elegantbeef> Hello
[05:08:00] <FromDiscord> <Girvo> Question: `esp_err_t esp_pthread_set_cfg(const esp_pthread_cfg_t cfg);` that `const ` is causing me dramas, as I don't know how to define a Nim object/var as a C const?
[05:08:18] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RxW
[05:08:28] <FromDiscord> <Girvo> Thats what I've got from c2nim (slightly modified)
[05:09:06] <FromDiscord> <Elegantbeef> You can use `codegendecl` to manually specify it like so https://github.com/beef331/picostdlib/blob/master/src/picostdlib/tusb.nim#L738-L739
[05:09:18] <FromDiscord> <Girvo> (edit) "https://play.nim-lang.org/#ix=3RxY" => "https://play.nim-lang.org/#ix=3RxX"
[05:09:31] <FromDiscord> <Girvo> Ah neat
[05:11:24] <FromDiscord> <Girvo> Is there a better pattern I can take when binding this to avoid this issue, out of curiosity?
[05:11:42] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[05:11:42] <FromDiscord> <Girvo> https://github.com/espressif/esp-idf/blob/v4.3/components/pthread/include/esp_pthread.h this is the header for reference
[05:12:51] *** Joins: flynn (~mcbloch@user/flynn)
[05:15:15] <FromDiscord> <Girvo> Oh. Putting a missing `importc, header:` pragma on the object itself and using `let` with `unsafeAddr` compiles now... though thats likely not the right way lol
[05:16:22] <FromDiscord> <Girvo> Oh I don't even need unsafeAddr. It was actually just the missing `importc` and `header` binding to the actual struct in the C header, and now its compiling nicely
[05:16:43] <termer> „Ç∑
[05:18:26] <FromDiscord> <Girvo> Even checked the codegen and, while it doesn't have const on it, its working now?
[05:19:02] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RxZ
[05:19:42] <FromDiscord> <Girvo> Which matches the documentation. I guess the error about it not being a const  was _actually_ about the symbol not matching as it was missing the importc, header?
[05:19:46] <FromDiscord> <exelotl> In reply to @Elegantbeef "Who the fuck echo's": `echo (foo, bar)` is really convenient for debug printing lol
[05:24:49] *** Joins: toulene (~toulene@user/toulene)
[05:28:52] <FromDiscord> <Elegantbeef> Hush hush hush
[05:31:16] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[05:39:48] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:51:23] <FromDiscord> <huantian> Imagine debug printing with echo and not treeform‚Äôa print
[05:51:31] <FromDiscord> <huantian> (edit) "treeform‚Äôa" => "treeform‚Äôs"
[05:51:33] <FromDiscord> <Elegantbeef> Imagine debugging
[06:00:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 245 seconds)
[06:06:27] <NimEventer> New question by itil memek cantik: Nim template&#39;s body to definitely be specifc, see https://stackoverflow.com/questions/71375884/nim-templates-body-to-definitely-be-specifc
[06:14:46] *** Quits: toulene (~toulene@user/toulene) (Quit: Leaving)
[06:15:10] *** Joins: toulene (~toulene@user/toulene)
[06:17:27] <FromDiscord> <Girvo> In reply to @Elegantbeef "Imagine debugging": Yeah! Just write code that works first go duh..... Ez pz üòÑ
[06:18:37] <FromDiscord> <Rika> what is the equiv. of `declspec(dllexport)` in nim?
[06:18:48] <FromDiscord> <Rika> ive never done windows programming lmao
[06:20:06] <FromDiscord> <Rika> {.dynlib.} i assume
[06:27:04] <termer> „ÉÑ
[06:28:06] <FromDiscord> <Girvo> Question: why would `warning: "_GNU_SOURCE" redefined` be trigged (nimbase.h and stdlib_system.nim.c both seem to define it lol)
[06:32:00] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3Ryd
[06:34:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:43:44] <FromDiscord> <Girvo> Can one view the error value of `createThread` somehow?
[06:44:43] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:48:46] <FromDiscord> <Girvo> Better question: is there any good docs I should look at for Nim's usage of `pthreads` -- as it seems Nim threads aren't quite supported for FreeRTOS/ESP-IDF right now
[06:49:51] *** Quits: toulene (~toulene@user/toulene) (Quit: Leaving)
[06:50:13] <FromDiscord> <Elegantbeef> Should be the same as C
[06:50:45] <FromDiscord> <Girvo> Alrighty
[06:51:39] <FromDiscord> <Girvo> Damn. I really like Nim's thread support lol. Oh well! Might stick with FreeRTOS tasks after all then. Any reason I can't use Channels with a pthread/Task?
[06:52:04] <FromDiscord> <Elegantbeef> Locks should still work afaik
[06:52:29] <FromDiscord> <Elegantbeef> So yea i think channels should be safe
[06:56:21] *** Joins: toulene (~toulene@user/toulene)
[07:05:02] <FromDiscord> <Girvo> Awesp,e
[07:05:05] <FromDiscord> <Girvo> (edit) "Awesp,e" => "Awesome"
[07:05:15] <FromDiscord> <Girvo> I'll have a play. Beats having to use the straight C stuff at least
[07:05:43] <FromDiscord> <Girvo> I do wonder what it would take to get Nim's thread module working on ESP32 mind you... might have to do some digging
[07:07:16] *** Joins: symgryph (~symgryph@user/symgryph)
[07:10:52] <symgryph> quick question on VS code for mac with the nim plugin (there seem to be 2 of them, nim 0.6.6 and 0.1.2.5 from nimsaem Neither of them seems to 'check on type' but only 'check on save' any way to have autocheck w/o having to save code?
[07:11:14] <symgryph> aka instatype?
[07:11:30] <FromDiscord> <Elegantbeef> There is not
[07:11:38] <FromDiscord> <Elegantbeef> just enable autosave every Xms
[07:11:58] <symgryph> I see. the videos I was watching made it look like it was instatype'
[07:12:20] <FromDiscord> <Elegantbeef> Yea it's instant with autosave üòõ
[07:13:19] <symgryph> ah. Which nim plugin is the 'best' the 0.6 or the other nimsaem?
[07:13:31] <symgryph> since the 'nim' one seems to have more people
[07:13:31] <FromDiscord> <Elegantbeef> saem's
[07:15:14] <symgryph> Thank you elegant beef. I turned on 'automatic' save with a 1000MS delay seems 'instant' enough now.
[07:16:01] <symgryph> Also shouldn't the message be updated to nim is 1.6.4?
[07:16:06] <symgryph> since 1.6.0 is old now.
[07:16:16] <FromDiscord> <Elegantbeef> message?
[07:16:26] <symgryph> The topic for irc://irc.libera.chat:6697/#nim¬†is: üëë Nim programming language - http://nim-lang.org/¬†| https://github.com/nim-lang/Nim/wiki/IRC-guidelines¬†| Latest version: 1.6.0 - https://nim-lang.org/install.html¬†| Forum: http://forum.nim-lang.org/¬†| IRC logs: http://irclogs.nim-lang.org/¬†| Bridged to Discord/Gitter/Matrix: https://discord.com/invite/nim¬†| See also irc://irc.libera.chat:6697/#nim-offtopic¬†irc://irc.libera.chat:6
[07:16:26] <symgryph> 697/#nim-nologs¬†| http://git.io/gHZGCg (10:37)
[07:16:26] <symgryph> Topic for #nim set by dom96!~dom@mail.nim-lang.org at 15:29:54 on 11/07/21 (10:37)
[07:16:32] <symgryph> the initial sign on message
[07:16:41] <symgryph> when you first login to the channel
[07:17:42] <FromDiscord> <Elegantbeef> Ah irc
[07:17:49] <symgryph> Yes.
[07:18:00] <symgryph> Should I be using discord, the thing said 'irc is our main' 
[07:18:13] <FromDiscord> <Elegantbeef> I use matrix, it's purely up to you
[07:18:27] <FromDiscord> <Elegantbeef> If you prefer IRC use it, otherwise use what you prefer
[07:18:34] <symgryph> Just got liberachat working with cloaking and happy NIC registering.
[07:18:36] <FromDiscord> <Elegantbeef> They're all linked together so it doesnt really matter
[07:19:05] <FromDiscord> <Rika> use whichever
[07:19:19] <FromDiscord> <Girvo> Interesting, `createThread` is failing with `ResourceExhaustedError` -- though createThread really only checks if `!= 0` it seems anyway, so it might be a different error?
[07:19:54] <symgryph> Has anyone used the very nice "nim for beginners' video series on youtube? I tried NIM in action, but its a bit over my head (our first app was a multi-threaded chat app!)
[07:20:09] <FromDiscord> <Rika> probably
[07:20:12] <FromDiscord> <Rika> not me
[07:20:13] <symgryph> The Nim for beginners seems more geared to my level (a former perl programmer)
[07:20:38] <symgryph> Is there anything besides 'nim in action' ?
[07:20:48] <FromDiscord> <Elegantbeef> The nim programming book
[07:21:00] <symgryph> I looked high and low on oreilly safari and could only find that
[07:21:11] <symgryph> URL?
[07:21:48] <FromDiscord> <Rika> theres also https://ssalewski.de/nimprogramming.html maybe
[07:21:53] <FromDiscord> <Elegantbeef> https://ssalewski.de/nimprogramming.html
[07:22:03] <FromDiscord> <Rika> haha slow
[07:22:25] <FromDiscord> <Elegantbeef> Indeed
[07:26:53] <symgryph> Thank you. Its very nice. any epub versions available?
[07:27:27] <symgryph> I did convert it, but was wondering if its natively available in epub version? I use an ebook reader to do most of my programming.
[07:28:28] <FromDiscord> <Rika> not that i know of, no
[07:30:23] <symgryph> Would anyone else have use for a 'epub' version? Should I send to the author?
[07:31:10] <FromDiscord> <Rika> i dont know
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:59:12] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[07:59:31] *** Joins: toulene (~toulene@user/toulene)
[08:08:42] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[08:09:01] *** Joins: toulene (~toulene@user/toulene)
[08:13:37] <FromDiscord> <abdu> sent a code paste, see https://play.nim-lang.org/#ix=3Ryl
[08:15:07] <FromDiscord> <Elegantbeef> You probably need to use a macro
[08:15:38] <FromDiscord> <Elegantbeef> Or not
[08:16:21] <FromDiscord> <huantian> there was this thread here <https://forum.nim-lang.org/t/8970>
[08:18:02] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Ryn
[08:18:03] <FromDiscord> <Elegantbeef> There we go
[08:18:15] <FromDiscord> <huantian> your indents are a tad wonky beef üòõ
[08:18:31] <FromDiscord> <Elegantbeef> What can i say they were wonky from the first paste
[08:27:48] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:50:44] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:50:49] *** Quits: symgryph (~symgryph@user/symgryph) (Quit: Leaving.)
[09:03:12] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[09:03:31] *** Joins: toulene (~toulene@user/toulene)
[09:08:13] *** Joins: user30959 (~toulene@user/toulene)
[09:09:00] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 250 seconds)
[09:20:53] *** Quits: user30959 (~toulene@user/toulene) (Quit: Leaving)
[09:29:03] <FromDiscord> <Girvo> Where would one find the {.thread.} pragma's definition in the source?
[09:29:33] <FromDiscord> <Elegantbeef> It's compiler magic and equivlent with `gcsafe`
[09:29:57] <FromDiscord> <Girvo> Okay neat
[09:34:47] <FromDiscord> <Girvo> So it will work no worries with pthread_create and/or xTaskCreate, and just give me the GC-variable-access checks?
[09:35:11] <FromDiscord> <Elegantbeef> what is the proc def for those?
[09:36:22] <FromDiscord> <Elegantbeef> Ah it uses `noconv`
[09:40:01] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RyI
[10:28:52] <FromDiscord> <Girvo> Interestingly, `{.thread.}` actually causes a fatal crash, but `{.gcsafe.}` works fine. I'm guessing `{.thread.}` does slightly more under the hood?
[10:29:44] <FromDiscord> <Elegantbeef> You still have noconv on both right?
[10:29:48] <FromDiscord> <Girvo> Yep
[10:30:06] <FromDiscord> <Elegantbeef> Odd that thread crashes, i dont think it does anything but ensure it's thread safe
[10:31:18] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#threads-thread-pragma like there is nothing about it changing the code, and i dont recall the compilers internals doing it
[10:31:53] <FromDiscord> <Girvo> Yeah. I think its because the FreeRTOS work that was done for Nim from Nesper isn't entirely complete -- createThread for example always fails, among other things, despite `pthread` support working no worries (including from `import posix`). I might take a look into it and see if I can't fix it myself
[10:32:06] <FromDiscord> <Girvo> But I'm not entirely sure.
[10:32:32] <FromDiscord> <Elegantbeef> Hmm can you show the C gen'd code with thread vs gcsafe?
[10:32:36] <FromDiscord> <Elegantbeef> I'm curious what's actually different
[10:32:37] <FromDiscord> <Girvo> Yeah I can!
[10:33:20] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RyQ
[10:34:37] <FromDiscord> <Elegantbeef> I'm guessing the thread pragma somehow is changing the code, even though it shouldnt
[10:35:23] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RyR
[10:35:48] <FromDiscord> <Elegantbeef> Is the call site for `XTaskCreate` the same?
[10:35:53] <FromDiscord> <Girvo> I'll have a look, one tick
[10:38:12] <FromDiscord> <Girvo> It honestly looks like it is lol. I'll have to dig a bit deeper as this is all spread out over some modules. I'll write a much simpler test case to see if I can replicate the issue
[10:38:45] <FromDiscord> <Elegantbeef> Remember you can do `-d:danger` to make the generated C more compact
[10:38:50] <FromDiscord> <Girvo> Oh!
[10:38:55] <FromDiscord> <Girvo> Cheers, I'll do that
[10:39:13] <FromDiscord> <Elegantbeef> It removes all the debug information and many checks, but it also makes it easier to search through imo
[10:40:08] <FromDiscord> <Girvo> Yeah this is so much easier to readl ol
[10:40:46] <FromDiscord> <Elegantbeef> If the function def isnt different and the call site isnt different this is an absurdly weird bug
[10:40:58] <FromDiscord> <Girvo> Hah so, it absolutely _is_ identical in terms of `main.nim` output
[10:41:28] <FromDiscord> <Elegantbeef> Are you certain the gcsafe always behaves properly?
[10:42:08] <FromDiscord> <Girvo> _and_ the tasks.nim which is where the xTaskCreate call lives is also identical. I'm definitely gonna have to look deeper, I think your instincts are right and there is something else at play here
[10:42:34] <FromDiscord> <Girvo> Though I _did_ make the test case as simple as a single task proc that does not much, other than have `{.thread, noconv.}` on it
[10:42:35] <FromDiscord> <Elegantbeef> My present thought is there is some UB being expressed
[10:42:39] <FromDiscord> <Girvo> And yeah I think so too
[10:43:47] <FromDiscord> <Girvo> I'll have a dig around. See if I can't get the simplest test case possible for this, and examine what the C is doing. Will let you know, might make an issue if there is something not-obvious happening
[10:44:17] <FromDiscord> <Elegantbeef> Ok
[10:44:51] <FromDiscord> <Elegantbeef> I had something similar before with gcsafe but between gcsafe and non gcsafe
[10:45:12] <FromDiscord> <Elegantbeef> But different API so i could happily just remove the `gcsafe` annotation and carry on
[10:45:44] <FromDiscord> <Elegantbeef> It also only effected WASM so it was super odd
[10:46:37] <FromDiscord> <Girvo> Yeah. Technically that is sort of what is happening here, the `app_main:` template from Nesper won't have gcsafe on it (nor {.thread.} obviously) is where the `newTask` proc is called which itself calls `xTaskCreate` -- but I'll have a look as mostly all app_main does is make sure some certain things are in place so ESP-IDF can pick up our main function correctly
[10:48:31] <FromDiscord> <Girvo> But yeah theres nothing immediately obvious as to why it would work here with `{.gcsafe.}` and not `{.thread.}` even in terms of the C output. Fascinating
[10:50:17] <FromDiscord> <Girvo> Only thing I can think of is something to do with how stacks and such are setup with Nim and `{.thread.}` compared to how `xTaskCreate` expects things to work. I might change it out from the Task interface to actual `pthread_create` and such, and see whether that has the same problem, too
[10:53:36] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RyU
[10:53:45] <FromDiscord> <Girvo> (edit) "https://play.nim-lang.org/#ix=3RyU" => "https://play.nim-lang.org/#ix=3RyV"
[10:56:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[11:06:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[11:06:37] <FromDiscord> <Girvo> Ah hah! CMake had tripped up somehow, and it _always_ errors even with gcsafe _or_ thread
[11:06:56] <FromDiscord> <Elegantbeef> Ah
[11:07:04] <FromDiscord> <Elegantbeef> That makes 130% more sense
[11:07:09] <FromDiscord> <Girvo> Amen üòÇ
[11:07:17] <FromDiscord> <Girvo> I was losing my mind for a moment here
[11:07:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:08:40] <FromDiscord> <Girvo> Oh my gosh
[11:08:48] <FromDiscord> <Elegantbeef> Pmunch you about?
[11:10:28] <FromDiscord> <Girvo> It's noconv, not gcsafe/thread, I think. Let me look a bit deeper. I have a feeling the Nesper `xTaskCreate` binding is missing it, it only expects `{.cdecl.}` so I can't put `{.noconv.}` on the wrapper proc that is actually _passed_ to `xTaskCreate`
[11:11:02] <FromDiscord> <Elegantbeef> what does the C def of XTaskCreate look for?
[11:11:07] <FromDiscord> <Girvo> One moment
[11:13:24] <FromDiscord> <b4mbus> where do I learn more about command syntax?
[11:14:06] <FromDiscord> <Girvo> `TaskFunction_t ` which is: ... annoying to find, one moment lol
[11:14:34] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#procedures-command-invocation-syntax
[11:14:37] <FromDiscord> <b4mbus> (edit) "syntax?" => "syntax?‚ÜµI checked tutorial1 tutorial2 and tutorial3 as well as the language manual and the only thing there is is an EBNF with a comment `command syntax`"
[11:14:47] <FromDiscord> <Girvo> Though as pvTaskCode:‚Üµ> Pointer to the task entry function (just the name of the function that implements the task, see the example below).
[11:14:54] <FromDiscord> <Girvo> https://www.freertos.org/a00125.html
[11:15:34] <FromDiscord> <b4mbus> In reply to @Elegantbeef "https://nim-lang.org/docs/manual.html#procedures-co": I see, thanks
[11:15:36] <FromDiscord> <Elegantbeef> I'd imagine it should be a `cdecl` proc in Nim but without seeing the C typedef I dont know
[11:17:00] <FromDiscord> <Girvo> It definitely does need to be cdecl yeah. I adjusted the Nim wrapper from Nesper to define it as `{.cdecl, noconv.}` and now passing gcsafe/thread procs to the wrapper function work
[11:17:19] <FromDiscord> <Elegantbeef> `cdecl, noconv` is 100% silly
[11:17:22] <FromDiscord> <Elegantbeef> `noConv` was for the pthread api
[11:17:38] <FromDiscord> <Elegantbeef> The calling convention used is noConv for the posix api
[11:18:02] <FromDiscord> <Elegantbeef> noConv and cdecl are both calling conventions, so they dont make sense to be used in unison
[11:18:08] <FromDiscord> <Girvo> That makes sense to me üôÇ
[11:19:09] <FromDiscord> <Elegantbeef> Guess i'll abuse pmunch later when he's actually on
[11:19:15] <FromDiscord> <Girvo> The pthread API in this instance is actually just a wrapper over the xTaskCreate stuff anyway, interestingly enough
[11:19:31] <FromDiscord> <Girvo> I'm going to have a play with all of that next to see if there are any sharp edges
[11:19:46] <FromDiscord> <Elegantbeef> Ah so you should infact make it take a `{.thread, cDecl.}` procedure
[11:20:11] <FromDiscord> <Girvo> :catnod:
[11:21:34] <FromDiscord> <Elegantbeef> "This has been an episode of 'Beef states the obvious to someone'"
[11:22:39] <FromDiscord> <Girvo> Haha nah its super helpful anyway! Theres so many layers here keeping them all straight in my head is a real task
[11:22:47] <FromDiscord> <Girvo> Or should I say, xTaskCreate
[11:37:09] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RyZ
[11:37:41] <FromDiscord> <Girvo> And if you do, you'll have a bad time as there is no actual pointer passed now
[11:38:18] <FromDiscord> <Girvo> Hence why I was trying to do a wrapper in the first place, but it had the same error we've been talking about when used with `{.thread, cdecl.}`
[11:38:29] <FromDiscord> <Girvo> (edit) "Hence why I was trying to do a wrapper in the first place, but it had the same error we've been talking about when used with `{.thread, cdecl.}` ... " 03added "on the wrapper"
[11:40:02] <FromDiscord> <Elegantbeef> What was the wrapper?
[11:40:33] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3Rz0
[11:41:32] <FromDiscord> <Elegantbeef> Hmmm
[11:42:04] <FromDiscord> <Elegantbeef> And how do you create the task + pass the object?
[11:43:03] <FromDiscord> <Girvo> So this is the "InstrFetchProhibited" code: https://pastebin.com/2QJsZean
[11:43:50] <FromDiscord> <Girvo> `var tModem = newTask(sendAT, "sendAT", (16384  3).SzBytes)` is how its being used
[11:46:01] <FromDiscord> <whisperdev> Wow is Nitter the most well known Nim app in the wild?
[11:46:08] <FromDiscord> <Elegantbeef> Probably
[11:46:18] <FromDiscord> <Elegantbeef> Hmm if result isnt NVRO'd you might have an issue
[11:46:43] <FromDiscord> <Girvo> Yeah I had a feeling I was doing something wrong in that newTask proc
[11:46:55] <FromDiscord> <Elegantbeef> `echo cast[int](result.addr)` `echo cast[int](tModem.addr)` where they belong
[11:47:09] <FromDiscord> <Elegantbeef> That's if it can print before it  crashes
[11:47:16] <FromDiscord> <Girvo> Alright I'll give it a try
[11:48:01] <FromDiscord> <Elegantbeef> You might need to make a api that takes a `var Task`
[11:48:37] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rz1
[11:49:07] <FromDiscord> <Elegantbeef> I'm just guessing that the issue is that `addr result` is the issue, i'm probably wrong
[11:49:17] <FromDiscord> <Girvo> So thats honestly my guess too
[11:49:23] <FromDiscord> <Girvo> Wanna know something hilarious
[11:49:34] <FromDiscord> <Elegantbeef> Always
[11:49:47] <FromDiscord> <Girvo> Adding those echos? It now works. Removing them? Back to the InstrFetchProhibited üòâ
[11:50:00] <FromDiscord> <Girvo> So I reckon that addr result is on the right track
[11:50:07] <FromDiscord> <Elegantbeef> Echo is thread safe so it's locking the code someehwere long enough
[11:50:10] <FromDiscord> <Girvo> Yeah
[11:50:18] <FromDiscord> <Elegantbeef> Were the addresses the same?
[11:50:28] <FromDiscord> <Girvo> One sec, I'll check again
[11:51:44] <FromDiscord> <Girvo> Yep they are the same
[11:53:11] <FromDiscord> <Elegantbeef> Does it work if you write the code manually outside a proc?
[11:54:41] <FromDiscord> <Girvo> If you mean xTaskCreate itself? Yeah it does
[11:55:32] <FromDiscord> <Elegantbeef> Wait a minute
[11:55:32] <FromDiscord> <Girvo> I'll strip it all back to the simplest things possible and see if I can replicate it. I'm certain it's something to do with how I'm defining this Task object and how it interacts with xTaskCreate memory-wise
[11:55:41] <FromDiscord> <Elegantbeef> What's the `ret` value?
[11:56:00] <FromDiscord> <Girvo> `ret: BaseType_t` -- the returned value from xTaskCreate itself
[11:56:03] <FromDiscord> <Elegantbeef> if it doesnt create teh task and you go to destroy the object it'll error
[11:56:12] <FromDiscord> <Elegantbeef> No i mean is it successful
[11:56:17] <FromDiscord> <Girvo> Oh!
[11:56:20] <FromDiscord> <Girvo> Actually good point
[11:56:23] <FromDiscord> <Girvo> one second please
[11:56:36] <FromDiscord> <Elegantbeef> Fuck no i want the answer now!!!! üòõ
[11:57:39] <FromDiscord> <Girvo> Oh man what the fuck, lol. Its working now. This has to be in UB-land, right?
[12:00:43] <FromDiscord> <Girvo> sent a code paste, see https://paste.rs/D1R
[12:02:57] <FromDiscord> <Girvo> And it still works
[12:02:58] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3Rz2
[12:03:52] <FromDiscord> <Girvo> Add it into both? And it fails! And fails at `var tModem = newTask(sendAT, "sendAT", (16384  3).SzBytes)`
[12:05:17] <FromDiscord> <Girvo> Something to do with global variables, closures/procs and how that works with cdecl perhaps? I might just ditch this whole Task wrapper and just document how to use xTaskCreate properly instead, because this is starting to hurt my head lol. And using it straight, seems to work no worries even with both lock accesses
[12:08:03] *** Joins: toulene (~toulene@user/toulene)
[12:11:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:12:02] <FromDiscord> <Girvo> Ditching the whole wrapper stuff, sticking to raw `xTaskCreate`, the lock accesses work fine
[12:14:33] *** Joins: PMunch (~PMunch@user/pmunch)
[12:33:29] *** Joins: user30959 (~toulene@user/toulene)
[12:34:27] <FromDiscord> <Elegantbeef> Hmm pmunch is alive on offtopic maybe here aswell
[12:34:53] *** Quits: user30959 (~toulene@user/toulene) (Remote host closed the connection)
[12:35:07] <PMunch> Good morning
[12:35:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[12:35:40] <FromDiscord> <Elegantbeef> How to futhark files in `/usr/include/`?
[12:35:49] <PMunch> Just like normal`
[12:36:07] <FromDiscord> <Elegantbeef> Ah so then i'm an idiot
[12:36:13] <PMunch> `sysPath "/usr/include"; "mylib.h"`
[12:36:37] <FromDiscord> <Elegantbeef> Oh i see
[12:36:39] <PMunch> I guess you tried to use `path "/usr/include"` and it blew up from recursion depth?
[12:37:10] <FromDiscord> <Elegantbeef> Nah i did `path "/usr/include/mylib/file"`
[12:37:21] <PMunch> Ah, yeah that's not how it works
[12:37:26] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3Rza
[12:37:44] <PMunch> `path` is used to specify paths to automatically import required headers from
[12:37:52] <FromDiscord> <Waldecir Santos> (edit) "https://play.nim-lang.org/#ix=3Rza" => "https://play.nim-lang.org/#ix=3Rzb"
[12:38:50] <FromDiscord> <Rika> In reply to @Waldecir Santos "I need to have": It doesn‚Äôt look like you need either var written in that proc signature?
[12:39:01] <FromDiscord> <Rika> Remove the one on the result type
[12:39:27] <FromDiscord> <Waldecir Santos> I do need it because the idea is to chain other functions calls, this is just an example.
[12:39:45] <FromDiscord> <Waldecir Santos> The object will be "resolved' as soon I try to iterate or print it.
[12:41:01] <PMunch> https://play.nim-lang.org/#ix=3Rzc
[12:41:22] <PMunch> You don't use var on the return type, the mutability of a symbol is determined by how it's stored by the caller
[12:41:23] <FromDiscord> <Elegantbeef> Aw yay my lack of understanding how C imports should be
[12:41:41] <FromDiscord> <Elegantbeef> `#include <spa/utils/string.h>` in C, should be done how in futhark?
[12:41:46] <PMunch> @Elegantbeef, well this is a bit of an implementation detail in Futhark
[12:42:03] <FromDiscord> <Elegantbeef> I figured it was done the same
[12:42:22] <FromDiscord> <Waldecir Santos> In reply to @PMunch "You don't use var": It fails if I chain the calls I need, I'll try to create a more complete version of the example to be more clear
[12:42:27] <PMunch> `sysPath "<path to clang includes>; path "/usr/include/spa"; "utils/string.h"` is how I'd do it
[12:42:58] <PMunch> That way anything in /usr/include/spa which spa/utils/string.h might need is included automatically
[12:43:13] <PMunch> Or rather, will be included automatically if it uses them
[12:43:49] <PMunch> Or you could just do `sysPath "<path to clang includes>; sysPath "/usr/include"; "spa/utils/string.h"` if you don't want to import anything but the definitions in string.h itself
[12:44:11] <FromDiscord> <Rika> In reply to @Waldecir Santos "It fails if I": Remove var on both the input and output types then
[12:44:16] <FromDiscord> <Rika> Neither seems to be required
[12:44:23] <PMunch> Any objects outside of the string.h module will simply be a `distinct object` so that pointers to it still works but you won't be able to see any of their fields.
[12:44:28] <FromDiscord> <Rika> Chaining calls usually have neither of them as var
[12:44:31] <FromDiscord> <Elegantbeef> Yea i've tried a bunch of these variants of this
[12:44:37] <FromDiscord> <Elegantbeef> It doesnt work
[12:45:24] <PMunch> @Waldecir_Santos, you're probably running into the "an inline call is not mutable" issue, try reading up on `dup`.
[12:45:30] <PMunch> @Elegantbeef, doesn't work?
[12:45:37] <PMunch> Could you be a bit more specific? :P
[12:45:56] <FromDiscord> <Elegantbeef> Nope opir just cries
[12:46:02] <PMunch> About what
[12:46:20] <FromDiscord> <Elegantbeef> Sorry it's unable to parse the output of opir
[12:46:41] <PMunch> By the way @Elegantbeef I tried Elden Ring with first my old Ouya controller, then an Xbox One controller. And the difference between those and mouse+keyboard is night and day :P
[12:46:56] <PMunch> Could you just give me the full error message? :P
[12:47:20] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rzf
[12:47:42] <FromDiscord> <Elegantbeef> Oh fuck i didnt see the above messages
[12:47:44] <PMunch> Aha, so that's a libclang error
[12:47:51] <FromDiscord> <Elegantbeef> My bad, i'll go in my hidey hole
[12:48:01] <PMunch> It basically means it wasn't able to parse the files
[12:48:15] <FromDiscord> <Waldecir Santos> In reply to @PMunch "@Waldecir_Santos, you're probably running": yeap, thank you
[12:48:18] <FromDiscord> <Elegantbeef> No no no, dont worry i was missing the actual errors above
[12:49:22] <PMunch> Ah right
[12:49:55] <FromDiscord> <Elegantbeef> My terminal was docked just enough that i seen the parsing of opir output but not the fatal error above
[12:50:06] <FromDiscord> <Elegantbeef> Just a simple include path isssue
[12:50:19] <FromDiscord> <Elegantbeef> 'simple' rather
[12:51:24] <FromDiscord> <Elegantbeef> Unknown type names, now that I can read üòõ
[12:52:39] <FromDiscord> <untoreh> can I `stat` a file at compile time?
[12:53:12] <FromDiscord> <Elegantbeef> You can use `gorge` to run a command at CT
[12:53:45] <PMunch> @Elegantbeef, so everything works fine now?
[12:54:05] <FromDiscord> <Elegantbeef> Well i have an issue with stdint.h but i now know where the errors are
[12:55:36] <FromDiscord> <untoreh> gorge doesn't help with debugging since at runtime I would use stat not exec
[12:56:57] <PMunch> @Elegantbeef, issue with stdint.h?
[12:57:51] <FromDiscord> <Elegantbeef> About 10 of `Error: unknown type name 'uint32_t'`
[12:59:44] <PMunch> From libclang? Or from Nim?
[13:00:01] <FromDiscord> <Elegantbeef> libclang i believe
[13:01:12] <PMunch> It sounds  like you haven't set up your clang library imports correctly
[13:01:37] <PMunch> Do you have something like `sysPath "/usr/lib/clang/13.0.1/include"` in your Futhark definition?
[13:01:47] <FromDiscord> <Elegantbeef> i have the syspath setup just as you did and i checked and ensured it exists
[13:01:58] <PMunch> Just as I did?
[13:02:07] <FromDiscord> <Elegantbeef> In the futhark example
[13:02:19] <PMunch> Could you share the futhark definition you're using?
[13:02:47] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Rzj
[13:04:02] <PMunch> And `find "/usr/lib/clang/12.0.1/include/" -name "stdint.h"` returns a file?
[13:04:15] <FromDiscord> <Elegantbeef> Yes
[13:04:23] <PMunch> You might need to add "/usr/lib/clang/12.0.1/include-fixed/" as well
[13:04:26] <FromDiscord> <Elegantbeef> Like i said i did ensure that path existed
[13:04:34] <FromDiscord> <Elegantbeef> That folder doesnt exist
[13:04:46] <PMunch> Okay, never mind that then :P
[13:04:48] <FromDiscord> <Elegantbeef> There is only `include` and  `lib`
[13:06:23] <PMunch> Hmm, it worked for me (albeit with clang 13.0.1)
[13:06:36] <FromDiscord> <Elegantbeef> I can try 13
[13:06:50] <FromDiscord> <Elegantbeef> Works
[13:06:59] <FromDiscord> <System64 ~ Flandre Scarlet> sent a long message, see http://ix.io/3Rzm
[13:08:55] <PMunch> @Elegantbeef, by the way, if you do this it pulls it about 6x the amount of definitions: http://ix.io/3Rzn/nim because it can now automatically import some more required stuff
[13:09:12] <FromDiscord> <Waldecir Santos> In reply to @PMunch "@Waldecir_Santos, you're probably running": Dup is "working" but the old object is affect too, seems like they have the same reference https://play.nim-lang.org/#ix=3Rzo
[13:09:18] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:b805:1ee3:3bd1:e74) (Read error: Connection reset by peer)
[13:09:33] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584)
[13:10:10] <PMunch> @System64_~_Flandre_Scarlet, Futhark will never create a ref type. So I believe the `Reference` part there is just because that is the documentation reference :P
[13:10:41] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, Futhark will never": Ah alright, but why I can't set the values then?
[13:10:48] <FromDiscord> <Rika> Deep copy is needed because it‚Äôs a ref. I assume it only does a shallow copy
[13:11:02] <PMunch> Unions are just like structs, but instead of the fields being one after each other in memory, and you're able to set all the fields at the same time, a union has all the fields in the same memory location, and you're only able to set one of them.
[13:11:28] <FromDiscord> <System64 ~ Flandre Scarlet> it doesn't even purpose me to set the index https://media.discordapp.net/attachments/371759389889003532/950327313587904542/unknown.png
[13:11:33] <FromDiscord> <Waldecir Santos> In reply to @Rika "Deep copy is needed": Correct if I convert back to "non-ref" it works, I'll play around with it, lets see
[13:12:45] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/950327634305380402/unknown.png
[13:12:56] <PMunch> @System64_~_Flandre_Scarlet, just try it, might be that nimsuggest is broken
[13:13:20] <PMunch> Hmm
[13:13:55] <PMunch> You can try go-to definition for Tlntile and see if that gives you anything
[13:14:05] <FromDiscord> <System64 ~ Flandre Scarlet> wdym?
[13:14:25] <PMunch> Basically tell your editor to open where it is defined
[13:14:31] <PMunch> This should show you the Futhark cache file
[13:14:54] <FromDiscord> <System64 ~ Flandre Scarlet> I copied and renamed the futhark file
[13:15:25] <FromDiscord> <System64 ~ Flandre Scarlet> ah yeah it opens where it's defined
[13:15:57] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Rzp
[13:16:16] <PMunch> And now go to the definition of Tlntile_973078868
[13:16:27] <FromDiscord> <System64 ~ Flandre Scarlet> ``Tlntile_973078868 = ptr uniontile_973078865``
[13:16:37] <PMunch> And now to uniontile_973078865
[13:17:05] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Rzq
[13:17:28] <PMunch> And now to uniontile_973078864 (this should be the last jump)
[13:17:28] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://paste.rs/K5D
[13:17:42] <PMunch> Hmm, weird
[13:17:44] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) 
[13:18:15] <PMunch> I think I need to try this myself
[13:18:15] <FromDiscord> <System64 ~ Flandre Scarlet> both values are packed I guess?
[13:18:25] <PMunch> Yeah but it should work fine
[13:21:03] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Yeah but it should": I dunno why it behaves like this
[13:21:47] <PMunch> Hmm
[13:21:53] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Rzs
[13:22:20] <PMunch> Hmm, it seems to be a Futhark bug
[13:22:56] *** Joins: toulene (~toulene@user/toulene)
[13:23:12] <PMunch> What you can do is copy that c2nim definition but name it `uniontile` before you run Futhark
[13:23:19] <PMunch> Or before you import the Futhark file
[13:23:40] <PMunch> All those `when defined()` statements should mean that it now uses your definition instead of the one generated by Futhark
[13:23:40] <FromDiscord> <System64 ~ Flandre Scarlet> it will work?
[13:23:48] <PMunch> Yeah that should work fine
[13:24:12] <PMunch> You can see from what you pasted here: https://play.nim-lang.org/#ix=3Rzq
[13:24:26] <PMunch> That it will grab that definition for uniontile if it exists already
[13:25:36] <FromDiscord> <System64 ~ Flandre Scarlet> so I have to replace that?
[13:25:45] <PMunch> No you don't have to replace anything
[13:26:20] <FromDiscord> <System64 ~ Flandre Scarlet> so what should I do?
[13:26:35] <PMunch> Simply take the definition you have from c2nim (and rename the uint16T stuff to normal Nim uint16) and paste that in before you import the file generated by Futhark (or run Futhark)
[13:27:09] <PMunch> Oh, and in that c2nim snippet, rename Tile to uniontile.
[13:28:06] <FromDiscord> <System64 ~ Flandre Scarlet> Like that I guess? https://media.discordapp.net/attachments/371759389889003532/950331498257592330/unknown.png
[13:28:15] <FromDiscord> <System64 ~ Flandre Scarlet> This is the Futhark file
[13:28:25] <PMunch> Nope
[13:28:31] <PMunch> Don't edit the Futhark file at all
[13:28:35] <PMunch> Never edit the Futhark file
[13:28:51] <FromDiscord> <System64 ~ Flandre Scarlet> alright
[13:29:00] <PMunch> Take line 2-9 in that snippet, and copy it into your project, right before you import that file.
[13:29:30] <PMunch> Oh wait, you should probably `include` that file now that I think about it
[13:29:30] <FromDiscord> <Elegantbeef> "Dont edit the futhark file at all" Jeez pmunch, you're not my mom you cant tell me what to do
[13:29:36] <PMunch> I think that's what Futhark does
[13:29:59] <PMunch> @Elegantbeef, haha, I mean edit it to your hearts desire, but don't come crying to me when stuff stops working :P
[13:30:09] <PMunch> Or when Futhark overrides the file because it is only a cache file
[13:30:36] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Oh wait, you should": including that file?
[13:31:05] <PMunch> Change `import futhark_<numbers>.nim` to `include futhark_<numbers>.nim`
[13:31:27] <FromDiscord> <System64 ~ Flandre Scarlet> what's the difference?
[13:31:30] <PMunch> If you have copied that file into your project, if you're still running Futhark with importc you don't have to worry about it
[13:31:43] <PMunch> `include` essentially just reads the file and copies it into the current file
[13:31:54] <PMunch> `import` imports it as it's own separate module
[13:32:01] <FromDiscord> <System64 ~ Flandre Scarlet> ah yeah just like C then
[13:32:50] <PMunch> The Futhark `importc` macro returns the AST which it saves to the `futhark_<numbers>.nim` file, or an `include futhark_<numbers>.nim` statement
[13:33:24] <PMunch> And I think that you might need to `include` it for those `when declared` statements to work. But maybe not now that I think about it
[13:34:53] <FromDiscord> <System64 ~ Flandre Scarlet> okay I put this snippet into a separate file and imported the file before futhark
[13:35:12] <FromDiscord> <System64 ~ Flandre Scarlet> Like that (where TilengineBinding is the Futhark file) https://media.discordapp.net/attachments/371759389889003532/950333285261791232/unknown.png
[13:35:25] <PMunch> Hmm, that might work
[13:35:32] <PMunch> Haven't tested that
[13:37:08] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/950333772040126514/unknown.png
[13:38:05] <PMunch> Ah, it is now in a field called anoTilengine132
[13:38:14] <PMunch> As you can see in your definition
[13:38:30] <FromDiscord> <System64 ~ Flandre Scarlet> yeah
[13:38:55] <PMunch> So you need to do tile.aneTilengine132.index
[13:41:04] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/950334760767610930/unknown.png
[13:43:54] <FromDiscord> <System64 ~ Flandre Scarlet> And I tried to cast, doesn't work
[13:44:54] <PMunch> That's because you do `var tile: Types.uniontile`
[13:45:04] <PMunch> That should be `var tile: Tlntile`
[13:46:05] <FromDiscord> <System64 ~ Flandre Scarlet> I have now only access to value
[13:46:40] <PMunch> Not to `anoTilengine132?
[13:46:54] <FromDiscord> <System64 ~ Flandre Scarlet> Not even
[13:47:24] <PMunch> I guess you need to include Types and TilengineBinding
[13:47:29] <PMunch> Instead of importing them
[13:48:25] <FromDiscord> <System64 ~ Flandre Scarlet> changes nothing, it gets even worse
[13:49:34] <PMunch> Worse?
[13:50:02] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/950337020419506176/unknown.png
[13:50:36] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584) (Ping timeout: 240 seconds)
[13:50:51] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584)
[13:50:52] <PMunch> I mean that doesn't tell me anything..
[13:51:17] <FromDiscord> <System64 ~ Flandre Scarlet> Well in fact the binding is imported in every module
[13:51:31] <FromDiscord> <System64 ~ Flandre Scarlet> like I have a module tilemap, it imports the binding
[13:54:51] <PMunch> This works for me: http://ix.io/3RzA
[13:55:38] <FromDiscord> <System64 ~ Flandre Scarlet> ah so I need to redo the Futhark thing?
[13:56:10] <PMunch> Well, what I would do is move TilengineBinding.nim to TilengineBindingRaw.nim
[13:56:27] <FromDiscord> <System64 ~ Flandre Scarlet> I did a copy of TilengineBinding
[13:56:33] <PMunch> And then have `TilengineBinding.nim` be that type definition, and then `include TilengineBindingRaw` at the bottom
[13:56:53] <PMunch> Then you can `import TilengineBinding` like you did before
[13:57:17] <PMunch> But I've gotta run
[13:57:21] <PMunch> Lunch break!
[13:57:25] <FromDiscord> <System64 ~ Flandre Scarlet> sent a long message, see http://ix.io/3RzD
[13:57:28] <FromDiscord> <System64 ~ Flandre Scarlet> Good lunch!
[13:59:28] <FromDiscord> <System64 ~ Flandre Scarlet> Btw this is the Binding https://media.discordapp.net/attachments/371759389889003532/950339391002378270/TilengineBinding.nim
[13:59:46] <FromDiscord> <System64 ~ Flandre Scarlet> It's literally the futhark file
[14:34:53] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[14:40:30] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584) (Remote host closed the connection)
[14:50:16] <om3ga> Hi! What mean EDB in db/mysql? Is that constant(s), of what type or values? What I mean for example let db = open(..) .... if db == EDb: try... except... <-- will that work?
[14:50:25] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://paste.rs/kJg
[14:53:24] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 256 seconds)
[14:54:33] *** Joins: toulene (~toulene@user/toulene)
[14:59:26] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[15:02:06] *** Joins: toulene (~toulene@user/toulene)
[15:05:41] <PMunch> @System64_~_Flandre_Scarlet, yeah I have the header and my own Futhark set up to wrap it :)
[15:10:58] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 256 seconds)
[15:12:40] *** Quits: rawrrr (uid540880@id-540880.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:14:04] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[15:20:04] <PMunch> Hmm, is there a way to do something like this in Nim? https://gcc.gnu.org/onlinedocs/gcc/Unnamed-Fields.html
[15:20:09] <PMunch> I'm guessing there isn't, right?
[15:24:21] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, yeah I have": And can you use it as expected?
[15:24:47] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RzZ
[15:24:52] <FromDiscord> <ynfle> In reply to @PMunch "Hmm, is there a": What's the purpose of this?
[15:27:27] <FromDiscord> <Rika> In reply to @ynfle "What's the purpose of": It is useful for unions I assume
[15:28:15] <PMunch> @System64_~_Flandre_Scarlet, yeah this works fine for me: http://ix.io/3RA0/nim
[15:28:39] <PMunch> @ynfle, @Rika, yes it's mostly for unions
[15:29:50] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, yeah this works": ah alright, will try this, but I guess I need to re-Futhark the file again?
[15:29:54] <PMunch> You could define something like http://ix.io/3RA0/c
[15:30:07] <FromDiscord> <Rika> There isn‚Äôt in Nim
[15:30:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:30:22] <FromDiscord> <Rika> Probably nearly trivial to implement via macro
[15:31:02] <PMunch> Yeah I was thinking just some simple templates
[15:31:11] <PMunch> @System64_~_Flandre_Scarlet, nope
[15:31:29] <PMunch> @System64_~_Flandre_Scarlet, the file you have is exactly what would come from the cache right?
[15:32:02] <PMunch> You remember all the `when declared` statements and the weird type pointing to a type pointing to a type stuff we looked at earlier?
[15:32:12] <PMunch> That is to ensure that you can just drop in definitions like this
[15:35:18] <FromDiscord> <System64 ~ Flandre Scarlet> Oh alright
[15:35:25] <FromDiscord> <System64 ~ Flandre Scarlet> Okay so I changed the tile https://media.discordapp.net/attachments/371759389889003532/950363540634599454/unknown.png
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:24] <FromDiscord> <ynfle> In reply to @PMunch "<@757977788056600719>, <@259277943275126785>, yes i": Nim doesn't have unions
[15:37:52] <FromDiscord> <Rika> Nim has unions
[15:38:00] <FromDiscord> <Rika> Pragma union
[15:44:44] <FromDiscord> <Waldecir Santos> How can I print only the pointer of a object "0x1022d52d0" ?
[15:45:13] <FromDiscord> <Waldecir Santos> I've tried `repr obj.addr` but it prints more than the ptr
[15:45:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:46:04] <FromDiscord> <Rika> Cast it into an appropriate size integer then format into a hex string
[15:46:34] <FromDiscord> <Waldecir Santos> Oh nice, let me try it, thank you
[15:53:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:53:58] <PMunch> @System64_~_Flandre_Scarlet, as I said, don't use Types.uniontile
[15:54:15] <PMunch> Rather try to make sure that Futhark agrees with your definition
[15:54:20] <PMunch> Like I showed you in my example
[15:54:45] <PMunch> That way you  don't need the cast either, simply tile.addr should yield the correct type for setTilemapTile
[15:59:30] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RA8
[16:02:06] <FromDiscord> <Waldecir Santos> In reply to @Rika "Cast it into an": This is what I did `&"{cast[int](qs1.addr):#X}"`  that is what you meant, right ?
[16:03:36] <PMunch> @System64_~_Flandre_Scarlet, as I've already told you three times, there was no need to re-futhark the file. Of course it doesn't hurt at all, but it wasn't really necessary. I'm not sure what you're asking about right now, you can move those definitions anywhere you like
[16:03:59] <FromDiscord> <Waldecir Santos> Funny that #X return the hex with upper case letters, but nim normally output them as lower case, /shrug
[16:04:46] <FromDiscord> <Waldecir Santos> Nope the problem is with `#X`, `#x` returns it lower case.
[16:04:59] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[16:08:11] <FromDiscord> <System64 ~ Flandre Scarlet> But why doing the importc thing if I already have the futhark file?
[16:10:00] <PMunch> @System64_~_Flandre_Scarlet, if I where you I'd do something like this: https://play.nim-lang.org/#ix=3RAa
[16:10:14] <PMunch> Well Futhark is intended to be run whenever you compile your program
[16:10:18] <PMunch> That's why it caches stuff
[16:10:28] <PMunch> So that it will be fast
[16:10:57] <FromDiscord> <System64 ~ Flandre Scarlet> Aaaah alright!
[16:11:00] <PMunch> The idea is that if I download a more recent version of Tilengine than the one you wrapped it will still work just fine
[16:11:40] <FromDiscord> <System64 ~ Flandre Scarlet> good to know‚ÜµAnd the Raw file, it is the old one right?
[16:15:17] <PMunch> The Raw file is the cache file from Futhark, ref the comment on line 15
[16:16:27] <PMunch> I guess I could add a flag to Futhark to output to a specific file as well. That way the importc block could simply have a `output "TilengineBindingRaw.nim"` and that snippet would be self contained
[16:17:18] <FromDiscord> <System64 ~ Flandre Scarlet> The problem is the Windows file paths
[16:17:25] <FromDiscord> <System64 ~ Flandre Scarlet> it makes the tool bugged
[16:17:50] <FromDiscord> <System64 ~ Flandre Scarlet> since it understands ``\`` as an escape symbol
[16:20:02] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/I3d
[16:20:20] <FromDiscord> <enthus1ast> regarding nimscripter
[16:28:44] <PMunch> @System64_~_Flandre_Scarlet, "the tool"?
[16:29:16] <FromDiscord> <Rika> probably opir
[16:35:58] <PMunch> Ah, someone who runs Windows and is good at Nim should really have a look at Futhark to fix the path handling
[16:36:13] <PMunch> I'd do it myself, but it's not exactly easy to do without a Windows machine :P
[16:37:02] <FromDiscord> <Rika> add "and also good at windows
[16:37:23] <FromDiscord> <Rika> i have windows, and am good enough at nim, but i have no clue how to do windows shit
[16:37:32] *** Joins: rockcavera (~rc@192.12.112.199)
[16:37:32] *** Quits: rockcavera (~rc@192.12.112.199) (Changing host)
[16:37:32] *** Joins: rockcavera (~rc@user/rockcavera)
[16:44:31] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, "the tool"?": Futhark
[16:44:57] <Amun-Ra> and I have the same ammount of winboxes as PMunch has
[16:46:07] *** Joins: jjido (~Denis@94.4.149.217)
[16:46:41] <PMunch> @Rika, haha yeah I need someone who fits the categories "Good at Nim", "Good at Windows", "Good at linking C stuff"
[16:46:54] <PMunch> I just need to get hold of Araq don't I :P
[16:46:56] <FromDiscord> <Rika> unicorn
[16:47:01] <FromDiscord> <Rika> youll have more luck finding a unicorn
[16:47:05] <PMunch> Haha
[16:47:21] <PMunch> I have a friend actually who's dabbled a bit in Nim, maybe he'd be able to help me out
[16:51:30] <FromDiscord> <enthus1ast> the only fix i found was import system/nimscript in os.nim
[16:51:32] <FromDiscord> <enthus1ast> ...
[16:51:37] <FromDiscord> <enthus1ast> bug i guess
[17:20:17] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:22:14] <FromDiscord> <System64 ~ Flandre Scarlet> How can I instanciate an anonymous object of a type please
[17:22:27] <FromDiscord> <Rika> ? wdym
[17:23:17] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Rika "? wdym": I want to instanciate Tile objects in the loop https://media.discordapp.net/attachments/371759389889003532/950390682483318864/unknown.png
[17:23:52] <FromDiscord> <Rika> do you have an init proc for them?
[17:24:20] <FromDiscord> <System64 ~ Flandre Scarlet> no, why?
[17:25:28] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3RAw
[17:33:38] <FromDiscord> <System64 ~ Flandre Scarlet> Since when an int is immutable?‚ÜµIt's not a constant https://media.discordapp.net/attachments/371759389889003532/950393292518989834/unknown.png
[17:34:30] <FromDiscord> <enthus1ast> the parametes to your function are
[17:34:39] <FromDiscord> <enthus1ast> must declare them with x\: var int
[17:34:44] <PMunch> I assume you wanted to change xTemp and not x?
[17:34:59] <FromDiscord> <enthus1ast> yes
[17:35:07] <FromDiscord> <System64 ~ Flandre Scarlet> ah yeah maybe I can do that
[17:35:57] <PMunch> You could also alias them with `var x = x`. That way the parameter will still be immutable, but the number will be copied into a variable in your procedure
[17:36:15] <FromDiscord> <System64 ~ Flandre Scarlet> Ah alright
[17:36:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:36:17] <PMunch> And by the way, why do you have Tilemap.Tile, are you still not doing it how I told you to do this?
[17:36:33] <FromDiscord> <System64 ~ Flandre Scarlet> It's a bit disturbing, coming from Java and C
[17:36:36] <PMunch> If you don't do it the way I told you it will likely mess up in a subtle way
[17:36:41] <FromDiscord> <Rika> what is Tilemap.Tile?
[17:36:45] <PMunch> What is a bit disturbing?
[17:37:04] <FromDiscord> <Rika> nim doesnt inherit much from C
[17:37:17] <FromDiscord> <System64 ~ Flandre Scarlet> I can't change the value of a parameter if it's not explicitly tell
[17:37:32] <FromDiscord> <Rika> thats good?
[17:37:42] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "And by the way,": It conflicts with the original one
[17:37:43] <FromDiscord> <Rika> could be a subtle bug
[17:38:25] <PMunch> @System64_~_Flandre_Scarlet, that is my point exactly. The original one is the one that Futhark will use, so if you don't override it properly, like I showed you, it will likely bug out in subtle ways
[17:40:04] <PMunch> @System64_~_Flandre_Scarlet, of course you can't change the value of a parameter that's not explicitly defined as mutable. C and Java just does this aliasing with `var x = x` by default I believe. In Nim if you do `var int` as the type for a parameter it is analogous to passing in a pointer, it will modify the value you passed in.
[17:55:17] <FromDiscord> <System64 ~ Flandre Scarlet> Oooh alright!‚ÜµSo even in C and Java, it was always constant!
[17:56:57] <PMunch> Yup
[17:58:18] <FromDiscord> <System64 ~ Flandre Scarlet> Wow, it's good to know
[18:08:35] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:13:39] *** Joins: toulene (~toulene@user/toulene)
[18:28:01] *** Quits: toulene (~toulene@user/toulene) (Quit: Leaving)
[18:30:41] *** Joins: PMunch (~PMunch@user/pmunch)
[18:34:30] *** Joins: arkurious (~arkurious@user/arkurious)
[18:38:56] <FromDiscord> <System64 ~ Flandre Scarlet> it works well! https://media.discordapp.net/attachments/371759389889003532/950409722471809054/unknown.png
[18:39:25] <FromDiscord> <Rika> When the impostor is sus!
[18:41:36] <FromDiscord> <System64 ~ Flandre Scarlet> Tilengine is now sus!
[18:50:53] <FromDiscord> <abdu> what the Nim infinity set n range keyword symbol ?
[18:51:31] <FromDiscord> <Rika> huh?
[18:52:31] <supakeen> what the Nim infinity set n range keyword symbol ?
[18:53:43] <PMunch> -_-
[18:55:53] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Yup": But is the importc thing necessary to override?
[18:56:18] <PMunch> What do you mean?
[18:56:52] <FromDiscord> <System64 ~ Flandre Scarlet> http://ix.io/3RA0/c‚ÜµHere
[18:57:50] <PMunch> Still not sure what you mean
[18:58:13] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Still not sure what": from line 12 to 16
[18:58:42] <PMunch> Yes that is the Futhark stuff
[18:59:23] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[19:02:05] <PMunch> As I said earlier, if you don't want your users to have to install Futhark I'd do it like this: https://play.nim-lang.org/#ix=3RBb
[19:02:57] <PMunch> That way if you compile with `-d:useFuthark` it will use the Futhark and wrap the actual header, otherwise it'll grab the pre-generated version
[19:03:27] <FromDiscord> <Ookl> Why does it say I got tagged ?
[19:03:54] <PMunch> Who knows, maybe someone tagged everyone?
[19:03:56] <FromDiscord> <Rika> I do not know
[19:04:16] <PMunch> Or someone on IRC mentioned your name and it auto-converted to a tag :P
[19:07:52] *** Joins: toulene (~toulene@user/toulene)
[19:09:33] <FromDiscord> <System64 ~ Flandre Scarlet> Aaaah now I understand
[19:12:29] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[19:23:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[19:34:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:43:48] *** Quits: toulene (~toulene@user/toulene) (Quit: ZNC - https://znc.in)
[19:50:56] <FromDiscord> <Require Support> are vars under "when isMainModule" considered global? like can other procs access them
[20:00:32] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[20:06:57] <FromDiscord> <SolitudeSF> \`when\` doesnt open new scope‚Üµ(@Require Support)
[20:09:08] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 272 seconds)
[20:38:02] *** Joins: rockcavera (~rc@192.12.112.199)
[20:38:02] *** Quits: rockcavera (~rc@192.12.112.199) (Changing host)
[20:38:02] *** Joins: rockcavera (~rc@user/rockcavera)
[20:48:58] *** Quits: oz (~oz@crystal/user/oz) (Remote host closed the connection)
[21:29:37] *** Joins: ox (~oz@crystal/user/oz)
[21:38:29] *** Joins: jjido (~Denis@94.4.149.217)
[21:59:02] *** Quits: nexeq (nexeq@user/nexeq) (Quit: WeeChat 3.4)
[22:01:28] <FromDiscord> <gibson> (sry, wrong channel before)‚ÜµIs anyone familiar with passing pointers from nim to py with nimpy? Someone asked in issues previously, but removed their own issue. Nimpy doesn't understand pointers so gets confused, and I'm unsure how to use PyCapsules in nimpy to accomplish this. I'd like to create a numpy array from a pointer to existing data (PyArray_SimpleNewFromData).
[22:20:57] <FromDiscord> <Require Support> quick way to convert string into char array?
[22:22:36] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[22:22:50] <FromDiscord> <huantian> In reply to @Require Support "quick way to convert": sequtils as toSeq
[22:22:55] <FromDiscord> <huantian> (edit) "as" => "has"
[22:25:45] <FromDiscord> <Generic> In reply to @Require Support "quick way to convert": char array as in array[n, char]?
[22:26:06] <FromDiscord> <auxym> In reply to @huantian "sequtils has toSeq": this will copy the string into the array, but yes it's probably the best way (unless you're interacting with C and just want to pass a bare pointer to the data)
[22:26:17] <FromDiscord> <gibson> `toOpenArray(x: cstring; first, last: int): openArray[char]` in system
[22:26:22] <FromDiscord> <Generic> yeah
[22:26:39] <FromDiscord> <Generic> there's also an overload which works on normal strings
[22:27:01] <FromDiscord> <gibson> (edit) "cstring;" => "string;"
[22:30:03] <FromDiscord> <Require Support> thanks guys
[22:35:08] <FromDiscord> <gibson> @Require Support there's also cstring: `myString.cstring` is a zero-copy type conversion to a Compatible String (basically pointer to the first char position)
[22:36:00] <FromDiscord> <Require Support> In reply to @gibson "<@!710108871724761128> there's also cstring:": omg, a life saver - that worked perfectly ‚ù§Ô∏è
[22:39:32] *** Quits: droidrage (046d050fdb@198.108.77.17) (Quit: Gateway shutdown)
[22:39:32] *** Quits: qwestion (a6872f2a98@198.108.77.17) (Quit: Gateway shutdown)
[22:57:00] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[22:57:15] *** Joins: mjsir911 (~bnc@user/mjsir911)
[22:59:39] <FromDiscord> <Phil> Might I ask the more macro heavy folks among you something?
[23:01:34] <FromDiscord> <tandy> is there a way to convert `seq[string]` to `seq[cstring]`?
[23:02:00] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3RCK
[23:08:49] *** Joins: vicfred (~vicfred@user/vicfred)
[23:12:01] *** Joins: vicfred_ (~vicfred@user/vicfred)
[23:14:17] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[23:14:29] <FromDiscord> <Phil> Wait a second
[23:19:50] <FromDiscord> <Phil> Ah yes, reading
[23:19:55] <FromDiscord> <Phil> one uses typed, the other ref object
[23:20:11] <FromDiscord> <Phil> Of course they're not going to work the same since dot is more specific than getField
[23:50:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:58:14] <FromDiscord> <gibson> In reply to @tandy "is there a way": For `seq[string]` to `seq[cstring]` I've been wanting that as well. AFAIK there is no way without looping through the data. You could theoretically do some fancy casting, but as I was recently advised on here, you should not assume the memory layout of the nim string datatype.
