[00:00:13] <Tv_> how else would you give an error on -x
[00:01:39] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[00:01:44] <jemaclus> same way you error on everything else, check the value and handle it
[00:01:51] <jemaclus> I understand your point
[00:01:55] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[00:02:03] <jemaclus> It just feels clunkier than my mental model suggests it should be.
[00:02:08] <Tv_> jemaclus: your example isn't checking for unexpected existence of -x anywhere
[00:02:18] *** Joins: kulak1 (~kulak@user/kulak)
[00:02:32] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Remote host closed the connection)
[00:02:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:02:56] <jemaclus> what does "unexpected existence of -x" mean? like someone did "cmd -x" but x isn't a valid flag?
[00:03:01] <Tv_> yes
[00:03:37] <jemaclus> just ignore it?
[00:03:45] <Tv_> that's not a good idea
[00:03:47] <jemaclus> git ignores flags it doesn't recognize
[00:04:01] <jemaclus> maybe not.
[00:04:03] <Tv_> $ git --nope
[00:04:03] <Tv_> unknown option: --nope
[00:04:52] <lungaro> "git --nope" should be a flag to revert a PR
[00:05:14] <Tv_> lungaro: the problem with dwim is that there's multiple possible meanings
[00:05:39] <Tv_> undo a commit? revert a commit (because it's already pushed, can't rewrite history), undo staging something, etc
[00:06:09] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[00:06:12] *** Joins: davidkrauser_ (~davidkrau@69-237-12-160.lightspeed.dybhfl.sbcglobal.net)
[00:06:23] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Client Quit)
[00:06:29] *** Quits: davidkrauser_ (~davidkrau@69-237-12-160.lightspeed.dybhfl.sbcglobal.net) (Client Quit)
[00:06:56] <Tv_> though, some of my experiments end in git reset --hard --with-prejudice
[00:07:29] <jemaclus> hmm
[00:07:37] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[00:07:50] <jemaclus> anyway. you're right. i'm just lazy. :)
[00:09:09] *** Quits: darkapex (~darkapex@user/darkapex) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[00:10:21] *** Joins: darkapex (~darkapex@user/darkapex)
[00:15:50] <Tv_> i think my favorite Go typo is still bath.Clean(p)
[00:24:12] *** Quits: sizeof_void34 (~Thunderbi@109.252.75.112) (Quit: sizeof_void34)
[00:30:12] *** Quits: burningserenity_ (~burningse@2603-9001-0f01-ad99-0000-0000-0000-100a.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:30:50] *** Joins: Torr (~Torr@user/torr)
[00:33:29] *** Quits: Louis (~Louis@my-hostna.me) (Quit: ZNC - https://znc.in)
[00:33:56] *** Joins: Louis (~Louis@my-hostna.me)
[00:42:41] *** imm__ is now known as imm_
[00:47:42] *** Joins: dr0n (~nabromov@94.11.23.235)
[00:48:11] *** Joins: vilhelmb1 (~vb@80.208.65.145)
[00:49:46] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[00:51:36] *** Parts: vilhelmb1 (~vb@80.208.65.145) ()
[00:51:45] *** Joins: arcatech (~arcatech@user/arcatech)
[00:53:01] <lungaro> sometimes I label my for loops Dance so i get to type "break Dance"
[00:55:09] *** Joins: normen (~normen@p200300d7173dc9003dcd14e8106c2751.dip0.t-ipconnect.de)
[00:55:09] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:58:18] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[00:58:40] *** Quits: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br) (Ping timeout: 252 seconds)
[00:58:55] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:59:03] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-27.dsl.bell.ca)
[01:01:18] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[01:01:45] *** Quits: jespada (~jespada@90.254.247.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:04:00] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[01:06:41] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:07:00] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:08:23] *** Joins: arcatech (~arcatech@user/arcatech)
[01:08:47] <A_Dragon> lungaro: you can do that with git aliases :P
[01:08:51] <A_Dragon> `git nope `
[01:10:16] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[01:10:35] <ikke> git out
[01:10:39] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[01:11:02] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 265 seconds)
[01:14:33] *** Joins: dr0n (~nabromov@94.11.23.235)
[01:15:39] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:5d30:13c8:922e:2a50) (Quit: Leaving)
[01:19:20] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:26:18] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 258 seconds)
[01:27:06] *** Quits: hikhvar79607 (~thelounge@dynamic-046-114-000-044.46.114.pool.telefonica.de) (Quit: The Lounge - https://thelounge.chat)
[01:27:45] <b0nn> git regret
[01:28:30] *** Quits: normen (~normen@p200300d7173dc9003dcd14e8106c2751.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:31:20] *** Quits: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[01:32:58] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 245 seconds)
[01:38:15] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net) (Quit: WeeChat 3.0.1)
[01:41:12] *** Quits: noteness (noteness@user/noteness) (Quit: Ping Timeout: 419 seconds)
[01:47:13] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:50:13] *** Joins: noteness (noteness@user/noteness)
[01:55:28] *** Quits: noteness (noteness@user/noteness) (Ping timeout: 255 seconds)
[01:59:32] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:02:10] *** Joins: normen (~normen@p200300d7173dc9003dcd14e8106c2751.dip0.t-ipconnect.de)
[02:03:03] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[02:03:29] *** Joins: kulak1 (~kulak@user/kulak)
[02:04:05] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:50] *** Joins: andlabs (~andlabs@71.190.119.164)
[02:11:55] <MrElendig> git gud
[02:17:14] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[02:17:43] *** Joins: kulak1 (~kulak@user/kulak)
[02:18:27] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[02:20:39] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[02:21:14] *** Joins: jinie (~jimmy@188.114.173.37)
[02:22:41] *** Joins: pepee (~user@user/pepee)
[02:26:02] *** Joins: Skyz (~Skyz@user/skyz)
[02:36:07] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 252 seconds)
[02:36:09] *** Quits: jiqiren (~jiqiren@oh-hi.org) (Remote host closed the connection)
[02:37:06] *** Quits: src (~src@user/src) (Quit: leaving)
[02:37:58] *** Joins: jespada (~jespada@90.254.247.46)
[02:38:34] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:39:23] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[02:39:53] *** Joins: jinie (~jimmy@188.114.173.37)
[02:41:42] *** Quits: independent56 (~independe@95.144.68.40) (Ping timeout: 252 seconds)
[02:42:33] *** Quits: sagax (~sagax@213.138.71.146) (Ping timeout: 245 seconds)
[02:42:59] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[02:45:06] *** Quits: jespada (~jespada@90.254.247.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:47:28] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[02:53:47] *** Joins: jespada (~jespada@90.254.247.46)
[02:54:51] <b0nn> To save me looking, is there an example in the standard library of a function being injected into something to make testing easier?
[02:55:43] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[02:58:01] <Tv_> they just look like regular configuration
[02:58:13] <Tv_> http.Client.Transport etc
[03:01:18] *** Joins: FenderQ (~fenderq@user/fenderq)
[03:06:12] *** Joins: schmillin (~schmillin@user/schmillin)
[03:21:53] <b0nn> Cool, that's what I needed
[03:23:57] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[03:27:25] *** Quits: jespada (~jespada@90.254.247.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:27:46] *** Joins: nabromov (~nabromov@195.200.221.74)
[03:28:17] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:31:12] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 265 seconds)
[03:31:53] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:22] *** Joins: jsrnop (~mark@user/jsrnop)
[03:34:52] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[03:41:12] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:44:15] <ska> Is there a way to create a keyboard in an app, and prevent the OS from reading the keys?
[03:46:44] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:46:48] <b0nn> ska: You can have "Buttons" on a form that can have randomly assigned meanings which is the normal way to achieve what you want
[03:47:42] <b0nn> So, if I drew a kb on the screen, and made button A1 = "Q" but in 5 minutes it can be "A" that reduces the ability of someone else to determine which keys were pressed
[03:48:06] <b0nn> Or, rather, the meaning of the key that was pressed
[03:48:31] <FenderQ> yet those values exist in memory, which the OS manages
[03:48:38] *** Parts: Skyz (~Skyz@user/skyz) ()
[03:48:52] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[03:49:17] <b0nn> kind of
[03:49:32] <b0nn> the symbols are just images to the OS, the values too
[03:50:30] <b0nn> well, the values are more... indeterminate
[03:52:34] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[03:56:44] *** Quits: nabromov (~nabromov@195.200.221.74) (Quit: WeeChat 2.8)
[03:58:16] *** Joins: tg (~tg@rockylinux/infra/tg)
[04:00:07] *** Joins: arahael1 (~arahael@60-242-119-83.tpgi.com.au)
[04:00:34] *** Quits: arahael (~arahael@203-206-95-20.tpgi.com.au) (Ping timeout: 255 seconds)
[04:01:01] *** Joins: hexfive (~eric@50.35.83.177)
[04:02:59] *** arahael1 is now known as Arahael
[04:09:28] <gregf> Now that gofumports is no longer part of gofumpt is there a way to get it to automatically do imports, or is that just not going to be a thing anymore?
[04:09:34] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 255 seconds)
[04:10:07] <b0nn> https://pkg.go.dev/golang.org/x/tools/cmd/goimports
[04:19:55] <gregf> I know about goimports, that isn't really what I was asking. I want to know if there was a way to get imports still while using gofumpt
[04:22:51] <b0nn> Oh, if you're talking about https://github.com/mvdan/gofumpt, then the recommendation is to either raise an issue on their github, or join their slack channel
[04:25:23] <gregf> b0nn thanks
[04:25:40] <gregf> sorry for the confusion
[04:26:52] <b0nn> heh, I blame them for naming their project in a confusing way :)
[04:32:45] <Tv_> gregf: switch to gopls, it's a whole new level of tooling
[04:34:24] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 246 seconds)
[04:36:24] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[04:36:57] *** Joins: LSD (~LSD@2.lsd.systems)
[04:40:37] *** Quits: jackneill (~jackneill@20014C4E1803FB006ECE2E153632F191.dsl.pool.telekom.hu) (Ping timeout: 255 seconds)
[04:41:00] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:43:48] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[04:45:57] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:32] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:53:33] *** Quits: devx0 (~devx@151.233.209.35.bc.googleusercontent.com) (Quit: Ping timeout (120 seconds))
[04:53:48] *** Joins: devx0 (~devx@151.233.209.35.bc.googleusercontent.com)
[04:55:11] *** Joins: gggp (~gggp@123.116.88.127)
[05:01:30] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Read error: Connection reset by peer)
[05:19:38] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[05:25:43] *** Joins: gggp_ (~gggp@123.118.15.132)
[05:26:36] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:29:02] *** Quits: gggp (~gggp@123.116.88.127) (Ping timeout: 255 seconds)
[05:30:48] *** Quits: freakazoid334 (~freakazoi@72.168.176.61) (Quit: Leaving)
[05:35:42] *** Joins: freakazoid333 (~freakazoi@72.168.176.61)
[05:36:20] *** Quits: freakazoid333 (~freakazoi@72.168.176.61) (Read error: Connection reset by peer)
[05:36:49] *** Joins: freakazoid333 (~freakazoi@72.168.176.61)
[05:42:14] *** Joins: gggp__ (~gggp@111.63.14.119)
[05:45:06] *** Quits: gggp_ (~gggp@123.118.15.132) (Ping timeout: 246 seconds)
[05:49:44] *** Quits: hposca (~hposca@node-1w7jr9phoke2tnetlghxkyj3n.ipv6.telus.net) (Ping timeout: 255 seconds)
[05:52:25] *** Joins: gggp_ (~gggp@60.10.194.43)
[05:54:52] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[05:56:46] *** Joins: califax- (~califax@user/califx)
[05:58:33] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:58:33] *** califax- is now known as califax
[06:00:32] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[06:03:56] *** Joins: theoceaniscool (~theoceani@119.12.241.167)
[06:05:34] *** Parts: FenderQ (~fenderq@user/fenderq) ()
[06:11:47] *** Joins: gggp__ (~gggp@111.63.14.119)
[06:15:07] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[06:19:37] *** Joins: gggp_ (~gggp@60.10.194.43)
[06:21:26] *** Joins: gggp (~gggp@123.116.73.194)
[06:21:55] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[06:24:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[06:36:32] *** Quits: gggp (~gggp@123.116.73.194) (Remote host closed the connection)
[06:36:56] *** Joins: gggp (~gggp@60.10.194.43)
[06:38:03] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:38:29] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:41:00] *** Joins: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net)
[06:42:43] *** Joins: andlabs (~andlabs@71.190.119.164)
[06:43:56] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[06:44:06] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[06:49:13] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[06:50:57] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[06:53:52] <mkopinsky> is there a way to unmarshal an array of entries from XML into a struct based on a value of some of the XML nodes? I don't think I'm explaining this well, but https://play.golang.org/p/DRp0s9rKp1k has sample XML that I'm getting, how I'm currently unmarshalling it, and how I'd like to unmarshal it ideally
[06:54:58] <jemaclus> You'd have to write a custom unmarshaler, probably.
[06:55:12] <jemaclus> there's not a way with just struct definitions
[06:58:47] <mkopinsky> ok, thanks.
[06:59:46] <mkopinsky> is there a golang way of doing something like `receivedMessages = channelStats.find(stat => stat.status==='received').messageCount`?
[07:02:59] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[07:05:10] *** Joins: c10l (~c10l@89.34.167.207)
[07:05:52] <jemaclus> Not really. You'd have to write your own filtering mechanism there.
[07:07:03] <jemaclus> Your struct could be pre-filtered, something like: https://play.golang.org/p/0wIODFQzA8K and then you could just look for channelStats.Received
[07:07:40] <jemaclus> maybe someone else has a better idea
[07:10:32] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:19:13] *** Joins: CoolerY (~CoolerX@user/coolerx)
[07:24:36] *** Joins: theme (~theme@175.153.168.116)
[07:28:26] *** Parts: theme (~theme@175.153.168.116) ()
[07:30:35] <explodes> What is the syntax for importing a package you're testing but so that you have to use only the public api of that package?
[07:31:01] *** Quits: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net) (Quit: Client closed)
[07:31:12] *** Quits: xav (~quassel@103-96-87-63.novaconnect.nz) (Ping timeout: 268 seconds)
[07:31:19] *** Joins: xav (~quassel@103-96-86-83.novaconnect.nz)
[07:31:23] <b0nn> explodes: use _test as your package name
[07:31:30] <explodes> Oh yea! ok thanks
[07:31:42] <b0nn> That is, if you are testing package foo, then make your test package foo_test
[07:33:13] <A_Dragon> oh Iw as going to recommend what I did
[07:33:19] <A_Dragon> but yeah custom unmarshaller for that works well
[07:33:30] <A_Dragon> especially if you can use an interface instead for most parts of it
[07:36:11] *** Joins: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net)
[07:37:27] *** Quits: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net) (Client Quit)
[07:37:57] *** Joins: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net)
[07:41:42] *** Joins: gggp (~gggp@123.113.186.67)
[07:46:05] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 244 seconds)
[07:46:15] *** Joins: somebody (~ninjin@user/ninjin)
[07:46:36] *** somebody is now known as Guest4260
[07:47:42] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 255 seconds)
[07:47:51] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[08:03:12] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:07:15] *** Quits: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net) (Quit: Client closed)
[08:07:24] *** Joins: gggp_ (~gggp@60.10.194.43)
[08:10:08] *** Joins: oxum (~oxum@106.203.217.191)
[08:10:38] *** Joins: gggp__ (~gggp@60.10.194.43)
[08:10:40] *** Quits: gggp (~gggp@123.113.186.67) (Ping timeout: 252 seconds)
[08:11:44] *** Quits: gggp__ (~gggp@60.10.194.43) (Remote host closed the connection)
[08:12:01] *** Joins: gggp__ (~gggp@123.113.187.192)
[08:13:30] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[08:20:08] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:23:52] *** Joins: andlabs (~andlabs@71.190.119.164)
[08:31:00] *** Quits: oxum (~oxum@106.203.217.191) (Remote host closed the connection)
[08:31:07] *** Joins: CoolerY (~CoolerX@user/coolerx)
[08:32:29] *** Joins: oxum (~oxum@106.203.217.191)
[08:41:28] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[08:43:17] *** Quits: oxum (~oxum@106.203.217.191) (Remote host closed the connection)
[08:50:40] *** Quits: Guest4260 (~ninjin@user/ninjin) (Ping timeout: 244 seconds)
[08:51:39] *** Joins: ninjin (~ninjin@user/ninjin)
[08:54:55] *** Joins: oxum (~oxum@106.203.217.191)
[09:02:35] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 255 seconds)
[09:27:36] *** Quits: normen (~normen@p200300d7173dc9003dcd14e8106c2751.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[09:29:40] *** Joins: oxum (~oxum@106.203.217.191)
[09:31:40] *** Quits: oxum (~oxum@106.203.217.191) (Remote host closed the connection)
[09:35:51] *** Joins: gggp_ (~gggp@123.113.187.192)
[09:39:02] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[09:40:58] *** Joins: independent56 (~independe@2.25.26.77)
[09:43:40] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Remote host closed the connection)
[09:44:02] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[09:49:16] *** Joins: oxum (~oxum@106.203.217.191)
[09:54:09] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 255 seconds)
[09:54:09] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 255 seconds)
[09:59:06] *** Quits: eggsampler_ (~ur@s.id-rsa.pub) (Remote host closed the connection)
[09:59:18] *** Joins: eggsampler (~ur@s.id-rsa.pub)
[10:01:35] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[10:03:43] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:06:25] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[10:07:52] *** Joins: gggp__ (~gggp@123.113.187.192)
[10:08:51] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[10:10:56] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[10:17:00] *** Joins: frost (~frost@59.71.241.179)
[10:18:38] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[10:32:28] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[10:32:40] *** Joins: thing (~thing@user/thing)
[10:33:30] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[10:41:29] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[10:43:02] *** Joins: hikhvar79607 (~thelounge@dynamic-046-114-000-044.46.114.pool.telefonica.de)
[10:44:17] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:45:59] *** Joins: shka (~herr@109.231.62.239)
[10:52:44] *** Quits: LtHummus_ (~lthummus@97-126-113-251.tukw.qwest.net) (Read error: Connection reset by peer)
[10:53:14] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[10:56:58] *** Quits: zwr (~zwr@2804:14c:5bc5:8b2c:d486:b000:9fc0:b091) (Ping timeout: 240 seconds)
[10:57:36] *** Joins: zwr (~zwr@2804:14c:5bc5:8b2c:d486:b000:9fc0:b091)
[11:11:30] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 240 seconds)
[11:15:27] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[11:16:57] *** Joins: darkapex (~darkapex@user/darkapex)
[11:18:19] *** Joins: arinov (~arinov@213.194.126.155)
[11:22:57] *** Joins: sagax (~sagax@213.138.71.146)
[11:23:35] *** Joins: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr)
[11:25:38] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:35:35] *** Joins: gggp__ (~gggp@60.10.194.43)
[11:45:54] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 252 seconds)
[11:46:57] *** Joins: frost (~frost@59.71.241.179)
[11:47:39] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Read error: Connection reset by peer)
[11:47:50] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:53:27] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[11:53:46] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[11:53:51] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 255 seconds)
[12:02:11] *** Joins: fbandov (~fbandov@78-2-67-55.adsl.net.t-com.hr)
[12:04:52] *** Joins: jespada (~jespada@90.254.247.46)
[12:06:04] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[12:06:33] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[12:07:09] *** Joins: src (~src@user/src)
[12:10:07] *** Joins: mickey (~user@user/mickey)
[12:10:52] *** Quits: frdy (~mcfrdy@user/mcfrdy) (Ping timeout: 246 seconds)
[12:12:07] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[12:12:51] *** Joins: mickey (~user@user/mickey)
[12:12:54] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[12:14:19] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:3408:ac54:94e7:7659)
[12:25:59] *** Joins: Atque (~Atque@user/atque)
[12:30:42] *** Quits: kiril (~kiril@85.91.153.163) (Ping timeout: 240 seconds)
[12:30:49] *** Joins: kiril (~kiril@85.91.153.163)
[12:31:46] *** Quits: aadz (~Alexander@92.255.127.5) (Remote host closed the connection)
[12:37:44] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[12:37:50] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[12:38:51] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[12:39:43] *** Jigsy` is now known as Jigsy
[12:43:29] *** gggp__ is now known as gggp
[12:44:02] *** Joins: ville_ (~ville@87-92-4-171.bb.dnainternet.fi)
[12:44:16] *** Quits: ville_ (~ville@87-92-4-171.bb.dnainternet.fi) (Client Quit)
[12:50:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:51:06] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[12:56:02] *** Joins: arinov (~arinov@213.194.126.155)
[12:57:45] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 255 seconds)
[13:04:35] *** Joins: normen (~normen@p200300d7173dc9003dcd14e8106c2751.dip0.t-ipconnect.de)
[13:13:04] *** Joins: gggp_ (~gggp@123.113.187.192)
[13:16:06] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[13:16:12] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[13:16:25] *** Joins: gggp__ (~gggp@123.113.187.192)
[13:19:24] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[13:21:23] *** Joins: gggp_ (~gggp@60.10.23.160)
[13:24:32] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[13:37:54] *** Joins: dr0n (~nabromov@92.40.255.112.threembb.co.uk)
[13:40:08] *** Joins: lonelycode (~marti@202.150.118.61)
[13:43:30] *** Joins: goldfish (~goldfish@user/goldfish)
[13:50:44] *** Quits: sayo (~sayo@user/sayo) (Ping timeout: 268 seconds)
[13:55:03] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[13:55:40] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:01:51] *** Joins: CoolerY (~CoolerX@user/coolerx)
[14:02:25] <mort> Hey, I'm trying to link a Go binary against a huge static library. The linker ends up complaining about "HEDR too small"
[14:02:40] <mort> seems like it allocates too little space for the ELF header?
[14:03:00] <mort> HEADR*
[14:05:24] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[14:10:09] *** Quits: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se) (Ping timeout: 276 seconds)
[14:14:15] *** Joins: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de)
[14:16:14] *** Quits: hikhvar79607 (~thelounge@dynamic-046-114-000-044.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[14:19:21] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[14:22:55] *** Joins: gggp__ (~gggp@123.113.187.192)
[14:26:06] *** Quits: gggp_ (~gggp@60.10.23.160) (Ping timeout: 256 seconds)
[14:44:51] <dostoyevsky2> Just a follow up question: I guess it's possible to replace the libc for go, so they don't have to worry about ~30 different versions for each platform go supports when one just builds it on linux.. but they still need to be able to call the kernel for the 30platforms, so they have to implement all the calling conventions, and e.g. on linux there are also things like VDSO for gettimeofday etc...
[14:44:57] <dostoyevsky2> that must be a lot of work to maintain
[14:49:56] *** gggp__ is now known as gggp
[14:51:54] *** Joins: moonface (~manjaro-i@45.67.96.197)
[14:52:39] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:57:09] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a999:ec99:9fca:a94d) (Quit: WeeChat 3.2)
[14:57:49] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 246 seconds)
[15:04:17] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:2011:5d6c:99d4:7d8b)
[15:07:28] *** Quits: normen (~normen@p200300d7173dc9003dcd14e8106c2751.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:15:42] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:2011:5d6c:99d4:7d8b) (Quit: WeeChat 3.2)
[15:17:17] *** Joins: Atque (~Atque@user/atque)
[15:19:29] *** Joins: gggp_ (~gggp@111.63.14.119)
[15:20:36] *** Joins: gggp__ (~gggp@111.63.14.119)
[15:22:36] *** Quits: gggp (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[15:24:11] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[15:25:49] *** Joins: nabromov (~nabromov@94.11.23.235)
[15:28:41] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 255 seconds)
[15:29:24] *** Quits: dr0n (~nabromov@92.40.255.112.threembb.co.uk) (Ping timeout: 255 seconds)
[15:29:43] *** Parts: moonface (~manjaro-i@45.67.96.197) (leaving)
[15:30:17] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[15:30:20] *** Parts: nabromov (~nabromov@94.11.23.235) ()
[15:30:49] *** Joins: dr0n (~nabromov@94.11.23.235)
[15:32:05] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:33:13] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:35:21] <sztanpet> not really as long as the kernel has a BC guarantee
[15:35:42] <sztanpet> which the osx kernels dont have and thus the reason for going through libc
[15:38:34] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 240 seconds)
[15:44:15] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 255 seconds)
[15:45:23] *** Joins: gggp_ (~gggp@123.113.187.192)
[15:45:25] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 246 seconds)
[15:45:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:46:40] *** Quits: src (~src@user/src) (Quit: leaving)
[15:47:03] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[15:48:25] *** Joins: andlabs (~andlabs@71.190.119.164)
[15:48:29] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[15:48:57] *** Joins: noarb (~noarb@user/noarb)
[16:02:54] <mickey> what would be a good way to trim floating points of a number based on the number itself? for example if i want 3 digits after the dot or after the last zero, 1.234567 would become 1.234, but 0.0001234 would be 0.000123
[16:03:25] <mickey> simply trimming would basically make 0.0001234 into 0.000 which i want to avoid
[16:07:07] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:f965:e444:a004:b205)
[16:11:23] <sztanpet> if statements with comparisons in your own formatting function i would guess
[16:12:00] *** Quits: fbandov (~fbandov@78-2-67-55.adsl.net.t-com.hr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:12:45] <sztanpet> do the obvious first, improve as needed
[16:13:36] <fizzie> The %g formatting directive does pretty much exactly that, though it has the drawback of reverting to scientific notation sometimes: https://play.golang.org/p/aVuAvTj5smS
[16:14:59] <dostoyevsky2> mickey: Not sure if that's easily possible in go, but you could  extract the mantissa of a floating point number, and trim that one...
[16:15:04] <fizzie> Except you can get either (1.235, 0.0001234) or (1.23, 0.000123) -- it wouldn't be logical to have 1.235 and 0.000123 because they have a different amount of significant digits.
[16:15:07] <nevivurn> Might be worth looking into how %g is implemented and make your custom thing
[16:15:45] *** Quits: nekron (~nekron@noordsee.de) (Quit: ZNC 1.8.2 - https://znc.in)
[16:16:40] *** Joins: nekron (~nekron@noordsee.de)
[16:19:13] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100a)
[16:19:35] <mickey> fizzie i'm playing with big.Ints and e14 is not something i'd like to see. as to the logic, i basically want to trim more on larger numbers.
[16:20:39] *** Joins: cullsure (~cullsure@pool-96-237-166-123.bstnma.fios.verizon.net)
[16:23:58] *** Joins: fbandov (~fbandov@78-2-67-55.adsl.net.t-com.hr)
[16:26:06] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Quit: Leaving)
[16:27:29] *** Quits: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de) (Ping timeout: 250 seconds)
[16:40:08] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:43:23] *** Joins: gggp__ (~gggp@123.113.178.180)
[16:46:34] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[16:47:31] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[16:48:49] *** Joins: xsteadfastx (~marv@94.31.101.21)
[16:49:24] *** Joins: yoonkn (~user@175.197.208.79)
[16:52:32] *** Joins: arinov (~arinov@213.194.126.155)
[16:57:11] *** Joins: ricci (~ricci@31.187.110.4)
[16:59:40] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[17:00:13] <mickey> on another subject, when i have x := make(map[string]interface{}) and x["hello"] = NewWorld(), why would x["hello"].MethodOfWorld() tell me type interface{} has no field or method MethodOfWorld?
[17:00:44] *** Joins: Torr (~Torr@user/torr)
[17:00:50] <j416> mickey: because it doesn't
[17:01:08] <j416> mickey: interface{} does not declare MethodOfWorld
[17:01:43] <j416> mickey: if you had map[string]interface{ MethodOfWorld() } instead, then it would
[17:02:11] <mickey> :|
[17:02:31] *** Joins: darkapex_ (~darkapex@user/darkapex)
[17:02:51] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[17:03:27] <mickey> can i work around this to avoid rewritting the whole classes in there?
[17:03:33] <dostoyevsky2> x["hello"].(World).MethodOfWorld()
[17:03:56] <j416> mickey: what do you mean by classes?
[17:04:08] <mickey> types, structs, sorry for the terminology.
[17:04:10] <nevivurn> make the type of the map map[string]yourinterfacethathasMethodOfWorld
[17:04:34] <lazyreader> Remember, “the empty interface says nothing”. If you’re using interface{}, you’re explicitly saying to the type system that it can’t make any assumptions about what it represents.
[17:04:36] <j416> mickey: if all your types implement a method called MethodOfWorld, make an interface that has that
[17:04:42] *** Joins: darkapex (~darkapex@user/darkapex)
[17:05:12] <lazyreader> And you have to either type-assert or change your type to define an actual interface with the methods you expect.
[17:05:14] <j416> mickey: that's whole point of interfaces
[17:05:25] <mickey> yeah this makes sense. i'll have to rethink how i structure things.
[17:06:05] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:07:00] <j416> the other alternative would be to type switch and do different things depending on what type is in your empty interface, but defining a proper interface is often the way to go
[17:07:03] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 255 seconds)
[17:08:25] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[17:09:17] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[17:12:25] *** Joins: CoolerY (~CoolerX@user/coolerx)
[17:16:13] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[17:19:24] *** Joins: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de)
[17:20:04] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[17:20:16] *** Quits: ricci (~ricci@31.187.110.4) (Quit: ricci)
[17:22:55] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:23:11] *** Quits: erin (~meow@52.8.199.178) (Remote host closed the connection)
[17:26:32] *** Joins: andlabs (~andlabs@71.190.119.164)
[17:27:54] *** Joins: arinov (~arinov@213.194.126.155)
[17:29:00] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[17:37:21] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[17:44:26] *** Quits: CoolerY (~CoolerX@user/coolerx) (Quit: Leaving)
[17:44:27] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[17:44:47] *** Quits: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de) (Ping timeout: 268 seconds)
[17:44:57] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:47:29] *** Joins: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de)
[17:52:57] *** Quits: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de) (Ping timeout: 255 seconds)
[17:52:57] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[17:54:55] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[17:58:12] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:02:51] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Ping timeout: 276 seconds)
[18:05:05] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[18:06:02] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:f965:e444:a004:b205) (Ping timeout: 268 seconds)
[18:07:39] *** gggp__ is now known as gggp
[18:13:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[18:14:20] *** Joins: fef (~thedawn@user/thedawn)
[18:14:55] *** Quits: fbandov (~fbandov@78-2-67-55.adsl.net.t-com.hr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:19:55] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:21:31] *** Joins: andlabs (~andlabs@71.190.119.164)
[18:24:24] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[18:35:41] *** LSD is now known as acidsys
[18:36:55] *** Joins: gggp_ (~gggp@111.63.14.119)
[18:40:04] *** Quits: gggp (~gggp@123.113.178.180) (Ping timeout: 246 seconds)
[18:40:28] *** Joins: Teckla (~Teckla@user/teckla)
[18:43:04] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:43:11] *** Joins: oxum (~oxum@106.203.217.191)
[18:43:24] <mikoto-chan> hey, I have a bunch of "CREATE TRIGGER" statements in my sql file that I want to port over to my Golang program but so far I have only seen examples using SELECT and INSERT.
[18:43:43] <mikoto-chan> would just executing the satement work fine?
[18:45:21] *** Quits: oxum (~oxum@106.203.217.191) (Remote host closed the connection)
[18:45:54] *** Joins: oxum (~oxum@106.203.217.191)
[18:46:40] <sztanpet> test it and see
[18:46:51] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.1)
[18:47:20] <sztanpet> there is no reason it wouldnt
[18:48:19] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[18:48:45] *** Joins: ninjin (~ninjin@user/ninjin)
[18:49:20] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[18:50:34] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 258 seconds)
[18:51:14] *** Joins: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de)
[18:51:48] *** Joins: tlgs (~tlgs@188-141-56-55.dynamic.upc.ie)
[18:53:52] *** Joins: gggp__ (~gggp@123.113.187.192)
[18:54:49] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[18:56:14] *** Quits: Torr (~Torr@user/torr) (Quit: Lost terminal)
[18:56:42] *** Joins: goldfish (~goldfish@user/goldfish)
[18:56:56] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 268 seconds)
[18:57:21] *** Joins: arinov (~arinov@213.194.126.155)
[18:58:21] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[18:59:02] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[18:59:05] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Client Quit)
[18:59:57] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:11:36] *** Joins: arcatech (~arcatech@user/arcatech)
[19:15:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:16:17] *** Joins: tachoknight (~tachoknig@45.20.162.1)
[19:16:26] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:16:39] <davidkrauser> I have a kind of abstract question - when should I use nested packages? E.g. I have package foo in foo/ and package bar in foo/bar/. It seems like there's no real hierarchy (e.g. I still have to export symbols for the other to see, etc.), so I'm wondering what the benefits are
[19:17:22] *** Joins: independent56 (~independe@2.25.26.77)
[19:17:26] <eyJhb> readability, reuseability, seperation of logic?
[19:25:04] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 258 seconds)
[19:25:27] *** gggp__ is now known as gggp
[19:26:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:28:13] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[19:29:45] *** Joins: oxum (~oxum@106.203.217.191)
[19:33:25] *** Joins: gggp_ (~gggp@111.63.14.119)
[19:34:47] *** Joins: arinov_ (~arinov@31.142.54.42)
[19:35:10] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 268 seconds)
[19:35:23] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[19:35:27] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[19:36:42] *** Quits: gggp (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[19:40:04] <tristero> davidkrauser: main benefit is for managing releases, imo. they'll be part of the same Go module, have the same semver, etc. Makes sense if bar is only ever going to be used by foo
[19:40:20] <davidkrauser> eyJhb: but why make it a nested package instead of another top level package?
[19:41:04] <ikke> Why do you nest folders?
[19:42:10] <davidkrauser> tristero: hmm, that makes sense. Does that benefit apply to a go application (that isn't pulled in as a library by other projects)?
[19:42:23] *** Joins: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net)
[19:42:30] <davidkrauser> ikke: that's a fair point
[19:43:42] <davidkrauser> so if I have a/b/c and a/d/e, and b uses e, is that a bad thing?
[19:45:43] <siXy> not automatically bad, but it's probably a signal that you might have gone overboard with nesting.
[19:46:15] <Tv_> davidkrauser: there is a hierarchy when processing internal or vendor folders
[19:46:49] <Tv_> but apart from that, rule #1: make sense to humans
[19:47:26] *** Joins: gggp__ (~gggp@60.10.23.160)
[19:51:12] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 268 seconds)
[19:52:16] *** Joins: gggp_ (~gggp@123.118.15.132)
[19:52:30] <davidkrauser> siXy: yeah, that's what I'm afraid of, but I don't have a good enough handle on it to understand what's appropriate
[19:54:21] <siXy> davidkrauser: I think Tv_ put it best: your goal is to make it obvious to people looking at your code without much context what's going on.
[19:54:22] <davidkrauser> Tv_: what do you mean by 'hierarchy when processing'? I think it's just a pre-order traversal of the folders, right? First Foo, then Foo/Bar, etc.
[19:54:36] <Tv_> davidkrauser: i mean foo cannot import bar/internal/thud
[19:55:03] <davidkrauser> Tv_: it can't?
[19:55:15] *** Quits: gggp__ (~gggp@60.10.23.160) (Ping timeout: 252 seconds)
[19:55:20] <Tv_> the segment internal has a special meaning
[19:55:39] <davidkrauser> oh, right. I was thinking A can't import B/C/D
[19:55:45] <davidkrauser> in an abstract sense
[19:55:57] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 245 seconds)
[19:56:46] <davidkrauser> thank you all for setting me straight on this
[19:58:01] <davidkrauser> so to put in a more concrete example, say I have a sort package and it contains a Sorter interface (sorts slices of ints or something). And I want to have a BubbleSorter, InsertionSorter, etc. that implement that interface, should they live in sort/bubble, sort/insertion, etc.?
[19:58:35] <davidkrauser> what's weird about that case is insertion would depend on sort (since that's where Sorter is defined)
[19:58:58] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 240 seconds)
[19:59:05] <Tv_> silly example but sure
[19:59:12] <siXy> yes that's very reasonable. That's broadly how the crypto stuff is organised
[19:59:12] <Tv_> nothing weird about importing the parent
[20:00:55] <davidkrauser> now, say I have a mapping function that will choose a sorter based on some criteria. E.g. maybe I want a sort.Sort() method, and it randomly picks bubble/insertion/etc.
[20:01:01] <davidkrauser> that would give me a circular dependency
[20:01:50] <Tv_> davidkrauser: how about a less hypothetical example?
[20:02:47] <davidkrauser> Tv_: this is pretty much exactly what the current project I'm working on does (except s/Sorter/ComplicatedDataProcceser/), lol
[20:03:17] <Tv_> davidkrauser: it's hard to give any useful advice on vaguely described problems
[20:03:17] <davidkrauser> and the way we've solved that circular dependency is to have something like sort/interfaces (contains Sorter), sort/bubble, etc.
[20:03:41] <davidkrauser> Tv_: that's fair
[20:04:01] *** Parts: mkopinsky (~mkopinsky@pool-72-78-207-154.phlapa.fios.verizon.net) ()
[20:04:52] *** Joins: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[20:05:10] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[20:05:12] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:08:29] *** Joins: dr0n (~nabromov@94.11.23.235)
[20:19:49] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100a) (Read error: Connection reset by peer)
[20:20:24] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100a)
[20:21:00] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100a) (Client Quit)
[20:22:28] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[20:24:33] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[20:28:20] *** Joins: hposca (~hposca@node-1w7jr9phoke2u784enbks8vht.ipv6.telus.net)
[20:28:55] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[20:34:47] *** Joins: arinov (~arinov@213.194.126.155)
[20:38:18] *** Quits: arinov_ (~arinov@31.142.54.42) (Ping timeout: 252 seconds)
[20:41:21] *** Joins: lluad (~steve@2a02:8084:2861:3f80:8c4a:f6ac:ec66:ea84)
[20:43:17] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[20:43:23] *** Joins: Torr (~Torr@user/torr)
[20:43:30] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[20:47:46] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Client Quit)
[20:48:02] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[20:48:18] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 2.8)
[20:48:34] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[20:54:58] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-27.dsl.bell.ca) (Ping timeout: 240 seconds)
[20:57:43] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:09] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[21:02:23] *** Quits: freakazoid333 (~freakazoi@72.168.176.61) (Read error: Connection reset by peer)
[21:05:33] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Ping timeout: 255 seconds)
[21:08:55] *** Joins: src (~src@user/src)
[21:09:58] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[21:10:23] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[21:16:03] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[21:16:32] *** Joins: novns (~novns@user/novns)
[21:21:37] *** Joins: oxum (~oxum@106.203.217.191)
[21:26:20] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 252 seconds)
[21:28:50] *** Joins: sizeof_void34 (~Thunderbi@109.252.75.112)
[21:40:30] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:40:31] *** Joins: independent56 (~independe@2.25.26.77)
[21:40:58] *** Joins: fef (~thedawn@user/thedawn)
[21:48:06] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[21:49:31] *** Quits: pztrn (~pztrn@user/pztrn) (Quit: Segmentation fault)
[21:50:18] *** Joins: pztrn (~pztrn@user/pztrn)
[21:52:15] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 2.3)
[21:55:09] *** Quits: ilpanda (ilpanda@user/ilpanda) (Ping timeout: 252 seconds)
[21:56:52] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[21:57:22] <foobaz> Tv_: i hooked up gopls on your suggestion and it's very nice, thank you
[21:58:15] *** Joins: ilpanda (~ilpanda@2607:5300:60:21b::1)
[21:59:26] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 256 seconds)
[22:01:39] *** Joins: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es)
[22:06:53] *** Joins: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc)
[22:07:16] *** Quits: gggp_ (~gggp@123.118.15.132) (Ping timeout: 246 seconds)
[22:07:46] *** Quits: ilpanda (~ilpanda@2607:5300:60:21b::1) (Ping timeout: 268 seconds)
[22:08:34] *** Quits: gsthnz (~gsthnz@user/gsthnz) (Ping timeout: 240 seconds)
[22:09:03] *** Joins: gsthnz (~gsthnz@user/gsthnz)
[22:10:01] *** Joins: ilpanda (ilpanda@shell.xshellz.com)
[22:10:48] *** Quits: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es) (Quit: Quit)
[22:10:52] *** Joins: notepad (~notepad@129.159.46.243)
[22:12:00] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[22:12:13] *** Quits: notepad (~notepad@129.159.46.243) (Client Quit)
[22:12:15] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[22:13:51] *** Joins: notepad (~notepad@129.159.46.243)
[22:26:42] *** Quits: lluad (~steve@2a02:8084:2861:3f80:8c4a:f6ac:ec66:ea84) (Ping timeout: 240 seconds)
[22:28:18] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:29:15] *** Joins: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es)
[22:31:26] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[22:35:17] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:41:46] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[22:42:02] *** Joins: xsteadfastx (~marv@94.31.101.21)
[22:43:08] *** Joins: darkapex_ (~darkapex@user/darkapex)
[22:43:36] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[22:43:56] *** Joins: darkapex (~darkapex@user/darkapex)
[22:47:53] *** Joins: porn (~hentai@user/hentai)
[22:47:53] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 255 seconds)
[22:48:52] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 245 seconds)
[22:49:28] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[22:50:51] *** Joins: hentai (~hentai@user/hentai)
[22:51:31] *** Quits: porn (~hentai@user/hentai) (Read error: Connection reset by peer)
[22:52:10] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[22:53:56] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:56:12] *** Joins: c10l (~c10l@89.34.167.207)
[22:56:42] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 255 seconds)
[22:57:56] *** Joins: xsteadfastx (~marv@94.31.101.21)
[22:58:46] *** Quits: xsteadfastx (~marv@94.31.101.21) (Client Quit)
[22:59:02] *** Joins: xsteadfastx (~marv@94.31.101.21)
[23:03:33] *** Joins: oxum (~oxum@106.203.217.191)
[23:05:20] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 252 seconds)
[23:07:34] <explodes> git push --delete origin fix/broken_auth
[23:07:40] <explodes> oops
[23:08:16] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 252 seconds)
[23:09:30] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 240 seconds)
[23:09:37] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[23:11:19] *** Joins: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de)
[23:11:23] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:16:38] <be3uykpy> explodes, no harm done :p
[23:16:42] <be3uykpy> could've been worse
[23:17:17] <Tv_> hunter2
[23:17:48] <ikke> ******
[23:29:38] <eric_hill> I put on my robe and wizard hat.
[23:32:32] <quippy> I cast level 27 eroticism
[23:33:48] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 265 seconds)
[23:35:17] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[23:40:57] *** Joins: independent56 (~independe@2.25.26.77)
[23:42:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:42:52] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[23:43:27] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:43:30] *** Joins: dalan67 (~dalan@61-68-95-57.static.tpgi.com.au)
[23:44:07] *** Quits: ilpanda (ilpanda@shell.xshellz.com) (Changing host)
[23:44:07] *** Joins: ilpanda (ilpanda@user/ilpanda)
[23:44:51] *** Quits: dalan6 (~dalan@27-32-31-114.tpgi.com.au) (Ping timeout: 255 seconds)
[23:44:51] *** dalan67 is now known as dalan6
[23:46:37] *** Joins: Techcable (~Techcable@168.235.93.147)
[23:48:32] <Tv_> so i just wrote a happy eyeballs-style helper that takes a list of (delay, func) and makes increasingly many concurrent calls to various backends until one of them succeeds, while always keeping at least 1 request in flight if earlier ones fail, and respecting limits on max concurrent requests. 100 lines. enjoying go.
[23:49:17] <Tv_> next up, ad hoc load/data spreading for my object store thingie
[23:49:21] <ikke> Is this available somewhere?
[23:49:35] <Tv_> it's an internal package for now but i can make it a separate repo in a bit
[23:50:17] <Tv_> https://github.com/bazil/plop/blob/master/internal/multiflight/example_test.go  /  https://github.com/bazil/plop/blob/master/internal/multiflight/multiflight.go
[23:51:54] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[23:52:03] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[23:52:19] *** Quits: monke (~monke@user/monke) (Ping timeout: 268 seconds)
[23:52:21] *** Joins: independent_ (~independe@2.25.26.77)
[23:52:48] <ikke> thanks
[23:53:52] *** Quits: independent_ (~independe@2.25.26.77) (Remote host closed the connection)
[23:54:10] *** Joins: independent_ (~independe@2.25.26.77)
[23:54:12] *** Quits: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr) (Remote host closed the connection)
[23:54:15] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[23:54:21] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[23:54:24] *** Quits: gst (~gst@gateway/tor-sasl/gst) (Remote host closed the connection)
[23:54:31] *** Joins: ninjin (~ninjin@user/ninjin)
[23:54:36] *** Joins: mickey (~user@user/mickey)
[23:54:37] *** Joins: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr)
[23:54:45] *** Joins: gst (~gst@gateway/tor-sasl/gst)
[23:55:00] *** Quits: independent56 (~independe@2.25.26.77) (Read error: Connection reset by peer)
[23:55:02] <Tv_> and yes, of course i just found a bug in it
[23:55:35] <ikke> :)
[23:55:58] <Tv_> resetting timers. it had to be resetting timers.
[23:57:21] <Tv_> hnngggh https://github.com/golang/go/issues/27169
[23:58:38] *** Quits: independent_ (~independe@2.25.26.77) (Remote host closed the connection)
[23:58:46] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[23:58:58] *** Joins: independent56 (~independe@2.25.26.77)
[23:59:52] *** Quits: independent56 (~independe@2.25.26.77) (Remote host closed the connection)
