[00:02:14] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: Config update)
[00:03:01] *** Quits: terminalpusher (~terminalp@2a01:586:911a:1:e659:76ec:75f2:c6d9) (Remote host closed the connection)
[00:03:13] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:04:38] *** Quits: rgrinberg (~textual@187.223.75.25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:05:44] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[00:07:46] *** Joins: nvrhome (~Bop@user/nvrhome)
[00:07:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[00:08:34] <dan_pena> https://pastebin.com/mLfibQu5 is this a good method ?
[00:08:52] <dan_pena> a leaf have simply the a char parameter than another node
[00:08:56] <omegatron> why pastebin?
[00:09:11] <dan_pena> omegatron: because I'm used to
[00:10:18] <dan_pena> omegatron: http://ix.io/3JYt
[00:10:22] <dan_pena> if you prefer
[00:11:19] <dan_pena> So is it good or should I just use only one struct and fill or not the char if it's a leaf ?
[00:15:04] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:15:11] <smlavine> Should it be the job of a library to check that passed arguments are not NULL, or should it be left to the caller to check it themselves?
[00:15:12] <omegatron> https://bpa.st/ICUA  should be sufficient
[00:15:55] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 256 seconds)
[00:17:39] <omegatron> my variant does not require the compiler to do any struct padding  (assuming 'normal' conditions, ilke 'unsigned short' = 16 bits and 'unsigned int' = 32 bits and machine native size = 32/64 bits)
[00:18:02] <dan_pena> omegatron: yes but you don't have the char c field
[00:18:28] <omegatron> ah .. just a moment ..
[00:18:41] <dan_pena> omegatron: btw it's cool how you align your element in the code
[00:18:48] <dan_pena> you only use tab to do that ?
[00:19:41] *** Quits: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[00:19:51] <omegatron> my tabs are always converted to space
[00:20:05] *** Joins: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr)
[00:20:21] <omegatron> https://bpa.st/HRPA
[00:20:45] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[00:20:46] <dan_pena> omegatron: yes but how do you align things like that ?
[00:20:52] <omegatron> tabs make writing source code ... complicated
[00:21:16] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[00:21:29] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:21:47] <dan_pena> omegatron: you use camelcase in your struct attribute ?
[00:21:52] <omegatron> ... I know that usually  unsigned char is  8 bits, unsigned short is 16 bits ...  therefore, I try to fill up structs in sizes of 32 or 64-bit ..
[00:22:17] <omegatron> if you use camelcase or whatever is up to you .. you can use your own style
[00:23:12] <omegatron> you might consider this example:  https://bpa.st/OA4A
[00:24:14] <omegatron> I introduced three additional properties .. one is 'reserved' for future use and two are padding (but all three of them could be used internally by your code)
[00:26:02] <omegatron> it's a common technique ..  now, to prevent any client code to use those internal fields, you would resort to publish only so called 'opaque' datatypes, so the client code doesn't know (and doesn't need to know) any internally used fields
[00:26:02] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[00:26:13] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[00:27:28] *** Joins: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[00:27:38] <trenka> smlavine: you decide
[00:27:51] <ioxzev1z> omegatron, DoYourEyesNotHurtReadingLikeThis?
[00:28:05] <omegatron> for example, openssl 'recently' (I guess some years ago) switched to using opaque datatypes, which had the effect that many libraries which used it, had to be adjusted - but this change was for the better, because those libraries were often messing around with internal fields ...
[00:28:34] <omegatron> I didn't say with a single word, I use CamelCase ...
[00:28:34] *** Joins: mixfix41 (~homefame@user/mixfix41)
[00:28:42] <omegatron> it was just for the example
[00:29:05] <ioxzev1z> ButYTho?
[00:30:06] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:54] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:02] *** Quits: u0_a3911 (~u0_a391@2600:380:a469:f561:b41b:9e23:5684:1845) (Ping timeout: 240 seconds)
[00:32:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b86f:1b4d:c83a:7071)
[00:32:56] <pragma-> But YouTube whore
[00:33:01] <dan_pena> https://pastebin.com/TK6qBM4p is there a convention on space between type and name? It's from linux github
[00:33:19] <omegatron> dan_pena: anyway, as you can see, you have some options - you don't need to take any padding into account, as the compiler will do it anyway for you, but you can take control and find an actual use for any padding (bytes) which would otherwise occur ; sometimes I even see something like this :  https://bpa.st/ZEQQ
[00:33:26] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[00:33:50] <ioxzev1z> dan_pena, C really doesn't care about whitespace so much
[00:33:55] <omegatron> no .. but it must be at least one
[00:34:05] <dan_pena> ioxzev1z: It's not for me it's just to follow rules
[00:34:15] <ioxzev1z> Usually just figure out the longest <type> <name>, keep a space in the middle and pad everything to that
[00:34:20] <omegatron> you should just write your code in a form where it's readable for the human eye
[00:34:32] <ioxzev1z> e.g. float f; int  i; obv on different lines
[00:35:21] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:36:13] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:37:20] <omegatron> https://bpa.st/6QJQ  ...  I would align it always
[00:38:30] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:38:56] *** Joins: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com)
[00:41:59] <pragma-> omegatron's co-workers wonder why it took him 20 minutes to write out that struct
[00:42:36] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:42:45] <pragma-> omegatron: if Field1 through Field8 have varying identifier lengths, do you align the trailing semicolons?
[00:42:49] * pragma- giggles madly.
[00:42:55] *** Joins: ztx (~ztx@user/ztx)
[00:43:17] <omegatron> actually I do
[00:43:36] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 268 seconds)
[00:44:11] <omegatron> but my text editor has some text macros, which do that 'formatting' work for me
[00:44:52] <omegatron> which are actually shell scripts I use for the past 25 years now
[00:45:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[00:47:15] <omegatron> same goes for a public API in a header file ..
[00:48:19] *** Joins: jackk (~jackk@93-44-188-36.ip98.fastwebnet.it)
[00:49:41] <omegatron> that's the reason why I work with three keyboards ... those formatting functions reside on my upper keyboard, while my left keyboard is for window size manipulation and other stuff
[00:51:18] <omegatron> would be great if there were keyboards with around 80 F-keys   -_-
[00:51:37] *** Quits: mahmutov (~mahmutov@5.176.27.245) (Ping timeout: 268 seconds)
[00:56:04] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:56:49] *** Quits: rito_ (~rito_gh@45.112.243.151) (Quit: Leaving)
[00:57:14] <dan_pena> crazy, with vim I replaced tab with spaces and the result is perfect. But when I open the file in VScode, things aren't align
[00:58:59] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:59:23] <omegatron> are you sure, there are really no tabs anymore in the file? if yes, VScode might have it's own 'smart'-handling of indentation ('smart' often means 'totally useless')
[01:00:58] <omegatron> or 'works for the author of this functionality, but not anyone else'
[01:05:49] <omegatron> pragma: my co-workers can wonder as they like .. since it's my company  =D
[01:06:22] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:07:22] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[01:08:27] *** Parts: critr (~critr@user/critr) (.)
[01:13:26] *** Quits: Akuli (~Akuli@87-94-111-213.bb.dnainternet.fi) (Quit: Akuli)
[01:19:45] <cousteau> omegatron: my biggest issue with trying to align everything is when you add or modify a line that is slightly wider and now you have to modify all 8 lines to match
[01:20:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[01:20:52] <cousteau> git won't like it...
[01:20:53] *** Quits: mixfix41 (~homefame@user/mixfix41) (Read error: Connection reset by peer)
[01:21:14] *** Quits: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[01:21:49] <omegatron> it requires some time to get used to this practice and to avoid often re-formatting ..  and, well, I have my text macros in my text editor (BBEdit)
[01:22:06] <omegatron> "git won't like it"? what do you mean?
[01:22:42] <cousteau> otoh having things misaligned is annoying, so I just go with the estimated max width and if I need to exceed it I just make an exception
[01:23:24] <cousteau> omegatron: well if you modify a bunch of lines, even if only changing the spacing, git just considers those "changed lines" so if someone else also modified those lines for something useful (i.e., not just changing spacing) you'll get a merge conflict
[01:23:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:24:13] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Read error: Connection reset by peer)
[01:24:14] *** Joins: mixfix41 (~homefame@user/mixfix41)
[01:24:36] *** Joins: bdax_ (~tom@05432be4.skybroadband.com)
[01:24:48] <omegatron> in that case it's good, that my employees all follow my coding style guidelines, isn't it?
[01:24:53] *** Quits: bdax_ (~tom@05432be4.skybroadband.com) (Remote host closed the connection)
[01:24:54] <trenka> well, to pollute the diff is bad for review as well
[01:25:04] <cousteau> and that too
[01:25:07] <omegatron> (so it's never mis-aligned from the beginning)
[01:25:17] *** Joins: bdax_ (~tom@05432be4.skybroadband.com)
[01:25:49] <cousteau> omegatron: my point is, if the text is aligned, and then you need a line to be longer, then you have to change all the lines
[01:26:34] <omegatron> you have an example?
[01:26:39] <cousteau> so it's not about A changing the text to be aligned and B modifying the text; it's about the text being originally aligned, A changing the width, and B changing the text
[01:27:42] <cousteau> omegatron: "oh noes, Field5 has to be a const unsigned long long int"
[01:28:00] <omegatron> yeah, that case never happens
[01:28:08] <cousteau> now you have to modify all lines 3-10 with the new width
[01:28:15] <cousteau> well, it never happens in this example
[01:28:23] <cousteau> but imagine that line 7 wasn't unsigned
[01:29:47] <omegatron> no, I mean, we 1) rarely use such long datatype identifiers and 2) we don't align at the minimum size, but, if in doubt, introduce 4 or 8 spaces more between identifier and field name (in struct definitions for example)
[01:30:39] <omegatron> (besides we don't use git, but other vcs might suffer from the same problem, I don't know)
[01:33:47] *** Quits: magla (~gelignite@55d4b9f8.access.ecotel.net) (Quit: Stay safe!)
[01:34:24] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:35:20] <cousteau> https://bpa.st/TKIQ
[01:35:32] <cousteau> yeah, a few extra chars will typically do the trick... to some extent
[01:35:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:35:54] <cousteau> do you use a vcs at least?
[01:36:10] <cousteau> s/a few extra chars/a few extra spaces/
[01:36:23] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:38:11] * cousteau hopes "we don't use git" means "we use a similarly capable distributed SCM", and not "we just make daily backups" or "we use SVN"
[01:38:33] <fizzie> "We use a lot of tarballs named _final and _really_final and _live_version and so on."
[01:39:08] <cousteau> my thesis director mentioned that he once saw a folder with a file named "_final23"
[01:39:29] *** Joins: rgrinberg (~textual@2806:265:5401:9431:d03e:a2ca:3d77:ef5f)
[01:43:55] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[01:45:49] <omegatron> no, we have our own vcs
[01:46:20] *** Joins: nostar (~nostar@45.14.195.111)
[01:46:22] <omegatron> none of the usual could cope with the large amount of data, that is involved with some of our work
[01:46:33] <omegatron> (binary data)
[01:46:52] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[01:47:00] <omegatron> (well, often binary data, not always)
[01:50:21] <tdg> omegatron: what about helix?
[01:50:42] <omegatron> i don't know? what is it?
[01:50:59] <tdg> omegatron: it's a perforce product that can store giant amounts of data in 1 repository, binaries, code, etc
[01:51:11] <omegatron> great? .. and ?
[01:51:42] <cousteau> tdg: isn't that the Perforce crap?
[01:51:45] <tdg> omegatron: well, i'd imagine that before putting a bunch of resources into developing your own vcs, you folks looked at a product specifically designed for that which is heavily tested?
[01:51:48] <cousteau> ah yes
[01:51:55] <tdg> cousteau: i wouldn't call it crap, it beats git on almost all fronts
[01:51:55] <cousteau> well... yeah that's hardly distributed
[01:52:55] <cousteau> imagine not being able to create a branch on your local copy of the project because you don't have an internet connection
[01:52:58] <omegatron> why should I switch software? because switching systems is fun?
[01:53:13] <omegatron> our in-house product has been developed in the past 20 years and it works ... it has to process large amount of biological and astronomical data (for example TIFFs with 40 GB, or dna sequences and protein folding variants)
[01:54:35] *** Joins: masterbuilder (~user@user/masterbuilder)
[01:55:11] <tdg> imagine trying to clone a git repository that has tons of binary data. imagine making it really hard to enforce bisectable workflows. imagine having workarounds like rerere which breaks half the time anyway. it's easy to shit on things if you don't have specific usecases that require you to evaluate your tooling :)
[01:55:40] <tdg> omegatron: fair enough, if it's been in development for that long, that predates helix and is likely tested well enough to work for you
[01:55:56] <omegatron> thanks - I appreciate it
[01:56:03] <omegatron> my customers love it too
[01:56:17] *** Joins: jackkk (~jackiii@93-44-188-36.ip98.fastwebnet.it)
[01:56:31] *** Joins: useretailz (~useretail@31.41.69.140)
[01:57:09] <useretailz> char *str = "000000000 my wanted string"; // is there a standard function that can point to "my wanted string" skipping first 10 chars?
[01:57:14] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:5ced:88a3:f841:39fe) (Quit: Leaving)
[01:57:46] <tdg> useretailz: perhaps strstr?
[01:57:48] <omegatron> yep, and one for skipping 42 chars and 100 chars - but they are hidden
[01:57:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[01:58:14] <cousteau> useretailz: str+10
[01:58:17] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:58:17] <tdg> if by "skip 10" you literally mean adding 10, then just add 10
[01:59:41] <cousteau> ,cc char *str = "000000000 my wanted string"; char *str2 = str+10; puts(str2);
[01:59:44] <candide> cousteau: my wanted string
[02:00:03] <cousteau> alternatively, &str[10] instead of str+10 (same thing)
[02:00:09] <useretailz> can't believe it's THAT easy
[02:00:18] <useretailz> love it
[02:00:41] <cousteau> basically, str+10 is the pointer that points where str points, but 10 positions forward
[02:00:42] <omegatron> it's called 'pointer arithmetic'
[02:01:02] *** Joins: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[02:03:37] <cousteau> and &str[10] is a pointer that points to the 10th element of str (well, 11th if you consider [0] is the 1st)... so it's the same
[02:04:15] *** Quits: jackk (~jackk@93-44-188-36.ip98.fastwebnet.it) (Quit: Connection closed)
[02:06:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:06:39] <cousteau> this also applies to other pointer types, or to arrays (which function as pointers in several contexts): if you have int A[10]; int *p = A; int *q = A+3; then p points to A[0], q to A[3], and both p[4] and q[1] refer to A[4]
[02:06:48] *** Joins: constxd_ (~brad@142.134.38.68)
[02:06:59] <caze> &str[10] is the same as str + 10 is the same as &(10[str]
[02:07:01] <cousteau> in this case, A+3 means "get the pointer A moved forward by 3 positions"
[02:07:09] <caze> &(10[str])
[02:07:19] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[02:07:19] <caze> Not sure if the parens are actually required.
[02:07:21] <cousteau> &10[str] even
[02:07:40] <cousteau> I don't think they are... if they're not needed for the opposite, why would they?
[02:08:40] <cousteau> (NB: pointer+n means "go forward n ELEMENTS", not n bytes)
[02:08:50] <caze> Because of &
[02:09:13] <cousteau> what about &?
[02:09:27] <caze> ,paren &10[str]
[02:09:28] <candide> caze: &(10[str])
[02:09:35] <caze> Okay, nvm.
[02:09:53] <cousteau> &a[b] is &(a[b]), even if a is `10` and b is `banana`
[02:09:54] <nitrix> [] higher precedence than &.
[02:10:01] <nitrix> The parens aren't necessary.
[02:11:40] <cousteau> so if &a[b] doesn't require parens, neither does &b[a]
[02:11:50] <cousteau> not like being a number makes it any special
[02:11:59] <caze> I said nvm, geez.
[02:11:59] <retro> learning C is pointless
[02:12:09] <retro> ultimatley
[02:12:19] <retro> because learning computers is pointless
[02:12:25] <cousteau> yeah I wrote my example using only a and b, no need for c
[02:12:28] <retro> I should never have bothered
[02:12:36] <cousteau> retro: everything is pointless
[02:12:37] <retro> they will always win and f*** you over
[02:12:41] <cousteau> we're all gonna die some day
[02:12:46] <retro> and you lose data or some shit
[02:12:51] <nitrix> retro, Yeah, nothing of value has ever been written in C, nothing of value in C needs to be maintained, and nothing else will ever be written in C.
[02:12:57] <retro> if I was a noob this would not bother me
[02:13:01] <cousteau> retro: computers are not evil
[02:13:03] <cousteau> printers are
[02:13:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[02:13:31] <retro> but because I learned computing for 20 (+?) years
[02:13:36] <cousteau> but computers have cat videos!
[02:13:41] <retro> problems seem to just fucking follow me
[02:13:45] <cousteau> do printers have cat videos?
[02:14:07] <retro> like a fucking buzzard off a shit wagon
[02:14:29] <cousteau> sounds to me like you're on the right track
[02:14:31] <omegatron> printers can print out cat videos
[02:14:32] <retro> everthing I try to do unless its noob terretory like youtube or gaming
[02:14:38] <retro> RAPES ME WITH ERRORS AND INCOMPETANCE
[02:14:48] <cousteau> omegatron: best they can do is print cat photos!  That's totally not the same!
[02:15:05] <retro> I SHOULD HAVE STAYED A TECHNOPHOBE
[02:15:21] <retro> FUCK THIS SHIT
[02:15:27] <cousteau> retro: think that every person that is an expert in something has failed a million times at that something
[02:15:35] <cousteau> so you can see e.g. a tennis champion
[02:15:42] <cousteau> and think "hahaha, what a loser!"
[02:15:42] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:15:45] <omegatron> ... challenge accepted ... (well, tbh, i will just one of those ascii-art programs lying around, to get and print each frame of the next cat video i can find .)
[02:15:55] <omegatron> /just/just use
[02:16:06] <retro> tennis is simple
[02:16:17] *** Quits: zer0bitz (~zer0bitz@196.244.192.57) (Ping timeout: 250 seconds)
[02:16:29] <cousteau> omegatron: making a booklet using the printer and flipping pages very fast doesn't count!
[02:16:34] <retro> computers can break or do dumb shit in infinate ways
[02:16:41] <omegatron> too bad
[02:16:49] <retro> you cant always fix that because not everything is open source
[02:16:49] <omegatron> retro: such can humans
[02:17:04] <retro> well thats different
[02:17:15] <retro> I dont like humans anyhow
[02:17:16] <omegatron> the universe is still winning, in producing better idiots each year ..   -_-
[02:17:19] <cousteau> see?  we need more open source processors
[02:17:23] <retro> never have since 2011
[02:17:45] <cousteau> wow, what happened in 2011?
[02:17:54] <omegatron> got divorced?
[02:17:57] <cousteau> or rather, what happened BEFORE 2011 that made you like humans?
[02:17:59] <retro> im not about to talk about that
[02:18:06] <perro> x11 wasn't that bad
[02:18:07] *** Joins: masterbuilder (~user@user/masterbuilder)
[02:18:17] <perro> c*
[02:18:19] <cousteau> oooh, C11
[02:18:37] <cousteau> right, I don't like that they made _Complex optional either
[02:18:37] <omegatron> well, then don't use C11 (who does anyway?)
[02:18:53] *** Quits: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net) (Ping timeout: 256 seconds)
[02:19:15] <retro> all im saying is since I learned I.T more and more, itÂ  obvioustly made me want to do more technical things which means I have to deal with way more errors and stupid shit than the average user
[02:19:31] <cousteau> yeah, the more you learn, the more things you break
[02:19:38] <cousteau> breaking is how you learn things
[02:19:41] <omegatron> ... sounds like you made your hobby yor work .. big mistake indy
[02:19:47] <retro> I never broke shit
[02:19:53] <cousteau> it's because you're trying things you wouldn't normally try
[02:20:04] <retro> vbox could not switch control to my usb stick and it corrupted it
[02:20:10] <retro> same old shit
[02:20:24] <retro> either vbox or win10 or winxp did
[02:20:25] *** Quits: rgrinberg (~textual@2806:265:5401:9431:d03e:a2ca:3d77:ef5f) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:20:29] <retro> and winxp did not
[02:21:04] *** Joins: Torr (~Torr@user/torr)
[02:21:20] <retro> I did not break shit
[02:21:34] <omegatron> always look on the bright side of life:  you could program c++
[02:22:20] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-248.cspire.com) (Read error: Connection reset by peer)
[02:22:48] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0)
[02:22:51] <omegatron> maybe in another 2000 years, humans are so good with computers as they are today with stone cutting ..    -_-
[02:23:22] <omegatron> (after surving the machine apocalypse five times)
[02:24:22] <cousteau> IF we make it to the machine apocalypse
[02:24:49] <retro> well, yall are not immune to it either
[02:24:51] <omegatron> what would happen before?
[02:25:01] <retro> a computer is gonna ruin your day
[02:25:12] <retro> even with complete knowledge of C/asm
[02:25:43] <omegatron> i'm too old for letting some silicon ruin my day/mood
[02:25:51] <retro> bull shit
[02:26:19] <retro> age does not matter
[02:26:42] <retro> and im tired of it. I could have been doing other ethings instead of wasting my time learning I.T for 20 years
[02:27:02] <omegatron> age and experience gives you (hopefully) the wisdom to be not impressed by some other people bullshit work (hard- or software)
[02:27:45] *** Joins: smoke (~smoke@user/smoke)
[02:27:51] <retro> except in a few years time you wont be able to take a s*** without a computer of some sort interfearing
[02:27:57] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[02:28:06] <retro> might as well admit it we're fucked
[02:28:25] <retro> have you seen the state of the web? its atrocious!!
[02:28:26] <omegatron> I doubt it, because I will live off-grid for my last years
[02:28:35] *** Joins: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338)
[02:28:36] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:28:42] <retro> riiight.... good luck
[02:29:19] <cousteau> omegatron: climate crisis in 2050, but before that there's gonna be some important war in 2030-2040
[02:29:23] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173)
[02:29:29] <cousteau> and a pandemic in the early 20s
[02:29:33] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:29:33] <cousteau> oh wait
[02:29:37] *** Joins: johnjaye (~pi@154.6.152.74)
[02:29:45] * cousteau looks up almanac
[02:30:03] <omegatron> yeah Apple vs Epic  - we already have that
[02:30:26] *** Quits: dcreator (~kjell@208.92-221-37.customer.lyse.net) (Quit: leaving)
[02:30:27] *** Quits: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338) (Client Quit)
[02:30:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0) (Ping timeout: 240 seconds)
[02:30:48] <cousteau> no, I mean a war not involving Apple
[02:31:43] <omegatron> google vs bing?
[02:31:45] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:31:58] <omegatron> musk vs. musk jr. ?
[02:32:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:32:07] <cousteau> so not Apple vs Epic, Apple vs Samsung, Apple vs EU, Apple vs every international standard
[02:32:51] <cousteau> no, like, between countries or something
[02:33:10] <omegatron> countries? there will be (relevant) countries in 2035 ?
[02:33:17] *** Quits: pizdets (~pizdets@183.182.111.240) (Ping timeout: 240 seconds)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.125)
[02:33:57] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[02:34:12] *** Joins: dcreator (~kjell@208.92-221-37.customer.lyse.net)
[02:34:36] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:b401:2b66:8ab6:9e53) (Ping timeout: 268 seconds)
[02:35:00] <omegatron> but what will they fight over?
[02:36:40] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0)
[02:37:00] *** Joins: ferdna (~ferdna@user/ferdna)
[02:37:24] <cousteau> since when are wars fought over something?
[02:37:31] * omegatron thinks of IQ - Harvest of Souls
[02:38:39] <omegatron> well, resources, money, religion or just to be one, who is right :  https://i.imgur.com/9pg8rHn.jpeg
[02:39:03] *** Quits: cousteau (~cousteau@user/cousteau) (Read error: Connection reset by peer)
[02:39:12] *** Joins: cousteau (~cousteau@user/cousteau)
[02:41:13] <cousteau> stupid laptop died.  Okay, maybe I underestimated how fast the machine rebellion would start
[02:41:19] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[02:41:35] <omegatron> they know who you are and your threat level
[02:42:34] <cousteau> I'll take this as a sign that I should go to sleep though
[02:42:46] <cousteau> ...while they live!
[02:43:44] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[02:44:24] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[02:44:40] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: â™« I can't forget the day I shot that network down â™«)
[02:44:46] *** Joins: masterbuilder (~user@user/masterbuilder)
[02:49:15] *** Joins: seninha (~seninha@user/seninha)
[02:51:25] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:52:42] <useretailz> str[(int)strlen(str) - 1] = '\0'; // what's the most efficient way to remove last char in a string? currently i'm doing following
[02:53:12] <nitrix> Why do you feel like the cast is necessary?
[02:53:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[02:53:59] <omegatron> most efficient in what dimension? space? time?
[02:54:12] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[02:55:18] <useretailz> not sure. type safety? better portability? strlen returns size_t
[02:55:36] <rcf> size_t can exceed the size of int, so this is less safe.
[02:56:33] <useretailz> makes sense
[02:56:52] <rcf> In any case, in isolation you can't actually do anything more efficient with a C string.
[02:58:55] <nitrix> If it's done repeatedly or you expect to work with long strings, you could consider book-keeping the length as it gets modified to avoid unnecessary traversals.
[03:03:25] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[03:04:52] <bdax_> does anyone know if FLT_RADIX is ever reasonably anything other than 2? I'm thinking perhaps it's unlikely, like CHAR_BIT being anything other than
[03:04:56] <omegatron> useretailz: as a plain and dumb example:  https://bpa.st/ORDQ
[03:05:12] <bdax_> other than 8*
[03:05:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0) (Ping timeout: 240 seconds)
[03:05:52] <omegatron> bdax_: you work on IBM mainframes?
[03:06:06] <bdax_> not yet!
[03:06:24] <omegatron> or on old russian ternary machines
[03:06:25] <omegatron> ?
[03:07:21] <bdax_> would that I could
[03:07:51] *** Joins: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net)
[03:07:57] <bdax_> but unfortunately no :(
[03:08:08] <omegatron> well, with machines that do decimal float stuff, it would be 10 .. but ...
[03:08:43] <omegatron> (if I remember correctly)
[03:09:18] <bdax_> that sounds like it would be an improvement (no rounding errors?)
[03:09:37] <bdax_> but I suppose those are rare too right
[03:09:52] <omegatron> that's why the whole financial industry does NOT use floating point
[03:11:38] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:12:35] <wenxin> hi,there. I am currently reading R&K, get stuck on this statement "If we write '0' instead of a numeric value like 48 that depends on the character set, the program is independent of the particular value and easier to read." I knew that every character stored as int in computer, but what exactly does this statement mean
[03:14:35] <omegatron> I will never understand, why Kate/KWrite would ask me, if I wanted to save a completely empty document, which I used as a temporary scratch file *argn*
[03:14:43] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[03:15:31] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[03:16:22] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[03:16:52] <trenka> wenxin: 48 is ascii code of '0'. ascii is not the only possible coding
[03:16:55] <omegatron> it means, that in one character set, '0' could be the numeric value 48 and in another character set, it could be  67 .. but if you write '0', what you get is always a '0'
[03:18:09] <omegatron> https://en.wikipedia.org/wiki/EBCDIC   for example
[03:18:25] <omegatron> there a '0' is 0xF0
[03:18:35] *** Joins: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338)
[03:20:22] <wenxin> omegatron: If i want to use the integer 48, i can declare int 48 if i want to use the character '0' , i just declare  char a ='0'.
[03:20:28] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[03:20:39] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 250 seconds)
[03:20:48] *** Quits: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338) (Client Quit)
[03:20:52] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:20:55] <wenxin> why should i concerned about character set ?
[03:21:10] *** Joins: useretailz (~useretail@31.41.69.140)
[03:23:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:23:44] <omegatron> do you know, when K&R was written ?
[03:23:50] <omegatron> the first edition ..
[03:24:04] <wenxin> omegatron: i don't know
[03:24:32] <omegatron> it was a long, long time ago, before UTF-8/16/32 existed
[03:24:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 268 seconds)
[03:24:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[03:24:46] <omegatron> people wrote their programs on different machines, with different character encodings
[03:25:05] <wenxin> oh i get it now
[03:26:01] <omegatron> and usually only compiled their programs for that machine
[03:28:27] *** Joins: p0g0 (~p0g0@216.211.153.38)
[03:28:35] *** Quits: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net) (Quit: Lost terminal)
[03:28:55] <wenxin> if i want to determine if the character between A and Z ,  Does this statement correct or not  ?     if(x<65 || x>90){return false}   Do i need to figure out if machine use ASCII or not ?
[03:29:27] <omegatron> no, just write  if ( x < 'A' || x > 'Z' ) ...
[03:29:47] *** Joins: u0_a3913 (~u0_a391@2600:380:a469:f561:5b42:302b:aad1:8b9b)
[03:29:48] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[03:29:54] <omegatron> unlikely you have to care about such things nowadays
[03:30:10] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:30:12] <omegatron> as I said, that book is quite old and some things are plainly outdated
[03:30:28] <omegatron> but it's still a good start
[03:30:58] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:31:49] <wenxin> if the machine happened to use ASCII encoding, Does the statement correct ? (int)x<65 || (int)x>90
[03:32:09] <omegatron> though, if your character test is to be "between A and Z", it would be  ( x >= 'A' && x <= 'Z' ) ...  my bad   =D
[03:33:02] *** Quits: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:33:58] <omegatron> if you want to compare a numeric value with a certain character, use that character not some arbitrary integer value, which happens to be correct most of the time
[03:35:23] <wenxin> omegatron: I am little confused about the ASCII . I thought that every machine uses ASCII encoding, this is what standard mean . but it seems not correct  puzzled
[03:35:44] <omegatron> no, not every machine uses ASCII
[03:35:44] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[03:35:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[03:36:14] *** Joins: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338)
[03:36:17] <wenxin> for example:?
[03:36:27] <omegatron> https://en.wikipedia.org/wiki/Character_encoding#Common_character_encodings
[03:36:39] *** Joins: useretailz (~useretail@31.41.69.140)
[03:36:39] <omegatron> this list just contains the common character encodings, not all of them
[03:37:04] <omegatron> because of this whole mess, Unicode was invented
[03:37:07] <trinity> EBCDIC was a common encoding for a long time
[03:37:38] *** Joins: kish` (~sid742412@user/aqua)
[03:38:30] <retro> is it possible to make this game: but where the world has more lego parts, not just basic bricks https://youtu.be/1IrKDS8zyKY
[03:38:50] <retro> I dont think voxels will work for lego
[03:39:19] <trinity> luckily c - '0' to turn a character that represents a number in the text encoding into its decimal analog (e.g. '0'->0,'1'->1,etc) works for every encoding you'd ever touch (i hope)
[03:39:22] <retro> it would have to have a very fine grid , maybe even a dynamic grid. and polygons
[03:40:06] <retro> the world is made up of basic plates tiles slopes and bricks
[03:40:33] <retro> you cannot place parts sideways or at diagonals or upside down :(
[03:40:34] <wenxin> thank you , i am gonna change my program from some thing like  'x<65 || x >90' to x>='A' && x<='Z'
[03:40:56] <omegatron> yes, please
[03:41:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:41:12] <retro> I always wondered if it was possible thats all..
[03:41:35] <trinity> it's more readable anyway. "what is 65? 90?" - ah, it's just the value of this encoded character
[03:41:51] <retro> lego botched the public release of this game, no more infinateley sized maps and full of bugs that make the game impossible to get past level 2
[03:41:55] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[03:42:08] <trinity> are you talking about the open world lego game?
[03:42:19] <retro> yes.
[03:42:28] <trinity> it's not at all trivial
[03:42:33] <retro> yes
[03:42:42] <retro> you can still do chunking
[03:43:54] <retro> the game did this and FAST, because you could get the tunnel boarer truck which moves FAST and dig underground and it never lagged, it drew everything in real time
[03:44:17] *** Quits: rgrinberg (~textual@2806:101e:7:def:8ca4:21b9:b555:2338) (Ping timeout: 268 seconds)
[03:44:27] <retro> if the map just used basic parts thats fine
[03:44:40] <retro> but it should allow the users builds toÂ  be complex
[03:46:58] <retro> here is what I mean https://youtu.be/ZzctBiVlBxA
[03:47:18] <retro> see how it never lags
[03:47:39] <retro> this game could have been huge
[03:47:45] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:47:45] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:47:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:47:48] <retro> :(
[03:47:54] <omegatron> that's what she said
[03:50:26] <caze> wenxin: It's easy to do it in a character set agnostic way.
[03:51:42] *** Quits: mark_infinite (~skynet@ppp-94-66-136-135.home.otenet.gr) (Quit: Lost terminal)
[03:52:09] <wenxin> caze: yeah  I can't agree with you more :D
[03:52:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[03:52:36] <caze> char *alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"; if (strchr(alpha, x) != NULL)
[03:52:41] *** Joins: chenqisu12 (~bhca7d@183.217.200.22)
[03:52:58] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:53:20] <caze> wenxin: ^
[03:55:52] <wenxin> one more question about the size of pointer. I knew that the size of pointer is equals to the size of data type that the pointer to. But why? I mean it's just an address after all, not the really value
[03:56:13] <caze> wenxin: That is not true.
[03:57:09] <caze> ,cc printf("sizeof (char) = %zu, sizeof (char *) = %zu", sizeof (char), sizeof (char *));
[03:57:12] <candide> caze: sizeof (char) = 1, sizeof (char *) = 8
[03:57:58] <omegatron> the size of a pointer depends on the machine you compile for ; to make it simple, usually this is 32-bit on 32-bit machines and 64-bit on 64-bit machines (there are variations of course)
[03:58:35] *** Joins: constxd_ (~brad@142.134.38.68)
[03:58:40] <trinity> on amd64 printf("%d\t%d\n", sizeof(int), sizeof(int *)); prints 4\t8
[03:59:15] <fizzie> The size of a pointer may _depend_ on the type it points at, though.
[03:59:20] <wenxin> omegatron:  this makes sense. the pointer just hold the address, so it should equals to the size of register
[03:59:29] <fizzie> As in, pointers to different types can have different representations.
[03:59:32] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[03:59:39] <caze> trinity: %zu
[03:59:45] <fizzie> Or put another way, `sizeof (char *)` need not equal `sizeof (int *)`.
[04:00:25] <trinity> caze: does it matter in this particular instance?
[04:00:50] <omegatron> in practice, you rarely or even never have to worry about such things after all
[04:01:01] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[04:01:16] <caze> trinity: Yes. I don't see the difference between this instance and any other instance.
[04:01:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:01:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[04:03:07] <trinity> ah i thought about it some more. it's just good practice/habit
[04:03:38] <caze> trinity: %d is clearly an incorrect format specifier.
[04:06:43] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:09:38] *** Quits: demiurge (edk@libera/staff/edk) (Remote host closed the connection)
[04:11:25] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 268 seconds)
[04:11:47] *** Parts: wenxin (~wenxin@user/vim-fans/x-3284168) (WeeChat 2.8)
[04:12:36] *** Joins: edk (~edk@libera/staff/edk)
[04:13:33] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:13:53] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[04:15:03] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[04:16:09] *** Joins: echoSMILE (uid504326@user/echosmile)
[04:17:18] *** ormaaj is now known as jaamro
[04:18:15] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[04:22:55] *** Quits: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:23:45] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:25:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:26:10] *** Quits: Bova (~Bova@185.24.53.163) (Quit: WeeChat 3.3)
[04:28:39] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[04:28:41] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[04:30:18] *** Joins: Wulf (~Wulf@user/wulf)
[04:31:06] *** Joins: u0_a3914 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[04:32:53] *** Joins: rgrinberg (~textual@2806:101e:7:def:f99c:f095:57cb:e173)
[04:33:18] *** Quits: orion (~orion@user/orion) (Quit: Leaving...)
[04:34:22] *** Joins: eht (~eht@user/eht)
[04:34:51] *** Quits: u0_a3913 (~u0_a391@2600:380:a469:f561:5b42:302b:aad1:8b9b) (Ping timeout: 268 seconds)
[04:36:34] *** Parts: jackkk (~jackiii@93-44-188-36.ip98.fastwebnet.it) (Leaving)
[04:39:22] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[04:41:08] *** Parts: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[04:42:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[04:43:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[04:48:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:48:37] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[04:50:11] *** Quits: rgrinberg (~textual@2806:101e:7:def:f99c:f095:57cb:e173) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:51:23] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com)
[04:51:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[04:51:41] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[04:57:49] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 240 seconds)
[04:58:24] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[05:00:53] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Client Quit)
[05:01:29] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com) (Read error: Connection reset by peer)
[05:06:42] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:06:45] *** Quits: AmR (~AmREiSa@156.199.202.96) (Quit: Konversation terminated!)
[05:07:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[05:15:32] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[05:15:37] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[05:17:23] *** Joins: malloy (~jimery@116.30.221.255)
[05:19:39] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:21:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:21:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:21:55] *** Joins: wroathe (~wroathe@user/wroathe)
[05:24:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:24:59] *** Joins: seninha (~seninha@user/seninha)
[05:26:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com)
[05:27:57] *** Quits: bdax_ (~tom@05432be4.skybroadband.com) (Ping timeout: 240 seconds)
[05:27:58] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com) (Read error: Connection reset by peer)
[05:29:22] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[05:30:03] *** Joins: gry_ (~quassel@botters/gry)
[05:40:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:42:32] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:45:32] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:46:37] *** Quits: AdmiralBumbleBee (~AdmiralBu@47.203.174.105) (Read error: Connection reset by peer)
[05:47:09] *** Joins: AdmiralBumbleBee (~AdmiralBu@47.203.174.105)
[05:47:13] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[05:48:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:49:57] *** Quits: fstd_ (~fstd@xdsl-84-44-230-164.nc.de) (Ping timeout: 240 seconds)
[05:51:40] *** Joins: constxd_ (~brad@142.134.38.68)
[05:55:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[05:55:19] *** Joins: fe23 (~fe23@2409:8a34:468:10c0:924:197e:4c9d:ac18)
[05:57:17] *** Quits: ckdCreations (~ckdCreati@2607:fb90:8352:571e:7d74:3f4f:88b1:32fb) (Ping timeout: 240 seconds)
[05:58:55] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[06:00:43] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:05:24] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[06:07:18] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[06:08:27] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:08:32] *** u0_a3914 is now known as Kit
[06:16:06] *** Joins: gco (~gco@2601:647:4c80:2424:adcf:788d:2425:1357)
[06:18:43] *** Joins: smoke (~smoke@user/smoke)
[06:18:43] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Read error: Connection reset by peer)
[06:21:54] *** Joins: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[06:21:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[06:22:30] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:25:48] *** Joins: Guest86 (~Guest86@cpe-67-247-98-228.nyc.res.rr.com)
[06:28:20] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:28:31] *** Quits: Guest86 (~Guest86@cpe-67-247-98-228.nyc.res.rr.com) (Client Quit)
[06:28:35] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:28:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:29:14] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[06:32:50] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[06:33:52] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 268 seconds)
[06:34:14] *** Joins: johnjaye (~pi@154.6.152.74)
[06:42:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:42:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[06:44:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:45:37] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[06:46:27] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[06:48:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[06:51:19] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[06:51:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:53:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:53:11] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:54:33] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:18] *** Joins: u0_a391 (~u0_a391@2600:380:a469:f561:e979:e566:1328:9dd8)
[06:56:20] *** Joins: u0_a3911 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[06:56:23] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Read error: No route to host)
[07:00:23] *** Quits: u0_a391 (~u0_a391@2600:380:a469:f561:e979:e566:1328:9dd8) (Ping timeout: 268 seconds)
[07:00:29] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:02:33] *** u0_a3911 is now known as Kit
[07:03:21] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[07:07:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:07:46] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[07:12:12] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[07:13:50] *** Joins: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96)
[07:14:34] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[07:14:42] *** Quits: moog (~moog@107.126.53.61) (Remote host closed the connection)
[07:15:34] *** Quits: nostar (~nostar@45.14.195.111) (Quit: Leaving)
[07:16:20] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[07:18:39] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:20:07] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173) (Ping timeout: 268 seconds)
[07:25:37] *** Quits: gco (~gco@2601:647:4c80:2424:adcf:788d:2425:1357) (Quit: ZZZzzzâ€¦)
[07:29:17] *** Quits: gry_ (~quassel@botters/gry) (Ping timeout: 240 seconds)
[07:29:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[07:32:17] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:49] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:37:13] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[07:37:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:41:28] *** Joins: gry_ (~quassel@botters/gry)
[07:48:19] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:50:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:51:51] *** Quits: gry_ (~quassel@botters/gry) (Quit: Ð¿Ð¾ÐºÐ°)
[07:53:12] *** Joins: gry_ (~quassel@botters/gry)
[07:54:37] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[08:00:25] *** Joins: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f)
[08:01:35] *** Joins: llh (~llh@user/llh)
[08:03:49] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:06:15] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[08:07:39] *** Quits: dsrt^ (~dsrt@207.5.54.6) (Remote host closed the connection)
[08:08:17] *** jaamro is now known as ormaaj
[08:11:41] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:12:04] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:12:59] *** Joins: Teckla (~Teckla@user/teckla)
[08:13:39] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:14:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[08:17:18] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[08:23:52] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[08:24:00] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[08:28:37] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:29:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:33:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:33:39] *** Joins: uniquepointer (~uniquepoi@190.218.240.164)
[08:34:25] *** Quits: uniquepointer (~uniquepoi@190.218.240.164) (Client Quit)
[08:34:29] *** Joins: Satin (uid193953@user/Seten)
[08:38:46] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[08:39:39] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:40:17] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 268 seconds)
[08:40:49] *** Joins: malloy (~jimery@116.30.221.255)
[08:41:02] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[08:46:52] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[08:49:37] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[08:51:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[08:56:41] *** Joins: duuude (~user@user/duuude)
[08:57:09] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:57:54] *** Joins: nuh^ (~nuh@207.5.54.6)
[09:01:23] *** Quits: oafish (~oafish@2a05:f480:2000:1325::) (Quit: disconnecting)
[09:02:56] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[09:10:57] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 240 seconds)
[09:13:06] *** Joins: jimboj1m (~jimboj1m@static-71-166-63-68.bltmmd.fios.verizon.net)
[09:14:17] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:15:32] *** Joins: huckleberry (~huckleber@ip98-164-196-153.oc.oc.cox.net)
[09:15:59] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[09:21:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[09:28:57] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[09:29:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:33:22] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[09:35:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:35:14] *** Joins: malloy (~jimery@116.30.221.255)
[09:37:39] *** pony is now known as smol-hors
[09:38:52] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 268 seconds)
[09:43:50] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:43:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:43:50] *** Joins: wroathe (~wroathe@user/wroathe)
[09:49:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:06:33] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[10:06:42] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:06:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:06:42] *** Joins: wroathe (~wroathe@user/wroathe)
[10:07:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:09:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:09:27] *** Joins: analognoise (~analognoi@185.216.74.46)
[10:09:55] *** Quits: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96) (Read error: Connection reset by peer)
[10:10:50] *** Joins: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96)
[10:11:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:12:58] *** Joins: Teckla (~Teckla@user/teckla)
[10:18:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:20:06] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 260 seconds)
[10:22:20] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[10:30:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b86f:1b4d:c83a:7071) (Quit: Quit)
[10:35:00] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:39:49] *** Quits: et09 (~et09@user/et09) (Ping timeout: 256 seconds)
[10:45:03] *** Joins: ychaouche (~chatzilla@user/ychaouche)
[10:45:42] <ychaouche> Hey c gurus
[10:46:03] <ychaouche> I am reading the output of strace from two different builds of the same software (waterfox)
[10:46:32] <ychaouche> in one build, the waterfox uses only the openat system call, while in the other, it uses only the open system call
[10:47:05] <ychaouche> Do you think this is a difference in the source code, in the build options, something else ?
[10:47:10] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:47:38] <ychaouche> the openat version is downloaded from the official website, the open version is downloaded from a third party appimage
[10:48:21] <supakeen> Could be either in the source code, different libc's, etc.
[10:48:45] *** Quits: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f) (Remote host closed the connection)
[10:49:07] *** Joins: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f)
[10:50:20] <ychaouche> ah, forgot about the libc
[10:50:25] <ychaouche> could be indeed
[10:50:51] *** Joins: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr)
[10:51:07] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[10:52:43] <ychaouche> ok, I think it is a different version of ld
[10:55:51] <supakeen> openat is 'just' the relative version of open
[10:56:09] <supakeen> as in, it only behaves differently for relative paths, in that case it doesn't take the working directory of the current process, but the one provided
[10:56:17] <rindolf> ychaouche: post-modern systems have many moving parts... https://www.joelonsoftware.com/2002/12/11/lord-palmerston-on-programming/
[10:57:18] *** Quits: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[11:05:43] *** Joins: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr)
[11:08:16] <ychaouche> rindolf: added to pocket
[11:08:20] <ychaouche> rindolf: I hope you're doing fine :)
[11:08:51] <ychaouche> rindolf: I would benefit from your feedback on https://www.reddit.com/r/waterfox/comments/rraanz/waterfox_is_looking_for_its_dependentlibslist/
[11:11:01] <ychaouche> my current idea is to hexedit the binary to change that string and removing the leading "/"
[11:11:14] <rindolf> ychaouche: use LD_LIBRARY_PATH - not /usr/local...
[11:11:26] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 260 seconds)
[11:11:29] <ychaouche> rindolf: it's no use. I need a different linker.
[11:11:38] <ychaouche> I already tried LD_LIBRARY_PATH alone
[11:11:46] <rindolf> ychaouche: ah
[11:11:47] <ychaouche> with my current (old) linker
[11:12:28] <rindolf> ychaouche: i use /usr/bin/firefox on fedora
[11:12:58] <rindolf> not perfect but acceptable
[11:13:04] <ychaouche> I was a happy firefox user until it started crashing rather continuously lately until it became totally unusable
[11:13:25] <rindolf> i have 8 GB RAM though
[11:13:29] <ychaouche> I thought it's a good time to see what's happening elsewhere
[11:13:45] <ychaouche> rindolf: is 8GB enough or not enough ?
[11:13:48] <rindolf> ychaouche: use a new ff profile?
[11:13:55] <ychaouche> rindolf: even with a blank profile
[11:14:31] <rindolf> ychaouche: it's enough for ff/xfce/etc
[11:14:32] <ychaouche> I tried palemoon and seamonkey, now I am looking at waterfox
[11:14:46] <ychaouche> rindolf: ok I was making sure you weren't having first world problems
[11:14:59] * ychaouche has 4GB of RAM.
[11:15:12] * ychaouche lives in third world country
[11:15:15] <ychaouche> :o)
[11:16:06] <rindolf> ychaouche: i live in tel aviv, .il which is kinda both
[11:16:15] <sham1> I have a laptop with 2 GiB of RAM just for the purpose of testing stuff
[11:16:31] <sham1> If a program can work efficiently on that, it can work everywhere
[11:16:45] <ychaouche> rindolf: your perspective is interesting. I always thought of israel as a fully developed country
[11:16:46] <rindolf> https://en.wikipedia.org/wiki/Ramat_Aviv_Gimel for life!
[11:17:13] <ychaouche> At least it's how it's protrayed. I mean haifa ?
[11:17:32] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:18:11] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:18:37] <rindolf> ychaouche: tel aviv is the 'it city' of .il, but we're getting offtopic
[11:19:26] <ychaouche> Oh thanks for updating me on that, I thought big players had their offices in haifa, an aquaintance told me long time ago.
[11:19:31] <ychaouche> 10 years
[11:19:32] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 240 seconds)
[11:19:38] <ychaouche> Oracle etc.
[11:19:44] <ychaouche> yes offtopic sorry
[11:20:00] <rindolf> ychaouche: well, haifa has the technion...
[11:20:15] <rindolf> and haifaU
[11:20:20] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:21:26] <ychaouche> ok I was misinformed
[11:22:09] <rindolf> ychaouche: i mean "it" as he/she/it - not info-tech
[11:23:26] <rindolf> third person neuter singular
[11:23:30] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[11:24:27] <ychaouche> is there a channel for help on hexediting binaries ?
[11:24:32] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[11:24:43] <rindolf> ychaouche: #re? #asm?
[11:24:54] <ychaouche> I'll try #re
[11:24:57] <ychaouche> it's not really asm
[11:25:05] <ychaouche> it's really binary with a hexeditor
[11:26:19] <rindolf> ychaouche: seems like the problem is deeper in your sys
[11:27:06] *** Joins: gitargy (~gitargy@2603-8081-7602-dc00-b9b9-f38c-0102-c988.res6.spectrum.com)
[11:27:16] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[11:27:19] <rindolf> ychaouche: ff hardly ever crashes here
[11:27:49] <rindolf> in its defence
[11:28:01] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[11:37:47] *** Joins: gitargy_ (~gitargy@072-182-019-212.res.spectrum.com)
[11:39:42] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[11:39:57] *** Quits: gitargy (~gitargy@2603-8081-7602-dc00-b9b9-f38c-0102-c988.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:40:03] <rindolf> ychaouche: note that i use noscript and an ext that blocks youtube ads
[11:40:38] <ychaouche> ublock origin ?
[11:40:47] <ychaouche> rindolf: could well be
[11:40:51] <ychaouche> (problem in the sys)
[11:41:11] * rindolf is happy with text ads on ddg and google search
[11:44:44] <rindolf> ychaouche: no, https://mybrowseraddon.com/adblocker-for-youtube.html
[11:44:46] <candide> Title of rindolf's link: Clean YouTubeâ„¢ :: MyBrowserAddon
[11:45:13] <ychaouche> oh adblocker
[11:45:33] <ychaouche> I heard ublock origin had a lighter memory footprint
[11:45:45] <ychaouche> read*
[11:45:56] <ychaouche> didn't care to benchmark them myself
[11:46:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:47:00] <rindolf> ychaouche: ah, it remvoe *only* from yt
[11:47:19] <rindolf> ychaouche: ah, it removes *only* from yt
[11:47:35] <ychaouche> could it have a smaller list ?
[11:48:13] <rindolf> ychaouche: it does - i see ads on ddg
[11:48:40] <ychaouche> that has more to do of blocking only from yt
[11:49:09] <ychaouche> but the list of tracking websites could just as well be the same than for the rest of the internet
[11:49:11] <rindolf> ychaouche: that's what i want
[11:49:35] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[11:50:02] <ychaouche> Those systems rely on blocking lists you subscribe to. The lists contain the domains of known ad networks.
[11:50:50] <ychaouche> wether you chose to apply the list on youtube only or on all the internet should have a small impact, I think
[11:51:07] <ychaouche> but surely there's a reason for the addon to exist
[11:51:19] <rindolf> ychaouche: i welcome being tracked. i even hope the NSA/CIA/unit8200/mossad/emma-watson/etc. have been reading my mind
[11:51:56] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 252 seconds)
[11:52:27] <ychaouche> they might have, even with full ad block on ^^'
[11:52:43] <ychaouche> now we're really offtopic
[11:54:00] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[11:54:55] <rindolf> ychaouche: heh, ok...
[11:55:17] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:55:20] <ychaouche> I've joined #c-offtopic just in case
[11:55:32] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:55:51] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[11:56:11] *** Quits: nvrhome (~Bop@user/nvrhome) (Ping timeout: 245 seconds)
[11:56:22] *** Joins: foul_owl (~kerry@212.102.47.57)
[11:58:38] *** Joins: random-nick (~random-ni@87.116.167.125)
[12:02:33] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:05:07] *** Quits: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f) (Quit: Leaving)
[12:10:02] *** Quits: analognoise (~analognoi@185.216.74.46) (Read error: Connection reset by peer)
[12:13:00] *** Joins: Teckla (~Teckla@user/teckla)
[12:13:22] *** Joins: mrig (~mrig@user/mrig)
[12:18:46] *** Quits: nuh^ (~nuh@207.5.54.6) (Remote host closed the connection)
[12:19:11] <rindolf> ychaouche: ok, well, i wish my mind was recorded. i had my share of 'dirty' thoughts, but also lots of good IMHO ideas
[12:25:59] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[12:25:59] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[12:25:59] *** Joins: wroathe (~wroathe@user/wroathe)
[12:26:16] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[12:30:30] *** Joins: useretailz (~useretail@31.41.69.140)
[12:30:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[12:35:55] *** Joins: meator (~meator@user/meator)
[12:37:58] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.216)
[12:38:53] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[12:39:19] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8346:bdfd:400d:4e86:1eca:ba46)
[12:40:47] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.255) (Ping timeout: 268 seconds)
[12:45:17] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[12:47:19] *** Quits: inomoz (~inomoz@85.26.165.50) (Ping timeout: 256 seconds)
[12:48:32] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:51:51] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[12:53:25] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[12:56:20] *** Joins: agonhajdari (~textual@user/agonhajdari)
[12:59:03] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:59:18] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[13:00:47] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:01:12] *** Joins: inomoz (~inomoz@85.26.233.222)
[13:02:17] *** Joins: aradesh (~aradesh@user/aradesh)
[13:02:20] *** Joins: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f)
[13:02:30] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[13:02:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:04:53] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f0a6) (Quit: Textual IRC Client: www.textualapp.com)
[13:04:57] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[13:06:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:08:10] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:11:07] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 256 seconds)
[13:12:56] <V-T60> https://bpa.st/raw/5ZDBAT3CNJZUGEOQDHHWIPKMGA I am trying to figure out what does it mean
[13:14:06] <V-T60> "The following example shows a typical use of the first (e.g: while). It implements the so called Heron approximation to compute the multiplicative inverse 1/x of a number x".
[13:14:36] <V-T60> But how? I can only see infinite loop
[13:14:38] <dave0> oh try heron approximation on wikipedia
[13:14:52] <V-T60> Thank you, I will
[13:14:55] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[13:15:36] <caze> V-T60: Add a printf in the loop body that prints out the value of 1.0 - a * x.
[13:16:18] <dave0> V-T60: it loops until   fabs(1.0 - a*x) < eps   ... eps is short for epsilon and it is a small number for "close enough" instead of "equals" because floating point is weird
[13:17:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:17:52] <dave0> V-T60: instead of writing    if(a*x == 1.0)   you do a compare for if the difference between a*x and 1.0 is so small that it's "close enough"
[13:19:00] <dave0> it's like generating 30 digits of pi to use in some calculation where any more digits is just lost in the noise
[13:19:32] <dave0> your measurement is just not that accurate that it needs more than x digits
[13:22:55] *** Joins: seninha (~seninha@user/seninha)
[13:27:12] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:28:21] <caze> https://ideone.com/yCYwEV seems legit.
[13:29:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:31:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38)
[13:32:19] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:33:33] *** Joins: fulleraser (~AdminUser@41.74.138.129)
[13:33:54] <caze> https://ideone.com/ltwuh1 FIFY
[13:36:11] *** Joins: chomwitt (~chomwitt@2a02:587:dc1e:c100:12c3:7bff:fe6d:d374)
[13:36:37] <caze> V-T60: ^
[13:36:45] *** Joins: meator (~meator@user/meator)
[13:37:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[13:41:08] *** Quits: inomoz (~inomoz@85.26.233.222) (Remote host closed the connection)
[13:43:38] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:46:11] *** Quits: fulleraser (~AdminUser@41.74.138.129) (Remote host closed the connection)
[13:47:49] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[13:47:58] *** Joins: knittl (~knittl@user/knittl)
[13:48:03] *** Joins: mrig (~mrig@user/mrig)
[13:48:19] <knittl> If I have a global array, why doesn't a function see updates from main to the array values?
[13:48:48] <caze> You don't have a "global" array.
[13:49:51] <knittl> basically: static int a[1] = {0}; static void f() { printf("%d\n, a[0]); } int main(void) { a[0] = 42; f(); } /* prints 0, not 42 */
[13:50:41] <knittl> sorry, quote missing in printf. but you should get the idea
[13:51:00] <caze> Can you make a testcase?
[13:51:20] <knittl> hm. the simple example works. there must be something wrong with the other file
[13:51:50] <knittl> yeah, give me a minute, I will create a paste :)
[13:51:57] <dave0> knittl: if you declare your array static, each file will have it's own copy of the array
[13:52:10] <knittl> dave0: only a isingle file
[13:52:21] <caze> It shouldn't matter though, if there's only one file, which is why you need to make a testcase that more accurately reflects your problem.
[13:52:37] <dave0> fireworks outside
[13:52:41] <dave0> gonna look
[13:52:57] <trenka> covid inside :(
[13:53:03] <caze> Isn't it like a day early even for you?
[13:53:31] <trenka> start early, do longer!
[13:53:34] <dave0> yup it's new years eve eve (evening time) here
[13:54:31] <knittl> ouch. caze, redeclared the same array inside main. shadowed the global one :(
[13:54:32] *** Quits: rgrinberg (~textual@2806:265:5401:9431:e42d:e292:4d35:3f96) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:54:47] <knittl> thanks :)
[13:55:16] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[13:55:18] <caze> The process of creating a testcase is itself a bug finding process.
[13:56:13] *** Joins: haise01 (~haise01@user/haise01)
[13:57:25] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:57:55] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:59:25] *** Quits: haise01 (~haise01@user/haise01) (Remote host closed the connection)
[13:59:28] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:00:47] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[14:01:42] *** Joins: Klinda (~superleag@user/klinda)
[14:02:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[14:06:04] *** Joins: ko (~i.am@user/marlboro)
[14:06:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:11:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:13:01] *** Joins: Teckla (~Teckla@user/teckla)
[14:18:48] <chiselfuse> can i have scanf read up and discard all up to a certain sequence of characters? like:
[14:19:04] <chiselfuse> %*[^word]
[14:19:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:19:17] <chiselfuse> i just want %s but non-greedy
[14:20:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:22:35] *** Joins: earnestly (~earnest@user/earnestly)
[14:23:10] <chiselfuse> or if there's a better way to do it, i have a string "random_stuff_KEY_important_anotherKEY_random", i want to get out "important", where the logic is to get whatever is between the two keys
[14:25:12] <heiner_> What are the word separators, blanks?
[14:25:45] *** Joins: Rounin (~david@84.212.130.215)
[14:26:14] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 268 seconds)
[14:26:16] <chiselfuse> heiner_: ignore them, i just used _ to make words more readable
[14:26:46] *** Joins: wroathe (~wroathe@user/wroathe)
[14:26:56] <heiner_> could you use strtok_r() to parse the string from left to right until you find the keyword?
[14:27:46] <chiselfuse> first time i hear about this function, will read the manual and try
[14:28:28] <heiner_> scanf() is powerful, but it's easy to get surprising results. I rarely see it in production code.
[14:29:25] <chiselfuse> i just can't seem to find functionality to match a string in scanf though
[14:29:28] <heiner_> strtok() reads tokens separated by delimiters (as whitespace). strtok_r() does the same, but does not modify the input buffer
[14:29:56] <chiselfuse> i could also think of strcmp in a loop
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:27] *** Joins: Echoz (~chris@user/echoz)
[14:30:59] *** Joins: csrf (~csrf@user/csrf)
[14:31:35] <heiner_> indeed. strtok() simplifies separating the string into single words
[14:31:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[14:32:29] <trenka> heiner_: ```* These functions modify their first argument.```
[14:32:48] <trenka> heiner_: from man about both strtok and strtok_r
[14:33:05] <chiselfuse> what is the type of storage of the string returned by strtok?
[14:33:20] *** Joins: pulse (~pulse@user/pulse)
[14:33:23] <trenka> chiselfuse: the same at the first argument
[14:34:46] <heiner_> trenka: strtok_r() does not need to modify its first argument
[14:34:56] <chiselfuse> trenka: ```* These functions modify their first argument.```
[14:34:57] <chiselfuse> how
[14:34:58] <trenka> heiner_: it needs
[14:35:11] <heiner_> trenka: why?
[14:35:31] <heiner_> it has the saveptr to save the last position
[14:35:35] <trenka> heiner_: because it inserts \0 to return substrings the same way.
[14:35:35] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[14:36:17] *** Joins: useretailz (~useretail@31.41.69.140)
[14:36:36] <heiner_> trenka: well, the manual page suggests you're right
[14:36:40] <trenka> heiner_: or how can it work otherwise?
[14:37:07] <trenka> it can copy, but it's not the case
[14:37:32] <chiselfuse> this is all so destructive...
[14:37:35] <heiner_> As an alternative, strcspn() could be used to parse the input string
[14:38:09] <heiner_> you could specify delimiters using the  "reject" argument.
[14:38:24] <dave0> chiselfuse: is KEY literally the letters K E Y ?
[14:38:55] *** Joins: constxd_ (~brad@142.134.38.68)
[14:39:11] <dave0> chiselfuse: you can search for a string in a string with  strstr()
[14:39:18] <chiselfuse> dave0: it's more like "fgtauth?"
[14:39:19] <heiner_> disadvantage: you couldn't work with zero-terminated strings, but had to copy the relevant parts out of the source string yourself
[14:40:01] <chiselfuse> trenka: does it look for a delimiter and replace it with a \0 and return the token before it?
[14:40:04] <dave0> chiselfuse: if it's exactly those letters, you can use strstr() to find it
[14:40:17] <trenka> the thing with strtok_r is that you can use it for 2 string simultaniously
[14:40:29] <trenka> with strtok only one
[14:40:40] <dave0> chiselfuse: like    char *left = strstr(string, "fgtauth"); char *right = strstr(left+1, "fgtauth");
[14:40:43] <heiner_> indeed
[14:40:49] <trenka> chiselfuse: yes
[14:42:22] <heiner_> chiselfuse: there also is a regular expression library, but it's probably too much effort for your small problem.
[14:42:37] <chiselfuse> ^
[14:44:07] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 268 seconds)
[14:45:14] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[14:46:34] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 260 seconds)
[14:50:30] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[14:50:40] <chiselfuse> dave0: *haystack, const char *needle
[14:50:44] <chiselfuse> heh
[14:50:46] <chiselfuse> from manual
[14:51:49] *** Quits: kurfen (~kurfen@176.119.195.10) (Ping timeout: 250 seconds)
[14:52:30] *** Joins: palindrome (~palindrom@64.43.171.63)
[14:53:16] <palindrome> as a c newbie, is there anything that gives new type definitions for int float etc? something like i32, f32 and so on
[14:53:43] <Wulf> palindrome: you can use typedef.
[14:53:51] *** Joins: kurfen (~kurfen@176.119.195.10)
[14:54:50] *** Joins: bdax_ (~tom@05432be4.skybroadband.com)
[14:54:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[14:54:54] <palindrome> Wulf: sure, but I guess there is a std for that, well, maybe I am wrong
[14:55:29] *** Quits: constxd_ (~brad@142.134.38.68) (Quit: WeeChat 3.0.1)
[14:55:50] <zwr> the fixed-width types are almost there but not quite. you can have int32_t, uint16_t and so on types
[14:56:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:56:40] <zwr> if you want those very brief names you'll need your own typedefs. but you should just stick to the standard integer types
[14:57:58] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[15:01:04] *** Quits: Wulf (~Wulf@user/wulf) (Quit: leaving)
[15:02:01] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[15:02:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[15:03:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:03:35] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[15:04:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:04:51] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:05:12] <chiselfuse> char *left = strstr(string, "fgtauth"); char *right = strstr(left+1, "fgtauth");
[15:05:18] <chiselfuse> i don't understand left+1
[15:06:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38)
[15:06:43] <chiselfuse> it increments the pointer to point to the next char and passes it to strstr again?
[15:06:45] <chiselfuse> what for?
[15:07:29] <earnestly> "To look for a second fgtauth" is how I interpret it
[15:07:42] <palindrome> newbie question, if I have struct kprobe which has a const char *symbol_name, now instatiating this struct I am seeing, static struct Foo = { .symbol_name = Bar }, why the dot at the beggining of the symbol_name?
[15:07:46] <earnestly> (The increment being so that it doesn't find the same substring)
[15:08:43] <chiselfuse> earnestly: thanks
[15:09:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[15:09:22] <earnestly> palindrome: It's a designated intialiser, so that the assignment can be made to a specific named member
[15:09:43] <earnestly> palindrome: It's not part of the name, just syntax
[15:10:33] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:11:01] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 240 seconds)
[15:11:21] *** Joins: pulse (~pulse@user/pulse)
[15:11:21] *** Quits: pulse (~pulse@user/pulse) (Client Quit)
[15:11:48] <palindrome> earnestly: thanks
[15:12:09] <earnestly> initializer*
[15:16:03] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[15:16:20] *** Quits: ychaouche (~chatzilla@user/ychaouche) (Remote host closed the connection)
[15:17:25] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 240 seconds)
[15:18:31] <heiner_> palindrome: regarding your data types question: the header file <stdint.h> defines standard types, e.g. uint32_t etc. The types you mentioned seem to belong to the Rust programming language.
[15:23:45] <palindrome> heiner_: yes, they are, or to holy C I guess, hehe. Was just an example :)
[15:24:27] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[15:24:47] *** Joins: kts (~kts@103.73.237.125)
[15:25:13] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[15:29:04] *** Joins: frost (~frost@user/frost)
[15:29:41] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:29:59] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:30:20] *** Joins: foul_owl (~kerry@94.140.8.106)
[15:30:23] *** Joins: ychaouche (~chatzilla@user/ychaouche)
[15:30:38] <ychaouche> yeah, it's the way I call the binary that causes problem
[15:30:43] *** Quits: kts (~kts@103.73.237.125) (Quit: Konversation terminated!)
[15:30:49] <ychaouche> I think I'm going to end up chrooting it at some point
[15:34:16] <ychaouche> unless there's some trick to change this : readlink("/proc/self/exe", "/usr/local/lib64/ld-2.31.so", 4095) = 27; into something like this readlink("/proc/self/exe", "/tmp/.mount/usr/bin/waterfox, ??) = ??
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:39] *** Joins: Wulf (~Wulf@user/wulf)
[15:41:39] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[15:43:42] *** Joins: kts (~kts@103.73.237.125)
[15:44:25] *** Quits: kts (~kts@103.73.237.125) (Client Quit)
[15:45:20] *** Joins: kts (~kts@103.73.237.125)
[15:45:23] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:47:19] *** Quits: kts (~kts@103.73.237.125) (Client Quit)
[15:48:03] *** Joins: kts (~kts@103.73.237.125)
[15:48:18] *** Quits: kts (~kts@103.73.237.125) (Client Quit)
[15:48:32] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[15:50:28] <ychaouche> hum... ldd can be replaced by LD_TRACE_LOADED_OBJECTS=1 ?
[15:50:45] <ychaouche> it seems like a thin wrapper around that
[15:50:55] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[15:52:53] *** Joins: shivesh (~shivesh@user/shivesh)
[15:53:21] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[15:54:22] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[15:54:51] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[15:55:43] *** imm__ is now known as imm_
[15:56:54] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[15:57:34] *** Joins: kts (~kts@103.73.237.125)
[15:59:31] <ychaouche> what's a script-friendly output to ldd ? I need only the libraries a binary depends on, not the paths
[15:59:43] <ychaouche> ldd or other tool
[16:00:12] <ychaouche> objectdump -p for example, but I can see a difference b/w objectdump -p | grep NEEDED and ldd (more libs listed by ldd)
[16:02:57] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[16:03:31] *** Quits: gitargy_ (~gitargy@072-182-019-212.res.spectrum.com) (Remote host closed the connection)
[16:05:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:06:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:08:00] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:10:22] *** Joins: Akawama[m] (~akawama@user/akawama)
[16:11:26] *** Quits: kts (~kts@103.73.237.125) (Quit: Konversation terminated!)
[16:12:58] *** Joins: Teckla (~Teckla@user/teckla)
[16:14:37] *** Quits: chenqisu12 (~bhca7d@183.217.200.22) (Ping timeout: 240 seconds)
[16:15:47] <earnestly> The 'path' is the dependency, even if it's just the filename, which ldd does produce
[16:16:01] <earnestly> (And yes, ldd executes the file to get this information)
[16:18:55] *** Quits: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[16:19:02] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com)
[16:26:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[16:27:06] *** Joins: sweetsymphony (~bitterswe@2405:6e00:291:ea7f:9917:e1c1:982e:5c69)
[16:29:32] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:f21:c523:df9b:fe11)
[16:29:52] <sham1> Does it? Or does it just look into the metadata
[16:30:07] <sham1> Because the ELF headers will contain the required shared libraries
[16:30:16] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[16:30:19] <neiluj> Hi! Can you pass an array to a function call "inline": f({1,2,3})?
[16:30:45] <sham1> I think you'll need something like f((int[]){1, 2, 3}) but IIRC that should work with recent-ish C
[16:31:30] <neiluj> it seems to work(the linter accepts it), many thanks sham1!
[16:33:17] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Ping timeout: 268 seconds)
[16:34:37] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[16:35:29] <NRK[m]> i don't think it passes an "array" though, probably a pointer
[16:36:00] <NRK[m]> are compound literals static storage duration and read-only similar with string literals?
[16:36:04] <neiluj> yes, a pointer, that's what I wanted
[16:36:41] <neiluj> an array is just a pointer to the first element if i remember correctly
[16:36:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[16:37:20] <NRK[m]> yes, basically.
[16:37:27] <NRK[m]> though, not entirely.
[16:37:46] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:38:10] <neiluj> not entirely? is there a distinction between stack allocated arrays or heap allocated ones?
[16:38:54] <NRK[m]> not entirely because an array also allocates space, a pointer doesn't
[16:39:12] <neiluj> oh indeed
[16:39:27] <caze> neiluj: You cannot pass arrays in C.
[16:40:58] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[16:41:03] *** Joins: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr)
[16:41:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:41:55] <NRK[m]> i remember seeing `fun(int a[static 5])` or something along those lines. not sure if it's later C addition, compiler extension or just a c++ thing
[16:42:25] <caze> NRK[m]: That's an overloading of the static keyword that has nothing to do with its meaning in other contexts.
[16:42:32] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[16:42:32] <neiluj> caze: oh, so f(char a[4]) is not a valid signature?
[16:43:04] <neiluj> did it a few time
[16:43:09] <caze> neiluj: It is, but it is interpreted as char *a;
[16:43:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:43:23] <neiluj> ah, see
[16:43:24] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com) (Read error: Connection reset by peer)
[16:43:39] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:43:43] <NRK[m]> caze: not sure i follow
[16:44:10] *** Quits: palindrome (~palindrom@64.43.171.63) (Quit: WeeChat 3.3)
[16:44:35] <caze> NRK[m]: Just pretend in that example, instead of using "static", they made a new keyword that was "minimin_number_of_elements".
[16:45:48] <NRK[m]> is that valid C or extension
[16:46:02] <caze> Standard since C99, I believe.
[16:46:43] <caze> ,c99 6.9.6.3p7
[16:46:43] <candide> No such section '6.9.6.3' in C99 Draft Standard (n1256).
[16:46:49] <NRK[m]> hmm, good to know. i feel like it's probably c11 tho.
[16:46:57] <caze> ,c99
[16:46:57] <candide> C99 + TC1,2,3 working paper: http://open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf - C99 Overview: http://en.wikipedia.org/wiki/C99 - Changes from C89/C90: http://home.datacomm.ch/t_wolf/tw/c/c9x_changes.html - C Overview: http://en.wikipedia.org/wiki/C_programming - HTML version: http://port70.net/~nsz/c/c99/n1256.html
[16:48:14] <NRK[m]> "keyword static in array indices in parameter declarations"
[16:48:20] <NRK[m]> ahh, ok. so it's c99
[16:48:51] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.5-dev)
[16:48:54] <NRK[m]> `static` has 3 different meanings then. or are they more?
[16:49:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[16:49:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[16:49:00] *** Joins: wroathe (~wroathe@user/wroathe)
[16:49:09] <NRK[m]> s/they/there/
[16:49:16] <caze> ,c99 6.7.5.3p7
[16:49:18] <candide> http://www.iso-9899.info/n1256.html#6.7.5.3p7 [Function declarators (including prototypes)] A declaration of a parameter as ``array of type'' shall be adjusted to ``qualified pointer to type'', where the type qualifiers (if any) are those specified within the [ and ] of the array type derivation. If the keyword static also appears within the [ and ] of the array type derivation, then for each call to the ... <truncated; https://0x0.st/osZ8.txt>
[16:49:40] <caze> I thought there were 4.
[16:50:41] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[16:51:01] <NRK[m]> what's the forth? i'm lumping static funtions and static globals together.
[16:51:05] *** Joins: inomoz (~inomoz@85.26.233.222)
[16:53:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[16:54:54] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[16:55:05] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:55:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[16:56:13] *** Joins: bbju (~bbju@103.144.149.218)
[16:56:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[16:56:23] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[16:56:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[16:57:20] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[16:57:43] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:57:57] <nomagno> Is clock() a good way to measure millisecond intervals if you only care about more or less precise sub-second timing?
[16:58:12] <nomagno> Or at least consistent
[17:00:56] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-96.cspire.com)
[17:03:20] *** Joins: lisbeths` (~user@c-73-83-140-133.hsd1.wa.comcast.net)
[17:04:11] *** Quits: hinata (~hinata@2409:4042:d94:5be6:490a:9551:f82e:7e4f) (Quit: Leaving)
[17:09:03] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[17:11:30] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 268 seconds)
[17:16:00] *** Quits: bbju (~bbju@103.144.149.218) (Killed (ozone (No Spam)))
[17:17:10] *** Joins: bbju (~bbju@103.144.149.53)
[17:17:17] *** Joins: palindrome (~palindrom@64.43.171.63)
[17:18:41] <fizzie> `clock` measures CPU time, which may or may not be what you want; it certainly isn't a great choice if what you want is elapsed real time.
[17:18:51] <cehteh> its highly portable but not necessarly the best, it doesnt define accuracy for example, it may advance in too big steps
[17:19:31] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[17:19:53] <fizzie> ,cc clock_t start = clock(); sleep(1); clock_t end = clock(); printf("sleep(1) took %g seconds", (double)(end - start) / CLOCKS_PER_SEC); // if these sort of results are what you expect...
[17:19:57] <candide> fizzie: sleep(1) took 0.000151 seconds
[17:20:08] <cehteh> on posix systems check out the more modern clock_*() things glock_gettime etc
[17:20:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:21:39] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:21:41] *** Joins: mendel_munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[17:22:35] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:22:49] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:23:55] *** Joins: agonhajdari (~textual@user/agonhajdari)
[17:24:25] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 256 seconds)
[17:24:30] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Quit: leaving)
[17:25:00] *** Joins: srji (~srji@p5499dc4a.dip0.t-ipconnect.de)
[17:25:13] <lisbeths`> https://www.toptal.com/developers/hastebin/raw/mijerovude why is this repl able to print strings of more than 100 characters
[17:25:21] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 245 seconds)
[17:31:15] *** Quits: mendel_munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Remote host closed the connection)
[17:31:40] *** Joins: mendel_munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[17:31:53] <fizzie> Because `fgets(..., 100, ...)` will read up to 99 characters and then leave the rest of the incomplete line in the input stream.
[17:32:09] <fizzie> It'd work with any buffer of size > 1.
[17:32:51] <lisbeths`> but if it reads up to 99 characters then when I go to print what is in that string it shoudl only print back 99 characters
[17:33:03] <fizzie> It does. Then the next iteration of the loop prints the rest.
[17:33:19] <lisbeths`> oh I see I am just stupid
[17:33:22] <lisbeths`> thank you
[17:33:26] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:34:26] <fizzie> You can do `printf("[%s]", input_buffer);` or something instead of fputs to see how it's broken up if you like.
[17:34:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[17:37:26] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[17:38:24] *** Joins: Teckla (~Teckla@user/teckla)
[17:39:00] <lisbeths`> thats okay that issue is solved
[17:40:23] *** Joins: plastico (~plastico@neomutt/plastico)
[17:42:40] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[17:43:39] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:50:49] *** Joins: nostar (~nostar@68.51.221.108)
[17:54:33] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[17:54:49] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[17:56:18] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:57:36] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[17:58:25] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[18:00:05] *** Quits: sweetsymphony (~bitterswe@2405:6e00:291:ea7f:9917:e1c1:982e:5c69) (Quit: sweetsymphony)
[18:03:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[18:03:38] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[18:04:21] *** Joins: Teckla (~Teckla@user/teckla)
[18:04:37] *** Joins: plantman (~plantman@2601:405:4680:1b0::3)
[18:05:04] *** Joins: Wulf (~Wulf@user/wulf)
[18:08:24] *** Joins: wroathe (~wroathe@user/wroathe)
[18:10:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081)
[18:10:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081) (Changing host)
[18:10:16] *** Joins: skapata (~Skapata@user/skapata)
[18:12:34] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[18:12:35] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[18:14:14] *** Joins: Wulf (~Wulf@user/wulf)
[18:14:30] *** Quits: ychaouche (~chatzilla@user/ychaouche) (Remote host closed the connection)
[18:15:04] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[18:15:11] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:19:38] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:22:11] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[18:24:02] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[18:24:50] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:24:54] *** Quits: tafa (~tafa@user/tafa) (Quit: ZNC - https://znc.in)
[18:25:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[18:26:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[18:26:33] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[18:26:35] *** Joins: tafa (~tafa@user/tafa)
[18:27:42] *** Joins: duuude (~user@user/duuude)
[18:28:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:28:23] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:29:38] *** Joins: et09 (~et09@user/et09)
[18:33:34] *** Joins: WAR10CK (~WAR10CK@14.223.181.120)
[18:36:36] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[18:37:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:37:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:42:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[18:43:13] *** Quits: bbju (~bbju@103.144.149.53) (Quit: Client closed)
[18:44:19] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Quit: Leaving)
[18:44:45] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:45:52] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:46:20] *** Joins: Akuli (~Akuli@85-76-111-135-nat.elisa-mobile.fi)
[18:55:19] *** Quits: lisbeths` (~user@c-73-83-140-133.hsd1.wa.comcast.net) (Remote host closed the connection)
[18:55:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:55:40] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[18:56:02] *** flooded is now known as _flood
[18:58:45] *** Joins: cousteau (~cousteau@user/cousteau)
[18:59:30] *** Joins: meator (~meator@user/meator)
[19:00:47] *** Joins: nuxil (~nuxil@141.195.51.213)
[19:01:51] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:02:35] <nomagno> I guess I'll just write a wrapper
[19:03:22] <nomagno> if I have POSIX/Win32, I use those. Else just (clock() / CLOCKS_PER_SEC)
[19:08:45] *** Joins: malina (~malina@user/malina)
[19:10:35] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:10:52] *** Joins: Crassus (~Crassus@user/crassus)
[19:11:41] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:11:46] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:11:46] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:11:46] *** Joins: wroathe (~wroathe@user/wroathe)
[19:12:31] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[19:14:01] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:15:39] *** Joins: mrig (~mrig@user/mrig)
[19:16:07] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[19:16:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:19:13] *** Joins: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[19:19:21] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Read error: Connection reset by peer)
[19:23:24] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[19:24:25] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[19:26:11] *** Quits: bdax_ (~tom@05432be4.skybroadband.com) (Remote host closed the connection)
[19:28:43] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[19:29:27] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[19:30:08] *** Quits: hedaera[m] (~hedaerama@2001:470:69fc:105::1:3ef1) (Quit: You have been kicked for being idle)
[19:30:19] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:30:19] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:30:19] *** Joins: wroathe (~wroathe@user/wroathe)
[19:30:58] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[19:31:38] *** Joins: AmR (~AmREiSa@156.199.202.96)
[19:32:47] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:34:41] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:35:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:39:08] *** Joins: pulse (~pulse@user/pulse)
[19:49:29] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:50:36] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[19:51:20] *** Joins: useretailz (~useretail@31.41.69.140)
[19:51:29] *** Quits: magla (~gelignite@55d48631.access.ecotel.net) (Quit: Stay safe!)
[19:56:51] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[20:00:01] *** Joins: Burgundy (~yomon@79.115.213.171)
[20:00:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:03:19] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[20:05:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:05:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:06:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:07:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:08:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:08:25] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:08:25] *** Joins: wroathe (~wroathe@user/wroathe)
[20:08:28] *** Joins: Macuser (~Macuser@2600:1003:b450:7f34:8c0d:7505:22ed:e35b)
[20:08:38] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Read error: No route to host)
[20:08:57] *** Joins: mahmutov (~mahmutov@37.155.21.58)
[20:12:19] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[20:14:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:16:04] *** Joins: Darkcoal (~user@167.86.137.72)
[20:16:22] *** Quits: Darkcoal (~user@167.86.137.72) (Client Quit)
[20:16:39] *** Joins: Darkcoal (~user@167.86.137.72)
[20:19:04] *** Joins: masterbuilder (~user@user/masterbuilder)
[20:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:23:45] *** Quits: bkhl[m] (~bkhl@user/bkhl) (Quit: issued !quit command)
[20:24:12] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:25:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:25:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:25:47] *** Joins: bkhl (~bkhl@user/bkhl)
[20:26:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:26:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:27:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:28:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Remote host closed the connection)
[20:30:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80::47)
[20:31:01] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[20:31:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::47) (Excess Flood)
[20:31:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:33:33] *** Quits: Torr (~Torr@user/torr) ()
[20:33:44] *** Joins: Torr (~Torr@user/torr)
[20:33:56] *** Quits: Torr (~Torr@user/torr) (Client Quit)
[20:34:10] *** Joins: Torr (~Torr@user/torr)
[20:36:42] <sham1> Well 99+% of cases either will be available
[20:37:00] *** Quits: fe23 (~fe23@2409:8a34:468:10c0:924:197e:4c9d:ac18) (Quit: fe23)
[20:37:13] *** Quits: Darkcoal (~user@167.86.137.72) (Quit: Darkcoal)
[20:37:27] *** Joins: Darkcoal (~user@167.86.137.72)
[20:37:29] *** Quits: Darkcoal (~user@167.86.137.72) (Client Quit)
[20:37:39] *** Joins: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[20:38:44] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[20:38:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[20:41:29] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[20:41:47] <useretailz> unsigned char *md; // is there a way to printf md in hex?
[20:41:59] <johnjaye> %x ?
[20:42:05] <knittl> the pointer or the value pointed-to?
[20:42:38] <useretailz> johnjaye, i believe %x is for int
[20:42:44] <johnjaye> that sounds like the answer from a philosopher. do you mean the referent of the thing or the thing in itself
[20:42:49] <sham1> You convert md to uintptr_t
[20:43:14] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 252 seconds)
[20:43:54] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[20:44:08] <sham1> Of course this assumes that such a type exists, but that's very likely
[20:44:36] *** Quits: Macuser (~Macuser@2600:1003:b450:7f34:8c0d:7505:22ed:e35b) (Quit: Textual IRC Client: www.textualapp.com)
[20:45:17] <johnjaye> useretailz: c converts from char to int in other places like reading from a file
[20:47:01] <useretailz> it's a mystery to me because earlier in the code i saw a function that accepts md as void *md
[20:47:14] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[20:47:15] *** Joins: Torr (~Torr@user/torr)
[20:47:18] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[20:47:29] *** Inline__ is now known as Inline
[20:47:30] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:48:02] <useretailz> and it compiles without any warnings
[20:48:26] <trenka> useretailz: void * is special
[20:48:32] <sham1> Well a valid data pointer can be implicitly converted to a void pointer
[20:48:50] <sham1> And vice versa, although you must convert back to the same type as what you originally had
[20:50:17] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:50:35] <johnjaye> void means something like "any pointer" doesn't it
[20:50:48] <johnjaye> or does it sometimes mean a general but not defined pointer?
[20:51:27] <sham1> I'd say it's closer to the latter, although I'm not totally sure if the spec language would corroborate that
[20:51:35] <sham1> Can't even do pointer arithmetic on them
[20:51:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[20:53:34] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:54:32] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[20:55:28] *** Joins: Guest15 (~Guest15@pool-108-17-122-33.pitbpa.fios.verizon.net)
[20:55:32] *** Quits: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 240 seconds)
[20:56:47] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[20:57:31] *** Joins: Darkcoal (~user@167.86.137.72)
[20:59:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:59:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:59:53] *** Joins: wroathe (~wroathe@user/wroathe)
[21:01:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[21:03:14] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[21:03:53] <johnjaye> well that makes sense if it's an indeterminate type
[21:04:04] <johnjaye> i meant what is the purpose of having an indeterminate type to begin with
[21:04:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:44ee:eade:13ad:a4fd)
[21:04:19] <johnjaye> like can you subsitute 'char', 'int', 'short', etc and have the thing still make sense for example
[21:04:52] <johnjaye> iirc void is like so you can cast stuff or something
[21:04:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:05:01] <johnjaye> void * that is
[21:05:43] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:05:44] <sham1> IIRC the point is to be able to hold any given data pointer
[21:05:57] <Learath2> Well the point is sometimes you want generic things. e.g. a generic container
[21:06:34] <johnjaye> like if i need a list of items of different types? like in python a list [1,"a", True]
[21:06:48] <johnjaye> or maybe a linked list of void *
[21:08:09] <sham1> Well I'd say that even in Python and such, having heterogenious lists like that is usually a bad sign, unless you're actually using them as tuples of sorts
[21:08:16] <sham1> As in, they'd have a fixed size
[21:08:20] <Learath2> You could store different types but then you'd need to keep track of the type externally, which you'd usually use a union for instead of a void *
[21:08:39] <johnjaye> ok. i should probably stop being socratic for a moment and do some work though
[21:08:41] <Learath2> What I meant by generic container was more to highlight the fact that you don't need to reimplement the container for different types
[21:08:46] <johnjaye> although this line of argument is fun
[21:09:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:10:42] *** Joins: rgrinberg (~textual@187.223.75.25)
[21:11:40] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[21:15:52] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[21:15:52] *** Quits: WAR10CK (~WAR10CK@14.223.181.120) (Remote host closed the connection)
[21:19:55] *** Joins: duuude (~user@user/duuude)
[21:21:08] *** Joins: agonhajdari (~textual@user/agonhajdari)
[21:21:35] *** Joins: etolier_ (~somewhere@116-255-9-224.ip4.superloop.com)
[21:22:57] *** Quits: etolier (~somewhere@125-63-6-35.ip4.superloop.com) (Ping timeout: 240 seconds)
[21:24:58] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[21:34:11] *** Joins: Betal (~Betal@user/betal)
[21:41:01] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[21:41:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[21:41:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:43:28] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 268 seconds)
[21:45:10] *** Joins: johnjaye (~pi@154.6.152.74)
[21:45:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[21:46:21] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:50:13] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[21:52:16] *** Joins: Fr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net)
[21:53:18] *** Quits: Fr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net) (Client Quit)
[21:54:54] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:55:51] *** Quits: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[21:55:55] *** Quits: cousteau (~cousteau@user/cousteau) (Read error: Connection reset by peer)
[21:56:17] *** Quits: AmR (~AmREiSa@156.199.202.96) (Quit: Konversation terminated!)
[21:56:59] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[21:57:47] *** Joins: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr)
[21:57:50] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[21:58:32] *** Joins: johnjaye (~pi@154.6.152.74)
[21:59:59] *** Joins: monkey_ (~user@190.104.116.153)
[22:00:02] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:01:52] *** Joins: meator (~meator@user/meator)
[22:03:45] <concrete-houses> c web framework adn 60s style non relatonal file databses is the dream! unless I do it in forth!
[22:03:48] <concrete-houses> whew wee
[22:03:53] <concrete-houses> work comedy with all this amazon crud
[22:04:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[22:05:15] <johnjaye> where do i find what preprocessor symbols are used for?
[22:05:27] *** Joins: Fr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net)
[22:05:39] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:05:53] <johnjaye> i tried to lookup __EXT1_VISIBLE and that led me to __STDCD_LIB_EXT1_VISIBLE
[22:06:07] <johnjaye> which has something to do with microsoft _s functions.
[22:06:16] <johnjaye> sorry STDC
[22:06:24] <omegatron> look into the source code (including heade files)
[22:06:36] <johnjaye> i did that.
[22:06:40] <johnjaye> that's why i'm asking
[22:07:21] *** Quits: synbiose (~synbiose@user/synbiose) (Remote host closed the connection)
[22:07:56] <omegatron> ok .. you know how to find the exact definition of a preprocessor symbol, when you compile a file?
[22:08:32] <johnjaye> there's a gcc flag for it yeah. don't recall offhand
[22:09:15] <johnjaye> i'm looking for documentation.
[22:09:49] <johnjaye> i found a SO question talking about it and it cited some technical report the C11 committee issued
[22:10:07] <johnjaye> so im guessing it's something the standard requires
[22:10:21] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[22:11:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:11:03] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:11:03] *** Joins: wroathe (~wroathe@user/wroathe)
[22:13:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:13:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[22:18:05] *** Joins: AmR (~AmREiSa@156.199.202.96)
[22:18:41] *** Joins: learner-monad (~ehanneken@user/learner-monad)
[22:20:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[22:20:27] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 268 seconds)
[22:21:44] <nomagno> Practically speaking, why is it undefined to attempt to longjmp() on an environment that wasn't the last one setjmp()'d?
[22:21:51] *** Joins: monkey_ (~user@190.104.116.153)
[22:22:07] *** Joins: synbiose (~synbiose@user/synbiose)
[22:24:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[22:28:43] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:28:45] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[22:30:09] <fizzie> That's not what's undefined.
[22:30:22] *** Quits: plantman (~plantman@2601:405:4680:1b0::3) (Quit: Leaving)
[22:30:34] <fizzie> Why do you think it is?
[22:30:43] *** Joins: johnjaye (~pi@154.6.152.74)
[22:32:27] <sham1> I'd think it'd only be undefined if you tried to jump deeper within your activation records
[22:32:36] <sham1> But even then probably not
[22:33:48] <fizzie> There's a _lot_ that's undefined with setjmp/longjmp, including many non-obvious things, but that's not one of them.
[22:34:18] *** Quits: mixfix41 (~homefame@user/mixfix41) (Read error: Connection reset by peer)
[22:34:19] <fizzie> ,cc jmp_buf j1, j2; if (setjmp(j1) != 0) { printf("3"); exit(0); } if (setjmp(j2) != 0) { printf("2"); longjmp(j1, 1); } printf("1"); longjmp(j2, 1); // nothing wrong with this
[22:34:22] <candide> fizzie: 123
[22:37:49] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:38:13] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Read error: No route to host)
[22:39:10] <fizzie> Some things that _are_ undefined are: jumps where the function where the function containing the corresponding `setjmp` call has already exited; or if the `setjmp` was in the scope of a variable-length array and it has left that scope; accessing any objects of automatic storage that have been changed between the `setjmp` and `longjmp` (which have indeterminate values); calling `setjmp` outside one of
[22:39:12] <fizzie> the specifically allowed contexts.
[22:39:55] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[22:40:54] <sham1> I dislike that libpng uses longjmp. It makes code annoyinff
[22:41:43] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:41:43] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:41:43] *** Joins: wroathe (~wroathe@user/wroathe)
[22:41:43] *** Joins: agonhajdari (~textual@user/agonhajdari)
[22:43:11] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[22:44:31] <spidermonkey54> Here is an interview question. A large application written in C has memory leaks which happens when program runs for at least a day. How would you find what causes it?
[22:45:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:46:00] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Read error: No route to host)
[22:46:45] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[22:48:00] <johnjaye> according to nintendo team for dk64 you don't. you just provide a large memory add-on and tell people they have to buy it
[22:48:00] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[22:49:36] <spidermonkey54> I would say something like "look for every malloc and make sure there is a 'free' for it or use valgrind", other than that I actually don't know
[22:54:12] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:54:22] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[22:54:37] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:55:17] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[22:56:20] *** Quits: rgrinberg (~textual@187.223.75.25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:00:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[23:01:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:44ee:eade:13ad:a4fd) (Quit: Quit)
[23:01:32] *** Joins: zer0bitz (~zer0bitz@194.34.133.91)
[23:03:01] <fizzie> There are other tools as well. LeakSanitizer, a component of AddressSanitizer, is a pretty popular one; probably has much less of a runtime overhead than valgrind on average. And even less intrusively, there are things just replace malloc/free with tracking of live allocations, so you could get a report of where things that hadn't been free'd were allocated from.
[23:06:05] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[23:06:51] *** Joins: useretailz (~useretail@31.41.69.140)
[23:08:17] <sham1> johnjaye: https://groups.google.com/forum/message/raw?msg=comp.lang.ada/E9bNCvDQ12k/1tezW24ZxdAJ
[23:09:06] <sham1> Soâ€¦ just strap the program onto a missile and watch as the memory leaks fix themselves upon payload delivery
[23:11:13] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[23:12:31] <sham1> And yeah. I personally like ASan more than Valgrind even though Valgrind is also nice. ASan doesn't make the program craw
[23:12:33] <sham1> crawl*
[23:12:58] <fizzie> Maybe you could also mention something about taking snapshots over time and looking at the numbers (grouped by, say, stack trace at point of allocatin) to filter out the normal noise of the application and pinpoint which specific source of allocations is monotonically growing. But if feels like there fundamentally isn't all that much to talk about the question.
[23:13:56] <sham1> Just free whatever you allocate, easy
[23:14:22] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[23:14:24] <spidermonkey54> I guess they are trying to question your memory debugging skills. btw how do you take snapshots of a running program? just collect memory dumps?
[23:16:23] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:16:56] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[23:17:01] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[23:17:48] <fizzie> I don't know which C tools would make that particularly convenient. Valgrind has a gdbserver thing for extracting information about a live process.
[23:19:14] <fizzie> Maybe looking for a "memory profiler" type of tool rather than a conventional leak-checker would be useful too.
[23:21:18] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 260 seconds)
[23:22:45] <fizzie> (For example, Google's got that thing that's more C++-oriented, but I imagine it ought to work for C programs too; you can ask it to subtract two profiles to see what's changed.)
[23:22:59] *** nuxil_ is now known as nuxil
[23:24:23] *** Joins: strajder (~strajder@user/strajder)
[23:27:00] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:29:20] *** Joins: wroathe (~wroathe@user/wroathe)
[23:29:45] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[23:30:15] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[23:31:17] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[23:31:34] *** Joins: duuude (~user@user/duuude)
[23:33:36] *** Joins: Feuermagier_ (~Feuermagi@84.17.49.78)
[23:34:27] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[23:35:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 240 seconds)
[23:35:57] *** Quits: useretailz (~useretail@31.41.69.140) (Read error: Connection reset by peer)
[23:36:48] *** Joins: useretailz (~useretail@31.41.69.140)
[23:37:00] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[23:37:45] *** Joins: jan_ (~jan@deg219.neoplus.adsl.tpnet.pl)
[23:42:07] <jan_> Does anyone have an idea why in style guide of plan9 there is this rule: automatic variables (local variables inside a function) are never initialized at declaration. What was the reasoning behind that?
[23:43:11] *** jan_ is now known as cherrry9
[23:47:01] *** Joins: Guest16 (~Guest16@151.29.94.152)
[23:47:18] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:48:33] <sham1> Probably something to do with listing all the automatic variables at the beginning of the block
[23:48:37] <sham1> I'd imagine
[23:48:40] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:52:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:56:08] *** Joins: MrFantastik (~f@2607:f598:bbda:10:4e9d:551a:bc14:258e)
[23:57:43] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[23:59:06] *** Quits: euandreh (~euandreh@191.181.59.160) (Ping timeout: 245 seconds)
[23:59:30] <omegatron> jan_: http://doc.cat-v.org/plan_9/  and https://9p.io/wiki/plan9/plan_9_wiki/  there is a lot to read for you, if you dare
