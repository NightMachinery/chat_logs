[00:00:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:01:08] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:01] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[00:03:20] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:04:23] *** Joins: kristianpaul (~paul@user/kristianpaul)
[00:04:50] *** Quits: syllin (~syllin@user/syllin) (Quit: The Lounge - https://thelounge.chat)
[00:05:12] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:05:32] *** Joins: zebrag (~chris@user/zebrag)
[00:05:35] *** Joins: syllin (~syllin@user/syllin)
[00:05:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:06:03] *** Joins: nmoura (~nmoura@177.192.16.58)
[00:06:39] *** Joins: wyclif (~wyclif@user/wyclif)
[00:06:47] *** Quits: magla (~gelignite@55d493d3.access.ecotel.net) (Quit: Stay safe!)
[00:08:00] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[00:10:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:12:55] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[00:13:09] *** Joins: int (~int@0x4.cx)
[00:13:14] *** Joins: rndusr (~rndusr@user/rndusr)
[00:13:25] <rndusr> hey
[00:13:37] <rndusr> is there a way for argparse to do something like this?
[00:13:52] <rndusr> ./program.py --exclude file.py --exclude anotherfile.py
[00:14:01] <rndusr> and have the file.py and anotherfile.py in an array?
[00:14:03] <grym> rndusr: what would that do
[00:14:17] <grym> ah, repeat options
[00:14:19] <syllin> https://stackoverflow.com/questions/36166225/using-the-same-option-multiple-times-in-pythons-argparse
[00:14:54] <grym> rndusr: i think you want action="append" and nargs="*"
[00:15:05] <rndusr> thanks
[00:15:22] <grym> rndusr: https://docs.python.org/3/library/argparse.html#action
[00:15:24] <rndusr> nargs="*" means that there can be a undefined amount of --excludes?
[00:15:24] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:15:39] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[00:15:40] <grym> yes
[00:15:45] <grym> if you want one or more i think it's +
[00:16:27] <grym> if you want between 1 and 5 or something, you'll have to check the length after you parse the arguments
[00:16:30] <grym> (i think)
[00:17:49] *** Quits: Liblx (~Alex@2a02:810c:280:59c:68e7:d569:ad47:d289) (Quit: WeeChat 3.2)
[00:18:09] *** Quits: armin (~armin@unix.porn) (Read error: Connection reset by peer)
[00:20:58] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:22:48] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Read error: Connection reset by peer)
[00:24:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[00:24:42] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[00:25:37] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:26:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[00:26:18] *** Joins: k5tux (~k5tux@67.6.11.151)
[00:27:39] *** Joins: wyclif (~wyclif@user/wyclif)
[00:28:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b) (Quit: Leaving)
[00:30:07] *** Joins: t3nj1n (~t3nj1n@108.5.82.237)
[00:30:31] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:31:44] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[00:32:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:33:09] *** Joins: wyclif (~wyclif@user/wyclif)
[00:33:09] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[00:33:22] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[00:33:40] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[00:35:37] *** Joins: Jmtrix (~qed@user/jmtrix)
[00:39:06] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[00:42:10] *** Quits: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[00:42:19] *** Joins: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at)
[00:42:43] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:42:57] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[00:43:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:43:01] *** Joins: nmoura (~nmoura@177.192.16.58)
[00:44:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[00:44:01] <Staunch> how do i properly declare a type that is a tuple of a datetime and timedelta objects? I wrote Tuple[datetime, timedelta] and get back "Parameters to generic types must be types"
[00:44:12] *** Joins: wyclif (~wyclif@user/wyclif)
[00:44:33] <Staunch> sorry, there's this too: "Got slice(typing.Tuple[str, int], typing.Tuple[datetime.datetime, datetime.timedelta], None)"
[00:44:50] <Staunch> oh, wait, i think i got it, i put a : instead of a ,
[00:44:52] *** Joins: visl_ (visl@user/visl)
[00:45:01] *** Joins: audiocat (~audio@2603-8081-1800-00ad-8559-36e1-d844-8055.res6.spectrum.com)
[00:45:02] <ssbr> Excellent rubber duck session. :D
[00:45:21] <Staunch> thank you all for joining me :quack:
[00:46:42] <CrtxReavr> I'm working with complex json, which of course I'm manipulating as a dict in Pythong: https://bpa.st/H4OA
[00:47:02] <CrtxReavr> Is there a way to "shorthand" these deep paths?
[00:47:22] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[00:48:17] <nedbat> CrtxReavr: it seems odd that you aren't using the loop variable in the loop
[00:48:20] <grym> CrtxReavr: glom
[00:48:35] <grym> (but it's a very different pattern, maybe)
[00:48:45] <CrtxReavr> nedbat, that comes in further down.
[00:49:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:49:42] *** Joins: wyclif (~wyclif@user/wyclif)
[00:50:28] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:50:33] *** Joins: Fiji (~Fiji@user/fiji)
[00:50:48] <nedbat> CrtxReavr: there isn't a way to shorten those paths.  Deep json is deep.
[00:52:23] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:52:28] <CrtxReavr> nedbat, thanks. . . I was racking my brain but not coming up with anything.
[00:52:56] <CrtxReavr> What I'm doing here isnt' that complex, but the juicy bits I'm working with are very deep within the payload.
[00:53:15] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:34] <ssbr> CrtxReavr: sometimes some cloud APIs have ways to only return the (potentially deeply nested) part of the payload you'll actually *use*, but that's the only thing I can think of that would really make a big dent.
[00:54:47] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[00:54:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[00:55:08] <grym> https://glom.readthedocs.io/en/latest/mutation.html can often be helpful to do this when your data structure is heterogenous
[00:55:11] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[00:55:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:55:15] <grym> since the error handling is nicer
[00:55:40] <grym> you can also build a list of filter strings and use them instead of typing all the time; ymmv on if that's useful for your use case
[00:56:34] <CrtxReavr> ssbr, sadly this one doesn't. . . here's a visual: https://bpa.st/PLOQ
[00:58:16] *** Joins: nmoura (~nmoura@177.192.16.58)
[01:00:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[01:00:25] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[01:00:44] *** Joins: wyclif (~wyclif@user/wyclif)
[01:02:19] <caveman> how to combine common parts in exceptinos?
[01:02:36] <caveman> https://gist.github.com/e0a6e9f317ca84ad03bddd0a16150c1c
[01:02:45] *** Quits: oxipital (~oxipital@165.225.60.216) (Quit: Ping timeout (120 seconds))
[01:02:48] <caveman> the part sys.exit(1) is common.  how to simplify the code?
[01:03:26] <supakeen> Usually handling errors by just exiting isn't the best handling but you can rereaise a custom exception type that you catch last.
[01:03:32] *** visl_ is now known as visl
[01:03:58] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[01:04:07] <caveman> will i reduce lines?
[01:04:17] <supakeen> No.
[01:04:21] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:04:45] <caveman> isn't there any last exception that's always called after all other exceptions are done with?
[01:04:53] <CrtxReavr> Not sure it would help in this case, but you can do: except (Exception1, Error2, Exception3):
[01:05:13] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[01:05:27] <caveman> Erro2?
[01:05:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[01:05:45] <CrtxReavr> Just a fake exception name.
[01:05:46] *** Quits: asd (~noname@user/asd) (Ping timeout: 252 seconds)
[01:06:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:06:16] *** Joins: wyclif (~wyclif@user/wyclif)
[01:06:18] <caveman> won't help as i need different error messages.
[01:07:00] <ChrisWarrick> I’d probably do centralized error handling by raising an exception
[01:07:11] <grym> inside the except bloc, you can  `if isinstance(e, FooException)`, if you like.
[01:07:13] <nedbat> caveman: you probably can't reduce the lines.  i would encourage you to put off sys.exit() as long as possible.
[01:07:31] *** Joins: Betal (~Beta@user/betal)
[01:07:39] <caveman> put off = delete it?
[01:07:45] *** Joins: asd (~noname@user/asd)
[01:08:57] *** Joins: ckdcreation (~ckdCreati@147.55.130.37)
[01:09:10] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:09:14] *** Quits: colegatron3 (~colegatro@86.127.251.171) (Quit: Me las piro vampiro (80's tag))
[01:09:20] *** Joins: greedom (~greedom@2001:16b8:32df:b400:7e86:bc6d:61d2:542a)
[01:10:03] <nedbat> caveman: i mean, don't call sys.exit from deep in your program.
[01:10:34] <nedbat> caveman: you can reduce lines by writing a helper function to do the err and the sys.exit (contradicting my previous advice)
[01:10:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:10:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[01:11:35] <nedbat> caveman: what does err() do? can you link us to the full program?
[01:11:44] *** Joins: wyclif (~wyclif@user/wyclif)
[01:11:46] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[01:11:49] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[01:12:04] *** Joins: cedric (~cedric@2a01:cb11:867:c200:e983:ac1d:ab83:c998)
[01:15:06] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 240 seconds)
[01:15:17] *** Joins: vimart (~vimart@148.252.128.45)
[01:16:05] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:16:09] *** Joins: finsternis (~X@23.226.237.192)
[01:16:41] *** Joins: thiras (~thiras@user/thiras)
[01:17:40] *** Quits: davegarath (~davegarat@net-93-66-97-252.cust.vodafonedsl.it) (Quit: Leaving)
[01:19:30] *** Quits: vimart (~vimart@148.252.128.45) (Ping timeout: 240 seconds)
[01:19:51] <caveman> nedbat: https://github.com/Al-Caveman/nsapass/blob/dev/nsa#L241
[01:21:07] *** Joins: hvtuananh (~hvtuananh@pool-72-68-118-121.nwrknj.east.verizon.net)
[01:21:28] <nedbat> caveman: I would make a new exception for yourself, then write a helper that calls err() and raises that exception, then write a main() function, then catch that exception in main() to exit the program.
[01:21:53] <nedbat> caveman: the most important part of this idea is the main() function
[01:22:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:22:46] *** Joins: wyclif (~wyclif@user/wyclif)
[01:22:56] <caveman> any advantage to having main function than apps current design?
[01:23:42] *** Quits: audiocat (~audio@2603-8081-1800-00ad-8559-36e1-d844-8055.res6.spectrum.com) (Remote host closed the connection)
[01:24:00] *** Joins: audiocat (~audio@2603-8081-1800-00ad-bba4-36b2-6d5e-76a0.res6.spectrum.com)
[01:24:06] <nedbat> caveman: yes: it will be more understandable, you can write tests for it, and it will give you a central place to do things like catch fatal exceptions.
[01:24:19] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[01:24:20] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[01:24:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b)
[01:27:01] *** Joins: hafat (~hafat@95.70.168.45)
[01:27:08] *** Quits: f-a (~f-a@151.68.94.208) (Ping timeout: 272 seconds)
[01:27:23] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: Ping timeout (120 seconds))
[01:27:24] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 252 seconds)
[01:27:24] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Ping timeout: 252 seconds)
[01:27:24] *** Quits: hvtuananh (~hvtuananh@pool-72-68-118-121.nwrknj.east.verizon.net) (Changing host)
[01:27:24] *** Joins: hvtuananh (~hvtuananh@user/hvtuananh)
[01:27:37] *** Quits: kenoba (~kenoba@user/kenoba) (Remote host closed the connection)
[01:27:38] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[01:27:39] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[01:27:48] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[01:27:48] *** Joins: ferz (~ferz@93.48.251.229)
[01:27:59] *** Joins: kenoba (~kenoba@user/kenoba)
[01:28:03] <nedbat> caveman: you've basically got a 260-line main function here, but it's not written that way.
[01:28:23] *** Joins: f-a (~f-a@151.36.12.124)
[01:28:52] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[01:28:56] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[01:29:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:29:59] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[01:30:30] <p-i-> How can I execute ta function on a specific CPU core? I'm looking for something like cores[2].runfunc(myfunc, on_complete=lambda i: print(f'core{i} completed', args...)
[01:30:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:31:15] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:31:28] <nedbat> p-i-: why do you care which core runs it? (answer is probably that you can't control that)
[01:31:29] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[01:31:45] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:32:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:33:48] *** Joins: wyclif (~wyclif@user/wyclif)
[01:33:59] <p-i-> nedbat: Ok I don't need that, but I DO need to dispatch a task to a free core, and get a notification when it's free again.
[01:34:20] <nedbat> p-i-: can you say more about why? Won't the OS assign work to cores?
[01:34:36] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[01:34:36] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[01:34:38] <p-i-> https://stackoverflow.com/questions/68504412/how-can-i-execute-a-function-on-a-cpu-core-and-get-a-callback-when-it-has-compl
[01:34:48] <p-i-> ^ That's the nut I'm trying to crack
[01:34:48] *** Quits: t3nj1n (~t3nj1n@108.5.82.237) (Ping timeout: 268 seconds)
[01:35:16] *** byzandula is now known as byzafk
[01:35:19] <nedbat> p-i-: won't the OS distribute the work well? Why do you think you need to do it yourself?
[01:36:00] <nedbat> p-i-: another way to put it: why is your workload different than any other workload your multicore machine does?
[01:36:26] *** Joins: nmoura (~nmoura@177.192.16.58)
[01:37:08] <p-i-> I get 600M lines in, which I process using `async for line in lines:`. Each line contains (symbol, payload). And I need to be sure I don't have 2 cores simul processing the same symbol. There's 52 symbols, and each has its own stateful Processor object.
[01:37:32] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:37:44] <nedbat> p-i-: among your 600M lines, there are many with the same symbol?
[01:38:03] <nedbat> (oh, of course, 52 symbols)
[01:38:14] <p-i-> If on each incoming line I can just do "wait for free core" then "wait for no other cores processing 'symbol'" then "process symbol on a free core", I'm done.
[01:38:23] <p-i-> I just can't see quite how to code it up.
[01:38:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:39:04] <ChrisWarrick> p-i-: Don’t think about CPU cores. Don’t do your own CPU core assignment.
[01:39:06] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[01:39:18] *** Joins: wyclif (~wyclif@user/wyclif)
[01:39:21] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.2)
[01:39:36] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[01:39:47] <nedbat> p-i-: the compute-intensive work is being done outside of pure python?
[01:40:00] <p-i-> python + numpy
[01:40:06] <nedbat> ok, cool
[01:41:03] <nedbat> p-i-: you could make a new object (Coordinator?) to have a processor and a queue.  Make 52 Coordinators
[01:41:43] <nedbat> p-i-: and ChrisWarrick is right: don't try to control the cores.  Decide how many things can be active at once, and then don't worry about cores.
[01:41:54] <p-i-> ChrisWarrick: so suppose I just have 4 workers. I need to know the symbol each worker is chewing. And I need to know when a worrker is free.
[01:41:59] *** Quits: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[01:42:06] <ChrisWarrick> p-i-: Do you really need to know which symbol which worker is handling?
[01:42:13] <p-i-> I have a feeling this is very few lines of code if done right.
[01:42:53] <p-i-> I need to know which symbols are currently being worked on, so I don't start 2 workers off on the same one with overlap.
[01:43:00] *** Joins: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at)
[01:43:03] <ChrisWarrick> p-i-: You don’t.
[01:43:06] <p-i-> Maybe I could use a lock...?
[01:43:10] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[01:43:41] <ChrisWarrick> p-i-: If you have 4 workers, split your set of symbols into 4 groups. Worker A handles 13 symbols, worker B handles another 13 etc.
[01:43:52] *** Quits: greedom (~greedom@2001:16b8:32df:b400:7e86:bc6d:61d2:542a) (Remote host closed the connection)
[01:44:02] <ChrisWarrick> p-i-: No locking and special coordination necessary.
[01:44:10] <p-i-> I thought of that. But some symbols are super-busy. Work would pile up on one of them.
[01:44:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:44:12] *** Joins: ElimGarak (dgw@sopel/admin/dgw)
[01:44:25] <p-i-> And I'd face a big queue backlog.
[01:44:28] <ChrisWarrick> Do you know ahead of time how busy each symbol is, on average?
[01:44:31] <nedbat> p-i-: ChrisWarrick is talking about a separate queue for each symbol, just as I was.
[01:44:48] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[01:44:48] *** Quits: rndusr (~rndusr@user/rndusr) (Ping timeout: 252 seconds)
[01:44:50] *** Joins: wyclif (~wyclif@user/wyclif)
[01:44:52] <p-i-> but I think I can crack this without any queueing.
[01:45:00] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: evilissimo (~vfeenstr@redhat/evilissimo) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: michaelis (~michaelis@193.183.209.17) (Ping timeout: 252 seconds)
[01:45:17] <nedbat> caveman: still here?
[01:45:21] <caveman> yes.
[01:45:21] *** ElimGarak is now known as dgw
[01:45:33] *** Quits: BrokenCog (~BrokenCog@32.sub-174-194-132.myvzw.com) (Read error: Connection reset by peer)
[01:45:37] <ChrisWarrick> p-i-: Doing it without queues would be much more complicated
[01:45:44] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 252 seconds)
[01:45:51] *** Joins: BrokenCog (~BrokenCog@32.sub-174-194-132.myvzw.com)
[01:45:56] <nedbat> caveman: i'm not sure if my suggestion was helpful or not
[01:46:24] *** Joins: mwilson_ (~mwilson@li159-72.members.linode.com)
[01:46:28] *** Quits: tkr (tkr@user/tkr) (Ping timeout: 252 seconds)
[01:46:31] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:46:44] <p-i-> Really? I just need to 1. wait for a free process(/core) AND no cores processing this symbol, then 2. throw the (symbol,payload) to ANY process.
[01:46:45] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:46:46] *** Quits: DaPinkOne (~Dap@user/dap) (Remote host closed the connection)
[01:46:50] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Ping timeout: 252 seconds)
[01:46:50] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 252 seconds)
[01:46:57] <caveman> nedbat: it is probably helpful, but i'll need to learn this main idea in python.  now i'm making some other changes.  i'll hopefully let you know when i decide on it
[01:47:06] <caveman> nedbat: thanks a lot for your help so far
[01:47:07] <p-i-> That would be really memory efficient.
[01:47:07] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[01:47:10] *** Joins: DaPinkOne (~Dap@user/dap)
[01:47:10] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:47:12] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 252 seconds)
[01:47:12] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 252 seconds)
[01:47:12] *** Quits: no_maam (~chat@gauss.datenzone.de) (Ping timeout: 252 seconds)
[01:47:12] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 252 seconds)
[01:47:12] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (Ping timeout: 252 seconds)
[01:47:12] *** Quits: bailsman (~Mm1@xls01.freecult.org) (Ping timeout: 252 seconds)
[01:47:13] *** mwilson_ is now known as mwilson
[01:47:16] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[01:47:18] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[01:47:34] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[01:47:34] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 252 seconds)
[01:47:34] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 252 seconds)
[01:47:47] *** Joins: nuala (~nuala@user/nuala)
[01:47:54] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 240 seconds)
[01:47:56] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (Ping timeout: 252 seconds)
[01:47:56] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[01:47:56] *** Quits: nfc (nfc@tilde.institute) (Ping timeout: 252 seconds)
[01:48:16] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[01:48:19] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:48:40] *** Joins: nfc (nfc@tilde.institute)
[01:49:10] *** Quits: f-a (~f-a@151.36.12.124) (Quit: leaving)
[01:49:41] *** Joins: mastardet (~mastardet@user/mastardet)
[01:49:56] <caveman> nedbat: do you also suggest i split the ~800 app into multiple files?
[01:50:09] <nedbat> caveman: that's less important, but could be good.
[01:50:47] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[01:50:49] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[01:50:56] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:51:05] *** Joins: pnoud (~pnoud@user/pnoud)
[01:51:31] *** Joins: thiras (~thiras@user/thiras)
[01:51:48] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[01:51:50] *** Joins: michaelis (~michaelis@193.183.209.17)
[01:52:39] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[01:53:47] *** Quits: nmoura (~nmoura@177.192.16.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:54:18] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[01:55:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:55:52] *** Joins: wyclif (~wyclif@user/wyclif)
[01:56:05] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[01:56:40] <ChrisWarrick> p-i-: Where do you see the memory inefficiency in the solution with queues?
[01:57:48] <ChrisWarrick> p-i-: The OS is really great at scheduling processes. The options to do that on your own might be limited, especially in Python.
[01:58:31] <ChrisWarrick> p-i-: Concurrency and synchronization is hard. By letting the OS handle the process assignment, and by assigning queues (= symbols) to specific workers, you’re sidestepping all those issues.
[01:58:58] *** Joins: rama (~rama@2601:640:102:bfb5:7cd6:85e8:bd54:29e7)
[01:59:06] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[02:02:37] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 245 seconds)
[02:03:48] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Quit: Leaving)
[02:04:32] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:04:48] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[02:04:52] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[02:05:00] *** Quits: rama (~rama@2601:640:102:bfb5:7cd6:85e8:bd54:29e7) (Quit: Leaving...)
[02:05:24] <p-i-> ok I'm starting to see it.
[02:06:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:06:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:07:02] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[02:07:23] <p-i-> Since I'm using `async for line in lines` to read each line in turn, can I just pass the `lines` object into each process-handler object, and it will consume a line when it's ready?
[02:08:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:08:43] *** Joins: Sasazuka__ (~Sasazuka@user/sasazuka)
[02:09:27] *** Joins: trashbird3 (~trashbird@user/trashbird)
[02:10:32] *** Joins: susam_ (~susam@user/susam)
[02:11:15] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Read error: Connection reset by peer)
[02:11:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[02:11:15] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[02:11:15] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:11:15] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:11:15] *** trashbird3 is now known as trashbird
[02:11:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[02:11:33] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: u4t (~chat@78.ip-139-99-236.net) (Ping timeout: 265 seconds)
[02:12:02] *** Quits: koziad (~koz@user/koziad/x-1285628) (Ping timeout: 265 seconds)
[02:12:06] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[02:12:08] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[02:12:22] *** Joins: wyclif (~wyclif@user/wyclif)
[02:13:45] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 276 seconds)
[02:14:25] <ChrisWarrick> what are the lines? where do they come from?
[02:17:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:17:08] <meejah> p-i-: do you maybe want a Semaphore? (i.e. equal to the number of cores)..?
[02:17:27] <p-i-> meejah: Could you explain more?
[02:17:50] <p-i-> ChrisWarrick: a crypto exchange. Each line is either an orderbook update or a trade.
[02:17:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:18:18] <ChrisWarrick> p-i-: how do you get data from the service?
[02:18:27] <p-i-> Sorry, they come from an asyncio-based 3rd-party lib
[02:18:36] <ChrisWarrick> p-i-: be more specific
[02:18:42] *** Quits: audiocat (~audio@2603-8081-1800-00ad-bba4-36b2-6d5e-76a0.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:19:00] *** Quits: Barones (~Barones@2804:48dc:8500:0:9d80:58af:9f0d:504b) (Quit: Leaving)
[02:19:40] <meejah> p-i-: sounds like you want to process one thing per core?
[02:20:14] <p-i-> https://bpa.st/Q2LA <-- that's the code that generates them
[02:20:28] <p-i-> So... it's a generator object.
[02:20:38] <nedbat> all the energy that goes into cryptocurrencies could be used for something useful :(
[02:20:55] <meejah> nedbat: depends on the cryptocurrency .. but mostly "yes"
[02:20:57] <ChrisWarrick> nedbat++;
[02:21:22] <p-i-> So maybe the question is: can multiple processes safely consume from a generator object without race conditions?
[02:21:55] <ChrisWarrick> p-i-: how are the multiple processes spawned?
[02:21:57] <FunkyBob> p-i-: there is a thread-safe queue in stdlib... but multiple _processes_?
[02:21:59] <meejah> p-i-: where are the processes? (the easy answer is "no" but ...)
[02:22:05] <p-i-> Crypto is actually becoming rather useful. Try sending FIAT to engineers in Russia/Brazil/Pakistan...
[02:22:40] <meejah> nedbat: (sorry taht was kind of obscure, i mean: some blockchains use proof-of-state which doesn't waste power like proof-of-work/BTC)
[02:22:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:22:49] <meejah> *proof-of-stake
[02:23:02] <p-i-> crypto-_trading_ OTOH I won't try to make a case for it. But I'm progressing along the DunningKruger curve of learning Python...
[02:23:13] <nedbat> p-i-: you should clarify what you mean by processes.
[02:23:22] *** Joins: wyclif (~wyclif@user/wyclif)
[02:23:29] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-30d3-5991-7173-0cce.res6.spectrum.com)
[02:24:10] <nedbat> (because i think maybe you don't mean processes :)  )
[02:24:28] *** Joins: fluffyballoon12 (~fluffybal@2620:72:0:6480::81d)
[02:24:48] *** Quits: knipster (~knipster@user/knipster) (Quit: The Lounge - https://thelounge.chat)
[02:24:55] <p-i-> I haven't multicored this yet. Still early-stage floundering.
[02:25:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-05fe-b1af-aaf2-9af4.res6.spectrum.com) (Killed (NickServ (GHOST command used by jarthur_!~jarthur@2603-8080-1540-002d-30d3-5991-7173-0cce.res6.spectrum.com)))
[02:25:16] *** jarthur_ is now known as jarthur
[02:25:29] *** Joins: knipster (~knipster@user/knipster)
[02:25:43] <ChrisWarrick> p-i-: can those engineers in Russia/Brazil/Pakistan buy food using crypto?
[02:25:43] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:5d6e:c7d7:5f3:8e6b) (Ping timeout: 246 seconds)
[02:25:44] <meejah> p-i-: to pass work to multi-cores (if it's CPU-bound) you _will_ want multi-process (if it's all python). So you'll want some way to communicate.
[02:26:07] <meejah> ...and a semaphore can be used in the co-ordinator process to ensure you're only doing "N" things per sub-process (for example)
[02:26:39] *** Joins: darksun (~darksun@user/darksun)
[02:26:49] *** Quits: susam_ (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:27:00] *** Joins: susam (~susam@user/susam)
[02:27:02] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[02:27:07] *** Quits: fluffyballoon (~fluffybal@2620:72:0:6480::81d) (Ping timeout: 246 seconds)
[02:27:09] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[02:27:32] *** Joins: p-i-_ (~Ohmu@node-mzc.pool-1-4.dynamic.totinternet.net)
[02:27:32] <meejah> p-i-: one way could be with crossbario and Autobahn, for example (RPC/remote-procedure-call) but there are of course other choices
[02:27:42] <p-i-_> uff disconnects
[02:28:07] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[02:28:16] <ChrisWarrick> Or you could try a slightly fancier architecture with a task queue/message broker (rabbitmq, kafka) with the correct setup to ensure your concurrency requirements are met (for Kafka, you’d need to ensure all records for a given symbol land in the same partition)
[02:28:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[02:28:24] <meejah> p-i-: i don't see disconnects; are you missing traceback?
[02:28:53] *** Joins: wyclif (~wyclif@user/wyclif)
[02:29:06] *** Quits: p-i- (~Ohmu@node-5fz.pool-1-0.dynamic.totinternet.net) (Ping timeout: 240 seconds)
[02:29:08] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[02:29:40] <phy1729> I kinda expected   'foo bar'.encode('idna')   to encode the space since that's not a valid character in a DNS label. Why doesn't it and can I coerse python into doing so?
[02:29:48] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:30:02] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[02:30:07] <p-i-_> So, "how are the multiple processes spawned?"... I haven't yet coded up a multiprocess solution for this.
[02:30:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:23] <p-i-_> I may have missed a couple of messages, my apologies if so.
[02:31:32] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[02:31:35] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[02:31:46] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[02:32:37] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[02:32:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:33:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:33:23] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 268 seconds)
[02:33:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:34:05] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[02:34:18] <meejah> p-i-: one way could be with crossbario and Autobahn, for example (RPC/remote-procedure-call) but there are of course other choices
[02:34:23] *** Joins: wyclif (~wyclif@user/wyclif)
[02:34:33] <meejah> (crossbar can do the spawning for you, or not)
[02:34:46] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:38:00] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 244 seconds)
[02:38:18] <ChrisWarrick> Here’s another solution: one process talks to the API and enqueues messages for the workers in RabbitMQ or Kafka or such. You have 52 queues in RabbitMQ, or a bunch of partitions in Kafka (with partition choice depending on the symbol). Then you spawn N processes (possibly even outside of Python) and assign the queues/partitions to process. (RabbitMQ will probably be easier to get going with.)
[02:39:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:39:36] <meejah> crossbar can do round-robin RPC too (e.g. 6 processes register for the same RPC, and so every 6th call goes to the same process ... anyway, many many ways to approach multi-process concurrency ;)
[02:39:51] <p-i-_> I think I may have got something. If I put a multiprocessing.Lock in each symbol handler, I can spawn 4 workers, each of which has a runloop. Within the runloop, the worker fetches the next (symbol, payload) line from the generator, using `next`, waits until handler[symbol].lock is acquired, then does handler[symbol].process(payload)
[02:39:53] *** Joins: wyclif (~wyclif@user/wyclif)
[02:40:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:40:55] <ChrisWarrick> I’m not sure if a generator would work out nicely with multiprocessing
[02:41:10] <p-i-_> yeah that's my main worry
[02:41:13] <meejah> it's not actually a generator, it's a coroutine (async-def)
[02:41:20] <nedbat> p-i-_: do you need subprocesses?
[02:41:20] <meejah> well, those _are_ generators, kind-of, but ...
[02:41:23] <p-i-_> Maybe I could wrap it in a lock
[02:41:39] <ChrisWarrick> p-i-_: that sounds like a lot of locks that wouldn’t be necessary in other solutions
[02:41:48] *** Joins: Atque (~Atque@user/atque)
[02:42:01] *** Quits: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[02:42:01] <meejah> p-i-_: general #python advice is to avoid multiprocessing
[02:42:15] <meejah> (the library, not the concept)
[02:42:20] *** Joins: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at)
[02:42:32] <p-i-_> gah, when will Python sort out its stdlib
[02:43:12] * p-i-_ imagines a nonstandard-lib with stuff like trio in it
[02:44:12] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[02:44:24] *** Joins: darksun (~darksun@user/darksun)
[02:44:28] <p-i-_> ok I think I got enough to work with. I can see the task much more clearly now.
[02:44:38] <p-i-_> Thanks ChrisWarrick et al.
[02:44:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:44:46] <ChrisWarrick> you’re welcome!
[02:44:56] <p-i-_> Appreciated as always.
[02:45:07] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 258 seconds)
[02:45:11] <nedbat> p-i-_: there is a nonstandard-lib with stuff like trio in it
[02:45:25] *** Joins: wyclif (~wyclif@user/wyclif)
[02:46:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:48:07] *** Quits: MD500_Pilot (~MD500_Pil@gatekeeper.rstechnical.com) (Quit: Ping timeout (120 seconds))
[02:48:13] *** Joins: korg815 (~korg815@user/korg815)
[02:49:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:49:56] <meejah> (it's called PyPI right? ;)
[02:51:25] *** Joins: audiocat (~audio@2603-8081-1800-00ad-ca61-4be9-9d56-0b00.res6.spectrum.com)
[02:52:19] <nedbat> (yes)
[02:54:49] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:55:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:55:49] *** Quits: fluffyballoon12 (~fluffybal@2620:72:0:6480::81d) (Ping timeout: 246 seconds)
[02:56:26] *** Joins: wyclif (~wyclif@user/wyclif)
[02:59:36] *** Joins: Fiji (~Fiji@user/fiji)
[03:01:12] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[03:01:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:01:37] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[03:01:57] *** Joins: wyclif (~wyclif@user/wyclif)
[03:02:15] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:03:37] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:06:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:07:08] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Remote host closed the connection)
[03:07:28] *** Joins: wyclif (~wyclif@user/wyclif)
[03:07:31] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[03:10:03] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[03:10:29] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[03:10:57] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[03:11:25] *** Joins: Betal (~Beta@user/betal)
[03:11:50] *** Joins: janemba (~janemba@94.204.254.193)
[03:14:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[03:17:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:06] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[03:24:20] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[03:25:30] *** Quits: akk (~akk@75.161.155.222) (Ping timeout: 265 seconds)
[03:25:57] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[03:29:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[03:30:05] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[03:30:29] *** Joins: supakeen (~user@python/site-packages/supakeen)
[03:30:31] *** Quits: fofoni_ (~fofoni@user/fofoni) (Quit: Leaving)
[03:32:08] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[03:34:54] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:35:23] *** Quits: Akuli (~Akuli@82-203-164-35.bb.dnainternet.fi) (Quit: Leaving)
[03:38:18] <p-i-_> multiprocessing is pure fail
[03:38:58] <nedbat> p-i-_: do you need subprocesses?
[03:41:28] <p-i-_> I'm not sure what I need to do. This is the trace: https://bpa.st/HKCA
[03:41:52] *** Joins: darksun (~darksun@user/darksun)
[03:41:53] *** Quits: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:42:21] *** Joins: y1n (~y1n@84-115-65-112.wifi.dynamic.surfer.at)
[03:42:45] <p-i-_> I'm not using `if __name__ == 'main'` anywhere tho'. I've shebang-d my main.py.
[03:43:27] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 276 seconds)
[03:43:49] <bjs> p-i-_: well that might be why it's going wrong :)
[03:44:22] <p-i-_> I can't understand the error. It errors on a put to a multiprocessing.Queue.
[03:45:24] <bjs> pie_: the trace you showed doesn't mention a queue at all (or put) does it?
[03:45:37] <bjs> oops
[03:45:42] <bjs> p-i-_: the trace you showed doesn't mention a queue at all (or put) does it?
[03:45:42] <nedbat> p-i-_: first, figure out if you even need subprocesses.
[03:45:56] <bjs> p-i-_: what is the code? what are you trying to do?
[03:46:57] <p-i-_> ok I get a different error now. Maybe it's because I'm doing multiprocess Queue stuff inside an asyncio async function...
[03:47:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[03:48:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:49:01] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[03:49:03] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:49:09] <p-i-_> https://bpa.st/PBXQ
[03:49:13] <p-i-_> That's what I'm dealing with...
[03:49:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:50:05] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[03:50:11] <p-i-_> I moved the mp stuff back into main() as a debug step, to try to get _something_ working.
[03:50:14] *** Joins: susam (~susam@user/susam)
[03:50:23] <bjs> p-i-_: why aer  you using initializer?
[03:50:32] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:50:37] <nedbat> p-i-_: can you see my messages?
[03:51:13] <p-i-_> nedbat: yes, sorry. I'm having to look up subprocesses as it's all new material.
[03:51:35] *** Quits: Sasazuka__ (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:51:35] <nedbat> p-i-_: what drew you to the multiprocessing module?
[03:51:38] <bjs> p-i-_: I don't really know why you're using multiprocessing here
[03:51:53] <p-i-_> bjs: I need to use all 4 cores.
[03:52:19] <p-i-_> nedbat: I found an SO post that seemed to do what I wanted.
[03:52:26] <p-i-_> And I couldn't figure out how to do it with Trio libs
[03:52:54] <bjs> p-i-_: process_line _sounds_ like something that async would be helpful for, but ok.  Why are you using `initializer=job` ?
[03:52:59] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[03:52:59] *** Quits: dbristow_ (~dbristow@user/dbristow) (Remote host closed the connection)
[03:52:59] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[03:53:12] *** Joins: thiras (~thiras@user/thiras)
[03:53:14] *** Joins: dbristow_ (~dbristow@user/dbristow)
[03:53:16] *** Joins: entuland (~entuland@user/entuland)
[03:53:35] <bjs> p-i-_: what does process_line do/return?
[03:53:39] *** Quits: godlike (~godlike@user/godlike) (Remote host closed the connection)
[03:53:46] <p-i-_> bjs: copy-paste coding :( I got it from here: https://stackoverflow.com/questions/43078980/python-multiprocessing-with-generator
[03:53:53] *** Quits: y1n (~y1n@84-115-65-112.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[03:54:29] <p-i-_> bjs: Well for a testcase I can leave it empty. So I think it would distract from the problem.
[03:55:21] <bjs> p-i-_: does it distract? I'm always very concerned when I see multiprocessing try use `self`
[03:56:19] <bjs> p-i-_: well okay, but it's weird to use initializer in this way (and possibly even wrong?)
[03:57:02] *** Joins: godlike (~godlike@user/godlike)
[03:57:04] <p-i-_> I'll put a `pass` in there for now. Code is in a messy state for pastebinning right now.
[03:57:49] <bjs> p-i-_: there's a lot of confusion in this code about what arguments `job` takes.
[03:58:42] <bjs> the initializer tries to pass the queue and only the queue.  the apply_async tries to pass an int and only the int, and job itself expects two arguments
[03:58:50] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:59:16] <p-i-_> ok I'll clean that out and see if it runs.
[03:59:30] <p-i-_> yes you're right
[03:59:42] <bjs> p-i-_: is there any reason process_line is a method on the Streamer class? can't it just be a function?
[03:59:47] <p-i-_> The error came when I moved that code chunk out of the object.
[03:59:56] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[04:00:02] *** Quits: drant (~drant@2a05:f480:1c00:d82::) ()
[04:00:10] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[04:00:17] <p-i-_> It references a member of Streamer. But I could make it a global.
[04:00:23] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:01:00] *** Joins: darksun (~darksun@user/darksun)
[04:01:24] *** Quits: cedric (~cedric@2a01:cb11:867:c200:e983:ac1d:ab83:c998) (Quit: Konversation terminated!)
[04:02:11] <bjs> p-i-_: you're starting to make it sound like there's some kind of shared state between these processes
[04:02:13] <bjs> I hope not ;)
[04:02:46] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[04:02:57] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[04:03:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b) (Quit: Leaving)
[04:03:37] *** Joins: jazzy (~jaziz@2600:380:c174:6a3d:897b:27a0:9f86:1d4)
[04:04:09] <p-i-_> https://stackoverflow.com/questions/41385708/multiprocessing-example-giving-attributeerror
[04:04:10] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[04:04:13] <p-i-_> This library is horrible
[04:04:15] <Repiphany> <Repiphany> I get the feeling that the proper solution to your problem depends entirely on the nature of processing that you need to actually do
[04:04:15] <Repiphany>  <Repiphany> because sharing state among multiple processes is going to be a mission
[04:04:46] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[04:05:07] <bjs> p-i-_: it's trying to do something that's really hard because processes are a real hard boundary to cross
[04:05:54] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[04:06:32] <bjs> p-i-_: also I'm not sure why you linked this,  it's not surprising that examples like that don't work inside the IPython interactive interpreter(!)
[04:07:09] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[04:07:50] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 255 seconds)
[04:08:06] <bjs>  (/ Jupyter notebooks / other weird environments)
[04:08:18] <p-i-_> My plan is this: Create 4 workers (for 4 cpu cores), each with a `while line := q.get(): symbol, payload = extract_from(line); processors[symbol].process(line)` runloop.
[04:08:46] <bjs> p-i-_: I am very suspicious of the fact your process_line function isn't returning anything
[04:08:48] <bjs> in these examples
[04:08:49] <p-i-_> And then `async for line in lines: q.put(line)` to populate the queue.
[04:08:56] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[04:09:35] <p-i-_> I think I'll have to make a testcase and work forwards, rather than trying to integrate this.
[04:09:57] <bjs> p-i-_: have you seen something like this https://bpa.st/CWVA yet?
[04:10:15] <bjs> and the cow
[04:12:05] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Remote host closed the connection)
[04:12:08] <p-i-_> Even that gives `AttributeError: __exit__`
[04:12:17] <bjs> p-i-_: oh what version of Python are you using?
[04:12:30] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:12:41] *** __jmcantrell__ is now known as jmcantrell
[04:12:51] <p-i-_> ok venv activated, it works
[04:13:25] <bjs> p-i-_: does my program do what you expect?
[04:13:31] <p-i-_> I'll try to build forwards from this, thanks!
[04:13:34] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:13:41] <bjs> wait no
[04:14:27] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:15:02] <bjs> p-i-_: have you come across the cow?  do you notice my program prints 0?  this is why I was worried when you had process_line be part of the class
[04:15:34] <p-i-_> It prints 0, but that makes sense to me, as f is likely applied after the print.
[04:15:45] <p-i-_> What's the cow?
[04:15:53] <Repiphany> That's not what's happening
[04:16:14] <bjs> p-i-_: no that is not what happened, the pool was made, f was run everything was cleaned up and the parent process waited for it all to finish _then_ it printed a.x
[04:16:15] <bjs> and saw 0
[04:16:15] <Repiphany> Each process is dealing with an entirely separate copy of a
[04:16:48] <p-i-_> zomg
[04:16:48] <Repiphany> This is why I asked about your process being stateful 5 hours ago
[04:16:50] <bjs> p-i-_: when you make a subprocess, you get a *copy* of the entire program and its memory.  My program had *5* different instances of A (because there were 4 processes in the Pool + the parent)
[04:16:59] <bjs> p-i-_: processes do not share state.
[04:17:02] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:17:42] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[04:17:54] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[04:18:27] <p-i-_> ok I was misunderstanding. I DO have a central dict of all my processor objects. So, even tho' different dispatches will use processors['foo'] and processors['bar'], the root dict is a shared state
[04:18:28] <p-i-_> damn
[04:18:31] *** Joins: bhamspam (~bhamspam@cpe-67-242-193-107.nycap.res.rr.com)
[04:19:41] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:20:06] <bjs> p-i-_: so long as you're expecting the state to be consistent between the processes (changes one makes cannot be seen by the other) then it might be ok.  The queue is shared though (or well not really, when you call job and *pass* the queue it gives the other process a way to read/write it)
[04:22:04] <p-i-_> My approach involved processA picking up symbolFOO on one update, and maybe processB picking up the same symbol later in another update.
[04:22:12] <p-i-_> I can see why that's a fail now.
[04:22:27] <p-i-_> So the only realistic quick solution is to disjoint-partition my symbols into 4 groups, and have one process for each group.
[04:23:17] <p-i-_> I may as well run the .py 4 times in separate shells with different symbol subsets.
[04:23:32] <p-i-_> And save a lot of headache.
[04:23:45] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 276 seconds)
[04:23:45] *** Wulf4 is now known as Wulf
[04:23:56] <bjs> p-i-_: can't you just have a single queue and put symbols on the queue, and have all threads read symbols from the queue. Why is there a dict?
[04:28:42] <p-i-_> I'm not using threads...
[04:28:51] <p-i-_> Each symbol has its own orderbook and trade history.
[04:29:37] *** cman_ is now known as cman
[04:30:22] <p-i-_> So I've created a Processor object, and I do `self.processors = {symbol: Processor(symbol) for symbol in symbols}`, then I can `async for line in lines: (symbol, payload) = extract_from(line); self.processors[symbol].feed(payload)`
[04:30:34] <p-i-_> Works fine if I don't try to multicore it.
[04:30:42] *** Joins: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:b5ae:407e:7ce1:43be)
[04:32:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:32:37] *** Joins: cheater (~Username@user/cheater)
[04:34:17] <bjs> p-i-_: so have a queue-per-symbol?
[04:34:33] <bjs> and self.processors is a dict of queues
[04:35:17] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:35:52] *** Quits: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:b5ae:407e:7ce1:43be) (Ping timeout: 272 seconds)
[04:36:04] *** Joins: emika (~emika@185.207.249.62)
[04:36:30] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 272 seconds)
[04:36:44] *** Joins: duckmcscrooge (~bsantanad@2806:102e:e:3992:abcb:d561:699:56cf)
[04:37:02] <p-i-_> I better sleep and run at it with some fresh energy. 7am now.
[04:37:08] *** Quits: hposca (~hposca@node-1w7jr9phoke2v1ekkbsawouqo.ipv6.telus.net) (Ping timeout: 272 seconds)
[04:37:10] <p-i-_> Thankyou bjs for disentangling my mess.
[04:38:20] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[04:38:34] *** Quits: georgios (~georgios@ppp046176224061.access.hol.gr) (Ping timeout: 240 seconds)
[04:39:02] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:39:04] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:43] *** Joins: CombatVet (~c4@user/combatvet)
[04:41:19] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[04:42:46] *** Joins: brabrax (~brabrax@user/brabrax)
[04:43:06] *** Joins: califax (~califax@user/califx)
[04:45:24] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 252 seconds)
[04:46:49] *** Joins: kristianpaul (~paul@user/kristianpaul)
[04:48:00] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:48:11] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:48:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[04:49:56] *** Gustavo6046_ is now known as Gustavo6046
[04:50:11] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:50:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:51:51] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[04:52:20] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:599:5892:1665:5def)
[04:52:20] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:599:5892:1665:5def) (Client Quit)
[04:52:35] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b)
[04:55:01] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[04:55:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:55:48] *** Joins: wyclif (~wyclif@user/wyclif)
[04:56:19] *** Parts: duckmcscrooge (~bsantanad@2806:102e:e:3992:abcb:d561:699:56cf) ()
[04:59:33] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:00:28] *** Joins: cjb (~cjb@user/cjb)
[05:00:43] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[05:01:22] *** Joins: georgios (~georgios@ppp046176224061.access.hol.gr)
[05:02:00] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[05:03:22] *** Quits: NeoCore (~neocore@195.200.221.95) (Ping timeout: 252 seconds)
[05:03:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[05:04:34] *** Joins: b0nn (~shane@user/b0nn)
[05:04:40] *** Parts: b0nn (~shane@user/b0nn) ()
[05:04:45] *** Joins: b0nn (~shane@user/b0nn)
[05:05:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[05:05:51] <b0nn> I'm looking for, but have not yet found, how to provide psycopg2 to an AWS lambda, is it possible in a .zip, or is a (container) image the right way to go?
[05:06:43] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[05:06:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[05:08:47] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[05:09:00] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Quit: Client closed)
[05:11:15] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[05:14:24] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 252 seconds)
[05:14:58] *** Joins: minip (~minip@user/minip)
[05:15:52] *** Joins: wyclif (~wyclif@user/wyclif)
[05:19:05] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 265 seconds)
[05:19:18] *** Joins: akk (~akk@75.161.155.222)
[05:21:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:21:55] *** Joins: kristianpaul (~paul@user/kristianpaul)
[05:22:15] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 276 seconds)
[05:24:25] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:25:02] *** fbiagent_ is now known as fbiagent
[05:25:15] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 250 seconds)
[05:26:14] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:26:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:26:37] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[05:29:09] *** Quits: comruminoAlt (~comrumino@li87-103.members.linode.com) (Quit: byeee)
[05:30:06] *** Joins: graywolf (~wolf@user/graywolf)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:53] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[05:31:04] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[05:31:07] *** Joins: zingos (~zingos@46.101.6.21)
[05:31:39] <graywolf> Hello, I have a falcon app and need to deploy it, what serve should I use? I know of gunicorn and uwsgi; I've looked up few comparisons however most compare performance, and I'm mostly interested in resource usage. What is smalled production python server to use these days?
[05:34:10] *** Joins: vlm (~vlm@user/vlm)
[05:34:46] <zingos> Is this line out of date with recent Python versions? It complains. https://gist.github.com/jhoenicke/939e58e26bc54ef46616a680eadcc368#file-reset_with_entropy-py-L13
[05:35:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[05:36:56] *** Quits: bhamspam (~bhamspam@cpe-67-242-193-107.nycap.res.rr.com) (Ping timeout: 255 seconds)
[05:37:22] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[05:37:25] <nedbat> zingos: in python3, you should use argumentless super().  you named the wrong class there.
[05:37:46] <nedbat> zingos: if you provide arguments, they should be   super(TrezorEntropySender, self)
[05:38:12] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[05:38:21] <zingos> Yeah, I am messaging the author to let them know
[05:38:21] <nedbat> zingos: also btw, since it's the only thing in the method, and it's the same arguments as __init__, you can just leave out the entire __init__ method.
[05:38:39] <nedbat> (maybe)
[05:40:41] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[05:43:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:46:04] *** Joins: heco (~redrum@user/redrum88)
[05:47:19] *** Joins: skapata (~Skapata@user/skapata)
[05:48:26] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Remote host closed the connection)
[05:48:51] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[05:49:11] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[05:49:35] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:50:06] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[05:50:45] *** Quits: flyback (~flyback@2601:540:8201:1e60:1ac:fb2c:32c4:59e0) (Quit: Leaving)
[05:51:03] *** Joins: flyback (~flyback@2601:540:8201:1e60:60b8:849:79bb:86f5)
[05:51:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:52:46] *** Joins: pnoud (~pnoud@user/pnoud)
[05:53:46] *** Joins: califax- (~califax@user/califx)
[05:53:59] <squirrel> suppose i want to find all uris with authority in text (those that have "://"). i could do perhaps `\w+://\w+`, but that's pretty slow. i could also do `://(?<=\w+://)\w+`, which is much faster, but this is a bit awkward and not supported by re. what clever solution am i missing?
[05:55:48] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:55:59] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:56:17] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 255 seconds)
[05:56:23] *** brabrax_ is now known as brabrax
[05:56:24] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:56:25] *** califax- is now known as califax
[05:57:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[05:58:45] <nedbat> squirrel: i don't see how \w+://\w+ finds a complete url?
[05:59:38] <nedbat> squirrel: and it might be faster if you use \w+?://\w+?
[06:01:09] <squirrel> nedbat: this would fine "http://foo" in "look at http://foo" wouldn't it?
[06:01:36] <nedbat> squirrel: what do you want to find in "look at http://foo.com/hello.html" ?
[06:01:45] *** Joins: darksun (~darksun@user/darksun)
[06:02:04] <squirrel> i suppose +? would help but the difference would be insignificant
[06:02:26] <squirrel> well, the url http://foo.com/hello.html
[06:02:41] <nedbat> squirrel: ok, then your \w+ pattern wouldn't find it.
[06:02:51] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:02:57] <nedbat> squirrel: i don't know what the time difference would be, you have to measure it.
[06:03:05] <squirrel> i have a big fancy regex, this is just a simplified expression
[06:04:07] <squirrel> the difference between `[a-zA-Z]+://\S+` and `://(?<=[a-zA-Z]+://)\S+` (measured not in python, but still) is on the order of two magnitudes
[06:05:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:06:34] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[06:07:18] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:12:21] *** Joins: ferz (~ferz@93.48.251.229)
[06:14:32] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[06:14:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[06:15:36] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[06:15:50] *** Joins: CombatVet (~c4@user/combatvet)
[06:18:08] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:21:16] *** Quits: akk (~akk@75.161.155.222) (Quit: +++)
[06:22:32] *** Joins: frost (~frost@59.71.241.179)
[06:23:13] *** Quits: ckdcreation (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[06:23:26] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[06:25:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[06:26:16] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[06:26:47] *** Joins: wyclif (~wyclif@user/wyclif)
[06:30:36] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[06:31:30] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.2)
[06:31:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[06:32:16] *** Joins: wyclif (~wyclif@user/wyclif)
[06:33:17] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[06:33:37] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[06:33:40] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[06:33:43] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Client Quit)
[06:33:46] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[06:33:53] *** Joins: trace987 (~trace@91.66.152.136)
[06:34:54] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:34:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:36:25] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 265 seconds)
[06:37:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[06:37:47] *** Joins: wyclif (~wyclif@user/wyclif)
[06:38:25] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[06:39:09] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 2.9)
[06:39:58] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[06:45:51] *** Quits: trace987 (~trace@91.66.152.136) (Ping timeout: 258 seconds)
[06:46:18] *** Quits: bss (bss@rie.incorporeal.org) (Ping timeout: 240 seconds)
[06:47:47] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:49:08] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[06:52:28] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[06:56:40] *** Joins: rndusr (~rndusr@user/rndusr)
[06:56:53] <rndusr> what package is socketserver in?
[06:57:04] *** Quits: yogoyo (~patrick@user/yogoyo) (Quit: WeeChat 3.2)
[06:57:06] <rndusr> i tried using pip install socketserver but that wasn't found
[06:57:29] <rndusr> and it doesn't seem to come by default on my debian system
[06:58:42] *** Quits: emerent (~quassel@p200300cd57058cefba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:58:48] *** Joins: female_student_4 (~female_st@2a01:388:243:150::1:28)
[06:58:58] *** Joins: emerent (~quassel@p200300cd57058ce7ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:58:59] <female_student_4> Is this hard to easy to solve by recursion?
[06:58:59] <female_student_4> https://edabit.com/challenge/Yp8crKmgxZ3HiSBAZ
[06:59:01] <female_student_4> I can't tell if my tutor is scamming me
[06:59:04] *** Quits: nickodd (~nickodd@user/nickodd) (Quit: nickodd)
[06:59:23] *** Joins: nickodd (~nickodd@user/nickodd)
[07:01:37] *** FinnElija is now known as Guest349
[07:01:37] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:01:37] *** Quits: Guest349 (~finn_elij@user/finn-elija/x-0085643) (Killed (silver.libera.chat (Nickname regained by services)))
[07:01:37] *** finn_elija is now known as FinnElija
[07:01:57] *** Joins: fluter (~fluter@user/fluter)
[07:03:26] <nubonix> how can i start a pyqt5 app [qasync] and a starlette app within the same program? [needs to be executable via pyinstaller]
[07:03:30] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:27c5:b36:8a5d:9ea3) (Ping timeout: 240 seconds)
[07:06:18] *** Joins: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net)
[07:09:16] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:10:05] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 255 seconds)
[07:10:26] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[07:13:53] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[07:18:28] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 265 seconds)
[07:21:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:22:53] <phy1729> rndusr: https://docs.python.org/3/library/socketserver.html it's stdlib
[07:23:25] <rndusr> hmm, it doesn't come included from my installation
[07:23:44] <rndusr> is there a way to install manually
[07:23:47] <rndusr> phy1729:
[07:23:55] <habnabit_> rndusr, what is the exact error you're getting?
[07:24:43] <phy1729> female_student_4: recursion is certainly a way to solve it and would probably be the most natural way as well.
[07:24:47] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:24:48] *** Joins: zaquest (~notzaques@5.128.210.178)
[07:24:54] <rndusr> habnabit_:
[07:24:57] <rndusr> https://ttm.sh/twU.txt
[07:25:20] <habnabit_> rndusr, ok, and what's: head -n1 /usr/bin/esgd
[07:25:39] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[07:25:45] <habnabit_> rndusr, did you install esgd with debian?
[07:25:49] *** Quits: reset (~reset@user/reset) (Quit: reset)
[07:25:56] <rndusr> habnabit_: it's a program that I wrote
[07:26:04] <habnabit_> rndusr, ok
[07:26:51] <habnabit_> rndusr, ok, and what's: head -n1 /usr/bin/esgd
[07:27:36] <rndusr> #!/usr/bin/python
[07:28:00] <habnabit_> rndusr, /usr/bin/python is python 2, not python 3
[07:28:05] <rndusr> oh
[07:28:06] <habnabit_> rndusr, change it to /usr/bin/python3
[07:29:00] <rndusr> thanks, it works. i get a different error now. :)
[07:29:19] <habnabit_> rndusr, you wrote it a while ago but it's failing now? or what
[07:30:15] <rndusr> it worked on my arch linux machine, but now on debian it doesn't work
[07:30:19] <rndusr> but I'll try to figure it out
[07:37:24] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[07:38:14] *** Quits: georgios (~georgios@ppp046176224061.access.hol.gr) (Remote host closed the connection)
[07:39:52] *** Joins: georgios (~georgios@ppp046176224061.access.hol.gr)
[07:41:37] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[07:42:41] <female_student_4> phy1729 Do you have any idea about how I could deal with the nested list part? I'm struggling to establish a base case to ensure that the depth level has been reached, I'm not very familiar with it
[07:44:15] <phy1729> female_student_4: think of it as if I told you to list all files on your system, you could write a function that handles a directory and calls itself for any nested folders
[07:44:35] <female_student_4> phy1729 oh okay, I'
[07:44:51] <female_student_4> I've never coded something like that before, do you have any relevant examples online, please?
[07:45:11] <phy1729> Nothing at hand
[07:46:25] <female_student_4> Aaah okay no worries
[07:46:30] <female_student_4> thanks anyway
[07:51:21] <Repiphany> female_student_4: Basic list recursion example https://bpa.st/6SNQ
[07:51:50] <female_student_4> Repiphany Thank you so much!!! :)
[07:53:37] *** Joins: pnoud (~pnoud@user/pnoud)
[07:53:40] *** Joins: Fiji (~Fiji@user/fiji)
[07:54:53] *** Quits: francis (francis@user/francis) (Quit: rb)
[07:55:38] *** Joins: francis (francis@user/francis)
[07:55:38] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:56:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[07:56:34] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:58:06] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 265 seconds)
[07:58:18] <habnabit_> rndusr, well.. we could help you with that if you show us the failure
[07:58:25] *** Quits: hafat (~hafat@95.70.168.45) (Remote host closed the connection)
[07:58:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[08:00:41] *** Parts: b0nn (~shane@user/b0nn) ()
[08:02:30] *** Joins: darksun (~darksun@user/darksun)
[08:02:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:03:00] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[08:05:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[08:05:58] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[08:07:46] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[08:11:50] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:13:22] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[08:14:10] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[08:15:07] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:20:17] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 255 seconds)
[08:21:10] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[08:24:51] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[08:25:52] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (Quit: Peng timeout)
[08:26:07] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[08:26:18] *** Quits: humberto1 (~humbertow@2806:107e:f:6813:3cb5:b67a:1c69:f72e) (Ping timeout: 240 seconds)
[08:27:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:28:57] *** Joins: humberto1 (~humbertow@2806:107e:f:6813:b4d2:91a:da7e:caf2)
[08:30:33] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[08:30:51] *** herme5 is now known as el_kevino
[08:32:46] *** __jmcantrell__ is now known as jmcantrell
[08:33:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:34:05] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-2cc5-c74c-4d22-4413.res6.spectrum.com) (Read error: Connection reset by peer)
[08:34:30] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:39] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:20] *** Joins: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at)
[08:38:36] *** Quits: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[08:38:57] *** Joins: djapo (~archangel@user/djapo)
[08:39:10] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[08:40:45] *** Joins: cation21 (cation@user/cation)
[08:41:53] *** Quits: cation (cation@user/cation) (Ping timeout: 255 seconds)
[08:42:14] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[08:42:34] *** Quits: georgios (~georgios@ppp046176224061.access.hol.gr) (Ping timeout: 265 seconds)
[08:44:15] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[08:44:16] *** cation21 is now known as cation
[08:44:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[08:49:58] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:50:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[08:50:47] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[08:51:08] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[08:51:51] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:51:54] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 240 seconds)
[08:53:55] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[08:57:07] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:01:33] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[09:01:44] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[09:02:20] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[09:03:38] *** Joins: frost (~frost@59.71.241.179)
[09:06:12] *** Quits: emika (~emika@185.207.249.62) (Ping timeout: 256 seconds)
[09:07:10] *** Joins: emika (~emika@185.207.249.218)
[09:09:05] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:11:27] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:13:15] *** Quits: Paul (~Paul@user/paul) (Quit: Leaving)
[09:14:06] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:14:07] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:16:16] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 246 seconds)
[09:17:08] *** Joins: trufas (~trufas@177.240.218.218)
[09:18:00] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[09:25:59] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:27:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[09:28:55] *** Quits: esmailelbob (uid508799@id-508799.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[09:33:06] *** Quits: humberto1 (~humbertow@2806:107e:f:6813:b4d2:91a:da7e:caf2) (Ping timeout: 240 seconds)
[09:33:19] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[09:33:26] *** Joins: humberto1 (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d)
[09:36:54] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:37:26] *** humberto1 is now known as humbertowoody
[09:37:42] *** Joins: zenloading (~zenloadin@user/zenloading)
[09:37:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[09:41:44] *** Quits: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[09:42:11] *** Joins: cjb (~cjb@user/cjb)
[09:42:18] *** Joins: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at)
[09:43:02] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:45:29] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:46:49] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[09:52:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:54:26] *** Joins: pnoud (~pnoud@user/pnoud)
[09:56:42] *** Quits: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d) (Ping timeout: 240 seconds)
[09:59:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[10:00:37] *** Joins: wyclif (~wyclif@user/wyclif)
[10:01:40] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[10:01:57] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[10:02:08] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[10:02:57] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[10:03:32] *** Joins: darksun (~darksun@user/darksun)
[10:04:02] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Client Quit)
[10:07:55] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:09:33] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 276 seconds)
[10:11:46] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[10:12:14] *** Joins: upsala (~zcb@185.213.155.160)
[10:13:18] *** Joins: Atque (~Atque@user/atque)
[10:14:33] *** Joins: dhch3 (~dhch@185.213.154.168)
[10:14:35] *** Quits: driib (~driib@185.195.233.168) (Ping timeout: 255 seconds)
[10:14:35] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 255 seconds)
[10:14:35] *** dhch3 is now known as dhch
[10:15:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:16:57] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:22:37] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[10:22:40] *** Joins: driib (~driib@185.195.233.168)
[10:24:21] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[10:25:00] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:26:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:29:45] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[10:30:41] *** Joins: Vonter (~Vonter@user/vonter)
[10:33:02] *** Quits: alexyov (~alexyov@79.124.0.2) (Ping timeout: 255 seconds)
[10:33:52] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:34:13] <shlomif> Hi all! I added configparser support for a vlc nowplay script i found. was fairly straightforward: https://github.com/shlomif/hexchat-vlcnp/commit/7ed705ef51d20278961cf2c7cd7fa7030723493f
[10:35:28] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[10:39:07] *** Quits: i0e (~is0ke3@user/is0ke3) (Read error: Connection reset by peer)
[10:40:16] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[10:40:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:41:09] *** Joins: palasso (~palasso@user/palasso)
[10:41:30] *** Quits: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[10:41:53] *** Joins: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at)
[10:44:11] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[10:45:54] *** Quits: seednode2 (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:14] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:46:24] *** Joins: seednode2 (~seednode@user/seednode)
[10:46:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[10:47:28] *** Lord_of_Life_ is now known as Lord_of_Life
[10:50:43] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:51:08] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:51:49] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:53:58] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:54:29] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:28) (Quit: Client closed)
[10:56:15] *** Joins: c10l (~c10l@89.34.167.207)
[10:57:26] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:58:33] *** Joins: baloona (~baloona@mail.baloona.de)
[10:58:39] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:58:44] *** Joins: CombatVet_ (~c4@user/combatvet)
[10:59:25] *** CombatVet_ is now known as CombatVet
[10:59:45] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[11:02:11] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:02:12] *** Quits: LiftLeft (~LiftLeft@37.19.198.39) (Ping timeout: 245 seconds)
[11:03:54] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:10:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 255 seconds)
[11:11:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:12:42] *** Quits: audiocat (~audio@2603-8081-1800-00ad-ca61-4be9-9d56-0b00.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:13:48] *** Joins: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[11:15:01] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:19] *** Joins: darksun (~darksun@user/darksun)
[11:16:32] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 256 seconds)
[11:16:51] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:20:43] *** Joins: stevieh (~skrodzki@p2e584df2.dip0.t-ipconnect.de)
[11:21:48] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:22:54] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[11:23:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[11:25:23] *** Quits: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net) (Read error: Connection reset by peer)
[11:26:08] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[11:27:46] *** Joins: LiftLeft (~LiftLeft@154.16.192.65)
[11:29:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:29:23] *** Joins: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:b5ae:407e:7ce1:43be)
[11:30:39] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[11:33:32] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 256 seconds)
[11:34:17] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:36:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:37:08] *** Joins: tims1 (~tims@61.69.131.46)
[11:37:54] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-30d3-5991-7173-0cce.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:40:35] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:41:01] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Ping timeout: 244 seconds)
[11:41:14] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[11:41:30] *** Quits: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[11:42:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:42:26] *** Joins: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at)
[11:42:49] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[11:42:50] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 268 seconds)
[11:42:53] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:42:55] *** Quits: dbristow_ (~dbristow@user/dbristow) (Remote host closed the connection)
[11:45:03] *** Joins: dbristow (~dbristow@user/dbristow)
[11:45:30] *** Quits: LiftLeft (~LiftLeft@154.16.192.65) (Ping timeout: 240 seconds)
[11:47:04] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[11:48:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[11:49:04] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[11:56:12] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[11:57:17] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[11:59:14] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[12:03:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:06:30] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: Bye)
[12:14:04] *** Joins: kosh (~kosh@user/kosh)
[12:17:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:18:42] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[12:20:48] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:21:28] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[12:22:55] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[12:23:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:24:21] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:27:47] *** Joins: ramblebamble (~ramblebam@37.120.209.204)
[12:28:08] *** Quits: ramblebamble (~ramblebam@37.120.209.204) (Client Quit)
[12:29:01] *** Joins: Fluxx (~Fluxx@user/fluxx)
[12:32:10] <madprops> does this work like a reference, no need to return 'matches' ?  https://bpa.st/MBXQ
[12:33:23] <supakeen> Sure.
[12:33:56] *** Joins: rendar (~rendar@user/rendar)
[12:34:29] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[12:36:20] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[12:36:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:49] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 268 seconds)
[12:39:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:01] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[12:42:32] *** Quits: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[12:43:06] *** Joins: y1n (~y1n@84-115-65-105.wifi.dynamic.surfer.at)
[12:43:58] *** Joins: nyah (~nyah@90.221.186.180)
[12:44:11] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:45:06] *** Joins: stoneware (~stoneware@user/stoneware)
[12:47:46] *** Quits: cman (~Cody@2603:9000:d104:8465:556d:190a:6b7a:6a79) (Ping timeout: 256 seconds)
[12:48:26] *** Joins: cman (~Cody@2603-9000-d104-8465-bd24-21c0-2bd0-676d.inf6.spectrum.com)
[12:49:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[12:54:25] *** Quits: neolem (~neolem@user/neolem) (Quit: The Lounge - https://thelounge.chat)
[12:55:40] <madprops> hmm how can I use annotations here https://bpa.st/WZYA
[12:55:48] <madprops> in the __eq__ Match is not yet defined
[12:55:55] <madprops> so it errors out
[12:56:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:56:56] <jinsun> you can quote it "Match"
[12:57:11] <madprops> oh yeah that works
[12:57:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[12:57:38] *** Joins: wyclif (~wyclif@user/wyclif)
[12:57:53] <jinsun> or you can do `from __future__ import annotations` then it will work without quotes also
[12:59:18] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[13:00:04] *** Joins: mei (~mei@user/mei)
[13:00:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:01:36] *** Joins: cedric (~cedric@2a01:cb11:867:c200:d62a:a4a2:6539:1c44)
[13:03:21] *** Joins: DB123454321 (~DB1234543@2409:4065:e1b:7426:500a:8273:19b:ef29)
[13:04:03] *** Joins: neolem (~neolem@gueuti.fr)
[13:04:09] <DB123454321> ChrisWarrick: Have you found the solution to my error?
[13:04:24] <madprops> is set(list_of_objects) done in place ?
[13:04:42] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:07:52] <DB123454321> ChrisWarrick: I hope you remember, mysql.connector error
[13:08:46] <jinsun> madprops: no
[13:09:04] <madprops> jinsun, yeah just realized. also realized i have to cast it to list( afterwards
[13:09:15] *** Quits: neolem (~neolem@gueuti.fr) (Quit: The Lounge - https://thelounge.chat)
[13:09:31] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[13:10:28] *** Quits: DB123454321 (~DB1234543@2409:4065:e1b:7426:500a:8273:19b:ef29) (Quit: Client closed)
[13:11:17] <jinsun> madprops: depends on what you are doing, if you will just loop over it then you can do without casting to list, if you need list specific behavior then you have to cast
[13:12:14] <madprops> I see
[13:12:21] <jinsun> and by cast I am assuming you mean list(...) and not typing.cast(list, ...)
[13:12:29] <madprops> list(..)
[13:12:54] <madprops> now I'm wondering why return hash((.. needs 2 different properties to be used .. what if I want to only use one?
[13:13:49] <madprops> or well it needs 4 items at least it seems
[13:16:03] <jinsun> show your code? I didn't understand what 2 different properties .. or 4 items ..  refers to
[13:16:43] *** Joins: hatsu (~user@45.76.36.123)
[13:17:27] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[13:17:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[13:18:28] <madprops> https://bpa.st/EVJQ
[13:18:46] <madprops> I'm just adding eq and hash functions so set(..) works
[13:18:55] <madprops> i conder objects equal just by having the same path
[13:19:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:19:53] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:20:18] *** Joins: TheRedRipper (~TheRedRip@user/theredripper)
[13:22:14] <madprops> also list(set(..)) doens't seem to preserve order
[13:22:45] <Repiphany> sets don't have an order so turning one into a list doesn't guarantee anything about the order
[13:24:07] <jinsun> madprops: why do you think you need to give a tuple of 4 items minimum to hash? what happens if you do hash(self.path)?
[13:24:32] <madprops> I'm guessing is to make the hash as unique as possible
[13:25:38] *** Joins: neolem7 (~neolem@gueuti.fr)
[13:27:22] *** neolem7 is now known as neolem_
[13:28:37] <madprops> thing is I wanted to compare without using the second property
[13:28:45] <jinsun> well hash doesn't require you to give 4 items, it can work with just hash(self.path) as well, but if you want to make a tuple of 4 that is your choice
[13:28:45] <madprops> but I'm just doing a custom function for it
[13:29:04] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:30:01] *** Parts: neolem_ (~neolem@gueuti.fr) ()
[13:32:25] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:32:42] *** Quits: emika (~emika@185.207.249.218) (Ping timeout: 240 seconds)
[13:33:14] *** Joins: emika (~emika@185.207.249.182)
[13:34:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:35:53] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[13:38:28] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[13:40:14] *** Quits: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (Ping timeout: 258 seconds)
[13:42:45] *** Quits: y1n (~y1n@84-115-65-105.wifi.dynamic.surfer.at) (Ping timeout: 276 seconds)
[13:43:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b) (Quit: Leaving)
[13:43:19] *** Joins: y1n (~y1n@84-115-65-250.wifi.dynamic.surfer.at)
[13:45:24] *** Joins: pnoud (~pnoud@user/pnoud)
[13:47:45] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[13:48:12] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:48:19] *** Joins: DB123454321 (~DB1234543@2409:4065:e1b:7426:500a:8273:19b:ef29)
[13:49:02] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:49:50] *** Joins: palasso (~palasso@user/palasso)
[13:50:30] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:50:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[13:50:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[13:51:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:52:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:52:43] <DB123454321> I am getting error in mysql.connector/python
[13:52:45] <DB123454321> mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)
[13:53:37] <DB123454321> code used: import mysql.connector as s
[13:53:37] <DB123454321>  sd=s.connect(host='localhost',user='root',password='<correctpassword>',database='<existingdatabase>')
[13:53:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:54:55] <DB123454321> code:  import mysql.connector as s
[13:55:10] <DB123454321> sd=s.connect(host='localhost',user='root',password='<correctpassword>',database='<existingdatabase>')
[13:55:29] <DB123454321> Someone kindly help me out!
[13:55:34] *** Joins: darksun (~darksun@user/darksun)
[13:55:54] *** Quits: zenloading (~zenloadin@user/zenloading) (Remote host closed the connection)
[13:57:51] *** Joins: zenloading (~zenloadin@user/zenloading)
[13:58:28] <DB123454321> same code working well for pymysql.connect
[13:58:40] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 265 seconds)
[13:58:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:59:03] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[13:59:44] <DB123454321> but,need to use mysql.connector compulsorily for project,so,stuck
[14:00:01] <DB123454321> Looking forward for help.
[14:02:09] *** Joins: wyclif (~wyclif@user/wyclif)
[14:03:39] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[14:04:26] <DB123454321> Waiting!
[14:05:28] <neolem> DB123454321: maybe you can't log directly as a root user in your db ?
[14:06:22] <DB123454321> i can
[14:06:38] <DB123454321> using password into mysql command line client
[14:07:14] <DB123454321> and checked hostname and username using: select current_user; and got output: root@localhost
[14:08:58] <neolem> DB123454321:
[14:09:07] <neolem> maybe this will help you https://stackoverflow.com/questions/64936683/mysql-connector-errors-programmingerror-1045-28000-access-denied-for-user-r
[14:09:21] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[14:09:27] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:10:41] <DB123454321> neolem: I checked that out too,
[14:11:01] <DB123454321> almost everything in google regarding that is searched but in vain
[14:12:16] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:13:23] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[14:13:34] *** Joins: ferz (~ferz@93.48.251.229)
[14:16:54] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[14:17:09] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[14:17:56] *** Quits: catdog (~quassel@birdperson.tuxzone.org) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:18:20] *** Joins: catdog (~quassel@birdperson.tuxzone.org)
[14:20:04] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[14:20:13] *** Joins: Adoi (~Adoi@user/adoi)
[14:20:52] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[14:21:49] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[14:22:49] <Linux77> nive UGT to all, a great hug cool friends!
[14:23:17] *** Joins: entuland (~entuland@user/entuland)
[14:23:29] <Linux77> i have published an python lib in pypi, under GPL3 terms, i am trying collaborate!
[14:23:39] <DB123454321> still waiting for someone to help!
[14:24:27] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[14:26:00] *** Quits: TheRedRipper (~TheRedRip@user/theredripper) (Quit: WeeChat 3.0)
[14:26:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:28:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[14:28:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:28:40] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:29:01] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[14:29:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:29:43] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:30:52] *** Quits: ripdog (~quassel@user/ripdog) (Quit: ripdog)
[14:32:07] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[14:32:24] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:32:45] <ChrisWarrick> DB123454321: hi, you might want to readjust your approach to IRC — we’re volunteers, and we typically don’t look for solutions for other people’s problems after they leave
[14:33:19] *** Joins: ripdog (~quassel@user/ripdog)
[14:34:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:34:55] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[14:38:33] *** Joins: rando25892 (~sthk@user/rando25892)
[14:39:44] <DB123454321> i joined yesterday,so don't much about it
[14:39:51] <DB123454321> *know
[14:40:04] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:df8e:d579:d268:b9c7)
[14:42:03] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[14:42:39] *** Quits: y1n (~y1n@84-115-65-250.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[14:42:46] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[14:43:06] *** Joins: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at)
[14:43:15] <DB123454321> ChrisWarrick: I asked as you said yesterday you would be asking you teacher about that.
[14:43:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:43:46] <DB123454321> It's okay, now I am clear about.
[14:43:49] <ChrisWarrick> DB123454321: I meant that you should ask the person who gave you the assignment to use mysql.connector to let you use pymysql, which we’ve already established it works.
[14:44:45] <DB123454321> I asked him but, as per our syllabus, we must use that.
[14:44:54] <DB123454321> He said that.
[14:45:09] <DB123454321> So, no idea what to do.
[14:45:21] <ChrisWarrick> Well, he’s your teacher, so he should help you solve the problem
[14:45:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:45:40] <DB123454321> yes, but, he is unable himself
[14:45:54] <ChrisWarrick> and he won’t let you use a reasonable solution you found?
[14:46:01] <DB123454321> not yet
[14:46:15] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:46:22] <ChrisWarrick> that’s a strange approach to teaching
[14:46:32] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:46:50] <DB123454321> has asked me to try as much as I can,because, our examiner for viva won't accept pymysql
[14:47:02] <DB123454321> as per strict syllabus
[14:47:14] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:47:32] <ChrisWarrick> did you try asking #mysql?
[14:48:18] <DB123454321> yes
[14:48:26] <DB123454321> no one has a solution yet
[14:48:49] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:49:24] *** Quits: crawler (~crawler@user/crawler) (Quit: ZNC - https://znc.in)
[14:49:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:50:12] *** Joins: orbatos (~orbatos@user/orbatos)
[14:50:44] *** Quits: orbatos (~orbatos@user/orbatos) (Remote host closed the connection)
[14:52:40] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:55:10] <DB123454321> Waiting if someone has got a solution.
[14:55:40] <FunkyBob> what's the problem?
[14:56:26] *** Joins: wilk (~wilk@user/wilk)
[14:56:32] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[15:03:27] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:03:54] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[15:06:10] *** Quits: rando25892 (~sthk@user/rando25892) (Quit: Changing server)
[15:06:20] *** Joins: palasso (~palasso@user/palasso)
[15:06:56] <DB123454321> FunkyBob: https://dpaste.com/AFP4U55TH
[15:07:04] <DB123454321> kindly check it out
[15:07:17] <DB123454321> i don't know why getting th error
[15:07:27] <DB123454321> *the
[15:08:07] <FunkyBob> is mysql set to allow that login via localhost?  or is this another case of "we'll pretend you meant a local socket"?
[15:08:35] <DB123454321> i can connect using same code with pymysql.connect
[15:08:43] <FunkyBob> not what I asked
[15:09:10] <FunkyBob> I know at least one of t he DB drivers for mysql will fudge the connection to a unix socket if it thinks that's what you _really_ meant
[15:09:22] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[15:10:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[15:11:30] <DB123454321> i checked username and hostname in mysql command line client by typing: select current_user; and got: root@localhost
[15:13:19] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Konversation terminated!)
[15:13:33] <FunkyBob> and with the mysql command line tool, you explicitly specified localhost ?
[15:13:40] <DB123454321> no
[15:13:48] <FunkyBob> and if  you try doing that?
[15:14:10] <DB123454321> i logged in and then,typed: select current_user;
[15:14:23] <DB123454321> and got: root@localhost
[15:15:03] <FunkyBob> no
[15:15:08] <FunkyBob> again, not what I said
[15:15:13] *** Joins: opa (~opa@cpe-212-85-170-66.cable.telemach.net)
[15:15:25] <FunkyBob> log in using the mysql command line tool, telling it explcitly everything you told it in python
[15:16:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[15:17:07] <DB123454321> can you elaborate what to do after logging in?
[15:17:53] <FunkyBob> no, not _after_ logging in
[15:18:09] <FunkyBob> I want to know that you _can_ log in if you _explicitly_ specify to connect to localhost
[15:18:20] <FunkyBob> otherwise mysql may be deciding to connect via a unix socket
[15:18:30] <FunkyBob> and it's just possible the mysql auth will  restrict that
[15:18:41] <FunkyBob> also, in python does it work if you specify 127.0.0.1 instead of localhost?
[15:18:45] *** Titore_ is now known as Titore
[15:18:48] <DB123454321> no
[15:18:53] <FunkyBob> do you recall the exact steps you used to create the user?
[15:18:56] <FunkyBob> no what?
[15:19:01] *** Joins: computeiro (~Wender@189.37.65.22)
[15:19:17] <DB123454321> no,even after using 127.0.0.1,same error
[15:19:29] *** Joins: sid-maddy (~sid-maddy@103.76.57.23)
[15:19:32] <grawity> FunkyBob: tbh I thought 'localhost' = unix socket is practically the standard in mysql
[15:19:58] <DB123454321> i didn't create the user, it is there by itself
[15:20:17] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 258 seconds)
[15:20:34] <FunkyBob> grawity: may be... and entirely within the standard "wtf??" behaviors of mysql
[15:21:55] <FunkyBob> grawity: though a quick look at the pymysql code suggest otherwise,
[15:23:05] <FunkyBob> DB123454321: sorry... not sure I can help any more
[15:23:23] <DB123454321> okay
[15:23:25] <FunkyBob> i generally avoid using mysql
[15:23:48] <FunkyBob> however, I do have to use it for $DAYJOB
[15:25:10] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[15:27:38] <DB123454321> i need to compulsorily use for my school project
[15:30:07] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 245 seconds)
[15:30:49] <FunkyBob> well, perhaps check in t he mysql config docs about access control
[15:31:13] <FunkyBob> as mentioned, it's possible some of the tools are lying, and connecting via unix socket when you say localhost
[15:33:40] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[15:34:38] *** Joins: tg (~tg@rockylinux/infra/tg)
[15:35:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:35:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:35:45] *** Parts: DB123454321 (~DB1234543@2409:4065:e1b:7426:500a:8273:19b:ef29) ()
[15:36:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:36:45] *** Joins: kosh (~kosh@user/kosh)
[15:37:15] *** Joins: alexyov (~alexyov@84.22.6.244)
[15:37:21] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:42:04] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[15:42:13] *** vinleod is now known as vdamewood
[15:42:21] *** Joins: schumaml1 (~schumaml@dslb-188-104-174-124.188.104.pools.vodafone-ip.de)
[15:42:35] *** Quits: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[15:42:43] *** Joins: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at)
[15:44:40] *** Quits: schumaml (~schumaml@dslb-178-002-184-123.178.002.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:45:16] *** Joins: rsx (~dummy@ppp-188-174-143-184.dynamic.mnet-online.de)
[15:46:14] *** Joins: pnoud (~pnoud@user/pnoud)
[15:47:28] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[15:49:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:49:42] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[15:49:55] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[15:50:48] *** Joins: darksun (~darksun@user/darksun)
[15:51:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[15:51:29] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[15:54:04] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:55:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[16:03:07] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 250 seconds)
[16:03:49] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:03:50] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Remote host closed the connection)
[16:04:43] *** Quits: opa (~opa@cpe-212-85-170-66.cable.telemach.net) (Quit: Leaving)
[16:05:10] *** Joins: dcaro (~dcaro@user/dcaro)
[16:05:57] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[16:07:14] *** Joins: kmh (~kmh@p200300df5f3d23000955d7f071ccacf7.dip0.t-ipconnect.de)
[16:09:54] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 240 seconds)
[16:16:53] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:bdee:f4c9:3dc8:feca)
[16:21:27] *** Joins: thiras (~thiras@user/thiras)
[16:21:47] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[16:22:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:25:21] *** Joins: xkuru (~xkuru@user/xkuru)
[16:28:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[16:30:14] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[16:30:30] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:30:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:31:57] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[16:33:13] *** Joins: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430)
[16:33:35] *** Quits: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430) (Client Quit)
[16:33:50] *** Joins: Atque (~Atque@user/atque)
[16:36:00] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:33] *** Joins: sgn (~sgn@user/sgn)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:50] *** Joins: georgios (~georgios@ppp046176224061.access.hol.gr)
[16:40:09] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:42:28] *** Joins: Doxin (~Doxin@Powder/Dragon/Doxin)
[16:42:56] *** Quits: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[16:43:21] *** Joins: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at)
[16:43:54] *** Joins: rememberYou (~someone@user/rememberyou)
[16:44:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:45:47] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[16:46:58] <madprops> I'm liking using type annotations (in strict mode)
[16:47:01] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[16:47:01] <madprops> things feel sturdy
[16:47:13] <madprops> I hope this is a standard
[16:50:05] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:51:11] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:53:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:55:09] *** Joins: Liblx (~Alex@2a02:810c:280:59c:98a5:4a8:2d16:599b)
[16:55:58] *** Joins: stats464_ (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:56:45] <Doxin> so I'm trying to figure out how to use setuptools properly to deal with an extension written in D. I seem to be only able to find documentation on how to wire up cython, not even anything on how to get C code to work. Reading the setuptools source code hasn't gotten me any further either. Does anyone have any pointers as to where to look to hook into setuptools for this?
[16:58:25] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 258 seconds)
[17:00:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[17:00:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:00:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:01:37] <raek> Doxin: of you don't find a good way to do it in setup tools, maybe you could have better luck using ensons
[17:02:04] <raek> *if you
[17:02:17] <Doxin> I'd much rather stick to setuptools. thanks for the suggestion though
[17:02:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:04:33] *** Joins: reset (~reset@user/reset)
[17:06:29] *** Joins: jp (jeanpaul@112-54-174-82.ftth.glasoperator.nl)
[17:06:49] *** jp is now known as drjp
[17:06:58] *** Joins: Kvothe (~weechat@user/elodin)
[17:09:29] *** Jefren3 is now known as Jefren
[17:13:27] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[17:17:05] *** Joins: Roey (~Roey@user/Roey)
[17:19:22] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[17:21:23] *** Quits: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:b5ae:407e:7ce1:43be) (Ping timeout: 252 seconds)
[17:25:42] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[17:33:16] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[17:37:26] *** Joins: korg815 (~korg815@user/korg815)
[17:39:42] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:40:31] <raek> understood :-)
[17:40:36] *** Joins: Kvothe (~weechat@user/elodin)
[17:40:54] <raek> *enscons
[17:42:58] *** Quits: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[17:43:29] <Doxin> raek: yeah I figured :P
[17:43:44] *** Joins: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at)
[17:44:13] *** Joins: akk (~akk@75.161.155.222)
[17:44:16] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[17:44:22] *** Quits: georgios (~georgios@ppp046176224061.access.hol.gr) (Ping timeout: 272 seconds)
[17:44:56] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:46:20] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 258 seconds)
[17:47:04] *** Joins: pnoud (~pnoud@user/pnoud)
[17:47:43] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:47:46] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[17:47:54] *** Quits: jazzy (~jaziz@2600:380:c174:6a3d:897b:27a0:9f86:1d4) (Ping timeout: 240 seconds)
[17:51:05] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[17:51:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[17:52:19] <greatgatsby> what's a good version of python to target for a completely new project?  I'm thinking 3.8?
[17:53:39] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:55:21] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[17:55:31] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[17:59:00] *** Quits: emika (~emika@185.207.249.182) (Ping timeout: 268 seconds)
[17:59:01] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:59:02] *** Joins: emika0 (~emika@185.207.249.193)
[17:59:49] *** Joins: georgios (~georgios@ppp046176224061.access.hol.gr)
[18:00:44] *** Joins: Kvothe (~weechat@user/elodin)
[18:03:03] <akk> greatgatsby: Depends on who's going to be using it.
[18:03:24] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[18:06:00] <greatgatsby> it's cross-platform, min Win10 or Ubuntu 20.04, which is why I was thinking 3.8.
[18:06:51] <akk> Are there features in 3.8 that you're dying to use that aren't in, say, 3.6?
[18:07:37] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[18:10:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:10:48] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:11:03] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[18:11:17] *** Joins: BUSY (~BUSY@user/busy)
[18:12:19] <greatgatsby> yeah, there's some nice features like the walrus operator and var= in f-strings that I'd like to start using.  I think I just answered my own question, but thank for the prodding akk.
[18:13:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:14:07] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:14:13] <akk> Now I'm wondering if there's a page somewhere that summarizes the new features in each version.
[18:14:43] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:15:00] *** Joins: wyclif (~wyclif@user/wyclif)
[18:15:10] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[18:15:25] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[18:15:27] <greatgatsby> https://docs.python.org/3/whatsnew/3.8.html
[18:16:13] <akk> I know there are pages for each version, I was looking for a summary over all 3.x versions.
[18:16:31] <akk> It takes a long time to read the full release notes for all versions.
[18:16:45] <entuland> all the 3.x changes is a lot of stuff
[18:16:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[18:17:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:17:17] *** Joins: heco (~redrum@user/redrum88)
[18:18:23] <akk> That's why I'm looking for a summary, just the important/big ones, the ones that make it worth dropping support for older versions.
[18:18:57] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[18:19:11] <entuland> you can get some of that from here: https://docs.python.org/3/whatsnew/, but the level of detail is very very low - maybe check the notable changes links there
[18:19:14] <jinsun> you can see nedbat's what's in which python series for a very short summaries https://nedbatchelder.com/blog/202105/whats_in_which_python_3739.html
[18:19:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:20:30] *** Joins: wyclif (~wyclif@user/wyclif)
[18:21:06] *** Joins: Paul (~Paul@user/paul)
[18:21:33] <entuland> the "release highlights" at the top of each of those sections looks small enough
[18:23:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:23:45] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[18:23:59] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[18:24:28] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[18:24:47] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[18:25:13] <akk> Those netbat summaries look great, thanks.
[18:25:28] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-58ec-8d56-fa5c-3f4a.res6.spectrum.com)
[18:25:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:26:46] *** Joins: wyclif (~wyclif@user/wyclif)
[18:31:14] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 272 seconds)
[18:31:42] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[18:32:13] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:32:50] *** Joins: zebrag (~chris@user/zebrag)
[18:33:20] *** Joins: Kvothe (~weechat@user/elodin)
[18:35:06] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:df8e:d579:d268:b9c7) (Ping timeout: 240 seconds)
[18:40:24] *** Joins: LiftLeft (~LiftLeft@37.19.198.86)
[18:41:17] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 255 seconds)
[18:42:52] *** Quits: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[18:43:20] *** Joins: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at)
[18:44:49] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[18:45:28] <MrMobius> will a qt application look and work more or less the same on windows and mac?
[18:46:16] <KirkMcDonald> I believe it will use natice widgets as appropriate.
[18:46:16] *** Joins: ice9 (~ice9@user/ice9)
[18:46:20] <KirkMcDonald> native*
[18:47:00] *** Joins: Adoi (~Adoi@user/adoi)
[18:47:50] *** Quits: Liblx (~Alex@2a02:810c:280:59c:98a5:4a8:2d16:599b) (Quit: WeeChat 3.2)
[18:48:59] <MrMobius> "cross-platform" could mean all kinds of things so I want to check before I head down this road
[18:51:04] *** Atque is now known as info
[18:51:33] *** info is now known as Atque
[18:52:43] *** Joins: Crassus (~Crassus@user/crassus)
[18:54:09] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:54:44] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[18:55:09] *** Joins: supakeen (~user@python/site-packages/supakeen)
[18:56:03] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[18:56:07] *** Joins: sid_maddy (~sid-maddy@103.76.57.23)
[18:56:15] <entuland> you can get more or less consistent look and feel depending on the widget toolkit you use, MrMobius
[18:57:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[18:57:05] <entuland> and you can also theme them
[18:57:36] *** Joins: califax (~califax@user/califx)
[18:57:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:58:49] *** Quits: sid-maddy (~sid-maddy@103.76.57.23) (Ping timeout: 265 seconds)
[19:00:38] *** Quits: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[19:01:34] *** Quits: sid_maddy (~sid-maddy@103.76.57.23) (Read error: Connection reset by peer)
[19:01:43] *** Joins: sid-maddy (~sid-maddy@103.76.57.23)
[19:01:54] *** Joins: Bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[19:02:04] <p-i-_> This is unfortunate. I was hoping `six := arange(6).reshape(2,3)` would assign, and still dump the value to the .ipynb view cell output.
[19:02:15] <p-i-_> But it gives SyntaxError: invalid syntax
[19:03:03] <gordonjcp> p-i-_: "SyntaxError: invalid syntax" and nothing more?
[19:03:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:04:28] <p-i-_> https://pasteboard.co/KcFjrE2.png
[19:04:30] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:04:42] <bjs> try put it in parens
[19:05:02] <p-i-_> wow, that sorts it!
[19:05:06] <bjs> an assignment expression is not a standalone statement and you have to put it in brackets to make it work
[19:06:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[19:06:34] <gitesh> so when they  started to teach functions, they said functions are to think about the problem in higher level
[19:06:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:06:57] <gitesh> that means you don't have to worry about how the function is impletented if you know it works
[19:07:10] <gitesh> just give proper arguments and it works
[19:07:14] <bjs> gitesh: yeah, that’s one benefit of functions
[19:07:23] <gitesh> now they are teaching function returns a value but why?
[19:07:40] <gitesh> so you mean the other benefit is it returns a value
[19:08:04] <bjs> gitesh: there are lots of benefits. returning a value is just what a function does yeah
[19:08:10] <Repiphany> Functions don't have to return a value, they can also modify some state in a useful way
[19:08:20] *** Joins: Naan (~naan@user/naan)
[19:08:31] *** Joins: Kvothe (~weechat@user/elodin)
[19:08:34] <bjs> gitesh: if you had a read() function that read a file, you don’t need to know how it works
[19:08:42] <bjs> it just returns the value for you
[19:09:38] *** Joins: Elodin (~weechat@user/elodin)
[19:09:55] <Repiphany> (Functional programming is a programming paradigm where you do mainly deal with "pure functions")
[19:10:11] <gitesh> that'd be great
[19:10:27] <gitesh> i would love to make so many  many functions
[19:10:56] <gitesh> but why does function return a vavlue?
[19:10:58] <gitesh> *value
[19:11:17] <gitesh> because it's an expression?
[19:11:22] <bjs> gitesh: well think about my read example
[19:11:33] <Repiphany> The obvious comparison is to mathematical functions
[19:12:02] <bjs> a function that reads a file, it returns a value to give you the thing it read
[19:12:27] <gitesh> it is important that we get the value
[19:12:42] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 240 seconds)
[19:12:49] <gitesh> but instead of return that function just could have write the value to some object
[19:13:16] <gitesh> probably to an object which was input to that function
[19:13:23] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[19:13:44] <Repiphany> Yes, that's what I meant by "modifying state"
[19:14:43] <Repiphany> "Pure functions" have an advantage that they always return the same value for a fixed set of arguments
[19:14:57] <Repiphany> While a function that depends on state can be harder to debug when something goes wrong
[19:15:22] <Repiphany> In either case it's the job of the programmer to ensure the function is correct
[19:16:13] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[19:16:28] <p-i-_> Can numpy be used for Decimal-like datatype?
[19:16:35] <gitesh> Repiphany: that makes a point
[19:16:38] <p-i-_> With reasonable efficiency...
[19:17:23] <KirkMcDonald> p-i-_: "Used for" in what sense?
[19:18:11] <p-i-_> I'm working with fixedpoint numbers
[19:19:50] <Confusioned> Hi, so I got a TensorFlow Saver-Objekt which restored a checkpoint of a model... could someone tell me how I can see the state of the model then?
[19:20:16] <Confusioned> (TensorFlow 1.x or compat functions mainly '~')
[19:21:05] *** Joins: JanC_ (~janc@user/janc)
[19:22:42] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[19:23:03] *** Quits: JanC (~janc@user/janc) (Ping timeout: 252 seconds)
[19:25:22] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:25:24] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 265 seconds)
[19:26:16] <bjs> gitesh: it could do that, some do. others don’t change objects and return things
[19:26:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:27:15] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:28:38] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[19:30:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Read error: Connection reset by peer)
[19:31:17] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:31:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:36:33] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[19:37:18] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[19:38:33] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:40:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:40:13] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[19:41:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:42:04] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[19:42:20] *** Joins: kosh (~kosh@user/kosh)
[19:43:23] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:43:50] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[19:45:12] *** Joins: dez (uid92154@user/dez)
[19:46:27] *** Joins: ramblebamble (~ramblebam@37.120.209.204)
[19:47:53] *** Joins: pnoud (~pnoud@user/pnoud)
[19:52:50] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[19:53:01] <madprops> is there a way to force a print on piped python programs? Problem is that I want to include a prompt/input, but nothing is printed since the program is not over
[19:53:43] *** Joins: Elodin (~weechat@user/elodin)
[19:54:44] *** Parts: Doxin (~Doxin@Powder/Dragon/Doxin) (Leaving)
[19:54:46] <ramblebamble> madprops, that would a shell problem rather than a python one, but if it is just information you want to print, you could abuse stderr to notify the user of standard information
[19:55:01] <ramblebamble> a pipe, unless otherwise instructed, is not piping stderr
[19:55:08] <madprops> oh hm, thanks
[19:55:14] <AhmedAmerican> how to switch `[x for x in mylist if "abc" in x]` to map function
[19:55:55] <grym> AhmedAmerican: (x for x in mylist if "abc" in x) :)
[19:56:19] <grym> (tada, now it's lazy too!)
[19:56:21] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[19:56:34] *** Quits: georgios (~georgios@ppp046176224061.access.hol.gr) (Ping timeout: 240 seconds)
[19:57:21] <AhmedAmerican> grym: dgt!
[19:58:10] <Repiphany> filter, not map
[19:59:00] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 256 seconds)
[19:59:14] <grym> "dangerous goods training"?  genexps aren't that naughty
[19:59:32] <madprops> is it possible to have input(..) print on stderr?
[20:00:33] <grym> madprops: traditionally if you want to use your program in a piped/nonineractive situation, you provide optional command line options/arguments for things you'd alternatively use input() for
[20:02:06] <ramblebamble> Repiphany, well put the conditional further up front [ x if (x%2) else x**2 for x in range(1,100)] not tested but s.th. like that
[20:02:25] <ramblebamble> alternatively there is always the goo' ol' foreach loop
[20:02:33] <madprops> problem is that I don't know what options to provide until it runs, grym  , and the bash part is because I need to do a "cd" later which is a bash built-in thing
[20:02:55] <grym> madprops: eeeeew.  you can just operate on paths with pathlib, no?
[20:03:14] <madprops> grym, but afaik that won't change the shell's path, the one the user uses
[20:03:15] <grym> you should never _have_ to use something like os.chdir
[20:03:16] <ramblebamble> madprops pass the bash built-in thingy as parameter and operate in Python only
[20:03:30] <Repiphany> map can't just ignore elements in an iterable on its own
[20:03:36] <ramblebamble> madprops why would you wanna do that?
[20:04:03] <madprops> ramblebamble, if it's possible to do it only in python that would be a lot better, but afaik it's not possible to change the shell's path programatically
[20:04:11] <grym> madprops: you shouldn't have to
[20:04:46] <madprops> the whole purpose of the thing I'm making is to change the shell's path lol
[20:05:08] <ramblebamble> then just use cd and a shell script
[20:05:21] <ramblebamble> it appears to me that you might suffer from an XY problem
[20:05:30] <ramblebamble> what do you want to do exactly and for what reason?
[20:05:41] <madprops> I'm doing the logic in python because I don't want to mess with bash scripting
[20:05:57] <SnoopJ> madprops, as far I know, a child process can't change the parent process's working directory
[20:06:12] <madprops> ^
[20:06:43] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:10:37] <SnoopJ> You could install a function into the shell that invokes the program, though
[20:10:52] <ramblebamble> SnoopJ, I am not so sure about that, the child might have the same rights as the parent and one has to look into /proc/<procid> to see that the state is on disk
[20:11:05] <ramblebamble> but that is almost dark magic and does not scale
[20:11:06] <SnoopJ> ramblebamble, if you know of a way to do it, I'm all ears.
[20:12:38] *** Joins: georgios (~georgios@ppp046176224061.access.hol.gr)
[20:12:38] <ramblebamble> I said I am not completely convinced
[20:13:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:13:44] *** Quits: tims1 (~tims@61.69.131.46) (Ping timeout: 265 seconds)
[20:13:53] *** Joins: wyclif (~wyclif@user/wyclif)
[20:14:10] <SnoopJ> hmm, bpa.st is down?
[20:14:12] <nedbat> ramblebamble: what are you not convinced of?
[20:14:39] *** Joins: srhm (~ascii@user/srhm)
[20:14:42] <grym> darn youuuu akamai
[20:14:45] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[20:14:56] <SnoopJ> grym, I can't even see the host
[20:15:20] *** Quits: stevieh (~skrodzki@p2e584df2.dip0.t-ipconnect.de) (Quit: Leaving.)
[20:16:13] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 258 seconds)
[20:16:52] <SnoopJ> the function solution looks like this: https://gist.github.com/SnoopJeDi/65a2f6a12cf27a8b2c32c42802b3004c
[20:17:09] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:17:13] *** Quits: srhm (~ascii@user/srhm) (Client Quit)
[20:17:15] *** Joins: MercilessDeth (~brad@136.49.61.2)
[20:17:38] *** Joins: srhm (~ascii@user/srhm)
[20:18:04] <SnoopJ> but does require definition of that function, probably like `eval $(python3 -m foopkg hook)` or something
[20:18:18] <ramblebamble> nedbat, looking at /proc/<procid> we see that cwd is a symlink and they can be altered, not I do know that proc is a special filesystem, but it does expose most of the interfaces of traditional FS, I have since tried it out and apparently even if permissions are correct /proc does not allow it
[20:18:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:18:50] <nedbat> ramblebamble: can you give me the bigger picture here? What is it you are trying to do?
[20:19:10] *** Joins: wyclif (~wyclif@user/wyclif)
[20:19:20] <ramblebamble> nedbat, me nothing, madprops wanted to changed the cwd of the parent process, I would just do it in python only, but yeah that was the entire motivation
[20:19:22] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:19:35] *** Joins: duckmcscrooge (~bsantanad@204.44.124.236)
[20:20:07] <nedbat> i see.  it's true: a child process can't change the cwd of the parent.
[20:20:29] <nedbat> this is why every "whizzy replacement for cd" involves a shell alias in addition to the tool
[20:21:15] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[20:21:24] <ramblebamble> SnoopJ, see above, a mistaken impression of mine
[20:21:55] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[20:22:43] *** Parts: duckmcscrooge (~bsantanad@204.44.124.236) ()
[20:23:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:24:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:24:57] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:15] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Client Quit)
[20:27:39] *** Joins: Auron (~Auron956@user/auron)
[20:27:47] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:28:35] *** JanC_ is now known as JanC
[20:29:16] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[20:29:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:30:23] *** Joins: wyclif (~wyclif@user/wyclif)
[20:32:20] <AhmedAmerican> https://www.irccloud.com/pastebin/HV5b5wny/
[20:32:44] <AhmedAmerican> can i enhance that ?
[20:33:21] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[20:33:46] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[20:34:02] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Client Quit)
[20:34:11] *** Joins: timkofu (~timkofu@user/timkofu)
[20:34:15] <timkofu> Howdy
[20:34:30] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[20:34:57] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[20:35:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:35:14] *** Joins: zebrag (~chris@user/zebrag)
[20:35:31] *** Joins: Deneb (~johnch@37.111.189.80.dyn.plus.net)
[20:35:35] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[20:35:40] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[20:35:48] <SnoopJ> AhmedAmerican, I'd write a generator function for that, maybe: `def find_links(soup): for x in soup.findAll(...): if not {'timeseries', 'waiting'}.intersection(x['href'].lower()): yield x['href']`
[20:35:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[20:35:50] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[20:35:57] *** Joins: wyclif (~wyclif@user/wyclif)
[20:36:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:36:30] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[20:36:32] <AhmedAmerican> SnoopJ: Thank you.
[20:36:58] <catern> pointless code golf question: for _ in useless(): is a way to discard the loop variable when iterating over useless(), but _ is an actual variable so the variables aren't really discarded. for [0][0] in useless(): will really discard it, by assigning it to a list and then discarding the list. is there a shorter or simpler way to really discard the loop variable? (compare also _ = useless() or [0][0] = useless())
[20:37:49] <ChrisWarrick> what’s wrong with _ though?
[20:38:31] <catern> "but _ is an actual variable so the variables aren't really discarded"
[20:38:56] <p-i-_> Is there a more efficient way of doing A = np.vstack([A, new_items]) (A, items being 2D numpy arrays)?
[20:40:31] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[20:40:38] <SnoopJ> p-i-_, there isn't really one, unless you overallocate the array ahead of time and keep track of which entries should be ignored. I sometimes do `arr = np.full(shp, fill_value=np.nan)`, using NaN as a "invalid value" sentinel.
[20:41:00] <gitesh> https://www.irccloud.com/pastebin/P8TXKxbU/exercise.py
[20:41:06] <SnoopJ> stack() (and the specific-axes versions of it) will always copy, I believe
[20:41:23] <gitesh> 'Second one was at least as long" means what?
[20:41:29] <p-i-_> SnoopJ: I see, maybe I can make some kind of circular buffer object..
[20:42:03] <SnoopJ> p-i-_, an ndarray could be used as one, but it's hard to tell what that larger not-your-question problem is.
[20:42:25] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[20:42:54] <p-i-_> SnoopJ: I'm repeatedly adding chunks to end of the array and knocking chunks off the start.
[20:43:15] <p-i-_> kinda like a chunkwise 2d-np-array deque.
[20:43:21] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[20:43:44] <p-i-_> I suppose a ringbuffer isn't too much trouble to implement.
[20:43:47] <SnoopJ> p-i-_, in principle if you can keep track of where you are in the array, you could do it with ndarray
[20:43:58] <p-i-_> Can I get ndarray to wrap?
[20:44:03] <SnoopJ> no
[20:44:09] <SnoopJ> but the arithmetic shouldn't be too bad
[20:44:18] <p-i-_> ok. yeah. It's very doable.
[20:44:52] <SnoopJ> I imagine someone's written it already but don't know anything off the top of my head
[20:44:59] <nedbat> catern: why do you care if _ keeps the value?
[20:46:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:46:25] <catern> nedbat: I don't, it's a pointless code golf question
[20:46:33] <nedbat> catern: ok
[20:46:56] *** Joins: wyclif (~wyclif@user/wyclif)
[20:47:24] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[20:51:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:52:03] *** Quits: rsx (~dummy@ppp-188-174-143-184.dynamic.mnet-online.de) (Quit: rsx)
[20:52:29] *** Joins: wyclif (~wyclif@user/wyclif)
[20:53:43] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[20:54:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:55:03] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:56:09] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[20:56:20] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[20:56:42] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:57:16] *** Quits: ramblebamble (~ramblebam@37.120.209.204) (Quit: "catch yee later")
[20:57:27] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:57:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:57:59] *** Joins: wyclif (~wyclif@user/wyclif)
[20:58:03] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[20:58:38] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[21:00:36] *** Joins: bss (bss@rie.incorporeal.org)
[21:00:41] *** Joins: rsrx (~rsrx@103.225.150.81)
[21:01:23] *** Joins: nahtjona (~nahtjona@190.19.22.16)
[21:03:08] <nahtjona> is there a way to print the character asociated with a codepoint that's stored in a variable? like `code = 'e31e'; print(smth(code))` would print '\ue31e'
[21:03:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:03:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:04:57] <nedbat> nahtjona: you want to print the 8 characters ' \ u e 3 1 e '    ?
[21:05:29] <nedbat> nahtjona: or you want the single unicode character, like print('\ue31e') ?
[21:05:40] <nahtjona> the single unicode char
[21:05:44] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 255 seconds)
[21:07:09] <nedbat> nahtjona: print(chr(int('e31e', 16)))
[21:07:22] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[21:07:29] <nedbat> nahtjona: though i wonder where the 'e31e' came from?
[21:08:12] *** Joins: kristianpaul (~paul@user/kristianpaul)
[21:08:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:08:37] <nahtjona> I'm using nerdfont and wanted to programatically get the icons from the cheatsheet online and have a menu to select them
[21:08:45] <nahtjona> will try that, thank you
[21:08:56] *** Joins: entuland (~entuland@user/entuland)
[21:09:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:09:54] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:10:10] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Read error: Connection reset by peer)
[21:11:15] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 265 seconds)
[21:14:28] *** Quits: sid-maddy (~sid-maddy@103.76.57.23) (Read error: Connection reset by peer)
[21:14:31] *** Joins: sirn (~sirn@user/sirn)
[21:15:03] <p-i-_> six = arange(6).reshape(2,3); six[3<six[:,1]] correctly gives six[3<six[:,1]]
[21:15:52] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[21:16:02] <p-i-_> But six[3<six[:,1]< 5] won't play nice. ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
[21:16:24] <p-i-_> And splitting it doesn't work either: six[3<six[:,1] and six[:,1]<5]  # same
[21:16:52] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:16:59] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 255 seconds)
[21:17:25] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[21:18:12] *** Joins: mrus (~mrus@149.28.61.155)
[21:18:24] <p-i-_> six[(3<six[:,1]) * (six[:,1]<5)]  # works but opaque syntax meh
[21:18:33] <jinsun> that is because "and" wil try to convert the array to bool and numpy tells you it doesn't make sense to do that
[21:18:45] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Read error: Connection reset by peer)
[21:18:55] <jinsun> you can use `&` for elementwise and
[21:19:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:19:13] <p-i-_> ok, so no a < foo < b tricks...
[21:20:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:21:32] *** Joins: Adoi (~Adoi@user/adoi)
[21:23:19] <grym> p-i-_: try & instead of and
[21:26:07] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:28:19] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[21:28:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:28:39] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:30:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:30:43] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[21:31:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:32:16] <nedbat> i'm trying to untangle a bit of a mess, and don't want to make it worse: if I use "pip install -t /usr/local pkgname", does that use /usr/local/bin and /usr/local/lib as the installation places?
[21:33:22] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[21:33:51] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[21:35:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:35:20] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 256 seconds)
[21:36:13] *** Joins: mikeliuk (~mikeliuk@213.205.198.158)
[21:36:18] *** Parts: hatsu (~user@45.76.36.123) ()
[21:37:21] *** Joins: jdmark (~jdmark@67.8.137.130)
[21:40:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:40:31] *** Joins: tedwing (~tw@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr)
[21:40:42] *** Joins: schangg (~schangg@2a01cb080746b7008639c0fffe0203dd.ipv6.abo.wanadoo.fr)
[21:41:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[21:41:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:41:15] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[21:41:29] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:42:02] *** Joins: wyclif (~wyclif@user/wyclif)
[21:42:05] <schangg> Hello I am trying to parse https://github.com/owid/covid-19-data/blob/master/public/data/vaccinations/vaccinations.json (covid vaccination data)
[21:42:18] <schangg> I am having troubles sorting data by date
[21:42:27] <schangg> my code is available at https://hastebin.com/ogavunuzah.py
[21:42:40] <schangg> when I run it, not all dates are sorted by dates
[21:42:59] <jinsun> nedbat: I think that will directly put pkgname in /usr/local, --prefix /usr/local probably will do what you are saying (not sure though)
[21:43:00] <nedbat> schangg: where did you try to sort by date?
[21:43:04] <schangg> and I am not sure what to add to my code to have these sorted by dates
[21:43:41] <schangg> nedbat: I did not, I mean I tried adding .sort(key=date) but that did throw an error
[21:44:14] <schangg> because I was most certainly doing it wrong (I have rather limited python experience as you can guess :) )
[21:44:14] <grym> schangg: what's happening is that you're sorting strings, which don't sort like dates.  you'll need to convert the date string into a date object; there are a few ways to do this
[21:44:24] <grawity> the parameter to key= isn't literally a dict key (and even if it were, you'd have to still use a quoted string there, like key="date")
[21:44:34] <nedbat> schangg: you want to sort within countries, or mix the countries together?
[21:44:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[21:44:42] <schangg> within countries
[21:44:55] <schangg> the idea is to get the most current data
[21:45:12] <nedbat> schangg: the data looks sorted already within countries
[21:45:21] <schangg> in other words, I'd like to get the latest stats for each country
[21:45:33] <schangg> nedbat: it does look like but in fact not
[21:45:36] <grawity> it'd be something like key=lambda pp: pp['date']
[21:45:38] <schangg> nedbat: chec Belgium for example
[21:45:47] <nedbat> schangg: ok. then you actually want max, not sorting
[21:45:48] <grawity> I haven't yet looked at the json to make sure the date format is sortable
[21:46:00] <grym> grawity: it's a string, so... yes, but also no
[21:46:11] <schangg> grawity: it is quite sortable "2021-07-24"
[21:46:20] *** Joins: audiocat (~audio@2603-8081-1800-00ad-427b-ac30-f286-6509.res6.spectrum.com)
[21:46:25] <schangg> I mean unix sort would work great on it
[21:47:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:47:03] <schangg> so, although probably dirty, sorting string would probably work but python does not seem to like that
[21:47:17] *** Joins: Betal (~Beta@user/betal)
[21:47:36] *** Joins: wyclif (~wyclif@user/wyclif)
[21:48:09] <grawity> dunno, python sort() seems to work well on strings like that
[21:48:43] *** Joins: pnoud (~pnoud@user/pnoud)
[21:49:34] <nedbat> schangg: instead of ` for pp in p['data']: print('Date: ' + pp['date']) ` use:  ` pp = max(p['data'], key=lambda d: d['date']); print('Date: ' + pp['date']) `
[21:49:46] <grawity> but, belgium seems to be in order in that json
[21:50:55] <nedbat> schangg: it also looks to me like Belgium is in date order, but the max() code should find you the latest date in any case
[21:51:18] *** Joins: trace1918 (~trace1918@81-236-143-26-no275.tbcn.telia.com)
[21:52:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[21:52:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:53:03] *** Joins: wyclif (~wyclif@user/wyclif)
[21:53:18] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 265 seconds)
[21:53:30] *** Quits: Deneb (~johnch@37.111.189.80.dyn.plus.net) (Quit: Leaving)
[21:53:32] <schangg> excellent, thanks
[21:53:53] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[21:56:57] *** schumaml1 is now known as schumaml
[21:57:21] *** Joins: ht_ (~user@45.76.36.123)
[21:57:33] *** Joins: greedom (~greedom@2001:16b8:32e2:4d00:682a:45d8:7021:a57b)
[21:58:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:58:35] *** Joins: wyclif (~wyclif@user/wyclif)
[22:00:46] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[22:01:12] *** Quits: trace1918 (~trace1918@81-236-143-26-no275.tbcn.telia.com) (Read error: Connection reset by peer)
[22:03:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:04:02] *** Joins: wyclif (~wyclif@user/wyclif)
[22:05:44] *** Joins: Naan (~naan@user/naan)
[22:08:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:09:35] *** Joins: wyclif (~wyclif@user/wyclif)
[22:10:05] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[22:12:30] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[22:13:52] <tedwing> I'm trying to distribute a single-file program to a Mac with system Python v2.7. The program needs to resize images, so I have a dependency on Pillow. I tried packaging everything as a zip file executable, but this fails with an ImportError as Pillow imports a ".so" file which can't be imported from a zip (https://www.python.org/dev/peps/pep-0273/#specification). What options do I have for packaging my
[22:13:58] <tedwing> project as a single file, ideally without it taking tens of megabytes of space?
[22:14:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:14:28] *** Joins: zeden (~zeden@user/zeden)
[22:15:09] *** Joins: wyclif (~wyclif@user/wyclif)
[22:15:42] <SnoopJ> tedwing, shiv is like zipapp, but includes the dependencies, I would recommend it
[22:17:48] *** Joins: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d)
[22:18:05] <rajkosto> i have a package with a __init__.py how do i import all functions in a python file in that package to that file to register them
[22:19:07] <tedwing> SnoopJ: interesting. Do you know if it supports importing ".so" files and a machine with only Python 2 available?
[22:19:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[22:20:09] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[22:20:26] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[22:21:47] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[22:22:00] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[22:22:29] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[22:23:02] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[22:24:42] <SnoopJ> tedwing, yes. It creates a zipapp which unpacks the bundled data to a temporary directory, and modifies sys.path. At that point it's using just the regular old import machinery.
[22:25:02] *** Joins: emika (~emika@212.102.45.109)
[22:25:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:25:12] <SnoopJ> Not entirely sure about deprecated Python, but I think it works for it?
[22:25:30] *** Quits: emika0 (~emika@185.207.249.193) (Ping timeout: 240 seconds)
[22:25:52] <SnoopJ> oh, it lists 3.6+ as a requirement. My mistake :(
[22:26:07] *** Joins: wyclif (~wyclif@user/wyclif)
[22:26:34] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[22:26:52] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[22:27:05] <SnoopJ> You *might* be able to pack something for an older interpreter using a 3.6+ interpreter, though?
[22:27:48] *** Quits: mikeliuk (~mikeliuk@213.205.198.158) (Quit: Connection closed)
[22:27:58] *** Joins: Akuli (~Akuli@87-94-111-167.bb.dnainternet.fi)
[22:29:06] <tedwing> SnoopJ: Cool to learn that it unpacks the data. Thanks for the suggestion, I'll test it out and see if it works using an old Python version once distributed
[22:29:06] *** Quits: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d) (Ping timeout: 240 seconds)
[22:30:20] *** Quits: audiocat (~audio@2603-8081-1800-00ad-427b-ac30-f286-6509.res6.spectrum.com) (Ping timeout: 255 seconds)
[22:30:45] *** Quits: Paul (~Paul@user/paul) (Quit: Leaving)
[22:31:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[22:31:39] *** Joins: wyclif (~wyclif@user/wyclif)
[22:32:08] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[22:32:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:31] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[22:33:33] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: Lost terminal)
[22:34:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:34:52] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[22:35:10] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:36:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:36:58] *** Joins: skapata (~Skapata@user/skapata)
[22:37:12] *** Joins: wyclif (~wyclif@user/wyclif)
[22:39:20] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[22:39:42] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[22:39:58] <Payam> is bpaste.st down?
[22:41:10] <SnoopJ> Payam, I believe so
[22:41:14] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[22:41:17] <SnoopJ> (bpa.st is, anyway)
[22:41:40] <SnoopJ> tedwing, unfortunately no, the stub code that shiv emits is 3.6+ specific :(
[22:42:00] *** Joins: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d)
[22:42:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:42:21] <Payam> what do you guys recommend to use instead of bpaste?
[22:42:41] *** Joins: wyclif (~wyclif@user/wyclif)
[22:44:07] <tedwing> SnoopJ: Ah, I see. Thanks a bunch for checking. Looks like I'll need to keep looking for something for this use case, but good to know about shiv for future reference
[22:45:30] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[22:46:18] *** Quits: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d) (Ping timeout: 240 seconds)
[22:47:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:48:02] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:48:09] *** Joins: wyclif (~wyclif@user/wyclif)
[22:48:26] *** Joins: srhm (~ascii@user/srhm)
[22:48:33] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 268 seconds)
[22:49:41] *** Quits: srhm (~ascii@user/srhm) (Client Quit)
[22:49:58] *** Joins: srhm (~ascii@user/srhm)
[22:50:35] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 255 seconds)
[22:52:02] <wyre> hi guys, I cannot install wxpython in a venv with poetry https://paste.centos.org/view/9d14ed12
[22:52:05] <wyre> why do you think is this?
[22:53:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:53:29] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[22:53:32] <AhmedAmerican> what could be the quick way to have a list of Months between given start/end Month with year format such as following `Jan20` Till `Feb21` so i expect output of [`Jan20`, `Feb20`, ... , `Feb21`]
[22:53:43] *** Joins: wyclif (~wyclif@user/wyclif)
[22:53:59] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:54:28] *** Joins: c10l (~c10l@89.34.167.207)
[22:56:48] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[22:58:23] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:58:49] *** Joins: srhm (~ascii@user/srhm)
[22:59:02] <SnoopJ> tedwing, there is the possibility here that you could modify the thing that shiv emits to be py2 friendly, it's "only" a few hundred lines of code and from a quick glance it doesn't seem TOO specific. Possibly PEX could also work here, I think it comes more from the py2-before-it-was-deprecated era.
[22:59:12] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:02:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Read error: Connection reset by peer)
[23:03:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:03:38] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[23:04:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:04:42] *** Joins: wyclif (~wyclif@user/wyclif)
[23:04:52] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:06:25] <SnoopJ> tedwing, yes, PEX offers you an option here. https://pypi.org/project/pex/
[23:06:46] <SnoopJ> Just tested python2 and numpy==1.11.0 (I just choose an arbitrary old version that supports py2)
[23:07:09] *** Joins: upsala (~zcb@185.213.155.160)
[23:07:31] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:08:42] <jinsun> AhmedAmerican: is pandas allowed?
[23:08:43] <SnoopJ> the bare size of the archive it produces is 396 KB for me. With that version of numpy it's about 16 MB, but that's kinda to be expected, numpy is bulky.
[23:09:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:10:07] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:10:13] *** Joins: wyclif (~wyclif@user/wyclif)
[23:10:14] <tedwing> SnoopJ: Awesome, thanks very much! I'll try PEX. That sounds like what I'm looking for from a size perspective too
[23:10:36] <AhmedAmerican> @jinsun i try to avoid pandas to DRY the code as i feel that importing huge library such as pandas is not match the concept.
[23:11:49] *** Joins: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d)
[23:12:14] <AhmedAmerican> jinsun: i think datetime libraries probably has a daterange feature?
[23:12:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:13:06] <jinsun> well pandas has it, datetime definitely doens't but maybe dateutil has
[23:15:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:15:25] <madprops> I'm having some issue where repeating some function several times causes the process to consume high cpu, making it go slow, accumulative ... not sure what could be causing this
[23:15:44] *** Joins: wyclif (~wyclif@user/wyclif)
[23:16:14] *** Quits: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d) (Ping timeout: 255 seconds)
[23:16:38] <AhmedAmerican> jinsun: not sure how to do that
[23:17:00] <stealth_> madprops, link to code?
[23:17:00] <graingert> madprops: show your code?
[23:17:18] <madprops> https://github.com/madprops/ezkl/blob/main/ezkl.py
[23:17:33] <graingert> https://jiffyclub.github.io/snakeviz/ can help too
[23:17:44] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[23:17:47] <madprops> the function I repeat is jump()
[23:19:29] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[23:20:16] <bjs> madprops: in MatchList you have `def __init__(self, items: List[Match] = [])` do you really mean for all MatchList objects to share the same items?
[23:20:17] <stealth_> madprops, can you use this to profile your code https://github.com/joerick/pyinstrument/ just run `python3 -m pyinstrument --html your_code.py`
[23:20:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:20:36] <bjs> madprops: maybe you mean `= None` and wanted to say `items = items if items is not None else []` inside __init__
[23:21:16] *** Joins: wyclif (~wyclif@user/wyclif)
[23:23:15] <madprops> bjs, I'm confused because I thought doing self.items = x assigned it to the respective instance
[23:23:53] <bjs> madprops: it does, but you're assigning the same list to every item because the [] up there isn't `self` it's the default argument and that default is a shared object
[23:24:16] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:24:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:24:38] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[23:24:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:24:51] <madprops> so there's a chance that default is growing exponentially?
[23:24:57] *** Joins: sirn- (~sirn@user/sirn)
[23:25:12] *** Joins: slav0nic (slav0nic@python.su)
[23:25:22] <madprops> i wasn't aware it was shared
[23:26:16] *** Joins: jinsun (~quassel@user/jinsun)
[23:26:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[23:26:25] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 246 seconds)
[23:26:34] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 240 seconds)
[23:26:34] *** sirn- is now known as sirn
[23:26:40] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:26:45] *** Joins: wyclif (~wyclif@user/wyclif)
[23:27:24] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[23:27:28] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:28:42] <madprops> yeah that seems to fix it
[23:28:54] *** Quits: Strom (strom@fedora/strom) ()
[23:30:07] *** Quits: georgios (~georgios@ppp046176224061.access.hol.gr) (Ping timeout: 245 seconds)
[23:30:23] <madprops> thanks. I'll have to check how these default/optional arguments work
[23:30:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[23:30:43] *** Joins: Tempesta (Tempesta@user/tempesta)
[23:31:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:31:26] *** Joins: Strom (strom@fedora/strom)
[23:32:17] *** Joins: wyclif (~wyclif@user/wyclif)
[23:32:39] <madprops> https://florimond.dev/en/posts/2018/08/python-mutable-defaults-are-the-source-of-all-evil/
[23:32:42] <madprops> heh
[23:33:46] <stealth_> madprops, yes, you are suppose to do `items = None; if items is None: items = []`
[23:35:58] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[23:36:17] <stealth_> reading code with typing info is so annoying
[23:36:44] <ChrisWarrick> s/with/without/
[23:37:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:37:13] <madprops> I needed Optional
[23:37:19] <madprops> to be able to set None as default
[23:37:37] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:37:49] *** Joins: wyclif (~wyclif@user/wyclif)
[23:39:36] *** Joins: humbertowoody (~humbertow@2806:107e:f:6813:58ff:74e0:8a86:335d)
[23:40:11] <stealth_> no with, i tend to keep typing info in docs string.
[23:40:30] <stealth_> easy to make mistakes with actual code
[23:40:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:75af:7907:b5fe:65e1) (Quit: Textual IRC Client: www.textualapp.com)
[23:40:58] *** Joins: georgios (~georgios@ppp046176224061.access.hol.gr)
[23:41:07] <ChrisWarrick> type annotations help you write better code
[23:41:18] <ChrisWarrick> if your type annotations are wrong, then mypy will yell at you
[23:41:18] <stealth_> so its said!
[23:41:56] <stealth_> only when you are testing using mypy
[23:42:12] <bjs> well yeah
[23:42:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:42:19] <jinsun> on my own code I like to hover over the variable to see the types, that works well in vscode only with annotations
[23:43:02] <jinsun> so that is another readability benefit of annotations
[23:43:07] <ChrisWarrick> stealth_: yes, you are expected to do that if you’re using type annotations
[23:43:10] <madprops> vscode shows all errors mostly, but mypy --strict sees more
[23:43:17] <stealth_> i thought c type were ugly, now python has this horrendous typing everywhere.
[23:43:19] *** Joins: wyclif (~wyclif@user/wyclif)
[23:44:18] *** Quits: asix (~Anders@user/asix) (Ping timeout: 240 seconds)
[23:44:26] <stealth_> 90% of the time you don't need to know what type a parameter is, and 90% of the time its there to annoying you and waste more time.
[23:44:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:45:34] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Remote host closed the connection)
[23:45:47] <Byteflux> AhmedAmerican: how's this? i think it may do what you're asking. https://gist.github.com/Byteflux/4de81a986f41ceaf77c6798cda21b252
[23:46:29] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[23:46:43] <AhmedAmerican> https://www.irccloud.com/pastebin/GhGQUbm4/
[23:46:54] <AhmedAmerican> was implementing that
[23:47:01] <Byteflux> ah, nice. great if it works
[23:47:16] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[23:47:30] <AhmedAmerican> Byteflux: yours is fine. Thank you
[23:48:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:48:22] <Byteflux> no problem
[23:48:52] *** Joins: wyclif (~wyclif@user/wyclif)
[23:49:18] <AhmedAmerican> graingert: some thoughts for that?
[23:49:34] *** Joins: pnoud (~pnoud@user/pnoud)
[23:49:52] <graingert> ?
[23:51:21] <AhmedAmerican> https://www.irccloud.com/pastebin/0t2Nznvb/
[23:51:29] <AhmedAmerican> graingert: ^
[23:52:49] <AhmedAmerican> I think Arrow arrange that https://arrow.readthedocs.io/en/latest/#ranges-spans
[23:53:10] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:53:11] *** Quits: neibo (~neibo@86.127.254.176) (Remote host closed the connection)
[23:53:29] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[23:54:57] *** Joins: trace987 (~trace@dynamic-002-247-248-138.2.247.pool.telefonica.de)
[23:55:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:56:01] *** Quits: d3sync (~d3sync@62.1.243.19.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[23:56:51] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:56:55] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[23:58:25] <tokerboker> i much prefer the version from Byteflux - easy to read and reason
[23:58:30] *** Joins: Celeo (~Celeo@user/celeo)
[23:58:52] <tokerboker> although it can possibly be improved a bit.
[23:58:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:59:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:59:53] *** Joins: wyclif (~wyclif@user/wyclif)
[23:59:53] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
