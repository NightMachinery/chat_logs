[00:08:11] <shka> compilation of Ukrainian farmers towing Russian equipment https://old.reddit.com/link/t6zt00/video/iag4twq1chl81/player?utm_source=reddit&utm_medium=usertext&utm_name=UkraineWarVideoReport&utm_content=t3_t6zt00
[00:08:31] <shka> with soothing country music
[00:15:16] <waleee> russian-protip: dont let your shit get rusty and full of sealant-rot in ye' olde Siberian tank-depo
[00:15:29] <waleee> +t
[00:20:11] *** Quits: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de) (Quit: Leaving)
[00:26:17] *** Joins: jeosol (~jeosol@user/jeosol)
[00:29:18] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[00:29:59] *** Joins: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de)
[00:45:43] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[00:56:21] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Quit: WeeChat 3.4)
[00:56:59] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[01:00:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:09:32] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[01:12:11] <shka> german attempt at humor https://www.huffpost.com/entry/german-embassy-russian-embassy-kinda-experts-nazism_n_6223afaee4b0bd1df76c9972
[01:12:13] -ixelp- Germany To Russia: We're 'Kinda Experts' On Nazism, And Russia Isn't Fighting It | HuffPost Latest News
[01:12:14] <shka> :D
[02:10:33] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: brb...)
[02:20:36] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[03:20:46] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 245 seconds)
[03:22:53] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[04:04:33] *** Joins: OutsideContextPr (GreatFlea@168.138.73.107)
[04:29:10] <moon-child> gilberth: remind me: did you say that the alpha channel should be in linear space or perceptual space?
[04:59:38] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 256 seconds)
[05:01:19] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[05:03:37] *** Joins: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net)
[05:08:37] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[05:56:09] *** Quits: OutsideContextPr (GreatFlea@168.138.73.107) (Quit: The Lounge - https://thelounge.chat)
[05:58:59] * hayley uploaded an image: (23KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/KmitlickYvFjxyAsazwGvgOb/Screenshot%20from%202022-03-06%2013-28-50.png >
[06:00:28] <moon-child> I think that, rather than bakerposting
[06:00:32] <moon-child> it should simply be called baking
[06:04:01] *** Quits: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net) (Remote host closed the connection)
[06:04:04] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 272 seconds)
[06:06:23] <hayley> moon-child: https://youtu.be/MYQL1zp-zco?t=822
[06:06:24] -ixelp- My Little Pony: Friendship Is Magic Season 1 Episode 4 Applebuck Season - YouTube
[06:09:01] * hayley tries to use the lispcord library and loses.
[06:09:14] <moon-child> really easy to talk irc
[06:10:25] <hayley> You don't say.
[06:10:51] <White_Flame> "Stop with the shakin', it's time to get bacon!"
[06:21:49] *** Quits: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:26:18] * hayley uploaded an image: (159KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/pdDLyBUbbiYQEjoSXJyVwBEB/Screenshot%20from%202022-03-06%2013-56-06.png >
[06:26:39] <hayley> Now I guess I have to port it to IRC, but I would have to separate sentences rather than paragraphs, to fit the length limit. Hm.
[06:29:38] <moon-child> I mean, a whole paragraph of baker is probably not what you want anyway
[06:29:44] <moon-child> should be short and pithy.  Otherwise no one will read it
[06:30:02] * hayley uploaded an image: (108KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/gGvHAOgjTLtTHEtRnRQKHtyr/Screenshot%20from%202022-03-06%2013-59-52.png >
[06:30:11] <hayley> The citations are just plain noise, but idk how to filter those.
[06:30:50] <hayley> > Henry G. Baker, Ph.D. ("Dubious Achievement", Comm. of the ACM 34, 4 (April 1991), 18.)
[06:31:05] <moon-child> oh I thought it was going to be hand-curated quotations
[06:31:21] <hayley> I haven't decided, really.
[06:36:39] <hayley> Foo, why is SBCL eating CPU and burning my lap?
[06:47:13] *** Joins: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net)
[06:47:33] <vms14> hayley: you gave me once a tissue some years ago
[06:47:38] <vms14> 00:41 * no-defun-allowed passes vms14 a tissue
[06:47:50] * vms14 returns the used tissue to hayley
[06:47:56] <hayley> .-.
[06:48:00] <vms14> here you are, thanks
[06:48:46] <vms14> I was autostalking me
[06:48:55] <vms14> and realized I have a reddit account
[06:49:35] <moon-child> you were autostalking ... yourself?
[06:49:44] * moon-child wonders if it is possible to auto-stalk one other than one's self
[06:50:03] <vms14> ahahah yes
[06:50:10] <vms14> I was stalking Puercopop
[06:50:18] <vms14> and thought what if someone stalks me
[06:50:28] <vms14> and tried to see what they'll find
[06:51:52] <vms14> they'll just find some random talks in irc and a reddit account I've made just to spam about how heliohost.org added sbcl as cgi script
[06:53:39] <vms14> and some people will think I'm a solenoid
[06:54:54] <vms14> btw just used heliohost like 3 days xD
[06:55:04] <vms14> we did fucking nothing
[06:55:14] <vms14> as always
[07:07:09] <vms14> look at my request
[07:07:11] <vms14>  If you add common lisp, specially sbcl I'll say to all lispers that you've added a lisp cgi for that host. And they could even be donators.
[07:07:16] <vms14> ahahahahhahaa
[07:07:32] <vms14> https://classic.helionet.org/index/topic/35234-suggestion-to-add-common-lisp-as-cgi/
[07:07:33] -ixelp- [Solved] Suggestion to add common lisp as cgi - Escalated Requests - HelioNet
[07:07:40] <vms14> fucking vms
[07:09:15] <vms14> how funny I am
[07:09:17] <vms14> xD
[07:21:52] <hayley> "Who tf is this Henry g baker fellow" "the most based person ever"
[07:26:37] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:28:42] *** Joins: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com)
[07:29:15] <vms14> your crush
[07:29:25] <hayley> Sure.
[07:35:40] <hayley> https://gist.github.com/no-defun-allowed/92ecbb060c852608a0f5977de9897a89
[07:35:41] -ixelp- bakerposting.lisp Â· GitHub
[07:38:53] <hayley> Now I guess I need a IRC port. And it should also recreate the classic behaviour of minion, where it says "OMG!!! Ponies!!!"
[07:39:35] <vms14> didn't know minion had that feature
[07:39:51] <vms14> I always liked him
[07:40:16] <hayley> If you say "pony" it does say "OMG!! Ponies!!!"
[07:40:47] <moon-child> pony
[07:40:51] <moon-child> pony?
[07:40:57] * moon-child wants pony :<
[07:41:59] <hayley> ðŸ¦„
[07:42:37] * hayley waits for Pi to compile Ironclad.
[07:43:29] <vms14> hayley: autostalking me I saw you once told me you made a chess in the rpi
[07:43:34] <vms14> how did it end?
[07:43:47] <hayley> I gave up on the engine, because it would seemingly randomly pick really bad moves.
[07:44:22] <vms14> the ai for a chess must be hard
[07:44:44] <vms14> I suppose people just put predefined movements with some optional branches
[07:46:23] <hayley> Hm, for some reason I have to disconnect and reconnect the bot a few times before it actually works. lispcord must be racing these days.
[07:46:58] <vms14> lol
[07:50:53] *** Joins: semz_ (~semz@user/semz)
[07:52:27] <vms14> discord bots were much easier to make than telegram ones
[07:52:47] <vms14> I'd like to punish the guy who wrote the telegram documentation
[07:53:06] <vms14> specially the fast views api
[07:53:16] *** Quits: semz (~semz@user/semz) (Ping timeout: 245 seconds)
[07:54:02] <vms14> which remembers me now I'm in debian so I could use the telegram c api
[07:55:00] <vms14> https://core.telegram.org/tdlib
[07:55:00] -ixelp- Telegram Database Library
[08:17:24] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[08:38:52] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:58:35] *** Quits: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net) (Remote host closed the connection)
[10:17:20] <kakuhen> i am finally at the interesting part of my flac decoder rewrite
[10:17:34] <kakuhen> i learned a lot of lessons from my 8-month-old spaghetti code
[10:18:24] <kakuhen> by "interesting" part, I mean I am finally unpacking non-trivial frames (i.e. ones encoded as lpc)
[10:18:39] <kakuhen> i feel motivated to write a toy encoder now
[10:22:36] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cfdc:46b6:d3d6:d388) (Ping timeout: 240 seconds)
[10:23:07] <ck_> how would it encode a rubber duck?
[10:24:50] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:c731:e273:a007:5879)
[10:29:51] <White_Flame> terrible!
[10:30:15] <ck_> :|
[10:56:32] <kakuhen> not sure, but i am making some bold assumptions in how i downmix 5.1 and 7.1 to stereo
[10:56:38] <kakuhen> mostly because of the stupid LFE channel
[10:57:05] <kakuhen> i'm making my own test sample so i can probe the behavior of ffmpeg and other software handling audio
[10:57:26] <kakuhen> bassdrum in rear center then add an off-beat bass to the LFE channel
[10:57:31] <kakuhen> see what happens when i downmix to stereo across different programs
[10:58:03] <kakuhen> everything else is probably just averaging channels (e.g. left = rear-left + side-left / 2)
[10:58:37] <kakuhen> LFE channel ruins any possibility of canonically downmixing a 5.1 and 7.1 stream because Dolby intends theaters to do whatever the hell they want with it
[11:09:46] *** semz_ is now known as semz
[11:32:01] *** Joins: lisp123 (~lisp123@120.154.103.52)
[11:35:57] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[11:36:11] *** Joins: lisp123 (~lisp123@120.154.103.52)
[11:51:46] *** Joins: Lycurgus (~juan@98.4.112.204)
[11:55:16] <gilberth> moon-child: linear.
[12:00:22] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:01:40] <kakuhen> damn, I can't have &optional &rest in my defgeneric
[12:01:42] *** Joins: amazigh (~amirouche@user/amirouche)
[12:02:08] <kakuhen> i made a huge oversight and forgot to adjust sample depth when a subframe has wasted bits
[12:02:31] <kakuhen> so I can either modify the subframe object to have a "parent," which is the frame it belongs to, or I can modify my parse-block method to have an optional depth argument
[12:02:48] <kakuhen> neither solution sounds clean to me, but i forced myself into this direction
[12:04:01] <moon-child> gilberth: ok, cool
[12:04:03] <moon-child> I think it usually is
[12:04:35] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[12:06:46] <kakuhen> how crazy is it for a class X to have a class Y as a slot, and Y has X as a slot
[12:07:08] <kakuhen> both have accessors so it seems like you can make an infinite composition of accessors
[12:07:14] <kakuhen> i need to learn how to write software some day
[12:07:32] <dave0> software is easy. magnets are hard.
[12:07:42] <kakuhen> i find math easier than software
[12:07:57] <kakuhen> and magnet harder than math
[12:09:52] <moon-child> kakuhen: cycles are not crazy
[12:10:08] <kakuhen> i suppose it's not crazy because i am not doing any inheritance
[12:10:16] <kakuhen> the objects are distinct and do not share any slots besides a stream
[12:10:24] <kakuhen> the frame object passes its underlying reader to the subframe
[12:10:29] <kakuhen> but that's the most "inheritance" you get
[12:12:43] <kakuhen> then I consider a flac to be completed once i EOF on seeking to the next sync code
[12:13:15] <kakuhen> as for seeking, i havent implemented seektables yet, because i got distracted by the fact sample rates can differ across frames
[12:13:43] <kakuhen> for now i compute average bitrate and seek to a reasonable "guess" in the stream, then spend time searching for a valid sync code
[12:14:45] <kakuhen> this required me to rewrite a lot of my signal conditioning because I originally signalled an error at the slightest thing off in a stream of bytes
[12:14:57] <kakuhen> condition signalling* wow my english tonight is great
[12:22:17] <hayley> moon-child: think of the poor borrow checkers though
[12:31:41] <moon-child> does a borrow checker borrow check itself?
[12:31:45] <moon-child> seems pretty cyclical to me...
[12:32:19] <kakuhen> btw it seems ccl's compiler is very slow when you use a ton of defclass and related macros
[12:32:38] <kakuhen> a game im working on with a friend doesnt really spam class definitions like my decoder does, and most files compile in like 0.01s
[12:32:53] <kakuhen> but my relatively dumb and simple decoder takes 0.04s to compile the frame parsing code
[12:33:15] <kakuhen> perceived difference is insignificant but the statistics do interest me
[12:35:32] <hayley> moon-child: nah, they probably wimp out and use indices instead of pointers
[12:38:36] <kakuhen> oh also i have a parsing-related question i guess
[12:38:57] <kakuhen> so i have a macro that will read N bits from a stream and bind the value to a bunch of lexical variables
[12:39:48] <kakuhen> it kinda works like this: (parse-fixed-binary stream ((sync-code 14) (mandatory-bit 1) (blocksize-type 1)) ...)
[12:40:04] <kakuhen> anyway, suppose the mandatory-bit fails to be the desired value, then I signal an error
[12:40:20] <kakuhen> but the state of the parser is now inconsistent with the error signalled
[12:40:35] <kakuhen> because the error was signalled after I read 1 more bit
[12:41:04] <kakuhen> im wondering how one deals with this; ensuring that the state of the parser is consistent with the most recent condition being signalled
[12:42:20] * |3b| had problems on sbcl at one point where a macro expanding to a bunch of local functions inside defmethods was very slow to compile because the clos code-walker compiled all of them even if unused, no idea if ccl does anything similar
[12:45:15] <|3b|> for the parsing part, either check before reading the next bit or backtrack of some sort (unread the bit, save/restore state, etc)
[12:58:35] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:03:00] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[13:15:50] <gilberth> Do I need to update a bounding rectangle when nobody looks at it? I mean can't I just mark a bounding rectangle as being dirty and compute it only when someone asks for it?
[13:15:53] <|3b|> or other interpretation of backtracking, split "read N bits" into "inspect next N bits" (like PEEK-BYTE in CL) and "consume N bits"
[13:16:39] <|3b|> gilberth: sounds reasonable, if you are sure nobody is looking at it behind your back :)
[13:17:17] <|3b|> (or can specify that they look at it only using the thing that would recompute as needed)
[13:17:33] <gilberth> |3b|: Nobody could look behind my back as whoever looks needs to go through the reader method.
[13:19:15] <gilberth> Well, I contemplate my "print 10,000 lines" benchmark. Each line printed would create a new output record, which would enlarge the bounding box of the parent, which would enlarge the parent of the parent etc, until the pane notes that it needs more space.
[13:19:18] <dave0> |3b|: tough call ... sometimes `peek N bits` is real handy, but `read N bits` is simpler
[13:20:11] <|3b|> dave0: but is "read N bits + unread N bits" simpler?
[13:20:36] <gilberth> I could instead just mark bounding boxes as dirty. Tell the frame manager that the pane needs to grow, for which there already is a protocol, and then recompute bounding boxes once per vsync essentially. In between nobody would really care for the exact bounding box.
[13:21:00] <|3b|> dave0: both tend to imply a similar caching layer between the input and the user, so seems to balance out
[13:21:04] <dave0> |3b|: that's just the flip-side of `peek N bits` + `drop M bits`
[13:21:18] <|3b|> right, that was my point :)
[13:22:28] <|3b|> peek+consume maps well to "do the right thing when there is a non-local exit", while read+unread needs the user to deal with that manually, but is simpler if you don't care about errors
[13:23:30] <dave0> |3b|: peek is more complicated if you try to read past the end of your file
[13:23:42] <gilberth> Same could apply to the dirty region, I keep. I could as well mark branches as dirty without regard to the exact region. I could compute the latter in bulk which ought to be way cheaper. *sigh*
[13:23:43] <|3b|> gilberth: i wonder if that actually ends up needing less work, if recomputing the bounding box would need to look at all the 10k records
[13:24:01] <|3b|> while updating only looks at the new ones
[13:24:58] *** Joins: shka (~herr@109.231.3.55)
[13:25:36] <gilberth> |3b|: Well, what I save is recomputing the parent and parent's parent etc up until the pane's bounding box 10k times. And the last thing involves I/O as the render thread needs to be signaled.
[13:28:04] <|3b|> yeah, i guess going up the tree makes it messier (particularly with an expensive node in there)
[13:28:11] <gilberth> I believe this applies to the dirty region more so. I mean I compute the union of all the 10k line rectangles, while only a small part is actually rendered. When keeping dirty flags, I could factor out all the non-visible lines to begin with.
[13:30:05] <gilberth> But I guess this depends. It would slow down a single line printed. But as long as you make the 16ms, you're fine.
[13:32:13] * |3b| would say 7ms, but i'm too cheap/lazy to actually buy a monitor like that :p
[13:32:52] <gilberth> My philosophy here is to shift as much work to the render thread as possible and have the actual application thread do as less as possible. The rationale is that for the render threads it doesn't make sense to blast out more frames than make it to your display and such work could be saved.
[13:33:14] <|3b|> yeah, sounds reasonable
[13:33:30] <gilberth> |3b|: Well, if you could afford such a display, you sure could afford a faster machine than I have, too.
[13:35:06] <gilberth> And btw, this naturally leads to parallelism.
[13:35:28] * |3b| can't afford, but will buy both anyway :p
[13:35:51] <moon-child> :D
[13:36:12] <moon-child> good monitors are so expensive
[13:36:19] <gilberth> I'd rather like to have a 5120x2880 27" display, but I can't find one.
[13:36:41] <moon-child> esp. if you want good resolution and good refresh rate.  And decent colours
[13:36:53] <gilberth> moon-child: Screens last for ever. My screens usually survive the machines that I attach to them.
[13:37:10] <moon-child> decent colour + anything will run quite a bit.  Want all three (as I do), and it gets ridiculous
[13:37:22] <gilberth> So money spend on screens is well spend money.
[13:37:30] <moon-child> gilberth: good point
[13:37:44] <|3b|> i think the one i'm looking at is $900, 27" 4k@144Hz, hdr600. can't quite justify the jump in $ to get FALD
[13:39:03] * gilberth is fine with 60Hz but wants lots of pixels rather.
[13:39:14] <|3b|> and yeah, i've been waiting for all 3 of 4k,120+Hz,HDR for a while since i hope it to last a while once i do upgrade
[13:40:20] <|3b|> saw 65" 8k tv for $2500, that has a lot of pixels :) they are a bit big though
[13:40:51] <moon-child> I can get by just fine with 1366x768 crapresolution (as my old laptop had).  But new laptop has 120hz, high-res, and it is qualitatively _much_ nicer to look at; would like something like that on the desktop
[13:40:56] <gilberth> I should have said "DPI". This is my grief with OLEDs. They are still too large.
[13:40:59] <moon-child> smooth scrolling feels so much more worthwhile
[13:41:19] <moon-child> |3b|: just place it 10 feet away, problem solved :)
[13:41:50] <|3b|> then i'd have to wear my glasses :p
[13:42:52] <moon-child> curious, what monitor were you looking at?
[13:43:36] <|3b|> lg 27gp950-b
[13:43:50] <|3b|> seem to actually be back in stock for a change, wonder if that will last
[13:45:13] <|3b|> oh yeah, also add g-sync to list of features i've been waiting on, since i don't always want to trade the quality for framerate to stay at 144 :)
[13:46:06] <pjb> gilberth: Apple sells you such good monitor, packed with a processor too.  They call them iMac.
[13:46:21] <dave0> get a pink one
[13:47:05] <kakuhen> not sure if i trust imac monitors given the awful response time of my macbook monitor
[13:47:08] <gilberth> How would macos render on 4k? Would it believe that this is a "Retina" display and make everything larger? I mean, the DPI is just between Retina DPI and regular DPI.
[13:47:27] <pjb> Indeed.
[13:47:50] <kakuhen> if i move my cursor fast enough, my eyes can catch up to three different ghost cursors, but I do not see this on other displays -- so the response time of my macbook display must be really really bad, well above 10 ms
[13:48:31] <gilberth> pjb: I never will buy an iMac. As I don't want to dispose the screen, when I dispose the machine. And I dispose or upgrade machines more often than displays.
[13:49:58] <gilberth> And I have seen way too many macs just die out of the blue.
[14:13:18] <hayley> My uncle: "Wow, you'll get used to moving heavy things all day." Me: "Fuck you." Him: "By the sounds of things, I have a niece and not a nephew."
[14:13:23] <hayley> Little does he know.
[14:13:40] <kakuhen> my favorite part of the flac spec is the line that says "all numbers are unsigned unless otherwise specified," but all encoded samples are implicitly signed ints in libflac code
[14:13:44] <dave0> should i put "world record holder for super mario bros speed run" on my resume? it's either that or "youtube celebrity"
[14:14:20] <kakuhen> the only indication of signed ints in flac spec is in lpc coefficients, but the samples from verbatim and constant subframes are actually stored as signed ints
[14:15:03] <kakuhen> i know this because im skimming libflac source code and the verbatim subframe is using a FLAC__int32 type
[14:15:11] <kakuhen> yet the spec never mentions the samples are signed
[14:16:00] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:16:08] <hayley> (Also never mind that I've observably been physically week since I was a child. Yet no one seems to get that.)
[14:17:08] <hayley> Should I make the Bakerposting bot speak IRC?
[14:18:26] <dave0> hayley: you have quite the potty mouth ... i swear like a sailor but not usually around family
[14:21:58] <kakuhen> i just learned that mask-field is a function in the standard library
[14:22:10] <kakuhen> i really wish there were an easy way to search if something already exists in the cl library
[14:22:55] <kakuhen> 8 months ago I manually made my own half-baked implements of mask-field
[14:23:24] <gilberth> CL:APROPOS?
[14:23:53] <kakuhen> well, the problem is i dont know the name of the functions i want
[14:24:21] <kakuhen> i somehow did not come across mask-field when i read about the bitwise operations in cllhs
[14:27:02] <gilberth> Heh, use flash cards to memorize all CL symbols :-)
[14:27:38] <kakuhen> i guess you have a point
[14:28:31] <kakuhen> to be fair, im sure alexandria has a sign-extend function already, but im trying to keep as little dependencies as possible on my new flac decoder
[14:28:39] <hayley> dave0: That side of the family is Irish. You get that.
[14:29:43] <gilberth> kakuhen: Yes, sign extending is missing. I wish a signed version of LDB would be standard.
[14:31:38] <kakuhen> if i were a millionaire i would fund a new common lisp spec just to add sign-extend and assq
[14:32:46] <gilberth> ASSQ? Why ASSQ?
[14:32:49] <shka> kakuhen: there is little practical difference between alexandria and actual standard 
[14:33:08] <kakuhen> gilberth: because i've used it before and ccl already ships a compiler macro for it
[14:33:38] <gilberth> And there isn't a compiler macro for ASSOC? What about MEMQ?
[14:34:28] <kakuhen> hmm, well when i needed assq for non-CCL impls, I always resorted to something like (assoc x y :test #'eql) and it was annoying
[14:37:13] <gilberth> Well, you could define ASSQ easily and it would be reasonable to assume that there are compiler macros on ASSOC. This is somewhat different to a SIGNED-LDB, where the idiom is less obvious and you may assume that there is some CPU instruction for sign extending.
[14:37:53] <gilberth> The latter also applies to rotating a byte. Though C compilers get away with recognizing just the common idioms for that.
[14:38:17] <hayley> LLVM can identify LOGCOUNT loops.
[14:38:54] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[14:38:56] <hayley> Reminds me that I need to start writing that damn molecular simulator port. It'll be funny.
[14:42:17] <gilberth> Yes, but signed LDB is harder. I have <http://clim.rocks/gilbert/ldsb.lisp>. Good luck with that.
[15:00:10] <gilberth> BTW. There is a TREE-RECOMPUTE-EXTENT which would compute all bounding boxes anew. Hinting to that batching could be done, yet there is no protocol for that.
[15:08:17] <kakuhen> I really do not like the ability of me to do (first (subframes (owner (first (subframes (owner subframe)))))) in my code 
[15:08:30] <kakuhen> but once I start streaming a flac to my speakers with this new decoder we'll see if i made a design mistake
[15:08:33] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:09:15] <kakuhen> since subframes have an "owner" slot pointing to the frame hosting them, and frames have a "subframes" slot which hosts an array of subframes it owns, i can just infinitely compose accessors
[15:10:00] <kakuhen> but it also gives me really elegant decoders for constant and verbtaim subframes
[15:10:31] <kakuhen> e.g. (setf (payload subframe) (make-array block-size :initial-element (sign-extend (read-bits (reader subframe) (depth subframe))))
[15:11:13] <kakuhen> oh im missing a 32 but you get the idea
[16:14:06] <kakuhen> another function i didnt know existed until now: MAP-INTO
[16:15:09] <kakuhen> this is perfect for decorrelating joint stereo streams
[16:15:47] <kakuhen> e.g. if we have left and side channels, then we can do (map-into side #'- left side) to convert side into the right channel
[16:15:53] <kakuhen> or at least that's how i expect it to work
[16:18:38] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:27:30] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[16:43:17] <dave0> will the tesla bot be able to drive?
[16:48:03] <gilberth> What else should it do?
[16:49:43] <ck_> give inspiring speeches to shareholders
[16:50:38] <ck_> shake Angela Merkels Hand at a conference maybe.
[16:51:23] <ck_> it's been done before, future robots need to at least reach this baseline https://www.youtube.com/watch?v=Xrkg26QSpXM
[16:51:23] -ixelp- Merkel makes friends with dancing, jumping robot on Japan visit - YouTube
[17:04:59] *** Joins: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:05:32] *** Quits: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[17:05:47] *** Joins: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:09:30] *** Quits: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[17:09:44] *** Joins: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:11:08] *** Quits: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[17:11:22] *** Joins: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:16:39] *** Quits: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[17:16:54] *** Joins: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:19:23] *** Quits: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Client Quit)
[17:19:37] *** Joins: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:21:33] *** Quits: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Client Quit)
[17:22:41] *** Joins: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:23:03] *** Quits: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Excess Flood)
[17:25:06] *** Joins: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt)
[17:28:37] <amazigh> ^^
[17:34:58] *** Joins: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:35:25] *** Quits: Brucio-95 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Client Quit)
[17:37:08] *** Joins: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:58:49] *** Quits: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:05:33] *** Joins: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:07:03] *** Quits: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[18:10:28] <gilberth> Hurrah! Latency on an internal event queue with SBCL is 60ms. I use whatever is a BT:CONDITION-VARIABLE. Is that really supposed to have such a high latency? And it's not constant.
[18:14:23] <edgar-rft> I assume that's why it is a variable :-)
[18:16:55] *** Joins: Brucio-61 (~Brucio-49@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:20:15] <gilberth> edgar-rft: This is not funny. I measure between 30ms and 120ms latency from signaling that there is something in the buffer to the thread waiting for it to be woken up. I believe 100ms is a bit too long a time for a keystroke to be even considered to be processed.
[18:20:24] *** Quits: Brucio-61 (~Brucio-49@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[18:20:53] *** Joins: Brucio-61 (~Brucio-49@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:21:17] <gilberth> I should scratch that and figure out how to FFI with SBCL to get a damn Mach semaphore, which is 1000x faster than what ever SBCL sells as a condition variable.
[18:22:27] <gilberth> Or BT. Don't know who the culprit is.
[18:23:50] *** Quits: Brucio-61 (~Brucio-49@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[18:27:45] <gilberth> With Mach semaphores I get around 20us. Not ms.
[18:30:19] <gilberth> The question rather is: I am the first to notice?
[18:33:26] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:34:49] <gilberth> Ok. SB-THREAD has semaphores with the very same interface as CCL, but 1000x slower. Why?
[18:40:08] <gilberth> On Linux it's faster than 1ms, I can't measure times less than 1ms as internal-time-units-per-second is 1000.
[18:41:22] <gilberth> So, the second question is: Why borrow the API from CCL but not the implementation? Third question: What synchronization primitive is that slow?
[18:42:47] <gilberth> Fourth question: Is that a joke?
[19:00:16] <scymtym> gilberth: for SBCL on linux, INTERNAL-TIME-UNITS-PER-SECOND should be 1000000
[19:02:00] <shka> gilberth: all very good questions!
[19:02:36] <gilberth> scymtym: It's not for me. But doesn't matter as I measure <1ms. Which is all I need to know. SBCL on Linux seems to be fine.
[19:03:59] <gilberth> So it's the macos port which is pathological. If M-. would work with SBCL, it would be easier to find what is going on.
[19:04:20] <scymtym> gilberth: maybe you are using an old version on linux. anyway, do you have a self-contained test case that demonstrates the behavior (on darwin, i presume)?
[19:04:21] <selwyn> how do computers measure time
[19:04:26] <selwyn> is there a piezoelectric element
[19:04:50] <selwyn> or is it optomechanical
[19:04:55] <gilberth> A crystal.
[19:05:30] <selwyn> is it still quartz
[19:06:03] <gilberth> Yes. I would be surprised, if it would be anything else.
[19:06:16] <selwyn> why am i asking about this lol
[19:06:25] <selwyn> it is not like i don;t have enough physics in my life
[19:06:32] <shka> green arrays cheap has no dedicated clock
[19:06:37] <shka> *chips
[19:06:47] <pl> selwyn: quartz for off-line time keeping, then calibrating how many cycles/other inputs happen per given time
[19:06:56] <pl> shka: they are async, yes
[19:07:15] <shka> pl: mentioning this because those are rather creative when comes to measuring time
[19:07:17] <selwyn> um
[19:07:52] <gilberth> Well, you still use a crystal oscillator to derive the clock.
[19:08:46] <shka> yeah, this is the way to do it
[19:09:16] <gilberth> And a PLL to scale it to where you really want it to be.
[19:21:13] <gilberth> Ah. SBCL doesn't use any synchronization primitive but polls. With a sleep time, which is increased over time. I once got a bad grade for such an idea.
[19:21:52] <gilberth> Ok, so when all SBCL can do, is to poll, then why use its primitives?
[19:24:27] <gilberth> Why not just poll at HZ as everybody else does. This is ironic as I found this bug while I switched from my adhoc polling implementation to one that uses an actual semaphore.
[19:26:48] <gilberth> Or whatever is sold as a semaphore to me.
[19:31:45] <selwyn> i wonder if it would be fun to write a paper with beach
[19:32:09] <selwyn> otoh he must have very high standards for writing
[19:32:20] <selwyn> oto you would end up with the best paper ever
[19:38:27] <gilberth> scymtym: Here you go <http://clim.rocks/gilbert/cvtest.lisp>
[19:38:52] <scymtym> gilberth: thank you
[19:39:44] <gilberth> It uses semaphores. The initial code using BT:CONDITION-VARIABLE is above in #+NIL.
[19:40:23] <gilberth> I noticed that with SBCL these condition variables boil down to semaphores, and semaphores is what I rather want in the first place.
[19:49:53] <scymtym> i'm confused, it is the other way around in the target-thread.lisp i have. here, condition variables use either futexes or polling with exponential back-off and semaphores use condition variables
[19:50:21] <gilberth> Wait a second.
[19:51:57] <gilberth> scymtym: You're correct. I was confused. Sorry.
[19:52:42] <scymtym> gilberth: no worries. i'm still baffled by the polling thing since some of the main developers are on darwin
[19:54:00] *** Joins: Lycurgus (~juan@98.4.112.204)
[19:54:39] <gilberth> What puzzles me most is the back-off in polling. Every other implementation of PROCESS-WAIT, I have seen so far just sleeps for 1/HZ, which usually is fine. And HZ here is assumed to be 1000.
[19:55:15] <gilberth> And ironically, I repeat myself, I wanted to get rid of that polling in the first place. :-)
[19:56:12] <scymtym> i guess the back-off is to not burn too much power when waiting for a long time, but still, the resulting behavior is pretty bad
[19:57:10] <gilberth> This is why I once got a bad grade for that idea by my prof.
[19:57:29] * Lycurgus is curious as to why whatever it is can't be event driven
[19:58:04] <gilberth> In practice CCL:PROCESS-WAIT doesn't burn too many cycles with its 1ms sleep.
[19:58:10] <Lycurgus> guess that answers the question
[19:58:44] <Lycurgus> gilberth, by you comments on CLIM i thought you were an old timer rather than a student
[19:58:57] <Lycurgus> *your
[19:59:08] <gilberth> Lycurgus: Because SBCL uses futexes otherwise, which perhaps are not there on macos, and the developers didn't care to find some replacement there.
[19:59:13] <Lycurgus> or at least a veteran developer
[19:59:37] <Lycurgus> i c
[19:59:47] <gilberth> Lycurgus: "Once" = Somewhen in my past. You can't tell how old I am by that.
[20:00:24] <edgar-rft> gilberth: you must be more than once
[20:00:35] <Lycurgus> yes, i missed the temporal qualifier
[20:01:28] <Lycurgus> although it's weakness would have led to the same conclusion
[20:01:33] <Lycurgus> *its
[20:01:50] <gilberth> And is operating system design still taught? And harddisk [arm] scheduling?
[20:02:06] <Lycurgus> since in context I would have construed 'once' as recent not 'once upon a time'
[20:02:07] <gilberth> And printer queue scheduling?
[20:02:30] <gilberth> "upon a time" makes me feel old, thanks. ;)
[20:02:33] <Lycurgus> OS design surely is
[20:02:50] <Lycurgus> servo ops too but not for that app
[20:03:09] <gilberth> Anyhow, I am not that old enough that they would have taught me how to sort tapes.
[20:04:14] <gilberth> Though I have a book from the late 60s I believe about algorithms, which tell you how to do that with two or three tapes. Fun read.
[20:05:00] <Lycurgus> well it was mostly done with utilities anyway
[20:05:44] <Lycurgus> on 360/370 the SORT/MERGE utility
[20:06:57] <gilberth> Anyhow, I now know why SBCL is slow here for me. That is all that I wanted to know. I guess I could FFI into Mach and grab a real semaphore.
[20:07:41] <gilberth> When in doubt I could use mkfifo(1) and block on it. :-)
[20:07:43] <scymtym> strangely, even win32 is fine. futex_{wait,wake} just call {WaitOn,WakeBy}Address
[20:08:31] <gilberth> Is everything in SBCL build upon futexes? Would it be suffice to emulate them?
[20:09:28] <gilberth> And what is a futex? A wait channel?
[20:09:30] <scymtym> i would say yes, but i suspect somebody would have done it if it was that easy
[20:09:35] <scymtym> but yeah, seems like that's how it's done for windows
[20:09:48] <gilberth> I see. Thanks.
[20:11:08] <gilberth> Maybe they hadn't the idea to resort to Mach? As I could imagine that using libpthread won't be that easy.
[20:11:41] <random-nick> gnu hurd's mach has futexes
[20:11:54] <scymtym> if i recall correctly, SBCL used to use mach primitives more extensively, but that caused many problems
[20:12:11] <gilberth> Hmm.
[20:12:30] <edgar-rft> futex is your ex-future, from the time when you still believed that there *is* a future
[20:18:22] <gilberth> Ah, futexes seem to be some wait channel essentially.
[20:20:21] <gilberth> Does somebody know of a quick way with SBCL to see, if ALIEN could resolve a given symbol?
[20:21:05] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[20:23:32] <gilberth> Ok. Have it. semaphore_create seems to be there. Good.
[20:25:15] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:39:59] <gilberth> But that is a bit mood anyway, as macos raises your timeout to 10s anyway, when you're a GUI process.
[20:40:53] <gilberth> Or 20s, if you're lucky.
[20:44:36] *** Quits: pjb (~pjb@user/pjb) (Read error: Connection reset by peer)
[20:58:19] <gilberth> Otherwise MAKE-INSTANCE is 50x faster in my case with SBCL compared to CCL. I wonder if I could fix that.
[21:14:58] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[21:24:44] <clothespin> morning
[21:24:57] <clothespin> at least for 5 more minutes
[21:25:19] <gilberth> Good morning. What happens in five minutes?
[21:25:36] <clothespin> afternoon
[21:26:10] <gilberth> Ah good, I was thinking about something bad like the Russians attacking. Wait a second.
[21:27:09] <gilberth> And isn't afternoon the perfect morning? To me it is. ;)
[21:31:49] <clothespin> i have two hours to get to the diner before it closes
[21:32:49] <gilberth> Ah, you need to go there?
[21:35:08] <clothespin> no, but i would rather go there than the grocery store
[21:43:01] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[21:47:09] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Read error: Connection reset by peer)
[21:47:35] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[21:47:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[22:15:56] <gilberth> Another speed demo: <http://free-clim.org/demo/clim-speed-5.mp4> You don't see much, which is my point. :-)
[22:16:59] <gilberth> Somhow I am unable to scale it down, so that the Retina resolution goes away. /me and ffmpeg will never get friends.
[22:29:44] <gilberth> With CL:TIME output <http://free-clim.org/demo/clim-speed-6.mp4>
[22:29:53] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:a120:b8c7:d412:19c8)
[22:35:27] *** Joins: vats (~vats@103.216.143.6)
[22:45:32] *** Quits: vats (~vats@103.216.143.6) (Ping timeout: 256 seconds)
[22:48:39] *** Joins: lisp123 (~lisp123@120.154.103.52)
[22:53:28] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[22:54:10] <shka> Ukraine defense ministry stopped updating military situation
[22:54:30] <shka> no idea what is happening in there anymore
[22:56:55] *** Joins: pjb (~pjb@user/pjb)
[23:06:14] <pl> Russians are parading a laptop, probably sold or stolen from German based E-3A unit, as "proof" 
[23:06:37] <shka> proof of what?
[23:07:03] <ck_> proof of NATO MEDDLING IN SOVEREIGN SOVIET AFFAIRS .. probably
[23:07:18] <shka> *sigh*
[23:07:34] <shka> it is fucking disappointing how they literally came back to winter war propaganda
[23:07:39] <ck_> I have a thinkpad too, want me to go put some stickers on it?
[23:09:04] *** Joins: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net)
[23:09:14] <ck_> I've noticed, too, that all linux installations come with a russian number station called /dev/urandom
[23:09:25] <ck_> it sends many prophecies
[23:09:41] <shka> also, remember the time Surkov quit his job in 2020?
[23:10:07] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[23:10:18] <shka> https://en.wikipedia.org/wiki/Vladislav_Surkov#Personal_advisor_to_Putin,_2013%E2%80%932020
[23:10:23] <shka> He claimed that "There is no Ukraine", adding that "coercion to fraternal relations by force is the only method that has historically proven its effectiveness in the Ukrainian direction. I do not think that some other will be invented"
[23:10:31] <ck_> to be honest, no. I don't have lasting memory of many things that happened in the russian sphere of influence in the past 10 or so years
[23:11:00] <shka> this whole operation was in planning stage at that point as it seems
[23:11:05] <ck_> "coercion to fraternal relations by force", what an expression.
[23:11:55] <shka> coercion to fraternal relations by force is something that USSR did multiple times in the past
[23:12:19] <ck_> to "normalize a situation" by tank, right, as Bezmenov explained
[23:13:28] <shka> so anyway, surkov quitting his job was a big deal at the time
[23:13:36] <ck_> what is he doing now?
[23:13:43] <shka> because he is chief architect of putinism
[23:14:11] <shka> ck_: no idea 
[23:14:29] <shka> probably retired, doing his hobbies 
[23:16:56] <ck_> how do you think this current thing will play out?
[23:19:00] <shka> Russia will continue to escalate conflict until internal solution at Kremlin emerge
[23:19:03] <ck_> oh, I found this a little interesting: https://www.youtube.com/watch?v=csEirwFO4-A
[23:19:04] -ixelp- US Colonel Doug McGregor calls Zelensky a "puppet" on Fox News. - YouTube
[23:19:12] <shka> and by that, i mean replacing Putin
[23:19:14] <ck_> "internal solution at Kremlin" sounds mysterious
[23:19:15] <ck_> oh ok
[23:19:40] <shka> protests won't do anything on their own
[23:20:27] <shka> once Putin is removed from power, reason for continuation of the war will end as well
[23:20:57] <shka> because frankly, it is just macho image of Putin
[23:21:29] <shka> it is crystal clear that Russia will only loose 
[23:21:46] <shka> anyway, hopefully internal solution will appear soon
[23:22:23] <shka> but this won't be Surkov, he is just a psyops mastermind
[23:24:50] <selwyn> why would someone who quit 2 years ago be indicative of current thinking
[23:25:40] <shka> selwyn: because this was his quote ON QUITTING
[23:27:47] <shka> in other words, dude quit because decision about invasion was made after he admitted that psyops won't work
[23:28:52] <shka> selwyn: read on him, he is a character
[23:30:43] <shka> while Putin is honestly just a NPC
[23:31:43] <ck_> in the interview I posted above, Zelensky is called "a puppet" by the military interviewee. who do you think he means holding the strings?
[23:32:02] <ck_> nato? the us? paypal?
[23:32:24] <selwyn> oligarchs?
[23:32:38] <shka> ck_: yeah, he is just an actor
[23:32:47] <shka> but it kinda looks like he went rogue
[23:33:47] <shka> but who the fuck knows what guests on fox news really think 
[23:34:26] <shka> but i can tell you that he is lying his ass
[23:34:39] <shka> Ukraine STILL has functioning air defense
[23:36:00] <shka> that's why Russians don't fly so many sorties for this reason
[23:37:46] <shka> ck_: frankly, i think that mr Doug is simply spewing bullshit
[23:39:54] <pl> this talk of "puppet" reminds me of oligarchs trying to figure whose puppet Goloborodko is... after finding he is not one of theirs
[23:39:55] <shka> bug again, what i should expect out of the fox news
[23:40:57] <shka> also who is supposed to take power now?
[23:41:11] <pl> to make it extra funnier - Goloborodko is the history-teacher-turned-president played by Zelensky in a tv series
[23:41:22] <shka> even the only pro-Russian party in the parliament is now anti-Russian
[23:41:50] <pl> being pro-russian is not just bad for ratings, it's bad for ones lifespan
[23:42:07] <shka> pl: yes
[23:42:37] <shka> it is like if somebody would argue that USA should be communist now
[23:42:46] <shka> good luck with that fucking agenda 
[23:43:16] <pl> I think that has better chances so long as you avoid the word communism, than collaborating with russia has in Ukraine now
[23:43:28] <shka> well, ok
[23:43:51] <shka> the truth is that Putin attempt impossible 
[23:44:02] <shka> and can't stop now
[23:44:26] <shka> and if he insists this will be not only his end, but end of the whole Russian political system
[23:44:42] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[23:45:56] <shka> which i would not mind, if not for the fact that this would result in the bloodbath
[23:47:32] <shka> mr colonel doug frankly seems to be ignorant of those realities 
[23:47:51] <shka> and this war may drag for months or years at this year
[23:48:33] <shka> but it probably won't because there will be no way to fund this next month :/
[23:48:41] <selwyn> fund?
[23:48:54] <ck_> war expensive, ruble low
[23:49:03] <shka> not even that
[23:49:20] <ck_> shka: also, "Doug" is his first name :)
[23:49:46] <shka> selwyn: Russia's bonds are going default
[23:49:49] <selwyn> and its not mr colonel
[23:50:43] <selwyn> just colonel mcgregor
[23:50:55] <shka> selwyn: for me, he is an asshole
[23:51:00] <shka> thank you very much :P
[23:51:21] <selwyn> shka: and russia has retaliatory options of its own
[23:51:30] <selwyn> e.g. fertiliser ban
[23:51:44] <shka> anyway, share of Russia domestic debt is 80-something percentage 
[23:51:46] <selwyn> if there is open economic war between both sides, the higher order consequences are unknown
[23:51:56] <ck_> selwyn: even worse D-8 "libgen dot ru"
[23:52:09] <shka> and they are supposed to perform buyout on 16
[23:52:12] <shka> IIRC
[23:52:30] <selwyn> but at a guess, russia will win as it has irreplaceable natural resources to sell
[23:52:32] <shka> selwyn: there will be, sure, it does not matter for the Russian outcome
[23:53:13] <ck_> maybe you've not seen this long interview about Russia and Putin from five years ago, it scrolled by in a newsfeed https://www.youtube.com/watch?v=b1HWNcLDK88
[23:53:14] -ixelp- The Putin Files: Julia Ioffe - YouTube
[23:53:19] <ck_> very interesting stuff in it
[23:53:32] <shka> they don't have that much time 
[23:53:39] <selwyn> easier to bear the pain of not exporting gas to one market, compared to the pain of not having gas from the only real exporter
[23:53:46] <shka> and their warchest of euros is blocked
[23:54:17] <ck_> among them that the Russian Government is an octopus with arms that barely know what the others are doing, and that for a long time the entire .ru TLD was a bastion of freedom simply because their police state didn't know or care about the internet
[23:55:10] <shka> selwyn: the only way this war moves forward is the seizure of private accounts
[23:55:35] <selwyn> i have not heard reassuring things about julia ioffe's analysis
[23:55:45] <ck_> oh no
[23:55:48] <ck_> from whom?
[23:55:57] <selwyn> left wing russians
[23:56:05] <ck_> <- surprised face
[23:56:07] <pl> selwyn: Russia has lot of resources, but suddenly much less places to sell them
[23:56:29] <selwyn> her whole act is to be a post-soviet immigrant grateful to be in the usa
[23:56:35] <selwyn> but she arrived when she was 7
[23:56:38] <shka> pl: and bonds are garbage 
[23:56:50] <pl> and it's not like agriculture isn't fucked for next year or two anyway
[23:56:57] <pl> assuming everything stopped *now*
[23:57:49] <shka> anyway, without central bank's assets they can't do anything, but going after private deposits
[23:57:51] <selwyn> she has no real memory of being in russia, when she talks about it it is kind of an act
[23:58:07] <selwyn> anyway, reluctant to be too negative about someone without knowing all the details
[23:58:13] <selwyn> but this is the opinion i got of her
[23:58:15] <ck_> understandable, that didn't come up in that interview at all though
[23:58:51] <selwyn> the higher order consequences of seizing assets and so on is that the entire usa led financial system collapses
[23:59:08] <selwyn> as countries see that america can simply seize your stuff if it wants
[23:59:23] <shka> selwyn: nah, this is not an option
[23:59:35] <shka> but yeah, petro-dollar world order is going down
[23:59:52] <selwyn> well yeah
[23:59:58] <selwyn> you put it better than me
[23:59:58] <shka> also, we are not talking about USA here
