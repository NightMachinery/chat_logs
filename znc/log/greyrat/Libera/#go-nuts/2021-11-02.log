[00:01:11] *** Joins: jespada (~jespada@190.7.36.46)
[00:06:13] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100c)
[00:08:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:08:57] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100c) (Client Quit)
[00:09:03] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:10:20] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100c)
[00:14:05] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:16:59] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:4c54:5233:455b:bb04) (Ping timeout: 268 seconds)
[00:20:42] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.118) (Ping timeout: 268 seconds)
[00:22:03] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.115)
[00:23:09] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.115) (Client Quit)
[00:29:19] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[00:34:52] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:1d47:7f25:f533:7937) (Ping timeout: 268 seconds)
[00:38:59] *** Quits: fputs (~thelounge@67.59.83.166) (Quit: The Lounge - https://thelounge.chat)
[00:39:17] *** Joins: fputs (~fputs@67.59.83.166)
[00:43:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:46:00] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:47:47] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:53:46] *** Quits: jpw_ (~jpw@user/jpw) (Remote host closed the connection)
[00:54:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:56:34] *** Joins: fikran (~fikran@user/fikran)
[01:01:55] *** Joins: jpw (~jpw@user/jpw)
[01:03:34] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[01:09:24] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[01:12:43] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[01:18:59] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[01:20:14] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Client Quit)
[01:20:27] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:20:36] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100c) (Quit: ZNC 1.8.2 - https://znc.in)
[01:21:31] <mort> it's weird that go only permits you to post increment
[01:22:01] <mort> I'm usually not looking for the weird "evaluate to the old value, but silently update to a new value in the background after the expression was evaluated" behavior
[01:23:20] <b0nn> uhh, you think a++ is weird, but ++a isn't because of when it's incremented?
[01:25:20] <j416> mort: you can't assign "a++" to anything in Go anyway, it's just a statement, so "++a" would have no purpose.
[01:25:40] <krux02> I god used to not use increment operators at all
[01:25:43] <mort> b0nn: yeah, ++a is what you usually mean, it's a short-hand for 'a += 1'
[01:25:53] <mort> j416: I suppose that makes sense
[01:25:57] <krux02> since incrementing a number by one isn't worth a language feature, when there is already +=
[01:26:13] <krux02> I just write += 1 all the time
[01:26:18] <mort> but when I see i++ it always reads like a post-increment and usually a post-increment isn't what you want
[01:26:28] <krux02> and then I got this linter that put me warning everywhere because of it.
[01:26:37] <krux02> As a result I deleted the linter from my system.
[01:27:00] <j416> krux02: thought you'd say you made 1 into var one = 1
[01:27:03] * j416 runs
[01:27:53] <b0nn> mort: semantically it's the difference between "Get me the CURRENT value of a, then increment it for the next round" vs "Get me the NEXT value of a"
[01:28:23] <krux02> j416, ? I have no idea what you mean
[01:28:40] <mort> b0nn: yeah, that's what I described isn't it? i++ is (in other languages at least) "evaluate to the old value, but silently update to a new value in the background after the expression was evaluated"
[01:28:55] <j416> krux02: "one := 1; a += one" might silence your linter
[01:29:00] <b0nn> tomato tomato, old is current
[01:29:23] <b0nn> get me the 0th value of the array, then point to the 1th vs get me the 1th
[01:29:57] <krux02> j416, I found a better way to silence the linter.
[01:30:09] <fizzie> mort: It's not really that in C. Neither `a++` nor `++a` specify when exactly the actual incrementing (the side effect that updates the object) is done, they just differ in which value the operator yields. `++a` could equally well "update to a new value in the background after the expression is evaluated".
[01:30:10] <j416> krux02: yes, it was an attempt at a joke.
[01:30:20] <krux02> I just didn't find a way yet to silence go on unused variables/imports
[01:30:28] <j416> haha
[01:30:30] <krux02> j416, yea I figured it was a joke
[01:30:40] <j416> fork it, make your own Go
[01:30:58] <krux02> nope, I already write my own programming language
[01:31:05] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:31:06] <mort> it's just weird to have the only increment operator as the one where you create a temporary with the old value, increment the real value, then evaluate to the temporary
[01:31:12] <j416> krux02: does it have i++ ?
[01:31:13] <krux02> it won't have this stupid error message, it will be a warning
[01:31:16] <mort> not a big deal in any case
[01:31:26] <krux02> j416, nope it won't have an increment operator
[01:31:33] <krux02> just +=
[01:31:48] <krux02> it isn't a promise though.
[01:31:55] <krux02> I don't plan to add ++
[01:32:00] <j416> you could make it in infix, +i+
[01:32:05] <j416> that'd trip people up
[01:32:11] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Quit: Leaving)
[01:32:15] <j416> (is that called infix? not sure)
[01:32:19] <j416> outfix
[01:32:30] <krux02> that is post and prefix
[01:32:42] <fizzie> Circumfix.
[01:32:45] <j416> fizzie: nice one
[01:32:49] <krux02> yes
[01:32:51] <fizzie> (When you have both a prefix and a suffix.)
[01:33:04] <j416> thanks
[01:33:41] <krux02> I want to make a language for people who disagree with me on language design
[01:33:43] <fizzie> Not sure I've ever seen it used in the context of an operator though, only in the context of human languages.
[01:34:03] <krux02> circumfixoperator
[01:34:09] <krux02> now you have
[01:34:18] <j416> yeh, sounds like natural langauge jargon
[01:34:29] <j416> er, lingustic jargon is it
[01:34:42] <krux02> it is all the same
[01:34:49] <krux02> it is all languae
[01:34:58] <krux02> not too far off
[01:35:21] <krux02> I once tried to explain the concept of compiler development to a linguist who had no idea about programming.
[01:35:43] <krux02> surprisingly it worked and I could use all my tech words
[01:35:56] <j416> yes, sounds like that'd work pretty ok. cool.
[01:36:23] <j416> linguists are like human compilers
[01:37:05] <krux02> yes they are
[01:37:40] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[01:40:47] <seebs> go doesn't really have post increment or pre increment, just increment.
[01:41:33] <mort> I wish we had a proper integer max function
[01:41:41] <seebs> i occasionally miss pre/post increment. mostly i'm annoyed because i habitually write "++i" when I don't care, and Go used "i++" for it, and I dislike having to use the wrong one.
[01:41:48] *** Joins: jla (~jordi@64.225.79.195)
[01:41:53] *** Quits: jla (~jordi@64.225.79.195) (Client Quit)
[01:42:40] <fizzie> I try to stick to ++i when writing C++ and i++ when writing C, even where it makes no difference, but it's easy to slip up.
[01:43:02] <mort> that's exactly it, I always use ++x in C or any other language because that's the semantics I'm actually looking for
[01:43:41] <mort> I only use x++ when I actually want, "increment it, but evaluate to the old value", such as with certain array indexing stuff
[01:44:34] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[01:49:24] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 3.3)
[01:50:06] <fentanyl> fizzie: I'd be nice if you write C++ in C++ too :)
[01:50:40] <fizzie> Yeah, it's a little silly that it's just the other way around.
[01:51:21] <fizzie> There's some jokes around how C++ isn't any better than C because the postfix increments evaluates the old value; it just made C better by [insert rationale here].
[01:53:11] <fentanyl> Ah, interesting.
[01:53:21] <fentanyl> Heh, I didn't thought of that.
[01:55:50] <mort> weird, darwin_arm64/link is failing due to "unknown load command command 0x80000034 (2147483700)"
[01:56:48] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:00:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[02:02:55] <mort> fixed in a newer version of go, nea
[02:02:58] <mort> neat*
[02:06:30] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[02:08:59] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[02:11:52] <attila_lendvai> i'm working on a go importer for guix; if a module requires github.com/google/go-cmp (e.g. https://github.com/golang/protobuf/blob/master/go.mod), then how can i deduce that the sources of go-cmp are under the cmp/ directory?
[02:13:23] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:15:03] *** Quits: marler8997_ (~marler899@204.229.3.4) (Read error: Connection reset by peer)
[02:15:05] *** Joins: marler8997 (~marler899@204.229.3.4)
[02:15:53] <j416> attila_lendvai: look at the import statements of each file in the pacakge
[02:15:56] <fizzie> attila_lendvai: The code that's actually *using* that dependency uses the import path "github.com/google/go-cmp/cmp".
[02:16:41] <attila_lendvai> j416, ouch. that'd be very painful/complex in this context...
[02:17:11] <fizzie> It's not that "the sources of go-cmp" are under that directory; it's just that the package called "cmp" of that module is in the subdirectory "cmp", just like the package "github.com/google/go-cmp/foo" (if it existed) would be in the directory "foo".
[02:17:33] <attila_lendvai> i would define a constant map for such outlier projects before i get into parsing go sourcecode... :)
[02:18:19] <fizzie> It's not really any sort of an "outlier", IMO. What makes up "the sources of go-cmp" is everything under the module directory, excluding any *other* directories with go.mod files of their own.
[02:18:41] <attila_lendvai> fizzie, yeah, i kinda get that by now. but in most cases the dependency specification contains the extra part of the package name, or the full name (i lack the nomenclature, sorry)
[02:19:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:19:35] <fizzie> There's any number of modules that contain more than one package in them. Sure, most of them have *some* code in the root directory, but still.
[02:20:15] <attila_lendvai> fizzie, the problem is that guix wants to individually build each (guix) package. the importer creates a package for go-cmp, and when it tries to build it, it fails because "no go files in ...". i can patch the package by hand to make it work, but i was hoping for a more automated solution.
[02:21:08] <attila_lendvai> IOW, it would probably just work when a package uses it as a dependency, but it fails when it's built as a standalone package (which probably shouldn't even happen, but...)
[02:21:34] *** Quits: martinkennelly_ (~martinken@84.203.20.92) (Ping timeout: 268 seconds)
[02:21:42] <fizzie> I feel like the automated solution would be to build *all* packages of a module, meaning any directory with a "*.go" file in it (that's not "*_test.go").
[02:23:25] <attila_lendvai> these are source packages after all. i don't even understand why guix wants to "build" them. let me look at the builder's code...
[02:23:28] <b0nn> recursive exploration of the packages in the module?
[02:24:48] <b0nn> hrm, for my $0.02 I'd inspect the imports and build the packages within the module that are in the import tree (ie. I'd ignore that which isn't imported)
[02:25:02] <attila_lendvai> it invokes go install
[02:25:54] <attila_lendvai> b0nn, "the imports" here means the import statements at the beginning of go files?
[02:26:07] <b0nn> yeah, the ones in the module
[02:27:06] <attila_lendvai> then i'll settle with a hardcoded map... there are dozens of packages being imported and only a few have this issue.
[02:27:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:27:43] *** Quits: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:27:57] <attila_lendvai> i don't understand why others don't have this issue. maybe because there the dependency is registered with the full package name?
[02:28:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[02:28:36] <fizzie> It's never "registered with the full package name", what goes in go.mod is a reference to a *module*, not a package.
[02:28:58] <attila_lendvai> the importer has no issue with e.g. https://github.com/Azure/go-autorest that has multiple packages
[02:29:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:29:41] *** Quits: f8e4_ (~user@159.89.21.45) (Quit: WeeChat 3.1)
[02:30:23] <fizzie> It also appears to have a `doc.go` file in the root directory purely to "Make the root package importable" for some reason.
[02:30:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[02:30:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:05] <fizzie> So if that's required for it to work (which would be odd), that might explain why.
[02:31:09] <attila_lendvai> fizzie, this one has a full name: https://github.com/ethereum/go-ethereum/blob/master/go.mod (github.com/Azure/go-autorest/autorest/adal), while this one: https://github.com/golang/protobuf/blob/master/go.mod doesn't (go-cmp)
[02:31:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Client Quit)
[02:31:38] <fizzie> attila_lendvai: No, github.com/Azure/go-autorest/autorest/adal is a separate module.
[02:31:54] <fizzie> attila_lendvai: As in, there's a separate /autorest/adal/go.mod file in the repository.
[02:32:30] <attila_lendvai> fizzie, ok, so the existence of a go.mod file defines where/what a module is, right?
[02:32:33] <fizzie> Yes.
[02:33:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:33:23] *** Joins: Atque (~Atque@user/atque)
[02:34:49] <attila_lendvai> but apparently modules can be nested: both https://github.com/Azure/go-autorest/tree/master/autorest and its date subdirectory has a go.mod
[02:35:21] <fizzie> Like I said: -- everything under the module directory, excluding any *other* directories with go.mod files of their own.
[02:35:41] <fizzie> In the case of "github.com/Azure/go-autorest" apparently all the subdirectories (or at least all I looked at) are separate modules, which I think is an uncommon (though legal) way of doing things.
[02:36:52] <fizzie> To be clear, they're not "nested" in any other sense being a subdirectory in the same repository. Other than that, the modules are unrelated, and can be for example versioned entirely independently.
[02:37:07] <fizzie> s/other sense/other sense than/
[02:37:54] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[02:38:38] <attila_lendvai> i guess i could also try to parse something from https://pkg.go.dev/github.com/google/go-cmp#section-directories
[02:38:51] *** Joins: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de)
[02:39:26] <fizzie> IOW, a hypothetical go.mod file could depend on "github.com/Azure/go-autorest/autorest" v0.11.20 and "github.com/Azure/go-autorest/autorest/adal" v0.9.16 in the same build, and in that case the code for those dependencies would come from different commits of the same repository.
[02:40:45] <attila_lendvai> fizzie, yeah, i have already added that to the importer, to calculate the proper tag name, etc, and it works fine.
[02:42:22] <fizzie> Right. Well, there's also plenty of modules that have multiple packages that *aren't* separate modules. For example, according to a random article https://github.com/stretchr/testify is the most imported Go module, and it's got a bunch of packages included in the same module.
[02:42:46] <Tv_> testify most imported -> stop the planet i want off
[02:42:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[02:43:19] <fizzie> It might not be true. :) But I just wanted something that's "used" to use as an example.
[02:43:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[02:43:46] *** Quits: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:44:25] <fizzie> It *does* have a "github.com/stretchr/testify" package too, but only for holding a documentation "landing page"; any code actually using it will try to import something like "github.com/stretchr/testify/assert" but have a go.mod dependency of "github.com/stretchr/testify".
[02:47:21] *** Joins: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de)
[02:48:46] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[02:48:53] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[02:49:46] <attila_lendvai> hrm, so, then my issue is that dependencies are pointing to modules (i.e. a repo+dir containing a go.mod), and packages are more fine-grained things than modules (i.e. a package is any subdir path under the module's root), right? and only packages can be built with e.g. go install?
[02:51:08] <fizzie> I don't pretend to understand your actual context. :) But those sound like true statements, yes.
[02:51:54] <b0nn> hrm, does go install "build" packages?
[02:52:08] <b0nn> I was sitting here thinking that only "main" was "built"
[02:52:24] <attila_lendvai> i wonder what's the point of calling go install on a guix go package when it won't produce any executables, only .go sources... damn, i only wanted to package an app written in go! and i'm neck deep here... :)
[02:52:24] *** Quits: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:52:39] * attila_lendvai is reading https://stackoverflow.com/questions/24069664/what-does-go-install-do
[02:53:08] <attila_lendvai> b0nn, "caches all non-main packages which are imported to $GOPATH/pkg. The cache will be used during the next compilation provided the source did not change yet."
[02:54:43] <b0nn> out of curiousity, is there a main package in the repo you are having issues with?
[02:54:43] <attila_lendvai> in the guix context that is thrown away. the guix package of a go module without a main will be source-only. which means, why on earth is go install called on them...? but that belongs to another channel.
[02:55:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:55:02] <attila_lendvai> b0nn, no, there isn't. see my previous line.
[02:55:16] *** Joins: __xor (~xor@72.49.199.147)
[02:55:26] * b0nn is thinking that the error "no go files to build" is go installl compalinaing that it can't do anything
[02:55:38] <Tv_> attila_lendvai: it might be cargo culting behavior from before modules existed
[02:56:21] <attila_lendvai> Tv_, argh! are you telling me that *sometimes* go install should be called? when something depends on a go lib that is very old?
[02:56:46] *** Quits: _xor (~xor@72.49.199.147) (Ping timeout: 245 seconds)
[02:56:47] <Tv_> attila_lendvai: not the lib, Go itself -- and nobody should use a version of Go that old
[02:57:15] <attila_lendvai> well, either way, that can't work, because the guix builder throws away everything except the sources
[02:57:19] <Tv_> me personally, i consider reimplementing the go tool a bad idea
[02:59:05] <attila_lendvai> Tv_, me, too. i'd fancy much more the NixOS way. they call vendoring: they use the go binary to fetch all the dependencies of a "toplevel" package once, and then swallow it as one big archive into their caches.
[02:59:20] <Tv_> to live a in hermetic reproducable offline world, what you have for libraries is (cached) modules & their built versions as input and the built version of your target as output, and what you have for commands (package main) is cached modules & their built  versions as input and an executable as output
[02:59:28] <Tv_> anything else is guix doing it wrong ;)
[02:59:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[02:59:53] <Tv_> one big archive is doing it wrong too, but at least it's wrong in the sense of suboptimal, not wrong in the sense of incorrect
[03:02:10] <attila_lendvai> there's no good match between something like guix/nixos and go's module system. they are two parallel solutions for the same problem, and there's no seamless way to integrate them.
[03:02:27] <Tv_> i just described the match ;)
[03:02:35] <Tv_> that nobody bothers implementing it is something else
[03:02:48] <Tv_> not many people seem to bother understanding what go modules really are
[03:03:47] <Tv_> "i'll just close my eyes hum real loud and pretend everything is C" is a common way to "package" things
[03:03:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:04:55] <attila_lendvai> Tv_, are you familiar with guix and/or nix?
[03:05:16] <Tv_> attila_lendvai: i use nixos
[03:05:55] *** Joins: fikran (~fikran@user/fikran)
[03:06:07] *** Joins: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de)
[03:06:09] <Tv_> afk bbl
[03:06:59] * attila_lendvai copies this into his notes and goes to sleep because this makes his head hurt... :)
[03:11:13] <attila_lendvai> thank for all the help!
[03:12:00] *** Joins: jespada (~jespada@190.7.36.46)
[03:21:11] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:24:16] *** Joins: X-Scale` (~ARM@46.50.2.72)
[03:25:15] <attila_lendvai> Tv_, i think what you suggest cannot work either: what happens when two main packages import the same lib, but they are compiled with different compiler options? this means you can't just simply map go libs to guix/nix derivations that contain build artifacts. (without really reimplementing everything the go binary does wrt modules and compiler artifacts)
[03:25:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[03:26:22] *** Quits: X-Scale (~ARM@92.250.98.212) (Ping timeout: 260 seconds)
[03:26:39] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:26:47] *** X-Scale` is now known as X-Scale
[03:31:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[03:36:51] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:38:47] *** Quits: yelnah (~felix@2001:44b8:30f9:18c:6f0:21ff:fe3c:d4d7) (Ping timeout: 264 seconds)
[03:40:11] *** Joins: yelnah (~felix@193-119-96-191.tpgi.com.au)
[03:41:30] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[03:41:46] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[03:52:23] *** Joins: volt (~volt@67.197.6.215)
[03:56:09] *** Joins: BUSY (~BUSY@user/busy)
[03:58:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:59:05] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[04:00:54] <b0nn> join javascript
[04:01:00] <b0nn> ack
[04:03:05] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[04:03:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[04:11:38] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 260 seconds)
[04:13:57] *** Joins: jespada (~jespada@190.7.36.46)
[04:14:51] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:17:03] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:17:27] *** Joins: mickey8 (~user@user/mickey)
[04:18:38] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:18:44] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[04:19:21] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[04:19:34] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[04:23:54] *** Joins: lofiguy_ (~lofiguy@87-207-104-205.dynamic.chello.pl)
[04:24:17] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Ping timeout: 268 seconds)
[04:27:21] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:1d36:ab9f:a038:ce82) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:27:29] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[04:30:43] <Tv_> attila_lendvai: first of all, compiler options are much more rare in Go land than C land
[04:31:00] <Tv_> attila_lendvai: but, that just becomes like architecture; it's a "kind of a build"
[04:31:54] <Tv_> like $GOARCH and $GOARM
[04:32:21] <Tv_> go itself keeps track of that via hash so at worst you'll end up recompiling a lib
[04:33:19] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:35:57] <Tv_> oh and version of Go itself, etc
[04:36:25] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[04:37:01] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[04:39:27] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:44:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:49] * attila_lendvai made further notes
[04:55:58] * attila_lendvai goes to sleep
[04:57:18] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Remote host closed the connection)
[04:57:36] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[05:01:51] *** Joins: andlabs (~andlabs@2604:ca00:17b:b7:85ae:17d6:3ff6:7073)
[05:08:50] *** Joins: andlabs_ (~andlabs@2604:ca00:17b:b7:c072:528c:c5ff:97e8)
[05:09:34] *** Joins: ivan_ (~textual@123.123.46.64)
[05:10:48] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 265 seconds)
[05:11:11] *** Joins: Praise (~Fat@user/praise)
[05:12:59] *** Quits: andlabs (~andlabs@2604:ca00:17b:b7:85ae:17d6:3ff6:7073) (Ping timeout: 268 seconds)
[05:13:10] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:13:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[05:15:16] *** Joins: fikran (~fikran@user/fikran)
[05:16:23] *** Joins: andlabs (~andlabs@2604:ca00:17b:b7:1966:362e:b927:1760)
[05:17:58] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[05:20:14] *** Quits: andlabs_ (~andlabs@2604:ca00:17b:b7:c072:528c:c5ff:97e8) (Ping timeout: 260 seconds)
[05:32:06] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:33:55] *** Quits: krux02 (~krux02@p54932344.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:35:29] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 264 seconds)
[05:37:03] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[05:45:25] *** Joins: frost (~frost@user/frost)
[05:48:31] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[05:50:58] *** Quits: andlabs (~andlabs@2604:ca00:17b:b7:1966:362e:b927:1760) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:59:33] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Ping timeout: 276 seconds)
[06:00:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:05:24] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[06:11:16] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:27] *** Joins: kiril (~kiril@85.91.153.163)
[06:13:57] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:17:36] *** Quits: svedrin_ (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[06:17:50] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[06:18:03] *** Quits: amolith (~amolith@nixnet/founder/amolith) (Read error: Connection reset by peer)
[06:18:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:21:36] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[06:23:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[06:31:18] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[06:33:10] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 268 seconds)
[06:35:50] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:40:30] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:44:39] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:1c0b:220d:4ee5:1f91)
[06:45:19] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:48:35] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:7806:9900:977:b074) (Ping timeout: 268 seconds)
[06:49:56] *** Joins: vptr (~vptr@user/vptr)
[06:49:57] *** Joins: khanred (~khanred@user/khanred)
[06:50:58] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:07:26] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[07:08:53] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:08:57] *** Joins: fentanyl_ (~ryan@bras-vprn-toroon4834w-lp130-08-174-91-44-103.dsl.bell.ca)
[07:10:18] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:11:24] *** Quits: fentanyl (~ryan@user/sapi01) (Ping timeout: 268 seconds)
[07:12:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[07:15:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[07:23:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:24:03] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[07:24:37] *** Joins: fikran (~fikran@user/fikran)
[07:27:56] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:32:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[07:39:27] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[07:40:17] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[07:45:46] *** Joins: souvik (~souvik@103.59.73.170)
[07:46:14] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:52:36] *** Quits: vptr (~vptr@user/vptr) (Quit: leaving)
[07:54:14] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[07:59:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:04:01] *** Joins: iateadonut (~dan@121.177.17.154)
[08:04:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:04:12] *** Parts: iateadonut (~dan@121.177.17.154) ()
[08:04:24] *** Joins: iateadonut (~dan@121.177.17.154)
[08:07:15] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[08:09:33] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:11:02] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Remote host closed the connection)
[08:11:30] *** Joins: gggpkm (~gggpkm@60.10.23.160)
[08:11:56] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Remote host closed the connection)
[08:12:32] *** Quits: gggpkm (~gggpkm@60.10.23.160) (Remote host closed the connection)
[08:12:50] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[08:12:57] *** Joins: gggpkm (~gggpkm@60.10.23.160)
[08:15:20] *** Joins: rcernin (~rcernin@124.190.139.235)
[08:16:08] *** Quits: souvik (~souvik@103.59.73.170) (Ping timeout: 268 seconds)
[08:17:32] *** Joins: souvik (~souvik@103.59.73.170)
[08:20:28] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[08:24:46] *** Quits: souvik (~souvik@103.59.73.170) (Ping timeout: 268 seconds)
[08:30:36] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:50] *** Joins: c10l (~c10l@user/c10l)
[08:31:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:33:28] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:1c0b:220d:4ee5:1f91) (Quit: Leaving)
[08:34:59] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Quit: estoy fuera)
[08:36:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:38:57] *** Joins: rcernin (~rcernin@124.190.139.235)
[08:41:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:42:46] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:47:10] *** Joins: ivan_ (~textual@123.123.46.64)
[08:47:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:48:24] *** __xor is now known as _xor
[08:48:25] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[08:48:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:50:32] *** Quits: gggpkm (~gggpkm@60.10.23.160) (Remote host closed the connection)
[08:51:17] *** Joins: jpw (~jpw@user/jpw)
[08:51:52] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[08:52:32] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Remote host closed the connection)
[08:53:08] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[08:54:59] *** Quits: dan- (~d@ircdocs/dan-) (Ping timeout: 268 seconds)
[09:02:08] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:02:43] *** Joins: ivan_ (~textual@123.123.46.64)
[09:03:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:04:18] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:05:38] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[09:26:22] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[09:30:22] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:30:59] *** Joins: rcernin (~rcernin@124.190.139.235)
[09:31:00] *** Quits: rcernin (~rcernin@124.190.139.235) (Client Quit)
[09:31:15] *** Joins: rcernin (~rcernin@124.190.139.235)
[09:32:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:33:58] *** Joins: fikran (~fikran@user/fikran)
[09:35:39] *** Quits: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[09:35:59] *** Joins: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[09:42:53] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:46:06] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[09:46:47] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Read error: Connection reset by peer)
[09:47:10] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[09:56:51] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:01:36] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[10:02:44] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:03:21] *** Joins: ivan_ (~textual@123.123.46.64)
[10:03:36] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:12:29] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:14:02] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb)
[10:26:45] *** Joins: gggpkm_ (~gggpkm@111.63.44.13)
[10:29:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:30:35] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 268 seconds)
[10:30:42] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:36:28] *** Joins: mrig (~AdiIRC@user/mrig)
[10:38:26] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:39:00] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:40:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:42:17] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[10:45:42] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:54:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:55:52] *** Quits: yelnah (~felix@193-119-96-191.tpgi.com.au) (Ping timeout: 268 seconds)
[10:56:42] *** Joins: yelnah (~felix@2001:44b8:3084:172:6f0:21ff:fe3c:d4d7)
[10:57:49] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[10:58:56] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[11:05:06] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[11:07:35] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[11:08:36] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:08:48] *** Quits: yelnah (~felix@2001:44b8:3084:172:6f0:21ff:fe3c:d4d7) (Ping timeout: 268 seconds)
[11:10:34] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:12:24] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:12:37] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[11:12:50] *** Joins: mrig (~AdiIRC@user/mrig)
[11:14:53] *** Joins: Armanzor (~Armanzor@user/armanzor)
[11:14:58] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[11:16:48] *** Joins: gggpkm__ (~gggpkm@60.10.23.160)
[11:20:31] *** Quits: gggpkm_ (~gggpkm@111.63.44.13) (Ping timeout: 268 seconds)
[11:21:17] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[11:21:30] *** Joins: mrig (~AdiIRC@user/mrig)
[11:21:58] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:9552:955:27ed:6626)
[11:22:58] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:24:49] *** Joins: gggpkm_ (~gggpkm@60.10.23.160)
[11:25:27] *** Joins: yelnah (~felix@2001:44b8:3084:172:6f0:21ff:fe3c:d4d7)
[11:28:02] *** Quits: gggpkm__ (~gggpkm@60.10.23.160) (Ping timeout: 260 seconds)
[11:28:35] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:29:27] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[11:32:44] *** Joins: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de)
[11:32:44] *** Quits: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de) (Changing host)
[11:32:44] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:33:28] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[11:41:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:41:54] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[11:43:19] *** Joins: fikran (~fikran@user/fikran)
[11:45:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:50:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[11:51:35] *** Joins: mickey88 (~user@user/mickey)
[11:52:18] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:52:19] *** mickey88 is now known as mickey8
[11:52:26] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[11:55:29] *** Joins: gggpkm__ (~gggpkm@111.63.44.13)
[11:56:32] *** Quits: gggpkm__ (~gggpkm@111.63.44.13) (Remote host closed the connection)
[11:58:16] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[11:58:46] *** Quits: gggpkm_ (~gggpkm@60.10.23.160) (Ping timeout: 260 seconds)
[12:03:30] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Quit: awwww)
[12:03:43] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[12:04:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:08:38] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[12:11:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:16:27] *** Joins: vovs03 (~En3rgy.UM@62.176.30.218)
[12:17:52] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:9552:955:27ed:6626) (Ping timeout: 268 seconds)
[12:20:47] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[12:21:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:21:44] *** Joins: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de)
[12:21:44] *** Quits: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de) (Changing host)
[12:21:44] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:24:28] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[12:24:51] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:24:52] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[12:25:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:26:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:28:53] *** Joins: jla (~jordi@212.161.114.203)
[12:35:08] *** Quits: jla (~jordi@212.161.114.203) (Ping timeout: 268 seconds)
[12:35:46] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:36:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:36:12] *** Joins: jla (~jordi@64.225.79.195)
[12:37:48] *** Joins: martinkennelly_ (~martinken@84.203.20.92)
[12:42:33] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[12:43:45] *** Joins: Atlas (~atlas@user/atlas)
[12:44:37] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:45:30] *** Quits: vovs03 (~En3rgy.UM@62.176.30.218) (Ping timeout: 260 seconds)
[12:46:17] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[12:47:35] *** Quits: popey (~popey@ubuntu/member/popey) (Quit: Ping timeout (120 seconds))
[12:47:51] *** Joins: popey (~popey@ubuntu/member/popey)
[12:50:08] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[12:52:15] *** Joins: mei (~mei@user/mei)
[13:03:49] *** Quits: Xjs (~jannis@user/xjs) (Quit: Bye.)
[13:04:11] *** Joins: Xjs (~jannis@user/xjs)
[13:08:52] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:11:19] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:11:46] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:13:35] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 260 seconds)
[13:13:43] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[13:15:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[13:17:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:19:34] *** Quits: lofiguy_ (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[13:22:55] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:23:20] *** Joins: souvik (~souvik@103.59.73.170)
[13:26:32] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:44ab:7a73:1535:cd95) (Remote host closed the connection)
[13:26:51] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:cd4c:be15:188d:ed80)
[13:31:29] *** Joins: ivan_ (~textual@123.123.46.64)
[13:31:52] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Ping timeout: 260 seconds)
[13:46:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:47:58] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:50:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[13:50:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:51:07] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[13:52:32] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[13:52:40] *** Joins: fikran (~fikran@user/fikran)
[13:53:21] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:53:39] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[13:53:42] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[13:56:06] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:2cdd:3462:8bbb:a197)
[14:06:24] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:09:50] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[14:11:18] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 260 seconds)
[14:17:21] *** Joins: kinlo (~peter@user/kinlo)
[14:19:19] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:24:17] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[14:35:06] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:37:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:40:34] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[14:42:47] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[14:54:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:56:48] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[14:57:30] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:2cdd:3462:8bbb:a197) (Ping timeout: 260 seconds)
[14:59:22] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[14:59:24] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098)
[15:01:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:01:56] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:03:10] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:03:42] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:09:00] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:12:16] *** Joins: monoxane (~monoxane@162.43.233.220.static.exetel.com.au)
[15:12:47] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[15:13:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:17:53] *** Joins: volt (~volt@67.197.6.215)
[15:23:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:26:29] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:29:27] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:33:13] *** Joins: mikoto-chan (~mikoto-ch@185.25.79.186)
[15:33:13] *** Joins: guniberas (~guniberas@42.191.188.121)
[15:33:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[15:35:28] *** Quits: mikoto-chan (~mikoto-ch@185.25.79.186) (Client Quit)
[15:41:20] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:3d65:8833:4853:5bbe) (Read error: Connection reset by peer)
[15:41:56] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:8561:d34f:d94b:2b07)
[15:42:11] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net)
[15:43:18] *** Atlas is now known as atlas`
[15:44:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[15:50:50] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:52:01] *** atlas` is now known as Atlas
[15:55:36] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 260 seconds)
[15:58:26] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[15:58:27] *** Quits: dalan62367 (~dalan@203.214.91.172) (Quit: dalan62367)
[15:58:55] *** Joins: dalan62367 (~dalan@203.214.91.172)
[15:59:31] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (Remote host closed the connection)
[15:59:49] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[16:00:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:01:23] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:02:01] *** Joins: fikran (~fikran@user/fikran)
[16:02:20] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[16:02:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:06:13] *** Joins: shtirlic (~shtirlic@167.71.15.181)
[16:06:54] *** Joins: mei (~mei@user/mei)
[16:07:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:10:22] *** Quits: shtirlic_ (~shtirlic@178.70.141.41) (Ping timeout: 268 seconds)
[16:12:43] *** Joins: amolith (~amolith@nixnet/founder/amolith)
[16:13:09] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:18:32] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:18:59] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[16:19:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:24:33] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:31:52] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:32:28] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:36:54] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:37:10] *** Atlas is now known as atlas`
[16:39:57] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:40:32] *** Joins: ncopa (~ncopa@gbr2-dev1.alpinelinux.org)
[16:41:49] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:45:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:46:18] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:46:31] *** Quits: ncopa (~ncopa@gbr2-dev1.alpinelinux.org) (Changing host)
[16:46:31] *** Joins: ncopa (~ncopa@alpine/developer/ncopa)
[16:46:41] <ncopa> hi! how do i catch a specific exit error (lets say exit code 1) from err := exec.Command(...).Run(), using error.Is(err, <check if ExitError == 1>)?
[16:48:46] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:49:48] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:51:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:52:05] <siXy> ncopa: check ProcessState.ExitCode()
[16:52:53] <fizzie> As for `errors.Is`, it checks for *types* of errors, you can't use it to check for other properties of the error.
[16:54:11] <fizzie> Checking for properties of the error could look like `var e *exec.ExitError; if errors.As(err, &e) && e.ProcessState.ExitCode() == 1 { /* do something */ }`.
[16:54:38] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:54:57] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[16:55:50] <ncopa> that makes sense. i first have to "typecast" the error to ExitError and then check the exit code. Thank you!
[16:56:07] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[16:56:15] <Led_Zeppelin2> little confusion on my part. I have a function that has this signature. func d(path *string) {} . I am writing a table based test. I am not sure how to call the function. i can do d("foo")? or is it d(&"foo") ?
[16:56:42] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[16:57:08] <fizzie> (Hmm, I guess since it does an equality check, you could in fact use `errors.Is` for more than checking the type? But definitely not for something like testing if calling a method on a field returns something.)
[16:57:48] <fizzie> Led_Zeppelin2: It's neither. You have to do something like `var str = "foo"; d(&str)`, or use a helper function like `func str(s string) *string { return &s }`.
[16:57:59] <Led_Zeppelin2> i see.
[16:58:32] <fizzie> Or call proto.String(), but that's just weird if it's not for a proto. ;) https://pkg.go.dev/github.com/golang/protobuf/proto#String
[16:58:47] <Led_Zeppelin2> ah no. thats too much. i like what you said before.
[16:59:09] <fizzie> There *is* an expression you can write, too, but it just looks too weird.
[17:00:49] <fizzie> Just for the record, though, it's `d(&(&struct{s string}{"foo"}).s)`: https://play.golang.org/p/GvqlcCMXbxx
[17:01:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:01:28] <fizzie> (Or `d(&(&[1]string{"foo"})[0])`, equivalently.)
[17:01:34] *** Joins: mickey8 (~user@user/mickey)
[17:03:17] * siXy eyes fizzie 
[17:04:05] <fizzie> I couldn't resist.
[17:04:10] <siXy> heh
[17:05:44] *** Joins: edrocks (~Ed@user/edrocks)
[17:14:14] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[17:14:34] *** Joins: mickey8 (~user@user/mickey)
[17:15:20] *** Joins: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk)
[17:16:49] *** Joins: mei (~mei@user/mei)
[17:18:11] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 268 seconds)
[17:21:46] *** Quits: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk) (Ping timeout: 260 seconds)
[17:22:42] *** Joins: dntreou (~yakiza@global-5-46.nat-1.net.cam.ac.uk)
[17:22:51] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:22:59] *** Joins: mei (~mei@user/mei)
[17:26:50] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[17:33:26] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[17:33:45] *** Joins: mickey8 (~user@user/mickey)
[17:36:04] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[17:36:14] *** Quits: dntreou (~yakiza@global-5-46.nat-1.net.cam.ac.uk) (Ping timeout: 260 seconds)
[17:37:58] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[17:38:17] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--297.oracle-ocna.com)
[17:42:14] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098) (Ping timeout: 268 seconds)
[17:43:59] *** Joins: stealth[] (~stealth]@2001:9e8:36ec:3200:1d50:6b67:9559:9543)
[17:44:12] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[17:45:06] <Led_Zeppelin2> so, I am able to run my code properly in main.go. However, when I write a test,main_test.go, i keep getting a panic: runtime error: invalid memory address or nil pointer dereference. I am calling the function just the same as I do in main.
[17:45:52] <siXy> You're doing something wrong then.
[17:46:31] <siXy> If you'd like a more specific answer, it'd be advisable to ask a more specific question, perhaps involving showing us the actual code...?
[17:51:00] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:54:25] *** Joins: arcatech (~arcatech@user/arcatech)
[17:54:59] <Led_Zeppelin2> siXy, its complaining with the Append. https://play.golang.org/p/WsmwQ4sw8wZ
[17:55:08] <Led_Zeppelin2> i think it looks good.
[17:55:40] <Led_Zeppelin2> line 20 to be exact
[17:59:16] *** atlas` is now known as Atlas
[17:59:18] <siXy> that code doesn't demonstrate your problem though.
[17:59:39] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:00:28] <siXy> You've shown us 29 lines of code that doesn't exhibit the problem you're having, and I'm not at all sure why you'd think this would help.
[18:00:39] <siXy> Try to remember that we can neither see your screen nor read your mind.
[18:00:54] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[18:03:16] <siXy> (as a side note, structures like this are generally not considered idiomatic - it would be worthwhile reading https://go.dev/blog/codelab-share, and reconsider if this is the correct approach)
[18:03:58] <dntreou> Hello everyone I am trying to run my little project and I am getting the following error https://defuse.ca/b/PxDmFJnUmrRX0WQbfpBPbk I have not been able to find any usefull information on the web so far, any ideas what could be causing go complaining about this library
[18:05:00] <Tv_> dntreou: what is giving that error
[18:05:10] <Tv_> because it sure don't look like a message from the go compiler
[18:05:39] <siXy> dntreou: Your IDE probably "helpfully" imported "golang.org/x/tools/go/ssa/interp/testdata/src/fmt" instead of "fmt"
[18:05:52] <siXy> Fix that and that error should go away - you shouldn't be importing the former
[18:06:16] <siXy> goimports has an annoying habit of doing things like that from time to time
[18:06:33] <Tv_> where would the ../../../ noise in the message come from? i've never seen the go compiler use paths like that
[18:07:13] <ikke> Tv_: replace directive with local paths?
[18:07:25] <Tv_> hu
[18:07:29] <Tv_> https://play.golang.org/p/EOhinGm8Pj6
[18:07:35] <Tv_> siXy looks to have won t his round
[18:07:57] <siXy> I cheated a bit - I found a go issue where someone else had the exact same problem
[18:08:04] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[18:08:09] <Tv_> honestly i would have even expected the compiler to refuse to import anything testdata/
[18:08:27] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[18:08:57] <Tv_> i mean, linters often know to skip testdata/**.go because that's where intentionally bad examples are stored
[18:09:10] <siXy> I think fixing goimports (or whichever tool did the auto importing) to not be damn silly would be better
[18:09:25] <Tv_> defense in depth, but yes
[18:09:31] <Led_Zeppelin2> siXy, I am taking over someone else code. Its a large file, so that would be not practical. I am showing you where the runtime error is happening. Anyway, I will play around more with it. thanks again.
[18:09:37] <dntreou> yes that is from my IDE, that is strange ill investage where that import might have taken place cause I surely did not did that
[18:10:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:11:22] *** Joins: fikran (~fikran@user/fikran)
[18:12:38] <dntreou> you are absolutely right my ide did that, thank you siXy
[18:13:41] <siXy> np, I ended up turning off goimports entirely after the 20th or so time it did something like this
[18:14:13] <fizzie> Led_Zeppelin2: Sure you don't accidentally leave something uninitialized in your unshared test code? Because that's exactly the error you'd expect ("invalid memory address or nil pointer dereference", on line 20) from doing that: https://play.golang.org/p/YKFsZAl80gg
[18:15:31] <Led_Zeppelin2> fizzie, thats the exact erro!
[18:15:33] <Led_Zeppelin2> error
[18:15:59] *** Joins: y04nn (~y04nn@92.223.89.196)
[18:19:48] *** Joins: mei (~mei@user/mei)
[18:20:06] <Led_Zeppelin2> fizzie, yep! that was it! i had a global variable and in the test I didn't declare it!
[18:20:15] <Led_Zeppelin2> fizzie, thanks very much!
[18:20:38] <Tv_> you really shouldn't let your tests depend on global state
[18:21:00] *** Quits: eau (~chat@user/eau) (Quit: bleh!)
[18:21:16] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:21:54] <Led_Zeppelin2> yeah, i think i will refactor to localize it.
[18:28:04] *** Joins: eau (~chat@user/eau)
[18:30:32] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:31:58] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[18:32:06] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[18:32:08] *** Joins: shtirlic_ (~shtirlic@178.70.141.41)
[18:35:54] *** Quits: shtirlic (~shtirlic@167.71.15.181) (Ping timeout: 268 seconds)
[18:36:09] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Quit: IRC Bouncer crashed ...)
[18:39:32] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[18:40:41] *** Joins: junon (~junon@user/junon)
[18:42:02] <junon> Seems I'm hitting a chicken-and-egg scenario with `go mod tidy`. We have a generative step that requires `go run` to generate some packages for us (namely, via Ent) but the command cannot run for me right now without running `go mod tidy`. Unclear what the changes were that lead to this but here we are. Now that I run `go mod tidy`, it's complaining that the "query for latest" checks are failing because... the packages are missing.
[18:42:26] <junon> There's no clear way to fix this. Is there a way to tell `go run` "hey, skip the damn tidy check" manually just once?
[18:42:34] <junon> I'm completely dead in the water right now at work.
[18:45:46] <junon> ... Once again, I go through the hours of debugging, come here, ask and then.. find the answer immediately after. `got mod tidy -e`, re-generate, `go mod tidy` was the magical incantation. It would be nice if `go mod tidy` suggested, upon error, that passing `-e` might work if you're trying to recover from this exact scnario.
[18:50:04] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[18:51:18] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 268 seconds)
[18:58:54] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[19:06:08] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[19:07:32] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:08:10] *** vigumnov is now known as victori
[19:10:16] *** Atlas is now known as atlas`
[19:15:22] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:19:36] <sztanpet> make a ticket for it junon, sounds like a reasonable request
[19:19:53] <junon> Can do :)
[19:20:57] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[19:20:58] <sztanpet> albeit it sounds like recognizing that the packages are generated by this same package which sounds non-reasonable
[19:21:45] <junon> I think in the case where it fails to query a package with the same prefix as the module defined in `go.mod` would prompt for the tip.
[19:22:52] <junon> Perhaps I'm not experienced enough but it'd be weird to try to query the same repository's remote hoping the remote reports that the code is there for some reason. All of the code listed in the local module should exist in the local repository, and if it's not found then why would it exist remotely? Seems like weird functionality anyway.
[19:26:08] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:29:32] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--297.oracle-ocna.com) (Ping timeout: 268 seconds)
[19:31:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:31:23] *** Joins: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk)
[19:35:24] <junon> Submitted as #49292 fwiw
[19:43:03] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[19:43:07] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 268 seconds)
[19:43:14] *** Quits: sagax (~sagax_nb@user/sagax) (Remote host closed the connection)
[19:44:20] *** Quits: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk) (Ping timeout: 268 seconds)
[19:45:54] *** Joins: dntreou (~yakiza@global-5-47.nat-1.net.cam.ac.uk)
[19:52:22] *** Quits: dntreou (~yakiza@global-5-47.nat-1.net.cam.ac.uk) (Ping timeout: 268 seconds)
[19:54:13] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com)
[19:56:48] *** Joins: andlabs (~andlabs@209.107.182.180)
[19:59:18] *** Joins: sagax (~sagax_nb@user/sagax)
[19:59:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:59:54] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com) (Ping timeout: 260 seconds)
[20:00:33] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com)
[20:03:28] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 268 seconds)
[20:04:47] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[20:05:01] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[20:14:32] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[20:15:08] *** Joins: jla (~jordi@64.225.79.195)
[20:18:39] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[20:18:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:18:52] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[20:20:43] *** Joins: fikran (~fikran@user/fikran)
[20:21:53] *** Joins: shtirlic (~shtirlic@178.70.141.41)
[20:25:02] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 268 seconds)
[20:25:34] *** Quits: shtirlic_ (~shtirlic@178.70.141.41) (Ping timeout: 260 seconds)
[20:26:14] *** Joins: fef (~thedawn@user/thedawn)
[20:27:05] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[20:27:05] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[20:27:05] *** Joins: tane (~tane@user/tane)
[20:36:06] *** Quits: crm (~crm@70.120.0.94) (Quit: Leaving)
[20:41:42] <HisShadow> Is there an easy way to figure out which errors can a function return? I'm currently looking at LookupIP from Resolver type
[20:42:12] <bookworm> look at the code, that may be not easy though
[20:42:20] <bookworm> why do you need to know exactly?
[20:42:38] <bookworm> Generally the error if not documented otherwise is just a sentinel
[20:42:40] <A_Dragon> Usually it says in the documentation what errors may be returned, but always assuming that others you cant handle will be as well is a good idea.
[20:42:56] <bookworm> there exceptions like os.PathError and siblings
[20:43:03] *** Joins: jla (~jordi@64.225.79.195)
[20:43:18] <bookworm> there's*
[20:44:08] <HisShadow> I want to filter stuff I don't want showing up in my log
[20:44:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:45:23] <A_Dragon> more info > less info.
[20:46:04] *** Joins: fikran (~fikran@user/fikran)
[20:46:07] <HisShadow> eh, not really, I don't need a bunch of connection reset by peer or broken pipes in the log for example
[20:49:32] <A_Dragon> well, you can catch those but you'll likely find you'd need to inspect the strings of the errors.
[20:50:46] *** Quits: andlabs (~andlabs@209.107.182.180) (Read error: Connection reset by peer)
[20:51:02] *** Joins: andlabs (~andlabs@209.107.182.180)
[20:51:24] <Led_Zeppelin2> I have a slice which has close to a billion entries. is there a way I can store that on disk and when needed I can retreive it? The retrieval should be fast. I do some analytics to the slice (avg, sum, median, etc...). Is it a good idea to use an embedded database for something like this?
[20:51:41] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:52:38] <junon> sounds like you want memory mapping, depending on the data structure and how you interact with it.
[20:54:17] <seebs> memory mapping is certainly a plausible approach. how fast it is or isn't may depend a lot on frequency of use and contention for disk cache
[20:54:24] *** Quits: andlabs (~andlabs@209.107.182.180) (Read error: Connection reset by peer)
[20:54:41] *** Joins: andlabs (~andlabs@2604:ca00:17b:b7:7040:a8de:c81e:3eea)
[20:55:44] <Led_Zeppelin2> i append data to the slice very quickly. concurrently RWutex. When the data size is large, say few billion rows, i can see it use a lot of resident memory. I don't want it to use that.
[20:55:57] <Led_Zeppelin2> was thinking I create a buffer and dump it to disk when it hits a threashold.
[20:56:05] *** Joins: andlabs_ (~andlabs@2604:ca00:17b:b7:9d88:6a46:3566:34be)
[20:56:29] <siXy> You're likely better off using an embedded database, rather than designing your own bespoke data storage.
[20:57:26] <siXy> This sounds rather a lot like a metric storing system - append only, lots of tiny data points, and wanting to do sum/mean/etc across the points
[20:58:20] <Led_Zeppelin2> it is.
[20:58:33] <siXy> therefore I'd suggest looking at a timeseries DB - you could use something like prometheus or influx, but they're kind of large. There are some embedabble ones but I don't have enough first hand exp to personally recommend a particular one of those
[20:58:36] <Led_Zeppelin2> i throw away the data after my program runs though
[20:59:04] <Led_Zeppelin2> ha no. influx or promethus will be too slow. there is a RPC that I would have to do.
[20:59:11] *** Quits: andlabs (~andlabs@2604:ca00:17b:b7:7040:a8de:c81e:3eea) (Ping timeout: 264 seconds)
[20:59:37] <seebs> hmm
[20:59:39] <Led_Zeppelin2> i think embedded database sounds ideal.  And I don't need timeseries database. Just a good bucket to store stuff.
[20:59:46] <Led_Zeppelin2> and destroy after its done.
[20:59:48] <siXy> I'd also question if you really need the raw data - can't you aggregate it a bit - precompute those data points down some?
[20:59:56] <seebs> That sounds mmap-ish
[21:00:05] <seebs> what are the actual entries in the data?
[21:00:09] <Led_Zeppelin2> no, i need those datapoints to do distributions.
[21:00:16] <siXy> maybe a distribution of points over a 60s window or something.
[21:00:50] <Led_Zeppelin2> seebs, [1,2,3,4,121,23232,11,223...] thats how the data looks like. Just billions of them.
[21:01:22] <A_Dragon> what are you doing with the data?
[21:01:24] <seebs> if you're appending data to the thing you probably don't want/need an rwmutex
[21:01:39] <seebs> can there be duplicate data points, or is it just individual numbers being present or not present, or?
[21:01:45] <siXy> sure, but if you have 1 billion points, that's a lot. you could probably aggregate to a larger window - even if it's like a 5s window or something - and avoid having each individual point stored.
[21:01:48] <seebs> are there timestamps or anything, or is it just "here's all the numbers we've seen lately"?
[21:01:55] <Led_Zeppelin2> I am summarizing the data.
[21:02:15] <Led_Zeppelin2> seebs, yes! there can be duplicate data points.
[21:02:16] <seebs> summarizing admits, to some extent, doing partial summarizations of individual hunks and then summarizing those.
[21:02:33] <Led_Zeppelin2> siXy, the data is stationary. its not time series.
[21:02:51] <A_Dragon> I'd divide and conquer the math you want to do, or just wait for it to finish
[21:02:58] <Led_Zeppelin2> seebs, the later. "here are the numbers we've seen"
[21:02:58] <A_Dragon> are there particular bounds to the numbers?
[21:03:11] <Led_Zeppelin2> [0,n]
[21:03:23] <A_Dragon> where n is....?
[21:03:30] <Led_Zeppelin2> correct. its ?
[21:03:39] <A_Dragon> so its unbounded, got it.
[21:03:53] <A_Dragon> I was going to suggest using a smaller datatype at least
[21:03:55] <Led_Zeppelin2> right. i suppose you can say n is uint64
[21:04:27] *** Parts: junon (~junon@user/junon) ()
[21:04:28] <Led_Zeppelin2> seebs, and I agree with rwmutex. I am just using it because its working so well. I should change it to for optimization. thats later on
[21:07:38] *** Quits: souvik (~souvik@103.59.73.170) (Ping timeout: 260 seconds)
[21:07:43] <seebs> huh
[21:08:00] <seebs> if you just care about the numbers you've seen, use roaring
[21:08:11] *** Quits: andlabs_ (~andlabs@2604:ca00:17b:b7:9d88:6a46:3566:34be) (Ping timeout: 264 seconds)
[21:08:17] <seebs> i mean, roaring64 or something, ala pilosa/molecula, but that's fine for this
[21:08:54] <Led_Zeppelin2> what the hell is that? roaring?
[21:09:43] *** Joins: normen_ (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de)
[21:09:56] *** Joins: shtirlic_ (~shtirlic@178.70.141.41)
[21:09:56] *** Joins: marler8997_ (~marler899@204.229.3.4)
[21:10:14] <Led_Zeppelin2> https://github.com/RoaringBitmap/roaring ?
[21:10:17] *** Joins: gijs (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl)
[21:10:18] *** Joins: volt_ (~volt@67.197.6.215)
[21:10:41] *** Joins: mrig_ (~AdiIRC@2a01:cb1c:abc:de00:fc08:1a1e:4b2c:e50)
[21:10:41] *** Quits: volt (~volt@67.197.6.215) (Read error: Connection reset by peer)
[21:10:41] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Read error: Connection reset by peer)
[21:10:41] *** Quits: marler8997 (~marler899@204.229.3.4) (Read error: Connection reset by peer)
[21:10:42] *** Joins: lofiguy_ (~lofiguy@87-207-104-205.dynamic.chello.pl)
[21:10:42] *** Quits: gpeskens[w] (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[21:10:42] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Read error: Connection reset by peer)
[21:10:42] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[21:10:50] *** Quits: mooff (mooff@awful.cooking) (Quit: Ping timeout (120 seconds))
[21:11:07] <Led_Zeppelin2> that is awesome
[21:11:29] *** Joins: mooff (mooff@awful.cooking)
[21:12:32] *** Quits: normen (~normen@p200300d71721dd00e163735849719407.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:12:34] *** normen_ is now known as normen
[21:13:09] *** Quits: mrig (~AdiIRC@user/mrig) (Ping timeout: 268 seconds)
[21:13:46] *** Quits: shtirlic (~shtirlic@178.70.141.41) (Ping timeout: 268 seconds)
[21:14:27] <seebs> i think the official roaringbitmap implementation is 32-bit, the one in pilosa does 64-bit but there's a lot of wrapper stuff going on there that is possibly not what you'd want. eh, it's adaptable.
[21:15:28] <Led_Zeppelin2> thanks for this. I will explore it. Would of never found this without being here!
[21:17:05] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[21:18:48] *** Quits: fentanyl_ (~ryan@bras-vprn-toroon4834w-lp130-08-174-91-44-103.dsl.bell.ca) (Quit: leaving)
[21:23:01] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com) (Ping timeout: 268 seconds)
[21:23:31] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[21:24:16] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[21:28:00] *** Joins: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de)
[21:28:00] *** Quits: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de) (Changing host)
[21:28:00] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:29:43] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[21:30:01] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[21:30:54] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Client Quit)
[21:31:04] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[21:32:16] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Client Quit)
[21:33:02] *** Joins: mobbi (~quassel@dfs2j6ybbcqhjd05qz7pt-3.rev.dnainternet.fi)
[21:43:25] *** Joins: yangby (~secret@125.120.162.167)
[21:43:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:44:16] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Ping timeout: 245 seconds)
[21:47:03] *** Quits: yangby (~secret@125.120.162.167) (Client Quit)
[22:00:37] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[22:02:43] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:04:06] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 260 seconds)
[22:05:12] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[22:05:33] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Ping timeout: 268 seconds)
[22:06:06] *** Joins: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de)
[22:06:07] *** Quits: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de) (Changing host)
[22:06:07] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:06:58] *** atlas` is now known as Atlas
[22:08:15] *** Joins: mei (~mei@user/mei)
[22:09:18] *** Joins: Jigsy (~Jigsy@user/jigsy)
[22:10:25] *** Quits: Atlas (~atlas@user/atlas) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[22:11:34] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:41fe:2b77:23d8:383b)
[22:15:22] *** Joins: edrocks (~Ed@user/edrocks)
[22:16:18] *** Quits: y04nn (~y04nn@92.223.89.196) (Remote host closed the connection)
[22:20:48] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[22:23:11] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[22:24:10] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:25:30] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[22:27:18] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[22:28:03] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[22:34:44] <Tv_> https://github.com/RoaringBitmap/roaring may be less or more painful to use than the pilosa one
[22:36:09] *** Joins: goldfish (~goldfish@user/goldfish)
[22:36:30] <Tv_> Led_Zeppelin2: appending to a large slice is one of those things where all the hurt it's causing (memory use, slowness) are signs of you using the wrong data structure.. contiguous & large & need to grow, choose any two
[22:41:03] *** Joins: resamvi (~julien@p4ff773f9.dip0.t-ipconnect.de)
[22:41:04] *** Quits: resamvi (~julien@p4ff773f9.dip0.t-ipconnect.de) (Changing host)
[22:41:04] *** Joins: resamvi (~julien@user/resamvi)
[22:41:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:41:43] <foobaz> appending to a large file is not nearly so troublesome
[22:43:45] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[22:44:27] *** Joins: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de)
[22:44:27] *** Quits: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de) (Changing host)
[22:44:27] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:46:15] *** Quits: resamvi (~julien@user/resamvi) (Quit: leaving)
[22:46:23] *** Joins: resamvi (~julien@p4ff773f9.dip0.t-ipconnect.de)
[22:46:24] *** Quits: resamvi (~julien@p4ff773f9.dip0.t-ipconnect.de) (Changing host)
[22:46:24] *** Joins: resamvi (~julien@user/resamvi)
[22:49:57] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[22:52:50] *** Quits: resamvi (~julien@user/resamvi) (Quit: leaving)
[22:54:08] *** Joins: jpw (~jpw@user/jpw)
[22:54:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:55:39] *** Joins: fikran (~fikran@user/fikran)
[22:57:12] *** Joins: nehsou^ (~nehsou@wsip-98-188-242-6.mc.at.cox.net)
[22:57:18] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[22:58:26] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:58:45] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[22:59:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[23:02:10] *** Quits: Armanzor (~Armanzor@user/armanzor) (Read error: Connection reset by peer)
[23:03:38] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[23:05:51] *** Joins: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com)
[23:06:06] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[23:06:40] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:09:04] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[23:10:19] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[23:12:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[23:13:11] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[23:17:55] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Client Quit)
[23:18:05] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[23:19:42] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:21:15] *** Quits: mrig_ (~AdiIRC@2a01:cb1c:abc:de00:fc08:1a1e:4b2c:e50) (Quit: Going offline, see ya! (www.adiirc.com))
[23:22:07] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:26:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[23:29:20] *** Joins: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de)
[23:29:20] *** Quits: neurocyte0132889 (~neurocyte@IP-213157011136.dynamic.medianet-world.de) (Changing host)
[23:29:20] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:30:07] *** Joins: mrig (~mrig@user/mrig)
[23:33:41] <Led_Zeppelin2> Tv_, what do you recommend, in my situation?
[23:33:54] <Tv_> Led_Zeppelin2: describe your problem in 3 sentences.
[23:37:47] <Led_Zeppelin2> I have few billion points that are type of int64 and I collect them concurrently. I need to generate a distribution for it.
[23:38:04] <Tv_> Led_Zeppelin2: for what purpose are you collecting this data, what is done with it
[23:38:17] <seebs> does it matter how *often* a given number shows up?
[23:38:20] <Tv_> Led_Zeppelin2: if you just need a distribution, i don't think you need to store them at all
[23:38:30] <Led_Zeppelin2> seebs, it does because I am doing a distribution.
[23:38:37] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:38:52] <seebs> oh, then roaring won't help you much, because it can only have yes/no "is this bit here" without Fancy Extra Math you probably don't want to do
[23:41:23] <Led_Zeppelin2> still a good tool though. thanks
