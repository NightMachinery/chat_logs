[00:00:07] *** Joins: argonautx (~argonautx@i5E867370.versanet.de)
[00:00:32] *** Quits: rLapz (~rLapz@user/rLapz) (Quit: Leaving)
[00:00:38] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[00:00:40] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.182)
[00:00:49] *** Joins: rLapz (~rLapz@user/rLapz)
[00:02:58] *** Quits: Thedarkb2 (~Thedarkb@92.40.196.4.threembb.co.uk) (Read error: No route to host)
[00:03:16] *** Joins: gazelle (~jackie@user/jackiee)
[00:03:28] *** Quits: gazelle (~jackie@user/jackiee) (Client Quit)
[00:04:52] *** Quits: savolla (~quassel@95.10.200.51) (Read error: Connection reset by peer)
[00:04:57] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.182) (Ping timeout: 240 seconds)
[00:05:15] *** Joins: gladys (~jackie@user/jackiee)
[00:05:21] *** Parts: gladys (~jackie@user/jackiee) ()
[00:07:01] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:07:35] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:283e:a52:fde:ddbf)
[00:11:06] *** Quits: rLapz (~rLapz@user/rLapz) (Quit: Leaving)
[00:11:16] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.182)
[00:11:20] *** Joins: rLapz (~rLapz@user/rLapz)
[00:11:58] *** Joins: slimbo (~slimbo@user/slimbo)
[00:13:22] *** Joins: marderII1 (~MarderIII@86-88-74-111.fixed.kpn.net)
[00:14:23] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[00:15:01] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[00:15:49] *** Joins: seifeslimene (~seifeslim@102.156.51.21)
[00:16:29] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Read error: Connection reset by peer)
[00:19:07] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:21:02] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.182) (Ping timeout: 272 seconds)
[00:22:37] *** Joins: FatAlbert (~archer@user/tessio)
[00:22:45] *** Parts: FatAlbert (~archer@user/tessio) (WeeChat 3.4.1)
[00:23:03] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-98-204.mobile.abo.orange.fr)
[00:26:25] *** Quits: seifeslimene (~seifeslim@102.156.51.21) (Quit: Client closed)
[00:27:01] *** Joins: seifeslimene (~seifeslim@102.156.51.21)
[00:28:00] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-98-204.mobile.abo.orange.fr) (Ping timeout: 272 seconds)
[00:28:17] *** Joins: zacts (~zacts@user/zacts)
[00:30:31] *** Quits: manx (xuew@p200300e18f16de00022215fffe03cf97.dip0.t-ipconnect.de) (Quit: manx)
[00:30:42] *** Joins: manx (xuew@p200300e18f16de00022215fffe03cf97.dip0.t-ipconnect.de)
[00:32:17] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[00:34:54] *** Quits: manx (xuew@p200300e18f16de00022215fffe03cf97.dip0.t-ipconnect.de) (Client Quit)
[00:36:04] *** Quits: seifeslimene (~seifeslim@102.156.51.21) (Quit: Client closed)
[00:36:10] *** Joins: seifeslimene86 (~seifeslim@102.156.51.21)
[00:36:41] <cehteh> likely not, but its a start, 'transmission' is a bit vague anyway, prolly you need to look if any if the rx/tx buffers are not empty, then, depending on hardware (arm for example) looking at the device tree stuff may help, as well as all the led trigger/drivers
[00:36:41] *** Quits: seifeslimene86 (~seifeslim@102.156.51.21) (Client Quit)
[00:36:50] *** Joins: seifeslimene (~seifeslim@102.156.51.21)
[00:37:38] *** Joins: manx (xuew@p200300e18f16de00022215fffe03cf97.dip0.t-ipconnect.de)
[00:41:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:42:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:48:13] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[00:49:28] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[00:49:28] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[00:49:28] *** Joins: AssKoala (~asskoala@user/asskoala)
[00:50:23] *** Quits: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 260 seconds)
[00:51:18] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[00:55:44] *** Joins: wrongt (~wrongt@user/wrongt)
[00:55:45] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 256 seconds)
[00:55:54] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.103)
[00:57:25] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[00:57:27] *** Quits: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[00:57:36] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 252 seconds)
[00:59:15] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[00:59:33] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:00:18] *** Joins: kurahaupo (~kurahaupo@pa49-182-78-217.pa.qld.optusnet.com.au)
[01:01:51] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[01:02:08] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[01:02:47] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[01:02:59] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.103) (Ping timeout: 260 seconds)
[01:04:29] *** Joins: pendarsoheil (~pendarsoh@63.238.189.98)
[01:04:30] <pendarsoheil> https://pastebin.com/QcgwESMe
[01:04:39] <pendarsoheil> Running this code with a small dataset with valgrind I get no errors
[01:04:54] <pendarsoheil> When I run it with a large dataset I get Address 0xa44a130 is 0 bytes after a block of size 11,247,856 alloc'd
[01:05:07] <pendarsoheil> Note that the code pasted adds +1 to the mallocs and the error now disappears.
[01:05:10] <pendarsoheil> What gives?
[01:05:16] *** Quits: random-nick (~random-ni@87.116.167.125) (Remote host closed the connection)
[01:05:28] <pendarsoheil> That is... int *columnIndex = malloc(sizeof(int) * (nonZeroLength)); fails but int *columnIndex = malloc(sizeof(int) * (nonZeroLength + 1)); works
[01:07:52] *** Joins: oxfuxxx (~oxfuxxx@217.138.207.196)
[01:08:22] *** zaratustra_ is now known as zaratustra
[01:11:40] *** Joins: Lyude (~lyudess@pool-71-126-244-162.bstnma.fios.verizon.net)
[01:14:13] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[01:15:07] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Remote host closed the connection)
[01:15:20] *** Joins: zacts (~zacts@user/zacts)
[01:16:43] *** Quits: oxfuxxx (~oxfuxxx@217.138.207.196) (Ping timeout: 256 seconds)
[01:20:07] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[01:22:36] *** Joins: meator (~meator@user/meator)
[01:23:57] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 240 seconds)
[01:24:14] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.103)
[01:24:57] *** mh3f_ is now known as mh3f
[01:25:25] <meator> Hello. Why does this code SIGIOT: https://bpa.st/ZVQA ?
[01:26:10] <meator> It terminates on line 9, even when test == 0.
[01:26:13] *** Joins: immibis (~hexchat@62.156.144.218)
[01:26:14] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[01:26:20] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[01:28:16] *** Quits: wrongt (~wrongt@user/wrongt) (Quit: Leaving)
[01:28:24] <nitrix> meator, What do you think the scope of body for your if condition begins and ends?
[01:28:37] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Ping timeout: 256 seconds)
[01:29:17] <nitrix> meator, The braces aren't there just for decoration.
[01:29:36] *** Joins: csrf (~csrf@user/csrf)
[01:30:59] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.103) (Ping timeout: 260 seconds)
[01:31:13] *** Quits: pendarsoheil (~pendarsoh@63.238.189.98) (Quit: Leaving)
[01:31:58] *** Quits: marderII1 (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 272 seconds)
[01:32:23] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 260 seconds)
[01:32:53] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[01:34:31] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[01:34:53] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4.1)
[01:35:10] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:36:20] <nitrix> ,c11 6.8.4p3
[01:36:20] <candide> http://www.iso-9899.info/n1570.html#6.8.4p3 [Selection statements] A selection statement is a block whose scope is a strict subset of the scope of its enclosing block. Each associated substatement is also a block whose scope is a strict subset of the scope of the selection statement.
[01:36:36] <Dean> NRK the questions and answers section was very informative. i learned a lot. thank you for sharing the video.
[01:38:44] <nitrix> meator, How many statements are there in `perror("Dmenu"); abort();`?
[01:39:03] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[01:39:09] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[01:40:14] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[01:40:19] *** Quits: PaulePanter (~paul@mail.gw90.de) (Remote host closed the connection)
[01:40:34] <nitrix> meator, The only selection-statement grammar valid for your example is `if ( expression ) statement`. How many statements does that supports?
[01:40:46] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[01:41:12] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[01:42:13] *** Quits: jusski (~user@88.118.79.204) (Ping timeout: 256 seconds)
[01:42:43] *** Joins: oxfuxxx (~oxfuxxx@217.138.207.198)
[01:45:41] *** Quits: oxfuxxx (~oxfuxxx@217.138.207.198) (Client Quit)
[01:46:46] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[01:47:49] <meator> Sorry, I see it now. There are of course two statements, if accepts one. I'm so used to "normal code" that does one statement at a time that I didn't see this.
[01:47:54] <meator> Thanks!
[01:47:59] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[01:48:36] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ecc7:fdb2:bf0e:3249) (Ping timeout: 240 seconds)
[01:48:56] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[01:50:52] <oldlaptop> meator: That snippet is an excellent argument against permitting braceless if.
[01:51:05] <oldlaptop> (In style guides, I mean.)
[01:51:30] <meator> It's not if's fault, it's my fault.
[01:52:25] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[01:52:26] <oldlaptop> What I mean is that if you were to rigidly adhere to a rule that if bodies are always braced, you couldn't *have* that problem
[01:52:30] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:48] <meator> The condition was originally a macro, so it looked right at a first glance.
[01:53:06] <oldlaptop> (You could still have some close cousins of it. if (foo); { foo_is_true(); } is a favorite.
[01:54:48] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[01:55:23] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:57:26] *** Joins: Viewday115 (~Viewday@user/viewday)
[01:58:10] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[01:59:57] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:02:47] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ac1c:8bb9:856a:4ec3)
[02:06:07] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[02:09:11] <baltazar> cehteh: yeah, I figured. I mean, the most basic thing I can do is send my data then `tcdrain` it and set the GPIO pin afterwards. it's just that I don't think it's guaranteed that my process will wake up "immediately" after the data is sent
[02:09:35] <baltazar> but I need to toggle the gpio line as soon as possible after the transmission, otherwise I might miss the start of the answer
[02:09:48] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[02:10:26] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:11:30] *** Quits: alch (~alch@pd-18-96-170.service.infuturo.it) (Read error: Connection reset by peer)
[02:13:10] *** Joins: mzxtuelkl (~mzxtuelkl@user/mzxtuelkl)
[02:14:32] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:16:36] *** Quits: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl) (Ping timeout: 240 seconds)
[02:19:12] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[02:19:29] *** Joins: klunk36 (~klunk35@p4fe10bf7.dip0.t-ipconnect.de)
[02:19:55] *** Joins: Matt|home (~matt@2607:fb90:7c24:d9e3:29a6:79ae:7c0:43b0)
[02:19:59] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[02:24:13] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[02:25:02] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.179) (Ping timeout: 252 seconds)
[02:25:27] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.56)
[02:25:35] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.179) (Ping timeout: 260 seconds)
[02:26:02] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.56)
[02:35:01] *** Quits: parrott (~parrott@2607:fb90:1774:24af:0:3:a0b0:1801) (Read error: Connection reset by peer)
[02:35:22] *** Joins: alch (~alch@151.38.252.37)
[02:36:11] *** Joins: parrott (~parrott@2607:fb90:1774:24af:0:3:a0b0:1801)
[02:37:13] *** Quits: parrott (~parrott@2607:fb90:1774:24af:0:3:a0b0:1801) (Read error: Connection reset by peer)
[02:38:28] *** Joins: parrott (~parrott@158.59.127.103)
[02:39:37] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 240 seconds)
[02:40:24] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[02:41:06] *** Joins: kubast2 (~jakubby@user/kubast2)
[02:41:44] *** Quits: kubast2 (~jakubby@user/kubast2) (Client Quit)
[02:42:05] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[02:43:07] *** Joins: random-nick (~random-ni@87.116.167.125)
[02:46:16] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:47:32] *** Quits: Inline (~Inline@p200300cd472cf8009bb7e46c1da712cc.dip0.t-ipconnect.de) (Quit: Leaving)
[02:52:06] *** Joins: Inline (~Inline@p200300cd472cf8009bb7e46c1da712cc.dip0.t-ipconnect.de)
[02:52:26] *** Quits: klunk36 (~klunk35@p4fe10bf7.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:55:00] *** Quits: neunon (~neunon@user/neunon) (Ping timeout: 240 seconds)
[02:59:17] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Ping timeout: 240 seconds)
[03:01:13] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[03:01:53] *** Quits: geeknix (~pi@2001:e68:5432:7a19:c5f9:1f10:fdeb:7503) (Ping timeout: 252 seconds)
[03:01:53] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[03:02:15] *** Joins: neunon (~neunon@user/neunon)
[03:03:56] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[03:06:07] *** Joins: useretail (~useretail@185.132.19.151)
[03:06:55] *** Joins: seninha (~seninha@user/seninha)
[03:08:42] *** Joins: vysn (~vysn@user/vysn)
[03:09:57] *** Quits: rampart (~rampart@2607:fb90:a239:6f9e:bc2f:d06d:9220:b7c) (Ping timeout: 240 seconds)
[03:10:31] *** Quits: argonautx (~argonautx@i5E867370.versanet.de) (Quit: Leaving)
[03:11:53] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[03:12:10] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[03:14:00] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 252 seconds)
[03:14:21] *** Joins: Inline__ (~Inline@p4fedbe8f.dip0.t-ipconnect.de)
[03:15:05] *** Quits: Inline (~Inline@p200300cd472cf8009bb7e46c1da712cc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:18:09] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[03:18:26] *** Joins: geeknix (~pi@2001:e68:5432:716a:e867:9342:8ac3:7cf7)
[03:19:15] *** Quits: mahmutov (~mahmutov@37.155.83.113) (Ping timeout: 260 seconds)
[03:19:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:22:01] *** Joins: Viewday1151 (~Viewday@user/viewday)
[03:24:13] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 250 seconds)
[03:24:14] *** Viewday1151 is now known as Viewday115
[03:28:56] *** Joins: zacts (~zacts@user/zacts)
[03:30:24] *** Quits: adip (~adip@dii229.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[03:34:10] *** Joins: pizdets_ (~pizdets@183.182.110.13)
[03:34:48] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Quit: WeeChat 3.4)
[03:34:59] *** Quits: pizdets (~pizdets@183.182.115.185) (Ping timeout: 256 seconds)
[03:35:49] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:35:51] *** crankslider is now known as slidercrank
[03:39:16] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[03:40:31] *** Joins: thelounge8575 (66818f1b@67.205.143.82)
[03:40:33] <thelounge8575> УКРАИНА - ЗЛО, РОССИЯ - ЛУЧШАЯ СТРАНА
[03:42:37] <YellowSuB> Anyone know what could be wrong with this? https://0x0.st/oqPd.txt
[03:42:59] <YellowSuB> Trying to free a linked list but for some reason it is leaving something behind
[03:43:16] <YellowSuB> Causing sigsegv whenever I try to use it a second time, works the first time though
[03:44:01] *** Quits: thelounge8575 (66818f1b@67.205.143.82) (K-Lined)
[03:44:02] *** Quits: Akuli (~Akuli@87-94-108-65.bb.dnainternet.fi) (Quit: Akuli)
[03:44:39] <nitrix> Are you on linux?
[03:45:38] <YellowSuB> nitrix: yep
[03:45:57] <nitrix> Try compiling with -fsanitize=address,undefined and re-run the program. Paste the output.
[03:47:09] <YellowSuB> https://0x0.st/oqP5.txt
[03:47:50] <YellowSuB> hmm,
[03:48:03] <nitrix> Your cleanup looks fine, the corruption happens as a result of another function. I'm guessing ->next isn't properly NULL at the end.
[03:48:24] <YellowSuB> Hmm, that might be, I might be initializing the nodes wrong
[03:48:24] <nitrix> So eventually the loop does an invalid READ.
[03:49:09] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[03:49:37] <nitrix> Wanna share linked_list.c?
[03:49:47] <YellowSuB> Holy batman you were right
[03:49:59] <YellowSuB> Thanks a lot!
[03:50:11] <nitrix> The sanitizer did all the work, but sure. You're welcome.
[03:50:12] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:283e:a52:fde:ddbf) (Ping timeout: 240 seconds)
[03:55:27] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Remote host closed the connection)
[03:57:40] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[04:01:49] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:04:49] *** Joins: sphex (~nobody@162.156.254.107)
[04:05:06] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:06:15] *** Quits: Posterdati (~posterdat@user/Posterdati) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[04:14:39] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[04:18:51] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[04:19:42] *** Joins: Posterdati (~posterdat@user/Posterdati)
[04:19:56] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[04:20:08] *** Joins: mahmutov (~mahmutov@37.155.83.113)
[04:21:52] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[04:22:32] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[04:23:18] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[04:26:33] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[04:29:20] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:32:37] *** Quits: Vrganj (~Vrganj@93-142-89-137.adsl.net.t-com.hr) (Ping timeout: 240 seconds)
[04:32:51] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:37:27] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[04:38:10] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:44:12] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Ping timeout: 240 seconds)
[04:50:36] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:50:45] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[04:52:37] *** Joins: Oddity (~Oddity@user/oddity)
[04:52:37] *** Quits: seifeslimene (~seifeslim@102.156.51.21) (Ping timeout: 256 seconds)
[04:56:40] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:00:28] *** Joins: wroathe (~wroathe@ee4.ips.PaulBunyan.net)
[05:00:28] *** Quits: wroathe (~wroathe@ee4.ips.PaulBunyan.net) (Changing host)
[05:00:28] *** Joins: wroathe (~wroathe@user/wroathe)
[05:00:51] *** Quits: begriffs (~begriffs@user/begriffs) (Read error: Connection reset by peer)
[05:01:08] *** Joins: begriffs (~begriffs@user/begriffs)
[05:05:21] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 245 seconds)
[05:06:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[05:07:24] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Read error: Connection reset by peer)
[05:07:31] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[05:07:33] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:08:17] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[05:08:42] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:16:25] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Ping timeout: 256 seconds)
[05:18:06] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[05:22:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[05:22:39] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[05:24:33] *** Joins: Wulf (~Wulf@user/wulf)
[05:24:33] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[05:31:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[05:32:16] *** Joins: Guest92 (~Guest92@176.100.125.106)
[05:33:33] *** Joins: korg815 (~korg815@user/korg815)
[05:36:00] <Guest92> Hello! I'm really stuck at this simple strsep example and can't understand why it segfault on my pc. https://bpa.st/NLHQ
[05:37:23] <oldlaptop> Guest92: What does the & operator do?
[05:38:49] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[05:39:57] <oldlaptop> (Hm, never mind that for now, I misremember what strsep is supposed to do.) You know that strsep modifies the string that your `line` pointer points to, right?
[05:40:43] <Guest92> & returns address of variable, afaik :c
[05:40:58] <Guest92> yes
[05:41:08] <oldlaptop> Yes, that's a red herring. I was remembering strsep taking (char *, char *), not (char **, char *).
[05:41:15] *** Joins: Enitin (~Enitin@82.180.145.226)
[05:41:41] <oldlaptop> Do you understand what `char *foo = "rubber baby buggy bumpers";` does?
[05:42:14] <nitrix> Mutating string literals is UB. Don't use strsep on them.
[05:42:42] <Guest92> not really. I assume it allocates some memory and keep char array there.
[05:42:50] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[05:43:27] <nitrix> Assuming is probably the worst thing you can do when working with C.
[05:43:40] <Guest92> oh, i see. Sorry
[05:44:17] <oldlaptop> That's correct, so far as it goes. Unfortunately for you, the C standard says that modifying that region of memory is undefined behavior. (This is because it's often, in practice, stored in a read-only location in memory; either a section of the program marked read-only in a modern OS with memory protection, or maybe flash/ROM in a microcontroller, or something of that nature.)
[05:45:47] *** Quits: aliosablack (~chomwitt@2a02:587:dc18:da00:eb71:868b:3400:4636) (Ping timeout: 260 seconds)
[05:46:33] <Guest92> I see. Thank you, guys. I'm sorry
[05:47:16] <oldlaptop> Don't be sorry: you're learning.
[05:47:38] <jack_rabbit> I expect it's more because it's because string constants should always be the same value, and allowing them to be modified would mean subsequent uses of the constant would result in using a modified string.
[05:47:58] <jack_rabbit> I've used implementations that don't segfault when modifying the string. You just get bad data later (also a result of UB)
[05:48:34] <jack_rabbit> whoops, fumbled that.
[05:48:49] <fizzie> GCC used to have a `-fwritable-strings` option, but sadly it was let go. :/
[05:49:40] <Guest92> so using strsep to separate string to multiple strings is generally bad idea?
[05:50:09] <oldlaptop> No, it's a bad idea to use it, or other functions that modify a string, to attempt to modify string literals.
[05:50:40] <oldlaptop> It *is* a bad idea to use strsep() in the limited sense that it's not defined by any standard.
[05:51:14] <oldlaptop> (strtok() is more limited in some ways, but *is* defined in C89)
[05:51:16] <jack_rabbit> You just need to make sure that you are allowed to modify the memory you pass to strsep, since strsep modifies the string.
[05:51:53] <oldlaptop> Compare and contrast this version: https://clbin.com/lo1kK
[05:52:48] <oldlaptop> (and note that `char foo[] = "rubber baby buggy bumpers";` means something different from `char *foo = "rubber baby buggy bumpers";`)
[05:54:20] *** Quits: duds- (~duds-@user/duds) (Quit: Leaving.)
[05:54:36] *** Joins: duds- (~duds-@user/duds)
[05:55:52] <fossforus> latter stores a non-modifiable string literal in the read only section of your binary
[05:55:52] <Guest92> oh, thank you. I must think about it :)
[05:56:39] <fossforus> former initialized an array[sizeof("rubber baby whatever")] with said string
[05:56:42] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 272 seconds)
[05:57:02] *** Joins: Clockface (~billy@47.139.51.139)
[05:57:19] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[05:57:28] <pragma-> rubber dinghy rapids, bro
[05:58:14] <oldlaptop> (The array version is the same as `char foo[] = {'r', 'u', 'b', <...>, '\0'};`)
[05:58:25] <Guest92> ahh, it seems I'm trying to modify string literal which is RO and I must place it in some allocated array and work with array.
[05:58:31] <oldlaptop> Precisely.
[05:58:37] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Quit: Leaving)
[05:58:49] <Guest92> thank you!
[05:58:56] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:59:17] <pragma-> "allocated" tends to imply malloc, realloc, calloc, strdup, etc. this isn't necessary.
[05:59:28] <Clockface> a new SIGALRM cannot be schedualed in the handler of said SIGALRM?
[05:59:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[05:59:38] <oldlaptop> You could also declare an array (or malloc() an object) of the appropriate size, and strcpy() (or similar) your string constant into it.
[05:59:49] <jack_rabbit> automatic storage is sufficient.
[05:59:50] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Client Quit)
[06:00:04] <oldlaptop> (You couldn't do the array allocator trick with an malloc()ed object, if you need one of those for some reason.)
[06:00:06] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[06:00:31] <oldlaptop> jack_rabbit: It is for this toy program, but maybe Guest92 has other plans.
[06:00:53] <jack_rabbit> Yes, I'm only talking about the example
[06:01:16] <oldlaptop> (If they still involve the array being of a fairly small, static length, automatic storage is still sufficient.)
[06:01:45] <oldlaptop> "array allocator" should read "array initializer", sorry.
[06:02:16] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:03:51] <Clockface> is schedualing SIGALRM blocked in the handler of another SIGALRM signal?
[06:04:33] <jack_rabbit> I don't think C says anything about signals, but generally you can only deliver one signal at a time to a process in POSIX.
[06:06:31] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[06:06:32] <Clockface> what channel deals specifically with POSIX?
[06:06:45] <oldlaptop> ##posix, naturally
[06:07:46] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[06:08:44] <Clockface> ty
[06:15:56] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:283e:a52:fde:ddbf)
[06:16:52] *** Quits: Matt|home (~matt@2607:fb90:7c24:d9e3:29a6:79ae:7c0:43b0) (Quit: Leaving)
[06:21:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[06:22:45] *** Joins: malina (~malina@user/malina)
[06:23:39] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:283e:a52:fde:ddbf) (Remote host closed the connection)
[06:25:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:283e:a52:fde:ddbf)
[06:26:22] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:27:37] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[06:27:48] *** Joins: Inline (~Inline@p200300cd473c9e009f1d7d6dc4a648e3.dip0.t-ipconnect.de)
[06:28:10] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[06:29:37] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[06:30:09] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[06:30:13] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[06:30:35] *** Quits: Inline__ (~Inline@p4fedbe8f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:31:15] *** Joins: hanzo (uid532183@user/hanzo)
[06:31:31] *** Quits: mahmutov (~mahmutov@37.155.83.113) (Ping timeout: 260 seconds)
[06:32:10] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[06:32:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:33:19] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[06:33:51] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[06:34:06] *** Joins: wroathe (~wroathe@ee4.ips.PaulBunyan.net)
[06:34:06] *** Quits: wroathe (~wroathe@ee4.ips.PaulBunyan.net) (Changing host)
[06:34:06] *** Joins: wroathe (~wroathe@user/wroathe)
[06:35:26] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[06:36:03] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[06:37:37] *** Quits: alch (~alch@151.38.252.37) (Ping timeout: 240 seconds)
[06:39:52] *** Joins: alch (~alch@151.38.235.117)
[06:41:18] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:44:40] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[06:45:33] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:49:30] *** Quits: Guest92 (~Guest92@176.100.125.106) (Quit: Client closed)
[06:54:55] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:37] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[07:00:11] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[07:02:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:04:40] *** Joins: neunon_ (~neunon@user/neunon)
[07:04:46] *** Quits: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[07:05:33] *** Quits: neunon (~neunon@user/neunon) (Ping timeout: 256 seconds)
[07:05:33] *** neunon_ is now known as neunon
[07:07:02] *** Joins: zer0x (~zer0x@1.55.210.186)
[07:07:53] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[07:09:14] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:15:38] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:22:37] *** Quits: slimbo (~slimbo@user/slimbo) (Quit: slimbo)
[07:25:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:27:33] <tusko> I'm trying to design before I write up all this code for a DNS resolver. I want to ask your thoughts about the best way to manage several shared resources.
[07:27:53] <tusko> Here is a code snippet of my data structure as I have conceived of it now https://bpa.st/QF2A
[07:28:53] *** Joins: wroathe (~wroathe@user/wroathe)
[07:29:24] <tusko> My thinking is, keep the full job in the job struct, and pass the respective logfile structs to threads, so they can use the simple binary semaphore lock to write the logs
[07:29:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:30:00] <tusko> I'll also dispatch threads with a file each, maybe spawn a resolver at the same time I spawn a requester?
[07:30:33] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:31:27] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[07:31:41] <tusko> plz to help tusko
[07:32:36] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:34:09] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[07:36:51] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[07:37:31] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Ping timeout: 256 seconds)
[07:38:14] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[07:39:54] *** Joins: _dmc_ (~dcm@27.2.216.148)
[07:42:55] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[07:43:11] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Ping timeout: 256 seconds)
[07:47:49] *** Quits: begriffs (~begriffs@user/begriffs) (Ping timeout: 240 seconds)
[07:53:23] *** Quits: lwhjp (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf) (Ping timeout: 252 seconds)
[07:54:31] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[07:59:26] *** Joins: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net)
[07:59:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[08:02:22] *** Joins: lwhjp (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf)
[08:03:36] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:04:38] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 272 seconds)
[08:05:43] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[08:05:45] *** Joins: Phandal (~Phandal@user/phandal)
[08:06:20] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Excess Flood)
[08:08:02] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:09:48] *** Joins: rLapz (~rLapz@user/rLapz)
[08:11:26] *** Joins: matacao (~eduardo@2804:14c:6322:9953:533:de15:29f3:116e)
[08:11:56] *** Quits: matacao (~eduardo@2804:14c:6322:9953:533:de15:29f3:116e) (Client Quit)
[08:12:01] <nitrix> Copy, avoid sharing. Shared memory causes threads on different cores to have to synchronize their local cache. It ends up copying either way.
[08:12:24] <nitrix> It's more complicated than that but I'd start there honestly.
[08:14:43] *** Joins: fowl (~fowlmouth@user/fowl)
[08:19:59] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[08:21:43] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[08:24:27] <tusko> Yeah, I'm sort of stuck with at least some shared resources, like the request and resolve logs. I think I will go back and have producers and consumers each copy to/from the shared array. I'm glad you brought it up because I forgot I need to do that.
[08:24:40] <tusko> I pass pointers right now, but that will soon prove insufficient.
[08:25:29] <tusko> I'm wondering if stdout/stderr might also prove to be a shared resource
[08:27:29] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:27:54] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[08:30:33] *** Joins: malina (~malina@user/malina)
[08:32:03] <nitrix> They are thread-safe, but the messages could get interleaved.
[08:32:38] <nitrix> I imagine C11 improved that, checking.
[08:33:00] <nitrix> ,c11 7.21.2p7
[08:33:00] <candide> http://www.iso-9899.info/n1570.html#7.21.2p7 [Streams] Each stream has an associated lock that is used to prevent data races when multiple threads of execution access a stream, and to restrict the interleaving of stream operations performed by multiple threads. Only one thread may hold this lock at a time. The lock is reentrant: a single thread may hold the lock multiple times at a given time.
[08:33:18] <nitrix> There you go. Already solved for you in C11.
[08:35:24] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[08:37:53] *** Joins: pulse (~pulse@user/pulse)
[08:38:07] <tusko> oh yeah, ofc
[08:38:50] <tusko> They have us building with CFLAGS = -Wextra -Wall -g -std=gnu99
[08:39:03] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[08:39:45] <fossforus> some day I hope to be as much of an encyclopedia as nitrix
[08:39:46] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:40:51] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[08:42:25] *** Joins: vysn (~vysn@user/vysn)
[08:43:40] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[08:44:05] *** Joins: nicbk (~nicbk@user/nicbk)
[08:44:17] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[08:44:33] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[08:45:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:49:07] *** Quits: _dmc_ (~dcm@27.2.216.148) (Changing host)
[08:49:07] *** Joins: _dmc_ (~dcm@user/dmc/x-4369397)
[08:49:22] *** Quits: _dmc_ (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[08:49:49] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[08:52:08] *** Joins: nate1 (~nate@98.45.167.61)
[08:52:23] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:52:45] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:58:07] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[08:59:06] *** Joins: begriffs (~begriffs@user/begriffs)
[08:59:28] *** Joins: _dmc_ (~dcm@27.2.216.148)
[08:59:28] *** Quits: _dmc_ (~dcm@27.2.216.148) (Changing host)
[08:59:28] *** Joins: _dmc_ (~dcm@user/dmc/x-4369397)
[09:00:22] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[09:00:25] *** Quits: _dmc_ (~dcm@user/dmc/x-4369397) (Remote host closed the connection)
[09:04:14] *** Joins: seifeslimene (~seifeslim@102.156.124.6)
[09:04:26] <nitrix> I looked it up ._.
[09:05:31] *** Quits: seifeslimene (~seifeslim@102.156.124.6) (Client Quit)
[09:05:40] *** Joins: seifeslimene (~seifeslim@102.156.124.6)
[09:06:00] <vdamewood> nicbk is more of an encyclopedia interface.
[09:06:10] <vdamewood> nitrix I mean
[09:06:46] <nitrix> I guess. fizzie is probably the L1 cache.
[09:08:51] *** Joins: wrongt (~wrongt@is.here.for-some.fun)
[09:09:17] <ent58> ,c11 J.5.7
[09:09:17] <candide> http://www.iso-9899.info/n1570.html#J.5.7 [Function pointer casts] 1 A pointer to an object or to void may be cast to a pointer to a function, allowing data to be invoked as a function (6.5.4). 2 A pointer to a function may be cast to a pointer to an object or to void, allowing a function to be inspected or modified (for example, by a debugger) (6.5.4).
[09:09:54] <nitrix> Keep in mind Annex J is not normative; informative only.
[09:09:57] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Ping timeout: 240 seconds)
[09:10:13] <ent58> The standard specifically calls this out, my question, like the discussion I saw about it, is why I have to hammer the compiler's head with pragma just to get the correct behavior out of dlsym/GetProcAddress
[09:10:32] <ent58> (when compiling with -Wpedantic and errors)
[09:11:01] <ent58> Yeah, but it's caused my pain so I need to name it :P
[09:11:49] *** Quits: wrongt (~wrongt@is.here.for-some.fun) (Changing host)
[09:11:49] *** Joins: wrongt (~wrongt@user/wrongt)
[09:12:07] *** Joins: zacts (~zacts@user/zacts)
[09:14:38] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[09:15:21] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[09:15:21] *** Joins: highrate (~presonic@user/highrate)
[09:17:55] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:20:57] *** Joins: pert (~pert@fsf/member/pert)
[09:23:21] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:23:22] <pert> I realize this is POSIX-specific, but after a call to exit() while the atexit() handlers are being called, do other threads still exist, or have they terminated already?
[09:24:06] *** Quits: pgib (~textual@173.38.117.75) (Ping timeout: 245 seconds)
[09:27:24] *** Quits: Phandal (~Phandal@user/phandal) (Ping timeout: 240 seconds)
[09:29:18] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[09:30:03] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[09:30:49] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[09:36:28] *** Joins: mali (~malina@user/malina)
[09:36:35] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[09:38:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[09:39:01] *** Joins: fe23 (~fe23@2409:8a34:466:6010:3457:23f:a961:8b)
[09:39:15] *** Quits: nicbk (~nicbk@user/nicbk) (Quit: nicbk)
[09:41:21] *** Quits: begriffs (~begriffs@user/begriffs) (Quit: Leaving)
[09:42:51] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[09:43:39] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:45:58] *** Quits: nate1 (~nate@98.45.167.61) (Ping timeout: 272 seconds)
[09:46:25] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[09:46:38] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[09:47:52] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Client Quit)
[09:48:45] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[09:52:57] *** Quits: Impulsif (impulsif@impulsif.us2.ircnow.org) (Quit: there can be only one)
[09:53:23] <nitrix> It's not specified by POSIX, but for linux/windows, threads are terminated by an internal _exit() function, which runs after atexit().
[09:53:56] <nitrix> Please don't rely on that. Do proper structured concurrency, cleanup your resources.
[09:54:51] *** Joins: Phandal (~Phandal@user/phandal)
[09:56:20] *** Quits: Phandal (~Phandal@user/phandal) (Client Quit)
[09:57:30] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[09:58:27] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[09:58:33] <tusko> Why is valgrind complaining about the way I open these files? https://bpa.st/FDGA
[09:59:47] <nitrix> They're probably never closed. Valgrind points to you where the allocation originates from.
[09:59:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[10:00:02] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[10:00:42] <tusko> wow
[10:00:47] <tusko> ur a boss
[10:00:51] <pert> just from that snippet, the semaphores don't get destroyed either
[10:01:11] <pert> but that doesn't involve dynamic memory allocation *on this implementation*
[10:01:37] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[10:02:00] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[10:03:12] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[10:03:28] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[10:05:28] *** Joins: Everything (~Everythin@37.115.210.35)
[10:06:39] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Ping timeout: 260 seconds)
[10:07:36] <tusko> I destroy everything in another function, I hadn't called it at the end of my main(). only called it where I needed to exit due to error
[10:09:58] <dave0> i use atexit for that kind of thing
[10:12:50] *** Joins: hashfunc1880 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[10:13:10] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[10:19:50] *** Joins: Impulsif (impulsif@impulsif.us2.ircnow.org)
[10:19:53] <pert> hah, the reason for my atexit() question was that I have wrote my own on_exit-style defer function, and I was trying to figure out if I could safely destroy the mutex after the exit handlers get called. (the answer is 'no', but as long as all threads join up at process termination time that shouldn't be an issue)
[10:20:11] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Ping timeout: 260 seconds)
[10:21:26] <pert> it's similar to pthread_cleanup_pop()/push(), except that the registrations are kept in a linked list instead of a stack, so you can "pop" registrations "in the middle", that is you can free resources you allocated a while ago without having to deallocate everything allocated since
[10:24:33] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[10:25:54] <pert> if anybody wants to see it: https://paste.debian.net/1235722/
[10:29:40] *** Quits: zer0x (~zer0x@1.55.210.186) (Ping timeout: 272 seconds)
[10:34:10] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[10:34:50] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[10:37:02] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[10:37:27] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:37:57] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[10:38:32] *** Quits: alch (~alch@151.38.235.117) (Ping timeout: 272 seconds)
[10:39:19] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[10:40:16] *** Joins: alch (~alch@151.34.228.54)
[10:45:49] *** Quits: nostar (~nostar@68.51.221.108) (Ping timeout: 268 seconds)
[10:55:12] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:56:11] <findingnemoeggfr> hey
[10:56:20] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[10:56:56] <findingnemoeggfr> I was doing the exercise 1.17 and can't figure out why it causes a segfault
[10:57:04] <findingnemoeggfr> here's the code https://bpa.st/3D3Q
[10:57:39] <findingnemoeggfr> Does anybody have any idea? I've tried googling, and I think it's something array-related. Not sure though
[10:57:45] *** Joins: X-Scale` (~ARM@80.199.137.78.rev.vodafone.pt)
[10:58:36] <greeter> it looks like you've declared l but haven't assigned it an initial value, and are later using its value to access an array
[10:59:56] <greeter> try changing line 8 to int l = 0, i, c;
[11:00:23] *** Quits: X-Scale (~ARM@46.50.6.46) (Ping timeout: 256 seconds)
[11:00:23] *** X-Scale` is now known as X-Scale
[11:00:36] <vdamewood> Is this from K&R2?
[11:01:03] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[11:01:15] <findingnemoeggfr> vdamewood: yes
[11:01:25] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[11:01:32] <vdamewood> I think I just found one more flaw that I think should be updated.
[11:01:43] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[11:01:46] <findingnemoeggfr> ???
[11:02:08] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:02:13] <greeter> that said it's usually wise to assign values to variables when you first declare them whenever possible
[11:02:32] <vdamewood> C89/90 didn't have variable declarations in for-loop initializers: for (int i = 0; ...), and while the old style works, this way is better.
[11:03:56] <findingnemoeggfr> greeter: thank you, the segfault is gone
[11:04:11] <findingnemoeggfr> not like it works now but I'll figure it out
[11:04:20] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:283e:a52:fde:ddbf) (Quit: Quit)
[11:04:25] <greeter> you're welcome findingnemoeggfr :-)
[11:07:34] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Read error: Connection reset by peer)
[11:07:52] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[11:10:17] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 252 seconds)
[11:13:45] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 256 seconds)
[11:14:20] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:14:54] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[11:16:14] *** Joins: aradesh (~aradesh@user/aradesh)
[11:20:37] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Ping timeout: 240 seconds)
[11:21:56] <findingnemoeggfr> hooray, I finally got it to work!
[11:22:46] <findingnemoeggfr> the problem was in the printing part, where I erased the value of l in the printing loop instead of outside of it
[11:23:35] <greeter> glad to hear you got it working :-)
[11:23:40] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[11:23:50] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7a46) (Quit: Textual IRC Client: www.textualapp.com)
[11:25:03] *** Joins: slimbo (~slimbo@user/slimbo)
[11:28:25] *** Joins: zer0x (~zer0x@1.55.210.186)
[11:28:34] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[11:31:33] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[11:32:12] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:41:00] *** Quits: hashfunc1880 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[11:42:13] *** Joins: vysn (~vysn@user/vysn)
[11:42:22] *** Joins: xbkkd (~F0@user/xbkkd)
[11:42:49] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[11:43:24] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:45:29] *** Joins: CaCode (~CaCode@user/cacode)
[11:45:33] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:50:16] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:56:13] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Ping timeout: 240 seconds)
[11:56:38] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:00:43] *** Joins: mahmutov (~mahmutov@5.176.33.215)
[12:00:54] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:03:53] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:06:10] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[12:06:40] *** Joins: adip (~adip@dii229.neoplus.adsl.tpnet.pl)
[12:10:34] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[12:12:54] *** Quits: mahmutov (~mahmutov@5.176.33.215) (Ping timeout: 272 seconds)
[12:23:54] *** Joins: VoidSync (~sync@user/voidsync)
[12:27:14] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[12:28:35] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[12:31:32] *** Joins: trafficjam (~trafficja@203.176.111.34)
[12:35:39] *** Joins: leah2 (~leah@vuxu.org)
[12:36:04] *** Quits: mzxtuelkl (~mzxtuelkl@user/mzxtuelkl) (Read error: Connection reset by peer)
[12:38:09] *** Joins: mzxtuelkl (~mzxtuelkl@user/mzxtuelkl)
[12:38:50] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[12:39:44] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 260 seconds)
[12:40:22] *** Joins: aliosablack (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe)
[12:40:46] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Ping timeout: 272 seconds)
[12:40:59] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.73)
[12:41:18] *** Joins: meator (~meator@user/meator)
[12:43:13] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:45:47] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.73) (Ping timeout: 260 seconds)
[12:50:49] *** mali is now known as mali_aweh
[12:51:48] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[12:52:04] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[12:53:31] *** Joins: moog__ (~moog@98.97.84.79)
[12:54:59] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:56:24] *** mali_aweh is now known as mali
[12:56:36] *** Quits: moog_ (~moog@98.97.84.79) (Ping timeout: 272 seconds)
[12:57:23] *** Joins: Batzy (~quassel@user/batzy)
[12:58:29] *** Joins: Optimus (~risto@87.227.227.147)
[13:04:05] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:05:33] *** Joins: Rooftop_Joe (~oejrtpj@85.186.15.245)
[13:07:40] *** Joins: savolla (~quassel@95.10.200.51)
[13:08:02] *** Joins: leah2 (~leah@vuxu.org)
[13:20:21] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 256 seconds)
[13:20:36] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.73)
[13:25:44] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.73) (Ping timeout: 272 seconds)
[13:26:11] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[13:28:16] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[13:28:59] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:29:03] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[13:35:30] *** Quits: LuKaRo (~LuKaRo@p4fc3382e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:38:35] *** Joins: aerysh (~aerysh@94.198.43.93)
[13:40:25] *** Quits: aerysh (~aerysh@94.198.43.93) (Remote host closed the connection)
[13:40:45] *** Joins: aerysh (~aerysh@94.198.43.93)
[13:43:27] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[13:45:55] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:47:11] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Quit: Leaving)
[13:47:56] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[13:48:03] *** rkta_ is now known as rkta
[13:48:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:50:56] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[13:51:05] <Dean> hello
[13:52:12] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.71)
[13:56:24] *** Joins: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr)
[13:58:41] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[13:59:18] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.71) (Ping timeout: 272 seconds)
[14:01:16] <Bou> shhh, don't let NRK hear you
[14:01:18] *** Quits: ncrowl (~ncrowl@31-208-86-109.cust.bredband2.com) (Ping timeout: 268 seconds)
[14:02:48] *** Joins: ncrowl (~ncrowl@89-160-83-20.cust.bredband2.com)
[14:03:26] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:05:27] <tusko> Can a thread refer to variables from the scope of the calling function?
[14:05:38] <tusko> or would it have to be passed as an argument
[14:07:07] <NRK> i don't think ANY child can access parent's variables.
[14:07:10] <NRK> thread or not.
[14:07:23] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:08:05] *** Joins: mahmutov (~mahmutov@5.176.33.215)
[14:08:17] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[14:09:48] <thomas25> not precisely a C question but here it goes anyway, C11 mentions objects can have different AR (alignment requirements), i.e. int = 4-byte, double = 8-byte. is this because some architectures have special instructions for doubles and those specific instructions require 8-byte AR? (previously i thought an architecture has its self single AR (i.e. 4 bytes for 32-bit architectures) rather than AR being dependent on data type)
[14:10:06] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[14:12:15] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-37-61.pa.qld.optusnet.com.au)
[14:14:12] *** Quits: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr) (Quit: Leaving)
[14:14:30] *** Quits: kurahaupo (~kurahaupo@pa49-182-78-217.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[14:15:22] *** Joins: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr)
[14:15:34] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:16:41] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[14:17:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:18:10] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:18:17] <dave0> thomas25: yes, some cpu's can only access memory sizes at certain addresses
[14:18:51] <thomas25> most can access anywhere, but requires 2 fetches
[14:18:54] <thomas25> if it's not aligned
[14:19:07] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[14:19:14] <vdamewood> most is not all.
[14:19:32] <dave0> thomas25: sure, but that's missing the point
[14:19:58] <dave0> in theory you could access everything as bytes and use arithmetic to construct larger numbers
[14:20:03] <thomas25> vdamewood which ones doesn't?
[14:20:35] <vdamewood> The only one i can think of is MMIX. I don't have a list of all the specs of every architecture in my head.
[14:21:01] <thomas25> anyway, my initial question is why different data types have different AR, say int vs double. are some architectures have special intrusctions for double that requires 8 byte alignment?
[14:21:11] <dave0> i only know m68k which is obsolete, but you could only access shorts and longs at even addresses
[14:21:16] <vdamewood> With MMIX if you try to load a 4-byte value from n you will,  instead, load it from n mod 4.
[14:21:28] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Ping timeout: 272 seconds)
[14:21:32] <vdamewood> err n - n mod 4, I mean
[14:21:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[14:22:12] <thomas25> vdamewood is there a hardware MCU (not theorical) where you cannot access a non-aligned memory? (i haven't heard of one)
[14:22:38] <dave0> thomas25: x86 generally can use unaligned adresses but there are exceptions such as the SIMD loads/stores
[14:23:28] <vdamewood> thomas25: Like I said, I don't have a list of all the specs of every architecture in my head.
[14:23:29] <dave0> iirc on x86 the xmm0 registers must be aligned at 16 byte addresses
[14:23:41] <dave0> this bit me once
[14:23:44] <thomas25> what is register alignment?
[14:23:57] <dave0> oh i meant loads and stores of that register
[14:24:12] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[14:24:20] <dave0> the SSE registers
[14:24:24] <thomas25> register addresses are usually memory mapped to whatever offset manufacturer deemed necessary
[14:24:56] <thomas25> (i.e. they are aligned out of the box)
[14:25:05] <dave0> mov xmm0,[123]
[14:25:14] <dave0> that will throw a bus error
[14:25:26] <dave0> the address must be a multiple of 16
[14:25:45] <dave0> i dont even know if that's the right mnemonic but yeah there's restrictions even on x86
[14:25:47] <thomas25> oh i see
[14:25:51] *** Joins: Guest16 (~Guest16@110.226.56.122)
[14:26:17] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.71)
[14:26:36] <dave0> i accidentally left the stack pointer unaligned in some assembly i was writing, and i called C code that under the hood did a memcpy, and on freebsd, it uses the SSE registers for memcpy
[14:26:59] <dave0> but netbsd did not use the SSE registers ... so i had a bug that worked on my system, but not on anyone who ran freebsd
[14:27:14] <thomas25> nasty stuff
[14:27:32] <dave0> yeah it took a while to track down, but i learned my lesson
[14:27:51] <thomas25> yeah netbsd should have used SSE for memcpy, what were they thinking!
[14:28:09] <dave0> yep apparently it's faster
[14:28:21] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[14:28:33] <dave0> who knows what glibc uses
[14:28:42] <thomas25> that's why i prefer calling memcpy whenever mem copying is necessary instead of a loop.
[14:30:12] *** Joins: CaCode_ (~CaCode@user/cacode)
[14:30:37] *** Quits: Guest16 (~Guest16@110.226.56.122) (Ping timeout: 256 seconds)
[14:30:49] <dave0> i don't know if ARM requires aligned loads and stores, i think they might have in the past, but they relaxed it in newer versions
[14:31:00] <dave0> does RISCV require aligned loads and stores??
[14:31:02] <thomas25> for cortext-m3 you can use un aligned stuff
[14:31:11] <thomas25> but requires more cycles (as it does two fetches)
[14:31:11] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[14:31:35] <dave0> that might be enough to put people off it
[14:31:52] <thomas25> compilers fix those stuff for free anyway
[14:32:18] *** Joins: strajder (~strajder@user/strajder)
[14:32:21] <thomas25> those stuff can bite your ass if you do assembly
[14:32:26] <dave0> but yeah in real life there can be alignment problems
[14:32:35] *** Joins: Lynix (~raphael@5.253.206.212)
[14:32:53] <thomas25> some engineer (my father) was busthing his head off why the behaviour is different when with very same instructions.
[14:33:11] <thomas25> i noticed with the changes he's making the sub routine was either placed on an aligned location or not
[14:33:30] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.71) (Ping timeout: 272 seconds)
[14:33:31] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 272 seconds)
[14:33:45] <thomas25> non-aligned one took a few more cycles to run, hence the output was different (driving a hardware led stuff where problems are very easily noticable with eye)
[14:34:36] <thomas25> and this was a very very cheap 32-bit mcu, stm32 family iirc
[14:35:20] <dave0> c is supposed to handle alignment for you, but you can go out of your way to force something else if you want
[14:35:46] <dave0> it will hurt portability, if that matters to you
[14:35:55] *** Quits: savolla (~quassel@95.10.200.51) (Remote host closed the connection)
[14:36:28] <dave0> i don't understand why standard c exposed the _Alignof things
[14:36:39] <sham1> Because it's useful
[14:37:01] <dave0> if you say so
[14:37:08] <sham1> Knowing a type's alignment and being able to force alignment in a standard way is good
[14:37:36] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[14:37:47] *** Quits: alch (~alch@151.34.228.54) (Ping timeout: 260 seconds)
[14:38:12] *** Joins: rLapz (~rLapz@user/rLapz)
[14:38:26] *** Quits: rLapz (~rLapz@user/rLapz) (Max SendQ exceeded)
[14:38:45] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.71)
[14:39:05] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.71) (Remote host closed the connection)
[14:39:29] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.71)
[14:39:37] *** Joins: alch (~alch@151.34.243.49)
[14:39:46] *** Quits: Lynix (~raphael@5.253.206.212) (Quit: leaving)
[14:41:03] *** Quits: Rooftop_Joe (~oejrtpj@85.186.15.245) (Quit: Client closed)
[14:41:54] <dave0> google "riscv instruction alignment" says this: The base RISC-V ISA has fixed-length 32-bit instructions that must be naturally aligned on 32-bit boundaries. However, the standard RISC-V ...
[14:42:14] <dave0> so there's an element of aligning there
[14:42:20] <dave0> but data, i dunno
[14:44:16] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.71) (Ping timeout: 272 seconds)
[14:45:32] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Ping timeout: 272 seconds)
[14:45:51] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.73)
[14:51:06] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:51:30] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[14:51:37] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:53:30] <Ali_A> having data being aligned also helps with cache for that matters so data alignment is also good (but as far as I know that doesn't matter a lot for modern CPU)
[14:54:13] <supakeen> * doesn't matter a lot for x86 at least
[14:55:03] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.73) (Ping timeout: 260 seconds)
[14:55:35] <supakeen> CPU does what CPU wants pretty much
[14:56:36] <dave0> i'd imagine crossing a cache line would be expensive
[14:57:16] <dave0> maybe not, i think i'm thinking of page faults
[14:57:25] <supakeen> Nah, that'd be more expensive indeed.
[14:57:43] <supakeen> But Intel put a lot of work in making unaligned reads 'free'.
[14:57:52] *** Parts: mxbl (~mxbl@ip5f5abffd.dynamic.kabel-deutschland.de) (WeeChat 3.4)
[15:00:12] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[15:04:35] *** Quits: mahmutov (~mahmutov@5.176.33.215) (Ping timeout: 252 seconds)
[15:05:08] *** Joins: IC (~IC@2a01:586:90f8:1:3827:f4d0:80c9:2bab)
[15:05:45] <IC> Why does the following program not stop blocking when I resize my terminal window and SIGWINCH is caught? https://paste.gg/p/anonymous/8b7bff9087e14f548a7f2b443ad78d66/files/824e7062b1084caa8e94902affc03caa/raw
[15:05:55] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.119)
[15:05:58] <IC> I'm on Linux
[15:06:14] <thomas25> dave0 i'm also surprised that alignment being a part of C
[15:06:35] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[15:06:45] <thomas25> and yes, you can suppress alignment with platform specific constructs (useful for packing structs)
[15:07:11] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[15:08:08] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[15:09:25] <IC> I mean look this is what the man https://linux.die.net/man/2/poll says: ppoll() allows an application to safely wait until either a file descriptor becomes ready or until a signal is caught.
[15:09:29] <IC> so why does it not work?
[15:12:03] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.119) (Remote host closed the connection)
[15:12:13] *** Joins: reset (~reset@user/reset)
[15:13:37] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Ping timeout: 240 seconds)
[15:14:17] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[15:16:49] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.119)
[15:16:57] <dave0> IC: does it help if you set up a signal handler for SIGWINCH with sigaction() ?
[15:17:29] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.119) (Remote host closed the connection)
[15:17:39] <dave0> before you ppoll
[15:18:08] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.119)
[15:19:03] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:19:47] *** Joins: hiroshi_ (~freedom@151.37.247.106)
[15:21:20] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[15:21:38] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[15:22:01] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[15:22:12] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[15:22:31] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[15:22:58] *** Joins: eotdlt^ (~eotdlt@96-91-136-49-static.hfc.comcastbusiness.net)
[15:23:08] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[15:26:08] *** Quits: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr) (Quit: Leaving)
[15:26:44] *** Joins: CaCode- (~CaCode@user/cacode)
[15:29:35] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 260 seconds)
[15:30:02] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.119) (Remote host closed the connection)
[15:30:25] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:50] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.119)
[15:31:14] *** Joins: csrf (~csrf@user/csrf)
[15:33:47] *** Joins: rLapz (~rLapz@user/rLapz)
[15:34:15] *** Quits: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[15:34:38] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[15:35:25] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[15:35:29] *** Quits: hiroshi_ (~freedom@151.37.247.106) (Quit: hiroshi_)
[15:37:29] <IC> I'll try
[15:38:32] *** Joins: SR-71 (~user@user/SR-71)
[15:40:34] *** Joins: whoopwhoop (~malina@user/malina)
[15:41:58] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Read error: Connection reset by peer)
[15:42:04] *** Joins: gako (~merrinx@ti0028a400-3686.bb.online.no)
[15:43:37] *** Quits: mali (~malina@user/malina) (Ping timeout: 240 seconds)
[15:44:18] <IC> dave0: I'm trying that and the ppoll seems to block the signal from being handled. I put `exit` in the handler and it doesn't exit or execute the handler until `ppoll` is done
[15:44:58] *** Joins: ztx (~ztx@user/ztx)
[15:44:59] <dave0> hmm
[15:45:02] <dave0> i'll man ppoll
[15:46:40] <IC> dave0: actually, that was because I passed SIGWINCH in the sigset to ppoll
[15:46:53] <IC> to its sig mask argument, which actually tells ppoll to block on any such signal
[15:47:00] <IC> so I think I figured it out
[15:47:06] <dave0> ahh ok
[15:47:28] <IC> so far it seems to be working but I'll come back if something isn't working. thanks for the help!
[15:48:48] <dave0> okay cool
[15:48:56] *** p0g0__ is now known as p0g0
[15:49:05] <dave0> i had to chase a few pointers to find sigprocmask :-)
[15:51:25] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[15:52:53] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:53:33] *** Joins: kurahaupo (~kurahaupo@pa49-182-133-2.pa.qld.optusnet.com.au)
[15:54:47] *** Quits: whoopwhoop (~malina@user/malina) (Ping timeout: 260 seconds)
[15:57:07] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-37-61.pa.qld.optusnet.com.au) (Ping timeout: 260 seconds)
[15:58:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:01:44] *** Joins: Rounin (~david@84.212.130.215)
[16:04:42] *** Quits: yggdrasil (~yggdrasil@75-161-29-16.albq.qwest.net) (Ping timeout: 272 seconds)
[16:05:09] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[16:05:33] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[16:05:43] *** Joins: yggdrasil (~yggdrasil@67-0-74-166.albq.qwest.net)
[16:06:38] *** Joins: random-nick (~random-ni@87.116.176.196)
[16:08:30] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.119) (Ping timeout: 272 seconds)
[16:09:33] *** Quits: Epithium (~Epithium@2603-6080-3203-8d68-565d-9a3f-5480-e6eb.res6.spectrum.com) (Ping timeout: 256 seconds)
[16:11:49] *** Joins: Guest16 (~Guest16@2409:4051:2e0b:3cbb:e4e0:126e:92ae:4d5)
[16:13:04] *** Joins: VoidSync (~sync@user/voidsync)
[16:13:33] *** Quits: baloona (~baloona@mail.baloona.de) (Quit: WeeChat 3.0)
[16:18:33] *** Joins: shivesh (~shivesh@user/shivesh)
[16:21:33] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[16:21:48] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Remote host closed the connection)
[16:23:18] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[16:25:13] *** Quits: Guest16 (~Guest16@2409:4051:2e0b:3cbb:e4e0:126e:92ae:4d5) (Quit: Client closed)
[16:27:47] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[16:27:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:30:39] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[16:30:41] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[16:31:00] *** Joins: baloona (~baloona@mail.baloona.de)
[16:31:02] *** Joins: Epithium (~Epithium@2603-6080-3203-8d68-4932-20ff-4408-5cd1.res6.spectrum.com)
[16:32:13] *** Quits: Epithium (~Epithium@2603-6080-3203-8d68-4932-20ff-4408-5cd1.res6.spectrum.com) (Remote host closed the connection)
[16:32:44] *** Joins: seninha (~seninha@user/seninha)
[16:35:00] *** Joins: Epithium (~Epithium@2603-6080-3203-8d68-a9fe-010b-1d2d-81ea.res6.spectrum.com)
[16:35:08] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[16:36:14] *** Joins: shivesh (~shivesh@user/shivesh)
[16:38:32] *** Joins: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr)
[16:39:04] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:39:50] *** Joins: LuKaRo (~LuKaRo@p200300dfa732173cc4814602d73ef0b9.dip0.t-ipconnect.de)
[16:41:22] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[16:42:39] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[16:43:03] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[16:43:26] *** Joins: plastico (~plastico@neomutt/plastico)
[16:43:53] *** Quits: baloona (~baloona@mail.baloona.de) (Quit: WeeChat 3.0)
[16:44:26] *** Joins: baloona (~baloona@mail.baloona.de)
[16:45:20] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Client closed)
[16:45:48] *** Quits: parrott (~parrott@158.59.127.103) (Ping timeout: 252 seconds)
[16:46:07] *** Joins: lainon (~lainon@2601:7c0:c500:4d20:d806:4ef4:c513:59ce)
[16:46:36] *** Joins: parrott (~parrott@2607:fb90:1772:1f51:0:55:6796:c001)
[16:50:03] *** Quits: lainon (~lainon@2601:7c0:c500:4d20:d806:4ef4:c513:59ce) (Remote host closed the connection)
[16:51:56] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[16:53:37] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[16:53:48] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[16:55:22] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 272 seconds)
[16:56:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:59:59] *** Joins: cart_ (~cart@cpc99926-brnt1-2-0-cust961.4-2.cable.virginm.net)
[17:00:03] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:00:08] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:01:03] *** Quits: zer0x (~zer0x@1.55.210.186) (Ping timeout: 260 seconds)
[17:01:17] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 240 seconds)
[17:02:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[17:03:01] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:05:15] *** Quits: IC (~IC@2a01:586:90f8:1:3827:f4d0:80c9:2bab) (Remote host closed the connection)
[17:06:03] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[17:06:46] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[17:07:35] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[17:08:40] *** Joins: tusko (~yeurt@user/tusko)
[17:10:04] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[17:11:52] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[17:15:31] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 260 seconds)
[17:18:34] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[17:20:33] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:22:36] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[17:23:23] *** Joins: CATS (apic@brezn3.muc.ccc.de)
[17:24:05] *** Joins: gnoo (~gnoo@user/gnoo)
[17:25:16] *** Joins: CaCode_ (~CaCode@user/cacode)
[17:25:23] *** Quits: CaCode_ (~CaCode@user/cacode) (Remote host closed the connection)
[17:27:11] *** Quits: adip (~adip@dii229.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[17:28:07] *** Quits: CaCode- (~CaCode@user/cacode) (Ping timeout: 260 seconds)
[17:29:33] *** Joins: zer0x (~zer0x@1.55.210.186)
[17:30:02] *** Joins: magla (~gelignite@d536552c.access.ecotel.net)
[17:31:09] *** Quits: zer0x (~zer0x@1.55.210.186) (Read error: Connection reset by peer)
[17:31:27] *** Joins: zer0x (~zer0x@1.55.210.186)
[17:31:44] *** Joins: Torr (~Torr@user/torr)
[17:31:57] *** Joins: adip (~adip@dii229.neoplus.adsl.tpnet.pl)
[17:32:12] *** Quits: Torr (~Torr@user/torr) (Client Quit)
[17:32:25] *** Joins: Torr (~Torr@user/torr)
[17:35:15] *** Joins: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru)
[17:45:54] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[17:46:10] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:47:13] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[17:49:36] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: See you later)
[17:52:30] *** Quits: parrott (~parrott@2607:fb90:1772:1f51:0:55:6796:c001) (Read error: Connection reset by peer)
[17:55:12] *** Joins: parrott (~parrott@2607:fb90:1772:1f51:0:55:6796:c001)
[17:55:14] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:57:37] *** Quits: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[18:01:57] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:02:25] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[18:05:09] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 256 seconds)
[18:05:27] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 260 seconds)
[18:05:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:05:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[18:06:57] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Ping timeout: 240 seconds)
[18:09:13] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:12:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:12:54] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:13:08] *** Joins: cdman (~dcm@27.2.216.148)
[18:13:08] *** Quits: cdman (~dcm@27.2.216.148) (Changing host)
[18:13:08] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[18:13:53] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:18:21] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[18:18:50] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[18:22:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:23:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:29:55] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[18:30:02] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[18:30:16] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:30:28] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[18:30:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:31:06] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:34:03] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:34:16] *** Quits: ztx (~ztx@user/ztx) (Quit: WeeChat 3.4.1)
[18:34:41] *** Joins: trafficjam (~trafficja@2001:8003:d917:3200:2316:efb9:dbb9:3b1)
[18:36:03] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[18:38:15] *** Quits: alch (~alch@151.34.243.49) (Ping timeout: 256 seconds)
[18:40:04] *** Joins: alch (~alch@151.34.230.160)
[18:43:47] *** Quits: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[18:47:19] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[18:51:06] *** Joins: mahmutov (~mahmutov@5.176.33.215)
[18:51:33] *** Quits: Optimus (~risto@87.227.227.147) ()
[18:53:55] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[18:55:04] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[18:55:24] *** Quits: aerysh (~aerysh@94.198.43.93) (Quit: Leaving)
[18:55:39] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[18:56:16] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[18:56:33] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[18:58:55] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[19:00:46] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[19:01:29] *** Quits: findingnemoeggfr (~findingne@h31-8-255-214.dyn.bashtel.ru) (Ping timeout: 256 seconds)
[19:01:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:04:34] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[19:04:49] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[19:10:19] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:11:03] *** Joins: Jeegh (~brute@176.33.66.185)
[19:13:06] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[19:15:56] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[19:23:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:23:07] *** mcleuder_ is now known as mcleuder
[19:23:55] *** Joins: pulse (~pulse@user/pulse)
[19:25:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:28:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[19:28:46] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[19:30:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:31:35] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[19:34:06] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[19:34:58] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Changing host)
[19:34:58] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[19:43:37] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[19:43:39] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[19:51:39] *** Joins: gnoo (~gnoo@user/gnoo)
[19:53:07] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Read error: Connection reset by peer)
[19:54:52] *** Quits: gnoo (~gnoo@user/gnoo) (Client Quit)
[19:59:24] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[20:01:35] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.56) (Quit: Leaving)
[20:03:13] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[20:06:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[20:08:19] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[20:08:21] *** Quits: seifeslimene (~seifeslim@102.156.124.6) (Ping timeout: 256 seconds)
[20:11:04] *** Quits: zer0x (~zer0x@1.55.210.186) (Ping timeout: 272 seconds)
[20:12:25] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[20:16:03] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[20:16:03] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[20:16:27] *** Joins: korg815 (~korg815@user/korg815)
[20:23:21] *** Joins: drbeco (~beco@user/beco)
[20:24:11] *** Quits: magla (~gelignite@d536552c.access.ecotel.net) (Quit: Stay safe!)
[20:25:54] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Remote host closed the connection)
[20:26:13] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[20:26:14] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:27:13] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[20:30:24] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (Quit: You have been kicked for being idle)
[20:31:30] *** Joins: eldritch_ (~eldritch@user/eldritch)
[20:33:05] *** Joins: glider (~glider@user/glider)
[20:33:24] *** Quits: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a) (Remote host closed the connection)
[20:35:25] *** Joins: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a)
[20:36:19] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[20:37:09] *** Quits: trafficjam (~trafficja@2001:8003:d917:3200:2316:efb9:dbb9:3b1) (Quit: Client closed)
[20:38:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:38:49] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Quit: See you on the other side)
[20:39:50] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[20:41:00] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-39.cspire.com)
[20:42:46] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ac1c:8bb9:856a:4ec3) (Read error: Connection reset by peer)
[20:44:32] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:47d9:bec6:8f1e:d892)
[20:45:59] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Ping timeout: 260 seconds)
[20:50:58] *** Joins: gnoo (gnoo@user/gnoo)
[20:52:15] *** Joins: nostar (~nostar@45.14.195.196)
[20:52:20] *** Quits: nostar (~nostar@45.14.195.196) (Remote host closed the connection)
[20:52:35] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[20:52:41] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[20:53:13] *** Quits: xbkkd (~F0@user/xbkkd) (Remote host closed the connection)
[20:54:21] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[20:54:37] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[20:55:18] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:58:11] *** Joins: zacts (~zacts@user/zacts)
[21:00:57] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:01:13] *** Joins: Teacup (~teacup@user/teacup)
[21:04:20] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[21:06:37] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[21:07:47] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:09:02] *** Joins: ztx (~ztx@user/ztx)
[21:09:06] *** Quits: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr) (Quit: Leaving)
[21:09:21] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[21:11:14] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 272 seconds)
[21:14:50] *** Quits: aliosablack (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe) (Quit: Leaving)
[21:16:53] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-39.cspire.com) (Read error: Connection reset by peer)
[21:19:50] *** Quits: Inline (~Inline@p200300cd473c9e009f1d7d6dc4a648e3.dip0.t-ipconnect.de) (Quit: Leaving)
[21:20:52] *** Joins: Inline (~Inline@p200300cd473c9e009f1d7d6dc4a648e3.dip0.t-ipconnect.de)
[21:23:55] *** Joins: jemius (~jemius@p200300d9673cec007aa1a268117cc0aa.dip0.t-ipconnect.de)
[21:25:10] <jemius> Hola! Any reading tip how to get access to a microphone on linux? Say, I want to get the raw samples i.e. as 16 bit integers. I guess I'll have to dig into pulse audio or pipewire to do so?
[21:26:28] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[21:27:03] <twkm> or oss or alsa or jack or ...
[21:27:25] *** Joins: badsektor (~badsektor@user/badsektor)
[21:30:22] <Rounin> Or just SDL
[21:30:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[21:32:13] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[21:33:44] <pragma-> just use libmicrophone
[21:33:46] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[21:34:00] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[21:40:41] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[21:40:48] <RETRO> does c have un-named unions
[21:41:04] <RETRO> c99 or higher
[21:41:05] <RETRO> ?
[21:41:18] *** Quits: Jeegh (~brute@176.33.66.185) (Quit: Leaving)
[21:41:24] <RETRO> twkm
[21:41:49] <pragma-> Are you seriously going to ping the whole channel instead of just opening up the freely available C specification?
[21:42:21] <RETRO> im just busy making a github
[21:42:24] <RETRO> ok ill google it
[21:44:40] <pragma-> (anonymous structs and unions were added in C11)
[21:44:58] <pragma-> (various compilers may have already supported these as extensions)
[21:45:01] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[21:45:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:45:50] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[21:46:16] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[21:48:01] <NRK> makin a github??
[21:48:03] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 260 seconds)
[21:50:56] <RETRO> k thx
[21:51:07] <pragma-> Terminology these days.
[21:53:04] *** Parts: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[21:54:07] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 260 seconds)
[21:54:29] *** Quits: pulse (~pulse@user/pulse) (Quit: take off every zig)
[21:54:33] *** Quits: Teacup (~teacup@user/teacup) (Remote host closed the connection)
[21:54:48] *** Joins: Teacup (~teacup@user/teacup)
[21:56:55] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[21:57:03] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:3519:2914:9e94:3775)
[21:57:22] *** Joins: pulse (~pulse@user/pulse)
[21:58:47] <twkm> sounds like a vast endeavor.
[22:00:11] *** Quits: eotdlt^ (~eotdlt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[22:01:30] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:3519:2914:9e94:3775) (Ping timeout: 252 seconds)
[22:03:14] *** Joins: oriba (~oriba@dynamic-077-013-007-140.77.13.pool.telefonica.de)
[22:05:27] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.153)
[22:07:33] *** Quits: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com) (Ping timeout: 252 seconds)
[22:09:23] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[22:12:16] *** Joins: zacts (~zacts@user/zacts)
[22:14:21] *** Joins: tusko (~yeurt@user/tusko)
[22:16:17] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[22:16:19] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:47d9:bec6:8f1e:d892) (Ping timeout: 250 seconds)
[22:17:02] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:17:39] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:19:06] *** Joins: chomwitt (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe)
[22:20:41] <badsektor> i reached 169 stars on advent of code!
[22:21:08] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:548d:20ce:302b:db7e)
[22:21:08] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:548d:20ce:302b:db7e) (Changing host)
[22:21:08] *** Joins: skapata (~Skapata@user/skapata)
[22:22:10] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:23:12] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[22:25:37] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:978f:355e:b1a8:8e5b)
[22:27:41] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:978f:355e:b1a8:8e5b) (Remote host closed the connection)
[22:30:27] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ad23:c826:4cb:8c28)
[22:33:58] *** Quits: gako (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:34:55] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[22:36:47] *** Joins: korg815 (~korg815@user/korg815)
[22:38:14] *** Quits: alch (~alch@151.34.230.160) (Read error: Connection reset by peer)
[22:39:30] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[22:40:24] *** Joins: alch (~alch@151.38.242.169)
[22:40:29] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ad23:c826:4cb:8c28) (Remote host closed the connection)
[22:41:07] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ad23:c826:4cb:8c28)
[22:42:26] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Read error: Connection reset by peer)
[22:47:03] *** Joins: Torr (~Torr@user/torr)
[22:47:22] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:ad23:c826:4cb:8c28) (Remote host closed the connection)
[22:49:15] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:49:54] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:50:21] *** Quits: jemius (~jemius@p200300d9673cec007aa1a268117cc0aa.dip0.t-ipconnect.de) (Quit: Leaving)
[22:50:29] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:fa12:de3f:d5c4:1da)
[22:50:45] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:fa12:de3f:d5c4:1da) (Remote host closed the connection)
[22:52:12] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[22:52:47] *** Joins: cebor (~cebor@user/cebor)
[22:53:09] *** Quits: cebor (~cebor@user/cebor) (Remote host closed the connection)
[22:53:23] *** Quits: fe23 (~fe23@2409:8a34:466:6010:3457:23f:a961:8b) (Quit: fe23)
[22:53:26] *** Joins: strajder (~strajder@user/strajder)
[22:53:29] *** Joins: cebor (~cebor@user/cebor)
[22:53:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[22:53:50] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.56) (Ping timeout: 272 seconds)
[22:55:02] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[22:55:30] *** Quits: Teacup (~teacup@user/teacup) (Remote host closed the connection)
[22:57:48] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[22:58:59] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.153) (Ping timeout: 260 seconds)
[23:00:20] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[23:01:04] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[23:01:22] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[23:01:23] *** Joins: Klinda (~superleag@user/klinda)
[23:01:43] *** Joins: eotdsea^ (~eotdsea@96-91-136-49-static.hfc.comcastbusiness.net)
[23:01:47] *** Joins: cebor (~cebor@user/cebor)
[23:02:47] *** Joins: Teacup (~teacup@user/teacup)
[23:03:04] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[23:04:32] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[23:04:47] *** Joins: rgrinberg (~textual@2806:102e:18:79a2:b869:a1d7:8a8:5006)
[23:04:52] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[23:05:03] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 260 seconds)
[23:05:09] *** Quits: jack_rabbit (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 256 seconds)
[23:08:24] *** Joins: jack_rabbit (~knusbaum@89.187.180.40)
[23:10:08] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 268 seconds)
[23:10:13] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:12:03] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[23:14:44] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[23:16:33] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[23:18:29] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[23:18:42] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.205)
[23:19:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:19:54] *** Joins: magla (~gelignite@d536552c.access.ecotel.net)
[23:20:22] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:23:27] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:23:27] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[23:24:05] *** Joins: justOkay (~justache@user/justache)
[23:24:12] *** Joins: z4r4 (~z4r4@89.36.78.228)
[23:27:13] <z4r4> Is using a goto for resetting the state of a function and try again a bad practice? I have a function that gets user input (in real time, by reading the pressed keys) and the input must match a pattern, if it doesn't then I want the user to try again. What  I'm doing is jumping back to the beginning of the function before all the variables are initialized, is this a bad practice?
[23:28:14] <NRK> if it wurks, it wurks!
[23:29:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:28ab:8424:21f0:4e41)
[23:29:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:28ab:8424:21f0:4e41) (Changing host)
[23:29:00] *** Joins: skapata (~Skapata@user/skapata)
[23:29:15] <tusko> Man I have got an issue, its so simple but yet I don't understand it.
[23:29:23] <z4r4> I'm afraid this design might result in bugs later on when the program grows bigger
[23:30:40] <NRK> you can use a `while (input_invalid) { .. }` and deeply indent your code then
[23:30:52] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[23:31:27] <z4r4> Maybe a better idea is to return from the function with a return value indicating that the user failed and then the function is called again? This way any modification to the global state and the data structures passed as argument can be done by the caller (these modifications aren't needed now, but they might in the future)
[23:31:32] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:11] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[23:32:13] *** Quits: soapsudsxx_ (~soapsudsx@141.193.188.145) (Remote host closed the connection)
[23:32:27] *** Joins: tusko (~yeurt@user/tusko)
[23:33:43] <owensjrw> Good afternoon everyone.. What have I done wrong? The output is always -1. The text file has a list of numbers some increase some decrease ie 3, 4, 5, 3, 2, 5 etc I only want to know if it increases form the previous. Each number in the file is on a new line.
[23:33:48] <owensjrw> https://pastebin.com/DNgjQ5Lz
[23:36:06] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:36:14] <tusko> Is there a pastebin where my code can be run?
[23:37:40] *** Joins: Akuli (~Akuli@87-94-108-152.bb.dnainternet.fi)
[23:37:44] <owensjrw> @tusko not pastebin but it works https://www.onlinegdb.com/online_c_compiler
[23:38:09] <tusko> We'll see about thata
[23:38:46] <shiroyasha> owensjrw: Don't ignore the return value of `getline`.
[23:39:10] <z4r4> owensjrw: your loop is while(!EOF), which is always false
[23:39:21] <z4r4> EOF is a constant
[23:39:29] <owensjrw> The return value is only the number of chars minus the terminating isn't it?
[23:40:33] <z4r4> Yes
[23:40:35] <owensjrw> Soooooo while(fp != EOF) ????
[23:40:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:41:30] <z4r4> while (getline(&line, &len, stream) != -1)
[23:41:59] <z4r4> getline returns -1 on failure to read a line (including end-of-file condition)
[23:42:07] <owensjrw> because EOF would return -1?
[23:42:37] <owensjrw> Or because getline's error for no chars is -1
[23:42:53] <z4r4> I think EOF is a macro and its value is implementation defined
[23:43:08] <owensjrw> Awesome let me go work on that. Thank you both.
[23:44:24] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[23:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:46:58] <tusko> Ok, here's an example and driver program https://onlinegdb.com/NcMQjlszb
[23:47:36] <shiroyasha> tusko: s/liberia/libera/, probably.
[23:47:44] <tusko> I'm not sure why but I really struggle with this kind of thing, i.e. reading and writing char* s
[23:48:37] <Inline> use char *s then
[23:49:31] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:49:49] <Inline> s would be the pointer and *s would be the value
[23:50:05] <tusko> nah, I mean passing them around. reading them and writing them
[23:50:15] <tusko> I understand the * operator is not bound to anything :)
[23:50:22] <tusko> a free spirit
[23:50:37] <Inline> char* s == char * s == char *s, C doesn't care
[23:51:00] <tusko> The code I shared tries to write a char* to a buffer and then read it back. Problem is, I'm not reading it back.
[23:51:10] <fossforus> (char *s = something) is the same as (char *s; s = something)
[23:51:19] <fossforus> this was one thing that confused me personally when I was learning pointers
[23:51:29] <fossforus> declaration has different rules post-declaration
[23:51:38] <twkm> close to, not quite the same in all circumstances.
[23:52:19] <Inline> s = something ?
[23:52:27] <Inline> or s = &something ?
[23:54:27] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[23:54:40] <fossforus> if something was declared type *something, then you'd be performing an incompatible conversion with s = &something
[23:55:25] <Inline> why ?
[23:56:23] <fossforus> assigning pointer to pointer to a pointer to char?
[23:56:59] <fossforus> (other way around)
[23:57:29] <tusko> At first I was passing pointers, and it worked, but I have a feeling that won't still work when its multithreaded and the data goes out of scope
[23:57:39] <Inline> it's just pointing to some address
[23:59:57] *** Quits: rgrinberg (~textual@2806:102e:18:79a2:b869:a1d7:8a8:5006) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:59:58] <fossforus> tusko: scope != duration
