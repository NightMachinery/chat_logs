[00:04:38] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:15:26] *** Quits: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[00:22:12] *** Joins: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com)
[00:28:14] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 255 seconds)
[00:51:18] *** Quits: dutchie (~dutchie@user/dutchie) (Quit: ZNC - 1.6.0 - http://znc.in)
[00:52:12] *** Joins: danieli2 (~danieli@user/danieli)
[00:52:43] *** Quits: danieli (~danieli@user/danieli) (Killed (NickServ (GHOST command used by danieli2)))
[00:52:46] *** Parts: hoppity (~user@user/hoppity) (ERC (IRC client for Emacs 26.3))
[00:52:47] *** danieli2 is now known as danieli
[00:53:41] *** Joins: dutchie (~dutchie@user/dutchie)
[00:54:23] *** Quits: slothby (~JoshAshby@irc.isin.space) (Ping timeout: 268 seconds)
[00:55:20] *** Joins: slothby (~JoshAshby@irc.isin.space)
[00:56:21] *** Joins: mrlix92 (~mrlix@user/mrlix)
[01:00:16] *** Quits: mrlix (~mrlix@user/mrlix) (Ping timeout: 246 seconds)
[01:02:33] *** Quits: amk (~amk@176.61.106.150) (Remote host closed the connection)
[01:03:15] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:04:00] *** Joins: amk (~amk@176.61.106.150)
[01:06:06] *** Quits: jushur (~human@user/jushur) (Quit:  ¯\_(ツ)_/¯)
[01:08:02] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[01:08:44] *** Quits: amk (~amk@176.61.106.150) (Ping timeout: 255 seconds)
[01:09:25] *** Joins: amk (~amk@176.61.106.150)
[01:12:26] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 252 seconds)
[01:20:43] *** Joins: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[01:21:13] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:31:41] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:f438:5f31:7a5c:74c3) (Ping timeout: 255 seconds)
[01:40:59] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[01:41:02] *** Quits: amk (~amk@176.61.106.150) (Ping timeout: 252 seconds)
[01:41:37] *** Quits: mrlix92 (~mrlix@user/mrlix) (Quit: Client closed)
[01:44:48] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:47:25] *** Quits: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 268 seconds)
[01:49:41] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[01:50:16] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:a:13dd:7c09:9436)
[01:57:12] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f)
[02:01:21] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:01:29] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[02:02:42] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f) (Ping timeout: 240 seconds)
[02:03:44] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f)
[02:06:15] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 276 seconds)
[02:07:07] *** Joins: amk (~amk@176.61.106.150)
[02:07:26] *** Joins: humberto1 (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb)
[02:09:56] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f) (Ping timeout: 255 seconds)
[02:13:06] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:14:07] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[02:14:48] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 272 seconds)
[02:21:39] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[02:24:23] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[02:26:39] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Quit: Konversation terminated!)
[02:27:27] *** Quits: jstoker (~jstoker@user/jstoker) (Remote host closed the connection)
[02:28:30] *** Joins: jstoker (~jstoker@user/jstoker)
[02:32:32] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:36:41] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:41:24] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[02:42:54] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:53:34] *** Quits: mexen (uid495612@user/mexen) ()
[02:55:34] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[03:21:27] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:24:14] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[03:39:24] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[03:42:45] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[03:42:54] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[03:50:15] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[04:08:35] *** Joins: mexen (uid495612@user/mexen)
[04:10:09] *** Joins: [deleted] (~livoreno@user/notzmv)
[04:12:16] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[04:22:27] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:27:15] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[04:30:49] *** Quits: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com) (Remote host closed the connection)
[04:31:12] *** Joins: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com)
[04:55:16] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:02:22] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:02:35] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:02:53] *** Quits: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[05:03:51] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[05:05:22] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[05:10:35] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:22:12] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[05:55:33] *** humberto1 is now known as humbertowoody
[05:58:10] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:01:36] <humbertowoody> hi everyone! i'm learning elixir + phoenix for the first time, i've been reading and started following this (https://lobotuerto.com/blog/building-a-json-api-in-elixir-with-phoenix/) tutorial. However, when I get to the part of adding the bcrypt_elixir step to the mix.exs file and run mix deps.get and mix deps.compile I get an error saying ""An error occurred when loading Bcrypt.\nMake sure you have
[06:01:39] <humbertowoody> a C compiler and Erlang 20 installed.\nIf you are not using Erlang 20, either upgrade to Erlang 20 or\nuse version 0.12 of bcrypt_elixir.\nSee the Comeonin wiki for more information.\n". I'm using an Macbook Air with the M1 so i'm familiar with compilation errors but haven't found anything helpful so far, does anyone has an idea how can i debug to get a more specific error? I am sure I have gcc,
[06:01:41] <humbertowoody> elixir/erlang latest versions (via homebrew) and is the latest version of bcrypt_elixir ("~> 2.0"). Thanks in advance! 
[06:02:57] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[06:07:50] <rawtaz> i cant help with that im afraid. others in here might be able to, if not, consider posting in the elixir forum - thats probably the most safe bet to get an answer :o
[06:07:59] <rawtaz> im off, bai
[06:08:03] * rawtaz &
[06:13:59] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[06:31:52] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[06:32:03] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb) (Quit: WeeChat 3.2)
[06:32:11] *** Joins: livoreno (~livoreno@user/notzmv)
[06:32:29] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb)
[06:34:28] *** Joins: Guest51 (~Guest51@2806:107e:f:6403:480e:71d6:7818:81bb)
[06:36:45] *** Quits: Guest51 (~Guest51@2806:107e:f:6403:480e:71d6:7818:81bb) (Client Quit)
[06:58:58] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[07:03:30] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:05:44] *** Joins: jushur (~human@user/jushur)
[08:19:45] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[08:32:03] <humbertowoody> hey! just so anyone knows, i fixed the issue! honestly, don't have any specific clue as to what was going wrong, i deleted "_build" and "deps" directories, prepended _every_ `mix` command with `arch -arm64` and it worked, it seems that something was running with rosetta under the hood, anyway, thanks!
[09:10:15] <dzfranklin> Has there been any attempt at record/replay debugging for BEAM? At first it seems like one would just need to record all messages and play them back, but I guess NIFs would be more complicated. 
[09:10:43] <dzfranklin> I think it would be very handy to be able to step through code without other things timing out
[09:15:49] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:16:37] *** Joins: Sgeo (~Sgeo@user/sgeo)
[09:17:44] *** Joins: rhn (~rhn@user/rhn)
[09:21:07] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 265 seconds)
[09:30:07] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 245 seconds)
[09:40:34] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:42:04] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:42:43] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:52:35] <serafeim> hello friends
[10:47:09] *** Joins: phaleth (~phaleth@user/phaleth)
[10:50:29] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:05:41] *** Joins: wowi42 (~wowi42@5.30.23.58)
[11:06:00] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 265 seconds)
[11:31:04] <carloratm> Hi all, is anyone interested in mentoring me (pairprogramming maybe?) with a Phoenix project? I know the basics of Elixir and got a background in web development 
[11:35:24] *** Joins: chgr (~ek@nat-91-137-26-20.net.encoline.de)
[12:06:15] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:30:04] *** Joins: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net)
[12:48:15] <phaleth> carloratm: hi, I can try to help, just be aware that I've been into Elixir, Phoenix and Liveview for only almost 2 months now
[12:48:48] <phaleth> this place seems to be fairly active, so if you encounter any problem and describe it here you might get an answer
[12:53:16] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb) (Quit: WeeChat 3.2)
[13:03:43] *** Joins: natrys (~natrys@user/natrys)
[13:10:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[13:38:10] *** Joins: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[13:44:28] *** Joins: jess (~jess@libera/staff/jess)
[13:57:21] *** Joins: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[13:59:15] *** Quits: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 252 seconds)
[14:34:17] *** Quits: hmans (~hmans@user/hmans) (Quit: The Lounge - https://thelounge.chat)
[14:37:02] *** Joins: hmans (~hmans@user/hmans)
[15:13:39] *** Joins: mrlix (~mrlix@user/mrlix)
[15:43:41] *** Quits: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4) (Quit: You have been idle for 30+ days)
[16:22:12] *** Quits: chgr (~ek@nat-91-137-26-20.net.encoline.de) (Quit: WeeChat 3.2)
[16:27:35] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[16:30:36] *** Joins: mrlix10 (~mrlix@user/mrlix)
[16:33:43] *** Quits: mrlix (~mrlix@user/mrlix) (Ping timeout: 246 seconds)
[16:56:08] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:08:30] *** Joins: amacgregor__ (~amacgrego@dhcp-198-2-103-168.cable.user.start.ca)
[17:11:12] *** Quits: amacgregor_ (~amacgrego@96.45.198.246) (Ping timeout: 252 seconds)
[17:39:54] <hauleth> josevalim: I am wondering - is there any way to safely extract field names from the `Ecto.Query`? Or to make sure that the generated query will have fields named as I want them?
[17:41:32] <hauleth> My goal is that I want to create lib, that would provide helper functions for working with PostgreSQL views, and it seems problematic that I need to resolve to hack like that http://ix.io/3uje to be sure about field names
[17:42:03] <hauleth> The `named` macro is the thing
[17:52:26] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[18:05:25] *** Quits: mrlix10 (~mrlix@user/mrlix) (Ping timeout: 246 seconds)
[18:16:55] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:24:36] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:26:54] <azazel> hauleth: have you had a look at the query struct? 
[18:27:54] *** Quits: wowi42 (~wowi42@5.30.23.58) (Quit: WeeChat 3.2)
[18:29:50] <m1dnight> If I want to use NIFs (I've never done something like it), from an erlang project, in an elixir project, should mix just work? :>
[18:30:03] <m1dnight> I found a bluetooth library, but it's written in erlang, and uses NIFs.
[18:33:33] <hauleth> azazel: yes, but it is all non-public API
[18:34:24] <hauleth> m1dnight: can you link to the lib? If it is using one of the "popular" build systems (Rebar, Rebar3, erlang.mk) then it should work as a dependency
[18:35:14] <hauleth> azazel: aka fields are public, but all are defined as `term()` which mean "you can look at, but it should be meaningless to you"
[18:38:16] *** Quits: Riceberry (~Riceberry@ppp-94-66-136-39.home.otenet.gr) (Quit: Client closed)
[18:40:44] <azazel> hauleth: yes, I understand what you mean
[19:04:52] *** Joins: hoppity (~user@user/hoppity)
[19:05:14] <hoppity> Good morning everyone. Is it possible to seed a production database? if so how?
[19:08:12] <benwilson512> hoppity: it depends
[19:08:39] <benwilson512> mostly it depends on how much data you are trying to seed
[19:09:06] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[19:09:21] <benwilson512> for simple seeds, you can make `.exs` file  in your priv dir and then just Code.eval_file. You can even just copy / paste directly into a remote console
[19:09:39] <benwilson512> seeding production is usually a one time thing so there doesn't need to be a lot of ceremony around iut
[19:10:09] <hoppity> benwilson512: It's all the cities in a country so about 1000 entries. At the moment, I have a function in my seeds.ex that pulls the cities from a CSV and inserts them into the database but I have been doing this by using iex -S mix.
[19:10:21] <benwilson512> ah
[19:10:37] <benwilson512> are you able to get a console in production?
[19:10:47] <hoppity> That's what I don't know :p
[19:11:05] <benwilson512> how have you deployed production?
[19:11:06] <azazel> hoppity: how are you distributing your app?
[19:11:38] <hoppity> I am following the official Phoenix Framework deployment documentation but I just haven't done it yet
[19:11:57] <benwilson512> heh haven't looked at that in ages. I assume it has you build a release?
[19:12:03] <hoppity> correcty
[19:12:05] <azazel> so probably you will use releases
[19:12:09] <hoppity> yes
[19:12:13] <benwilson512> if so, then you just need to `ssh` (or otherwise connect to your server) and then you can run
[19:12:27] <benwilson512> bin/your_app_name remote
[19:12:31] <benwilson512> and voila, remote console
[19:12:32] <azazel> hoppity: https://hexdocs.pm/phoenix/releases.html#ecto-migrations-and-custom-commands
[19:12:39] <benwilson512> azazel: fantastic link thanks
[19:12:53] <benwilson512> another good option ^
[19:13:01] <hoppity> wow. That is easy!
[19:13:03] <hoppity> Thank you both
[19:14:18] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[19:18:42] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[19:19:42] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[19:30:27] *** Joins: duane (~duane@69-148-45-178.lightspeed.nsvltn.sbcglobal.net)
[19:30:47] *** Joins: ryloric (~ryloric@2406:b400:d3::7bab)
[19:48:29] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[19:54:23] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[19:57:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:05:22] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 240 seconds)
[20:05:35] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Remote host closed the connection)
[20:15:32] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[20:17:53] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[20:26:35] *** Joins: mrlix (~mrlix@user/mrlix)
[20:33:30] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 240 seconds)
[20:34:12] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Ping timeout: 258 seconds)
[20:36:37] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[20:43:33] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[20:45:56] <joshproehl> I'm trying to add a single Task as a child of the application supervisor, with a restart :transient policy.  It looks like defining a MyStartupTask module that has "use Task,  restart: :transient" is the way to go. Is there some way to use the {Task, fn -> do_work() end} syntax and make it a transient restart and I'm just not finding it?  (I'm trying to replace the deprecated worker() Supervisor.Spec syntax which  allowed this)
[20:46:35] *** Quits: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net) (Quit: leaving)
[20:56:23] <joshproehl> looks like I may have answered my own question. children = [..., Supervisor.child_spec({Task, fn -> do_work() end}, restart: transient)]   appears to be the way to do it.
[20:56:36] *** Joins: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com)
[21:13:45] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[21:31:20] *** Quits: mrlix (~mrlix@user/mrlix) (Quit: Client closed)
[21:33:45] *** Quits: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com) (Remote host closed the connection)
[21:34:08] *** Joins: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com)
[21:34:47] *** Joins: wowi42 (~wowi42@5.30.23.58)
[21:37:53] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[21:44:02] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:59:41] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 258 seconds)
[22:02:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:03:08] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[22:03:41] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[22:04:42] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:06:11] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:13:00] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 265 seconds)
[22:15:25] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[22:16:22] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:18:07] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:32:51] *** Joins: embik (~embik@user/embik)
[22:37:32] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[22:37:58] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:42:14] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[22:49:46] *** Quits: embik (~embik@user/embik) (Ping timeout: 240 seconds)
[22:50:53] *** Joins: mexen (uid495612@user/mexen)
[23:13:07] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[23:31:27] *** Quits: royo (~royo@user/royo) (Remote host closed the connection)
[23:32:55] *** Quits: jess (~jess@libera/staff/jess) ()
[23:40:41] *** Joins: embik (~embik@user/embik)
[23:47:38] *** Quits: embik (~embik@user/embik) (Quit: WeeChat 3.2)
[23:49:57] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[23:50:58] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:54:54] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
