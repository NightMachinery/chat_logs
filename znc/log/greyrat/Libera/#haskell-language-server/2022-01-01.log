[00:17:51] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[00:55:27] <sooch> Any tips for profiling just a plugin/module rather than the whole executable? I guess I could make a mock exe for just the plugin, but would rather not
[02:37:37] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:43:00] *** Joins: w1gz_ (~do@159.89.11.133)
[02:47:28] *** Quits: juhp (~juhp@128.106.188.82) (*.net *.split)
[02:47:28] *** Quits: x88x88x (~x88x88x@149.28.53.172) (*.net *.split)
[02:47:28] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (*.net *.split)
[02:47:28] *** Quits: adamCS (~adamCS@ec2-34-207-160-255.compute-1.amazonaws.com) (*.net *.split)
[02:47:28] *** Quits: w1gz (~do@159.89.11.133) (*.net *.split)
[02:47:28] *** Quits: maerwald (~maerwald@mail.hasufell.de) (*.net *.split)
[02:47:29] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (*.net *.split)
[02:47:29] *** Quits: jade (~jade@lfcode.ca) (*.net *.split)
[02:47:39] *** Joins: adamCS (~adamCS@ec2-34-207-160-255.compute-1.amazonaws.com)
[02:50:24] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[02:50:24] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[02:50:24] *** Joins: maerwald (~maerwald@mail.hasufell.de)
[02:50:24] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[02:50:24] *** Joins: jade (~jade@lfcode.ca)
[03:30:55] *** Quits: jade (~jade@lfcode.ca) (Quit: meow)
[03:31:20] *** Joins: jade (jade@lfcode.ca)
[05:32:20] *** Quits: jade (jade@lfcode.ca) (Quit: meow)
[05:33:04] *** Joins: jade (jade@lfcode.ca)
[11:46:40] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[12:57:08] <pepeiborra> @sooch disable all other plugins, including ghcide ones, by editing Development.IDE.Main
[13:23:05] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[13:23:37] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:25:46] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Client Quit)
[13:26:14] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[14:15:48] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[14:37:47] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[14:58:47] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[16:26:06] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[17:21:54] <mpickering> sooch: If you're profiling please try realistically sized modules (2-3k lines)
[17:27:18] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[17:27:35] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[19:51:36] <sooch> @mpickering: I'm trying to optimize the traversal for alternateNumberFormat. I'm trying to find out if any of the changes are worth it or not.
[22:11:00] <jneira[m]> we have a possible new contributor willing to implement the selection range lsp feature, any kind of help and advise will be very much appreciated :-) //cc michaelpj pepeiborra 
[22:11:24] <jneira[m]> https://github.com/haskell/haskell-language-server/issues/212#issuecomment-1003598343
[22:11:46] <jneira[m]> michaelpj: i've just seen your comment, thanks
[22:14:41] <michaelpj[m]> combineResponses is a weird function
[22:15:03] <michaelpj[m]> it's also doing some ad-hoc filtering based on client capabilities or even the request params (?) that really seems like it shouldn't be there...
[22:30:17] <pepeiborra> @sooch - or just loop the traversal 1000 times
[22:30:28] <pepeiborra> @jneira - I have replied, thanks for the heads up
[22:41:04] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[22:41:53] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:57:25] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[23:28:41] *** Quits: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[23:32:01] <michaelpj[m]> jneira: do you know if bubba is gone forever or if they might turn up again one day?
[23:33:41] <michaelpj[m]> just wondering if there's anyone around these days who really knows lsp-test
[23:34:18] <jneira[m]> he is watching the ide team twitter account from time to time, but not much activity in github or here
[23:35:34] <jneira[m]> michaelpj[m]: iirc wz1000 work on it for a while 
[23:36:20] <michaelpj[m]> I mean, it seems to work well, I just don't think anyone's thinking about it that much :)
[23:37:17] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:39] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[23:41:23] <wz1000> conduit-parse is pretty unmaintained and leaks memory
[23:41:56] <wz1000> I tried replacing that with parsec once, but parsec also leaked memory at the time
[23:42:00] <wz1000> https://github.com/wz1000/conduit-parse
[23:42:25] <wz1000> https://github.com/haskell/parsec/issues/127
[23:42:58] <wz1000> that was fixed, but I don't think there has been a release yet.
[23:43:34] <wz1000> Honestly we should probably be using something like HMock rather than a parser driver approach
[23:44:30] <wz1000> because often the order of messages isn't that important, but it is hard and fiddly to manage this with parser combinators
[23:44:51] <wz1000> see all the calls we have to ignore log messges and diagnostics in the testsuite
[23:46:12] <jneira[m]> agree, so easy to make it hang :-/ 
[23:46:18] <wz1000> parsing the entire message stream is a lot of unnecessary work when all we usually need is to validate some broader properties
[23:46:33] <wz1000> https://itnext.io/hmock-first-rate-mocks-in-haskell-e59d7c3b066c
[23:46:52] <wz1000> This seems very promising but I haven't tried it out
