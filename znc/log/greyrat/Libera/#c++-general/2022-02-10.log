[00:01:10] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[00:01:10] <imMute> jokoon2: I've not used nlohmann, so IDK.  just what I found googling your question.  one of the comments shows how to iterate an object and get the key as well as the value
[00:05:06] <jokoon2> I have a crash when I do obj["key"]
[00:05:21] <jokoon2> but .count() returns 1
[00:12:18] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:12:46] <jokoon2> Ok so it crashes but I dont understand why it does
[00:12:48] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[00:13:07] <jokoon2> seems like some UB
[00:14:13] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[00:15:00] <MaddHatter> cart_man: ldd does the recursion for you, so you only need to ldd the top-level executable
[00:15:21] <MaddHatter> (it can't recurse the libs it doesn't find obviously, so the list may grow as you add missing dependencies)
[00:15:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:21:33] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[00:22:28] *** Quits: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58) (Ping timeout: 250 seconds)
[00:24:29] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[00:25:37] *** Quits: CalamityBlue (~CalamityB@2603-8000-d907-cec8-28af-d421-0a51-ca91.res6.spectrum.com) (Ping timeout: 240 seconds)
[00:26:23] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[00:29:19] <cart_man> MaddHatter: Ahh I see.
[00:29:28] <cart_man> imMute: thats quite unfortunate actually
[00:29:37] <cart_man> I can understand if it was different Arches
[00:30:00] <cart_man> but all the same Arch just different distros
[00:30:02] <cart_man> etc
[00:32:34] *** Joins: seninha (~seninha@user/seninha)
[00:33:30] <cart_man> Well I am off. Thanks everyone for the help
[00:33:35] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[00:34:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:36:50] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Remote host closed the connection)
[00:37:07] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[00:42:18] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[00:42:26] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Client Quit)
[00:43:57] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[00:47:21] *** Quits: magla (~gelignite@55d46452.access.ecotel.net) (Quit: Stay safe!)
[00:48:02] *** Joins: CalamityBlue (~CalamityB@2603-8000-d907-cec8-dccd-8808-739a-455d.res6.spectrum.com)
[00:54:39] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:59:02] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:03:39] <kalven> https://github.com/jeaiii/itoa/blob/main/itoa/int_to_chars_jeaiii.h - someone likes macros
[01:05:06] <rb> hi, is it valid for a STT_TLS symbol to have a size of 0?
[01:05:33] *** Quits: andreasbuhr (~quassel@p549dbbae.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:06:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[01:06:51] <Alipha> kalven: macros that aren't parethensized correctly, at that
[01:11:57] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:13:04] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[01:16:21] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:18:11] *** Joins: shewp (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[01:18:21] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 250 seconds)
[01:19:01] *** Quits: |` (~|`@178.159.129.50) (Ping timeout: 256 seconds)
[01:25:46] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Remote host closed the connection)
[01:25:49] *** Quits: robod34 (~Username@79.113.227.62) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:27:23] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[01:28:34] *** Joins: p-i-_ (~Ohmu@183.89.35.200)
[01:32:03] *** Quits: p-i- (~Ohmu@183.89.35.200) (Ping timeout: 256 seconds)
[01:36:28] *** Joins: c4017w (~c4017@209.52.68.8)
[01:42:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:22] *** ChanServ sets mode: +v npaperbot
[01:43:52] <PJBoy> oh did std::expected get merged?
[01:44:05] <LordKalma> what's std::expected?
[01:44:14] <LordKalma> npaperbot, search expected
[01:44:14] <npaperbot> P2505R0: [Library Evolution, Library] Monadic Functions for std::expected <https://wg21.link/p2505r0> (by Jeff Garland) (2021-12-15) (Related: https://wg21.link/p2505r0/github)
[01:44:14] <npaperbot> Also: P1915R0, P1059R0, P1051R0, P0762R0, P0323R11, P0323R10, P0323R9, P0323R8, P0323R7, P0323R6, P0323R5, P0323R4, P0323R3, P0323R2, P0323R1, P0323R0, N4109, N4015
[01:44:19] <PJBoy> man where have you been
[01:44:33] <PJBoy> it's roughly variant<error_t, ret_t>
[01:44:48] <LordKalma> so.... std::optional?
[01:44:51] <PJBoy> [p0323]
[01:44:51] <npaperbot> P0323R11: [Library] std::expected <https://wg21.link/p0323r11> (by JF Bastien, Jonathan Wakely, Vicente Botet) (2021-11-16) (Related: https://wg21.link/lewg29, https://wg21.link/p0323r11/github)
[01:45:01] <PJBoy> nah an error code or a useful value
[01:45:47] <PJBoy> it's the alternative to exceptions for people that don't like exceptions
[01:46:05] <PJBoy> so you "expect" to get a ret_t, but sometimes you get an error_t
[01:46:20] <LordKalma> interesting
[01:47:08] <PJBoy> I don't respect it myself, because its use-case is the same as the use-case for exceptions
[01:47:21] <PJBoy> errors are unexpected / exceptional
[01:47:26] <LordKalma> I don't like the name
[01:47:38] <LordKalma> but hey, better than return args
[01:47:56] <PJBoy> the name reflects the fact that it's optimised for the happy path rather than the error path
[01:48:09] <LordKalma> this does leave that big question
[01:48:15] <LordKalma> you're going to write a library
[01:48:17] <LordKalma> what do you use?
[01:48:33] <PJBoy> what do I use for errors?
[01:48:38] <PJBoy> depends obviously
[01:49:21] <LordKalma> I'm making a hypothetical
[01:49:30] <LordKalma> What will people except from library authors
[01:49:43] <LordKalma> Pun unintended
[01:50:54] <PJBoy> well nowadays you don't expect anything in *particular* for errors
[01:51:01] <PJBoy> you just have to use what they use
[01:51:11] <PJBoy> and I don't anticipate that changing
[01:51:34] <PJBoy> so some libraries will use expected, some won't
[01:51:39] <PJBoy> then herbceptions will get in
[01:51:43] <PJBoy> and there will be yet another way
[01:52:18] <PJBoy> we can say for sure though, that no library will use both exceptions and expected
[01:52:31] <PJBoy> ...maybe boost
[01:53:37] <PJBoy> > The type expected<void, E> means "nothing is expected, but an error could occur".
[01:53:41] <PJBoy> <_<
[01:56:11] <PJBoy> fwiw I'm still not anywhere near as salty about it being added as std::string::resize_and_overwrite
[01:59:52] <jokoon2> nolhman is really mysterious
[02:00:03] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[02:06:26] *** Joins: bobb_ (~bobb_@ipservice-092-211-155-129.092.211.pools.vodafone-ip.de)
[02:07:39] <jokoon2> ok so I can't access a object value
[02:07:40] <jokoon2> huuum
[02:09:41] *** Joins: seninha (~seninha@user/seninha)
[02:11:38] <jokoon2> apparently it doesn't want to be a right value
[02:13:00] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:14:55] *** Joins: seninha_ (~seninha@user/seninha)
[02:16:02] *** Quits: seninha_ (~seninha@user/seninha) (Remote host closed the connection)
[02:17:34] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[02:19:04] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[02:19:11] *** Joins: seninha (~seninha@user/seninha)
[02:19:59] *** Quits: jsbach (~jsbach@2a01:c22:34a5:b300:4809:4522:8fe1:70b0) (Ping timeout: 256 seconds)
[02:20:55] *** Joins: malloy (~jimery@116.30.220.175)
[02:21:10] <jokoon2> I managed to make my sample crash now, but not on godbolt
[02:21:28] <kalven> PJBoy: what's your beef with resize_and_overwrite?
[02:24:24] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[02:25:09] <Friithian> oh yay I get to use pthreads
[02:26:34] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:26:37] *** Joins: foul_owl (~kerry@71.212.148.11)
[02:26:59] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[02:29:00] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[02:30:09] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:33:59] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[02:34:27] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[02:34:54] <MaddHatter> haha. One of the main libraries I use right now does error observers, error return codes, and exceptions all at once. Plenty of libraries will use both exceptions and expected.
[02:35:41] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:36:16] <MaddHatter> And exceptions still aren't usable for "ordinary" errors, so I assume they never will be
[02:36:21] *** Quits: foul_owl (~kerry@71.212.148.11) (Ping timeout: 250 seconds)
[02:37:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:38:21] *** Quits: bobb_ (~bobb_@ipservice-092-211-155-129.092.211.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:38:52] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:40:37] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[02:40:52] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:43:58] *** Joins: ivii (~ivan@user/ivii)
[02:52:17] *** Joins: foul_owl (~kerry@94.140.8.52)
[02:52:28] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[02:59:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:05:07] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:05:26] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:06:35] *** Joins: seninha (~seninha@user/seninha)
[03:06:41] *** Quits: rg (~r-g@163.172.90.106) (Ping timeout: 250 seconds)
[03:07:21] <PJBoy> kalven, the lambda
[03:07:39] <PJBoy> it should just be `resize_for_overwrite` a la `make_unique_for_overwrite`
[03:07:50] <PJBoy> and then you write over the uninitialised memory like any other ordinary code
[03:08:08] <PJBoy> the lambda bit is needlessly complicated
[03:08:42] <kalven> well there was some thinking about it
[03:09:19] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[03:10:09] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[03:12:15] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:13:49] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:13:54] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:14:13] *** Quits: DSpider (~DSpider@82.79.237.67) (Quit: Leaving)
[03:18:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 256 seconds)
[03:19:07] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[03:19:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:20:38] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[03:22:41] *** Quits: jokoon2 (~eio@88.125.11.133) (Quit: Leaving)
[03:23:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[03:24:59] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:27:09] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:29:56] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 245 seconds)
[03:30:00] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[03:34:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[03:37:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:41:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:42:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:46:05] *** Joins: k8yun (~k8yun@user/k8yun)
[03:46:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:46:59] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[03:47:28] *** Joins: CalamityToo (~CalamityB@2603-8000-d907-cec8-dccd-8808-739a-455d.res6.spectrum.com)
[03:49:01] *** Quits: CalamityBlue (~CalamityB@2603-8000-d907-cec8-dccd-8808-739a-455d.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:51:12] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[03:51:57] *** CalamityToo is now known as CalamityBlue
[04:07:33] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:16:39] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[04:20:24] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[04:21:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:29:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[04:31:23] *** Quits: proller (~p@2a02:6b8:b081:17::1:38) (Ping timeout: 250 seconds)
[04:35:57] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:38:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:41:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:42:21] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:46:27] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:46:53] *** Joins: teepee_ (~teepee@openscad/teepee)
[04:47:05] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[04:47:05] *** teepee_ is now known as teepee
[04:47:40] *** Joins: fels (~fels@192.48.10.226)
[04:54:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:55:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:06:50] *** vinleod is now known as vdamewood
[05:16:29] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:116f:8251:b1b1:3325) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:23:44] *** Joins: Tokamak (~Tokamak@172.58.188.176)
[05:28:41] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:230e:6411:bf4c:835d:709d)
[05:30:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:33:09] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[05:35:12] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:37:06] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:38:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:39:45] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:39:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:41:36] *** Quits: k8yun_ (~k8yun@user/k8yun) (Remote host closed the connection)
[05:41:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:42:16] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:24] *** ChanServ sets mode: +v npaperbot
[05:43:39] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[05:46:01] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:54:53] *** Quits: p-i-_ (~Ohmu@183.89.35.200) (Read error: Connection reset by peer)
[05:55:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:cd9a:34f2:55b4:a531:18a9)
[05:55:24] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[05:55:41] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[05:57:40] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[05:58:26] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[05:58:54] <mike18> hi how many bytes are allocated on a 64 bit machine bit_set<20> ?
[05:58:57] <mike18> 12 bytes?
[05:59:17] <mike18> i mean 16?
[06:00:01] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[06:00:40] <kalven> likely 8
[06:00:51] <kalven> but find out with sizeof
[06:01:11] <mike18> is that wrong here? https://stackoverflow.com/questions/12459563/what-is-the-size-of-bitset-in-c
[06:01:20] *** Joins: k8yun (~k8yun@user/k8yun)
[06:01:47] <mike18> i get: 8 * ((20 + 63) / 64) -> 10.3 ... so 16 bytes no?
[06:03:01] <kalven> << sizeof(bitset<20>)
[06:03:02] <geordi> 8
[06:04:43] <kalven> the idea with that formula is that you do an integer division
[06:04:51] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:05:06] <mike18> an integer division?
[06:05:46] <kalven> << 83/64
[06:05:47] <geordi> 1
[06:05:54] <kalven> that's an integer division
[06:06:08] <mike18> yeah but how you get from 20 bits to 8 bytes now?
[06:06:39] <kalven> << 8 * ((20 + 63) / 64)
[06:06:39] <geordi> 8
[06:07:53] <mike18> ((20 + 63) / 64) is .129
[06:07:56] <mike18> 1.29
[06:08:26] <kalven> and once again, the formula (as presented in the stackoverflow answer) assumes that you are doing integer division
[06:08:29] <mike18> 8 * ((20 + 63) / 64) -> 10.375
[06:08:34] <kalven> so get your stinking floats out of here
[06:08:36] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[06:09:24] <mike18> ok
[06:10:48] <mike18> that makes more sense
[06:11:08] <mike18> since 8 bytes can store 64 bits
[06:17:27] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[06:24:48] <Alipha> mike18: `((x + 63) / 64)` is doing "divide x by 64 and round up to the nearest integer". So 20/64, rounded up, is 1.
[06:25:39] <mike18> ok
[06:31:40] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:35:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[06:38:02] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[06:38:25] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:39:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:40:08] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[06:42:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:53:27] *** Joins: adeliktas8 (~adeliktas@i59F5F407.versanet.de)
[06:53:40] *** Joins: CaCode (~CaCode@user/cacode)
[06:55:37] *** Quits: adeliktas (~adeliktas@i59F5203E.versanet.de) (Ping timeout: 256 seconds)
[06:55:37] *** adeliktas8 is now known as adeliktas
[06:56:28] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[07:00:17] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:230e:6411:bf4c:835d:709d) (Ping timeout: 240 seconds)
[07:01:03] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:03:58] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[07:07:13] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:17] *** Quits: foul_owl (~kerry@94.140.8.52) (Ping timeout: 256 seconds)
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:44] *** Joins: xiongxin (~Thunderbi@117.136.79.118)
[07:17:18] <lru> anyone know of Alexandrescu-like SCOPE_EXIT, SCOPE_SUCCESS, and SCOPE_FAIL already in a library?
[07:17:27] <lru> Boost only has SCOPE_EXIT
[07:21:09] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:21:54] *** Joins: ferdna (~ferdna@user/ferdna)
[07:22:30] <lru> I think I found it: https://github.com/Neargye/scope_guard
[07:23:13] *** Joins: foul_owl (~kerry@94.140.8.25)
[07:25:33] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[07:39:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:42:39] *** Quits: xiongxin (~Thunderbi@117.136.79.118) (Ping timeout: 256 seconds)
[07:43:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:47:09] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:53:56] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Quit: Leaving)
[07:58:59] <Friithian> >typing question >``wait did I forget an include'' >clears irc message buffer
[08:01:27] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:05:10] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[08:06:55] <Friithian> if I need to have a stream as a member var that I won't know until part way through construction of the class I what would be my best option?
[08:10:00] <kalven> won't know what?
[08:10:38] <Friithian> it's a file stream that the constructor determins whta file to open, so I can't just pass the constructor a reference to the stream
[08:10:51] <Friithian> do note: I am tired and partially incoherent
[08:11:02] <kalven> as in std::ifstream?
[08:11:15] <Friithian> of, but yes
[08:11:30] <kalven> then just let it default construct and use .open on it later
[08:11:44] <Friithian> so I am thinking way to hard about this
[08:12:35] <Friithian> I need to stop coding late at night
[08:13:04] <mike18> c++ async it's not well suited for finer grained workloads. what does that mean?
[08:13:10] <mike18> cc https://stackoverflow.com/questions/25814365/when-to-use-stdasync-vs-stdthreads
[08:13:50] <kalven> Friithian: if you have some member that you need to delay the creation of, then std::optional is a general solution. but for std::ofstream you don't need this
[08:14:19] <Friithian> thanks, although with what I am limited to with this I prob couldn't even use optional lmao
[08:15:51] <kalven> is this one of these dumb classes where you are restricted to c++1898 or something?
[08:15:56] <Friithian> well…
[08:16:23] <Friithian> not exactly, but it's a systems programming class, so, lotta syscalls
[08:16:39] <Friithian> the instructions include saying to make c strings
[08:16:49] <Friithian> this is the same prof as last year, if you remember that
[08:17:46] <kalven> yes, unfortunately
[08:19:30] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[08:19:50] <Friithian> this is all very painful, currently we're using getopt_long and creating and argument parser, all after I just learned and used argparse
[08:21:32] <lru> knowing getopt will be useful
[08:21:45] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[08:21:56] <Friithian> doesn't make it less painful :P
[08:22:06] <lru> ok :-)
[08:22:15] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[08:23:54] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[08:24:00] *** Quits: ville (~ville@user/ville) (Quit: kernel)
[08:25:15] *** Joins: ville (~ville@user/ville)
[08:29:18] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:29] <ville> for teaching purposes it's not that terrible to limit what's available. a school called "42 coding school" has pretty interesting approach. students there get a limited subset of c and one of the first things the students do is implement bunch of the c standard library. they get some functions like malloc(), free(), read() and write() or so and off they go
[08:32:46] *** Quits: fels (~fels@192.48.10.226) (Quit: Client closed)
[08:32:57] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[08:35:04] <ville> https://en.wikipedia.org/wiki/42_(school)
[08:35:57] <Friithian> I get it (in this case), but it feels annoying to be recreating something you've used a better version of
[08:36:58] <Friithian> I think my issue is that I am thinking on how to solve the problem like I am in the real world just coding, and not trying to learn what is supposed to be taught
[08:40:03] <ville> a friend of mine goes to the local 42 school, and before they started had never programmed anything at all ever. year+ later wrote a "wolfenstein 3d" i guess you could call it a game
[08:40:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:41:55] <ville> seems pretty effective that way
[08:42:24] <Friithian> but how well would that work for someone who has programmed before?
[08:43:11] <ville> presumably they would come to a similar realization that there is value to be extracted
[08:43:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:44:22] <Friithian> just because the realization is there doesn't mean their learning wouldn't be negatively effected
[08:44:42] <Friithian> ssefafs
[08:46:01] <ville> it's a good learning moment as well abou real world: most of the time you are restricted by various "rules" and can't do whatever the fuck you would like to
[08:47:08] <Friithian> in the real world you are either paid, or doing it for yourself
[08:47:13] <ville> if you think there isn't something to be learned from writing a command line parser then you're just being an idiot
[08:47:15] *** Quits: shewp (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 256 seconds)
[08:47:43] <Friithian> thank you for ASSuming a lot there, bud
[08:47:51] <Friithian> where did I *every* say there wasn't something to be learned
[08:47:53] <Friithian> ssyss
[08:48:06] <Friithian> in fact, I am pretty sure I said ``I get it''
[08:48:07] <ville> the amount of whining you do here about it
[08:48:16] <Friithian> ignore++, goodday
[08:52:54] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:53:14] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:53:35] *** Joins: unixpro1970 (~unixpro19@2601:603:4e00:168:6600:6aff:fe50:e69c)
[08:55:43] <ville> heh. wouldn't have expected anything less based on the previous
[08:55:57] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 240 seconds)
[08:56:49] *** Joins: ferdna (~ferdna@user/ferdna)
[09:00:17] *** Quits: unixpro1970 (~unixpro19@2601:603:4e00:168:6600:6aff:fe50:e69c) (Ping timeout: 240 seconds)
[09:06:41] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[09:11:39] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[09:25:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[09:29:45] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[09:32:31] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:8ef:9383:e8bb:73b3:7c08)
[09:34:57] *** Quits: emerent (~quassel@p200300cd570443fbba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:35:09] *** Joins: emerent (~quassel@p200300cd5704436bba27ebfffed28a59.dip0.t-ipconnect.de)
[09:40:39] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:40:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:41:25] *** Quits: p-i- (~Ohmu@2403:6200:8978:cd9a:34f2:55b4:a531:18a9) (Remote host closed the connection)
[09:42:01] *** Joins: p-i- (~Ohmu@2403:6200:8978:cd9a:98a8:ebc8:d7c8:aa05)
[09:42:16] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:25] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:25] *** ChanServ sets mode: +v npaperbot
[09:43:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:44:05] *** Joins: DSpider (~DSpider@82.79.237.5)
[09:46:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Quit: Quit)
[09:52:56] *** Quits: Terminus (~null@user/terminus) (Quit: ZNC 1.8.2 - https://znc.in)
[09:53:14] *** Joins: Terminus (~null@user/terminus)
[10:07:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:8ef:9383:e8bb:73b3:7c08) (Ping timeout: 240 seconds)
[10:21:37] *** Quits: Tokamak (~Tokamak@172.58.188.176) (Ping timeout: 240 seconds)
[10:22:26] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:22:51] *** Joins: irrenhaus3 (~xenon@ip-046-005-003-235.um12.pools.vodafone-ip.de)
[10:24:57] *** Quits: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e) (Ping timeout: 240 seconds)
[10:25:18] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:21ef:802f:daff:2aa5) (Quit: Client closed)
[10:26:12] *** Joins: Tokamak (~Tokamak@172.58.191.51)
[10:29:37] *** Quits: foul_owl (~kerry@94.140.8.25) (Ping timeout: 240 seconds)
[10:30:12] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:31:55] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[10:33:32] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[10:33:54] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[10:35:47] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[10:41:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:44:27] *** Joins: Xardas (~Xardas@149.233.51.127)
[10:44:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:44:37] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:45:18] *** Joins: foul_owl (~kerry@71.212.148.11)
[10:46:59] *** Joins: xiongxin (~Thunderbi@117.136.39.240)
[10:54:16] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 250 seconds)
[11:06:04] *** Quits: ahlk` (~user@2600:1700:31c0:3a10::43) (Remote host closed the connection)
[11:07:42] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[11:07:55] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:08:44] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[11:09:27] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[11:14:57] <LordKalma> So, Jason just wrote a constexpr JSON parser
[11:15:00] <LordKalma> because of course he did
[11:15:20] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[11:16:01] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[11:19:57] <ville> just? there was some conference video where they, don't know who, did that from some years ago. about the time hana's ctre came about
[11:21:03] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:21:40] <rb> LordKalma: i'd expect it to not be much more difficult than writing a comptime json parser
[11:24:19] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[11:25:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4477:9d9a:1a21:9a92)
[11:25:50] <ville> LordKalma: or were he able to avoid all/most of tmp just by writing regular-looking c++ code in constexpr functions?
[11:26:14] <ville> perhaps that's the interesting bit
[11:26:28] <LordKalma> well, in fact, it's more than a parser
[11:26:34] <LordKalma> it's a full blown compiler of static json resources
[11:26:38] <LordKalma> so it builds c++ code
[11:28:21] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:29:13] <LordKalma> https://github.com/lefticus/json2cpp/
[11:41:12] <rb> hm am i misunderstanding it?
[11:41:20] <rb> this seems like a preprocessing step more than a constexpr parser
[11:41:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:42:36] <LordKalma> yes, i said it was actually a compiler
[11:42:49] *** Joins: pingpongball (~pingpongb@43.228.192.100)
[11:43:00] <pingpongball> After c++ whats your fav programming langauge ?
[11:43:04] <pingpongball> perl?
[11:43:26] <LordKalma> bold of you to assume we're fans of c++
[11:43:59] <very_sneaky> does anybody actually like perl?
[11:44:10] <very_sneaky> i'm a fan of python
[11:44:54] <Shell> very_sneaky: yes
[11:44:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:45:00] <pingpongball> very_sneaky , when someone see a celebrity wearing new dress,  everybody in the house, uses that dress.
[11:45:48] <very_sneaky> pingpongball: i have no idea what that means in this context
[11:46:22] <pingpongball> replacing google with celebrity , , dress with programming languages, you'll get it.
[11:46:36] *** Joins: jsbach (~jsbach@2a01:c22:ac56:b500:f922:8290:56f5:4650)
[11:46:37] <pingpongball> *celebrity with google
[11:46:38] <pingpongball> :)
[11:47:01] <LordKalma> if you already decided on an answer, why did you make the question?
[11:47:05] *** Joins: bobb_ (~bobb_@dslb-088-065-181-024.088.065.pools.vodafone-ip.de)
[11:47:33] <very_sneaky> pingpongball: you're saying that because google uses perl, other people use perl? what has that got to do with it being peoples favourite
[11:47:46] <pingpongball> no i mean for python
[11:48:12] <very_sneaky> same question lol - does usage imply favouritism?
[11:48:23] <LordKalma> no point engaging
[11:48:31] <LordKalma> they are asking questions they already decided the answer
[11:49:08] <very_sneaky> LordKalma: they're entitled to know what their favourite is - i'm trying to work out if they're telling me what my favourite is lol
[11:49:26] <LordKalma> they are telling you you're just a trend follower poser
[11:49:49] <very_sneaky> oh gotcha, that would have been easier just to say rather than speaking in analogies
[11:51:55] <kalven> LordKalma: it's not a constexpr json parser, it's a code generator
[11:52:00] <LordKalma> yap
[11:52:08] <LordKalma> it's the JSON for MOC
[11:52:18] <LordKalma> kalven, I read the twitter thread first and got it wrong :)
[11:52:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:54:02] <LordKalma> *it's the MOC for JSON, I meant :p
[11:57:54] <pingpongball> epony
[11:59:42] *** Quits: xiongxin (~Thunderbi@117.136.39.240) (Read error: Connection reset by peer)
[12:00:36] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:05:24] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[12:07:51] *** Quits: pingpongball (~pingpongb@43.228.192.100) (Ping timeout: 256 seconds)
[12:09:18] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:12:26] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[12:13:24] *** Emet-Selch is now known as Azem
[12:15:20] *** Joins: robod34 (~Username@79.113.227.62)
[12:18:42] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:93a:f816:bc7c:4b35:fc6b)
[12:21:00] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:30:56] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[12:35:01] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[12:42:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:45:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:49:28] *** Quits: foul_owl (~kerry@71.212.148.11) (Ping timeout: 256 seconds)
[12:51:32] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:55:16] <ville> c++ code generator driven by json-based input files?
[12:58:51] *** Quits: pingpongball (~pingpongb@43.228.192.104) (Ping timeout: 256 seconds)
[13:04:33] *** Joins: foul_owl (~kerry@94.140.8.194)
[13:08:06] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:93a:f816:bc7c:4b35:fc6b) (Ping timeout: 260 seconds)
[13:09:36] <LordKalma> pingpongball is now asking about Rust on #qt
[13:09:36] <LordKalma> what a troll
[13:10:52] <Haohmaru> he's hunting me down to recommend him more music
[13:11:20] *** Joins: plastico (~plastico@neomutt/plastico)
[13:21:05] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[13:33:29] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:36:13] *** Quits: foul_owl (~kerry@94.140.8.194) (Ping timeout: 240 seconds)
[13:36:29] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:38:57] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:25] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:25] *** ChanServ sets mode: +v npaperbot
[13:42:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:46:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:50:21] *** Joins: foul_owl (~kerry@71.212.133.174)
[13:52:33] <pingpongball> @fau
[13:52:38] <pingpongball> foul_owl
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[13:58:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:cd9a:98a8:ebc8:d7c8:aa05) (Ping timeout: 240 seconds)
[14:01:28] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:01:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:01:37] *** Joins: uramhoaH (~Haohmaru@195.24.53.110)
[14:01:45] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[14:01:45] *** uramhoaH is now known as Haohmaru
[14:02:10] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[14:02:35] *** Joins: sunny934 (~sunny93@wireguard/tunneler/sunny93)
[14:03:02] *** Joins: d457k (~heiko@exit0.net)
[14:03:28] *** Joins: purplex_ (~purplex@user/purplex)
[14:03:34] *** Joins: zoraj_ (~zoraj@209.126.81.159)
[14:03:41] *** Joins: cursey_ (~cursey@user/cursey)
[14:03:56] *** Joins: jns_ (~x@comlink.adminking.com)
[14:05:53] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:06:11] *** Joins: nickel84481 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[14:06:35] *** Joins: ville_ (~ville@user/ville)
[14:06:42] *** Joins: callq (~callq@2409:4062:2296:71d:c827:aaf6:4fa7:dd61)
[14:08:48] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:08:52] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[14:09:07] *** Joins: elemongw_ (~elemongw@20.107.36.50)
[14:10:02] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:2efb:49eb:5abc:71c2:a5ba)
[14:10:40] *** Joins: TheCoffeMaker_ (~TheCoffeM@200.126.129.149)
[14:11:02] *** Quits: foul_owl (~kerry@71.212.133.174) (*.net *.split)
[14:11:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[14:11:02] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (*.net *.split)
[14:11:02] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (*.net *.split)
[14:11:02] *** Quits: robod34 (~Username@79.113.227.62) (*.net *.split)
[14:11:02] *** Quits: ville (~ville@user/ville) (*.net *.split)
[14:11:02] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (*.net *.split)
[14:11:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (*.net *.split)
[14:11:02] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[14:11:02] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[14:11:02] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[14:11:02] *** Quits: elemongw (~elemongw@20.107.36.50) (*.net *.split)
[14:11:02] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[14:11:02] *** Quits: zoraj (~zoraj@209.126.81.159) (*.net *.split)
[14:11:02] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[14:11:03] *** Quits: kurfen_ (~kurfen@213.152.188.7) (*.net *.split)
[14:11:03] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[14:11:03] *** Quits: d12fk (~heiko@exit0.net) (*.net *.split)
[14:11:03] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (*.net *.split)
[14:11:03] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[14:11:03] *** Quits: jns (~x@user/jns) (*.net *.split)
[14:11:03] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[14:11:03] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[14:11:03] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[14:11:03] *** Quits: Sevalecan (~sevalecan@user/sevalecan) (*.net *.split)
[14:11:03] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[14:11:03] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[14:11:03] *** Quits: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse) (*.net *.split)
[14:11:03] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[14:11:03] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[14:11:03] *** elemongw_ is now known as elemongw
[14:11:06] *** sunny934 is now known as sunny93
[14:11:10] *** purplex_ is now known as purplex
[14:15:53] <pingpongball> Hey c++ guys what do you think of lisp based?
[14:16:13] *** Joins: robod34 (~Username@79.113.227.62)
[14:16:13] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[14:16:13] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[14:16:13] *** Joins: kurfen_ (~kurfen@213.152.188.7)
[14:16:13] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[14:16:13] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[14:16:13] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[14:16:13] *** Joins: Spydar007 (~spydar007@user/spydar007)
[14:16:13] *** Joins: Sevalecan (~sevalecan@user/sevalecan)
[14:16:13] *** Joins: NOTevil (~notevil@user/notevil)
[14:16:13] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[14:16:13] *** Joins: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse)
[14:16:13] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[14:16:13] *** Joins: flynn (~mcbloch@user/flynn)
[14:17:10] *** ville_ is now known as ville
[14:17:27] <PJBoy> lisp based what?
[14:17:49] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[14:18:09] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[14:18:46] <pingpongball> langauges
[14:19:18] <LordKalma> morning PJBoy, read the log?
[14:19:26] <PJBoy> mornin'
[14:19:36] *** Joins: foul_owl (~kerry@71.212.133.174)
[14:19:39] <PJBoy> nah I haven't
[14:19:51] <PJBoy> oh hey a netsplit
[14:23:18] <Haohmaru> !rq
[14:23:18] <nolyc> Haohmaru: <cbreak> do re mi fa so raiiii?
[14:23:34] <Haohmaru> >:)
[14:24:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:24:22] <pingpongball> Haohmaru
[14:25:05] <Haohmaru> pongpangbill
[14:25:47] <pingpongball> Haohmaru , what do you think of lisp based languages such as cl, clojure, lisp, hy?
[14:26:01] <Haohmaru> nothing
[14:26:35] <pingpongball> have you used it?
[14:26:35] <Haohmaru> i only schprachen ze C++ and mIRC script
[14:28:40] *** Joins: p-i- (~Ohmu@2403:6200:8978:d293:a95e:b595:a77d:be89)
[14:32:34] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 260 seconds)
[14:34:26] *** Joins: lxsameer (lxsameer@user/lxsameer)
[14:37:22] <TinoDidriksen> pingpongball, off topic - take that to #C++-social
[14:44:55] <very_sneaky> ah mirc script, language of the gods
[14:46:15] *** Joins: Emet-Selch (~haise01@user/haise01)
[14:46:31] *** Emet-Selch is now known as haise01
[14:46:39] <Haohmaru> /unset %very_sneaky
[14:47:35] *** Quits: lxsameer (lxsameer@user/lxsameer) (Ping timeout: 250 seconds)
[14:49:47] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[14:49:49] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[14:52:08] *** haise01 is now known as Azem
[14:52:36] *** Joins: xkuru (~xkuru@user/xkuru)
[15:02:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:05:13] *** Quits: ville (~ville@user/ville) (Ping timeout: 256 seconds)
[15:05:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:06:21] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 256 seconds)
[15:21:09] *** Joins: proller (~p@93.158.190.219)
[15:23:08] *** Joins: ville (~ville@user/ville)
[15:27:11] *** Quits: foul_owl (~kerry@71.212.133.174) (Ping timeout: 252 seconds)
[15:30:15] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[15:34:58] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[15:43:43] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:2efb:49eb:5abc:71c2:a5ba) (Ping timeout: 250 seconds)
[15:51:16] *** Quits: bobb_ (~bobb_@dslb-088-065-181-024.088.065.pools.vodafone-ip.de) (Quit: Ping timeout (120 seconds))
[15:52:47] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:58:38] *** Joins: Leone (~Leo@108.175.224.215)
[15:58:49] *** Quits: pingpongball (~pingpongb@43.228.192.104) (Quit: "bye :* ")
[15:59:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:00:09] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:2a6:96e7:82a0:9aab:fe7f)
[16:02:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:06:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:12:02] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:2a6:96e7:82a0:9aab:fe7f) (Ping timeout: 240 seconds)
[16:15:30] *** Joins: pulse (~pulse@user/pulse)
[16:21:39] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:33:39] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:37:09] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:37:25] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[16:38:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cd96:474c:cc93:ce17)
[16:38:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cd96:474c:cc93:ce17) (Changing host)
[16:38:21] *** Joins: skapata (~Skapata@user/skapata)
[16:39:14] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 252 seconds)
[16:41:37] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[16:46:56] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[16:51:39] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:55:44] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 252 seconds)
[16:58:06] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[17:03:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:05:38] *** Joins: szymon (~ugh@37.120.156.246)
[17:06:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[17:07:20] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:08:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[17:08:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:09:26] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:10:02] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[17:11:59] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[17:12:42] *** Parts: AliceMeows (~AliceMeow@user/alicemeows) ()
[17:12:58] *** Joins: evangeline (~Eleanor@178.79.105.181)
[17:13:00] <evangeline> Can WaitOnAddress (https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitonaddress) or futex in Linux be used to monitor any memory address inside of a process. Can we spawn another thread in the process monitoring certain ARBITRARY memory address inside the process and get a callback when some other thread inside the process tries to modify that memory address?
[17:16:43] <lh_mouse> please google 'hardware breakpoint'.
[17:17:30] *** Joins: bobb_ (~bobb_@dslb-088-065-181-024.088.065.pools.vodafone-ip.de)
[17:25:33] *** Joins: gehn (~gehn@user/gehn)
[17:36:08] <evangeline> lh_mouse, yes I Know what those are, but is WaitOnAddress using a HB ?
[17:36:20] <lh_mouse> I suspect not.
[17:37:36] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[17:38:43] <lh_mouse> I am not sure about WaitOnAddress. Futex itself of course requires no hardware breakpoints.
[17:39:25] <lh_mouse> If you modify the value that a futex is associated, others threads will not be aware of this change. You must wake them up explicitly.
[17:40:16] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[17:40:24] <lh_mouse> It is this wakeup operation that is responsible for finding out which threads are sleeping around that location.
[17:42:26] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:26] *** ChanServ sets mode: +v npaperbot
[17:42:48] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:43:41] *** Joins: seninha (~seninha@user/seninha)
[17:46:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:03:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:07:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:13:03] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[18:16:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:17:00] *** Joins: pulse (~pulse@user/pulse)
[18:32:23] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:49:20] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:49:23] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 256 seconds)
[18:56:07] *** Azem is now known as haise01
[18:56:26] *** Joins: ferdna (~ferdna@user/ferdna)
[18:58:11] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[18:58:14] <mike18> hi
[18:58:38] <mike18> when do you use c++ async over multithreading any useful examples to mention?
[18:58:57] <mike18> i was reading https://stackoverflow.com/questions/25814365/when-to-use-stdasync-vs-stdthreads but it seems outdated
[19:04:06] <xkoncek> how about making my udp transmission reliable simply by sending everything 3 times?
[19:04:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:04:40] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[19:05:19] <mike18> xkoncek: what about adding Acknowledgments?
[19:06:01] <mike18> or get some ideas from https://github.com/CBenoit/RUDP
[19:06:08] <xkoncek> but those can get lost as well and it requires quite a bit of added complexity
[19:07:11] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:07:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:09:43] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[19:18:45] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:19:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 250 seconds)
[19:21:14] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[19:27:41] *** Joins: rg (~r-g@51.15.187.53)
[19:28:15] *** jns_ is now known as jns
[19:28:15] *** Quits: jns (~x@comlink.adminking.com) (Changing host)
[19:28:15] *** Joins: jns (~x@user/jns)
[19:32:48] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:33:05] *** Joins: MatSharrow (~matthew@89.102.9.51.dyn.plus.net)
[19:38:55] *** Quits: bobb_ (~bobb_@dslb-088-065-181-024.088.065.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[19:41:53] *** Joins: paul424 (~tom@ip-5-172-237-145.multi.internet.cyfrowypolsat.pl)
[19:42:39] *** Joins: cheetahw26 (~cheetahw2@14.150-pool-xdsl-mi.sccoast.net)
[19:42:59] <cheetahw26> Hello... I'm using gdiplus and trying to capture a screenshot from a window, and then crop a rectangle out of the image... I can get the screenshot fine, but having trouble cropping the image properly, it's coming out with a bunch of funny lines
[19:43:02] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[19:43:28] <cheetahw26> This is the code, whole class is first tab, 2nd tab is where I'm trying to crop...   https://wandbox.org/permlink/C5aX5TvL1RlubHjO
[19:43:35] <cheetahw26> it's based off of the spout sdk
[19:44:23] <cheetahw26> I can write the whole screenshot to file and that works fine, but I really just need like a small rectangle from that image
[19:46:31] *** Joins: epony (~epony@user/epony)
[19:53:54] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 268 seconds)
[19:59:18] *** Joins: pingpongball (~pingpongb@43.228.192.121)
[20:02:22] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[20:02:30] <mike18_> when do you use c++ async over multithreading any useful examples to mention? i was reading https://stackoverflow.com/questions/25814365/when-to-use-stdasync-vs-stdthreads but it seems outdated
[20:04:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:08:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:10:23] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[20:14:49] <TinoDidriksen> I'd say use threads when you care about controlling it more in detail.
[20:15:49] *** Joins: magla (~gelignite@55d43657.access.ecotel.net)
[20:15:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:17:22] *** Quits: Youmu (uid129469@user/condy) (Quit: Connection closed for inactivity)
[20:18:43] *** Quits: MatSharrow (~matthew@89.102.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[20:19:19] <CarloWood> I need to get better in touch typing, because in general I'm too lazy to get up and turn on the lights :/
[20:22:40] <cheetahw26> anyone know where I can find examples to crop an image from buffer in windows?
[20:30:16] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[20:34:05] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:35:24] <Haohmaru> didn't bitblit() do that too?
[20:35:46] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 245 seconds)
[20:35:57] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Remote host closed the connection)
[20:36:57] *** Joins: MatSharrow (~matthew@89.102.9.51.dyn.plus.net)
[20:43:23] *** Quits: MatSharrow (~matthew@89.102.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[20:45:42] *** Joins: MatSharrow (~matthew@89.102.9.51.dyn.plus.net)
[20:48:10] <cart_man> What is the prefered way of calling CMD things from CPP?  like say std::system("ls -a") etc.
[20:48:19] <cart_man> Will that be std::system?
[20:49:00] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[20:49:38] *** Quits: pingpongball (~pingpongb@43.228.192.121) (Quit: Client closed)
[20:50:19] *** Quits: MatSharrow (~matthew@89.102.9.51.dyn.plus.net) (Client Quit)
[20:51:49] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:53:22] <Alipha> cart_man: if that works for you, sure. note that you won't be able to get the output from std::system directly. you'd have to do std::system("ls -a > foo.txt") and open "foo.txt" or something. if you want to write to the command's stdin or read from the command's stdout, you probably want popen or some other platform-specific api
[20:54:07] <cart_man> Alipha: I really just want an exitcode for this usecase
[20:54:43] <Alipha> cart_man: then std::system works
[20:55:13] <cart_man> will it return the actual exit_code? That which is the one that the command launched actually exited with?
[20:55:42] <imMute> cart_man: boost::interprocess
[20:56:03] <cart_man> imMute: No please I will die if I hvae to try and get boost into a damn lambda
[20:56:22] <cart_man> imMute: Thanks for the addition though
[20:56:35] <imMute> I assume you mean AWS Lambda, cuz a regular C++ lambda that doesn't make sense.
[20:57:01] <cart_man> imMute: haha soz yea I meant aws lambda
[20:57:02] <cart_man> my bad
[20:57:13] <Alipha> cart_man: "Returns an implementation-defined value (usually the value that the invoked program returns)."
[20:58:06] <imMute> cart_man: as in, it could also return error codes because it couldn't launch the program or shell in the first place.  IIRC, it's also implementation defined how many bits of the return code are passed through the various layers involved
[20:58:15] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[21:01:51] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:1830:3c81:c914:8ce4)
[21:05:02] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[21:05:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:09:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:11:22] *** Quits: paul424 (~tom@ip-5-172-237-145.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[21:14:10] <cart_man> imMute: Ahh cause if I std::to_string( std::system(ls -al) ) it returns "" ... does ls return a code ...hmmm
[21:16:19] <cart_man> Howcome ifstream is so hard to get to a std::string ?
[21:17:17] <imMute> cart_man: https://stackoverflow.com/a/2602258
[21:17:50] <mike18_> someone using async for some things?
[21:18:44] *** Parts: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com) ()
[21:22:44] *** Joins: sbrothy (~sbrothy@192038134254.mbb.telenor.dk)
[21:24:36] <Alipha> cart_man: it's impossible for std::to_string(std::system("ls -al")) to result in "", so what you're showing us doesn't match your code
[21:30:41] <TinoDidriksen> It's easy enough to read from stream into a string, but you need to know what you're reading.
[21:31:38] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[21:31:50] <TinoDidriksen> std::getline() for a line, .read() for a known number of bytes, op>> for space-delimited tokens.
[21:32:21] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[21:32:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:34:17] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[21:35:52] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[21:37:41] *** Joins: unyu (~pyon@user/pyon)
[21:39:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:42:18] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:25] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:25] *** ChanServ sets mode: +v npaperbot
[21:44:02] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[22:01:02] *** Quits: proller (~p@93.158.190.219) (Ping timeout: 240 seconds)
[22:01:06] *** Quits: sbrothy (~sbrothy@192038134254.mbb.telenor.dk) (Read error: No route to host)
[22:02:48] <mike18_> TinoDidriksen: "I'd say use threads when you care about controlling it more in detail." whats the advantage of using async than?
[22:03:16] <mike18_> i know boost asio uses async but besides that i dont know any other project
[22:05:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:09:24] <ville> i wouldn't use std::async() for anything
[22:09:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[22:10:19] <vdamewood> ville: Not even for demonstrating why one shouldn't use std::async()?
[22:12:31] <ville> huh?
[22:13:42] <vdamewood> ville: It was a joke. Demonsrating why you shouldn't use X by using X and showing the ill effect.
[22:17:21] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[22:21:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:23:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:25:57] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:27:47] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Quit: Leaving...)
[22:28:46] <imMute> threading and async (assuming asio like async, not std::async) are orthogonal.
[22:33:14] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[22:35:17] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[22:41:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:50:25] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[22:50:49] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:59:14] *** Joins: unyu (~pyon@user/pyon)
[23:06:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:09:48] *** Joins: k8yun (~k8yun@user/k8yun)
[23:10:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:13:13] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[23:13:32] *** Joins: proller (~p@80.240.216.69)
[23:14:29] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[23:15:37] *** Quits: dld (~davidlowr@2601:197:600:1210:3c77:90a4:f938:18fe) (Ping timeout: 240 seconds)
[23:16:50] *** Joins: dld (~davidlowr@2601:197:600:1210:5c9e:f676:ddc7:b9f7)
[23:19:57] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[23:22:14] *** Joins: ferdna (~ferdna@user/ferdna)
[23:22:54] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[23:33:32] *** Joins: proller (~p@2a02:6b8:b081:8813::1:1)
[23:33:57] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 240 seconds)
[23:34:25] *** Joins: x_kuru (~xkuru@user/xkuru)
[23:37:07] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[23:42:36] *** Joins: Terminus (~null@user/terminus)
[23:48:44] *** Parts: jns (~x@user/jns) (bye)
[23:53:09] *** Quits: proller (~p@2a02:6b8:b081:8813::1:1) (Ping timeout: 250 seconds)
[23:57:51] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[23:58:16] *** Joins: noarb (~noarb@user/noarb)
