[00:00:22] *** Joins: Valeria (~Valeria@user/valeria)
[00:00:42] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[00:01:46] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Client Quit)
[00:02:20] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[00:02:39] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[00:04:27] *** Joins: BCB (~fdajkddce@cpe-66-65-105-23.nyc.res.rr.com)
[00:05:33] *** Joins: node1 (~node1@user/node1)
[00:06:05] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Quit: Leaving)
[00:06:48] <BCB> trying to install certbot on ubuntu 20 and I'm getting a lot of python errors
[00:07:11] *** Quits: luva (~luva@45.141.152.36) (Ping timeout: 245 seconds)
[00:07:26] <grawity> 1) how are you trying to install it, 2) what errors?
[00:07:38] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[00:08:18] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[00:08:57] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:09:50] *** Joins: upsala (~zcb@185.213.155.252)
[00:10:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:10:29] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[00:10:43] *** Joins: luva (~luva@146.70.62.238)
[00:10:49] *** Joins: sgn (~sgn@user/sgn)
[00:11:14] *** Quits: gitly (~gitly@85.255.236.225) (Quit: WeeChat 3.3)
[00:13:06] *** Joins: gitly (~gitly@85.255.236.225)
[00:14:44] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[00:14:59] *** Joins: grooverman (~grooverma@177.95.12.14)
[00:15:26] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:16:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[00:17:03] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[00:17:19] *** Joins: grooverman (~grooverma@177.95.12.14)
[00:19:23] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[00:21:35] <cluelessperson> BCB, how are you installing certbot?
[00:21:43] <cluelessperson> BCB, I suggest using it through docker.
[00:21:50] <cluelessperson> I can help you set it up if you need.
[00:22:38] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[00:23:11] <grawity> docker for an app seems very weird, OTOH ubuntu has a snap for it
[00:23:18] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[00:23:41] <Koffa> :(
[00:24:30] *** Joins: newpy (~newpy@206.168.231.90)
[00:24:47] <newpy> is there any way to use pandas pivot_table without aggregating?
[00:25:00] *** Joins: ryu` (~ryusaku@c72AD5BC1.dhcp.as2116.net)
[00:25:18] <cluelessperson> grawity, docker's perfect for that.
[00:25:21] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[00:25:32] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[00:25:43] <cluelessperson> grab an image that contains all the packages you need in its own configured environment, run the thing to do what you want and delete, done.
[00:25:51] <cluelessperson> same sense as venv, but faster.
[00:26:16] <newpy> eg. I'm indexed on date, pivoting on city, but I have two entries for a city on the same day and I'd like to just have two rows in the final table instead of merging it and averaging the values
[00:26:32] *** Joins: shokohsc867 (~shokohsc@38.248.23.93.rev.sfr.net)
[00:27:23] *** Quits: shokohsc86 (~shokohsc@174.197.23.93.rev.sfr.net) (Ping timeout: 264 seconds)
[00:27:23] *** shokohsc867 is now known as shokohsc86
[00:28:07] *** Joins: srhm (~srhm@user/srhm)
[00:29:46] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[00:30:00] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[00:31:18] <BCB> cluelessperson sure.  Thanks.  certbot used to be soooo easy to use.  I just need to update one cert...
[00:31:33] <BCB> I'm on Ubuntu 20
[00:31:41] *** Joins: bloody (~bloody@user/bloody)
[00:32:30] <BCB> cluelessperson I've never used docker before
[00:32:47] *** Joins: pycurious (~Adium@user/pycurious)
[00:33:08] *** Quits: manuels (~manuel@80.211.205.88) (Quit: Ping timeout (120 seconds))
[00:33:55] <cluelessperson> BCB, I suggest automation.
[00:34:55] <BCB> cluelessperson what is that??
[00:34:59] <cluelessperson> BCB, docker is quite easy.  It basically uses "cgroups" with the kernel to fairly directly run instructions, staying fast, but with limited permissions and memory in the system.
[00:35:03] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[00:35:16] <BCB> so how do I set up docker
[00:35:47] <cluelessperson> BCB, start with docker engine: https://docs.docker.com/engine/install/ubuntu/
[00:35:51] <cluelessperson> don't worry about the GUI stuff.
[00:36:20] <grawity> my question still is
[00:36:26] <grawity> how were you trying to install it before?
[00:36:48] <grawity> ubuntu has both an apt package *and* a snap for certbot
[00:36:58] <grawity> were you using either of those?
[00:37:36] <cluelessperson> BCB, to be clear, docker is an entire framework to handle containerization and packaging of applications.  It might be simpler just run certbot on your system, but frankly I feel docker enables just running something and deleting it, when needed, to be far easier.
[00:38:26] <grawity> "run and delete" is a bit contrary to using certbot for automation...
[00:38:41] *** Quits: mvdev_836 (~mvdev_836@user/mvdev-836/x-7776380) (Remote host closed the connection)
[00:40:50] *** Joins: remolej0 (~kenoba@user/kenoba)
[00:41:12] <BCB> cluelessperson what version do I want to run?  I dont see ubuntu 20
[00:41:52] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:41:53] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 268 seconds)
[00:42:11] *** Quits: sazawal (~sazawal@122.161.85.123) (Ping timeout: 245 seconds)
[00:42:16] <cluelessperson> grawity, well, agreed.
[00:42:59] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 264 seconds)
[00:42:59] *** remolej0 is now known as remolej
[00:43:04] *** Quits: teut (~teut@223.182.71.245) (Ping timeout: 256 seconds)
[00:43:12] <cluelessperson> BCB, Hey uh, as grawity suggests, I do want to make it clear, docker is a great framework that *I* prefer to managing random things I might have to run, but you don't necessarily have to use docker.  I'm just more than happy to show you how I'd do it. :P
[00:43:43] <cluelessperson> BCB, https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository    You can use this to add the docker repo to your ubuntu apt package sources,
[00:44:21] <BCB> clueless I'm almost done with the other installation you suggested
[00:44:32] <BCB> which version do I choose?
[00:44:53] <BCB> docker-ce | 5:20.10.10~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:53] <BCB>  docker-ce | 5:20.10.9~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:53] <BCB>  docker-ce | 5:20.10.8~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:53] <BCB>  docker-ce | 5:20.10.7~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:53] <BCB>  docker-ce | 5:20.10.6~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:53] <BCB>  docker-ce | 5:20.10.5~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:53] <BCB>  docker-ce | 5:20.10.4~3-0~ubuntu-focal | https://download.docker.com/linux/ubuntu focal/stable amd64 Packages
[00:44:54] *** litharge sets mode: +q $a:BCB
[00:45:10] <cluelessperson> BCB,  :P  avoid pasting many lines here.
[00:45:24] *** litharge sets mode: -q $a:BCB
[00:45:41] <BCB> sorry
[00:45:45] <cluelessperson> BCB, those instructions are for if you want to install a specific version,  but the above simple line before those will just install the latest.
[00:45:46] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[00:46:12] *** Joins: emerent_ (~quassel@p200300cd57430969ba27ebfffed28a59.dip0.t-ipconnect.de)
[00:46:12] *** Quits: emerent (~quassel@p200300cd574309b6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:46:13] *** emerent_ is now known as emerent
[00:46:47] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:47:12] <queue[m]> you follow the installation instructions
[00:47:17] <queue[m]> i use docker for most things
[00:47:38] <queue[m]> im currently running python flask in docker
[00:47:47] <cluelessperson> I had an interview project to work on, I provided the python package in a docker environment that the interviewer could just run against a test dataset
[00:48:07] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[00:48:10] *** Quits: thevishy (~thevishy@2405:201:f005:c04c:310a:f331:a3d4:27) (Ping timeout: 256 seconds)
[00:48:11] <queue[m]> hehe i setup one with requirements with a Dockerfile and docker-compose that i built
[00:48:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:48:23] <queue[m]> with flask and a full website
[00:49:11] *** Quits: sammie (~sammie@2601:183:c180:3f00:99df:fece:a869:52d1) (Quit: WeeChat 3.0.1)
[00:49:11] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[00:49:26] *** Joins: elkclone (~elkclone@user/elkclone)
[00:49:56] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:2ea6:d5a6:e949:ecd2) (Ping timeout: 265 seconds)
[00:50:01] <cluelessperson> BCB, anyway, you should be at a point you can do.   > docker version
[00:50:40] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[00:50:45] <queue[m]> why are you running ubuntu in docker though?
[00:50:52] <queue[m]> that's very bloated, we use alpine generally
[00:50:59] <queue[m]> or static
[00:51:03] <cluelessperson> queue[m], they're installing docker *in* ubuntu I thought
[00:51:15] <queue[m]> ohh i see
[00:51:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[00:51:46] <queue[m]> https://docs.docker.com/engine/install/ubuntu/
[00:51:51] <queue[m]> its really easy to follow these instructions, the one thing docker is amazing at is documentation
[00:52:01] <queue[m]> its one of the better documented things in this world of containers
[00:52:22] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 268 seconds)
[00:52:53] <cluelessperson> I love it
[00:54:05] *** Quits: ryu` (~ryusaku@c72AD5BC1.dhcp.as2116.net) (Quit: SCV ready!)
[00:54:29] *** Joins: monkey_ (~user@190.104.116.153)
[00:54:32] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[00:54:36] *** Joins: ryu` (~ryusaku@c72AD5BC1.dhcp.as2116.net)
[00:54:37] *** Quits: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net) (Quit: Leaving)
[00:55:13] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:55:27] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:55:41] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[00:58:11] <queue[m]> honestly tho idk what an issue is with setting up a script to automate certbot
[00:58:34] <queue[m]> sudo apt install python-certbot-nginx ; sudo certbot --nginx certonly -d example.com
[00:58:53] <cluelessperson> queue[m], nothing wrong with that.  I just prefer to manage random apps/packages in docker, so it's all contained and ultimately run similarly
[00:59:03] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:6101:50cf:4103:701c)
[00:59:09] <cluelessperson> BCB, you doing okay?
[00:59:20] <queue[m]> i do but certbot isnt one of them for me, or nginx as i just use a VM alone for it cause its the only thing on that box, as its the front-end
[00:59:38] <queue[m]> the back-end which is local to the other vm is fuckin loaded with webapps and stuff tho lol
[01:00:13] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[01:01:47] <cluelessperson> I run nginx in just another docker container
[01:02:20] <cluelessperson> my setup is basically multiple docker networks,  then containers run on the various networks.
[01:04:04] <queue[m]> i think everyone's does but mine gets a little more elaborate as i use virtualization software with cloud-init and terraform with kubernetes for real automation
[01:04:45] <cluelessperson> I need to get to that
[01:05:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:05:52] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f1df-7673-f276-83bb.res6.spectrum.com)
[01:05:56] <queue[m]> once you can automate every task and setup playbooks and yml scripts, rm -rf your entire network and hit 1 key to start it all back up again and walk away with a beer in your hand knowing your network is about to be right back where it was without all the actual 'work'
[01:06:22] <cluelessperson> queue[m], yeah, that's what I want.
[01:06:41] <cluelessperson> connect a laptop to a cluster of servers, just plug in the network cables appropriately, press play
[01:06:55] <queue[m]> yessir
[01:07:01] <queue[m]> tis the devops life
[01:07:04] *** Joins: fikran (~fikran@user/fikran)
[01:07:10] <queue[m]> once you can do all this, you are officially devops
[01:09:08] <queue[m]> until you've rm -rf'd a network and came back from pressing play once logged in and walked away while grilling some steaks and drinking a beer, an hour later its all booted up and you're right back to where you started before you deleted it all. all of this is really cool to do for ourselves as developers because we're creating our own CI/CD pipelines for our python code and others, i specify python cause of where im at :D
[01:09:28] <cluelessperson> queue[m], is terraform a self hosted tool
[01:09:30] <cluelessperson> ?
[01:09:38] <queue[m]> no its within proxmox
[01:09:47] <queue[m]> you choose your virtualization software, i chose proxmox for remote servers
[01:10:03] <queue[m]> i like vmware everywhere else, but i run proxmox side-loaded with debian rather than bare metal
[01:10:57] <queue[m]> https://www.youtube.com/playlist?list=PLj8EOFaxOgsQuMkMFF09vg_tFhzlf3jRM if you're into it
[01:11:03] <queue[m]> a playlist on how to do everything im talking about
[01:11:08] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:11:09] <queue[m]> and automate these tasks
[01:12:40] *** Quits: Bakunin (~Lindis@user/lindis) (Quit: mma party)
[01:12:43] <cluelessperson> welp, I'm going to be working on this.
[01:13:18] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:15:21] *** Quits: ryu` (~ryusaku@c72AD5BC1.dhcp.as2116.net) (Quit: SCV ready!)
[01:15:42] <Wulf> Is the first example of https://docs.python.org/3/library/typing.html#typing.Generic incomplete? Do I need something like KT = TypeVar("KT") before this?
[01:16:19] *** Joins: ryu` (~ryusaku@c72AD5BC1.dhcp.as2116.net)
[01:18:40] *** Joins: et (~et@user/et)
[01:19:05] <phy1729> and for VT yeah
[01:19:37] <queue[m]> yea the cool thing is that's my best bud that made those videos so if you have questions there are answers, he works for cryptocompare and he uses the same setup they do
[01:19:38] *** Quits: MikZyth (~MikZyth@host-174-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[01:19:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:20:08] <phy1729> If you're curious about what the "real thing" looks like, https://github.com/python/typeshed/blob/master/stdlib/typing.pyi#L430
[01:20:40] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[01:20:51] <queue[m]> anyone else signed up for github copilot?
[01:20:56] <queue[m]> makes life ez
[01:21:02] <Wulf> phy1729: thanks
[01:21:12] <queue[m]> i got an invite, you can request to be brought in
[01:21:46] *** Joins: tobybl (~tobybl@213.31.134.235)
[01:21:54] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[01:22:03] <Wulf> queue[m]: if an AI can write code, perhaps the code shouldn't be written.
[01:22:10] *** Parts: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (hej-hej!)
[01:22:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[01:22:43] <phy1729> There's also serious copyright questions, but it's also not really topical.
[01:23:24] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[01:26:29] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:26:43] <queue[m]> im an automation guy, idk i like that Ai can utilize public code worldwide and give me suggestions
[01:26:54] <ChrisWarrick> (and ship your code off to microsoft)
[01:26:57] <queue[m]> allows me to deny suggestions and continue what im doing, its one of those 'why reinvent the wheel' type of things
[01:27:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:27:08] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:27:19] <queue[m]> maybe you have it one way in your head, and you read the way someone else has it laid out and you're like whoa, this is actually better
[01:27:21] <phy1729> That's what libraries and modules are for
[01:28:04] *** Joins: Pickchea (~private@user/pickchea)
[01:28:07] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[01:28:34] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:28:55] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:29:28] *** Quits: Pickchea (~private@user/pickchea) (Remote host closed the connection)
[01:30:53] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:857c:7b34:433d:9665)
[01:31:20] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[01:31:53] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3810-8d9c-60b4-f506.res6.spectrum.com) (Read error: Connection reset by peer)
[01:33:13] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:33:56] *** Joins: nomic (~nomic@185.192.69.224)
[01:36:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[01:37:51] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[01:38:50] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 260 seconds)
[01:39:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:41:52] *** Joins: binary01 (~binary01@192.110.171.216)
[01:42:34] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[01:43:52] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[01:44:08] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[01:45:33] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:45:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 264 seconds)
[01:46:04] *** Joins: causa-sui (~causasui@192.241.228.169)
[01:46:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:49:23] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[01:49:56] *** Joins: deltab (~deltab@user/deltab)
[01:50:22] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Client Quit)
[01:51:01] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[01:54:21] *** Joins: sazawal (~sazawal@122.161.93.207)
[01:55:37] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:56:09] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[01:56:29] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:57:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:57:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[01:57:48] *** Quits: sickdugongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[01:58:20] *** Joins: jazzy (~jaziz@user/jaziz)
[02:00:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[02:01:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:01:31] <Feuermagier> How do I fix pycharm not rendering a jupyter notebook?
[02:03:07] *** Quits: binary01 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[02:03:17] <sveinse> I'm planning on testing out copilot for python coding too. For non-critical, internal use where the copyright and original work controversies don't matter.
[02:03:22] *** Joins: binary01 (~binary01@192.110.171.216)
[02:03:33] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:04:02] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[02:04:34] *** Joins: jazzy2 (~jaziz@user/jaziz)
[02:04:50] *** Joins: bindu (~bindu@user/bindu)
[02:04:57] *** Joins: node1 (~node1@user/node1)
[02:05:20] *** Joins: braxas (sid508886@lymington.irccloud.com)
[02:05:46] <braxas> hi, having some weird issue with python types here: https://gitlab.com/aucampia/scratchpad/-/blob/master/tech/py3/tests/test_furl2path.py#L13
[02:05:47] *** Joins: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com)
[02:06:08] <braxas> Error is: tests/test_furl2path.py:13: error: Incompatible default for argument "path_class" (default has type "Type[PurePath]", argument has type "Type[PurePathT]")  [assignment]
[02:06:13] <braxas> I don't get why
[02:06:38] <sveinse> The callback in asyncio's loop.call_soon_threadsafe() are run in the process of the main event loop? So it should not block, right?
[02:07:22] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[02:07:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[02:09:34] *** Quits: greedom (~greedom@x59cc9bc3.dyn.telefonica.de) (Read error: Connection reset by peer)
[02:10:23] *** Joins: djapo (~archangel@user/djapo)
[02:11:03] *** Joins: greedom (~greedom@x59cc9bc3.dyn.telefonica.de)
[02:11:59] *** Quits: |\n (~x0a@user/n/x-7623025) (Remote host closed the connection)
[02:12:54] <ChrisWarrick> sveinse: if you’re asking about a well-designed callback, then yes, it should avoid blocking
[02:13:36] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:14:45] *** Quits: sfields_ (~sfields@2605:a601:adea:7a00:876c:3f04:3987:d13a) (Quit: Leaving)
[02:14:50] <phy1729> braxas: bound means it has to be a substype iirc
[02:15:06] <braxas> phy1729: I see, let me try without it
[02:16:13] <braxas> no, does not help to remove bound=
[02:16:33] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[02:17:42] <sveinse> ChrisWarrick: the callback is running in the loop thread, yeah?
[02:17:53] <ChrisWarrick> sveinse: yes
[02:18:05] <phy1729> braxas: what if you bound=Type[PurePath] ?
[02:18:27] <phy1729> Dunno how to make the return type work out then though
[02:18:30] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 260 seconds)
[02:19:15] *** Joins: nyah (~nyah@94.6.71.219)
[02:19:27] <braxas> phy1729: even then it complains default is incompatible: tests/test_furl2path.py:13: error: Incompatible default for argument "path_class" (default has type "Type[PurePath]", argument has type "PurePathT")  [assignment]
[02:19:31] <braxas> PurePathT = TypeVar("PurePathT", bound=Type[pathlib.PurePath])
[02:20:10] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Quit: Leaving)
[02:20:22] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:20:40] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:20:49] <sveinse> I'm porting a non-async library to asyncio, that uses lots of callbacks from a busy-waiting read loop running in a separate thread. I now discover that there's lots of unprotected thread crossings in the library due to the callbacks...
[02:20:49] *** Quits: pwug (~pwug@user/pwug) (Quit: Leaving)
[02:22:35] *** Quits: Valeria (~Valeria@user/valeria) (Ping timeout: 264 seconds)
[02:22:54] *** Joins: Valeria (~Valeria@user/valeria)
[02:23:51] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 245 seconds)
[02:24:40] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:24:55] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[02:25:05] *** Joins: pwug (~pwug@user/pwug)
[02:26:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:28:12] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[02:28:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:29:28] *** Joins: pycurious (~Adium@user/pycurious)
[02:30:19] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Quit: anonymous)
[02:30:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:45] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[02:30:47] *** Joins: aivkiv (~aivkiv@78-63-103-201.static.zebra.lt)
[02:31:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:6153:5c41:dc1:7074)
[02:31:36] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[02:31:36] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:34:05] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:34:37] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:34:59] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:6153:5c41:dc1:7074) (Client Quit)
[02:36:21] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[02:36:25] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[02:36:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[02:37:51] <jinsun> braxas: looks like a mypy bug, maybe this one https://github.com/python/mypy/issues/9424
[02:37:52] *** Quits: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com) (Quit: Leaving)
[02:38:15] <braxas> thanks for the link jinsun
[02:38:19] <braxas> will check
[02:38:36] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[02:38:48] <jinsun> might just have to # type ignore, didn't see any good workaround there
[02:39:32] <jinsun> pyright is fine with that code btw
[02:39:43] *** Joins: lethu (~lethu@user/lethu)
[02:40:21] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:6101:50cf:4103:701c) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:40:31] <Wulf> Why does the second reveal_type think it's '<nothing>'? https://paste.debian.net/1219434/
[02:41:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:42:11] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[02:42:39] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[02:43:25] *** Joins: fikran (~fikran@user/fikran)
[02:44:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:6153:5c41:dc1:7074)
[02:44:55] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:46:30] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:6153:5c41:dc1:7074) (Client Quit)
[02:47:00] *** Quits: oz4ga (~tim@93.90.4.233) (Remote host closed the connection)
[02:47:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[02:50:16] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:52:03] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:7135:56a9:649b:dc73)
[02:52:03] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:7135:56a9:649b:dc73) (Client Quit)
[02:52:22] *** Joins: superboot (~agentgasm@user/superboot)
[02:52:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[02:53:49] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:54:06] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[02:54:26] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[02:54:28] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[02:55:36] *** Joins: pycurious (~Adium@user/pycurious)
[02:55:51] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:56:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4d57:c15f:f877:c2ad)
[02:56:40] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[02:56:41] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[02:56:56] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Ping timeout: 268 seconds)
[02:57:02] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[02:57:03] *** internalsplit_of is now known as givemeyourpies
[02:57:04] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[02:57:26] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[02:58:10] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[02:59:14] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[02:59:38] *** Joins: ano (~ano@user/ano)
[02:59:56] *** Joins: jbox (~jbox@user/jbox)
[03:00:05] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[03:01:44] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[03:02:50] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[03:03:12] <bancroft> i'm having a brain fart this weekend, if I have a list [1,2,3,4,5] and I wish to turn it into a list of lists [ [1,2], [3,4], [5,6]] where each sub-list is 7 items in length, how it do?
[03:04:19] <adder> I'd just use more_itertools.sliced
[03:04:34] *** Quits: Zephyrus (~Zephyrus@user/zephyrus) (Quit: Lost terminal)
[03:04:46] *** Joins: kostkon (~androirc@2a02:587:a108:5f73:d067:8cf:12ba:3d42)
[03:04:53] *** Joins: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f)
[03:05:00] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[03:05:16] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 265 seconds)
[03:05:39] <Feuermagier> How do i "np.log(1 - np_array)" ?
[03:06:04] *** Quits: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f) (Remote host closed the connection)
[03:06:21] <bancroft> adder: not what I was thinking but I will look up this new thing, always down to try something new thanks :)
[03:06:43] *** Joins: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f)
[03:06:57] <ChrisWarrick> Feuermagier: I would expect this syntax to work?
[03:07:12] <adder> it's exactly what you're thinking, it just returns an iterator, which you can call list() on if you really need a list
[03:07:14] <Feuermagier> I get [nan nan] as output
[03:07:26] <bjs> Feuermagier: for what inputs? :)
[03:07:35] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[03:07:37] <ChrisWarrick> Feuermagier: yeah, is log defined for 1 - your array?
[03:07:42] <Feuermagier> np.log(1 - np.array([3., 4.]))
[03:07:50] <bjs> Feuermagier: and what should log(-3) be?
[03:08:58] <Feuermagier> bjs, good question. this is for a binary cross entropy function
[03:09:16] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 245 seconds)
[03:09:34] <bjs> Feuermagier: well, your syntax works fine and that is indeed how you compute log(1 - the_values),  it just sounds like you did something wrong somewhere (or have the wrong equation...)
[03:10:06] <Feuermagier> bjs, I'll think about this one a bit
[03:10:48] <ChrisWarrick> perhaps the expected range of the values is between 0 and 1?
[03:11:13] <ali1234> np.log(1 - np.array([3., 4.], dtype=np.cdouble))
[03:11:20] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:11:25] <ali1234> probably not helpful but it works :)
[03:12:04] <Feuermagier> ChrisWarrick, wait, am I supposed to sigmoid that?
[03:12:13] <ChrisWarrick> Feuermagier: absolutely no idea
[03:12:15] <bjs> ali1234: since Feuermagier mentioned entropy I'm guessing negative numbers is just unlikely to be correct inputs here
[03:12:26] <ali1234> no idea :)
[03:13:15] <bjs> Feuermagier: where did this log(1 - arr) come from?
[03:13:35] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:857c:7b34:433d:9665) (Ping timeout: 268 seconds)
[03:13:54] <Feuermagier> you were right. I was using the wrong array. Thx!
[03:14:26] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[03:14:47] <Feuermagier> mixed up my ground truth with my probabilities
[03:15:26] *** Quits: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f) (Read error: Connection reset by peer)
[03:16:03] *** Joins: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f)
[03:16:23] *** Joins: delvian (~delvian@41.13.254.173)
[03:17:25] *** Quits: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f) (Read error: Connection reset by peer)
[03:18:04] *** Joins: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f)
[03:18:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:18:53] *** Quits: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f) (Read error: Connection reset by peer)
[03:19:33] *** Joins: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f)
[03:20:31] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 245 seconds)
[03:20:40] *** Joins: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com)
[03:21:50] *** Joins: fructose (~fructose@user/fructose)
[03:23:43] *** Joins: binary011 (~binary01@192.110.171.216)
[03:24:15] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[03:24:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:29:49] <ali1234> how much smaller would the python interpreter be if its ability to compile source to bytecode was removed?
[03:30:02] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:16] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:33] <Feuermagier> ali1234, probably not much, as you can't do much without translating your code
[03:30:49] <Feuermagier> (but I don't know if that code is the same as the one responsible for interpretation)
[03:31:06] <ali1234> the bytecode compiler culd be a separate program, like javac
[03:31:11] *** Quits: magla (~gelignite@55d45814.access.ecotel.net) (Quit: Stay safe!)
[03:31:37] <bjs> ali1234: most of the interpreter is well, the interpreter.
[03:31:49] <ali1234> obviously you'd lose the repl as well
[03:32:02] <bjs> Feuermagier: I think ali1234 meant to split the compiler and interpreter up. Right now `python` does both stages, but you could split it into two programs
[03:32:14] <ali1234> right, this ^
[03:32:39] <ali1234> purely academic question here
[03:32:58] <Feuermagier> how is the interpreter handled internally? I mean some part of it must be a JIT compiler, right?
[03:32:59] <Yhg1s> ali1234: lots of compilation happens at runtime anyway. You can't separate it out. But yeah, it's tiny.
[03:33:20] <Feuermagier> ^that would be my interpretation
[03:33:20] <Yhg1s> Feuermagier: it depends on what you mean by 'JIT compiler'. Also, it depends on whether you mean CPython, or something else.
[03:33:36] <bjs> ali1234: I mean think about all the builtin libraries, and data structures, and the bytecode interpreter itself...
[03:33:39] <Yhg1s> Feuermagier: the only compilation CPython does is from source to bytecode.
[03:33:41] <ali1234> i meant cpython fwiw
[03:34:18] <Feuermagier> I mean every line of code you write has to be translated into CPU instructions at the some point to run it. It would probably make sense if the code that does that is the same in the interpreter and the compiler.
[03:34:31] <bjs> Feuermagier: that's not the kind of compilation ali1234 means
[03:34:51] <bjs> Feuermagier: if you take something like CPython, it has 2 stages: it compiles .py files into Python bytecode, then it takes that bytecode and interprets it.
[03:34:53] *** Joins: d1b (~db@user/d1b)
[03:35:11] *** Quits: cdown_ (~cdown@89.32.122.5) (Quit: Lost terminal)
[03:35:14] <Feuermagier> interesting
[03:35:32] <ali1234> Feuermagier: python has an intermediate compiled format which is not machine code nor source code, it's byte code. similar to java and dotnet
[03:35:35] <bjs> Feuermagier: this is not uncommon, it's how Java works for example
[03:36:13] <ali1234> but java and dotnet both have standalone compilers. so i wondered what if python was the same
[03:36:54] <bjs> Feuermagier: for CPython (the `python` program on your machine) the second stage is a fairly little C interpreter.  There are other implementations that have JITs and stuff too (like modern Java's interpreter is a JIT)
[03:38:04] <ali1234> i would have expected the bytecode interpreter to be smaller than the source code compiler part
[03:38:17] <ali1234> it just seems like byte code will be simpler
[03:38:32] <bjs> ali1234: the actual interpreter is small,  but the `python` program contains a lot more than just those two things
[03:38:33] *** Quits: dude-x (~textual@72.76.74.165) (Quit: Textual IRC Client: www.textualapp.com)
[03:39:27] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[03:41:25] <ali1234> okay but ignoring all that stuff, which is bigger?
[03:41:27] *** Joins: dude-x (~textual@72.76.74.165)
[03:41:28] <bjs> There is a lot of complexity in Python and the interpreter has to deal with it all (and the compiler doesn't, it's fairly straight-forward in that respect)
[03:41:34] *** Quits: greedom (~greedom@x59cc9bc3.dyn.telefonica.de) (Remote host closed the connection)
[03:42:01] <bjs> ali1234: probably the interpreter, but i'm not sure how/what kind of measurement we're talking about now
[03:43:00] <ali1234> well, pulling a random metric... which needs more memory? compiling a script, or running the resulting bytecode? not including the memory the script uses for user variables etc
[03:43:25] <bjs> ali1234: how can you separate the memory the interpreter uses from the memory the program uses
[03:43:31] <Feuermagier> ali1234, are you asking with a goal in mind or just out of interest?
[03:43:33] <bjs> it's an interpreter...
[03:44:03] <ali1234> well, let's define a script that uses very little memory
[03:44:03] <jinsun> is there really lots of compilation happening at runtime? other than exec and eval what would need compilation at runtime?
[03:44:16] <bjs> jinsun: every import
[03:44:27] <Feuermagier> ali1234, you might want to take a look at micropython
[03:44:33] <bjs> (or well every time you import a .py file for the first time)
[03:44:46] <Yhg1s> ali1234: the compiler part is pretty simple. The bytecode eval loop is simpler, but the implementation of all the objects, not to mention extension modules and Python modules in the standard library, is all much more complex.
[03:44:58] <Feuermagier> (but that's just a rough guess)
[03:44:58] <Yhg1s> you can't have the interpreter without all the object implementations.
[03:45:38] <bjs> ali1234: if you took the `python` program and removed the bytecode compiler and eval loop,  I doubt you'd change its size all that much :P
[03:45:50] <ali1234> fair enough
[03:46:47] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[03:48:00] <Yhg1s> There's about 20k lines of C code in the tokenizer, parser and compiler. A lot of that is autogenerated. About 5k lines of code for the main interpreter loop. There's 85k lines of C code for the builtin types alone, and 40k or so of support infrastructure, like exception handling and memory allocation and what not.
[03:48:17] <ali1234> i see
[03:48:17] <Yhg1s> and that's not counting the standard library.
[03:48:19] *** Joins: causa-sui (~causasui@192.241.228.169)
[03:48:41] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:50:04] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4d57:c15f:f877:c2ad) (Ping timeout: 256 seconds)
[03:50:18] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Ping timeout: 260 seconds)
[03:51:35] <ali1234> does cpython have a "compile only" mode?
[03:51:55] <Yhg1s> it has the 'py_compile' and 'compileall' modules.
[03:53:03] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[03:53:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[03:53:17] <jinsun> bjs: okay yeah, but for imports we can precompile pyc files
[03:53:29] <jinsun> if we do that, then will there be lots of compiling at runtime?
[03:53:40] <Yhg1s> there can be. it depends on the code involved.
[03:53:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:54:03] <ali1234> hmm. so compiling "print('hello')" used 10.12 MB RAM, running the resulting pyc used 9.4MB
[03:54:03] *** Joins: interweb (~interweb@user/interweb)
[03:54:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:54:48] <bjs> ali1234: using those modules might not be a good way to measure that kind of thing
[03:55:14] <Yhg1s> indeed not.
[03:55:14] <ali1234> oh my bad, 9.21MB to run the pyc, 9.4MB to run the py (but maybe it actually loaded the pyc anyway)
[03:55:41] <bjs> ali1234: I wouldn't read anything into those numbers (other than the obvious "Python eats a lot of memory to do anything")
[03:55:48] <jinsun> Yhg1s: will it all be exec and eval, or there are other things that also need compiling?
[03:57:09] <Yhg1s> jinsun: various bits and pieces of the interpreter or the standard library use various bits and pieces of the bytecode compiler, so it's hard to say. It's not a clearly delineated component. But if you _just_ mean the exact thing of taking Python source and running it, then yes, exec, eval, compile, importing a module without cached bytecode. A lot of that happens behind the scenes, though.
[03:57:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:57:32] <Yhg1s> oh, the ast module, also a noteworthy way to use the bytecode compiler.
[03:57:48] *** Quits: aivkiv (~aivkiv@78-63-103-201.static.zebra.lt) (Quit: Textual IRC Client: www.textualapp.com)
[03:58:30] <jinsun> ah yeah there is compile and ast also
[03:58:36] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:59:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:59:54] *** Lord_of_Life_ is now known as Lord_of_Life
[04:02:34] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[04:04:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:04:09] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:04:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[04:05:02] *** Quits: grimvar (~grimvar@i5C75F5D0.versanet.de) (Ping timeout: 240 seconds)
[04:05:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[04:06:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:06:49] *** Joins: grimvar (~grimvar@i5C75F459.versanet.de)
[04:08:23] *** Joins: javabean (~javabean@user/javabean)
[04:08:36] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[04:09:38] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[04:09:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[04:09:56] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[04:09:59] *** Quits: schumaml (~schumaml@p57b7e334.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[04:10:40] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[04:11:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[04:11:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:11:43] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[04:12:08] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[04:12:14] *** kostkon is now known as kostkon_
[04:13:03] *** Joins: aivkiv (~aivkiv@2a01:4f8:201:6250::2)
[04:13:05] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[04:15:52] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[04:17:06] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[04:17:29] *** Joins: ogis (~Android@240d:1c:3d:9500:5919:6895:619f:79f4)
[04:18:24] *** Joins: Wulf (~Wulf@user/wulf)
[04:18:41] *** Parts: aivkiv (~aivkiv@2a01:4f8:201:6250::2) (Textual IRC Client: www.textualapp.com)
[04:19:35] *** Joins: aivkiv (~aivkiv@2a01:4f8:201:6250::2)
[04:20:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[04:21:24] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[04:23:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:25:10] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[04:25:19] *** Quits: ogis (~Android@240d:1c:3d:9500:5919:6895:619f:79f4) (Quit: -a- IRC for Android 2.1.59)
[04:26:01] *** Joins: ogis (~Android@240d:1c:3d:9500:5919:6895:619f:79f4)
[04:28:02] *** Joins: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[04:28:08] *** Joins: parv (~quass@user/parv)
[04:29:17] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[04:29:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[04:30:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:30:19] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[04:30:43] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:30:45] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[04:31:02] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[04:32:51] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:11] *** Joins: brabrax (~brabrax@user/brabrax)
[04:34:36] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[04:36:39] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[04:37:16] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[04:37:45] *** Joins: pycurious (~Adium@user/pycurious)
[04:38:45] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[04:38:59] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[04:39:53] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:40:58] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[04:41:18] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[04:41:40] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:42:03] *** Quits: subopt (~subopt@2603-8081-2302-459a-e48b-1ae1-4f74-9c2f.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:42:10] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 260 seconds)
[04:42:29] *** Joins: Klinda (~superleag@user/klinda)
[04:45:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:46:07] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[04:46:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[04:46:26] *** Joins: _subopt (~subopt@2603-8081-2302-459a-e48b-1ae1-4f74-9c2f.res6.spectrum.com)
[04:46:53] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[04:46:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:47:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:50:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:50:12] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[04:50:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[04:50:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[04:50:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:51:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[04:51:38] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[04:52:45] *** Joins: fikran (~fikran@user/fikran)
[04:53:36] *** Joins: Hackerpcs (~user@user/hackerpcs)
[04:54:08] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:54:39] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:55:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:55:50] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[04:56:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[04:57:03] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:57:05] *** Quits: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com) (Quit: Leaving)
[04:57:58] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[04:58:15] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[04:58:41] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:59:21] <MrBurns> https://github.com/paloj/visual_area_number_game
[05:00:33] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[05:00:38] <MrBurns> I have this hobby study/project that aims to generate heatmap style graphs of your understending of what you see in your field of view.
[05:01:05] *** Joins: srhm (~srhm@user/srhm)
[05:01:33] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[05:01:57] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[05:02:35] <cluelessperson> MrBurns, that sounds really cool.
[05:02:53] <MrBurns> Data collection 'game' is already working well but the heatmap generation from the collected data is missing
[05:03:42] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[05:03:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:04:24] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[05:06:11] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:06:38] *** Quits: taru9 (~realTaru9@user/taru9) (Quit: %xD%)
[05:06:58] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[05:07:15] *** Joins: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com)
[05:07:21] <MrBurns> Im open for suggestions on how to create/store/.. the heatmaps
[05:10:55] <grym> MrBurns: matplotlib.imshow is the default option, proably
[05:11:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:11:37] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:12:05] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Remote host closed the connection)
[05:12:08] <grym> MrBurns: but if you want to do it 'live', maybe look at psychopy ? https://www.psychopy.org/  that's the sort of experiment you've designed anyway, so there's bound to be helper functions to do thist
[05:13:04] <grym> psychopy is pretty rad
[05:13:18] *** Joins: taru9 (~realTaru9@user/taru9)
[05:15:23] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[05:15:27] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:15:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[05:16:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:19:02] <lionslicer> how do I choose from specific user input in a while list? I think creating an auxiliary variable won't work
[05:19:08] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:20:30] <lionslicer> for example, I ask the user to enter a few numbers. how do I print the highest number once the loop is over?
[05:20:49] <grym> lionslicer: store all valid entries in a list, and call max() on the resulting list
[05:20:59] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:21:30] <lionslicer> I think I'm not supposed to use lists here. My professor is making a point about using only things he's taught
[05:21:45] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[05:22:08] <lionslicer> and we haven't studied lists yet. I've seen it myself, tho
[05:22:24] <grym> i have some choice words for your professor :P
[05:22:42] <lionslicer> he has a short temper too
[05:23:14] <lionslicer> a really really short temper
[05:23:52] <grym> is there a problem text and starting code for this problem you could paste?
[05:24:04] <lionslicer> sure, just a sec
[05:24:09] <grym> i'm happy to go full socratic TF on you :P
[05:24:47] *** Quits: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com) (Quit: Leaving)
[05:24:56] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[05:25:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:25:26] <MrBurns> grym: Ok. Ill look into it. thanks!
[05:25:33] *** Quits: flokuehn (~flokuehn@87.123.247.90) (Ping timeout: 268 seconds)
[05:25:35] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[05:26:07] <lionslicer> most variables are in Portuguese, but I think it's kinda simple and the words themselves are cognates with english ones
[05:26:10] <lionslicer> https://bpa.st/EITQ
[05:26:17] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[05:27:08] *** Joins: flokuehn (~flokuehn@87.123.247.37)
[05:27:34] <lionslicer> If my code is messy or the variables are unintelligible, just let me know
[05:29:13] <lionslicer> grym, sorry, here's some context: I'm supposed the store the highest wage, but the sample size is restricted to people under 30
[05:29:40] <lionslicer> lemme redo everything with some comments in english
[05:31:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:31:19] <grym> ok.  yeah, you can do the "biggest so far / if not bigger than that, don't do anything, otherwise update it" game
[05:31:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:09] *** Joins: Dan39 (~dan@user/dan39)
[05:32:36] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 245 seconds)
[05:33:48] <lionslicer> using variables, right?
[05:34:01] <lionslicer> an auxiliary variable would do the trick I think
[05:34:35] <grym> someting that lives outside the loop, yeah
[05:35:54] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[05:36:02] *** Joins: frodl (uid527064@user/frodl)
[05:36:39] *** Quits: sharperguy (~sharpergu@88.130.220.158) (Ping timeout: 268 seconds)
[05:37:59] *** Joins: sharperguy (~sharpergu@88.130.222.57)
[05:38:22] <lionslicer> should I put the if statement that tests for the age outside the while loop too? I don't think so, but I'm kinda tired tbh
[05:38:34] <lionslicer> I'll try it both ways
[05:40:34] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[05:40:36] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:41:11] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:42:03] *** Quits: kostkon_ (~androirc@2a02:587:a108:5f73:d067:8cf:12ba:3d42) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[05:42:36] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:42:52] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:43:27] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4d57:c15f:f877:c2ad)
[05:43:54] <wallbroken> https://dpaste.org/87sY
[05:44:08] <wallbroken> could you please explain the statement at line 4 ?
[05:45:44] <phy1729> it's a list comprehension, make a new list where each element is in test_list, but only include it if that element [0].lower() is equal to check.lower()
[05:45:46] <grym> wallbroken: "all the elements of test_list whose first character is 'a'"
[05:45:54] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[05:46:58] *** Joins: ItsLandon (~quassel@2601:1c0:6d03:1cb0:4073:ab30:4fd8:2cd3)
[05:47:18] <wallbroken> ok
[05:47:30] <deltab> start at the 'for' and read to the right; when the 'if' condition is true, the value to the left of 'for' is added to the new list
[05:47:37] <wallbroken> and what if i want to do it for an undefined length of the substing?
[05:47:59] <phy1729> if idx.startswith(prefix)
[05:48:19] <phy1729> well idx.lower().startswith( I suppose
[05:48:25] <wallbroken> the goal is to reach what you see in google when you start typing a word
[05:48:30] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[05:48:42] <wallbroken> it will show you all the keywords matching with that
[05:48:44] <deltab> by the way, 'idx' is a bad name for that: it's short for index, which is the numerical position within the list: 0, 1, 2, 3, etc.
[05:48:46] <phy1729> In that case, you might want to look into what a trie is
[05:49:35] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[05:49:49] <wallbroken> res = [idx for idx in test_list if startswith(check) == check.lower()]
[05:50:37] <wallbroken> no
[05:50:38] <phy1729> prefix = check.lower()      [word for word in test_list if word.lower().startswith(prefix)]
[05:50:39] <wallbroken> res = [idx for idx in test_list if idx.startswith(check)]
[05:51:00] <wallbroken> what i just wrote does make sense?
[05:51:08] <deltab> yes
[05:51:14] <deltab> I'd changechange idx to name though
[05:51:19] <grym> wallbroken: yes.  but as mentioned, use a better name than idx
[05:51:34] <grym> "element", "test_value", "thingie", whatever
[05:51:45] <wallbroken> ok, now the tutorial is telling me that is better to put it in a class
[05:51:51] <wallbroken> and create an istance of that calss
[05:52:00] <wallbroken> that is the right way to execute the code
[05:52:38] <phy1729> it depends; classes are often a good way to model things and structure your code, but they aren't always the best fit
[05:52:51] <wallbroken> The list of matching first letter : ['Akash']
[05:52:59] <wallbroken> not expected output
[05:53:09] <wallbroken> it is getting only one of the words
[05:53:17] <wallbroken> but there are two words starting with A
[05:53:41] <deltab> 'akshat' starts with 'a', not 'A'
[05:53:57] <deltab> you'll need to turn 'akshat' into 'Akshat'
[05:54:32] <deltab> I mean your program should do that when it's checking
[05:54:54] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[05:54:59] <deltab> notice how you had  idx[0].lower() == check.lower()  to convert both to lowercase
[05:55:28] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[05:56:08] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:56:15] <wallbroken> res = [element for element in test_list.lower() if element.startswith(test_value.lower())]
[05:56:25] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:56:35] <wallbroken> i tried converting all stuff using lower()
[05:56:42] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[05:56:42] <phy1729> I don't think you can lower a list
[05:56:43] <wallbroken> but test_list is a list
[05:56:50] <deltab> think through what happens for each name
[05:56:57] <wallbroken> and it hasn't .lower() method in its class
[05:57:27] *** Quits: truth (~truth@user/truth) (Quit: bye)
[05:57:27] <grym> [element.casefold() for element in test_list], though, will do something useful
[05:57:28] <deltab> right, you can only do that with each string
[05:57:40] <wallbroken> res = [element for element in test_list if element.lower().startswith(test_value.lower())]
[05:57:51] <deltab> right
[05:58:06] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:5c82:c3ba:5a37:b456) (Remote host closed the connection)
[05:58:12] <wallbroken> good
[05:58:20] <wallbroken> now i'll try to put it in a class?
[05:59:07] <deltab> element.lower().startswith(test_value.lower())  =>  'Akash'.lower().startswith('A'.lower())  =>  'akash'.startswith('a')  =>  True
[05:59:41] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[06:00:34] <wallbroken> the next step of the exercise is try creating a class
[06:00:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:00:38] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[06:01:22] <deltab> does it tell you any more than that?
[06:01:32] <wallbroken> https://docs.python.org/3/tutorial/classes.html#class-objects
[06:01:35] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 264 seconds)
[06:01:52] <wallbroken> i will use that template
[06:02:19] <deltab> does it say what methods there should be, and what they should do?
[06:02:47] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[06:03:04] <deltab> there are several ways you could put that in a class
[06:03:48] <wallbroken> the class should name "KeywordSearchEngine"
[06:05:06] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 245 seconds)
[06:06:12] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:07:17] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[06:08:15] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:10:03] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[06:11:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[06:11:45] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:12:15] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[06:12:23] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 264 seconds)
[06:13:36] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[06:15:03] *** Joins: qpdb (~qpdb@user/qpdb)
[06:15:12] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:15:30] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:15:35] *** brabrax_ is now known as brabrax
[06:21:03] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[06:21:38] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:24:06] <wallbroken> https://dpaste.org/kVtp
[06:24:10] <wallbroken> i did it right?
[06:24:44] *** Joins: atlas (~jbox@user/jbox)
[06:24:44] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:25:08] *** Quits: emerent (~quassel@p200300cd57430969ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:26:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[06:26:21] *** Joins: emerent (~quassel@p200300cd57430969ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:26:41] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:26:44] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:27:29] <wallbroken> https://dpaste.org/s7hU
[06:27:31] <wallbroken> this way it works
[06:27:59] *** Quits: nergar (~Nergar@177.225.129.174) (Quit: Leaving)
[06:28:35] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 264 seconds)
[06:28:41] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:31:31] <parv> That looks like a class for its own sake. Very classist!
[06:33:36] <parv> Besides that, "keyword" in "keywordSearch" is rather redundant, as that is already in the class name; str() cast also looks redundant.
[06:33:42] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Read error: Connection reset by peer)
[06:34:23] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[06:34:49] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[06:35:25] <parv> "search" method name would have been enough
[06:35:38] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[06:35:54] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:36:34] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 260 seconds)
[06:37:19] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[06:37:40] <parv> wallbroken, About my comment re str(), well that could be desired result but why?
[06:38:11] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:38:46] <parv> wallbroken, What is the expected return value type of the method: list of names, or list of names as a string?
[06:39:08] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[06:39:11] *** Joins: \mSg (mSg@user/msg/x-0285936)
[06:39:28] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:40:44] <wallbroken> parv: list of names
[06:41:14] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:41:31] <parv> wallbroken, Ok. So that "str()" in "return" will return a string, not a list; you can do without
[06:41:45] *** Quits: ItsLandon (~quassel@2601:1c0:6d03:1cb0:4073:ab30:4fd8:2cd3) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:42:23] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[06:42:47] <wallbroken> ok
[06:43:21] <wallbroken> it's not clear what the "self" keyword does
[06:43:30] <wallbroken> could you please explain it in a very simple way?
[06:43:35] <wallbroken> thank you
[06:44:54] <parv> "self" refers to the object created by "KeywordSearchEngine()". That will allow to call other methods of the class, with the data, if any, it was initialized with.
[06:45:32] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[06:45:51] <wallbroken> could you make an exapmple? is still not very clear
[06:45:55] *** Joins: wing (~wing@122.206.190.65)
[06:45:59] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[06:46:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:46:16] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[06:46:23] *** Quits: wing (~wing@122.206.190.65) (Client Quit)
[06:46:34] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:49:52] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (WeeChat 3.2)
[06:50:34] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[06:50:48] <peterhil_> wallbroken: Self in Python is a broken abstraction. When you think the call from functional programming view point, the first parameter is either the class or the instance of the class. That's how the method contents know how to use those.
[06:50:53] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:51:06] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:51:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[06:53:00] <peterhil_> So, you can think of a Python class as just a collection of functions, that by convention always get passed the class instance (object) implicitly when you call them, but when defining methods, you need to explicitly mark those as first parameters.
[06:54:11] <parv> wallbroken, Example: https://termbin.com/rrup
[06:54:59] *** Quits: Inline (~Inline@2a02:908:1252:7a80:22ee:92f9:2a07:2e7) (Ping timeout: 264 seconds)
[06:55:09] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[06:55:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[06:56:57] *** Joins: causa-sui (~causasui@192.241.228.169)
[06:57:06] *** Joins: interweb (~interweb@user/interweb)
[06:58:48] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[06:59:22] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[07:00:04] *** atlas is now known as jbox
[07:00:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[07:00:14] *** jbox is now known as atlas
[07:00:17] *** Parts: javabean (~javabean@user/javabean) (No boundaries on the net!)
[07:00:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:00:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[07:01:46] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[07:02:06] *** Joins: fikran (~fikran@user/fikran)
[07:02:09] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (Quit: .)
[07:02:19] *** Quits: atlas (~jbox@user/jbox) (Quit: Leaving)
[07:03:36] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[07:03:49] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[07:05:07] <peterhil_> wallbroken: Look at the explanation of scope on class and instance variables, maybe that helps in understanding: https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables
[07:06:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:06:23] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[07:06:43] *** Joins: jbox (~jbox@user/jbox)
[07:06:53] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[07:07:03] <peterhil_> I would also suggest to play around with how the classes and their various features like multiple inheritance works on a toy project.
[07:07:06] *** Joins: bluss (~bluss@user/bluss)
[07:08:10] <peterhil_> That's how I finally grasped it. I remember it being a hard thing for me to really understand at first when I was learning programming.
[07:08:48] *** Joins: rammstein (~gnu@2400:8904::f03c:92ff:fe4b:7c0a)
[07:09:14] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[07:09:50] <peterhil_> And do not get too attached with classes or inheritance or OOP patterns. I actually had a hard time finding a public example where I even use classes... :-)
[07:10:04] <peterhil_> From my repos, I mean.
[07:10:29] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[07:10:38] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[07:12:11] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 245 seconds)
[07:14:13] <peterhil_> wallbroken: Here is maybe relatively simple real world usage example of a class with two properties and some magic methods. You should learn about those! https://github.com/gorakhargosh/watchdog/blob/master/src/watchdog/observers/api.py#L39
[07:16:34] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:18:33] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:20:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[07:21:22] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[07:21:22] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[07:24:35] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:26:34] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:27:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:28:32] *** Parts: wyre (~wyre@user/wyre) (WeeChat 3.3)
[07:28:45] *** Joins: wyre (~wyre@user/wyre)
[07:31:35] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[07:33:12] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:33:12] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:33:12] *** finn_elija is now known as FinnElija
[07:33:30] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:24] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:57] *** Joins: anonymeowo (~anonymeow@107.189.14.18)
[07:39:34] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4d57:c15f:f877:c2ad) (Ping timeout: 256 seconds)
[07:41:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[07:42:21] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 256 seconds)
[07:42:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4d57:c15f:f877:c2ad)
[07:43:23] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:44:05] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Ping timeout: 260 seconds)
[07:44:06] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:45:59] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:46:24] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:46:30] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 260 seconds)
[07:46:36] *** Joins: Bakunin (~Lindis@user/lindis)
[07:46:39] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Quit: GoodBye)
[07:47:02] *** Yugi is now known as Hunterkll
[07:48:09] <wallbroken> https://www.youtube.com/watch?v=oaiQ5hYKHTE
[07:48:17] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[07:48:21] <wallbroken> here it explains what does really "self" do
[07:48:30] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[07:50:28] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 268 seconds)
[07:50:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[07:51:04] <wallbroken> it's the pointer to the instance
[07:51:18] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[07:51:20] <wallbroken> so instance1 = ClassName(parameters...)
[07:51:25] <wallbroken> instance1 is self
[07:51:46] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:53:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:53:38] <phantomotap> not quite
[07:56:17] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[07:57:06] *** Joins: causa-sui (~causasui@192.241.228.169)
[07:58:48] *** Joins: bindu (~bindu@user/bindu)
[07:59:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[07:59:26] *** Joins: TechnoDelver (~TechnoDel@user/technodelver)
[07:59:51] <deltab> when you call instance1.m, it receives isntance1 as an extra first argument, called self
[08:00:34] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[08:00:58] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:01:58] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[08:03:13] *** Joins: andai (~andai@ip26-92-214-87.adsl2.static.versatel.nl)
[08:03:51] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[08:05:13] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:05:52] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[08:06:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:07:22] <cluelessperson> wallbroken, Think of the "class" definition like a template.    Perhaps like a form at a doctor's office.   The form has been designed to have data filled in at certain spots.
[08:08:53] <cluelessperson> wallbroken, you take the "template" and you "instantiate it" or create an instance of the form, which you then fill out.   Your individual form is now an "instance" of that template, or "class"
[08:09:21] <wallbroken> yes i knew that
[08:09:23] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[08:09:24] <cluelessperson> yee
[08:09:31] <wallbroken> but it's not clear the role of "self"
[08:10:24] <cluelessperson> wallbroken, self is a clear variable that refers to that specific instance.
[08:11:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[08:14:10] <wallbroken> can i declare a variable outside a method definition?
[08:14:49] <wallbroken> https://dpaste.org/W0rE
[08:14:52] <wallbroken> as in line 3
[08:15:12] <wallbroken> or it does not make any sense?
[08:16:02] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:16:48] *** Joins: jazzy (~jaziz@user/jaziz)
[08:17:41] <cluelessperson> wallbroken, yes, then it will be available globally attached to that class, rather than the instance.
[08:17:45] <BrenBarn> you can but the meaning is different
[08:17:57] <BrenBarn> it means it is a "class variable" rather than an instance variable
[08:18:01] <cluelessperson> yes
[08:18:08] <wallbroken> ok
[08:18:14] <wallbroken> but it will be still a variable?
[08:18:16] <Swayze> yeah but you used test instead of test2
[08:18:19] <cluelessperson> sure
[08:18:21] <Swayze> in your print function
[08:18:24] <BrenBarn> well, it will be an attribute
[08:18:27] <Swayze> could be your bug
[08:18:55] <parv> Swayze, "test" is instance attribute
[08:19:01] <wallbroken> and what if i add self. before test2 ?
[08:19:09] <wallbroken> self.test2 = ....
[08:19:17] <BrenBarn> but beware that because in Python you can freely create new instance attributes, and they will shadow class attributes, creating a class attribute may not work the way you think
[08:19:18] <cluelessperson> it won't exist up there.
[08:19:24] <wallbroken> in this way i will make it referring to the istance?
[08:19:29] <cluelessperson> I imagine it'll be an "undefined" error.
[08:19:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:19:39] <BrenBarn> there is no instance at that point
[08:20:05] <wallbroken> for example, in python, to create a variable under "self" do i need the __init__ constructor?
[08:20:39] <wallbroken> constructor is the only way to make a variable instance related
[08:20:40] <wallbroken> right?
[08:20:47] <cluelessperson> wallbroken, yes.   __init__ returns an instance, and runs automatically when you call  SomeClass().   it's actually doing.   SomeClass.__init__(
[08:20:55] <wallbroken> ok
[08:21:01] <cluelessperson> (or something similar)
[08:21:05] <deltab> doesn't have to be __init__, but some method, yes
[08:21:26] *** Joins: jazzy2 (~jaziz@user/jaziz)
[08:21:29] <cluelessperson> deltab, really? :)
[08:21:31] * cluelessperson looks it up
[08:21:41] <wallbroken> so, the end of the story is: everytime i want to create something which is instance bounded, i need to use "self"
[08:21:42] <wallbroken> right?
[08:21:47] <deltab> def somemethod(self): self.newprop = 123
[08:21:56] <BrenBarn> you can create instance methods at any time, not just in `__init__`
[08:22:01] <BrenBarn> er, instance attributes I mean
[08:22:10] <Repiphany> wallbroken: https://bpa.st/3HMQ
[08:22:38] <deltab> wallbroken: right
[08:23:39] *** Joins: roro (roro@user/roro)
[08:23:41] <wallbroken> so, what BrenBarn said is false
[08:23:46] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[08:23:51] <wallbroken> 05:47:56 AM - BrenBarn: it means it is a "class variable" rather than an instance variable
[08:24:19] <cluelessperson> wallbroken,   He meant if you created that variable,   test2, outside of the method where self exists.
[08:24:20] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[08:24:31] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:24:32] <wallbroken> seeing the testcase Repiphany posted, he didn't used __init__ or any kind of costructor
[08:24:37] <parv> Nothing is stopping an instance to grab class attributes.
[08:24:38] <BrenBarn> it is true for what you were asking
[08:24:41] <deltab> referring to  class KeywordSearch: test2 = 'outside'
[08:24:42] <wallbroken> but still seems like that the value is instance bounded
[08:25:10] <deltab> test2 there is KeywordSearch.test2, a class attribute
[08:25:36] <BrenBarn> the thing is that setting a class attribute doesn't "lock" that particular name to be used only for class attributes or anything like that
[08:25:47] <deltab> when you access an attribute of an instance, it's first looked for in the instance; if it's not there, in the class
[08:25:49] <wallbroken> ok, and if i create an instance of KeywordSeach and the i set the attributes differently to each instance
[08:25:56] <BrenBarn> you can set a class attribute, then set an instance attribute of the same name (as in Repiphany's example) and it will shadow the class attribute
[08:26:00] <wallbroken> the variable is not in common
[08:26:04] <BrenBarn> that's what I meant before about "beware..."
[08:26:50] *** guenhael1 is now known as guenhael
[08:27:00] *** Joins: frost (~frost@user/frost)
[08:27:32] <wallbroken> so, I start again: what's the difference between declaring an attribute inside a method than declaring it inside the class but outside of a method?
[08:27:55] <wallbroken> yes, you told me that if they named in the same way, the one inside of a method will override the other on
[08:27:56] <wallbroken> e
[08:28:00] <deltab> instance attribute vs. class attribute
[08:28:02] <wallbroken> but that's the only difference?
[08:28:32] <wallbroken> i'm not talking about declaring it inside an instance
[08:28:39] <wallbroken> but i'm talking about the method declaration
[08:28:44] <KirkMcDonald> You said "inside a method."
[08:29:00] <wallbroken> yes, which is different than the instance. right?
[08:29:05] <KirkMcDonald> Which implies assigning to an attribute of self.
[08:29:12] <wallbroken> would you need a code example?
[08:29:16] <KirkMcDonald> Sure.
[08:30:56] *** Joins: causa-sui (~causasui@192.241.228.169)
[08:30:59] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:05] <wallbroken> https://dpaste.org/4G4M
[08:31:39] *** Quits: roro (roro@user/roro) (Ping timeout: 256 seconds)
[08:31:43] <BrenBarn> it's what everyone already said
[08:32:05] <BrenBarn> if you only ever read the value of the variable it won't really make much difference
[08:32:06] <KirkMcDonald> wallbroken: The second example is assigning to an instance attribute.
[08:32:06] <cluelessperson> wallbroken, https://gist.github.com/cluelessperson/e27891111e6f73daf30946085d0745d8
[08:32:13] *** Quits: rany (~quassel@user/rany) (Ping timeout: 256 seconds)
[08:32:50] *** Joins: rany (~quassel@user/rany)
[08:33:10] <wallbroken> KirkMcDonald: but also the first one
[08:33:20] <KirkMcDonald> wallbroken: No. The first one is assigning to a class attribute.
[08:33:36] <wallbroken> https://bpa.st/3HMQ
[08:33:38] <wallbroken> see this example
[08:33:50] <KirkMcDonald> Class attributes may be accessed from an instance.
[08:33:54] <wallbroken> you see that the 'a' var is instance bounded?
[08:34:05] <KirkMcDonald> But they still belong to the class.
[08:34:24] <wallbroken> what do you mean by "belong to the class" ?
[08:34:42] <KirkMcDonald> wallbroken: They are located in the class's attribute dictionary.
[08:35:37] <KirkMcDonald> In that example, when you assign to `foo1.a = 2`, then you are creating an instance attribute with the same name as the class attribute.
[08:36:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[08:36:20] *** Joins: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net)
[08:36:25] <KirkMcDonald> Accessing the attribute from that instance therefore finds the instance attribute. Accessing it from another instance, which does not have that instance attribute, finds the class attribute, as before.
[08:36:30] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[08:36:44] <cluelessperson> wallbroken, see my example. :D
[08:37:09] <oneforall2> hmm 3.10 doesn't have the nodejs.h any more ..
[08:37:13] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[08:37:34] <wallbroken> cluelessperson: yes, i was seeing it
[08:37:39] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[08:37:40] <cluelessperson> :D
[08:38:11] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 264 seconds)
[08:38:17] <wallbroken> cluelessperson: you want me to execute it?
[08:38:28] <BrenBarn> in Repiphany's example there are TWO attributes, a class attribute and an instance attribute
[08:39:11] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[08:39:28] <deltab> three? one on each instance, and the one on the class
[08:40:08] <deltab> print(Foo.a, foo1.a, foo2.a)
[08:40:27] <wallbroken> print(foo1.a, foo2.a) # 1 1
[08:40:30] <parv> cluelessperson, I was working on something similar :)
[08:40:35] *** Joins: black_13 (~jjosb@209.221.58.169)
[08:40:36] <wallbroken> who created the instance variables'
[08:40:38] <wallbroken> ?
[08:40:38] <oneforall2> whoops meabt node.h
[08:40:43] <wallbroken> there is no any constructor for t
[08:40:44] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[08:40:45] <wallbroken> it
[08:40:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:40:58] <black_13> can you "step" into the source of a module
[08:40:59] <wallbroken> foo1 and foo2 are two instance of Foo class
[08:41:24] <deltab> foo1.a = 2 created one of them
[08:41:32] <deltab> one of the instance attributes
[08:41:42] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[08:41:47] <wallbroken> well, so a constructor declaration inside the class is not mandatory?
[08:41:51] <cluelessperson> wallbroken, sure, it's harmless.
[08:42:04] <deltab> wallbroken: right
[08:42:23] <wallbroken> good, and is there some case in which it is needed?
[08:42:26] <BrenBarn> all of this was said already
[08:42:34] <BrenBarn> you can create an instance attribute any time you want just by assigning to it
[08:42:36] *** Quits: TechnoDelver (~TechnoDel@user/technodelver) (Read error: Connection reset by peer)
[08:42:46] <KirkMcDonald> wallbroken: By "constructor declaration," are you referring to an __init__ method?
[08:42:54] <deltab> yeah, but sometimes things need to be said more than once, or at least at the right time
[08:42:54] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[08:43:03] <wallbroken> KirkMcDonald: yes
[08:43:10] <KirkMcDonald> (Because, to be somewhat pedantic, that is neither a constructor nor a declaration.)
[08:43:25] <wallbroken> ok
[08:43:47] <wallbroken> then, it's not to repeat the same stuff for each instance
[08:43:53] <wallbroken> *to not
[08:43:57] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[08:44:26] <wallbroken> i discovered that you could call "self" whatever you like
[08:44:34] <deltab> right, and also to make sure it's done consistently
[08:44:35] <KirkMcDonald> Examples of the difference between a class attribute and an instance attribute may be more forceful when using a mutable object, like a list.
[08:44:36] <wallbroken> "Bob", "Jack"
[08:44:54] <deltab> wallbroken: yes, just like any function parameter
[08:44:54] <wallbroken> so it's not a Python keyword
[08:45:09] <KirkMcDonald> wallbroken: Correct, the name "self" is, strictly speaking, a matter of convention.
[08:45:15] <wallbroken> in Javascript there is "this" which has the same meaning
[08:45:23] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[08:45:26] <KirkMcDonald> But it's an extremely strong convention and it's best not to break it.
[08:46:11] <KirkMcDonald> "this" in JavaScript has its own particular meaning which may be analogous, but looking to hard at it means falling down a rabbit hole. JS is weird.
[08:46:19] <KirkMcDonald> s/to/too/
[08:46:36] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:46:43] <wallbroken> now the next step of my python training is "what is an abstract class and when it could be useful"
[08:47:24] <parv> I would like to call self a bauble but that is too long *ugh*
[08:48:24] <parv> wallbroken, Seriously? Your instruction material is going too fast it seems
[08:48:47] <wallbroken> why? is it an advanced topic?
[08:49:38] <BrenBarn> abstract classes are not as big a deal in Python as they are in some other languages
[08:49:38] <parv> wallbroken, Just look at the recent conversation here about instance, class, method, & variable scope
[08:49:41] <jinsun> not really, but it is something that is rarely needed so not covered in beginner materials
[08:50:38] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[08:50:56] <wallbroken> oh another question:
[08:50:57] <wallbroken> https://bpa.st/3HMQ
[08:50:58] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[08:51:05] <wallbroken> who created Foo class instance?
[08:51:05] <jinsun> because of duck typing you don't need an abstract class normally
[08:51:26] <parv> jinsun, "What is duck typing?"
[08:51:37] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:52:04] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[08:52:04] <jinsun> parv: https://docs.python.org/3/glossary.html#term-duck-typing
[08:52:27] <BrenBarn> wallbroken: what do you mean who created it?
[08:52:37] <deltab> wallbroken: instances of Foo are created in lines 3 and 4; class itself is created in line 1
[08:53:03] <BrenBarn> line 4 and 5 in that snippet
[08:53:16] <deltab> oh yeah, sorry
[08:53:22] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[08:53:25] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:55:56] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[08:56:31] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:56:54] <wallbroken> yes
[08:57:07] <wallbroken> but then you shoud use foo1 and foo2 to access it
[08:57:15] <wallbroken> but you are accessing it using Foo
[08:57:24] <wallbroken> Foo.a = 3
[08:57:36] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:57:38] <KirkMcDonald> I am not sure what "should" means, here.
[08:57:59] <KirkMcDonald> The class attribute exists; it is valid to access it.
[08:57:59] <wallbroken> foo1 = Foo()
[08:58:00] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[08:58:16] <wallbroken> here you are saying: create an instance of class Foo, and name it foo1
[08:58:29] <wallbroken> so the instance is foo1, and not Foo
[08:58:40] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[08:58:43] <parv> Why create a whole instance only to access|set class attribute?
[08:59:09] <cluelessperson> parv, duck typing allows you to pass in pretty much any object,  it will work as long as it has the attributes that are expected when it's run and accessed.   This tends to produce "runtime errors" if something goes wrong.
[08:59:11] <wallbroken> and you can edit the class attributes at runtime?
[08:59:24] <BrenBarn> yes
[08:59:27] <wallbroken> that's weird
[08:59:32] <deltab> wallbroken: yes, that's how python works
[08:59:38] <BrenBarn> the instance is foo1, but Foo still exists, it is the class
[08:59:39] <wallbroken> somebody here told: "see a class as a doctor form"
[08:59:53] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:59:55] <deltab> even the class is created at runtime, when line 1 runs
[08:59:58] <cluelessperson> parv, static typing typically requires that you literally define exactly what class things can take, rather than passing any object that would work, which often avoids those runtime errors.
[08:59:58] <wallbroken> so that's not entirely true
[09:00:01] <BrenBarn> Python has few restrictions on when/how you can access or change stuff, compared to some other OO languages
[09:00:04] <KirkMcDonald> Analogies are always imperfect.
[09:00:15] <wallbroken> because you can't modify the form when filling it
[09:00:17] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:00:24] <cluelessperson> wallbroken, I described seeing a class as a dentist office's form. :P
[09:00:34] <BrenBarn> like Python has minimal use of private/protected attributes or things like that
[09:00:38] *** Joins: wing (~wing@171.11.3.154)
[09:00:43] <BrenBarn> you can mostly just set whatever you want whenever you want
[09:01:00] <twomoon> is that a bad thing BrenBarn ?
[09:01:08] <BrenBarn> no, I think it's great
[09:01:14] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[09:01:22] <wallbroken> and in what case is useful to declare/access class attributes?
[09:01:28] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[09:01:40] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:01:46] <deltab> methods are class attributes, so they're shared by the isntances
[09:01:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[09:02:05] <cluelessperson> wallbroken, in my example I showed you, it was keeping a "singleton" count of the instantiated dogs.
[09:02:32] <parv> jinsun, cluelessperson, I had asked "What is duck typing" only because no definition had not been given yet (well, in last few hours).
[09:02:47] <wallbroken> yes, but if you do Foo.a = 5, and then you make an instance after changing it, all the newer instances will have fooN.a = 5 as a default parameter
[09:03:26] <deltab> yep, and the older ones
[09:03:30] <KirkMcDonald> wallbroken: The old instances will see the change as well, assuming they don't have an instance attribute with the same name as the class attribute.
[09:03:35] *** Quits: wing (~wing@171.11.3.154) (Client Quit)
[09:03:45] <cluelessperson> less "default" parameter, more a shared, via the class
[09:03:47] <wallbroken> ok
[09:03:54] <cluelessperson> Class variable, vs Instance Variable.
[09:04:02] <wallbroken> and that's an useful way of developing?
[09:04:07] <wallbroken> it's a good practice?
[09:04:18] <BrenBarn> it's not used so often
[09:04:20] <BrenBarn> class attributes that hold actual data (as opposed to things like methods) are not so common in Python
[09:04:36] <KirkMcDonald> wallbroken: Using class attributes is probably less common than using instance attributes.
[09:04:37] <cluelessperson> wallbroken, technically, methods are variables/attributes upon the class.
[09:04:50] <BrenBarn> and class attributes that hold non-constant data I would say are even less common
[09:04:55] <KirkMcDonald> wallbroken: Except for methods, which are, as mentioned, class attributes in and of themselves.
[09:05:09] <cluelessperson> wallbroken,    dir(dog1)  would show:    [bark, name]  etc.
[09:05:36] <KirkMcDonald> (But methods are also descriptors, and this is getting into a whole line of questioning that's probably not very relevant to the discussion at hand.)
[09:05:44] <wallbroken> ok, another different question: when you make var1 = 5, and then you make var1 = 'foo' in some next line, does Python will make some sort of implicit datatype conversion?
[09:06:02] <KirkMcDonald> wallbroken: No. The variable has no type associated with it. The object to which it is bound has a type.
[09:06:28] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:06:40] <wallbroken> so i do not care about which datatype the container must have?
[09:06:56] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 268 seconds)
[09:07:01] <KirkMcDonald> I mean, you the coder probably care about the types involved with the code you're writing.
[09:07:02] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[09:07:48] <cluelessperson> wallbroken, var1  is just a name,   the object in memory it points to is merely changed.
[09:08:12] <cluelessperson> wallbroken, all you're doing is assigning a different object to that name.
[09:08:27] <wallbroken> ok, so there is an implicit cust
[09:08:30] <deltab> that is, the binding of the name is changed, to refer to another object
[09:08:30] <wallbroken> cast
[09:08:30] <cluelessperson> wallbroken, which you might view by examining context with say:   globals(),  or locals()
[09:08:40] <KirkMcDonald> wallbroken: Nothing is cast. Casting isn't really a concept that applies to Python.
[09:08:55] <jinsun> (unless you are type hinting)
[09:09:08] <wallbroken> ok
[09:09:09] <KirkMcDonald> Well, sure, I suppose in this modern era there are static types.
[09:09:14] *** Joins: bindu (~bindu@user/bindu)
[09:09:25] <wallbroken> I'm using Visual Studio Code as editor. is a good one?
[09:09:26] <KirkMcDonald> But they're optional.
[09:09:30] <KirkMcDonald> wallbroken: Sure.
[09:09:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:09:41] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[09:10:06] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:10:13] <wallbroken> it does have fundamentals as: breakpoints, call stack, call hierarchy, quickwatch?
[09:10:45] <jinsun> if you install the extension from Microsoft then yes
[09:10:58] <wallbroken> they are tool to debug the code, very important
[09:11:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[09:11:27] *** Joins: fikran (~fikran@user/fikran)
[09:13:26] <BrenBarn> a lot of your questions seem to be based on concepts from other programming languages and I think you might have an easier time if you just try to learn Python and do things with and then you'll get a feel for how it works
[09:13:40] <BrenBarn> rather than trying to map Python's behavior onto concepts like "abstract class" and "implicit cast"
[09:14:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:15:17] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[09:15:27] <KirkMcDonald> Or "declarations."
[09:16:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:19:27] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:19:28] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[09:19:33] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:19:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:19:52] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Quit: Leaving)
[09:20:41] <wallbroken> and "Generics" does exist in Python?
[09:21:27] <InPhase> The better question is do non-generics exist?
[09:21:29] *** Quits: ogis (~Android@240d:1c:3d:9500:5919:6895:619f:79f4) (Read error: Connection reset by peer)
[09:21:29] *** Joins: ogis_ (~Android@240d:1c:3d:9500:5919:6895:619f:79f4)
[09:22:01] <KirkMcDonald> wallbroken: Python is dynamically typed.
[09:22:05] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Read error: No route to host)
[09:22:09] <KirkMcDonald> Generics are a concept in static typing.
[09:22:12] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[09:22:59] <KirkMcDonald> Though I suppose, more abstractly, if you think of "generics" to just mean "parameterized types," well, types are first-class objects in Python, so trivially, yes.
[09:23:07] *** Joins: vicfred (~vicfred@user/vicfred)
[09:23:17] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[09:24:09] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:24:25] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Ping timeout: 260 seconds)
[09:24:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:26:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:26:15] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:30:02] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 240 seconds)
[09:31:20] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:32:30] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[09:33:18] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[09:34:36] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[09:35:29] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[09:35:55] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[09:35:55] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 268 seconds)
[09:37:48] *** Joins: TJ- (~root@about/linux/staff/tj-)
[09:38:32] *** Parts: andai (~andai@ip26-92-214-87.adsl2.static.versatel.nl) ()
[09:41:28] *** Quits: binary011 (~binary01@192.110.171.216) (Ping timeout: 268 seconds)
[09:46:11] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[09:46:38] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:50:50] <wallbroken> an exercise i found is: "given a binary tree, print the right  side
[09:50:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[09:51:15] <wallbroken> i'm thinking about it
[09:51:49] <wallbroken> so if i move from the root node to the leaf, i will have two references to children leafs
[09:52:19] <rindolf> wallbroken: or fewer
[09:52:46] <wallbroken> yes, and if i get the maximum or minimum index of them, i'll get the right/left side node of each level
[09:53:28] <wallbroken> but the algorithm must depend of how the binary tree structure has been implemented?
[09:53:55] <wallbroken> i'm reading that a binary tree can be set in "preorder, inorder, postorder"
[09:55:35] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[09:56:02] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4d57:c15f:f877:c2ad) (Quit: Client closed)
[10:00:26] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[10:01:00] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[10:01:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:01:33] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[10:02:05] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:03:21] *** Joins: han-solo (~han-solo@user/han-solo)
[10:03:31] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[10:03:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:03:38] <rindolf> wallbroken: s/set/traversed/
[10:03:54] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:03:56] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:04:02] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Quit: leaving)
[10:04:31] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[10:04:31] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Client Quit)
[10:04:58] <oneforall2> so any reason node.h isn't wit  python3.10 ?
[10:04:59] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[10:05:04] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:05:51] *** Joins: txtsd (~txtsd@user/txtsd)
[10:06:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[10:06:20] *** Joins: binary01 (~binary01@192.110.171.216)
[10:07:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[10:07:28] *** Joins: mallkrampus (~mallkramp@207.45.82.184)
[10:07:41] *** Joins: mall_krampus (~mallkramp@207.45.82.186)
[10:07:52] *** Quits: mall_krampus (~mallkramp@207.45.82.186) (Remote host closed the connection)
[10:08:03] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[10:08:11] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[10:09:33] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[10:11:16] *** Joins: wing (~wing@171.11.3.154)
[10:11:16] <rindolf> oneforall2: what is 'node.h'?
[10:11:17] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:12:31] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:12:31] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[10:15:59] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[10:16:22] <jinsun> probably this https://github.com/python/cpython/blob/3.9/Include/node.h
[10:16:39] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:17:18] <jinsun> and it was removed here https://github.com/python/cpython/pull/21005
[10:18:04] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:18:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:18:48] <jinsun> oneforall2: so it was removed because it was part of the old parser and pep 617 said it will be removed in 3.10 https://www.python.org/dev/peps/pep-0617/#migration-plan
[10:18:55] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[10:19:09] <rindolf> jinsun: ah
[10:20:56] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 268 seconds)
[10:21:02] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[10:21:30] *** Quits: mallkrampus (~mallkramp@207.45.82.184) (Ping timeout: 260 seconds)
[10:22:37] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[10:23:16] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[10:26:47] *** Quits: wing (~wing@171.11.3.154) (Quit: Client closed)
[10:28:11] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[10:28:47] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:31:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:32:46] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[10:33:28] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:33:31] *** Joins: wing (~wing@171.11.3.154)
[10:33:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:34:03] *** Quits: wing (~wing@171.11.3.154) (Client Quit)
[10:34:24] *** Joins: mallkrampus (~mallkramp@89.238.150.156)
[10:35:19] *** Joins: causa-sui (~causasui@192.241.228.169)
[10:36:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:37:09] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:37:17] *** Joins: martums8 (~martums@user/martums)
[10:37:36] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[10:38:00] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[10:40:31] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 245 seconds)
[10:40:51] *** Quits: martums (~martums@user/martums) (Ping timeout: 256 seconds)
[10:40:52] *** martums8 is now known as martums
[10:41:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[10:41:46] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 245 seconds)
[10:42:38] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:42:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[10:42:50] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:43:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:45:33] *** Parts: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) ()
[10:45:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:50:41] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:1ef1:4848:76a4:a106)
[10:50:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[10:53:07] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:54:01] *** Joins: seednode (~seednode@user/seednode)
[10:55:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:56:51] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[10:59:01] *** Joins: sickdugongo (~sickdugon@user/sickdugongo)
[11:00:15] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[11:03:08] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[11:03:26] *** Joins: jay-m1261 (~jay-m@129.0.77.219)
[11:04:04] *** Joins: manti7 (~manti7@176.10.104.94)
[11:04:13] <cluelessperson> I'm trying to extend a class to modify some functionality
[11:04:25] <cluelessperson> but I can't seem to access self.__capture_buf.byteswap(True) from the subclass
[11:04:35] <cluelessperson> how do I fix this?
[11:04:56] <cluelessperson> yes, I'm using inheritance, it seems reasonable to in this case.
[11:05:20] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:05:42] * cluelessperson is reading about mangling
[11:05:57] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[11:06:52] *** Joins: bindu (~bindu@user/bindu)
[11:06:56] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[11:07:49] <KirkMcDonald> cluelessperson: __foo names invoke name mangling.
[11:07:50] *** Joins: zeden (~zeden@user/zeden)
[11:07:50] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[11:08:04] <KirkMcDonald> As a way of trying to provide "private" attributes.
[11:08:21] <cluelessperson> KirkMcDonald, well this complex camera class that does serial data bitbanging stuff, has a lot of them.
[11:09:03] <KirkMcDonald> cluelessperson: If you really want, you can just manually use the mangled name, which is just _ParentClassName__foo
[11:09:14] <cluelessperson> I'm extending it to enable async in it,  which is basially just doing  await asyncio.sleep(0); deep overriding one of its functions
[11:10:50] <cluelessperson> I need to sleep
[11:10:51] <cluelessperson> KirkMcDonald, thanks
[11:11:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[11:12:59] *** Joins: mven4 (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:13:34] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[11:13:40] *** Joins: teut (~teut@122.181.77.154)
[11:13:45] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[11:14:17] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[11:14:51] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[11:14:52] *** mven4 is now known as mven
[11:15:12] *** Joins: Valeria (~Valeria@user/valeria)
[11:16:53] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:16:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:17:31] *** Quits: ogis_ (~Android@240d:1c:3d:9500:5919:6895:619f:79f4) (Read error: Connection reset by peer)
[11:18:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:20:48] *** Joins: fikran (~fikran@user/fikran)
[11:21:22] *** Quits: jay-m1261 (~jay-m@129.0.77.219) (Ping timeout: 268 seconds)
[11:21:30] *** Joins: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob)
[11:22:03] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:22:53] *** Joins: jay-m1261 (~jay-m@129.0.77.220)
[11:23:04] *** Joins: Macuser (~Macuser@216.30.159.201)
[11:23:19] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[11:24:29] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[11:25:27] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f1df-7673-f276-83bb.res6.spectrum.com) (Quit: jarthur)
[11:27:08] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[11:27:50] *** Joins: ali1234 (~al@user/ali1234)
[11:28:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9763:cc0b:5eaf:ee4)
[11:28:40] *** Quits: Inline (~Inline@2a02:908:1252:7a80:9763:cc0b:5eaf:ee4) (Remote host closed the connection)
[11:30:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[11:30:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9763:cc0b:5eaf:ee4)
[11:30:25] *** Joins: djapo (~archangel@user/djapo)
[11:30:31] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[11:31:38] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:32:04] *** Joins: grooverman__ (~grooverma@177.95.12.14)
[11:34:09] *** Joins: upsala (~zcb@185.213.155.252)
[11:34:35] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 264 seconds)
[11:35:49] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:36:25] *** Joins: rsx (~dummy@ppp-188-174-153-157.dynamic.mnet-online.de)
[11:40:57] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[11:41:58] *** Joins: ArtfulDodger_ (~ArtfulDod@2a02-8440-631d-4167-78ba-13a3-5b05-4fb6.rev.sfr.net)
[11:42:38] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:42:59] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 264 seconds)
[11:44:49] *** Quits: ArtfulDodger (~ArtfulDod@2a02-8440-631c-b4d9-78ba-13a3-5b05-4fb6.rev.sfr.net) (Ping timeout: 268 seconds)
[11:47:18] *** Joins: KombuchaKip (~kip@192.252.230.5)
[11:47:22] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[11:47:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:51:34] *** Joins: tobybl (~tobybl@213.31.134.235)
[11:51:46] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[11:52:01] *** Joins: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb)
[11:52:02] <dontyouloveshort> hi
[11:52:42] <rindolf> dontyouloveshort: meow
[11:52:49] <dontyouloveshort> when you run: p = sub.Popen(('tcpdump', '-i', 'wg0', '-l', '-n', 'ip and udp and not port 53'), stdout=sub.PIPE, text=True)          and the interface is invalid, tcpdump prints: (SIOCGIFHWADDR: No such device)   but checking p.returncode immediately after that and it is None...why? shouldnt it be some minus value?
[11:53:39] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:54:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:54:58] *** Joins: kadir (~kadir@78.178.105.36)
[11:55:18] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[11:56:20] <wallbroken> when i create a python project, i just need to create a collection of class, right?
[11:57:23] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 264 seconds)
[11:58:30] <NeilRG> how do I find the first index of a Boolean numpy array that's true?
[11:58:53] <han-solo> dontyouloveshort: do a `p.wait(); p.returncode`
[11:59:00] <NeilRG> wallbroken, you just need one Python file
[11:59:11] <NeilRG> you don't need classes
[11:59:39] <wallbroken> for example in C# i use to have a thing called "solution", is a set of projects
[11:59:48] <wallbroken> each project has one o more class .cs file
[12:00:00] <wallbroken> in python it does not work that way?
[12:00:10] <dontyouloveshort> han-solo, in case the command is correct it should run for some time, wounldnt wait block then?
[12:00:13] *** Joins: kdc (~kdc@196.211.197.159)
[12:00:29] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[12:00:36] <Swayze> if you use visual studio you can still have solution files for python
[12:00:38] <dontyouloveshort> wallbroken, tried a tutorial on youtube?
[12:01:01] <wallbroken> dontyouloveshort: i'm doing another programming tutorial
[12:01:28] <wallbroken> but when i start the python program, i should tell which is the main .py file?
[12:01:30] <NeilRG> wallbroken, you just make a Python file and put your code in.  You don't need anything else
[12:02:20] *** Joins: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb)
[12:03:19] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[12:03:23] <han-solo> dontyouloveshort: yes, .wait will block
[12:03:41] *** Joins: jbox (~jbox@user/jbox)
[12:03:42] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Ping timeout: 260 seconds)
[12:04:02] *** Joins: causa-sui (~causasui@192.241.228.169)
[12:04:34] <dontyouloveshort> han-solo, so how do you combine that with a long running process where you do not know when it will exit?
[12:04:36] *** Joins: palasso (~palasso@user/palasso)
[12:04:39] <han-solo> dontyouloveshort: i'm assuming, if tcpdump fails, you won't want the brlow lines to be executed ?
[12:04:46] <dontyouloveshort> right
[12:04:51] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[12:05:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:05:18] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[12:05:20] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:05:48] *** Joins: seednode (~seednode@user/seednode)
[12:06:11] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[12:06:51] *** Joins: upsala (~zcb@185.213.155.252)
[12:07:48] *** Quits: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb) (Quit: Client closed)
[12:07:53] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[12:08:08] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:09:16] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[12:09:24] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (Quit: < debdrup> What is this /quit thing?)
[12:09:34] *** Joins: vishwin60 (~brioux@pool-108-36-200-79.phlapa.fios.verizon.net)
[12:10:27] *** Joins: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb)
[12:11:15] *** Quits: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb) (Client Quit)
[12:11:26] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[12:11:56] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[12:11:57] <han-solo> dontyouloveshort: mm, lemme check
[12:12:59] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:13:01] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:1ef1:4848:76a4:a106) (Ping timeout: 245 seconds)
[12:13:55] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[12:14:33] *** Joins: alzgh (~alzgh@user/alzgh)
[12:14:53] <han-solo> dontyouloveshort: maybe an ugly solution, but you could `.wait(timeout=some_reasonble_seconds)` and catch the `subprocess.TimeoutExpired` to see if it is still alive
[12:15:08] *** Joins: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb)
[12:15:14] <han-solo> if yes, then continue, otherwise exit ?
[12:15:23] <dontyouloveshort> let me try
[12:15:59] *** Quits: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb) (Client Quit)
[12:16:07] <dontyouloveshort> but that would stop my code immediately after it received some packets
[12:16:33] <dontyouloveshort> maybe its better to check p.returncode a few times until it is not None
[12:16:41] <dontyouloveshort> and then set some global variable or exit
[12:17:37] *** Joins: wing (~wing@223.104.105.134)
[12:18:35] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:20:02] *** Quits: mallkrampus (~mallkramp@89.238.150.156) (Ping timeout: 256 seconds)
[12:21:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[12:22:08] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[12:22:24] *** Joins: spithash (~spithash@user/spithash)
[12:23:23] <han-solo> dontyouloveshort: https://bpa.st/ZNHA # i was thinking something like this
[12:23:44] <han-solo> i'm not clear how that would stop the code
[12:24:14] <han-solo> i don't see any mention of number of packets to capture in teh tcpdump option, but maybe i'm not clear on this
[12:24:32] *** Quits: wing (~wing@223.104.105.134) (Quit: Client closed)
[12:25:41] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:26:00] *** Joins: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb)
[12:26:07] *** Parts: wing (~wing@2409:8945:6f:a32a:d576:3452:2fda:3deb) ()
[12:26:15] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[12:26:47] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[12:27:12] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:27:26] *** Joins: spithash (~spithash@user/spithash)
[12:28:46] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[12:29:16] *** Joins: rendar (~rendar@user/rendar)
[12:29:22] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[12:30:07] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Client Quit)
[12:30:39] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[12:32:10] *** Joins: kosh (~kosh@user/kosh)
[12:34:08] <dontyouloveshort> han-solo, so in case it is running it would not wait for 2 seconds but return immediately?
[12:34:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:34:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:34:33] *** Joins: mallkrampus (~mallkramp@89.238.150.158)
[12:34:45] <han-solo> it would wait for 2 seconds, but you can put a reasonable limit
[12:35:20] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 256 seconds)
[12:35:35] <han-solo> you wanted to make sure tcpdump runs, then only do the rest of the things, right ?
[12:37:09] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:32ce:3d23:ed7d:a5c1)
[12:37:35] <queue[m]> ez
[12:39:06] <wallbroken> there are some exercises to train myself in developing?
[12:39:30] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[12:39:36] <queue[m]> https://www.toptal.com/developers/hastebin/vexuwinose.bash
[12:39:39] <wallbroken> for example what if i want to implement some api rest http server?
[12:39:46] <queue[m]> bash to capture packets at a certain level
[12:40:16] <han-solo> wallbroken: https://packaging.python.org/tutorials/packaging-projects/
[12:41:43] *** Quits: jemark (jemark@triton.blinkenshell.org) (Changing host)
[12:41:43] *** Joins: jemark (jemark@user/jemark)
[12:42:11] <han-solo> wallbroken: https://fastapi.tiangolo.com/tutorial/bigger-applications/#an-example-file-structure # that seems a fine structure
[12:42:25] *** Joins: Brocker (~NoBody@user/brocker)
[12:42:38] *** Quits: jemark (jemark@user/jemark) (Quit: leaving)
[12:42:49] <han-solo> but you don't need to nest if you don't have much, just a single file may even do
[12:43:18] <han-solo> i have seen people write single file flask app :)
[12:43:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:43:52] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-161.hsi5.kabel-badenwuerttemberg.de)
[12:45:21] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[12:45:58] *** Joins: jemark (jemark@user/jemark)
[12:46:13] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[12:47:28] <dontyouloveshort> han-solo, yes...maybe if that check would only be done once it would be "smoother"
[12:47:33] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:47:54] <han-solo> it is only once right ?
[12:48:09] <dontyouloveshort> let me re read that code, one second
[12:48:56] <dontyouloveshort> in my case it is run in a producer thread and should run "longer"
[12:49:16] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Ping timeout: 245 seconds)
[12:50:38] <dontyouloveshort> han-solo, code looks terrible at the moment, but this is what i got so far: https://bpa.st/R3GA
[12:53:06] <han-solo> i'm not sure if you need the threads...lemme see
[12:53:35] <wallbroken> han-solo: i'm training myself on hackerrank
[12:53:39] <han-solo> to clarify, you start tcpdump, read the packets, parsers some info and put the parsed fields into db right ?
[12:55:08] *** Quits: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[12:55:35] *** Joins: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob)
[12:56:14] *** Quits: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[12:56:43] *** Joins: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob)
[12:56:44] <wallbroken> if __name__ == '__main__':
[12:56:46] <wallbroken> what is it?
[12:57:09] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:59:47] *** Quits: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[13:00:08] *** Joins: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob)
[13:03:35] <leduyquang753> Check if the script is being directly executed rather than included as a module.
[13:03:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:04:09] *** Quits: ihaveamac_ (~ihaveamac@ihaveahax.net) (Quit: fail)
[13:05:42] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[13:07:47] <wallbroken> what does it mean "included as a module" ?
[13:07:57] <leduyquang753> `import module`.
[13:10:40] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:10:42] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[13:11:10] <han-solo> dontyouloveshort: https://bpa.st/G5DA # something like this
[13:11:16] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-30a6-7d52-2aa5-6940.fixed6.kpn.net)
[13:11:34] <dontyouloveshort> han-solo, have to look at that later, need to go out
[13:11:35] <dontyouloveshort> thanls
[13:11:54] *** Quits: Inline (~Inline@2a02:908:1252:7a80:9763:cc0b:5eaf:ee4) (Quit: Leaving)
[13:12:08] <NeilRG> could someone remind me what the modern logging libraries are in Python?
[13:12:20] <han-solo> np
[13:13:20] <NeilRG> nm I was looking for structlog
[13:13:52] <kosh> I just use the default logging built into python
[13:14:59] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[13:16:42] *** Quits: jay-m1261 (~jay-m@129.0.77.220) (Ping timeout: 256 seconds)
[13:17:00] *** Quits: uuair_ (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:17:18] *** Joins: uuair (~quassel@user/uuair)
[13:17:18] *** Quits: uuair (~quassel@user/uuair) (Client Quit)
[13:17:18] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[13:18:40] *** Joins: uuair (~quassel@user/uuair)
[13:18:50] *** Quits: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[13:20:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:21:44] *** Quits: kadir (~kadir@78.178.105.36) (Quit: WeeChat 3.3)
[13:22:27] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[13:23:12] *** Joins: vit (~vit@chello085216193138.chello.sk)
[13:24:38] <NeilRG> how do I unlink an editable install?
[13:24:44] <NeilRG> in an environment
[13:24:49] <NeilRG> pip show shows it
[13:24:53] <NeilRG> but I can't make it forget it
[13:25:11] <jinsun> pip uninstall?
[13:26:29] <NeilRG> jinsun not working!
[13:26:37] <NeilRG> says it's not installed
[13:26:40] <NeilRG> but I can import it
[13:27:41] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[13:27:53] <jinsun> check your sys.path and the package.__file__
[13:28:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:28:28] <NeilRG> jinsun, the package.__file__ points to a local file on my drive because the package was installed as an editable install
[13:28:48] <NeilRG> oh
[13:28:53] <NeilRG> sys.path looks like it
[13:28:59] <NeilRG> what populates sys.path?
[13:30:09] *** Joins: fikran (~fikran@user/fikran)
[13:30:28] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[13:30:52] *** Quits: delvian (~delvian@41.13.254.173) (Quit: Leaving)
[13:31:41] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[13:31:47] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[13:32:15] <NeilRG> jinsun, okay, you got it, it was a pth file in my site-packages that was pointing to the folder
[13:32:29] <NeilRG> easy-install.pth
[13:33:06] *** Joins: greedom (~greedom@x59cc994c.dyn.telefonica.de)
[13:33:17] <jinsun> okay yeah pth files are one way to get stuff added to sys.path magically https://docs.python.org/3/library/site.html has details
[13:34:10] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[13:34:13] *** Joins: MikZyth (~MikZyth@host-174-157-66-217.spbmts.ru)
[13:34:41] <jinsun> but that pth was probably created by pip, not sure why it forgot about that
[13:40:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:40:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:19] *** Joins: node1 (~node1@user/node1)
[13:43:23] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:45:00] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:45:00] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:45:28] *** Joins: kcrk (~kcrk@user/kcrk)
[13:45:45] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[13:46:03] *** Joins: Inline (~Inline@2a02:908:1252:7a80:b442:91f8:4666:206e)
[13:46:10] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[13:46:51] *** Quits: greedom (~greedom@x59cc994c.dyn.telefonica.de) (Remote host closed the connection)
[13:47:17] <bjs> jinsun: how did you install it and how are y ou trying to uninstall it?
[13:47:53] *** Joins: greedom (~greedom@x59cc994c.dyn.telefonica.de)
[13:49:14] *** Joins: thevishy (~thevishy@2405:201:f005:c04c:8449:f950:f9ed:a38c)
[13:49:33] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[13:51:54] <jinsun_> bjs: NeilRG  is trying to uninstall it, I'm just guessing things
[13:52:03] <bjs> Uh sorry
[13:52:10] <bjs> NeilRG: how did you install it and how are y ou trying to uninstall it?
[13:52:42] *** Quits: trashcatt_ (~trashcatt@znc.trashcat.xyz) (Quit: ✖_✖)
[13:53:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[13:53:04] <NeilRG> bjs, I installed it in editable mode, and it was messing up my poetry environment
[13:53:15] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:53:18] <bjs> NeilRG: you used pip to install it? or poetry? and what command did you actually run?
[13:53:33] <NeilRG> bjs, I used pip install -e
[13:53:44] <bjs> NeilRG: -e requires an argument...
[13:53:49] <bjs> I assume you passed . ?
[13:53:55] <NeilRG> yes, pip install -e path/to/package
[13:54:03] <bjs> okay no you didn't pass .
[13:54:05] <NeilRG> bjs no, I passed the path to the package
[13:54:19] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:54:19] <NeilRG> nope
[13:54:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[13:54:50] <NeilRG> (you don't need to install the local package in editable mode when you're using poetry)
[13:55:18] <bjs> NeilRG: and how are you uninstalling it?
[13:55:27] <NeilRG> pip uninstall package-name
[13:56:05] *** Quits: AnimalFarmPig (~quassel@catv-176-63-2-129.catv.broadband.hu) (Changing host)
[13:56:05] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[13:56:18] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[13:56:22] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[13:57:01] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:57:29] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[13:58:04] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:59:11] *** Joins: m13 (~ian2@102.167.237.248)
[13:59:31] *** Quits: m13 (~ian2@102.167.237.248) (Quit: WeeChat 3.3)
[13:59:59] <bjs> NeilRG: huh,  can you make like a little example/terminal output so we can see what happened
[14:01:50] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:01:51] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[14:02:43] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[14:02:44] <NeilRG> bjs https://bpa.st/U4CQ
[14:03:12] <bjs> NeilRG: what is pipi and pipun?
[14:03:47] <NeilRG> pip install and pip uninstall
[14:04:12] <bjs> NeilRG: like, your own shell aliases?
[14:04:21] <NeilRG> yes
[14:04:27] <ChrisWarrick> >  /home/neil/.cache/pypoetry/virtualenvs/cmm-tspD8tmv-py3.9
[14:04:32] <ChrisWarrick> it looks like you have a bit of a mess here?
[14:04:52] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[14:04:59] <ChrisWarrick> also, could you try without the aliases?
[14:05:44] <NeilRG> ChrisWarrick, the aliases don't matter, and why would that be a mess?
[14:05:47] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[14:05:55] <ChrisWarrick> NeilRG: I don’t know if your aliases matter.
[14:06:07] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[14:06:08] <ChrisWarrick> NeilRG: What if your aliases happen to lead to different `pip`s?
[14:06:09] <NeilRG> ChrisWarrick, they're just noglob pip install and noglob pip uninstall
[14:06:18] <NeilRG> they're literally "pip"
[14:06:26] <NeilRG> and the pip is the pip in the venv
[14:06:36] <ChrisWarrick> NeilRG: poetry’s virtualenvs are meant to be used by poetry only
[14:06:43] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:06:54] <NeilRG> ChrisWarrick, that's right, but poetry doesn't yet have a way to do an editable install
[14:06:59] <NeilRG> therefore, I call pip -e
[14:07:12] <NeilRG> pip install -e
[14:07:22] *** Joins: mossman93 (~quassel@user/mossman93)
[14:07:27] <NeilRG> you would think that pip uninstall would be able to reverse that
[14:07:50] <rendar> if i have b'hello\n' how can i strip the latest \n? i don't have strip() with binary data
[14:08:06] <ChrisWarrick> NeilRG: typically it would be able to do that
[14:08:19] <ChrisWarrick> NeilRG: that’s why I’m suspecting `pip`s for different pythons
[14:08:37] <NeilRG> ChrisWarrick, you could try it on your system?  I just checked my aliases
[14:08:46] <ChrisWarrick> NeilRG: could you pastebin the output of:  python -m pip version; python -m pip uninstall tjax
[14:09:01] <NeilRG> install poetry, make a venv, pip install -e another project locally and uninstall it
[14:09:03] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[14:09:16] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[14:09:20] <The-Compiler> rendar: why not?
[14:09:23] <han-solo> rendar: pretty sure, string binary or text have a strip
[14:09:28] *** vishwin60 is now known as vishwin
[14:09:32] <rendar> The-Compiler, TypeError: a bytes-like object is required, not 'str'
[14:09:44] <han-solo> b'\n'
[14:09:45] <NeilRG> ChrisWarrick, what's python -m pip version? says unknown command
[14:09:47] <ChrisWarrick> rendar: don’t call str.strip like that
[14:09:50] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[14:10:00] <ChrisWarrick> NeilRG: --version, sorry
[14:10:04] <rendar> b'ee\n'.strip("\n") ...ok han-solo got the problem, it's b'\n'
[14:10:04] <NeilRG> oh -V
[14:10:12] <NeilRG> pip 21.3.1 from /home/neil/.cache/pypoetry/virtualenvs/cmm-tspD8tmv-py3.9/lib/python3.9/site-packages/pip (python 3.9)
[14:10:22] <han-solo> rendar: yeah, but not sure one would strip binary data as ChrisWarrick said
[14:10:27] <The-Compiler> rendar: yeah, doesn't make sense to strip a string away from bytes
[14:10:31] *** Joins: causa-sui (~causasui@192.241.228.169)
[14:10:39] <NeilRG> WARNING: Skipping tjax as it is not installed.
[14:11:07] <ChrisWarrick> NeilRG: is there anything tjax related in  ls -la /home/neil/.cache/pypoetry/virtualenvs/cmm-tspD8tmv-py3.9/lib/python3.9/site-packages?
[14:11:14] <rendar> it makes sense for my experiment: i'm typing chunks of data in stdin, and i have to press return to make the shell send data to the sub process stdin, which will include a trailing \n, that i don't wnat
[14:11:30] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:11:41] *** Joins: plastico (~plastico@neomutt/plastico)
[14:12:01] *** Quits: rany (~quassel@user/rany) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:13:05] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[14:13:21] <NeilRG> ChrisWarrick, Yes, in easy-install.pth, there's a path /home/neil/src/tjax
[14:13:30] <NeilRG> when I remove that, tjax is uninstalled
[14:13:43] <NeilRG> now that I know it's there, I know how to undo the editable install
[14:13:49] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[14:13:53] <NeilRG> just weird that pip doesn't know how to undo its mess
[14:14:17] <ChrisWarrick> NeilRG: there’s typically also an .egg-link file
[14:15:04] <The-Compiler> rendar: yes, I was explaining why your original code with '\n' rather than b'\n' didn't work
[14:15:09] <NeilRG> ChrisWarrick, I don't see one
[14:15:18] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[14:15:21] <ChrisWarrick> NeilRG: perhaps that’s why it can’t uninstall
[14:15:26] <rendar> The-Compiler, ok
[14:15:44] <ChrisWarrick> NeilRG: those files appear at least in “classic” setup.py-based projects
[14:15:44] <NeilRG> ChrisWarrick, that's really not an "excuse" since pip was the one who installed tjax
[14:15:50] <NeilRG> it's clearly a bug
[14:16:02] <NeilRG> ChrisWarrick, yes, but tjax has no setup.py
[14:16:27] <NeilRG> https://github.com/NeilGirdhar/tjax
[14:16:44] <NeilRG> you can probably do this on your system to be honest
[14:16:58] <NeilRG> git clone it, pip install -e that path, and see if you can uninstall it?
[14:18:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:18:11] *** Joins: rany (~rany@user/rany)
[14:19:57] *** Quits: rany (~rany@user/rany) (Client Quit)
[14:20:33] <bjs> NeilRG: your setup.cfg doesn't seem to have a name for the package
[14:20:42] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:20:47] <NeilRG> bjs, thanks!  I was wondering why it was being named UNKNOWN
[14:20:49] <bjs> do you see tjax in `pip list` ?
[14:21:02] <bjs> Oh I missed the fact you said it was called UNKNOWN
[14:21:07] *** Joins: defiant (~defiant@user/defiant)
[14:21:12] <bjs> Yeah, you need to give your pip packages a name
[14:21:37] <NeilRG> bjs, it wasn't, but it keeps building an egg inside the the local package called UNKNOWN
[14:21:46] <NeilRG> how do I give it a name?
[14:22:11] <menace> hey, i just had a look at the multiprocessing module in python and i kinda think it does not what i need. i want to have a process which listens on a port, gets some data, sends it to another process, which transforms it, and sends it to another process which sends it over the network again. is there perhaps a better fitting module for that?
[14:22:17] <NeilRG> why isn't it using the name from pyproject.toml
[14:22:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:22:19] <NeilRG> ?
[14:22:30] <NeilRG> this all seems like a pip bug to be honest
[14:22:44] *** Joins: nomic (~nomic@185.192.69.224)
[14:22:56] *** Quits: rsx (~dummy@ppp-188-174-153-157.dynamic.mnet-online.de) (Ping timeout: 260 seconds)
[14:22:58] <menace> multiprocessing more seems like worker processes, i would need like communication between long running processes (and perhaps worker processes...)
[14:23:13] <bjs> NeilRG: it looks like the name is only under the [tool.poetry] section
[14:23:19] <bjs> so why would pip see it
[14:23:49] <NeilRG> bjs, I don't understand build systems.  I thought pip would use  build-backend = 'poetry.core.masonry.api'
[14:23:52] <NeilRG> which it does see
[14:24:12] <NeilRG> doesn't it need to get the dependencies too?
[14:24:18] <NeilRG> and those are under [tool.poetry.dependencies]
[14:24:25] <nyuszika7h> when using (?x) in a regex, is there any way to escape # characters to not treat them as a comment? \# doesn't seem to work
[14:24:42] <ChrisWarrick> menace: is the network protocol already defined?
[14:25:08] <parv> nyuszika7h, You could use /[#]/
[14:25:18] <menace> ChrisWarrick, yes
[14:25:25] <jinsun> NeilRG: why do you have both setuptools and poetry btw in requires = ['setuptools', 'poetry_core>=1.0']
[14:25:34] <parv> ... a single letter character class
[14:25:54] <ChrisWarrick> menace: what is it?
[14:26:36] <nyuszika7h> <NeilRG> and those are under [tool.poetry.dependencies] <-- that's a poetry-specific thing that pip won't try to parse
[14:26:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[14:26:47] <nyuszika7h> requires setuptools is/was a workaround for a poetry bug I think
[14:26:59] <nyuszika7h> where it would try to *remove* setuptools when something depended on it and you already had it installed
[14:27:12] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:27:27] <NeilRG> jinsun, that's what I found on the poetry issue tracker
[14:27:27] *** Joins: rany (~rany@user/rany)
[14:27:44] *** Joins: rsx (~dummy@ppp-188-174-135-48.dynamic.mnet-online.de)
[14:27:46] <jinsun> okay some weird workaround
[14:27:52] <NeilRG> nyuszika7h, yes, but I assumed that the backend would be called by poetry, and the backend would parse it
[14:27:57] <menace> the ingoing is SMTP the outgoing is HTTP. it's more of a learning project for me and i try to see which libraries and methods are working in which way (so please do not judge it on usefulness :D)
[14:28:05] <NeilRG> nyuszika7h, after all pip does ultimately need to know the dependencies
[14:28:15] *** Quits: gitly (~gitly@85.255.236.225) (Quit: WeeChat 3.3)
[14:29:09] <nyuszika7h> that's true, I actually have no idea how pip handles a poetry project with no requirements.txt/setup.py/setup.cfg and just pyproject.toml
[14:29:21] <nyuszika7h> since I use poetry for basically everything now, never needed to try the reverse
[14:29:45] <ChrisWarrick> menace: it would probably be the easiest and sanest to use asyncio + libraries for smtp and http, or to use twisted
[14:29:57] *** Quits: rany (~rany@user/rany) (Client Quit)
[14:30:03] *** Joins: michaelis (~michaelis@193.183.209.17)
[14:30:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:30:21] <jinsun> nyuszika7h: I think it works just like how NeilRG is thinking, pip downloads poetry_core and lets it do the building
[14:30:22] *** Joins: rany (~rany@user/rany)
[14:30:37] *** Joins: Alleria (~textual@user/alleria)
[14:30:58] *** Parts: michaelis (~michaelis@193.183.209.17) ()
[14:31:16] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:31:18] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[14:31:28] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[14:31:33] <NeilRG> I'm going to file a bug report
[14:32:00] <nyuszika7h> parv: [#] worked, thanks
[14:32:04] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-161.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[14:32:09] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[14:32:09] <parv> nyuszika7h, Aye
[14:32:11] *** Joins: trace987 (~trace@91.66.153.65)
[14:32:15] <nyuszika7h> I was about to try \x23 but this is cleaner
[14:32:41] *** Joins: gitly (~gitly@85.255.236.225)
[14:33:13] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[14:33:26] *** Joins: spithash (~spithash@user/spithash)
[14:34:40] <menace> hm, i will have a look at that
[14:36:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 268 seconds)
[14:36:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:36:39] <NeilRG> https://github.com/pypa/pip/issues/10659
[14:36:47] <NeilRG> could anyone try to reproduce this?
[14:36:58] *** Quits: MikZyth (~MikZyth@host-174-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[14:37:04] *** Joins: alex11 (~alex11@user/alex11)
[14:37:06] <NeilRG> should take about 1min
[14:37:13] <NeilRG> maybe less if you're a fast typer :)
[14:38:34] *** Joins: node1 (~node1@user/node1)
[14:38:52] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Remote host closed the connection)
[14:39:17] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:39:26] *** Quits: gitly (~gitly@85.255.236.225) (Ping timeout: 256 seconds)
[14:39:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:39:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:40:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[14:40:09] <jinsun> I was trying but I found out it is linux only and 3.9 version max, and I have 3.9 on windows and 3.10 on linux :(
[14:41:00] *** Joins: gitly (~gitly@148.252.129.87)
[14:41:33] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[14:41:40] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:41:46] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 245 seconds)
[14:41:57] <NeilRG> jinsun, you could just edit the pyproject?
[14:42:00] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[14:43:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[14:44:32] *** Joins: EGH (~EGH@185.25.195.104)
[14:45:08] *** Quits: qpdb (~qpdb@user/qpdb) (Quit: WeeChat 3.1)
[14:45:10] <jinsun> NeilRG: oh would it actually work on 3.10? let me see. But then you should update your python = '>=3.7.1,<3.10' too
[14:45:28] <NeilRG> jinsun, I can't because jax still requires 3.9
[14:45:52] <NeilRG> jinsun, not sure if that will break your install, you could remove jax from the dependencies?
[14:46:08] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[14:46:39] <jinsun> okay so it would not work fine, have to remove jax also
[14:47:56] <NeilRG> jinsun, ok thanks
[14:48:14] <NeilRG> and optax
[14:48:17] <NeilRG> which depends on jax
[14:48:23] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[14:48:33] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:51:17] *** Joins: Celelibi (celelibi@user/celelibi)
[14:52:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:52:43] <NeilRG> I have to sleep
[14:52:58] <NeilRG> jinsun, if you get it working, would you mind confirming or denying on the issue tracker?  thanks
[14:54:00] *** Joins: Julian1988 (~Julian198@ip-95-223-70-164.hsi16.unitymediagroup.de)
[14:54:02] <jinsun> yeah if pip decides to install it
[14:55:34] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[14:55:48] *** _subopt is now known as subopt
[14:56:18] *** subopt is now known as _subopt
[14:56:22] *** Joins: humdrumcoffee (~humdrumco@88.97.110.231)
[15:01:32] *** Joins: death916 (~death916@user/death916)
[15:01:52] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Read error: Connection reset by peer)
[15:03:27] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[15:03:55] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[15:04:06] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[15:05:13] *** Joins: Atque (~Atque@user/atque)
[15:07:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[15:08:45] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:10:00] *** Joins: ogis (~Android@mp76f1fbc3.ap.nuro.jp)
[15:10:49] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:ae8e:62cc:a945:31eb)
[15:11:07] *** Joins: cheater (~Username@user/cheater)
[15:11:32] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 240 seconds)
[15:12:32] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:12:53] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:13:26] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[15:14:05] *** Joins: mei (~mei@user/mei)
[15:19:40] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 256 seconds)
[15:20:13] *** Joins: Trieste_ (T@user/pilgrim)
[15:20:20] *** Joins: e2m4n (~ezman@user/e2m4n)
[15:20:38] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 260 seconds)
[15:22:19] *** Joins: binary01 (~binary01@192.110.171.216)
[15:24:06] *** Trieste_ is now known as Trieste
[15:24:14] *** Quits: menace (~someone@user/menace) (Quit: menace)
[15:24:40] *** Joins: xardas (~xardas@149.233.51.127)
[15:27:18] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[15:27:33] <Julian1988> hey
[15:27:42] <nedbat> hey
[15:27:52] <Julian1988> could anyone take a quick look at this problem? https://bpa.st/OKJA
[15:28:06] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[15:28:21] <Julian1988> i have it working as intendet, but i am breaking my brain over a solution that does not require iterating
[15:29:07] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[15:30:04] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[15:30:26] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[15:30:34] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:33:26] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[15:34:06] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:34:12] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[15:35:42] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:04] *** Joins: wing (~wing@122.206.190.115)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:37:37] *** Quits: gloomy_desktop (~ldorigo@81.161.167.135) (Remote host closed the connection)
[15:38:47] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[15:39:31] *** Joins: fikran (~fikran@user/fikran)
[15:40:02] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:41:19] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:41:43] *** Joins: Naan (~naan@user/naan)
[15:42:38] <jinsun> NeilRG: so your package gets installed as UNKNOWN, and not tjax, I can reproduce that
[15:43:37] *** Joins: causa-sui (~causasui@192.241.228.169)
[15:43:41] <jinsun> NeilRG: but that is not a pip problem, because `pip uninstall UNKNOWN` works to uninstall it, it installed UNKNOWN not tjax
[15:44:09] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:44:36] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 256 seconds)
[15:44:42] <jinsun> NeilRG: and I think the name being wrong is probably more of a poetry problem than pip
[15:45:10] *** Parts: wing (~wing@122.206.190.115) ()
[15:46:26] *** Joins: cheater (~Username@user/cheater)
[15:47:06] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:48:34] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[15:49:18] *** Joins: han-solo (~han-solo@user/han-solo)
[15:50:14] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[15:50:58] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[15:51:25] *** Joins: ali1234 (~al@user/ali1234)
[15:51:54] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:52:08] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:52:40] *** Joins: jay-m1261 (~jay-m@129.0.77.220)
[15:53:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[15:53:31] *** Quits: anonymeowo (~anonymeow@107.189.14.18) (Quit: Konversation terminated!)
[15:54:15] *** Joins: anonymeowo (~anonymeow@107.189.14.18)
[15:55:46] *** Joins: Klinda (~superleag@user/klinda)
[15:57:09] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[15:58:26] *** Quits: humdrumcoffee (~humdrumco@88.97.110.231) (Ping timeout: 245 seconds)
[15:59:04] *** Quits: ogis (~Android@mp76f1fbc3.ap.nuro.jp) (Read error: Connection reset by peer)
[15:59:44] *** Joins: ogis (~Android@mp76f1fbc3.ap.nuro.jp)
[15:59:45] *** Quits: ogis (~Android@mp76f1fbc3.ap.nuro.jp) (Max SendQ exceeded)
[16:00:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:05:36] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[16:06:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:07:58] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[16:10:28] *** Quits: greedom (~greedom@x59cc994c.dyn.telefonica.de) ()
[16:11:27] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[16:12:11] *** Joins: xardas (~xardas@149.233.51.127)
[16:12:40] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[16:13:13] *** Joins: nomic (~nomic@185.192.69.224)
[16:13:35] *** Quits: nomic (~nomic@185.192.69.224) (Client Quit)
[16:15:24] *** Joins: bindu (~bindu@user/bindu)
[16:20:56] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 245 seconds)
[16:22:56] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:23:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:24:55] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[16:27:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:27:39] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[16:28:10] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:28:24] *** Quits: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f) (Read error: Connection reset by peer)
[16:29:01] *** Joins: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f)
[16:29:03] <wallbroken> __init__.py
[16:29:11] <wallbroken> what is it?
[16:29:32] <bjs> wallbroken: it's a file.  it means that the directory it is in is a Python package you can `import`
[16:29:47] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[16:29:50] *** Quits: onichomp (~onichomp@2806:264:4404:8301:d4a0:f29e:25f4:3b0f) (Read error: Connection reset by peer)
[16:29:52] <bjs> (and when you import the package, that __init__.py file is the one that gets run)
[16:29:57] *** Joins: guenhael1 (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099)
[16:30:03] <wallbroken> ok thanks
[16:30:25] <wallbroken> main.py?
[16:30:30] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[16:30:30] *** guenhael1 is now known as guenhael
[16:30:35] <bjs> wallbroken: someone called their file main.py
[16:30:43] <wallbroken> is just a custom name?
[16:30:46] <bjs> you can call your files whatever you want (so long as the name is a valid identifier)
[16:30:47] <bjs> yeah
[16:30:49] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[16:30:50] <wallbroken> ok
[16:30:56] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Quit: time to reboot)
[16:31:13] <wallbroken> https://fastapi.tiangolo.com/tutorial/bigger-applications/#an-example-file-structure
[16:31:21] <wallbroken> iìm reading this page
[16:33:13] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:33:54] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 260 seconds)
[16:35:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[16:35:48] *** Joins: pycurious (~Adium@user/pycurious)
[16:36:53] *** Quits: anonymeowo (~anonymeow@107.189.14.18) (Quit: Konversation terminated!)
[16:37:43] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:43] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[16:42:32] *** Joins: Helle (~helle@84.241.196.119)
[16:44:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:44:26] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-068.hsi5.kabel-badenwuerttemberg.de)
[16:44:41] <wallbroken> https://fastapi.tiangolo.com/tutorial/bigger-applications/#import-apirouter
[16:44:43] <wallbroken> @router
[16:44:47] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 264 seconds)
[16:44:47] <wallbroken> why the @ ?
[16:44:57] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:45:13] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[16:46:38] <han-solo> https://docs.python.org/3/glossary.html#term-decorator
[16:46:45] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:47:06] <wallbroken> it's for me?
[16:47:11] <han-solo> yes, sorry
[16:48:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:48:49] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:49:50] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[16:50:01] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[16:50:21] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[16:51:18] <bjs> wallbroken: the @ syntax applies a function to another function.  fastapi uses it to make it easier/nicer to use their library
[16:52:05] *** Quits: pwug (~pwug@user/pwug) (Remote host closed the connection)
[16:52:43] *** Joins: humdrumcoffee (~humdrumco@88.97.110.231)
[16:53:25] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[16:53:42] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[16:54:05] *** Joins: pwug (~pwug@user/pwug)
[16:54:13] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[16:54:34] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[16:54:54] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[16:58:46] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[16:58:51] *** Quits: humdrumcoffee (~humdrumco@88.97.110.231) (Ping timeout: 245 seconds)
[16:59:43] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[17:00:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:01:57] <wallbroken> i still don't understand why in some code i see: if __name__ == '__main__':
[17:03:17] <sazawal> wallbroken, Whatever is written under this syntax gets executed when you run your python script
[17:03:27] <jess> what's faster: a bitwise and or a dictionary lookup
[17:03:54] <sazawal> wallbroken, It helps not executing this part of the code when you are importing this script as a module in another script.
[17:04:16] <wallbroken> ok
[17:04:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:04:53] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.29) (Ping timeout: 264 seconds)
[17:05:05] *** Joins: causa-sui (~causasui@192.241.228.169)
[17:05:38] <jinsun> wallbroken: https://docs.python.org/3/library/__main__.html#module-__main__
[17:05:41] <bjs> jess: well it'll depend, but probably the bitwise operation
[17:05:51] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[17:06:17] <jess> alright. the situation is that i'm checking if a given IP is in a given CIDR
[17:06:50] <bjs> jess: using the ipaddress module?
[17:06:55] <jess> no
[17:07:23] <jess> so I'm doing what amounts to (psuedocode) `(int(127.0.0.1) & 0xFF << 32-8) == 127.0.0.0`
[17:07:56] <jess> https://github.com/jesopo/scpl/blob/e0f7022a86a9c72b390e1d6e7b64f666cf6cbbf6/scpl/parser/operands.py#L208
[17:08:30] <jess> wondering if it's worth caching the output of that &
[17:09:40] <jess> the above psuedocode is for "127.0.0.1 in 127.0.0.0/8" (the 8 being the `32-8` bit)
[17:10:07] <dav1d> I would never expect a dict lookup to be faster than a &
[17:10:29] <bjs> jess: it's probably not worth caching a single bitwise operation result here
[17:10:30] <jess> maybe i should get around to reading some of cpython
[17:10:57] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[17:11:07] <bjs> jess: the dictionary lookup does a dictionary lookup and the & does a bitwise and of the underlying integers.  What are you looking for/expecting to find in the source?
[17:11:26] <jess> well it was mostly a question of the complexity of allocating a new integer
[17:12:53] <bjs> dav1d: surely it depends on what you're &-ing and what you're dict looking-up-ing
[17:12:59] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 264 seconds)
[17:13:12] <dav1d> bjs, *on an integer type
[17:13:17] <bjs> dav1d: how big an integer? etc
[17:13:36] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:13:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:14:03] <bjs> jess: the difference is probably small enough that reading the cpython code won't help you decide either
[17:14:13] <jess> well, that's reassuring
[17:14:19] <bjs> jess: because well you'll see what you expect to see in the source: it'll do & on the numbers and make a new int
[17:14:31] <dav1d> what about a benchmark?
[17:14:36] <jess> i was mostly thinking that i don't know how dict lookups work
[17:15:01] <jess> so i dont know if they're going to be significantly more complex then allocation of a new integer
[17:15:04] <bjs> jess: it's a hashtable
[17:15:07] <dav1d> the hash operation for the key should already be more expensive
[17:15:17] <jess> i guess i don't know how hashtables actually work and i should look it up :p
[17:15:30] <jess> i've been spoilt by high level languages and didn't do comp sci
[17:15:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:15:59] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 264 seconds)
[17:16:00] <jess> and i assume hash keys are precomputed
[17:16:08] <bjs> jess: it's an array, and the hash() tells you where in the array to look. So you have to compute the hash of the number to do the lookup
[17:16:15] <jess> right
[17:16:34] <bjs> jess: well it's precomputed for the elements of the table sure (when inserted), but you need the hash when you ask to lookup as well
[17:16:34] <dav1d> + potential collissions + 1 equals check
[17:16:34] <jess> how does it know how big the array needs to be or does it expand when there's new keys
[17:16:43] <bjs> jess: like lists it expands
[17:16:59] <jess> interesting
[17:17:55] <jess> does that mean keys are recomputed when the dict changes
[17:17:59] <jess> for every element
[17:18:08] <bjs> jess: no
[17:18:08] *** Quits: jay-m1261 (~jay-m@129.0.77.220) (Read error: Connection reset by peer)
[17:18:26] <dav1d> on IP addresses you can probably make one big precomputed array which translates the lookup just into cache[ip]
[17:18:28] <bjs> the keys are just the objects, and their hashes are saved (the hashes dont/shouldnt change)
[17:18:28] <jess> say i have 2 items in a dict and their hash keys are 100 apart. do i have an array of 100?
[17:18:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:18:50] <bjs> jess: no, you have whatever size table you want underneath.
[17:18:54] <dav1d> jess, depends on the implementation, but no you wont
[17:18:59] <bjs> You can just wrap the hash around if you need to make it fit
[17:19:07] <dav1d> resizing becomes that more complex though
[17:19:09] <jess> oic
[17:19:16] <deniska> jess: hashes are (typically) long, then a modulo operation is used to make them fit
[17:19:17] <dav1d> and collissions
[17:19:24] <bjs> e.g. a hash(x) of 107 for a table of 100, you just put at location 7 instead or something
[17:19:36] <bjs> unless of course something else is already at location 7, in which case things get a bit complicated
[17:19:58] <jess> i assume at that point it compares the unmoduloed hashes of the two items
[17:20:04] <bjs> all this complexity makes dict lookups very fast,  but even just the first step of hashing the ip to lookup is probably more expensive than just doing the bitwise arithmetic
[17:20:08] <bjs> jess: yes
[17:20:18] <dav1d> collissions can be "solved" by a linked list at the end of every bucket, or smarter by "hoping" over filled indices/buckets
[17:20:20] <bjs> jess: and then compares the objects themselves
[17:20:31] <jess> ic
[17:20:38] <jess> that makes sense
[17:20:47] <bjs> if they're in the same location, and they have the same hash, and the key objects are equal, return the value object.
[17:20:57] <bjs> if not at the same location then you have some extra work to do to find it
[17:21:02] *** Joins: cheater (~Username@user/cheater)
[17:21:15] <dav1d> or you use a btree as a hashmap :p
[17:21:55] *** Joins: tomeaton17 (~tomeaton1@51.195.150.49)
[17:22:17] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[17:23:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:23:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:24:13] <jess> it turns out writing a compiler is a good way to figure out what you don't know
[17:24:23] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:24:40] <BCB> am I still silenced??
[17:24:44] <BCB> ok good
[17:25:57] *** Joins: humdrumcoffee (~humdrumco@88.97.110.231)
[17:26:49] <jinsun> BCB: it was for 30 seconds only
[17:29:25] *** Quits: rsx (~dummy@ppp-188-174-135-48.dynamic.mnet-online.de) (Quit: rsx)
[17:29:41] *** Joins: rsx (~dummy@ppp-188-174-135-48.dynamic.mnet-online.de)
[17:29:51] *** Joins: greedom (~greedom@x59cc994c.dyn.telefonica.de)
[17:30:15] *** Joins: schumaml (~schumaml@p200300e2ef31de0053c1821a43d17d29.dip0.t-ipconnect.de)
[17:30:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:30:48] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:31:05] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[17:32:14] *** Quits: humdrumcoffee (~humdrumco@88.97.110.231) (Ping timeout: 260 seconds)
[17:32:20] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:70a2:49f8:9d87:430a)
[17:32:25] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:33:26] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[17:33:44] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:33:57] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[17:38:26] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[17:39:38] *** Joins: binary01 (~binary01@192.110.171.216)
[17:41:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[17:41:11] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[17:41:36] *** Joins: kevr (~kevr@user/kevr)
[17:42:03] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[17:42:16] *** Joins: kevr (~kevr@user/kevr)
[17:42:20] * cluelessperson elects for composition
[17:42:32] <cluelessperson> BCB, sup
[17:46:10] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[17:47:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:47:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[17:48:04] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:48:25] *** Joins: lidless (sid523173@tinside.irccloud.com)
[17:48:47] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[17:48:52] *** Joins: fikran (~fikran@user/fikran)
[17:49:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:50:25] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:51:03] *** Joins: bindu (~bindu@user/bindu)
[17:51:15] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:51:34] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:52:29] *** Joins: binary01 (~binary01@192.110.171.216)
[17:52:58] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[17:53:21] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[17:54:07] *** Quits: gitly (~gitly@148.252.129.87) (Ping timeout: 265 seconds)
[17:55:30] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[17:55:56] *** Joins: gitly (~gitly@85.255.233.87)
[17:57:01] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[18:02:47] *** Joins: hel0 (~hel0@user/redrum88)
[18:03:55] *** Joins: yaalon_ (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:04:24] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[18:04:44] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[18:05:22] *** Joins: Klinda (~superleag@user/klinda)
[18:06:09] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:06:23] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 264 seconds)
[18:07:24] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[18:08:36] *** Joins: nyah (~nyah@94.6.71.219)
[18:09:11] *** Joins: korg815 (~korg815@user/korg815)
[18:10:15] *** Joins: adelfino (~adelfino@2800:21c1:c400:546:e1c1:7296:3944:664c)
[18:12:07] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:13:16] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:16:00] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[18:16:12] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:16:36] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[18:16:57] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[18:17:48] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 265 seconds)
[18:18:36] *** Joins: magla (~gelignite@55d41163.access.ecotel.net)
[18:19:37] *** Joins: weedmic (~weedmic@188.120.139.53)
[18:19:45] *** Joins: humdrumcoffee (~humdrumco@88.97.110.231)
[18:19:47] <lionslicer> grym: remember the program I sent you yesterday? I couldn't find an answer to that. Can you give me a hint? :P
[18:19:52] *** Quits: lacrymology (~lacrymolo@37.223.216.138) (Ping timeout: 256 seconds)
[18:20:09] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[18:20:18] <lionslicer> I have to store the highest numerical input an user has typed, but I can't use lists
[18:20:31] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[18:20:58] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Quit: my macbook has gone to sleep zzz)
[18:21:01] <lidless> lionslicer: that sounds like a crappy code test exercise
[18:21:14] <cluelessperson> lionslicer, highest_entered = 0;    if user_input > highest_entered: highest_entered = user_input
[18:21:48] <lionslicer> gotcha
[18:21:51] <lionslicer> lemme try that
[18:22:26] *** Joins: asa22 (~asa22@84.125.126.211.dyn.user.ono.com)
[18:22:44] <cluelessperson> i'm confused,   with numpy, I'm doing   array.tobytes() and writing that to a file, 0.raw
[18:23:02] <asa22> for a git with repos as portfolio to land a job, github or self hosted gitea? I prefer the second but maybe Im shooting myself in the foot
[18:23:40] <lidless> cluelessperson: you're overcomplicating it, unless the test requires you to write to a file
[18:23:55] <cluelessperson> then I'm attempting:    numpy.frombuffer(new_array, (80, 60), numpy.dtype("uint16");
[18:23:55] <vakera_pingveno> asa22: Can you mirror one to the other? Dunno if that's a thing, but that could be the answer.
[18:23:58] <lidless> cluelessperson: and that's the point of these exercises - to test your linear efficiency thinking
[18:24:07] <lidless> my brain is not linear so I'm bad with these.
[18:24:21] <cluelessperson> lidless, I'm working on something entirely different.
[18:24:26] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:24:34] <cluelessperson> numpy.reshape(frame, (80, 60))  but I get
[18:24:45] <cluelessperson> ValueError: cannot reshape array of size 1200 into shape (80,60)
[18:24:47] <cluelessperson> ---
[18:24:49] <lidless> I dunno why you're doing that. I don't have context. lionslicer's code made sense though
[18:24:57] <cluelessperson> the arrays I'm saving to .raw are 4800.
[18:25:36] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[18:25:39] <cluelessperson> lidless, I'm saving raw thermal camera images to raw files to load as frames to provide a fake camera stream
[18:25:43] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[18:25:45] <lionslicer> lidness, I just have to find a solution to this problem without using lists
[18:26:14] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:26:33] <cluelessperson> asa22, that's not a complete sentence?
[18:26:42] <cluelessperson> lionslicer, what problem
[18:26:52] <lidless> cluelessperson: I thought arrays and lists were synonymous in python so I'm confused
[18:27:08] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099) (Quit: guenhael)
[18:27:13] <asa22> cluelessperson wdym
[18:27:16] <lidless> wait am I mixing two peoples' chats?
[18:27:21] <cluelessperson> lidless, you haven't explained the problem at all, just that you need to avoid a general data type of "list"
[18:27:28] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:27:35] <lidless> n/m. I'm trying to help but I've been mixing yours and lionslicer's chat
[18:28:02] <cluelessperson> asa22, there's no reason you can't use github *and* gitea
[18:28:04] <lidless> IRC Cloud's GUI is not what I'm used to because it puts nicknames on separate lines
[18:28:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7c30-d6d4-cc96-be8a.res6.spectrum.com)
[18:28:15] <cluelessperson> that's dumb
[18:28:20] <lidless> yeah
[18:28:51] <asa22> cluelessperson I dont want to use github personally but I would if that were to improve my chances of getting my repos looked at when I apply for jobs
[18:28:58] <cluelessperson> a lot of poor UI writeups sacrifice screen space to make things look "pretty"
[18:28:58] <asa22> not sure if it makes a difference or not
[18:29:06] <cluelessperson> but pretty isn't wasting your time or screen.
[18:29:29] <cluelessperson> asa22, it doesn't, no idiot should judge you over using github vs gitlab vs gitea
[18:29:45] <cluelessperson> although gitea objectively requires slightly more skill to setup and host
[18:29:57] <asa22> ok good thx
[18:30:01] <lidless> I need to figure out how to link pytest to behave since AWS Device Farm doesn't support behave and will only run pytest.
[18:30:51] <lidless> cluelessperson: luckily it was easy to toggle re: nicks on their own line
[18:30:59] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[18:30:59] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 264 seconds)
[18:31:48] <cluelessperson> don't get me wrong, in design "prominence" is indeed a thing.  It makes sense to sacrifice screen space for new users so you can direct exactly where their eyes are looking, to highlight specific information.
[18:32:01] <cluelessperson> but once you know the tool, you don't need prominence, you need functionality and efficiency.
[18:32:19] <lidless> I've been a curses-IRC client person most of my life so.. yeah
[18:32:25] <lidless> https://stackoverflow.com/questions/41146633/how-to-integrate-behave-into-pytest
[18:32:26] <lidless> interesting
[18:32:42] <cluelessperson> So,  "getting started", makes sense to have:   START HERE, 1, 2, 3.   Wasting screen space.  Becaues that's all you want them to focus on.
[18:33:02] <cluelessperson> but adding space between lines in irc chat, is literally just a waste, and does nothing to improve readability.
[18:33:23] *** Quits: adelfino (~adelfino@2800:21c1:c400:546:e1c1:7296:3944:664c) (Quit: Leaving)
[18:33:27] <lidless> what would help is if I could set the line height
[18:33:38] <cluelessperson> it actually becomes detrimental when the oversized text / spacing cuts off lines, forcing me to manually scroll or search for more.
[18:34:01] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[18:34:03] <queue[m]> idk it depends on the setup, i like the discord style, kinda
[18:34:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:34:23] <queue[m]> discord/matrix/irccloud style text on https://
[18:34:29] <lidless> I like that style too. Not the client though
[18:34:31] <lidless> beast of a footprint
[18:34:40] <cluelessperson> it's a web browser in an app
[18:34:41] <queue[m]> which one
[18:34:45] <lidless> discord
[18:34:53] <lidless> it's like java and java had a baby java
[18:34:54] <queue[m]> ah yea i dont use that, i use matrix mostly
[18:35:12] <queue[m]> so i can have my own server
[18:35:21] <cluelessperson> discord actually achieves a nice ui design balance.
[18:35:31] <lidless> I've really tried to like matrix but I find it way too confusing
[18:35:32] <cluelessperson> they give you a bit of extra space, but largely aren't just "wasteful"
[18:35:38] <queue[m]> their inline youtube videos are tits
[18:35:47] <cluelessperson> the space is consistent, the design is fluid
[18:35:56] <queue[m]> discord is seamless but them not allowing you to have full control over your server feels dirty
[18:35:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:36:02] <cluelessperson> yes, it still wastes some space, but ultimately it isn't frustrating so I don't care.
[18:36:04] *** Joins: parv (~quass@user/parv)
[18:36:16] <cluelessperson> queue[m], yeah, tencent can screw right off.
[18:36:27] * cluelessperson is stuck with numpy.
[18:37:14] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:37:33] <queue[m]> id never use another server again if discord would allow me to use my own decentralized setup, i'd delete irc all together because that's all that is wrong with discord
[18:37:54] <lidless> IIRC Discord staff are pretty clear about "we own your data"
[18:38:03] <lidless> for better or worse
[18:38:15] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[18:38:16] <queue[m]> i just dont want people stealing my train of thought
[18:38:51] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:39:01] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Client Quit)
[18:39:18] <asa22> discord literally means the opposite of harmony
[18:39:18] <lidless> you could make a nice income if you solved that issue with internet communication
[18:39:27] <lidless> asa22: yeah shitty name
[18:39:35] <asa22> and they refuse to allow ppl to hide blocked people's messages
[18:39:47] <asa22> claiming that "the way discord is programmed doesnt allow for that"
[18:39:48] <asa22> lmao
[18:39:59] <asa22> they literally want to create discord amongst peopel
[18:39:59] <queue[m]> 'its a feature not a bug'
[18:40:28] <queue[m]> just imagine coming up with some ground breaking idea in what you think is a private discord
[18:40:29] <asa22> its not even a bug, it'd be easy to do they just refuse to do it and hide the real reason why
[18:40:35] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[18:40:37] <queue[m]> next think you know google is rolling out your idea
[18:40:45] <queue[m]> because they stacked up 20 teams overnight and got the job done
[18:40:50] <lidless> asa22: the fact it's evidently not easy to do... because they would've done it
[18:40:57] <lidless> says something about the codebase
[18:41:02] <cluelessperson> lidless, for worse.
[18:41:07] <lidless> lolyep
[18:41:09] <asa22> there is plenty of user made solutions
[18:41:25] <asa22> so its easy to do
[18:41:27] <lidless> but then they ban bots for reasons that only they know
[18:41:41] <lidless> like the discord plugin for weechat
[18:41:52] <lidless> they consider it a bannable "bot". or they did
[18:41:52] <queue[m]> i heard of them deleting peoples servers out of SE
[18:42:00] <asa22> whats SE
[18:42:08] <queue[m]> social engineering
[18:42:24] <asa22> not sure what u mean by SE in this context
[18:42:34] <lidless> can't really ban social engineering without banning discord
[18:42:38] <queue[m]> they would socially engineer the admins and get servers deleted
[18:42:45] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[18:42:46] <lidless> oh, I see
[18:42:47] <asa22> oh
[18:43:00] <asa22> like bad people convincing discord admins to delete servers
[18:43:02] <queue[m]> your server would be rm'd by accident and you just lost like 4-5k users however big u built it
[18:43:05] <queue[m]> yes
[18:43:05] <asa22> sure thats bound to happen
[18:43:25] <queue[m]> i dont like anyone having that my power over my environment
[18:43:34] <asa22> I wonder if they pay their admins
[18:43:44] <queue[m]> yea discord makes serious $
[18:44:02] <asa22> selling the data that is
[18:44:03] *** Joins: xkuru (~xkuru@user/xkuru)
[18:44:08] <queue[m]> but if you think about it, it doesnt take that many opers to run a network
[18:44:11] <asa22> because nitro doesnt cover costs im sure
[18:44:31] <queue[m]> you need about 3 people with various skillsets that mesh  together to run millions of users, nothing more
[18:44:55] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:45:01] <lidless> queue[m]: libera did well with the throng of users that fled from fednode
[18:45:02] <asa22> you need a lot of people to moderate stuff
[18:45:05] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[18:45:20] <queue[m]> i used to run a 5,000 user irc server by myself
[18:45:23] <queue[m]> its not hard to handle...
[18:45:30] <queue[m]> did it for 7 years
[18:45:33] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:45:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:45:55] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:45:59] *** Quits: asa22 (~asa22@84.125.126.211.dyn.user.ono.com) (Quit: Client closed)
[18:46:22] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:46:26] *** Joins: asa22 (~asa22@84.125.126.211.dyn.user.ono.com)
[18:46:30] *** Quits: mallkrampus (~mallkramp@89.238.150.158) (Ping timeout: 256 seconds)
[18:47:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:47:40] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[18:47:48] *** Joins: Roey (~Roey@user/Roey)
[18:48:00] *** Joins: MikZyth (~MikZyth@host-174-157-66-217.spbmts.ru)
[18:49:26] *** Joins: Viewday111 (~Viewday@user/viewday)
[18:49:28] <lidless> nice
[18:49:35] *** Joins: guenhael1 (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099)
[18:49:38] *** Quits: guenhael1 (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099) (Client Quit)
[18:49:38] <lidless> I was an oper on gothic.tx.us.dal.net back in the 90s lol
[18:50:05] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[18:50:11] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 264 seconds)
[18:50:38] <asa22> fednode
[18:50:41] <asa22> why that name
[18:50:55] <asa22> I know it was corrupt but didnt know anything about feds
[18:51:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[18:51:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:51:36] *** Viewday111 is now known as Viewday11
[18:51:42] <lidless> fed is hacktivist slang
[18:51:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[18:51:55] <lidless> and precisely because it's corrupt
[18:52:11] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099)
[18:52:14] <asa22> it means federal agent
[18:52:15] <asa22> doesnt it
[18:52:36] <lidless> yeah
[18:52:54] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[18:53:02] *** Quits: MikZyth (~MikZyth@host-174-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[18:53:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[18:54:17] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[18:54:22] <lidless> so pytest has its own bdd... hmm
[18:54:25] *** Joins: stef204 (~stef204@user/stef204)
[18:56:00] *** Joins: Balzy (~Balzy@host-87-14-134-32.retail.telecomitalia.it)
[18:56:32] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:56:49] <stef204> hi, just a user here not coding in python. I am wondering if this is the right channel to ask about tcl/tk systemside fonts in Linux.  Python apps using it are now displaying TINY font sizes system wide on menu items..... so my issue is system wide, running tk/tcl 8.6.12 on Linux
[18:56:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:57:02] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:57:24] *** Quits: asa22 (~asa22@84.125.126.211.dyn.user.ono.com) (Quit: Client closed)
[18:58:44] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[18:58:48] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Client Quit)
[18:59:03] <lidless> that's a tcl-tk thing. I don't know what drives it
[18:59:24] <lidless> I've seen that too and it's annoying
[18:59:32] *** Joins: Ivii (~Ivyy@2001:a61:13ad:1c01:9e15:ca69:8ccc:ec)
[18:59:35] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[18:59:36] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[18:59:41] *** Joins: white_snack (~white_sha@user/white-shadow/x-1132694)
[19:00:26] <han-solo> stef204: there seems to be #tcl, but not sure how active
[19:00:28] *** Joins: mallkrampus (~mallkramp@89.238.150.158)
[19:00:59] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[19:01:27] <stef204> lidless:yeah, really annoying
[19:01:37] <stef204> let me check that #tcl channel
[19:01:44] <stef204> might get lucky
[19:02:20] <lidless> stef204: It probably maps to the system default font
[19:02:22] *** Quits: sharperguy (~sharpergu@88.130.222.57) (Ping timeout: 256 seconds)
[19:02:52] *** Quits: magla (~gelignite@55d41163.access.ecotel.net) (Quit: Stay safe!)
[19:03:06] *** Quits: yaalon_ (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[19:03:24] <stef204> lidless:i think it must map to a non-existing font and not finding it fall back to some crappy font with a crappy font size, perhaps, but how to set it?
[19:04:20] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:04:35] *** Quits: white_snack (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 264 seconds)
[19:04:35] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 264 seconds)
[19:04:35] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 264 seconds)
[19:04:51] <lidless> You'd probably have to edit the script
[19:05:00] <lidless> e.g. https://www.tutorialspoint.com/python-tkinter-how-do-i-change-the-text-size-in-a-label-widget
[19:05:11] *** Joins: binary01 (~binary01@192.110.171.216)
[19:05:30] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[19:05:32] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:06:54] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[19:07:17] <stef204> you're refering to the script per application, IOW in each application using tk?
[19:07:27] *** Quits: Strom (strom@fedora/strom) ()
[19:07:52] <stef204> the problem is system-wide, it would be good to fix this in one system file only, if possible so that it impacts all such apps
[19:08:13] <rendar> how can i check if a for loop has been at least traversed once?
[19:09:01] *** Joins: Strom (strom@fedora/strom)
[19:09:21] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[19:09:31] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 265 seconds)
[19:10:02] <Swayze> set a global variable?
[19:10:05] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[19:10:09] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[19:10:50] <Swayze> (or local variable if its in a function or class)
[19:10:51] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[19:11:21] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:11:38] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 260 seconds)
[19:12:06] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[19:12:49] *** Joins: beencubed (~beencubed@209.131.238.248)
[19:12:52] <rendar> Swayze, i was wondering if there could be a neater method, using the else: condition of the for, or something like that
[19:13:11] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:13:27] <lidless> stef204: per application is my thought
[19:13:47] <Swayze> you could duplicate the condition of the for loop
[19:14:09] <Swayze> in a way that will answer your question
[19:14:54] *** Quits: jemark (jemark@user/jemark) (Quit: leaving)
[19:15:06] *** Joins: jemark (jemark@user/jemark)
[19:15:10] <Swayze> generally if you executing a for loop you know you going to need to iterate at least once
[19:15:11] <stef204> lidless:i figured but what a PITA, must be a way to fix this system-wide
[19:15:19] <Swayze> otherwise perhaps use a while loop or an if statement
[19:15:22] <teut> these eslint rules arent compatible with themselves, what to do? disabling is not always the right thing
[19:15:24] *** Joins: nomic (~nomic@185.192.69.224)
[19:15:33] <Swayze> and keep the for loop inside the if statement for example
[19:15:37] <teut> wrong chat
[19:15:56] <Swayze> if (i<j): then for () else: {else}
[19:16:03] <Swayze> something like that in pseudocode
[19:16:13] *** Joins: dohtem (uid524096@user/dohtem)
[19:18:14] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[19:18:23] *** Quits: l4yer (~l4yer@2a07-a880-3101-1041-7c64-cbb5-eb30-7d7b.pool6.ovpn.com) (Ping timeout: 264 seconds)
[19:19:26] *** Joins: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob)
[19:20:02] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[19:21:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:22:36] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 245 seconds)
[19:23:06] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[19:23:30] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[19:23:35] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[19:24:35] <rendar> Swayze, i can't duplicate the for loop condition
[19:26:02] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[19:27:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:29:00] *** Quits: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[19:31:57] *** Joins: node1 (~node1@user/node1)
[19:32:14] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[19:33:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[19:34:07] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:34:53] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:35:14] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[19:35:39] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:36:40] <parv> rendar, "for ...  : ... ; else: ...", as in https://termbin.com/qb9a ?
[19:37:31] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[19:38:51] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 245 seconds)
[19:39:00] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (Quit: Changing server)
[19:39:11] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[19:39:23] *** Joins: monkey_ (~user@190.104.116.153)
[19:39:40] <bjs> parv: else doesn't tell you how many times it was executed
[19:39:43] *** Joins: TJ- (~root@about/linux/staff/tj-)
[19:39:45] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099) (Quit: guenhael)
[19:40:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:40:11] <bjs> so you may as well just put the "after loop" stuff not inside the `else`, it might be confusing otherwise
[19:40:46] <parv> bjs, <rendar> how can i check if a for loop has been **at least traversed once**
[19:40:54] <bjs> parv: the else doesn't help with that though
[19:41:01] <parv> bjs, Sure, no need for else: block
[19:41:48] *** Joins: sandb0y (~pirate@user/sandb0y)
[19:42:02] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 256 seconds)
[19:42:07] <bjs> parv: I don't know what you're quoting for
[19:42:45] *** Joins: l4yer (~l4yer@195.181.170.210)
[19:43:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[19:43:29] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[19:44:39] <parv> bjs, What do you mean? You said to me "else doesn't tell you how many times it was executed". Ok. rendar had asked to know if the loop was run at least once -- which I quoted.
[19:44:41] *** Joins: audiobirb (~audio@user/audio)
[19:44:47] *** Joins: rany (~rany@user/rany)
[19:44:48] <bjs> parv: yes but what does else have to do with that?
[19:45:42] <parv> bjs, Nothing now. I had agreed earlier with you if had missed abou 4 minutes ago
[19:45:59] *** Joins: from_brazil (~from_braz@45.238.135.162)
[19:46:03] <from_brazil> hi
[19:46:05] <bjs> parv: okay, so long as you know the `else` doesn't help here(?)
[19:46:09] <bjs> from_brazil: hi
[19:46:46] <parv> ? -- same here
[19:47:00] *** Parts: parv (~quass@user/parv) ()
[19:48:36] *** Quits: Ivii (~Ivyy@2001:a61:13ad:1c01:9e15:ca69:8ccc:ec) (Remote host closed the connection)
[19:48:50] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[19:48:53] <from_brazil> I'm trying to sort a list of times in the format ("HH:MM"), but I'm not able to come up with a solution...
[19:50:09] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:51:46] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[19:51:55] *** Joins: l4yer (~l4yer@195.181.170.210)
[19:51:59] *** Quits: rsx (~dummy@ppp-188-174-135-48.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[19:54:18] *** Joins: Auron (~Auron956@user/auron)
[19:54:23] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[19:56:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:57:36] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 245 seconds)
[19:57:40] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[19:58:12] *** Joins: fikran (~fikran@user/fikran)
[19:58:43] *** Joins: magla (~gelignite@55d41163.access.ecotel.net)
[19:58:53] <han-solo> from_brazil: what have you tried ? do you have a sample to share to show what happened or what didn't work ?
[19:59:45] <bjs> rendar: I'm not sure what parv was trying to say,  just keep track of a variable that's really the only way to know if the loop ran at all.
[20:00:06] *** Joins: menace (~someone@user/menace)
[20:00:44] *** Joins: Klinda (~superleag@user/klinda)
[20:01:46] <rendar> ok
[20:02:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:02:32] *** Joins: sharperguy (~sharpergu@138.201.43.163)
[20:02:53] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:4d71:621b:617b:35cd)
[20:03:04] *** Quits: mallkrampus (~mallkramp@89.238.150.158) (Ping timeout: 268 seconds)
[20:03:04] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 268 seconds)
[20:03:56] <from_brazil> han-solo: The entire input has this format "M5;NZDUSD-OTC;21:30;CALL", after extracting only the hours "21:30", I came up with a list with only the hours, which I tried to sort the hours and then minutes, but it didn't go as planned...
[20:05:03] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[20:05:22] *** Joins: nomic (~nomic@185.192.69.224)
[20:07:05] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[20:07:06] <han-solo> the normal sort should work, if the string is always "HH:MM", i think, but we can always sort with time.strptime or something too
[20:07:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[20:07:52] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[20:08:01] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[20:08:29] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[20:08:53] <han-solo> >>> sorted(x, key=lambda x: time.strptime(x.split(';')[2], '%H:%M'))
[20:08:53] <han-solo> ['M5;NZDUSD-OTC;20:40;CALL', 'M5;NZDUSD-OTC;21:30;CALL']
[20:09:01] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[20:11:56] *** Joins: causa-sui (~causasui@192.241.228.169)
[20:12:12] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:14:10] *** Quits: trace987 (~trace@91.66.153.65) (Ping timeout: 268 seconds)
[20:15:08] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:15:48] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[20:16:36] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[20:16:54] *** Joins: mallkrampus (~mallkramp@89.238.150.157)
[20:17:50] *** Joins: monkey_ (~user@190.104.116.153)
[20:19:38] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[20:20:32] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[20:21:21] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[20:24:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:25:08] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:25:19] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:27:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:27:28] *** Joins: monkey_ (~user@190.104.116.153)
[20:30:37] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d01f-a3d3-6b92-da96.res6.spectrum.com)
[20:30:52] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:4d71:621b:617b:35cd) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:31:46] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:4d71:621b:617b:35cd)
[20:32:37] *** Joins: plastico1 (~plastico@neomutt/plastico)
[20:33:23] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 264 seconds)
[20:34:15] *** Quits: stef204 (~stef204@user/stef204) (Quit: WeeChat 3.3)
[20:34:32] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[20:34:49] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[20:35:58] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Quit: Changing server)
[20:36:06] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[20:36:34] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[20:36:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:39:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:39:54] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[20:39:59] *** Joins: dez (uid92154@user/dez)
[20:41:05] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:41:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:42:35] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[20:43:14] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[20:43:23] *** Quits: plastico1 (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[20:45:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:47:22] *** Joins: plastico (~plastico@neomutt/plastico)
[20:50:02] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[20:51:18] <from_brazil> han-solo: thanks, it worked
[20:52:52] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[20:53:31] *** Quits: jess (~jess@libera/staff/jess) ()
[20:54:23] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 264 seconds)
[20:54:52] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:55:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:56:03] *** Joins: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net)
[20:56:41] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[20:57:18] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[20:58:04] *** Joins: palasso (~palasso@user/palasso)
[20:58:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[20:58:07] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:58:17] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[20:58:45] *** Quits: sharperguy (~sharpergu@138.201.43.163) (Ping timeout: 265 seconds)
[20:59:32] <cluelessperson> BCB, did you ever get situated with that docker thing?
[21:01:56] *** Quits: gitly (~gitly@85.255.233.87) (Ping timeout: 256 seconds)
[21:02:47] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 264 seconds)
[21:02:52] *** Quits: greedom (~greedom@x59cc994c.dyn.telefonica.de) (Ping timeout: 260 seconds)
[21:03:27] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[21:04:11] *** Joins: greedom (~greedom@x59cc994c.dyn.telefonica.de)
[21:04:27] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:11:27] *** Quits: greedom (~greedom@x59cc994c.dyn.telefonica.de) (Read error: No route to host)
[21:11:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:11:51] *** Joins: greedom (~greedom@x59cc994c.dyn.telefonica.de)
[21:13:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:14:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d01f-a3d3-6b92-da96.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:15:30] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[21:15:49] *** Joins: Narrat (~omnius@p200300df5f399f5d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:16:03] *** Joins: l4yer (~l4yer@92.40.195.51.threembb.co.uk)
[21:16:03] *** Quits: l4yer (~l4yer@92.40.195.51.threembb.co.uk) (Client Quit)
[21:16:09] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:18:08] *** Joins: gitly (~gitly@148.252.129.85)
[21:18:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:42] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[21:22:17] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:23:45] *** Quits: greedom (~greedom@x59cc994c.dyn.telefonica.de) (Read error: No route to host)
[21:26:19] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 268 seconds)
[21:26:36] *** Joins: nomic (~nomic@185.192.69.224)
[21:27:51] *** Quits: from_brazil (~from_braz@45.238.135.162) (Quit: Connection closed)
[21:31:40] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:35:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:39:11] *** Joins: Csm319_ (~csm3105@31.4.136.189)
[21:41:09] *** Joins: Klinda (~superleag@user/klinda)
[21:41:46] *** Quits: gitly (~gitly@148.252.129.85) (Ping timeout: 265 seconds)
[21:44:09] *** Joins: gitly (~gitly@85.255.236.251)
[21:45:55] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:49:42] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:51:37] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[21:54:22] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[21:54:41] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[21:55:25] *** Joins: wisep__ (~rickybob@35.143.255.39)
[21:59:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:59:11] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 264 seconds)
[21:59:43] *** Joins: korg815 (~korg815@user/korg815)
[22:01:26] *** Quits: gitly (~gitly@85.255.236.251) (Ping timeout: 256 seconds)
[22:02:54] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[22:05:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[22:06:23] *** Quits: wisep__ (~rickybob@35.143.255.39) (Ping timeout: 264 seconds)
[22:06:39] *** Joins: node1 (~node1@user/node1)
[22:07:33] *** Joins: fikran (~fikran@user/fikran)
[22:07:58] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: happy math or coding)
[22:08:23] *** Quits: sickdugongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[22:11:00] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:13:28] *** Joins: causa-sui (~causasui@192.241.228.169)
[22:15:27] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[22:16:26] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 260 seconds)
[22:17:44] *** Joins: georgios (~georgios@user/georgios)
[22:18:23] *** Quits: Csm319_ (~csm3105@31.4.136.189) (Ping timeout: 264 seconds)
[22:19:00] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[22:19:16] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[22:21:47] *** _subopt is now known as subopt
[22:22:39] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:23:09] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[22:24:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 256 seconds)
[22:25:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d4dc-95a8-783c-f257.res6.spectrum.com)
[22:25:48] *** Quits: black_13 (~jjosb@209.221.58.169) (Ping timeout: 256 seconds)
[22:26:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[22:29:05] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[22:31:18] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[22:32:08] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[22:32:57] *** Quits: tomeaton17 (~tomeaton1@51.195.150.49) (Quit: Client closed)
[22:34:26] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[22:35:56] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[22:37:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:b442:91f8:4666:206e) (Ping timeout: 245 seconds)
[22:38:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:38:43] *** Parts: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net) ()
[22:38:51] *** Joins: greedom (~greedom@x59cc994c.dyn.telefonica.de)
[22:38:53] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[22:43:24] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 268 seconds)
[22:44:34] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[22:44:50] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:47:30] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:53:29] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[22:53:52] *** Joins: yaalon (~yaalon@072-191-031-176.res.spectrum.com)
[22:54:07] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:55:22] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[22:57:57] <lionslicer> cluelessperson: thanks for your help. I finally manage to fix my code
[22:58:18] <lionslicer> grym: thanks for the hints
[22:58:58] <lionslicer> I'd messed the variables AND the loops lol
[22:59:15] <lionslicer> but everything is fixed now
[22:59:50] *** Joins: hzm74 (~hzm74@109.36.157.44)
[23:00:20] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:00:31] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 245 seconds)
[23:01:05] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[23:02:39] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:03:27] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[23:04:03] <hzm74> Hello, I’m writing some code to read an excel file and display the results of the soccer-training from some players in a matplotlib graph. I managed to get it done.
[23:06:00] <hzm74> But I am hardcoding the names of the players and the according results from excell.  What I wan’t is to create multiple lists, the name of the lists must get the name of the player(s). I don’t get this to work,
[23:06:02] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:4d71:621b:617b:35cd) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:06:09] <hzm74> This is what I have:
[23:06:13] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[23:06:14] <hzm74> https://bpa.st/TVZQ
[23:06:53] *** Quits: d3sync (~d3sync@130.43.1.88.dsl.dyn.forthnet.gr) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[23:07:09] *** Joins: interweb (~interweb@user/interweb)
[23:07:10] <deniska> hzm74: you can use a dict, then a player name becomes a key, and a list of results a value
[23:08:42] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[23:08:52] <hzm74> Deniska, thnx.  Gonna try it out.
[23:09:18] *** Quits: yaalon (~yaalon@072-191-031-176.res.spectrum.com) (Remote host closed the connection)
[23:09:20] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:09:34] *** Joins: yaalon (~yaalon@072-191-031-176.res.spectrum.com)
[23:09:37] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[23:09:59] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[23:10:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:11:03] *** Quits: hzm74 (~hzm74@109.36.157.44) (Quit: Mutter: www.mutterirc.com)
[23:11:10] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[23:11:11] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 264 seconds)
[23:11:21] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[23:12:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:13:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d4dc-95a8-783c-f257.res6.spectrum.com) (Ping timeout: 260 seconds)
[23:13:34] *** Joins: hzm74 (~hzm74@109.36.157.44)
[23:16:10] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[23:17:01] *** Quits: hzm74 (~hzm74@109.36.157.44) (Remote host closed the connection)
[23:17:33] *** Joins: zoneu (~zoneu@user/zoneu)
[23:17:55] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[23:21:52] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:23:20] *** Joins: causa-sui (~causasui@192.241.228.169)
[23:24:28] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:25:17] *** Joins: fannagoganna (uid110488@tinside.irccloud.com)
[23:29:30] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[23:29:36] *** Joins: darksun (~darksun@user/darksun)
[23:29:38] <catern> i have a buffer for incoming data, which has a bunch of methods which pull data out of the buffer, and I want to support peeking at that data without removing it
[23:29:57] <catern> I want to do it with an default argument for all my methods
[23:30:12] <catern> and it should default to removing data from the buffer
[23:30:29] <catern> my question for you, #python, is this: should I have it be "remove=True" or "peek=False"?
[23:30:57] <catern> (and so you'd call with remove=False or peek=True if you wanted to not remove the data from the buffer)
[23:32:01] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:32:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[23:32:53] * dav1d votes for remove=True as the default behaviour
[23:32:54] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[23:33:10] *** Joins: korg815 (~korg815@user/korg815)
[23:33:22] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[23:34:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[23:34:46] <phy1729> You could also make it two separate methods
[23:34:48] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[23:35:01] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[23:35:18] *** Joins: bloody (~bloody@user/bloody)
[23:36:26] <cluelessperson> catern, probably have a dedicated peek method
[23:36:38] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[23:37:18] <catern> note "which has a bunch of methods which pull data out of the buffer" as I mentioned; otherwise yes I would have a separate peek method
[23:37:50] *** Joins: guenhael1 (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099)
[23:38:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:38:30] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:38:44] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[23:38:45] *** guenhael1 is now known as guenhael
[23:39:11] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 250 seconds)
[23:40:11] *** Joins: georgios (~georgios@user/georgios)
[23:40:30] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[23:41:09] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[23:41:35] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:41:57] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:42:52] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[23:43:14] *** Joins: sidj (~sidj@user/sidj)
[23:43:58] <Celelibi> Ellipsis, should I test it with == or with "is"?
[23:44:12] *** Joins: hel0 (~hel0@user/redrum88)
[23:44:15] *** Joins: tombobcat (~tombobcat@178.62.2.76)
[23:44:16] <teut> https://www.youtube.com/watch?v=6_-5XZzJyt0   at 30:16  , what does it means by   takes the graph and drops it into c code?
[23:44:33] <grym> Celelibi:  the `...` literal?
[23:44:46] <grym> it's a singleton, so `is` is safe, but i don't know if it's idiomatic ...
[23:44:47] <Celelibi> Yes.
[23:44:48] *** Joins: parv (~quass@user/parv)
[23:44:59] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:bcec:16ea:4e73:419c)
[23:45:00] <teut> the code he showed  in the graph were all bytes ,  the  func._co__.__code__
[23:45:11] *** Quits: yaalon (~yaalon@072-191-031-176.res.spectrum.com) (Remote host closed the connection)
[23:45:22] <grym> i don't find myself testing that one much
[23:45:41] <Celelibi> grym, I guess both would work, I'm indeed wondering about what's recommended.
[23:45:53] <Celelibi> It's basically another None.
[23:46:33] <grym> when in doubt, i default to ==
[23:46:57] <grym> stylistically, i reserve `is` for None, True, and False
[23:47:35] <Celelibi> Are you really supposed to use is for bool?
[23:47:50] <Celelibi> IIRC I've seen some warnings complaining about it.
[23:47:52] <grym> 3.9 started raising a warning about not doing so
[23:48:15] <phy1729> PEP 8 has "Comparisons to singletons like None should always be done with is or is not, never the equality operators."
[23:48:38] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:49:15] <grym> 3.9 also started raising syntax warnings about is-ing literals, which is good
[23:49:16] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[23:50:16] <Celelibi> grym, PEP 8 say that using "if x == True" is wrong. And that "if x is True" is worse.
[23:50:18] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[23:50:29] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:bcec:16ea:4e73:419c) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:50:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:50:49] <phy1729> Where does it say not to use   if x is True?
[23:51:00] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[23:51:05] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:51:17] <phy1729> From the quote I gave, it seems to encourage using is for None, True, False, ...
[23:51:33] <Celelibi> Look for the sentence "Don't compare boolean values to True or False using ==:"
[23:51:39] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:51:51] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:51:51] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 268 seconds)
[23:51:57] <Celelibi> Booleans are not singletons.
[23:52:55] <phy1729> I'm claiming hobgoblin on that. Sometimes you have wonky unions with bool and something else.
[23:53:48] <grym> bools are singletons
[23:54:05] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[23:54:08] <grym> stylistically, i guess you just avoid comparing to them :P
[23:54:12] *** Joins: l4yer (~l4yer@195.181.170.210)
[23:55:03] <graingert[m]> phy1729: Wonky?
[23:55:12] <graingert[m]> You just do if x:
[23:55:15] <Celelibi> A singleton is a set with a single value. Regarding types, it's a type with a single value.
[23:55:22] <Celelibi> bool has two values, it's not a singleton.
[23:55:24] <phy1729> graingert[m]: not if you want to only test for True
[23:55:38] <grym> Celelibi: you have a weird definition of "singleton"
[23:55:40] <graingert[m]> Yeah but it's bad design to do that
[23:56:06] <grym> singleton means "there's only ever one  _object_  of <this thing> and whatever name you happen to call it right now you always get the same one
[23:56:06] <Celelibi> grym, no YOU have a weird definition of singleton. :p
[23:56:33] <grym> nonetype happens to have one valid value, but that doesn't really mean anything w/r/t singleton-ness
[23:56:59] <grym> aiui there is one Py_True and one Py_False, though
[23:57:12] <Celelibi> That's two distinct values.
[23:57:23] <phy1729> I'm looking through the language reference to see if that's an impl detail or guarenteed
[23:57:25] <Celelibi> Therefore, even with your weird definition, still not a singleton.
[23:57:29] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:f1f8:4a6f:61d7:183)
[23:57:36] <grym> and i quote, "https://www.python.org/dev/peps/pep-0285/" the values True and False will be singletons, like None
[23:57:43] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[23:57:44] <grym> it's not "my" definition
[23:58:03] *** Quits: l4yer (~l4yer@195.181.170.210) (Remote host closed the connection)
[23:58:33] <phy1729> "The two objects representing the values False and True are the only Boolean objects."
[23:58:46] <Celelibi> "Because the type has two values, perhaps these should be called "doubletons"?"
[23:58:57] *** Joins: sharperguy (~sharpergu@88.130.222.57)
[23:59:17] *** Joins: l4yer (~l4yer@195.181.170.210)
[23:59:20] <Celelibi> Even Guido when writing this PEP 285 knew he was stretching the definition of singleton.
[23:59:20] <grym> ontology aside, it's at least safe to `is True`
