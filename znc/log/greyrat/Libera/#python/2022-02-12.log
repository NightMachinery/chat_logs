[00:00:24] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[00:00:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[00:01:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:01:41] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:01:52] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:02:19] *** Quits: Guest1778 (~Guest1778@user/Cera) (Ping timeout: 256 seconds)
[00:03:39] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[00:03:43] *** pizzaiolo is now known as piz
[00:04:15] <anddam> English language question: is the object [0] in a list "on top" of the list or "on head" (opposed to tail)?
[00:04:18] <Keeeeg> would you say that there is a way to fix my issue or do I need to completly reinstall my OS
[00:04:45] <SnoopJ> anddam, the most idiomatic way to say it (imo) would be "at the front of [the list]"
[00:04:50] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[00:04:51] <anddam> thx
[00:05:06] <bjs> anddam: it's not really an English question, it's not "on top" of the list, because a list is also a stack and the "top" of the stack is actually the last element not the first
[00:05:26] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[00:05:33] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:05:42] <bjs> anddam: I would just say [0] is the first element, or at the head of the list.
[00:05:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:05:55] <anddam> bjs: yea, I guess. but I figure a stack vertically, whereas a list is horizontal (in my mind)
[00:06:01] <anddam> and a FIFO rather than LIFO
[00:06:22] <bjs> anddam: i mean, lists have a pop() method and a stack's pop method returns the "top" element
[00:07:03] <fofoni_> python lists are not FIFO, since pop() pops whatever's been *last* appended
[00:07:04] <bjs> so lists already have a concept of which element is the "top", it's the one pop() returns, which is the last i.e. [-1]
[00:07:24] <SnoopJ> bjs, it's not like you couldn't implement a stack using a list in the other order, though
[00:07:29] *** Joins: Betal (~Betal@user/betal)
[00:08:23] *** Joins: dme86 (~dan@user/dan86)
[00:09:00] <SnoopJ> although it would be very unnatural, heh
[00:09:01] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:09:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:09:30] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:09:41] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 256 seconds)
[00:10:10] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[00:10:36] *** Quits: axlrod (~pattelito@ua-84-216-129-38.bbcust.telenor.se) (Quit: WeeChat 3.3)
[00:10:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:12:31] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:13:18] *** Quits: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net) (Quit: Client closed)
[00:14:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:14:55] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[00:16:56] *** Joins: Barones (~Barones@user/Barones)
[00:18:29] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 250 seconds)
[00:18:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:19:07] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[00:19:27] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[00:19:43] *** Joins: mickey8 (~user@user/mickey)
[00:21:43] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:22:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[00:22:21] *** Joins: msek_ (~Username@pd9fb256e.dip0.t-ipconnect.de)
[00:24:25] *** Joins: spider-kuki (~Thunderbi@nitra.ostv.sk)
[00:24:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:25:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[00:26:46] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 260 seconds)
[00:27:36] <stewie925> hey guys, why is it when I run this lambda function `sorted(range(10), key=lambda x: x % 2) ` I get `[0, 2, 4, 6, 8, 1, 3, 5, 7, 9] `?  I expect only odd numbers to return odd numbers?
[00:27:55] <stewie925> hey guys, why is it when I run this lambda function `sorted(range(10), key=lambda x: x % 2) ` I get `[0, 2, 4, 6, 8, 1, 3, 5, 7, 9] ` ?  I expect only odd numbers to return odd numbers?
[00:28:06] <lambda> even numbers return 0, odd numbers return 1
[00:28:07] <SnoopJ> stewie925, sorted() does not discard elements, it sorts them. Did you want filter() ?
[00:28:09] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[00:28:12] <ChrisWarrick> stewie925: you expect odd numbers to return odd numbers?
[00:28:16] <lambda> thus, even numbers are sorted before odd numbers
[00:28:19] <stewie925> ohhhhh....
[00:28:47] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[00:28:50] <stewie925> hahaha @lambda: perfect name for the question
[00:29:01] <stewie925> thanks SnoopJ and ChrisWarrick
[00:29:01] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[00:29:02] <lambda> I know right :)
[00:29:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:30:09] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[00:30:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:30:36] <fofoni_> lambda, does your irc client notify you *every single time* someone types lambda in the chat?
[00:30:51] <lambda> fofoni_: it doesn't happen as often as you might think
[00:31:31] <lambda> and sometimes it's even about anonymous functions and not the weird amazon thing :)
[00:31:35] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:31:50] <fofoni_> hahahahahh
[00:31:55] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Changing host)
[00:31:55] *** Joins: Guest1778 (~Guest1778@user/Cera)
[00:32:34] <ChrisWarrick> I’d set the client to look only at the start of the message, perhaps "@?lambda"
[00:32:55] *** Quits: jay-m126_ (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[00:32:55] *** Quits: jay-m126 (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[00:32:56] <lambda> I'm sure I'll do that if I ever get too annoyed by it
[00:33:14] <jinsun> python's lambdas being almost useless helps here :D
[00:34:07] <SnoopJ> jinsun, considering how much pain "useful" lambdas regularly bring into my life, I'm grateful for this
[00:34:18] *** Joins: Guest21 (~Guest21@85.137.0.51.dyn.user.ono.com)
[00:34:54] <SnoopJ> that might say more about $employer_code than it does about language design
[00:35:21] <jinsun> dunno about other langugages, but I liked C#'s lambdas
[00:35:22] *** Joins: aphysically (~aphysical@user/aphysically)
[00:35:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:35:30] <anddam> back on the linker issue Yhg1s highlighted, why is this even working on debian considering the -l options are passed in the same (supposedly broken) order? https://gist.github.com/anddam/8ab4ba420d3ee3335e14f9498db7bffc
[00:36:00] *** Joins: slav0nic (slav0nic@python.su)
[00:37:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:37:34] *** Quits: slitherysnek (~slitherys@94.140.9.99) (Quit: Client closed)
[00:37:37] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:37:37] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:37:52] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[00:38:14] *** Joins: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net)
[00:38:17] *** Quits: Guest1778 (~Guest1778@user/Cera) (Quit: Client closed)
[00:38:17] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:38:39] *** Quits: dkjfk (~dkjfk@178.49.152.42) (Quit: Client closed)
[00:38:44] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:38:54] *** Joins: fikran (~fikran@user/fikran)
[00:38:58] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2c2d:3add:9203:6b30) (Quit: Client closed)
[00:39:07] *** Quits: kreg (~kreg@iqoqi060.uibk.ac.at) (Quit: Client closed)
[00:40:26] <Keeeeg> I am having an issue with my pipenv install command https://gist.github.com/Kredcool/08136b6e09f6b08daa57462908735b9f my ubuntu version is 21 pip is 20.3.4 and pipenv version is 2022.1.8
[00:40:32] *** Quits: Dan39 (~dan@user/dan39) (Ping timeout: 256 seconds)
[00:40:44] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[00:41:15] <sco1> https://github.com/pypa/pipenv/issues/4804
[00:41:59] <Keeeeg> I have already tried the fixs the proposes and they don't work
[00:42:16] <sco1> I'm skeptical
[00:43:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:43:37] <Keeeeg> well you kinda have to take my word for it
[00:44:32] *** Joins: jay-m126 (~jay-m@129.0.226.149)
[00:44:43] *** Joins: jay-m126_ (~jay-m@129.0.226.149)
[00:45:41] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[00:45:55] *** Quits: magga (~magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:45:57] *** Quits: blingrang4 (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[00:46:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2c2d:3add:9203:6b30)
[00:46:29] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[00:47:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:47:57] *** Joins: blingrang4 (~blingrang@user/blingrang)
[00:48:42] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:49:24] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[00:50:02] *** Quits: blingrang4 (~blingrang@user/blingrang) (Client Quit)
[00:50:21] *** Joins: slowtype- (~slowtyper@2a02:214c:863d:a00:1d20:d7d8:59c2:b643)
[00:50:30] <Yhg1s> anddam: presumably because it's dynamically linking to libpython, instead of statically.
[00:51:00] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 250 seconds)
[00:51:01] *** Quits: cosimone (~user@93-47-230-95.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:51:02] <Yhg1s> (run 'ldd' on the resulting binary to see.)
[00:51:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:52:31] *** Joins: jay-m1261 (~jay-m@129.0.226.149)
[00:53:27] <Guest21> Hello everyone, lets say I have an object from a custom class whose state depends partially on an I/O operation. Lets assume that the data might not be available at the time we initialize the object. As soon as there is data available I want to change the state, but I don't want to do it through polling or timeouts (I dont like to do those
[00:53:27] <Guest21> checkings or synchronization mechanisms), I want to do it asynchronously. Kind of like a hardware interrupt, but I want it non-blocking. I want to send "a notification" to the program and whenever the program can, it should attend it and change the state of the object. That I/O operation might be a file in a FTP server or bytes available on a
[00:53:28] <Guest21> serial port. I don't think that checking when something is available in an infinite loop is clever. I want Javascript type of responsiveness...Any ideas?
[00:54:27] *** Joins: jazzy (~jaziz@user/jaziz)
[00:55:31] <anddam> Yhg1s: ohh, that's a very good reason
[00:56:16] <anddam> Yhg1s: any idea about what might be causing this difference considering those are two pyenv builds?
[00:56:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:56:27] <odoood> Guest21: try signal
[00:56:51] *** Quits: nomic (~nomic@185.192.69.77) (Quit: Leaving)
[00:57:03] *** Quits: slowtype- (~slowtyper@2a02:214c:863d:a00:1d20:d7d8:59c2:b643) (Ping timeout: 250 seconds)
[00:57:03] <Yhg1s> anddam: not without digging into exactly how those builds were created, and what patches were applied, and what the library search paths are in those builds, etc.
[00:57:05] <Keeeeg> I am having an issue with pipenv my ubuntu version is 21 pip is 20.3.4 and pipenv version is 2022.1.8 https://gist.github.com/Kredcool/08136b6e09f6b08daa57462908735b9f
[00:57:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:57:43] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[01:00:29] <lidless> god help me. I'm looking at clojure code
[01:00:31] *** Joins: vicfred_ (~vicfred@user/vicfred)
[01:00:36] <lidless> wrong channel
[01:00:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[01:01:05] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:01:10] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:01:20] *** Joins: Metalsutton (~Metalsutt@101.100.153.103)
[01:01:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:02:09] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (Quit: ZNC - http://znc.in)
[01:02:39] *** Joins: paravida (~myChateau@user/paravida)
[01:02:49] <paravida> join ##math
[01:02:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:02:54] <anddam> paravida: almost
[01:03:03] <paravida> haha
[01:03:10] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[01:03:11] *** Joins: mickey8 (~user@user/mickey)
[01:03:26] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[01:03:42] <Guest21> That's actually a good point. I was already thinking about asyncio. But that's cooperative multitasking, which i think would complicate code since the learning curve is fairly steep, not to mention that the librarys functions you use have to be asynchronous as well
[01:03:43] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:03:50] <Guest21> odoood
[01:03:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:04:13] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[01:04:18] *** Joins: dme86 (~dan@user/dan86)
[01:04:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:04:58] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[01:05:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:05:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:05:40] *** Joins: jamea22 (~jamea@201.77.110.253)
[01:05:41] *** Quits: jamea (~jamea@201.77.110.253) (Read error: Connection reset by peer)
[01:05:59] <tmart> Is there a way to import both a module and an object from the module in one statement? For example, in two statements, I have "import arrow" and "from arrow import Arrow".
[01:06:23] <ChrisWarrick> tmart: you want both names to be accessible? then you need two lines
[01:06:31] <bjs> tmart: not in one,  I'd just write those two as separate lines one after the other
[01:06:32] <bjs> personally
[01:06:35] *** Joins: five6433334 (~five6@8.40.26.30)
[01:07:06] <tmart> Alrighty, thanks @ChrisWarrick @bjs
[01:07:41] <stewie925> when in doubt, dont do shortcuts (two lines better than one in this case)
[01:08:12] <anddam> Yhg1s: I see, sadly I am not at liberty of sharing the package
[01:08:17] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[01:08:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[01:08:59] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[01:09:29] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[01:09:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[01:09:38] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[01:10:32] <grym> jinsun: c#'s (...) => {...} is really handy.  the only other place i've used them regularly is elisp, where they're extremely handy right up until you want to get rid of one without restarting...
[01:11:38] <SnoopJ> tmart, note that a `from` import does import the module (and execute it) first, but yea, you need two statements to get both in your namespace
[01:12:22] *** Quits: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net) (Quit: Client closed)
[01:14:12] *** Parts: ianliu (~ianliu@189-46-252-171.dsl.telesp.net.br) (WeeChat 3.4)
[01:14:36] <anddam> Yhg1s: actually seems it's dynamically linked
[01:14:37] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[01:14:41] *** Joins: cristober (~xkd50swas@185.192.71.118)
[01:14:42] <anddam> """pyexe: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2,"""
[01:15:21] <odoood> Guest21: yea asyncio was going to be my other suggestion
[01:16:19] *** Quits: aiena (~aiena@user/aiena) (Ping timeout: 256 seconds)
[01:16:43] <Yhg1s> anddam: that's not what that means.
[01:16:59] <Yhg1s> anddam: you need to look at *what* it dynamically links. Using 'ldd' or 'readelf'
[01:18:30] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:18:57] *** Joins: i0n (~Guest92@p5b0ba433.dip0.t-ipconnect.de)
[01:19:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:19:21] <anddam> https://termbin.com/ao01
[01:19:29] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[01:19:34] *** Joins: dme86 (~dan@user/dan86)
[01:19:36] *** Quits: paul424 (~tom@ip-5-172-238-100.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[01:19:47] *** Joins: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net)
[01:19:52] <anddam> those are all shared objects, I gather it means that exe is dynamically linked, right?
[01:20:31] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[01:20:41] <Yhg1s> anddam: the question isn't whether it's statically linked. The question is _what_ it statically links. Specifically, whether it statically links *python*.
[01:21:01] *** Parts: i0n (~Guest92@p5b0ba433.dip0.t-ipconnect.de) ()
[01:21:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:21:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[01:21:39] <Yhg1s> anddam: the next question is what the statically linked Python *contains*. Depending on how Python is built it may not have statically linked the extension modules that need the symbols you're seeing errors about (math, posix)
[01:21:54] *** Quits: msek_ (~Username@pd9fb256e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:22:29] <Keeeeg> hey does anyone know the solution to the pipenv issue https://gist.github.com/Kredcool/08136b6e09f6b08daa57462908735b9f i am running the command pipenv install
[01:22:46] <Yhg1s> Keeeeg: is the issue just that you're seeing these warnings?
[01:23:01] *** Joins: Pickchea (~private@user/pickchea)
[01:23:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:23:08] *** Joins: bancroft (~bancroft@user/bancroft)
[01:23:23] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:23:35] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:23:47] <Keeeeg> the pipenv isn't installing anything though
[01:23:49] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.46)
[01:24:14] <Yhg1s> Keeeeg: I doubt it's caused by the warnings you see. They may both be caused by something else, though.
[01:24:22] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 250 seconds)
[01:24:23] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.46) (Read error: Connection reset by peer)
[01:25:45] <Keeeeg> this what happens when I run pipenv install https://gist.github.com/Kredcool/1b553aa632e3331286cc67874573e2d4 I think this is useless though
[01:26:02] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[01:26:20] *** Quits: sint_ (~sint@p5b0a9711.dip0.t-ipconnect.de) (Quit: Leaving)
[01:27:34] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[01:28:08] <ChrisWarrick> an error occurred, great debugging information
[01:28:16] <ChrisWarrick> is there nothing else in those logs?
[01:28:22] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[01:29:11] <Keeeeg> this as well https://gist.github.com/Kredcool/08136b6e09f6b08daa57462908735b9f
[01:29:21] <jinsun> grym: yeah. using those combined with linq extension methods is fun, so.. functional
[01:29:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[01:30:00] *** Joins: Nivlac (~gabriel@181.223.199.100)
[01:30:04] *** Joins: aod (~a@200.44.239.12)
[01:30:08] <ChrisWarrick> Keeeeg: perhaps you can run pipenv with some verbose/debug flags?
[01:30:18] <Keeeeg> how would I do that?
[01:30:30] <ChrisWarrick> Keeeeg: dunno, perhaps pipenv --help can tell you
[01:32:02] *** Quits: cristober (~xkd50swas@185.192.71.118) (Read error: Connection reset by peer)
[01:32:04] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[01:32:20] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:baff:f08c:6a70:2b1b)
[01:32:31] <grym> jinsun: stupid off topic extension method anecdote for you, if you don't mind a PM
[01:33:08] *** Joins: masoudd (~masoudd@user/masoudd)
[01:33:43] <jinsun> grym: sure, I dont mind
[01:33:43] *** Quits: Gudddu (~Guddu@59.95.233.73) (Read error: Connection reset by peer)
[01:33:54] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[01:34:07] <Keeeeg> here is the issue in verbose mode I think this should give more info https://gist.github.com/Kredcool/4e8a6ccc655bb384fbdfc75a0bbdccbf
[01:34:22] *** Joins: masoudd (~masoudd@user/masoudd)
[01:35:49] *** Quits: Guest21 (~Guest21@85.137.0.51.dyn.user.ono.com) (Ping timeout: 256 seconds)
[01:36:22] *** Joins: crashrep (~crashrep@user/crashrep)
[01:37:16] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[01:38:19] *** Quits: LordOfLive (uid538075@tinside.irccloud.com) (Changing host)
[01:38:19] *** Joins: LordOfLive (uid538075@user/joeroot)
[01:38:40] *** LordOfLive is now known as JOEROOT
[01:38:59] *** Quits: jay-m1261 (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[01:38:59] *** Quits: jay-m126_ (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[01:38:59] *** Quits: jay-m126 (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[01:39:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[01:39:53] <ChrisWarrick> Keeeeg: the pip in your venv is still broken
[01:40:09] <anddam> Yhg1s: I am sorry, I feel I am dragging the discussion at a very low level
[01:40:16] <anddam> I just lack so many concepts
[01:40:18] <Keeeeg> I have tried uninstall and reinstall nothing seems to work
[01:40:36] *** Joins: jay-m126 (~jay-m@154.72.161.72)
[01:40:37] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[01:40:45] *** Joins: jay-m126_ (~jay-m@154.72.161.72)
[01:40:54] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[01:41:01] <anddam> Yhg1s: the point about "what" it statically links refers to the fact that static link happens by hardcoding into the executable format the required objects, right?
[01:41:03] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[01:41:22] <anddam> rather than relying on a runtime loader to resolve those from an external object (in a library)
[01:41:27] <ChrisWarrick> Keeeeg: wget https://bootstrap.pypa.io/get-pip.py; /home/kredcool/.local/share/virtualenvs/rio-f9ogCAHS/bin/python get-pip.py
[01:42:33] *** Quits: p-i- (~Ohmu@2403:6200:8978:d293:9c1e:ddbf:a07f:1f6d) (Ping timeout: 250 seconds)
[01:42:43] <Yhg1s> anddam: it's C (or ELF), so let's say "no". It's not really 'objects' in the Python sense. (.o files are 'object files', and ELF has 'objects', but it's really just the same word for something else entirely)
[01:42:45] *** Joins: slowtype- (~slowtyper@2a02:214c:8615:200:883a:9d96:1ea3:a070)
[01:42:56] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[01:42:57] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[01:43:08] <Yhg1s> anddam: but yes, it's about including things in the ELF binary rather than in separate .so files.
[01:44:34] *** Quits: magla (~gelignite@55d4e921.access.ecotel.net) (Quit: Stay safe!)
[01:44:35] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[01:44:37] <anddam> Yhg1s: oh yes, I was talking about ELF objects, not python
[01:44:48] <anddam> I am trying to digest what you told me
[01:44:55] <anddam> mind a query?
[01:45:07] <anddam> I mean not to unnecessarily divert the topic
[01:45:21] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Quit: Leaving)
[01:45:21] <SnoopJ> linking against Python is pretty on-topic
[01:45:28] <anddam> ah even better
[01:45:43] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[01:45:46] *** Joins: jay-m1261 (~jay-m@154.72.161.72)
[01:45:52] <Yhg1s> Perhaps it would be better if you could explain what you're trying to _do_.
[01:46:00] *** Joins: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de)
[01:46:14] <anddam> right now, just understand a little better
[01:46:33] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[01:46:56] *** Parts: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de) ()
[01:47:03] <anddam> the hint you gave at first solved the issue, I put -lpython _in front of_ the list of linker flags, that usenet thread I linked explained the rationale pretty clearly
[01:47:43] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[01:47:53] <anddam> I have a python package, that I cannot disclose since it's my employer and I have not been cleared on that, that I was using on a Debian9 system
[01:48:13] <anddam> I installed pyenv, as you do, and it Just Worked™
[01:48:33] <SnoopJ> anddam, can you restate the question you're currently pondering?
[01:48:39] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[01:49:03] <anddam> I'll try a tl;dr
[01:49:06] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:50:02] <anddam> given these two build logs, both from pyenv 3.8.9 installing same package from git, same commit, in a clean environment  https://gist.github.com/anddam/8ab4ba420d3ee3335e14f9498db7bffc
[01:50:09] <zumba_addict> I'm getting returned non-zero exit status 1 when running `python3 -m venv venv`. What am I missing? It works on my laptop but not on the server
[01:50:34] <SnoopJ> zumba_addict, is this Debian/Ubuntu? If so, do you have the python3-venv package installed on both?
[01:50:40] <zumba_addict> checking
[01:50:41] <anddam> what makes the one on ubuntu link -lpython3.8 statically and the other one on debian dynamically?
[01:51:00] <zumba_addict> minideb
[01:51:02] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[01:51:13] <zumba_addict> debian 8
[01:51:16] <SnoopJ> zumba_addict, do you have that package on both systems?
[01:51:17] <Yhg1s> anddam: are you absolutely certain that yu're linking against the pyenv Python installations?
[01:51:30] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[01:51:38] <zumba_addict> which package? Do I have to install venv first?
[01:51:51] <SnoopJ> zumba_addict, the python3-venv package, which provides venv. Debian likes to ship it separately.
[01:52:00] <zumba_addict> oh got it
[01:52:05] <zumba_addict> let me try installing it
[01:52:10] *** Joins: Bakunin (~maplefing@user/lindis)
[01:52:11] <zumba_addict> what I had before was this command
[01:52:12] <anddam> Yhg1s: let me chew that question for a bit
[01:52:33] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[01:52:40] <anddam> Yhg1s: that would mean if -L are the proper ones while linking, right?
[01:52:43] <zumba_addict> python -m virtualenv project
[01:52:54] <SnoopJ> zumba_addict, virtualenv and venv are not the same
[01:52:59] <zumba_addict> gotcha
[01:53:09] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[01:53:11] <zumba_addict> i want to try venv because virtualenv used python2.7
[01:53:20] *** Joins: epony (epony@user/epony)
[01:53:32] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[01:53:37] <SnoopJ> that might not be virtualenv's fault if it's an old Debian, where `python` pointed to 2.7
[01:53:52] <Yhg1s> anddam: not necessarily. the compiler can be picking up a different libpython, if it exists earlier in the library search path.
[01:54:03] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[01:54:30] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:54:34] <zumba_addict> i am installing it now with apt-get
[01:54:45] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[01:54:56] <zumba_addict> woohoo You are my savior again! :)
[01:55:04] <zumba_addict> Thanks a lot!
[01:55:08] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[01:55:19] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[01:55:20] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[01:56:04] *** Quits: mittensthekitten (uid539600@id-539600.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:22] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:56:22] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:57:42] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[01:57:55] *** Quits: aod (~a@200.44.239.12) (Ping timeout: 256 seconds)
[01:59:01] *** Quits: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[01:59:05] *** Parts: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) ()
[02:00:03] <zumba_addict> We haven't changed any code but it's failing now during pip install - https://bpa.st/HKTA
[02:01:11] <SnoopJ> zumba_addict, botocore requires Python 3.6 or higher, yours is evidently older than that.
[02:01:29] <zumba_addict> let me check the python I am using
[02:01:42] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[02:01:53] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 256 seconds)
[02:01:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:02:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:02:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[02:03:12] <zumba_addict> ah, our python is 3.4.2
[02:03:39] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:baff:f08c:6a70:2b1b) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:04:19] <zumba_addict> should I follow this update ?https://www.vultr.com/docs/update-python3-on-debian/
[02:04:26] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:baff:f08c:6a70:2b1b)
[02:04:34] <SnoopJ> Debian also likes to ship a really old pip, which might not be as helpful when checking version compatibility. Not sure if that would give you a more helpful report here, but worth considering upgrading it before doing anything else (I usually do this in Debian containers)
[02:04:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:05:17] <zumba_addict> k
[02:05:35] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[02:05:37] *** Quits: slowtype- (~slowtyper@2a02:214c:8615:200:883a:9d96:1ea3:a070) (Ping timeout: 256 seconds)
[02:06:08] <SnoopJ> If the release of Debian you're using doesn't provide a modern enough Python, I recommend switching to pyenv and getting a more recent version that way.
[02:06:19] <anddam> Yhg1s: that would properly be the linker, right? so ld.so.conf and LD_LIBRARY_PATH
[02:06:20] <SnoopJ> (which is almost certainly the case with a Debian this old)
[02:06:23] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778) (Ping timeout: 250 seconds)
[02:07:05] <Yhg1s> anddam: no, it's a compile-time thing, not a runtime thing. ld.so.conf and LD_LIBRARY_PATH are about resolving dynamic dependencies, not about static linking.
[02:07:20] <anddam> oh I see
[02:07:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:07:35] <zumba_addict> i'm compiling it from source now, 3.9.6
[02:07:41] <zumba_addict> it was succesful
[02:07:45] *** Quits: spider-kuki (~Thunderbi@nitra.ostv.sk) (Quit: spider-kuki)
[02:08:03] <SnoopJ> it's pretty easy to build from source, yea. I still like letting pyenv do the work, though.
[02:08:22] <Yhg1s> doing it correctly is a little harder, and sometimes it takes a while to figure out something isn't quite right.
[02:08:23] <zumba_addict> I must check out pyenv. I'm not familiar with it
[02:08:57] <SnoopJ> zumba_addict, it's a pile of shell script that does basically the same thing you just did and knows how to do it for each version.
[02:09:00] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[02:09:06] <zumba_addict> oh cool
[02:09:27] <SnoopJ> It becomes particularly handy if you want to have multiple versions on the same system, too
[02:09:33] <anddam> zumba_addict: and you keep multiple versions at same time and can select those per-project with a nice .python-version file
[02:09:37] <zumba_addict> yep, I must go that route then
[02:09:47] <zumba_addict> what I'm doing is old school and messy to uninstall
[02:09:57] <SnoopJ> by contrast, on versions of Debian/Ubuntu where you could possibly even have multiple versions, the system packages do some Extremely Unwise Things
[02:10:02] <zumba_addict> awesome! I will use pyenv
[02:10:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:10:15] <zumba_addict> I totally agree
[02:10:22] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:10:23] <anddam> zumba_addict: pretty simple, the wiki on github has requirements to build python, then a separate github projects provides the shell script installer
[02:10:30] <SnoopJ> thankfully that is a relatively small edge
[02:10:32] <zumba_addict> cool
[02:10:36] *** Quits: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net) (Quit: Client closed)
[02:11:56] <anddam> Yhg1s: so not ld.so.conf and LD_LIBRARY_PATH, but still ld is involved for the linking part at compile time, isn't it?
[02:12:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:12:30] <Yhg1s> anddam: ld and ld.so are quite different things. ld is the part of the compiler that links things. Most of what it does is static linking.
[02:12:38] *** Parts: purple_cthulhu (~rax@185.108.96.47) ()
[02:12:46] *** Joins: jokoon (~eio@2a01:e0a:542:e160:e9e9:77c:d857:93d9)
[02:12:53] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:baff:f08c:6a70:2b1b) (Ping timeout: 250 seconds)
[02:13:10] <Yhg1s> anddam: ld.so is part of the runtime that satisfies dynamic library dependencies.
[02:13:12] *** Joins: AliasSpider (~spider-ku@nitra.ostv.sk)
[02:13:31] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[02:13:49] <fofoni_> bjs, if you're interested, I can now see the thread printing f"Am I alive? {self.is_alive()}" from inside its `run` method, and it says FALSE, which should be pretty impossible afaik
[02:14:05] <SnoopJ> and somewhat confusingly, gcc also does linking, it can invoke ld for you
[02:14:32] <fofoni_> (and also dismisses that hypothesis of using a thread object in one loop, but other in the other loop)
[02:14:36] <jokoon> I have an iterable of tuples [(thing1, thing2, thing3, thing4,..8), ...]. I want to call filter on it, giving filter a lambda, and I want to have a condition on thing4 and thing6, is it possible to use lambda? I don't think I can because I need to unpack that tuple
[02:14:50] <fofoni_> more details here https://stackoverflow.com/questions/71087272/python-what-does-thread-is-alive-exactly-mean
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:10] *** Joins: qlixed (~qlixed@181.44.129.13)
[02:15:17] *** Quits: jay-m126 (~jay-m@154.72.161.72) (Ping timeout: 240 seconds)
[02:15:31] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:15:37] *** Quits: jay-m126_ (~jay-m@154.72.161.72) (Ping timeout: 240 seconds)
[02:15:44] *** Quits: jay-m1261 (~jay-m@154.72.161.72) (Ping timeout: 256 seconds)
[02:15:45] <bjs> fofoni_: that does sound strange, is it happening during shutdown or any other weird situation?
[02:15:47] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[02:16:02] <SnoopJ> anddam, one of the linker's main jobs is to figure out where symbols come from. When you `#include "somelib.h"` you get declarations of those symbols, but at runtime you need the definitions. The linker figures out "is that object code I'm keeping track of, or is that part of a dynamic library that the loader will find at runtime?"
[02:16:05] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:11] <bjs> jokoon: sure, you can access tuple elements in an expression like `t[3] == t[5]` or something
[02:16:12] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:16:15] <bjs> where t is the tuple
[02:16:40] <jokoon> bjs is there anything else than [3] ?
[02:17:00] <bjs> jokoon: well you can write a `def` and then unpack the tuple if you want to use that syntax, filter accepts any functions
[02:17:04] <bjs> not just those made with `lambda`
[02:17:19] *** Joins: jay-m126 (~jay-m@129.0.226.149)
[02:17:20] <SnoopJ> (and all that stuff is written into the ELF file, which is how ldd can tell you which libraries are dynamically linked)
[02:17:28] *** Joins: jay-m126_ (~jay-m@129.0.226.149)
[02:17:28] <jokoon> ok
[02:17:47] *** Joins: jay-m1261 (~jay-m@129.0.226.149)
[02:18:16] <fofoni_> bjs, not exactly shutdown. It happens inside a worker thread, after the main thread has already received a SIGINT. The thing is, the main thread has swallowed that signal. The worker thread should not have been affected by that, right?
[02:18:24] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-2513-aa41-6555-989e.res6.spectrum.com)
[02:18:26] <fofoni_> I thought signals only manifested in the main thread
[02:18:58] *** Joins: rya (~ry@user/rya)
[02:19:03] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[02:19:05] *** Joins: slowtype- (~slowtyper@46.12.42.68.dsl.dyn.forthnet.gr)
[02:19:07] <fofoni_> also, I can see that the worker thread is clearly doing is job correctly
[02:19:08] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[02:19:08] <SnoopJ> anddam, I would hazard a guess that the order mattering here is because the linker wants to get its job done in a single pass, so if A depends on symbols defined in B, the linker needs to be aware of B *before* A (but that *is* a guess)
[02:19:18] <fofoni_> while it's "not alive"
[02:19:36] *** Joins: Arw| (~Arwalk@lfbn-dij-1-1509-26.w109-221.abo.wanadoo.fr)
[02:19:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:19:58] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[02:20:08] <Yhg1s> SnoopJ: that's exactly what happens, yes.
[02:20:13] * SnoopJ is learning!
[02:20:21] *** Quits: Arw- (~Arwalk@lfbn-dij-1-964-247.w90-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:20:34] <Yhg1s> (static linking and dynamic linking both have a lot of weird idiosyncracies, and backward compatibility means they're never going to get fixed ;P)
[02:21:14] <SnoopJ> Yhg1s, speaking of static linking...did you end up mentioning that awful static libpython evil I was exploring to Pablo, and what was his reaction if so? :)
[02:21:22] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:21:47] <SnoopJ> (boy, that sentence came out awfully misshapen)
[02:21:57] *** Joins: mat001 (~mat001@72.28.108.216)
[02:23:03] <Yhg1s> SnoopJ: unfortunately we've run over in our weekly meetings by more than 15 minutes each time, so I haven't had time. It's on the list still, though :)
[02:23:11] <SnoopJ> hehe
[02:23:16] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[02:23:25] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:23:35] *** Quits: moog (~moog@107.77.244.68) (Remote host closed the connection)
[02:23:58] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:24:42] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:25:37] <anddam> SnoopJ: yes, that's what Yhg1s explained to me at first
[02:25:39] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.46)
[02:25:53] <anddam> SnoopJ: but that also applies only to static linking
[02:25:55] <anddam> https://groups.google.com/g/gnu.gcc.help/c/muvgXVAU6l0/m/fVpqbXYp7cEJ?pli=1
[02:26:13] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 240 seconds)
[02:26:15] <stewie925> don;t laugh but I just learned I could do a number list like `one_to_ten = range(10) `
[02:26:28] <anddam> stewie925: not a list though
[02:26:40] <stewie925> I mean  `one_to_ten = range(1, 11) `
[02:26:53] <stewie925> :D
[02:26:54] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.46) (Read error: Connection reset by peer)
[02:28:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:28:18] <SnoopJ> anddam, sure. With dynamic linking, there's just a promise that library such-and-such will provide that symbol in the future, and it's the loader's problem.
[02:28:20] <Repiphany> Is range not already explicit enough for that
[02:28:35] * stewie925 shrugs
[02:28:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[02:30:35] <anddam> "it's future-me's problem"
[02:30:53] <jinsun> stewie925: another fun thing to learn about range is that it is a Sequence, not just Iterable, so you can index into it and slice it, like range(1, 11)[5] and range(10)[5:6]
[02:31:07] <anddam> jinsun: that I did not know
[02:31:32] <stewie925> thats very good to know, jinsun thank you
[02:31:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[02:31:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[02:32:27] *** Quits: lothar_m (~lothar_m@user/lothar-m/x-8875873) (Quit: WeeChat 3.5-dev)
[02:32:37] *** Joins: Naan (~naan@user/naan)
[02:32:51] <SnoopJ> anddam, I find it useful to distinguish strongly between the linker and loader as abstractions, but ld.so has functionality in both domains
[02:32:58] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[02:33:38] <anddam> oh right, I hadn't focused on that difference up till now
[02:34:11] <anddam> Yhg1s | anddam: ld and ld.so are quite different things.  <-- best naming ever
[02:35:11] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[02:35:19] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 256 seconds)
[02:36:15] *** Joins: mat001 (~mat001@72.28.108.216)
[02:36:28] *** Quits: Metalsutton (~Metalsutt@101.100.153.103) (Quit: Leaving)
[02:36:36] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:36:41] *** ozoned is now known as odoood
[02:37:12] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[02:37:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:37:26] <SnoopJ> yea, it's a fairly pedantic difference, although a helpful one here because the linker doesn't really care about how the loader does its job except inasmuch as they both speak ELF
[02:38:14] <SnoopJ> (caveat: probably not strictly true, there is likely code that depends on both)
[02:38:21] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[02:38:46] *** Quits: jokoon (~eio@2a01:e0a:542:e160:e9e9:77c:d857:93d9) (Quit: Leaving)
[02:39:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:39:58] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[02:40:02] *** Joins: dre (~dre@2001:8003:c932:c301:880:1cdd:3f72:271d)
[02:40:48] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:41:01] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:41:06] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[02:41:48] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 256 seconds)
[02:41:57] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:42:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:43:03] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[02:44:37] *** Quits: jamea22 (~jamea@201.77.110.253) (Ping timeout: 240 seconds)
[02:45:27] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:45:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[02:46:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:48:15] *** Joins: fikran (~fikran@user/fikran)
[02:49:21] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:51:07] *** Joins: masoudd (~masoudd@user/masoudd)
[02:51:11] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:51:35] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[02:51:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:52:04] *** Joins: crashrep (~crashrep@user/crashrep)
[02:52:44] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[02:53:48] *** Joins: bancroft (~bancroft@user/bancroft)
[02:54:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:54:02] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:54:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com)
[02:54:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com) (Client Quit)
[02:54:19] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:54:38] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:55:37] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 240 seconds)
[02:56:14] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:4426:d76c:818d:2ec4) (Ping timeout: 252 seconds)
[02:56:21] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:56:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:56:57] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[02:58:08] <fofoni_> bjs, is it you talking to me in the SO comments? if it's not, whoever it is thinks he has found bug in Python's Thread.join method
[02:58:36] *** Joins: fikran (~fikran@user/fikran)
[02:59:00] <bjs> fofoni_: it's not me, i'm very cautious about jumping to a bug in Python's own threading because 99% of the time it's been something more mundane first
[02:59:44] <bjs> it's hard to understand what's going on with your code without a runnable example sadly, it really shouldn't be the case that the thread thinks itself not alive if it's running.
[02:59:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:00:00] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[03:00:05] *** Joins: v- (~gary@user/ghost)
[03:00:12] <fofoni_> the person has found a very simple runnable example
[03:00:21] <fofoni_> https://pastebin.com/d9fDusQn
[03:00:49] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[03:00:53] <fofoni_> if you run that with python >=3.9, and hit ^C after the "joining now" message, it should print True
[03:00:56] <fofoni_> but it prints False
[03:01:23] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[03:01:25] <bjs> why should it print True?
[03:01:50] <fofoni_> because print(t.is_alive()) comes before event.set()
[03:02:03] <fofoni_> and the thread only quits *after* the event is set
[03:02:06] *** Joins: POLO (~LordOfLiv@172.58.237.199)
[03:02:09] <bjs> Oh I see, the join gets interrupted but the thread is still running
[03:02:14] <fofoni_> exactly
[03:02:23] <fofoni_> the join is marking the thread as stopped
[03:02:29] *** Quits: slowtype- (~slowtyper@46.12.42.68.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[03:02:34] <fofoni_> when it shouldnt
[03:02:44] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:02:55] <fofoni_> because the thread hasnt really been joined, the join method has been interrupted
[03:03:06] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[03:03:35] *** Quits: masoudd (~masoudd@user/masoudd) (Remote host closed the connection)
[03:04:16] <anddam> bye, thanks for the info
[03:06:28] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[03:06:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[03:06:57] *** Quits: POLO (~LordOfLiv@172.58.237.199) (Ping timeout: 240 seconds)
[03:07:12] <SnoopJ> fofoni_, bjs interestingly, adding a sleep() after the set() does still produce the "thread done" message without changing the is_alive() result, so yea, definitely still running
[03:08:01] <bjs> fofoni_: this certainly looks like a bug
[03:08:23] <SnoopJ> And changing the join() to `while True: pass` *does* change it
[03:08:29] <fofoni_> yes, the bug was described pretty clearly in the answer to my question here: https://stackoverflow.com/questions/71087272/python-what-does-thread-is-alive-exactly-mean
[03:08:54] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:09:19] *** Quits: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[03:09:21] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[03:10:26] <SnoopJ> setting a timeout for the join() also does not give a false Negative
[03:10:42] *** Quits: jay-m126_ (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[03:11:06] *** Joins: slowtype- (~slowtyper@2a02:214c:8494:a100:8f:b3ce:d37b:a68d)
[03:11:16] *** Quits: jay-m1261 (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[03:11:17] <bjs> fofoni_: well I was just looking at threading https://github.com/python/cpython/blob/3.10/Lib/threading.py#L1112 it's pretty suspicious code
[03:11:19] *** Joins: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[03:11:32] <NeilRG_> can someone explain this typing error? https://mypy-play.net/?mypy=master&python=3.10&gist=b5e04adf1e4cfe82841331c310bb75b4&flags=strict
[03:11:35] *** Quits: jay-m126 (~jay-m@129.0.226.149) (Ping timeout: 256 seconds)
[03:11:49] <bjs> fofoni_: I don't really (yet) understand why the 'fix' added a self._stop()
[03:11:57] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 240 seconds)
[03:12:04] <SnoopJ> clarification: it does give a false negative if you ^C; it's almost like the exception on the main thread is applying to the spawned thread, but like, halfway?
[03:12:19] <NeilRG_> does it have to do with covariance?
[03:12:49] <fofoni_> bjs, suspicious because of the naked except? Isn't it just the same as a finally clause? (since it unconditionally re-raises)
[03:13:10] <fofoni_> anyway, i also didn't undertand the _stop
[03:13:39] <bjs> fofoni_: (a) suspicious that it's locked because of the preceding acquire, (b) suspicious that it calls _stop() and (c) suspicious that this doesn't solve the problem because another interrupt can happen inside this except
[03:13:51] *** Joins: medium_cool (~medium_co@136.36.128.48)
[03:14:22] <fofoni_> oh, I think the _stop is there because, if the join() successfully acquired the lock, that means the thread must have quit
[03:14:31] <fofoni_> (apparently that lock is held while the thread is running)
[03:15:14] <bjs> fofoni_: see (a)
[03:15:16] <fofoni_> (a) and (c) are really the same, right? but yeah, that's the problem
[03:16:01] <fofoni_> ooooohh you're talking about the second _stop()? inside the except clause?
[03:16:36] <SnoopJ> I'm not sure that path is being taken in this sample, FWIW
[03:16:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:17:00] <SnoopJ> I stuck a (threading-friendly) debug message in there and saw nothing when running the repro
[03:17:05] *** Quits: Nivlac (~gabriel@181.223.199.100) (Quit: leaving)
[03:17:31] <fofoni_> well my head is hurting, I'm happy I've done *some* progress today
[03:17:35] *** Joins: summersault (~summersau@179.221.251.36)
[03:17:42] <fofoni_> SnoopJ, the except path?
[03:17:45] <SnoopJ> yes
[03:18:15] <SnoopJ> uh, hang on, I may have applied it to the wrong 3.10
[03:18:22] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[03:18:31] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:18:40] <bjs> SnoopJ: well, reading the threading code it seems "obviously" wrong, but in a way that's not easily fixable?
[03:18:46] <bjs> but certainly it would explain this particular issue
[03:18:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[03:19:15] <SnoopJ> yea, I lied, it *is* taking that path. is_alive() is False before and after the _stop()
[03:19:22] <bjs> I'm gonna ping vstinner on -dev to suggest a change, and maybe add something to that or a related bpo; at minimum it should be saving the value of acquire() to use in the except
[03:19:57] <bjs> rather than lock.locked()
[03:20:01] *** Joins: POLO (~LordOfLiv@172.58.239.156)
[03:20:05] *** Quits: POLO (~LordOfLiv@172.58.239.156) (Max SendQ exceeded)
[03:20:09] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:20:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:20:23] *** Joins: POLO (~LordOfLiv@172.58.239.156)
[03:20:33] *** Quits: POLO (~LordOfLiv@172.58.239.156) (Max SendQ exceeded)
[03:20:47] <SnoopJ> it seems that the release() is what causes it to become False, but this is well past my understanding of threads
[03:20:58] *** Joins: jamea (~jamea@177.239.80.236)
[03:21:48] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[03:21:48] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[03:22:55] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com)
[03:24:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:24:20] <SnoopJ> bjs, how does the return value factor into it?
[03:24:47] <bjs> SnoopJ: because it tells you whether you got the lock
[03:25:34] <SnoopJ> I guess I'm not understanding what it tells you that locked() doesn't
[03:25:47] <bjs> SnoopJ: it tells you *who* has the lock
[03:26:13] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:27:02] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[03:27:09] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: Textual IRC Client: www.textualapp.com)
[03:27:20] <SnoopJ> bjs, you're saying it should be `if (got_lock := lock.acquire(...)): ...; if got_lock:` instead?
[03:27:36] <bjs> SnoopJ: https://github.com/bensimner/cpython/commit/aa608dd2a4cc7a6e95448d0f101fd7f978a78b2c i think this is the fix
[03:27:38] <bjs> for this particular problem
[03:27:44] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:27:54] <bjs> vstinner didn't reply so I'll just leave that in the bpo as a suggestion
[03:27:56] <SnoopJ> hmm
[03:28:43] <SnoopJ> well, it does make the sample give the right answer
[03:29:17] <SnoopJ> and it makes sense that the exception could occur *during* acquire the way it's current spelled on main
[03:29:19] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[03:29:34] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:29:37] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[03:30:06] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:30:17] *** Quits: dalan6 (~dalan@59-102-63-107.tpgi.com.au) (Ping timeout: 240 seconds)
[03:30:17] *** dalan62 is now known as dalan6
[03:30:33] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:33:00] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:34:03] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[03:36:22] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:36:41] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.46)
[03:37:40] *** Quits: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[03:37:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:38:06] *** Joins: POLO (~LordOfLiv@172.58.239.145)
[03:38:13] *** Quits: POLO (~LordOfLiv@172.58.239.145) (Max SendQ exceeded)
[03:38:17] *** Quits: AliasSpider (~spider-ku@nitra.ostv.sk) (Ping timeout: 240 seconds)
[03:39:04] <bjs> SnoopJ: fofoni_: I suppose https://bugs.python.org/issue46726 is your stackoverflow friend?  I made my change a real PR and added vstinner to the nosy, so that he will see it tomorrow
[03:39:26] *** Joins: AliasSpider (~spider-ku@nitra.ostv.sk)
[03:39:56] <SnoopJ> hooray
[03:40:25] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:40:29] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:40:45] <bjs> I am a little unsure as to which bpo my pr should've mentioned, but whatever :P
[03:40:49] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[03:40:53] <fofoni_> i have no idea if it's really them, but probably is
[03:40:56] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5830-81a9-b2a9-186d.res6.spectrum.com)
[03:41:07] *** piz is now known as pizza
[03:41:08] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.46) (Read error: Connection reset by peer)
[03:41:10] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:41:27] <fofoni_> (although if I were them, I'd have posted this issue link back to the SO thread)
[03:41:50] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 260 seconds)
[03:42:52] *** Joins: jkcoxson (~jkcoxson@67.199.177.214)
[03:43:07] *** Joins: envex (~rf@cpe-173-91-189-33.neo.res.rr.com)
[03:43:23] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:44:02] *** Joins: Dan39 (~dan@user/dan39)
[03:44:32] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:45:35] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[03:45:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:46:29] *** Joins: summersault (~summersau@179.221.251.36)
[03:46:29] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:46:39] *** Joins: POLO (~LordOfLiv@172.58.237.244)
[03:46:40] <bjs> fofoni_: anyway, that bug seems to account for your issue and my fix should fix that one,  the code is still suspect (what if an exception happens between release and _stop etc)
[03:46:45] *** Quits: POLO (~LordOfLiv@172.58.237.244) (Max SendQ exceeded)
[03:47:02] <bjs> but that is a much smaller race that the race on the acquire itself (which is unbounded)
[03:47:19] *** Joins: POLO (~LordOfLiv@172.58.237.244)
[03:47:25] *** Quits: POLO (~LordOfLiv@172.58.237.244) (Max SendQ exceeded)
[03:47:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:47:56] <exarkun> good news, the bug will happen less often.  bad news, the bug will happen less often.
[03:48:03] *** Joins: POLO (~LordOfLiv@172.58.237.244)
[03:48:05] *** Quits: POLO (~LordOfLiv@172.58.237.244) (Max SendQ exceeded)
[03:48:14] <fofoni_> heheh
[03:48:19] <SnoopJ> the bug of theseus
[03:48:23] <fofoni_> why can't _stop() before the release?
[03:48:31] *** Joins: POLO (~LordOfLiv@172.58.237.244)
[03:48:33] *** Quits: POLO (~LordOfLiv@172.58.237.244) (Max SendQ exceeded)
[03:48:35] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:8d0f:a1ef:ef80:635e)
[03:49:04] <bjs> fofoni_: probably you can, but then what if you get an exception between the _stop() and the release()
[03:49:09] <bjs> future join()s will block forever then
[03:49:10] *** Joins: harpia (~harpia@2804:fc:8de2:e700:f59b:322e:48e2:b259)
[03:49:11] *** Joins: POLO (~LordOfLiv@172.58.237.244)
[03:49:18] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:49:20] *** Quits: POLO (~LordOfLiv@172.58.237.244) (Max SendQ exceeded)
[03:49:41] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:49:50] <SnoopJ> should there be an atomic stop-and-release? :P
[03:50:15] <exarkun> being able to have atomic sections /at all/ would be nice.
[03:50:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:50:24] <exarkun> but it's pretty hard to figure out how to offer that.
[03:50:34] <fofoni_> hmm
[03:50:34] *** Joins: ultislt^ (~ultislt@50.235.176.163)
[03:50:46] <exarkun> (I think pypy does)
[03:50:57] *** Joins: Masterphi (~Masterphi@user/masterphi)
[03:50:57] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[03:51:05] <SnoopJ> my question is basically: if the lock is being held and you do both things in one call, does that resolve the race?
[03:51:15] <fofoni_> i was thinking exactly that, right now you the only way is writing the atomic part in C right?
[03:51:28] <exarkun> C has asynchronous signals, too.
[03:51:36] <bjs> SnoopJ: no, and my fix doesn't work either because infact the := is not atomic, you can be interrupted before the assignment happens
[03:51:46] <exarkun> But at least it also has some tools for dealing with them.
[03:51:49] <bjs> really you need a way to know *who* owns the lock
[03:51:51] <SnoopJ> bjs, that's a bummer
[03:52:04] <bjs> But threading doesn't tell you
[03:52:31] * SnoopJ just saw the reply
[03:52:34] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:53:00] <fofoni_> C has asynchronous signals, but your code gets back to where it was after the handler is done, and anyway if your code had the GIL held, maybe the handler can't do much harm?
[03:53:12] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[03:53:18] <exarkun> fofoni_: Oh.  A C signal handler can certainly do plenty of harm.
[03:53:22] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[03:53:32] *** Quits: tristan_ (~tristan@223.62.163.102) (Ping timeout: 240 seconds)
[03:53:33] <exarkun> fofoni_: But more generally - yes, at least you only have to deal with C complexity, not C and CPython complexity.
[03:53:52] <fofoni_> heheh
[03:53:58] <exarkun> (who _says_ your code gets back to where it was? :)
[03:54:15] <Matt343> Python's ABC @abstractmethods don't have a mechanism to enforce the actual interface right? (method parameters), only that a subclass implements the actual methods (by asserting a failure in the abstract method if called).
[03:54:18] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:54:27] *** Joins: jkcoxson_ (~jkcoxson@67.199.177.214)
[03:54:31] *** Joins: frost (~frost@user/frost)
[03:54:36] <bjs> Matt343: well you cannot make an instance of a class with abstract methods
[03:54:53] <bjs> the parameters aren't really part of the ABC interface, as far as ABC knows, the interface is just "what methods are defined"
[03:55:20] <fofoni_> ...which is asserting a failure when the class is instantiated, not when the abstract method is called
[03:55:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:56:08] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[03:56:36] *** Joins: Guest7 (~Guest7@2607:fb90:8344:657d:c832:e16:aa82:9a40)
[03:56:45] *** Quits: Guest7 (~Guest7@2607:fb90:8344:657d:c832:e16:aa82:9a40) (Client Quit)
[03:56:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:57:06] *** Joins: Guest7 (~Guest7@2607:fb90:8344:657d:c832:e16:aa82:9a40)
[03:57:57] *** Quits: jkcoxson (~jkcoxson@67.199.177.214) (Ping timeout: 240 seconds)
[03:57:58] <Matt343> Yes but you can create a subclass of the base which doesn't implement the abstract method, and python doesn't care.
[03:58:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[03:58:23] *** Quits: {HD} (~{HD}@86.106.121.213) (Ping timeout: 256 seconds)
[03:58:27] <Matt343> And if you attempt to call it, it will just run the abstract method in the base
[03:58:30] *** Quits: Guest7 (~Guest7@2607:fb90:8344:657d:c832:e16:aa82:9a40) (Client Quit)
[03:58:35] *** Joins: Wulf (~Wulf@user/wulf)
[03:58:41] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.46)
[03:59:23] <nedbat> Matt343: that doesn't sound right. can you pastebin the code?
[03:59:27] <SnoopJ> that should be an error, are you sure the class in question is derived from ABCMeta?
[03:59:31] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[03:59:38] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:00:10] <bancroft> has anyone been getting this error lately on fresh vms when trying to run a pip install ? `ERROR: Cannot uninstall 'PyYAML'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.`
[04:00:46] *** Joins: adrien[m] (~adrienbee@2001:470:69fc:105::1:b646)
[04:00:52] <bancroft> I find I need to manually fix it
[04:00:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:01:18] <Matt343> nedbat, my mistake, you are correct. If the base class derives from abc.ABC, it will throw an error if the abstract method isn't implemented by the subclass.
[04:02:09] <Matt343> But to be clear, that's the only thing that's being enforced? You can't enforce the method parameters?
[04:02:20] <nedbat> Matt343: right
[04:02:26] *** Joins: cdown (~cdown@188.214.11.14)
[04:02:30] <nedbat> Matt343: a type checker might check those
[04:02:35] <nedbat> Matt343: or pylint
[04:03:00] <SnoopJ> and/or typing.Protocol
[04:03:07] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778)
[04:03:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:04:40] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[04:04:54] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[04:05:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:05:59] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[04:06:06] <grym> bancroft: that sounds like someone --system-site-packages
[04:06:44] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:8d0f:a1ef:ef80:635e) (Quit: I have gone to sleep. ZZZzzz…)
[04:07:02] <bancroft> grym: I tend to fix it with `sudo apt remove python3-yaml`
[04:07:17] <bancroft> grym: just not sure why its suddenly a problem when it hasn't been for years
[04:08:03] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.46) (Read error: Connection reset by peer)
[04:08:12] <grym> bancroft: mixing and matching what tool installs your packages is basically just a time bomb
[04:08:31] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:08:35] <SnoopJ> bancroft, did you upgrade pip on this (these?) systems?
[04:09:07] <bancroft> SnoopJ: last summer, part of an ansible playbook I do install a specific version of pip
[04:10:08] <SnoopJ> hmm, it may not be very related to the version as I consider that some more
[04:10:50] <bancroft> pyyaml is not written anywhere in my playbooks or roles :/
[04:10:59] <bancroft> maybe the provider changed their vms
[04:11:07] <SnoopJ> bancroft, ask apt what packages depend on that package?
[04:11:22] <bancroft> SnoopJ: how do I do that?
[04:11:34] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[04:11:41] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:12:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:12:15] *** Joins: {HD} (~{HD}@86.106.121.213)
[04:12:20] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:12:37] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[04:12:42] <SnoopJ> bancroft, `sudo apt-cache rdepends python3-yaml` I believe
[04:13:07] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[04:13:14] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 252 seconds)
[04:13:17] *** Joins: zebrag (~chris@user/zebrag)
[04:13:40] <bancroft> so that will tell me what packages it depends on or what packages depend on it?
[04:13:44] <SnoopJ> the latter
[04:14:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 250 seconds)
[04:14:37] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:15:13] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[04:15:18] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 256 seconds)
[04:15:33] <SnoopJ> Possibly there's been churn in your system package dependencies that led to this package being introduced when it wasn't there before?
[04:15:50] <SnoopJ> If the package is currently using distutils (ew) then I can't imagine that's a recent change since it's so woefully out of date
[04:16:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:16:12] <SnoopJ> nothing in the package changelog suggests it, anyway
[04:16:29] <bancroft> cloud-init maybe
[04:16:54] <bancroft> It's just a guess, thanks for that idea SnoopJ!
[04:17:00] <bancroft> weekend anyway
[04:17:02] <SnoopJ> if you still have access to an instance of the 'old' system then you could compare the packages in each
[04:17:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:17:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[04:18:09] <bjs> fofoni_: SnoopJ: after a (very) quick chat with vstinner on -dev it might be that the real solution here is to take SnoopJ's original idea of a magic atomic function (and implement it in C ...) just for this :(
[04:18:26] <SnoopJ> oof, if my half-cocked guess is reasonable, you know you're in trouble
[04:18:30] <bjs> I don't think it's possible to solve my (c) issue (the interrupt-during-except problem)
[04:18:40] <bjs> without something that can mask those signals
[04:19:37] *** Quits: kostkon (~kostkon@2a02:587:a101:711a:74ff:7d65:3f72:693a) (Remote host closed the connection)
[04:19:45] <bancroft> SnoopJ: the old machines are fine, it's when I create a new one that it fails
[04:19:57] *** Joins: kostkon (~kostkon@2a02:587:a101:711a:74ff:7d65:3f72:693a)
[04:20:04] <SnoopJ> bancroft, that's my point: this gives you the ability to compare the packages in each and see what's different, which might help isolate the change
[04:20:15] <SnoopJ> for starters, if python3-yaml isn't *in* the old ones, that's a pretty strong signal right there
[04:20:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:21:51] <grym> there's no other way to typehint a 5-tuple of floats than :Tuple[float,float,float,float,float], is there?
[04:22:11] *** Quits: deviantfero (~deviantfe@179.51.61.253) (Ping timeout: 256 seconds)
[04:24:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:24:38] <SnoopJ> grym, I'd probably write an NTuple helper there. There's Tuple[(float,)*5] but that's obscene.
[04:25:42] <SnoopJ> Or maybe `FiveTuple = Tuple[(float,)*5]` could limit the extent of the obscenity, but I still don't like it very much.
[04:26:06] <grym> yeah, especially since the next field's an 8-tuple :D
[04:26:20] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[04:27:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:27:27] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net)
[04:27:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:28:29] <jinsun> you can write arbitrary expression like that in place of types anyway, it has to be done the long way
[04:28:35] <SnoopJ> perhaps `def NTuple(T: Type, N: int): return Tuple[(T,)*N]`
[04:28:37] <jinsun> s/can/can't
[04:28:42] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[04:28:54] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[04:28:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[04:29:01] <SnoopJ> there's probably some fancy way to express it with Generic but I don't know that
[04:29:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:29:40] <aphysically> the callable syntax PEP situation is a mess
[04:30:01] <grym> jinsun: pydantic accepts the Tuple[(float,)*num] annotation, fwiw
[04:30:17] <SnoopJ> grym, I think they're thinking about the new style
[04:30:30] *** Joins: Oddity (~Oddity@user/oddity)
[04:30:34] <jinsun> grym: ah for runtime usage it works, mypy won't accept it though
[04:30:43] <grym> jinsun: ah, ok.  guess which one i care about :P
[04:30:57] <SnoopJ> hmm, it doesn't work at all? I was thinking it was a postponed evaluation thing
[04:31:56] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:31:56] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:00] <SnoopJ> hmm, yea indeed
[04:32:04] <jinsun> yeah because it will have to evaluate expressions to figure out the types
[04:32:11] <jinsun> and type checkers don't like to do that
[04:32:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:32:45] *** Joins: brabrax (~brabrax@user/brabrax)
[04:33:15] *** Joins: califax (~califax@user/califx)
[04:33:31] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net) (Ping timeout: 256 seconds)
[04:33:50] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[04:33:53] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[04:34:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:34:15] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:35:31] *** Joins: kaiseisei (~Thunderbi@223.11.80.109)
[04:35:45] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[04:35:52] *** Joins: guess1 (~guess1@189.223.210.156.dsl.dyn.telnor.net)
[04:35:56] *** Quits: guess1 (~guess1@189.223.210.156.dsl.dyn.telnor.net) (Client Quit)
[04:36:13] <SnoopJ> probably for the best, I guess I'd just capture them to some names and live with it
[04:36:38] *** Joins: newpy (~newpy@206.168.231.90)
[04:37:08] *** Quits: kts (~kts@103.73.237.122) (Quit: Konversation terminated!)
[04:37:18] *** Parts: adrien[m] (~adrienbee@2001:470:69fc:105::1:b646) ()
[04:37:24] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[04:38:26] <jinsun> yeah TypeAlias is the only thing that helps, and not a lot
[04:38:40] *** Joins: guess1 (~guess1@189.223.210.156.dsl.dyn.telnor.net)
[04:39:04] *** Quits: jamiejackson (~jamiejack@199.223.31.57) (Quit: Connection closed)
[04:39:20] <fofoni_> bjs, ouch :\
[04:39:36] *** Quits: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Quit: Client closed)
[04:40:01] *** Quits: kaiseisei (~Thunderbi@223.11.80.109) (Remote host closed the connection)
[04:40:38] <bjs> fofoni_: the original bpo is not possible to fix in threading.py and vstinner’s simple solution sadly introduces this race
[04:40:49] *** Joins: kaiseisei (~Thunderbi@223.11.80.109)
[04:40:50] *** Quits: kaiseisei (~Thunderbi@223.11.80.109) (Client Quit)
[04:40:55] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:41:02] <bjs> but this race is much bigger (but perhaps arguably less bad) than the original
[04:41:23] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:41:52] <guess1> Imperial z
[04:42:48] <guess1> 👻
[04:42:48] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[04:42:56] <bjs> fofoni_: probably the only solution is to rewrite Thread.join in C where it can defer these signals until after the critical work
[04:43:25] <guess1> Original mugrosa copia
[04:43:41] <fofoni_> well, after all, that original fix must have solved the original issue
[04:43:51] <bjs> fofoni_: it didn’t
[04:44:01] <guess1> Work 235
[04:44:05] <fofoni_> oops
[04:44:14] <fofoni_> oh I see, it's only been some months
[04:44:25] <bjs> fofoni_: they knew it didn’t solve it
[04:44:26] *** Joins: Barones (~Barones@user/Barones)
[04:44:39] <bjs> but my fix doesn’t solve it either
[04:44:55] <fofoni_> by the way, how come no one had complained about it before?
[04:45:31] <fofoni_> what else do people use to wait for threads to finish while allowing an external signal to interrupt that wait?
[04:45:44] <fofoni_> ok, phrasing it this way, it sounded really specific
[04:45:47] <fofoni_> but it's really not
[04:45:49] *** Parts: cgrage (~cgrage@107.174.17.132) ()
[04:45:53] <bjs> fofoni_: it’s a concurrency + signals issue, they can be hard to track down and often appear in many forms
[04:45:54] *** Quits: emf (~emf@2620:10d:c090:400::5:322c) (Quit: emf)
[04:46:58] <fofoni_> hmm
[04:47:17] <guess1> AT&T DriveMode works better when the phone's GPS is turned on.  GPS is turned off with AT&T DriveMode on.
[04:47:34] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:47:49] <bjs> well in this case I assume nothing “too bad” happens usually: you still see the exception, but the state is kind of messed up
[04:48:16] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[04:48:21] <bjs> it’s also a recent change and the original race I think was much rarer, it probably existed for decades
[04:48:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:48:58] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:49:19] *** Parts: guess1 (~guess1@189.223.210.156.dsl.dyn.telnor.net) ()
[04:49:42] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[04:50:10] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:50:28] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:50:50] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[04:50:54] <bjs> fofoni_: I guess in in general people don’t do much handling of KeyboardInterrupt and other signals while they join(), and they let the exception bubble
[04:51:54] <bjs> who knows, I don’t expect an outright fix over the weekend sadly :(
[04:52:02] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[04:52:17] <bjs> as either victor or sehiy will need to do that in C carefully
[04:52:24] <bjs> serhiy*
[04:52:46] *** Quits: jkcoxson_ (~jkcoxson@67.199.177.214) (Remote host closed the connection)
[04:53:55] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[04:54:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:54:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:55:30] <fofoni_> bjs, that was what i was talking about: if people don't usually "try:join();except:pass", then what's the idiomatic way of letting background threads do their job forever until the user kills the application?
[04:55:56] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[04:56:12] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2c2d:3add:9203:6b30) (Quit: Client closed)
[04:56:20] <fofoni_> I mean, I know that if I don't pass daemon=True, then I can just let the main thread terminate, and the interpreter will wait for the background threads to finish
[04:56:38] <fofoni_> (and I believe in this case a ^C will terminate all threads? now I'm not sure)
[04:57:32] <bjs> fofoni_: I think without daemon then the join still works
[04:57:35] <fofoni_> but anyway, if you need the main thread to do any cleanup after the background threads are done, then I don't see a pretty way besides try: join(); except KeyboardInterrupt: pass
[04:57:44] *** Quits: ultislt^ (~ultislt@50.235.176.163) (Remote host closed the connection)
[04:59:07] <fofoni_> (yes, I was just saying that without daemon, you don't need the joins in the first place)
[04:59:24] <fofoni_> (unless you need to clean up after, which is my case)
[04:59:45] <bjs> fofoni_: well I guess that is the bug, once the interrupt happens join is broken
[04:59:56] <bjs> I’m sure lots of people have this bug without realising they do
[05:00:01] <fofoni_> oh yes, I'm already happy about that
[05:00:05] <fofoni_> thanks hehe
[05:01:11] <bjs> it’s why I think this situation may silently be worse, as it means an interrupt during joining a running thread *always* fails like this
[05:01:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:01:36] <bjs> but you might not notice
[05:01:40] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:01:47] <bjs> at least not right away
[05:01:52] *** Joins: summersault (~summersau@179.221.251.36)
[05:02:50] <fofoni_> always a terrible choice to have to make
[05:03:03] <fofoni_> make your problem smaller and less detectable, or bigger and fatal
[05:04:07] *** Joins: POLO (~LordOfLiv@8.21.13.15)
[05:04:29] *** Quits: POLO (~LordOfLiv@8.21.13.15) (Max SendQ exceeded)
[05:05:07] *** Joins: jkcoxson (~jkcoxson@67.199.177.214)
[05:05:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:05:59] *** Parts: akk (~akk@75-161-95-245.albq.qwest.net) (+++)
[05:06:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:07:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:07:37] *** Joins: pytemp101 (~pytemp101@90.255.60.204)
[05:07:50] *** Parts: jkcoxson (~jkcoxson@67.199.177.214) ()
[05:07:57] *** Joins: fikran (~fikran@user/fikran)
[05:08:12] *** Joins: ornxka (~ornxka@user/ornxka)
[05:09:19] *** Joins: Cera (~Cera@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[05:09:26] *** Quits: Cera (~Cera@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Changing host)
[05:09:26] *** Joins: Cera (~Cera@user/Cera)
[05:09:52] *** Joins: Viewday117 (~Viewday@user/viewday)
[05:10:08] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:10:52] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:11:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:12:12] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:12:17] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:12:17] *** Viewday117 is now known as Viewday11
[05:12:21] *** Joins: strugee (~strugee@173.211.12.73)
[05:14:51] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[05:15:28] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[05:16:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[05:16:34] <pytemp101> Hey, I'm using string.Template. Am I allowed to use it in this form by splitting the string over multiple lines? I got some strange results after substitution and I'm thinking this might be the problem.
[05:16:34] <pytemp101> https://bpa.st/ZRUA
[05:16:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:17:31] <parv> Why do you 2 sets of parentheses?
[05:17:37] <nedbat> pytemp101: what is the strange result?
[05:17:53] <nedbat> you don't need both parens, but they won't hurt.
[05:17:53] <parv> s/you 2/you have 2/
[05:18:16] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[05:18:18] <nedbat> pytemp101: but you need another space, or you'll have "permissionor" in your result
[05:18:27] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[05:18:27] *** Joins: r3m (~launch@user/r3m)
[05:18:43] <pytemp101> parv, one for Template and one for splitting the string. Is that not correct?
[05:19:09] *** Quits: harpia (~harpia@2804:fc:8de2:e700:f59b:322e:48e2:b259) (Quit: harpia)
[05:19:18] <pytemp101> nedbad was just about to take a screenshot as it relates to a Discord bot API, but you've got the error there
[05:19:21] *** Joins: harpia (~harpia@187.49.85.200)
[05:19:23] <pytemp101> needbat
[05:19:49] <parv> pytemp101, There is no need "for splitting the string"; Tempalte( ) takes care of that
[05:21:10] <parv> pytemp101, No that was not clear. Try: There is no need for 2nd set of parentheses "for splitting the string"; parentheses in Template( ) take care of that
[05:21:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:21:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:22:39] <pytemp101> nedbat thank you very much that solves the problem, minor fix
[05:23:15] <pytemp101> parv, thank you ill ditch the extra parens then as a style thing
[05:24:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:24:59] *** Joins: bindu_ (~bindu@user/bindu)
[05:25:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:25:36] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[05:26:20] *** Joins: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[05:26:35] <pytemp101> guess while i'm here, is there a term for when you use () to break up strings?
[05:26:55] *** bindu_ is now known as bindu
[05:27:07] <novapy> Can someone help me get pytest working? it's not finding anything to test
[05:28:19] <nedbat> novapy: give us some details. Is your code online somewhere?
[05:28:46] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[05:29:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:29:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:30:15] <TML> pytemp101: You're not "us[ing] () to break up strings" - what you're seeing there is string literal concatenation, and it has nothing to do with the parens. Try:  a = "a" "b" "c" -- you'll see that this results in the string "abc", no parens needed
[05:30:17] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:22] <novapy> nedbat: https://github.com/NeonSupernova/yt-feed
[05:30:35] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[05:30:39] *** Joins: kostkon_ (~androirc@2a02:587:a101:711a:b1a9:e0ab:2766:b2d2)
[05:31:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:31:47] <BtbN> Why do you have a bunch of tarballs in there? And an egg-info dir? Also, I agree with pytest, can't find any tests either.
[05:32:06] <TML> novapy: I would have to agree with pytest, I don't see any tests defined
[05:32:13] <TML> BtbN: Heh
[05:32:17] <pytemp101> TML thank you! not sure where I got that parens were needed for this. Is it a convention? Does the concatenation happen at runtime?
[05:32:42] <nedbat> novapy: where are your tests?
[05:32:46] <novapy> TML: how do I set up tests?
[05:32:50] <TML> pytemp101: https://docs.python.org/3/reference/lexical_analysis.html#string-literal-concatenation
[05:33:10] <TML> novapy: https://docs.pytest.org/en/6.2.x/getting-started.html#create-your-first-test
[05:33:17] *** Joins: vlm (~vlm@user/vlm)
[05:34:25] <pytemp101> TML thanks that answers both questions
[05:34:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[05:34:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:35:03] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:36:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:36:27] <novapy> TML: I see the docs, but I don't know how I would implement tests in my project?
[05:36:54] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[05:36:55] <TML> novapy: I would suggest following the steps laid out in the section "Create your first test" and see what happens
[05:37:02] <novapy> BtbN: I am still sorting out my repo
[05:37:11] <jinsun> novapy: also see https://nedbatchelder.com/text/test3.html
[05:38:01] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:38:06] <novapy> TML: I understand what is happening in the docs, I just don't understand I work them in to my repo
[05:38:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[05:39:02] *** Quits: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br) (Quit: vsantana)
[05:39:14] <TML> novapy: Hmm - I'm not able to reconcile those two statements. If you understand what happened, you should be able to apply what happened to your own code?
[05:39:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:39:38] *** Joins: mickey8 (~user@user/mickey)
[05:39:46] <jinsun> novapy: also see https://docs.pytest.org/en/6.2.x/goodpractices.html
[05:40:48] *** Joins: califax- (~califax@user/califx)
[05:41:56] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[05:42:03] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:42:14] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:43:13] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:43:15] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[05:43:19] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:43:38] *** Joins: brabrax (~brabrax@user/brabrax)
[05:44:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:44:27] *** califax- is now known as califax
[05:44:35] *** Quits: arinov (~arinov@31.143.66.159) (Ping timeout: 256 seconds)
[05:45:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:45:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:45:55] *** Joins: led_belly (~led_belly@37.120.197.46)
[05:47:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[05:47:23] *** Quits: pytemp101 (~pytemp101@90.255.60.204) (Quit: Client closed)
[05:48:07] *** Quits: harpia (~harpia@187.49.85.200) (Quit: harpia)
[05:48:13] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:50:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:52:10] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[05:52:13] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:52:20] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[05:53:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[05:54:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:54:24] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[05:58:45] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.46)
[05:59:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:59:21] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.46) (Read error: Connection reset by peer)
[06:01:00] *** Quits: resmo (~resmo@143-48-239-77.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[06:02:17] *** Joins: resmo (~resmo@2a00:d420:9:8a00:ad0b:ca34:6869:6aa2)
[06:02:33] *** Joins: shrysr (4e0b42ae98@user/shrysr)
[06:03:58] *** Joins: summersault (~summersau@179.221.251.36)
[06:05:09] *** Quits: kostkon_ (~androirc@2a02:587:a101:711a:b1a9:e0ab:2766:b2d2) (Read error: Connection reset by peer)
[06:06:05] *** Joins: kostkon_ (~androirc@2a02:587:a101:711a:b1a9:e0ab:2766:b2d2)
[06:06:54] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778) (Ping timeout: 250 seconds)
[06:07:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:07:36] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:07:51] *** Joins: mickey8 (~user@user/mickey)
[06:08:11] *** Quits: dre (~dre@2001:8003:c932:c301:880:1cdd:3f72:271d) (Ping timeout: 250 seconds)
[06:09:53] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[06:10:12] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[06:10:54] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:12:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:13:20] *** Joins: Guest8915 (~Guest89@bras-vprn-toroon4686w-lp130-09-174-91-76-108.dsl.bell.ca)
[06:13:44] <Guest8915> is there a way to assign base 2, 3, 4, etc. numbers?
[06:13:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:14:19] <Guest8915> I know you can do unreal numbers using ** or something like that, but I want to do math on different bases so what's the best way to do that?
[06:16:58] <vdamewood> unreal? You mean imaginary?
[06:17:38] <Guest8915> yeah complex, I see I can use 0b100 for base 2 but can I do other bases?
[06:17:42] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:18:06] <Guest8915> complex is (3 + 6j) where 6 is the imaginary part
[06:21:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:21:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:24:37] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[06:25:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:25:30] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[06:26:09] <SnoopJ> Guest8915, you can express octal and hex with the 0o and 0x prefixes. 0o004, 0x04, 0b100, and 4 are all literals for the same integer.
[06:26:29] <Guest8915> oh okay I see, very cool
[06:26:37] <SnoopJ> and int() can construct integers from strings with arbitrary bases, should you need to do that
[06:27:02] <jw_dungeon> https://stackoverflow.com/questions/2267362/how-to-convert-an-integer-to-a-string-in-any-base
[06:27:04] <SnoopJ> slightly* arbitrary
[06:27:10] <Guest8915> I guess that makes sense. the math can always be done in base 10 (or really base 2)
[06:28:01] <Guest8915> or is it base 2? someone told me once that modern computers understand base 10
[06:28:07] <SnoopJ> Guest8915, there are I think at least two readings of what "the math" means: 1) the abstract idea of an integer and doing arithmetic with it, and 2) the concrete implementation thereof.
[06:28:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:28:35] <Guest8915> I meant doing arithmetic with it
[06:29:07] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:30:27] <SnoopJ> in that case, all `int`s are the same in Python, notation is just that: a way to represent an integer in a string. The value you get for equivalent notatoin is the same value. I.e. 42 is the forty-second whole number no matter how you spell it, and it can be spelled a lot of ways.
[06:30:54] <Guest8915> yeah I see that I can use print to output in different bases as well
[06:30:58] <SnoopJ> but the syntax of Python itself only recognizes a few special bases: 10, 2, 8, 16
[06:31:13] <Guest8915> makes sense, thank you
[06:31:21] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:31:55] *** Joins: Vonter (~Vonter@user/vonter)
[06:32:04] <SnoopJ> Guest8915, what kinds of computations are you interested in doing with non-decimal bases?
[06:32:32] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[06:33:21] <Guest8915> none really. I was talking to someone in another chat and they were having trouble with keeping everything in binary I think and that led me to ask the question of if I could store different bases the same way I was able to store real and imaginary parts of a number
[06:33:21] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[06:33:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:33:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:35:00] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:35:29] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:63be:4b7:5b8:1ce3) (Remote host closed the connection)
[06:36:04] <SnoopJ> Gotcha. I ask because if you were interested in the mathematics bits of it, sympy/sagemath probably offer some much richer functionality for representing those ideas
[06:36:29] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250)
[06:36:46] <Guest8915> oh okay well I'll check those out. thanks!
[06:37:35] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:37:45] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Quit: WeeChat 3.3)
[06:37:52] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[06:38:07] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250) (Remote host closed the connection)
[06:38:10] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[06:38:54] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250)
[06:39:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4a0c:eee9:fb4b:ee7b)
[06:41:02] *** Joins: tomg (~tomg@user/tomg)
[06:41:25] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[06:41:37] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:41:40] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836)
[06:41:44] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[06:45:12] *** Joins: adham (~adham@37.239.160.36)
[06:45:47] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[06:46:40] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1420:1fc1:b477:3704:2816:6836) (Read error: Connection reset by peer)
[06:47:04] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[06:47:37] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[06:49:26] <whatsupdoc> Is there a nice way to convert a Counter into a min heap?
[06:49:56] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[06:51:14] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[06:51:53] *** Joins: adeliktas5 (~adeliktas@i59F4D8CF.versanet.de)
[06:52:07] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:53:01] *** Quits: adeliktas (~adeliktas@i59F4A591.versanet.de) (Ping timeout: 240 seconds)
[06:53:01] *** adeliktas5 is now known as adeliktas
[06:53:53] *** Joins: millido (~millido@84.210.150.128)
[06:56:02] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[06:58:44] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[07:04:15] *** Quits: jamea (~jamea@177.239.80.236) (Ping timeout: 256 seconds)
[07:07:22] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:42] *** Quits: Guest8915 (~Guest89@bras-vprn-toroon4686w-lp130-09-174-91-76-108.dsl.bell.ca) (Quit: Client closed)
[07:08:11] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:08:11] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:08:11] *** finn_elija is now known as FinnElija
[07:10:35] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:13:18] *** Quits: summersault (~summersau@179.221.251.36) (Read error: Connection reset by peer)
[07:13:19] *** Joins: Guest8986 (~Guest89@bras-vprn-toroon4686w-lp130-09-174-91-76-108.dsl.bell.ca)
[07:13:27] *** Guest8986 is now known as codebam
[07:13:35] *** Quits: codebam (~Guest89@bras-vprn-toroon4686w-lp130-09-174-91-76-108.dsl.bell.ca) (Changing host)
[07:13:35] *** Joins: codebam (~Guest89@user/codebam)
[07:13:43] *** Parts: codebam (~Guest89@user/codebam) ()
[07:13:51] *** Joins: summersault (~summersau@179.221.251.36)
[07:15:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[07:17:19] *** Joins: fikran (~fikran@user/fikran)
[07:19:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:19:26] *** Joins: hams (~hams@user/hams)
[07:20:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:22:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:23:57] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[07:25:17] *** Joins: audiobirb (~audio@user/audio)
[07:25:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:25:32] *** Joins: shad0w (~shad0w@user/xshadow)
[07:25:43] *** Joins: tijuco (~tijuco@user/tijuco)
[07:26:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:26:07] *** Quits: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[07:26:12] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[07:26:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:26:53] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (Remote host closed the connection)
[07:27:29] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[07:27:40] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[07:28:13] *** Quits: kostkon (~kostkon@2a02:587:a101:711a:74ff:7d65:3f72:693a) (Ping timeout: 240 seconds)
[07:28:17] *** Quits: kostkon_ (~androirc@2a02:587:a101:711a:b1a9:e0ab:2766:b2d2) (Ping timeout: 240 seconds)
[07:28:33] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[07:29:28] *** Joins: kostkon (~kostkon@2a02:587:a10c:ab13:166c:4076:2353:549e)
[07:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:33] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[07:31:05] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:31:13] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[07:31:18] <shad0w> i have to use python 2.7 for something and need pathlib, installed but was getting an error no attrib read_text, so i uninstalled, installed pathlib2, however am still being asked for pathlib. is there a way to symlink pathlib2 as pathlib, or another quick solution?
[07:31:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4a0c:eee9:fb4b:ee7b) (Quit: Leaving)
[07:31:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:32:14] *** Quits: nepeat (~nepeat@79.110.170.60) (Quit: ZNC 1.8.2 - https://znc.in)
[07:32:17] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:40] *** Joins: nepeat (~nepeat@79.110.170.60)
[07:32:47] *** Joins: Pixi (~Pixi@user/pixi)
[07:33:48] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[07:34:19] <voldial> why does mypy say this is a incompatiable type? "found_type: Type = None" -> mypy: Incompatible types in assignment (expression has type "None", variable has type "Type[Any]")"
[07:34:38] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[07:34:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:35:37] *** Quits: kostkon (~kostkon@2a02:587:a10c:ab13:166c:4076:2353:549e) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:40] <SnoopJ> voldial, None is not a type (it's the sole instance of the type NoneType)
[07:37:21] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 256 seconds)
[07:37:25] <voldial> SnoopJ: "from typing import NoneType" -> "ImportError: cannot import name 'NoneType' from 'typing' (/usr/lib/python3.9/typing.py)"
[07:37:41] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[07:38:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:38:56] <voldial> I tried "found_type: Optional[Type] = None" but then pylint complains later when I use it as an isinstance() argument: "pylint: [isinstance-second-argument-not-valid-type] Second argument of isinstance is not a type [W1116] (W)"
[07:38:58] <SnoopJ> voldial, type(None) is a fairly idiomatic spelling, if that's meant to be a question.
[07:39:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:39:22] <voldial> testing
[07:39:31] *** Quits: AliasSpider (~spider-ku@nitra.ostv.sk) (Quit: Leaving)
[07:40:08] <voldial> SnoopJ: yes. perfect. "found_type: Type = type(None)" thanks!
[07:40:38] <enyc> shad0w: patentilaly try using old pip2 to install pathlib as needed?
[07:41:47] <SnoopJ> shad0w, are you trying to `import pathlib` or `import pathlib2`? The 3rd-party library provides the latter. If you want to use it as a replacement, you might want to `import pathlib2 as pathlib`
[07:43:03] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:43:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:44:01] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:8f37:e40e:dd7d:af29)
[07:45:33] <SnoopJ> ...the library also appears to have dropped 2.7 support this week? https://github.com/jazzband/pathlib2/commit/44f00dbe4372d9d88c0f145df5b4f51061e1d50c
[07:46:00] <SnoopJ> So if you plan to use that on 2.7, you should probably pin the version you install
[07:46:21] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[07:46:46] <shad0w> happens when trying to install another package, usb.  bah, ill just stop being lazy and update the script to python3 ;-; thank you for your help anyway.
[07:47:26] <SnoopJ> yes if that's at all an option, bringing it out of the distance past is a good idea :)
[07:48:10] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[07:48:31] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[07:49:35] <SnoopJ> the `modernize` or `futurize` libraries may be useful to you in doing that, they're aimed at helping with that kind of major-version migration
[07:49:42] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[07:49:59] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[07:50:01] *** Quits: avaxar (~avaxar@36.72.212.122) (Read error: Connection reset by peer)
[07:50:31] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:51:03] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net)
[07:51:11] *** Joins: KevinX (~KevinX@user/KevinX)
[07:52:39] *** Quits: sreve (~quassel@p549d746f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:52:58] *** Joins: sreve (~quassel@p4ff44b91.dip0.t-ipconnect.de)
[07:53:52] <shad0w> at least the scripts arent massive, appreciate those tips though, I will check that out now :)
[07:53:53] *** Joins: waynew (~wayne@user/waynew)
[07:54:38] <SnoopJ> yea, might be overkill if it's not a lot of code
[07:54:41] *** Joins: avaxar (~avaxar@180.241.197.27)
[07:55:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:56:52] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[08:00:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:01:26] *** Joins: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com)
[08:03:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[08:03:26] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778)
[08:06:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[08:09:08] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[08:09:10] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-2513-aa41-6555-989e.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[08:11:11] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[08:15:00] *** Joins: zumba_addict63 (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[08:15:15] *** Joins: upsala (~zcb@185.213.155.252)
[08:16:28] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[08:16:28] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[08:16:30] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:eb68:1b75:8b2e:350a)
[08:17:15] *** Joins: chives (~chives@64.130.100.177)
[08:18:57] *** Quits: envex (~rf@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 240 seconds)
[08:19:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:22:04] *** Joins: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[08:22:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:24:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:26:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:28:01] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[08:28:17] *** Joins: frost (~frost@user/frost)
[08:28:21] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:28:21] *** Joins: summersault (~summersau@179.221.251.36)
[08:31:58] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[08:34:47] *** Quits: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: I'm off to hail the VOID. (WeeChat 3.0))
[08:35:07] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[08:35:56] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[08:36:50] *** jazzy2 is now known as jazzy
[08:38:18] *** Joins: aghast (~aghast@172.58.236.217)
[08:38:40] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[08:39:25] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[08:39:35] *** Joins: txtsd (~txtsd@user/txtsd)
[08:41:10] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[08:46:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:48:21] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:50:10] *** Joins: moog (~moog@107.77.244.68)
[08:50:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:51:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:53:17] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[08:55:37] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[08:57:10] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:58:10] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:58:17] *** Joins: Common__ (~Common@096-033-221-075.res.spectrum.com)
[09:00:05] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:01:17] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[09:01:47] *** Quits: Common_ (~Common@096-033-221-075.res.spectrum.com) (Ping timeout: 256 seconds)
[09:02:19] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[09:02:31] *** Joins: dob1 (~dob1@user/dob1)
[09:02:31] *** Joins: msek_ (~Username@pd9fb3222.dip0.t-ipconnect.de)
[09:03:58] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:06:34] *** Joins: pshou (pshou@j194138.upc-j.chello.nl)
[09:06:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[09:06:50] <yolo> import os; os.environ["XYZ"]=100; env | grep XYZ nothing showed up, what's missing?
[09:07:08] *** Quits: msek_ (~Username@pd9fb3222.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:07:25] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[09:07:36] *** Joins: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[09:08:06] <NeilRG_> Can someone explain this MyPy error? https://mypy-play.net/?mypy=master&python=3.10&gist=b5e04adf1e4cfe82841331c310bb75b4&flags=strict
[09:08:07] *** Joins: nomic (~nomic@185.192.69.77)
[09:08:09] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[09:08:16] *** Joins: dre (~dre@2001:8003:c932:c301:1c5e:3f1c:f7a4:be5b)
[09:08:31] <SnoopJ> yolo, well, it should be "100" to avoid a TypeError, but nothing will show up with that because the new process cannot modify the parent process's environment
[09:09:26] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:244f:15c6:2e27:47a5) (Quit: Leaving)
[09:09:29] <yolo> so, what's the best approach to share env between to processes? Thanks
[09:09:32] <SnoopJ> i.e. that starts a new process running `python3`, which gets a copy of the shell's environment, modifies it, and then stops running (taking the modified environment with it). Then, the shell's (unmodified) environment is listed.
[09:09:40] <yolo> s/to/two/
[09:10:15] <SnoopJ> yolo, each process gets its own environment, so it's not a practical way to do interprocess communication. There are other options, though. What kind of data are you communicating?
[09:10:16] <yolo> so os.environ just shares the env in the same process without using a global variable and without passing arg around, got it
[09:10:31] * SnoopJ isn't sure what that means
[09:11:06] <yolo> in one py file i mean, multiple functions, use os.environ to set/get 'global' variables
[09:11:20] <SnoopJ> why not use a global variable?
[09:11:40] <yolo> yes i am wondering, what's the point of os.environ if i can use global variable
[09:11:55] <yolo> but it makes sense if i do subprocess
[09:12:03] <SnoopJ> For when you want to read/write data to the process's environment. This is useful if you're going to spawn child processes, for instance.
[09:12:06] <yolo> not sure if it's 'exported' though
[09:12:20] <SnoopJ> Or if you are writing a program whose behavior can be configured with env vars
[09:13:28] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:13:46] <yolo> i'm writing a py script to move my windows to any location on screen(using pygobjects, i need remember previous position of the window, how do I keep that info persistent? do I have to use a file on the system, or .env? or is there a better way
[09:13:58] *** Joins: Celeo (~Celeo@user/celeo)
[09:14:02] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2c2d:3add:9203:6b30)
[09:14:03] *** Joins: notepad75 (~notepad@129.159.46.243)
[09:14:27] <yolo> i need remember previous coordinates so  I can move my windows back
[09:14:40] *** Quits: ldlework (~hexeme@user/hexeme) (Remote host closed the connection)
[09:14:41] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[09:14:47] *** Quits: notepad7 (~notepad@129.159.46.243) (Read error: Connection reset by peer)
[09:14:47] *** notepad75 is now known as notepad7
[09:15:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:15:10] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:15:16] <yolo> goal is to move any window to the center of my 42" 4k monitor before my neck is permenantly broken after stretching at all directions constantly, i now want to move those windows right in front of my eyes instead when i need view them
[09:15:31] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[09:16:01] *** Joins: hexeme (~hexeme@user/hexeme)
[09:16:02] <yolo> so I need swap in/out any windows to the center, need remember those (x,y) coordinates
[09:17:07] <SnoopJ> I'm not sure where Windows applications tend to store that information. I would guess in the Registry
[09:17:52] <yolo> that's not the question actually, i can actually move windows now, except I can not return my center windows to its original location, because i can not remember them in variables yet
[09:18:15] <yolo> checking some config env file approach now, basically save them to a temp file under /tmp hidden
[09:18:35] <SnoopJ> Sure, saving to the disk is possible, too.
[09:18:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:19:11] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:19:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:20:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:20:36] <yolo> ok, thanks, guess read/write from/to a file somewhere is the simplest approach then, thanks.
[09:20:36] *** Quits: dre (~dre@2001:8003:c932:c301:1c5e:3f1c:f7a4:be5b) (Ping timeout: 250 seconds)
[09:21:34] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 260 seconds)
[09:22:03] *** Joins: JordiGH (~jordi@user/jordigh)
[09:22:07] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:23:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:24:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:25:16] *** Quits: nomic (~nomic@185.192.69.77) (Quit: Leaving)
[09:25:41] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[09:26:40] *** Joins: fikran (~fikran@user/fikran)
[09:26:40] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[09:26:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:27:06] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[09:27:51] *** Joins: widp (~user@124.123.104.227)
[09:29:37] *** Quits: adham (~adham@37.239.160.36) (Ping timeout: 240 seconds)
[09:29:42] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[09:29:42] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:30:02] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[09:30:47] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:30:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:31:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:32:13] *** Quits: emerent (~quassel@p200300cd570443d4ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:32:31] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[09:32:41] *** Joins: emerent (~quassel@p200300cd570443d9ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:32:44] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[09:33:09] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[09:33:22] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Quit: WeeChat 2.3)
[09:33:50] *** Joins: NiD27 (~nid27@49.205.144.131)
[09:33:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:34:59] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:35:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:37:29] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 256 seconds)
[09:38:43] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:31fb:1f22:2ca7:237d)
[09:40:21] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[09:40:35] *** lockywolf_ is now known as ayecee_
[09:41:03] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[09:41:43] *** ayecee_ is now known as lockywolf_
[09:42:11] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:47:36] *** Joins: Nact (~l@host-149-154-225-118.dynamic.voo.be)
[09:48:04] *** lockywolf_ is now known as lockywolf
[09:48:15] *** Quits: beanzilla (~beanzilla@user/beanzilla) (Ping timeout: 256 seconds)
[09:48:28] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[09:48:42] *** Quits: aghast (~aghast@172.58.236.217) (Quit: Leaving)
[09:48:46] *** Joins: kostkon (~kostkon@2a02:587:a116:5dfb:3344:4e2a:bfc7:6d2d)
[09:49:49] *** Joins: raym (~raym@user/raym)
[09:50:59] <dba> How do I get the key string of a dict? `{'ABS': 12}` I want to get the string `ABS`
[09:51:18] *** Joins: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com)
[09:53:24] <Peng> Why do you have a dict with one key that you don't know? What do you want to do with it?
[09:54:19] *** Quits: Nact (~l@host-149-154-225-118.dynamic.voo.be) (Quit: Konversation terminated!)
[09:54:38] <Repiphany> You could do `k, = your_dict` if it only has one entry
[09:54:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:55:28] <Peng> Slick
[09:55:35] <dba> Repiphany `ValueError: too many values to unpack (expected 1)`
[09:56:07] <dba> I have tried that but there are hell load of nesting
[09:56:09] *** Joins: pshou- (~pshou@j194138.upc-j.chello.nl)
[09:56:18] <Repiphany> How do you know which key you want if there are multiple keys that you don't know
[09:58:16] <Repiphany> `list(your_dict)` gives you a list of all the keys and you can do whatever you want to get at keys
[09:58:29] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[09:58:41] <dba> I did dict1.keys() and returned this `dict_keys(['2219236', '2219269', 'P429043', '2219244'])` not I just want to extract the values inside. it is posssible?
[09:59:20] <widp> [x for x in dict_keys[0]] ?
[09:59:42] *** Quits: demon__ (~user@62.114.238.173) (Remote host closed the connection)
[09:59:55] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[10:00:01] <dba> widp `dict_keys[0]` returned `TypeError: 'dict_keys' object is not subscriptable`
[10:00:23] <widp> gimme a sec
[10:00:28] <Repiphany> `list(your_dict)[0]`
[10:00:59] *** Joins: someuser (~user@62.114.238.173)
[10:03:00] <widp> so dict1.keys() returns a set
[10:03:02] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[10:03:10] <cyphase> tfw you majorly refactor a script and it works the first time, because types
[10:03:20] <widp> you can do { x for x in dict1.keys()} I think.
[10:03:28] *** Joins: adham (~adham@37.239.160.39)
[10:03:50] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:03:51] <dba> Thanks
[10:03:53] *** Joins: malwar3hun73r (~malwar3hu@134.122.29.124)
[10:04:02] <dba> Repiphany solution worked
[10:04:35] <dba> I always thought [somthing] if similar to list(something) :D
[10:06:17] <dba> then what would be `l = list` and empty list?
[10:07:00] *** Joins: bluedust (~bluedust@103.160.233.28)
[10:07:10] *** Joins: txtsd (~txtsd@user/txtsd)
[10:07:10] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[10:07:55] *** Quits: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com) (Quit: WeeChat 3.4)
[10:08:14] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[10:08:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778) (Ping timeout: 240 seconds)
[10:09:00] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[10:10:17] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[10:10:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:11:07] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[10:11:33] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[10:12:18] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[10:13:41] <BrenBarn> `[something]` makes a list with one element that is `something`, but `list(something)` makes a list whose elements are the elements of `something`
[10:14:11] <BrenBarn> (i.e., what you get by iterating over `something`)
[10:14:17] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[10:14:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:14:58] *** Joins: crashrep (~crashrep@user/crashrep)
[10:15:01] *** Quits: seabre_ (~seabre@user/seabre) (Ping timeout: 240 seconds)
[10:15:17] *** Joins: bluedust_ (~bluedust@59.99.180.71)
[10:15:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:16:36] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[10:18:17] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 240 seconds)
[10:20:03] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[10:20:24] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 250 seconds)
[10:20:33] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[10:20:48] *** Quits: adham (~adham@37.239.160.39) (Ping timeout: 256 seconds)
[10:20:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:21:12] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[10:21:18] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[10:22:15] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[10:23:01] *** Quits: pshou (pshou@j194138.upc-j.chello.nl) (Remote host closed the connection)
[10:23:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:23:42] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[10:23:49] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:23:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:24:03] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[10:24:56] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:25:22] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[10:25:59] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 256 seconds)
[10:26:18] *** Joins: anotheruser (~user@62.114.112.174)
[10:26:30] <dba> BrenBarn, Thanks for the explanation
[10:27:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:28:14] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[10:29:02] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[10:29:17] *** Quits: someuser (~user@62.114.238.173) (Ping timeout: 240 seconds)
[10:29:47] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:30:24] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:30:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:33:01] *** Quits: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:34:13] *** Joins: pro_z (~pro_z@37.214.50.160)
[10:34:55] *** Quits: pshou- (~pshou@j194138.upc-j.chello.nl) (Quit: WeeChat 2.8)
[10:35:09] *** Joins: pshou (~pshou@j194138.upc-j.chello.nl)
[10:35:14] *** Quits: bluedust_ (~bluedust@59.99.180.71) (Remote host closed the connection)
[10:36:25] *** hexeme is now known as ldlework
[10:36:53] <stewie925> to get string from `abs` from dict `{"abs":1}` :  `[x for x in dict.keys()][0]` ?
[10:37:12] <stewie925> to get string `abs` , I mean
[10:38:13] *** Quits: pshou (~pshou@j194138.upc-j.chello.nl) (Client Quit)
[10:38:15] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[10:38:28] <stewie925> oh yeah, list(dict) works too...
[10:38:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:38:37] *** Joins: pshou (~pshou@j194138.upc-j.chello.nl)
[10:39:55] *** Joins: fef (~thedawn@user/thedawn)
[10:42:34] *** Joins: savolla (~quassel@88.227.92.215)
[10:43:40] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[10:44:54] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[10:46:30] <stewie925> Im doing some lambda exercises, and came across this problem and its respective solution:  I don't understand how that lambda statement works   https://bpa.st/7YKQ
[10:47:11] *** Joins: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[10:47:45] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[10:47:59] *** Joins: crashrep (~crashrep@user/crashrep)
[10:48:29] <Repiphany> `x if cond else y` is a ternary expression that evaluates cond and returns x if true or y if false
[10:48:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:49:13] <Repiphany> `-1/i` would give a zero division error if i were 0 so it's just using the if ... else to avoid that in one line
[10:50:09] *** Quits: NiD27 (~nid27@49.205.144.131) (Remote host closed the connection)
[10:50:28] <stewie925> Repiphany: thank you for looking at the problem -  yeah I understand that but ... the array doesnt have a zero, so the lambda function just do a -1/x for x element in the array?
[10:50:28] <Repiphany> true/false => truthy/falsy
[10:50:55] <Repiphany> Yes
[10:50:59] <stewie925> I don't understand how that sorted the array as the problem expected
[10:51:41] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:51:57] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[10:52:12] <Repiphany> `-1/x` is closer to negative infinity when x is very small and positive
[10:52:26] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[10:52:41] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:52:53] <stewie925> I feel such a noob
[10:52:55] <Repiphany> Do you understand sorting with key functions in general
[10:53:05] <stewie925> yes, I do
[10:53:12] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[10:53:41] <stewie925> you meant sorted(list, key=lambda x:...) right?
[10:54:00] <stewie925> for simple sorting I am able to do it with lambda
[10:54:28] <Repiphany> What don't you understand with this lambda then
[10:54:38] *** Joins: seabre (~seabre@user/seabre)
[10:54:44] <stewie925> but stumped with sorting a list from [-1, 2, -3, 5, 7, 8, 9, -10] to [2, 5, 7, 8, 9, -10, -3, -1]
[10:54:49] <Repiphany> The key function is just evalulated for each element in the list and you're sorting by the result of that
[10:54:53] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[10:55:37] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:55:38] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[10:55:39] <stewie925> oh, so the i is sorted by the -1/x value
[10:55:45] <stewie925> dang...
[10:55:57] <Repiphany> So really you didn't understand what sorting with key functions did
[10:56:57] *** Quits: pshou (~pshou@j194138.upc-j.chello.nl) (Quit: WeeChat 2.8)
[10:57:16] <stewie925> I got confused
[10:57:28] <stewie925> but I'll run thru it again :)
[10:59:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[10:59:54] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:00:12] *** Joins: djapo (~archangel@user/djapo)
[11:01:53] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 252 seconds)
[11:02:36] *** Joins: bluedust (~bluedust@103.160.233.28)
[11:02:44] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[11:02:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:07:26] <aphysically> so how well does Python interface with Excel
[11:08:21] *** Quits: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[11:11:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[11:13:54] *** Joins: manti7 (~manti7@176.10.104.94)
[11:14:35] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:15:19] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[11:15:50] *** Joins: rendar (~rendar@user/rendar)
[11:16:26] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[11:16:30] <jinsun> aphysically: you mean reading/writing excel files? or controliing the Excel UI with python?
[11:16:45] <aphysically> probably the former
[11:17:00] <BrenBarn> there are libs for that
[11:17:04] <jinsun> you can do both, reading/writing is very easy with pandas
[11:17:05] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[11:17:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[11:18:15] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:20:03] *** Joins: kreg (~kreg@iqoqi060.uibk.ac.at)
[11:20:25] *** Joins: iflema (~ian@user/iflema)
[11:23:14] <jinsun> there is a good page in their docs about it https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_spreadsheets.html
[11:23:40] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[11:24:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:24:37] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[11:26:54] <jinsun> controlling the Excel UI is harder, you have to use win32com, and their are no good docs about it, have to piece it together with random stackoverflow posts and the Excel VBA docs
[11:28:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:28:35] *** Joins: nomic (~nomic@185.192.69.77)
[11:28:48] *** Quits: anotheruser (~user@62.114.112.174) (Ping timeout: 256 seconds)
[11:28:50] *** Joins: magla (~gelignite@55d43a63.access.ecotel.net)
[11:29:20] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Client Quit)
[11:30:53] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:15] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:33:28] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[11:34:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:36:01] *** Joins: fikran (~fikran@user/fikran)
[11:36:14] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:37:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:37:40] *** Joins: cow_2001 (~un@user/cow-2001/x-5712099)
[11:37:49] <Timvde> I know this exists, but I have never tried it (because I have absolutely no use case for it): https://www.xlwings.org/
[11:38:26] *** Joins: audiobirb (~audio@user/audio)
[11:38:30] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:39:02] <deniska> I used openpyxl for reading/writing xlsx files
[11:39:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[11:39:36] *** Joins: dme86 (~dan@user/dan86)
[11:40:18] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[11:40:42] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[11:41:07] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[11:41:35] *** Parts: cow_2001 (~un@user/cow-2001/x-5712099) ()
[11:41:40] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:42:29] *** Joins: Babar_ (~Babar@115.74.184.138)
[11:42:29] *** Babar is now known as Guest7744
[11:42:29] *** Quits: Guest7744 (~Babar@115.74.184.138) (Killed (tantalum.libera.chat (Nickname regained by services)))
[11:42:29] *** Babar_ is now known as Babar
[11:42:35] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:42:54] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[11:42:58] *** Joins: M3troidman (~buttler@196.244.191.182)
[11:43:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[11:44:02] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[11:44:31] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:45:55] <jinsun> pandas also just uses openpyxl for xlsx
[11:45:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:46:01] *** Joins: blacked (~blacked@user/blacked)
[11:46:19] *** blacked is now known as pingpongball
[11:47:00] <jinsun> but its more convenient to use pandas api for simple stuff, openpyxl is more "lower-level"
[11:48:25] *** Joins: han-solo (~han-solo@user/han-solo)
[11:49:57] *** Quits: M3troidman (~buttler@196.244.191.182) (Ping timeout: 240 seconds)
[11:50:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:50:38] *** Joins: M3troidman (~buttler@196.244.191.182)
[11:52:08] *** Quits: magla (~gelignite@55d43a63.access.ecotel.net) (Quit: Stay safe!)
[11:54:17] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:56:05] *** Quits: M3troidman (~buttler@196.244.191.182) (Ping timeout: 256 seconds)
[11:56:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[12:00:04] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[12:00:16] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:00:39] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:02:14] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 256 seconds)
[12:03:14] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Textual IRC Client: www.textualapp.com)
[12:03:32] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:03:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:03:56] *** Quits: savolla (~quassel@88.227.92.215) (Ping timeout: 256 seconds)
[12:04:24] *** Quits: upsala (~zcb@185.213.155.252) (Ping timeout: 250 seconds)
[12:05:29] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778)
[12:05:43] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[12:06:16] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.4)
[12:06:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:06:28] *** Joins: upsala (~zcb@185.213.155.252)
[12:06:57] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[12:07:42] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[12:08:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:11:02] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[12:13:17] *** Joins: jug (~jug@user/jug)
[12:15:44] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[12:16:28] <Swayze> i've written code in the pst that spawned excel.exe to do things :-p
[12:16:44] <Swayze> just cant remember where or what but i do believe it was to execute scripts inside the doc
[12:17:00] <Swayze> lol not helpful i guess
[12:17:04] * Swayze googles more
[12:18:04] <Swayze> EXCEL.EXE /e "c:\YourWorkbook.xls"
[12:18:13] <Swayze> then call your macro from workbook_open event
[12:18:27] <Swayze> https://stackoverflow.com/questions/2050505/way-to-run-excel-macros-from-command-line-or-batch-file
[12:19:21] <Swayze> so you would do that when you needed to run a macro and then uses pandas or openpyxl to read/update data
[12:20:06] *** Joins: widp (~user@124.123.104.227)
[12:21:11] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[12:22:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:22:52] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[12:24:14] *** Quits: pingpongball (~blacked@user/blacked) (Quit: Client closed)
[12:24:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:24:54] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 256 seconds)
[12:24:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:25:38] *** Quits: doko (~doko@110-170-76-239.static.asianet.co.th) (Ping timeout: 250 seconds)
[12:27:04] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:eb68:1b75:8b2e:350a) (Remote host closed the connection)
[12:27:34] *** Joins: palasso (~palasso@user/palasso)
[12:28:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:29:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:29:44] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:30:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:30:14] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:56] *** Joins: cosimone (~user@93-44-184-23.ip98.fastwebnet.it)
[12:34:13] *** Joins: cdown (~cdown@188.214.11.14)
[12:34:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:36:14] *** Joins: widp (~user@124.123.104.227)
[12:36:33] *** Quits: DerpGusta_ (~quassel@user/derpgusta) (Ping timeout: 256 seconds)
[12:40:35] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[12:42:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.23) (Ping timeout: 256 seconds)
[12:44:29] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:45:09] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2c2d:3add:9203:6b30) (Quit: Client closed)
[12:45:35] *** Joins: dme86 (~dan@user/dan86)
[12:45:49] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[12:45:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:46:56] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:47:09] *** Joins: savolla (~quassel@88.227.92.215)
[12:47:57] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[12:48:08] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[12:48:13] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[12:48:49] *** Joins: crashrep (~crashrep@user/crashrep)
[12:49:07] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:50:29] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:54:05] *** Joins: greedom (~greedom@p200300de67361c00905302de190cf808.dip0.t-ipconnect.de)
[12:54:06] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[12:54:22] *** Quits: savolla (~quassel@88.227.92.215) (Ping timeout: 256 seconds)
[12:55:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:57:42] *** Joins: dme86 (~dan@user/dan86)
[12:57:43] *** Joins: reset (~reset@user/reset)
[13:00:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:01:36] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[13:02:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[13:03:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:03:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:04:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:04:42] *** Quits: widp (~user@124.123.104.227) (Read error: Connection reset by peer)
[13:04:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[13:04:55] *** Joins: widp (~user@124.123.104.227)
[13:04:57] *** Quits: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[13:05:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[13:07:39] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[13:07:47] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[13:08:01] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[13:08:45] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: nyaa~)
[13:08:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[13:09:00] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[13:10:33] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[13:10:59] *** Joins: kosh (~kosh@user/kosh)
[13:11:23] *** Joins: vitali64 (~vitali64@user/vitali64)
[13:12:52] *** Quits: greedom (~greedom@p200300de67361c00905302de190cf808.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:14:46] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:14:48] *** Joins: greedom (~greedom@p200300de67361c00905302de190cf808.dip0.t-ipconnect.de)
[13:14:50] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[13:16:52] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:18:34] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[13:22:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:23:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:25:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:25:45] *** gjvc_ is now known as gjvc
[13:26:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:27:51] *** Quits: greedom (~greedom@p200300de67361c00905302de190cf808.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:28:49] *** Joins: greedom (~greedom@p200300de67361c00905302de190cf808.dip0.t-ipconnect.de)
[13:28:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:30:22] <dreamon> hello. did "pip install flask" if I start python3 in /home/my/ folder I can "import flask". after cd /home/my/different/ same "import flask" give me a -> ImportError: cannot import name 'Flask' from partially initialized module 'flask' (most likely due to a circular import)
[13:30:28] *** Joins: DiLenzo (~Thunderbi@ip-86-49-104-252.net.upcbroadband.cz)
[13:31:19] <deniska> dreamon: did you name a file with python code 'flask.py'?
[13:31:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:32:27] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[13:32:37] *** Quits: NealRame (~a@89.187.163.193) (Ping timeout: 240 seconds)
[13:33:42] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[13:34:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:35:51] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:36:08] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d1bf:f70:2564:d4e7)
[13:36:34] *** Joins: NealRame (~a@89.187.163.193)
[13:37:08] *** Joins: jay-m126 (~jay-m@154.72.163.87)
[13:37:15] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[13:37:17] *** Joins: jay-m126_ (~jay-m@154.72.163.87)
[13:38:19] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Ping timeout: 256 seconds)
[13:39:09] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:39:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:39:55] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[13:40:18] *** Joins: audiobirb (~audio@user/audio)
[13:40:56] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[13:42:14] *** Joins: jay-m1261 (~jay-m@129.0.205.81)
[13:42:57] *** Quits: jay-m126 (~jay-m@154.72.163.87) (Ping timeout: 240 seconds)
[13:43:40] *** Quits: jay-m126_ (~jay-m@154.72.163.87) (Ping timeout: 256 seconds)
[13:43:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:44:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[13:44:52] *** Joins: stwange (~j@82.21.202.140)
[13:44:52] *** Joins: jay-m126 (~jay-m@129.0.205.81)
[13:44:57] *** Joins: jay-m126_ (~jay-m@129.0.205.81)
[13:45:22] *** Joins: fikran (~fikran@user/fikran)
[13:48:22] *** Quits: nomic (~nomic@185.192.69.77) (Quit: Leaving)
[13:48:32] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[13:49:06] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[13:49:10] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[13:49:58] *** Joins: dme86 (~dan@user/dan86)
[13:50:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:50:18] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[13:50:23] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[13:51:02] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[13:51:40] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[13:52:27] *** Joins: pulsar12 (~quassel@a95-92-49-154.cpe.netcabo.pt)
[13:52:59] *** Quits: DiLenzo (~Thunderbi@ip-86-49-104-252.net.upcbroadband.cz) (Quit: DiLenzo)
[13:53:11] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[13:53:53] *** pulsar12 is now known as Guest42084
[13:53:55] *** Guest42084 is now known as pulsar12
[13:53:59] *** Joins: DiLenzo (~Thunderbi@ip-86-49-104-252.net.upcbroadband.cz)
[13:54:45] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[13:54:45] *** Quits: DiLenzo (~Thunderbi@ip-86-49-104-252.net.upcbroadband.cz) (Client Quit)
[13:56:23] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[13:56:40] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[13:57:19] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[13:57:34] *** Joins: nomic (~nomic@185.192.69.77)
[13:57:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:57:53] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:58:50] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d1bf:f70:2564:d4e7) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:58:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:59:07] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[13:59:14] *** Joins: gevreeen (~gevreeen@2001:470:67:326:7191:e1b5:f0fb:7777)
[13:59:27] <gevreeen> how does one unconnect or disconnect a udp socket in python?
[14:00:01] <gevreeen> either through setting AF_UNSPEC for on unixes, or zero-filled sockaddr on windows?
[14:00:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:00:30] *** Quits: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de) (Remote host closed the connection)
[14:00:45] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:01:05] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:01:29] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) ()
[14:02:10] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[14:02:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[14:04:57] *** Joins: zamanf (~dev@213.133.91.246)
[14:04:57] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[14:04:57] *** Joins: zamanf (~dev@user/zamanf)
[14:05:03] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[14:05:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:05:47] *** Joins: dme86 (~dan@user/dan86)
[14:06:03] *** v- is now known as vaio
[14:06:27] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[14:07:33] *** Joins: masoudd (~masoudd@user/masoudd)
[14:08:15] *** Joins: dvx (~dvx@5.181.92.64)
[14:11:45] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:15:56] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[14:17:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:19:29] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[14:19:52] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:20:14] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 260 seconds)
[14:20:19] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[14:20:25] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[14:21:12] <lericson> why don't we have a func.partial
[14:21:18] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:21:26] *** Joins: savolla (~quassel@88.227.92.215)
[14:21:37] <lericson> say `def add(x, y): return x + y` then `successor = add.partial(1)`
[14:23:56] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[14:25:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:20] <masoudd> lericson, https://docs.python.org/3/library/functools.html#functools.partial
[14:25:50] <lericson> i did not choose this name on accident, masoudd
[14:25:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:25:58] <masoudd> oh my bad
[14:26:23] <lericson> the aesthetics of something looking like a function application would be a lot better
[14:26:36] <lericson> instead of having to import some spicy function from a seldom used stdlib
[14:26:43] <lericson> (get it, spicy? because currying?)
[14:26:51] <masoudd> I thought you wanted it to be possible. You're talking about syntactic sugar stuff
[14:26:58] <lericson> correct
[14:27:10] <kosh> I would say the odds of adding syntax for that is fairly low
[14:27:17] <kosh> you could suggest it but I doubt it would be accepted
[14:28:11] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[14:28:25] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:28:37] <lericson> i mean it's not /really
[14:28:41] <lericson> / syntax
[14:29:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:29:35] <lericson> syntax would be something like add[1]
[14:29:41] <lericson> which would be pretty cool if i'm being honest
[14:29:52] <lericson> but it's a bit hacky
[14:29:52] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[14:30:16] <kosh> it is not something that is needed very often and adds additional complexity to the language and there is an existing mechanism to already do what you want
[14:30:22] <bookworm> it would make the language even more complicated for no good reason
[14:30:32] <masoudd> I think you could do it with a function decorator like @partialable\n def add(...
[14:30:47] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:30:48] <han-solo> `s = lambda y: add(1,y)` # it's very easy to add
[14:30:53] <lericson> masoudd: thought about that, but then you might as well just use a lambda
[14:31:22] <lericson> han-solo: yes, which is just super ugly, don't you think? and also introduces late static binding issues
[14:32:03] *** Quits: nomic (~nomic@185.192.69.77) (Quit: Leaving)
[14:32:42] <han-solo> i don't know about binding issues
[14:32:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:32:54] <masoudd> I think functional programming is not python's main goal. So it doesn't always have the most elegant syntax for it. It is flexibale enough to make it work but it won't be pretty
[14:32:54] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[14:33:26] <kosh> the few times I have needed it I just use functools.partial
[14:33:39] <kosh> because that also lets someone know that I am doing something atypical
[14:33:48] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:34:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:34:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[14:34:43] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[14:34:52] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:35:54] *** Quits: bluedust (~bluedust@103.160.233.28) (Remote host closed the connection)
[14:37:07] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:37:52] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[14:38:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:38:22] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[14:38:22] *** Joins: somlis (~somlis@user/somlis)
[14:38:59] <han-solo> so maybe the answer to the "why there's no func.partial" is that it already exists as `functools.partial`, and it's not often one need to have a partial function ?
[14:39:17] *** Joins: nomic (~nomic@185.192.69.77)
[14:39:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 240 seconds)
[14:39:35] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:39:37] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[14:39:38] *** Quits: cosimone (~user@93-44-184-23.ip98.fastwebnet.it) (Remote host closed the connection)
[14:40:44] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:40:45] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) ()
[14:40:47] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:41:06] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[14:41:17] *** Joins: Jong (~Jong@2620:10d:c090:400::5:905d)
[14:42:25] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[14:42:26] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[14:42:52] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:43:04] <gevreeen> is asyncio's create_datagram_endpoint supposed to support dis- or unconnecting the datagram socket after binding to an address?
[14:43:08] <gevreeen> if so, how?
[14:43:59] <gevreeen> basically I wanna connect to, say 74.82.42.42:53
[14:44:16] <gevreeen> which causes the socket to bind to an address/port combo
[14:44:40] <gevreeen> and then I would like unconnect the socket, so that I could recvfrom and sendto to multiple addresses other than 74.82.42.42
[14:44:55] <bookworm> close the socket, use a new one
[14:44:58] <rvalue> can i write a shebang for a script that uses a particular conda environment?
[14:45:18] <bookworm> rvalue: sure, point to the python interpreter of the env
[14:45:26] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[14:45:54] <gevreeen> (am I silenced/muted in the channel?)
[14:45:59] <bookworm> no
[14:46:05] <gevreeen> ah, neat :)
[14:46:25] <bookworm> why don't you just close + open a new one?
[14:46:59] <gevreeen> because it's doable, both through a second connect() specifying AF_unspec on the unix oses
[14:47:00] <rvalue> bookworm: can i make it simple enough so that i just have to name the environment ? in the shebang and just use conda
[14:47:14] <gevreeen> or, via zeroing out sockaddr and then re'connect() on windows
[14:47:39] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[14:47:56] <gevreeen> as such, stdlib should provide a lightweight shortcut
[14:48:31] <gevreeen> an alterntaive is allowing socket.connect() with None
[14:48:43] <bookworm> rvalue: yes, with a wrapper script
[14:49:12] <gevreeen> so that socket.connect(None) translating into the dis-/unconnecting
[14:49:22] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:49:42] *** Joins: crashrep (~crashrep@user/crashrep)
[14:49:53] <gevreeen> this is crucial for a udp program wishing to receive multiple datagram packets in order to validate every one of them for authenticity
[14:50:08] <gevreeen> such as dnssec, as an attacker could spoof dns responses
[14:50:26] <gevreeen> which is the practice on this network
[14:50:47] *** Quits: suffer (znc@mutant.penguin.fyi) (Quit: ZNC - https://znc.in seek the truth or pay the price)
[14:51:01] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[14:51:14] *** Joins: suffer (znc@mutant.penguin.fyi)
[14:51:15] <gevreeen> not just receiving the first response and act on that, as it could well be a fake, and hence acting on such would either giving off an erroneous answer, or missing the subsequent real packet
[14:51:38] *** Joins: reset (~reset@user/reset)
[14:52:18] <gevreeen> and this requires binding to a local address
[14:52:47] <gevreeen> which cannot be determined expressly with stdlib other than calling connect on a global unicast address
[14:53:23] <dob1> I am using environs, so I have something like  some_var = env("SOMETHING")  what is a good way to exit if some_var is not defined ?
[14:53:58] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[14:54:37] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:54:41] <gevreeen> also, what if the application is first sending to a udp multicast address and then the said application would have to retrieve message from responses from multiple sources?
[14:55:00] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[14:55:06] <gevreeen> which is the case of upnp discovery
[14:55:08] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[14:55:50] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:56:08] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[14:56:09] <han-solo> `if not os.getenv('SOMETHING'): sys.exit('env var SOMETHING is not set')` # ?
[14:56:23] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[14:56:36] *** Joins: berong91 (~noob4ever@75.154.235.153)
[14:56:58] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[14:57:07] *** Joins: paul424 (~tom@ip-5-172-236-179.multi.internet.cyfrowypolsat.pl)
[14:59:08] <gevreeen> say, A is a upnp daemon, and {B,C,D,E} is on the same network. A first sends to a multicast address that {B,C,D,E} listens on. and an example reply from B would include B's address, and C C's, and so on. in this scenario A would have to call connect() the first time to determine the address it should bind to, and then unconnect so as to await a message from each of {B,C,D,E}, and then respond to each, all using the *same* socket.
[15:00:22] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[15:00:31] <NeilRG> I'm having a problem with dataclass.__post_init__
[15:00:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:00:37] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:00:47] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[15:00:49] <NeilRG> how is it possible for an attribute to have a value equal to dataclass.Field(...)?
[15:00:54] <NeilRG> I thought those get overwritten
[15:01:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:01:28] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[15:01:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:02:11] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:02:55] *** Joins: luva1 (~luva@37.120.197.38)
[15:03:00] *** Quits: luva (~luva@146.70.62.238) (Ping timeout: 256 seconds)
[15:03:01] *** luva1 is now known as luva
[15:03:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:03:45] *** Joins: ice9 (~ice9@user/ice9)
[15:03:52] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[15:05:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[15:07:38] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:09:53] <jinsun> NeilRG: show code?
[15:10:06] <NeilRG> jinsun, I think I just figured it out
[15:10:16] *** Joins: kts (~kts@103.73.237.171)
[15:10:24] <NeilRG> jinsun, the base class didn't have dataclass applied to it
[15:10:38] <NeilRG> but thanks for offering to help
[15:10:49] *** Joins: bluedust (~bluedust@103.160.233.28)
[15:10:51] <jinsun> ah yes you have to decorate all classes
[15:11:16] <jinsun> the decorator won't recursively go to parent classes to do its magic
[15:14:01] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:14:17] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[15:15:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:15:51] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:17:46] <EtherMan> If I have an app that I want to be able to take configs from env vars, command line and a config file. Which is the common priority order between the three? Command line being highest priority feels like that should be right, but I can't decide if I want configfile or env vars to be higher prio :/
[15:18:06] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 250 seconds)
[15:19:21] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:19:28] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:7918:5df4:f474:ee03)
[15:20:00] *** Joins: han-solo (~han-solo@103.82.184.192)
[15:20:25] <nedbat> EtherMan: env vars is higher priority
[15:20:38] <nedbat> because they are more ephemeral
[15:21:07] <EtherMan> Thanks :)
[15:22:50] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[15:23:21] *** Joins: kostkon__ (~kostkon@2a02:587:a117:4dd9:f27:3dab:c3c0:af1a)
[15:23:42] *** Joins: doosboox0 (~doosboox@194.132.186.60)
[15:24:02] *** Quits: doosboox (~doosboox@194.132.186.60) (Ping timeout: 240 seconds)
[15:24:02] *** doosboox0 is now known as doosboox
[15:24:29] <NeilRG> jinsun, in case you're curious, this is what I was doing: https://github.com/google/flax/pull/1911/files
[15:24:48] <NeilRG> I didn't have line 469, and it caused all kinds of problems!
[15:24:57] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 240 seconds)
[15:25:01] *** Quits: kostkon (~kostkon@2a02:587:a116:5dfb:3344:4e2a:bfc7:6d2d) (Ping timeout: 250 seconds)
[15:25:07] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Quit: leaving)
[15:25:15] *** Joins: bluedust (~bluedust@59.89.219.44)
[15:25:39] *** Joins: fef (~thedawn@user/thedawn)
[15:25:40] *** Quits: han-solo (~han-solo@103.82.184.192) (Ping timeout: 256 seconds)
[15:26:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:27:59] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[15:28:59] <mickey8> import pandas as pd work fine in a .py file, but it's undefined in a jupyter notebook. what am i missing here?
[15:29:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:29:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:29:47] *** Joins: kostkon (~kostkon@2a02:587:a112:e692:b0ac:44d2:b98f:5c6f)
[15:29:57] *** Quits: {HD} (~{HD}@86.106.121.213) (Ping timeout: 256 seconds)
[15:30:27] *** Joins: bluedust (~bluedust@59.89.219.44)
[15:31:19] <jinsun> NeilRG: okay you were adding field to existing non-dataclass, you might be able to get rid of __init__ and some other methods too maybe (though it was just there to satisfy pytype, so maybe not)
[15:31:23] *** Quits: kostkon__ (~kostkon@2a02:587:a117:4dd9:f27:3dab:c3c0:af1a) (Ping timeout: 252 seconds)
[15:32:12] <NeilRG> jinsun, I absolutely hate that __init__ and __call__, but this isn't my code unfortunately
[15:32:41] <NeilRG> I tried suggesting that these lines be removed, but they were not amenable to that
[15:32:42] <nedbat> mickey8: your .py file and your notebook are running in different python environments
[15:32:50] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[15:33:19] <jinsun> NeilRG: ah okay, so yeah just have to live with it because of pytype weirdness
[15:34:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[15:34:15] <NeilRG> jinsun, I guess so.  I'm still hoping they'll just add assertions before they try to call, etc.  This just seems wrong.  But I don't want to upset anyone by being too insistent
[15:34:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:34:18] <mickey8> nedbat im not sure that's the problem. it can find pandas, because the import itself works, but pd is then not found
[15:34:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:34:25] <mickey8> s/works/doesn't error
[15:34:29] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:34:34] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:34:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:34:51] <mickey8> maybe i could have describe the issue better.
[15:34:59] <nedbat> mickey8: have you tried restarting the kernel and re-running all the cells?
[15:35:28] <mickey8> nedbat yup
[15:35:48] <nedbat> mickey8: can you share the code?  i don't see how the import could work but then pd isn't defined.
[15:35:52] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 256 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:49] <mickey8> nedbat https://dpaste.org/sYLq
[15:37:52] <mickey8> that's literally all of it
[15:38:16] <mickey8> fwiw it is my first go with jupyter so im possibly missing on something trivial here
[15:38:20] <nedbat> mickey8: and what's the exact error do you get?
[15:38:35] <mickey8> nedbat NameError: name 'pd' is not defined
[15:38:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:38:55] <nedbat> mickey8: it looks like you didn't run the import at all.  this is two cells?
[15:39:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:39:22] <mickey8> the import is one cell and the rest is a second cell
[15:39:33] <nedbat> mickey8: are you sure you ran both cells?
[15:39:58] *** Quits: Affliction (affliction@idlerpg/player/affliction) (*.net *.split)
[15:39:58] *** Quits: Spr0cket (sprocket@user/Spr0cket) (*.net *.split)
[15:39:58] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[15:39:59] <mickey8> im pretty sure. i clicked on run twice, and the marker moved from the import to the loop
[15:40:00] *** Quits: kts (~kts@103.73.237.171) (Quit: Konversation terminated!)
[15:40:25] <nedbat> mickey8: maybe a screenshot of the notebook will yield another clue
[15:40:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9)
[15:40:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9) (Changing host)
[15:40:49] *** Joins: skapata (~Skapata@user/skapata)
[15:41:34] <leitz> With pytest, if you're testing methods and attributes on a class via an instance, should the instance creation go into the conftest.py or be repeated in the test file?
[15:41:44] <mickey8> nedbat https://imgur.com/a/HkGsrmB
[15:41:49] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[15:42:00] *** Joins: funkytwig (~funkyttwi@82.40.234.47)
[15:42:07] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4bb300000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:42:16] <nedbat> leitz: how are you making the instance? You want to make new instances for each test. a fixture can do it
[15:42:29] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[15:42:43] <nedbat> mickey8: shouldn't the first cell be labelled as In[1]  ?
[15:43:31] *** Joins: Praise (~Fat@user/praise)
[15:43:54] *** Joins: dez (uid92154@user/dez)
[15:43:56] *** Joins: bluedust (~bluedust@59.89.219.44)
[15:44:36] <leitz> nedbat, I'm testing the methods on a generator. So one instance of the generated class would do for the entire test file. Make sense?
[15:45:06] <mickey8> nedbat i.. dont know
[15:45:06] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:45:45] <mickey8> okay that helped. the cell was marked as some nbconvert and not code
[15:45:53] <mickey8> thanks!
[15:46:01] <nedbat> mickey8: notebooks are mysterious power :)
[15:46:16] <nedbat> leitz: i don't think one instance for multiple tests is a good idea
[15:47:11] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:47:31] *** Quits: meti (~meti@user/meti) (Quit: ZNC - http://znc.in)
[15:47:34] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[15:48:32] *** Joins: plastico (~plastico@neomutt/plastico)
[15:49:10] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[15:49:13] *** Joins: meti (~meti@user/meti)
[15:49:30] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:50:33] *** Quits: gevreeen (~gevreeen@2001:470:67:326:7191:e1b5:f0fb:7777) (Quit: gevreeen)
[15:52:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[15:54:43] *** Joins: fikran (~fikran@user/fikran)
[15:55:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:56:02] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Quit: Leaving)
[15:56:53] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:57:09] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[15:58:08] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Remote host closed the connection)
[15:58:28] <EtherMan> Hmm... 'path = path.replace('\\\\','.')'   Should this not result in replacing all double backslashes with a dot? Because my next line is 'module = importlib.import_module(path)'  and that now errors out on 'no module named plugins\\test_plugin\\plugin' which feels fairly odd that it's trying to read if I just replaced all double backslashes with a . :/
[15:58:30] *** Joins: vusis (~vu@user/vusis)
[15:59:38] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[16:00:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:00:39] <leitz> nedbat, I'm working on some code to show you what I'm doing, and ran into a blocking issue. Fixing that now.  :)
[16:01:11] *** Joins: stwange (~j@82.21.202.140)
[16:01:24] <nedbat> EtherMan: looks like you aren't using the result of the replace.  a typo maybe?
[16:01:41] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[16:02:18] <EtherMan> nedbat: I'm replacing it into the same var though? And pycharm highlights all of them as being the same var so shouldn't be a typo :/
[16:02:28] <nedbat> EtherMan: pastebin the code I guess
[16:03:13] <jinsun> EtherMan: the errors shows single backslashes only, no double-backslashes
[16:03:24] <nedbat> oh, that's true
[16:03:48] <EtherMan> jinsun: Wait, so when it shows double backslashes like that, it's actually a single backslash?
[16:03:49] <jinsun> why are you replacing double backslashinig only, single backslashes in module names are also bad
[16:04:12] <jinsun> yeah it shows the repr of the string
[16:04:14] *** Joins: rvalue (~rvalue@user/rvalue)
[16:04:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:04:46] <jinsun> and in repr \\ is one backslash
[16:04:53] <EtherMan> Ok so that was the reason then :)
[16:05:06] <EtherMan> I thought it was getting a double because it was showing a double
[16:05:19] <EtherMan> That's really inconsistent IMO >_<
[16:05:22] <Cheaterman> Bliblibli buddiez I hope y'all doing goodie :-) - I'm having to do some crazy hooking stuff (embedding Python as extension language in a game server), I'm in a situation where I want to pre-emptively hook names in a partially constructed module before they're actually getting defined ; is it possible to simply use the descriptor protocol for this? Adding an object that has __set__ (in particular) to
[16:05:28] <Cheaterman> detect redefinition of the name and hook the user-provided function?
[16:05:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:07:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:07:51] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[16:08:57] *** Quits: avaxar (~avaxar@180.241.197.27) (Ping timeout: 240 seconds)
[16:09:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:10:12] *** Joins: dme86 (~dan@user/dan86)
[16:10:26] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[16:10:40] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[16:10:50] <Cheaterman> > Descriptors only work when used as class variables. When put in instances, they have no effect.
[16:10:53] <Cheaterman> Perhaps not...
[16:11:03] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[16:11:23] <Cheaterman> Or... type(module).__set__ = mything perhaps. Let's see
[16:11:31] <Cheaterman> (but that's probably a bad idea ^^")
[16:11:51] <Cheaterman> Definitely a bad idea. Ideas welcome :-)
[16:12:00] *** Joins: moritz[m]1 (~moritzgeg@2001:470:69fc:105::1:b65b)
[16:13:03] *** Joins: avaxar (~avaxar@36.72.215.30)
[16:13:36] <leitz> nedbat, the testCreateName is just one of the tests in the file, and I'm converting from unittest to pytest for this project. Of course, learning pytest as a part of it.  :)    https://bpa.st/X5HQ
[16:14:11] <leitz> nedbat, there are two different ways to do the same thing, but my plan is to use the same instance to test all the different methods. Make sense?
[16:16:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:17:27] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[16:17:52] <nedbat> leitz: ok, so you are using a new instance for each test.
[16:18:30] <leitz> nedbat, I could probably get by with a new instance for each test module, but I'm not that far along yet.
[16:18:37] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[16:19:40] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:19:47] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[16:19:47] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[16:19:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:21:00] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:21:07] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:990c:5bd:cbbf:e778) (Ping timeout: 250 seconds)
[16:24:13] <nedbat> leitz: why would you share instances across the whole module?
[16:24:34] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:25:14] <leitz> nedbat, the test file is just testing each method of the builder. Because I'm pretty new and prefer testing in detail, each test is a seperate method.
[16:25:41] <leitz> nedbat, so the fixture can do it's thing, and then the test file just tests the results.
[16:25:56] <nedbat> leitz: right, and the fixture will make a new instance for each test.
[16:25:58] *** Joins: ed (~ed@2404:160:181:9993:57fb:98d:9c92:2168)
[16:26:36] <leitz> nedbat, I thought the fixture could be made to cover the module?
[16:26:43] <nedbat> leitz: it could, but why would you?
[16:26:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:27:16] <nedbat> leitz: we've done this a few times now: i say use a new instance for each test, you say you could use it for more than one test, i ask you why you want to, but you haven't said.
[16:27:26] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[16:27:39] <Cheaterman> Hmm. More generally, is it possible to add some machinery to a partially imported module to detect the names (functions) being declared afterwards? I know I'm in highly magic territory (dabeaz land very much) but I'd love to find a way to make this work. Thanks in advance!
[16:28:12] <leitz> nedbat, sorry. Mostly because my mind is only thinking "I did this one thing with several parts; is each part done right?"
[16:28:22] *** Quits: paul424 (~tom@ip-5-172-236-179.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:28:31] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[16:28:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:28:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:28:44] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[16:28:45] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[16:28:47] <nedbat> leitz: right, and testing "each part" is better if each part is tested with a new instance.
[16:28:55] <leitz> nedbat, so, more of a "way I'm thinking" than a real reason. Part of my learning is to evaluate and change the way I think.  :)
[16:28:55] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[16:29:09] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[16:29:10] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:29:22] *** Joins: fef (~thedawn@user/thedawn)
[16:29:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:30:00] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[16:30:00] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[16:30:10] <leitz> nedbat, gotcha. There's no real performance worries on this, and thus no real reason not to create a new instance.
[16:30:12] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[16:30:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:30:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:30:21] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:31:08] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:31:12] *** Joins: esro_ (~esro@nat1.krakowskiinternet.pl)
[16:31:40] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Remote host closed the connection)
[16:31:40] *** Quits: esro_ (~esro@nat1.krakowskiinternet.pl) (Remote host closed the connection)
[16:32:10] *** Joins: xkuru (~xkuru@user/xkuru)
[16:32:44] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba)
[16:32:54] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[16:33:09] <dreamon> deniska, your sooo right. THANK YOU VERY MUCH!!
[16:33:20] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[16:34:06] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5d20:3a37:946e:e2f2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:34:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 245 seconds)
[16:34:42] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:34:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:35:02] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[16:35:30] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:35:48] *** Joins: naranja (~orange@user/orangeboxcutter)
[16:37:50] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 250 seconds)
[16:37:59] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[16:38:45] *** Joins: thevishy (~Nishant@2405:201:f005:c007:68d4:2777:c323:aa1b)
[16:39:26] *** Quits: savolla (~quassel@88.227.92.215) (Read error: Connection reset by peer)
[16:40:00] *** Joins: stwange (~j@82.21.202.140)
[16:40:53] <Cheaterman> (I think conceptually that type(module).__setattr__ = myfunction is more or less what I'd want, but it doesn't work as-is because that would mean overriding a method on a built-in type ; probably a bad idea either way because I'd be overriding it for all modules)
[16:41:15] *** Quits: nomic (~nomic@185.192.69.77) (Quit: Leaving)
[16:42:06] *** Joins: savolla (~quassel@88.227.92.215)
[16:43:26] *** Quits: thevishy (~Nishant@2405:201:f005:c007:68d4:2777:c323:aa1b) (Client Quit)
[16:44:13] *** Joins: kosh (~kosh@user/kosh)
[16:44:19] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:7918:5df4:f474:ee03) (Quit: Konversation terminated!)
[16:44:28] *** zer0bitz_ is now known as zer0bitz
[16:44:37] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:5856:24f3:805a:5f63)
[16:45:59] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[16:46:13] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 256 seconds)
[16:47:57] *** Joins: thiras (~thiras@user/thiras)
[16:48:11] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:5856:24f3:805a:5f63) (Client Quit)
[16:48:19] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[16:48:25] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:5856:24f3:805a:5f63)
[16:49:50] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:49:58] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 250 seconds)
[16:50:05] <leitz> Still on pytest. This works, but is it a mildly sane way to test the db?   https://bpa.st/PM7Q
[16:50:31] *** Joins: crashrep (~crashrep@user/crashrep)
[16:51:36] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[16:52:07] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[16:52:22] <nedbat> leitz: this tests your schema, but none of your code. is that what you want?
[16:52:41] <nedbat> leitz: and your asserts are only testing your test data
[16:52:56] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Quit: ThePhilgrim)
[16:53:36] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:53:39] *** Joins: Z-cat (~Z-cat@user/z-cat)
[16:54:19] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:54:35] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[16:54:36] <leitz> nedbat, I'm stil figuring out the nested selects and left outer joins, and working on the code for it. For this fixture, I have a sample of data that gets loaded and I need to figure out how to test the advanced queries.
[16:55:04] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:55:11] <leitz> nedbat, I just figured out the query itself a couple of days ago, and haven't had time to figure out how to test it yet. Today may be that day.  ;)
[16:55:23] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:55:26] <widp> why does the method 'constrains' , also a variable 'constraints' here: https://stackoverflow.com/questions/54401610/tensorflow-how-to-minimize-under-constraints
[16:55:35] <widp> is this an error?
[16:55:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:55:45] *** Joins: gareppa (~gareppa@user/gareppa)
[16:55:54] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[16:56:01] <leitz> nedbat, so, I need to figure out how to present the database to other tests.
[16:56:39] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[16:56:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:56:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:56:56] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:57:09] <leitz> nedbat, or, I need to test the schema here, and mock the data for the other tests.
[16:57:37] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:57:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:57:52] <nedbat> widp: i don't understand what you are asking
[16:58:11] <widp> nedbat: did you visit the link ?
[16:58:23] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[16:58:26] <nedbat> widp: yes, what part of it am i supposed to be looking at?
[16:58:35] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[16:58:37] <widp> there is method called "constraints" , there is also a variable being returned called "constraints".
[16:58:41] <widp> The first answer
[16:58:50] <nedbat> widp: that's fine, they are in different namespaces
[16:59:00] <nedbat> it could be confusing
[16:59:20] <widp> wait , what if the function was recursive?
[16:59:29] <ChrisWarrick> widp: it would be self.constraints()
[16:59:40] <widp> oh I see
[16:59:41] <nedbat> widp: the function name is an attribute on the class.  the variable is a local
[16:59:45] <ChrisWarrick> widp: (but if it wasn’t in a class, then you couldn’t call it recursively)
[17:00:25] <widp> ChrisWarrick: are you saying it wouldn't work if it was a regular function?
[17:00:26] <ChrisWarrick> (at least not without some hackery involving dunders)
[17:00:35] <ChrisWarrick> widp: you couldn’t call it recursively
[17:00:41] <ChrisWarrick> widp: since this function isn’t recursive, it would work
[17:00:58] <widp> I feel like a dunder now
[17:01:12] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Quit: ubert)
[17:01:17] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[17:01:17] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[17:01:20] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Max SendQ exceeded)
[17:01:28] *** Joins: Sabry (~Sabry@197.37.49.72)
[17:01:32] *** Joins: Spr0cket- (sprocket@user/Spr0cket)
[17:01:39] *** Joins: ubert (~Thunderbi@p200300ecdf09947e2c357846a3b3453e.dip0.t-ipconnect.de)
[17:01:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:01:42] *** Joins: adham (~adham@37.239.160.24)
[17:01:50] <Sabry> Hello Folks
[17:01:56] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[17:02:08] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 252 seconds)
[17:02:12] <ChrisWarrick> widp: (dunder isn’t any sort of insult; it’s short for “double underscore”, it’s stuff like __init__
[17:02:14] <ChrisWarrick> )
[17:02:18] <widp> yes I know :D
[17:02:26] *** Spr0cket- is now known as Spr0cket
[17:02:51] <nedbat> Sabry: Welcome. If you have a question, it's always best to jump right in and ask it.
[17:02:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:03:02] <Sabry> I want to iterate from 'aa0000' to 'zz9999'
[17:03:17] <Sabry> for i in range('aa0000', 'zz9999'):
[17:03:27] *** Joins: TechSmurf (~tech@user/techsmurf)
[17:03:37] <Sabry> something like that
[17:04:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:04:17] <Sabry> Thanks nedbat you are rghit
[17:04:26] <Sabry> *right
[17:04:34] *** Joins: esther (~esther@2607:fb90:20dd:2a30:f69d:919b:d1f8:cc74)
[17:04:36] <ChrisWarrick> Sabry: for tuple_of_characters in itertools.product(string.ascii_lowercase, string.ascii_lowercase, string.digits, string.digits, string.diggits, string.digits):
[17:05:01] <ChrisWarrick> Sabry:     i = ''.join(tuple_of_characters)
[17:05:19] *** Joins: bluedust (~bluedust@59.89.219.44)
[17:05:48] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:06:30] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:06:38] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[17:07:17] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:5856:24f3:805a:5f63) (Quit: Konversation terminated!)
[17:07:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[17:07:25] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[17:07:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[17:08:31] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:08:37] *** Quits: esther (~esther@2607:fb90:20dd:2a30:f69d:919b:d1f8:cc74) (Ping timeout: 240 seconds)
[17:08:48] <nedbat> Sabry: here's an alpharange() function that does what you want: https://gist.github.com/7d8a2f54e5acd6a74cee6970d00513c8
[17:08:50] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:09:07] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[17:11:04] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[17:11:13] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[17:12:08] <Sabry> ChrisWarrick thanks man, could you edit the second statement "join statement"
[17:12:40] *** Joins: shailangsa (~shailangs@host109-159-108-227.range109-159.btcentralplus.com)
[17:13:56] <ChrisWarrick> Sabry: I don’t understand?
[17:13:57] <Sabry> nedbat I need it from 'aa0000' to 'zz9999', when I try to edit input it didn't give me all possible combinations
[17:14:21] <nedbat> Sabry: how did you check the result?
[17:15:06] <Sabry> ChrisWarrick it gives me a dictionary, How to convert it to string?
[17:15:21] <ChrisWarrick> Sabry: are you sure it does?
[17:15:36] <ChrisWarrick> Sabry: show your code and how you’re getting a dictionary?
[17:15:56] <Sabry> nedbat ['aa0000', 'aa0001', 'aa0002', 'aa0003', 'aa0004', 'aa0005', 'aa0006', 'aa0007', 'aa0008', 'aa0009']
[17:15:56] <Sabry> ['zz9990', 'zz9991', 'zz9992', 'zz9993', 'zz9994', 'zz9995', 'zz9996', 'zz9997', 'zz9998', 'zz9999']
[17:16:21] <nedbat> Sabry: i'm not printing all the results (there are too many), i just printed the first ten and last ten.
[17:16:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[17:16:31] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[17:16:31] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[17:16:31] *** Joins: JordiGH (~jordi@user/jordigh)
[17:17:14] <nedbat> Sabry: ans has 6,760,000 elements
[17:17:18] *** Quits: jay-m1261 (~jay-m@129.0.205.81) (Ping timeout: 256 seconds)
[17:17:36] <nedbat> Sabry: what will you use them for?
[17:17:51] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:17:52] *** Quits: jay-m126_ (~jay-m@129.0.205.81) (Ping timeout: 256 seconds)
[17:17:52] *** Quits: jay-m126 (~jay-m@129.0.205.81) (Ping timeout: 256 seconds)
[17:17:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[17:19:10] <Sabry> ChrisWarrick my bad you are I got the point, you are right
[17:20:05] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:20:08] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[17:20:25] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:20:32] <Sabry> nedbat I will use them for scrapping but I need to make it as a generator/iterator with lazy load for performance aspects
[17:20:59] <nedbat> Sabry: the alpharange function is lazy.  I only used list() to print the start and end.
[17:20:59] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[17:21:20] <Sabry> Sabry download images
[17:22:49] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[17:23:42] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.4)
[17:24:20] *** Quits: greedom (~greedom@p200300de67361c00905302de190cf808.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:25:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 260 seconds)
[17:25:43] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[17:25:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:26:04] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[17:27:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:28:09] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[17:28:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:29:38] *** Joins: ice9 (~ice9@user/ice9)
[17:31:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:31:48] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[17:31:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[17:31:58] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:31:59] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[17:32:12] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[17:32:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:32:24] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[17:32:32] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[17:32:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:32:37] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[17:32:46] *** Joins: stwange (~j@82.21.202.140)
[17:33:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:33:41] *** Parts: vusis (~vu@user/vusis) ()
[17:34:34] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:35:09] *** Joins: Auron (Auron956@user/auron)
[17:35:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:35:27] *** Joins: fef (~thedawn@user/thedawn)
[17:36:01] <leitz> ChrisWarrick, are you the one who mentioned being on the pytest team?
[17:36:08] *** Quits: ubert (~Thunderbi@p200300ecdf09947e2c357846a3b3453e.dip0.t-ipconnect.de) (Quit: ubert)
[17:36:25] *** Quits: Oddity (~Oddity@user/oddity) (Remote host closed the connection)
[17:36:31] *** Joins: ubert (~Thunderbi@p200300ecdf09947e2c357846a3b3453e.dip0.t-ipconnect.de)
[17:37:09] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[17:37:09] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[17:37:10] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 260 seconds)
[17:38:30] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[17:38:42] *** Joins: bancroft (~bancroft@user/bancroft)
[17:39:08] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[17:39:25] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[17:39:39] *** Quits: ubert (~Thunderbi@p200300ecdf09947e2c357846a3b3453e.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:39:49] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250) (Remote host closed the connection)
[17:39:58] *** Joins: ubert (~Thunderbi@p200300ecdf09947e2c357846a3b3453e.dip0.t-ipconnect.de)
[17:41:20] <kungp> is there an easy way to install a module on a system without internet running a different os?
[17:42:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[17:43:34] <sveinse> Any VSCode users here? I have a package with std layout, with src/mypackage/. Pylance is unable to resolve `import mypackage` from the test sources under tests/. Any ideas how to resolve that?
[17:44:13] *** Quits: ubert (~Thunderbi@p200300ecdf09947e2c357846a3b3453e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:44:26] <jinsun> create a .env file with PYTHONPATH=src
[17:44:46] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[17:44:46] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[17:44:46] *** Joins: JordiGH (~jordi@user/jordigh)
[17:44:52] <jinsun> or install your package in the venv that vsode is using
[17:45:07] <jinsun> s/vsode/vscode
[17:46:01] <sveinse> jinsun: .env worked, thanks. -- I have installed the package into the venv, but still it can't find it without the .env. Dunno why
[17:46:36] <sveinse> I have installed it with pip -e . thou, maybe pylance struggles with the -e ?
[17:47:07] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[17:47:21] <jinsun> no it can handle --editable installs fine here
[17:47:47] <sveinse> All navigation from within the package sources itself, which use aboslute imports, works fine
[17:48:22] <leitz> Ah, that was The-Compiler, sorry.
[17:48:28] *** Joins: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[17:49:00] <The-Compiler> leitz: I am one of pytest's core maintainers indeed
[17:49:16] <grym> kungp: sneakernet the proper wheel(s) to the offline machine, where proper means "built for that OS"
[17:49:24] <The-Compiler> to blame for both 7.0.0 being late and 7.0.0 being released late rather than never :D
[17:50:04] <funkytwig> looking for a friendly  open source project to contribute to.  I'me relatively new to python but not IT.  Done 77 days of 100 days of code bootcamp (so far).
[17:50:11] <leitz> The-Compiler, well, pass on a "thank you" to the team. As a part of my learning, I'm moving a small project from unittest to pytest. I've been dreading trying to figure out the database part, but it wasn't nearly as difficult as I thought.
[17:50:21] <The-Compiler> leitz: yay! :)
[17:50:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:50:33] <leitz> The-Compiler, while my fixture is probably done poorly, it works.  ;)
[17:50:51] <The-Compiler> funkytwig: my suggestion is always to find something you are already using or can see yourself using
[17:50:58] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:dc5d:b40d:bcf:dcae)
[17:51:08] *** Joins: pepper (~pepper@user/pepper)
[17:51:21] <grym> ^^^
[17:51:24] <The-Compiler> funkytwig: context is important when developing, so it helps to be familiar with whatever you are contributing to from an user's perspective
[17:51:25] <leitz> funkytwig, and look for something you really want for yourself. That'll keep you going when frustration stes in.
[17:51:33] <The-Compiler> and what leitz says, yes
[17:51:35] <grym> scratch your own itches, and ideally where you have some domain knowledge
[17:51:37] <kungp> grym yeah i found the 'pip download --platform' command. but can i see which --platform it thinks i am somewhere?
[17:51:56] <kungp> this is some custom linux box from a company with shitty documentation
[17:52:00] <grym> kungp: don't you have to know what that is already
[17:52:15] *** Joins: voidsync (~void@user/voidsync)
[17:52:27] <leitz> funkytwig, I write fiction and play role-playing games, so my current project is a way to keep all the character data.
[17:53:02] <kungp> grym yeah maybe. guess i'll just try all the linux ones :D
[17:56:21] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:57:04] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[17:57:51] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[17:57:54] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[17:58:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:58:37] *** Joins: bluedust_ (~bluedust@89.238.130.74)
[17:58:56] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[17:58:57] *** Joins: PatsonJS (PatsonJS@bl21-12-111.dsl.telepac.pt)
[17:59:33] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[18:00:41] <PatsonJS> boas
[18:01:37] <leitz> If dataclass A is composed of dataclass B, which is composed of dataclass C, and the code should only interact with A, is it proper to have a method in B that queries an attirbute in C, and then a method in A that queries B, so that the calling code uses "A.attrib" instead of "A.B.C.attrib"?
[18:01:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:01:49] *** Quits: bluedust (~bluedust@59.89.219.44) (Ping timeout: 256 seconds)
[18:02:04] <grym> sure, why not
[18:02:13] <grym> as long as those compositions are mandatory
[18:02:50] <grym> if _every_ A has a .b and every B has a .c, then convenience methods on A to tell you things about something all A's have are just normal convenience methods, right
[18:02:51] <leitz> grym, i wasn't sure if there was a better way to do it.
[18:03:19] *** Quits: PatsonJS (PatsonJS@bl21-12-111.dsl.telepac.pt) (Remote host closed the connection)
[18:03:35] <leitz> A and B are Decorators, assuming I understand the term correctly.
[18:03:39] *** Joins: LeaDer-E (~LeaDer-E@197.135.13.56)
[18:03:45] <LeaDer-E> Hello
[18:03:58] <LeaDer-E>  can i get a small little Help in selinium!? ♥
[18:04:04] *** Joins: fikran (~fikran@user/fikran)
[18:04:09] <LeaDer-E> Here: https://github.com/seleniumbase/SeleniumBase/issues/1217
[18:04:20] <grym> leitz: err, no, i thought you were describing composition here
[18:05:16] <leitz> grym, then I'm probably misusing the concept of Decorator.
[18:05:57] <leitz> grym, B requires a C, and has additional methods and attributes. The same for A, but requires a B.
[18:06:38] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:07:18] *** Joins: dme86 (~dan@user/dan86)
[18:08:11] *** Joins: crashrep (~crashrep@user/crashrep)
[18:08:25] <grym> leitz: https://bpa.st/6LJA
[18:09:19] <The-Compiler> LeaDer-E: I doubt people here would be willing (or able) to help you circumvent Google's security features, much less so if this is about sending mails automatically.
[18:09:25] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[18:10:21] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[18:10:34] * leitz goes to read up on @attr
[18:10:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[18:11:01] <grym> leitz: it's ~ like dataclasses, but it's the third party inspiration for dataclasses and i'm more familiar with it
[18:11:13] <grym> what i'm doing here you can do with dataclasses though
[18:11:31] <leitz> Ah, cool. I've also been introduced to pydantic.
[18:11:42] <grym> yeah, that's the other cousin :)
[18:11:50] <grym> i use attrs/pydantic more or less interchangeably
[18:12:01] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[18:12:08] <grym> i feel a little silly when both are in the same project, but, i also don't fret about it too much
[18:12:13] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[18:12:50] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net) (Ping timeout: 256 seconds)
[18:13:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[18:14:18] <LeaDer-E> The-Compiler: Thank You, but it just selenium Automatic browser need to make it undetectable
[18:15:23] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:15:29] <The-Compiler> LeaDer-E: yes, to apparently circumvent Google's security measures. That's not the place to get help with that.
[18:16:30] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:17:50] <LeaDer-E> The-Compiler: Thank You ♥
[18:18:19] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:2541:2164:13a7:b7a2)
[18:18:27] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:18:30] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:18:30] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[18:20:45] <funkytwig> thnaks everyone for your advice.  I think the projects I use are a bit big and complex.  Was really looking for something not so big.
[18:21:07] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[18:21:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:21:46] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:22:06] *** Joins: someuser (~user@197.54.81.3)
[18:22:12] *** Joins: dme86 (~dan@user/dan86)
[18:22:41] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[18:23:33] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Remote host closed the connection)
[18:23:57] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[18:24:33] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[18:24:44] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[18:24:44] *** Joins: Kruppt (~Kruppt@50-111-42-156.drhm.nc.frontiernet.net)
[18:25:21] <leitz> funkytwig, understood. It is difficult for a learner to make the jump from "took a class/read a book" to "able to contribute to a project". I've struggled with it for years, in multiple languages.
[18:25:41] <The-Compiler> funkytwig: Depending on the project, there might be areas which are somewhat understandable and self-contained where thsoe projects need help. But it really depends on the project and community behind it.
[18:25:59] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[18:26:28] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[18:26:45] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:26:56] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[18:26:59] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[18:27:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:28:51] *** Joins: Dotz0cat (~Dotz0cat@h77.175.40.162.dynamic.ip.windstream.net)
[18:28:52] <leitz> funkytwig, if you like to write tests, lemme know.  :)
[18:29:13] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: No Ping reply in 180 seconds.)
[18:29:36] <leitz> I'm about to break everything by getting rid of inheritance.
[18:30:35] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[18:30:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:32:37] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:32:52] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[18:33:29] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[18:33:31] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Quit: Leaving)
[18:34:28] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[18:34:29] *** Joins: bluedust (~bluedust@59.89.219.44)
[18:34:32] *** Joins: kts (~kts@103.73.237.228)
[18:34:37] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[18:34:59] *** Joins: nomic (~nomic@185.217.117.245)
[18:35:10] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[18:35:36] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[18:35:43] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:37:01] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[18:37:30] <sveinse> Does pytest have anything that allows diffing two output files?
[18:37:51] *** Quits: bluedust_ (~bluedust@89.238.130.74) (Ping timeout: 245 seconds)
[18:37:58] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:39:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:41:35] *** Joins: dme86 (~dan@user/dan86)
[18:42:58] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[18:43:30] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[18:43:33] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:44:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-280a-a911-ea24-fc52.res6.spectrum.com)
[18:44:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:46:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[18:46:46] *** Joins: null1 (~null@117.221.148.221)
[18:46:53] *** Joins: crashrep (~crashrep@user/crashrep)
[18:47:56] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[18:48:27] *** Quits: savolla (~quassel@88.227.92.215) (Ping timeout: 250 seconds)
[18:48:46] *** Joins: savolla (~quassel@95.10.239.64)
[18:48:51] <leitz> With a nested dataclass, can I define an attribute in the parent that is based off the child?    https://bpa.st/DIVQ
[18:48:56] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:49:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[18:49:56] <null1> what is a good book for begginers?
[18:49:58] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:50:37] <jinsun> leitz: define a __post_init__ method and do self.last_name = self.person.last_name there
[18:51:36] <jinsun> remove the last_name from the class level, unless you want to allow setting it directly too
[18:52:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:52:27] <jinsun> null1: https://greenteapress.com/wp/think-python-2e/ is good
[18:52:34] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[18:52:49] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:52:51] *** Quits: nomic (~nomic@185.217.117.245) (Quit: Leaving)
[18:53:12] <null1> jinsun: have you read it yourself?
[18:53:32] <jinsun> yes
[18:54:24] <null1> jinsun: thanks for the recommendation!
[18:54:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:54:49] *** Joins: mickey8 (~user@user/mickey)
[18:55:17] *** Quits: kts (~kts@103.73.237.228) (Quit: Konversation terminated!)
[18:56:16] *** Joins: kts (~kts@103.73.237.228)
[18:58:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[18:58:34] *** Quits: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com) (Changing host)
[18:58:34] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[18:59:33] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[18:59:40] <leitz> jinsun, thanks! That works.
[18:59:51] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Read error: Connection reset by peer)
[19:00:07] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[19:00:18] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Remote host closed the connection)
[19:00:24] *** Joins: avaxar_ (~avaxar@36.81.43.155)
[19:00:32] *** Joins: aiena (~aiena@user/aiena)
[19:00:36] <sveinse> On win running venv/Scripts/pytest doesn't work, it simply exits, while venv/Scripts/python -mpytest works. The other venv/Scripts commands like pip works fine.
[19:02:20] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[19:02:42] *** Quits: avaxar (~avaxar@36.72.215.30) (Ping timeout: 256 seconds)
[19:03:16] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 256 seconds)
[19:06:16] *** Joins: georgios (~georgios@user/georgios)
[19:06:37] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 240 seconds)
[19:06:39] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:06:45] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:06:56] *** Quits: georgios (~georgios@user/georgios) (Client Quit)
[19:07:00] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[19:08:46] <jinsun> sveinse: exits without any output?
[19:08:53] <sveinse> jep
[19:08:54] *** Joins: dbristow_ (~dbristow@user/dbristow)
[19:09:01] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 256 seconds)
[19:09:59] *** Quits: adham (~adham@37.239.160.24) (Quit: Leaving)
[19:10:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:10:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:10:43] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 256 seconds)
[19:12:54] *** Joins: cosimone (~user@93-44-184-23.ip98.fastwebnet.it)
[19:12:57] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:dc5d:b40d:bcf:dcae) (Remote host closed the connection)
[19:15:59] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[19:16:01] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[19:16:28] *** Joins: off^ (~off@50.235.176.163)
[19:16:35] <jinsun> hmm, weird, ideally it should do the same thing, might be worth running with increased verbosity to see if that shows something
[19:16:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:16:48] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[19:16:54] *** Joins: water_27300935_ (~xe@182.90.160.103)
[19:17:04] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: Leaving)
[19:17:58] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[19:18:31] *** Joins: snalty (~Shhh@user/snalty)
[19:19:50] <water_27300935_> I install Tk 8.6.12 from source code (default to /usr/local), then using 'dnf' appear version 8.6.12 still,
[19:20:21] <water_27300935_> How to specific python using Tk 8.6.12?
[19:21:10] <water_27300935_> then using 'dnf' appear version 8.6.10 still.
[19:21:25] *** Joins: DavidMilestone (~DavidMile@182.68.131.163)
[19:21:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:23:28] *** Quits: voidsync (~void@user/voidsync) ()
[19:23:40] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:25:02] *** Joins: paravida (~myChateau@user/paravida)
[19:26:03] *** Quits: OPK (~OPK@user/opk) (Quit: Textual IRC Client: www.textualapp.com)
[19:26:06] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:26:15] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[19:26:16] <fofoni_> dnf doesn't know that you installed another version
[19:26:19] *** cdown_ is now known as cdown
[19:26:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:26:37] <fofoni_> i believe you will need to recompile python
[19:26:58] *** Joins: OPK (~OPK@user/opk)
[19:27:34] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[19:27:50] <fofoni_> there must be an option in ./configure to specify the path to tk
[19:28:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:28:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:28:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:28:35] <water_27300935_> fofoni_: Oh, I try.
[19:28:50] <fofoni_> see here https://devguide.python.org/setup/#unix
[19:28:56] <fofoni_> and here https://docs.python.org/dev/using/configure.html
[19:29:05] *** Quits: shad0w (~shad0w@user/xshadow) (Remote host closed the connection)
[19:29:39] <fofoni_> looks like those options --with-tcltk-* are wht you want
[19:29:59] <sveinse> I have a test like this: `@pytest.mark.parametrize("odfile", odfiles)`. Now I need to move `odfiles` into conftest. How do I access it in the scope of the decorator?
[19:30:03] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[19:30:06] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (Quit: You have been kicked for being idle)
[19:31:18] *** Joins: f1se4 (~f1se4@133.86.14.37.dynamic.jazztel.es)
[19:31:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:31:39] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-58-163.mycingular.net)
[19:32:13] <null1> d
[19:32:27] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1509-26.w109-221.abo.wanadoo.fr)
[19:32:48] *** Joins: purple_cthulhu (~rax@2.186.248.44)
[19:32:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:33:03] *** Quits: Arw| (~Arwalk@lfbn-dij-1-1509-26.w109-221.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:33:21] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:33:48] *** Parts: water_27300935_ (~xe@182.90.160.103) (WeeChat 3.4)
[19:34:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:35:53] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[19:36:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:36:22] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[19:37:19] *** Joins: korg815 (~korg815@user/korg815)
[19:37:31] *** Joins: MercilessDeth (~brad@136.49.59.177)
[19:37:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:37:57] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:38:11] *** Quits: ed (~ed@2404:160:181:9993:57fb:98d:9c92:2168) (Quit: Konversation terminated!)
[19:38:23] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[19:39:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[19:39:59] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[19:41:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9a4a:c7f0:d60b:9647)
[19:43:36] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[19:44:40] <Cheaterman> bliblibli again buddiez, hope y'all still doing goodie
[19:44:49] <Cheaterman> I'm encountering this typeshed bug https://github.com/python/typeshed/commit/136592666bfee9e7e9a15223b73c09b3af045779
[19:45:00] <Cheaterman> Is there a way I can upgrade typeshed without upgrading mypy (they didn't release since) ?
[19:46:08] *** Quits: f1se4 (~f1se4@133.86.14.37.dynamic.jazztel.es) (Quit: WeeChat 3.4)
[19:46:23] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:46:27] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[19:48:26] <dob1> if I have a program in a virtualenv dir what is the way to add it to path?  create a wrapper script for running it that invoke the python in the virtualenv dir?
[19:48:54] <The-Compiler> Cheaterman: https://mypy.readthedocs.io/en/latest/command_line.html#cmdoption-mypy-custom-typeshed-dir
[19:49:33] <Cheaterman> The-Compiler: Haha thanks. Bit more burdensome than I expected to be honest.... I'll just wait for a release and cope in the meantime
[19:49:48] <The-Compiler> dob1: if there is a command script for it already, you could symlink it, or perhaps use something like https://pypa.github.io/pipx/
[19:49:58] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[19:50:01] <The-Compiler> Cheaterman: that's... about the least burdensome way I can imagine?
[19:50:04] <sveinse> dob1: you don't need to load the venv bin/ dir to path, you can only call the excutable in the venv and it'll setup everything itself
[19:50:05] <Cheaterman> (still thanks a lot, I'll know for next time)
[19:50:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:50:23] <Cheaterman> The-Compiler: Is it? In my view, a user-installed typeshed should be autodetected, no config necessary.
[19:50:30] <dob1> The-Compiler, sveinse but you have to use the python in virtualenv dir not the system one
[19:50:49] <sveinse> dob1: E.g. calling venv/bin/python does this for you
[19:50:51] <The-Compiler> dob1: a command script should do that already, at least for a pip-generated one
[19:50:53] <The-Compiler> Cheaterman: from where?
[19:51:04] <Cheaterman> The-Compiler: (I'm precisely doing that kind of magic right now, and it's a lot of work for sure, but worth it for the end-user)
[19:51:11] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[19:51:13] <Cheaterman> The-Compiler: WDYM from where? From module search path?
[19:51:14] <sveinse> dob1: But if you are calling it from a shell, there are `activate` scripts in the venv you may use
[19:51:20] *** Joins: dme86 (~dan@user/dan86)
[19:51:30] <Cheaterman> The normal Python way, like any other module
[19:51:43] <The-Compiler> Cheaterman: stubs aren't python modules
[19:51:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:51:45] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[19:51:46] <fofoni_> i usually create a wrapper script that calls `activate`, and then exec's into the binary I want
[19:51:54] <dob1> sveinse, it is still not clear
[19:52:01] <Cheaterman> The-Compiler: typeshed is pip-installable AIUI?
[19:52:03] <The-Compiler> fofoni_: why call activate if you just can call the binary without that?
[19:52:04] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:52:18] <Cheaterman> Doesn't matter that the stubs aren't modules themselves if typeshed is a package anyway (possibly a namespace package, even=)
[19:52:20] <sveinse> dob1: what is unclear?
[19:52:32] <sveinse> dob1: where are you calling what from?
[19:52:57] <fofoni_> The-Compiler, because afaik activate doesnt just change the PATH, it changes all sorts of python environment variables used for loading the modules from the correct places etc
[19:53:02] <Cheaterman> (namespace package would actually make a lot of sense, so that different stubs can live in different places)
[19:53:06] <Cheaterman> (but all technically in the same package)
[19:53:24] <Cheaterman> The-Compiler: ↑ does that make sense or am I just a dreamer here for some reason
[19:53:29] <The-Compiler> Cheaterman: only the split off types-* packages as far as I'm aware (and those are autodetected indeed), not the stdlib part (though it would be nice if that was just a types-stdlib package too IMHO)
[19:53:38] <Cheaterman> The-Compiler: you nailed it
[19:53:42] <Cheaterman> that's basically what I meant
[19:53:53] *** Joins: raxor2k (~raxor2k@78.158.253.229)
[19:53:55] <dob1> sveinse, my python script has as shebang #!/usr/bin/env python3, I could modify this to point to the venv python but I don't like this.  or a shell script that execute venv/bin/python script.py I don't like this too
[19:54:03] <raxor2k> is it normal to write test while writing new code?
[19:54:14] <sveinse> fofoni_: If you use /venv/bin/python for everything, no activate is needed. And any package command-line scripts are installed into /venv/bin/ and can be called directly without activating
[19:54:21] <Cheaterman> raxor2k: More context wouldn't hurt. It's a good idea to write tests before writing the implementation yes
[19:54:22] *** Quits: LeaDer-E (~LeaDer-E@197.135.13.56) (Quit: Connection closed)
[19:54:26] <dob1> sveinse, calling it from shell, any path
[19:54:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:54:32] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[19:54:46] <The-Compiler> fofoni_: not really, it changes the shell prompt, unsets PYTHONHOME (which I've never seen set, and it's questionable if a virtualenv should unset it IMHO), and exports VIRTUAL_ENV (which I've not really seen anything ever use)
[19:55:07] <SnoopJ> Entrypoints installed as part of a package also generally get a shebang that points directly at the corresponding runtime
[19:55:15] <sveinse> dob1: I usually create a symlink from /usr/local/bin/myscript to /my/project/venv/bin/myscript
[19:55:27] <fofoni_> hmmm I see
[19:55:35] <dob1> sveinse, and how it know what python interpreter to use?
[19:55:35] <jinsun> Cheaterman: it is an open issue https://github.com/python/typeshed/issues/5835
[19:55:36] <fofoni_> i thought it was more complex than that
[19:55:42] <Cheaterman> dob1: or ~/.local/bin instead of /usr/local/bin
[19:55:46] <Cheaterman> (that's what I do here)
[19:55:47] <sveinse> dob1: it is a part of the venv setup
[19:55:53] <The-Compiler> jinsun: ah, neat
[19:56:00] <dob1> sveinse, but you have to activate it
[19:56:01] <Cheaterman> jinsun: Oh wow I didn't realize, awesome
[19:56:04] <sveinse> dob1: no
[19:56:06] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[19:56:55] <The-Compiler> dob1: the only relevant thing activating a virtualenv does is changing your PATH so that the virtualenvs python gets used
[19:56:56] <sveinse> dob1: Note that it assumes proper command-line entrypoint scripts and not "just a python script".
[19:57:06] <jinsun> Cheaterman: type checkers would have to be updated to aware of it though, because the stubs would go in site-packages but stdlib is not there, so it would have to be another special casing
[19:57:24] <dob1> The-Compiler, this is the main point! how can you just symlink ?
[19:57:35] <Cheaterman> jinsun: Makes a lot of sense - but totally worth it in my view
[19:58:05] <jinsun> yeah would be much better to update stdlib stubs faster than mypy releases
[19:58:10] <sveinse> dob1: to confirm, are you writing a proper python package with entry points?
[19:58:32] <The-Compiler> dob1: because if you have a setuptools (or similar) console_scripts entry point, then setuptools will take care of generating a script using the Python it was installed with
[19:58:59] <dob1> sveinse, The-Compiler, ok I am not aware of this part, I am just writing a python script in a virtualenv dir
[19:59:16] <The-Compiler> dob1: why are your sources inside your virtualenv dir?
[19:59:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:59:33] <dob1> The-Compiler, to install libraries I need
[19:59:38] <sveinse> dob1: on windows the entry point will be an .exe file, so it can be executed from anywhere and not rely on a python executable
[19:59:54] <The-Compiler> normally you would have something like venv/ or .venv/ alongside your sources
[19:59:58] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9a4a:c7f0:d60b:9647) (Quit: Leaving)
[20:00:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[20:00:39] <dob1> I have bin/ lib/
[20:01:08] <The-Compiler> don't put your script inside the virtualenv manually
[20:01:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:02:00] <dob1> I don't know how to use it then
[20:02:02] *** Joins: paul424 (~tom@ip-5-172-237-132.multi.internet.cyfrowypolsat.pl)
[20:02:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:02:25] <The-Compiler> dob1: either have a script and a virtualenv alongside it (and then indeed write a small wrapper script doing  ~/yourproj/.venv/bin/python ~/yourproj/stuff.py "$@"  or so); or have a setup.cfg/setup.py with a console_scripts entry point and then symlink that
[20:02:57] <The-Compiler> (or https://python-poetry.org/ or flit or whatever people like to use instead of setup.py/setup.cfg)
[20:03:10] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:03:11] *** Joins: blacked (~blacked@user/blacked)
[20:03:35] <The-Compiler> see e.g. https://setuptools.pypa.io/en/latest/userguide/entry_point.html
[20:04:06] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-58-163.mycingular.net) (Ping timeout: 250 seconds)
[20:04:45] <dob1> I am using virtualenv not venv, I don't find a dor-dir similar to .venv
[20:05:05] *** blacked is now known as pingpongball
[20:05:31] <The-Compiler> same thing
[20:05:42] <dob1> what does this mean <The-Compiler> don't put your script inside the virtualenv manually   ?
[20:05:51] <The-Compiler> it sounds like you created your virtualenv inside your project dir, with something like "virtualenv ."
[20:06:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:06:31] <dob1> what I do is python -m virtualenv dir;  cd dir;  source bin/acrivated;  vim script.py etc etc
[20:06:35] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:06:47] <dob1> and pip install some_lib in virtualenv dir
[20:06:59] <The-Compiler> skip the "cd dir" part theen. Your code should not be inside the virtualenv.
[20:07:30] <dob1> really?
[20:07:47] <The-Compiler> The virtualenv is essentially your Python installation, this is like if you would develop your code directly in /usr/lib/python3.10/site-packages/ or so
[20:08:03] <dob1> how can I activate if I don't cd into it?
[20:08:32] <The-Compiler> just like before, just with  dir/bin/activate instead of bin/activate
[20:08:52] <The-Compiler> (with "dir" usually being called "venv", ".venv" or "env")
[20:09:37] <SnoopJ> dob1, virtualenvs are best treated as things that might evaporate at the drop of a hat, nothing that needs to stick around should go inside of them
[20:09:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[20:09:53] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[20:10:02] <The-Compiler> pretty much, virtualenvs are disposable, yes
[20:10:08] <dob1> well I used it wrong until today then...
[20:11:03] <dob1> the directory structure is  main dir (scripts etc)   subdir venv or whatever is ccalled with virtualenv  but not any of my script, right?
[20:11:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:11:09] <sveinse> dob1: Not sure this is the perfect example, but I created a small example setup-shim-project for my team to show how a python package can be setup. You might find it useful https://github.com/sveinse/py-guiapp-template
[20:11:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:11:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:11:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[20:12:46] <The-Compiler> dob1: projectfolder/yourscript.py, projectfolder/venv/, projectfolder/.git/, projectfolder/README.md, etc.
[20:13:12] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[20:13:26] *** Joins: fikran (~fikran@user/fikran)
[20:14:45] *** Joins: widp (~user@124.123.104.227)
[20:14:50] *** Quits: raxor2k (~raxor2k@78.158.253.229) (Remote host closed the connection)
[20:15:03] <dob1> why all the tutorials says source bin/activate ?  and not source venv/bin/activate?
[20:15:16] <The-Compiler> dob1: "all the tutorials"?
[20:15:20] *** Joins: seekerm (uid209543@user/seekerm)
[20:15:22] <dob1> a lot of them I read
[20:15:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:16:35] <dob1> sorry I am bit "shocked" I used it wrong until now :)
[20:17:06] <The-Compiler> https://packaging.python.org/en/latest/tutorials/installing-packages/#creating-virtual-environments does not FWIW
[20:17:17] <sveinse> dob1: It depends on what kind of shell you're using. In bat its activate.bat (with or without the .bat), while in *sh it's more often run with `source`
[20:17:52] <The-Compiler> sveinse: the question was about the venv/ prefix though
[20:18:10] <sveinse> The-Compiler: oh, sorry :P
[20:18:25] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[20:18:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:19:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:19:41] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:20:17] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:20:20] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[20:20:39] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[20:20:50] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[20:21:11] <dob1> The-Compiler, ok thanks for giving me the right information I have to work on it for sure. but still I don't get how to get it run my script on path
[20:22:12] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:23:30] <sveinse> dob1: because you want it to run through the shell shebang? #!/usr/bin/env python3 ?
[20:23:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:23:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:2541:2164:13a7:b7a2) (Ping timeout: 240 seconds)
[20:24:38] <dob1> sveinse, yes
[20:24:42] *** Joins: georgios (~georgios@user/georgios)
[20:24:47] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:25:00] <dob1> I can modify it to point to venv/bin/python I suppose
[20:25:05] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:25:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:25:21] *** Joins: bancroft (~bancroft@user/bancroft)
[20:27:36] <Cheaterman> if anyone was curious about my terrifying questions from earlier: https://github.com/Cheaterman/module_hook
[20:27:46] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:8f37:e40e:dd7d:af29) (Quit: Leaving)
[20:28:08] <Cheaterman> Got it to work, with compromises - user needs to be careful about import/call ordering, and they need to call hook_callbacks() themselves: https://github.com/Cheaterman/module_hook/blob/main/python/__init__.py
[20:28:23] <Cheaterman> but it's probably for the better anyway, I've never seen anything that does implicit monkeypatching anyway
[20:28:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:28:58] <Cheaterman> (I say "careful about import ordering", but I actually added a warning to that effect: https://github.com/Cheaterman/module_hook/blob/main/pysamp/__init__.py#L28
[20:29:02] <Cheaterman> )
[20:29:44] <The-Compiler> dob1: the shebang is only relevant if you launch your script as an executable, you can always launch it with a different python
[20:30:14] <The-Compiler> dob1: so, like I said earlier, do something like this in a wrapper script:    ~/yourproj/.venv/bin/python ~/yourproj/stuff.py "$@"
[20:30:21] <Cheaterman> But the whole "OK sys, here's a loader" and "OK this module I need to register" is really incredibly simple, at least once I got it right (the whole finder/loader/importer/metapathfinder is a bit confusing)
[20:30:22] <The-Compiler> (or write a setup.py or equivalent)
[20:30:37] <SnoopJ> Cheaterman, yea, there's a lot going on there
[20:30:50] <Cheaterman> SnoopJ: For the better though - I read the PEP and the rationale is very sound
[20:30:56] *** Joins: tg (~tg@rockylinux/infra/tg)
[20:31:07] <Cheaterman> WindowsRegistryLoader o__o some things are really magical and amazing
[20:32:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:32:31] *** Joins: hamms (~hams@73.232.205.0)
[20:33:22] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[20:33:39] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[20:34:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:34:17] <ChrisWarrick> WindowsRegistryLoader? what does that do?
[20:34:30] <The-Compiler> do I want to know
[20:35:01] <ChrisWarrick> google can’t find it
[20:35:47] <Cheaterman> ChrisWarrick: Maybe I got the name wrong :-) sec
[20:35:50] <Cheaterman> but I certainly saw it
[20:35:55] <Cheaterman> and it's exactly what it sounds like
[20:36:04] <Cheaterman> https://docs.python.org/3/library/importlib.html#importlib.machinery.WindowsRegistryFinder
[20:36:14] <Cheaterman> Sorry Finder not Loader (because OF COURSE I'd still confuse those after hours of fighting them)
[20:36:36] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[20:36:58] <ChrisWarrick> https://github.com/python/cpython/blob/b7a65c939c93e7910abc8c9d4a129ff385714824/Lib/importlib/_bootstrap_external.py#L794
[20:37:02] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[20:37:04] <ChrisWarrick> looks like a terrible idea to me
[20:37:07] <Cheaterman> Side (unrelated) pun: WSGI is nice, but ASGI is really a missed opportunity to be called TQLA (WSGI being pronounced whiskey :-D)
[20:37:52] <SnoopJ> CrtxReavr, I confess that I couldn't give a very sane description of the various bits even if I had the importlib docs at hand
[20:37:54] <Cheaterman> ChrisWarrick: It's a terrible idea until there's a fitting use-case. Besides, it's not about the idea itself in _this_ specific case, more about it as an example of the flexibility of the whole system and how you can bend it to incredible (and sometimes unhealthy as you pointed out) shapes
[20:38:44] <Cheaterman> SnoopJ: Yeah, exactly this. I worked on it twice already ; I'm none the wiser to this day
[20:38:45] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:38:53] <Cheaterman> I just keep throwing poop at the wall until something sticks in those situations
[20:39:16] <SnoopJ> oops, sorry, I missed
[20:39:19] <Cheaterman> (the other time was this: https://github.com/Cheaterman/OMPy/blob/main/src/ompy/__init__.pyx )
[20:39:24] <Cheaterman> SnoopJ: It's OK :-) I guessed you meant me LOL
[20:39:24] <ChrisWarrick> the windows registry is a very opaque place, you might add a registry key there messing up some imports and you won’t know why 6 months from now
[20:39:30] <The-Compiler> Cheaterman: Finder and Loader makse a lot of a difference if you ask me
[20:39:33] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba)
[20:39:35] *** Quits: Kruppt (~Kruppt@50-111-42-156.drhm.nc.frontiernet.net) (Quit: Leaving)
[20:39:44] <Cheaterman> The-Compiler: The theory is sound. The practice is more confusing than it first seems.
[20:39:49] <The-Compiler> finding Python executables in the registry sounds quite normal for Windows
[20:39:56] <Cheaterman> An importer is a finder _and_ a loader remember?
[20:40:03] <The-Compiler> loading Python modules from the registry fould make me far more uncomfortable
[20:40:07] <The-Compiler> would*
[20:40:26] <Cheaterman> The-Compiler: Agreed
[20:40:27] * SnoopJ stores bytecode in The-Compiler's registry
[20:40:31] <Cheaterman> ↑ this haha
[20:40:41] <The-Compiler> rude
[20:41:47] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[20:42:04] <ChrisWarrick> windows has some file system redirection magic, you could probably redirect C:\Python310\Lib\site-packages\numpy to C:\evilnumpy with the registry
[20:43:05] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba) (Ping timeout: 256 seconds)
[20:44:08] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[20:44:35] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 250 seconds)
[20:44:37] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:45:37] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[20:46:13] <Cheaterman> ChrisWarrick: Didn't know, that sounds pretty amazing (until it comes back to bite you of course)
[20:46:33] <SnoopJ> There is so much going on in file systems
[20:47:11] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:47:11] <ChrisWarrick> Cheaterman: windows’ most famous file redirection involves system32 and syswow64
[20:47:13] *** Quits: kmh (~kmh@2a00:6020:5004:6800:ab68:bc42:8f46:b070) (Quit: Leaving)
[20:47:33] <Cheaterman> ChrisWarrick: Oh, that's a great point ; didn't realize the mechanism predated the 64 switch though
[20:48:02] *** Joins: {HD} (~{HD}@gateway/vpn/pia/hd/x-06969157)
[20:48:35] *** Quits: pingpongball (~blacked@user/blacked) (Quit: pingpongball)
[20:49:14] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[20:51:12] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[20:51:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:51:57] *** Quits: znpy (~znpy@user/znpy) (Quit: The Lounge - https://thelounge.chat)
[20:52:12] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 250 seconds)
[20:52:46] *** Joins: znpy (~znpy@user/znpy)
[20:53:49] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:54:11] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Remote host closed the connection)
[20:54:34] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[20:54:55] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7485:8b77:1db6:876e)
[20:56:57] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 250 seconds)
[20:57:12] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:57:32] *** Quits: DavidMilestone (~DavidMile@182.68.131.163) (Quit: Client closed)
[20:58:14] *** Joins: Throgkt (~Throgkt@user/throgkt)
[20:59:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:01:31] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[21:01:55] *** Quits: aiena (~aiena@user/aiena) (Ping timeout: 250 seconds)
[21:03:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:03:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:03:54] <deniska> I once was really perplexed by `ssh` being available in PATH on windows, but subprocess.run(['ssh', ...]) failing
[21:04:45] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:04:47] <deniska> apparently it used some weird FS functionality to join multiple directories which python didn't quite understand at the time
[21:04:50] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[21:05:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:05:48] *** Quits: null1 (~null@117.221.148.221) (Quit: WeeChat 3.4)
[21:05:58] <SnoopJ> PATH itself is a little weird, too
[21:06:52] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[21:10:03] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:10:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[21:10:39] *** Joins: bluedust (~bluedust@103.161.144.138)
[21:11:06] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[21:11:35] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[21:12:04] *** Quits: paul424 (~tom@ip-5-172-237-132.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[21:12:38] *** Joins: runelind (~runelind@user/runelind)
[21:13:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:ec95:7351:1f8b:5643)
[21:14:56] *** Quits: kmh (~kmh@2a00:6020:5004:6800:ec95:7351:1f8b:5643) (Read error: Connection reset by peer)
[21:15:01] *** Joins: aiena (~aiena@user/aiena)
[21:15:09] *** Joins: kmh (~kmh@2a00:6020:5004:6800:ec95:7351:1f8b:5643)
[21:15:10] *** Quits: aiena (~aiena@user/aiena) (Read error: Connection reset by peer)
[21:15:50] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[21:16:00] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (Quit: leaving)
[21:16:10] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[21:16:22] *** Joins: cheater (~Username@user/cheater)
[21:17:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:19:33] *** Joins: pshou (~pshou@178.239.167.156)
[21:20:42] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:21:58] <ChrisWarrick> hm, I can see C:\WINDOWS\System32\OpenSSH in my $Env:PATH on Windows
[21:23:14] <deniska> yes, but apparently it's a directory junction or something, and real ssh.exe lives in a much weirder location
[21:24:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:26:02] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:9888:ad16:41f:84d0)
[21:27:34] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[21:27:51] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[21:28:41] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:9888:ad16:41f:84d0) (Client Quit)
[21:29:12] *** Joins: nomic (~nomic@185.198.243.184)
[21:29:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:29:23] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[21:30:49] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b9db:5655:ed7e:8e34)
[21:30:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:31:36] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[21:31:38] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba) (Ping timeout: 250 seconds)
[21:32:28] *** Joins: bluedust_ (~bluedust@59.89.219.44)
[21:32:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[21:32:52] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:33:41] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 245 seconds)
[21:33:50] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[21:36:22] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[21:36:22] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 272 seconds)
[21:37:09] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 256 seconds)
[21:37:31] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[21:37:34] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Read error: Connection reset by peer)
[21:39:09] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (Quit: leaving)
[21:39:36] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[21:40:17] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[21:40:25] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[21:40:27] *** Joins: pepper (~pepper@user/pepper)
[21:42:42] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[21:42:50] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (Quit: Leaving)
[21:43:20] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[21:43:28] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[21:44:01] *** Joins: han-solo (~han-solo@user/han-solo)
[21:45:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:46:06] <vaio> hello bs4 lovers; i'm trying to extract the content from this kind of tag: <meta name="foo" contents="some contents here"> , but it seems trying to get `foobar.contents`  or `foobar.get_text')` isn't working
[21:46:49] <vaio> i tought `foobar.contents`  would give me "some contents here", but i was mistaken
[21:47:09] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:47:21] *** Quits: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[21:47:26] <vaio> oooh, it seems it might be foobar['content'] :s
[21:47:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:47:55] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[21:49:17] *** Joins: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de)
[21:49:38] *** Quits: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de) (Client Quit)
[21:49:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:50:01] <SnoopJ> vaio, you're running into a bit of a quirk there where `.contents` is referring to the children of the tag you're looking at (and/or text inside of it), but you *also* have an XML attribute by this name. As you say, [] is the way you get the thing you want
[21:50:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:50:51] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[21:50:57] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[21:51:11] *** Quits: casastorta (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:51:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:51:55] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[21:51:56] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c) (Read error: Connection reset by peer)
[21:52:13] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[21:52:56] *** Joins: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[21:53:12] <vaio> oh, thanks for the clarification about `.contents` =)
[21:53:55] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[21:55:56] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[21:57:44] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:58:41] *** Quits: pshou (~pshou@178.239.167.156) (Ping timeout: 245 seconds)
[21:58:49] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[22:00:50] *** Joins: pshou (~pshou@159.48.55.71)
[22:01:58] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:31fb:1f22:2ca7:237d) (Ping timeout: 250 seconds)
[22:02:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:02:56] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[22:03:40] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:dd09:7d83:36a5:4a0e)
[22:04:04] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[22:04:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:04:37] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[22:05:21] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 245 seconds)
[22:06:50] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b9db:5655:ed7e:8e34) (Ping timeout: 252 seconds)
[22:06:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:07:42] <CrtxReavr> https://bpa.st/DNIQ  <==this is peculiar behavior for "floor division."
[22:09:02] <SnoopJ> Why? floor(-2.5) is -3, as it should be.
[22:09:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[22:09:32] *** Joins: \mSg (mSg@user/msg/x-0285936)
[22:09:56] *** Quits: pshou (~pshou@159.48.55.71) (Ping timeout: 272 seconds)
[22:10:25] *** Joins: pshou (~pshou@178.239.167.156)
[22:11:32] <jinsun> the remainder is always positive this way, which is what you'd want normally
[22:11:33] <KirkMcDonald> CrtxReavr: Don't confuse floor division for truncating division.
[22:12:14] <KirkMcDonald> But, yes, this also has implications for the behavior of the % operator.
[22:12:16] <SnoopJ> jinsun, it's even simpler than that: floor() is the function that tells you the closest integer that is smaller than (or equal to) the result
[22:12:43] <SnoopJ> err, the input*
[22:12:59] *** Joins: dme86 (~dan@user/dan86)
[22:13:00] *** Joins: DavidMilestone (~DavidMile@182.68.131.163)
[22:13:07] <CrtxReavr> KirkMcDonald, getting a hard less  in comparing python's ``-5 // 2`` vs. bash's ``$((-5 //1))``.
[22:13:18] <CrtxReavr> er - hard lesson
[22:13:37] <jinsun> SnoopJ: oh right, the name has floor in it
[22:13:38] <CrtxReavr> bah - I'm typo'ing everywhere.
[22:13:59] <CrtxReavr> KirkMcDonald, getting a hard lesson in comparing python's ``-5 // 2`` vs. bash's ``$((-5 // 2))``.
[22:14:08] <dob1> about virtualenv again, so on .gitignore you have  .venv/  venv/ whatever then, right?
[22:14:17] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:14:58] *** Quits: Sabry (~Sabry@197.37.49.72) (Quit: Ping timeout (120 seconds))
[22:15:26] <SnoopJ> jinsun, I am not entirely sure if it's exactly equivalent to `floor(5/2)` in terms of implementation but that's how I think about it
[22:15:27] *** Joins: Liblx (~Alex@2a02:810c:280:59c:25a3:c73c:4d58:117f)
[22:15:50] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Client Quit)
[22:15:56] *** Quits: pshou (~pshou@178.239.167.156) (Ping timeout: 256 seconds)
[22:16:05] <KirkMcDonald> It's different in that it operates outside the limited integer range of a float.
[22:17:17] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:5174:79be:fbd:b09f)
[22:17:30] <KirkMcDonald> https://bpa.st/56BQ
[22:17:37] <SnoopJ> sorry when I say 5/2 there I mean the abstract mathy operation, not the "as on a computer" operation
[22:17:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:17:45] *** Joins: pshou (~pshou@178.239.167.156)
[22:18:24] <SnoopJ> (in other words, I'm not sure what the codepath that evaluates // actually looks like, but imagine it's not math_floor() because of what you said)
[22:18:52] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:5174:79be:fbd:b09f) (Client Quit)
[22:19:00] <KirkMcDonald> It's a distinct operator with its own slot. The int type has its own implementation.
[22:19:12] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:3558:a80e:47b0:dfab)
[22:19:21] <SnoopJ> yea, looks like you end up in l_divmod() ?
[22:20:13] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:20:20] *** Joins: alex11 (~alex11@user/alex11)
[22:20:24] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:20:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[22:20:51] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Client Quit)
[22:21:11] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:2541:2164:13a7:b7a2)
[22:21:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:22:08] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:1824:8b62:ce35:759b)
[22:22:18] *** Quits: Liblx (~Alex@2a02:810c:280:59c:25a3:c73c:4d58:117f) (Ping timeout: 260 seconds)
[22:22:20] *** Quits: pshou (~pshou@178.239.167.156) (Ping timeout: 250 seconds)
[22:22:23] <SnoopJ> Neat that there's a fast-path for single-digit longs
[22:22:47] *** Joins: fikran (~fikran@user/fikran)
[22:23:04] *** Joins: pshou (~pshou@159.48.55.84)
[22:23:07] <CrtxReavr> Python decimals are very strange: https://bpa.st/R7BA
[22:23:17] *** Quits: pro_z (~pro_z@37.214.50.160) (Ping timeout: 240 seconds)
[22:23:36] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[22:23:40] <KirkMcDonald> CrtxReavr: It's the floats that are strange, in that example.
[22:23:45] <Repiphany> decimal.Decimal(5/3) is converting the float approximation of 5/3 to a decimal
[22:24:03] <KirkMcDonald> CrtxReavr: What you're seeing there is the precise decimal representation of the float that results from 5/3.
[22:24:50] *** Joins: georgios (~georgios@user/georgios)
[22:24:52] <KirkMcDonald> CrtxReavr: Whereas the repr of that float merely displays sufficient precision to unambiguously reproduce that exact float value.
[22:24:56] <CrtxReavr> So if floating point numbers contain that. . . extra bit, where would one normally access it, without the decimal library?
[22:25:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:25:18] <Repiphany> You wouldn't
[22:25:26] <KirkMcDonald> CrtxReavr: Access it in what context, I guess?
[22:25:36] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:25:37] <CrtxReavr> Okay, for get that. ..
[22:25:39] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:25:42] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[22:25:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:25:54] <Repiphany> You can use fractions for another exact representation of rational numbers
[22:25:54] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:26:10] <CrtxReavr> But then why doesn't ``decimal.Decimal(5) / decimal.Decimal(3)``` express as many digits as ``decimal.Decimal(5) / decimal.Decimal(3)``?
[22:26:26] <CrtxReavr> whoops
[22:26:37] <Repiphany> The decimal precision of Decimal is configurable
[22:26:37] <CrtxReavr> But then why doesn't ``decimal.Decimal(5) / decimal.Decimal(3)``` express as many digits as ``decimal.Decimal(5 / 3)``?
[22:26:52] *** Joins: paul424 (~tom@ip-5-172-237-139.multi.internet.cyfrowypolsat.pl)
[22:27:04] <KirkMcDonald> CrtxReavr: When you do `5/3`, you get a particular float value, which approximates that value within the confines of what a float can represent.
[22:27:05] <SnoopJ> One does float arithmetic division, then conversion to Decimal. The other does conversion to Decimal, then decimal arithmetic division.
[22:27:40] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[22:27:42] *** Joins: Thanatos (~Thanatos@105.112.16.41)
[22:27:49] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[22:27:50] *** Quits: pshou (~pshou@159.48.55.84) (Ping timeout: 256 seconds)
[22:27:57] <jinsun> CrtxReavr: format(5/3, ".52f")
[22:28:32] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[22:28:42] <KirkMcDonald> CrtxReavr: This operation necessarily loses precision, in a specific way. But when you convert that float to a decimal, there is no loss of precision; the float value can be represented exactly.
[22:28:43] *** Joins: pshou (~pshou@159.48.55.71)
[22:28:44] <CrtxReavr> Aww.
[22:29:39] <KirkMcDonald> It just takes a lot of decimal digits to do so.
[22:29:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:29:55] *** Joins: Guest95 (~Guest95@dslb-002-206-193-202.002.206.pools.vodafone-ip.de)
[22:30:08] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:30:09] *** Quits: Guest95 (~Guest95@dslb-002-206-193-202.002.206.pools.vodafone-ip.de) (Client Quit)
[22:30:20] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:30:42] <KirkMcDonald> Conversely, when you do Decimal(5)/Decimal(3), you're operating purely in the domain of the Decimal type, which loses precision in its *own* way.
[22:30:44] *** Joins: Guest95 (~Guest95@dslb-002-206-193-202.002.206.pools.vodafone-ip.de)
[22:30:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:30:50] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:30:51] *** Quits: Guest95 (~Guest95@dslb-002-206-193-202.002.206.pools.vodafone-ip.de) (Client Quit)
[22:30:56] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[22:31:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:32:07] *** Joins: bloody (~bloody@user/bloody)
[22:32:54] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:33:30] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Ping timeout: 260 seconds)
[22:33:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:33:41] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[22:34:00] *** Quits: pshou (~pshou@159.48.55.71) (Ping timeout: 272 seconds)
[22:34:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[22:34:26] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 260 seconds)
[22:34:28] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Client Quit)
[22:34:50] *** Joins: paravida_ (~myChateau@23.31.187.1)
[22:34:57] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[22:35:15] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:35:20] *** Quits: paravida_ (~myChateau@23.31.187.1) (Client Quit)
[22:36:20] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 256 seconds)
[22:36:33] *** Joins: pshou (~pshou@178.239.167.156)
[22:37:02] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Client Quit)
[22:37:25] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[22:37:25] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[22:37:25] *** Joins: JordiGH (~jordi@user/jordigh)
[22:38:42] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:39:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[22:39:37] *** Quits: wallsY (~weechat@user/wallsY) (Ping timeout: 240 seconds)
[22:39:44] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:40:38] *** Joins: Klinda (~superleag@user/klinda)
[22:41:46] *** Joins: wallsY (~weechat@user/wallsY)
[22:42:14] *** Quits: pshou (~pshou@178.239.167.156) (Ping timeout: 272 seconds)
[22:42:34] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[22:42:34] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 256 seconds)
[22:42:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:43:56] *** Joins: Betal (~Betal@user/betal)
[22:44:01] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[22:44:02] *** Joins: pshou (~pshou@159.48.55.84)
[22:44:06] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[22:44:21] <Em> It is truly one of the most remaarkable things that mathematics understands irrational numbers, but computers don't.
[22:45:46] <CrtxReavr> Computers are as dumb as a lightswitch.
[22:45:57] <CrtxReavr> They just have billions and billiosn of lughswitches.
[22:46:36] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Remote host closed the connection)
[22:46:37] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[22:46:59] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[22:47:26] <Em> CrtxReavr: do you think there could be a computer that could understand irrational numbers? Wouldn't that be a great advance? If the brain can do it why not a computer?
[22:47:30] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 260 seconds)
[22:47:49] *** Quits: DavidMilestone (~DavidMile@182.68.131.163) (Quit: Client closed)
[22:48:44] <SnoopJ> Em, analog computers do ;)
[22:49:06] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Quit: leaving)
[22:49:11] <Em> Hmm.
[22:49:16] <CrtxReavr> Em, I dunno. . . in almost all things, even what we "understand" is a model, or an abstraction. . . or combinations of both.
[22:49:19] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:49:22] <Em> Maybe it would be a good time to revist analog computation
[22:49:22] <nomic> if ur in pdb and not in a class is there any way to find out wut function u r in
[22:49:38] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[22:50:02] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[22:50:05] <kosh> Em, irrational numbers depends on the number base you are using also
[22:50:17] <Em> That's true.
[22:50:34] <kosh> and computers don't understand anything, actually neither does mathematics
[22:50:46] <Em> You mean the representation of the number right?
[22:51:00] <SnoopJ> nomic, the source I shared with you for a previous question about pdb contains a function that does exactly that: https://bpa.st/RA4Q
[22:51:01] <Em> I don't think you can find a number base where pi is rational.
[22:51:06] <kosh> base pi
[22:51:15] <CrtxReavr> For stupid reasons, I'm porting the meat & potatoes of this to python: https://github.com/magnific0/wondershaper
[22:51:16] <Em> that's not allowed.
[22:51:55] <CrtxReavr> Maybe Pi would be rational in a non-base-10 system.
[22:52:23] <Repiphany> pi is 10 in base pi
[22:52:25] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c) (Ping timeout: 250 seconds)
[22:52:26] <SnoopJ> nomic, if you just want to know with a pdb command, though, the `where` command is useful, it will show you the trace of the current stack
[22:52:34] <CrtxReavr> Isn't it 1?
[22:52:44] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[22:52:44] <SnoopJ> pi**0 = 1
[22:54:16] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[22:54:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:54:54] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[22:55:13] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[22:58:14] <nomic> i know about where
[22:58:14] *** Parts: mhmd (~mhmd@37.48.90.208) (WeeChat 2.7.1)
[23:00:52] <SnoopJ> where/bt are pretty much the extent of what pdb will tell you. More fully-featured debuggers might have more useful functionality, though. pudb shows you the call stack, for instance: https://i.imgur.com/aCIT1JD.png
[23:00:57] *** Joins: f1se4 (~f1se4@213.195.113.45)
[23:01:13] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:01:14] *** Quits: pshou (~pshou@159.48.55.84) (Ping timeout: 272 seconds)
[23:01:23] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:01:31] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c) (Ping timeout: 250 seconds)
[23:01:44] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:02:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:02:06] *** Quits: f1se4 (~f1se4@213.195.113.45) (Client Quit)
[23:02:08] <purple_cthulhu> Hi. Is it a good practice to use a method instead of a property not having it's setter implemented? I think doing this way, we eliminate risk of value assignment to a getter-only property.
[23:02:10] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7e0a:6e6:83be:280c)
[23:02:25] *** Joins: f1se4 (~f1se4@213.195.113.45)
[23:02:47] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:03:02] *** Quits: f1se4 (~f1se4@213.195.113.45) (Client Quit)
[23:03:15] *** Joins: dme86 (~dan@user/dan86)
[23:03:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[23:03:36] *** Joins: korg815 (~korg815@user/korg815)
[23:03:40] <SnoopJ> purple_cthulhu, you can still perform that assignment on a naive method, it'll just replace the method (which might be worse if you care about this)
[23:04:15] <KirkMcDonald> Python mostly doesn't go in for this sort of access control.
[23:05:22] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[23:05:27] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: WeeChat 3.0)
[23:06:00] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:06:32] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:07:30] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[23:07:32] *** Joins: f1se4 (~f1se4@213.195.113.45)
[23:09:15] *** Joins: Cyp_ (~cyp@213.237.87.172)
[23:09:28] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[23:09:47] *** Joins: dme86 (~dan@user/dan86)
[23:09:53] *** Joins: cliluw (~cliluw@47.147.73.223)
[23:11:07] *** Joins: koolazer (~koo@user/koolazer)
[23:12:13] *** Quits: Cyp (~cyp@213.237.87.142) (Ping timeout: 240 seconds)
[23:12:21] *** Quits: BillyZane2 (~BillyZane@185.202.221.34) (Ping timeout: 250 seconds)
[23:12:42] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:13:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:13:33] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[23:13:44] <purple_cthulhu> SnoopJ,KirkMcDonald. Yes, we can override a class method by an assignment (which is a common trick for monkey-patching). Please let to ask my question in another way. Is there any good reason to prefer a getter-only property over a pure method returning a value?
[23:14:01] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[23:14:37] *** Joins: jazzy (~jaziz@user/jaziz)
[23:14:42] *** Quits: Thanatos (~Thanatos@105.112.16.41) (Remote host closed the connection)
[23:15:18] <SnoopJ> purple_cthulhu, I can think of two very general ones: 1) accessing a property hides the call, it "looks" like an attribute to the user, and 2) you get an exception if you try to set the value.
[23:15:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:15:24] <nedbat> purple_cthulhu: method vs property should be an api design question: do the callers think of it as data access (property), or action (method)?
[23:16:34] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[23:16:42] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:16:42] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[23:16:43] *** Joins: cliluw (~cliluw@47.147.73.223)
[23:16:58] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:18:02] *** Quits: bancroft (~bancroft@user/bancroft) (Quit: WeeChat 3.2)
[23:18:57] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:19:58] *** Quits: bluedust_ (~bluedust@59.89.219.44) (Remote host closed the connection)
[23:20:26] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[23:21:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:21:06] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:21:37] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 240 seconds)
[23:23:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:24:48] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[23:25:01] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[23:25:01] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[23:25:01] *** Joins: JordiGH (~jordi@user/jordigh)
[23:25:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:29:01] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:29:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:29:06] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[23:29:26] *** Joins: tomg (~tomg@user/tomg)
[23:30:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:31:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: WeeChat 3.0)
[23:32:15] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:34:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:34:26] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[23:34:39] *** Joins: rvalue (~rvalue@user/rvalue)
[23:37:25] *** gentooclimax is now known as climax
[23:38:35] *** climax is now known as gentooclimax
[23:40:56] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[23:41:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:41:52] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:45:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:47:06] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:47:07] *** Joins: Celeo (~Celeo@user/celeo)
[23:47:39] <funkytwig> leitz, maybe, weirdly the course did not include unit tests but it was the next thing I was hoping to look at, but should finish the course first.  I was just starting to put out feelers.
[23:47:50] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:49:02] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[23:50:04] *** Quits: paul424 (~tom@ip-5-172-237-139.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:50:47] <vaio> ohai, not sure how to articulate the question, but how would you deal converting those kind of timestamps in secs:  `10` being 10secs; `5:10` being 5min10sec, `1:5:10` being 1hr5min10sec, `45:1:5:10` being 45d1h5min10secs
[23:51:00] <vaio> so, adapting the way you convert based on user's input
[23:51:01] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[23:51:20] <vaio> (sorry, im very unsure im explaining this right)
[23:51:29] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[23:51:44] *** Joins: f1se4 (~f1se4@213.195.113.45)
[23:53:51] *** Coroz is now known as Numerlor
[23:54:37] <vaio> what i basically plan to do is to `.split(':')`, then ` if len(split) == 4: do something\n elif len(split) == 3: do_something_else\n elif len(split) == 2: another_thing()` and so on, but it looks very ugly
[23:55:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:55:24] <purple_cthulhu> SnoopJ, KirkMcDonald, nedbat, Thank everybody for helping. Let's have an illustration. Here is an example of what I'm thinking of. We do some calculations to get total length of some internal items (the length could be unknown under some conditions) then expose the result to a caller: https://bpa.st/GPWQ
[23:55:25] <purple_cthulhu> Should the method be preferred over the property?
[23:56:39] <Repiphany> vaio: https://bpa.st/4TDQ
[23:56:43] <purple_cthulhu> vaio, the datetime module provides utilities to parse and convert date-time into corresponding Epoch timestamp.
[23:56:57] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[23:56:59] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:57:27] <SnoopJ> purple_cthulhu, I can't really tell you much about your own preferences
[23:58:16] <vaio> Repiphany: ooh, thanks this looks way nicer
[23:59:41] *** Numerlor is now known as Coroz
[23:59:53] *** Coroz is now known as Numerlor
