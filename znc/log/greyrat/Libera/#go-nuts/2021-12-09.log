[00:00:00] *** Quits: casionaut (~casionaut@user/casionaut) (Quit: o7)
[00:00:21] <b0nn> I /think/ that it's wrong on the grounds that you need to change the content-type header before calling http.Error
[00:00:48] <b0nn> If it was a stanbdard, there'd either be "use this for errors with json messages"
[00:00:58] <b0nn> or it would be default
[00:07:35] <b0nn> In fact https://cs.opensource.google/go/go/+/refs/tags/go1.17.3:src/net/http/server.go;l=2058 says "The error message should be plain text"
[00:10:48] *** Joins: DM430784214951 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[00:12:25] *** Quits: DM43078421495 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[00:14:13] *** Joins: DM43078421495 (~DM4307@c-73-170-76-156.hsd1.ca.comcast.net)
[00:16:22] *** Quits: DM430784214951 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[00:16:46] *** Quits: fwalkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Quit: Leaving)
[00:17:23] <b0nn> That's going to grind my gears for a day or two
[00:17:39] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:19:01] *** Quits: DM43078421495 (~DM4307@c-73-170-76-156.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[00:24:46] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[00:26:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:29:14] *** Quits: rusty (~rustyboy@2a02:2f0e:5610:ab00:b16b:f583:26df:4061) (Quit: Leaving)
[00:30:02] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[00:31:25] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:34:02] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:01] *** Joins: danderson (~dave@tailscale/danderson)
[00:37:01] *** ChanServ sets mode: +v danderson
[00:50:57] *** Joins: oelewapperke (~cde@ns509915.ip-198-245-49.net)
[00:56:12] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:00:27] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:208e:aa8:f0ca:9f25)
[01:04:01] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[01:06:55] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:208e:aa8:f0ca:9f25) (Ping timeout: 265 seconds)
[01:14:48] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[01:19:38] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[01:23:23] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[01:25:25] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[01:29:47] *** Joins: codebam (~codebam@user/codebam)
[01:30:53] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:32:19] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:33:03] *** Joins: alphasierra (~alphasier@49.36.96.249)
[01:33:13] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[01:36:25] *** Joins: shtirlic (~shtirlic@95-55-27-245.dynamic.avangarddsl.ru)
[01:39:25] *** Quits: shtirlic_ (~shtirlic@95-55-27-245.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[01:46:21] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:208e:aa8:f0ca:9f25)
[01:46:29] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:208e:aa8:f0ca:9f25) (Client Quit)
[01:46:45] *** Joins: rcernin (~rcernin@101.189.144.104)
[01:51:02] *** Quits: jespada (~jespada@87.74.37.56) (Ping timeout: 240 seconds)
[01:53:21] *** Joins: jespada (~jespada@87.74.33.157)
[01:53:35] *** Quits: rcernin (~rcernin@101.189.144.104) (Quit: WeeChat 3.3)
[01:53:49] *** Joins: rcernin (~rcernin@101.189.144.104)
[01:55:22] *** Joins: uf6c1a (~uf6c1a@cpe-67-10-252-192.stx.res.rr.com)
[01:58:01] *** Parts: uf6c1a (~uf6c1a@cpe-67-10-252-192.stx.res.rr.com) ()
[01:58:19] *** Joins: hasnWcDM (~uf6c1a@cpe-67-10-252-192.stx.res.rr.com)
[01:58:52] *** Quits: hasnWcDM (~uf6c1a@cpe-67-10-252-192.stx.res.rr.com) (Quit: Client closed)
[02:01:19] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[02:03:51] *** Joins: jjido (~Denis@90.213.58.125)
[02:04:37] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:b58a:4d74:7c36:2f56) (Ping timeout: 240 seconds)
[02:07:43] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[02:15:23] *** Quits: lilgopher (~textual@2601:241:8000:38f0:1137:ba6a:e3f9:7a1c) (Quit: Textual IRC Client: www.textualapp.com)
[02:17:53] *** Joins: kapu (~kapu@user/egm)
[02:18:17] *** kapu is now known as Guest3681
[02:20:48] <pinky> in Viper, a bound pflag default should have a lower precedence than the config file, right?
[02:22:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:26:56] *** Joins: papi (xyz0@xyz0.a.irc.xyz)
[02:26:56] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:27:00] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:27:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:28:17] <pinky> https://github.com/spf13/viper/blob/master/viper.go#L1944-L1946
[02:28:19] <pinky> it seems like it
[02:29:46] <pinky> wait no, it gets skipped in flattenAndMergeMap() when it already exists
[02:30:47] *** Quits: rockyh (~rockyh@user/rockyh) (Read error: Connection reset by peer)
[02:30:59] <pinky> i don't understand then how a default value in the pflag can ever be distinguished by viper as different than a set value
[02:33:20] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: Ping timeout (120 seconds))
[02:33:34] *** Joins: kinduff (~kinduff@user/kinduff)
[02:33:49] <ldiamond> What does this error mean for `golangci-lint run` "File is not `gci`-ed with -local github.com/org/repo (gci)"
[02:34:13] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Ping timeout: 240 seconds)
[02:36:02] *** Joins: rockyh (~rockyh@user/rockyh)
[02:36:49] *** Joins: lilgopher (~textual@2601:241:8000:38f0:2dfe:746f:1a63:638c)
[02:37:18] <pinky> ah never mind https://github.com/spf13/viper/blob/master/viper.go#L1267
[02:38:05] <b0nn> ldiamond: your imports aren't right
[02:38:45] <b0nn> have a look at https://github.com/golangci/golangci-lint/issues/1942
[02:38:49] <ldiamond> b0nn: right. That like is actually an empty line too.
[02:40:16] <b0nn> it *could* also be a need to `go mod tidy` too
[02:40:48] <ldiamond> No that's already done before running golangci-lint
[02:40:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:48:19] <ldiamond> Running this fixed it: golangci-lint run --fix --enable gci,gofumpt --fast --allow-parallel-runners=false
[02:48:23] <ldiamond> import order.
[02:48:31] <ldiamond> seems like it could have been more clear lol.
[02:54:07] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:56:49] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:02:34] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[03:04:25] *** Quits: codebam (~codebam@user/codebam) (Read error: Connection reset by peer)
[03:09:08] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[03:11:43] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[03:15:49] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 240 seconds)
[03:16:14] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:21:25] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:30:21] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:32:53] *** Quits: launchd (launchd@bitbot/launchd) (Ping timeout: 265 seconds)
[03:33:49] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 240 seconds)
[03:49:43] *** Joins: rh (~rh@185.105.180.119)
[04:01:42] <pinky> it seems like it will always return the default value from the pflags over the config file, which seems like it sucks .. https://github.com/spf13/viper/blob/master/viper.go#L838
[04:09:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:15:56] <rawtaz> pinky: you there?
[04:16:44] <pinky> rawtaz: hi
[04:18:17] <rawtaz> pinky: i have no idea if this helps you in any way, but here's from the root command of my last Go program: https://kopy.io/GXjCq#oDPpMrvIgtQGDG
[04:18:53] <rawtaz> i wanted to accept settings from flags, env and config file, and this is the way i found it to be working fine.
[04:19:03] <rawtaz> theres some notes in there as well.
[04:19:18] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[04:19:32] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:19:49] <rawtaz> not sure whats going on with the linebreaks and formatting there in that pastebin but meh :>
[04:20:25] <rawtaz> oh if you click Preferences you can there disable the line breaking, that makes it look better.
[04:21:31] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[04:21:45] <rawtaz> be kind, its my first use of viper and almost my first Go program :P
[04:24:56] *** Quits: alphasierra (~alphasier@49.36.96.249) (Read error: Connection reset by peer)
[04:25:00] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[04:25:33] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:26:43] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[04:29:16] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:30:09] <pinky> rawtaz: ah thanks! let me check that out
[04:30:13] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[04:32:51] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[04:34:09] <rawtaz> y
[04:34:10] <rawtaz> w
[04:34:13] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[04:40:46] <explodes> literally
[04:41:59] <pinky> rawtaz: so in the case of log-level if you don't specify that on the command line, but you had `debug` in your config file, the final value would be set to debug?
[04:43:49] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[04:44:06] *** Joins: mncheck (~mncheck@193.224.205.254)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:38] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:42] *** Quits: Guest3681 (~kapu@user/egm) (Ping timeout: 256 seconds)
[04:50:16] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[04:50:45] <rawtaz> pinky: you mean if i have  logLevel=debug  in the config file and havent set  --log-level  at all on the command line nor in any env var? if so, yes, in that case since i configured the logLevel in the config file the value of that one will be used instead of the default which is info
[04:59:35] <rawtaz> this setup reads the settings in config file, from command line flags and from env vars. the only question is which overrides what. thats easy to try.
[05:09:49] *** Joins: darkapex_ (~darkapex@user/darkapex)
[05:10:31] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[05:11:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:14:13] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[05:27:30] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[05:31:12] *** Joins: shtirlic_ (~shtirlic@92-100-163-66.dynamic.avangarddsl.ru)
[05:33:27] * rawtaz &
[05:34:02] *** Quits: shtirlic (~shtirlic@95-55-27-245.dynamic.avangarddsl.ru) (Ping timeout: 260 seconds)
[05:34:36] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[05:49:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:57:55] *** Joins: haniaF_ (~haniaF@83.24.213.124.ipv4.supernova.orange.pl)
[05:58:44] *** Quits: haniaF (~haniaF@83.24.192.250.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[06:05:56] *** Joins: moog (~moog@107.77.244.79)
[06:06:19] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[06:10:37] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 240 seconds)
[06:25:13] *** Joins: be3uykpy (~be3uykpy@5.29.56.201)
[06:26:13] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[06:26:53] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 265 seconds)
[06:37:47] *** Joins: _moog (~moog@107.126.53.17)
[06:38:09] *** Quits: moog (~moog@107.77.244.79) (Ping timeout: 252 seconds)
[06:44:35] *** Joins: Nutel (~Nutel@c148-218.icpnet.pl)
[06:44:53] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[06:46:37] *** Joins: __moog (~moog@107.242.124.64)
[06:49:32] *** Quits: _moog (~moog@107.126.53.17) (Ping timeout: 256 seconds)
[06:49:36] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 265 seconds)
[06:49:55] *** Joins: moog (~moog@107.242.124.118)
[06:52:22] *** Quits: __moog (~moog@107.242.124.64) (Ping timeout: 256 seconds)
[06:52:51] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:01:45] *** Joins: launchd (launchd@bitbot/launchd)
[07:01:59] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 252 seconds)
[07:05:37] *** Joins: _moog (~moog@107.126.53.185)
[07:08:27] *** Quits: moog (~moog@107.242.124.118) (Ping timeout: 265 seconds)
[07:09:34] *** Quits: _moog (~moog@107.126.53.185) (Client Quit)
[07:09:48] *** Joins: _moog (~moog@107.126.53.185)
[07:09:50] *** Quits: _moog (~moog@107.126.53.185) (Remote host closed the connection)
[07:10:33] *** Joins: moog (~moog@107.126.53.185)
[07:13:24] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[07:15:32] *** Quits: moog (~moog@107.126.53.185) (Quit: Leaving)
[07:19:31] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[07:23:49] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 240 seconds)
[07:26:56] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 256 seconds)
[07:27:29] *** Joins: rcernin (~rcernin@101.189.144.104)
[07:29:05] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:32:13] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 240 seconds)
[07:34:00] *** Joins: rcernin (~rcernin@101.189.144.104)
[07:38:37] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 240 seconds)
[07:51:49] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:302b:7d98:d4a1:b230)
[07:57:45] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:302b:7d98:d4a1:b230) (Quit: WeeChat 3.3)
[07:58:46] *** Joins: rcernin (~rcernin@101.189.144.104)
[08:05:03] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 252 seconds)
[08:07:11] *** Joins: rcernin (~rcernin@101.189.144.104)
[08:07:48] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[08:13:07] *** Quits: Nutel (~Nutel@c148-218.icpnet.pl) (Remote host closed the connection)
[08:17:56] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 256 seconds)
[08:18:28] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[08:27:44] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[08:34:29] *** Joins: frost (~frost@user/frost)
[08:44:25] *** Joins: jackneilll (~jackneill@86FF5664.dsl.pool.telekom.hu)
[08:44:33] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:45:12] *** Quits: jackneillll (~jackneill@20014C4E1816C8002E717B9B7FEF8FC7.dsl.pool.telekom.hu) (Remote host closed the connection)
[08:47:34] *** Joins: rcernin (~rcernin@101.189.144.104)
[08:54:01] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[08:55:23] *** Joins: juan50 (~juan@cpe-76-171-37-136.socal.res.rr.com)
[08:55:54] *** Quits: juan50 (~juan@cpe-76-171-37-136.socal.res.rr.com) (Client Quit)
[08:59:18] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 268 seconds)
[09:05:01] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[09:07:55] *** Parts: papi (xyz0@xyz0.a.irc.xyz) (XYZ irc.xyz)
[09:15:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:21:10] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[09:28:17] *** Quits: hendry (~hendry@210.23.22.8) (Ping timeout: 268 seconds)
[09:29:07] *** Joins: hendry (~hendry@210.23.22.2)
[09:34:54] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[09:36:50] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 265 seconds)
[09:41:23] *** Parts: SDr5 (~SDr@li1189-192.members.linode.com) ()
[09:42:35] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[09:44:59] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[09:49:17] *** Joins: rcernin (~rcernin@101.189.144.104)
[09:50:13] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:52:56] *** Quits: rcernin (~rcernin@101.189.144.104) (Client Quit)
[09:53:10] *** Joins: rcernin (~rcernin@101.189.144.104)
[09:55:08] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[10:03:53] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[10:04:56] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:08:15] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:21:37] *** Quits: lilgopher (~textual@2601:241:8000:38f0:2dfe:746f:1a63:638c) (Quit: Textual IRC Client: www.textualapp.com)
[10:38:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:39:43] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[10:40:10] *** Quits: pvalenta (~petr@mail.open-system.cz) (Ping timeout: 256 seconds)
[10:40:21] *** Joins: kinduff6 (~kinduff@user/kinduff)
[10:40:27] *** Joins: pvalenta (~petr@mail.open-system.cz)
[10:41:14] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:41:19] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:41:25] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:41:52] *** Quits: kinduff (~kinduff@user/kinduff) (Ping timeout: 256 seconds)
[10:41:52] *** Quits: d4ve (~d4ve@user/d4ve) (Ping timeout: 256 seconds)
[10:41:52] *** kinduff6 is now known as kinduff
[10:42:08] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[10:42:10] *** Joins: cim (~cim@205.185.117.110)
[10:42:13] *** Quits: whaley (~whaley@2603-6080-a301-33d1-9870-8e29-6957-c087.res6.spectrum.com) (Ping timeout: 240 seconds)
[10:42:37] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 240 seconds)
[10:42:45] *** Joins: frost (~frost@user/frost)
[10:43:53] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[10:46:55] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:47:13] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 268 seconds)
[10:48:41] *** Joins: Teckla (~Teckla@user/teckla)
[10:49:55] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:00:41] *** Quits: dale (dale@user/dale) (Ping timeout: 252 seconds)
[11:01:57] *** Joins: dale (dale@user/dale)
[11:02:40] *** Joins: jla (~jordi@64.225.79.195)
[11:03:37] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:04:49] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[11:05:12] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[11:05:31] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[11:08:35] *** Joins: neurocyte0132889 (~neurocyte@45.93.108.168)
[11:08:35] *** Quits: neurocyte0132889 (~neurocyte@45.93.108.168) (Changing host)
[11:08:35] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:11:23] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Remote host closed the connection)
[11:12:32] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 265 seconds)
[11:17:11] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:22:39] *** Joins: abraham (~abraham@143.244.185.86)
[11:26:57] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:28:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:31:14] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[11:31:59] *** Joins: darkapex (~darkapex@user/darkapex)
[11:32:16] *** Quits: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Quit: WeeChat 3.3)
[11:32:21] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 265 seconds)
[11:32:30] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[11:34:17] *** Joins: mrig (~AdiIRC@user/mrig)
[11:38:27] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:39:20] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:41:07] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[11:42:58] *** Joins: jjido (~Denis@90.213.58.125)
[11:44:39] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:45:12] *** Joins: gpeskens (~gpeskens@62.251.31.165)
[11:49:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 256 seconds)
[11:54:39] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:54:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:00:34] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:cd65:c92f:dcb3:dd82)
[12:01:18] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:cd65:c92f:dcb3:dd82) (Client Quit)
[12:03:14] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[12:04:11] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:06:54] *** Quits: gpeskens (~gpeskens@62.251.31.165) (Remote host closed the connection)
[12:08:37] *** Joins: gpeskens (~gpeskens@62.251.31.165)
[12:12:18] *** Joins: gpeskens_ (~gpeskens@62.251.31.165)
[12:14:45] *** Quits: gpeskens (~gpeskens@62.251.31.165) (Ping timeout: 252 seconds)
[12:14:45] *** gpeskens_ is now known as gpeskens
[12:28:45] *** Joins: darkapex_ (~darkapex@user/darkapex)
[12:29:14] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[12:29:32] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[12:30:02] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[12:30:23] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[12:35:40] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 265 seconds)
[12:36:04] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[12:40:21] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[13:01:30] *** Quits: pztrn (~pztrn@user/pztrn) (Quit: Segmentation fault)
[13:04:01] *** Joins: pztrn (~pztrn@user/pztrn)
[13:04:59] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[13:05:24] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Quit: Quit.)
[13:09:25] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:09:44] *** Joins: frost (~frost@user/frost)
[13:12:20] *** Joins: Arsen (arsen@managarm/dev/Arsen)
[13:13:28] *** Quits: pez (~pez@user/pez) (Read error: Connection reset by peer)
[13:16:12] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[13:16:20] *** Joins: pez (~pez@user/pez)
[13:16:31] *** Joins: mickey8 (~user@user/mickey)
[13:17:09] *** Joins: jjido (~Denis@90.213.58.125)
[13:24:42] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[13:32:01] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:34:20] *** Quits: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7) (Quit: ZNC 1.8.2 - https://znc.in)
[13:34:36] *** Joins: yelnah (~felix@60-242-60-179.tpgi.com.au)
[13:50:36] *** Quits: mrozitron (~k@user/mrozitron) (Quit: WeeChat 3.1)
[13:51:29] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[13:51:43] *** Joins: mrig (~AdiIRC@user/mrig)
[13:55:25] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[13:55:34] *** Joins: krux02 (~krux02@194.8.199.29)
[14:06:13] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[14:07:39] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[14:07:57] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:09:11] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 256 seconds)
[14:11:31] *** Parts: frost (~frost@user/frost) ()
[14:15:02] *** Joins: chilversc (~chilversc@user/chilversc)
[14:15:49] *** Quits: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw) (Ping timeout: 240 seconds)
[14:19:11] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[14:24:25] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 265 seconds)
[14:26:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:34:12] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[14:38:58] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[14:39:49] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:42:52] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[14:45:46] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[15:00:40] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[15:00:53] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:00:56] *** Joins: mickey8 (~user@user/mickey)
[15:04:21] *** Joins: ztx (~ztx@user/ztx)
[15:09:09] *** Joins: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw)
[15:18:44] *** Joins: mei (~mei@user/mei)
[15:24:17] *** Joins: mncheck (~mncheck@193.224.205.254)
[15:24:38] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:27:15] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:29:00] *** Joins: jla (~jordi@64.225.79.195)
[15:32:54] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[15:48:13] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[15:49:35] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:56:41] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:59:19] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[16:00:11] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[16:06:31] *** Quits: dalan (~dalan@194-193-164-106.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[16:06:47] *** Joins: dalan (~dalan@194-193-164-106.tpgi.com.au)
[16:08:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:20:10] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[16:33:16] *** Joins: henry404081 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw)
[16:34:31] *** Piraty_ is now known as Piraty
[16:35:27] *** Quits: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw) (Ping timeout: 252 seconds)
[16:35:28] *** henry404081 is now known as henry40408
[16:38:47] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[16:41:13] <pinky> rawtaz: argh your paste expired :(
[16:42:23] <pinky> i really don't get how this is supposed to work in viper, find() only gets called twice, once in Get() where it sets flagDefault=true, and once in IsSet() where it is flagDefault=false
[16:42:39] <rawtaz> yes, i set it to a day or something
[16:42:42] <rawtaz> or an hour i dunno
[16:42:56] <pinky> so it seems like when viper unmarshalls into a struct, the bound flags defaults end up being used instead of the config value
[16:42:56] <rawtaz> i dont understand what you dont get. instead of reading viper source code, cant you just try what i gave you?
[16:43:18] <pinky> well i lost it now .. so i can't refer back to it
[16:43:30] <pinky> i already have something i wrote that i'm using and is hard to change, just trying to fix it
[16:43:31] <rawtaz> in the example you gave me and i asked about and replied to i cannot see anything else than that the default is overridden if you supply a config value for it in the config file.
[16:43:46] <rawtaz> well start a completely new app with my code and see how it works then
[16:44:27] <rawtaz> https://kopy.io/6yqiB#B8rhUf3sT4KRr8
[16:44:36] <pinky> i guess i need to bind before flags are parsed
[16:44:40] <pinky> maybe thats the issue
[16:44:49] <rawtaz> if you use the code i gave it it should work.
[16:44:55] <rawtaz> at least it does for me
[16:45:08] <pinky> i have to change what i have, i can't just use new code that works totally differently
[16:46:12] <rawtaz> for the second time; create a new simple go app, use the code i gave you, and test it to see if it works as i say it does. if it does, you have a boilerplate that you know works and can then imlement in your real app
[16:47:01] <rawtaz> its just a basic cobra app so its like two files needed to test this
[16:47:19] <pinky> not really doubting it works for you
[16:47:19] <rawtaz> i tried it manually yesterday, the config file value *does* override the default value
[16:47:28] <rawtaz> yeah but if it works for me then it should work for you as well
[16:47:47] <pinky> i've seen things in the github issues where people had similar problems as mine and they just said they changed the order of some things but weren't very specific
[16:48:01] <rawtaz> that is why i gave you the code so you have a working example :)
[16:48:45] <pinky> sure, and its useful to see how viper works but not useful as a base to entirely reimplement what i have, because i don't want to do that
[16:48:58] <pinky> not unless theres really no other way, but there must be
[16:49:58] <rawtaz> of course youll have to adapt what you have since its not working and there is evidently code that does work
[16:51:22] <rawtaz> i dont understand the problem. why is it hard to adopt what you have such that it reads the config/settings stuff in a way like what i showed you?
[16:51:51] <pinky> because i don't do anything in the same way, for instance i don't use a global variable
[16:52:17] <pinky> i have a config struct that actually contains viper, i create a new one of those and pass it the command to get the flags from
[16:52:41] <pinky> it unmarshals viper into the config struct after setting the flags
[16:52:58] <pinky> i think the problem is that the flags maybe need to be bound before the flags are parsed
[16:53:15] <pinky> which seems strange, i thought the whole point was you can bind them at any time
[16:53:16] <rawtaz> ok :)
[16:53:27] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[16:54:19] *** Joins: arinov (~arinov@176.89.29.127)
[16:58:46] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[17:01:22] *** Joins: kapu (~kapu@user/egm)
[17:01:46] *** kapu is now known as Guest822
[17:03:05] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:03:19] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 252 seconds)
[17:05:53] *** Joins: demsh (ldka1uktst@hermod.demsh.org)
[17:09:43] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:12:34] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[17:12:47] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[17:13:06] *** Quits: Guest822 (~kapu@user/egm) (Ping timeout: 265 seconds)
[17:13:41] *** Joins: _kapu (~kapu@user/egm)
[17:14:05] *** _kapu is now known as Guest9098
[17:15:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:19:59] *** Quits: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net) (Changing host)
[17:19:59] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[17:23:09] *** Joins: jla (~jordi@64.225.79.195)
[17:27:23] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[17:30:55] *** Quits: jjcm (~j@li263-105.members.linode.com) (Ping timeout: 256 seconds)
[17:31:02] *** Joins: jjcm (~j@li263-105.members.linode.com)
[17:32:13] *** Quits: mva (~mva@gentoo/developer/mva) (Ping timeout: 240 seconds)
[17:33:49] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[17:44:36] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[17:59:12] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:02:24] *** Joins: mrig (~mrig@user/mrig)
[18:06:42] *** Quits: Guest9098 (~kapu@user/egm) (Ping timeout: 256 seconds)
[18:07:21] *** Joins: kapu (~kapu@user/egm)
[18:07:41] *** Joins: Teckla (~Teckla@user/teckla)
[18:07:45] *** kapu is now known as Guest72
[18:08:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:09:35] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[18:15:20] *** Joins: cobber (~protorom@i5C74E012.versanet.de)
[18:20:22] *** Quits: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw) (Read error: Connection reset by peer)
[18:20:52] *** Joins: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw)
[18:21:31] *** Quits: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw) (Read error: Connection reset by peer)
[18:21:58] *** Joins: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw)
[18:21:58] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[18:22:00] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[18:22:11] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:26:09] *** Joins: arinov (~arinov@176.89.29.127)
[18:26:38] *** Quits: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw) (Read error: Connection reset by peer)
[18:27:03] *** Joins: henry40408 (~henry4040@211-74-79-252.adsl.dynamic.seed.net.tw)
[18:32:08] *** Joins: noonien (~noonien@user/noonien)
[18:43:38] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 260 seconds)
[18:46:02] *** Joins: mva (~mva@gentoo/developer/mva)
[18:46:49] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[18:47:06] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[18:48:49] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[18:52:02] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 252 seconds)
[18:53:44] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 256 seconds)
[18:55:12] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[18:55:20] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[18:55:23] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:56:32] *** Quits: Guest72 (~kapu@user/egm) (Ping timeout: 265 seconds)
[18:57:20] *** Joins: _kapu (~kapu@user/egm)
[18:57:43] *** _kapu is now known as Guest3883
[19:02:48] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[19:02:49] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[19:06:38] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[19:08:32] <catern> hi #go-nuts, I remember seeing in like 2015 an article or maybe slides from a talk once which had a parser structure where the the tokenizer and parser ran in separate goroutines, and each token was output on a channel by the tokenizer to be read by the parser. I remember this was considered a good example of using goroutines/channels effectively, anyone know what talk I'm thinking of?
[19:09:14] <ikke> A talk from rob pike
[19:09:29] <ikke> https://www.youtube.com/watch?v=HxaD_trXwRE
[19:10:02] <ikke> note that later in the talk he refactored away the goroutines
[19:11:25] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[19:11:33] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[19:12:37] *** Joins: edrocks (~Ed@user/edrocks)
[19:12:49] <catern> ikke: ah thanks, yeah I found that talk in my searching but I was confused by the lack of goroutines when I looked at the end results
[19:16:03] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[19:17:58] *** Quits: krux02 (~krux02@194.8.199.29) (Quit: Leaving)
[19:20:59] *** Quits: yelnah (~felix@60-242-60-179.tpgi.com.au) (Quit: ZNC 1.8.2 - https://znc.in)
[19:22:24] *** Joins: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7)
[19:23:59] *** Joins: arinov (~arinov@31.223.11.117)
[19:26:53] *** Joins: Guest5 (~Guest5@dslb-002-202-012-226.002.202.pools.vodafone-ip.de)
[19:28:04] *** Parts: Guest5 (~Guest5@dslb-002-202-012-226.002.202.pools.vodafone-ip.de) ()
[19:28:13] *** Joins: algor1th (~Guest5@dslb-002-202-012-226.002.202.pools.vodafone-ip.de)
[19:28:44] *** Quits: algor1th (~Guest5@dslb-002-202-012-226.002.202.pools.vodafone-ip.de) (Client Quit)
[19:29:24] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[19:30:47] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[19:32:14] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Client Quit)
[19:34:58] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[19:37:47] *** Joins: cation (cation@user/cation)
[19:39:15] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[19:41:07] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Client Quit)
[19:41:52] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[19:51:07] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[19:52:28] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:53:58] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[19:56:28] *** Quits: arinov (~arinov@31.223.11.117) (Ping timeout: 265 seconds)
[19:58:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 252 seconds)
[20:05:07] *** Quits: cobber (~protorom@i5C74E012.versanet.de) (Quit: cobber)
[20:06:56] *** Joins: rendar (~rendar@user/rendar)
[20:10:37] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[20:11:26] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[20:16:13] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[20:16:32] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[20:17:21] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[20:18:12] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[20:22:44] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:33:05] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:47] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[20:34:42] <dostoyevsky2> I just was wondering if I could use templates in a go 1.18 program that just prints "hello world" but is 1PB in size... but not sure if go binaries actually can become larger than 3G (they'd need to use 64bit addressing on linker level)
[20:37:32] <seebs> i am not sure what you're asking but it feels very confusing
[20:38:12] <seebs> 3G is not a breakpoint for binaries, and 32-bit binaries have been able to link executables >4GB in size in the past because linkers are manipulating a binary format, not running in it.
[20:38:18] <siXy> dostoyevsky2: I think you're a bit confused about templates - templates don't need to be compiled into the binary, so if you've got a 3P template, you can just read it from a file.
[20:38:36] <seebs> and i don't understand why you expect the binary to be that large.
[20:38:42] <mrig> Hello, I'm using delve to debug a server written in go, and am using a couple of my own packages in this server. When I run delve and attach to the server process I am able to access the codes function to set breakpoints fine, however I have added a function to my package explicitly for breaking but can not see this function in delve. What could I try doing to reset all cache to be sure that I am
[20:38:44] <mrig> not using an old binary in the delve cache perhaps?
[20:39:41] <mrig> I have just run `go clean -cache -modcache -i -r`
[20:41:01] <siXy> However AIUI the linker will currently refuse to create a binary > 2G in size. That could be changed, but I'm not sure why you'd want to.
[20:41:17] <dostoyevsky2> seebs: I was just looking at this c++ Shared Object on Linux and objdump -tC shows me symbols which are 800 characters in size... instantiated templates.  The source code is 80m of C++, the .so is 1.2G
[20:42:20] <mrig> I am able to set a breakpoint on an older function within my imported package.
[20:47:10] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[20:47:34] <dostoyevsky2> siXy: I generally hit the 3G when I write test cases that involve a quick conversion of some multi-G dataset into to-be-compiled literals, so one can avoid the parsing time during execution
[20:48:37] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[20:49:38] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[20:50:11] <fizzie> Out of pure curiosity, I tried adding three copies of a one-gigabyte file (of zeroes) as []byte via //go:embed, but: https://0x0.st/-Fc7.txt
[20:50:36] <fizzie> (A single three-gigabyte file is just "embed big.bin: file too large".)
[20:52:25] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:52:42] *** Joins: mickey8 (~user@user/mickey)
[20:55:38] <edrocks> fizzie is it because it's a single file or in total go embed can only handle so much data?
[20:56:01] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:56:29] <fizzie> The 3*1G case seemed to get past the embed stage and run into problems in linking (as in the paste), FWIW.
[20:56:48] <siXy> edrocks: In theory, go:embed has a per-file limit of 4GiB per file.
[20:57:06] <dostoyevsky2> On the linker level addressing is usually in 32bit... But one can switch addressing to 64bit (that's how it works for gcc/ld)
[20:57:10] <siXy> but in practice the linker breaks before then (at least on linux x86_64)
[20:57:19] <edrocks> siXy i see https://github.com/golang/go/blob/master/src/cmd/link/internal/ld/data.go#L1995
[20:58:05] <siXy> *nod* - I was just going off a comment in the ml by Ian
[20:58:10] <bpalmer> presumably you could use gccgo and link based off of that.
[20:58:29] <siXy> Yeah, I imagine that's how people are doing the 4G per file embed stuff
[20:58:55] <siXy> However I seriously doubt that embedding 4G of data is the most efficient way of handling large data loads...
[20:59:17] <edrocks> i wonder how large typical go binaries get with just code. My largest are 40MB and 32MB
[21:01:05] <siXy> protobufs inflate them quite a bit. pure go ones I rarely see get that huge
[21:01:47] <fizzie> I have a pretty hello-worldy (internal) binary that just calls a few APIs that turned into a 1.1 gigabyte executable.
[21:01:56] <siXy> o.O
[21:02:02] <ikke> oof
[21:02:06] *** Joins: andlabs (~andlabs@2604:ca00:179:302b:79b3:38ae:8f40:f3d3)
[21:02:14] <siXy> fizzie: Does that use grpc/protos or similar?
[21:03:00] <fizzie> Yes.
[21:03:44] <siXy> okay, that makes sense then. I really hate the go proto implementation :(
[21:03:50] <dostoyevsky2> edrocks: my low-effort universal binary format clocks at 42M atm... I guess I will get to about 60M in a couple of days
[21:05:27] <edrocks> dostoyevsky2 interesting! Is that universal for macOS or something else
[21:06:23] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[21:07:10] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:07:10] *** Joins: lilgopher (~textual@2601:241:8000:38f0:fc6d:baa:b0b5:9af8)
[21:07:50] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[21:08:06] *** Joins: mickey8 (~user@user/mickey)
[21:08:18] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 260 seconds)
[21:08:58] <dostoyevsky2> edrocks: I define a cluster of computers which are all served by one binary... which embeds all the binaries for all the OSes/architectures of that cluster... Right now I have OpenBSD/Linux/Macos in that cluster
[21:09:25] <edrocks> dostoyevsky2 oh that's pretty neat! Never thought of that
[21:09:58] <dostoyevsky2> edrocks: I had to invent my own embedding format, so I can always do: cat gobin another > finalbin
[21:10:11] <dostoyevsky2> like with tar
[21:14:09] <mrig> This really is a mystery to me, why should it find one function and not another?
[21:15:23] <dostoyevsky2> mrig: I had this with function names I wasn't supposed to use... e.g. select
[21:15:47] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Quit: Leaving)
[21:15:51] <mrig> dostoyevsky2: These are my own functions and I have made it Exportable.
[21:16:01] <dostoyevsky2> hmm... select actually is allowed..
[21:16:09] <mrig> Oh I see, in that Break is to close to break?
[21:16:53] <mrig> seems like there is a little trick that I need to get something to clear, or that is optimising it out.
[21:17:14] <mrig> I'm compiling with all optimisations off though.
[21:17:41] <mrig> I should simplify and try to understand it better.
[21:18:00] <mrig> It is going to be awesome when it works!
[21:18:36] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[21:19:02] <dostoyevsky2> Yeah, why doesn't Go have some Game Engine bindings like UE5?  I want to use it to write a game
[21:19:32] <siXy> It's kind of interesting how some ideas just keep on getting re-invented. FatELF died like 10 years ago, and here we are again :)
[21:22:06] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:24:58] <dostoyevsky2> siXy: That was about the time when apple introduced universal binaries...
[21:25:57] <MrElendig> dostoyevsky2: probably because no one have taken the two years of their life needed to write them
[21:26:08] <siXy> dostoyevsky2: nah, those are much older. mid 90s I think.
[21:26:56] <siXy> from when apple had all that NEXTSTEP stuff, leading them to need to support like 3 entirely different arches
[21:31:18] <dostoyevsky2> siXy: I guess it was easy for apple/NeXT to just include all the SDKs and slow down compilation to support all their relevant platforms -- but for Linux that's kind of a mismatch, just imagine all those ancient libc versions, it's probably more than just a couple of SDKs you'd need.  But since Go has mostly removed the libc and also can compile for ~30 platforms out of the box universal binaries
[21:31:25] <dostoyevsky2> seem much more appealing, at least in certain contexts
[21:32:40] <siXy> I think most of the arguments against them still apply, honestly.
[21:33:13] <siXy> If it works for you great, but it's worth taking a look at all the reasons they didn't make it.
[21:33:46] *** Quits: andlabs (~andlabs@2604:ca00:179:302b:79b3:38ae:8f40:f3d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:34:33] <dostoyevsky2> Also, I think apple switched now to actually shipping some kind of precompiled AST format to the app store, so they can support new platforms, even though those didn't even exist at the time an application was compiled
[21:35:32] <siXy> The app store isn't a good model for this - it's solving an entirely different problem that you don't have unless you're running a large mobile app store.
[21:36:44] *** Joins: jla (~jordi@64.225.79.195)
[21:36:55] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Remote host closed the connection)
[21:44:14] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[21:47:26] <mrig> dostoyevsky2: I think it must be some cache that delve is using, when I give it the direct location of a line in the file in the vendor folder, it say that there is no statement on that line, when there is.
[21:48:04] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[21:48:05] <mrig> Does delve have a channel or support mail group that anyone is familiar with?
[21:48:52] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[21:49:24] <mrig> oh nice, could set it be incriminating the line number :)
[21:49:37] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[21:50:01] <mrig> op incrementing rather
[21:52:29] <mrig> Well it is breaking and there is my Break function written on the line that I first gave, must be some optimisation bug or something, never mind it has stopped in the function that I need at last.
[21:56:07] *** Quits: g2anj (~v@39.112.227.198) (Ping timeout: 256 seconds)
[22:00:53] *** Joins: arinov (~arinov@213.194.126.155)
[22:02:04] *** Joins: alphasierra (~alphasier@2409:4040:d89:80c0:22f7:be2e:c2e2:1f19)
[22:05:01] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[22:08:06] *** Joins: as (~alphasier@49.36.96.249)
[22:10:35] *** Quits: alphasierra (~alphasier@2409:4040:d89:80c0:22f7:be2e:c2e2:1f19) (Ping timeout: 252 seconds)
[22:11:06] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[22:11:14] *** Joins: alphasierra (~alphasier@49.36.96.249)
[22:12:31] *** Quits: alphasierra (~alphasier@49.36.96.249) (Remote host closed the connection)
[22:12:36] *** Quits: as (~alphasier@49.36.96.249) (Client Quit)
[22:13:44] *** Quits: tesuji (~quassel@2a02:908:180:9500:9509:881b:6bdf:4d85) (Ping timeout: 265 seconds)
[22:23:16] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[22:23:23] *** Joins: cobber (~protorom@i5C74E012.versanet.de)
[22:23:45] <pinky> https://gist.github.com/lateefj/dfff4399996928c4e18c78f5f7a98f19
[22:23:55] <pinky> this is interesting, i would have thought it would deadlock on the locks though
[22:24:23] *** Quits: cobber (~protorom@i5C74E012.versanet.de) (Client Quit)
[22:26:25] *** Joins: misuto6 (~misuto@h-155-4-73-21.A192.priv.bahnhof.se)
[22:27:56] *** Quits: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se) (Ping timeout: 256 seconds)
[22:27:56] *** misuto6 is now known as misuto
[22:30:51] <pinky> if this here blocks https://gist.github.com/lateefj/dfff4399996928c4e18c78f5f7a98f19#file-syncmap-go-L49
[22:31:02] <pinky> then how do you get here? https://gist.github.com/lateefj/dfff4399996928c4e18c78f5f7a98f19#file-syncmap-go-L87
[22:31:49] <pinky> am i crazy in thinking there is a flaw here?
[22:32:58] <b0nn> the timeout will be triggered if nothing is returned
[22:33:24] <pinky> how?
[22:33:39] <pinky> wouldn't the GetUntil need to be in its own goroutine?
[22:33:44] <b0nn> but the defer above the lock means that when that function exits then the lock is unlocked
[22:33:45] <pinky> or the get() for that matter could be ?
[22:33:57] <b0nn> how? you need to rrefresh select {} knowledge
[22:34:08] <pinky> but i'm wondering how it even makes it to the select
[22:34:30] <pinky> if theres a WLock in place
[22:35:08] <pinky> if theres a write lock in place, and its the same goroutine, isn't get() just going to hang before it exits? on line 49
[22:35:12] <pinky> sorry premature enter
[22:35:14] <b0nn> why would the call block
[22:35:39] <pinky> I thought RLock() would block if there is already a Write Lock
[22:36:57] <Tv_> it will
[22:37:02] <Tv_> reentrant locks are insanity
[22:37:51] <pinky> ah hmm :( is there anything for this? like sync.RWLock that itself can manage a timeout?
[22:38:10] <Tv_> well the code is all kinds of weird, frankly
[22:38:17] <Tv_> defer unlock *before* locking?
[22:38:27] <Tv_> channels for seemingly no reason
[22:38:43] <pinky> so like if err := sm.Lock(1 * time.Second); err != nil { return err }
[22:38:46] <Tv_> pinky: can you make a simple thing that runs on play.golang.org?
[22:38:48] <pinky> where err is like "timed out"
[22:39:05] <pinky> well i haven't touched any of my actual code yet, i just ran across this as a potential way to solve my problem
[22:39:15] <pinky> then i thought it must have some flaw unless i was missing something
[22:39:20] <pinky> and you're telling me i'm not missing anything, and that it sucks
[22:39:31] <pinky> so i'm just still looking for potential libraries to evaluate to do this :)
[22:39:37] <pinky> not actually writing code yet
[22:39:51] <Tv_> pinky: or, even more to the point, why are you trying to build some sort of timing-out locks on top of a mechanism that has no such thing?
[22:39:56] <bpalmer> oh, so it's a time out in attempting to acquire the lock, not a timeout where the lock automatically is unlocked.
[22:40:01] <pinky> really though its probably overkill, just trying to think ahead where someone wants a timeout on this
[22:40:02] <Tv_> pinky: what problem is being solved here?
[22:40:04] *** Joins: jjido (~Denis@90.213.58.125)
[22:40:20] <Tv_> sync.Mutex cannot timeout
[22:40:33] <pinky> the problem would be "protect concurrent access to a map and allow a timeout on operations in the event a lock can't be obtained within the timeout"
[22:41:24] <pinky> so i know sync.Mutex or sync.RWMutex can't be (i thought they couldn't be, then i saw this gist, turns out i was right)
[22:41:26] <Tv_> pinky: that sounds like a problematic design. you shouldn't keep a shared resource (like that map) locked for a long time
[22:41:34] <pinky> well yeah, of course not
[22:41:47] <pinky> but like all potential errors i want to try to think about them and make sure they are handled
[22:42:18] <pinky> in the event something else goes wrong in some other part of the app that has a lock taken out and takes too long, and another operation comes in
[22:42:24] <pinky> (obviously)
[22:42:28] <Tv_> maybe you want sync.Map that is actually designed to minimize the problem
[22:42:35] <Tv_> (if your usage suits its assumptions)
[22:42:56] <pinky> i read that and it didn't seem like it did, it mentions avoiding using it for type safety and etc ..
[22:43:10] <Tv_> a thread getting stuck with a lock is not generally something you can/should protect against inside that process -- there's no recovery
[22:43:35] <Tv_> that's a good example of where a health check should start failing and the whole process get killed
[22:43:46] <pinky> its nice that if an operation comes in that needs to lock and another lock is already there, that the newest operation can just fail after a few seconds of timeout with an error
[22:43:56] <pinky> rather than just the whole app deadlocks and now you have a problem finding out whats going on
[22:44:04] <pinky> your second operation instead of timing out now is also hanging forever
[22:44:35] <Tv_> making all locks erroring operations will hugely complicate your program
[22:44:40] *** Joins: babilen (~babilen@user/babilen)
[22:44:43] <Tv_> and the one gain is you get to output one error instead of anohter
[22:44:55] <zsnes> pinky: i don't see how the code above would be deadlocked ever? sm.get() will only hold the lock if it can't output to the 'result' channel, which is created (and is buffered) right before the sm.get() call is made in GetUntil()?
[22:46:22] <Tv_> if anything, make a successful operation "pet the watchdog", and crash the process is the watchdog isn't happy
[22:46:46] <pinky> zsnes: it looks to me like it would block on line 49 if theres already a write lock, no ?
[22:46:56] <pinky> unless you ran that in a goroutine i guess
[22:47:23] <Tv_> pinky: but that write lock again shouldn't be held long
[22:47:39] <pinky> Tv_: i don't know how long it could be held though, of course it shouldn't ..
[22:47:53] <zsnes> pinky: yes it would block but why would the write lock be dangling?
[22:47:55] <Tv_> once again, you have no hope of recovery
[22:47:56] <pinky> anyway i'm overcomplicating it, which i was hoping might be easy, i'll forget any sort of timeout on these locks
[22:48:05] <Tv_> if you have a locking bug, you have a locking bug
[22:48:06] <zsnes> thatsw the whole point of locking in the first place, no?
[22:48:11] <pinky> i briefly searched for rwmutex timeout
[22:48:15] <pinky> to see if there was a lib to handle this
[22:48:20] <pinky> and i found this gist ..
[22:48:21] <Tv_> the program won't make meaningful progress -> detect *that* and kill the process
[22:48:29] <pinky> but i'm sure you're right, theres a reason this isn't just in the sync package
[22:48:46] <Tv_> pinky: adding timeouts, errors everywhere, complicating your code a lot, you *still* have no meaningful recovery
[22:49:05] <zsnes> pinky: sm.put() will only hold the lock if it can't write to the result channel, which again if you look at sm.Put() it creates the result channel right before calling it, buffered with 1 item, so there is basically no way for it to hold that lock forever (ie a deadlock)
[22:49:10] <pinky> it seems like a deadlocked app is the worst thing to debug though
[22:49:29] <pinky> i'd rather see a message "update failed: timed out waiting for write lock"
[22:49:33] <zsnes> same with sm.delete() which are the only write operatoins, it seems.
[22:49:54] <Tv_> pinky: that doesn't help you debug, really. crashing the app tells you the same information.
[22:50:49] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[22:51:09] *** Joins: jla (~jordi@64.225.79.195)
[22:51:11] *** Joins: edrocks (~Ed@user/edrocks)
[22:51:13] <mrig> oh the function is getting optimised out because it is in a package :)
[22:53:27] *** Joins: motheki (~motheki@2600:1700:54a1:39b0:9444:de74:91f9:bb37)
[22:55:40] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[22:56:42] <lungaro> Anyone ever use grpc/protobuf? Includes are killing me. It seems like modules has broken them in subtle ways
[22:58:51] <foobaz> i use protobuf but not grpc, i haven't had any problems with modules
[22:59:46] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:f851:b6e4:f403:23e)
[22:59:47] <lungaro> trying to make import work, and its very confusing because its making me have the .proto files for the import, which kind of defeats the purpose i thought
[22:59:54] <lungaro> seems like i'd be able to import from a go package
[23:02:03] <lungaro> and then it wont let me do relative imports like "../../" -- fun times
[23:03:43] <lungaro> whatever I get working throws a runtime error with "panic: proto: file "api.proto" is already registered "
[23:03:44] <lungaro> sigh
[23:05:17] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[23:06:23] <foobaz> would it help if you gave each file a unique name? i have foo.proto, bar.proto, etc.
[23:06:57] <lungaro> but they are from different packages, it's so weird for it to scope that way
[23:07:07] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[23:07:10] <lungaro> but i guess I could? i mean its just not making any sense
[23:08:29] <foobaz> it would be weird, but it can't hurt to try
[23:11:58] *** Quits: motheki (~motheki@2600:1700:54a1:39b0:9444:de74:91f9:bb37) (Quit: motheki)
[23:12:09] <lungaro> it seems like its just a issue with relative paths to .proto files
[23:12:24] <lungaro> but renaming would fix that too
[23:13:11] <fizzie> There's definitely that thing where you want the paths to the proto files you pass to protoc be "absolute". I kind of forget the details.
[23:13:51] <fizzie> (Maybe I'm thinking of the C++ code generation though?)
[23:15:09] <fizzie> Yeah, I think I was, for Go I've not had any problems after setting `option go_package ...` to whatever the designated import path of the generated code is.
[23:15:22] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[23:16:39] <fizzie> Oh, maybe I _was_ thinking of Go after all, specifically the thing where it registers descriptors based on the file path.
[23:17:32] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[23:17:44] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba)
[23:22:38] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b0ad:1db1:d2df:40ba) (Ping timeout: 252 seconds)
[23:24:49] *** Quits: averell (~averell@user/averell) (Quit: .)
[23:25:51] <Tv_> fizzie: also protos importing protos needs you to "do it right"
[23:26:32] <Tv_> pre-modules i believe i told protobuf to look in $GOPATH/src
[23:26:50] <Tv_> post-modules.. i don't think you can use it as-is and have things just magically work across modules
[23:28:06] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[23:28:31] <Tv_> there's also https://github.com/dsymonds/gotoc (however abandonware it is)
[23:29:04] *** Joins: Echoz (~chris@user/echoz)
[23:29:45] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:32:36] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[23:32:45] *** Joins: jla (~jordi@64.225.79.195)
[23:36:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:37:08] <fizzie> Oh, yes, I guess that would be the case. I don't think I've tried to import protos *in* protos cross-module, just used them as-is.
[23:37:21] <fizzie> Google's monorepo bias showing through, I guess. ;)
[23:40:39] *** Joins: zkanda9 (~zkanda@box.makean.art)
[23:41:25] *** Quits: zkanda (~zkanda@box.makean.art) (Ping timeout: 240 seconds)
[23:41:25] *** zkanda9 is now known as zkanda
[23:42:56] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[23:42:56] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[23:42:56] *** Joins: tane (~tane@user/tane)
[23:47:22] <pinky> if you range over a map returned from a function, when does the function exit? immediatley I assume?
[23:48:09] <ikke> yes, you either return a copy of the data, or a pointer
[23:48:17] <ikke> It's not streamed
[23:48:28] <pinky> thanks :)
[23:50:52] *** Parts: rh (~rh@185.105.180.119) ()
[23:51:56] *** Joins: averell (~averell@user/averell)
[23:55:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[23:56:03] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[23:59:05] *** Joins: neurocyte0132889 (~neurocyte@45.93.108.168)
[23:59:05] *** Quits: neurocyte0132889 (~neurocyte@45.93.108.168) (Changing host)
[23:59:05] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
