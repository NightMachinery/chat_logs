[00:00:48] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[00:03:56] *** Quits: s3ntin3l (s3ntin3l@gateway/vpn/protonvpn/s3ntin3l) (Quit: Leaving)
[00:04:49] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[00:04:58] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[00:05:06] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 260 seconds)
[00:05:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[00:13:14] *** Joins: tdidrfyls^ (~tdidrfyls@68.101.54.227)
[00:13:19] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 252 seconds)
[00:19:08] *** Joins: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net)
[00:19:55] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[00:22:12] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[00:22:51] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[00:31:53] *** Joins: cdown (~cdown@194.207.141.245)
[00:34:25] *** Joins: joako (~joako@104-12-70-21.lightspeed.miamfl.sbcglobal.net)
[00:34:47] <joako> How do I force checkout a file? Currently it says does not match any file(s) known to git
[00:35:07] <joako> But problem is right before it says your local changes to the following files would be overwritten by merge
[00:35:44] <ikke> what does git status say?
[00:36:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[00:36:16] *** Joins: Vonter (~Vonter@user/vonter)
[00:36:16] <joako> File is modified
[00:36:36] <joako> But normally when this happens I git checkout path/to/file and it pulls the file out of the repo to ignore the conflict
[00:36:38] <ikke> is it staged or not?
[00:36:43] <joako> No not staged
[00:36:54] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[00:37:03] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[00:37:08] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:38:17] <ikke> did this file had conflicts?
[00:38:41] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:38:43] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[00:39:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[00:39:22] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[00:39:24] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[00:39:27] <joako> I figured it out I was in the wrong directory. But yes file has conflicts which is always a major pain to resolve on git
[00:39:48] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[00:39:55] <joako> There needs to be some sort of --force-checkout option without having to do nasty things like reset head hard
[00:41:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:41:36] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[00:43:29] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[00:45:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[00:46:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:47:06] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[00:48:51] *** Quits: durham (~durham@2620:10d:c090:400::5:aecf) (Ping timeout: 268 seconds)
[00:49:12] *** Joins: durham (~durham@2620:10d:c090:400::5:d88d)
[00:49:37] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[00:49:48] *** Joins: vysn (~vysn@user/vysn)
[00:50:41] *** Quits: Strom (strom@fedora/strom) ()
[00:50:43] *** Joins: ARoxdale (~ARoxdale@84.203.25.150)
[00:50:53] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[00:51:06] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[00:52:19] *** Joins: Strom (strom@fedora/strom)
[00:55:16] *** Quits: ferz (~ferz@93-39-142-235.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[00:56:13] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:04:59] *** Joins: uni_fedora01 (~sk@p200300fe5f010f00158c320d1c1f1526.dip0.t-ipconnect.de)
[01:06:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[01:10:01] *** Joins: ferz (~ferz@93-39-142-235.ip76.fastwebnet.it)
[01:13:26] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[01:15:28] *** Quits: joako (~joako@104-12-70-21.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[01:20:47] *** Joins: Adoi (~Adoi@user/adoi)
[01:22:55] *** Joins: Vonter (~Vonter@user/vonter)
[01:30:51] *** Joins: junktext (~junktext@109.201.152.173)
[01:32:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:33:02] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:33:17] *** Joins: Vonter_ (~Vonter@user/vonter)
[01:33:28] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:34:07] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[01:34:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:34:29] *** Quits: computeiro (~Wender@189.37.67.248) (Remote host closed the connection)
[01:34:36] *** Quits: madewokherd (~urk@comcast.codeweavers.com) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[01:36:14] *** Lord_of_Life_ is now known as Lord_of_Life
[01:37:24] <braxas> I'm trying to set url insteadOf via a config file that I pass as GIT_CONFIG
[01:37:29] <braxas> but it is not working: https://bpa.st/DHLQ
[01:37:48] <braxas> I can take that exact line and add it to ~/.gitconfig and it will work file
[01:37:51] <braxas> fine*
[01:38:25] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Remote host closed the connection)
[01:38:37] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[01:39:01] <braxas> makes no sense :/
[01:40:51] <braxas> okay nvm, it does make sense
[01:41:13] *** Quits: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:42:48] <j416> braxas: what did you learn?
[01:43:04] <braxas> that GIT_CONFIG is only being used by { git config; }
[01:43:11] <braxas> I will hack it with XDG_...
[01:43:25] <j416> huh. til.
[01:43:34] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 260 seconds)
[01:43:44] <ikke> braxas: git -c config.name=value ..
[01:43:55] <braxas> but I want it via an environment variable
[01:44:00] <braxas> because I want poetry to use it
[01:44:30] <j416> --config-env ?
[01:44:52] *** Joins: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de)
[01:45:52] <braxas> j416: problem is, I have in pyproject.toml a ssh git url for a dependency, but I want to change this to https:// git url in CI  pipeline. poetry install is what actually calls git.
[01:46:02] <braxas> so I can't give any flags to git AFAIK
[01:46:28] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[01:47:54] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:47:54] <j416> GIT_CONFIG_GLOBAL, GIT_CONFIG_SYSTEM? from man git
[01:47:54] <gitinfo> the git manpage is available at https://gitirc.eu/git.html
[01:48:04] *** Joins: canton7 (~canton7@about/csharp/canton7)
[01:48:16] <braxas> j416: strange, my man git does not have that
[01:48:16] <gitinfo> j416: the git manpage is available at https://gitirc.eu/git.html
[01:48:25] <j416> man git-config also mentions them
[01:48:25] <gitinfo> the git-config manpage is available at https://gitirc.eu/git-config.html
[01:48:42] <braxas> my git-config man only mentions GIT_CONFIG ðŸ¤”
[01:48:49] <braxas> off, anyway web one is good
[01:48:52] <ikke> man git
[01:48:52] <gitinfo> the git manpage is available at https://gitirc.eu/git.html
[01:49:22] <tang^> !lol
[01:49:22] <gitinfo> A nifty view of branches, tags, and other refs: git log --oneline --graph --decorate --all
[01:49:23] <j416> braxas: this seems fairly new
[01:49:28] <braxas> this is my man git: https://termbin.com/ko2il
[01:49:28] <gitinfo> the git manpage is available at https://gitirc.eu/git.html
[01:49:29] *** Quits: humanface (~humanface@20014C4E1C4BA700984D3AEF74A3EB63.dsl.pool.telekom.hu) (Quit: Client closed)
[01:49:57] <j416> introduced in 2.32.0 (just a couple months back)
[01:50:01] <braxas> anyway I think a better option is to just run git config and use that to set it in CI pipeline
[01:50:11] <braxas> j416: I see, thanks for the info
[01:51:48] <j416> seems like a hassle indeed to override the paths
[01:52:47] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) ()
[01:52:53] <j416> or, well, use the right url to start with if possible?
[01:53:00] <j416> or go with ssh..
[01:53:12] * j416 captain obvious
[01:58:22] <braxas> j416: We are using azure devops, and it is quite the pain with this
[01:58:41] <j416> sounds like it. :/
[02:00:39] *** Joins: ZacSharp65 (~ZacSharp@user/zacsharp)
[02:01:56] <anddam> can I have a default remote and merge for branch different from push? i.e. when HEAD -> master I want "pull upstream" to fetch and merge from upstream, but push"
[02:02:03] <anddam> can I have a default remote and merge for branch different from push? i.e. when HEAD -> master I want "pull upstream" to fetch and merge from upstream, but "push" should target origin
[02:02:17] <anddam> damn, almost wrote the whole line before fat-fingeringâ€¦
[02:02:52] <tang^> you can have different remotes for push and fetch, yes
[02:03:06] <tang^> or rather, different endpoints for push and fetch on a remote
[02:03:41] *** Quits: tdidrfyls^ (~tdidrfyls@68.101.54.227) (Ping timeout: 268 seconds)
[02:03:47] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[02:04:10] *** Quits: ZacSharp (~ZacSharp@user/zacsharp) (Ping timeout: 256 seconds)
[02:04:10] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[02:04:14] <anddam> are those assigned using branch command?
[02:04:29] <anddam> just as starting point for searching
[02:04:42] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[02:04:58] <tang^> yeah
[02:05:01] <tang^> man branch
[02:05:05] <tang^> bah
[02:05:07] <tang^> man git-branch
[02:05:08] <gitinfo> the git-branch manpage is available at https://gitirc.eu/git-branch.html
[02:05:31] <tang^> err, no
[02:05:40] <tang^> that's managed on man git-remote
[02:05:40] <gitinfo> the git-remote manpage is available at https://gitirc.eu/git-remote.html
[02:06:11] <Ram-Z> Isn't this done via `git config branch.<branch>.pushRemote` ?
[02:06:32] <Ram-Z> (although they may be an option in `git-branch` too)
[02:07:36] <anddam> tang^: but with remote I can set-url for the remote, not for a single branch
[02:07:57] <tang^> yeah, I'm only familiar with the remote level
[02:08:32] <tang^> git-branch does mention branch.*.merge but doesn't look like it's configurable outside of a git-config call
[02:09:19] <anddam> in remote show I see I have "master pushes to master" in "Local ref configured for 'git push':" in both origin and upstream
[02:09:58] <anddam> while in config I have   branch.master.merge=refs/heads/master
[02:10:20] <another|> not sure if setting different repos for the same remote won't lead to problems
[02:10:53] <another|> if that's what you're doing
[02:11:31] <anddam> I am pulling from a repo where I do not have writing access, and pushing onto my own fork
[02:11:54] <anddam> hence the request to pull (or fetch and merge) from upstream, then push onto origin
[02:12:11] *** Joins: madewokherd (~urk@65-128-179-49.mpls.qwest.net)
[02:12:30] <anddam> I can obviusly do that specifying the remote, I was just wondering if this could set as default behavior
[02:12:40] <anddam> a bit of git-mnastic
[02:13:24] <Ram-Z> man git-config
[02:13:24] <gitinfo> the git-config manpage is available at https://gitirc.eu/git-config.html
[02:13:33] <another|> remote.pushDefault
[02:13:44] <Ram-Z> anddam: search for "pushRemote" in git-config.
[02:13:55] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:13:55] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 260 seconds)
[02:14:21] <Ram-Z> Or pushDefault indeed.
[02:14:47] <Ram-Z> Depending on wether you want to set that up for all branches or per branch.
[02:18:14] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[02:20:22] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 252 seconds)
[02:21:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:24:54] *** Quits: Strom (strom@fedora/strom) ()
[02:26:29] *** Joins: Strom (strom@fedora/strom)
[02:27:03] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[02:28:59] *** Quits: TheJollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[02:30:27] *** Joins: TheJollyRoger (~JollyRoge@user/thejollyroger)
[02:31:04] *** Quits: cweiss (~cweiss@50.53.188.115) (Quit: The Lounge - https://thelounge.chat)
[02:31:32] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[02:33:23] *** Joins: natrys (~natrys@user/natrys)
[02:34:31] *** Joins: dhch3 (~dhch@185.213.154.168)
[02:34:55] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 268 seconds)
[02:34:55] *** dhch3 is now known as dhch
[02:35:32] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[02:35:43] *** Joins: ZestOfBeans (zestofbean@user/zestofbeans)
[02:38:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:38:58] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[02:39:55] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[02:42:11] <nvmd> is there a bisect-most-friendly git workflow?
[02:42:36] <anddam> per branch, thanks
[02:43:36] <anddam> can I rebase from root to master, squashing all commits into one and creating a new root at the same time?
[02:44:14] <anddam> I mean something like   rebase --root master --onto master
[02:44:20] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:3475:50b1:8fcd:e401)
[02:44:29] <anddam> oh I just lacked the right --onto exclusion, --onto master^
[02:44:42] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 260 seconds)
[02:45:15] *** Quits: ZestOfBeans (zestofbean@user/zestofbeans) ()
[02:45:56] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[02:47:22] <anddam> no, that results in unchanged history
[02:47:39] <anddam> I figure my question is more appropriately: can I make a specific commit a new root?
[02:50:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 252 seconds)
[02:57:07] <ZacSharp65> `git checkout --orphan <newBranch> <oldCommit>` and then `git commit`
[03:00:42] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[03:00:42] *** Quits: durham (~durham@2620:10d:c090:400::5:d88d) (Read error: Connection reset by peer)
[03:01:12] *** Quits: ZacSharp65 (~ZacSharp@user/zacsharp) (Quit: ZacSharp65)
[03:01:26] *** Joins: durham (~durham@2620:10d:c090:400::5:d88d)
[03:01:37] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[03:03:16] <anddam> unnecessary ragequit
[03:03:23] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:09:15] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[03:11:19] *** Joins: keypusher (keypusher@user/keypusher)
[03:13:06] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[03:18:25] *** Quits: Guest67 (~Guest67@168.235.181.114) (Quit: Client closed)
[03:33:58] *** Joins: pizdets_ (~pizdets@183.182.110.72)
[03:34:12] *** Quits: pizdets (~pizdets@183.182.111.134) (Ping timeout: 265 seconds)
[03:39:47] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:40:56] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[03:41:21] *** Joins: pinny (~pinny@121-200-5-98.79c805.syd.nbn.aussiebb.net)
[03:51:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:8da7:9e46:7789:3eda)
[03:51:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:8da7:9e46:7789:3eda) (Changing host)
[03:51:33] *** Joins: skapata (~Skapata@user/skapata)
[03:57:33] *** Quits: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net) (Quit: Lost terminal)
[03:59:27] *** Quits: jellycode (~jellycode@192.150.10.211) (Quit: Client closed)
[04:00:41] *** Joins: retroid_ (~retro@176.255.22.194)
[04:01:15] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[04:01:37] *** Quits: retro_ (~retro@176.255.22.194) (Ping timeout: 252 seconds)
[04:02:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:02:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:03:13] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[04:03:41] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[04:04:16] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[04:08:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:11:05] *** Joins: tdidrfyls^ (~tdidrfyls@68.101.54.227)
[04:11:20] *** Joins: Lunatrius` (~Lunatrius@77.38.92.228)
[04:11:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:11:44] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 268 seconds)
[04:11:44] *** Lunatrius` is now known as Lunatrius
[04:18:30] *** Joins: ferdna (~ferdna@user/ferdna)
[04:21:08] *** Joins: jaggz (~jaggz@user/jaggz)
[04:21:23] <jaggz> anyone know if I can overwrite a file (image.png) in my repo on the web?
[04:21:26] <jaggz> on github
[04:22:12] <jaggz> just want to update a snapshot in a repo of mine, and dragging it from my snapshot program's.. well.. I guess it's not THAT much easier than saving it to my repo locally... but still
[04:24:14] <igemnace> jaggz: this channel is more about git, the program. perhaps there's someone to pipe up, but might also be better to find a support channel for github specifically
[04:28:15] *** Joins: Xatenev (~xatenev@2a02:8108:963f:9cb8:3c67:d619:2842:dd43)
[04:28:16] *** Quits: Xatenev (~xatenev@2a02:8108:963f:9cb8:3c67:d619:2842:dd43) (Changing host)
[04:28:16] *** Joins: Xatenev (~xatenev@user/xatenev)
[04:28:40] <jaggz> weird.. the image isn't even being updated.  my local repo shows it updated.  github shows it updated a couple minutes ago.. but it's showing the old image
[04:28:46] <jaggz> https://github.com/jaggzh/attic-fan-thermostat/blob/master/snapshots/webinterface.png
[04:29:14] *** Parts: Xatenev (~xatenev@user/xatenev) ()
[04:29:41] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[04:31:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[04:33:56] <jaggz> igemnace, oh, there *is* a github channel
[04:35:25] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[04:35:46] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 260 seconds)
[04:36:22] *** Quits: ARoxdale (~ARoxdale@84.203.25.150) (Ping timeout: 252 seconds)
[04:36:36] *** Quits: tdidrfyls^ (~tdidrfyls@68.101.54.227) (Remote host closed the connection)
[04:37:14] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 268 seconds)
[04:41:01] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[04:42:47] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[04:42:52] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[04:48:39] <waterkip> tang^: you get set your upstream with `git branch --set-upstream-to=remote/branch' or even a local branch if you fancy that
[04:48:47] *** Joins: Heeeeelp (~Heeeeelp@173.231.114.74)
[04:51:04] *** ephemer0l is now known as GeneralDiscourse
[04:52:12] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[04:52:21] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[04:55:41] *** Quits: arkho (~ccc@dynamic-acs-24-112-153-241.zoominternet.net) (Remote host closed the connection)
[05:05:33] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[05:07:56] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:21:35] *** Quits: pinny (~pinny@121-200-5-98.79c805.syd.nbn.aussiebb.net) (Quit: Client closed)
[05:23:53] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:26:45] *** Joins: pinny (~pinny@121-200-5-98.79c805.syd.nbn.aussiebb.net)
[05:28:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[05:30:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:36:01] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[05:36:17] *** Quits: xx (~xx@user/xx) (Ping timeout: 245 seconds)
[05:36:25] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[05:38:36] *** Quits: Heeeeelp (~Heeeeelp@173.231.114.74) (Quit: Client closed)
[05:41:03] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[05:41:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[05:47:54] *** Joins: cweiss (~cweiss@50.53.188.115)
[05:54:50] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[05:56:11] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[06:00:50] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (Ping timeout: 260 seconds)
[06:00:53] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 268 seconds)
[06:07:26] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[06:09:34] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[06:10:44] *** Parts: Guest4530 (~bluepenqu@2001:470:69fc:105::829) ()
[06:11:34] *** Joins: keypusher (keypusher@user/keypusher)
[06:14:21] *** Joins: jazzy (~jaziz@2600:380:847e:4826:65ec:5dee:21ac:a416)
[06:14:53] *** Joins: jazzy2 (~jaziz@2600:380:847e:4826:ec68:9d70:e078:696)
[06:16:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[06:19:07] *** Quits: jazzy (~jaziz@2600:380:847e:4826:65ec:5dee:21ac:a416) (Ping timeout: 252 seconds)
[06:31:32] *** Joins: roadie (~user@ip5f5be062.dynamic.kabel-deutschland.de)
[06:35:34] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[06:35:37] *** Quits: durham (~durham@2620:10d:c090:400::5:d88d) (Read error: Connection reset by peer)
[06:36:09] *** Joins: durham (~durham@2620:10d:c090:400::5:d88d)
[06:39:19] *** Quits: roadie (~user@ip5f5be062.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[06:49:57] *** Quits: dviola (~diego@user/dviola) (Ping timeout: 265 seconds)
[06:52:40] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:54:50] *** Quits: pinny (~pinny@121-200-5-98.79c805.syd.nbn.aussiebb.net) (Quit: Client closed)
[06:57:50] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[06:58:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[06:59:24] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:01:04] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 265 seconds)
[07:04:38] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 260 seconds)
[07:05:27] *** Quits: subopt (~subopt@2603-8081-2302-459a-c861-847f-8d37-9e0b.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:07:50] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[07:09:04] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Ping timeout (120 seconds))
[07:14:56] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907)
[07:18:06] *** Joins: gnoo (~gnoo@user/gnoo)
[07:19:15] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:27:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[07:28:26] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:29:23] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:30:32] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[07:31:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:31:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:34:39] *** Joins: dviola (~diego@179.235.12.99)
[07:40:38] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Ping timeout: 252 seconds)
[07:41:34] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[07:42:40] *** Joins: pinny (~pinny@2001:df2:7700:e0fe::8ae)
[07:46:11] *** Joins: shored1 (~shored@user/shored)
[07:46:20] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[07:46:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:46:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:47:10] *** Quits: shored (~shored@user/shored) (Ping timeout: 240 seconds)
[07:48:35] *** Joins: txtsd (~txtsd@user/txtsd)
[07:49:30] *** Quits: warthog9 (warthog9@proxy.monkeyblade.net) (Remote host closed the connection)
[07:50:50] *** Quits: durham (~durham@2620:10d:c090:400::5:d88d) (Ping timeout: 260 seconds)
[07:54:04] *** Joins: warthog9 (warthog9@proxy.monkeyblade.net)
[07:54:17] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Read error: Connection reset by peer)
[07:54:36] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[07:55:30] *** Quits: dermoth (~dermoth@user/dermoth) (Ping timeout: 260 seconds)
[07:56:47] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[08:04:26] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907) (Ping timeout: 268 seconds)
[08:06:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:07:50] *** Joins: dermoth (~dermoth@user/dermoth)
[08:09:33] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:11:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[08:17:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:18:22] *** Quits: codebam (~codebam@user/codebam) (Quit: ZNC 1.8.2 - https://znc.in)
[08:19:17] *** Joins: codebam (~codebam@user/codebam)
[08:22:22] *** Joins: ttree_ (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:24:39] *** Joins: fdan (~fdan@192.146.154.3)
[08:24:47] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 268 seconds)
[08:25:22] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 260 seconds)
[08:25:24] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[08:25:51] *** Quits: codebam (~codebam@user/codebam) (Quit: ZNC 1.8.2 - https://znc.in)
[08:26:31] *** Joins: codebam (~codebam@user/codebam)
[08:27:36] *** Joins: saroy (~Sandipan@45.249.73.235)
[08:27:59] *** Quits: codebam (~codebam@user/codebam) (Client Quit)
[08:28:24] *** Joins: codebam (~codebam@user/codebam)
[08:30:46] *** Quits: ttree_ (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Quit: Leaving)
[08:31:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:34:55] *** Quits: junktext (~junktext@109.201.152.173) (Ping timeout: 252 seconds)
[08:36:31] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[08:42:32] *** Joins: teut (~teut@122.162.88.202)
[08:42:37] <teut> Uploaded file: https://uploads.kiwiirc.com/files/0e314daee36b5f5faf7111d20289b276/image.png
[08:43:44] <teut> if I rebase the  feature-added branch and it has conflicts with the commits , then  for each commit in master after divergence I ll ve to resolve the conflict right?
[08:44:30] <teut> and each of the commit will be modified with the conflict resolution
[08:45:49] <teut> what I had done was checked out  a commit  HEAD~4 or so
[08:46:16] *** Quits: mackerman (quassel@destruia.xyz) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:46:47] <teut> I modified some code there in a file,   now I wanted to force that code to follow all commits from there  but those changes were to only a single file
[08:47:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:48:36] *** Parts: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[08:52:21] <teut> my rebase completed but I wanted  that file where I made changes to exist in all commits in master from that point
[08:53:10] <teut> so all changes from the next commit after divergence point on master should be overwritten
[08:53:43] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[08:53:59] <teut> the feature-added is the branch where the modified  actual version as I want exists
[08:55:10] <teut> is it confusing?
[08:55:37] *** Quits: ferz (~ferz@93-39-142-235.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[08:59:59] <teut> the commit on feature branch didnt get fully added onto master  , instead only the changes that were made on that divergence commit  got reflected on master , rest of code which was changed in ahead of divergence on master overwrote the code
[09:00:07] <teut> is this what happens in rebase?
[09:02:01] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 252 seconds)
[09:03:18] *** Joins: mackerman (~quassel@destruia.xyz)
[09:06:01] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[09:06:18] *** Quits: dviola (~diego@179.235.12.99) (Changing host)
[09:06:18] *** Joins: dviola (~diego@user/dviola)
[09:07:50] *** Joins: lgc (~lgc@user/lgc)
[09:07:52] *** Quits: ecs (ecs@user/ecs) (Remote host closed the connection)
[09:09:39] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[09:12:36] *** Quits: Vonter_ (~Vonter@user/vonter) (Read error: Connection reset by peer)
[09:12:47] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:13:03] *** Joins: Vonter (~Vonter@user/vonter)
[09:14:42] *** Joins: vishal (~vishal@fedora/vishal)
[09:16:40] <squirrel> i read this three times and still don't understand it all, but. when you rebase, all commits since the divergence point will be new. and if there's a conflict, after you resolve it, the rebase might ask you to resolve more conflicts or it can proceed without them.
[09:17:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:18:29] <teut> oh in  simplifying
[09:18:37] <teut> ok simplifying *
[09:19:03] <teut> thats now clear
[09:19:37] <teut> now the thing is  the   feature branch has a single commit  and it has a file f1 where I made changes on feature
[09:19:58] <teut> master also modified the file f1   along with many others
[09:20:18] <teut> I want that master to reject all changed made to that file  f1
[09:20:25] <teut> after divergence point
[09:21:15] <teut> I want that master should have  f1.txt  exactly as  it looks on the feature
[09:21:15] *** Joins: ecs (ecs@user/ecs)
[09:21:28] <teut> does that makes sense?
[09:23:46] <teut> or   how to move the divergence point one step further?
[09:23:48] <squirrel> hm i see, yes, perfect sense. i'm not sure how to do this automatically. if it is not a lot of commits, i would simply do a manual interactive rebase and do it all by hand. others may have better answers
[09:24:47] <teut> Uploaded file: https://uploads.kiwiirc.com/files/4e640d0d7cceddbf8338382a9b91bcbc/image.png
[09:25:12] <teut> yeah I also do it by hand by copying the text to a notepad file
[09:25:27] <teut> but I though nice oppurtunity to learn git
[09:25:51] <teut> moving the point there must cause conflicts
[09:26:23] <teut> and I will want to reject changes that commits on master ahead made to the file
[09:26:59] <ikke> If you get a merge conflict, you can do git checkout --theirs <file> to get the version of the feature branch
[09:27:09] <teut> rebasing only allowed me to add changes that I added to the  divergence point and then commited on a feature branch
[09:27:21] <teut> but the commits on master afterwards overwrote it
[09:27:40] <ikke> yes, rebasing merges changes as well
[09:27:42] <teut> merge conflict in what case?
[09:28:07] <ikke> when you would merge feature into master and it resulted in merge conflicts in that file
[09:28:51] <teut> problem is  rebasing will reflect chnges that I made to HEAD~4  on master  . On rebasing the changes I made and commited to feature will propogate to the commits on master
[09:29:35] <teut> but whatever code has been modified in the commits on master ahead of divergence, that will overwrite the unchanged code that exissts on feature
[09:29:49] <teut> I resolved the merge conflicts
[09:31:06] <ikke> yes, the assumption of git is that you want changes from both sides, git itself will never just discard changes
[09:31:14] <teut> problem is  I want Divergence+1, Divergence+2   commits  to reject the modifications that I made to f1.txt
[09:31:19] <squirrel> i would do an interactive rebase of HEAD~4 and just remove chages to the file since the commit that fixes it
[09:31:24] <teut> "on master"
[09:31:57] <teut> its just 4 lines of code, ok I ll just copy paste it
[09:31:58] *** Quits: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc) (Changing host)
[09:31:58] *** Joins: mjorgensen (mjorgensen@sourcehut/users/mjorgensen)
[09:32:15] <ikke> sounds like you and someone else are 'fighting' over some change and overwrite eachothers changes
[09:32:32] <teut> no I only made it
[09:32:42] <teut> there was some css which wasnt working
[09:33:13] <teut> I modified it in few commits didnt work, asked on #css they gave a solution which  requires  modification in code on HEAD~1
[09:33:26] *** Joins: Vonter_ (~Vonter@user/vonter)
[09:33:31] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[09:33:51] <teut> I switched to that commit , made changes  and now I wanted the f1.txt to show up exact from HEAD~1 in all further commits
[09:34:06] <teut> so I created a feature branch  and added that commit on to that
[09:34:20] <teut> I rebased got few conflicts fixed them
[09:34:53] <teut> but the Divergence+1, Divergence+2 modified some other parts of the code in that f1.txt which again breaks it
[09:35:25] <teut> HEAD~4  I meant there up
[09:36:06] <ikke> you are referring to commits on master, not on your feature branch?
[09:39:25] <teut> the scenario is you are on master , and you want to checkedout  HEAD~4  ,   ok?
[09:39:40] <teut> I am starting clean again
[09:39:54] <teut> you checked-out *
[09:40:25] <teut> once you did that you made some changes to f1.txt there on HEAD~4
[09:41:29] <teut> now you want to save it. How you do it afaik is   git branch -b "added-feature"    ; git commit -a -m "fixed something big"
[09:41:46] <teut> so you get my feature branch
[09:42:31] <squirrel> this is an absolute overkill for the scenario but answers this long are bound to be good stuff https://stackoverflow.com/questions/22270938/git-filter-branch-discard-the-changes-to-a-set-of-files-in-a-range-of-commits
[09:43:10] <teut> filter-branch  , thats dangerous someone told
[09:43:33] <squirrel> yeah
[09:44:49] <teut> I still dont know if ikke understood what I m upto
[09:44:56] <teut> so let me comlplete that
[09:45:13] <teut> ikke now  commits on master  ie  HEAD,  HEAD~1, HEAD~2, HEAD~3  modified  the file f1.txt
[09:45:59] <teut> so after conflict resolution too  on rebase    f1.txt on  feature branch  would not be  as in HEAD, HEAD~1, 2 , 3
[09:46:31] <ikke> Maybe provide info about your !situation, that would make things more concrete
[09:46:31] <gitinfo> Please post the url returned by `git log -n 20 --all --graph --format="%h %p %d %s" | curl -F text=@- https://upaste.de/` to give us an idea about what your situation is (increase the -n argument if your problem is more complex than 20 commits can explain)
[09:47:29] <teut> Uploaded file: https://uploads.kiwiirc.com/files/fe778125084d5b9b1a0d456278937d55/pasted.txt
[09:48:00] <teut> this is reflog  ,     about that , does curl works on windows?
[09:48:21] <squirrel> it does
[09:48:44] <teut> Uploaded file: https://uploads.kiwiirc.com/files/92cfe932d6506c592a353d86efb64110/pasted.txt
[09:49:07] <teut> only command till before pipe worked
[09:50:12] <teut> squirrel but when you perform the rebase, doesnt the commit on feature gets cheerry picked?
[09:50:46] <teut> so if thats the supreme commit at the head now then  why are its contents  changed by commits on master branch?
[09:50:58] <ikke> curl is an alias for invoke-webrequest in powershell
[09:51:10] <ikke> in git bash, it's the actual curl binary
[09:51:29] <teut> Uploaded file: https://uploads.kiwiirc.com/files/2483893a676b1304fc8ae1fc2f835959/pasted.txt
[09:51:51] <teut> nope it didnt work due to something
[09:52:51] <jinsun> try curl.exe
[09:53:02] <jinsun> windows 10 has one built-in
[09:53:10] <ikke> it does not matter anyway
[09:53:13] *** Joins: durham (~durham@163.114.132.7)
[09:53:17] <teut> but I already gave you the graph
[09:53:20] <teut> and reflog
[09:54:17] <teut> oh I can also do git  checkout commitID   filepath   and then create a new commit
[09:54:30] <teut> I was told this few days before here
[09:54:39] <squirrel> teut: in case i can get away with it, i prefer dumb ways. so i would just do `git checkout master; git rebase -i HEAD~4`, then i would change all to `edit`, then fix the file in the first commit, and then make sure it's not changed in the rest of them
[09:54:40] <teut> what an idiot I have been
[09:54:57] <ikke> yes
[09:55:02] <ikke> that's always possible
[09:55:17] <teut> edit?   is that the  edit  that git rebase interactive provides?
[09:55:23] <teut> I havent used that till now
[09:55:26] <squirrel> yes
[09:56:01] <teut>  and then make sure it's not changed in the rest of them
[09:56:08] <teut> how will you do this part?
[09:57:21] <squirrel> tbh i have a file reset command in my ide
[09:57:28] *** Quits: durham (~durham@163.114.132.7) (Ping timeout: 252 seconds)
[09:58:26] *** Joins: vysn (~vysn@user/vysn)
[09:59:38] *** Quits: squirrel (~sq@62.254.9.25) (Quit: Going offline, see ya! (www.adiirc.com))
[10:07:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[10:08:10] <teut> ok , thanks for the help
[10:08:41] *** Joins: vysn (~vysn@user/vysn)
[10:12:00] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (Quit: WeeChat 3.2)
[10:12:06] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:12:27] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[10:13:33] <teut> Uploaded file: https://uploads.kiwiirc.com/files/f688905209ff2e1eeb9c4686f7064c3c/image.png
[10:14:15] <teut> so how does one travels  on various merged branches?
[10:14:44] <teut> line if I want to see commits on yellow line  or green line
[10:14:56] <teut> currently I m on pink line I think
[10:15:44] <teut> is there a good youtube video on git on goto; , devoxx etc on understanding this part of merging branches or some good docs?
[10:16:54] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[10:17:59] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[10:18:21] <teut> Uploaded file: https://uploads.kiwiirc.com/files/9038897ab9c665714b8f65ae26e205f4/pasted.txt
[10:18:40] <teut> I tried to do this but forgot    the   "git  add "
[10:18:48] <teut> yet it committed, how?
[10:24:05] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907)
[10:24:31] *** Quits: pinny (~pinny@2001:df2:7700:e0fe::8ae) (Ping timeout: 256 seconds)
[10:25:19] *** Joins: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it)
[10:30:25] *** Joins: mexen (uid495612@user/mexen)
[10:34:22] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[10:34:25] *** Joins: Guest17 (~Guest17@c-69-255-2-251.hsd1.md.comcast.net)
[10:35:02] <Guest17> hey all.  I made a shallow clone, and when I go to fetch updates to the branch I cloned, fetch brings in new objects but the remote ref doesn't change
[10:35:10] *** Quits: jimklimov (~jimklimov@165.225.200.83) (Quit: Leaving.)
[10:35:37] <Guest17> or in other words, when I fetch I see objects come in but origin/branch doesn't update
[10:35:55] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[10:42:25] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[10:42:27] <ikke> Guest17: What is the output of git fetch?
[10:42:35] <ikke> It should mention what refs are updated
[10:48:47] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:49:55] *** Joins: alkino (~quassel@user/alkino)
[10:50:09] *** Joins: durham (~durham@163.114.132.7)
[10:54:10] *** Quits: durham (~durham@163.114.132.7) (Ping timeout: 240 seconds)
[10:56:22] *** Quits: txtsd (~txtsd@user/txtsd) (Read error: Connection reset by peer)
[11:02:26] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907) (Ping timeout: 268 seconds)
[11:02:28] *** Quits: hbautista (~hbautista@2806:10a6:e:7681::4) (Ping timeout: 252 seconds)
[11:04:01] *** Joins: palasso (~palasso@user/palasso)
[11:08:49] *** Quits: thiago (~thiago@2601:1c0:4501:635c:366f:a86c:aae3:21e8) (Ping timeout: 268 seconds)
[11:20:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:25:18] *** Parts: sh4 (~sh4@user/sh4) (Leaving)
[11:25:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:34:23] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[11:35:02] *** Joins: rkta_ (~kt@62.113.246.111)
[11:35:04] *** Quits: rkta (~kt@62.113.246.111) (Remote host closed the connection)
[11:35:12] *** rkta_ is now known as rkta
[11:35:48] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:11] *** Joins: sQVe (~sQVe@user/sqve)
[11:39:30] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[11:41:38] *** Joins: jimklimov (~jimklimov@165.225.201.119)
[11:43:16] *** Joins: vaucouleur (~vaucouleu@176.124.42.130)
[11:54:27] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[11:57:56] *** Joins: kenanmarasli (~kenan@185.67.124.177)
[11:58:09] *** Quits: kenanmarasli (~kenan@185.67.124.177) (Changing host)
[11:58:09] *** Joins: kenanmarasli (~kenan@user/kenanmarasli)
[11:59:00] *** Quits: kenanmarasli (~kenan@user/kenanmarasli) (Client Quit)
[11:59:09] *** Joins: kenanmarasli_ (~kenan@185.67.124.177)
[11:59:42] *** kenanmarasli_ is now known as kenanmarasli
[11:59:49] *** Quits: kenanmarasli (~kenan@185.67.124.177) (Changing host)
[11:59:49] *** Joins: kenanmarasli (~kenan@user/kenanmarasli)
[12:01:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:04:19] *** Joins: reset (~reset@user/reset)
[12:09:57] <roxlu> hi, I created a branch, made some changes but now I want to move these changes to a new branch. I haven't comitted my changes yet; can i `stash` my changes, create a new branch and then apply the stash?
[12:10:26] <osse> yes, but you can also do it without stashing
[12:10:33] <osse> git checkout -b newbranch
[12:10:42] <osse> or git branch newbranch; git checkout newbranch
[12:11:33] <roxlu> when I sue `git checkout -b newbranch` it uses the current branch as it's "parent" right?
[12:12:00] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[12:12:05] <ikke> yes
[12:12:17] <roxlu> thanks
[12:12:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[12:18:09] *** Joins: x28girl (~x28girl@181.46.32.25)
[12:19:51] *** Joins: palasso (~palasso@user/palasso)
[12:19:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[12:20:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[12:21:17] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:22:28] *** Joins: Trieste (T@user/pilgrim)
[12:22:33] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[12:23:06] *** Quits: uni_fedora01 (~sk@p200300fe5f010f00158c320d1c1f1526.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:29:23] *** Quits: jimklimov (~jimklimov@165.225.201.119) (Quit: Leaving.)
[12:29:28] *** Joins: Braccio (~Braccio@94-38-25-77.adsl-ull.clienti.tiscali.it)
[12:32:38] *** Joins: ThomasD13 (~thomasd13@DSL01.212.114.255.148.ip-pool.NEFkom.net)
[12:33:06] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[12:34:55] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[12:35:25] *** Quits: rahl (~rahl@102.114.83.106) (Ping timeout: 252 seconds)
[12:37:03] *** Joins: rahl (~rahl@102.114.215.178)
[12:37:11] *** Joins: jimklimov (~jimklimov@165.225.201.119)
[12:37:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 240 seconds)
[12:37:53] *** Joins: average (uid473595@user/average)
[12:40:08] <roxlu> When I have created several branches and some are based upon each other, what happens when I start renaming them? Is that all nicely handled by git internally? e.g. all references to a branch still work? (I assume it does, but just checking)
[12:40:09] *** Joins: xx (~xx@user/xx)
[12:41:40] <ikke> roxlu: It just works. Branches do not really have relations to eachother
[12:41:49] <ikke> (exception are remote tracking branches)
[12:42:00] <roxlu> Ok thanks
[12:44:30] *** Quits: madewokherd (~urk@65-128-179-49.mpls.qwest.net) (Ping timeout: 260 seconds)
[12:47:08] <ThomasD13> Hi, I have a question which is might pretty obvious for git cracks :)
[12:47:17] *** Joins: masber (~masber@213.55.226.77)
[12:47:23] <ThomasD13> When I rebase like "git rebase --onto targetBranch feature~3 feature" it will "move" the last 3 commits of feature ontop on targetBranch
[12:47:32] <ThomasD13> When I checkout feature and do "git rebase --onto targetBranch HEAD~3 HEAD" it will COPY the last 3 commits of feature ontop of targetBranch
[12:47:41] <ThomasD13> Why the difference? I thought HEAD is a reference as well as <branchname> is?
[12:47:53] <ThomasD13> This log demonstrate my case: https://hastebin.com/noqikexuru.md
[12:48:01] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:48:07] <ThomasD13> The first rebase does a MOVE, the second a COPY of these commits
[12:48:44] <ikke> ThomasD13: HEAD is seen as a commit, not a branch in the last argument
[12:49:47] *** Joins: Tobbi_ (~Thunderbi@62.214.69.130)
[12:50:14] <ikke> ThomasD13: You see in the last case, HEAD is detached, it does not point to a branch
[12:50:41] <ThomasD13> Ahhh okay. So whenever I specify a actual commit at rebase, it will COPY and not MOVE?
[12:51:10] <ThomasD13> And HEAD is always seen as actual commit?
[12:51:25] <ikke> ThomasD13: In the sense that there is no branch for git to move along, yes
[12:54:00] <ThomasD13> ahh okay. Because a specific commit could belong to multiple branches? So git does not know how to move if I do not specify a branch name.
[12:54:06] <ThomasD13> makes sense... thanks ikke :)
[12:54:09] *** Joins: humky (~humky@user/humky)
[12:54:28] <ikke> ThomasD13: in general, it always involves copying commits
[12:54:40] <ikke> It just looks like a move because the branch is moved to the rewritten commits
[12:54:55] <ikke> But if you specify a commit, the original branch remains where it was
[12:55:16] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[12:55:30] <ikke> ThomasD13: if you had another branch pointing to the same commit, and rebased the branch, you'll notice it's a copy as well
[13:03:00] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[13:04:45] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[13:06:08] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:06:37] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[13:07:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:08:56] <ThomasD13> ikke, yes, I've noticed that
[13:10:00] <ThomasD13> However, when I reference commits via relativ position of refs, (and there is no other branch which these commits belong too) it seems to move
[13:10:19] <ikke> ThomasD13: It just appears like that
[13:10:29] <ikke> the old commits are still there, just not referenced anymore by branches
[13:10:36] <ikke> (the reflog still points to it, though)
[13:10:43] <ThomasD13> ahhhh okay
[13:10:58] *** Quits: vaucouleur (~vaucouleu@176.124.42.130) (Read error: Connection reset by peer)
[13:11:17] *** Joins: vaucouleur (~vaucouleu@176.124.42.130)
[13:11:23] <ThomasD13> If I rebase a lot like that, is it necessary to clean up this copied commits which are not referenced anymore by branches?
[13:11:29] <ikke> no
[13:11:37] <ThomasD13> ok
[13:11:37] <ikke> git will handle that itself
[13:12:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[13:13:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:13:29] *** Joins: Lunatrius` (~Lunatrius@77.38.92.228)
[13:13:51] *** Quits: jimklimov (~jimklimov@165.225.201.119) (Quit: Leaving.)
[13:14:37] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 268 seconds)
[13:14:37] *** Lunatrius` is now known as Lunatrius
[13:16:46] *** Joins: rsx (~dummy@ppp-188-174-141-82.dynamic.mnet-online.de)
[13:17:35] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 265 seconds)
[13:19:26] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907)
[13:20:28] *** Quits: w0ng (~w0ng@144.48.36.84) (Ping timeout: 260 seconds)
[13:23:20] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[13:27:05] *** Joins: jimklimov (~jimklimov@165.225.201.119)
[13:28:07] *** Joins: jimklimov1 (~jimklimov@95.168.120.48)
[13:30:07] *** Quits: blackcatmaxy (~blackcatm@2001:470:69fc:105::bae5) (Quit: You have been kicked for being idle)
[13:31:10] *** Quits: jimklimov (~jimklimov@165.225.201.119) (Ping timeout: 240 seconds)
[13:31:23] *** Joins: jimklimov2 (~jimklimov@165.225.201.122)
[13:31:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:32:20] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907) (Ping timeout: 260 seconds)
[13:33:07] *** Quits: jimklimov1 (~jimklimov@95.168.120.48) (Ping timeout: 268 seconds)
[13:34:35] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:37:53] *** Quits: jimklimov2 (~jimklimov@165.225.201.122) (Ping timeout: 265 seconds)
[13:39:17] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 268 seconds)
[13:42:18] *** Quits: masber (~masber@213.55.226.77) (Ping timeout: 256 seconds)
[13:42:38] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:43:16] *** Joins: jimklimov (~jimklimov@165.225.26.79)
[13:43:52] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907)
[13:44:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[13:50:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 260 seconds)
[13:53:18] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[13:55:29] *** Joins: node1 (~node1@user/node1)
[13:56:23] *** Joins: realies (~realies@user/realies)
[13:57:15] *** Joins: vaucouleur_ (~vaucouleu@176.124.42.130)
[13:57:47] *** Joins: vaucouleur__ (~vaucouleu@176.124.42.130)
[13:58:22] *** Quits: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[13:59:35] *** Quits: teut (~teut@122.162.88.202) (Quit: Connection closed)
[14:00:36] *** Quits: vaucouleur (~vaucouleu@176.124.42.130) (Ping timeout: 265 seconds)
[14:01:47] *** Joins: vaucouleur (~vaucouleu@176.124.42.130)
[14:02:06] *** Quits: vaucouleur_ (~vaucouleu@176.124.42.130) (Ping timeout: 268 seconds)
[14:03:01] *** Quits: vaucouleur__ (~vaucouleu@176.124.42.130) (Ping timeout: 265 seconds)
[14:03:18] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[14:03:45] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[14:07:31] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[14:08:16] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907) (Ping timeout: 252 seconds)
[14:10:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:10:47] *** Joins: computeiro (~Wender@189.37.64.113)
[14:13:13] *** Quits: jimklimov (~jimklimov@165.225.26.79) (Quit: Leaving.)
[14:14:26] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[14:20:23] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 268 seconds)
[14:21:18] *** Joins: natrys (~natrys@user/natrys)
[14:22:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[14:22:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4)
[14:23:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:24:19] *** Joins: palasso_ (~palasso@user/palasso)
[14:24:42] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 260 seconds)
[14:27:04] *** Quits: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[14:27:13] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[14:29:28] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:30:22] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:30:38] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:37:04] *** Joins: w0ng (~w0ng@103.212.227.181)
[14:43:02] *** Joins: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it)
[14:49:23] *** jazzy2 is now known as jazzy
[14:53:17] *** Quits: roadie (~user@2a02:8108:ec0:1427:414b:ad39:76ad:31b4) (Ping timeout: 268 seconds)
[14:53:28] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:55:28] *** Joins: christall (~christall@24.235.90.74)
[15:00:09] *** Joins: xx (~xx@user/xx)
[15:01:59] *** Quits: ThomasD13 (~thomasd13@DSL01.212.114.255.148.ip-pool.NEFkom.net) (Ping timeout: 265 seconds)
[15:03:24] *** Joins: ARoxdale (~ARoxdale@84.203.25.150)
[15:04:37] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[15:05:22] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 265 seconds)
[15:13:32] *** Joins: OJFord (~OJFord@2a01:4b00:8769:8e00:82e8:6edd:ebc9:eed7)
[15:14:47] *** Joins: roadie (~user@2a02:8108:ec0:1427:80dc:63bc:ed4d:17fa)
[15:15:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:80dc:63bc:ed4d:17fa) (Client Quit)
[15:17:02] *** Quits: realies (~realies@user/realies) (Quit: ~)
[15:17:20] *** Joins: realies (~realies@user/realies)
[15:20:00] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[15:20:02] <OJFord> Hi, I'm having trouble finding a sane way to use the GPG sign option with multiple keys, having the same user/email address. Without specifying a key, git invokes `gpg -bsau 'Name <Email>'`, and gpg then picks the first key that matches that `-u`, even if multiple do, and only tries that. (Compared to not specifying `-u`, where it will try each
[15:20:03] <OJFord> one, allowing you to cancel the first prompt and enter the passphrase for a second key, the one that's inserted.) So I was going to alias `commit = !git commit --gpg-sign="$INSERTED_KEY"` and set the env var on login or something, but it seems aliases no longer override built-in commands, I'm sure that used to work. Any ideas?
[15:23:40] *** Quits: christall (~christall@24.235.90.74) (Ping timeout: 240 seconds)
[15:30:48] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[15:32:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[15:32:14] *** Joins: pulse (~pulse@user/pulse)
[15:38:17] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 250 seconds)
[15:51:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:52:39] *** Joins: thatonelutenist9 (~thatonelu@1442057-v113.1463-static.LXTNKYAA.metronetinc.net)
[15:55:08] *** Quits: palasso_ (~palasso@user/palasso) (Remote host closed the connection)
[15:57:03] *** Quits: seand (~seand@69.54.142.196) (Quit: Leaving)
[15:57:57] *** Joins: leah2 (~leah@vuxu.org)
[15:58:45] <waterkip> i have `c' as an alias for commit, which I than use for all the stuff which require my flavor of commit
[15:59:06] <waterkip> use a different alias would be my solution
[15:59:37] <waterkip> can't you set some kind of config var in your git config to define the gpg key to use?
[15:59:50] <thatonelutenist9> Hello, I've got a hell of a weird one (for me at least). This morning I felt a hankering for some modern crypto, and I use my yubikey as a gpg smart card to sign commits, so I decide to reset and generate an ed25519 key to replace my old rsa one. That transition went basically entirely okay, except for git. Git seems to be producing invalid
[15:59:51] <thatonelutenist9> signatures.
[16:00:33] <thatonelutenist9> `git log` gives me a nice:
[16:00:39] <thatonelutenist9> gpg: Signature made Fri 17 Sep 2021 07:27:02 AM EDT
[16:00:40] <thatonelutenist9> gpg:                using EDDSA key EFC4B0962D6B266BBA27F783557F7C8FC4E8B0B3
[16:00:40] <thatonelutenist9> gpg:                issuer "nathan@mccarty.io"
[16:00:41] <thatonelutenist9> gpg: BAD signature from "Nathan McCarty <nathan@mccarty.io>" [ultimate]
[16:01:01] <waterkip> eg, git config --local set local.key key - and then have use git commit --gpg-sign $(git config get local.key) and you done :)
[16:01:40] <mspe> why not user.signingKey?
[16:02:05] <waterkip> mspe: works for me :)
[16:02:16] <OJFord> Because that won't evaluate an environment variable? I need it to be dynamic, the multiple keys need to all work.
[16:02:21] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[16:02:47] <waterkip> why would you need an env var?
[16:03:02] <waterkip> you want to use it across different projects?
[16:03:14] <thatonelutenist9> I've tried completely blasting out my gpg folder and reimporting the public key and setting the trust back up to ultimate. gpg sigining outside of git works fine. I've tried all possible values of user.signingKey for all my subkeys. `git verify-commit HEAD -v --raw` doesn't give me anything more useful than `BADSIG`.
[16:03:23] <thatonelutenist9> I'm at my wits end here, anyone have any suggestions?
[16:03:34] *** Joins: Wuzzy (~Wuzzy@p5790e1f6.dip0.t-ipconnect.de)
[16:03:35] <OJFord> It doesn't _need_ to be, that was just an approach at making it variable.
[16:03:58] <geirha> thatonelutenist9: you're sure the key hasn't simply expired?
[16:04:03] <thatonelutenist9> yes
[16:04:06] <thatonelutenist9> its set to expire never
[16:07:29] *** Joins: wender (~Wender@189.37.64.113)
[16:08:58] <thatonelutenist9> for further context: i am on nixos and i get this error on both git  2.31.1 and git 2.33.0 and RSA based signatures were working fine with the same system configuration eailrler this morning
[16:09:05] <OJFord> waterkip: Across multiple projects yes, not changing based on the project (it's not like a work & personal key or something like that) but just based on which key is inserted at the time. So I could have an env var (for example) set to the appropriate fingerprint and consume that in git config - you're 'use a different alias' suggestion would work
[16:09:06] <OJFord> sure, but I have such muscle memory for `git commit`, really would rather not do that.
[16:09:28] <OJFord> waterkip: Across multiple projects yes, not changing based on the project (it's not like a work & personal key or something like that) but just based on which key is inserted at the time. So I could have an env var (for example) set to the appropriate fingerprint and consume that in git config - your 'use a different alias' suggestion would work
[16:09:29] <OJFord> sure, but I have such muscle memory for `git commit`, really would rather not do that.
[16:10:05] <OJFord> (oops, sorry, just intended to correct typo.)
[16:10:19] *** Quits: computeiro (~Wender@189.37.64.113) (Ping timeout: 252 seconds)
[16:11:20] *** Joins: Hax0r (~Hax0r@146.251.29.89)
[16:13:00] *** Joins: computeiro (~Wender@189.37.64.113)
[16:13:13] *** Quits: Tobbi_ (~Thunderbi@62.214.69.130) (Quit: Tobbi_)
[16:13:56] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[16:13:59] *** Joins: Tobbi_ (~Thunderbi@212.23.159.130)
[16:14:43] *** Quits: wender (~Wender@189.37.64.113) (Ping timeout: 252 seconds)
[16:19:01] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[16:20:31] *** Joins: jinsun (~quassel@user/jinsun)
[16:22:36] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[16:24:50] *** Joins: realies (~realies@user/realies)
[16:28:02] *** Quits: Hax0r (~Hax0r@146.251.29.89) (Ping timeout: 268 seconds)
[16:37:18] <thatonelutenist9> I've come to the conclusion that i just fucked up moving the key to the yubikey
[16:37:27] <thatonelutenist9> generated a new one and it works fine now
[16:37:30] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:42:48] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[16:44:12] *** Joins: wernerf (~wernerf@p200300d89f362b00598d823d87b2767e.dip0.t-ipconnect.de)
[16:44:31] *** wernerf is now known as wernerfred
[16:44:53] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[16:46:06] *** Joins: realies (~realies@user/realies)
[16:46:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[16:49:22] *** Joins: XV8 (~XV8@2601:5cb:c001:50:358b:c29a:a27e:3647)
[16:57:51] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 268 seconds)
[16:57:53] *** Quits: thatonelutenist9 (~thatonelu@1442057-v113.1463-static.LXTNKYAA.metronetinc.net) (Quit: Client closed)
[17:01:01] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[17:01:15] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Remote host closed the connection)
[17:01:22] *** Joins: christall (~christall@24.235.90.74)
[17:03:14] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:6db6:cc2b:202b:1329)
[17:06:48] *** Joins: Hax0r (~Hax0r@146.251.29.89)
[17:16:32] *** Quits: christall (~christall@24.235.90.74) (Remote host closed the connection)
[17:16:41] *** Joins: christall (~christall@24.235.90.74)
[17:16:52] *** Joins: palasso (~palasso@user/palasso)
[17:17:13] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[17:21:04] *** Quits: Hax0r (~Hax0r@146.251.29.89) (Ping timeout: 268 seconds)
[17:27:10] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[17:33:19] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[17:34:15] <dunc> How can I store git config in the repo for all team members?
[17:34:28] <ikke> you cannot
[17:34:43] <ikke> It would be a security vulnerability
[17:35:52] <dunc> :-S
[17:39:16] <bremner> you can store a script in the repo that they run. Or some hosting services might offer other options
[17:41:24] *** Joins: darkbit (~db@152.32.99.67)
[17:42:10] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[17:43:55] *** Joins: jellycode (~jellycode@192.150.10.211)
[17:44:26] *** Quits: XV8 (~XV8@2601:5cb:c001:50:358b:c29a:a27e:3647) (Ping timeout: 260 seconds)
[17:45:20] <Guest17> is this channel logged?
[17:45:34] <bremner> yes, see /topic
[17:45:45] <Guest17> nm found it
[17:47:03] *** Joins: XV8 (~XV8@2601:5cb:c001:50:358b:c29a:a27e:3647)
[17:48:29] <Guest17> thanks
[17:48:47] <Guest17> I made a shallow clone, and when I go to fetch updates to the branch I cloned, fetch brings in new objects but the remote ref doesn't change.  here is the output of git fetch https://pastebin.com/PG94gpNh
[17:49:49] <waterkip> OJFord: mkay, I don't like to type 'commit', so I do `git c' which does does more than what just a plain commit, less typing more, action ;)
[17:51:12] *** Joins: txtsd (~txtsd@user/txtsd)
[17:52:11] <waterkip> OJFord: I do something like this: https://paste.debian.net/1212123/
[17:52:41] <waterkip> so you can setup config per project or project folder
[17:53:21] <waterkip> which than has custom setup for things I need at that level (e-mail, and other bits and pieces), you could use that for your keys as well
[17:53:46] *** Joins: palasso (~palasso@user/palasso)
[17:53:56] <OJFord> waterkip: Yeah, I'm aware of conditional includes, I just don't think there's a way to make it work for my case. As I said I want to select the key based on which one is inserted, regardless of the current git dir. Multiple keys, all used in every project.
[17:54:05] <waterkip> ok
[17:54:19] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[17:54:29] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[17:55:13] <OJFord> a `git c` alias would also presumably not work for rebasing and merging, thinking about it.
[17:56:32] <OJFord> (well, definitely wouldn't)
[17:57:07] *** Joins: onichomp (~onichomp@2806:264:4404:81b2:704e:1e0c:8984:ef78)
[17:57:08] <waterkip> i think you need to have something that sets the user.signingkey based on the env var
[17:57:19] <waterkip> than it is done for all of the commands
[17:57:49] *** Joins: Tobbi_1 (~Thunderbi@62.214.69.130)
[17:59:41] <OJFord> Oh actually change the config? Didn't think of that for some reason. Don't even need the env var then, I can just `git config --global` instead of setting it. Slightly inelegant/annoying to have the permanent diff in my (itself version controlled) config file, but should work well at least, thanks.
[17:59:55] *** Quits: Tobbi_ (~Thunderbi@212.23.159.130) (Ping timeout: 268 seconds)
[17:59:55] *** Tobbi_1 is now known as Tobbi_
[18:00:08] <waterkip> OJFord: you can also include just an include
[18:00:31] <waterkip> eg include config.gpgkey and only update the config.gpgkey
[18:00:41] <waterkip> keeps your diff sane
[18:01:05] <OJFord> Yes! Nice one. :+1:
[18:08:23] *** Joins: pa (~pah@user/pah)
[18:08:55] <pa> hi folks, noob question: if i have branch A and branch B on top of A, is there any way to keep B up to date automatically when A changes?
[18:09:29] <waterkip> automatichly, no
[18:09:38] <waterkip> unless you automate it yourself
[18:09:42] *** Quits: wernerfred (~wernerf@p200300d89f362b00598d823d87b2767e.dip0.t-ipconnect.de) (Quit: Client closed)
[18:09:55] <pa> waterkip: gotcha, thanks
[18:10:12] <Peng> Merging or rebasing just involves running a couple commands, but that's more than 0
[18:10:20] <ikke> I recall someone having mentioned a tool on the git mailing list that should make these things easier, but I cannot remember how it's called
[18:11:29] <pa> Peng: is there an "automatic" way to rebase B on top of A again? like strip old A content, then rebase on top of new A
[18:12:03] <pa> so far i first interactively remove the content of A from B, then rebase B on top of A
[18:13:10] *** Quits: Guest17 (~Guest17@c-69-255-2-251.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[18:13:32] <ikke> pa: check git rebase --fork-point combined with --onto
[18:13:38] <OJFord> pa: "first interactively remove the content of A from B" is not necessary
[18:14:04] <pa> ikke: thanks, looking!
[18:15:05] <OJFord> ikke: I don't think it's necessary in this case? This is just a straightforward (from on B ) `git rebase A`
[18:15:33] <OJFord> unless A has itself been rebased I suppose
[18:16:19] <ikke> Yeah, if A just gained new commits, a plain rebase suffices
[18:16:41] <ikke> but if A itself has been rebased, then you would need it indeed
[18:17:09] <pa> OJFord: what if A has just been amended?
[18:17:34] <Peng> What do you mean by amended? "git commit --amend"?
[18:17:37] <OJFord> You may or may not have a conflict to resolve
[18:17:43] <pa> Peng: yes
[18:17:51] <pa> no new commits, but modified commits
[18:18:16] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[18:18:25] <Peng> The maintainer of branch B will have an easier life if the maintainer of branch A doesn't rewrite history. :P
[18:19:21] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[18:19:58] <OJFord> Peng: Kind of ironic to suggest A not rewrite history so that B can rewrite history more easily, no? :)
[18:20:17] <Peng> Heh
[18:29:22] <xx> I added gpg key to .git/config and now need to retroactively sign all commits since a particular commit. How?
[18:30:07] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:30:12] <xx> can I do something like `git rebase <hash of last correct commit> --gpg-sign`?
[18:36:01] <OJFord> xx: If you do an interactive rebase (rebase -i) then you can edit the first, or just insert an exec git commit --amend after it; then that one will be newly committed and consequently all the later ones too.
[18:37:14] <OJFord> (That's necessary because with what you propose it will just pick them all unchanged.)
[18:39:31] <xx> I thought it would have worked because I often use `git rebase HEAD~5 --signoff`
[18:39:56] <xx> so thought --gpg-sign would work similarly
[18:40:08] * xx shrugs
[18:40:46] *** Joins: mooz (~none@23.254.112.158)
[18:41:26] *** Joins: junktext (~junktext@109.201.152.167)
[18:41:45] <OJFord> Err.. possibly then, I just assumed to be honest. Try it? Can't hurt.
[18:44:04] <xx> didn't seem to do anything when I tried it
[18:44:16] <xx> I'm trying your suggestion now
[18:45:06] <xx> git rebase -i <hash> -x 'git commit --amend -CHEAD'
[18:46:05] <xx> seems to do what I want, but I really don't know what I'm doing
[18:46:17] <xx> which probably isn't ideal when dealing with gpg...
[18:52:29] *** Joins: Janni (~jan@91.151.74.79)
[18:52:33] <Janni> Hello!
[18:52:57] <Janni> Could anybody tell me how I can display the diff of a range?
[18:53:42] <Janni> `git diff master..` is not what I want since Â« "diff" is about comparing two endpoints, not ranges, and the rangenotations (<commit>..<commit> and <commit>...<commit>) do not mean a range as defined in the "SPECIFYING RANGES" section Â».
[18:54:11] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 268 seconds)
[18:54:14] *** Quits: onichomp (~onichomp@2806:264:4404:81b2:704e:1e0c:8984:ef78) (Read error: Connection reset by peer)
[18:54:24] <Janni> If for instance master has evolved and has commits that are not in my current branch I don't want to see these changes.
[18:54:38] *** Joins: onichomp (~onichomp@2806:264:4404:81b2:704e:1e0c:8984:ef78)
[18:54:41] *** Joins: zebrag (~chris@user/zebrag)
[18:54:48] <Janni> I can do a `git log -p master..`, but I'd like to see it as one diff and not a series of diffs.
[18:54:57] <OJFord> xx: That should work, though you then don't need the `-i`, and can use `--no-edit` as equivalent to `-C HEAD`. Alternatively and perhaps clearer what you're doing (I had to look up `-x`) you can `rebase -i` and just insert the one `exec git commit --amend --no-edit` as the second operation.
[18:55:32] *** Joins: txtsd (~txtsd@user/txtsd)
[18:57:31] *** Joins: xiongxin8802 (~xiongxin@113.116.32.103)
[18:58:26] <ikke> Janni: man git range-diff
[18:58:27] <gitinfo> Janni: the git-range-diff manpage is available at https://gitirc.eu/git-range-diff.html
[18:58:39] <OJFord> Janni: I think the point is that you can't, because it doesn't really make sense? I think the closest you could do would be to compare 'endpoints' and limit the files to the ones you're interested in.
[18:58:44] <OJFord> Oh ok, ignore.
[19:02:22] *** Quits: filePeter (~filePeter@user/filepeter) (Quit: leaving)
[19:03:41] <Janni> ikke: GIT-RANGE-DIFF(1): Finally, the list of matching commits is shown [...]
[19:04:11] <Janni> What I want however is the diff (in some patch format).
[19:06:11] *** Joins: palasso (~palasso@user/palasso)
[19:07:04] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[19:09:39] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:10:40] <Swahili> Q: On Cherry-pick, can we use the branch name as a "cherry-pick" all of? Or I'd rather "merge"? Or is there a better for a use-case where I borrow from a couple branches that are in WIP? Eventually I'll cherry pick from current working branch, or I'd rebase
[19:15:09] *** Joins: jess (~jess@libera/staff/jess)
[19:19:52] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[19:21:08] *** Joins: Guest1794 (~Guest17@168.235.181.114)
[19:22:26] *** Joins: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04)
[19:23:59] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[19:25:51] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 268 seconds)
[19:27:48] *** Quits: kenanmarasli (~kenan@user/kenanmarasli) (Quit: Leaving)
[19:28:58] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[19:29:33] <nedbat> i thought there was a simple way to ask, "is tag X in the  history (perhaps tip) of branch Y"
[19:31:12] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:34:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[19:34:56] <xx> git rebase <hash> --exec 'git commit --amend --no-edit'
[19:35:00] <xx> seems to do what I need
[19:35:13] <xx> hopefully there's nothing totally wrong with that, I am open to suggestions
[19:36:59] *** Joins: thiago (~thiago@2601:1c0:4501:635c:366f:a86c:aae3:21e8)
[19:42:29] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:43:11] *** Quits: vaucouleur (~vaucouleu@176.124.42.130) (Read error: Connection reset by peer)
[19:43:31] *** Quits: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04) (Ping timeout: 268 seconds)
[19:45:12] *** Joins: SuperLag (~akulbe@user/superlag)
[19:47:15] *** Joins: gast0n (~g4570n@user/gast0n)
[19:47:35] <nedbat> how to see if TAGNAME is on the master/main/default branch:  git branch -a --format='%(refname)' --contains TAGNAME | grep -q $(git symbolic-ref refs/remotes/origin/HEAD)
[19:50:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[19:55:43] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[19:59:35] *** Joins: gnoo (~gnoo@user/gnoo)
[19:59:49] *** Joins: smemsh (~smemsh@user/smemsh)
[20:01:14] <smemsh> hello, is there a way to list the still-remaining pending commits whilst dropped into conflict edit in the middle of non-interactive rebase?
[20:03:06] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[20:03:33] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[20:04:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:05:19] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[20:08:13] *** Quits: xiongxin8802 (~xiongxin@113.116.32.103) (Quit: Konversation terminated!)
[20:08:25] *** Joins: vysn (~vysn@user/vysn)
[20:08:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04)
[20:10:01] <gnoo> smemsh: git status shows 'Next commands to do (N remaining commands):'
[20:12:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:13:18] *** Quits: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04) (Ping timeout: 260 seconds)
[20:16:07] <smemsh> gnoo: hmm, doesn't do that on mine (2.25.1), even with status.short=false
[20:17:16] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:292a:1375:8e97:1846:9f89:6a24) (Quit: Leaving)
[20:17:45] *** Quits: SirRippovMaple (~SirRippov@ns527547.ip-192-99-37.net) (Quit: The Lounge - https://thelounge.chat)
[20:17:49] <j416> smemsh: you're looking for the rebase todo list; perhaps useful for searching
[20:17:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:17:58] <smemsh> i did find however that .git/rebase-apply/00* seems to glob to all the commits.  i'm not sure there's a way outside manual inspection
[20:18:05] *** Joins: SirRippovMaple (~SirRippov@ns527547.ip-192-99-37.net)
[20:18:12] <smemsh> j416: yeah, --edit-todo unfortunately only works during interactive rebase
[20:18:24] <smemsh> a --list-todo would be useful
[20:18:24] <j416> the todo list is a text file in .git/
[20:18:29] <j416> not sure if it's there for non-interactive
[20:18:39] *** Quits: SirRippovMaple (~SirRippov@ns527547.ip-192-99-37.net) (Client Quit)
[20:19:22] *** Joins: SirRippovMaple (~SirRippov@ns527547.ip-192-99-37.net)
[20:19:58] <j416> .git/rebase-merge/git-rebase-todo perhaps?
[20:20:08] <j416> haven't verified.
[20:20:13] *** Joins: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04)
[20:21:02] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:21:51] <smemsh> j416: that file doesn't exist, but i can figure out from the rebase-apply/00* and rebase-apply/next files, that's good enough, if there's no command to show the list, at least it's available.  thanks
[20:22:10] <j416> I see. perhaps different git version? hm.
[20:22:13] *** Quits: junktext (~junktext@109.201.152.167) (Ping timeout: 252 seconds)
[20:23:18] <j416> (found it by rebasing and intentionally creating a conflict)
[20:23:46] <j416> smemsh: why do you need them?
[20:25:58] <smemsh> j416: that string is in my git binary, but i don't see it anywhere under .git/
[20:28:07] <j416> iirc, the rebase backend was updated not too long ago
[20:28:43] <j416> I don't remember the details. The man page reveals that there are at least two, apply and merge.
[20:29:08] <j416> (which might explain why yours is called apply and mine is called merge)
[20:29:10] *** Joins: nctcf^ (~nctcf@68.101.54.227)
[20:29:34] <j416> I suppose both will have something like a todo list.
[20:29:46] <smemsh> j416: well because i did some things which i think obviate the need for a certain commit in a branch after rebasing, i'm considering to skip it, not sure if it's still-upcoming, i'm a little confused by what's happening so i wanted to inspect the pending list
[20:30:05] <j416> smemsh: finish the rebase, check the result?
[20:30:22] <smemsh> i did figure it out by reading the list in rebase-apply/00* which are presumably applied using lex sort
[20:30:42] <j416> smemsh: also, you probably know what you had before the rebase, so it shoudn't be too tricky to figure out the range of commits being rebased?
[20:33:55] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[20:34:15] *** Quits: jazzy (~jaziz@2600:380:847e:4826:ec68:9d70:e078:696) (Quit: Beddie bye-bye)
[20:34:21] <smemsh> well i've been getting a lot of seeming duplicates i've had to skip, which seem to be applied twice during the rebase.  it's unclear to me why because they weren't in master.  this is after cherry-picking a bunch of things into master from my branch and then trying to rebase onto it.  but all is well now
[20:34:51] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:35:46] <j416> I think you'd be better of figuring that out before of after the rebase, rather than during
[20:36:07] <j416> because there's better tooling to look at the graph
[20:37:36] <smemsh> actually i did skip one that i didn't want to skip, i guess i have to finish and then pick it again at the end and move it back in the right sequence with interactive rebase
[20:37:59] *** Joins: realies (~realies@user/realies)
[20:39:53] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:40:14] *** Quits: rsx (~dummy@ppp-188-174-141-82.dynamic.mnet-online.de) (Quit: rsx)
[20:40:28] *** Joins: realies (~realies@user/realies)
[20:41:04] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[20:41:06] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:41:26] *** Joins: realies (~realies@user/realies)
[20:43:25] *** Quits: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04) (Ping timeout: 260 seconds)
[20:43:55] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:47:04] *** Joins: realies (~realies@user/realies)
[20:48:43] *** Joins: arcatech (~arcatech@user/arcatech)
[20:48:58] *** Joins: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04)
[20:49:56] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:51:43] *** Quits: Guest1794 (~Guest17@168.235.181.114) (Quit: Client closed)
[20:53:02] *** Joins: realies (~realies@user/realies)
[20:53:25] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 268 seconds)
[20:53:32] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[20:53:53] *** Joins: Guest17 (~Guest17@168.235.181.114)
[20:54:00] <Guest17> anyone familiar with using shallow clones?
[20:54:23] <Guest17> i've created one, but fetching from the origin seems to bring in objects but not update the remote ref
[20:54:52] <ikke> Guest17: try just git fetch <origin> without specifying the branch name
[20:54:58] <Guest17> this is what i get when I git fetch https://pastebin.com/PG94gpNh
[20:55:29] <Guest17> I did that, after the first time I fetched where objects come down, subsequent fetches do nothing
[20:57:13] *** Joins: durham (~durham@163.114.132.7)
[20:57:29] *** Joins: wender (~Wender@189.37.64.113)
[21:00:02] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[21:00:16] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[21:00:19] *** Quits: computeiro (~Wender@189.37.64.113) (Ping timeout: 252 seconds)
[21:01:37] *** Joins: subopt (~subopt@2603-8081-2302-459a-9510-383d-8cb5-3634.res6.spectrum.com)
[21:02:18] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 260 seconds)
[21:03:03] *** Joins: computeiro (~Wender@189.37.64.113)
[21:04:10] *** Quits: wender (~Wender@189.37.64.113) (Ping timeout: 240 seconds)
[21:04:22] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[21:05:08] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[21:06:25] *** Joins: austin987 (~null@100.42.98.196)
[21:06:33] *** Quits: christall (~christall@24.235.90.74) (Remote host closed the connection)
[21:07:35] *** Joins: realies (~realies@user/realies)
[21:08:08] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[21:08:53] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:09:22] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[21:09:41] *** Joins: realies (~realies@user/realies)
[21:10:40] *** Joins: christall (~christall@24.235.90.74)
[21:12:13] *** Joins: mukul1 (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[21:13:31] *** Quits: mukul1 (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[21:13:37] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:13:53] *** Joins: mukul1 (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[21:14:49] *** Quits: mukul1 (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[21:15:05] *** Joins: mukul1 (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[21:15:12] *** Quits: mukul1 (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[21:15:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:16:09] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[21:19:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[21:20:25] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[21:22:42] *** Joins: Narrat (~omnius@p200300df5f0ee16206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:23:02] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Remote host closed the connection)
[21:25:43] *** Quits: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04) (Remote host closed the connection)
[21:25:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04)
[21:26:15] <Guest17> I don't know if this makes a difference but I've made this shallow clone from a local repo that I have checked out.  so my big working copy has a reference to origin/trunk on the original source, and my shallow copy should have a reference to origin/trunk pointing to where my big repo local trunk is pointing to, right?
[21:32:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:33:11] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:37:22] *** Quits: OJFord (~OJFord@2a01:4b00:8769:8e00:82e8:6edd:ebc9:eed7) (Quit: Client closed)
[21:37:27] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[21:48:12] *** Joins: Guest0 (~Guest0@173.231.114.74)
[21:55:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:02:18] *** Quits: Guest0 (~Guest0@173.231.114.74) (Quit: Client closed)
[22:07:22] *** Joins: vicfred (~vicfred@user/vicfred)
[22:08:39] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:08:51] *** Joins: apo (~apo@is.drifting-through.space)
[22:08:56] <apo> Hey
[22:09:02] <apo> This just came up in another channel, and got me curious
[22:09:02] *** Quits: Janni (~jan@91.151.74.79) (Remote host closed the connection)
[22:09:15] <apo> When would git rev-parse --is-inside-work-tree print false?
[22:09:23] <apo> $ GIT_DIR=../git/.git git rev-parse --is-inside-work-tree -> true
[22:09:51] <apo> and doing it without setting GIT_DIR just goes 'fatal: not a git repository'
[22:14:13] <apo> ohh, it's false in .git
[22:19:00] *** Joins: Krail (~Krail@user/alexdelarge)
[22:19:21] *** Parts: Krail (~Krail@user/alexdelarge) ()
[22:19:38] *** Joins: jwillikers_ (~jwilliker@ics141-1.icsincorporated.com)
[22:19:53] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Ping timeout: 265 seconds)
[22:20:48] *** jwillikers_ is now known as jwillikers
[22:22:47] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 265 seconds)
[22:26:01] *** Quits: saroy (~Sandipan@45.249.73.235) (Remote host closed the connection)
[22:26:16] *** Joins: dolor_avis (~dolor_avi@user-5-173-14-122.play-internet.pl)
[22:26:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:27:37] *** Quits: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[22:32:27] *** Quits: i7c (~i7c@user/i7c) (Quit: psst)
[22:32:50] *** Joins: tlaxkit (~hexchat@170.253.35.150)
[22:33:18] *** Joins: i7c (~i7c@user/i7c)
[22:33:34] *** Quits: jellycode (~jellycode@192.150.10.211) (Quit: Client closed)
[22:33:49] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a9b4:36ca:33d2:a3ca)
[22:33:49] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a9b4:36ca:33d2:a3ca) (Changing host)
[22:33:49] *** Joins: skapata (~Skapata@user/skapata)
[22:36:14] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[22:36:29] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[22:37:13] *** Quits: i7c (~i7c@user/i7c) (Client Quit)
[22:38:16] *** Joins: i7c (~i7c@user/i7c)
[22:42:21] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:42:41] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[22:44:41] *** Quits: roadie (~user@2a02:8108:ec0:1427:8155:7c94:adca:fa04) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[22:45:46] *** Joins: ferz (~ferz@93-39-142-33.ip76.fastwebnet.it)
[22:47:39] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[22:50:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:58:52] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 245 seconds)
[22:59:48] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[23:00:14] *** Quits: Kamilion (kamilion@copper.sllabs.com) (Ping timeout: 268 seconds)
[23:00:31] *** Joins: Kamilion (kamilion@copper.sllabs.com)
[23:02:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:07:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[23:08:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:13:20] *** Quits: tlaxkit (~hexchat@170.253.35.150) (Quit: Leaving)
[23:16:40] *** Quits: ARoxdale (~ARoxdale@84.203.25.150) (Ping timeout: 240 seconds)
[23:17:43] *** Quits: computeiro (~Wender@189.37.64.113) (Quit: Leaving)
[23:22:46] *** Quits: mthall (~quassel@mail.thalliman.com) (Ping timeout: 252 seconds)
[23:27:35] *** Joins: bambanxx (~bambanx@207.248.194.206)
[23:36:33] *** Joins: junktext (~junktext@109.201.152.164)
[23:42:48] <Guest17> ok so i'm looking into this.  software is my full checkout.  .git/refs/heads/trunk has a commit hash.  in my single branch checkout, there is no refs/remotes/origin/trunk
[23:42:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:43:35] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[23:43:36] <imMute> Guest17: I think when you do a single branch clone, it sets up the .git/config to only fetch that branch rather than all of them.
[23:43:51] <Guest17> in my case, its not continuing to fetch that branch from the remote
[23:44:08] <Guest17> it did it once, clearly, but its not pulling in anything else
[23:44:37] <imMute> Guest17: what is the "fetch" line under [remote "origin
[23:44:42] <imMute> Guest17: what is the "fetch" line under [remote "origin"] in the .git/config ?
[23:45:09] <Guest17> doesn't include the branch that was initiall
[23:45:13] <Guest17> oh, I know what happened....
[23:45:16] *** Joins: tlaxkit (~hexchat@170.253.35.150)
[23:46:17] *** Joins: ZacSharp (~ZacSharp@user/zacsharp)
[23:48:29] <Guest17> it was removed when I tried to add new branches and didn't set add, so trunk got deleted from the fetch line in the config
[23:49:34] <Guest17> so fetching didn't pull in everything, it made a new shallow branch...
[23:52:09] *** Joins: average (uid473595@user/average)
