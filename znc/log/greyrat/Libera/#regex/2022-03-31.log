[00:02:05] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b8d1-22fc-ba64-49d1.fixed6.kpn.net)
[00:06:25] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Read error: Connection reset by peer)
[00:07:51] *** Joins: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[00:09:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[00:09:06] *** Quits: az103 (~az103@071-087-062-195.res.spectrum.com) (Quit: leaving)
[00:09:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:09:28] *** Joins: az103 (~az103@071-087-062-195.res.spectrum.com)
[00:26:39] *** Joins: lavaball (felix@31.204.155.215)
[00:37:46] *** Joins: vlm (~vlm@user/vlm)
[00:39:13] *** Quits: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5) (Ping timeout: 250 seconds)
[01:19:48] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[01:28:32] *** Joins: re101-discus-87 (~re101-dis@2a0e:41d:566e:0:701d:835b:47f1:1cf2)
[01:28:46] *** Quits: re101-discus-87 (~re101-dis@2a0e:41d:566e:0:701d:835b:47f1:1cf2) (Client Quit)
[01:30:48] *** Joins: Firecatmon (~firecatmo@pa49-195-113-89.pa.nsw.optusnet.com.au)
[01:35:57] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[01:38:39] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[01:43:24] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:50:22] *** Quits: Firecatmon (~firecatmo@pa49-195-113-89.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[01:53:01] *** Quits: re101-ferret-22 (~re101-fer@p200300e727122800f9d1ad3eb1dad901.dip0.t-ipconnect.de) (Quit: Client closed)
[02:19:39] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-653e-b3ce-a8a4-601a.fixed6.kpn.net)
[02:22:26] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b8d1-22fc-ba64-49d1.fixed6.kpn.net) (Ping timeout: 252 seconds)
[02:29:02] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-653e-b3ce-a8a4-601a.fixed6.kpn.net) (Ping timeout: 252 seconds)
[02:48:25] *** Quits: re101-lemur-3 (~re101-lem@192.193.216.147) (Quit: Client closed)
[03:01:25] *** Joins: pluri (~pluri@user/pluri)
[03:30:52] *** Joins: tester12 (~tester12@5.119.230.181)
[03:35:18] *** Joins: eggbean (~eggbean@user/eggbean)
[03:38:24] <eggbean> I have these files in a directory:   config  id_ecdsa  id_ecdsa.pub  id_ed25519  id_ed25519.pub  id_github  id_github.pub  id_rsa  id_rsa.pub  known_hosts  rc  ssh_auth_sock
[03:39:07] <eggbean> How do I match the private keys in regex. ie. id_xxxxx but not id_xxxxx.pub
[03:39:58] <eggbean> I thought it would be something I could do, but no. I was wrong
[03:40:06] <rewt> id_[^.]+$
[03:40:39] <rewt> "id_" followed by 1 or more characters that are not ".", all the way to the end
[03:40:55] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[03:40:59] <eggbean> rewt: thanks.
[03:41:05] <rewt> np
[03:41:31] <eggbean> I'll deconstruct that. S
[03:44:55] *** Joins: ahmedelg1 (~ahmedelga@2a02:a446:d88a:1:54b1:2faf:45bb:4ce3)
[03:48:56] *** Quits: luva (~luva@185.168.9.235) (Ping timeout: 272 seconds)
[03:49:23] *** Quits: ahmedelg1 (~ahmedelga@2a02:a446:d88a:1:54b1:2faf:45bb:4ce3) (Ping timeout: 260 seconds)
[03:52:06] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[03:56:58] *** Joins: luva (~luva@37.120.197.53)
[04:09:58] *** Quits: tester12 (~tester12@5.119.230.181) (Quit: Client closed)
[04:19:35] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:37:00] *** Quits: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Quit: Leaving)
[04:43:21] *** Joins: tester12 (~tester12@5.119.230.181)
[04:47:10] <OnlineCop> Literal text "id_' followed by anything not a '.' character.
[04:53:57] *** Quits: tester12 (~tester12@5.119.230.181) (Quit: Client closed)
[04:57:52] *** Quits: minto (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[04:58:31] *** Joins: minto (~mintograd@47.201.5.61)
[05:01:54] *** Joins: ahmedelg1 (~ahmedelga@77.164.236.89)
[05:07:24] *** Joins: re101-squid-5 (~re101-squ@103.100.224.16)
[05:09:35] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:11:28] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[05:16:07] *** Joins: vlm (~vlm@user/vlm)
[05:19:12] *** Quits: ahmedelg1 (~ahmedelga@77.164.236.89) (Ping timeout: 260 seconds)
[05:22:10] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[05:32:18] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:55] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:56] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:56] *** Joins: maetthew (~maetthew@user/maetthew)
[05:42:44] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-8da3-d8f5-c0f4-44ee.fixed6.kpn.net)
[05:53:02] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-8da3-d8f5-c0f4-44ee.fixed6.kpn.net) (Ping timeout: 260 seconds)
[07:06:53] *** Joins: adeliktas9 (~adeliktas@i59F52E5A.versanet.de)
[07:08:27] *** Quits: adeliktas (~adeliktas@i59F52D90.versanet.de) (Ping timeout: 260 seconds)
[07:08:28] *** adeliktas9 is now known as adeliktas
[07:17:08] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7dd3-cad-7848-b409.fixed6.kpn.net)
[07:21:59] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7dd3-cad-7848-b409.fixed6.kpn.net) (Ping timeout: 260 seconds)
[07:44:03] *** Joins: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5)
[07:44:46] <re101-squid-5> hi, is anyone willing to help me with a pretty complex regex? i think i am pretty close... but alot to explain so easier to do it in a PM instead of annoying everyone here
[07:44:46] <re101-squid-5> thanks guys
[07:45:21] <re101-squid-5> i am using .net regex
[07:57:33] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[08:03:45] <rairden> Anyone care to help me make a regex?  https://regexr.com/6ihfm
[08:03:45] <rebot> 14Hey, rairden! Please consider posting your regex to https://regex101.com/ which is our preferred regex editor. Thanks! :)
[08:06:56] <JohnDoe1> re101-squid-5 you're better off posting a regex link which contains your current state and the requirements rather than scaring people off by saying things like "complex" and "easier to explain in PM"
[08:07:31] <re101-squid-5> https://regex101.com/r/BECsa7/10
[08:08:02] <rairden> reposting my question to 101 url:  https://regex101.com/r/eAa3RG/1    GOAL: match up to first comma or newline
[08:08:25] <re101-squid-5> i basically need to match a mac address and to an interface but only if certain conditions are met
[08:08:31] <JohnDoe1> rairden is this what you had in mind? https://regex101.com/r/QGzM1X/1
[08:08:51] <rairden> yes thank you very much JohnDoe1 
[08:09:01] <JohnDoe1> for sure ;) 
[08:09:32] <rairden> very elegant. And easy to reason about
[08:09:59] <JohnDoe1> re101-squid-5 any particular reason you wish to parse this JSON with regex? it would be much faster/easier with some JSON specific utilities
[08:10:33] <re101-squid-5> yeah i know but unfortunelty has to be done this way..
[08:11:43] <JohnDoe1> okay cool so where are you stuck?
[08:13:15] <JohnDoe1> re101-squid-5 you are trying to get a lot more than just the mac address, correct?
[08:13:43] <re101-squid-5> correct
[08:13:44] <re101-squid-5> i have evertyhing working but i need to match a mac address inside the hosts array with and interface but only if the external is true and it only appears once in the hosts list
[08:14:46] <re101-squid-5> but if it appears twice in the hosts array but one has external false and the other external is true, that is fine and i want to match that mac with the interface it refereneces
[08:14:54] <re101-squid-5> if that makes sense
[08:16:18] <re101-squid-5> whilst keeping all my other matches intact
[08:17:19] <JohnDoe1> almost. It is quite a lot you're asking of regex, there's no logic so as long as we can fake it we're good. So taking "ether2" as an example, the mac address in the interface is the same as in the hosts array. That is a no go because none of the hosts entries has external = true
[08:18:12] <re101-squid-5> if its the case of ether2 having no hosts with external = true, then i dont want to record it
[08:18:22] <re101-squid-5> and yeah i know haha im not sure if this is even possible
[08:18:25] <JohnDoe1> is this some stupid log aggregator ?
[08:19:32] <re101-squid-5> no, but i understand it may not even be possible if thats the case ill figure something else out
[08:21:13] <JohnDoe1> it's likely that it's possible but may be above my skill level give me a few
[08:21:49] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:22:11] <re101-squid-5> its well above mine too haha, thanks for you help! no stress at all if your unsure :)  thanks mate
[08:24:20] <JohnDoe1> well either way it would be a very hacky way since regex isn't down with repetitive syntax like xml or json
[08:24:37] <JohnDoe1> which means don't feel bad, it's not meant to be easy
[08:25:27] <re101-squid-5> yeah i get that, either way thanks for your help!
[08:25:46] <JohnDoe1> I did nothing yet :P
[08:27:46] <re101-squid-5> hahah well your looking into, thats something :)
[08:32:54] <JohnDoe1> are you sure there is a case that matches the requirements?
[08:34:43] <JohnDoe1> hmm nvm there may be exclusions because I'm assuming the {"interfaceName" ...} block always contains a mac-address
[08:34:44] <re101-squid-5> yes
[08:35:51] <re101-squid-5> its not the mac address in the {"interfaceName" ...} block that i need, its the ones in the hosts array at the bottom of the text
[08:36:02] <re101-squid-5> ether3 shows up 4 times in the hosts array
[08:36:39] <JohnDoe1> yup
[08:36:46] <re101-squid-5> and 3 of them external = false, so theres only one match with external=true and its the only one whch meets both criterias
[08:37:14] <re101-squid-5> so i then want to match that mac address against ether3
[08:38:19] <re101-squid-5> i believe in this input the only ones that will meet the criteria is ether3, ether4, ether5 and ether6
[08:38:56] *** Joins: re101-tapir-66 (~re101-tap@182.253.132.215)
[08:39:31] *** Joins: pluri (~pluri@user/pluri)
[08:41:09] <re101-tapir-66> Please anyone help me https://regex101.com/r/uROc8S/1 , i want to replace all string except the first img src
[08:41:31] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 250 seconds)
[08:41:31] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 250 seconds)
[08:41:41] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[08:42:24] <JohnDoe1> re101-tapir-66 https://regex101.com/r/uROc8S/1 like that?
[08:43:56] <re101-tapir-66> I don't see any change...
[08:45:35] <re101-tapir-66> oh isee thank you very much mr JohnDoe
[08:45:42] <JohnDoe1> re101-tapir-66 anytime :)
[08:46:07] <re101-tapir-66> Thank you very very much, i've been stuck about this for 8 hours
[08:46:38] <JohnDoe1> yikes
[08:51:25] <re101-squid-5> JohnDoe1 any luck haha?
[08:51:34] <JohnDoe1> getting there
[08:51:54] <re101-squid-5> awesome, thanks mate
[08:52:37] <JohnDoe1> basic idea I have is to match the interface name, then do a lazy lookahead which captures but does not consume the first entry with external true. Then it should check that there isn't another one with external true again. However, I'm at 26 matches so I must be missing something
[08:53:37] <re101-squid-5> any chance you can post the link? ill have a look too see if i can help
[08:53:50] <JohnDoe1> https://regex101.com/r/uROc8S/1
[08:54:02] <JohnDoe1> hmmm no it's /11
[08:54:04] <JohnDoe1> on your link I think
[08:54:12] <re101-squid-5> ah okay cool thanks
[08:54:23] <JohnDoe1> copy paste issues between winblows and macos...
[08:54:53] <re101-squid-5> haha always...
[08:55:47] <JohnDoe1> ok so every hosts entry has 5 entries...
[08:56:10] <re101-tapir-66> hello JohnDoe  sorry could you help me, https://regex101.com/r/uROc8S/1
[08:56:11] <re101-tapir-66> I mean i want to select all string except the first img src
[08:57:06] <JohnDoe1> re101-tapir-66 meaning remove the url inside src for the first img?
[08:57:37] <re101-squid-5> i thought only 5 but it oculd be 6
[08:57:46] *** Quits: jargon (~jargon@184.101.173.186) (Remote host closed the connection)
[08:57:49] <re101-tapir-66> i meant match everything except the first img src
[08:57:51] <JohnDoe1> ok
[08:58:34] <JohnDoe1> re101-tapir-66 not any clearer, sorry, is this is or do you want src="..." gone completely? https://regex101.com/r/uROc8S/3
[08:59:52] <re101-tapir-66> it is posibly to use function match, then match everything except the first img like the V1
[09:00:32] <JohnDoe1> re101-tapir-66 unfortunately no, you cannot pause matching and then resume it later. However you can still use the match function but refer to capture groups 1 and 2 to get the string without the url
[09:00:37] <JohnDoe1> !codegen
[09:00:58] <JohnDoe1> oh right, bot is down. There's a code generator link on the left sidebar to give you some ideas, re101-tapir-66 
[09:04:37] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-691f-96e5-7373-c776.fixed6.kpn.net)
[09:05:59] <re101-tapir-66> I see thank you very much
[09:09:15] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-691f-96e5-7373-c776.fixed6.kpn.net) (Ping timeout: 256 seconds)
[09:11:07] <JohnDoe1> re101-squid-5 welp this may work but ... because there's multiple interfaceName for the same name it will find the same thing multiple times.
[09:11:08] <JohnDoe1> re101-squid-5 welp this may work but ... because there's multiple interfaceName for the same name it will find the same thing multiple times.
[09:11:18] <JohnDoe1> re101-squid-5 I saved /12
[09:11:29] <re101-squid-5> will check it out, thanks so much!!
[09:12:10] <JohnDoe1> is there anything we can use from the JSON to exclude some?
[09:12:46] <JohnDoe1> hmm yeah I think you can bank of mac-address existing after all
[09:13:19] <re101-squid-5> no sadly..
[09:13:26] <re101-squid-5> oh really?
[09:13:30] <JohnDoe1> yeah that or type
[09:13:37] <JohnDoe1> because it's finding ports that's why the duplicates
[09:14:10] <JohnDoe1> saved /13
[09:14:28] <JohnDoe1> if that's correct we can move on to extracting the rest of the stuff you want/need
[09:16:06] <re101-squid-5> yeah thats perfect man
[09:16:41] *** Joins: Firecatmon (~firecatmo@pa49-195-113-89.pa.nsw.optusnet.com.au)
[09:17:53] <re101-squid-5> so in the original one i sent, i would now have it exaclty the same as that, expect where ether 3 4 5 6 are it would now include that mac address
[09:21:35] <JohnDoe1> so given that regex reads left to right it's positional, and since we're capturing that's even more positional if you know what I mean
[09:21:54] <JohnDoe1> if your JSON return has a different order of key:value then it's going to fail
[09:22:50] <re101-squid-5> it will be in this order everytime so that wont be a problem
[09:23:08] <JohnDoe1> ok then what is up with the bridge stuff?
[09:23:28] <re101-squid-5> the or statement?
[09:24:51] <JohnDoe1> no, I basically don't understand the criteria for matching the bridge entries - are you simply matching name in either tagged or untagged?
[09:25:37] <re101-squid-5> yes, and if the interface is in tagged or untagged it adds the vlanid agasint that interface
[09:25:41] <re101-squid-5> if that makes sense?
[09:28:15] <JohnDoe1> where does the vlan id come from?
[09:28:26] <JohnDoe1> vlan-ids from bridge?
[09:28:47] <re101-squid-5> yep
[09:29:11] <re101-squid-5> then it takes that id, and puts it against all the interfaces in tagged
[09:29:16] <re101-squid-5> and same for untagged
[09:30:33] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:36:10] <JohnDoe1> re101-squid-5 check /14 - could an interface be tagged more than once?
[09:36:21] <re101-squid-5> yes
[09:36:26] <JohnDoe1> you want each one?
[09:36:29] <re101-squid-5> yes
[09:36:39] *** Joins: yogi (~yogi@182.253.132.215)
[09:36:44] <re101-squid-5> my original regex should already do it correctly?
[09:37:09] <re101-squid-5> https://regex101.com/r/TnrRKV/1
[09:37:10] <JohnDoe1> the problem is with capturing a relative amount of items
[09:37:20] <re101-squid-5> ahh okay
[09:37:35] <JohnDoe1> if you know the number of times it can appear we can hack it out
[09:38:00] <JohnDoe1> but otherwise (capture)+ will return the latest instance of "capture" in the string, and append prior ones to the global match
[09:38:19] <re101-squid-5> ah okay i understand
[09:38:45] <JohnDoe1> say, you always have 5 bridges, we can repeat the same search with an incremented group name like tagged1 tagged2 tagged3....
[09:39:11] <JohnDoe1> it's not limited to 5 exactly, the idea is to know the maximum number
[09:39:40] <yogi> Hello everyone can somebody help me to match everything except img src https://regex101.com/r/Az2gYi/1 , i almost got the pattern but still fail
[09:39:47] <re101-squid-5> it could be any number, hard to say haha
[09:40:02] <JohnDoe1> yogi the group thing didn't work?
[09:40:33] <re101-squid-5> becuase there could be for example 15 vlan-ids in one and 3 in the next
[09:40:34] <JohnDoe1> re101-squid-5 yeah that's a bummer. Can you parse a regex match?
[09:40:42] <digitok> 07JohnDoe1, squid is using .net (i helped them with this regex the other day). you can stack captures (look in match info, you will see groups like tagged.N)
[09:41:05] <re101-squid-5> yes! what digitok said!
[09:41:17] <JohnDoe1> digitok stacked what now?
[09:41:43] <digitok> (foo)+ you can see all of the captures in .NET
[09:41:53] <JohnDoe1> oh ok yeah I see that's interesting
[09:42:34] <digitok> so now i will let you continue :D
[09:42:45] <JohnDoe1> oh no, please do step in :D
[09:43:00] <digitok> digitok is away rn, pls leave msg
[09:43:05] <re101-squid-5> hahah thanks so much for both of your help!!
[09:43:38] <JohnDoe1> uhm, hi digitok, john here, I was wondering ... uhm... actually you know what? I might be ok. No, no, I might need help actually. Anyway, call me back if you can. Thnanks
[09:44:01] <digitok> the user's inbox is full, pls do not call later
[09:44:05] <re101-squid-5> :')
[09:44:10] <JohnDoe1> freaking iphone
[09:44:46] *** Quits: re101-tapir-66 (~re101-tap@182.253.132.215) (Quit: Client closed)
[09:50:05] <digitok> jd1 is busy working on it no doubt!
[09:52:19] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 246 seconds)
[09:52:24] <JohnDoe1> not finding a way to escape the lookahead
[09:52:40] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 246 seconds)
[09:52:50] <JohnDoe1> so I can do the illegal capture group repeat
[09:54:29] <digitok> wut
[09:54:53] <JohnDoe1> try it :P
[09:57:01] <re101-squid-5> wish i could help more lol
[09:57:08] <JohnDoe1> hehe
[09:58:31] <yogi> Hello JohnDoe1 could you help me to replace all except of the first img src? https://regex101.com/r/5vrLH4/1
[09:58:59] <JohnDoe1> yogi did you not figure out how to reference capture groups?
[09:59:48] <digitok> i can take a look soon if you do not figure it out
[10:04:53] <yogi> JohnDoe1 i did but but i still cant find the right pattern
[10:05:26] <JohnDoe1> digitok don't let me squirm at 1 AM please show me how you would get past anchoring
[10:05:50] <JohnDoe1> yogi meaning you still want it to be a single match, with a gap in the middle?
[10:06:35] <re101-squid-5> haah please dont lose sleep for me!!
[10:06:57] *** Joins: dob1 (~dob1@user/dob1)
[10:07:35] <yogi> i want to replace all except the first img src https://regex101.com/r/5vrLH4/1
[10:07:53] <JohnDoe1> https://regex101.com/r/442Jt5/1 that's the idea I think right digitok ?
[10:10:11] <JohnDoe1> yogi https://regex101.com/r/5vrLH4/2 ? same regex, but with /s for single line to have . match line terminators too
[10:10:57] <digitok> not sure what i am looking at exactly. but, seems correct, yes
[10:11:19] <JohnDoe1> cool cool
[10:13:13] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 260 seconds)
[10:16:54] <yogi> +JohnDoe1  Thank you very much sir
[10:16:54] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:17:26] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:17:58] *** Joins: rvalue (~rvalue@user/rvalue)
[10:19:20] <JohnDoe1> damn it
[10:19:38] <digitok> 07yogi, he means yw
[10:19:57] <JohnDoe1> the interfaces that match requirements only have a single tagged and untagged id
[10:20:09] <JohnDoe1> oh yes you're welcome yogi 
[10:20:13] <re101-squid-5> yeah thats correct haha
[10:20:21] <JohnDoe1> re101-squid-5 ok I go to sleep now :D
[10:20:30] <digitok> LOL
[10:20:34] <re101-squid-5> no worries!! thanks for all your help haha
[10:20:35] <JohnDoe1> https://regex101.com/r/BECsa7/15
[10:20:59] <JohnDoe1> digitok nice .net tricks hopefully pcre will follow suit
[10:21:49] <JohnDoe1> I have to wake up relatively soon, 7 hours to go. Later peeps
[10:21:57] <re101-squid-5> thanks mate
[10:22:01] <JohnDoe1> aye aye
[10:22:33] <purplex> i see
[10:24:50] <re101-squid-5> digitok any chance you wanna give it a crack :')
[10:25:19] <digitok> oh i thought he fixed it
[10:25:26] <digitok> dafuq he gone to bed for
[10:25:32] <JohnDoe1> I did!
[10:25:38] <digitok> :x
[10:25:38] <JohnDoe1> what's cracked?
[10:26:21] <re101-squid-5> it also needs to match everything it orginally did... hahaha
[10:26:39] <re101-squid-5> it just needed to add those 4 macs to those 4 interfaces plus all the other stuff...
[10:26:57] *** Joins: maroon2 (tinycrypt@136.32.225.142)
[10:28:19] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 250 seconds)
[10:28:28] *** maroon2 is now known as maroon
[10:28:29] *** Quits: maroon (tinycrypt@136.32.225.142) (Changing host)
[10:28:29] *** Joins: maroon (tinycrypt@user/maroon)
[10:28:30] *** ChanServ sets mode: +v maroon
[10:28:51] <re101-squid-5> sorry!!
[10:29:43] <JohnDoe1> wait this is a replacement regex?
[10:29:44] <digitok> rip
[10:30:48] <re101-squid-5> well not a replacement.. haha but the link i orignally sent already matched most of what i needed haha
[10:30:50] <re101-squid-5> sorry!
[10:30:59] *** Joins: re101-bonobo-24 (~re101-bon@165.225.122.103)
[10:31:02] *** Quits: re101-bonobo-24 (~re101-bon@165.225.122.103) (Client Quit)
[10:31:10] <JohnDoe1> you must be Canadian :P
[10:31:23] <re101-squid-5> hahaha nope aussie!
[10:31:48] <JohnDoe1> oh wow I've never met a polite aussie
[10:31:49] * JohnDoe1 hides
[10:32:38] <re101-squid-5> hahaha ill take that as a compliment!! i mean your helping me ofcourse id be polite! im grateful for the help :)
[10:33:30] <digitok> psh
[10:33:33] <digitok> this guyt
[10:33:34] <digitok> -t
[10:33:58] <JohnDoe1> https://regex101.com/r/BECsa7/16 re101-squid-5 what else is missing other than the mac from hosts?
[10:34:49] <re101-squid-5> https://regex101.com/r/Nmlw87/1
[10:35:14] <re101-squid-5> it should be like that, but the macs from the host attached to ether 3 4 5 and 6
[10:36:35] <JohnDoe1> so the interface mac address is in capture group "mac" and the clientMac is from hosts -- what do you mean attached?
[10:37:04] <re101-squid-5> yes correct
[10:37:21] <re101-squid-5> ignore that, bad wording hah
[10:37:36] <re101-squid-5> i dont actually need the interfacemac.. only the clientMac
[10:38:04] <JohnDoe1> gotcha, that's easy to remove :D
[10:38:24] <JohnDoe1> are you referring to missing matches? meaning why isn't "sfp-sfpplus3" part of the matches?
[10:38:28] <re101-squid-5> so the results should be exaclty as the link i just sent, bar ether 3 4 5 and 6! they should now have that cleintMAc aswell from the hosts array
[10:38:55] <re101-squid-5> but other than that be the same
[10:40:16] <JohnDoe1> sorry still not following. The payload is the same in both links, so why would you have the same results as in the other link?
[10:40:26] <JohnDoe1> because you want the opposite of the current regex?
[10:40:38] <JohnDoe1> meaning match everything except 3,4,5,6 ?
[10:40:56] <re101-squid-5> i need everything including 3,4,5,6
[10:41:11] <re101-squid-5> but on 3,4,5,6 they will now have a clientMac
[10:41:27] <re101-squid-5> becuase they met the criteria from ealrier with the external and only appering once..
[10:41:31] <re101-squid-5> if that makes sense??
[10:41:49] <JohnDoe1> sure, but there's a huge chunk of info missing: what criteria do the other ones have? :D
[10:44:59] <re101-squid-5> they just need the name, linkstate, poe, tagged and untagged
[10:46:26] <re101-squid-5> but any of the interfaces could also have the clientmac, its just in this payload its only 3,4,5,6
[10:46:29] <re101-squid-5> if that makes sense
[10:46:48] <JohnDoe1> so any interface, those keys, on top of the currently matching ones?
[10:47:31] <re101-squid-5> yes correcet6
[10:47:36] <re101-squid-5> correct*
[10:47:50] <JohnDoe1> and you're cool with ether3 showing up both with and without clientMac
[10:48:09] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[10:48:09] *** ChanServ sets mode: +v perlbot
[10:48:26] <re101-squid-5> well only once would be ideal haha but if it cant happen thats okay
[10:51:16] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[11:00:05] <JohnDoe1> re101-squid-5 https://regex101.com/r/BECsa7/17 ?
[11:00:54] <re101-squid-5> yes!!! exaclty that my friend
[11:00:59] <re101-squid-5> thank you so much!!
[11:01:04] <re101-squid-5> sorry to keep you awake haha
[11:01:14] <JohnDoe1> welcome yeah I'm definitely out can't keep my eyes open
[11:01:20] <JohnDoe1> good lcuk
[11:01:22] <JohnDoe1> luck
[11:01:27] <re101-squid-5> thanks mate have a good night!!
[11:04:02] *** Quits: Firecatmon (~firecatmo@pa49-195-113-89.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[11:09:43] *** Joins: pluri (~pluri@user/pluri)
[11:13:04] *** Quits: re101-squid-5 (~re101-squ@103.100.224.16) (Quit: Client closed)
[11:26:37] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[11:27:37] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[11:36:29] <tinystoat> i'd really like to find out why the regex101 site doesn't work for me as i can't help folks using it.
[11:36:55] *** Joins: M3r (~M3r@user/M3r)
[11:37:06] <tinystoat> it keeps saying i don't have a modern browser - do they force one to use third party snoop code or something? 
[11:37:17] *** Joins: palasso (~palasso@user/palasso)
[11:49:37] *** Joins: dob1 (~dob1@user/dob1)
[11:50:58] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[11:53:05] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net)
[11:55:16] *** Quits: yogi (~yogi@182.253.132.215) (Quit: Client closed)
[11:55:33] *** Joins: lavaball (felix@31.204.155.215)
[11:55:58] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[11:57:59] *** Joins: jargon (~jargon@184.101.173.186)
[12:06:11] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[12:07:53] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[12:11:56] *** Joins: dob1 (~dob1@user/dob1)
[12:13:18] *** Joins: palasso (~palasso@user/palasso)
[12:13:50] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[12:17:53] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[12:18:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[12:26:21] *** Joins: [diablo]3 (~diablo]@user/diablo/x-9068044)
[12:28:14] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 260 seconds)
[12:28:14] *** [diablo]3 is now known as [diablo]
[12:38:28] <M3r> Need some help with this https://regex101.com/r/vNNsXd/1 I'm tring to skip everything before the first ":" (colon) including the colon itself, and match everything afterwards as two separate matches, e.g ComputerName: Localhost.lan.local AND UserName: Administrator
[12:40:03] <M3r> second attempt: https://regex101.com/r/vNNsXd/2
[12:40:11] <M3r> still no go :-\
[12:40:42] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:41:49] <Andrio> M3r, you probably don't want to stick the + on a capturing group there. As you can see, doing that will make it capture only the last character.
[12:42:03] <Andrio> Instead do this: ([a-zA-Z]+)
[12:42:34] <Andrio> M3r, also, should 'data:' match?
[12:45:01] *** Joins: fandre1986 (~fandre198@78.10.85.96)
[12:46:24] <M3r> data: shouldn't match no
[12:46:28] <M3r> I wanna skip that 
[12:48:50] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:49:49] <M3r> Andrio https://regex101.com/r/vNNsXd/3 in this example no : is captured in a group as far as I can see?
[12:50:11] <M3r> oh +
[12:51:18] <M3r> This shouldn't do that however: https://regex101.com/r/vNNsXd/4
[12:51:33] <M3r> I'm still not capturing the last part: UserName: Administrator
[12:55:47] <M3r> most preferably I'd like to capture Localhost.lan.local and Administrator in two separate groups, e.g (?<Computer>) and (?<User>) like this: https://regex101.com/r/vNNsXd/5 but I can't positively say that this regex is by any means as short as I was hoping it to be...
[12:57:36] <Andrio> Can you simplify it by taking two matches and identifying them in some other code?
[13:02:50] <Andrio> i.e. have your regex itself not care about telling the labels apart
[13:03:16] <M3r> Not sure I understand what you mean? Labels as in group names?
[13:04:09] <M3r> I can simplify the objective by saying that I only want to capture: Localhost.lan.local and Administrator ?
[13:04:13] <Andrio> As in what comes before the ':' in your text
[13:12:34] <M3r> it would defeat my purpose of achieving the goal of learning regex better tho ;)
[13:30:13] *** Quits: MitarashiDango[m (~mdangomat@2001:470:69fc:105::1:cb5e) (Quit: You have been kicked for being idle)
[13:37:02] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: Ping timeout (120 seconds))
[13:40:08] *** Joins: re101-camel-50 (~re101-cam@94-30-39-199.xdsl.murphx.net)
[13:45:49] <re101-camel-50> https://regex101.com/r/GNb5Uj/1Hi, I'm completley new to regex so my question is probabbly very simple. I'm working on google sheets and I'm trying to find a way to remove the reply message from the body of the emails I import to the spreadsheet.
[13:46:03] <re101-camel-50> https://regex101.com/r/GNb5Uj/1 I'e messed up the link sorry
[13:47:44] <re101-camel-50> So I'm trying to remove everything after the "On Tue,", which is easy enough but if the reply message starts with "On Mon," for example I want it to be able to pick that up and remove everything after the whichever comes first
[13:50:22] <re101-camel-50> Probabbly not doing a good way of explaning it so let me out it this way, from list : ("On Mon," "On Tue," "On Wed," "On Thr," "On Fri," "On Sat," "On Sun,") find which is first in the body of text and remove everything after it
[13:50:55] <re101-camel-50> I would appriciate if somebody could point me in the right direction
[13:57:57] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:07:50] <rairden> did you figure it out re101-camel-50 ?
[14:09:58] <re101-camel-50> nope
[14:10:50] <re101-camel-50> for now just set it up to remove everything after ">" but its not ideal as it leaves "On Tue, 29 Mar 2022 at 17:24, xxxx yyyy <xxxx@zzzz.co.uk> wrote:"
[14:13:21] <Andrio> Maybe you can do this: ^On \w{3}, \d{2} .*
[14:13:35] <Andrio> Or: ^On (?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)}, .*
[14:13:44] <Andrio> ^On (?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), .*
[14:13:55] <Andrio> with the m and s switches.
[14:14:03] <re101-camel-50> let me have a look
[14:14:58] <re101-camel-50> yeah picks it up alright
[14:15:19] <re101-camel-50> would it break if i add the space and "," to it
[14:15:50] <re101-camel-50> i want it to avoid picking up on any "On Mon" and so on that might come up in the actual email body
[14:17:05] <re101-camel-50> doesnt seem to like the commas https://regex101.com/r/qI3T5z/1
[14:17:52] <Andrio> You've doubled the commas.
[14:18:43] <re101-camel-50> oh i see
[14:19:19] <re101-camel-50> so it actually looks for "On xxx,"
[14:19:45] <re101-camel-50> Thank you, lets  see if the spreadsheet is happy with that
[14:19:58] <rairden> do you want something like this:   ^(>\s)?On (Mon|Tue|Wed|Thu|Fri|Sat|Sun),.*
[14:22:14] <re101-camel-50> both of your guys examples work fine
[14:22:22] <re101-camel-50> thank you
[14:23:07] <rairden> a very common thing you want to do in regex is use capture groups.  Go youtube that term (daniel schiffman maybe).  And OR sign '|'
[14:24:10] <rairden> if you want something to be optional, use question mark `?`. It says the last item is "optional", but in order for it to work on compound types or big items, wrap in parens () which also is a capture group
[14:24:17] <re101-camel-50> Yeah I was trying to addapt some examples I found online but seems like I was formatting it wrong
[14:26:05] <rairden> for what I wrote  ^(>\s).   \s is a space character. Means start `^` with a ">\s" optionally.
[14:27:23] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Read error: Connection reset by peer)
[14:27:30] <re101-camel-50> Does that mean it matches the space before the capture group?
[14:29:25] <rairden> if you wrote   ^>\s?    wouldn't work. Cuz that says \s is optional. You want to group the two items since they both occur.
[14:29:49] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:29:59] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[14:30:14] <re101-camel-50> ok
[14:30:38] <re101-camel-50> either way it does what i needed it to do so thank you both again
[14:34:29] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net) (Ping timeout: 252 seconds)
[14:38:02] *** Joins: re101-grouse-12 (~re101-gro@202.136.85.219)
[14:38:20] <re101-camel-50> actually
[14:38:45] *** Quits: re101-grouse-12 (~re101-gro@202.136.85.219) (Client Quit)
[14:38:56] <rairden> is there a way to turn on line #'s for regex101 for viewers?
[14:39:00] <re101-camel-50> I spoke too soon, google sheets doesnt seem to be able to find the right things
[14:39:19] <rairden> google sheets doesnt use the same regex as us probably
[14:39:31] <rairden> wasn't your link js engine?
[14:39:45] <re101-camel-50> yes, as its supposed to be as far as i know
[14:40:18] <Andrio> rairden, regex101 does allow you to show line numbers on the regex and text.
[14:40:21] <re101-camel-50> =REGEXREPLACE(D3,"^(>\s)?On (Mon|Tue|Wed|Thu|Fri|Sat|Sun),.*",) this formula does nothing but at the same time it doesnt give me an error
[14:40:33] <rairden> most of regex in the wild is BRE or ERE (extended regex). My favorite is PCRE, but it's not posix so many GNU apps don't support it
[14:40:59] <Andrio> > Google products use RE2 for regular expressions
[14:41:04] <rairden> yes I found that Andrio, but was wondering if you can enable line #'s for a share URL for viewers
[14:41:23] <rairden> yes, RE2 is the best imo (rust, Go).
[14:41:30] <Andrio> ah, no, pretty sure that's controlled by the viewer's preferences.
[14:41:54] <rairden> ripgrep uses the RE2 as well.
[14:42:04] <re101-camel-50> It works fine on both ECMA and RE2 on regex101
[14:42:08] <rairden> (not backreferences, so linear time not n^2)
[14:43:08] *** Quits: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5) (Remote host closed the connection)
[14:45:41] *** Joins: subie (~subie@2601:4c0:4080:bc0::4)
[14:48:30] <re101-camel-50> do i somehow need to add the regex flags to the google sheets formula?
[14:48:47] <rairden> like global?  Probably not
[14:49:04] <rairden> i'm not familiar w/ google sheets. Can you link me a dummy sheet
[14:50:17] <re101-camel-50> one sec
[14:50:59] <rairden> a regex is generally inbetween slashes in tools like sed, perl, awk.  Like /mySearch/g   or /myregex/gm
[14:51:26] *** Quits: jargon (~jargon@184.101.173.186) (Remote host closed the connection)
[14:51:33] <re101-camel-50> https://docs.google.com/spreadsheets/d/172BLEx1E17EQX1_WQIfKt0JSZtWPCV_ni5RjmtI3QOc/edit?usp=sharing
[14:52:31] <rairden> i see
[14:52:36] <re101-camel-50> i think i have the formula format correct, according to googles documentaion
[14:52:37] <rairden> their function takes 3 args
[14:52:41] <rairden> you only listed 2 args
[14:53:02] <rairden> func(text, regex, replace)
[14:53:26] <re101-camel-50> oh yeah sorry i was playing with it and forgot to place the last one
[14:53:38] <rairden> shoulda just read the "learn more" that i looked at
[14:53:38] <re101-camel-50> i fixed it now but as you can see theres no difference
[14:53:56] <re101-camel-50> "" at the end means replace with nothing
[14:54:01] <rairden> in cell B1?
[14:54:04] <re101-camel-50> yes
[14:54:05] <rairden> i only see 2 args
[14:54:13] <rairden> =REGEXREPLACE(A1,"^(>\s)?On (Mon|Tue|Wed|Thu|Fri|Sat|Sun),.*",)
[14:54:25] <re101-camel-50> check now
[14:54:44] <rairden> i see it now
[14:55:08] <re101-camel-50> so the wierd thing is that its not giving an error
[14:55:15] <re101-camel-50> its just does nothing instead
[14:55:16] <rairden> so you said you're wanting to delete the entire body, except the date we match on?
[14:55:35] <re101-camel-50> no, everything after "On xxx,"
[14:56:18] <rairden> Oh, so keep everything except just "On Tue"   then have the body below intact?
[14:56:21] <re101-camel-50> so the regex should capture everything after "On Tue," , as it does on regex101
[14:56:39] <rairden> i mean delete the whole line but keep "On Tue"
[14:57:31] <re101-camel-50> no, delete everything after it
[14:57:34] <re101-camel-50> including it
[14:58:02] <re101-camel-50> thats what i mean, on the regex101 it highlights everything that i want
[14:58:21] <rairden> oh ok. our regex just matches the entire line
[14:58:30] <re101-camel-50> so it should be just a simple case of throwing this in the formula and have it be replaced by nothing
[14:58:40] <rairden> you're saying you want to keep the entire line, but delete the text above and below?
[14:58:54] <re101-camel-50> no
[14:59:04] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net)
[14:59:05] <re101-camel-50> let me show an example in C1
[14:59:34] <rairden> yes, just show me the output you want
[14:59:38] <re101-camel-50> there
[15:00:20] <rairden> i see.  So just delete the entire line
[15:00:30] <rairden> i'll google how their function works
[15:04:44] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net) (Ping timeout: 252 seconds)
[15:04:51] <rairden> that works see?
[15:04:58] <rairden> look at A15, and B16
[15:05:11] <re101-camel-50> yeah
[15:05:19] <rairden> "one two" is a regular expression.
[15:05:41] <rairden> but modify it to be like "one\stw?.*"
[15:05:48] <re101-camel-50> i think its something to do with the regex flags
[15:06:14] <re101-camel-50> i vaguley remeber something about google only aceppting global multiline
[15:06:47] <re101-camel-50> and the experessions you guys wrote use a single line and multi line
[15:08:17] *** Joins: re101-swan-24 (~re101-swa@balticom-208-192.balticom.lv)
[15:08:55] <rairden> you are right. See that works
[15:09:22] <rairden> see cell B19. Change the replace arg to XX or "" and it works
[15:10:15] <rairden> B24 works
[15:10:26] <re101-camel-50> yeah
[15:10:37] <re101-camel-50> whats different?
[15:10:47] <rairden> idk, just keep adding more and more text to it
[15:11:00] <rairden> i'll add one more that has more text below
[15:11:08] <re101-camel-50> does it not work because it has two matches?
[15:12:14] <rairden> now B29 doesnt work
[15:12:40] <re101-camel-50> must be getting confused when theres more than one match
[15:13:00] <rairden> google "goolge sheets REGEXREPLACE multiline flag"
[15:13:42] <rairden> i say it's buggy. Cuz adding more text shouldn't change anything. It should still match at least 1.  Cuz it's a copy paste cell.
[15:14:02] <rairden> ...therefore I dont think it has anything to do with flags
[15:15:17] <re101-camel-50> i see
[15:16:16] <re101-swan-24> Sample Data: https://pastebin.com/gJSehACE
[15:16:16] <re101-swan-24> REGEX: /(?<=<parent>)(?:[\S\s]*)(<version>2\.1\.0_13<\/version>)(?:[\S\s]*)(?=<\/parent>)/gm
[15:16:17] <re101-swan-24> Intent: Target all values of <version></version> tags in file, but only if nested inside <parent></parent>.
[15:16:17] <re101-swan-24> Problem: Works perfectly in regex101, but does not work in InteliJ IDEA or Notepad++ find and replace.
[15:16:18] *** rebot sets mode: +q re101-swan-24!*@*
[15:16:19] <rebot> 14re101-swan-24: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[15:16:48] *** rebot sets mode: -q re101-swan-24!*@*
[15:20:56] <re101-swan-24> https://regex101.com/r/FBkike/1
[15:21:41] *** Joins: re101-akita-8 (~re101-aki@118.193.105.250)
[15:21:48] <re101-akita-8> hello
[15:21:56] <re101-akita-8> I have a bug to report...
[15:22:09] <re101-akita-8> \%u[fF]{2}[0-9a-fA-F]{2}
[15:22:16] <rairden> look that works.  I just removed the ^(>\s)?
[15:22:23] <re101-akita-8> %uFF0a
[15:22:39] <re101-akita-8> regex not match this %uFF0a
[15:22:51] <re101-akita-8> but, matched with %uff0a
[15:22:53] <re101-camel-50> rairden oh damn
[15:23:18] <re101-camel-50> i was trying to add more to it fix it
[15:24:53] <digitok> 07re101-akita-8, both seem to work for me?
[15:25:20] <rairden> $0 is the whole match, and $1 is the first capture group ()
[15:25:47] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[15:25:51] <digitok> 07re101-swan-24, checking
[15:26:09] <re101-camel-50> yeah , im now trying to get it remove everything after the capture group
[15:26:26] <re101-camel-50> i might just nest another formula in that one
[15:26:36] <rairden> you mean all the text only below?
[15:26:53] <re101-camel-50> evrything after the first capture
[15:27:05] <re101-camel-50> as shown in c1
[15:27:14] <rairden> you'd just wrap .* in parens.  Like (.*)   then call it with $2
[15:27:29] <digitok> 07re101-swan-24, try this https://regex101.com/r/FBkike/2
[15:27:30] <rairden> i'll try in test6
[15:27:35] <re101-camel-50> ok
[15:30:23] *** Joins: re101-bichon-95 (~re101-bic@mail.moreyeahs.co)
[15:30:57] <re101-swan-24> digitok this matches everything from the start of the <parent> tag to the end of the </version> tag.
[15:31:05] <re101-swan-24> Including.
[15:31:24] <digitok> oops, sorry
[15:31:30] <re101-akita-8> ok
[15:31:31] <digitok> this one https://regex101.com/r/FBkike/3
[15:31:36] <re101-bichon-95> Mini Statement for Card ******5692.Total due Rs.33636.01. Minimum due Rs.1681.80. Payment due on 09-FEB-22. For more details: https://citi.asia/INCM
[15:31:50] <re101-bichon-95> here i want to match domain name citi
[15:34:20] <re101-swan-24> digitok you are a legend.
[15:34:54] <re101-swan-24> If you don't mind, could you elaborate a bit on why this works but the previous didn't?
[15:35:14] <re101-swan-24> Despite regex101.com working?
[15:36:50] <digitok> depends what you mean by works, i guess
[15:36:54] <digitok> it works in np++ for me
[15:37:17] <digitok> i assume you mean it includes the parts around <version></version> in the match
[15:37:35] <digitok> but, it does that on regex101 also
[15:37:57] <re101-swan-24> Why:
[15:37:58] <re101-swan-24> worked on the sample in regex101, but not in notepad++.
[15:38:35] <re101-swan-24> It just cropped the regex from the previous message:      /(?<=<parent>)(?:[\S\s]*)(<version>2\.1\.0_13<\/version>)(?:[\S\s]*)(?=<\/parent>)/gm
[15:39:26] <digitok> i mean, no idea. it works the same on both re101 and np++ for me
[15:40:39] <re101-swan-24> Just to clarify, your proposed regex works flawlesly on both npp and regex101. I am asking about the regex I posted above and in the original message. (They are the same.)
[15:41:22] <digitok> yea, that is what i am also referring to
[15:41:30] <re101-swan-24> Seriously? O.o
[15:41:47] <digitok> regex101 https://i.ibb.co/X2nxTcK/image.png
[15:41:48] *** Joins: re101-koala-66 (~re101-koa@1.54.21.214)
[15:41:53] <digitok> np++ https://i.ibb.co/7pLTxLM/image.png
[15:42:21] *** Quits: re101-koala-66 (~re101-koa@1.54.21.214) (Client Quit)
[15:42:40] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net)
[15:42:56] *** Joins: re101-koala-66 (~re101-koa@1.54.21.214)
[15:43:30] *** Quits: re101-koala-66 (~re101-koa@1.54.21.214) (Client Quit)
[15:44:29] <re101-swan-24> Okay. I noticed that you removed the / at the begining and the /gm at the end.
[15:44:40] <re101-swan-24> When using it in npp.
[15:44:57] <digitok> oh
[15:45:01] <digitok> lol, yea
[15:45:40] <re101-swan-24> And for some reason, as you mentioned before, but I didn't understand at the time, it matches everything between <parent> and </parent>.
[15:46:07] <re101-camel-50> rairden i would like to buy you a coffe as thanks for your help
[15:46:14] <re101-swan-24> I was under the impression that the only thing selected was the value between <version> and </version>.
[15:46:26] <digitok> i was confused about this msg, but i think perhaps you just meant "I" instead of "It" - <re101-swan-24> It just cropped
[15:46:44] <digitok> did not realise you were including the delimiters and flags
[15:47:15] <digitok> i did notice you were using (?:) around the parts you expected to be excluded
[15:47:36] <rairden> its no problem re101-camel-50 
[15:47:47] <re101-swan-24> That msg was about this chat client for some reason cropping the regex from the previous msg. It just didn't show up after being posted. (I don't know why. Maybe it get's filtered.)
[15:47:53] <digitok> non-capturing groups mean the value is not stored in its own "group" for referencing later, but the values are still "matched" and returned in the result
[15:48:03] <digitok> ah ok
[15:50:26] *** Quits: re101-camel-50 (~re101-cam@94-30-39-199.xdsl.murphx.net) (Quit: Client closed)
[15:50:50] <re101-swan-24> So you remove delimiters and flags when using regex in find tools of text editors?
[15:51:15] <digitok> normally, yea
[15:51:18] <re101-swan-24> Yeah, I that's how I interpreted (?:) to be used.
[15:51:26] <digitok> some programming languages also do not use them
[15:54:39] <rairden> so regex101 doesn't keep your regexs in a list youve made? I favorited one, and where'd it go?
[15:55:13] <rairden> oh I found it.  
[15:55:30] <re101-swan-24> digitok what a god.
[15:56:18] <re101-swan-24> I have little to no idea how this part works:
[15:56:19] <re101-swan-24> (?:(?!<\/parent>)[\S\s])*?\K
[15:56:28] <re101-swan-24> But it's exactly what I need.
[15:56:43] <rairden> that looks like lookaround
[15:56:46] *** Quits: re101-akita-8 (~re101-aki@118.193.105.250) (Ping timeout: 250 seconds)
[15:58:53] <digitok> there is a better (more efficient) way to do that, but it is quite a bit more complicated. i figured for use in np++ it should not matter
[15:59:11] *** Joins: lavaball (felix@31.204.155.215)
[15:59:50] <re101-swan-24> Neither regex works in InteliJ IDEA find tool.
[16:00:08] <re101-swan-24> So I'll just avoid that altogether then.
[16:00:12] <re101-swan-24> Cursed.
[16:00:49] <digitok> basically, you have the outer group which matches 0 or more times (lazily). inside there, we match a single character [\S\s], but before that we have a negative lookahead which checks that the substring in front of that position ([\S\s] here) is NOT "</parent>"
[16:01:15] <digitok> so after checking each character, it exits the group and looks for <version>
[16:01:31] <digitok> if it comes across </parent> before that, the match fails
[16:01:59] <digitok> the \K just resets the match position to that point, basically removing everything before it from what is returned
[16:02:10] <digitok> that is the part i forgot to add in version 2
[16:02:23] <rairden> IntelliJ does support lookaround. I just tested it
[16:02:44] <digitok> \K would likely be breaking it
[16:02:55] <rairden> i tested    ^((?!search).)*$
[16:03:00] <rairden> ....and that does work
[16:03:24] <digitok> without \K, you would want to add a capture group () around the stuff at the start and then use \1 or $1 in the substitution if you are doing one
[16:03:44] <digitok> \K only exists in pcre
[16:04:37] <digitok> well, and perl, and other things that are based on pcre like python's pypi regex
[16:05:35] <re101-swan-24> I am going to attempt to re-read your words until they make sense to me.
[16:05:41] <re101-swan-24> Please hold.
[16:05:44] <digitok> lol ^_^
[16:08:17] <rairden> does anyone know if fzf has a flag to disable folders? I didn't see it in their manual. Ctrl+t brings up fuzzy search for "files AND folders" which I hate.
[16:09:15] <digitok> never used it, sorry
[16:17:34] <M3r> hey digitok :)
[16:17:56] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:17:57] <re101-swan-24> digitok I have copied your explanation over to a file I saved locally which I will continue to re-read.
[16:17:58] <re101-swan-24> Thank you so much for your help and humoring me with the details.
[16:18:47] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[16:27:51] *** Quits: re101-swan-24 (~re101-swa@balticom-208-192.balticom.lv) (Quit: Client closed)
[16:41:09] <M3r> For my educational purposes: https://regex101.com/r/zXAv6T/1 how do I capture: "Localhost.lan.local" and "Administrator" in a group two times?
[16:46:02] *** Quits: fandre1986 (~fandre198@78.10.85.96) (Quit: Connection closed)
[16:52:43] *** Quits: MrNato_Home (~MrNato_Ho@61.29.44.88) (Ping timeout: 260 seconds)
[16:53:08] *** Joins: MrNato_Home (~MrNato_Ho@61.29.44.88)
[17:08:05] <JohnDoe1> tinystoat it uses web workers to run things after the first load. In the case of .net there's another download that only start when you switch to the flavor and start typing. There's also an advertiser on the bottom left corner but you can easily block those. However, operating without javascript enabled in 2022 will only get you a bunch of PITA.
[17:10:21] <tinystoat> JohnDoe1: thanks much, i have JS going as well as things unblocked and was still having problems. i could load the site for a millisecond before something else kicked in and your explanation helps understand that.
[17:11:01] <JohnDoe1> yeah the site will check for the ability to register web workers and other such tricks
[17:12:43] <JohnDoe1> Not sure what OS you're on but if you're into being able to control connections I'd recommend portmaster or little snitch both set to alert that way you get to choose whether the browser makes an actual connection.
[17:13:19] <JohnDoe1> be warned, you'll discover that firefox is a piece of doodoo
[17:14:18] <digitok> 07M3r, you mean in the same group (group #1) twice?
[17:14:44] <digitok> that is not possible in a single match in pcre, but .net would allow you to do that
[17:14:56] <digitok> in pcre, the best you could do is get it in 2 matches
[17:17:09] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net) (Ping timeout: 256 seconds)
[17:17:51] *** Joins: jinsun (~jinsun@user/jinsun)
[17:19:19] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[17:43:26] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net)
[17:43:56] <tinystoat> JohnDoe1: i hate firefox with all my heart but it has functions i find vital for my personal usage. :) yeah i use u-block origin and matrix by rgorhill.
[17:45:04] <tinystoat> JohnDoe1: i should be a bit more responsible and set up iptables. anyways thanks again, explains my problems and will see to fixing them.
[17:47:13] *** Joins: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com)
[17:48:11] <JohnDoe1> cool :)
[17:48:46] <JohnDoe1> I don't hate the software, I just don't think it's necessary to connect to mozilla.net several times, then safebrowsing.google.com and other such creepy things
[17:49:57] <digitok> scaredy cat
[17:50:46] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net) (Ping timeout: 245 seconds)
[17:53:12] <digitok> ffs
[17:53:58] <digitok> so annoying when you keep forgetting to do the same thing
[17:54:07] <digitok> and then cannot remember what the thing is
[18:01:58] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:05:48] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net)
[18:10:15] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net) (Ping timeout: 250 seconds)
[18:21:15] *** Quits: re101-bichon-95 (~re101-bic@mail.moreyeahs.co) (Quit: Client closed)
[18:32:34] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net)
[18:54:35] *** Quits: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com) (Quit: rairden)
[19:10:31] <OnlineCop> M3r: PCRE numbers groups based on the order it sees '(' in the pattern, excluding groups starting with `(?` or `(*`. In your case, that would be the '(' of `([a-zA-Z0-9.]+)` and not the '(' of the earlier `(?:[a-zA-Z]+`. So that gets assigned "group 1". If you repeat a capturing group, any NEW match it finds will overwrite what you had previously stored in its group.
[19:10:35] <M3r> digitok, no I mean in two separate groups ofc :)
[19:12:06] <OnlineCop> M3r: The typical "cheat/hack" way of doing that in PCRE is to duplicate that (?:...(...)) in the pattern, so PCRE sees two separate capture '(' groups. But then make the 2nd (3rd, nth...) outer group "optional" by tacking `?` or `{0,1}` onto it.
[19:12:25] <OnlineCop> https://regex101.com/r/zXAv6T/2
[19:13:15] <OnlineCop> https://regex101.com/r/zXAv6T/3 with a little more detail.
[19:13:50] <M3r> Yes, but that seems like an abundant amount of duplicate queries, so i was hoping I could use the same query and then just tell regex to do that up to two times {1,2}
[19:14:03] <OnlineCop> Derp. Version /4 fixes the "can't find it: your whitespace after ':' is missing" bug.
[19:14:33] <OnlineCop> M3r: In all languages except .NET, repeating a capture group "clobbers" the values stored in that group.
[19:14:54] <OnlineCop> In .NET though, it pushes each match onto that group's stack, so you actually have group 1.1, 1.2, 1.3, etc. when you repeat it.
[19:16:12] <OnlineCop> https://regex101.com/r/zXAv6T/5 is a .NET version.
[19:16:35] <OnlineCop> Notice the Group numbering on the right under MATCH INFORMATION; you can {1,2} it just fine.
[19:16:50] <M3r> had to add a \s after 1st group in version /4
[19:19:12] *** Joins: guesswhat (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz)
[19:19:21] <OnlineCop> I also had to move the space (or the \s) into the repeated group.
[19:19:33] <M3r> ah so the {1,2} in my original example, is not possible with PCRE2?
[19:19:56] <OnlineCop> Well, switch back to version /1 and move the space into the (?: group
[19:20:26] <OnlineCop> From this: `^.+: \K(?:[a-z` to this: `^.+:\K(?: [a-z`
[19:21:15] <OnlineCop> PCRE has a different way it could handle this, using `|\G`
[19:22:27] <M3r> ah I see... ^.+:\K(?:\s[a-zA-Z]+:\s([a-zA-Z0-9.]+)){1} will capture Localhost.lan.local and ^.+:\K(?:\s[a-zA-Z]+:\s([a-zA-Z0-9.]+)){2} will capture Administrator
[19:22:31] <OnlineCop> https://regex101.com/r/zXAv6T/6
[19:22:39] <OnlineCop> Right.
[19:23:44] <OnlineCop> Version /6 does it a little differently: because of the /g (global) flag, the first "run" will match the lefthand stuff and move the "bumpalong" index to just after that ':' where it stopped.
[19:23:47] <M3r> what I was trying to achieve is using the same query, but iterate it twice to capture the first token into a group and then the second token into another group after stepping through the full string once
[19:25:28] <OnlineCop> The second "run" fails to match the first `^.*?:` alternation, so it looks at the |\G... stuff, which only matches if it continues where the previous match left off. Since it DOES continue from the last position, it matches and captures, and moves the "bumpalong" index to just after the "lan.local".
[19:26:19] <OnlineCop> The third run continues at that point, and matches/captures, then moves the "bumpalong" index to after "Administrator".
[19:26:43] <OnlineCop> A fourth run is attempted at the point after the end of "Administrator", but both left and right alternations fail, so it stops there.
[19:27:05] <OnlineCop> The problem with this approach is that you could potentially end up with 10 matches.
[19:27:31] <OnlineCop> https://regex101.com/r/zXAv6T/7
[19:31:52] <OnlineCop> How complicated is your query? If the pattern is generally the same (that you want repeated), you might even get away with naming the groups something really short, and then doing the `(?:...(x))(?:...(y))?(?:...(z))?` "optional" method from before.
[19:33:35] <OnlineCop> https://regex101.com/r/zXAv6T/8
[19:34:50] <OnlineCop> That lets you define as complicated of a query as you need for both parts, but not have to rewrite that same query over and over (just the `(?&ref_name)` portion).
[19:36:55] <M3r> that /6 was really good :)
[19:37:08] <M3r> not far from how I pictured the query length to be
[19:40:25] <M3r> OnlineCop: Thanks a lot for bearing with me.
[19:40:41] <OnlineCop> No worries. I don't mind lots of questions.
[19:40:54] <OnlineCop> Granted, I do this while I'm at work, so I'm not always keeping an eye on the conversation
[19:41:20] *** Joins: re101-snake-38 (~re101-sna@2a01:c22:a450:c900:dd79:90fa:84ec:8442)
[19:41:28] <M3r> This is purely for educational purpose (I started learning regex like a week ago)
[19:42:11] *** Quits: re101-snake-38 (~re101-sna@2a01:c22:a450:c900:dd79:90fa:84ec:8442) (Client Quit)
[19:47:17] <OnlineCop> Yep; I like educational questions, since this is the best time to ask the "dumb" questions and not worry that something can "blow up something running on prod" or anything.
[19:50:40] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:55:08] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:56:11] *** Joins: gareppa (~gareppa@user/gareppa)
[19:56:44] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:14:10] *** Joins: re101-cuscus-58 (~re101-cus@240e:33d:2f:cf81:2834:a9ae:1ae9:9f7c)
[20:19:55] *** Quits: re101-cuscus-58 (~re101-cus@240e:33d:2f:cf81:2834:a9ae:1ae9:9f7c) (Quit: Client closed)
[20:25:44] <eggbean> How do I get this regex to work in GNU find?   find . -regex 'id_[^.]+$'
[20:26:29] <eggbean> Not sure why that isn't outputting anything
[20:30:11] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-c104-35a9-c8fc-bd79.fixed6.kpn.net) (Ping timeout: 260 seconds)
[20:30:20] <eggbean> I went through all the -regextypes
[20:35:48] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:37:32] <OnlineCop> eggbean: You're basically just looking for public keys under .ssh/ ?
[20:37:58] <eggbean> OnlineCop: yes, but actually the private keys
[20:38:16] <OnlineCop> Er, yeah. I meant that, sorry. Stuff NOT ending in '.pub'.
[20:38:26] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:39:42] <eggbean> Apparently it's looking at the full path, so how to just look at the filename?
[20:40:08] <eggbean> OnlineCop: find . -regextype sed -regex '.*/id_[^.]+$'
[20:40:38] <OnlineCop> I found `-regextype` and was just looking up the options when you posted. :)
[20:41:44] <OnlineCop> `find ~/.ssh -regextype egrep -regex '.*/id_[^.]+$'` 
[20:42:17] <eggbean> OnlineCop: excellent thanks
[20:44:07] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-acc8-b4b1-a252-2c47.fixed6.kpn.net)
[20:48:41] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-acc8-b4b1-a252-2c47.fixed6.kpn.net) (Ping timeout: 245 seconds)
[21:01:16] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:18] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:02:43] *** Joins: re101-beagle-2 (~re101-bea@047-233-046-055.res.spectrum.com)
[21:02:58] <re101-beagle-2> https://regex101.com/r/i2XcxM/1 Whats the best way to do this?
[21:03:35] <OnlineCop> re101-beagle-2: Matching from where to where?
[21:03:45] <re101-beagle-2> Just that top part like I already captured
[21:03:53] <re101-beagle-2> I just think I overthink things
[21:04:23] <OnlineCop> From the beginning of the string, you want to match until you hit the 1st ':' at the end of a line?
[21:04:37] <re101-beagle-2> Yeah, up to that point
[21:04:47] <re101-beagle-2> Before all the text
[21:05:18] <OnlineCop> When there's a colon in the middle of the line, you want it to match that? Like on line 3.
[21:05:35] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[21:05:40] <OnlineCop> If line 18, "Token Elevation Type indicates..." were to contain a colon, would you want it to match that text or not?
[21:06:13] <re101-beagle-2> Nothing after Process Command Line:
[21:06:54] <OnlineCop> I mean, if any of the lines under the "Process Command Line:" line (line 17) contain a colon, you still want to match that text?
[21:07:16] <re101-beagle-2> I care about nothing below Process Command Line:
[21:08:16] <OnlineCop> https://regex101.com/r/i2XcxM/2
[21:08:38] <OnlineCop> Drops from 9k steps to 157 steps.
[21:09:03] <re101-beagle-2> Nice!
[21:09:06] <re101-beagle-2> TY
[21:09:15] <OnlineCop> If one of those later lines contain a ':' though, those will match too.
[21:10:12] <OnlineCop> Other than the first line, you COULD expect all subsequent lines to have a ':' or stop processing.
[21:12:09] <OnlineCop> `\A[^:\r\n]+(?:\r?\n[^:\r\n]+:.*)+` (without the backticks)
[21:18:48] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-e891-498c-c15d-b015.fixed6.kpn.net)
[21:18:59] *** Joins: re101-birman-62 (~re101-bir@155.190.1.6)
[21:20:59] <re101-birman-62> I need to extract the value which comes after "/feed". So like "audit" only and nothing else after the audit. So in the example, I just need upto https://manage.office.com/api/v1.0/006c1e48-e342-47e9-ab5d-0dd9ff89bd96/activity/feed/audit. I dont care about what comes after audit
[21:21:44] <re101-birman-62> https://regex101.com/r/1kVWr4/1
[21:23:00] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-e891-498c-c15d-b015.fixed6.kpn.net) (Ping timeout: 240 seconds)
[21:29:17] <re101-birman-62> https://regex101.com/r/1kVWr4/1
[21:32:42] *** Joins: jargon (~jargon@184.101.173.186)
[21:33:18] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[21:33:32] *** Quits: re101-beagle-2 (~re101-bea@047-233-046-055.res.spectrum.com) (Quit: Client closed)
[21:43:38] <OnlineCop> re101-birman-62: PCRE? Python? Command line grep/sed/awk?
[21:44:35] <OnlineCop> https://regex101.com/r/1kVWr4/2
[21:44:50] *** Joins: re101-ainu-79 (~re101-ain@151.235.206.32)
[21:44:57] *** Quits: re101-ainu-79 (~re101-ain@151.235.206.32) (Client Quit)
[21:45:24] *** Joins: re101-hyena-17 (~re101-hye@112.222.c10008-a53.dsl-dynamic.vsi.ru)
[21:45:42] <re101-birman-62> Thanks OnlineCop... I need everything before the "202203"
[21:46:46] <OnlineCop> Everything after /feed/ but before the last '/' on the line?
[21:47:06] <re101-birman-62> yes
[21:48:02] <OnlineCop> https://regex101.com/r/1kVWr4/3 if you don't mind that there's a trailing '/' on it. https://regex101.com/r/1kVWr4/4 if you do.
[21:49:40] <OnlineCop> Basically, match "stuff" and then use \K to clear the "matched" text. Then match anything until it hits whitespace or '/'. If it can find 'foo/bar/baz/baf/' in there as well, match all those. Finally, expect that '/' is the next character (without actually matching it in version /4).
[21:50:18] <re101-birman-62> OnlineCop...Sorry... I think I want everything upto "audit". everything after "/feed" and before the "/2022" is a variable. So I wanted in the format "https://manage.office.com/api/v1.0/006c1e48-e342-47e9-ab5d-0dd9ff89bd96/activity/feed/<audit/xyz/abc>"
[21:50:47] <OnlineCop> Remove the \K
[21:51:40] <re101-birman-62> aah nice
[21:51:42] <re101-birman-62> got it
[21:51:45] <re101-birman-62> thanks
[21:51:48] <OnlineCop> If you want to exclude "audit" and everything after it, simply use the `https://man\S*?/feed/` portion.
[21:52:08] <re101-birman-62> Cool...thanks much
[21:52:15] <OnlineCop> My pleasure.
[21:53:17] *** Quits: guesswhat (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz) (Quit: Client closed)
[21:54:48] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:54:48] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:55:30] <re101-hyena-17> telegram chat  @regex_ru
[21:56:21] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:56:28] <OnlineCop> Regex Russian?
[21:58:16] <jargon> Sup, OnlineCop! :D
[21:58:36] <re101-birman-62> I dont see @regex_ru in Telegram
[22:01:05] <OnlineCop> o/ jargon
[22:01:36] *** Joins: jinsun (~jinsun@user/jinsun)
[22:06:38] *** Joins: lavaball (felix@31.204.155.215)
[22:09:16] *** Quits: re101-hyena-17 (~re101-hye@112.222.c10008-a53.dsl-dynamic.vsi.ru) (Quit: Client closed)
[22:28:12] *** Quits: phenom (~primus@user/phenom) (Ping timeout: 240 seconds)
[22:34:39] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-487e-8b89-1ae6-d4f.fixed6.kpn.net)
[22:38:48] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[22:43:03] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-487e-8b89-1ae6-d4f.fixed6.kpn.net) (Ping timeout: 250 seconds)
[22:43:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[22:44:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:45:13] *** Joins: phenom (~primus@user/phenom)
[22:46:11] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-d52a-96ed-4a77-faed.fixed6.kpn.net)
[22:47:48] <re101-birman-62> OnlineCop..need another help
[22:47:55] <OnlineCop> Sure.
[22:48:40] <re101-birman-62> In the same example https://regex101.com/r/tvLsZO/1
[22:49:56] <OnlineCop> re101-birman-62: What regex tool are you using, first of all? Command-line? A programming language? Just regex101?
[22:50:02] <re101-birman-62> I also want to extract just the "Azure_ActiveDirectory" after the $ sign. So it should be like "https://manage.office.com/api/v1.0/006c1e48-e342-47e9-ab5d-0dd9ff89bd96/activity/feed/audit/Azure-ActiveDirectory" without the numbers and anything before that
[22:50:24] <re101-birman-62> Regex101...its for Splunk . So PCRE
[22:50:25] <re101-birman-62> |
[22:53:09] <OnlineCop> When there's unwanted text between two points that you want to keep, you just have to use capture groups to get them.
[22:53:45] <re101-birman-62> So I used this in my SPlunk SPL (?P<match>https://man\S*?/feed/[^\s/]*/)
[22:53:48] <OnlineCop> That being said, how do you know when one "unwanted" group ends and the next starts? Or will it always be the literal text "AzureActiveDirectory"?
[22:54:41] <re101-birman-62> and it works...but I just to know if that event has "Azure_ActiveDirectory" in it after the "audit"
[22:55:22] <OnlineCop> For example, if after /feed/ you have "audit", do you want to match until you find that variable name (maybe case-insensitive) after a '$' character?
[22:56:46] <re101-birman-62> yes
[22:58:40] <OnlineCop> Which one do you want to keep? $audit_azureactivedirectory or $Audit_AzureActiveDirectory ?
[22:58:55] <OnlineCop> And, how do you want to tell the regex pattern which one?
[22:58:58] <re101-birman-62> anythingh works
[22:59:18] <re101-birman-62> as long as there is "azure and activedirectory"
[22:59:40] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:01:17] <OnlineCop> https://regex101.com/r/tvLsZO/2 is one way you could do it.
[23:01:52] <OnlineCop> $2 contains 'audit', $3 contains 'azureactivedriectory'
[23:04:42] <OnlineCop> https://regex101.com/r/tvLsZO/3 could grab the "last" value that it sees where it starts with '$audit_'. In this case, it will give you the uppercase version.
[23:05:49] <OnlineCop> In the off chance that it can't find "audit_" and the next value, do you want it to still match the URL up to that point? https://regex101.com/r/tvLsZO/4
[23:06:30] <OnlineCop> You can toggle that by removing the '?' at the very end.
[23:08:59] <re101-birman-62> I think that will work
[23:10:07] <OnlineCop> I'm not entirely sure what you're after here, so I'm just going off of what requirements you're giving. And coming up with a few "what about this?" scenarios. You can always choose any of these different revisions for what works best for you.
[23:15:00] <re101-birman-62> No this is perfect. So basically Im after generating an output of unique sources which are logging into an Index against a sourcetype . And its tough to get Unique values of sources, since the sources are in the same format with just a timestamp change
[23:21:19] <OnlineCop> Do you need to capture any of the other values on the URL line?
[23:21:57] <OnlineCop> If the order of those other values can change, you can usually handle that by using capture groups inside a (?=...) lookahead.
[23:23:24] <re101-birman-62> yes the order doesnt matter
[23:24:56] <OnlineCop> If, for example, you wanted to capture another value (like that '$emea0014' as a simple example), but it could come before OR after the '$Audit_' text, a capture-in-a-lookahead approach would be the best way to handle it
[23:49:44] *** Quits: M3r (~M3r@user/M3r) (Ping timeout: 272 seconds)
