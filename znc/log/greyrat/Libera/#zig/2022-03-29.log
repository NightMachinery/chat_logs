[00:00:30] *** Joins: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:05:54] *** Quits: jemius (~imperator@200116b82dd944002575bcd6ac418d09.dip.versatel-1u1.de) (Remote host closed the connection)
[00:10:00] *** Joins: frmdstryr (~jrm@172.58.190.203)
[00:12:34] *** Quits: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[00:16:27] *** Joins: zy (~cc@user/zy)
[00:21:26] *** Joins: squeek502 (~squeek502@user/squeek502)
[00:21:53] *** Joins: livoreno (~livoreno@user/notzmv)
[00:22:26] <frmdstryr> Anyone know what's going on with this error https://zig.godbolt.org/z/b4sWjnr1W
[00:22:56] <frmdstryr> I can get it to work if I embed each "Sources" in a struct and then extract the enum
[00:25:54] *** Joins: duds- (~duds-@user/duds)
[00:26:48] <frmdstryr> Edit: Sorry it should be this https://zig.godbolt.org/z/jsrb3f684
[00:26:48] *** Joins: kenran (~kenran@200116b82baeab0017258e66ff76ea55.dip.versatel-1u1.de)
[00:27:28] <frmdstryr> The working version is this https://zig.godbolt.org/z/1T1xEfvM8
[00:28:17] <frmdstryr> It's evaulating enum values from the wrong branch 
[00:35:14] <frmdstryr> Oh, it's #3778 ... 
[00:38:05] *** Joins: jemius (~imperator@200116b82dd944002575bcd6ac418d09.dip.versatel-1u1.de)
[00:41:31] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1310-44.w92-141.abo.wanadoo.fr)
[00:42:33] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[00:42:58] *** Quits: Arw (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[00:44:52] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 272 seconds)
[00:50:13] *** Joins: duds- (~duds-@user/duds)
[01:31:03] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:51:11] *** Quits: kenran (~kenran@200116b82baeab0017258e66ff76ea55.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[02:18:37] *** Joins: thomas_adam (sid508215@fvwm/developer)
[02:23:37] *** Quits: jemius (~imperator@200116b82dd944002575bcd6ac418d09.dip.versatel-1u1.de) (Quit: Leaving)
[02:25:34] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[02:40:38] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[02:47:31] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[02:58:07] *** Quits: zy (~cc@user/zy) (Ping timeout: 260 seconds)
[02:58:11] *** Joins: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com)
[02:59:08] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[03:07:32] *** Joins: jtm (~jtm@user/jtm)
[03:35:25] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 250 seconds)
[03:40:32] *** Joins: breavyn (~breavyn@user/breavyn)
[03:41:34] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[03:42:30] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[03:52:44] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[04:11:43] *** Quits: rgrinberg (~textual@177.248.148.38) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:28:35] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a3d9:5253:a1a8:660f) (Ping timeout: 252 seconds)
[04:43:49] *** Joins: chgr54 (~chgr@static.152.235.203.116.clients.your-server.de)
[04:44:22] *** Quits: chgr5 (~chgr@static.152.235.203.116.clients.your-server.de) (Read error: Connection reset by peer)
[04:47:36] *** Quits: Ristovski (~Ristovski@hellomouse/perf/ristovski) (Excess Flood)
[04:49:15] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 240 seconds)
[04:49:57] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[04:50:09] *** Quits: Piraty (~irc@user/piraty) (Ping timeout: 240 seconds)
[04:51:07] *** Joins: Ristovski (~Ristovski@hellomouse/perf/ristovski)
[04:51:58] *** Joins: Piraty (~irc@user/piraty)
[04:59:47] *** Joins: moog (~moog@107.126.53.102)
[05:01:27] *** Joins: moog_ (~moog@98.97.82.178)
[05:04:07] *** Quits: moog (~moog@107.126.53.102) (Ping timeout: 246 seconds)
[05:08:08] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f)
[05:11:51] *** Quits: shurane (sid132556@2a03:5180:f:1::2:5cc) (Ping timeout: 250 seconds)
[05:11:51] *** Quits: ysh (sid6017@id-6017.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[05:13:28] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[05:13:36] *** Joins: ysh (sid6017@id-6017.ilkley.irccloud.com)
[05:26:34] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[05:36:11] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:2ad9:1465:5fb9:8672)
[05:39:43] *** Quits: phroa (~phroa@user/phroa) (Quit: `)
[05:40:01] *** Joins: phroa (~phroa@user/phroa)
[05:42:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[05:51:32] *** Joins: neurocyte1 (~neurocyte@user/neurocyte)
[05:53:07] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:53:50] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:53:50] *** neurocyte1 is now known as neurocyte
[05:54:55] *** Joins: rgrinberg (~textual@177.248.146.16)
[05:59:42] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:2ad9:1465:5fb9:8672) (Ping timeout: 260 seconds)
[06:00:31] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:203:625:d7c4:9b0)
[06:18:53] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[06:31:56] *** Quits: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com) (Ping timeout: 272 seconds)
[06:56:02] *** Quits: rgrinberg (~textual@177.248.146.16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:05:55] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 246 seconds)
[07:29:41] *** Joins: rgrinberg (~textual@177.248.146.16)
[07:30:33] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[07:30:52] *** Quits: skipwich_ (~skipwich@user/skipwich) (Quit: DISCONNECT)
[07:32:10] *** Joins: skipwich (~skipwich@user/skipwich)
[08:00:18] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:203:625:d7c4:9b0) (Ping timeout: 260 seconds)
[08:01:54] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:04:22] *** Quits: Graham31515 (~Graham@user/Graham31415) (Read error: Connection reset by peer)
[08:04:28] *** Joins: Graham31415 (~Graham@user/Graham31415)
[08:11:22] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 272 seconds)
[08:21:24] *** Quits: kotto (~kotto@2001:8a0:ee37:f500:7e7a:91ff:fe7a:30fa) (Ping timeout: 240 seconds)
[08:21:50] *** Joins: kotto (~kotto@188.250.182.133)
[08:27:59] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f) (Ping timeout: 260 seconds)
[09:25:00] *** Joins: tsmanner_ (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net)
[09:25:01] *** Quits: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net) (Ping timeout: 240 seconds)
[09:40:40] *** Quits: anb1 (~anb@user/anb) (Ping timeout: 272 seconds)
[10:07:28] *** Quits: skipwich (~skipwich@user/skipwich) (Ping timeout: 260 seconds)
[10:09:41] *** Joins: skipwich (~skipwich@user/skipwich)
[10:12:55] *** Quits: mikezackles__ (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[10:35:16] *** Joins: anb1 (~anb@user/anb)
[10:37:58] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[11:10:27] *** Quits: rgrinberg (~textual@177.248.146.16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:29:31] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 260 seconds)
[11:38:13] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Remote host closed the connection)
[11:38:28] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[11:55:00] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[11:56:36] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 245 seconds)
[11:59:37] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[12:02:09] *** Joins: neurocyte8 (~neurocyte@user/neurocyte)
[12:04:03] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[12:04:04] *** neurocyte8 is now known as neurocyte
[12:05:12] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:17:46] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:19:23] *** Joins: zy (~cc@user/zy)
[12:24:27] *** Joins: zy_ (~cc@user/zy)
[12:24:32] *** Quits: zy (~cc@user/zy) (Ping timeout: 260 seconds)
[12:35:45] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:36:27] *** Joins: bindu (~bindu@user/bindu)
[12:45:59] *** Joins: xd1le (~xd1le@user/xd1le)
[12:51:23] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 260 seconds)
[13:07:08] *** Quits: vendortrash (~abs@gate-hacon.hacon.de) (Quit: leaving)
[13:16:52] *** Joins: vendortrash (~abs@gate-hacon.hacon.de)
[13:17:29] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[13:29:53] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[13:31:47] *** Joins: moog (~moog@98.97.82.178)
[13:33:43] *** Quits: moog_ (~moog@98.97.82.178) (Ping timeout: 246 seconds)
[13:35:41] *** Joins: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net)
[13:35:47] <lisbeths> are there some benchmarks for zig?
[13:36:29] <plumeus> Pretty vague question
[13:37:05] <plumeus> probably not what you're asking for, but https://ziglang.org/perf/
[13:39:12] <lisbeths>  This is some good data pertaining to my questoin I just don't know how to read it
[13:40:16] <lisbeths> What I should ask is: does it look like zig will catch up to rust in speed?
[13:40:50] <lisbeths> afaik the use of a borrow checker should allow for this
[13:41:13] <plumeus> That's begging the question that Zig is slower than Rust, which I don't think it is? Not that I've benchmarked.
[13:41:41] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:41:54] <lisbeths> I am just factoring in the idea that the rust compiler has more developers working on it so it may have more optimizations
[13:42:44] <lisbeths> just as an outside of rust I am wondering if it is promising that rust will at minimum match rust if not surprass
[13:43:07] <plumeus> I presume you meant "Zig will at minimum"
[13:43:17] <luuk> You're going to have to be more specific in what you're asking. Is Zig faster in what? Compilation speed, runtime speed?
[13:43:31] <plumeus> Rust compile speeds, lol
[13:43:32] <lisbeths> runtime speed for common benchmarks
[13:43:40] <lisbeths> lets say sorting is a common benchmark
[13:43:49] <plumeus> Zig's goal should allow it to be faster than Rust.
[13:43:57] <lisbeths> this is good news
[13:44:00] <Earnestly> https://github.com/nordlow/compiler-benchmark
[13:44:04] <Earnestly> Includes zig
[13:44:10] <luuk> I don't think there's any catching up to do.
[13:44:27] <Earnestly> (Bear in mind that the README is probably out of date, and may not account for stage2)
[13:44:48] <luuk> It doesn't account for stage2. It's also a silly benchmark
[13:45:10] <lisbeths> is zig suitable for microcontrollers and RTOS?
[13:45:14] <Earnestly> Aren't they all
[13:45:29] <luuk> Earnestly: Haha yeah you're right
[13:45:30] <Earnestly> lisbeths: In theory yes
[13:45:36] <plumeus> Zig optimizes for UB and such whilst obviously having more advantages than Rust at allocator freedom and such. I believe Andrew talked a bit on this in a podcast.
[13:45:42] <Earnestly> lisbeths: It started as 'C without the bad bits'
[13:45:55] <ikskuh> lisbeths: yes, very much so!
[13:46:04] <lisbeths> I think of it as rust without object oriented
[13:46:20] <Earnestly> SO it occupies the "low level programming language" niche.  Rust initially wasn't going to be a systems language, but a high level GC'd one
[13:46:28] <Earnestly> rust isn't OO
[13:46:51] <Earnestly> (To the degree 'OO' can even be defined)
[13:46:57] <lisbeths> when I explored rust I got the feeling there were alot of parts to it and it felt like a bloated language with too many features
[13:47:00] <plumeus> lisbeths, the consensus in the Zig community seems to be that "Zig aims for better C, Rust aims for better C++".
[13:47:39] <lisbeths> rust and zig are also the fastest language that are memory safe
[13:47:49] <lisbeths> thats what sells it to industralists
[13:47:50] <plumeus> I think Zig is supposed to have simple cases when it can optimize for more performance than Rust and C.
[13:47:54] <plumeus> Zig isn't memory safe
[13:48:12] <Earnestly> Rust's standard library unfortunately went the way of boost, mostly because those working on it came from C++
[13:48:18] <plumeus> Zig provides a lot of runtime safety measures in order to reduce footguns, but it's not provably safe.
[13:48:22] <Earnestly> By boost, I mean in design
[13:48:52] <Earnestly> (iow, lots of methods instead of freestanding functions that explicitly take structures as argument)
[13:48:54] <lisbeths> is zig as memory safe as java is?
[13:49:02] <plumeus> So, tl;dr, Zig is supposed to technically be able to surpass Rust/C perf, I think.
[13:49:08] <Earnestly> lisbeths: There's been no proof done on that
[13:49:13] <Earnestly> So probably not
[13:49:25] <lisbeths> isn't rust memory safe?
[13:49:26] <Earnestly> (And it has escape hatches)
[13:49:33] <plumeus> In practice, the difference should be negligible and I doubt it loses much to Rust as-is.
[13:49:39] <plumeus> Rust is memory safe.
[13:49:52] <plumeus> Zig isn't anywhere as near as Java, which has a GC.
[13:50:08] <Earnestly> lisbeths: There's been no proof done yet for zig, whereas rust has had such work done
[13:50:33] <plumeus> Memory safety isn't one of Zig's primary goals.
[13:50:59] <lisbeths> well then speed and resource usage should be your only primary goals
[13:51:40] <plumeus> And the ergonomics of writing, ease of maintenance, cross-compilation, and quite a bit more
[13:52:01] <lisbeths> llvm kinda solves cross compilation
[13:52:25] <plumeus> LLVM isn't some magic cure
[13:52:55] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 250 seconds)
[13:52:56] <plumeus> good luck trying to port Rust to some target that LLVM supports, but Rust currently doesn't. And try doing it for multiple libcs. I would presume it's hellish
[13:53:38] <lisbeths> how complex is the zig compiler compared to gcc?
[13:54:10] <ikskuh> this is a good question...
[13:54:29] <plumeus> Worth reading regarding Zig's safety: https://github.com/ziglang/zig/projects/3
[13:54:39] <ikskuh> Stage 2 currently has 185_283 lines of zig
[13:54:47] <plumeus> Note, that link isn't limited to info on memory safety
[13:54:49] <ikskuh> and 80kLOC C++
[13:55:29] <plumeus> I personally don't know anything about GCC's complexity, and I've not tried writing my own C compiler for example but
[13:56:15] <plumeus> I guess stuff worth looking into would be Vexu's Arocc (C compiler in Zig) and https://mitchellh.com/zig, which explains how the self-hosted Zig compiler works.
[13:56:24] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl)
[13:57:11] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl) (Client Quit)
[13:57:28] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl)
[13:57:44] <lisbeths> is zig able to be just-in time compiled and run as a shell one line at a time?
[13:57:48] <plumeus> ikskuh, a tough call on whether writing/reading/maintaining 2x more Zig code is easier than C
[13:58:10] <plumeus> I think stage2 has some interpreter mode
[13:58:13] <ikskuh> plumeus: wdym?
[13:58:39] <plumeus> oh, nvm, misread
[13:58:52] <ikskuh> lisbeths: no JIT really, similar to C/C++
[13:58:58] <plumeus> I thought it said 80kLOC of C for GCC... idk what I was thinking
[13:59:01] <ikskuh> you can probably JIT subsets of the language, but not all of it
[13:59:35] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 256 seconds)
[14:00:03] <plumeus> https://github.com/ziglang/zig/issues/596
[14:00:19] <plumeus> Never used it so I'm not aware how complete this feature is
[14:00:41] <ikskuh> afaik it's not implemented yet
[14:00:55] <luuk> --watch is implemented, but it's pretty minimal atm
[14:01:07] <plumeus> "The other thing I want to point out is that we could have a zig repl that behaves like everything is in a giant `comptime` block. So certain things wouldn't be allowed, like syscalls, external function calls, and pointer reinterpreting."
[14:02:03] <luuk> The compiler is fast enough to not require that :) It's currently implemented by using incremental compilation. So only the changes you apply (just like a repl really) are being compiled.
[14:02:36] <ikskuh> yeah, good point. we can just recompile everything :D
[14:02:39] <plumeus> Who needs JIT when stage2 can compile trivial programs faster than Python can interpret files? /s
[14:03:08] <plumeus> And this is without factoring for incremental compilation
[14:03:26] <plumeus> https://nitter.net/andy_kelley/status/1483677253682675713#m
[14:03:29] <plumeus> oh, CPython
[14:04:43] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[14:04:55] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[14:05:17] *** Joins: rLapz (~rLapz@user/rLapz)
[14:06:07] <lisbeths> thanks
[14:06:14] *** Parts: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net) (ERC (IRC client for Emacs 26.3))
[14:06:37] *** Quits: anb1 (~anb@user/anb) (Ping timeout: 246 seconds)
[14:32:30] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[14:51:46] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:61e3:f551:d48e:e2b3)
[15:12:37] *** Quits: q66 (~q66@q66.moe) (Remote host closed the connection)
[15:27:21] *** Joins: hugbubby (~hugbubby@49.207.215.73)
[15:28:20] <hugbubby> hi; how do you allocate memory for a c pointer in zig? I'm interoperating with a C crypto library and need to pass private keys as c pointers.
[15:28:50] <hugbubby> Trying to create bindings and would prefer to be able to use regular zig []u8 arrays everywhere else and only deal with the c pointer stuff internally
[15:39:38] <ikskuh> hugbubby: zig pointers and c pointers are equivalent
[15:39:55] <ikskuh> zig pointers just have some stricter operations defined
[15:40:30] <ikskuh> a key is probably either "[*]u8" for a dynamically sized key
[15:40:43] <ikskuh> or "*[128]u8" for statically sized keys
[15:40:54] <ikskuh> obviously add a const in there if the keys are const :)
[15:41:46] <hugbubby> ok, but how do I pass those to a C library that expects [*c]u8 pointers and return them as *[32]u8 pointers?
[15:41:54] <hugbubby> I'm just trying to write a function that generates keys for now
[15:42:09] <hugbubby> Do I use @ptrCast?
[15:42:11] <ikskuh> [*c]u8 can accept any mutable zig pointer (not slices)
[15:42:25] <ikskuh> so you can just pass an array pointer for example:
[15:42:34] <ikskuh> var key: [32]u8 = …; foo(&key);
[15:42:52] <ikskuh> important thing is that if the library takes ownership and wants to free the memory itself, you have to allocate the memory with std.c.malloc()
[15:43:57] <ikskuh> for the return type:
[15:44:17] <ikskuh> slice the C pointer:
[15:44:27] <ikskuh> var retval: [*c]u8 = ...;
[15:44:33] <ikskuh> var slice = retval[0..32];
[15:44:58] <hugbubby> Ok. Thanks for the tip about mutability. Now I understand what to do.
[15:45:18] <ikskuh> wonderful! \o/
[15:48:45] <Levy[m]> luuk: it would still be nice to have a comptime-only repl to drop into to explore the current state of compilation when writing comptime code
[15:50:54] <hugbubby> This is probably a quesiton answered in the docs somewhere, but how do you dereference and assign a global pointer? LIke if I have var i: ?*int = null somewhere, and I'm allocating memory for it, how do I then *i = 5?
[15:51:06] <hugbubby> ah wait found it
[15:51:07] <hugbubby> srry
[15:58:47] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:61e3:f551:d48e:e2b3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:59:58] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[16:01:07] *** Joins: q66 (~q66@q66.moe)
[16:01:28] <hugbubby> How do you allocate memory for C structs? I'm trying to use create and the compiler is returning an error that says it can't do it.
[16:02:35] <ifreund> showing us the error might help us help you
[16:03:55] <hugbubby> https://pastebin.com/TRqV64ui
[16:12:32] <ifreund> hugbubby: from a quick glance at the header here https://github.com/bitcoin-core/secp256k1/blob/master/include/secp256k1.h secp256k1_context seems to be an opaque type
[16:12:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[16:12:50] <ifreund> it seems that you're supposed to create it using the secp256k1_context_create() function
[16:13:08] *** Joins: BratishkaErik (~bratishka@37.99.44.0)
[16:13:55] <ifreund> the size of the struct isn't exposed in the C header, so code outside that library can't allocate it as it would have no idea how much memory to allocate
[16:15:53] <ifreund> andrewrk: sent a zig-bootstrap PR with a realtively important zlib bugfix update
[16:17:19] <ifreund> the bug fix seems to have been in zlib master branch for years already but no release was tagged until someone rediscovered the bug in the wild a few days ago only to find that it had already been fixed but nearly everyone was still using the latest zlib release that didn't include the fix :/
[16:19:57] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:61e3:f551:d48e:e2b3)
[16:40:16] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[16:40:58] *** Joins: rLapz (~rLapz@user/rLapz)
[16:44:59] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[16:50:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:58:50] <tleydxdy[m]> in short zlib is nearly unmaintained?
[17:08:25] <leah2> there's a new release less than a day old
[17:10:07] *** Quits: slowjo (~slowjo@sourcehut/user/slowjo) (Remote host closed the connection)
[17:10:44] *** Joins: slowjo (~slowjo@sourcehut/user/slowjo)
[17:19:03] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:9dda:4bff:cdb5:90b8)
[17:42:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:44:32] *** Quits: af (~af@awalgarg.me) (Ping timeout: 272 seconds)
[17:45:53] *** Quits: slowjo (~slowjo@sourcehut/user/slowjo) (Remote host closed the connection)
[17:46:31] *** Joins: slowjo (~slowjo@sourcehut/user/slowjo)
[17:46:34] *** Joins: af (~af@awalgarg.me)
[17:50:03] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[17:58:13] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:59:45] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[18:00:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:06:23] *** Quits: slowjo (~slowjo@sourcehut/user/slowjo) (Remote host closed the connection)
[18:06:51] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[18:07:00] *** Joins: slowjo (~slowjo@sourcehut/user/slowjo)
[18:31:21] *** Joins: arkurious (~arkurious@user/arkurious)
[18:32:28] *** Quits: acarrico (~acarrico@dhcp-68-142-48-19.greenmountainaccess.net) (Ping timeout: 268 seconds)
[18:38:33] *** Joins: lumo_e (~enrico@151.29.53.201)
[18:56:20] *** Joins: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:04:07] <tleydxdy[m]> nearly
[19:04:14] *** Quits: lumo_e (~enrico@151.29.53.201) (Remote host closed the connection)
[19:17:02] <ifreund> one could also say that the code needs nearly no maintenance
[19:18:02] *** Joins: lumo_e (~enrico@151.29.53.201)
[19:23:35] <bgiannan> do we have some kind of badge for zig to put in READMEs ?
[19:23:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[19:30:30] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:37:43] *** Joins: mikezackles__ (~mikezackl@gateway/tor-sasl/mikezackles)
[19:46:28] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[19:55:00] *** Quits: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[19:58:57] *** Joins: rgrinberg (~textual@177.248.146.16)
[19:59:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:00:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[20:01:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:09:38] *** Joins: acarrico (~acarrico@dhcp-68-142-48-19.greenmountainaccess.net)
[20:25:35] *** Quits: rgrinberg (~textual@177.248.146.16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:29:53] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[20:30:51] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[20:44:51] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Ping timeout: 252 seconds)
[20:47:16] *** Joins: rgrinberg (~textual@2806:102e:18:79a2:88b9:584f:14c:c37e)
[20:47:17] *** Joins: anb1 (~anb@user/anb)
[20:48:24] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:48:39] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[20:49:25] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[21:02:32] *** Joins: xackus (~xackus@185.15.0.3)
[21:06:29] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[21:29:09] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[21:34:16] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[21:34:16] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[21:34:16] *** Joins: tane (~tane@user/tane)
[21:45:26] *** Joins: jemius (~imperator@200116b82d54ae00381e967f014f4f3d.dip.versatel-1u1.de)
[21:48:28] *** Joins: ianic (~ianic@93-136-8-183.adsl.net.t-com.hr)
[21:49:03] *** Quits: ianic (~ianic@93-136-8-183.adsl.net.t-com.hr) (Client Quit)
[21:51:10] *** Joins: ATR (~ATR@37.171.114.16)
[21:51:38] *** Parts: ATR (~ATR@37.171.114.16) ()
[22:02:30] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[22:03:31] <tleydxdy[m]> <ifreund> "one could also say that the code..." <- in that case after you fix some bug you would just do a release right? Since you expect these to be infrequent
[22:08:47] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Quit: Leaving)
[22:09:02] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:09:36] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:09:48] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:10:38] *** Joins: phaleth (~user@user/phaleth)
[22:11:11] *** Joins: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:11:43] *** Quits: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:12:01] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Client Quit)
[22:12:12] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[22:12:15] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:13:51] *** Joins: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:13:51] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Client Quit)
[22:13:53] *** Quits: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:15:30] <haze> bgiannan did you ever get an answer?
[22:44:33] *** Quits: rgrinberg (~textual@2806:102e:18:79a2:88b9:584f:14c:c37e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:29] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 252 seconds)
[23:05:17] *** Quits: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de) (Quit: left Libera)
[23:06:07] *** Joins: Guest47 (~Guest47@50.46.100.80)
[23:06:22] *** Joins: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de)
[23:08:54] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[23:29:25] *** Quits: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de) (Quit: left Libera)
[23:30:46] *** Joins: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de)
[23:34:17] *** Quits: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de) (Client Quit)
[23:35:47] *** Joins: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:36:11] *** Joins: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de)
[23:48:08] *** zy_ is now known as zy
[23:48:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:49:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:50:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:50:18] <zy> build/zig build test-std -Dskip-release -Dskip-non-native 
[23:50:42] <zy> ^ Running that on linux is usually without libc. Can I force libc use (wanna test pthreads)
[23:50:57] <zy> I though I'd used -lc in the past, but that doesn't seem to work here
[23:58:07] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[23:58:14] *** Joins: neurocyte8 (~neurocyte@user/neurocyte)
[23:58:59] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
