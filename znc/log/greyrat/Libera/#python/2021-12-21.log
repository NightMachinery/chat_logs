[00:00:02] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[00:00:04] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[00:00:07] <teut> lots of possibilities of error are there
[00:00:22] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[00:01:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:01:26] <Helenah> SnoopJ, Ah. :)
[00:02:24] <aniketgm> why are people obsessed with rich, there are other nicer packages than that. just a few days back, nedbat had some issue with it.
[00:02:31] *** Joins: Adridri (~Adridri@user/Adridri)
[00:03:38] <Helenah> aniketgm, rich?
[00:04:48] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[00:04:51] *** Quits: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:05:21] *** Joins: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net)
[00:05:35] *** Joins: jay-m1261 (~jay-m@129.0.204.223)
[00:05:47] *** Quits: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:07:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:09:36] <novapy> Helenah: rich is great for building tuis, I have used it, but it may not create quite the ui you would get with ncurses, and you would have to clear the screen  each time to update, rather than using ncurses refresh buffer thing. Also, rich really doesn't have the same window layout ass rich
[00:09:45] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:10:03] <Helenah> Oh.
[00:10:09] <novapy> forgive the accidental typo/language
[00:10:25] <Helenah> Sure. :)
[00:10:56] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[00:11:08] *** Quits: jay-m1261 (~jay-m@129.0.204.223) (Ping timeout: 256 seconds)
[00:11:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:11:51] *** Parts: dalcde (dec41@pip.srcf.societies.cam.ac.uk) ()
[00:12:00] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:12:13] <aniketgm> Helenah: yeah, what novapy said. and more details here: https://github.com/willmcgugan/rich
[00:13:02] <Helenah> aniketgm, I've never heard of rich, I didn't know that's what was meant by rich.
[00:13:51] <aniketgm> hmm. well now you know..
[00:14:08] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[00:14:13] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[00:14:34] <Helenah> Yeah, I just wanted a simple input and a simple output buffer like what weechat/irssi has and the input to be one line like weechat/irssi.
[00:14:49] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[00:16:28] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[00:17:13] *** Quits: led_belly_ (~led_belly@196.240.57.117) (Ping timeout: 268 seconds)
[00:17:58] *** Joins: cjb (~cjb@user/cjb)
[00:18:43] <pflanze> Hi. I wrote a simple library for someone who needed a way to detect which kind of line endings a text file uses. They are now actually using that library directly, and asked me whether I'd upload it to PyPi. I don't have much Python experience and wanted to ask you for your opinion.
[00:18:57] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e) (Ping timeout: 256 seconds)
[00:19:07] <pflanze> Is (a) that useful at all (am I reinventing the wheel)? (b) Is this sensible code, any feedback?: , and put it up at https://github.com/pflanze/python-crlf
[00:19:23] <pflanze> (c) is there a recipe or list of recommendations for packaging?
[00:19:26] <Helenah> Like I wanted to receive data to the on the console regardless of if input() or in my case write() is called.
[00:20:02] *** Quits: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:20:16] *** Joins: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net)
[00:20:27] <Helenah> pflanze, Reinventing the wheel isn't always a bad thing, it depends on what you want.
[00:20:54] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[00:21:00] <Helenah> Most cases it's not necessary though but I reinvented argparse because none of the argument parser libraries would do what i wanted.
[00:21:09] <pflanze> I tried to look for existing libraries around newline detection but couldn't find any, but maybe that's just my searching inexperience on PyPi.
[00:22:06] <pflanze> What was needed here was, give a file path and get back whether the file uses CR, CRLF, LF, no line ending at all, or is mixing them.
[00:22:31] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[00:22:45] <pflanze> And not read the whole file into process memory (i.e. just stream it, although it has to read the whole file anyway to detect whether it's mixed or uniform).
[00:22:49] <aphysically> jinsun: do you believe this should type check? https://bpa.st/BSUA
[00:22:57] *** Joins: led_belly (~led_belly@196.240.57.116)
[00:23:00] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:23:13] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:23:15] <pflanze> If I'm to upload it, what package name would you recommend?
[00:23:52] *** Quits: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:23:58] <Helenah> pflanze, You do realise that a newline is simply "\n", right? Why not check with string.endswith('\n')?
[00:24:30] *** Joins: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net)
[00:24:32] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[00:24:33] <pflanze> I should have said "around *line separator* detection"
[00:24:55] <Helenah> Oh.
[00:25:07] *** Quits: teut (~teut@2401:4900:1c69:421b:556e:1fee:c39d:df92) (Quit: Client closed)
[00:25:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:25:34] <Helenah> pflanze, You mean like...
[00:25:40] <Helenah> Example:
[00:25:43] <Helenah> Line 1
[00:25:44] <Helenah>  
[00:25:46] <Helenah> Line 3
[00:25:48] <pflanze> There are a few gotchas, which is why I had to help the person: (1) not read everything into RAM at once, (2) not let Python do line separator auto-conversion since that foils your own attempt, (3) *still* let Python do char set encoding conversion, since otherwise this breaks in anything except ascii and utf-8
[00:25:48] <Helenah> ?
[00:25:59] <Helenah> Line 2 would simply be a newline.
[00:26:49] <pflanze> What I mean, is the text file coming from Windows (CRLF), a Unix (LF), or an old Mac (or Atari ST? or some other machines) (CR).
[00:27:13] <Helenah> Yes it would be \r\n on Windows for some strange reason.
[00:27:43] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:27:57] <pflanze> Also, gotcha (4), file has CRLF in some places but just LF or CR in others.
[00:27:58] <Helenah> Makes me feel like Microsoft felt like computers are typewriters.
[00:28:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:28:14] <Helenah> Ah
[00:28:36] <aniketgm> Helenah: Windows (DOS) and Unix have different line endings inside a file,
[00:28:48] <Helenah> aniketgm, Yes but I never figured out why.
[00:28:59] <Helenah> The IRC protocol does the same thing as Windows.
[00:29:12] <aphysically> oh no
[00:29:26] <phy1729> In a sense CR LF makese sene as CR returns you to column 1 and NL scrolls the screen one line
[00:29:28] <aniketgm> because MS had to some up with some shit, so as to not look being copied.
[00:29:35] <aniketgm> *come up
[00:29:55] *** Quits: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:30:00] <aphysically> you can use arguments in lambdas by keyword?!
[00:30:07] <Helenah> phy1729, Yes \r would return, but \r\n sounds weird as would return and then newline.
[00:30:30] <pflanze> Wikipedia has a page about it and explains the history well.
[00:30:31] <Helenah> I find the same result as doing just \n but without returning first.
[00:30:39] <Helenah> aniketgm, Agreed.
[00:31:00] <Helenah> I remember seeing a Linux message "This is NOT a typewriter". lol
[00:31:11] *** Joins: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net)
[00:31:11] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[00:31:17] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:31:31] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:31:59] *** Quits: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:32:34] <Helenah> aniketgm, I don't understand how just simply doing "\n" can be seen as copying.
[00:33:06] <Helenah> That's like saying the IRC protocol copied DOS.
[00:33:44] <Helenah> Oh dear I'm getting into an off-topic rant.
[00:34:06] <Helenah> I'm in #python-offtopic for such discussion.
[00:34:10] <jessicara> crlf sounds more like a printer thing than just a typewriter thing
[00:34:33] <Helenah> jessicara, Computers aren't printers though, modern day printers are computers.
[00:34:43] <jessicara> one of many ways to get output
[00:34:58] <jessicara> but yeah, could argue about the usefulness of having either all day i guess
[00:35:27] <jessicara> something which end up doing to handle this is splitting input on both cr and lf, ignore empty lines
[00:35:27] <Helenah> KISS (Keep It Simple Stupid), DOTDIG (Does One Thing, Does It Good), how difficult is that?!
[00:36:25] <Helenah> Sorry but the stupidity just baffles me.
[00:36:56] <Helenah> I wonder if the kindle thinks it's a sheet of paper and tries to emulate a printer also? LOL
[00:37:46] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[00:37:54] <Helenah> jessicara, If one needs to ignore empties lines then ignore empty lines, don't ignore empty lines if there definitely won't be any or you don't need to.
[00:38:09] <Helenah> KISS
[00:38:12] <jessicara> there is situations this is not good yeah
[00:38:21] <jessicara> in the end users will input in whatever format they will
[00:38:21] <Helenah> But Windows does it ALL the time!
[00:38:42] <SnoopJ> Helenah, the reason is because carriage return and line feed meant different things in the teletype era, and Windows and Linux took differing philosophies about how to bring that to the world of digital computers.
[00:39:22] <SnoopJ> err, not "digital computers" since teletypes were certainly UIs for those, but yea, it's just a difference in aesthetics based on whether you do or don't care about CR
[00:39:26] <Helenah> Maybe this explains why I switched from Windows XP in 2005 to GNU/Linux due to performance issues because Microsnot refuse to keep things simple therefore adding in extra unnecessary redundant processes in order to look "original" and not be seen to have "copied".
[00:39:33] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[00:39:55] <SnoopJ> (unsurprisingly, CR on a mechanical printer returns the carriage, and LF feeds a line)
[00:40:01] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[00:40:13] *** Quits: ideopathic (~ideopathi@2600:1702:8b0:a500:4842:e601:8565:21a6) (Ping timeout: 240 seconds)
[00:40:14] <Helenah> This talk got me banned from #windows by the way because they all got butthurt, couldn't handle the truth.
[00:40:24] <Swayze> seems off topic
[00:40:32] <Helenah> It's good to know you guys are calm about it but yes I'll go to -offtopic
[00:41:03] *** Quits: guardian (~guardian@planet-d.net) (Remote host closed the connection)
[00:41:50] *** Joins: guardian (~guardian@planet-d.net)
[00:42:17] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[00:42:37] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[00:42:48] <evidlo> is there a compact form of '{:<20}'.format('label:') for string literals using f strings?
[00:42:59] <guardian> hello, I have a list of dict: [{path, modified_date, ...}] -- what's a pythonic way of deduplicating by path and keeping the most recent element (based on the modified_date) key
[00:43:36] <guardian> I can write it with a "ugly" loopp but I'm curious about something more pythonic / oneliner
[00:43:37] <SnoopJ> evidlo, f"{'label:':<20}" is the direct equivalent
[00:43:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:45:15] *** Quits: Adridri (~Adridri@user/Adridri) (Quit: Quit)
[00:46:21] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[00:48:49] *** Joins: delvian (~delvian@41.13.216.28)
[00:49:40] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[00:50:00] <evidlo> guardian: you should just do the most readable thing
[00:51:19] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:51:30] *** Quits: delvian (~delvian@41.13.216.28) (Client Quit)
[00:52:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:53:30] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:53:38] <aphysically> huh, pyright just doesn't understand function signature compatibility between different functions at all
[00:53:42] <aphysically> mypy I mean
[00:53:48] <aphysically> pyright understands it fine but not mypy
[00:53:56] *** Joins: ham5urg (~ham5urg@p200300d16716cd0075042d83e17c5b27.dip0.t-ipconnect.de)
[00:54:53] <aphysically> jinsun: I filed bug https://github.com/python/mypy/issues/11807
[00:55:00] <ham5urg> Which Python-GUI module do you use? I used wxpython but it looks like that new desktops prefer newer modules.
[00:55:23] <aniketgm> ham5urg: tkinter
[00:55:29] <aphysically> fixing this presumably means adding more callable syntax to typed code, but whatever we're getting nice syntax for that soon anyway
[00:56:29] *** Joins: djb27 (~djb27@user/djb27)
[00:56:30] *** Quits: aniketgm (~Aniket@49.36.109.33) (Quit: leaving)
[00:57:45] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:57:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:58:18] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com)
[00:58:34] <hardwire> resolved my tomli issue (tomli 2.0.0 was being brought in to temp venv by setuptools-scm setup_requires)
[00:59:33] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[01:00:05] *** Joins: mspe (~user@tilde.team/user/mspe)
[01:00:22] *** Joins: moogs (~moogs@12.146.254.146)
[01:00:58] *** Joins: Throgkt (~Throgkt@user/throgkt)
[01:01:32] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 240 seconds)
[01:01:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:03:16] *** Joins: plastico (~plastico@neomutt/plastico)
[01:06:25] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: leaving)
[01:06:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:08:56] *** Joins: vladoski (~foo@2001:b07:add:d406:c47e:6cb1:5eea:f682)
[01:09:18] *** Quits: red-bear (~red-bear@2601:642:c000:2c38:41df:21b4:e0e3:e356) (Quit: Client closed)
[01:09:31] *** Joins: rond_ (~rond_@100.42.200.146.dyn.plus.net)
[01:11:12] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[01:11:34] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[01:11:58] *** Joins: Naan (~Naan@user/naan)
[01:12:11] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[01:12:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[01:12:59] *** Quits: majors_ (~majors@user/majors) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[01:13:05] *** Joins: jfhbrook (~josh@ool-4575d53b.dyn.optonline.net)
[01:13:14] *** Joins: grooverman (~grooverma@177.95.12.14)
[01:13:33] *** Quits: rond_ (~rond_@100.42.200.146.dyn.plus.net) (Client Quit)
[01:13:45] <jfhbrook> how's everyone doing today? o/
[01:14:27] *** Joins: fikran (~fikran@user/fikran)
[01:14:47] *** Joins: majors (~majors@user/majors)
[01:14:51] *** Joins: Naan` (~Naan@user/naan)
[01:15:12] <Wulf> jfhbrook: 💉 -> 😴
[01:15:45] <jfhbrook> hell way Wulf !! I'm gettin' my booster tomorrow
[01:16:30] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:16:36] <jfhbrook> wow, weechat kinda owns
[01:16:59] <braxas> can python's trace module be used with pytest
[01:17:06] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:17:25] <Wulf> braxas: to what end?
[01:17:43] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:17:45] <braxas> Wulf: I have two tests, one passes, one fails, but I'm unclear about why it fails
[01:17:51] <braxas> basically an exception gets caught somewhere
[01:17:53] <braxas> but I dunno where
[01:18:12] <Wulf> braxas: pytest should show you a full stack trace already. Perhaps you need to run it with some parameter.
[01:18:31] <braxas> Wulf: okay but the issue is the stack trace is not helpful, because the problem is that there is no exception
[01:18:32] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[01:18:33] <braxas> when one should occur
[01:18:46] <braxas> so it is not easy to say at what point it got lost from no stack trace
[01:18:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:19:05] <braxas> I mean the point where the test fails is that it does not get exception in `with pytest.raises(TypeError)`
[01:19:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:20:17] <jfhbrook> I often run pytest -vvv
[01:20:23] <jfhbrook> just to make it output *everything*
[01:20:34] <jfhbrook> but yeah I do think it's possible to do debugging w/ pytest
[01:21:01] <jfhbrook> I can't tell you how bc I never got any good at ipydb or w/e but I had coworkers doing it in pycharm pretty consistently
[01:21:29] <braxas> wait there is --module for -m trace in 3.8
[01:21:30] <braxas> trying that
[01:21:48] *** Joins: fikran (~fikran@user/fikran)
[01:21:48] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:22:02] *** Joins: delvian (~delvian@41.13.220.245)
[01:22:41] <braxas> oh wow
[01:22:44] <braxas> it actually works kind of
[01:22:54] <braxas> .venv/bin/python3 -m trace --trace --module pytest "test/test_sparql.py::test_custom_eval_exception[list+TypeError]" -v -rA
[01:23:35] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[01:23:49] *** Joins: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net)
[01:24:23] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[01:26:06] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[01:26:07] <jfhbrook> nice
[01:26:21] <Wulf> braxas: coverage together with pytest might help too
[01:26:56] *** Quits: onichomp666 (~onichomp@2806:264:4404:82e6:bd04:9a4c:b437:6db) (Read error: Connection reset by peer)
[01:27:04] *** Quits: djb27 (~djb27@user/djb27) (Ping timeout: 256 seconds)
[01:27:34] *** Joins: onichomp666 (~onichomp@2806:264:4404:82e6:bd04:9a4c:b437:6db)
[01:27:54] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[01:29:18] *** Quits: jfhbrook (~josh@ool-4575d53b.dyn.optonline.net) (Quit: WeeChat 3.3)
[01:30:16] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[01:30:40] *** Quits: delvian (~delvian@41.13.220.245) (Quit: Leaving)
[01:30:41] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:30:43] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[01:30:56] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[01:31:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e)
[01:31:00] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:31:28] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[01:32:01] <braxas> yeah that is actually a good idea also
[01:32:20] <braxas> the trace output works but it is not very helpful, I diffed between failed and succeeded test and there is nothing of use
[01:33:02] <braxas> actually it seems pytest disables tracing somehow maybe
[01:33:30] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[01:36:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:36:42] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[01:37:00] *** Joins: parv (~quass@user/parv)
[01:37:10] *** Joins: oscarplaisant (~oscarplai@pop.92-184-117-95.mobile.abo.orange.fr)
[01:37:32] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[01:37:42] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[01:38:18] *** Joins: vaio (~gary@user/ghost)
[01:38:26] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[01:38:31] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.3)
[01:38:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:39:04] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:41:09] *** Joins: fikran (~fikran@user/fikran)
[01:41:48] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[01:41:53] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:41:56] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[01:42:05] <oscarplaisant> hi there
[01:42:25] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[01:43:11] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[01:44:44] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:44:54] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:45:21] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[01:46:13] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[01:46:30] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[01:47:26] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 245 seconds)
[01:48:04] *** Quits: magla (~gelignite@55d4e80d.access.ecotel.net) (Quit: Stay safe!)
[01:48:06] *** Quits: Payam (~Payam@c-56b0e255.01-402-73746f25.bbcust.telenor.se) (Quit: Leaving)
[01:48:14] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[01:49:13] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:49:46] *** Joins: roped (~lonely_@user/roped)
[01:49:53] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:52:39] <FLHerne> oscarplaisant: Good evening
[01:53:42] <graingert[m]> TIl about https://nedbatchelder.com/blog/201904/startuppy.html
[01:54:20] *** Quits: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr) (Quit: leaving)
[01:54:32] <graingert[m]> nedbat: you could make a .pth package with this in
[01:55:12] <nedbat> graingert[m]: I just saw a tweet about this. is that where you saw it?
[01:55:25] <graingert[m]> Yeah
[01:55:42] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:55:46] <arkanoid> is there any linter capable of tracking down if a function is a pure function or not?
[01:55:46] *** Quits: vladoski (~foo@2001:b07:add:d406:c47e:6cb1:5eea:f682) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:56:23] <nedbat> arkanoid: that sounds impossible in Python.  len(x) could mutate globals, if x wanted to.
[01:56:29] *** Joins: vladoski (~foo@2001:b07:add:d406:c47e:6cb1:5eea:f682)
[01:56:38] <graingert[m]> Is there an implementation of https://www.python.org/dev/peps/pep-0648/ in a .pth package yet?
[01:57:19] <graingert[m]> arkanoid: There was a pure python 2 subset I saw a long time ago but I can't find it anymore
[01:57:20] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[01:58:03] *** Joins: georgios (~georgios@user/georgios)
[01:58:08] <graingert[m]> arkanoid: You totally could but it would have to be as limited as asm.js
[01:59:08] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[01:59:10] *** Joins: cjb (~cjb@user/cjb)
[01:59:10] <graingert[m]> Also every function takes a universe and returns a more disordered universe
[01:59:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:00:52] <nedbat> graingert[m]: so every function is pure! cool!
[02:01:03] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[02:02:29] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[02:02:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:03:32] <phy1729> graingert[m]: "Linear types can change the world!"
[02:03:35] <dba> I have a list of dictionaries and when I loop through this list and modify the dictionary the list get updated as well. why is that so? I only updating the dict not the list
[02:03:57] <phy1729> The list just has a reference to the dictionary objects
[02:04:15] *** Quits: gr1m (~gr1m@193.138.218.215) (Ping timeout: 250 seconds)
[02:04:37] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:04:38] <arkanoid> nedbat: haha
[02:04:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com)
[02:04:48] <arkanoid> python is a mess
[02:04:53] *** Joins: gr1m (~gr1m@193.138.218.223)
[02:05:09] <nedbat> arkanoid: it wasn't meant to do what you want to do :)
[02:05:13] <dba> phy1729, would this apply on any king of objects inside the list. in this use case?
[02:05:35] <phy1729> yes, perhaps you're intersted in copy.deepcopy
[02:06:57] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[02:08:22] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:08:59] <graingert[m]> You can't tidy a mess without making a worse mess
[02:09:25] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:09:33] <graingert[m]> <nedbat> "graingert: so every function..." <- Every function is impure! Warm!
[02:09:58] <arkanoid> main scope is indeed pure
[02:10:07] *** Quits: manti7 (~manti7@185.107.94.249) (Quit: WeeChat 3.3)
[02:11:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e) (Quit: Client closed)
[02:11:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e)
[02:13:38] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[02:13:49] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:3309:181:b75f:82f4) (Ping timeout: 240 seconds)
[02:13:54] *** Joins: stonkey (~stonkey@user/stonkey)
[02:14:32] *** Joins: Adridri (~Adridri@user/Adridri)
[02:15:01] *** Quits: Adridri (~Adridri@user/Adridri) (Client Quit)
[02:15:56] <aphysically> huh, the opposition to the callable type syntax on the mailing list is confusing to me :O
[02:16:21] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Client Quit)
[02:17:29] *** Joins: a0z1 (~a0z1@194.36.25.38)
[02:17:32] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[02:18:08] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[02:21:12] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:22:06] *** Joins: dead1 (~dead1@user/dead1)
[02:23:10] <willow> how/where to find python documentation about 'with'?
[02:23:14] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c59f:a3d7:1264:73c2)
[02:23:49] <bjs> willow: all Python documentation can be found at https://docs.python.org/3/ . The docs for parts of the language can be found under "Language Reference"
[02:23:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[02:23:59] <parv> That would be in context of "context manager"
[02:24:16] <bjs> willow: in this case you want Language Reference -> 8. Compound Statements -> The with statement
[02:24:49] <bjs> which will describe the syntax, and explain and/or give links that explain context managers in general
[02:24:57] *** Joins: ikus060 (~ikus060@96.127.228.230)
[02:25:56] <willow> thank you
[02:26:06] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[02:28:38] *** Joins: Terexen (~terexen@user/terexen)
[02:28:40] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[02:28:53] *** Joins: asa22 (~asa22@84.125.126.29.dyn.user.ono.com)
[02:29:26] <asa22> What is the pythonic way of multiplying element 1 of array A by element 1 of array B, etc. until the arrays of equal size run out of elements
[02:29:43] *** Joins: hseg (~gesh@IGLD-84-228-239-2.inter.net.il)
[02:29:47] <asa22> and by array I mean list
[02:30:07] <Repiphany> zip
[02:30:08] <SnoopJ> asa22, `new_elems = [elA*elB for elA, elB in zip(lst_a, lst_b)]`
[02:30:40] <Repiphany> Maybe I should be a little more detailed in the future
[02:30:51] <asa22> haha, I see, thanks
[02:32:03] *** Quits: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net) (Read error: Connection reset by peer)
[02:32:24] <SnoopJ> and a less unpythonic one: `itertools.starmap(operator.mul, zip(a, b))` :P
[02:32:35] <SnoopJ> err, less pythonic*
[02:32:46] <bjs> asa22: have you used numpy befoer?
[02:33:21] <SnoopJ> if you're doing this over a nontrivial amount of numeric data, you definitely want numpy
[02:33:24] <bjs> It has lots of these "element-wise" things
[02:33:48] <asa22> bjs no, I am looking to do bitwise XOR with 2 lists of bytes
[02:33:56] <asa22> I'll look into numpy
[02:33:58] *** Joins: grooverman (~grooverma@177.102.119.40)
[02:34:42] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:35:24] <arkanoid> if I try to use pd.ExcelWriter it errors out both pylint ant mypy, but it works at runtime
[02:35:32] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[02:35:50] <arkanoid> pylint goes "abstract-class-instantiated", mypy straight "mypy(error)"
[02:35:51] <willow> why doesn't this work?  with ipaddress.IPv4Network("asdfsf"): print("ok")
[02:36:29] <hseg> am cleaning up a codebase, and there's a bunch of state that's only ever used together being passed around. obvious target, gathered it into a dict and unpacked it in function calls. but some of the calls have them as the middle parameters. should I just give up this refactor?
[02:37:09] <willow> with does not seem to deal with IPv4Network, have to use try except
[02:37:42] <hseg> (eg, have calls like process(url,userconfig,sysconfig,cmdline), wanted to gather userconfig and sysconfig in a dict and call process(url,cmdline,**configs))
[02:37:42] *** Joins: cliluw (~cliluw@47.147.73.223)
[02:38:25] <arkanoid> how can I add multiple typing comments (type: ignore, pylint: ...) for a single line?
[02:38:44] <SnoopJ> willow, that won't work even before it gets to the `with` because that's not a valid IPv4Network, but it wouldn't work if it was valid because ipaddress objects aren't context managers. It's not clear what you intended for this line of code to do.
[02:39:26] <hseg> ah, ok, just need to invoke all options following the dict as keyword arguments
[02:39:56] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[02:40:05] <willow> SnoopJ: so with only works with context manager objects?     am just trying to write a simple address validation script.  yes was testing it with an invalid value.
[02:40:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:40:28] <jfcaron> Does anyone have an opinion on pyusb vs. libusb vs libusb1 from pip?  What's the difference?
[02:40:32] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:41:14] <SnoopJ> willow, the `with` statement is only ever about context managers, yes. https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
[02:41:24] <bjs> willow: "works with the `with`" is literally the definition of being a context manager object.
[02:41:32] <bjs> it's what context manager means :)
[02:42:09] <SnoopJ> willow, maybe you wanted to do `try: IPv4Network("badaddr") except ValueError: print("bad address!")` ?
[02:42:21] <bjs> willow: buts lot of objects can be "context manager objects", it's up to the object if it is one, and if it is what it does.  I don't see any reason for IPv4Network to be a context manager (there's no context to manage?)
[02:43:18] <SnoopJ> bjs, I suspect they wanted to execute the code in the `with` clause only if the object was valid but misunderstood what the statement does
[02:43:39] <willow> SnoopJ: yes
[02:43:46] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[02:44:35] <SnoopJ> willow, it's fairly common to `try: something(); except SomeError as exc: handle_exception(exc)` in Python, and this includes constructing objects
[02:44:43] <willow> some python help sites have articles about using with statements for exception handling to make the code "cleaner", etc.
[02:45:11] <bjs> willow: well not really "for exception handling" but for cleaning up things (and not missing the case where there was an exception)
[02:45:13] <SnoopJ> one I see/write particularly often: `try: iter(someobj); except TypeError: print("that thing isn't iterable")`
[02:45:18] <willow> but the sites don't fully explain that you can't just always replace try except with with
[02:45:32] <bjs> willow: the classic one is for files, where the `with` statement closes the file.
[02:45:39] <SnoopJ> I can't think of any case where you *could* make such a replacement, really
[02:45:49] <hseg> ok, one other thing -- is there such a thing as "kwarg punning", i.e. a way to shorten invocations such as f(**eggs,spam=spam)?
[02:45:52] <SnoopJ> they just do different things
[02:45:55] <willow> yes i've never used it outside of opening files
[02:45:57] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a) (Read error: Connection reset by peer)
[02:46:38] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[02:47:12] <nedbat> hseg: there isn't a shorthand for that
[02:47:28] <parv> One use of context management is when interacting with database
[02:47:57] <hseg> dammit. that makes some of my potential refactors less worth it
[02:48:05] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[02:48:50] <parv> I had seen examples of mysql.connector and/or PyMySQL objects in that context; have yet to modify my code from try-except-finally
[02:49:33] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:50:15] *** Joins: p-i- (~Ohmu@183.89.37.34)
[02:51:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:51:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:51:20] <SnoopJ> hseg, depending on what you wanted to do, it might make sense in that case to `eggs.setdefault("spam", spam)` or `eggs.update(some_other_dict)` but there isn't syntax dedicated to this
[02:51:24] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[02:51:48] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:52:04] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:52:14] <willow> an article about with says that any class can support it by having __enter__() and __exit__() methods
[02:52:43] <hseg> my case is I have dispatch(options,env), and some of the calls are f(options.arg,**env,options=options)
[02:52:55] <SnoopJ> willow, right, those are the methods that context managers define
[02:53:00] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:54:14] *** Joins: asa2224 (~asa22@84.125.126.29.dyn.user.ono.com)
[02:54:37] <asa2224> does numpy print lists like this for some reason? [31 34 47 55 25 90 94 16 80 67 24  4 31  7]
[02:54:39] <hseg> or elsewhere, I use one of the env fields in a dispatching function, and so I can either get the env packaged up and unpack that one field, or not package it up
[02:54:40] <asa2224> there are no commas
[02:54:51] <asa2224> by print I mean return
[02:55:05] <hseg> of all the features of Haskell that I'd miss in python, I was not expecting to miss field punning
[02:55:34] *** Quits: asa22 (~asa22@84.125.126.29.dyn.user.ono.com) (Quit: Client closed)
[02:55:34] <SnoopJ> asa2224, if you call str() on an array, it will look like that by default, yes.
[02:55:42] <asa2224> oh ok
[02:55:52] <SnoopJ> numpy.set_printoptions() lets you change some of the behavior
[02:55:53] *** Joins: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com)
[02:55:54] <asa2224> I just printed it, I guess its the same
[02:56:03] <SnoopJ> yea, print() will call str() for you
[02:57:09] <hseg> so again, is there any nice way of writing such a pattern, or does writing it nicely force me to reorder the function parameters
[02:57:11] <hseg> ?
[02:57:25] <SnoopJ> asa2224, e.g. https://bpa.st/2RDA
[02:57:28] <arkanoid> I'm confused by this error: Incompatible types in assignment (expression has type "Union[DataFrame, Series]", variable has type "DataFrame")
[02:57:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:57:52] <asa2224> I see
[02:57:59] <SnoopJ> arkanoid, looks like you're doing `something = Union[...]` somewhere instead of `something: Union[...]`
[02:58:19] <bjs> arkanoid: for what code?
[02:58:37] <arkanoid> SnoopJ: nope, I'm typing some code that is already working at runtime, so can't be that
[02:58:59] <arkanoid> I think is functools.partial not working with mypy
[02:59:04] *** Joins: miique (~miique@181.46.139.166)
[02:59:08] <SnoopJ> hseg, is there something wrong with preparing a dictionary to unpack into the call as I suggested? Maybe I missed your objection to that
[02:59:13] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[02:59:28] <SnoopJ> arkanoid, hard for me to say, I have even less information than you do
[02:59:35] <bjs> arkanoid: https://bpa.st/ZJBQ this code gives basically the same error.  Infact there's probably hundreds of different ways this error can appear
[02:59:53] *** Quits: moog (~moog@107.126.53.64) (Remote host closed the connection)
[02:59:55] <arkanoid> my_df = my_df.apply(functools.partial(loadExtraData, extra_data_path), axis=1)
[02:59:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:00:08] <hseg> SnoopJ: http://ix.io/3IZF here is a snippet from the code in question
[03:00:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:00:57] <arkanoid> where loadExtraData is def loadExtraData(path: Path, row: pd.Series) -> pd.Series:
[03:01:12] <bjs> arkanoid: I assume my_df has type DataFrame but apply can return either a Series or a DataFrame
[03:01:38] <arkanoid> bjs: yes it has return type "FrameOrSeries"
[03:01:44] <arkanoid> how can I fix this?
[03:01:49] <hseg> as you can see: a) I need options available in dispatch's scope b) bundling options along with configs wouldn't be that much lighter
[03:01:49] <SnoopJ> arkanoid, you'll need to cast() to DataFrame
[03:01:55] <bjs> arkanoid: well,  in what circumstances does it give a Series?
[03:02:04] <SnoopJ> (if you're sure it's a DataFrame, anyway)
[03:02:14] * SnoopJ adds to long list of reasons to dislike apply()
[03:02:14] <arkanoid> I'm sure it is a dataframe
[03:02:57] <arkanoid> cast page is now working: https://mypy.readthedocs.io/en/stable/casts.html
[03:03:04] <arkanoid> s/now/not
[03:03:21] <hseg> http://ix.io/3IZG is from later in dispatch, and it illustrates the second problem I had -- note I use fail in the last line, so it can't be bundled up with warn and **-expanded in the call to do_download
[03:04:17] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 252 seconds)
[03:04:44] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:04:56] <bjs> arkanoid: https://mypy.readthedocs.io/en/stable/type_narrowing.html#casts  like  cast(DataFrame, ...) tells mypy to forget whatever type ... had, and to pretend it was just DataFrame
[03:05:17] <SnoopJ> hseg, why not? It's not like putting it in a dict changes its meaning in the local scope
[03:05:27] <arkanoid> I though it was "# type: DataFrame"
[03:05:32] <arkanoid> thanks
[03:06:05] <SnoopJ> I think that's only for annotating, not helping the type narrowing do its things
[03:06:23] *** Quits: ham5urg (~ham5urg@p200300d16716cd0075042d83e17c5b27.dip0.t-ipconnect.de) (Quit: Leaving)
[03:06:26] <hseg> note fail is passed to dispatch
[03:07:15] <asa2224> bytearray() seems to be adding a bunch of spaces
[03:07:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:01] <hseg> so it's either get a bundled set of arguments, unpack those arguments you need and **-expand the bundle at call site, or get an unbundled set of arguments, have the arguments you need unpacked for free, and lose **-expansion at the call site
[03:08:24] <asa2224> my .bin file says "This is a test" but after doing bitwise XOR with a key to encrypt and then again to decrypt and saving to a new .bin file, then its "T h i s  i s  a t e s t"
[03:09:56] <arkanoid> would you suggest to keep test folder in package, or keep it outside of it? I'm trying to improve my repos https://blog.ionelmc.ro/2014/05/25/python-packaging/
[03:10:24] <SnoopJ> hseg, no particular part of that sounds like a question, and I'm still not clear what about the suggestion was not acceptable
[03:10:26] <parv> asa2224, a str object is treated as a list, in Python, unlike as a "whole, one thing", lack of a better phrase, as an int or a float is treated
[03:10:50] *** Quits: oscarplaisant (~oscarplai@pop.92-184-117-95.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[03:11:54] <parv> ... unfortunately.
[03:11:55] <SnoopJ> collections.ChainMap might also be relevant, but I still don't really understand the goal
[03:12:48] <SnoopJ> that class is handy when you want to 'overlay' mappings on each other
[03:14:07] <asa2224> !pastebin
[03:15:34] <asa2224> parv https://bpa.st/ZKEA
[03:15:37] *** Quits: vladoski (~foo@2001:b07:add:d406:c47e:6cb1:5eea:f682) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:38] <asa2224> I still dont get it
[03:15:45] <asa2224> its not a string its a list of integers
[03:16:01] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:18:10] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Read error: Connection reset by peer)
[03:19:06] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:21:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c59f:a3d7:1264:73c2) (Ping timeout: 240 seconds)
[03:21:17] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[03:21:21] <Wulf> asa2224: bytes(list(...))
[03:21:33] <hseg> SnoopJ: goal is a general refactor of the form f(a,x,y,z): if p(a): g(x,y,z) into f(a,r): if p(a), g(**r)
[03:21:52] <hseg> there are two blocking problems with this goal:
[03:22:07] <Wulf> asa2224: bytes(numpy.bitwise_xor) appears to return 64 bit little endian instead of ints
[03:22:30] *** Joins: __dev (sys@user/dev/x-7984917)
[03:22:45] <Wulf> I still think that python should support the ^ operator on bytes/bytearray.
[03:22:56] <asa2224> exactly
[03:23:00] <asa2224> it'd be much easier
[03:23:13] <bjs> asa2224: you don't want to bytearray() a numpy thing
[03:23:27] <asa2224> ah its not a normal array
[03:23:33] <asa2224> its some object
[03:23:46] <asa2224> so how do I convert it into bytes
[03:23:49] <bjs> asa2224: well everything is an object,  I assume you mean it's not a list object? yeah it's a numpy array
[03:23:51] <Wulf> asa2224: see above
[03:24:03] <bjs> asa2224: you can turn it into a list first:  bytes(list(decrypted_list))
[03:24:07] <asa2224> ah bytes() ok lemme try
[03:25:08] <Wulf> asa2224: (int.from_bytes(b"foo", "little") ^ int.from_bytes(b"bar", "little")).to_bytes(3, "little")
[03:25:17] <hseg> 1) if g has parameters after the bundle, they now need to be named
[03:25:35] <hseg> 2) if f needs to use some of the bundled parameters, they now need to be unpacked
[03:25:52] <SnoopJ> you can't have parameters that are simultaneously unpacked and not-unpacked, if that's what you're aiming for
[03:25:59] <Wulf> or bytes(a ^ b for a, b in zip(b"foo", b"bar"))
[03:26:38] <SnoopJ> I don't know Haskell but in Python it's either/or and often that means you end up with `def f(**kwargs)` and dealing with the resulting dict for the rest, when you want to be flexible about what you accept
[03:28:25] <hseg> right, whereas what I'd want (sketch) is something like def f(**kwargs{x,y,z}) that'd bring x=kwargs[x],y=kwargs[y],z=kwargs[z] in scope
[03:29:11] <hseg> and g(**kwargs,**{x,y,z}) or somesuch which would pass x,y,z as kwargs with their locally bound values
[03:29:25] <hseg> (so equivalent to g(**kwargs,x=x,y=y,z=z))
[03:30:04] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:30:05] <hseg> without a way to do these two, I'm not sure this refactor is worth it here, and it's a shame
[03:30:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b894:f9cc:3c1a:598b)
[03:30:58] <SnoopJ> the latter could be `g(**kwargs, x=x, y=y, z=z)` or maybe `g(**{**kwargs, **{"x": x, "y": y, "z": z})` (or one of the other already-enumerated options of doing basically this)
[03:31:08] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[03:31:34] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:31:41] <SnoopJ> the x=x,... spelling blows up if the parameter is given twice, the chained unpack gives the last unpack priority (or ChainMap gives the earliest match priority)
[03:32:16] <hseg> yeah, none of these looks attractive or readable
[03:32:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:32:34] <hseg> think it might be best to drop this refactor
[03:32:40] <hseg> thanks though
[03:32:57] <SnoopJ> a context object that lets you access these variables as attributes is my only other thought, but it doesn't seem to match the usage very well
[03:33:19] <SnoopJ> you could make one that's unpackable, but the whole point of a context object is to pass it around as itself so you get all the sugary goodness in the class
[03:33:30] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:447b:848b:16ee:b9c0) (Read error: Connection reset by peer)
[03:34:29] <hseg> maybe sth like g(**{locals().restrictKeys(['x','y','z'])}) ?
[03:34:43] *** Parts: __dev (sys@user/dev/x-7984917) (It`s time to go...)
[03:35:03] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:35:05] <SnoopJ> I'm not sure what restrictKeys() means there, but if readability is at play I don't think it's passing muster
[03:35:26] *** Joins: nomic (~nomic@51.52.78.152)
[03:37:09] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:50d0:6397:6671:2a05) (Quit: Client closed)
[03:37:12] <hseg> right -- python doesn't support it now, and considering the project wants to support python2, I doubt it will be an option
[03:37:40] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:6da1:8c1d:e7ab:5395)
[03:37:40] <nedbat> hseg: it's unusual to hear of a project that wants to support python 2.  what's the reason?
[03:38:14] <hseg> they have a calibre plugin, and some users are still on python2
[03:38:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b894:f9cc:3c1a:598b) (Ping timeout: 240 seconds)
[03:40:36] <nedbat> hseg: how many keyword args are you dealing with?
[03:41:02] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:41:18] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[03:41:25] <hseg> 1-3
[03:41:31] <hseg> benefit was low to begin with
[03:42:06] <hseg> but it looked like low-hanging fruit to my naive eyes
[03:42:37] *** Joins: EgonX_ (~EgonX@2001:558:6022:6d:6971:a5f0:543e:eb4d)
[03:42:50] *** Joins: Wulf (~Wulf@user/wulf)
[03:42:57] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:6da1:8c1d:e7ab:5395) (Ping timeout: 240 seconds)
[03:43:34] <nedbat> hseg: i am certain you could write a function like that, but it would be intricate and have sharp edges
[03:43:44] *** Joins: brainfunnel (~brainfunn@68.184.198.146.dyn.plus.net)
[03:44:10] <hseg> "like that" -- i.e. accepting bundled arguments?
[03:44:46] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[03:44:50] *** Joins: faint (~faint@2a05:f480:2000:1325::)
[03:44:59] <nedbat> hseg: that finds the locals and provides them as a dict for use as kwargs
[03:45:02] *** Quits: grimvar (~grimvar@i5C75F632.versanet.de) (Ping timeout: 240 seconds)
[03:45:06] <nedbat> but i don't recommend it
[03:45:09] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[03:46:09] <hseg> right. don't fight against your language, it'll only lead to more misery
[03:46:54] *** Joins: grimvar (~grimvar@i5C75F749.versanet.de)
[03:47:16] <nedbat> hseg: pro-tip! :)
[03:47:52] <hseg> learned over many bitter years of trying to be "clever"
[03:48:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[03:48:23] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[03:49:03] <nedbat> hseg: can you hang around and remind me from time to time? :)
[03:49:30] <hseg> :) if you'll remind me
[03:50:30] *** Joins: fikran (~fikran@user/fikran)
[03:51:06] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 260 seconds)
[03:51:23] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[03:51:49] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Ping timeout: 268 seconds)
[03:51:50] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:961:e816:8c8d:54a1) (Ping timeout: 268 seconds)
[03:53:01] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[03:56:06] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 256 seconds)
[03:56:51] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[03:57:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[03:58:10] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:58:53] *** Parts: brainfunnel (~brainfunn@68.184.198.146.dyn.plus.net) (thanks, bye!)
[03:59:46] *** Joins: nomic (~nomic@185.198.243.148)
[04:00:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[04:02:22] *** Quits: asa2224 (~asa22@84.125.126.29.dyn.user.ono.com) (Quit: Client closed)
[04:02:32] <SnoopJ> "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?"
[04:04:29] <maplefinger> sounds like someone who's never debugged
[04:04:59] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[04:06:04] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[04:06:13] <SnoopJ> maplefinger, I have to assume that Brian Kernighan is more than passingly familiar with the process, considering C
[04:06:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[04:06:38] <phy1729> I like the Kernighan's lever interpretation https://www.linusakesson.net/programming/kernighans-lever/
[04:06:49] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[04:07:54] <maplefinger> SnoopJ think he just debugged other people's work?
[04:07:57] *** Joins: l4yer (~l4yer@178.239.168.223)
[04:08:29] <SnoopJ> I wouldn't know
[04:08:30] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[04:09:12] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[04:09:20] <maplefinger> he's clearly saying he never debugged his own work, or it's just cheeky ;)
[04:13:59] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:15:29] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[04:17:55] *** Quits: avu (~jan@user/avu) (Quit: avu)
[04:18:33] *** Joins: avu (~jan@user/avu)
[04:20:18] <cliluw> Where is the system Python interpreter stored on Windows? I imagine it's some registry key.
[04:20:55] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[04:21:30] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[04:22:12] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:50] *** Quits: hseg (~gesh@IGLD-84-228-239-2.inter.net.il) (Quit: WeeChat 3.3)
[04:25:56] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e0e9-5219-987e-b8ed.res6.spectrum.com) (Read error: Connection reset by peer)
[04:27:23] <hendry> hi, I keep suffering with broken python packages, for example for aws-cli / aws sam. Should I be using some tool to help better manage this? But bear in mind I use these tools everywhere on my system https://s.natalian.org/2021-12-21/1640048167_1918x1047.png
[04:29:21] <arkanoid> how do I know which exceptions can be raised by a function?
[04:29:31] <arkanoid> for example https://pandas.pydata.org/pandas-docs/version/1.1.3/reference/api/pandas.read_json.html
[04:30:00] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:30:37] *** Quits: maplefinger (~maplefing@user/lindis) (Remote host closed the connection)
[04:30:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[04:30:49] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:31:41] *** Joins: maplefinger (~maplefing@user/lindis)
[04:35:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:36:22] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[04:37:06] *** Joins: bindu (~bindu@user/bindu)
[04:37:28] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:40:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[04:42:53] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (Quit: No Ping reply in 180 seconds.)
[04:42:56] *** Quits: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:44:15] *** Joins: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:74fc:6295:6a71:9241)
[04:44:52] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:c5af:4676:444:578d)
[04:45:02] <SnoopJ> hendry, broken how?
[04:45:22] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[04:45:29] *** Joins: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[04:45:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Read error: Connection reset by peer)
[04:45:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[04:46:26] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[04:46:52] *** Parts: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) ()
[04:47:20] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[04:47:37] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[04:47:53] <nedbat> arkanoid: you won't like this answer, but it's typical that functions don't say what they can raise.
[04:47:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:48:35] <arkanoid> sigh, how hard is coming back to python after experiencing effect tracking
[04:48:39] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[04:49:48] *** Quits: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:74fc:6295:6a71:9241) (Ping timeout: 240 seconds)
[04:49:57] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[04:50:22] <hendry> SnoopJ: i think the package dependencies need to be rebuilt one by one. I wonder if aws-cli comes as a flatpak, or some single binary
[04:50:22] <SnoopJ> it's hard to track the effects that pretty arbitrary objects might have, you can't even be entirely sure what you'll be trying [operation] on
[04:50:31] *** Quits: a0z1 (~a0z1@194.36.25.38) (Quit: Leaving)
[04:50:41] *** Joins: Hackerpcs (~user@user/hackerpcs)
[04:50:49] <SnoopJ> hendry, I can think of a few things you might be asking about. I would appreciate a more complete description as an answer to my question to help me figure out which one it is.
[04:51:02] <SnoopJ> hendry, that is: how are these tools breaking on your system?
[04:51:18] *** Joins: defjam (~eb0t@90.198.61.46)
[04:51:57] <grym> hendry: i use https://pypa.github.io/pipx/  to wrap aws-cli and other tools in isolated environments so that system level changes don't disturb them
[04:52:38] * SnoopJ usually pip-installs awscli, but it's in his local site
[04:52:40] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[04:53:48] <grym> hendry: (it also probably helps that the base interpreter i use isn't the system one, so if the system updates its python nothing breaks then either)
[04:53:50] <SnoopJ> I know that there's a system package for Ubuntu and I would have to imagine a few other distros, but those would work very differently to either of these options
[04:53:54] <nedbat> arkanoid: what would you do with the list of possible exceptions?
[04:54:39] *** Joins: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:74fc:6295:6a71:9241)
[04:54:40] <arkanoid> nedbat: make pylint happy and catch them appropriately instead of the broad catch-all
[04:54:51] <nedbat> arkanoid: why do you need to catch them?
[04:55:05] <nedbat> arkanoid: you can tell pylint to shut up if a broad catch is the right thing to do
[04:55:06] <arkanoid> make pylint happy, and it makes sense to do that
[04:55:19] <nedbat> arkanoid: can you say more about why it makes sense to catch them all?
[04:55:42] <nedbat> and if it does, then just use "except Exception"
[04:56:00] <arkanoid> nedbad, I could surely disable linting all together, but it's not the point. Catching different errors is a good way to handle errors
[04:56:24] <arkanoid> except Exception is broard and raises warning
[04:56:27] <nedbat> arkanoid: i'm not saying to disable linting altogether. you can add a pragma to that line because you know better than pylint.
[04:56:46] <nedbat> arkanoid: if your intent is to catch them all, then "except Exception" is the right way to do it.
[04:56:52] <arkanoid> no, I don't know better than pylint, as I don't have a list of potential exception at that line
[04:57:01] <nedbat> arkanoid: you know you want to catch them all
[04:57:10] <SnoopJ> pylint is *really* configurable and comes with a lot of opinionated aesthetics turned on by default
[04:57:14] <hendry> grym: thanks, I'll have to investigate!
[04:57:25] <nedbat> arkanoid: if you had a list of five exceptions to catch, how would your five except clauses differ from each other?
[04:57:46] <hendry> SnoopJ: i'm an Arch uses. Python updates seem to require rebuilds. I have no idea why. It's incredibly annoying.
[04:57:57] <Repiphany> If you don't know what errors you could expect, you should just let them propagate I would have thought
[04:58:16] <nedbat> Repiphany: there are times where you need to catch everything. then you should use "except Exception"
[04:58:18] <grym> hendry: because when your base OS updates its python, it breaks every venv you made with it
[04:58:25] <grym> hendry: (the solution to which is pyenv)
[04:58:27] <SnoopJ> hendry, it could be libraries shifting under the distribution's feet, if they're tracking the bleeding edge. Libraries don't always catch up with the core immediately. Can you say more about how they seem to require rebuilds?
[04:58:45] *** [_] is now known as [itchyjunk]
[04:59:01] <arkanoid> nedbat: I would surely name them accordingly
[04:59:02] *** Quits: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:74fc:6295:6a71:9241) (Ping timeout: 240 seconds)
[04:59:17] <arkanoid> and if I need a catch-all, would be a list of exceptions
[04:59:20] <arkanoid> *types
[04:59:24] <nedbat> arkanoid: ok, but the bodies of the except clauses: what would they do? How would they different from each other?
[04:59:55] <SnoopJ> (what would you do with the specificity of this information?)
[05:00:21] <hendry> SnoopJ: i really don't know what is happening with Arch, to say more.
[05:00:34] <hendry> I just want a static binary that doesn't break.
[05:00:53] <nedbat> arkanoid: it seems like you came into this thinking, "I want to catch all the exceptions".  You can.
[05:01:00] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:01:35] *** Joins: ano (~ano@user/ano)
[05:02:05] <arkanoid> nedbat: nope, I asked for a way to get list of potential exceptions thrown at try block
[05:02:17] <nedbat> arkanoid: right: why did you want that list?
[05:02:33] <nedbat> arkanoid: so that you could catch all the exceptions
[05:02:48] <arkanoid> it's an uroboro, nevermind, I got the answer that I need: not possible
[05:03:08] <nedbat> i wish i could understand why you don't want to use the simple way to catch all the exceptions.
[05:03:59] <SnoopJ> hendry, I don't know Arch well enough to know if building your own interpreter separate from the system one would fix the problem (because libraries Python depends on might shift, too), but if it would, pyenv is a nice tool to automate that process.
[05:04:09] <arkanoid> it's not a matter of black-and-white, the right way is to display possible errors in your code, and to do that you should list the exceptions to be caught
[05:04:34] <nedbat> arkanoid: you mean display them to the user?
[05:04:43] <arkanoid> except (A,B,C,D): ... is better thant except Exception:
[05:05:05] <nedbat> arkanoid: why is it better if you aren't going to distinguish among them?
[05:05:12] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[05:05:44] <nedbat> arkanoid: i don't mean to beat you over the head with this, i'm sorry. after all this, what will you be putting in the code?
[05:05:44] <arkanoid> are we really talking about this? Obviously because of scoping expected errors
[05:06:08] <SnoopJ> what are the consequences of an unexpected one, because of a failure to exactly enumerate the possible errors?
[05:06:16] <nedbat> arkanoid: but you are just going to lump them all together.
[05:07:24] <arkanoid> if I would know the possible exception raised at any point, I would know if I'm considering a possible error or not, at the same way you want to know the possible results of a function
[05:07:51] <nedbat> arkanoid: ok, so you are saying that you might distinguish among them.
[05:08:03] <arkanoid> there's not really a big difference from result type(s) and raised exception(s)
[05:08:05] <nedbat> i can understand that.
[05:08:17] <nedbat> it sounded like you were going to treat all the exceptions the same.
[05:08:23] <grym> hendry: in my limited arch experience, pyenv solves breaking problems.  My general approach for python is "let the OS do what it wants, i'll maintain my own for my own purposes"
[05:08:39] <grym> and that's distro-agnostic advice
[05:09:03] *** Joins: bloody_ (~bloody@user/bloody)
[05:09:06] <arkanoid> grym: also you don't mess with system python that could make other packages quite angry
[05:09:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:09:18] <SnoopJ> grym, what if the OS shifts libc or libpython under your feet, though?
[05:10:02] <nedbat> arkanoid: definitely don't let pylint push you around. It's fine to consider its advice, and then it's fine to add pragmas to your code
[05:10:06] <arkanoid> SnoopJ: you don't care ase pyenv is inside a nix-shell :P
[05:10:10] <SnoopJ> I guess maybe this is what they mean by a static build
[05:10:15] *** Joins: bloody__ (~bloody@user/bloody)
[05:10:34] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[05:11:14] <grym> SnoopJ: the one in $HOME/.pyenv/versions/3.10.0/lib/ ? unlikely
[05:12:36] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 268 seconds)
[05:13:19] <SnoopJ> arkanoid, I strongly agree with nedbat here, btw. I consider it strictly-worse to try (and fail) to enumerate all possible exceptions if I only care that *some* kind of exception occurred: tried-and-failed enumeration may cause exceptions to propagate, where a generic handler would have been able to recover
[05:13:57] *** Quits: bloody_ (~bloody@user/bloody) (Ping timeout: 240 seconds)
[05:14:19] <arkanoid> SnoopJ: you're still in black/while land. Nothing stops you to add a last "except Exception:" as last statement for an "unknown error"
[05:14:28] <SnoopJ> arkanoid, sure
[05:15:07] <SnoopJ> arkanoid, nedbat's question (and I would echo it) is: what goes in that clause, and if it's the same thing, why bother duplicating that effort?
[05:15:12] <arkanoid> other programming languages let you know which exceptions you are ignoring, and forces you to handle them or propagate them
[05:15:55] <nedbat> arkanoid: yes, python is different. I remember working in Java, and eventually declaring every function as "excepts Exception" because of playing whack-a-mole with exceptions
[05:16:03] <SnoopJ> In a language with this much dynamism, you can probably safely consider the space of all possible exceptions to be infinite for any given call
[05:16:12] <KirkMcDonald> Yeah, I definitely associate checked exceptions with Java.
[05:16:17] <arkanoid> I know that's not the original scripy flavor of python, but today things are different and type tracking is kinda doing something, so maybe also exceptions comes into play
[05:17:00] <KirkMcDonald> Are there languages other than Java which do checked exceptions?
[05:17:01] <nedbat> arkanoid: it's hard in Python: what exceptions can len(x) raise? It depends on the type of x
[05:17:38] <arkanoid> nedbat: only if x is Any
[05:17:39] <SnoopJ> *but* we do know that all exceptions fit into a hierarchy
[05:17:48] <nedbat> arkanoid: isn't that how len() is defined?
[05:18:24] <nedbat> arkanoid: we don't have to try to design it, i don't think declared exceptions are ever coming to Python.  But I could be wrong.
[05:18:42] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:18:43] <KirkMcDonald> I seems unlikely.
[05:18:47] <KirkMcDonald> It*
[05:18:50] <SnoopJ> `def foo_caller(obj): return obj.foo()  # what can this raise?`
[05:19:23] <nedbat> arkanoid: i understand it's frustrating, because Python seems completely uncontrolled.
[05:19:24] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[05:20:27] *** Quits: onichomp666 (~onichomp@2806:264:4404:82e6:bd04:9a4c:b437:6db) (Read error: Connection reset by peer)
[05:20:28] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[05:21:03] *** Joins: onichomp666 (~onichomp@2806:264:4404:82e6:bd04:9a4c:b437:6db)
[05:21:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:21:57] *** Quits: onichomp666 (~onichomp@2806:264:4404:82e6:bd04:9a4c:b437:6db) (Read error: Connection reset by peer)
[05:22:03] <arkanoid> KirkMcDonald: (partial: java, javascript, scala, nim *my favorite*), (full: haskell, koka, eff, unison)
[05:22:09] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[05:23:16] <KirkMcDonald> JavaScript? You don't need to declare the exceptions a function may throw in JavaScript.
[05:23:51] *** Joins: fikran (~fikran@user/fikran)
[05:27:17] <arkanoid> KirkMcDonald: https://github.com/macabeus/js-proposal-algebraic-effects
[05:27:34] *** Quits: p-i- (~Ohmu@183.89.37.34) (Remote host closed the connection)
[05:28:10] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c) (Ping timeout: 260 seconds)
[05:28:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:29:46] *** Parts: redrum88 (redrum88@user/redrum88) (Closing Window)
[05:30:01] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:1b60:9163:dbb3:81bf)
[05:31:01] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[05:31:43] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Excess Flood)
[05:31:56] <mike18_> hi whats the best way to call a function in python every 10 minutes to download a file from s3 and update a dateframe which is used by another task (like flask serving a http request)?
[05:32:02] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:32:20] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 268 seconds)
[05:32:51] <mike18_> run a daemon thread?
[05:33:06] *** Quits: adeliktas (~adeliktas@i59F52B3A.versanet.de) (Quit: like, subscribe, turn notifications on, buy my merch, write me an email and have a nice day.)
[05:33:37] *** Joins: adeliktas (~adeliktas@i59F52B3A.versanet.de)
[05:33:42] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:33:49] <mike18_> or use the sched module?
[05:34:13] <nedbat> mike18_: what else does this program do while it's not downloading from s3?
[05:34:13] <arkanoid> "for path in (p for p in myPath.iterdir() if p.is_dir)" is returning files too, why?
[05:34:26] <nedbat> arkanoid: you forgot to call is_dir
[05:34:31] <nedbat> you need parens
[05:34:53] <arkanoid> damn! :D sure, I'm still wired to UFCS
[05:34:57] <mike18_> serving http requests with flask and gunicorn and run an algorithm when the request triggers it
[05:34:59] <mike18_> nedbat:
[05:35:30] <mike18_> i basically want to update the http tempalte every x minutes
[05:35:33] <mike18_> template
[05:35:37] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[05:35:56] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[05:35:57] <nedbat> mike18_: you could have a thread do the timed work.
[05:36:12] <nedbat> mike18_: updating the template sounds unusual: how will it change?
[05:37:16] *** Joins: p-i- (~Ohmu@183.89.37.34)
[05:37:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:38:57] <mike18_> the data on s3 could update every x hours . minutes
[05:39:59] <nedbat> mike18_: so you're going to download the data, but you said you wanted to update the template.  You mean the data displayed by the template will change?
[05:40:06] <mike18_> yes
[05:40:13] <mike18_> correct
[05:42:03] <arkanoid> I'm testing pipreqs to create a bettere requirements.txt. It says it should pick all imported modules, but it's not
[05:42:04] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[05:42:38] <nedbat> arkanoid: i'venever used it: what imports does it miss?
[05:42:56] *** Joins: bloody (~bloody@user/bloody)
[05:43:24] <mike18_> nedbat: does that make sense?
[05:43:36] <nedbat> mike18_: yes
[05:43:42] <arkanoid> nedbat: https://pypi.org/project/streamlit-aggrid/
[05:43:48] <mike18_> nedbat: use thread?
[05:43:57] <nedbat> mike18_: that would work
[05:44:08] <mike18_> how does that work with gunicorn ?
[05:44:15] <nedbat> arkanoid: wow, streamlit.  i just heard of it as part of a pycon talk proposal
[05:44:25] <mike18_> nedbat: if i have lets say 2 workers
[05:44:28] *** Quits: maplefinger (~maplefing@user/lindis) (Quit: updates are available - click here.)
[05:44:43] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Read error: Connection reset by peer)
[05:44:53] <arkanoid> nedbat: it's for the (very) lazy person
[05:44:53] <mike18_> they are not updating that template in sync right?
[05:45:06] <nedbat> arkanoid: i heard you say it;s a powerful tool :)
[05:45:18] <arkanoid> :)
[05:45:26] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 252 seconds)
[05:45:34] *** Joins: maplefinger (~maplefing@user/lindis)
[05:45:42] <mike18_> nedbat: what about threading.Timer ?
[05:46:10] <nedbat> arkanoid: i'm curious about how you imported the missing import?
[05:46:36] *** Quits: bloody__ (~bloody@user/bloody) (Ping timeout: 256 seconds)
[05:46:39] <nedbat> mike18_: i haven't used them, but it sounds like it could be useful
[05:46:51] <arkanoid> nedbat: from st_aggrid import (AgGrid, GridOptionsBuilder, GridUpdateMode)
[05:47:15] <mike18_> there is also http://docs.python.org/library/sched.html
[05:47:19] <mike18_> do you guys know that?
[05:47:20] <nedbat> arkanoid: hmm, seems ok, i wonder why it's missed
[05:47:25] <arkanoid> pipreqs debug says: DEBUG: Package st_aggrid does not exist or network problems
[05:48:13] <nedbat> arkanoid: maybe there's something odd about the package? The version number is unusual: 0.2.2.post4
[05:48:23] <nedbat> maybe something else is also odd
[05:48:29] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[05:48:45] <nedbat> arkanoid: did you try using pip freeze?
[05:49:15] <arkanoid> nedbat pip freeze works
[05:49:36] *** Quits: parv (~quass@user/parv) (Quit: parv)
[05:50:07] <arkanoid> but pip freeze generates a 114 line long requirements.txt, pipreqs just 11
[05:50:26] <arkanoid> and is correct apart from that
[05:51:28] <nedbat> arkanoid: oh, because you have extra things installed.
[05:51:40] <nedbat> arkanoid: the transitive dependencies
[05:52:14] <nedbat> i guess keep the 11-line, and add the line
[05:52:15] <arkanoid> sure, but I just need to track the parent packages
[05:52:37] <nedbat> arkanoid: at work, we use pip-compile to also pin all the transitive dependencies
[05:54:22] <arkanoid> nedbat: thanks! I'll try pip-compile
[05:55:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[05:55:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[05:55:14] *** finn_elija is now known as FinnElija
[05:55:20] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[05:55:31] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[05:58:34] <arkanoid> nedbat: it is not an odd versioning scheme https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/#standards-compliance-for-interoperability
[05:59:04] <nedbat> arkanoid: i know it conforms to the scheme, it's just seems strange to be in a 0.x version, and then do four .post releases.
[06:02:07] *** Joins: masta_ (~oyster@user/masta/x-2645138)
[06:04:14] <arkanoid> nedbat: pip compile seems working, it seems slight superior than pip freeze as it skips not listed deps in setup.py, but still gets everything and not the root package
[06:04:34] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 260 seconds)
[06:04:43] *** masta_ is now known as masta``
[06:05:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:05:36] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:05:47] *** Joins: brabrax (~brabrax@user/brabrax)
[06:05:49] <arkanoid> or better, which versions is it listing? are the version that I have already installed, or the versions combined in all requiremets.txt of all listed packages in install_requires?
[06:06:16] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:07:11] <nedbat> arkanoid: in our case, it starts from .txt (or .in) files, and works from there
[06:07:28] <arkanoid> .txt? you mean previous requirements.txt?
[06:08:09] <nedbat> arkanoid: we start with .in files, and make the .txt file with pip-compile,  but yes.
[06:08:53] <arkanoid> I've deleted it to start fresh, my question is if pip-compiles generates requirements.txt of the currently-installed packages, or it just requires the list in setup.py and so it would work even in a fresh new virtualenv (no package installed beside pip-tools)?
[06:10:29] <arkanoid> wait, I'm trying just now
[06:10:37] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Ping timeout: 240 seconds)
[06:11:26] <arkanoid> it's the latter, it works even with a fresh new virtualenv with no packages installed. It means that it does exactly what I need. Thanks!
[06:11:36] <nedbat> arkanoid: nice
[06:13:14] *** Joins: parv (~quass@user/parv)
[06:16:04] *** Joins: naan (~Naan@user/naan)
[06:17:01] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[06:17:40] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[06:17:58] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 268 seconds)
[06:19:32] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[06:21:39] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[06:22:41] *** Joins: finsternis (~X@23.226.237.192)
[06:23:48] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[06:23:59] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[06:25:45] *** Joins: DakuXin (~Daku@104-137-029-054.res.spectrum.com)
[06:27:21] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:33] *** Joins: r3m (~launch@user/r3m)
[06:27:37] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[06:30:33] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:30:44] *** Joins: RiFo (~RiFo@user/rifo)
[06:32:11] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[06:34:45] *** Joins: zensei (~zensei@user/zensei)
[06:35:15] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[06:35:36] *** Quits: zensei (~zensei@user/zensei) (Client Quit)
[06:35:54] *** Quits: DakuXin (~Daku@104-137-029-054.res.spectrum.com) (Remote host closed the connection)
[06:37:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:39:11] *** Joins: adeliktas8 (~adeliktas@i59F52042.versanet.de)
[06:40:30] *** Quits: adeliktas (~adeliktas@i59F52B3A.versanet.de) (Ping timeout: 260 seconds)
[06:40:30] *** adeliktas8 is now known as adeliktas
[06:41:44] *** Joins: millido (~millido@84.210.150.128)
[06:43:01] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[06:44:38] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:46:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:46:16] *** Viewday113 is now known as Viewday11
[06:48:38] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[06:50:46] *** Quits: naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[06:53:57] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 240 seconds)
[06:55:29] *** Joins: Vonter (~Vonter@user/vonter)
[06:59:17] *** Joins: Lush-_ (~lushlush@user/lush-/x-1276235)
[07:00:23] <arkanoid> nedbat: if I run "python setup.py develop" (or "pip install -e .") where setup.py lists some install_requires (like install_requires = ["pandas"]), will it take precende on pip install -r requirements.txt ?
[07:02:57] *** Joins: OPK (~OPK@user/opk)
[07:03:08] *** Joins: c10l8 (~c10l@user/c10l)
[07:05:12] *** Joins: Viewday117 (~Viewday@user/viewday)
[07:06:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:34] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:34] *** finn_elija is now known as FinnElija
[07:06:41] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 268 seconds)
[07:06:41] *** c10l8 is now known as c10l
[07:07:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[07:07:37] *** Joins: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:74fc:6295:6a71:9241)
[07:07:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:07:38] *** Viewday117 is now known as Viewday11
[07:10:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:12:17] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 240 seconds)
[07:15:37] *** Joins: saunders (~nicholas@172.103.152.184)
[07:15:50] <saunders> vyper smart contracts are on topic here?
[07:16:00] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[07:17:21] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[07:17:38] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[07:17:39] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[07:17:56] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8357:35f0:5094:958:f5f3:5548)
[07:18:15] *** Joins: bindu (~bindu@user/bindu)
[07:22:30] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[07:24:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:24:26] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[07:26:06] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:26:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[07:27:39] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[07:27:51] *** Joins: bindu (~bindu@user/bindu)
[07:29:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:29:15] <mrec> is there a way to map an attribute to a method call?
[07:29:50] <mrec> I'd like to keep some backward compatibility to some attribute result, but I'm wrapping a structure in a class with extended information
[07:30:15] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[07:31:18] <phy1729> @property
[07:31:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:31:39] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:33:13] *** Joins: fikran (~fikran@user/fikran)
[07:34:07] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:35:02] <mrec> great thanks
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:22] <velix> Oh, is there a regression in find_library() in Python 3.9? :D
[07:37:28] <velix> `liblibgdal.a`
[07:37:35] <velix> My python seems to be drunk
[07:38:22] <mrec> you should look for .so or dylib?
[07:38:24] <mrec> or dll
[07:38:56] <velix> mrec: No, it's a know bug. stackoverflow is full of it :D
[07:39:22] <velix> ah here. https://stackoverflow.com/a/65411109/2614919
[07:39:47] <velix> "A workaround is to use find_library("c") instead. It also works in older versions of Python"
[07:40:18] <velix> Wow. I wonder why no tests have failed here.
[07:41:31] <velix> Is there an online python where I can choose different versions? Otherwise, I'd need docker now :D
[07:42:30] <velix> In php world, we've a tool to check the code under various versions. pretty useful
[07:42:54] <velix> ah, you seem to have "tox"
[07:43:25] *** Quits: nomic (~nomic@185.198.243.148) (Quit: Leaving)
[07:43:25] *** Joins: fluter (~fluter@user/fluter)
[07:43:36] *** Quits: adeliktas (~adeliktas@i59F52042.versanet.de) (Quit: like, subscribe, turn notifications on, buy my merch, write me an email and have a nice day.)
[07:44:09] <velix> NICE. here it is: https://www.jdoodle.com/python3-programming-online/
[07:44:31] *** Joins: adeliktas (~adeliktas@i59F52042.versanet.de)
[07:45:10] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[07:45:25] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[07:45:40] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[07:46:46] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[07:47:12] *** Quits: adeliktas (~adeliktas@i59F52042.versanet.de) (Client Quit)
[07:48:40] *** Joins: radens (uid501260@id-501260.tinside.irccloud.com)
[07:48:43] *** Joins: kdc (~kdc@196.211.197.159)
[07:48:57] *** Quits: mr_ab (~nobody@bnc.ab.hl9.net) (Read error: Connection reset by peer)
[07:49:46] <radens> quick question: I'm trying to make a repl-y thing and am doing `for line is sys.readlines():` but the lines are being buffered. Is there a way to tell python not to buffer stdin or only buffer stdin until newlines?
[07:50:28] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[07:51:48] <jinsun> aphysically: yeah shouldn't type check ideally, mypy doesn't infer lambda properly it seems, it does catch it if you put proper defs instead of lambdas in there, I expected strict mode to complain about just using lambdas at all actually
[07:52:26] *** Joins: adeliktas (~adeliktas@i59F52042.versanet.de)
[07:54:41] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[07:56:29] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[07:57:52] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:58:13] <KirkMcDonald> radens: You might try: for line in sys.stdin:
[07:58:35] <radens> KirkMcDonald: same issue?
[07:58:45] *** Quits: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:74fc:6295:6a71:9241) (Quit: Bye)
[08:00:31] <jim> how can I find the current status of pygtk?
[08:02:03] *** Joins: jmd (~jmdaemon@user/jmdaemon)
[08:02:10] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:5972:95a:9b06:8616) (Quit: Textual IRC Client: www.textualapp.com)
[08:02:37] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:5972:95a:9b06:8616)
[08:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:04:04] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:04:50] *** Joins: bindu_ (~bindu@user/bindu)
[08:04:58] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[08:05:00] *** Quits: jmd (~jmdaemon@user/jmdaemon) (Client Quit)
[08:05:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:05:27] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[08:05:31] <velix> Interesting. The code didn't change since 2020. I really wonder, why it breaks now.
[08:05:34] <velix> https://github.com/python/cpython/blob/3.9/Lib/ctypes/util.py
[08:05:54] *** Joins: reset (~reset@user/reset)
[08:06:16] <velix> or is 3.9 a year old already?
[08:06:36] *** bindu_ is now known as bindu
[08:07:01] <SnoopJ> velix, v3.9.0 was 5 Oct 2020 (tagged on 4 Oct) https://www.python.org/dev/peps/pep-0596/
[08:07:09] <velix> there you go.
[08:07:12] <velix> SnoopJ: Thanks.
[08:07:53] *** Joins: stultusv (~stultusv@user/stultusv)
[08:07:54] *** Joins: onichomp (~onichomp@2806:264:4404:82e6:d9aa:2f74:c5c8:5af3)
[08:07:55] <velix> I can't find a Python that is older than 3.6 - how can I figure out, what version was the first to support `ctypes.util.find_library("c")` ?
[08:08:24] <SnoopJ> It's been there since 2.x
[08:08:46] <velix> uh!
[08:08:56] <velix> Okay. Then I can write a fix for the library I'm using right now.
[08:09:09] <velix> Without having to care about 3.0-3.9 ;)
[08:09:12] <SnoopJ> ctypes itself was introduced in 2.5, apparently
[08:09:31] <velix> I didn't get a deprecation warning in 3.8
[08:09:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[08:09:57] *** Quits: emf (~emf@2620:10d:c091:480::1:8fa6) (Ping timeout: 240 seconds)
[08:09:57] <velix> and I haven't seens this in changelogs :(
[08:10:03] <velix> seen*
[08:10:14] *** Quits: stultusv (~stultusv@user/stultusv) (Client Quit)
[08:10:17] <SnoopJ> well, it's not deprecated
[08:10:26] *** Joins: stultusv (~stultusv@user/stultusv)
[08:10:26] *** Quits: onichomp (~onichomp@2806:264:4404:82e6:d9aa:2f74:c5c8:5af3) (Client Quit)
[08:10:28] <velix> it is. 'libc' fails very bad.
[08:10:40] <SnoopJ> failure != deprecation
[08:10:44] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:10:55] <velix> I thought it's a failure because the old behavior was deprecated :D
[08:11:04] <velix> So it's really a bug?
[08:11:17] <SnoopJ> yes https://bugs.python.org/issue42580
[08:11:20] <velix> uh!
[08:11:24] <SnoopJ> or hm, it's marked not a bug
[08:11:42] <SnoopJ> I didn't read the whole discussion there
[08:11:55] <velix> "You should fix your code, but Python works as expected. I close the issue."
[08:11:57] <velix> :)
[08:12:00] <velix> That's all you need to read :)
[08:14:00] <SnoopJ> velix, apparently it's not a bug because "libc" was never what the doc called for: "*name* is the library name without any prefix" but I guess libc worked and that was old incorrect behavior that people just started to rely on
[08:14:24] <velix> Okay. I'll patch the application then and hope the maintainer will accept it.
[08:14:26] <SnoopJ> That line has been part of the doc since 8 Jan 2009
[08:14:29] *** Quits: sreve (~quassel@p4ff44cf0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:14:49] <SnoopJ> So yea, looks like something shifted and the not-guaranteed thing became even less reliable than it already was
[08:14:49] *** Joins: Viewday115 (~Viewday@user/viewday)
[08:15:00] *** Joins: sreve (~quassel@p4ff44d92.dip0.t-ipconnect.de)
[08:15:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:15:21] *** Viewday115 is now known as Viewday11
[08:15:37] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a702:8888:6dc4:476) (Ping timeout: 240 seconds)
[08:16:32] *** Joins: ravan (~ravan@user/ravan)
[08:16:33] <SnoopJ> hmm, I wonder if something broke in Debian/Ubuntu
[08:16:44] <SnoopJ> If Matthias Klose is asking about it, I would think probably yes
[08:18:36] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:21:47] <SnoopJ> so, a bug, but not a bug in Python ;)
[08:22:50] <velix> ahh, found the evil thing. lib = _find_library(lib_name)
[08:23:02] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:23:03] <velix> if lib_name.startswith('lib'): lib = _find_library(lib_name[3:])
[08:23:06] <velix> [x] fixed
[08:24:43] <SnoopJ> or lib_name.removeprefix("lib") in 3.9+ :)
[08:24:46] *** Quits: dead1 (~dead1@user/dead1) (Quit: Leaving)
[08:25:01] *** Quits: p-i- (~Ohmu@183.89.37.34) (Remote host closed the connection)
[08:25:07] <velix> I know, but this library has "old" users.
[08:25:30] <SnoopJ> nothing old about 3.8...yet
[08:25:44] <velix> ooolder ;)
[08:25:50] <velix> Think of Debian Jessie.
[08:25:58] <velix> or Debian Wheezy.
[08:26:01] <velix> or Debian Stretch
[08:26:02] <SnoopJ> ah right, no need to worry about 3.x
[08:29:35] <velix> SnoopJ: What way would you go? https://bpa.st/MIIA
[08:29:40] <velix> The polite or the "modern" one?
[08:30:21] <velix> "polite" because it keeps the programmes original idea to be backward compatible maybe.
[08:30:26] *** Joins: aniketgm (~Aniket@49.36.109.33)
[08:30:34] <velix> but as you said, this is ages old and should work in 2.x
[08:30:35] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:49] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[08:30:57] *** Joins: c10l (~c10l@user/c10l)
[08:32:44] <SnoopJ> velix, I think the modern one is wrong, it only sets `lib` if it's prefixed. Nothing's terribly amiss about the polite one, but I would probably do `try: ...; except OSErr: if lib_name.startswith('lib'): lib = _find_library...`
[08:33:10] <SnoopJ> i.e. just get on with the search, no need for the sentinel, then if *another* OSError occurs it will come with more complete context
[08:33:26] *** Joins: sagax (~sagax_nb@user/sagax)
[08:33:56] <SnoopJ> but like I said, nothing's amiss about what's there, I can read it and understand it, so :)
[08:34:01] <velix> okay ;)
[08:34:08] <velix> but makes sense.
[08:34:13] <velix> *and* makes sense
[08:37:13] *** Quits: Lush-_ (~lushlush@user/lush-/x-1276235) (Quit: leaving)
[08:39:38] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:44:30] *** Joins: Viewday111 (~Viewday@user/viewday)
[08:46:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:46:15] *** Viewday111 is now known as Viewday11
[08:50:05] <mike18_> hi nedbat
[08:50:10] <mike18_> still around?
[08:53:39] <velix> I'm badman, but not nedbat :(
[08:53:43] <velix> batman* ;)
[08:54:51] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[08:55:13] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[08:55:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:55:29] *** Quits: beanzilla (beanzilla@user/beanzilla) (Quit: ZNC 1.8.2 - https://znc.in)
[08:55:29] *** Quits: notEVIL (~notevil@user/notevil) (Quit: ZNC 1.8.2 - https://znc.in)
[08:55:36] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[08:55:56] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:56:30] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[08:56:33] *** Joins: notevil (~notevil@user/notevil)
[08:57:25] *** Joins: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11)
[08:59:21] *** Quits: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11) (Remote host closed the connection)
[08:59:32] *** Joins: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11)
[09:00:49] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[09:01:13] <bauripalash> I'm not sure, if anyone's from india here, but wanted to ask, if any university or colleges are teaching python in cs courses?
[09:03:25] *** Quits: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11) (Read error: Connection reset by peer)
[09:05:02] *** Joins: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11)
[09:05:10] *** Joins: Viewday113 (~Viewday@user/viewday)
[09:05:13] *** Quits: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11) (Client Quit)
[09:06:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:07:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:07:44] *** Joins: emf (~emf@2620:10d:c091:480::1:3482)
[09:07:45] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:07:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:08:46] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[09:09:22] *** Quits: Viewday113 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:09:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:09:59] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[09:10:40] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:11:22] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[09:11:42] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7238:d26c:60a1:e022)
[09:14:17] *** Quits: emf (~emf@2620:10d:c091:480::1:3482) (Ping timeout: 240 seconds)
[09:14:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7238:d26c:60a1:e022) (Client Quit)
[09:18:25] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e) (Ping timeout: 256 seconds)
[09:22:04] *** Quits: miique (~miique@181.46.139.166) (Quit: Leaving)
[09:22:37] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:23:26] *** Joins: miique (~miique@181.46.139.166)
[09:24:34] *** Joins: analoq (~yashi@user/dies)
[09:25:29] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:25:45] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[09:26:55] *** Joins: node1 (~node1@user/node1)
[09:27:07] *** Quits: aniketgm (~Aniket@49.36.109.33) (Read error: Connection reset by peer)
[09:27:26] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[09:27:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[09:28:02] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[09:28:37] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Ping timeout: 256 seconds)
[09:29:38] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[09:30:18] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:12] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:31:29] *** Joins: aniketgm (~Aniket@49.36.109.33)
[09:32:56] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[09:33:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:33:41] *** Joins: djb27 (~djb27@user/djb27)
[09:33:58] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[09:34:58] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[09:36:39] *** Joins: Viewday111 (~Viewday@user/viewday)
[09:37:25] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[09:38:22] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:38:23] *** Viewday111 is now known as Viewday11
[09:39:21] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[09:40:34] *** Joins: savolla (~savolla@84.44.28.28)
[09:40:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:41:14] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[09:41:27] *** Joins: ajak (~ajak@gentoo/developer/ajak)
[09:41:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[09:42:22] *** Joins: emf (~emf@163.114.130.6)
[09:42:33] *** Joins: fikran (~fikran@user/fikran)
[09:43:34] <ajak> is it at all sane to make a module importable from its source tree and from itself as an installed package? i'd like to work on the module out of its source tree, so i can use relative imports but once it's installed it will have to import from the module namespace, what's best to do here?
[09:45:10] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[09:46:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e)
[09:47:14] *** Quits: inomoz (~inomoz@85.26.165.145) (Quit: WeeChat 3.3)
[09:48:34] *** Quits: emf (~emf@163.114.130.6) (Ping timeout: 256 seconds)
[09:52:01] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[09:54:03] *** Leonarbro_ is now known as Leonarbro
[09:56:52] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:57:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[09:58:47] *** Joins: xa0s (~xa0s@mab.sdf.org)
[09:58:56] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[09:59:18] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:02:13] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[10:02:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:02:46] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:04:49] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:05:07] *** Quits: aniketgm (~Aniket@49.36.109.33) (Read error: Connection reset by peer)
[10:05:49] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[10:05:50] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 260 seconds)
[10:05:59] <FH_thecat> how do I get current time in seconds since epoch ?
[10:06:08] <FH_thecat> time.time() gives me miliseconds
[10:06:18] *** Joins: vaio (~gary@user/ghost)
[10:06:57] *** Joins: upsala (~zcb@185.209.196.169)
[10:07:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:07:04] <Repiphany> int(time.time())
[10:07:08] <rindolf> ajak: can you manage it as a pypi-like package (with setup.py/etc.)? also see my https://pypi.org/project/pydistman/
[10:07:25] <ajak> rindolf: yeah, that's exactly how i'm installing it
[10:07:28] <Togra> time.time() but then run it through time.strftime()?
[10:07:35] <ajak> via `pip` with a setup.cfg
[10:08:11] <Togra> I think there's an extra step
[10:08:14] <Togra> for time I mean
[10:09:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[10:09:56] <rindolf> ajak: good.
[10:10:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:11:39] <ajak> rindolf: indeed, but i'm not sure how that relates to my problem, i'm looking for a way to import the module when used from its source tree while also making sure its internal imports work when it's installed
[10:12:38] <ajak> so, "import module_component" from within the source tree, "import module.module_component" when outside it, and i can throw around some try clauses but that's a hack and not really a solution i think
[10:13:32] <rindolf> ajak: i prefer absolute imports. they are more explicit
[10:13:49] *** Joins: Viewday115 (~Viewday@user/viewday)
[10:15:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:15:13] *** Viewday115 is now known as Viewday11
[10:15:45] *** Quits: maplefinger (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[10:16:26] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[10:16:39] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:c5af:4676:444:578d) (Read error: Connection reset by peer)
[10:18:11] *** Joins: node1 (~node1@user/node1)
[10:18:48] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[10:20:20] *** Quits: The-Compiler (~compiler@the-compiler.org) (Ping timeout: 268 seconds)
[10:21:00] <stewie925> hey guys, have a question - how do we reverse just a specific range of elements within a list , like I want to reverse just the last 3 items in this list  [1,2,3,4,5] to make it [1,2,3,5,4] ?
[10:21:27] <stewie925> I mean from [1,2,3,4,5] to [1,2,5,4,3]
[10:21:46] <Repiphany> `l[2:] = reversed(l[2:])`
[10:22:07] <stewie925> thanks!
[10:23:27] *** Joins: aniketgm (~Aniket@49.36.109.33)
[10:23:51] *** Joins: emf (~emf@2620:10d:c091:480::1:3482)
[10:24:44] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:25:26] *** Joins: librenaut (~librenaut@user/librenaut)
[10:26:33] <rindolf> Repiphany++
[10:26:38] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:27:04] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:27:25] *** Joins: waxfire7 (~waxfire@65.119.2.240)
[10:27:26] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[10:27:45] *** Joins: trashbird (~trashbird@user/trashbird)
[10:27:57] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 240 seconds)
[10:27:57] *** waxfire7 is now known as waxfire
[10:28:16] *** Joins: manti7 (~manti7@176.10.104.94)
[10:30:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:31:02] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[10:31:04] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-6.home.otenet.gr) (Ping timeout: 256 seconds)
[10:31:57] *** Quits: emf (~emf@2620:10d:c091:480::1:3482) (Ping timeout: 240 seconds)
[10:35:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[10:36:17] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[10:36:54] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[10:37:27] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:37:32] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[10:38:40] *** Joins: dob1 (~dob1@user/dob1)
[10:38:58] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[10:40:57] <velix> Can I make "lambda" ignore any input?  I'm getting TypeError: <lambda>() got an unexpected keyword argument 'query_extent'
[10:41:02] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 240 seconds)
[10:41:59] <grawity> same as regular functions, make it accept *args, **kwargs
[10:42:00] <Repiphany> You can do `lambda **kwargs` but it's Not A Good Idea
[10:42:07] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:42:10] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-203.home.otenet.gr)
[10:42:31] <velix> Repiphany: This is a special case. I think it's fine here.
[10:42:49] *** Quits: aniketgm (~Aniket@49.36.109.33) (Quit: leaving)
[10:44:24] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:44:32] <velix> hmm: "TypeError: <lambda>() takes 0 positional arguments but 2 were given"
[10:45:25] <Repiphany> *args as well to capture positional arguments
[10:45:39] <grawity> https://paste.rs/n9x seems to WFM for me
[10:46:01] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:46:01] <velix> aah one start only, sorry
[10:46:04] <velix> star*
[10:46:07] <velix> asterisk?
[10:47:52] <velix> Thanks
[10:49:20] <parv> A first reading of syntax of making a function argument (positional|keyword)-only (along with the order of argument list) makes me laugh nervously <https://realpython.com/lessons/positional-only-arguments/>. Makes me wonder about the priorities.🤷‍
[10:49:33] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:50:46] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:50:52] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:51:36] *** Joins: seednode (~seednode@user/seednode)
[10:52:49] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[10:53:37] *** Joins: mrwick (~mrwick@user/mrwick)
[10:55:28] *** Joins: luigibu (~luigi@80.30.200.2)
[10:56:32] *** Joins: p-i- (~Ohmu@2001:44c8:4609:d549:48df:3765:bd19:35f3)
[10:58:02] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:1cbb:501e:c508:b267)
[11:00:25] *** Joins: rendar (~rendar@user/rendar)
[11:05:06] *** Joins: Viewday110 (~Viewday@user/viewday)
[11:05:34] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[11:05:47] *** Joins: KvL (~KvL@130.95.254.190)
[11:06:06] *** Quits: KvL (~KvL@130.95.254.190) (Client Quit)
[11:06:40] <jinsun> it kinda makes sense, *args eats all the positional args, and anything after *args has to be keyword only, and * can be read as unnamed version of *args
[11:07:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:07:20] *** Viewday110 is now known as Viewday11
[11:07:52] <jinsun> and then positional only is "opposite" of keyword only, so it uses / which is opposite of *
[11:08:13] *** Quits: p-i- (~Ohmu@2001:44c8:4609:d549:48df:3765:bd19:35f3) (Remote host closed the connection)
[11:10:29] <jinsun> hah Guido had the same reason for the / and * thing that I came up with just now https://mail.python.org/pipermail/python-ideas/2012-March/014364.html
[11:10:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:11:52] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[11:11:52] *** Joins: nomic (~nomic@185.198.243.148)
[11:12:15] *** Joins: gusto (~Augustus@109.255.100.54)
[11:12:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[11:12:53] *** Quits: savolla (~savolla@84.44.28.28) (Ping timeout: 256 seconds)
[11:12:58] *** Joins: djapo (~archangel@user/djapo)
[11:15:50] <parv> I would have preferred the enforcement of the argument passing per function signature without [*/]. If needed for backword compatibility reason, make that to be opt-in by importing a module or some single statement.
[11:15:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:16:14] *** Joins: savolla (~savolla@84.44.28.28)
[11:16:16] <parv> s/word/ward/
[11:16:23] *** Joins: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi)
[11:16:51] *** Quits: raek (~raek@2.65.8.10.mobile.tre.se) (Ping timeout: 256 seconds)
[11:18:02] *** Joins: palasso (~palasso@user/palasso)
[11:18:27] *** Joins: Klinda (~superleag@user/klinda)
[11:18:38] *** Joins: raek (~raek@2.70.9.235.mobile.tre.se)
[11:18:59] <jinsun> so you would prefer keyword only by default without *?
[11:20:02] <parv> Yeah, for "def x( y = 0 )"
[11:20:14] <jinsun> seems unintuitive, you expect to be able to pass by position, by default
[11:21:59] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[11:22:35] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[11:22:49] <parv> I OTOH do not care if passed as positional or via keyword for "def x( y )" -- pass as you like; if language forces that to be only a positional arg, then so be it
[11:22:56] <jinsun> by you I mean most people, and that is the behavior in most languages, positional is assumed, passing by keyword is extra feature
[11:23:10] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[11:25:33] <parv> It is funny that expected behavior in other languages is used sometimes for & sometimes against a feature
[11:25:48] <parv> .. that is not limited to Python of course
[11:26:06] *** Quits: kiska3 (james@user/kiska) (Remote host closed the connection)
[11:26:10] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[11:26:24] <parv> ... sometimes entirely discarded
[11:27:47] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[11:27:54] <Helenah> Screw it, back to not making a TUI...
[11:28:59] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[11:29:04] <parv> Helenah, Could you elaborate on the reasons?
[11:29:53] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e) (Ping timeout: 256 seconds)
[11:29:57] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:30:09] <Helenah> parv, I can never get my head around it, always find UI of any kind whether that be a terminal UI, web UI, desktop UI, etc, I just find them really overwhelming to make.
[11:31:08] <Helenah> I'm better at just doing backend code. lol
[11:31:27] <parv> Helenah, Ok. So you prefer CLI, use options and/or a configuration file?
[11:32:14] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:32:33] <Helenah> parv, I simply wanted to be able to display an output while waiting for input() concurrently.
[11:32:57] <Helenah> The input would be a single line at the bottom.
[11:33:05] *** Quits: modlin (modlin@user/modlin) (Remote host closed the connection)
[11:33:22] *** Joins: grooverman (~grooverma@177.102.119.40)
[11:33:24] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[11:33:42] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[11:33:52] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[11:33:55] <parv> Helenah, Thanks
[11:34:09] <Helenah> parv, For?
[11:34:19] <rindolf> Helenah: tkinter or curses
[11:34:26] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:34:46] <Helenah> rindolf, tkinter is GUI so not suitable. ncurses is... I don't know.
[11:34:55] <parv> Helenah, For explaining/satisfying my curiosity.
[11:35:03] <Helenah> parv, Sure, you're welcome. :)
[11:35:06] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:35:11] *** Joins: erica (~erica@user/erica)
[11:35:41] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:35:43] <Helenah> rindolf, Do I need to use such a complicated library for such a simple thing (input and output concurrency)?
[11:36:29] *** Joins: Viewday116 (~Viewday@user/viewday)
[11:36:31] *** Quits: erica (~erica@user/erica) (Client Quit)
[11:36:37] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[11:36:41] *** Quits: savolla (~savolla@84.44.28.28) (Ping timeout: 256 seconds)
[11:37:06] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[11:37:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:37:59] *** Joins: erica (~erica@user/erica)
[11:38:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:38:30] *** Viewday116 is now known as Viewday11
[11:38:41] *** Joins: NeoCore (~neocore@217.138.207.205)
[11:39:39] *** Quits: gothicserpent (~gothicser@89.45.90.225) (Quit: Leaving)
[11:40:45] <rindolf> Helenah: there is http://www.leonerd.org.uk/code/libtickit/ and others too
[11:41:09] <velix> SnoopJ: The author says, my fix doesn't report "None" shall I go in the current solution. Shall I go for the "new solution"? Does find_library() always throw? Even in old Python2/3? https://bpa.st/2ONQ
[11:42:10] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:42:28] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[11:42:51] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:43:02] *** Quits: luigibu (~luigi@80.30.200.2) (Ping timeout: 256 seconds)
[11:44:21] <rindolf> Helenah: and judging by http://www.lemis.com/grog/Documentation/PUS/ unix terminals are a mess
[11:44:23] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-014.client.tudelft.eduvpn.nl)
[11:44:57] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[11:45:43] *** Joins: kosh (~kosh@user/kosh)
[11:47:37] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Ping timeout: 240 seconds)
[11:47:47] <Helenah> rindolf, Oh dear.
[11:48:50] *** Quits: parv (~quass@user/parv) (Quit: parv)
[11:49:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:49:53] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:51:41] *** Joins: rvalue (~rvalue@user/rvalue)
[11:51:53] *** Joins: fikran (~fikran@user/fikran)
[11:52:08] *** Joins: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001)
[11:56:06] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[11:56:58] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:57:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[12:00:57] *** Joins: raxor2k (~raxor2k@78.158.235.82)
[12:03:00] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[12:03:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:04:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:05:10] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:05:38] *** Joins: seednode (~seednode@user/seednode)
[12:08:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[12:08:46] *** Joins: p-i- (~Ohmu@183.89.32.187)
[12:09:01] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:10:36] *** Joins: djb27_ (~djb27@user/djb27)
[12:11:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[12:13:09] <aphysically> jinsun: yeah as you can see I filed a bug for it in mypy
[12:13:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[12:13:58] *** Joins: Viewday114 (~Viewday@user/viewday)
[12:14:46] *** Quits: djb27 (~djb27@user/djb27) (Ping timeout: 256 seconds)
[12:15:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:15:35] *** Viewday114 is now known as Viewday11
[12:16:16] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[12:16:17] <jinsun> yeah saw that, unfortunately it is mypy, so you might not see any action for many days
[12:16:28] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:16:29] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:16:52] *** Joins: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr)
[12:16:58] <aphysically> speaking of, somebody randomly opened a PR (as their first contribution!) that would fix a mypyc bug I filed a long time ago
[12:17:17] <aphysically> apparently it was a pretty straightforward fix (supposing a review pans out)
[12:17:36] <aphysically> https://github.com/python/mypy/pull/11778
[12:18:14] <aphysically> jinsun: it might be a noisy thing to fix too - as in changing the mypy behavior for the thign I reported may show up in open source projects as new errors
[12:18:37] <aphysically> which is..probably a good thing?
[12:20:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:20:58] <jinsun> yeah I vote good thing too
[12:21:26] <rakoon> How can i type annotate a decorator that returns a different type of what the function returns. Say the decorated function returns a response and the decorator takes that and returns a dict out of it?
[12:21:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[12:21:56] *** Joins: parv (~quass@user/parv)
[12:23:35] *** Joins: delvian (~delvian@41.13.243.217)
[12:25:50] *** Joins: Auron (~Auron956@user/auron)
[12:26:45] *** Quits: Babar (~Babar@171.226.230.141) (Ping timeout: 268 seconds)
[12:30:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:30:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[12:30:57] <jinsun> rakoon: make the decorator take Callable[..., Response] and return Callable[..., dict] ?
[12:31:05] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:31:07] *** Quits: p-i- (~Ohmu@183.89.32.187) (Remote host closed the connection)
[12:31:22] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:32:17] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Read error: Connection reset by peer)
[12:32:48] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[12:33:53] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:35:55] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[12:36:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:36:27] <rakoon> Forgot to say that the function I am decorating is an async one
[12:36:39] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:36:55] <rakoon> plus i use factory decorator (decorator that takes argument)
[12:37:23] <rakoon> Shall i paste an example?
[12:37:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:38:36] *** Joins: mat001_ (~mat001@c-71-202-208-145.hsd1.ca.comcast.net)
[12:39:01] *** Joins: Zer000 (~phil@64.137.132.26)
[12:39:42] *** Quits: mat001 (~mat001@c-71-202-208-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:41:23] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[12:41:47] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[12:42:27] *** Joins: naan (~Naan@user/naan)
[12:44:51] *** Joins: Viewday119 (~Viewday@user/viewday)
[12:45:54] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[12:46:17] *** Joins: plastico (~plastico@neomutt/plastico)
[12:46:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:46:24] *** Viewday119 is now known as Viewday11
[12:46:42] *** Joins: legola (~legola@46.235.101.65)
[12:47:13] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:36] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:51:20] *** Joins: slav0nic (slav0nic@python.su)
[12:51:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:52:53] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[12:53:12] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[12:53:31] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[12:53:33] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e570:ba57:54e7:4c10:0:281)
[12:53:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:55:14] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 260 seconds)
[12:55:56] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[12:57:10] *** Joins: EGH (~EGH@185.25.195.104)
[12:57:18] *** Joins: arinov (~arinov@213.194.126.155)
[13:00:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[13:00:55] *** Quits: EGH (~EGH@185.25.195.104) (Client Quit)
[13:01:14] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[13:02:05] *** Quits: nomic (~nomic@185.198.243.148) (Quit: Leaving)
[13:02:21] *** Joins: nomic (~nomic@185.198.243.148)
[13:04:20] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[13:04:35] *** Joins: thiras (~thiras@user/thiras)
[13:05:02] *** Joins: Viewday118 (~Viewday@user/viewday)
[13:05:23] *** Joins: EGH (~EGH@185.25.195.104)
[13:05:47] *** Joins: stultusv (~stultusv@user/stultusv)
[13:06:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:06:36] *** Viewday118 is now known as Viewday11
[13:07:28] <velix> Could anyone please have a look? The author says, my fix ("current solution") wouldn't report "None". Shall I go for the "new solution"? Does find_library() always throw? Even in old Python2/3? https://bpa.st/2ONQ
[13:08:25] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[13:08:41] *** Quits: nicode (~nic@2607:f2c0:9422:4500:c3a0:cf3e:273a:1698) (Ping timeout: 245 seconds)
[13:09:12] <powftw> can somebody give a suggestion to a problem that i'm trying to solve
[13:09:38] <powftw> https://bpa.st/WW4A
[13:09:43] *** Joins: luigibu (~luigi@80.30.200.2)
[13:13:29] <supakeen> You would only need to check the 'both are 0' case.
[13:13:35] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[13:14:45] <supakeen> The rest would be something close to `"hello " + " and ".join([" ".join(names_one), " ".join(names_two)])`.
[13:16:42] *** Quits: raxor2k (~raxor2k@78.158.235.82) (Ping timeout: 268 seconds)
[13:17:12] *** Joins: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11)
[13:18:14] <supakeen> velix: Where does this `_find_library` come from.
[13:18:55] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:19:16] <velix> supakeen: oh sorry, it's the normal find_library imported as _final_library.
[13:19:46] <velix> supakeen: ctypes.util.find_library
[13:20:38] <supakeen> In what case does that throw OSError?
[13:22:00] *** Joins: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th)
[13:22:06] <supakeen> Its documentation seems to indicate it'll return None if it can't find a library by name. If that's the case then the OSError is not an indication of failing to find a library by name but a different failure.
[13:22:39] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:23:23] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[13:23:49] <supakeen> In any case, one could do `lib = _find_library(lib_name.removeprefix("lib"))` which would be the same as the two separate lookups you're doing now.
[13:24:00] *** Quits: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11) (Quit: Quit)
[13:24:15] <supakeen> (for 3.9+, for lower it'd be `_find_library(lib_name if not lib_name.startswith("lib") else lib_name[3:])`.
[13:24:23] <supakeen> And then handle the OSError on that.
[13:26:00] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[13:26:33] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[13:26:42] *** Joins: Myst (~Myst@user/myst)
[13:29:19] <powftw> supakeen: that kinda does the work. But, what if i want to use indexes than join as shown in my example
[13:29:48] <powftw> There are many situations that I've to do the same in different scenarios
[13:29:49] <supakeen> powftw: Then you'll end up writing a lot of code or a loop over the indexes.
[13:30:07] <powftw> Hmm
[13:30:31] <supakeen> One could use `for index in range(len(L)): L[index]` but that's just silly as you could also write `for item in L: L`.
[13:31:13] <velix> supakeen: Sorry, professor was on the phone.
[13:31:16] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[13:31:24] <velix> supakeen: No, since 3.9+ with "lib" in the name.
[13:31:32] <velix> hmm typo
[13:31:39] <velix> supakeen: No, 3.9+ breaks with "lib" in the name.
[13:31:49] <supakeen> velix: In that case the thing I posted still ensures that you don't call find_library with "lib" in the name at all.
[13:31:51] *** Joins: shad (~shad@user/shad)
[13:32:15] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:33:04] <velix> supakeen: okay, let me build this together and test.
[13:33:29] <supakeen> With the caveat that I'm going on your description of find_library :)
[13:34:15] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[13:34:41] <powftw> supakeen: think of my example but the return is more complicated. The name_one[0] and name_one[1] position varies in the same line. May be I've to add with some other strings. So we cannot use join() as it's not what we need. I'd need something like ```"hello index[0] your friend index[1] joins names_two[0]"``` if only one element exist in both lists, it changes according to that. So the return is more dynamic
[13:35:10] <powftw> Therefore, for 4 situations, we have different returns
[13:35:11] <supakeen> In that case you're relegated to writing a lot of code :)
[13:35:44] <powftw> I'm looking for a solution to this as it's confusing myself sometimes
[13:36:36] *** Joins: Viewday110 (~Viewday@user/viewday)
[13:36:56] <velix> Does anyone know an Online Python IDE like this one for even more versions? https://www.jdoodle.com/python3-programming-online/
[13:37:18] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:38:04] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:38:05] *** Viewday110 is now known as Viewday11
[13:39:44] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:45:29] <velix> supakeen: Seems like I don't need try/catch here, since your solution doesn't throw. https://bpa.st/IREQ
[13:45:40] *** Joins: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad)
[13:46:06] <supakeen> Correct, you'd never pass something prefixed with lib with my idea.
[13:46:43] <velix> supakeen: I wanted to keep this for downwards compatibility and be polity to keep the original code ;)
[13:46:50] <velix> But it works even on Python 2.7
[13:46:56] <velix> So ... I don't care.
[13:46:59] <velix> Thanks a lot!
[13:47:01] <supakeen> That's a lot of backwards compatibility.
[13:47:03] <supakeen> No problem.
[13:47:37] *** Joins: theprophet (~theprophe@85.114.228.184)
[13:47:38] <velix> supakeen: yeah, the author still runs against 2.7 in Github workflow. I don't have a clue why, but otherwise I don't get through his tests :D
[13:48:22] <dreamer> hmmm. I'm trying to load an ssh private key into paramiko but it seems that it cuts off the first 4 characters and then fails to verify it: `paramiko.ssh_exception.SSHException: Invalid key (class: RSAKey, data type: -BEGIN RSA PRIVATE KEY-----`  << notice how the first `----` is missing
[13:48:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:49:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:49:34] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:49:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:52:20] *** Lord_of_Life_ is now known as Lord_of_Life
[13:52:47] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[13:54:14] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[13:56:09] *** Quits: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad) (Ping timeout: 268 seconds)
[13:57:52] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:59:02] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[13:59:20] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:59:35] *** Joins: kiska3 (james@user/kiska)
[13:59:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:59:39] *** Joins: jinsun__ (~quassel@user/jinsun)
[14:00:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:01:00] *** Joins: stonkey (~stonkey@user/stonkey)
[14:01:13] *** Joins: fikran (~fikran@user/fikran)
[14:03:01] *** Joins: raxor2k (~raxor2k@78.158.235.82)
[14:03:38] *** Joins: jinsun (~quassel@user/jinsun)
[14:03:48] <raxor2k> I have 2 asyncio function which i want to run concurrently, but one of them is going to be runned each second, and the other function each 5 secs.. any tip? : https://bpa.st/4JBQ
[14:04:05] <raxor2k> Ooh i can smell bjs getting ready to roast me on this one ..
[14:04:52] *** Joins: jinsun___ (~quassel@user/jinsun)
[14:05:43] <supakeen> Just schedule both tasks with .create_task.
[14:05:53] <supakeen> You don't need gather since you don't care about the result(s) at all.
[14:05:57] <Wulf> dreamer: for starters, please use PKCS#8 instead of legacy format.
[14:06:05] <grawity> dreamer: can you show the code?
[14:06:19] <Wulf> dreamer: "openssl pkey" can convert it for you
[14:07:17] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:07:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[14:07:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:09:17] <velix> A friend of mine said `isinstance(environ['HTTP_QUERY_STRING'], '')` might be faster than `if environ['HTTP_QUERY_STRING'] != ""` <-- that do you think?
[14:09:53] <supakeen> What.
[14:09:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[14:10:13] <grawity> uhh, unnecessary optimization aside, I don't see how that'd even work since "" isn't a type
[14:10:23] <supakeen> If you mean fastest to raise an exception then yes, the former wins.
[14:10:28] <velix> typo ;)
[14:10:34] <Wulf> velix: might raise an exception very fast, yes
[14:10:42] <velix> -> `isinstance(environ['HTTP_QUERY_STRING'], str)`
[14:10:52] <supakeen> Well then those checks do very different things.
[14:10:56] *** Quits: mat001_ (~mat001@c-71-202-208-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:10:57] <deniska> hey, look, CGI
[14:11:00] <grawity> yeah what else is it going to be besides str?
[14:11:01] <velix> supakeen: So I thought.
[14:11:03] <velix> deniska: WSGI
[14:11:14] <velix> grawity: don't ask me.
[14:11:19] <supakeen> An empty string is still a string.
[14:11:23] <velix> I also told him: hm?
[14:11:25] <raxor2k> supakeen: there are alot of different functions within asyncio, you have any "spreadsheet" i could use?
[14:11:29] <Wulf> velix: are you looking for "HTTP_QUERY_STRING" in environ?
[14:11:41] <dreamer> Wulf: I did a minimal local version using a StringIO object and `paramiko.RSAKey.from_private_key()` and this time it did work (tried this yesterday and it didn't ..)
[14:11:48] <supakeen> raxor2k: That spreadsheet is called 'the documentation' and you can find it here: https://docs.python.org/3/library/asyncio.html
[14:12:11] <supakeen> Specifically for the function I named: https://docs.python.org/3/library/asyncio-task.html#asyncio.create_task
[14:12:22] <velix> Wulf: Looking if it's set and if it's non ""
[14:12:25] <raxor2k> supakeen: im not fan of documentations in python as i think all of them are bad
[14:12:32] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 252 seconds)
[14:12:39] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:12:45] <Wulf> velix: if environ.get("HTTP_QUERY_STRING"):
[14:12:47] <supakeen> I can't help you with that.
[14:12:48] <dreamer> Wulf: but I'll have a look at using base64 encoded private keys in this way (I do have the entire key as base64, but that is basically the entire file including the headers)
[14:12:59] <grawity> velix: if it's not set, you'd get a KeyError either way; if it's non-"", isinstance() won't help you with that
[14:13:10] <velix> Wulf: Right now I do: `if "HTTP..." in environ and environ["HTTP..."] == '':`
[14:13:16] *** Joins: The-Compiler (~compiler@the-compiler.org)
[14:13:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:13:43] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:14:03] <Wulf> velix: or better yet: if query_string := environ.get("HTTP_QUERY_STRING"): print(query_string)
[14:14:20] *** Joins: Klinda (~superleag@user/klinda)
[14:15:05] <velix> Wulf: Sorry, I don't "get" it. How does this handle "" (empty string)?
[14:15:31] <Wulf> velix: does it work?
[14:15:48] <velix> I don't know what problem it should solve.
[14:15:50] <grawity> velix: in python, bool("") is False
[14:16:03] <Wulf> velix: your problem ;-)
[14:16:05] <grawity> velix: so the same "if value:" check can handle both None and ""
[14:16:29] <raxor2k> supakeen: what am i doing wrong here?: https://bpa.st/A2AA
[14:16:45] <velix> I just want to check if a key is set and its value isn't an empty string :D
[14:16:51] <Wulf> velix: exactly!
[14:16:56] <velix> oaky, let me try Wulfs thing. 1 sec
[14:17:23] <supakeen> raxor2k: I don't feel like helping you, you've ignored earlier remark on using `create_task` and refuse to refer to the documentation on it.
[14:17:27] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[14:17:40] *** Joins: jinsun (~quassel@user/jinsun)
[14:19:37] <velix> Wulf: nice, thanks
[14:21:42] *** Quits: jinsun___ (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[14:23:50] *** Joins: shad (~shad@user/shad)
[14:25:29] *** Joins: toastloop (toastloop@user/toastloop)
[14:29:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[14:31:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:31:29] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:35:03] *** Joins: greedom (~greedom@p200300de670f1f007bc99eece9ff08cf.dip0.t-ipconnect.de)
[14:37:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:38:21] *** Quits: denisse (~denisse@gateway/tor-sasl/denisse) (Ping timeout: 276 seconds)
[14:39:04] *** stella is now known as stenna
[14:40:50] *** Joins: Guest62 (~Guest62@dyx0pyyhkxbqsb1x8k47t-3.rev.dnainternet.fi)
[14:40:52] <Guest62> what are good Github alternatives for backup/mirror ?
[14:41:29] *** stenna is now known as stella
[14:42:28] <supakeen> There are plenty of code hosting websites out there, GitLab, sourcehut, bitbucket.
[14:42:36] <Guest62> cheers
[14:42:46] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[14:43:08] <supakeen> I just use a personal gitea instance and see github as the public side of things :)
[14:43:16] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:43:55] *** Quits: Guest62 (~Guest62@dyx0pyyhkxbqsb1x8k47t-3.rev.dnainternet.fi) (Client Quit)
[14:43:58] <deniska> For my personal projects I use a directory full of git repos on a NUC I access over ssh
[14:44:11] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[14:44:43] *** Joins: Viewday114 (~Viewday@user/viewday)
[14:45:57] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:46:05] *** Joins: ravan (~ravan@user/ravan)
[14:46:07] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[14:46:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:46:19] *** Viewday114 is now known as Viewday11
[14:46:40] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:46:43] <raxor2k> supakeen: but you understand what i try to do yes?
[14:46:52] <raxor2k> another guy told me that this is not possible with asyncio
[14:47:38] <supakeen> deniska: That's pretty much the same as what gitea does, except I have some organisation stuff in there.
[14:47:38] *** Joins: metus (~metus@186.67.158.250)
[14:47:41] <supakeen> Which is kinda nice.
[14:48:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[14:49:27] <deniska> supakeen: Yeah, I've poked at gitea, I guess if I ever need an issue page which isn't a text file nearby :)
[14:49:41] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[14:50:01] <powftw> Say I have a list. x = ["a", "b" , "d", "e"] let's say I've a string ```a="{} {}".format (x[1], x[3])``` the situation is, idk whether there will be x[3] element even exists. I mean, the list is more dynamic. It may, may not have all the elements in there. So, is there any way that even if the value is not existing, it should ignore and fill in the rest of the elements?
[14:50:56] <leduyquang753> Put a ternary or so in there.
[14:51:29] <powftw> Can you show a demo
[14:52:03] <leduyquang753> `"{} {}".format(x[1], x[3] if len(x)>3 else 0)`.
[14:52:32] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[14:52:45] <powftw> Else 0?
[14:52:52] <leduyquang753> Yes `else 0`.
[14:53:04] <leduyquang753> `0` is just a default value, you can put anything else in there.
[14:53:33] <leduyquang753> I mean something arbitrary I chose from the top of my head.
[14:56:07] <powftw> This is not what I'm expecting.
[14:56:25] <powftw> I thought there's some function to help to solve this..
[14:57:29] <leduyquang753> `x[3]` without adequate elements will just raise `IndexError` as usual, `format` can't help with that.
[14:57:31] *** Joins: toastloopex (toastloop@user/toastloop)
[14:57:49] <leduyquang753> It just receives whatever values you pass in.
[14:58:30] <raxor2k> bjs: are you here
[14:58:33] <powftw> Instead of throwing indexerror, just write what's available only
[14:59:22] <leduyquang753> If you just want to make a string representing that list of elements there is `join`.
[14:59:48] *** Joins: Klinda (~superleag@user/klinda)
[14:59:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a)
[15:00:47] <powftw> Variables are placed at different locations. Say x[1] is better than x[2]
[15:00:50] *** Quits: toastloopex (toastloop@user/toastloop) (Remote host closed the connection)
[15:00:54] *** Quits: toastloop (toastloop@user/toastloop) (Ping timeout: 268 seconds)
[15:01:21] <rindolf> powftw: use x[-1] then
[15:02:28] <powftw> It doesn't solve the problem.
[15:02:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[15:02:54] *** Joins: Viewday117 (~Viewday@user/viewday)
[15:03:25] <powftw> Just think about calling indexes like - "I hope x[1] is fine but x[3] is good"
[15:03:39] <powftw> There may or may not be x[3]
[15:03:58] <powftw> Still, I want it to ignore index error and add x[1] only
[15:04:07] <powftw> If x[3] available, then add it
[15:04:46] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:04:47] *** Viewday117 is now known as Viewday11
[15:07:37] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[15:09:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[15:11:27] <parv> Why IndexError is insurmountable when there is "try: ... ; except IndexError: yum()"?
[15:11:49] *** Joins: shad (~shad@user/shad)
[15:12:44] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[15:14:11] *** naan is now known as Naan
[15:15:32] *** Joins: phryk (~totallyno@user/phryk)
[15:16:34] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[15:17:38] *** Quits: delvian (~delvian@41.13.243.217) (Quit: Leaving)
[15:17:53] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:18:34] *** Joins: thiras (~thiras@user/thiras)
[15:19:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[15:20:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:20:30] *** Joins: Payam (~Payam@138.106.57.131)
[15:21:22] <Payam> hi if I have 30 string and I want to check if all of them ends with ".json" how do I do it the best most clever way?
[15:22:06] <supakeen> all(s.endswith(".json") for s in L)
[15:22:19] <dminuoso> powftw: Honestly at the root this is a design issue on your side. Add a barrier in between in which you assert some given structure.
[15:22:31] <Payam> this is just beautiful and so simple . Thanks supakeen
[15:22:38] <dminuoso> Rather than tacking "ad-hoc failover" on dynamic input on the string formatting line
[15:22:52] <Payam> supakeen what if they are not in a list?
[15:23:00] <supakeen> Then it depends on what they're in.
[15:23:06] <Payam> separate
[15:23:19] <supakeen> Can you put them in a list?
[15:24:11] <leduyquang753> powftw `f"{x[1]} {x[3]}" if len(x)>3 else str(x[1])`.
[15:24:11] <Repiphany> `... for s in whatever` works for things other than lists
[15:24:28] <supakeen> Or as Repiphany points out, any iterable really.
[15:24:31] <Payam> YEs I can do it. Thanks
[15:25:09] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[15:25:31] <powftw> leduyquang753: there are not only x[3], it may have 10 more.
[15:25:37] <powftw> It's okay I'll git into it
[15:25:41] <leduyquang753> Then write code to process that.
[15:25:49] <powftw> I thought there will be some 3rd party libs
[15:26:31] <leduyquang753> Trying to find a lib for every small task you want to do will be quite futile and actually inefficient.
[15:27:07] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:28:22] *** Joins: Deknos (~someone@user/menace)
[15:28:40] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:29:42] *** Joins: jinsun (~quassel@user/jinsun)
[15:30:49] *** Quits: dalan (~dalan@194-193-164-106.tpgi.com.au) (Quit: dalan)
[15:31:19] *** Joins: dalan (~dalan@194-193-164-106.tpgi.com.au)
[15:32:11] <Payam> what does "method could be a function " in pylint mean?
[15:32:49] *** Joins: Viewday116 (~Viewday@user/viewday)
[15:33:07] <jinsun> it means that you are not using the self parameter inside the method, so move it out of the class or make it staticmethod
[15:33:22] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[15:33:44] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[15:33:59] *** Joins: zeden (~zeden@user/zeden)
[15:34:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:34:49] *** Viewday116 is now known as Viewday11
[15:35:17] *** Quits: raxor2k (~raxor2k@78.158.235.82) (Ping timeout: 240 seconds)
[15:35:26] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:10] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:37:41] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:38:20] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:38:50] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[15:40:24] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:41:18] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[15:43:09] <Payam> can you have some thing like `yield i from `?
[15:43:10] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e570:ba57:54e7:4c10:0:281) (Remote host closed the connection)
[15:43:29] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[15:43:39] <Repiphany> `yield from` is a thing
[15:43:58] <jinsun> you can `yield i` or `yield from i`
[15:44:19] <jinsun> can't `yield i from` (what would that even do?)
[15:45:54] *** Joins: _ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[15:45:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:46:42] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[15:47:10] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Remote host closed the connection)
[15:48:35] *** Joins: jinsun (~quassel@user/jinsun)
[15:49:11] *** Quits: greedom (~greedom@p200300de670f1f007bc99eece9ff08cf.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:50:10] *** Joins: greedom (~greedom@p200300de670f1f007bc99eece9ff08cf.dip0.t-ipconnect.de)
[15:53:34] *** Joins: Guest4673 (~Guest4673@user/jmew)
[15:54:34] *** Joins: nyah (~nyah@94.6.71.219)
[15:54:57] *** Joins: ammarsalmi (~ammarsalm@154.121.63.155)
[15:55:15] *** Joins: darksun (~darksun@user/darksun)
[15:57:32] *** Joins: dez (uid92154@user/dez)
[15:57:47] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[15:58:17] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[15:59:56] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[16:00:44] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[16:00:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:00:52] *** Joins: lethu (~lethu@user/lethu)
[16:01:07] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[16:01:33] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:02:43] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[16:02:59] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Read error: Connection reset by peer)
[16:05:36] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[16:06:15] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:08:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:08:27] *** Joins: irrgit (~irrgit@192.241.175.183)
[16:09:37] *** Quits: greedom (~greedom@p200300de670f1f007bc99eece9ff08cf.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:10:34] *** Joins: fikran (~fikran@user/fikran)
[16:13:09] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 250 seconds)
[16:14:03] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[16:15:10] <VaniaPy> how can i query the elements with the same value in a mongo db collection? https://bpa.st/GLWQ i tried that but it just bypasses the search
[16:19:43] <braxas> hi, I'm looking for a way to get the direct (excluding transitive) dependencies of a wheel file/python project. The reason I want this is because I want to generate a requirements.in file for: https://github.com/googleapis/python-bigquery-sqlalchemy/blob/main/samples/snippets/requirements.txt
[16:20:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:20:22] <braxas> And I don't want to put sqlalchemy-bigquery in it, because that is what is being tested, but I want all it's direct dependencies in it
[16:21:04] <braxas> This gives me the info, but not cleanly: pipx run --spec pkginfo pkginfo -f requires_dist dist/sqlalchemy_bigquery-1.2.2-py2.py3-none-any.whl
[16:22:36] <braxas> ah, python setup.py egg_info, then sqlalchemy_bigquery.egg-info/requires.txt
[16:22:37] <braxas> great
[16:23:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:25:48] *** Joins: evocatus (~evocatus@62.182.78.42)
[16:27:15] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:27:27] *** Joins: denisse (~denisse@gateway/tor-sasl/denisse)
[16:29:00] <koopman> @VaniaPy: why db[‘logs’]? Shouldn’t that be json something?
[16:29:31] <VaniaPy> koopman it's dict
[16:30:04] <koopman> So logs is in db?
[16:30:36] <koopman> What’s does print(collections) provide?
[16:32:50] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:33:06] *** Joins: Viewday112 (~Viewday@user/viewday)
[16:33:32] *** Quits: moogs (~moogs@12.146.254.146) (Quit: Connection closed)
[16:34:10] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c)
[16:34:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:34:52] *** Viewday112 is now known as Viewday11
[16:36:37] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[16:36:41] <VaniaPy> it doens't print antyhing
[16:37:20] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[16:37:45] <llanhmod> VaniaPy: logs is a collection or db?
[16:38:25] <Saxtheowl> Do you know why my loop never reach the end and print "ok3" in this code https://bpa.st/COSA ?
[16:38:30] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[16:38:52] *** Joins: nrg (~NRG@user/nrg)
[16:39:02] *** Quits: evocatus (~evocatus@62.182.78.42) (Ping timeout: 240 seconds)
[16:39:32] *** Joins: mat001 (~mat001@c-69-181-156-104.hsd1.ca.comcast.net)
[16:39:34] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 268 seconds)
[16:40:25] *** Joins: madduck (~madduck@user/madduck)
[16:40:36] <bjs> Saxtheowl: you have a `try` but no except or finally block. This code can't run at all.
[16:40:41] *** Quits: luva (~luva@37.120.197.44) (Quit: Ping timeout (120 seconds))
[16:40:55] *** Parts: Guest4673 (~Guest4673@user/jmew) ()
[16:41:18] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:ea20:d6db:daa:1f1d)
[16:41:19] *** Joins: luva (~luva@37.120.197.44)
[16:41:28] <jinsun> yeah this is SyntaxError
[16:41:49] <Saxtheowl> @bjs here is the full code sorry https://bpa.st/JYIQ
[16:42:14] <bjs> Saxtheowl: this code doesn't have a print "ok3" in it
[16:42:23] <bjs> oh it does sorry
[16:42:28] <bjs> Oh I see, the print is inside the try.
[16:42:44] <bjs> Saxtheowl: do you see "new game" get printed?
[16:42:52] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:43:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:43:21] <VaniaPy> koopman i think a collectionk
[16:44:13] <Saxtheowl> yes, new game is printed
[16:45:02] *** Joins: Viewday117 (~Viewday@user/viewday)
[16:45:58] <bjs> Saxtheowl: well that explains why you don't see the ok3 right?  There was an OSError exception, so you never got there and you did the execv stuff instead
[16:46:08] <Payam> if B is a subspace of A and both are sets how do I get A-B?
[16:46:15] <Payam> is it A-B?
[16:46:19] <bjs> Payam: does A-B work?
[16:46:22] <VaniaPy> koopman yeah,it's a collection
[16:46:43] <Payam> bjs Haven't tried. Sets are huge in this thing that I work with
[16:46:46] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:46:47] *** Viewday117 is now known as Viewday11
[16:47:05] <bjs> Payam: why not open Python in another terminal and try :P
[16:48:39] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:49:08] *** Joins: tejr_ (~tejr@user/tejr)
[16:49:32] <Saxtheowl> @bjs yes, I think I mistaken something, what I want is to count each time it enter inside one of the if and when this counter reach a certain amount execute a command
[16:50:09] <bjs> Saxtheowl: I don't see anything in your code that looks like it's "counting"
[16:50:59] *** Joins: ano (~ano@user/ano)
[16:51:45] <llanhmod> VaniaPy: okay, then what is the db name?
[16:52:08] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:52:51] <VaniaPy> llanhmod hmm logs i guess,
[16:52:54] <llanhmod> VaniaPy: you want something like  `db.collection.find({"key": "value"})`
[16:53:06] <llanhmod> you just said logs is a collection..lol
[16:53:33] <VaniaPy> llanhmod i see that in the compass the table is named logs.logs lol
[16:53:43] <llanhmod> oh
[16:53:49] <llanhmod> strange
[16:53:52] <VaniaPy> i mean the first logs is the db and the second is the collection?
[16:53:59] <VaniaPy> it's my first time using
[16:54:01] <VaniaPy> mongo
[16:54:07] <VaniaPy> so maybe i'm confused
[16:54:07] *** Joins: moogs (~moogs@12.146.254.146)
[16:54:08] <llanhmod> well that isn't confusing in anyway...
[16:56:13] *** Quits: m1dnight (~christoph@christophe.dev) (Ping timeout: 268 seconds)
[16:56:52] <llanhmod> db should be something like db= MongoClient(), you dont have anything like that in that paste.
[16:56:58] *** Quits: ammarsalmi (~ammarsalm@154.121.63.155) (Ping timeout: 256 seconds)
[16:57:08] <llanhmod> are you using PyMongo or anything?
[16:58:18] <VaniaPy> hmm
[16:58:27] <VaniaPy> mongo = pymongo.MongoClient(host='localhost', port=27017, serverSelectionTimeoutMS=1000)
[16:58:31] <VaniaPy> this one
[16:58:31] <llanhmod> I recall the mongodb site having something for diff language, ie python/java... cannot find the page now.
[16:59:00] <llanhmod> okay. so the db is mongo
[16:59:27] <llanhmod> then you want `mongo.logs.find({})
[16:59:37] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[17:00:19] <llanhmod> VaniaPy: one sec...gotta move my vehicle to otherside of street.
[17:00:30] <Saxtheowl> thx for your help, im gonna read some doc and fix my code
[17:01:02] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[17:01:36] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 245 seconds)
[17:02:03] *** Joins: esther (~esther@2607:fb90:20d7:fe9c:4c06:1d07:54bb:cee0)
[17:03:03] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:04:44] <llanhmod> ok
[17:05:07] *** Joins: Viewday113 (~Viewday@user/viewday)
[17:05:25] <llanhmod> yeah...good idea! always do that first before asking. and good luck!
[17:05:50] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:06:15] <VaniaPy> llanhmod ok,i'm trying this
[17:06:17] *** Quits: esther (~esther@2607:fb90:20d7:fe9c:4c06:1d07:54bb:cee0) (Ping timeout: 240 seconds)
[17:06:20] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[17:06:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:06:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:07:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:07:11] *** Viewday113 is now known as Viewday11
[17:07:29] *** Joins: m1dnight (~christoph@christophe.dev)
[17:07:31] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:07:40] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:08:36] <VaniaPy> yeah! that one worked! thanks!
[17:09:31] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[17:12:36] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:13:06] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[17:13:44] *** Joins: alzgh (~alzgh@user/alzgh)
[17:13:58] <Payam> If I have a huge list with dictionaries with many elements in it.  I have a list of to check the values and put the values in an other dictionaries. I need to loop thourgh x and search fot them in the list A or is there any more clever way of doing that? : https://bpa.st/DBRA
[17:16:14] <leduyquang753> Construct a dict with keys as the things you are searching in.
[17:16:51] *** Joins: LimeOn (~user@user/limeon)
[17:22:34] <Payam> yes but I am interested if there is any build-in or operator method that can do it for me.
[17:23:51] <leduyquang753> There is not a Python feature that can do anything you wish for.
[17:24:32] *** Joins: nomic2 (~nomic@185.198.243.148)
[17:24:38] *** Quits: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th) (Remote host closed the connection)
[17:25:13] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[17:25:48] <wyre> do I need the if __name__ == "__main__": statement in the file __main__.py?
[17:27:34] *** Quits: nomic (~nomic@185.198.243.148) (Ping timeout: 256 seconds)
[17:27:37] <Payam> leduyquang753 itemgetter(list_of_those, the original dict)
[17:27:38] *** nomic2 is now known as nomic
[17:27:39] <Payam> ?
[17:28:24] <leduyquang753> That's only something you imagined.
[17:28:48] *** Joins: delvian (~delvian@41.13.216.40)
[17:28:59] *** Joins: bloody (~bloody@user/bloody)
[17:29:13] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:29:34] <leduyquang753> If you are lucky someone may have thought about it and solved it before you, but I assure you the time spent searching for that particular library will likely exceed the time writing that code yourself anyway.
[17:30:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:30:38] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:31:24] *** Joins: Bardon_ (~Bardon@user/Bardon)
[17:32:01] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 250 seconds)
[17:32:37] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[17:33:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:33:39] *** Quits: demsh (ldka1uktst@hermod.demsh.org) (Quit: nyaa~)
[17:33:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[17:36:18] *** Joins: Viewday116 (~Viewday@user/viewday)
[17:36:20] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:36:24] *** Joins: demsh (b86gbgex0y@hermod.demsh.org)
[17:36:27] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[17:36:28] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:37:09] *** Joins: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs)
[17:38:10] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:38:21] *** Viewday116 is now known as Viewday11
[17:38:37] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[17:38:39] *** cdown_ is now known as cdown
[17:38:47] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:42:18] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[17:43:41] *** Joins: thiras (~thiras@user/thiras)
[17:45:16] <BinarySavior> hi, I have a small snippet of code using python/pandas and it's taking forever to perform this operation.  Is there perhaps a more efficient way of doing this? https://regex101.com/r/RjSFwZ/1
[17:45:41] <BinarySavior> sorry for using regex101, network policy will not allow me to access pasting sites
[17:46:13] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[17:47:07] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[17:48:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:48:16] *** Joins: recoup (~Guest87@183.82.176.201)
[17:48:26] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:48:37] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[17:48:56] *** Joins: portalrat (~portalrat@user/portalrat)
[17:48:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[17:50:13] *** Quits: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs) (Quit: Leaving)
[17:50:22] <leitz> If a venv quits working, in that it can't find its own pip, etc, does rerunning "python -m venv venv" hurt anything?
[17:50:23] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:51:24] <deniska> leitz: venv are supposed to be trivially recreatable
[17:51:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[17:51:45] <deniska> leitz: venv won't do anything by default if the target dir is not empty
[17:52:19] <deniska> there's --clear argument you can pass, but that clears the whole dir
[17:52:33] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:52:39] *** Joins: widp (~user@165.225.123.46)
[17:53:36] <leitz> deniska, I ran it in the apps' dir, and it then let me run pip. I'm still not sure what caused the breakage, but it seems fixed.
[17:54:43] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:59:18] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:00:53] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[18:00:54] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Read error: Connection reset by peer)
[18:01:16] *** Quits: capn (~capn@user/capn) (Quit: Later!)
[18:02:11] *** Joins: moog (~moog@107.126.53.64)
[18:08:17] <SnoopJ> velix, hmm, I see their point. I guess setting to `None` in the handler is better after all because it tries to address this case.
[18:08:56] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[18:09:33] <The-Compiler> leitz: wild guess: you're on Archlinux?
[18:10:39] *** JingleJazzy is now known as jazzy
[18:10:40] *** Quits: tdsmith (~tdsmith@tds.xyz) (Quit: Bye!)
[18:11:55] <leitz> The-Compiler, Void.
[18:13:00] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-70e2-8228-1542-fc2b.res6.spectrum.com)
[18:13:34] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[18:13:39] *** Joins: Viewday116 (~Viewday@user/viewday)
[18:14:37] *** Quits: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com) (Ping timeout: 240 seconds)
[18:15:20] *** jazzy is now known as JingleJazzy
[18:15:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:15:45] *** Viewday116 is now known as Viewday11
[18:16:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:17:27] <The-Compiler> leitz: might be the same reason then if you happened to upgrade your system-wide Python from 3.9 to 3.10 recently
[18:17:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:18:08] <leitz> The-Compiler, likely so. Knowing why really helps.
[18:18:09] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:18:36] <leitz> The-Compiler, Void stays pretty current on packages, but that can cause other issues.
[18:18:40] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:19:54] *** Joins: fikran (~fikran@user/fikran)
[18:19:59] *** Joins: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th)
[18:20:07] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: Leaving)
[18:20:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 240 seconds)
[18:20:49] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[18:24:05] *** Joins: a0z1 (~a0z1@194.36.25.53)
[18:24:20] *** Joins: evocatus (~evocatus@62.182.78.42)
[18:24:24] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[18:25:38] *** Joins: cdown__ (~cdown@163.114.131.1)
[18:25:44] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:25:50] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:26:17] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:27:12] *** Joins: sebres (~sebres@pronat.wincor-nixdorf.com)
[18:27:17] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[18:27:23] *** cdown__ is now known as cdown
[18:29:25] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:30:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[18:32:18] *** Joins: zebrag (~chris@user/zebrag)
[18:32:47] *** Joins: Viewday116 (~Viewday@user/viewday)
[18:33:55] <sebres> can someone possibly provide a clue for that (I'm pretty sure there's no such issue in 3.9, but...) - `time.time()` sporadically returns unix-time with 1 year "increment" (whether linux `date` allegedly does not), https://github.com/fail2ban/fail2ban/issues/3187#issuecomment-998813086
[18:34:11] <recoup> Hey, I'm learning Python using tasks. Can someone assist with printing simple graphs without the use of libraries. Something like this. https://brainly.in/question/31644149
[18:34:11] <sebres> I hope really he doesn't kidding me
[18:34:22] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:34:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:34:42] *** Viewday116 is now known as Viewday11
[18:36:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:36:05] <supakeen> They seem to not be kidding you, but that's also something that's most definitely not normal.
[18:37:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:38:27] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[18:39:34] <supakeen> Quite the interesting thing.
[18:39:35] *** Joins: georgios (~georgios@user/georgios)
[18:40:43] <bjs> recoup: what libraries *are* you allowed to use?
[18:42:11] <VaniaPy> is there a way to exclude an element from appeding ? in a python list
[18:42:16] <recoup> bjs None, or should I say, it should be run in default Jupyter Notebook.
[18:42:26] *** Joins: arinov (~arinov@178.240.190.167)
[18:42:51] <bjs> VaniaPy: what do you mean? when you call append() the element gets appended.
[18:43:00] *** Joins: jinsun (~quassel@user/jinsun)
[18:43:04] <bjs> VaniaPy: if you don't want a certain element appended to the list, then just don't append it
[18:43:09] <VaniaPy> bjs let me show you
[18:43:48] <bjs> recoup: you should figure out what libraries you are allowed to use,  can you use matplotlib?
[18:43:52] <recoup> bjs I found a somewhat related solution here that doesn't involve filling up with empty spaces, (https://stackoverflow.com/a/54222117). But can't figure out how to use that to my sample problem.
[18:43:53] <bjs> that's the usual library for plotting graphs.
[18:43:54] <supakeen> sebres: To put you at ease, I have also never seen this happen in my career :)
[18:44:08] <VaniaPy> bjs https://bpa.st/LPUQ for example i don't want to append the alert to the empty logs list (alert is a dict)
[18:44:22] <recoup> bjs matplotlib or no other libraries cannot be used.
[18:44:24] <bjs> VaniaPy: you mean if data = {} ?
[18:44:38] *** Joins: Viewday116 (~Viewday@user/viewday)
[18:44:59] <sebres> supakeen: thx
[18:45:03] <bjs> recoup: you have to make an ASCII-art graph?  okay
[18:45:08] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[18:45:11] <bjs> recoup: well what have you done so far?
[18:45:20] <supakeen> I've seen clocks act really weird but not while relegated to a single process.
[18:46:00] *** Joins: rom16384 (~Adium@bl18-251-205.dsl.telepac.pt)
[18:46:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:46:21] *** Viewday116 is now known as Viewday11
[18:47:20] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[18:48:17] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[18:48:52] <bjs> recoup: have you used Python before?  are you familiar with lists?  Maybe it'll be easier to draw the diagram on rotated 90deg (on its side) first?
[18:49:04] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[18:49:20] *** Joins: daoudr_ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[18:49:38] <recoup> bjs Yeah, output is just an ASCII art graph. Haven't done much, just editing the other similar solution. https://bpa.st/ACNA Not sure how to proceed though, which is why I'm stuck.
[18:49:53] *** Joins: sincorchetes (~sincorche@72.red-79-159-143.dynamicip.rima-tde.net)
[18:50:16] <sincorchetes> Hi all, How I can match changes between 2 lists?
[18:50:17] *** Quits: luigibu (~luigi@80.30.200.2) (Ping timeout: 252 seconds)
[18:50:31] *** Parts: rom16384 (~Adium@bl18-251-205.dsl.telepac.pt) ()
[18:50:50] <bjs> recoup: In Python `def` is used to define functions, that `def list =` line doesn't look quite right
[18:50:51] <sebres> supakeen: well, strictly spoken it is not single process, it looks like it is python processes only (one in fail2ban from systemd unit, another in shell)
[18:50:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:51:20] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:51:31] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[18:51:39] <recoup> bjs You think rotating would be easier? I have no idea, but my opinion is, getting back the rotated image will just be an additional step, and this is supposed to be a simple task.
[18:51:41] <mikoto-chan> >ModuleNotFoundError: No module named 'setuptools'
[18:52:12] <bjs> recoup: I'm not saying your final solution would figure it out rotated and then re-rotate back.  I'm suggesting similar problems that might be easier to solve to help you build up to the whole thing
[18:52:13] <mikoto-chan> I have this package installed with my package manager
[18:52:28] <mikoto-chan> why is it still complaining and why does this happen so often with Python software?
[18:52:56] <recoup> bjs yea, igore that def in 'def list'. Like I said, I'm working on the code, not sure how to proceed.
[18:53:00] *** Joins: rajkosto (~rajkosto@77-46-243-198.dynamic.isp.telekom.rs)
[18:53:26] <supakeen> mikoto-chan: because package managers and distros often have very different ideas on how to manage python software, the most likely culprit is that you ahve multiple python versions installed on your system and the one you execute isn't the one your package manager installs for
[18:53:40] <bjs> recoup: well, do you have something you can actually run?
[18:53:46] <bjs> even if it doesn't produce the right output
[18:54:02] *** Joins: jinsun (~quassel@user/jinsun)
[18:54:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[18:54:15] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:55:40] <mikoto-chan> supakeen: I figured that it was my mistake for not setting the correct Python target on Gentoo, oops
[18:56:11] *** Quits: rajkosto (~rajkosto@77-46-243-198.dynamic.isp.telekom.rs) (Client Quit)
[18:56:20] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[18:56:30] <supakeen> mikoto-chan: in general it's just a bit of annoyance, the usual way to deal with it is to keep everything for development into virtual environments per project and to not install anything for development with the system package manager
[18:56:33] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:56:36] <recoup> bjs just the one code that you looked at. :(
[18:56:44] <supakeen> i only use the system package manager for some tooling that i want systemwide (and even that can be super dodgy)
[18:56:54] <bjs> recoup: okay well here's some code that doesn't do what you want but might help a bit https://bpa.st/AG4Q
[18:57:11] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:57:47] <bjs> recoup: (it is different because it doesn't count up/down from the previous, it draws it on its side, and it uses * rather than / and \)
[18:57:57] <sincorchetes> I just only see examples for numbers of compare two list in Python... :/
[18:58:12] <bjs> sincorchetes: i'm not sure what you were asking
[18:58:52] *** Joins: fling (~fling@user/fling)
[18:59:52] <sincorchetes> bjs, I have two lists that contain only strings in the items. I want to compare each position of each list between them and get the differences.
[19:00:04] <bjs> sincorchetes: what do you mean by "get the differences"
[19:00:45] <sebres> sincorchetes: opposition to intersection (which can be `set(a) & set(b)`)
[19:01:08] <sincorchetes> bjs, https://pastebin.com/dtN1EeRz
[19:01:12] <sebres> >>> a = [1, 2, 3]; b = [2, 3, 4]; set(a) & set(b)
[19:01:12] <sebres> {2, 3}
[19:01:33] <bjs> sincorchetes: oh I see, you want all the strings that not in both?
[19:01:59] <recoup> bjs Saw this solution somewhere in stack/reddit, figured going with the row/ column to print the necessary characted would be better than filling whitespaces to entire output screen. Thanks though, I'll have a look at this one once again.
[19:02:00] <recoup> Would you happen to know how to take alternate numbers (odd,even) from a list to print / and \ accordingly in output?
[19:02:08] <bjs> sincorchetes: but what about "coming" ?
[19:02:09] <sincorchetes> lol and comming of course, sorry my typo bjs
[19:02:13] <bjs> okay
[19:02:18] <bjs> sincorchetes: set(list_one).symmetric_difference(list_two)
[19:02:41] <recoup> I understood the problem, can think of a solution in my mind but can't convert it into code:D
[19:02:57] <bjs> recoup: I don't really understand how you don't fill the screen with whitespaces when your example image had lots of whitespace in it
[19:03:10] <sincorchetes> bjs, thanks !! It's works great :D
[19:04:14] <bjs> recoup: There are clever ways,  but there's also just making a variable: `char = "/"` then each iteration just make it be the other one
[19:04:31] <recoup> bjs something like this, how it doesn't rely on whitespaces? https://bpa.st/26PQ
[19:04:44] <bjs> recoup: line 22 is printing whitespaces
[19:05:37] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[19:05:57] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[19:06:04] <recoup> bjs Oops! You're right. Since there wasn't a comment mentioning a space, the actual space in the code wasn't very much visible to naked eye.
[19:06:09] <recoup> Thanks for pointing that out.
[19:07:37] *** Quits: delvian (~delvian@41.13.216.40) (Ping timeout: 240 seconds)
[19:07:48] *** Joins: Viewday115 (~Viewday@user/viewday)
[19:08:17] *** Quits: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com) (Ping timeout: 240 seconds)
[19:09:05] *** Joins: hackers (~self@user/hackers)
[19:09:15] <recoup> I'll work on the code you sent, and see if I can move forward, hopefully without losing anymore of my leftover hairs!
[19:09:38] <recoup> bjs Thank you, for now.
[19:10:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:10:12] *** Viewday115 is now known as Viewday11
[19:10:34] *** Quits: widp (~user@165.225.123.46) (Read error: Connection reset by peer)
[19:13:37] *** Quits: arinov (~arinov@178.240.190.167) (Ping timeout: 240 seconds)
[19:16:34] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[19:17:09] *** Joins: arinov (~arinov@178.240.190.167)
[19:18:26] *** hackers is now known as remote
[19:18:47] <Payam> can I cast between user defined data types?
[19:19:10] <Payam> data classes . I m ade a data class with pydantic and I was wondering if I can cast to it as well
[19:19:16] *** Quits: Myst (~Myst@user/myst) (Quit: Bye!)
[19:19:30] <bjs> Payam: Python doesn't have "casting",  you can write functions that create one datatype given another though
[19:19:57] <bjs> e.g. dataclasses.asdict creates a dictionary object from a dataclass instance.
[19:20:23] <Payam> I use my own defined class with pydantic and wrote to a json file. However I was thinking of reading that file and populate the pydantic classes again.
[19:20:26] <Payam> is it possible?
[19:20:47] <Payam> my simply doing my_pydantic_class(content_of_json)
[19:21:31] *** Joins: Myst (~Myst@user/myst)
[19:23:00] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[19:23:28] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:23:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[19:25:53] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[19:25:55] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Read error: Connection reset by peer)
[19:26:27] <bjs> Payam: what does the pydantic docs say about it?
[19:26:34] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:bd22:97e4:6d60:5bfa)
[19:26:37] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[19:27:47] <grym> Payam: MyPydanticClass.parse_obj(json.loads(somestr))
[19:27:56] <grym> or .parse_raw if you need to really get your hands dirty
[19:28:21] <grym> you go the other way with .json() or .dict(), as the needs require
[19:28:41] *** Quits: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net) (Quit: greentree)
[19:28:56] *** Quits: daoudr_ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[19:29:42] <Payam> I read the json file and just did a mypydantic = PydanticClass(**json_content)
[19:29:56] <Payam> I don't know it that works yet.
[19:30:15] <grym> that can work as well, but .parse_obj will respect your Config: inner class settings about key policies and such
[19:30:19] *** Joins: luigibu (~luigi@80.30.200.2)
[19:30:19] <grym> so it's better to go that way
[19:30:27] *** Joins: Barones (~Barones@189.50.80.77)
[19:30:52] <grym> (if i have a class that defines x and y but some dingus added 14 new fields to the incoming json, should that crash me, or not? that's what Config: lets you be explicit about)
[19:30:58] <Payam> MyPydanticClass is new instance of the class?
[19:31:26] <Feuermagier> JavaSript offers encoding a float with a custom base. Example: 0.2812815433537059.toString(36) == 0.a4jgzb0jnjt Can I do the same in python somehow?
[19:31:34] <grym> Payam: it is the class itself
[19:31:42] <grym> Payam: .parse_obj is a classmethod
[19:31:47] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:31:53] <s33ker> hi guys anyone know how to list channels in this chat that start with a word ?
[19:31:56] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:32:07] <grym> s33ker: /msg alis help
[19:32:14] <Payam> ah. so I can do "new_class = myPydanticClass.parse_obj(json...)
[19:32:19] <grym> Payam: yeah
[19:32:25] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[19:32:26] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[19:33:50] <sebres> supakeen: it becomes more weird, https://github.com/fail2ban/fail2ban/issues/3187#issuecomment-998895654
[19:36:32] *** Joins: Viewday112 (~Viewday@user/viewday)
[19:37:14] *** Joins: daoudr_ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[19:37:51] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:38:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:38:37] <s33ker> grym cant figure how how to see names of the channels just how many there are
[19:38:43] <s33ker> for a spacific term
[19:39:01] *** Joins: Viewday11 (~Viewday@user/viewday)
[19:39:08] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[19:39:22] <grym> s33ker: alis list takes a regex
[19:39:55] *** Joins: raxor2k (~raxor2k@78.158.235.82)
[19:40:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[19:40:39] <raxor2k> what is the difference between: 'if not count == 1:' and 'if not count % 1:' ?
[19:41:15] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:1b60:9163:dbb3:81bf) (Quit: Leaving)
[19:41:18] *** Quits: Viewday112 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:41:30] *** Joins: Naan (~Naan@user/naan)
[19:41:47] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:1b60:9163:dbb3:81bf)
[19:41:58] <Pici> raxor2k: well, the second part will never be non 0.
[19:42:02] <SnoopJ> raxor2k, the first one tests equality against 1, the second one tests divisibility by 1
[19:42:20] <SnoopJ> Pici, that isn't true, count=0 makes the expression True
[19:42:35] <Pici> SnoopJ: oops, you're right.
[19:42:46] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:1b60:9163:dbb3:81bf) (Client Quit)
[19:42:49] <Pici> Sorry!
[19:42:51] <SnoopJ> but it is the only such value that would make the second expression True, so it definitely looks very weird
[19:43:51] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[19:44:04] <hodapp> ehh? count % 1 is 0 for any integer
[19:45:13] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:45:17] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[19:45:20] <SnoopJ> oops
[19:46:06] <SnoopJ> Must have a crossed wire somewhere, you're correct. The modulus is 0 because all integers are divisble by 1.
[19:46:28] <SnoopJ> so the second one looks *extra* pointless
[19:47:12] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:47:59] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Ping timeout: 256 seconds)
[19:49:53] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[19:50:01] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[19:50:48] <Pici> oops for me too...
[19:50:50] *** Quits: tf (~tf@user/tf) (Quit: tf)
[19:51:14] *** Joins: tf (~tf@user/tf)
[19:51:57] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[19:52:12] <Payam> grym, I have mulple instances of a pydantic class in a list. Is there a clever way of  getting the value of "name" in all of them without explicitly looping?
[19:52:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[19:52:41] <SnoopJ> Payam, does a comprehension count as "explicit" looping?
[19:52:50] <Payam> yeah.
[19:52:57] <SnoopJ> Why do you want to avoid that?
[19:53:08] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:54:02] *** Quits: luigibu (~luigi@80.30.200.2) (Quit: WeeChat 3.4)
[19:54:14] <SnoopJ> you can `names = list(map(operator.attrgetter("foo"), list_of_objs))` but it does basically the same thing, just looks worse
[19:54:39] <SnoopJ> err, "name" instead of "foo" but yea
[19:55:17] <Payam> attrgetter or itemgetter?
[19:55:51] <SnoopJ> if it's an attribute, you want attrgetter
[19:56:09] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:56:20] <SnoopJ> i.e. if `obj.name` is what you're trying to spell in a "clever" way without actually spelling it out
[19:56:28] *** Quits: nomic (~nomic@185.198.243.148) (Quit: Leaving)
[19:57:23] <Payam> yes
[19:57:33] <Payam> but why is "name" a string?
[19:57:34] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[19:58:31] *** Joins: Klinda (~superleag@user/klinda)
[19:58:40] <Payam> name is a class attribute. Sorry I don't get why you write it as a string.
[19:59:34] <SnoopJ> because that's what attribute names *are*
[19:59:52] <SnoopJ> `obj.name` and `getattr(obj, "name")` are equivalent to each other
[20:00:40] <grym> Payam: [x.name for x in list_of_things_that_have_name_attributes]
[20:00:57] <SnoopJ> ^ this is what I would do, but then, I hate clever code
[20:00:58] <Payam> ah.
[20:01:19] <Payam> SnoopJ I want to learn more that's why. so I don't want to do stuff the way I use too.
[20:01:35] <SnoopJ> Payam, that's a false dichotomy, but okay
[20:01:40] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[20:01:46] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[20:02:01] <Payam> SnoopJ so that give me the name right? what if I want the whole object?
[20:02:11] <Payam> and not only the value of name
[20:02:26] <SnoopJ> Payam, if you want a list of all of the objects in the list of objects, you already have it. It's the list of objects.
[20:02:36] *** Joins: tmm88 (~tmm88@user/tmm88)
[20:02:38] <grym> ^ and then just loop over them
[20:02:39] <Payam> hahahah
[20:02:40] <Payam> :D
[20:02:52] <Payam> I am so stupid
[20:02:59] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[20:03:16] <tmm88> no one calls you stupid. I am the only stupid one in here
[20:04:15] <Payam> SnoopJ but if I have a list of atribute names and I want to seacrch for all of them in that list.
[20:04:33] <Payam> is there any as clever way of doing it wihtou looping it?
[20:04:35] *** Joins: jay-m1261 (~jay-m@154.72.163.226)
[20:04:40] <Payam> using those fancy libraries
[20:05:06] <SnoopJ> Payam, neither of these tasks can be done without iteration, if that's what you're asking. There are ways to get Python to do that iteration for you, and they are mostly a bad idea because they will make your code unreadable.
[20:05:12] <grym> Payam: pydantic just makes normal classes, there's nothing fancy about it
[20:05:37] <grym> Payam: [x for x in my_list_of_things if x.name in {'foo','bar','baz'}], e.b.
[20:05:38] <grym> e.g.
[20:06:05] <SnoopJ> ^ comprehensions are a great way to accomplish tasks like this, not using them means you're missing out on one of Python's best syntax features
[20:07:06] <SnoopJ> Payam, operator.attrgetter() does let you give as many attributes as you want, though.
[20:07:47] <SnoopJ> i.e. `og = operator.attrgetter("foo", "bar");  og(baz)` will return `(baz.foo, baz.bar)`
[20:08:35] <SnoopJ> but you can do the same thing with getattr() if you don't want the library: `attributes_from_objs = [[getattr(obj, attr) for attr in SEARCH_ATTRS] for obj in lst]`
[20:09:00] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[20:10:12] <InPhase> Payam: For object a with member variables including foo and bar, you can also select out a subset like:  {k:v for k,v in a.__dict__.items() if k in ['foo', 'bar']}
[20:10:47] *** Joins: saunders (~nicholas@172.103.152.184)
[20:11:01] <InPhase> Payam: Note this is still a loop, it's just a comprehension loop.  But this is the way of things.  You cannot consider lists of things without in some way going through each of them.
[20:11:33] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[20:12:18] *** Joins: dvyd45 (~dvyd@176.231.106.90)
[20:12:44] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:13:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:13:29] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:bd22:97e4:6d60:5bfa) (Ping timeout: 256 seconds)
[20:13:44] *** Joins: pipapipapibo (~w@50.239.254.186)
[20:14:18] *** Joins: rsx (~dummy@ppp-188-174-157-132.dynamic.mnet-online.de)
[20:14:20] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:14:39] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c) (Quit: Leaving)
[20:15:24] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 268 seconds)
[20:15:48] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[20:15:57] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[20:16:13] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:16:37] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:16:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[20:16:46] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c)
[20:17:21] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:17:34] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[20:18:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24)
[20:18:21] *** Joins: Fiji (~Fiji@user/fiji)
[20:19:18] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:19:38] *** Joins: alzgh (~alzgh@user/alzgh)
[20:19:53] *** Joins: Viewday114 (~Viewday@user/viewday)
[20:20:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[20:20:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:20:18] *** Viewday114 is now known as Viewday11
[20:22:00] *** Joins: et_ (~et@user/et)
[20:22:37] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[20:22:37] *** et_ is now known as et
[20:25:14] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:26:03] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:26:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[20:27:03] *** Quits: rsx (~dummy@ppp-188-174-157-132.dynamic.mnet-online.de) (Quit: rsx)
[20:28:25] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[20:29:15] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:29:15] *** Joins: fikran (~fikran@user/fikran)
[20:30:54] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[20:31:25] *** Quits: daoudr_ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[20:34:34] *** Quits: dvyd45 (~dvyd@176.231.106.90) (Quit: Client closed)
[20:35:27] *** Joins: daoudr_ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[20:35:52] <Feuermagier> I have a list of lists in python [[0, 1],[2, 3] - I want to combine the combine them as cross products: [[0,2],[0,3],[1,2],[2,3]] - how do I do this with n lists in the outer list?
[20:36:35] <Repiphany> Is that last one supposed to be [1,3]
[20:36:37] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[20:37:12] <Feuermagier> ah, yes
[20:37:24] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[20:37:33] <lericson> itertools.product
[20:37:41] <lericson> Feuermagier: ^
[20:37:53] <mefistofeles> yeah, cartesian product is the key
[20:38:11] <Feuermagier> list(itertools.product(*array)) seems to be it. Thx!
[20:38:35] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:40:24] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[20:40:43] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:41:35] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:41:51] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:42:17] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:42:28] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:42:46] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:45:10] *** Joins: Roey (~Roey@user/Roey)
[20:47:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:48:18] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:49:16] *** Joins: pepper (~pepper@user/pepper)
[20:51:05] *** Quits: jay-m1261 (~jay-m@154.72.163.226) (Read error: Connection reset by peer)
[20:51:50] *** Quits: Fiji (~Fiji@user/fiji) (Read error: Connection reset by peer)
[20:52:18] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[20:53:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:54:01] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[20:54:11] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[20:54:16] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 268 seconds)
[20:54:25] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[20:55:40] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[20:55:59] *** Joins: Klinda (~superleag@user/klinda)
[20:56:16] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[20:57:02] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[21:00:44] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Quit: Leaving)
[21:01:23] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:01:53] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[21:02:18] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[21:02:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[21:03:07] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[21:03:18] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[21:03:27] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[21:03:50] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:04:25] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[21:04:46] *** Joins: Viewday113 (~Viewday@user/viewday)
[21:05:21] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[21:06:26] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:06:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:06:53] *** Viewday113 is now known as Viewday11
[21:07:03] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[21:08:37] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:08:53] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[21:09:17] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Client Quit)
[21:09:30] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:09:37] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[21:09:38] *** Quits: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi) (Quit: Textual IRC Client: www.textualapp.com)
[21:12:14] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[21:12:16] *** Quits: mat001 (~mat001@c-69-181-156-104.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:12:57] *** Joins: mat001 (~mat001@72.28.108.216)
[21:13:24] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Client Quit)
[21:14:08] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:14:17] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[21:15:40] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[21:16:03] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:16:05] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[21:17:10] *** Joins: cosimone (~user@93-47-231-231.ip115.fastwebnet.it)
[21:18:58] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:19:12] *** Joins: vladoski (~foo@93-47-224-6.ip114.fastwebnet.it)
[21:20:19] *** Quits: vladoski (~foo@93-47-224-6.ip114.fastwebnet.it) (Client Quit)
[21:20:31] *** Joins: bancroft (~bancroft@142.162.53.67)
[21:20:40] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[21:20:57] <bancroft> How do you track memory leaks in python?
[21:21:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:22:03] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[21:22:59] <meejah> bancroft: vmprof is good
[21:23:42] *** Joins: roped (~lonely_@user/roped)
[21:25:00] *** Quits: arinov (~arinov@178.240.190.167) (Ping timeout: 256 seconds)
[21:25:03] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:ea20:d6db:daa:1f1d) (Quit: Leaving)
[21:25:30] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:25:30] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:26:24] *** Joins: lbracher (~lucas@77.109.116.248)
[21:27:14] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e)
[21:27:32] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:28:17] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[21:28:24] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[21:29:32] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[21:29:51] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[21:30:03] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[21:30:38] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[21:31:04] <roped> is there an sqlite client (a full TUI not just a shell) written in python ncurses/urwid?
[21:31:07] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:31:46] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:31:50] <nedbat> bancroft: are you sure you have one?
[21:32:12] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[21:32:12] *** Joins: aniketgm (~Aniket@49.36.109.81)
[21:32:59] <meejah> roped: I swear I recently saw something like that (not sure if it was written in python though) but I can't remember the name :/
[21:33:06] <bancroft> nedbat: yup, systemd kills it every 2 days because of my MemoryMax setting
[21:33:10] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[21:33:40] <nedbat> bancroft: is it a django site?
[21:33:58] <bancroft> nedbat: it's an asyncio websocket thing
[21:33:58] <meejah> bancroft: cpython or pypy?
[21:35:34] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-014.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:36:25] *** Joins: Viewday116 (~Viewday@user/viewday)
[21:36:26] <bancroft> meejah: cpython
[21:36:48] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[21:37:00] *** Joins: dbristow (~dbristow@user/dbristow)
[21:37:05] <roped> meejah, it would be awesome if you can to remember
[21:37:14] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[21:37:15] <roped> maybe grep your history \o/
[21:37:35] <roped> alternativeto.net only shows GUI clients
[21:38:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:38:03] *** Viewday116 is now known as Viewday11
[21:38:06] <roped> something like pudb would be great
[21:38:28] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[21:38:38] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:39:20] *** Joins: Betal (~Betal@user/betal)
[21:39:35] <meejah> roped: I thin it was https://github.com/mathaou/termdbms judging from github stars of mine ;) (it's Go, not python, but ...)
[21:40:25] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[21:40:28] <mike18> hi
[21:40:42] <roped> meejah, thanks. I'll bookmark it and spend some more time looking for something written in Python
[21:40:44] <mike18> how to assign self to def example(username): in here? https://github.com/dacoburn/example-flask-blueprints/blob/main/routes/example.py
[21:41:07] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[21:42:26] *** Joins: magla (~gelignite@55d4a813.access.ecotel.net)
[21:42:50] <graingert[m]> mike18: Assign self for what purpose?
[21:42:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[21:43:04] <mike18> so i can get data which is stored in self.data
[21:43:08] <meejah> "self" is already available there
[21:43:15] <mike18> which gets updated by a thread
[21:43:46] <graingert[m]> Show the code including the thread?
[21:43:57] <mike18> you are right
[21:44:00] <mike18> forget to create the data lol
[21:44:55] <mike18> is that a good way to use flask blueprint?
[21:47:20] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[21:48:04] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:48:07] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[21:48:52] <lbracher> Hi there! I have a list of strings and I want to transform it on a dict, where each string on list will become the key on dict and respective value will always be 1. How can I do it in a list comprehension or in another one liner? Thanks in advance!
[21:49:00] *** Joins: xa0s (~xa0s@mab.sdf.org)
[21:49:15] <faint> do i have to implement both __lt__ and __gt__ or is one of them (by default) an inversion of the other?
[21:49:28] <faint> and if so which should I be implementing
[21:49:32] <phy1729> {key: 1 for key in that_list}  lbracher
[21:49:42] <lbracher> phy1729, thanks! :)
[21:51:12] <SnoopJ> faint, they are "reflections" of each other according to the data model. Lots more information here: https://docs.python.org/3/reference/datamodel.html#object.__lt__
[21:51:47] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[21:52:23] *** Joins: lethu (~lethu@user/lethu)
[21:52:28] <SnoopJ> also worth pointint out functools.total_ordering(), which lets you provide __eq__ and one of the rich comparison methods and get the rest 'for free' from the decorator
[21:52:34] <SnoopJ> pointing*
[21:52:39] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[21:53:00] <HiccupJul> if i want to take multi-line text data from the user in the terminal, do i need to do something like this https://stackoverflow.com/a/15692920/2352336 or is there some way to let the terminal handle that?
[21:53:37] <HiccupJul> maybe this is a more appropriate question for #linux or #windows, but...
[21:54:18] <HiccupJul> i guess maybe its more usual to just expect the user to create a file, and then read from that
[21:54:25] *** Joins: The_Loko (~The_Loko@86.127.232.141)
[21:54:27] <HiccupJul> but that seems slow...
[21:54:43] <HiccupJul> and it seems overkill to make a gui
[21:55:09] *** Joins: Payam (~Payam@138.106.57.131)
[21:55:28] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[21:55:28] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[21:56:37] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[21:58:02] <Payam> Hi, If I send a list of arguments to a function and recieve two output lists, I can not use a filter object. What can I use instead?
[21:58:17] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[21:58:19] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:58:49] *** Joins: Throgkt (~Throgkt@user/throgkt)
[21:59:02] <SnoopJ> what?
[21:59:02] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[21:59:14] <yitz> Payam: write code that does ... whatever you're trying to do
[21:59:16] *** Joins: haasn (~nand@haasn.dev)
[22:00:38] *** Quits: aniketgm (~Aniket@49.36.109.81) (Quit: leaving)
[22:00:46] <Payam> okej I have `f(x) : return list(range(x+1)), list(range(0,x**2))`. and x is list(range(10))
[22:01:03] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:01:14] <Helion> Payam: what do you want to do with the return value?
[22:01:31] <Payam> not decided.
[22:01:38] <jim> hi... how/where can I find the source for pygame? also, what's a good way to get a "birds-eye" view of the whole thing?
[22:01:41] <Payam> I meant this was just a though
[22:01:45] <Helion> then dont worry about it until you decide
[22:01:50] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:02:16] <Helion> jim: the source is just on github https://github.com/pygame/pygame
[22:02:43] <jim> thanks
[22:03:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:04:06] <HiccupJul> for a birds-eye view, a IDE that has some sort of module list/tree view might help
[22:04:42] <jim> I want to see all of pygame's sections, then be able to break down sections and go further down
[22:04:50] <Helion> the documentation should probably be your first port of call before doing a programmatic view into the codebase.
[22:04:58] *** Joins: Viewday114 (~Viewday@user/viewday)
[22:05:02] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[22:05:49] <jim> yeah, did a "complete" tutorial, finished it pretty fast, I can't help feeling there's more detail to look at
[22:05:51] <Helion> https://www.pygame.org/docs/ pygame is fairly well documented last I looked (its been a while so i wont say exceptionally well documented)
[22:06:05] <Helion> Scroll down to the reference section
[22:06:14] <SnoopJ> I definitely wouldn't say exceptional, but it does have very thorough API docs
[22:06:14] <HiccupJul> yeah, was going to say
[22:06:16] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[22:06:20] <VaniaPy> how can i get the values of values from here? https://bpa.st/IGJA
[22:06:41] <VaniaPy> the values are 4 dicts
[22:06:56] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:06:57] *** Viewday114 is now known as Viewday11
[22:07:42] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:08:42] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:08:57] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[22:09:05] *** Quits: recoup (~Guest87@183.82.176.201) (Quit: Client closed)
[22:09:13] <HiccupJul> VaniaPy: have you looked over this https://docs.python.org/3/tutorial/datastructures.html
[22:09:41] <HiccupJul> basics on parsing the data structures (list, tuple, dict)
[22:11:53] <bancroft> nedbat meejah any ideas?
[22:12:56] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:13:35] *** Joins: prs (~Priyanshu@203.18.51.238)
[22:15:10] <meejah> bancroft: i suggested vmprof
[22:15:56] <bancroft> meejah: right, but why vmprof over something else?
[22:16:10] <bancroft> I think the other popular one is valgrind?
[22:16:45] <bancroft> should I look into using pypy?
[22:17:14] <Helion> valgrind
[22:17:22] <Helion> ack, this isn't google
[22:17:40] *** Joins: prirai (~Priyanshu@2409:4043:2e04:d5ef::7248:960b)
[22:17:41] <Julian> bancroft: what was the question?
[22:18:20] <bancroft> Julian: How to hunt for memory leaks in python / what do you use for it
[22:18:40] <bancroft> the pypy thing was because of one of the response questions
[22:19:25] <Helion> vmprof and valgrind would find memory leaks in the runtime itself more than in your python code.  There are tools apparently in the gc module to find more leaks in your python code
[22:19:30] <meejah> bancroft: oh, valgrind supports python now? neat
[22:19:56] <meejah> Helion: no, vmprof profiles "user" code
[22:19:57] *** Quits: prs (~Priyanshu@203.18.51.238) (Ping timeout: 240 seconds)
[22:19:59] <Helion> ...python has a valgrind mode for profiling and debug cpython itself, at least
[22:20:17] <Julian> bancroft: by memory leaks do you really mean leaks (inaccessible memory that's gone and unusable) or "objects you or some library you used created and stashed somewhere and forgot about but are still reachable"?
[22:21:00] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:21:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:21:56] <bancroft> Julian: I don't know yet, I'm just looking at my node_memory_Committed_AS_bytes in prometheus for the cluster and poof it goes from 1GB to 24GB in 2 days
[22:21:58] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[22:22:28] <bancroft> before getting killed
[22:22:33] <meejah> i would assume it's the latter thing that Julian says
[22:23:05] <meejah> (otherwise, you've maybe found a GC or ref-counting problem). Your code is just Python, or is there native code too?
[22:23:12] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[22:23:45] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:24:01] <bancroft> meejah: i'm leaning towards that too, and just python
[22:24:14] <Julian> (yes, agree with meejah, in general don't assume you have a memory leak, you probably have a your-program-or-something-you're-using-is-creating-lots-of-stuff-and-storing-it until proven otherwise)
[22:24:14] <bancroft> I don't want to bias any help by saying "hey look here"
[22:24:30] <Julian> so no C extensions?
[22:24:32] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[22:24:47] *** Parts: pikajude (~jude@2001:19f0:ac01:373:5400:2ff:fe86:3274) (Leaving)
[22:24:50] <bancroft> Julian: Not in my code but some of my imports maybe
[22:25:00] <bancroft> like 3rd-party
[22:25:01] <Julian> ok well you should check that
[22:25:06] <Julian> that was why meejah asked :)
[22:25:29] <Julian> does your program eventually OOM / get killed?
[22:25:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:25:46] <Julian> also to cut to some chase, you can try something like https://pypi.org/project/memory-profiler/ if no one has mentioned that yet
[22:26:00] <Julian> especially if you can reliably cause the memory issues outside of prod
[22:26:12] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:26:31] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:26:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:26:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[22:28:16] <Julian> (/me has to run, good luck)
[22:28:27] *** Quits: cosimone (~user@93-47-231-231.ip115.fastwebnet.it) (Remote host closed the connection)
[22:28:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[22:28:50] <meejah> i would look to any global state, e.g. some dict that you put stuff into but never remove
[22:29:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:29:16] <meejah> (but, instead of looking randomly, ask the profiler for help)
[22:30:48] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[22:30:54] <bancroft> meejah: I've looked at py-spy, kind of looking for something I could just run on another process that's already running if at all possible
[22:31:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:32:30] <meejah> I've only used vmprof with Python (I've also used valgrind, but i don't think that's the tool you want here)
[22:32:46] *** Joins: Viewday119 (~Viewday@user/viewday)
[22:34:22] *** Joins: MikZyth (~MikZyth@host-79-157-66-217.spbmts.ru)
[22:34:42] <bancroft> meejah: i'll try it. if not, I'll go dumpster diving into smaps maybe :/
[22:34:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:34:43] *** Viewday119 is now known as Viewday11
[22:36:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[22:36:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:38:33] *** Quits: pipapipapibo (~w@50.239.254.186) (Remote host closed the connection)
[22:38:36] *** Joins: fikran (~fikran@user/fikran)
[22:39:14] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[22:39:21] *** Quits: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[22:39:37] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:40:42] *** Joins: xkuru (~xkuru@user/xkuru)
[22:41:51] *** Joins: ubert (~Thunderbi@p548c89c3.dip0.t-ipconnect.de)
[22:42:36] <amrx> .
[22:42:42] *** Joins: cosimone (~user@93-47-231-231.ip115.fastwebnet.it)
[22:43:17] *** Joins: x_kuru (~xkuru@user/xkuru)
[22:43:27] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Client Quit)
[22:44:51] *** Quits: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th) (Remote host closed the connection)
[22:45:08] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:53] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 268 seconds)
[22:46:07] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[22:46:22] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:46:29] *** Joins: georgios (~georgios@user/georgios)
[22:46:32] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[22:48:07] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:48:17] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:49:42] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[22:49:57] *** Quits: remote (~self@user/hackers) (Ping timeout: 240 seconds)
[22:50:47] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[22:51:13] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[22:51:20] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[22:51:52] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[22:52:41] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Read error: Connection reset by peer)
[22:54:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[22:55:27] <ThePhilgrim> Does it look like I've written this TypedDict correctly? https://dpaste.com/6Z4GAZ3TJ
[22:55:27] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[22:55:57] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:56:11] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[22:57:11] *** Joins: portalrat (~portalrat@user/portalrat)
[22:57:16] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Remote host closed the connection)
[22:57:31] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Quit: beli6147)
[22:58:11] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:59:14] *** Joins: vladoski (~foo@93-47-224-6.ip114.fastwebnet.it)
[23:00:05] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[23:00:22] *** Quits: vladoski (~foo@93-47-224-6.ip114.fastwebnet.it) (Client Quit)
[23:00:38] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:01:20] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[23:02:42] <jinsun> doesn't look right
[23:03:20] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:03:27] <jinsun> why is there a` str:` in the middle not associated with anything
[23:04:54] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:04:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:05:14] *** Joins: Viewday115 (~Viewday@user/viewday)
[23:05:31] <bancroft> meejah: how do you start vmprof? I tried python -m vmprof, vmprof, ...
[23:05:57] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[23:06:10] *** Joins: Y4kuzi (~provision@85.159.233.183)
[23:07:00] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:07:01] *** Viewday115 is now known as Viewday11
[23:07:17] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[23:07:36] <bancroft> meejah: nevermind, python2-python3 install failure
[23:07:47] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[23:07:58] <bancroft> PEBKAC
[23:08:01] *** Joins: Y4kuzi (~provision@85.159.233.183)
[23:08:37] *** Quits: sebres (~sebres@pronat.wincor-nixdorf.com) (Ping timeout: 240 seconds)
[23:08:52] *** Quits: raxor2k (~raxor2k@78.158.235.82) (Remote host closed the connection)
[23:10:43] *** Joins: recoup (~recoup@183.82.176.201)
[23:10:47] <stewie925> hi pythonistas, so I have a list = [1,2,3,4,5] - how do I do a reversed for-loop  where I want to loop from list[0] to list[3] but in reverse?
[23:11:14] <stewie925> I just want to process [1,2,3,4] and skip the last element [5]
[23:11:36] <recoup> bjs Hey bjs, I ended up with this code regarding the graph without libraries.  https://bpa.st/ZCVA Can you kindly point out where I went wrong?
[23:11:49] <Helion> for x in reversed(mylist[:4]
[23:11:52] <Helion> )
[23:12:02] <faint> that's not going to work because `reversed` returns a generator
[23:12:22] <Helion> you can loop over a generator
[23:12:33] <faint> yes but you can't subscript one
[23:12:42] <Helion> yeah.... and im not
[23:12:53] <stewie925> faint: the revered(range()) does work, I just couldn't say "stop before it hits beyond 0 index
[23:12:58] <faint> Helion: then you're not answering their question
[23:13:07] <Helion> faint: yes i am
[23:13:22] <bancroft> faint the slice is on the list, not on the reversed
[23:13:26] <stewie925> helion: I almost missed your reply - let me try
[23:13:27] <faint> they either mean reversed(mylist[:4]) or list(reversed(mylist))[:4]
[23:13:36] <faint> I assumed the latter
[23:13:53] *** Joins: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761)
[23:14:07] <Helion> the resulting for loop is the same, and i offered the first (with the close parense on the next line because i hit enter too fast)
[23:14:10] <faint> though if it's the latter they can do reversed(mylist[-4:])
[23:14:28] <faint> -3*
[23:14:32] <recoup> faint @Helion4 Thanks for pointing out. How do i change this?
[23:14:54] <Helion> er rather they are not the same, bit the first is actually returns the data they are asking for
[23:14:56] <faint> recoup: sorry I'm talking to someone else
[23:15:18] <faint> Helion: you can see how their question is a bit open to interpretation? :)
[23:15:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:15:43] <Helion> faint: not really, no?
[23:16:33] <meejah> bancroft: i've actually only used vmprof with PyPy (because if you want 'performance' you should be using PyPy anyway, if at all possible)
[23:16:37] <Helion> they have the data [1, 2, 3, 4, 5] and want to loop over [4, 3, 2, 1]
[23:16:40] <faint> it could either mean "i want to iterate between [0] and [3] of reversed items" or "i want to iterate between [0] and [3] in reverse order"
[23:16:47] <faint> it depends when the reversal happens in their question
[23:16:52] <stewie925> I get list index out of range
[23:17:08] <faint> that can't happen with a slice. can you paste your code?
[23:17:28] <bancroft> meejah: what's more important for me right now is to move to k8s, then i'll worry about changing to pypy because that will be easier then to mess arround with ansible which I hate
[23:17:33] <stewie925> sure, let me share
[23:17:55] <bancroft> meejah: you did put it on my radar though :P
[23:18:18] <recoup> faint Sorry, I got confused as my code had a "reverserd" too XD
[23:18:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[23:18:26] <meejah> bancroft: beware that PyPy doesn't do ref-counting, though .. which can affect some things leak-wise (usually e.g. missing "with open(...):" and such)
[23:18:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:18:53] <faint> Helion: I immediately assumed they were going by doing reversal first because I thought the other one was staightforward enough and the latter is confusing due to yielding a generator. guess I guessed wrong :)
[23:18:53] <meejah> for me, running under two different implementations finds more bugs/problems .. like using two different C++ compilers :)
[23:19:04] <bancroft> meejah: I don't understand
[23:19:57] <bancroft> yeah, I tried to do that with many version of python, but dependency and subdep resolution us just a nightmare
[23:20:11] <stewie925> faint: here it is - https://bpa.st/PRAA
[23:20:12] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[23:20:43] <meejah> bancroft: PyPy is a different implementation of Python
[23:20:56] <faint> stewie925: change line 6 to be print(i)
[23:21:03] *** Joins: binary01 (~binary01@cpe-74-64-69-183.hvc.res.rr.com)
[23:21:20] <Helion> stewie925: in python we iterate directly on the objects, not their index :)
[23:21:56] <meejah> bancroft: (not just a different version, like python3.6 vs. 3.7)
[23:22:50] <stewie925> faint, I get 4, 7, 1, 3 -> and it doesn't fail this time :)
[23:22:53] <bancroft> meejah: yup I know that, but I probably need to do some kind of pypy install -r requirements.txt right?
[23:23:04] <stewie925> helion - yes youre right! ugh!!
[23:23:09] <stewie925> and thanks faint!
[23:23:42] <stewie925> but I actually do need to reverse processing using the index, how do I do that?
[23:23:48] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[23:24:02] <grym> stewie925: enumerate()
[23:24:07] <bancroft> stewie925: why not just make n = -1
[23:24:25] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:24:32] <bancroft> stewie925: a[:-1]
[23:24:42] <stewie925> how do I reverse with enumerate?
[23:24:55] <faint> let me write something up
[23:25:00] <meejah> reversed(enumerate(...))
[23:25:32] <grym> ah actually you can't quite do that
[23:25:36] <grym> enumerate isn't reversible
[23:26:02] <stewie925> grym, yeah thats what I thought, but not sure :D
[23:26:04] <jinsun> you can just use a backwards range if you care only about index, for i in range(3, -1, -1):
[23:26:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:26:06] <Helion> This is a great time to plug nedbat's loop like a native
[23:26:16] <bjs> recoup: you have a graph() function but never call it, is that what you mean?
[23:26:30] <Helion> where you learn that if you are reaching for enumerate ... you... probably dont have to, if not don't really want to
[23:26:32] <faint> stewie925: how's this https://bpa.st/F7VA
[23:26:34] <stewie925> hi junsun -  oh duh let me try that
[23:26:55] <faint> or jinsun's idea. very good
[23:26:57] <radens> Hello, I'm trying to parse an xml file (which I do not control) with xml.etree.ElementTree.parse, but it's failing when it encounters an xi:include with an error xml.etree.ElementTree.ParseError: unbound prefix: line 1, column 106
[23:26:57] <radens> here is the xml and python code: https://pastebin.osuosl.org/view/22f24593
[23:27:48] <stewie925> yeah, faint it works, and jinsun's idea works as well
[23:28:05] <stewie925> thank you jinsun!
[23:28:14] <faint> TIL range's 3rd param
[23:30:54] <stewie925> well, since I brought this up -  I notice that the range(len(list)-1, -1, 0) does not work - it says the 3rd arg must not be 0
[23:31:09] <faint> 0 is "step"
[23:31:16] <faint> try this:
[23:31:25] <stewie925> oh yes... ugh
[23:31:42] <stewie925> ahhh
[23:31:45] <faint> print(list(range(0, 30, 3)))
[23:31:49] <stewie925> range(len, 0, -1)
[23:31:50] <faint> might clear up what's going on
[23:31:52] *** Joins: ivel (~user@lfbn-tou-1-1253-171.w90-76.abo.wanadoo.fr)
[23:32:35] <stewie925> yeah the 2nd param is the stopping point, that works now
[23:32:39] <stewie925> thanks again :D
[23:32:42] <faint> ^^
[23:33:25] <stewie925> I do use enumerate a few times, and I love it :)
[23:34:08] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[23:34:28] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:35:00] <BinarySavior> if i want to use threading module to help parallelize a portion of my code, and the bottleneck will be my RAM for how many procs I can start, will Python/threading be able to optimize on its own or will I need to specify the number of threads to make sure I don't overload RAM?
[23:35:35] *** Joins: capn (~capn@user/capn)
[23:36:07] <Helion> BinarySavior: uh, lets take a step back ... are you parallelizing cpu bound tasks?
[23:36:27] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[23:36:30] <mefistofeles> sounds like IO tasks, from that "bottleneck will be my RAM"
[23:36:31] *** Joins: Viewday111 (~Viewday@user/viewday)
[23:36:42] <BinarySavior> no, just regular python code
[23:36:42] <Helion> could be
[23:36:51] <bancroft> meejah: have you seen this traceback before with vmprof? https://bpa.st/LRPA
[23:37:04] <BinarySavior> yea I/O loading large dataframes
[23:38:10] <BinarySavior> I can probably only fit 3 or 4 of these threads without maxing my RAM capacity
[23:38:28] <BinarySavior> I'm not sure, but wondering if I need to specify manually or if Python can figure it out by itself
[23:38:35] <BinarySavior> (the number of threads)
[23:38:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:38:45] *** Viewday111 is now known as Viewday11
[23:38:46] <Helion> alright so you are probably not worse off with threads ... but yes, you have to tell python how many threads you want to have hammering on your ram - there really isn't an automatic scaling mechanism in python
[23:40:21] <BinarySavior> so then my code will need to be optimized on a per machine basis?  or I suppose I could query hardware for free/available ram and run the threads in a `while memory is not maxed` loop
[23:41:13] <Helion> a parameter at launch is usually how something like this is done
[23:42:21] <meejah> bancroft: weird .. no
[23:42:41] <mefistofeles> BinarySavior: sounds like you would benefit a lot from using something like dask for this
[23:42:49] <mefistofeles> have you considered that?
[23:43:32] <BinarySavior> mefistofeles thanks I will look into that, haven't heard of dask before
[23:44:09] *** Joins: shabius_ (~shabius@46.188.18.36)
[23:44:13] <mefistofeles> BinarySavior: it is specially suited for big volume data, so you read data in parallel and in chunks, so your memory is never an issue, virtually
[23:44:39] <mefistofeles> BinarySavior: and they follow the pandas and numpy API
[23:44:53] <mefistofeles> so you wouldn't have to change much in your code, hopefully
[23:45:30] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[23:47:50] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Ping timeout: 252 seconds)
[23:49:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:49:34] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:49:39] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[23:50:25] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:50:36] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[23:50:57] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[23:50:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:51:42] *** Joins: hemstock (~hemstock@194.59.250.234)
[23:51:46] *** Joins: h3mstock (~hemstock@194.59.250.234)
[23:56:51] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:57:43] <Payam> hi
[23:59:34] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:5972:95a:9b06:8616) (Quit: Textual IRC Client: www.textualapp.com)
