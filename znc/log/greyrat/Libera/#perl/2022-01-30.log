[00:00:12] <gad4> opening the third array and getting data is the error
[00:00:53] <gad4> it's trying to match a string from an array with a string in third array
[00:01:35] <buu> gad4: You don't open arrays.. you open file handles
[00:01:35] <ology> Where? SHow code?
[00:01:50] <buu> ology: https://l.perl.bot/p/iih69k
[00:01:50] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:04:07] <buu> gad4: So one problem you've got is you're trying to read $file3 multiple times which won't work
[00:08:03] <gad4> file 3 has definitions.  i want to connect the definition from file3 for each word
[00:08:11] <gad4> is there a better way?
[00:08:22] <buu> gad4: Well, yes, read file3 once and assign it to a hash
[00:08:40] <buu> gad4: But immediately speaking, what is "for $rownum ( 0..$maxrows ) { 
[00:08:41] <buu> for
[00:08:52] <gad4> I'm sorry. I'm still learning. don't understand hash
[00:08:57] <buu> What part of the problem is it trying to solve?
[00:10:58] <gad4> $rowd==$wordt[$rownum])
[00:11:48] <gad4> it is going through each entry in file1 and comparing to each dictionary element for a match
[00:12:25] *** Quits: Adura (~Adura@user/adura) (Killed (NickServ (GHOST command used by Adurah!~Adura@bras-base-toroon213mw-grc-25-76-64-165-136.dsl.bell.ca)))
[00:12:39] *** Joins: Adura (~Adura@user/adura)
[00:13:03] <buu> gad4: ok so right now you're doing: @wordt = split / /, $l2;
[00:13:31] <buu> gad4: So $l2 is a single line, and you split it up, so @wordt at most contains a single line
[00:13:40] <buu> Then you remove elements from @wordt: $book = shift @wordt;
[00:14:23] *** Quits: Adura (~Adura@user/adura) (Client Quit)
[00:14:28] <buu> gad4: So when you get down to $maxrows, you're just looking at the number of "words" left in @words and @wordt
[00:14:42] <gad4> yes. remove from line before splitting 
[00:14:48] <gad4> yes
[00:15:02] <gad4> sorry my mistake your right
[00:15:19] <gad4> they should both be same
[00:15:21] <buu> gad4: so "$maxrows" is actually "the number of words in the current line"
[00:15:31] <gad4> yes
[00:16:02] <buu> gad4: Give me an example line from heb2.txt
[00:16:36] <gad4> it may not copy. is hebrew characters 
[00:17:01] <gad4> everything was working fine before i added the dictionary loop
[00:17:41] *** Joins: Adura (~Adura@user/adura)
[00:18:04] <gad4> Mat 1:1 כּתָבָא דִּילִידֻותֶה דּיֶשֻוע משִיחָא בַּרֶה דּדַוִיד בַּרֶה דַּאברָהָם ׃
[00:18:58] <gad4> 3t sample
[00:19:01] <gad4> Mat 1:1 KTB) DYLYDWTH DY$W( M$YX) BRH DDWYD BRH D)BRHM ׃
[00:20:04] <gad4> sample from file3
[00:20:08] <gad4> ÷$$LN
[00:20:57] <buu> So how does that line match?
[00:21:20] <gad4> so what i want to do is lookup the word in col 3 and return the last line
[00:21:50] <buu> ktb)
[00:21:54] <buu> ?
[00:21:58] <gad4> is weird i know.  I don't know much about the language except its reversd 
[00:22:18] <buu> rindolf: where are you
[00:22:29] <gad4> the line is replacing the hebrew with lettes
[00:22:39] <buu> why...
[00:23:37] <bkhl>  Aren't some of those characters with combining marks?
[00:23:37] <gad4> so the first in 3t matches the last in 2. apparently perl sorts that out. so it's not a concern. just that it's awkward to look at
[00:24:09] <gad4> 3t and 2 are able to be split find
[00:24:22] <buu> What is 3t?
[00:24:28] <gad4> im trying to match the 3t entries with file3. 
[00:24:53] <buu> Oh I see, heb3t.txt
[00:25:58] <buu> So how does '÷$$LN' relate to Mat 1:1 KTB) DYLYDWTH DY$W( M$YX) BRH DDWYD BRH D)BRHM
[00:27:00] <gad4> if $$LN was a word in that line it would match and return the definition (chain)
[00:27:41] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[00:27:43] <gad4> each dictionary entry begins with ÷
[00:28:09] <buu> And the definition is on the next line?
[00:28:37] *** Joins: justGhost (~justache@user/justache)
[00:28:41] <gad4> ÷$$LN
[00:28:48] <buu> ?
[00:29:12] <gad4> thats a sample dictionary entry
[00:29:31] <gad4> just need to return the last line
[00:29:36] <buu> Where's the definition?
[00:29:39] <gad4> not next
[00:29:53] <gad4> "chain "
[00:30:06] <buu> The last line of aramaic1.txt?
[00:30:53] <gad4> aramaic.txt has thousands of words following the 7 line pattern above 
[00:31:45] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[00:31:48] <gad4> another entry
[00:31:52] <gad4> ÷$()
[00:32:02] <gad4> so you can see pattern
[00:32:30] <gad4> here word to look up is $()
[00:32:33] *** Joins: ugjka (~ugjka@ugjka.net)
[00:32:48] <gad4> definition is.
[00:33:00] *** Quits: magla (~gelignite@55d45b98.access.ecotel.net) (Read error: Connection reset by peer)
[00:33:02] *** Joins: geli (~gelignite@55d45b98.access.ecotel.net)
[00:33:40] <gad4> the alphabet of the transliteration includes ()$+ etc
[00:34:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:34:13] <buu> 15:00 < gad4> aramaic.txt has thousands of words following the 7 line pattern above
[00:34:15] <gad4> not ÷
[00:34:18] <buu> I never saw a 7 line pattern
[00:34:37] <gad4> 4 lines with 3 lines of spaces
[00:35:24] <gad4> line 1 begjns with ÷   ( not part of word)
[00:35:51] <gad4> line 3 is vocalized
[00:36:06] <gad4> line 5 is root
[00:36:19] <gad4> line 7(or 8) is the definition 
[00:37:18] <gad4> so i want to return the definition line and print it next to word so readable 
[00:37:30] <buu> So  you need to read through aramaic.txt, look for words starting with ÷ that appear in the current line of heb2.txt then print the line 7 lines after that
[00:37:44] <gad4> yes
[00:38:01] <buu> What is the relation between heb2 and heb3t
[00:38:53] <gad4> heb2 is a not related. I'm just printing it next to it in case  someone wants to see word with Hebrew characters 
[00:39:23] *** Joins: Markow (~Markow@176.122.215.103)
[00:40:11] <gad4> sorry heb2 is same as 3t except hebrew characters were replaced with ascii in notepad.  when replaced it reversed to left to right
[00:40:17] <buu> I see
[00:41:03] <buu> notepad is not great for unicode
[00:41:31] <gad4> i converted with notepad++ 
[00:42:32] <gad4> 2 and 3t split and print fine.  the problem is getting the dictionary entry found for each 3t
[00:43:50] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[00:44:17] <gad4> when i added that part it didn't work
[00:44:37] <gad4> when adding third file
[00:46:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:47:27] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:47:54] <gad4> i look for the words beginning with ÷. if that word matches the 3t entry then i return the 7th line.  else i keep going through file til i find the right word
[00:49:08] *** Joins: diskin (~diskin@87.117.55.164)
[00:49:27] <gad4> but that's the part that's not working
[00:51:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:f8f2:a6ee:f8f:27a0) (Ping timeout: 260 seconds)
[00:52:13] <gad4> it will open the dictionary file and print before the ÷ check but never returns a yes to the check 
[00:53:48] <gad4> while (my $rowd = <$hh>) {
[00:54:25] <gad4> the prints above were tests to see where it print and not print 
[00:54:49] <gad4> no works didn't print. print printed everything 
[00:54:57] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 240 seconds)
[00:56:56] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[00:59:54] <gad4> works printed everything i mean
[01:00:47] <gad4> they are just test lines
[01:01:38] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:03:49] <gad4> with the ÷ it didn't report the pop error..
[01:13:00] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[01:15:06] <gad4> are you still here?
[01:15:28] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[01:18:45] <ology> Still having trouble? I would simplify things down to digestible bits.
[01:19:03] <ology> And solve each one in turn. Or are you on the very last?
[01:19:25] *** Quits: jx0 (~jx0@199.229.250.145) (Quit: poof!)
[01:19:27] <gad4> yes. there is one problem. the area where i need to match the ÷ isn't working 
[01:19:55] <gad4> that's the bottleneck . 
[01:20:01] <ology> Is that symbol not being seen for some reason?
[01:20:27] <gad4> i guess 
[01:20:41] <gad4> perl is not even checking the code within
[01:22:27] <gad4> if i put a letter in, perl will look within
[01:22:37] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[01:22:42] <gad4> but with the ÷ is not giving error messages 
[01:24:16] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[01:26:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:08] <gad4> any ideas?
[01:31:41] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:31:59] * GumbyPAN CPAN Upload: PDL-2.071 by ETJ https://metacpan.org/release/ETJ/PDL-2.071
[01:44:22] <gad4> should i wait?
[01:44:55] <Adura> Wait... for?
[01:45:01] *** Joins: R2robot (~R2robot@user/r2robot)
[01:47:29] <xenu> this is a public irc channel, there are hundreds of people here, they reply when they have time, sometimes it takes a few seconds, sometimes a few hours and sometimes they never reply
[01:48:52] <gad4> i understand 
[01:50:07] <gad4> some were kind to look at my problem but then stopped talking. i didn't know if i should be waiting for a reply 
[01:50:25] <vague> perlbot, utf8 ÷
[01:50:25] <perlbot> vague: U+00F7 (c3 b7): DIVISION SIGN [÷] 
[01:51:24] <vague> gad4, I haven't read the discussion but are you using a literal ÷ in your code? You need to add 'use utf8;' at the top of the script if you are. My 2cent
[01:51:43] <xenu> that will work only if the input is being decoded
[01:52:21] <Adura> Could just use \xF7
[01:52:57] <xenu> this has exactly the same problem
[01:53:00] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[01:53:26] <vague> Ah, so the division sign comes from the input file? Ignore me then
[01:53:39] <xenu> it seems they aren't decoding anything so from POV of their code ÷ eq "\xc3\xb7"
[01:53:41] <Adura> What's the encoding of the input file?
[01:53:46] <xenu> assuming it's utf-8
[01:53:51] <gordonfish> vague: I tend to avoid ÷ as it can look too close to a + in some fonts
[01:53:52] <xenu> yeah good question
[01:54:41] <vague> Nobody should use ÷, it's / or go home
[01:54:48] <gordonfish> Agreed
[01:55:24] <gad4> I'm trying to find the lines that start with ÷ as a text character however it doesn't seem to locate it. 
[01:55:38] <Adura> Do you know the encoding of the input file?
[01:56:00] <gad4> is a text file
[01:56:07] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.16.0-Pogorze-Karpackie-CUSTOM-KERNEL)
[01:56:09] <Adura> With what encoding?
[01:56:34] <gad4> ÷$()
[01:56:52] <Adura> Huh...? Never heard of that encoding.
[01:56:58] *** Joins: brainbuz (~brainbuz@151.197.242.207)
[01:57:01] <gad4> oh my mistake 
[01:57:06] <xenu> he's asking it the file is UTF-8
[01:57:08] <xenu> if*
[01:57:18] <FlorianBad> x5c30: for  Crypt::AuthEnc::ChaCha20Poly1305  I suppose you wouldn't call srand() right? But what if I forked... If I start generating keys and IVs now that becomes something ultra important. So what srand call should I use that would be extremely good?
[01:57:55] <gad4> https://l.perl.bot/p/iih69k
[01:57:55] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[01:57:59] <gordonfish> (...top part of fraction...) / (...bottom part of fraction) always works just fine in text imho, like in complex equations. Especially in chats and such. If you're composing a file/post with multiple lines and fixed width fonts, you can could emulate hand writing, like:
[01:58:06] <gordonfish>     y + 5
[01:58:06] <gordonfish> x + -----
[01:58:06] <gordonfish>     z - 3
[01:58:15] <gad4> I'm not trying to do math
[01:58:44] <gad4> I'm simply trying to find the lines that have the character  ÷
[01:58:46] <Adura> That paste doesn't give any idea of what the encoding of the file is.
[01:58:47] <gordonfish> Was speaking in general, though I hadn't yet read all of the back log, so my apologies for the tangent
[01:59:31] <gad4> while (my $rowd = <$hh>) {
[02:00:01] <xenu> that's still not an answer
[02:00:02] <xenu> is
[02:00:03] <xenu> the
[02:00:04] <xenu> file
[02:00:06] <xenu> utf-8
[02:00:07] <gordonfish> (Other wise x + ( (y + 5)/(z - 3) ) it normally just fine) </tangent>
[02:00:08] <xenu> or
[02:00:11] <xenu> not
[02:00:15] <gad4> the print #works prints out all entries. when i get into the loop
[02:00:23] <gad4> yes should be utf-8
[02:00:28] <xenu> and the script is utf-8 too?
[02:01:06] <gad4> actually your right. this file may not be.. thanks 
[02:01:19] <gad4> the others i saved different 
[02:01:56] <gad4> the file with ÷ was saved as a txt file
[02:02:56] <simcop2387> daemon: i've got a spare 4 port gb nic, any fun ideas for it?
[02:02:59] <xenu> all the files including the script must use the same encoding, ideally utf-8
[02:03:04] <gad4> i have to go get gas then I'll try to rework file to see if that fixes
[02:03:14] <gad4> thanks
[02:03:22] <gad4> I'll redo it
[02:03:48] <simcop2387> intel pro 1000 pt lp svr on the back
[02:08:59] <xenu> eval: no utf8; my $foo = "\xfa"; open my($fh), "<:encoding(UTF-8)", \$foo; [<$fh>]
[02:09:01] <perlbot> xenu: UTF-8 "\xFA" does not map to Unicode at (IRC) line 1. ["\\xFA"]
[02:09:04] <xenu> why the hell econding does that
[02:09:08] <xenu> this is insane
[02:09:24] <xenu> why it isn't either a replacement character or an error
[02:10:35] <xenu> even passing it unmodifier would've made more sense
[02:10:40] <xenu> unmodified*
[02:11:07] <xenu> eval: no utf8; my $foo = "\xfa"; open my($fh), "<:utf8", \$foo; [<$fh>]
[02:11:08] <perlbot> xenu: utf8 "\xFA" does not map to Unicode at (IRC) line 1, <$fh> line 1. Malformed UTF-8 character: \xfa (too short; 1 byte available, need 5) in subroutine entry at $BLEAD/lib/5.35.8/x86_64-linux/Data/Dumper.pm line 212. Malformed UTF-8 character: \xfa (too short; 1 byte available, need 5) in subroutine entry at $BLEAD/lib/5.35.8/x86_64-linux/Data/Dumper.pm line 212. ["\x{0}"]
[02:11:24] <xenu> :utf8 otoh gives \x{0} lol
[02:12:36] *** Joins: gad4_ (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:16:06] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Ping timeout: 260 seconds)
[02:19:16] *** Quits: gad4_ (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Quit: -a-)
[02:19:23] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:21:20] *** Joins: deadmarshal (~deadmarsh@95.38.113.75)
[02:24:15] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Client Quit)
[02:24:22] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:25:37] *** Quits: deadmarshal (~deadmarsh@95.38.113.75) (Ping timeout: 240 seconds)
[02:29:15] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Client Quit)
[02:29:21] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:30:11] <x5c30> FlorianBad: you'll want to use a cryptographically strong rng for that, should be one provided by the library
[02:30:26] <x5c30> looks like it has 'use Crypt::PRNG "random_bytes"'
[02:31:07] <FlorianBad> ah, so the lib already takes care of that to make sure we didn't mess up with srand before?
[02:31:56] <x5c30> srand is only for perl's generator for rand() which shouldn't be used for cryptographic purposes
[02:32:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:32:53] *** Quits: pizdets (~pizdets@183.182.114.249) (Ping timeout: 250 seconds)
[02:33:22] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[02:33:53] *** Joins: pizdets (~pizdets@183.182.115.245)
[02:33:59] <FlorianBad> hmm.. well, but when I generate my salt for Argon2 for example I do use it. So now I need to learn how to use this rng thing I never heard of ;)
[02:34:15] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Quit: -a-)
[02:34:22] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:34:57] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (Ping timeout: 240 seconds)
[02:36:04] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[02:38:02] *** Joins: Curiosa (~Curiosa@37.166.190.187)
[02:39:15] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Client Quit)
[02:39:21] *** Joins: jx0 (~jx0@199.229.250.145)
[02:39:22] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:41:08] *** Quits: Croran (~Croran@71.231.214.173) (Quit: leaving)
[02:43:23] *** Quits: Curiosa (~Curiosa@37.166.190.187) (Quit: Client closed)
[02:44:02] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[02:44:23] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:44:25] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[02:46:10] *** Joins: anthk_ (~anthk_@41.85-84-206.dynamic.clientes.euskaltel.es)
[02:47:50] <leont> CPAN is full of various random number generators, it would have been nice is there was one standard for each of CPRNG and CRNG, but alas
[02:49:21] * leont uses Dev::URandom because it's relatively simple and quite portable, but there are plenty of valid options out there
[02:49:24] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:49:35] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[02:52:32] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[02:53:12] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 250 seconds)
[02:54:30] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[02:55:30] *** Joins: Croran (~Croran@71.231.214.173)
[02:56:39] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[02:59:15] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[03:01:17] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[03:01:27] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[03:04:02] <FlorianBad> leont: ok
[03:05:58] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[03:07:18] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[03:09:29] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[03:09:31] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[03:10:53] <leont> Modern operating systems come with a good RNG, I would not use a PRNG unless I had a very good reason to (if you can't think of any, you don't have any)
[03:12:09] * GumbyPAN CPAN Upload: App-Greple-8.55 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-8.55
[03:12:33] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[03:12:35] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[03:14:23] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[03:14:24] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[03:16:31] <xenu> leont: there's no such module as Dev::URandom on cpan
[03:16:44] <leont> Right, Crypt::URandom
[03:17:01] <leont>  /dev/urandom is what it uses on unix
[03:17:14] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[03:19:20] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[03:19:23] *** Joins: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f)
[03:20:37] *** Quits: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it) (Ping timeout: 240 seconds)
[03:20:38] *** Quits: Guest501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[03:20:47] *** Quits: gad4 (~Android@2607:fb90:2e7c:ca80:ac8e:c220:cb38:e52f) (Read error: Connection reset by peer)
[03:21:34] *** Quits: tylee (~tylee@user/tylee) (Remote host closed the connection)
[03:21:39] <x5c30> the distinction is moot though, modern operating system random output (like /dev/urandom) is also from a prng. it's just being seeded by a stream of randomish events. the only "real" RNG (as opposed to PRNG) is physical events.
[03:21:58] <x5c30> there are many fine ones on the cpan, my suggestion was based on already using CryptX and it comes with one
[03:24:28] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[03:24:42] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[03:25:09] <simcop2387> x5c30: depends on how you count things like the intel rng on their cpus.
[03:26:18] <xenu> also there OS-provided rng generators try to use noise from devices etc
[03:26:20] <x5c30> that's true, but i bet dollars to donuts that's sampling physical events and still feeding it through prng algorithm in silicon
[03:26:24] <xenu> it's much more than just prng algorithm
[03:27:07] <xenu> hmm you actually said that, i misread
[03:28:18] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:28:56] <xenu> anyway if you continuosly feed the seed with new random stuff it's almost as good as true rng
[03:29:03] <xenu> and that's what they do
[03:29:36] <xenu> it's called entropy pool
[03:30:07] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[03:30:53] <simcop2387> xenu: assuming that you're feeding it correctly and capturing that entropy correctly anyway.  if you're doing it wrong you can have a limit to how much you're collecting and waste it, or you can end up losing it if you're accidentally corrolating non-random events into it
[03:30:54] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 250 seconds)
[03:31:02] <x5c30> it's been discussed to great lengths in the not-too-distant past, linux actually recently changed /dev/random to not block anymore once seeded...the "entropy estimate" stuff was all pretty hokum
[03:31:40] <x5c30> there's also the potential for actively attacking things, like if it's seeding from audio...well blast a really loud single frequency and see if you can bias it
[03:33:41] <xenu> that's why you should use lava lamps as your randomness source
[03:33:44] <xenu> like cloudflare does
[03:34:15] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Client Quit)
[03:34:28] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[03:36:44] *** Joins: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it)
[03:37:24] <leont> Yeah, keeping a PRNG well-fed can be quite difficult, but unless you're an expert you don't stand much of a chance of doing a better job than the kernel
[03:42:49] <simcop2387> leont: https://xkcd.com/221/
[03:42:49] <Paperbot> Link title(s): [ xkcd: Random Number ]
[03:43:17] <simcop2387> and https://www.explainxkcd.com/wiki/index.php/424:_Security_Holes also
[03:43:18] <Paperbot> Link title(s): [ 424: Security Holes - explain xkcd ]
[03:44:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:47:05] *** Quits: alex_ (~alex11@user/alex11) (Read error: Connection reset by peer)
[03:47:53] <FlorianBad> leont: fork is a very good reason ;)
[03:49:35] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[03:51:56] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:51:56] *** Quits: perldoc (~perldoc@24.88.49.194) (Read error: Connection reset by peer)
[03:51:56] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Read error: Connection reset by peer)
[03:51:56] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Read error: Connection reset by peer)
[03:54:55] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[03:55:25] *** Joins: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[03:55:55] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[03:58:32] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[03:58:52] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[04:04:28] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[04:04:28] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[04:05:56] <x5c30> FlorianBad: that's something the library/module should handle for you, exactly because it's easy to get wrong or forget. for example, Crypt::PRNG is documented to re-seed itself for forks and threads. any of the good ones will, but best not to assume.
[04:06:03] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[04:06:09] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[04:06:37] <FlorianBad> x5c30: yes but I also generate Argon2 salt and various things, so I do need a good one anyway
[04:07:21] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[04:07:56] <x5c30> that's why i'm mentioning using the good one that comes with what you're already using :)
[04:13:17] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[04:17:53] *** Quits: speskk (~speskk@user/speskk) (Quit: Bye.)
[04:19:11] <FlorianBad> yeah, that's what I'm going now
[04:19:32] <FlorianBad> x5c30: it's interesting no one says what's the maximum integer value for rand()
[04:20:07] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[04:20:22] *** Quits: geli (~gelignite@55d45b98.access.ecotel.net) (Read error: Connection reset by peer)
[04:20:36] *** Joins: magla (~gelignite@55d45b98.access.ecotel.net)
[04:21:08] *** Quits: magla (~gelignite@55d45b98.access.ecotel.net) (Remote host closed the connection)
[04:22:16] * GumbyPAN CPAN Upload: Tk-HListbox-2.51 by TURNERJW https://metacpan.org/release/TURNERJW/Tk-HListbox-2.51
[04:22:37] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[04:23:25] <x5c30> sweval: say int rand 56164684684684654832175183713571375173581351357185317357135135715313157531358173557435471351745418375189437541783541
[04:23:27] <perlbot> x5c30: 4.31652833098928e+115 
[04:23:30] <FlorianBad> it makes an integer overflow if that's too high, which seems to be somewhere after 2**49
[04:23:33] <x5c30> maybe they just haven't counted to the end yet :)
[04:23:54] <FlorianBad> srand, not rand
[04:24:18] <FlorianBad> sweval: say srand(2**50)
[04:24:20] <perlbot> FlorianBad: Integer overflow in srand at (IRC) line 1. 18446744073709551615 
[04:24:32] <FlorianBad> sweval: say srand(2**49)
[04:24:33] <perlbot> FlorianBad: 562949953421312 
[04:30:20] <x5c30> ah...dunno, i'd just use the cryptographic one and not mess with rand/srand at all
[04:30:42] <x5c30> at first blush it seems like it should go up to perl's unsigned int size, but i know nothing about it
[04:32:37] <FlorianBad> well, when I fork I fell really bad not calling srand() at all, it seems wrong and dangerous, even if I then use the generator from the crypto library
[04:33:07] <FlorianBad> If I ever rewrite something and it matters I'll end up with 2 processes generating the same stuff
[04:39:14] <FlorianBad> I think someone explained me a while ago that  print($arg->{fh} "...")  should be written  print({ $arg->{fh} } "...")   but I don't understand/remember why
[04:40:44] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:53:12] <ology> "whenever you're using any expression more complex than ..." perldoc -f print
[04:56:19] * GumbyPAN CPAN Upload: Tk-HMListbox-4.01 by TURNERJW https://metacpan.org/release/TURNERJW/Tk-HMListbox-4.01
[04:56:37] <FlorianBad> x5c30: from what I understand Crypt::AuthEnc::ChaCha20Poly1305 won't add any padding if I always make each of my encrypt_add() calls 16 bytes (esp the last one), is that right?
[05:02:35] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[05:03:16] <x5c30> FlorianBad: yes, but the padding is internal and removed when decrypting so it isn't really necessary to have your data be multiple of 16
[05:03:31] <x5c30> the additional data is also padded to %16, but it's all internal
[05:04:14] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200258BC77E6BFC8D54.catv.pool.telekom.hu)
[05:04:15] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Quit: -a-)
[05:04:27] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[05:05:57] <FlorianBad> x5c30: ok, I already wrote my own padding though, which is even explained in the headers of each encrypted output file, so to keeps things standard and comprehensible/usable 30 years from now I'll just always feed it 16 bytes to force it to use my own padding
[05:06:33] <FlorianBad> That way it's not dependent on another piece of software, I want to make sure that any implementation of chacha20 will be able to decipher that
[05:07:16] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[05:09:32] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Quit: -a-)
[05:09:44] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[05:11:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[05:20:24] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[05:21:38] <x5c30> that seems counter-productive to me, it's the rfc 8439 ietf variant of chacha20poly1305, but wanting to skip the padding by putting in padding which is the same as the specification has
[05:21:50] <x5c30> anything that implements that algorithm, implements the padding
[05:22:29] <x5c30> but like an earlier point, i wouldn't really be counting on *any* encryption algorithm to be good for undefined length of time, rather to consider how to change when needed
[05:25:18] *** Quits: xenial-user10 (~androirc@20014C4C17E1D200258BC77E6BFC8D54.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[05:35:19] <FlorianBad> yeah
[05:35:40] <FlorianBad> https://metacpan.org/pod/Crypt::OpenSSL::AES   How come there is no IV mentioned anywhere there? If that's CBC there should be an IV...
[05:35:41] <Paperbot> Link title(s): [ Crypt::OpenSSL::AES - A Perl wrapper around OpenSSL's AES library - metacpan.org ]
[05:37:36] <gad4> how does one remove the first entry on a character string and not leave a hole
[05:38:44] <FlorianBad> gad4: what do you mean by hole? :)
[05:38:53] <FlorianBad> is that quantum computing?
[05:39:48] <gad4> well with ...print OUT "no works $rowd\n";
[05:40:06] <gad4> $rowd=substr $rowd, 1;
[05:40:08] <gad4> i got..
[05:40:29] <gad4> no works ·$(TKWN
[05:40:45] <FlorianBad> because you haven't set the replacement argument
[05:41:03] <gad4> not understanding 
[05:41:24] <FlorianBad> substr($rowd, 1) is different from substr($rowd, 1, undef, "")
[05:41:36] <gad4> also used$rowd=substr($rowd, 1);
[05:41:54] <FlorianBad> in the first one there are only 2 parameters, in the third one there are 4, the third and forth are undefined but they exist
[05:42:22] <gad4> i just want a string missing the first element  of one character less
[05:42:24] <FlorianBad> I meant in the second one, not the third one
[05:42:33] <FlorianBad> then read what I just wrote
[05:42:36] <gad4> I'm listening 
[05:43:04] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[05:43:33] <FlorianBad> actually I followed you in your mistake too, 1 shouldn't be second parameter but third
[05:44:24] <FlorianBad> and the second should remain 0, so substr($rowd, 0, 1, "")
[05:44:57] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[05:45:13] <gad4> I'm trying to remove the first. and have a string one character less
[05:45:44] <gad4> i dint want the first character. but the ones following 
[05:45:52] <FlorianBad> sure, that's exactly the question I answered. You might want to re-read what I just wrote to you
[05:46:31] <FlorianBad> well, then you don't want to actually "REMOVE" anything, what you are talking about is RETURNING something
[05:46:53] <FlorianBad> so it's a different question
[05:47:15] <FlorianBad> I gave you the answer to the "remove" question
[05:48:01] <gad4> im sorry for not understanding 
[05:48:11] <gad4> https://www.google.com/amp/s/www.geeksforgeeks.org/perl-substr-function/amp/
[05:48:12] <Paperbot> Link title(s): [ Perl | substr() function - GeeksforGeeks <https://www.geeksforgeeks.org/perl-substr-function/> ]
[05:48:50] <gad4> this is saying that the third entry being 1 would return a string of 1 character?
[05:49:23] *** Joins: krismatrix (~krismatri@38.80.149.51)
[05:49:38] <gad4> i want a string 12345 to return  2345. not "*2345
[05:50:52] <krismatrix> Can anyone explain to me the difference between continuous integration vs continuous delivery. There is also continuous deployment, but I get that. The latter is automatically push to production. But the online definitions of integration and delivery seems to mean the same thing to me. delivery simply means pushing to repoistories?
[05:52:33] <ether> integration involves testing
[05:52:51] <ether> "continous integration" means "put all the pieces together and check that it works"
[05:53:00] <krismatrix> right.
[05:53:14] <ether> which is not the same as deployment - you may want to actually deploy only on a fixed, controlled schedule, rather than whenever a new commit i smade
[05:53:16] <x5c30> FlorianBad: Crypt::OpenSSL::AES isn't CBC, but the docs point out that it can be used that way in combination with Crypt::CBC. Crypt::CBC documentation (linked from SEE ALSO) covers how to give IV (random if not specified).
[05:53:46] <krismatrix> Right...but what is continous delivery? Your explanation on integration and deployment makes sense.
[05:54:05] <FlorianBad> x5c30: ok I see, so I'll better use the other then if I want my own unique IVs
[05:54:27] <x5c30> it allows you to give your own, it just fills in random bytes if you don't
[05:54:45] <x5c30> not that i've used it, i just read that in the doc
[05:54:56] *** Joins: whynot (~whynot@37.73.154.156)
[05:57:01] <gad4> i fixed it. it needed a 2 (idk why)
[05:57:06] <gad4> thanks
[06:05:14] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[06:07:02] *** Joins: krismatrix (~krismatri@38.80.149.51)
[06:11:27] * GumbyPAN CPAN Upload: PDL-2.072 by ETJ https://metacpan.org/release/ETJ/PDL-2.072
[06:12:10] <FlorianBad> x5c30: I suppose there is no way for Crypt::AuthEnc::ChaCha20Poly1305 to be multithread? I will encrypt hundreds of GB and I could have 8 on a decent CP, instead I have this single-thread bottleneck :-/
[06:12:26] <krismatrix> umm...with github actions...how do you install or setup carton?
[06:15:28] *** Joins: epony (epony@user/epony)
[06:15:41] <sivoais> krismatrix: the same way as locally? link me your repo if you want me to take a look
[06:17:33] <krismatrix> I haven't pushed the actions to repo yet..i am still building it...but I can share the yml file i am working on: https://l.perl.bot/p/p9qtnl
[06:17:33] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[06:17:50] *** Quits: Su-Shee (~Susanne@p4ffc7924.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:19:18] *** Joins: Su-Shee (~Susanne@p4ff49408.dip0.t-ipconnect.de)
[06:27:11] <x5c30> FlorianBad: not that i know of, no. there's not a lot to parallelize anyway as each state depends on the previous. if i were wanting to warm up multiple cores i'd look at doing simulataneous encryption in separate processes.
[06:28:08] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Read error: Connection reset by peer)
[06:28:08] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Read error: Connection reset by peer)
[06:28:09] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Read error: Connection reset by peer)
[06:28:15] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Read error: Connection reset by peer)
[06:28:16] <x5c30> simultaneous could be "encrypt the big thing" or if you're breaking each "big thing" into a chunk size, each chunk could be simultaneous
[06:28:17] *** Quits: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Read error: Connection reset by peer)
[06:28:30] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Read error: Connection reset by peer)
[06:29:06] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[06:29:23] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[06:29:33] <x5c30> but for any set of encrypt_init, encrypt_add, encrypt_add, .. (whatever it calls those functions) that's where state depends on the previous operation anyway, so not much to gain with multiple threads
[06:29:34] <FlorianBad> Yeah, what I plan to do is every first of the month run a "backup night" ;) Where everything is queued, but I can come up with something that processes the queue of files to archive and sends them to 8 processing threads
[06:30:25] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[06:30:25] *** ChanServ sets mode: +v perlbot
[06:30:30] <x5c30> yep that's a possibility. i'm the wrong one to ask if you want those in perl interpreter threads though, i've never used them. i'd just be going for a "master" process and "fork workers"
[06:30:55] <FlorianBad> I bought an Intel NUC and put 2TB of NVMe inside, and that box will only be used when I make backups, it will do nothing else
[06:30:56] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[06:31:08] <sivoais> krismatrix: you might want to look at <https://github.com/shogo82148/actions-setup-perl>
[06:31:09] <Paperbot> Link title(s): [ GitHub - shogo82148/actions-setup-perl: Setup Perl environment Action ]
[06:31:26] *** Joins: perldoc (~perldoc@24.88.49.194)
[06:31:38] <krismatrix> thank you sivoais
[06:31:47] <FlorianBad> x5c30: well, not really threads (not a "threaded perl") but just different forks, and they can receive the new instructions from UNIX socket
[06:31:47] <sivoais> it has an option to install with Carton
[06:31:56] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[06:32:43] <sivoais> (i've never used that option because I usually have more complex builds with optional / platform-specific deps so I do it myself)
[06:33:24] <x5c30> FlorianBad: yep, that sounds like a good way to get all your cores working and speed things up.
[06:34:37] <krismatrix> sivoais: yeah..let me see. I don't understand what uses: shogo82148/actions-setup-perl@v1 this line means in github actions. But the rest of them are more intuitive.
[06:35:37] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-178.dsl.bell.ca) (Ping timeout: 240 seconds)
[06:35:58] <FlorianBad> x5c30: these backup scripts will be really awesome, I'm doing this very well to make it super easy to use and yet highly secure. When I'm done I'll share them
[06:36:15] <sivoais> krismatrix: that syntax is for including and running other existing actions
[06:36:17] <x5c30> cool :)
[06:36:50] <sivoais> krismatrix: so you already are using actions for checkout the repo (actions/checkout) and to use a Node version (actions/setup-node)
[06:37:41] <krismatrix> yeah...i don't understand what those things do exactly. It sort of seems like it is saying that install node on the github actions server\
[06:38:05] <krismatrix> which i guess i accept since ubuntu doesn't have node pre-installed. But perl is usually pre-installed.
[06:40:14] <sivoais> both are actually pre-installed, but they are specific versions (which can change as the VM image get updated)
[06:40:47] <sivoais> this tells you what is installed <https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md>
[06:40:48] <Paperbot> Link title(s): [ virtual-environments/Ubuntu2004-Readme.md at main · actions/virtual-environments · GitHub ]
[06:41:15] <sivoais> docs for the syntax <https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions>
[06:41:17] <Paperbot> Link title(s): [ Workflow syntax for GitHub Actions - GitHub Docs ]
[06:42:57] *** Quits: jx0 (~jx0@199.229.250.145) (Ping timeout: 240 seconds)
[06:43:20] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca)
[06:44:47] *** Joins: jx0 (~jx0@199.229.250.139)
[06:47:02] <sivoais> krismatrix: i would recommend testing the workflow on a branch (make sure to add it to on.push.branches)
[06:47:19] <sivoais> then you can see if/how it works and iterate on that
[06:47:20] <krismatrix> yeah...
[06:58:11] *** Quits: R2robot (~R2robot@user/r2robot) (Remote host closed the connection)
[07:01:03] *** Joins: R2robot (~R2robot@user/r2robot)
[07:08:37] <krismatrix> Hey sivoais...I making good progress now. Thank you. I still need to get everything working...but I am making progress.
[07:10:12] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:10:55] <krismatrix> I have a question the mojo app's my_app.yml file. This file has passwords and other credentials (mostly for cookies or database servers). I was under the understanding that this file should NOT be pushed to github. But without doing that...how can we properly do CI when the Mojo app expect that file?
[07:22:07] <sivoais> krismatrix: if you need those, there is a way to pass secrets into workflows
[07:23:06] <krismatrix> thank you. I will look into that.
[07:24:37] <sivoais> though you could generate some of those anew on the CI and use a development-mode .yml
[07:30:04] <krismatrix> yes...I am trying to connect the various dots between my_app.yml, github actions and how I set up dev and prod. Technically I already have dev credentials for testing on my laptop which I don't mind using on github actions. But those dev credentials and prod credentials are in my_app.yml. I need to understand how to pass/setup github actions to use dev credentials. I don't comprehend that yet.
[07:31:36] * GumbyPAN CPAN Upload: App-HomeBank2Ledger-0.010 by CCM https://metacpan.org/release/CCM/App-HomeBank2Ledger-0.010
[07:31:40] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (K-Lined)
[07:31:41] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (K-Lined)
[07:31:42] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (K-Lined)
[07:31:42] *** Quits: latk (~latk@2001:470:69fc:105::255) (K-Lined)
[07:31:42] *** Quits: hussam (~hussam@user/hussam) (K-Lined)
[07:31:42] *** Quits: graham (~gchristen@user/gchristensen) (K-Lined)
[07:31:43] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (K-Lined)
[07:31:43] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (K-Lined)
[07:31:43] *** Quits: ilmari_ (~ilmari@user/ilmari) (K-Lined)
[07:31:43] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (K-Lined)
[07:31:43] *** Quits: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c) (K-Lined)
[07:36:22] *** Quits: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it) (Read error: Connection reset by peer)
[07:36:36] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[07:37:43] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[07:43:39] <krismatrix> sivoais...I looked into secrets...and it is indeed a good feature...but I think the simpler solution would be if I could create a my_app_test.yml that I can push to github or something along those lines. I am not sure if that is possible to implement.
[07:44:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:44:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:48:12] <sivoais> krismatrix: that's what I would do. Create a separate config only for the test environment
[07:48:57] <sivoais> if you need to setup things like a DB, there are ways to do that in GitHub Actions. Specifically, you can use Docker containers
[07:50:57] <sivoais> e.g., <https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers>
[07:50:58] <Paperbot> Link title(s): [ Creating PostgreSQL service containers - GitHub Docs ]
[07:54:43] <krismatrix> hmmm...
[07:54:55] *** Joins: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it)
[07:58:57] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[07:59:21] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:59:25] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[08:03:23] *** Joins: Martchus_ (~martchus@2a01:c23:c43e:5700:d250:99ff:fe49:3cce)
[08:04:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[08:05:02] *** Quits: Martchus (~martchus@dynamic-077-004-113-250.77.4.pool.telefonica.de) (Ping timeout: 268 seconds)
[08:11:40] * GumbyPAN CPAN Upload: Lang-HL-1.071 by RAJ https://metacpan.org/release/RAJ/Lang-HL-1.071
[08:25:57] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Quit: leaving)
[08:27:52] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[08:27:52] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[08:27:58] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[08:27:58] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[08:27:58] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[08:27:58] *** Joins: graham (~gchristen@user/gchristensen)
[08:27:58] *** Joins: hussam (~hussam@user/hussam)
[08:27:58] *** Joins: ilmari_ (~ilmari@user/ilmari)
[08:28:10] *** Joins: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2)
[08:28:10] *** Joins: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c)
[08:29:18] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Client limit exceeded: 20000)
[08:31:48] *** Joins: deadmarshal (~deadmarsh@95.38.113.75)
[08:33:50] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 256 seconds)
[08:45:04] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[08:46:57] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[08:47:57] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:51:44] * GumbyPAN CPAN Upload: Lang-HL-2.001 by RAJ https://metacpan.org/release/RAJ/Lang-HL-2.001
[08:52:00] *** Joins: latk (~latk@2001:470:69fc:105::255)
[08:52:00] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[08:56:05] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Ping timeout: 250 seconds)
[09:03:32] *** Joins: locrian9 (~mike@4.71.132.228)
[09:15:32] *** Quits: whynot (~whynot@37.73.154.156) (Quit: leaving)
[09:23:41] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[09:33:41] *** Quits: deadmarshal (~deadmarsh@95.38.113.75) (Ping timeout: 245 seconds)
[09:47:08] *** Quits: locrian9 (~mike@4.71.132.228) (Quit: leaving)
[09:47:51] *** Joins: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com)
[09:49:13] *** Quits: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com) (Client Quit)
[10:02:51] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/01/28 UTC) 64 Bit)
[10:03:09] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:07:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[10:07:54] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:10:48] *** Joins: jmjl (fc1d143dc2@user/jmjl)
[10:14:23] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[10:16:58] *** Joins: locrian9 (~mike@4.71.132.228)
[10:17:21] *** Quits: locrian9 (~mike@4.71.132.228) (Client Quit)
[10:18:30] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:24:09] *** Joins: simcop2387_ (~simcop238@perlbot/patrician/simcop2387)
[10:24:37] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[10:24:44] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 250 seconds)
[10:24:49] *** Joins: deadmarshal (~deadmarsh@95.38.112.42)
[10:24:57] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 240 seconds)
[10:24:59] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[10:26:04] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[10:26:04] *** ChanServ sets mode: +v perlbot
[10:26:26] *** simcop2387_ is now known as simcop2387
[10:32:24] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:32:32] *** Joins: deadmarshal_ (~deadmarsh@95.38.113.93)
[10:34:02] *** Quits: deadmarshal (~deadmarsh@95.38.112.42) (Ping timeout: 260 seconds)
[10:37:45] *** Quits: jx0 (~jx0@199.229.250.139) (Quit: poof!)
[10:40:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:40:37] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[10:45:30] <buu> https://www.npmjs.com/package/@mcmics/exiftool.pl o.O
[10:45:31] <Paperbot> Link title(s): [ @mcmics/exiftool.pl  -  npm ]
[10:56:58] * GumbyPAN CPAN Upload: MsOffice-Word-HTML-Writer-1.06 by DAMI https://metacpan.org/release/DAMI/MsOffice-Word-HTML-Writer-1.06
[10:59:36] <xq> wut
[11:01:51] *** Joins: zamanf (~dev@user/zamanf)
[11:21:51] *** Quits: brainbuz (~brainbuz@151.197.242.207) (Quit: Leaving)
[11:22:24] *** Joins: Markow (~Markow@176.122.215.103)
[11:37:03] * GumbyPAN CPAN Upload: Dist-Zilla-PERLSRVDE-0.0.2 by PERLSRVDE https://metacpan.org/release/PERLSRVDE/Dist-Zilla-PERLSRVDE-0.0.2
[11:42:28] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:45:44] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:50:30] *** Joins: Khosruw (~Khosruw@151.246.127.34)
[11:52:18] *** Quits: hussam (~hussam@user/hussam) (Quit: Client limit exceeded: 20000)
[11:52:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:53:43] <Khosruw> hey guys, i'm using mojolicious in production and my question is: should i handle my "die" errors by try/catch?\
[11:53:57] *** Joins: hussam (~hussam@user/hussam)
[11:54:07] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Quit: Client limit exceeded: 20000)
[11:54:37] <Khosruw> i mean, the die errors that i purposely placed them
[11:54:52] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[11:55:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:56:26] <tm604> possibly, yes - what alternatives are you considering?
[11:56:51] <Khosruw> Tiny::try maybe?
[11:57:32] <tm604> that's a specific implementation of try/catch
[11:58:09] <tm604> but other than try/catch, what error handling were you considering?
[11:58:50] <Khosruw> just for "die"
[11:59:54] <Khosruw> because mojolicious automatically passes die errors to the Mojo::log->error
[12:00:36] <Khosruw> it doens't make production down
[12:00:55] <tm604> right, but "should I use try/catch" isn't a question anyone else can answer for you without a bit more detail...
[12:01:22] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[12:01:24] <tm604> i.e. what do you want to happen when there's an error, what sort of errors are you talking about, that sort of thing
[12:01:42] <tm604> in general "yes, try/catch is a common pattern", but presumably there's more to the question otherwise you'd be writing code by now =)
[12:03:34] <Khosruw> well, let me explain more: i'm using parser::mgc + mojolicious (parser::mgc to get requested data, parse it and return the results to the mojolicious). so we have parser::mgc die errors, for example if the user entered syntax is wrong, it says: "Syntax Error" (die error) but it continues and if the syntax is correct, well it just does its company!
[12:04:00] <tm604> so what continues, and where?
[12:04:20] <Khosruw> inside a loop
[12:04:38] <tm604> so there's already an exception handler in that loop, whatever it is
[12:04:59] <tm604> (the short answer is probably just "install and use Syntax::Keyword::Try", but it seems mildly important to understand what's currently happening and why)
[12:06:04] <Khosruw> as what you've said, i think i don't need try/catch
[12:06:20] <Khosruw> because it's not something that make production down
[12:07:06] <Khosruw> for example, if we had fatal errors, of course I have to put that piece of code inside a try/catch
[12:07:26] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.16.0-Pogorze-Karpackie-CUSTOM-KERNEL)
[12:07:31] <tm604> exceptions *are* fatal errors - unless _something_ catches them, default behaviour for Perl is to exit
[12:08:11] <tm604> and if there's already some sort of exception handler, it's likely to pick up everything - not just Parser::MGC exceptions
[12:08:35] <Khosruw> oh you're right man! already found what you've said in mojo docs: https://docs.mojolicious.org/Mojo/Exception
[12:08:36] <Paperbot> Link title(s): [ Mojo::Exception - Exception base class ]
[12:09:08] <tm604> assuming this is something web-based, I would normally expect the default behaviour to be less useful, and that anything which can throw an exception should be wrapped in exception handling that returns a more useful message
[12:09:56] <Khosruw> tm604 right, thanks a lot (you saved the whole production :))
[12:10:09] <Khosruw> tm604++
[12:10:23] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:13:23] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:18:16] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 250 seconds)
[12:19:41] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Client limit exceeded: 20000)
[12:26:10] *** Quits: Khosruw (~Khosruw@151.246.127.34) (Quit: Client closed)
[12:30:28] *** Joins: dev_ (~dev@2a02:587:3240:a000:2d8b:6ac6:3cc7:b9fb)
[12:31:10] *** dev_ is now known as zamanf
[12:31:12] *** Quits: zamanf (~dev@2a02:587:3240:a000:2d8b:6ac6:3cc7:b9fb) (Changing host)
[12:31:12] *** Joins: zamanf (~dev@user/zamanf)
[12:32:08] * GumbyPAN CPAN Upload: Mojo-Netdata-0.02 by JHTHORSEN https://metacpan.org/release/JHTHORSEN/Mojo-Netdata-0.02
[12:32:21] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[12:47:10] * GumbyPAN CPAN Upload: Math-MatrixDecomposition-1.05 by RALPH https://metacpan.org/release/RALPH/Math-MatrixDecomposition-1.05
[12:49:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 245 seconds)
[12:54:54] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:05:03] *** Joins: martinus__ (~martin@153.27.202.77.rev.sfr.net)
[13:18:41] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 250 seconds)
[13:29:28] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:31:03] *** Joins: EGD (~egd@user/egd)
[13:32:59] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[13:35:11] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[13:35:34] *** Joins: zhmylove (~zhmylove@178.252.127.211)
[13:40:47] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:8c0e:5374:183d:34e2)
[13:40:49] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:41:02] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 250 seconds)
[13:41:14] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[13:42:32] *** Joins: fwg (~fwg@user/fwg)
[13:44:55] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[13:51:55] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[13:57:21] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[14:03:56] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 268 seconds)
[14:06:02] *** Joins: WinterStar (~IceLight@user/icelight)
[14:09:23] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[14:12:26] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 245 seconds)
[14:13:46] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[14:14:56] *** Joins: WinterStar (~IceLight@user/icelight)
[14:18:28] *** Joins: Adoi (~Adoi@user/adoi)
[14:28:47] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[14:31:21] * GumbyPAN CPAN Upload: Podman-20220129.0 by TSCHAEFER https://metacpan.org/release/TSCHAEFER/Podman-20220129.0
[14:34:44] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[14:35:05] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[14:35:40] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[14:40:17] *** Joins: fwg (~fwg@user/fwg)
[14:40:22] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:44:03] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:49:37] *** Joins: magla (~gelignite@55d4f325.access.ecotel.net)
[14:50:30] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:56:38] *** Joins: proller (~p@80.240.216.69)
[14:56:49] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[14:57:30] *** Joins: frost (~frost@user/frost)
[15:18:06] *** Quits: deadmarshal_ (~deadmarsh@95.38.113.93) (Quit: ZNC 1.8.2 - https://znc.in)
[15:19:17] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[15:19:34] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[15:21:09] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:23:37] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Ping timeout: 240 seconds)
[15:25:21] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[15:31:15] *** Quits: bluray (~bluray@user/zapdos) (Quit: Konversation terminated!)
[15:32:47] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:33:32] *** Joins: csrf (~csrf@user/csrf)
[15:38:03] *** Joins: Typhon (~Typhon@dslb-088-067-073-013.088.067.pools.vodafone-ip.de)
[15:38:05] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[15:39:31] *** Quits: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it) (Ping timeout: 245 seconds)
[15:46:06] *** Quits: Typhon (~Typhon@dslb-088-067-073-013.088.067.pools.vodafone-ip.de) (Quit: moep moep)
[15:49:27] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:58:27] *** Joins: alex11 (~alex11@user/alex11)
[15:58:50] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Ping timeout: 260 seconds)
[16:06:28] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[16:09:39] *** Joins: ferz (~ferz@93-39-143-30.ip76.fastwebnet.it)
[16:18:46] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[16:27:48] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[16:36:18] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:43:38] *** Quits: martinus__ (~martin@153.27.202.77.rev.sfr.net) (Ping timeout: 252 seconds)
[16:45:39] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[16:50:47] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[16:51:44] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[16:55:01] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Read error: Connection reset by peer)
[16:55:05] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[16:57:13] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[16:59:18] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:02:59] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[17:03:10] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[17:04:22] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:09:28] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Ping timeout: 250 seconds)
[17:09:45] *** Joins: fwg (~fwg@user/fwg)
[17:11:39] * GumbyPAN CPAN Upload: mod_perl-2.0.12 by SHAY https://metacpan.org/release/SHAY/mod_perl-2.0.12
[17:12:29] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Ping timeout: 250 seconds)
[17:16:39] * GumbyPAN CPAN Upload: Lang-HL-2.111 by RAJ https://metacpan.org/release/RAJ/Lang-HL-2.111
[17:19:51] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[17:24:14] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Ping timeout: 260 seconds)
[17:24:20] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:27:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[17:29:26] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[17:33:57] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:42:27] *** sdk_- is now known as sdk_
[17:46:34] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[17:50:33] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[17:51:43] * GumbyPAN CPAN Upload: DateTime-Calendar-Julian-0.107 by WYANT https://metacpan.org/release/WYANT/DateTime-Calendar-Julian-0.107
[17:53:01] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[17:53:11] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[17:54:03] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:8c0e:5374:183d:34e2) (Read error: Connection reset by peer)
[17:56:32] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Ping timeout: 256 seconds)
[17:57:12] *** Quits: depesz (~quassel@lana.depesz.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:00:31] *** Joins: depesz (~quassel@lana.depesz.com)
[18:05:03] *** Joins: deadmarshal (~deadmarsh@95.38.113.93)
[18:19:47] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[18:21:46] * GumbyPAN CPAN Upload: Math-MatrixDecomposition-1.06 by RALPH https://metacpan.org/release/RALPH/Math-MatrixDecomposition-1.06
[18:32:37] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[18:32:40] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[18:41:15] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:43:17] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d8e:cf48:737f:ec3)
[18:48:01] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[18:49:17] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[18:49:24] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[18:52:07] *** Joins: JoelJoel (~jjshoe@user/joel)
[18:52:21] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 250 seconds)
[18:52:25] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[18:54:24] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[18:55:15] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[18:56:13] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:59:24] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[19:02:57] *** Joins: zamanf_ (~dev@2a02:587:3240:a000:4045:f296:fe0e:9047)
[19:03:09] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[19:05:21] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[19:05:28] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[19:06:54] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 250 seconds)
[19:06:57] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[19:09:23] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[19:09:34] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Read error: Connection reset by peer)
[19:09:42] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[19:10:28] *** Joins: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec)
[19:11:20] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 256 seconds)
[19:11:37] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[19:16:23] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[19:16:57] *** Quits: veesh (~veesh@89.237.103.221) (Ping timeout: 240 seconds)
[19:19:26] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[19:26:56] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[19:26:59] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Quit: WeeChat 3.3)
[19:32:57] *** Joins: veesh (~veesh@77.137.131.144)
[19:33:02] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[19:33:09] *** Joins: dev__ (~dev@ppp-94-66-58-146.home.otenet.gr)
[19:36:46] *** Quits: zamanf_ (~dev@2a02:587:3240:a000:4045:f296:fe0e:9047) (Ping timeout: 260 seconds)
[19:39:14] *** Joins: Adoi (~Adoi@user/adoi)
[19:46:47] *** dev__ is now known as zamanf
[19:48:08] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:03:33] <LeoNerd> simcop2387, zgu: Uhm, quick question: Have you ever actually used the D:C:A:LinuxKernel SPI stuff..? Actually tested it on real hardware with a real device?
[20:03:44] <LeoNerd> It completely doesn't work. I'm having to edit quite a bit of code to make it do anything
[20:15:27] *** Quits: magla (~gelignite@55d4f325.access.ecotel.net) (Quit: Stay safe!)
[20:18:46] *** Quits: anthk_ (~anthk_@41.85-84-206.dynamic.clientes.euskaltel.es) (Ping timeout: 256 seconds)
[20:23:50] <zgu> i had it running on raspberry pi hardware at one point
[20:23:57] *** Quits: gad4 (~Android@2607:fb90:2e71:7910:d438:3a95:f333:2cec) (Ping timeout: 240 seconds)
[20:25:08] <LeoNerd> Evidentally not the current version
[20:25:44] <rindolf> LeoNerd: roar... what's the good news
[20:25:59] <LeoNerd> zgu: https://github.com/simcop2387/device-chip-adapter-linuxkernel/compare/master...leonerd:leonerd-fixes?expand=1  -- See these changes. Idon't see how it could possibly have worked without that
[20:26:00] <Paperbot> Link title(s): [ Comparing simcop2387:master...leonerd:leonerd-fixes · simcop2387/device-chip-adapter-linuxkernel ... ]
[20:26:16] *** Joins: krismatrix (~krismatri@38.80.149.51)
[20:27:04] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 250 seconds)
[20:30:31] *** Joins: wilk (~wilk@user/wilk)
[20:30:46] <krismatrix> sivoais...https://l.perl.bot/p/54sqbd Making good progress on github actions and executing and running most of the perl scripts. However, there seems to be some problem with the perl-postgres conection. Can you advise?
[20:30:46] <zgu> yeah simcop2387 rewrote how it passes arguments in or something... no, i haven't tested the SPI part since then
[20:30:46] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[20:31:12] <LeoNerd> OK, that's good to know. I'll just take it as "edit whatever is required" and I'll send another PR
[20:32:01] * GumbyPAN CPAN Upload: Travel-Status-DE-IRIS-1.64 by DERF https://metacpan.org/release/DERF/Travel-Status-DE-IRIS-1.64
[20:32:52] <zgu> thought you meant something on the XS side wasn't working
[20:33:03] <LeoNerd> No, I meant really fundamental "this can never possibly work"
[20:33:23] <LeoNerd> E.g. note the way that the _base class that was sitting in the _SPI.pm file was use base'ing itself
[20:34:01] <zgu> hmm
[20:34:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:08] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[20:35:12] * rindolf is working on https://en.wikipedia.org/wiki/Theory_of_everything aka https://en.wikipedia.org/wiki/Clarissa_Explains_It_All
[20:35:33] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[20:37:58] <simcop2387> LeoNerd: i don't think i had completely, but it's been way too long i'll take a look shortly
[20:38:00] <zgu> and he had all 4 classes in a single file originally
[20:38:18] <LeoNerd> simcop2387: Oh don't worry, I'm fixing it up now
[20:38:19] <zgu> or was it only 3 before i added SPI?
[20:38:31] <LeoNerd> It's fine if I start from a "this existing code isn't known to work at all" basis
[20:38:41] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[20:38:42] * pragma- giggles at # TODO what does this do?
[20:38:59] <simcop2387> LeoNerd: i think i had seen it go out to a logic analyzer and look ok, but that might have been it
[20:39:12] <zgu> also https://github.com/kc2zgu/device-chip-adapter-linuxkernel/commit/866c56d74cc9c983d7719a9d5efca670ea571c3f for some bugs i had in the new I2C implementation
[20:39:13] <Paperbot> Link title(s): [ fix I2C XS behavior · kc2zgu/device-chip-adapter-linuxkernel@866c56d · GitHub ]
[20:39:27] <LeoNerd> simcop2387: Before I touched the code, I don't see any lines of code that ever -set-  $self->{spi_dev}
[20:39:34] <LeoNerd> Only lines that read it, and die if it isn't set.
[20:39:51] <zgu> but i think you were looking at optimizing some of that XS memory management anyway
[20:41:33] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[20:41:40] <rindolf> LeoNerd: 'it  can never work' - that's what the dominioners said about the      https://memory-alpha.fandom.com/wiki/Trill 's symbionntship
[20:41:40] <Paperbot> Link title(s): [ Trill | Memory Alpha | Fandom ]
[20:43:24] *** Quits: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[20:44:39] *** Joins: gad4 (~Android@pool-74-105-167-46.nwrknj.fios.verizon.net)
[20:50:39] *** Joins: jx0 (~jx0@199.229.250.139)
[20:52:02] *** Joins: monkey_ (~user@190.104.116.153)
[20:55:04] <simcop2387> LeoNerd: i see problems in your changes, we've now got spi_bus and spidev that mean the same thing i think
[20:55:25] <simcop2387> nope i can't read
[20:55:51] *** Quits: jx0 (~jx0@199.229.250.139) (Quit: poof!)
[20:56:18] <simcop2387> can definitely be cleaned up.  i'm actually thinking that Object::Pad for these might be really nice actually for simplifying a crapton of the code
[20:59:41] <LeoNerd> Well, yah. :) But anyway I'll continue hacking code here and making it actually work :) and then we can neaten it up
[21:00:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:09:46] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:13:42] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[21:14:27] *** Joins: magla (~gelignite@55d4f325.access.ecotel.net)
[21:15:17] *** Joins: mixfix41 (~homefame@user/mixfix41)
[21:16:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:16:16] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[21:18:16] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:18:19] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200258BC77E6BFC8D54.catv.pool.telekom.hu)
[21:18:41] <sivoais> krismatrix: don't know the issue until i try it out, but i would recommend using <https://github.com/mxschmitt/action-tmate> which lets you SSH into a shell on the CI runner
[21:18:41] <Paperbot> Link title(s): [ GitHub - mxschmitt/action-tmate: Debug your GitHub Actions via SSH by using tmate to get access t... ]
[21:20:04] <krismatrix> hmm.
[21:23:22] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:24:22] *** Quits: gk_ (~irkk@debrecziner.extrawurst.systems) (Remote host closed the connection)
[21:25:41] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[21:37:08] * GumbyPAN CPAN Upload: Net-SAML2-0.50-TRIAL by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-SAML2-0.50-TRIAL
[21:42:58] *** Joins: gk_ (~irkk@debrecziner.extrawurst.systems)
[21:45:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:51:18] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:51:39] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[21:52:01] *** Joins: zhmylove (~zhmylove@178.252.127.211)
[21:52:10] * GumbyPAN CPAN Upload: Acme-Resume-0.0109 by CSSON https://metacpan.org/release/CSSON/Acme-Resume-0.0109
[21:52:10] * GumbyPAN CPAN Upload: Net-SAML2-0.51-TRIAL by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-SAML2-0.51-TRIAL
[21:55:14] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:57:52] *** Quits: xenial-user10 (~androirc@20014C4C17E1D200258BC77E6BFC8D54.catv.pool.telekom.hu) (Remote host closed the connection)
[22:02:43] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[22:03:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[22:07:54] <LeoNerd> simcop2387: I'm currently implementing these same methods for the MAX7219 panel -- https://metacpan.org/pod/Device::Chip::SSD1306#DRAWING-METHODS
[22:07:55] <Paperbot> Link title(s): [ Device::Chip::SSD1306 - chip driver for monochrome OLED modules - metacpan.org ]
[22:08:09] <LeoNerd> I suddenly wonder about making a "Framebuffer" helper instance with a standard API shape
[22:08:54] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[22:12:01] <LeoNerd> I guess I'll keep it in mind if I ever make a third one
[22:12:33] *** Joins: argento (~argent0@168-227-97-34.ptr.westnet.com.ar)
[22:15:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:17:51] <krismatrix> sivoais...thank you very much. The tmate suggestion was extremely helpful. I managed to solve the error I was having.
[22:17:54] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200258BC77E6BFC8D54.catv.pool.telekom.hu)
[22:18:07] *** Quits: ilmari_ (~ilmari@user/ilmari) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: latk (~latk@2001:470:69fc:105::255) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: hussam (~hussam@user/hussam) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Bridge terminating on SIGTERM)
[22:18:16] *** Quits: graham (~gchristen@user/gchristensen) (Quit: Bridge terminating on SIGTERM)
[22:18:17] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Quit: Bridge terminating on SIGTERM)
[22:22:06] <sivoais> great! :-D
[22:22:28] *** Joins: latk (~latk@2001:470:69fc:105::255)
[22:30:39] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d8e:cf48:737f:ec3) (Read error: Connection reset by peer)
[22:31:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:32:44] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23)
[22:34:18] *** Quits: argento (~argent0@168-227-97-34.ptr.westnet.com.ar) (Quit: leaving)
[22:39:22] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[22:40:26] *** Quits: deadmarshal (~deadmarsh@95.38.113.93) (Ping timeout: 256 seconds)
[22:41:57] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:47:17] *** Quits: latk (~latk@2001:470:69fc:105::255) (Quit: Client limit exceeded: 20000)
[22:57:24] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[22:57:54] *** Quits: Martchus_ (~martchus@2a01:c23:c43e:5700:d250:99ff:fe49:3cce) (Read error: Connection reset by peer)
[22:58:16] *** Joins: Martchus (~martchus@2a01:c23:c43e:5700:d250:99ff:fe49:3cce)
[22:58:34] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:58:43] *** Quits: xenial-user10 (~androirc@20014C4C17E1D200258BC77E6BFC8D54.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[23:01:20] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[23:01:20] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[23:01:20] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[23:01:20] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[23:01:20] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[23:01:20] *** Joins: hussam (~hussam@user/hussam)
[23:01:20] *** Joins: ilmari_ (~ilmari@user/ilmari)
[23:01:21] *** Joins: graham (~gchristen@user/gchristensen)
[23:01:32] *** Joins: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c)
[23:01:32] *** Joins: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2)
[23:04:15] *** Joins: jx0 (~jx0@199.229.250.139)
[23:10:25] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[23:11:19] * GumbyPAN CPAN Upload: Catalyst-TraitFor-Request-StructuredParameters-0.008 by JJNAPIORK https://metacpan.org/release/JJNAPIORK/Catalyst-TraitFor-Request-StructuredParameters-0.008
[23:11:33] *** Joins: latk (~latk@2001:470:69fc:105::255)
[23:11:56] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 252 seconds)
[23:13:07] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[23:16:48] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[23:22:04] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[23:24:47] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[23:28:53] *** Quits: EGD (~egd@user/egd) ()
[23:29:28] *** Joins: tomaw_ (tom@libera/staff/tomaw)
[23:33:47] *** Quits: tomaw (tom@libera/staff/tomaw) (Killed (tungsten.libera.chat (Nickname regained by services)))
[23:33:47] *** tomaw_ is now known as tomaw
[23:35:59] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[23:36:15] <LeoNerd> Mmm.. I just used a five-symbol operator for the first time;  ->$#*
[23:36:19] *** Joins: lainon (~lainon@2600:381:2200:2ed8:40ff:47c:65dc:db2)
[23:36:19] *** Quits: lainon (~lainon@2600:381:2200:2ed8:40ff:47c:65dc:db2) (Remote host closed the connection)
[23:36:40] *** Joins: kensanata (~user@user/kensanata)
[23:45:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[23:45:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:55:04] <ether> a celebration is needed
