[03:40:58] <headius> jnr-ffi 2.2.12 released with some minor fixes... did not release the rest of the stack since we do not need these changes for any issues
[13:27:35] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:47:03] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[23:35:48] <headius> enebo: any concerns about this one? https://github.com/jruby/jruby/pull/7167
[23:54:58] <lopex[m]> why not use cow ?
[23:55:53] <headius> we will potentially modify the bytelist, but deeper into code that does not have the RubyString anymore
[23:55:56] <lopex[m]> oh, the bytelist is not cow aware
[23:55:57] <headius> yeah
[23:56:10] <headius> I wish it were
[23:56:15] <headius> I want a COW bytelist and a fully immutable version
[23:56:33] <headius> all these frozen strings could be full immutable bytelists with fewer fields and safety guarantees
[23:57:16] <lopex[m]> once frozen strings are default symbols become obsolete right ?
[23:57:16] <headius> for that matter, having an immutable RubyString type would be possibly even better
[23:57:34] <headius> they are still separate but it is hard to say why
[23:57:46] <lopex[m]> object_id ? still the same ?
[23:57:47] <headius> frozen strings can even be interned into a deduplication set
[23:57:55] <lopex[m]> leaks ?
[23:58:20] <headius> both dedup strings and symbols are GCable now
[23:58:23] <headius> so I dunno
[23:58:32] <headius> it
[23:58:39] <headius> it's still two stores in CRuby as well
[23:58:51] <headius> the string contents for both may go into a common store though
[23:59:05] <lopex[m]> I still dont understand how there's no symbol leak in mri
[23:59:08] <lopex[m]> now
[23:59:10] <headius> we are doing that I think... the RubyString is frozen and deduplicated and used as the string for the symbol
[23:59:21] <headius> they just made the table weak
[23:59:44] <lopex[m]> ah, but how do they make mapping to object_id deterministic ?
[23:59:46] <headius> but most symbols get hard referenced elsewhere like in the bytecode or identifier tables (methods, constants)
[23:59:53] <lopex[m]> hashing ?
