[00:00:02] <pyzozord> i touch type but incorrectly, i use some ring finger and pinkey but not enough, and too much index inger and middle finger :P
[00:00:12] <hans> I'M WITH GeDaMo . the vast majority of time when programming isn't actually spent on typing.. it's spent thinking "what the hell should i actually write?" kind of thing
[00:00:24] <hans> ... not sure why those 2 first word were caps locked, that was unintentional 
[00:00:47] <InPhase> hans: Obviously insufficient time spent on typing.  ;)
[00:00:47] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[00:00:54] <GeDaMo> I type fast through practice, I still look at the keyboard a lot of the time
[00:01:24] <InPhase> I prefer to look at the screen so I can see what I'm screwing up.
[00:01:28] <hans> i type words
[00:01:35] <hans> sometimes
[00:01:41] <pyzozord> the fastest typer I met was a an intern doctor in a hospital
[00:01:55] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:02:03] <pyzozord> she typed so fast I was in shock, I thought programmers ought to type fast just because they type a lot
[00:02:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:02:17] <pyzozord> but that doctor literally typed twice as fast as me, or three times
[00:02:31] <epony> there are also shorthand keyboards, that will classify as fast type
[00:02:39] <hans> well it's not a competition.. because we all know who would win if it was! (just joking)
[00:02:58] <GeDaMo> Yeah, Clark Kent :P
[00:03:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:03:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:03:34] <hans> hmm interesting theory
[00:03:53] <InPhase> pyzozord: Well, I found that as I improved at programming, I spent a lot less time typing.  Although one thing programmers should do a lot better is have a high probability of correctly closing parentheses in written text.  :)
[00:03:54] <hans> could he use his super speed thing to out-type us all? sounds reasonable 
[00:03:54] <GeDaMo> https://www.youtube.com/watch?v=hoCMwTIE-4g
[00:03:55] <bayaz> Title: Clark Kent is the Fastest Typist Ever 
[00:04:11] <hans> wait som1 actually made a video about it? 
[00:04:37] <GeDaMo> It's from the Superman movie with Christopher Reeves
[00:04:47] <hans> i have no recollection of this
[00:05:53] <pyzozord> InPhase: i have a lot of trouble with " vs |
[00:06:12] <hans> str = |foo|
[00:06:13] <pyzozord> i'd estimate 50% of the time I misstype
[00:06:27] <GeDaMo> Which keyboard layout do you use?
[00:06:34] <hans> really? you often accidentally type | instead of " ?
[00:06:35] <juliaEnv> Is there any way around the paradox of design? A wicked problem is one that could be clearly defined only by solving it or by solving part of it. Design problems are usually wicked problems. So, to design something you may have to design it first wrongly in a way that works and then you can finally define it correctly and design it again in a way that works.
[00:06:58] <pyzozord> pl pro layout
[00:07:00] <InPhase> pyzozord: These sorts of things tend to move around a bit between keyboards, so I often have typo struggles with symbols when I switch keyboards temporarily or permanently.
[00:07:13] <pyzozord> stands for "polish programmer"
[00:07:27] *** Joins: treason (~treason@2a02:c7e:3456:c900:e511:7234:1ba:ec81)
[00:07:55] <GeDaMo> https://en.wikipedia.org/wiki/List_of_QWERTY_keyboard_language_variants#Polish
[00:07:55] <bayaz> Title: List of QWERTY keyboard language variants - Wikipedia 
[00:07:59] *** Quits: zaher_ (~zaher@37.48.144.97) (Ping timeout: 260 seconds)
[00:08:03] <Sqaure> How does one learn human languages there days. I bet there are new methods and computer programs to aid you?
[00:08:15] <pyzozord> InPhase: it's been few years already on this keyboard
[00:08:37] <pyzozord> admittedly before I had about 5 years of apple keyboards
[00:08:48] <InPhase> Sqaure: Rosetta Stone sure runs a lot of commercials about its software.  But I don't know what is actually good.
[00:08:53] <pyzozord> but by now should be closing to being equal
[00:09:07] <bomb> Suchiman https://runwes.com/2020/02/11/howilearnedfrench.html
[00:09:07] <bayaz> Title: How I Learned French in 12 Months 
[00:09:18] <bomb> errr Sqaure ^
[00:09:19] <Sqaure> InPhase, ah, ill keep that in mind then
[00:09:35] <Sqaure> bomb, thanks
[00:09:44] <bomb> welcome
[00:10:09] *** Quits: eson123 (~whatever@user/eson123) (Ping timeout: 256 seconds)
[00:10:21] <pyzozord> GeDaMo: this seems to be the qwertz that is not the one
[00:10:23] <epony> https://www.youtube.com/watch?v=p_6hxB1OK00
[00:10:24] <bayaz> Title: Ghost in the Shell - Hacker 
[00:10:27] <pyzozord> strangly they don't have polish pro
[00:10:32] <GeDaMo> pyzozord: the pro is just below it
[00:10:57] <epony> ^ need better hands ;-) not keyboards
[00:11:25] <pyzozord> oh haha sorry, didn't look at the pictures
[00:11:48] <GeDaMo> I only looked at the pictures :P
[00:12:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[00:12:29] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[00:13:34] <InPhase> pyzozord, GeDaMo: There are https://www.pngplay.com/wp-content/uploads/1/2-Number-PNG-Download-Free-Image.png kinds of people.
[00:13:35] <bayaz> Type: image/png 
[00:13:52] <epony> https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Physical_keyboard_layouts_comparison_ANSI_ISO_KS_ABNT_JIS.png/1280px-Physical_keyboard_layouts_comparison_ANSI_ISO_KS_ABNT_JIS.png
[00:13:52] <bayaz> Type: image/png Size: 365.5 kB 
[00:13:56] <GeDaMo> There is no 2! :P
[00:14:16] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f) (Quit: Client closed)
[00:15:14] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[00:15:18] <pyzozord> I think I have similary keyboard to this one https://cf.shopee.com.my/file/4b02a7b6cffb6dc30c23fae314ed8679
[00:15:20] <bayaz> Type: image/jpeg Size: 97.2 kB 
[00:15:30] <GeDaMo> https://www.youtube.com/watch?v=s5oM5AGnJfo
[00:15:31] <bayaz> Title: Futurama - There's no such thing as two 
[00:15:35] <pyzozord> at least ;'\ is right
[00:15:39] <juliaEnv> GeDaMo haha, nice :)
[00:15:52] <pyzozord> but i have a normal length space
[00:16:12] <Raziel> ANSI keyboard layout, possibly the only american standard I can get behind
[00:16:14] <juliaEnv> GeDaMo ones and zeros everywhere :D
[00:16:19] <pyzozord> and left shift is shorter and right shift is longer, and couple other small differences
[00:17:16] <epony> what I don't like is.. laptops mostly use the "ANSI" layout which sucks ;-) the 104 "variant" (fat enter) and the 105 ISO (tall enter) are what really works well
[00:17:27] *** Quits: terminalpusher (~terminalp@2a01:586:124a:1:832a:f4bb:6fb9:a240) (Remote host closed the connection)
[00:17:35] <Raziel> pyzozord, well I guess we have to duel now
[00:17:45] <juliaEnv> pyzozord sometimes when people write to a customer about pressing the shift key, their f is not working 
[00:17:46] <Raziel> err, epony, I mean. 
[00:18:12] <pyzozord> Raziel: have at thee!
[00:21:02] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:26:30] <epony> https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Big-ass_Enter_key_%28IMG_0615%29.JPG/1280px-Big-ass_Enter_key_%28IMG_0615%29.JPG
[00:26:30] <bayaz> Type: image/jpeg Size: 176.7 kB 
[00:29:03] <Raziel> he thicc boyeeee
[00:30:14] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f)
[00:30:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[00:30:27] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[00:31:34] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[00:31:37] <epony> https://deskthority.net/wiki/Return_key
[00:31:39] <bayaz> Title: Return key - Deskthority wiki 
[00:34:00] <GeDaMo> I have an ISO enter key, apparently
[00:34:23] <epony> yeah
[00:37:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:37:49] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:37:51] *** Joins: Pickchea (~private@user/pickchea)
[00:38:33] *** Joins: NakedKing (~NakedKing@user/nakedking)
[00:38:51] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a)
[00:39:03] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:39:40] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a) (Client Quit)
[00:40:17] *** Quits: rsx (~dummy@ppp-188-174-154-241.dynamic.mnet-online.de) (Quit: rsx)
[00:40:33] *** Lord_of_Life_ is now known as Lord_of_Life
[00:40:55] <pyzozord> i don't understand DFA, if it can go to two different places from the same state based on the same input how does it now which way to go
[00:41:03] <pyzozord> https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/NFASimpleExample.svg/250px-NFASimpleExample.svg.png
[00:41:03] <bayaz> Type: image/png Size: 6.6 kB 
[00:41:17] <pyzozord> sorry I mean NFA
[00:41:23] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 250 seconds)
[00:42:25] <GeDaMo> It doesn't, that's what non-deterministic means
[00:43:16] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[00:43:46] <pyzozord> i see so it doesn't encode a single answer t encodes infinitly many possible answers of a certain shape?
[00:43:49] <Decker> pyzozord it follows both
[00:44:02] <Decker> , whenever two or more transitions are applicable, it "clones" itself into appropriately many copies, each one following a different transition. If no transition is applicable, the current copy is in a dead end, and it "dies". If, after consuming the complete input, any of the 
[00:45:07] <Decker> https://en.wikipedia.org/wiki/Nondeterministic_finite_automaton
[00:45:07] <bayaz> Title: Nondeterministic finite automaton - Wikipedia 
[00:45:51] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[00:46:00] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[00:47:18] *** Joins: jabster28 (~jabster28@81.111.217.63)
[00:47:46] *** Joins: Guest13 (~Guest13@96-65-219-197-static.hfc.comcastbusiness.net)
[00:47:59] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[00:48:47] <Guest13> what if you died from too much programming?
[00:49:31] <Sqaure> some of us will, believe me
[00:50:16] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:50:16] <pyzozord> interesting to read some ken thompson code https://swtch.com/~rsc/regexp/nfa.c.txt
[00:50:17] <bayaz> Type: text/plain 
[00:50:43] <Raziel> * Supports only ( | ) * + ?.  No escapes.
[00:50:48] <Raziel> more like no escape
[00:50:59] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 268 seconds)
[00:51:00] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[00:52:05] <pyzozord> Guest13: then you'd endup like programming with rocks https://xkcd.com/505/
[00:52:06] <bayaz> Title: A Bunch of Rocks 
[00:52:58] <pyzozord> at least I would
[00:54:19] <Guest13> programming is an eternal fury
[00:54:50] <juliaEnv> when you're programming something nontrivial, do you divide & conquer?
[00:55:25] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[00:55:33] <juliaEnv> or do you write a unit test, then a minimal code to make it pass, and then another unit test, and so on, and so forth? (letting it gradually unravel?)
[00:55:36] <analoq> takes too long, i usually just write the solution
[00:55:40] <analoq> :P
[00:56:02] <juliaEnv> or do you just code, run, patch, code, run patch, and so on?
[00:56:05] <analoq> isnt the unit test approach a divide an conquer approach as well?
[00:56:52] <analoq> splitting the problem into smaller problems and tackling them individually seems like the only way to do this :/
[00:57:12] <juliaEnv> the unit test approach doesn't make you divide and conquer. It makes you start with some user story and then another user story, ... You need something like a product backlog / sprint backlog, or banban board.
[00:57:26] <juliaEnv> err, kanban board
[00:57:40] <Guest13> you guys I'm a -3%good programmer and I've spent 9999 hours on the computer; sad huh?
[00:57:56] <Raziel> those are rookie numbers
[00:58:40] <juliaEnv> analoq without the kanban board or sprint backlog, or another form of stories (like Excel), you don't really have the written requirements to be able to code tests for.
[00:58:40] *** Quits: LuckyFire_ (~LuckyFire@79.125.172.127) (Read error: Connection reset by peer)
[00:58:42] <analoq> i mean i can give you a userstory with one big problem (write an os), but you will have to break it down further if you do that on a kanban board/ with more refined user storys or 'in your mind' does it really change anything?
[00:59:06] <juliaEnv> analoq if you give an epic, you're the owner, so you have to break it down
[00:59:13] <Raziel> user story: our users want loading to be faster
[00:59:23] <Raziel> solution: rewrite the entire asset management system and loaders
[00:59:32] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[00:59:36] <Raziel> quick 30 minute adventure 
[00:59:43] <analoq> juliaEnv: this sounds more like an 'how do you communicate requirements' rather than 'how to convert requirements into a working product'
[00:59:46] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Client closed)
[01:00:02] <pyzozord> Guest13: I have good and bad days, most of the time I feel like a dumbass
[01:00:33] *** Joins: zaher (~zaher@37.48.144.97)
[01:00:37] <alycidyne> Hello, do you think that if keyboards had separate 'submit' and 'newline' keys, then CLIs would be more widely used? 
[01:00:44] <Guest13> pyzozord: I hate communicating with programmers because I feel stupid
[01:00:53] <analoq> i can tell you how it works where i work: the PO doesn't want to be PO nor does he write Userstorys (he stops at features). The pass criteria is usually empty
[01:00:56] <analoq> :P
[01:01:21] <pyzozord> Guest13: they just made you feel that way, tells more about them than you usually
[01:01:24] <alycidyne> I sometimes see that defining a function would be best, but the awkwardness of doing it in bash just precludes it
[01:01:39] *** Joins: guest_ (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc)
[01:01:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:01:59] <alycidyne> Or bash could have less stupid multiline input editing
[01:04:30] *** Quits: yewscion (~yewscion@72-21-196-66.amazon.com) (Ping timeout: 252 seconds)
[01:05:07] <juliaEnv> analoq in Agile, requirements are user stories. The product owner has to add them into a task management software to create a product backlog, and then choose Kanban or Scrum as the software development methodology, and if it's Scrum then create a sprint backlog and start the sprint, or if it's Kanban then you take one story from the backlog and code it... But, you may need stuff like docker, kubernetes, cloud, yaml files, 
[01:05:07] <juliaEnv> docker files, pom files or gradle files, something like Spring boot, etc. These decisions, in Agile, do not simply match one user story... So how do you decide that in Agile?
[01:08:07] <GeDaMo> alycidyne: sounds like you want a better shell, not different keys :P
[01:08:17] <analoq> juliaEnv: We tried or rather still try to implement scrum, but the PO refuses to comply. his product backlog is on the Feature level (one above user stories). The simple backlog order defines the work order concept got replaced with wild filter functions etc. it's a joke
[01:08:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:08:42] <juliaEnv> analoq I understand user stories are features (functional requirements), optionally with acceptance criteria (non-functional requirements or test plans). I don't understand how the user tells the team he wants a banking system for processing loans, for example. Because that's not a story. That's a product. The product has some business needs behind it and has to achieve some business goals....
[01:09:12] <pyzozord> *dst++ = '.' is going to *dst = '.'; dst++ right?
[01:09:33] <Decker> yes
[01:09:56] <juliaEnv> analoq it's supposed to be done from a template before the Scrum or Kanban methodology, before writing any stories. I just haven't seen it done, yet. :)
[01:10:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[01:11:15] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[01:11:18] <alycidyne> GeDaMo: then again, I don't know whether Unix terminals ever got the ability to erase lines
[01:11:27] *** Joins: flaqoniun (~F@32.211.211.39)
[01:12:31] <alycidyne> Given how you cannot erase lines from anything other than a here doc or multiple lines pasted by accident in bash, I guess not
[01:12:52] <GeDaMo> Maybe with readline
[01:12:56] <pyzozord> alycidyne: they did, even when they were actual printers you could write pyzozx_ord and get pyzozord
[01:13:29] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[01:13:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:14:17] <juliaEnv> analoq you know, in plan-based methodologies there is a project chater which contains a business case and a feasibility study. In agile, people often skip everything and it doesn't make sense to start with a user story.
[01:14:29] <juliaEnv> analoq perhaps starting with https://www.atlassian.com/software/confluence/templates/it-project-poster is needed
[01:14:53] <analoq> juliaEnv: isn't it quite an intuitive process? If i go to an architect and ask him to build me a house he will ask specific questions and then we narrow it down together. He makes a final spec let's me sign it off and then he starts building the thing
[01:15:16] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[01:15:45] <Stefan26> hello
[01:15:53] *** Joins: Inari (~Pinkishu@p508ef3a5.dip0.t-ipconnect.de)
[01:16:38] <analoq> why is confluence a thing btw. It feels like a heavily gimped mediawiki :|
[01:16:45] <juliaEnv> analoq in Agile, you don't go to an architect. Instead of an architect, Agile has team members make architectural decisions.
[01:17:24] <analoq> juliaEnv: i would say your architect there would be the PO or one step above him
[01:17:25] <alycidyne> pyzozord: https://superuser.com/questions/655418/how-can-i-delete-a-just-typed-newline-character-in-bash  this makes me sad
[01:17:26] <bayaz> Title: How can I delete a just-typed newline character in bash? 
[01:17:44] <bomb> at least it's not SharePoint
[01:18:09] <Guest13> what does quantum mechanics say about computer programming?
[01:18:34] <analoq> bomb: we have the holy trinity sharepoint - confluence - devops :P
[01:18:49] *** Quits: magla (~gelignite@d53678fd.access.ecotel.net) (Quit: Stay safe!)
[01:19:13] <analoq> but devOps feels fine imho. But tbf. i haven't seen much else
[01:19:38] <InPhase> Guest13: Have you ever tried talking to quantum mechanics?  It's not very chatty.
[01:19:51] <InPhase> Guest13: What's the real question?  :)
[01:19:54] <flaqoniun> quantum mechanics says RIP prime factorization  w/ shor's algorithm
[01:20:01] <pyzozord> alycidyne: what about it?
[01:22:08] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:22:12] <Guest13> InPhase: what if I told the quantum theory of computer programming and you 900%died?
[01:22:20] *** Joins: Pickchea (~private@user/pickchea)
[01:23:21] <alycidyne> pyzozord: It's the lack of multiline editing. Dumb idea I just had, but wouldn't Shift+Enter perhaps be usable as a key combination to add a newline instead of submitting input?
[01:23:21] <Decker> what if you did and we didn't? or what if you don't and we do?
[01:23:40] <bomb> analoq ouch. sorry to hear :(
[01:23:45] * Guest13 sobs eternally
[01:24:46] <InPhase> Guest13: Oh, you're the "says nonsense with percentages" Guest.
[01:24:59] <Guest13> lol yeah
[01:25:16] <pyzozord> alycidyne: you can ctrl+x+e to open your $EDITOR to edit current line
[01:25:16] <InPhase> Guest13: Maybe try saying only sensible things, for it to actually be conversation.
[01:25:17] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[01:25:31] <juliaEnv> analoq hmm, there aren't architects in Agile, like I said, architecture is done by the team. In Scrum, there is a Product Owner (the customer who owns the product, for example some company), Product Manager (somebody from your company who manages the customer's needs and creates a product backlog for you). Then the product owner (the customer) creates sprints, meaning he discusses the overall objective of a sprint and 
[01:25:31] <juliaEnv> creates a sprint from some items from the backlog. And then there is a scrum master who educates everybody on scrum, removes roadblocks, organizes the product backlog, etc.
[01:25:50] <flaqoniun> hey percentages guest, i found a site you might be interested in https://www.quantiki.org/wiki/shors-factoring-algorithm   
[01:25:54] <Guest13> InPhase: I use a lot of percents when I talk about myself to myself
[01:26:01] *** Quits: guest_ (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc) (Quit: Konversation terminated!)
[01:26:16] *** Joins: guest_ (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc)
[01:26:24] <Guest13> flaqoniun: is that a malware link?
[01:26:46] <flaqoniun> Shor's period-finding algorithm relies heavily on the ability of a quantum computer to be in many states simultaneously. Physicists call this behaviour a "superposition" of states. To compute the period of a function f, we evaluate the function at all points simultaneously.
[01:26:53] <Decker> Guest do you have a malware link?
[01:27:04] <flaqoniun> Quantum physics does not allow us to access all this information directly, though. A measurement will yield only one of all possible values, destroying all others. Therefore we have to carefully transform the superposition to another state that will return the correct answer with high probability. This is achieved by the quantum Fourier transform.
[01:27:06] <juliaEnv> analoq so, perhaps, the customer (some company that will own the new product) must go to your Product Manager to discuss the needs and create a business document from a template (Product Requirements of some sort).
[01:27:12] <alycidyne> pyzozord: so I have to invoke an external program just to add anything other than spaces and tabs?
[01:27:23] <kee> flaqoniun: Nitpick: the quantum computer is only in one state, it's just a bigger state than classical computers have.
[01:27:28] <Guest13> Decker: 90% of all links are malware
[01:27:38] *** ravan_ is now known as ravan
[01:27:41] <flaqoniun> go edit the wiki if you think that's accurate
[01:27:49] <Decker> Guest13 I'm just asking for 100% of 1
[01:28:00] <pyzozord> alycidyne: no you can still do multiline in readline with ctrl+v j
[01:28:03] <kee> “we evaluate the function at all points simultaneously” is not how quantum computers work.
[01:28:05] <Decker> if they're all not actually malware that doesn't count
[01:28:07] <alycidyne> Guest13: 90% of all *random* links are malware. That link isn't exactly random
[01:28:14] <juliaEnv> analoq so the first step for you company's Product Manager would be to meet with the customer (the customer is Product Owner) and follow these steps: https://www.atlassian.com/software/confluence/templates/collections/product-managers
[01:28:15] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[01:28:25] <Decker> like doing only 90% of the malware job isn't enough
[01:28:44] <Guest13> Decker: eg. https://wikipedia.org it tracks your IP and sells the information to employers/companies
[01:28:52] <kee> Guest13: Does it?
[01:28:57] <kee> That's a pretty big accusation to make.
[01:28:58] <Decker> *shrug*
[01:29:17] <Decker> most IP's are blocked - cox provides automatic filtering at a higher level than me
[01:29:17] <Guest13> kee: if I owned wikipedia I'd do it
[01:29:26] <Decker> so what if they have my IP?
[01:29:34] <kee> Guest13: As would I have, when I was 8. Doesn't mean they would.
[01:29:44] <Guest13> Decker: they have your location and they can do a port scan
[01:29:47] <pyzozord> Guest13: how much is it a real fact, describe in procentages :P
[01:29:51] <flaqoniun> kee what does superposition mean 
[01:30:04] <Decker> Guest13 so can I big deal
[01:30:15] <Guest13> pyzozord: I'm 71%sure wikipedia sells your IP address information
[01:30:16] <Decker> that's nothing malware about it - it's being aware of your surroundings
[01:30:40] <pyzozord> Guest13: not how sure you are, how much of is it a fact
[01:31:01] <Guest13> pyzozord: it's a 7%fact I'm 93%sure
[01:31:01] <alycidyne> pyzozord: Oh right, those Ctrl+* incantations. I guess I'll have to learn them then heh
[01:31:22] <alycidyne> I had been avoiding them as long as possible
[01:31:48] <pyzozord> alycidyne: info readline and man readline
[01:31:54] <Decker> Guest13  68.96.102.241  here - I recommand a port scan starting at 22.  (this will cause sshd to log 'no identification string sent for IP *blah*)' and then nothing else you send will be accepted on input.
[01:32:01] <analoq> Guest13: that would be a gdpr violation. I kinda doubt wikimedia would risk that
[01:32:05] *** Joins: pavonia (~user@user/siracusa)
[01:32:06] <Decker> aka www.d3x0r.org
[01:32:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:32:54] <pyzozord> Decker: did they scaned your server?
[01:33:02] <Decker> pyzozord no
[01:33:20] <ProfSimm> Decker: Russians!
[01:33:30] <Decker> have I been scanned by an AWS farm? yes....
[01:33:58] <Decker> like hundreds of different IPs
[01:34:05] <kee> flaqoniun: It's difficult to explain. I don't know what vocabulary to use.
[01:34:11] <Decker> all in the same block on AWS routers
[01:34:14] <alycidyne> pyzozord: I know, but I just tried to avoid depending on GNU features for as long as possible. Oh well.
[01:34:17] <flaqoniun> other than "all positions"
[01:34:19] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[01:34:20] <flaqoniun>  you mean
[01:34:26] <pyzozord> I had a vps for a while looking at the logs was a sobering experience
[01:34:27] <Decker> a lot of scans come from tor servers though...
[01:34:41] <Decker> that's almost useless to block though - just a huge whack-a-mole sort of thing
[01:34:42] <kee> If you call the things that have amplitude “states”, then that concept of a “state” doesn't behave like programmers are used to the state of a computer behaving.
[01:34:48] <pyzozord> vicious scans for any vulnerability especially for things like wordpress, php etc
[01:34:58] <kee> So I can't call them that, even though that's (afaik) the normal physics terminology.
[01:35:13] <pyzozord> these scans were taking 10% of my bandwidth quota...
[01:35:47] <pyzozord> scary because I didn't tell really anyone about my website
[01:35:55] <kee> pyzozord: Does it have an IPv4 address
[01:36:09] <pyzozord> I think just epik.com is really a cesspool
[01:36:19] <pyzozord> is where I bought the domain for that vps
[01:36:37] <pyzozord> kee: don't remember, I got rid of that vps
[01:36:55] <kee> flaqoniun: Consider a simple quantum system that can be in two independent states.
[01:37:00] <kee> Let's call them 0 and 1 because we're programmers.
[01:37:16] <kee> No, A and B is easier.
[01:37:24] <pyzozord> not and not not
[01:37:26] <alycidyne> pyzozord: I used to think that notion of 90% of network traffic being just attacks was my exaggeration. Maybe it's not that far...
[01:37:39] *** Quits: remedan (~remedan@octo.cafe) (Remote host closed the connection)
[01:37:53] <flaqoniun> quantologists love their colors, lets call them red and blue
[01:38:03] <kee> Pick two complex numbers a and b such that |a|² + |b|² = 1
[01:38:22] <alycidyne> kee: <0> and <1> aren't states, they're the "basis". A state is a linear combination of them
[01:38:26] <ProfSimm> kee:  rly
[01:38:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[01:38:38] <pyzozord> ah alycidyne was faster I was about to say that
[01:38:38] <kee> alycidyne: No, the basis is {<0>, <1>}.
[01:38:49] <flaqoniun> i'm missing info, no unicode font installed here
[01:39:10] <flaqoniun> i'll just smilke and nod 
[01:39:13] <Guest13> Decker: nice firewall
[01:39:31] <Decker> or just take the rotation axis, and evaluate each coordinate for it's 'upness' along its own respective axis; which is like dot product
[01:39:58] <kee> Decker: That's real quantum physics. Quantum computing ignores silly things like particles.
[01:40:14] <Decker> Guest13 thanks :) https://github.com/d3x0r/SACK/blob/master/src/utils/linux_ban_scanner/syslog_scanner.c#L113
[01:40:15] <bayaz> Title: SACK/syslog_scanner.c at master ? d3x0r/SACK 
[01:40:16] <kee> Well, most of the time.
[01:40:40] <Decker> kee just use a probability distribution for 'the axis'
[01:41:01] <kee> No, we're not doing probability distributions, our quantum system is nice and isolated.
[01:41:07] <kee> Otherwise it ceases to be a computer and starts being physics.
[01:41:27] <Guest13> you guys I'm gonna die alone in life
[01:41:42] <flaqoniun> you've been sayin that for months guest percentages guy
[01:42:05] <alycidyne> kee: I thought a quantum computer was just a probabilistic computer whose probabilities obeyed the square sum rule
[01:42:15] <juliaEnv> I found there is a technique called Story Mapping where you are supposed to decompose the high-level user activity into a set of detailed stories. Do I get it correctly that you're supposed to basically create something like Work Breakdown Structure, but focused on the customer's work (what job the customer needs to do, what subprocesses it divides into). Is that right?
[01:42:20] <kee> alycidyne: It's not.
[01:42:42] <kee> The amplitude is a complex number; it can do things probability doesn't.
[01:43:22] <kee> I'm really annoyed that we use linear algebra to describe quantum computing, btw, because linear algebra is really confusing at the best of times.
[01:43:37] <kee> People insist on treating matrices as a fundamental thing.
[01:43:37] <alycidyne> kee: ah sorry, linear algebra is my mother tongue
[01:43:38] <ProfSimm> kee: do you prefer wavy algebra
[01:43:52] <alycidyne> carry on
[01:44:01] <kee> We don't treat long division as a fundamental thing in number theory.
[01:44:12] <kee> But everyone seems to treat the Euclidean algorithm as somehow essential.
[01:44:21] <kee> And “row rank” and “column rank”…
[01:44:27] <ProfSimm> Why can't I do this in JS:   {foo.bar.baz: qux}
[01:44:31] <ProfSimm> And I need []
[01:44:40] <Decker> {}
[01:44:56] *** Joins: remedan (~remedan@octo.cafe)
[01:44:57] <Decker> because there's no object in foo until you give it one
[01:45:08] <kee> alycidyne: Why do people ever say “row rank” and “column rank”? Unless I'm incredibly confused about linear algebra, those seem like meaningless words.
[01:45:11] <ProfSimm> {foo.bar.baz: qux} <- doesn't work        {[foo.bar.baz]: qux} <-- works
[01:45:27] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[01:45:38] <Decker> foo:{bar:{baz:qux}}} does too
[01:45:39] *** Joins: flaqoniun (~F@32.211.211.39)
[01:45:41] <kee> There's “rank”, which isn't even really a fundamental property; it's the (can't remember the word) of the output space.
[01:45:48] <alycidyne> kee: those terms are from people who are only interested in implementing linear algebra in assembly for LAPACK
[01:46:00] <EdFletcher> ProfSimm: yeah the [...] syntax is called "computed property names": https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#computed_property_names 
[01:46:00] <bayaz> Title: Object initializer - JavaScript | MDN 
[01:46:01] <ProfSimm> Decker: your example is not my intent, just reading value from an expression
[01:46:07] <kee> alycidyne: So why is that how everyone seems to talk about linear algebra?
[01:46:10] <kee> It's really really silly.
[01:46:19] <ProfSimm> EdFletcher: right
[01:46:32] <pyzozord> ProfSimm: in objects you the key part must be in [] to be valuated, otherwise it's a syntax error
[01:46:37] <ProfSimm> EdFletcher: I have a similar limit by accident in my syntax and I'm trying to decide if i suck
[01:46:52] <alycidyne> kee: indeed, most of those who know programming and linear algebra tend to focus only on programming it. I'll admit it
[01:47:04] <pyzozord> ProfSimm: you can either { [stuff]: otherstuff } or { "stuff": otherstuff } , your only two options
[01:47:12] <ProfSimm> I.e.  {foo bar baz: qux} is interpreted as {foo.bar, baz: qux}
[01:47:13] <kee> alycidyne: No, I mean… that's how undergraduate mathematicians learn it.
[01:47:19] <EdFletcher> ProfSimm: i highly doubt your syntactical choice in this regard is indication that you suck! maybe it's sub-optimal, but no language is perfect 
[01:47:25] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[01:47:28] <kee> It's how half of Wikipedia's articles are written.
[01:47:33] <alycidyne> kee: oh geez. Matrices are part of linear algebra, but not all linear algebra is matrices
[01:47:45] <Decker> ProfSimm to make it consistant with {[foo]:qux} vs {foo:qux}
[01:47:45] <kee> I know! But you wouldn't think that to look at it.
[01:47:47] <ProfSimm> EdFletcher: my approach to language design is that everything sucks until proven otherwise
[01:48:08] <pyzozord> a sensible choice
[01:48:11] <epony> that's a good start, the other choice is "start from 0"
[01:48:16] <ProfSimm> Makes for a very minimal language
[01:48:18] <kee> alycidyne: Even when we study vector spaces, we keep talking about column vectors and row vectors.
[01:48:20] <epony> (you know, not 1)
[01:48:24] <Decker> an additions stipulation 'if followed by a dot and identifier' asn in foo.bar  it could auto consider it in [] 
[01:48:32] <kee> Surely they're just vectors?
[01:48:36] <Decker> but that seems handwavy or a specifcation
[01:48:40] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:48:45] <alycidyne> kee: yeah but that's mainly to explain matrix multiplication AFAIU
[01:48:50] *** Joins: Pickchea (~private@user/pickchea)
[01:48:57] <kee> alycidyne: Do you have any resources on linear algebra?
[01:49:02] <EdFletcher> ProfSimm: haha fair enough, a good approach honestly! no inflated expectations. in this case with JS, because "barewords" can be keys and they'll be implicitly converted to strings, the [...] is necessary to differentiate. so for JS it doesn't suck because they couldn't have changed the previous behavior. 
[01:49:11] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[01:49:20] <kee> You're acting like linear algebra makes sense and is taught correctly, and that's not what any of my materials look like.
[01:49:23] *** Joins: flaqoniun (~F@32.211.211.39)
[01:49:40] *** Quits: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu) (Remote host closed the connection)
[01:49:45] <alycidyne> It's been a long time since I studied linear algebra, I wouldn't know where to look which wouldn't lean too much on the vector representation :/
[01:49:52] <kee> Fair enough.
[01:50:04] <Guest13> <made up> according to quantum mechanics computer programming a quantum fury Heaven
[01:50:05] <alycidyne> I too got put off by how many sites kept leaning on matrices and vectors of numbers
[01:50:17] <kee> I guess I'll just do my usual approach: pull apart the algorithms they teach me until I start seeing the actual maths behind it.
[01:50:27] <flaqoniun> https://www.britannica.com/science/Lorentz-force
[01:50:41] *** Joins: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu)
[01:50:42] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[01:51:04] <kee> Guest13: I don't think quanta can get cross.
[01:51:10] <alycidyne> kee: It's not even algorithms, a vector space over a field is just a set such that 0 is in it and for any u, v in it and any k in the field, u + k*v is in it
[01:51:27] <kee> alycidyne: Yeah. And it doesn't even have to be over vectors (n-tuples).
[01:51:35] <alycidyne> kee: Exactly.
[01:51:37] <flaqoniun> (note: the X is cross product)
[01:51:41] <kee> But we call them vectors for some reason.
[01:51:44] *** Joins: xa0s (~xa0s@mab.sdf.org)
[01:52:09] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:52:32] <alycidyne> kee: I think it comes from considering R3 as a vector space and then saying 'that's what worth the most money these days' and everybody ignores the rest
[01:52:32] <kee> Do you know of any proposed reforms for the abstract algebra naming conventions?
[01:52:50] *** Joins: morte_ (~user@190.104.116.153)
[01:52:52] <kee> group, field, ring, semigroup, quasigroup… Rubbish names.
[01:53:01] <kee> We should call them by their properties at least.
[01:53:07] <alycidyne> kee: "magma" XD
[01:53:31] <kee> Brb inventing a mathematical object called a lava.
[01:53:58] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d471:6d9f:6f1e:b65b)
[01:55:29] <Guest13> <a movie trailer> once upon a time, there was a computer programmer that brought all programmers together, and together they lived happily ever after;
[01:56:45] <kee> alycidyne: "binar" is, apparently, an alternative name for magma.
[01:56:47] <kee> We should use that instead.
[01:56:56] *** Joins: waylore (waylore@waylore.hell.ws)
[01:57:10] <alycidyne> kee: well it makes sense, what with a binary operation and all.
[01:57:20] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[01:57:27] <kee> Maybe a quasigroup can be a divibinar?
[01:57:37] *** Joins: flaqoniun (~F@32.211.211.39)
[01:58:08] <alycidyne> kee: granted my algebra outside of linear algeabra is quite rusty
[01:58:10] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:58:10] <kee> Hmm. Doesn't leave many options open for the name of a loop, though.
[01:58:39] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[01:58:51] *** Joins: flaqoniun (~F@32.211.211.39)
[01:59:23] <kee> A quasigroup is a binar where, for all (a, b) there exist x and y such that a*x=b and y*a=b.
[01:59:25] *** Quits: user51 (~user51@77.124.35.94) (Quit: leaving)
[01:59:27] <alycidyne> Huh never knew that the rational numbers were a field
[01:59:31] <kee> Some people call this property divisibility.
[01:59:41] <kee> alycidyne: Rational numbers excluding zero, right?
[02:00:09] <kee> Oh, wait, fields have a zero element.
[02:00:26] <kee> Which is the only element without a multiplicative inverse, right.
[02:00:44] <kee> alycidyne: Rational numbers are what you get if you try to fieldify the integers.
[02:00:58] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[02:01:11] *** Joins: flaqoniun (~F@32.211.211.39)
[02:01:27] <kee> That's why some algebraists think of the reals as "filling in the gaps" in the rationals.
[02:01:28] <alycidyne> kee: the most I ever got on fields was investigating fields for error-correcting codes lol
[02:01:39] <alycidyne> finite fields I mean
[02:01:48] <kee> Finite fields are awesome.
[02:02:05] <kee> But in general, I think all of this stuff would be easier if you could look at the name of a thing and know what it was.
[02:02:13] <Stefan26> is fieldify a word??
[02:02:23] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[02:02:25] <alycidyne> I wrote a program in fortran to check the primitive elements of a particular group in any prime base. It was the most advanced I went into Fortran. :o)
[02:02:29] <ProfSimm> Stefan26: it is now
[02:02:30] <kee> Stefan26: It is now.
[02:02:35] *** Joins: flaqoniun (~F@32.211.211.39)
[02:02:35] <ProfSimm> kee: lel
[02:02:41] <kee> You win this round…
[02:02:48] <alycidyne> XD
[02:03:12] <alycidyne> And in balanced ternary!
[02:03:19] <Stefan26> haha
[02:04:01] <alycidyne> Meaning: I was checking whether a set of balanced digits could generate a finite field. Results were... inconclusive.
[02:04:23] <kee> We need a prefix for invertibility, associativity and identity, and the prefixes need to be sufficiently different.
[02:04:27] *** Quits: newwebdev13 (~newwebdev@78.135.91.191) (Read error: Connection reset by peer)
[02:04:37] <kee> Also one for commutativity.
[02:04:44] *** Joins: newwebdev13 (~newwebdev@78.135.91.191)
[02:04:55] <Stefan26> real numbers are more mysterious
[02:05:07] <kee> "inv" and "id" are too similar.
[02:05:21] <kee> Any ideas?
[02:05:52] <Guest13> what if you were a professional programmer and realized you 0%could learn anymore?
[02:06:22] *** Joins: jenntech (~jenntech@134.134.137.89)
[02:06:22] <kee> Guest13: I'd start teaching the computer to program.
[02:06:30] <flaqoniun> isn't that what happens when someone tells you exactly what to do (pays you for work)
[02:06:30] <Stefan26> what other fields than rationals, reals and complex numbers contain all integers
[02:06:35] <kee> I'm already working on that, so I might be able to finish it without learning any more.
[02:06:42] <kee> At least well enough for somebody else to fill in the gaps.
[02:07:04] <kee> It would take decades, but if I couldn't learn any more? What else would I do?
[02:07:05] <alycidyne> You can learn anything you *want*, but it's up to you to determine what you *need* to learn
[02:07:08] *** Joins: Pickchea (~private@user/pickchea)
[02:07:39] <alycidyne> You can learn that colorless green ideas sleep furiously, but why?
[02:07:58] <jenntech> I have a quick question.. So, Im starting a server to run a web app called webxprt using apache and mysql.... i have the apache server started and the webxprt webpage shows up but when i click start i get the error An error has occurred on preharness.php.
[02:07:59] <jenntech> Error message:database
[02:07:59] <jenntech>  Please clear the cache, reboot the system and try again.
[02:08:04] <kee> alycidyne: Because school forces you to.
[02:08:14] <alycidyne> Or that there is a butterfly whose wing color is the sun's mass minus 20 degrees, but why?
[02:08:14] <jenntech> i tried clearing the cache and rebooting - twice
[02:08:36] <jenntech> ive googled but cant find much on it
[02:08:51] <kee> alycidyne: the Sun's temperature minus 20 degrees, and you're very close to something they actually did make me learn.
[02:09:12] <alycidyne> kee: oh I did not mean to cause any PTSD lol
[02:09:51] <kee> It's fine. Jt's cPTSD by this point. ;-p (Though I don't think I'm actually very traumatised; I still enjoy learning.)
[02:10:03] <alycidyne> That was supposed to be completely semantically inconsistent (wavelength ~ mass ~ angle)
[02:10:29] *** Joins: Twipply (~Twipply@user/twipply)
[02:10:53] <kee> Colour isn't about wavelengths.
[02:11:13] <kee> Hue is almost about wavelengths.
[02:11:38] <alycidyne> kee: speaking of semantic nonsense, https://www.reddit.com/r/LinkedInLunatics/comments/s6ua1y/um_wtf_is_happening_on_linkedin/   <--- "dating a guy 5 feet younger then her" (sic)
[02:11:40] <bayaz> Title: r/LinkedInLunatics - Um. Wtf is happening on LinkedIn 
[02:12:22] *** Quits: bomb (~bomb@user/bomb) (Quit: gute nacht)
[02:13:04] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[02:13:34] <flaqoniun> how is color not about wavelengths
[02:14:46] <flaqoniun> you mean not about a spatial length in the distance measurement?
[02:14:59] <alycidyne> flaqoniun: it is, but everything else was nonsensical
[02:15:40] <EdFletcher> alycidyne: This is excellent. So much to unpack here! “Only way to keep the check from coming is to order more” — a “novel” problem solving strategy I suppose 😂 
[02:15:51] <alycidyne> You can't subtract degrees from mass and it definitely doesn't yield a wavelength :{
[02:15:55] <alycidyne> :P
[02:16:13] <kee> flaqoniun: You think that's air you're breathing?
[02:16:17] <Guest13> I don't want to be here anymore! what are my options?
[02:16:20] <alycidyne> EdFletcher: I keep this reddit in my bookmarks :D
[02:16:29] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[02:16:45] <alycidyne> Guest13: "/q"
[02:17:06] <EdFletcher> alycidyne: Literally just joined it (yes I still have a Reddit account, it’s 16 years old! It started driving recently), this whole sub looks golden. Thank you!! 
[02:17:09] <kee> flaqoniun: Colour is far more to do with the human visual system than it is to do with the wavelength of light.
[02:17:13] <Guest13> alycidyne: I get high being here;
[02:17:59] <Decker> kee is that why a wavelength is always the same color ?  even if you think green is a different color it's still always going to be the same to you
[02:18:06] <Decker> to a given observer
[02:18:14] <flaqoniun> oh i thought you wre going to mention probability of photon to enter a specific sized cone in the eye
[02:18:27] <Decker> LEDs for example are rated in wavelength
[02:19:00] <alycidyne> EdFletcher: well, you're welcome :)
[02:21:42] <kee> Decker: No, it's not.
[02:21:50] <kee> Green looks different depending on the environment.
[02:21:51] <nomagno> Anyone got my last mention?
[02:21:54] <nomagno> Can't find it
[02:22:35] <Decker> maybe if considering a green pigmentation
[02:23:41] <Guest13> what if you realized that you're 93%blind?
[02:23:49] <Guest13> oh sorry about percentages
[02:24:13] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[02:24:14] <alycidyne> "Oh shoot who brought freaking moonmoon along"
[02:27:17] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 256 seconds)
[02:29:07] <alycidyne> Anyway, I'll be going to bed. Good night.
[02:29:12] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[02:29:54] *** Joins: vysn (~vysn@user/vysn)
[02:32:51] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:37:26] *** Quits: guest_ (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc) (Ping timeout: 260 seconds)
[02:38:18] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[02:39:22] <juliaEnv> so, after many years of not knowing how exactly an Agile project should start, as it can't start by adding straight a user story, I found the answer (5 steps): https://www.atlassian.com/software/confluence/templates/collections/product-managers and surprisingly requirements should be first Product Requirements in Confluence https://www.atlassian.com/agile/product-management/requirements and then, secondly the same 
[02:39:22] <juliaEnv> requirements in JIRA (perhaps as epics or stories). That's so weird and surprising.
[02:39:30] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:40:04] *** Joins: newwebdev132 (~newwebdev@78.135.91.191)
[02:40:29] *** Quits: newwebdev13 (~newwebdev@78.135.91.191) (Read error: Connection reset by peer)
[02:44:17] <kee> juliaEnv: Why is that weird?
[02:44:24] *** Joins: Tazmainian (~Tazmainia@2001:1c02:170b:3d00::1012)
[02:44:35] <kee> Requirements are how every project should start, aren't they?
[02:44:48] *** Joins: RazielZ (~Raziel@user/raziel)
[02:44:57] <kee> No matter the methodology, they always have that in common.
[02:45:54] <Guest13> what if you were the only computer programmer you knew?
[02:45:54] <kee> You start with a vague idea of what you're doing, then you try to get a better idea.
[02:46:19] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[02:46:40] <kee> juliaEnv: I'm really curious how you've been doing it.
[02:46:56] <kee> Guest13: What does that question mean?
[02:47:00] <kee> Knew personally, or know of?
[02:47:23] <Guest13> kee: what if you had no sense of a programming community?
[02:47:24] *** Quits: BGL (twenty@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[02:47:38] <kee> I would do exactly what I do now.
[02:47:48] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 240 seconds)
[02:47:51] *** Quits: Tazy (~Tazmainia@2001:1c02:170b:3d00::1009) (Ping timeout: 245 seconds)
[02:47:52] <Guest13> which is..?
[02:48:02] <kee> I did before, I would after (but I hope there isn't a sufficient apocalypse for an "after").
[02:48:30] <kee> Guest13: Independently working out better ways to do programming stuff.
[02:48:41] <kee> The only difference would be that I can't do as much plagiarism, so I'd have ideas more slowly.
[02:49:10] <juliaEnv> kee it's weird because you are supposed to have these 5 documents in your Confluence: https://www.atlassian.com/software/confluence/templates/collections/product-managers Have you ever worked for a company that had them there? And have you ever seen any Product Requirements in Confluence? I've only seen user stories in JIRA that were too many and too messed up, without anybody fully understanding them.
[02:49:51] <kee> juliaEnv: Everywhere I've worked, we either discussed that kind of thing or did it on paper / a whiteboard.
[02:50:06] <kee> It's not the kind of thing you need to keep lying around (though obviously if it's on a whiteboard you take a photo, just in case).
[02:50:16] <kee> The initial requirements very quickly become obsolete.
[02:50:30] *** Joins: Trot1 (~Trot@107.147.149.155)
[02:50:54] <juliaEnv> kee I've never seen those 5 Confluent templates done in practice and containing product requirements that would link to JIRA epics/stories. In the best case, I've seen company's own documents (templates) in MS Word, but that was not an agile methodology, it was a plan-based (document heavy) approach.
[02:51:24] <kee> The only things I've ever used Atlassian software for are time tracking, issue tracking, pushing my git repos to, and the wiki for documentation.
[02:51:36] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[02:51:52] <kee> In my mind, Confluence templates are almost the antithesis of agile.
[02:51:52] <epony> check your sources
[02:51:53] <epony> http://www.google.com/search?tbm=nws&q=Microsoft+confirms+they+were+hacked+by+Lapsus$+extortion+group
[02:51:54] <bayaz> Title: Microsoft confirms they were hacked by Lapsus$ extortion group - Google Search 
[02:52:12] *** Quits: Trot (~Trot@107.147.149.155) (Ping timeout: 240 seconds)
[02:52:12] *** Trot1 is now known as Trot
[02:52:42] <juliaEnv> kee do you have your competitive analysis, objectives and key results (also known as KPIs), product requirements, product roadmap, and product launch in Confluence linking to JIRA epics/stories? (I don't accept any arguments/excuses about something getting out of date. It needs to be continuously updated to maintain it up to date. Requirements in Agile keep evolving. They are never supposed to get out of date)
[02:52:44] <analoq> juliaEnv: the agile stuff tends to often be wrapped in other non agile methods. because at the end of the day management wants budget plans and projects with a fix start and finish
[02:54:05] <kee> juliaEnv: I don't know what “competitive analysis” is (probably because I've just done bespoke software), but objectives, product requirements, the plan, and the due date are definitely things that remain up to date.
[02:54:22] <kee> The initial design documents don't remain up to date because there's no point keeping them up to date: they're the initial design documents.
[02:54:34] <kee> Practically just a written conversation.
[02:54:55] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:56:13] <epony> "Lapsus$ has recently conducted numerous attacks against _the_enterprise_, including those against NVIDIA, Samsung, Vodafone, Ubisoft, Mercado Libre, and now Microsoft."
[02:56:14] <juliaEnv> analoq yes, a fixed budget is very common. If there is a fixed budget, there should not be a deadline, but rather a prioritized product backlog. You develop as much as you can and then you just cut off the rest and say the budget has been fully used.
[02:56:55] <analoq> juliaEnv: our magic word for that is descoping. :P didn't finish something? move it to the next project! :D
[02:57:08] <juliaEnv> analoq well, in Kanban you work on one task at a time, so there is no deadline to say that you should finish 10 tasks in 20 days. It's when you finish you finish.
[02:57:10] <kee> epony: They leaked 90% of Bing's source code? Who'd want that?
[02:57:45] <kee> juliaEnv: You're allowed to put stuff back on the Kanban board, though, right?
[02:58:16] <EdFletcher> epony: "Microsoft does not rely on the secrecy of code as a security measure and viewing source code does not lead to elevation of risk" -- love that MS keeps using this line even though it's clearly untrue, a motivated attacker can find vulnerabilities via source code inspection _much_ more quickly than they can via black-box pen testing 🤣 
[02:58:19] <kee> You don't have to keep a sticky note in your section forever, and do nothing else until you solve that problem?
[02:58:20] <analoq> juliaEnv: well i wish your ceo good luck when he has to explain that to the shareholders :D *it's finishe when it's finished, now finance us!*
[02:59:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:59:25] <juliaEnv> kee competitive analysis is the most important document before starting a new product. It's about googling other similar products that are already there and writing down their features, so that you can then figure out what your product should do differently/better. If you don't do that, chances are your product won't do very well because of the competition that has all the interesting features. See this template 
[02:59:25] <juliaEnv> https://www.atlassian.com/software/confluence/templates/competitive-analysis
[02:59:56] <epony> MSFT also do not show what is deployed, but a different version ;-)
[03:00:09] <juliaEnv> analoq that's not how it's said and done. Don't assume a CEO speaks with customers (they don't). A customer speaks with a product manager.
[03:00:20] <kee> juliaEnv: Ah, yeah, I haven't done much work like that.
[03:00:21] <epony> so what "teh" hwackers stole is probably shitposts..
[03:00:34] <kee> You only need competitive analysis if you're not making something new.
[03:00:37] <analoq> juliaEnv: shareholder as in the 'company owners' not the customer
[03:00:45] <epony> "non-really-deployed versions and variants"
[03:00:59] <juliaEnv> analoq the way it works in Kanban and Scrum is the customer gets invoiced every 2 works, or every month, and he cooperates continously (prioritizes backlog items he wants done first, adds new items)
[03:01:46] <juliaEnv> s/every 2 works/every 2 weeks/
[03:01:52] <analoq> juliaEnv: have you ever tried scrum with hw development?
[03:01:59] <kee> juliaEnv: I do have a large repository of UX idioms, though. Does that count as competitive analysis?
[03:02:04] <flaqoniun> wtf does the FT mean in "msft"
[03:02:10] <kee> flaqoniun: Fourier transform.
[03:02:20] <Guest13> format?
[03:02:20] <juliaEnv> analoq HW manufacturing has its processes that don't mix with SW development.
[03:02:21] <Decker> ft
[03:02:24] <kee> It's a certification.
[03:02:36] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:02:46] <kee> It shows you can listen to a Windows computer and identify the most common frequency of periodic failure.
[03:03:15] <kee> juliaEnv: What about hardware design, though?
[03:03:28] <juliaEnv> kee it doesn't because UX idioms are reusable patterns whereas a product is an artifact that addresses the business needs of some worker (for example the business needs of a loan department in a bank).
[03:03:31] *** Quits: jenntech (~jenntech@134.134.137.89) (Quit: Client closed)
[03:03:40] <analoq> juliaEnv: i mean at the end of the day it's not that different. the issue is with HW dev, there appears to be a lot of waiting, which ruins your userstory durations
[03:04:05] <analoq> you can try to exclude those waiting periodes from the userstorys, but then it gets difficult to keep track of things
[03:04:05] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[03:04:24] <kee> juliaEnv: What would competitive analysis look like if I'm automating a process that's currently done in Excel?
[03:04:36] <kee> Just looking at the existing Excel workflow?
[03:04:39] <analoq> *personal issue im trying to find a solution for* :P
[03:04:50] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:05:08] <epony> flaqoniun, next you're going to ask what the middle two OO's mean in GOOG
[03:05:10] <kee> analoq: Model waiting as a resource?
[03:05:35] <flaqoniun> no that one is obvious
[03:05:39] <flaqoniun> "FT" though makes no sense
[03:05:44] <kee> Field technician.
[03:05:53] *** Quits: Akuli (~Akuli@82-203-162-96.bb.dnainternet.fi) (Quit: Akuli)
[03:05:56] <Guest13> Feature
[03:05:59] *** Joins: Akiva (~Akiva@user/Akiva)
[03:06:01] <analoq> kee: you mean like a 'developer called waiting'? and then assign the userstory to him?
[03:06:13] <kee> analoq: You're never waiting. You're waiting for something.
[03:06:30] <epony> https://en.wikipedia.org/wiki/MSFT  "MSFT may refer to: Microsoft, NASDAQ stock symbol.."
[03:06:30] <bayaz> Title: MSFT - Wikipedia 
[03:06:46] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[03:06:48] <juliaEnv> kee you'd have to figure out the role (as in job/position) that this process is part of. Is it data analysis? Which business domain, i.e. trading, sales, marketing, or other? And who needs it, i.e. a stock trader, a car salesman, or a telco marketer? What do they need it for? What products exist that address the bigger context (the needs of these people in these departments). What features do those products have? How do 
[03:06:48] <juliaEnv> those products compare?  See this template to understand the structure of competitive analysis: https://www.atlassian.com/software/confluence/templates/competitive-analysis
[03:06:50] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[03:06:52] *** Joins: jenntech (~jenntech@134.134.137.89)
[03:06:57] <flaqoniun> MS  micro soft,  ft == ???
[03:06:59] <analoq> hm true. it's like an external dev
[03:07:06] <kee> flaqoniun: MS micro so
[03:07:12] <flaqoniun> how many ways to phrase the question
[03:07:19] <epony> it's obviously, Financial Times ;-) no really, it's MicroSoFT
[03:07:32] <analoq> good idea ty
[03:07:52] <flaqoniun> ooooooooooooooooooh
[03:07:58] <flaqoniun> yeah i'm dumb then
[03:07:59] <Guest13> I exist/swim in a quantum ocean
[03:07:59] <epony> oh, ooooooh
[03:08:08] <epony> ticket stock symbols ;-)
[03:08:11] <epony> "ticker"
[03:08:16] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[03:08:17] <flaqoniun> whynot say microsoft
[03:08:21] <flaqoniun> so people know what you are talking about
[03:08:28] <kee> M$; it's shorter.
[03:08:28] <epony> faster to tApe that
[03:08:35] <flaqoniun> yes ms is shorter to
[03:08:37] <flaqoniun> why not say MS 
[03:08:47] <epony> ambiguous ;-)
[03:08:51] <kee> I used to think M$ was a reference to how network drives on Windows always have a $ in their name.
[03:09:00] <flaqoniun> msft is ambiguous as well
[03:09:01] <Guest13> Multiple Sclerosis
[03:09:04] <flaqoniun> why not say microsoft
[03:09:15] <kee> Microsoft is ambiguous.
[03:09:17] <Decker> no it's because M$ is all about the benjamins
[03:09:20] <kee> It might refer to a small soft thing.
[03:09:27] <epony> cause, dude, it's about financial results
[03:09:31] <Decker> or bad performance windoze
[03:09:49] <flaqoniun> you afraid microsoft bots are going to target you?
[03:09:54] <flaqoniun> so you have to be cryptic
[03:09:55] *** Quits: humanface (~humanface@20014C4E1C5214005D03E277CFC3056C.dsl.pool.telekom.hu) (Quit: Client closed)
[03:10:13] <kee> M€
[03:10:16] <kee> Nobody will guess that one.
[03:10:28] *** Quits: Guest13 (~Guest13@96-65-219-197-static.hfc.comcastbusiness.net) (Quit: Client closed)
[03:11:17] <kee> juliaEnv: I don't understand how competitive analysis is anything to do with agile.
[03:11:27] <kee> If it's what the Atlassian website says it is, anyway/
[03:11:46] <kee> > you need to be strategic about the marketing channels you’re using. This is the largest table in the template
[03:11:56] *** Joins: pmercado (~pmercado@186.107.58.34)
[03:12:12] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 240 seconds)
[03:12:48] *** Joins: Guest13 (~Guest13@96-65-219-197-static.hfc.comcastbusiness.net)
[03:13:50] *** Joins: soapsudsxx (~soapsudsx@141.193.188.145)
[03:14:33] *** Joins: inert (~inert@98.186.198.230)
[03:14:50] <juliaEnv> kee agile is a PRODUCT development framework. Product development starts with discovering what other existing products there are, finding out their features, comparing how they do, and then coming up with your features that must solve some problem that the existing products don't address. 
[03:15:13] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[03:15:46] <epony> "The company's 1986 initial public offering (IPO), and subsequent rise in its share price, created three billionaires and an estimated 12,000 millionaires among Microsoft employees. Since the 1990s, it has increasingly diversified from the operating system market and has made a number of corporate acquisitions, their largest being the acquisition of LinkedIn for $26.2 billion in December 2016, followed by their acquisition of Skype Technologies fo
[03:15:46] <epony> r $8.5 billion in May 2011." "Earlier dethroned by Apple in 2010, in 2018 Microsoft reclaimed its position as the most valuable publicly traded company in the world. In April 2019, Microsoft reached the trillion-dollar market cap, becoming the third U.S. public company to be valued at over $1 trillion after Apple and Amazon respectively. As of 2020, Microsoft has the third-highest global brand valuation."
[03:16:05] <analoq> yes but how does agile differ in that regard from any other product development framework. I mean it is kind of obvious that you should figure out what to build first before you build it, right? :/
[03:16:11] <juliaEnv> kee so competitive analysis basically informs the product requirements document
[03:16:32] <epony> ^ https://en.wikipedia.org/wiki/Microsoft#Financial
[03:16:32] <bayaz> Title: Microsoft - Wikipedia 
[03:17:17] <juliaEnv> analoq agile methodologies differ from non-agile in that they are designed after the Agile manifesto
[03:17:35] <analoq> theres this question in scrum where one of the answer options is 'it is based on common sense.' (which is deemed the wrong answer) But imho thats what most of it boils down to
[03:17:43] <flaqoniun> people say msft like it matters, no amount of fuckups will negatively impact their financial situation
[03:17:51] <juliaEnv> analoq https://agilemanifesto.org/principles.html
[03:17:51] <bayaz> Title: Principles behind the Agile Manifesto 
[03:19:12] *** Joins: inert18 (~inert@98.186.198.230)
[03:19:13] *** Quits: inert18 (~inert@98.186.198.230) (Client Quit)
[03:19:20] *** Joins: inert25 (~inert@98.186.198.230)
[03:19:28] *** Quits: inert25 (~inert@98.186.198.230) (Client Quit)
[03:19:30] <Guest13> UNLEASH the programming content of the universe *explodes*
[03:19:46] *** Joins: beyondhatch (~beyondhat@98.186.198.230)
[03:19:54] <flaqoniun> same as intel
[03:19:55] *** Joins: wildo (~lain6141@202.180.111.143)
[03:20:04] <flaqoniun> they are free from criticism
[03:20:07] <juliaEnv> analoq or simplified, in agile product development all your requirements, plans, and results are evaluated continuously so teams have a natural mechanism for responding to change quickly. It means iterative and incremental. Normal product development was a "big bang" approach where one big document got translated into one big list of requirements, one big architecture, one big project plan, etc.
[03:20:12] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 240 seconds)
[03:20:47] <kee> These development frameworks sound like instruction manuals for incompetents.
[03:20:49] <juliaEnv> analoq with agile product development, you can keep adding/changing product features at any time.
[03:21:00] <kee> These are really really obvious things.
[03:21:20] <kee> You don't know what the requirements actually are at the beginning, because you're getting the requirements from humans, who are bad at that kind of thing.
[03:21:20] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Read error: Connection reset by peer)
[03:21:32] <kee> And their speciality isn't going to be computers, so it's doubtful they even know what computers can do.
[03:21:33] <analoq> kee: exactly. every opensource project works like that intuitively :P
[03:21:39] <epony> flaqoniun, faint criticism is a form of advertisement campaigning
[03:22:09] <kee> Deciding to use Agile seems un-agile.
[03:22:10] <analoq> it's the lowest common denominator, just-in-time, lazy evaluation approach lol
[03:22:15] *** Quits: inert (~inert@98.186.198.230) (Ping timeout: 256 seconds)
[03:22:24] <kee> Because you're deciding how you're going to do it at the beginning, without re-evaluating it as time goes on.
[03:22:26] <flaqoniun> so essentially they turn their critics into billboards by having them paste their stock symbol all over the net
[03:22:27] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[03:22:29] <Guest13> what should the most famous programmer program in his/her life?
[03:22:29] <flaqoniun> ?
[03:22:52] <epony> the same as semi-free software is a form of protectionist and public shielding policy for commercial software (and against anti-trust and anti-monopolism cartel and market rigging and international sanctions prosecution)
[03:23:22] <epony> but that's not really important, if it benefits you.. use it, if not.. don't ;-)
[03:23:22] <analoq> juliaEnv: theres degrees of agility
[03:23:31] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[03:23:46] *** Quits: jenntech (~jenntech@134.134.137.89) (Quit: Client closed)
[03:23:50] <analoq> you still need an initial big spec document it may change somewhat but it's not completely flexible
[03:24:12] <kee> All these business practice methods, apart from waterfall, seem to come from criticisms about how software development in business is currenty being done.
[03:24:16] <analoq> e.g. if your PO decides he suddenly wants a truck and not a compact car...that's not going to go well
[03:24:18] <kee> Surely the project managers should notice the pattern.
[03:24:27] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[03:24:37] <kee> analoq: For software, that's rather easy to change actually. ;-)
[03:24:44] <juliaEnv> software engineering is systematic, disciplined, quantifiable.
[03:24:45] <analoq> :P
[03:24:50] <kee> Now, if the PO decides he wants a bouncy castle.
[03:24:55] <kee> juliaEnv: Software engineering is an art form.
[03:25:05] <kee> Software engineering is invention.
[03:25:06] <juliaEnv> kee not at all. It's an engineering discipline.
[03:25:10] <kee> If you're not inventing, use a library.
[03:25:20] *** Quits: Guest13 (~Guest13@96-65-219-197-static.hfc.comcastbusiness.net) (Quit: Client closed)
[03:25:21] <epony> the real point in that outline of events are, vulnerable software vending results in use of vulnerable software setups and methodologies and sometimes leak viable and critical information from the same vulnerabilities that others get shafted on
[03:25:22] <kee> Software engineering is like architecture, not engineering.
[03:25:45] <kee> Architecture involves engineering, sure.
[03:25:55] <kee> But it's not the same thing as the kind of engineering that goes into an engine.
[03:26:02] <epony> so, vendors themselves get penetrated from their own weaknesses shipped in products they sell
[03:26:13] *** Quits: Inari (~Pinkishu@p508ef3a5.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:26:13] <juliaEnv> kee if you do it wrong, it's gonna be an art as you reinvent wheels. If you do it right, you follow systematic, disciplined, quantifiable processes (engineering processes) for the requirements, design, construction, testing, maintenance, and operation of software.
[03:26:34] <kee> juliaEnv: That sounds like a really bad way of doing it.
[03:26:48] <analoq> im sure everyone will enjoy the ride! :D
[03:26:59] <kee> You don't need to follow disciplined, quantifiable processes for testing if you design things so they either work or blow up.
[03:27:16] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[03:27:21] <kee> A few unit tests, a whole lot of leaning on the type system, and it's very hard to introduce errors.
[03:27:35] <kee> So all you need to do is check you did the right thing, because there are hardly any edge-cases.
[03:27:54] <kee> But that's about coming up with elegant solutions, which requires creativity.
[03:27:54] <analoq> 100% code coverage or bust!
[03:28:07] <kee> analoq: Oh, duh, 100% code coverage.
[03:28:11] <kee> I thought that went unstated.
[03:28:24] <analoq> all function tests return SUCCESS; :D
[03:28:27] <kee> You shouldn't have so many code paths that 100% code coverage is hard to achieve.
[03:28:38] <juliaEnv> kee quantifiable: We can quantify requirements using numbers, i.e. handle up to concurrent 1000 users, load a page within 50ms, allow uploading a new photo in 3 mouse clicks from anywhere in the system, etc. We can measure we have 30 functional requirements, 10 non-functional. We can size up each requirement compared to some reference, etc. Disciplined means we follow some agreed step-by-step process, i.e. in requirements 
[03:28:38] <juliaEnv> with Scrum we can follow the User Story Mapping process (invented by Jeff Patton). And systematic means the processes have an order in which they should be followed, and also that they should cover the whole problem.
[03:28:52] <kee> You should normally be able to get 100% code coverage with less tests than your code (though NEVER aim for that; Goodhart's Law).
[03:28:53] <analoq> im kidding... who has 100% code coverage
[03:29:10] <analoq> what's life without gambling~
[03:29:19] *** Joins: welovfree (~welovfree@41.140.62.205)
[03:29:39] <kee> analoq: Me? When I'm doing things properly, and not just playing.
[03:30:17] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[03:30:25] *** Joins: guest_ (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc)
[03:30:26] <juliaEnv> kee here is what you need to do for your SW development to move away from art and become engineering: http://swebokwiki.org/Chapter_15:_Engineering_Foundations
[03:31:04] *** Joins: duuude (~user@user/duuude)
[03:31:04] <EdFletcher> It’s much harder to see the value in such processes if you’ve not worked in larger teams 
[03:31:19] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:31:39] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:32:14] <kee> EdFletcher: That's why you break up the problem into smaller problems.
[03:32:38] <kee> And you keep chatting to each other, to make sure you don't end up drifting into having one problem solved twice and another one solved no times.
[03:32:48] <EdFletcher> kee: It’s not about that, it’s about communication between people. In larger teams, if not well controlled, it descends into chaos 
[03:32:51] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[03:32:58] <EdFletcher> N-to-N communication does not scale 
[03:33:05] *** Joins: flaqoniun (~F@32.211.211.39)
[03:33:21] *** Quits: pizdets_ (~pizdets@183.182.110.214) (Ping timeout: 256 seconds)
[03:33:21] <kee> It doesn't need to.
[03:33:27] <kee> There aren't N! interfaces in the software.
[03:33:33] <kee> So you don't need N! communications.
[03:33:36] *** Quits: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu) (Ping timeout: 272 seconds)
[03:33:48] *** Quits: welovfree (~welovfree@41.140.62.205) ()
[03:33:52] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Remote host closed the connection)
[03:34:07] *** Joins: pizdets (~pizdets@183.182.111.79)
[03:34:21] <EdFletcher> kee: You admitted earlier that you’ve only done bespoke software, I don’t think you understand that, again, I’m not talking about software here. Teams are composed of people, not software. They produce software. 
[03:34:23] *** Joins: welovfree (~welovfree@41.140.62.205)
[03:35:04] <EdFletcher> And teams will naturally descend into unorganized communication models unless structure is imposed. 
[03:35:15] <kee> You make it sound like you have more than 10 people working on a piece of software.
[03:35:35] <EdFletcher> Lol many more than 10 yes 
[03:35:38] <kee> But why?
[03:35:52] <kee> I can name many pieces of software made by more than 10 people.
[03:35:53] *** Quits: soapsudsxx (~soapsudsx@141.193.188.145) (Remote host closed the connection)
[03:35:58] <kee> Microsoft Teams. Microsoft Office.
[03:36:14] <kee> Slack. Firefox.
[03:36:35] <EdFletcher> Because I work for a big company that produces complex systems? Not sure how this is hard to grok. Some systems require large teams to build 
[03:36:53] <kee> Usually those systems are overengineered, and barely achieve their original requirements.
[03:36:56] *** Joins: soapsudsxx (~soapsudsx@141.193.188.145)
[03:37:00] <juliaEnv> IEEE defines engineering as “the application of a systematic, disciplined, quantifiable approach to structures, machines, products, systems or processes” (this means to stop using ad-hoc processes and start using some existing systematic, disciplined, quantifiable processes. Some are for requirements (i.e. User Story Mapping), some are for Design (i.e. object-oriented analysis and design, or component-based software 
[03:37:00] <juliaEnv> engineering, or service-oriented software engineering), and then construction (based on the methodology, i.e. OO, CBSE, service-oriented, or other), testing (i.e. based on a test strategy create test plans and then test suites, there are different methodologies and standards), operation (i.e. choose some CI/CD methodology perhaps as part of a specific DevOps methodology with Jenkins, Git, Kubernetes, Docker) and 
[03:37:00] <juliaEnv> maintenance (i.e. perhaps a service management methodology with ITIL, perhaps with ServiceNow). 
[03:37:28] <kee> EdFletcher: Most real-world requirements that I've seen aren't complex.
[03:37:41] <kee> The software gets complex when people try to integrate things that should be modular.
[03:37:48] <EdFletcher> Ah here we go, the judgments. You’ve articulated your lack of experience in this realm kee, so I place little value in your judgments of our system or way of working! 
[03:38:01] <kee> Well, I don't know what you do.
[03:38:08] <kee> If it's something like writing software for cars, sure, that makes sense.
[03:38:22] <EdFletcher> And you have no experience of the scale at which I’m working 
[03:38:22] <kee> (And that is engineering, more than art.)
[03:38:57] <kee> EdFletcher: What kinds of stuff do you work on?
[03:39:22] <EdFletcher> Industrial robotics 
[03:39:40] <kee> Yeah, that absolutely makes sense: that's an engineering project.
[03:39:42] <flaqoniun> how is it different from "art" which is such a broad term. are you saying artists don't test?
[03:39:46] <EdFletcher> Which is very much both art and engineering 
[03:39:54] <EdFletcher> But more the latter 😂 
[03:39:59] <kee> All engineering is art, imo.
[03:40:05] <EdFletcher> Truth 
[03:40:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:40:52] <kee> EdFletcher: Do you have more than 10 people working on the software for one piece of robotics?
[03:40:53] <epony> explains why all look like Picasso scetches
[03:40:54] <flaqoniun> engineering is art that requires testing?
[03:41:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[03:41:13] <kee> flaqoniun: Good engineering doesn't require testing. You just test anyway in case you made a mistake.
[03:41:16] <nomagno> Does extreme programming really work? I mean the pair programming part is solid, but it sounds ridiculous to me. Never tried it so dunno
[03:41:22] <nomagno> And the name is dumb
[03:41:38] <EdFletcher> kee: Yup definitely, but the lines also blur: I work mostly on infra software which is shared, and even our team is larger than 10 most days (“team” is hard to define too as many do multiple things) 
[03:41:47] <epony> pear programming saves terminals
[03:41:47] <nomagno> It sounds like programming brainfuck on a tamagochi while doing resistance racing
[03:42:10] *** Quits: welovfree (~welovfree@41.140.62.205) ()
[03:42:16] <flaqoniun> i definitely wouldn't develop an API without tests,  otherwise  meh
[03:42:43] <kee> EdFletcher: When I say "more than 10 people", I call the shared infrastructure a different thing to the network stack and stuff like that.
[03:43:02] <kee> In theory, something like Microsoft Excel is actually several different programs.
[03:43:10] <juliaEnv> software engineering teaches people to start applying better approaches (engineering approaches), such as when you do requirements you don't just randomly add stories, you employ User Story Mapping (by Jeff Patton) to add stories systematically, disciplined, and quantifiably. There is always some engineering approach, i.e. it's always systematic, disciplined, quantifiable approach to transform your inputs to the required 
[03:43:10] <juliaEnv> outputs. Much better than ad-hoc approaches.
[03:43:22] <kee> There's the COM interface, the graph system, each of the macro suites. But in practice, Excel is one big horrible buggy monolith.
[03:43:40] <EdFletcher> kee: Yup understood, but even then we absolutely have multiple, atomic teams that produce independent software components that are larger than 10. Some much larger. 
[03:44:17] <kee> Are you pushing the boundaries of what the hardware is capable of?
[03:44:17] <EdFletcher> But we have some very complex systems, as noted earlier. Surely some of those could be factored down too, but hey such is life when you move fast. 
[03:44:23] <nomagno> juliaEnv: If you capitalize it it sounds like an ad
[03:44:37] <EdFletcher> kee: Haha yes definitely pushing boundaries. Sometimes past the boundary 😜 
[03:44:40] <kee> And is the field well-understood when you start working on a piece of software?
[03:44:42] <kee> Sounds like a no.
[03:45:07] <EdFletcher> I can’t really answer that without starting to give too much away about our specific field and solutions 
[03:45:17] <EdFletcher> But basically “no” 😉 
[03:45:30] <kee> In which case, I'm guessing you don't know enough to logically design the system when you start off a project: it's a prototype the whole way through.
[03:45:42] <EdFletcher> Hahaha that is an excellent guess indeed 
[03:45:47] <juliaEnv> nomagno it's an effort started in 1968 by NATO. An effort to address Software Crisis (which is a situation when SW is delivered late, doesn't address the needs very well, and exceeds budget). All they do is teach these better approaches (engineering approaches) to transform your inputs into the outputs you need...
[03:45:50] *** Joins: jaysicks (~jaysicks@103.163.220.49)
[03:45:55] <EdFletcher> “Always Be Refactoring” should be our motto 
[03:45:57] *** Quits: morte_ (~user@190.104.116.153) (Remote host closed the connection)
[03:46:14] <kee> That is absolutely not the correct way to write most software.
[03:46:18] <kee> Certainly not software with users.
[03:46:27] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:46:30] <nomagno> juliaEnv: Wikipedia says 'user story' was coined in 1998.
[03:46:35] <kee> (The user interface part of your robotics system is, I'm guessing, not something you do active research into.)
[03:46:48] <nomagno> Not saying you're wrong but imma need you to source that
[03:46:53] <juliaEnv> nomagno people who don't get it, or aren't disciplined use ad-hoc approaches instead of strictly engineering approaches. Then, they often get into the aforementioned situation of software crisis (https://en.wikipedia.org/wiki/Software_crisis )
[03:46:59] <EdFletcher> kee: Well again, no offense, but you don’t really know. It’s not ideal I admit, but honestly it’s the only way we can operate at the moment. 
[03:47:09] <kee> EdFletcher: I'm not saying it's a bad thing!
[03:47:11] <juliaEnv> nomagno Agile didn't exist back in 1968 when NATO coined software engineering.
[03:47:17] <kee> I'm saying it's different to what juliaEnv seems to be talking about.
[03:47:17] <EdFletcher> And it’s not like we’re blind to it. Most of my day is spent on incremental improvements. 
[03:47:24] <kee> Using engineering approaches makes sense for what you're doing.
[03:47:25] <juliaEnv> kee no, it's absolutely not
[03:47:28] <EdFletcher> kee: Ah gotcha, fair and understood. 
[03:47:45] <kee> juliaEnv: You're talking about looking at the competition.
[03:47:58] <kee> And about "features".
[03:48:04] <kee> That sounds like application development to me.
[03:48:07] <juliaEnv> kee no, you don't understand software products are developed to be competitive in the marketplace
[03:48:22] <kee> Competitive is more about marketing than about good programming.
[03:48:32] <juliaEnv> kee some products are for one specific customer, some are for the marketplace
[03:48:48] <kee> Products for one specific customer are so much easier.
[03:48:52] <ProfSimm> We need JSONv2
[03:48:53] <kee> And, I find, so much nicer to use.
[03:49:01] <kee> ProfSimm: We have several JSONv2s. Take your pick!
[03:49:04] <EdFletcher> Yeah although we’re on the edge, we do have competitors in the field we have to pay attention to. Our product teams think about that stuff I know, but it gets filtered significantly once it gets to us in engineering. 
[03:49:04] <kee> There's YAML, TOML…
[03:49:39] <ProfSimm> kee: we need one that stands out then. Maybe punchier sequel title. JS2N.
[03:49:46] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[03:49:50] <nomagno> You just use HWDOC
[03:49:57] <ProfSimm> kee: 2JS 2ON
[03:49:59] <kee> juliaEnv: To confirm: what sort of software do you write?
[03:50:05] <Decker> ProfSimm what does your v2 include?
[03:50:08] <kee> 3JS 5ON
[03:50:24] <ProfSimm> Decker: basically what yours includes
[03:50:32] <ProfSimm> Decker: but also expressions and the like
[03:50:41] <kee> {{""key"":: value,, ""another key"": 3..0}}
[03:50:46] <kee> JSON2: twice the JSON
[03:50:47] <Decker> :) that's just jS
[03:51:06] <kee> Drat, I forgot to double a colon.
[03:51:09] <ProfSimm> Decker: OK, let's start sending JS over HTTP then. I'm sure this is a brand new idea.
[03:51:33] <epony> good for misplaced colons https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Pear_Creme_Caramel_at_Quay.jpg/990px-Pear_Creme_Caramel_at_Quay.jpg
[03:51:34] <bayaz> Type: image/jpeg Size: 191.6 kB 
[03:51:35] <Decker> <script src="js.js"></script> ya never done
[03:51:54] <kee> JSON, except the values are CSS expressions.
[03:52:22] *** Quits: Cyp (~cyp@213.237.85.100) (Excess Flood)
[03:52:34] *** Quits: RazielZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[03:53:16] *** Joins: Cyp (~cyp@213.237.85.100)
[03:53:44] <juliaEnv> kee you again don't understand that software engineering teaches better processes (engineering processes). And since an Agile methodology, such as Kanban and Scrum is not just a blank work, but it is a process framework, believe it or not there are engineering processes that disciplined engineers follow. I was asking/discussing how a new Agile product starts because it doesn't start by adding the first user story. I found 
[03:53:44] <juliaEnv> it starts by a Product Owner coming to the Product Manager to discuss what the Product Owner needs, why, etc. and to follow these steps: https://www.atlassian.com/software/confluence/templates/collections/product-managers and fill those templates. This is a process framework for product development. Believe it or not, software is a product. And it doesn't start with software development, but with product development.
[03:54:21] <flaqoniun> sounds like a cult TBH
[03:54:59] <kee> juliaEnv: Software developed for a market is still developed for somebody.
[03:55:15] <kee> That's what user stories are supposed to be about, as I understand.
[03:55:30] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[03:56:15] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[03:56:44] <juliaEnv> there were non-agile products in the past where everything was one huge document with all business needs, goals, product requirements, etc. and then there used to be a bunch of big documents (few hundred pages). This is the old way. Now, with Agile, Product Owner and Product Manager meet regularly and add needs, features, etc. at any time incrementally and iteratively, while updating these templates throughout the product 
[03:56:44] <juliaEnv> development. They also link them to JIRA epics/user stories and plan kanban boards or sprints from that.
[03:57:00] <kee> Yeah: don't do that either.
[03:57:29] <juliaEnv> kee SW developed for a market is developed to fit many needs of many customers, but primarily to solve some problem that other existing products do not solve.
[03:57:43] <kee> Normally, that's easy.
[03:57:55] <kee> Software is generally bad. If you write good software, it solves a problem existing products don't.
[03:58:11] <kee> i.e. it works, is resource-efficient, is easy to reason about the behaviour of…
[03:58:16] <kee> Is easy to mod, extensible…
[03:58:34] <kee> Software should be a tool, but lots of people treat it like a control panel.
[03:58:51] <kee> For most tasks, you shouldn't tell the computer what to do. You should use the computer.
[03:59:05] <juliaEnv> kee writing algorithms and data structures doesn't solve anything new unless you deliberately follow a process that is based on research/innovation which requires to first analyze what's been already done by others.
[03:59:34] <kee> “What's alreaedy been done by others” is useful for understanding what people expect out of the software.
[03:59:37] <kee> And for stealing good ideas.
[03:59:45] <kee> But rarely should you imitate something like Microsoft Office.
[03:59:59] <kee> (Softmaker Office is an exception. I don't know how they did what they did.)
[04:01:26] <juliaEnv> kee in general, I don't think any new agile product should be engineered without first testing/validating that it has buyers willing to pay $x for the unique features (plus all common features) that it has
[04:01:56] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:01:59] <kee> juliaEnv: It's hard to do that without promising it to people.
[04:02:09] *** Joins: flaqoniun (~F@32.211.211.39)
[04:02:10] <kee> And you can't promise it to people without deciding how it should behave.
[04:02:19] <kee> You shouldn't do that before thinking about the problem for long enough to have a program.
[04:02:33] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:02:46] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[04:02:48] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.4.1)
[04:02:57] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Ping timeout: 240 seconds)
[04:03:04] <kee> Once you've finished designing your program, you normally have most of the code written, because software is design work. Once it's fully designed and specified, it's ready to copy-paste everywhere.
[04:03:09] *** Joins: Raziel (~Raziel@user/raziel)
[04:03:12] <juliaEnv> kee agile product development has engineering processes that actually take you step by step through. You can definitely include a feasibility study or whatever the process is called to quickly find out whether people are willing to pay, and how many, how much.
[04:03:38] <kee> juliaEnv: But you don't know what you are making until you've mostly finished.
[04:03:39] <epony> https://en.wikipedia.org/wiki/Star_office#5.2
[04:03:39] <bayaz> Title: StarOffice - Wikipedia 
[04:03:40] <juliaEnv> kee there is also a product strategy
[04:03:54] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:03:55] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:04:07] *** Joins: flaqoniun (~F@32.211.211.39)
[04:04:14] <kee> If your goal is to make something that enables somebody to perform a given task (user stories), that's a good guiding principle.
[04:04:23] <kee> But it's hard to do a feasibility study on “thing to achieve a given task”.
[04:04:25] <juliaEnv> kee with a product strategy, you know what you want to develop, what customer problems tou want to address, how, why, and what common/general features you have to add to be on the same level with other companies offering the same product
[04:04:42] <kee> There is zero reason to do “the same product” with software.
[04:04:58] <kee> It's not like manufacturing. There is 100% economy of scale.
[04:05:10] <kee> Making 1 copy is as much effort as making three trillion.
[04:05:20] *** Quits: Tazmainian (~Tazmainia@2001:1c02:170b:3d00::1012) (Quit: Leaving)
[04:05:24] <kee> You should always make something different.
[04:05:29] <juliaEnv> kee you ignore that every product has a purpose and the reason for creating a new product is that you want to solve a new problem that existing products in that category don't. 
[04:05:42] <kee> In which case, nobody is offering the same product.
[04:05:47] <kee> So you don't need to add features to be on the same level?
[04:05:57] <jacekowski> juliaEnv: lies
[04:06:00] <kee> You might need to add functionality to make it useful.
[04:06:09] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[04:06:10] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[04:06:10] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[04:06:24] <jacekowski> juliaEnv: you create a product and then create a problem it solves
[04:06:32] <nomagno> kee: If IP didn't apply to software you'd be right
[04:06:38] <kee> jacekowski: Most people aren't rich enough to do that.
[04:06:54] <nomagno> But in the end copyright laws hamfist a marginal reproduction cost into software: marketing capabilities
[04:07:19] <juliaEnv> jacekowski in which engineering methodology? 
[04:07:26] <kee> nomagno: Making a clone just because your company is better at marketing is a soulless career.
[04:07:33] <kee> That's how we get the Skype for Businesses of this world.
[04:07:39] <jacekowski> juliaEnv: the one that apple is using for example
[04:07:50] <juliaEnv> jacekowski which one is it?
[04:07:54] <kee> juliaEnv: That's not an engineering methodology.
[04:08:00] <kee> It's a business strategy.
[04:08:06] <kee> jacekowski is being facetious.
[04:08:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:08:12] *** Joins: Rathskalon (uid65285@id-65285.lymington.irccloud.com)
[04:08:19] <juliaEnv> kee product engineering has engineering methodologies, just like software engineering, and they overlap in some places
[04:08:33] <nomagno> kee: That practice is literally the reason most software dev companies aren't unicorn startups tho :P
[04:08:34] <kee> Yeah, but what Apple does isn't a product engineering strategy.
[04:08:35] <juliaEnv> Product Engineering is the process of innovating, designing, developing, testing and deploying a software product.
[04:08:37] <kee> It's “be rich”.
[04:09:04] *** Quits: jaysicks (~jaysicks@103.163.220.49) (Ping timeout: 272 seconds)
[04:09:06] <kee> It's how they got the iPhone viable.
[04:09:24] <kee> They were sufficiently powerful enough that they could set the terms, where before it was always the cellular carriers.
[04:09:45] <juliaEnv> let's say software engineers (those guys who learn the better approaches/the engineering approaches to transform their inputs into outputs using a systematic, disciplined, quantifiable approach, these guys also can be good product engineers)
[04:10:18] <juliaEnv> check this out http://swebokwiki.org/Chapter_15:_Engineering_Foundations It's a solid foundation.
[04:10:44] <nomagno> The big five in tech rarely come up with anything new in terms of software. They have all gotten huge trough iteration on the ideas of worse positioned devs
[04:11:12] <kee> Sometimes, what they produce is actively worse in every dimension (e.g. Microsoft Teams).
[04:11:21] <kee> Yet people still use it.
[04:11:36] <nomagno> that's the pull of knowing how to capitalize on initial success
[04:11:41] <nomagno> Copyright is a black hole
[04:11:41] *** Joins: jtgd (~jtgd@user/jtgd)
[04:11:55] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[04:12:04] <kee> Doing that kind of thing is wrong.
[04:12:09] <kee> Most people know how to do it.
[04:12:22] <kee> Hardly anyone is successful enough, and most people who are aren't willing to do it.
[04:12:59] <kee> And it's not really related to software engineering imo.
[04:13:08] <nomagno> Yes, that's because the marketing space is already clobbered
[04:13:19] <epony> the really compelling sofware these companies continue to provide and exploit seriously, are operating system, productivity suites and development tools
[04:13:30] <kee> Development tools‽
[04:13:32] <kee> Oh, Apple.
[04:13:44] <epony> IDEs and Workbenches
[04:13:48] <kee> epony: For a moment there I thought you meant Microsoft's.
[04:13:55] <kee> Xcode, sure.
[04:13:56] <juliaEnv> when a company invests billions into marketing, of course they can sell whatever they want afterward because everybody knows them.
[04:14:07] <epony> MSFT too.
[04:14:19] <juliaEnv> if you invested billions into marketing your name, you could also sell whatever you code.
[04:14:30] <kee> epony: Does Microsoft have a single good development tool?
[04:14:39] <juliaEnv> VSCode is quite OK
[04:14:45] <juliaEnv> it's free
[04:14:55] <kee> I mean good relative to the alternatives.
[04:14:59] <juliaEnv> C# is quite nice too. It's cool.
[04:15:01] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[04:15:04] <epony> All computer (toolkits) were proprietary and expensive in the 80ies and 90ies.. except free software tools which were not really accessible before the commercial Internet, which was too late to compete massively, and took 20 years to now
[04:15:10] <epony> 25
[04:15:22] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[04:15:27] <guest_> github is also nice
[04:15:35] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[04:15:45] <kee> Er
[04:16:08] <kee> guest_: Have you used anything other than GitHub, GitLab and Atlassian?
[04:16:22] <epony> so money were made on IDE tools and that's big money, not just OS and shareware, and are still being used commercially
[04:16:44] <juliaEnv> well, many people in big companies use Azure, Outlook, Exchange, Sharepoint, Teams, Skype, Windows, Office, SQL Server, SSIS, SQL Studio, VSCode, and the list goes on.
[04:16:53] <kee> epony: IDEs and other tools hook people in, so they can't migrate to another one easily mid-way through a project. Is that what you mean?
[04:17:04] <ProfSimm> Decker: wouldn't it be useful to have JSON with some basic math expressions: https://i.imgur.com/ewljyto.jpg
[04:17:04] <kee> juliaEnv: That doesn't make them good.
[04:17:05] <bayaz> Type: image/jpeg Size: 96.7 kB 
[04:17:09] <epony> including in the "services economy of scale" as SaaS and SaaP
[04:17:12] <ProfSimm> Decker: or even some not so basic
[04:17:17] <ProfSimm> Decker: but no loops, say
[04:17:18] <juliaEnv> kee no, it depends
[04:17:28] <kee> They use Outlook because it's the only thing that works with Exchange. They use Sharepoint beacuse it's required for Teams. They use Teams because everyone else uses Teams.
[04:17:38] <kee> (Though Sharepoint isn't actually that bad.)
[04:17:40] <juliaEnv> kee commercial products are successful when they have a market share
[04:17:47] <epony> I mean big earnings winner product and services categories.
[04:18:00] <juliaEnv> kee MS has a huge market share
[04:18:00] <kee> Microsoft Office is only used because people want to open Microsoft Office documents.
[04:18:14] <kee> Despite claiming that it's an open standard, it's not.
[04:18:23] <juliaEnv> kee that doesn't matter. It has a huge market share. That's what a successful product needs to have.
[04:18:35] <kee> Why are you defining success so strangely?
[04:18:41] <kee> A successful product is one that is useful.
[04:18:59] <kee> If you achieved the goals that you set out to achieve, that's success.
[04:19:42] <kee> If your goal is just to make money, there are easier ways to do that than making software for the market. B2B is usually much more profitable.
[04:20:55] <juliaEnv> kee I'm not defining success. I'm stating products with a high market share like the Microsoft products are mentioned are successful products even if some individuals hate them.
[04:20:57] <epony> just the last couple of versions (supported) of the MSFT operating systems is about 1.5-2.5 billion laptops and desktops estimated by serious statistics reporting agencies
[04:21:18] <juliaEnv> * like the MS products I've metnioned *
[04:21:33] <kee> That's a high market share. Maybe that's a business goal.
[04:21:36] <juliaEnv> my goal is engineering better products
[04:21:44] <kee> But is that market share a goal of the software development?
[04:21:54] <juliaEnv> even for free, Open Source
[04:22:17] <kee> If you have a better product, and somebody else has better marketing, do you make your product worse to try to make it more similar to the better-marketed one?
[04:22:24] <epony> according to individuals, no, as a net result and group economics, yes
[04:22:26] <juliaEnv> there are commercial products and free products. Market share is how you measure success in both.
[04:22:38] <kee> Why?
[04:22:39] <flaqoniun> are you a shareholder? full disclosure?
[04:22:39] *** Parts: guest_ (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc) (Leaving)
[04:22:45] <kee> That's a silly way of measuring success.
[04:22:59] <nomagno> Commercial and free dictinction sounds meaningless
[04:22:59] <kee> That's a silly definition of success.
[04:23:00] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Ping timeout: 272 seconds)
[04:23:05] <nomagno> Free software is commercial software
[04:23:14] <juliaEnv> are you able to focus on engineering, or will you constantly make accusatory claims about money?
[04:23:20] <juliaEnv> http://swebokwiki.org/Chapter_15:_Engineering_Foundations
[04:23:21] <nomagno> Commercial and noncommercial is a more useful distinction
[04:23:21] <kee> There are plenty of businesses that have free software as their primary, or sole, product.
[04:23:27] *** Quits: beyondhatch (~beyondhat@98.186.198.230) (Ping timeout: 256 seconds)
[04:23:31] <nomagno> But noncomm software is very rare nowadays
[04:23:33] <ProfSimm> kee: market share is usage share, share of use, i.e. amount of useful.
[04:23:39] <juliaEnv> nomagno Linux ain't rare
[04:23:41] <epony> we get it freely and at no cost from the authoring groups ;-) the free software
[04:23:51] *** Quits: newwebdev132 (~newwebdev@78.135.91.191) (Quit: Leaving)
[04:24:01] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:24:02] <nomagno> juliaEnv: Linux is FLOSS, not noncommercial.
[04:24:10] <kee> epony: Plausible Analytics' source is on GitHub, under AGPL. They're still making millions by selling the software.
[04:24:23] <epony> also we steal and use privately commercial and closed source distributed in binary only software at staggering rates
[04:24:31] <epony> (all computer users)
[04:24:33] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:24:36] <juliaEnv> nomagno in fact, when you run some open source software in your company to do some job, you are also more likely to fix something or contribute some patches to the OSS.
[04:24:45] <kee> ProfSimm: Usage share is share of use, not usefulness.
[04:24:46] *** Joins: flaqoniun (~F@32.211.211.39)
[04:24:57] *** Joins: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu)
[04:25:03] <kee> Think the situation with tax software in the US.
[04:25:05] <nomagno> juliaEnv: I knew that, but why did you cite Linux as noncommercial?
[04:25:06] <epony> you can't raise your hand and say all software you ever used was paid and obtained by legal and according to trade and copyright law ;-)
[04:25:09] <juliaEnv> nomagno it depends. GNU/Linux is a combination of noncommercial GNU and whatever licence the kernel has
[04:25:26] <kee> juliaEnv: GNU is not non-commercial.
[04:25:29] <juliaEnv> you know the GNU GPL is noncommercial
[04:25:37] <nomagno> juliaEnv: the Linux kernel and the GNU utils are both under the GPL
[04:25:38] <kee> It's very explicitly not non-commercial.
[04:25:40] <epony> so, NO, free software is not commercial and is the non-commercial and non-profit software
[04:25:42] <juliaEnv> noncommercial doesn't mean you can't use it commercially
[04:25:46] <nomagno> And thr GPL isn't noncommerciak
[04:26:02] <juliaEnv> noncommerial means they aren't charging you for using GNU products
[04:26:03] <ProfSimm> Decker: I find it odd I can parse any JSON in my language despite i never set it as a goal. But when I realized it... made me unreasonably happy for some reason
[04:26:07] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[04:26:12] *** Joins: BGL (fifty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[04:26:13] <kee> I don't think any of us agree on what the word “non-commercial” means, and I don't think it much matters tbh.
[04:26:13] <nomagno> juliaEnv: they could charge you though
[04:26:27] <juliaEnv> GPL means you have to include the source code if you ship a GPLed product
[04:26:32] <epony> but you can pretend you can sell it and try to advertise it at a cost, no matter how futile and useless these strongly insisted statements are
[04:26:39] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:26:52] *** Joins: flaqoniun (~F@32.211.211.39)
[04:27:01] <nomagno> juliaEnv: the license enforces common sense, yes. That restriction is completely orthogonal to commercial-ity
[04:27:05] <juliaEnv> nomagno I'm not having this discussion about licenses with you. Actually, you haven't even read the engineering foundation, you just keep making accusatory claims about money.
[04:27:14] <kee> epony: There are companies that explicitly write “our software is licensed under AGPL, you can buy it here, here's the source code” on their home page and they get large numbers of sales.
[04:27:16] <nomagno> Uh, what?
[04:27:24] <nomagno> What accussatory claims am I making?
[04:27:32] <epony> so, YES, you can live in a fairy tale only you believe and shield your eyes from factology, reality and competetitive and ruthless elements of software propagation
[04:27:38] <juliaEnv> nomagno sorry, that was for kee
[04:27:44] <juliaEnv> kee ^
[04:27:58] <kee> I'm not trying to be accusatory either.
[04:28:34] <kee> I'm criticising the tendancy for a few people here (not just you) to equivocate usefulness and market share and success, which are all different things.
[04:28:38] <juliaEnv> the point is if you modify a GPLed source code and sell it, you have to include the source code (give up the source code for free to whoever you ship the product to)
[04:28:39] *** Joins: duuude (~user@user/duuude)
[04:28:52] <kee> juliaEnv: No, you don't have to give the source code free.
[04:28:55] <juliaEnv> but I'm not gonna discuss this as it always leads to heated arguments about money
[04:29:07] <nomagno> juliaEnv: Well you can charge extra for the source but you can't not give the source :P
[04:29:13] <juliaEnv> kee GPL = yes, you have to include the source code for free
[04:29:19] <kee> You're selling (source code, product).
[04:29:19] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:29:25] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:29:26] <epony> kee, it's not all network pressure and network effect ;-) it has merits too, albeit deeply undermined and defective in end user attainable variants
[04:29:28] <nomagno> you can sell the source without the binary
[04:29:34] <nomagno> But not the binary without the source
[04:29:36] *** Joins: flaqoniun (~F@32.211.211.39)
[04:29:37] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:29:38] <oldlaptop> juliaEnv: It specifically permits you to charge a nominal fee to cover the costs of media, etc.
[04:29:40] <juliaEnv> kee sure, charge for the source code that you are obliged by GPL to provide and you can get sued
[04:29:43] <nomagno> In my book that's having to give the binary for free
[04:29:50] *** Joins: flaqoniun (~F@32.211.211.39)
[04:29:54] <juliaEnv> oldlaptop you're exactly right
[04:30:14] <duuude> selling GPL code is a joke
[04:30:25] <kee> duuude: Selling products that include GPL software is not.
[04:30:26] <nomagno> You can charge for source code and not provide binaries.
[04:30:28] <nomagno> That's not ambiguous
[04:30:33] <duuude> BSD rocks
[04:30:40] <nomagno> You can't charge for binaries and THEN for source
[04:30:47] <nomagno> The source code is the software
[04:30:47] <duuude> kee: yeah but they are usually more than that
[04:30:50] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[04:30:50] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[04:30:50] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[04:31:06] <nomagno> The binaries are considered useless by themselves by the license, so to speak
[04:31:14] <nomagno> They're just processing of the actual software
[04:31:26] <nomagno> Not what the license says but conceptually close enough
[04:31:30] <vdamewood> nomagno: Well, technically, the nominal charge is still a charge.
[04:31:33] <oldlaptop> nomagno: It often happens that the binaries are enough of a value-add that you *can* reasonably charge for them, though.
[04:31:56] <kee> And that's ignoring stuff like support, branding, tailoring…
[04:32:04] <nomagno> oldlaptop: Yeah, you can charge extra for binaries AFAIK
[04:32:14] <kee> Plenty of stuff a company can provide without hiding the source code from the user.
[04:32:22] <vdamewood> GNU themselves used to charge for binaries.
[04:32:26] <nomagno> Charging for a source package and a source+binary package separately is a weird solution
[04:32:32] <nomagno> But it's valid
[04:32:43] <oldlaptop> (Of course there's a great risk that someone undercuts you, and so usually people who do that are also selling support, or explicitly describe buying the binaries as tantamount to a donation "supporting the developers", or something of that sort)
[04:33:23] <vdamewood> oldlaptop: That's what GNU did when they sold binary collections, re tantamaound to a donation
[04:33:26] <juliaEnv> let's say software engineers (those guys who learn the better approaches/the engineering approaches to transform their inputs into outputs using a systematic, disciplined, quantifiable approach, these guys also can be good product engineers)
[04:33:28] <nomagno> The thing is that right to be defended by the law from lawful competition trough copyright is both economically and socially akward
[04:33:40] <flaqoniun> MIT?BSD lisence be like "i grant you 1 lisence to compile your own binaries thatmight not work if they're missing proprietary patches so good luck, HAHAHA"
[04:33:44] <kee> juliaEnv: You keep copy-pasting that start-of-a-sentence, but you don't finish it.
[04:33:49] <epony> there is the paradox of "supposedly better free software that sells support" is worse because of that support which takes away the goals and objectives and work towards support rather than software quality and reliability
[04:34:38] <oldlaptop> flaqoniun: That doesn't seem to be how things normally work out in practice.
[04:34:39] <nomagno> Proprietary software sure as heck also sells support even more often than free software
[04:34:48] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[04:34:50] <flaqoniun> spirit vs letter
[04:35:09] <juliaEnv> kee you keep overlooking the product development / product engineering side of developing software and not sure what you meant by finishing it
[04:35:15] <epony> and we know about trading vulnerabilities and vendors being an arm in that balance
[04:35:33] <kee> juliaEnv: I'm not overlooking it.
[04:36:11] <kee> I just don't see how it's important enough to control the software development process.
[04:36:12] <juliaEnv> kee I've evaluated it that you are since you don't really discuss that, but instead redirect to licences
[04:36:42] <kee> Conversations often go on tangents, yeah.
[04:36:52] <kee> juliaEnv: I don't think there's much to discuss.
[04:36:53] <ProfSimm> kee:  providing source considered harmful
[04:36:53] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:36:59] <kee> ProfSimm: By?
[04:37:03] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 256 seconds)
[04:37:03] <ProfSimm> kee: me
[04:37:07] <kee> Harmful to?
[04:37:18] <oldlaptop> juliaEnv: The message you've repeated a few times with the large parenthetical is grammatically structured such that it appears to be incomplete. Is the thought, in fact, complete?
[04:37:36] <juliaEnv> not seeing the significance the one area that drives the entire SDLC is ignorant a f
[04:37:37] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Ping timeout: 256 seconds)
[04:37:37] <nomagno> kee: to monopolies
[04:37:38] *** Joins: zaher_ (~zaher@37.48.183.18)
[04:37:40] <nomagno> Unironically.
[04:37:49] <ProfSimm> kee: the ecosystem. Leads to arbitrary forks, fragmentation, coopting of the product by malicious and commercial parties, renders the product vulnerable to "embrace, extend, extinguish" and other problems
[04:37:52] <kee> juliaEnv: It doesn't “drive the entire SDLC”.
[04:37:56] <juliaEnv> it does
[04:38:06] <kee> Not where I'm from.
[04:38:11] <ProfSimm> kee: case in point Linux distros
[04:38:18] <kee> ProfSimm: Case in point: systemd.
[04:38:22] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[04:38:23] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[04:38:23] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[04:38:24] <nomagno> ProfSimm: You're describing lawful competition
[04:38:24] <vdamewood> juliaEnv: It doesn't look that way to me.
[04:38:26] <kee> Apart from that, the fragmentation's tolerable.
[04:38:27] <juliaEnv> yes where I work
[04:38:35] <oldlaptop> Please try to avoid strong langauge like that, it's not particularly "respectful", as the /topic says. (bowlderization has roughly no effect on that)
[04:38:40] <nomagno> You want to go back to a feudal economy if you want an unfragmented market?
[04:38:45] <ProfSimm> nomagno: we're not discussing its legality
[04:39:11] <ProfSimm> nomagno: we're discussing platforms
[04:39:19] <kee> juliaEnv: What do you do at work?
[04:39:21] <nomagno> Competition everywhere at all times is the goal of proponents of any kind of sustainable and healthy capitalism
[04:39:25] <ProfSimm> nomagno: platform fragmentation is a bad thing
[04:39:32] <kee> ProfSimm: It's not, if it doesn't cause problems.
[04:39:40] <ProfSimm> kee: it causes problems
[04:39:45] <nomagno> ProfSimm: standardization naturally emerges if it becomes annoying
[04:39:51] <ProfSimm> nomagno: as if
[04:40:01] <kee> ProfSimm: It causes problems because there are no replacements for systemd components.
[04:40:08] <kee> You can run X11 programs on Wayland!
[04:40:13] <oldlaptop> It's a *good* thing that there exist a whole bunch of broadly-compatible UNIX variants that do things differently, not a bad thing.
[04:40:15] <kee> And Windows programs on Debian.
[04:40:18] <nomagno> ... As if what? It's an effective measure to keep different solutions voluntarily coherent with each other
[04:40:24] <ProfSimm> nomagno: standardization is not the same as lack of fragmentation. Instead it stagnates innovation 
[04:40:31] *** Quits: zaher (~zaher@37.48.144.97) (Ping timeout: 260 seconds)
[04:40:35] <vdamewood> oldlaptop: Whole bunch?
[04:40:40] <kee> People attempting to hold back fragmentation has caused more harm than fragmentation has ever caused.
[04:40:56] <nomagno> ProfSimm: It does slightly stagnate innovation of the implementations that want to stay compliant
[04:40:57] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[04:40:57] <vdamewood> oldlaptop: Or are you including the ones that are no longer sold/supported?
[04:41:11] <ProfSimm> nomagno: when Apple adds an API to iOS, everyone at once can use it. How do you do this in a fragmented platform with "standards". Years may pass.
[04:41:11] *** zaher_ is now known as zaher
[04:41:13] <nomagno> I don't see GNU extensions being any less frequent since C89 released
[04:41:13] <nomagno> ;)
[04:41:19] <kee> ProfSimm: No, they can't. I can't!
[04:41:20] <duuude> ProfSimm: there are such things as fallbacks and backward compatibility
[04:41:35] <nomagno> ^
[04:41:40] <kee> If we have sufficient fragmentation, I'm not on a platform.
[04:41:41] <juliaEnv> interestingly, kee is uneducated/illiterature in products and engineering. He is only educated/literature in computer science.
[04:41:43] <ProfSimm> I'm clearly more right 
[04:41:48] <kee> I can just modify my system to have tne new feature.
[04:41:48] <ProfSimm> I'm like super right 
[04:41:50] <nomagno> Most people nowadays code shell scripts in bash, specifically bash
[04:41:51] <kee> Making it even more fragmented.
[04:42:04] <kee> juliaEnv: That isn't true.
[04:42:10] <juliaEnv> kee well, you've demonstrated
[04:42:16] <kee> I actually have rather little interest in computer science.
[04:42:22] <nomagno> I stick to POSIX shell for instance, but if standards become unpractical people will just ignore them
[04:42:23] <oldlaptop> vdamewood: Even today with most of the proprietary vendors dead or zombified, there's the whole profusion of linuxes (which includes several broad families that do things really differently), four or so major BSD derivatives which all do things differently, illumos and whatever else is left of opensolaris, actual closed-solaris, AIX
[04:42:23] <juliaEnv> kee if you disagree, you'll need to demonstrate knowledge
[04:42:28] <kee> Remember, I was the one claiming a uni education was pointless, and you were the one saying it wasn't.
[04:42:31] <oldlaptop> I believe HP still supports HP-UX.
[04:42:44] <juliaEnv> kee it depends on whose uni education is pointness
[04:42:54] * kee runs cold water over the burn
[04:42:58] <oldlaptop> And macOS, which doesn't really fit with the other BSD derivatives.
[04:43:14] * vdamewood hugs his MacBook Pro
[04:43:24] <nomagno> MacOS is fine but it hides the Unix core so deep below!
[04:43:26] *** Joins: zaher_ (~zaher@37.48.184.118)
[04:43:30] <vdamewood> oldlaptop: Okay... I buy it.
[04:43:36] <oldlaptop> juliaEnv: Again, try to keep things respectful. You're edging into personal attacks.
[04:43:56] <kee> oldlaptop: To be fair, I am saying that something important to juliaEnv is pointless and bad.
[04:44:02] <kee> I probably started it.
[04:44:23] <vdamewood> nomagno: Naw, the Unix core is in /Applications/Utilities/Terminal.app
[04:44:29] <nomagno> The proliferation of Unixy ways in techy fields fields while Windows stays firmly dominant for mainstream consumers is really interesting
[04:44:32] <kee> (I'm not actually saying it's pointless and bad, but I am saying it's not that useful and not that good.)
[04:44:48] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[04:44:51] <nomagno> vdamewood: Yes but it's like a window to *nix!
[04:44:56] <juliaEnv> good, first person I've seen who tries to be fair
[04:44:58] <nomagno> IDK, no X11 no nothibg
[04:45:14] <duuude> ProfSimm: I think you are just parroting apple because you need to feel justified when you paid more (though Apple software is slightly good for other reasons) https://en.m.wikipedia.org/wiki/Choice-supportive_bias
[04:45:15] <bayaz> Title: Choice-supportive bias - Wikipedia 
[04:45:29] <kee> duuude: It's probably the other way around.
[04:45:32] <flaqoniun> it used to ship with x11 back when macos was still good
[04:45:36] <juliaEnv> I also didn't mean it as an attack, but as a factual statement that while I don't consider uni education pointless for me somebody else considers theirs is pointless for them
[04:45:37] <kee> People inclined to agree with Apple buy Apple stuff.
[04:45:57] <ProfSimm> duuude: ok. I'm using all major platforms, not just apple.
[04:45:58] <kee> juliaEnv: If I took it as an attack, I would've responded seriously.
[04:45:59] <oldlaptop> juliaEnv: If it was obvious you meant it as an attack, you wouldn't be getting gentle warnings. :P
[04:46:21] <ProfSimm> duuude: typing this on Windows. Day to day work on Linux.
[04:46:26] *** Quits: zaher (~zaher@37.48.183.18) (Ping timeout: 272 seconds)
[04:46:30] <ProfSimm> duuude: mobile devices on Apple.
[04:46:32] <kee> oldlaptop is right in this instance. It's important for the atmosphere of the room as a whole to remain civil.
[04:46:48] <duuude> kee: not at all, it is just branding and "feel different" to get your money. most people I know buy it because of the marketing aura it has created.
[04:47:03] <juliaEnv> oldlaptop you were actually right that a GPL license doesn't let people charge for source code as they have to give it for free, however it allows them to charge adequately for a medium, etc.
[04:47:07] <duuude> ProfSimm: cool, but you probably paid for an Apple
[04:47:11] <vdamewood> duuude: Well, that's anecdotal evidence.
[04:47:23] <kee> duuude: They don't believe the marketing because they bought an Apple; they buy Apple because they believe the marketing.
[04:47:26] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[04:47:27] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[04:47:27] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[04:47:30] <oldlaptop> duckgoose: They have a lot of serious, long-standing fans who genuinely like the way the interface works, etc.
[04:47:43] <oldlaptop> Um. duuude: ^
[04:47:54] <juliaEnv> the best uni education I can see is btw. Carnegie Mellon / SEI
[04:47:57] <ProfSimm> duuude: because I bought something I'm now forcing myself to like it all the time. That's your thesis. Well. That's not how it works.
[04:47:59] <oldlaptop> (My apologies, waterfowl waterfowl.)
[04:48:26] <kee> juliaEnv: Depends what you want to get out of a uni education.
[04:48:46] <oldlaptop> ProfSimm: Unfortunately the human mind *does* tend to work like that.
[04:48:48] <kee> I'm taking a joint maths / CS course, and they're teaching us all about software engineering practices that I've never used at work.
[04:48:52] <juliaEnv> kee when you want to achieve a mastery of software engineering, as meant by NATO and IEEE
[04:48:59] <kee> I never will in my life.
[04:49:06] <vdamewood> kee: Such as?
[04:49:12] <flaqoniun> loool
[04:49:12] <ProfSimm> oldlaptop: it works like that for FOSS too. You don't invest money, but time and emotion. Same deal.
[04:49:17] <kee> vdamewood: UML.
[04:49:31] <kee> Pair programming (on a project where pair programming isn't appropriate).
[04:49:52] <kee> Enterprise Java best practices.
[04:50:05] <ProfSimm> oldmagic: if anyone tells me with a straight face that Gimp is as good as Photoshop I'll laugh in their face. And I hate Adobe
[04:50:11] <vdamewood> Enterprise java is not a best practice. (just kidding, I couldn't resist)
[04:50:16] <flaqoniun> speaking of IEEE, when you test for 100 pecent coverage do you have to check for floating point error accumulation?
[04:50:24] <kee> ProfSimm: GIMP is better than photoshop at what I use it for.
[04:50:30] <flaqoniun> or ieee looks the other way on that
[04:50:33] <kee> I use GIMP when I need to do a complex image manipulation.
[04:50:37] <ProfSimm> kee: and what is that. NFT art?
[04:50:40] <kee> I usually have to program that myself, in Script-Fu.
[04:51:00] <duuude> ProfSimm: yeah it works like that for FOSS too
[04:51:07] <oldlaptop> kee: How's that compare to (say) imagemagick?
[04:51:12] <duuude> to a lesser degree
[04:51:12] <ProfSimm> kee: Photoshop is scriptable BTW
[04:51:27] <kee> ProfSimm: Yeah, but it's proprietary. I don't trust my scripts to be usable in the future.
[04:51:40] <duuude> Krita is good
[04:51:46] <kee> They might change something, and I'm screwed, because I don't have the legal right to use the older version where my script worked.
[04:51:54] <vdamewood> Every single Python 2.7 script just broke on macOS this month.
[04:52:09] <kee> ProfSimm: Like when I wanted to take an aerial photograph of a volcano, and turn it into image that I could print out and arts-and-crafts onto a cardboard model.
[04:52:16] <oldlaptop> vdamewood: in fairness, *how* long has that writing been on the wall now?
[04:52:16] <ProfSimm> kee: you keep whipping out this word "proprietary" like it's an automatic win. Proprietary doesn't mean they break compatibility on purpose. And FOSS doesn't mean compatibility is maintained. It's nonsense argument
[04:52:32] <kee> ProfSimm: Proprietary means that when they break compatibility, I have no agency.
[04:52:35] <kee> That's what it means to me.
[04:52:41] <kee> Firefox breaks compatibility all the time!
[04:52:50] <duuude> ProfSimm: they tend to do that more, and nobody can fork them
[04:52:58] <ProfSimm> kee: If Gimp breaks compatibility you also have no agency, unless you wanna sink months into forking and fixing it.
[04:52:59] <vdamewood> oldlaptop: At least two years on Apple's walls. 5 or more on Pythons, and yeah, anyone who didn't see it only has themselves to blame.
[04:53:00] *** Quits: Decker (~d3x0r@user/d3x0r) (Remote host closed the connection)
[04:53:00] <duuude> but Firefox gets Palemoons
[04:53:03] <ProfSimm> kee: stop lying to yourself.
[04:53:06] <kee> ProfSimm: I can just downgrade the package.
[04:53:10] <ProfSimm> kee: you have no infinite time to fork everything
[04:53:12] <kee> Try downgrading Adobe CS.
[04:53:17] <juliaEnv> interestingly, when I studied SW engineering at the uni, all my classmates kept constantly failing at knowing its IEEE definition. And those who knew it then kept always failing at explaining what it means. :D And at that time the professor told us it was immature and etc. And the classmates confused it with programming. I believe I was the only one who joined the IEEE/ACM/BCS and kept learning it as meant by NATO/IEEE 
[04:53:17] <juliaEnv> (which is currently standardized in ISO/IEC Swebok and in some countries SW engineers have to be licensed. Licenses are based on the swebok)
[04:53:26] <kee> It is literally illegal to install an older version of Adobe Photoshop.
[04:53:35] <ProfSimm> kee: it's not "illegal"
[04:53:45] <kee> ProfSimm: It is if you purchased Creative Cloud.
[04:53:51] <ProfSimm> kee: bs
[04:53:51] <juliaEnv> so, it's by large misunderstood, ignored, and mistaken for programming or sw development
[04:53:52] <vdamewood> kee: Citation?
[04:54:13] * oldlaptop wonders which of you two has carefully read the applicable license agreement
[04:54:16] <kee> Iirc, CC gives you a license to install the latest vesrion.
[04:54:22] <ProfSimm> kee: also it's JavaScript and the API is stable. So please stop inventing problems where there are none.
[04:54:29] <kee> oldlaptop: I skimmed it one time a few years ago.
[04:54:37] <kee> But at least I read it
[04:54:38] <vdamewood> kee: That's not a citation.
[04:54:55] <kee> vdamewood: I currently don't have a web browser available to bring it up.
[04:54:56] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:55:02] <kee> But fine, I'll concede it might not apply to Adobe CC.
[04:55:04] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[04:55:04] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:55:05] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[04:55:08] <kee> It applies to Microsoft Office 365.
[04:55:14] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[04:55:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:55:25] <ProfSimm> open source means Russians embed malware in all the open-source software so it will record you masturbating and send the video to Putin. So don't use FOSS. Source: my ass.
[04:55:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[04:55:36] *** Joins: pavonia (~user@user/siracusa)
[04:56:15] <kee> ProfSimm: I use image editors in obscure ways. They don't have to break compatibility in a big way for the results to no longer be pixel-accurate.
[04:56:19] <kee> That matters for some use-cases.
[04:56:21] <oldlaptop> kee: You mean to say that (as an example) if I go out and get me a copy of msword 6.0 on a dozen floppies, together with the accompanying license, I'm not allowed to use it if I've also purchased an O365 subscription?
[04:56:31] <kee> oldlaptop: No.
[04:56:41] <vdamewood> kee: I have a CC subscription, the CC manager allows the user to install old versions directly.
[04:56:52] * kee eats hat
[04:56:56] <ProfSimm> It's illegal to like proprietary software, a new law says.
[04:57:06] <kee> vdamewood: Thanks for the correction.
[04:57:28] <kee> In future, I'll only make claims about the software I know it applies to.
[04:57:55] <kee> oldlaptop: If I have an O365 subscription with version 2013, and it upgrades to 2017, I have no longer got a license to use 2013.
[04:58:01] <oldlaptop> Ah.
[04:58:18] *** pikapika_lunar is now known as pikapika
[04:58:21] <kee> So I'd have to buy a specific license for 2013 (which Microsoft probably doesn't sell any more, if 2017 has come out).
[04:59:05] <oldlaptop> I would assume the dozen-floppies-from-ebay scenario (or more likely dozen-floppies-from-the-big-box-store-at-the-time) has some relevance to photoshop specifically, given how much its users seem to hate its vendor now
[04:59:09] <kee> I'm glad Adobe lets you install older vesrions of the software. I had them down as ridiculously anti-consumer, but it seems they're not all bad.
[04:59:13] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:59:26] <vdamewood> kee: Well, Office 365 versions aren't exactly in sync with the stand-alone versions.
[04:59:27] <juliaEnv> the single biggest issue with universities is that people can pass by memorizing facts and understanding things at a conceptual level without a professional training in the industry standard tools and possibly with a university training in tools that companies don't use. So, let's say that's why people who studied SW engineering may have advanced degrees without actually being masters of requirements in JIRA, masters of 
[04:59:27] <juliaEnv> design with Enterprise Architect or Visual Paradigm, masters of construction with Java (or whichever language they choose), masters of testing with some stack, etc. 
[04:59:29] *** Joins: flaqoniun (~F@32.211.211.39)
[05:00:15] <vdamewood> kee: To be fair, though, the old version list doesn't go back all the way to the beginning of CC's releases.
[05:00:18] <kee> juliaEnv: That is exactly the opposite problem that I have with uni.
[05:00:32] <oldlaptop> juliaEnv: What happens in five years, or five months, when nobody uses ZootTool Enterprise 2000 anymore?
[05:00:36] <juliaEnv> somehow, students become masters at a conceptual level, then complete assignments, write a thesis, and then they gradually forget
[05:00:37] <kee> People can get away with memorising how to do stuff in the industry standard way, without having enough of a conceptual understanding to realise when it's a good idea.
[05:01:03] <kee> juliaEnv: Writing thesises is not becoming masters at the conceptual level; it's becoming masters at the surface level.
[05:01:09] <kee> The words, without getting the meaning.
[05:01:22] <juliaEnv> oldlaptop people will pat for a professional training to migrate to the successor technology, if they have to
[05:01:26] <juliaEnv> pay
[05:01:50] <kee> juliaEnv: Do trade schools exist where you're from?
[05:02:12] <duuude> oldlaptop lol at 2000
[05:02:19] <juliaEnv> oldlaptop they should become masters at a conceptual level + masters at a practical level with at least one industry standard tool for the job (i.e. for requirments, for design, for construction, for testing, for maintenance, for operation)
[05:02:24] <oldlaptop> Ah, of course. The old credential becomes worthless, right.
[05:02:35] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 268 seconds)
[05:02:40] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:03:01] <juliaEnv> kee I'm in the best country in the world, in Sweden. Where are you from?
[05:03:09] <oldlaptop> Perhaps it's not a good idea to expend vast resources on knowledge and credentials that are likely to become worthless in the near future, and focus on the fundamentals that don't change instead.
[05:03:18] <kee> United Kingdom. Once the meanest country in the world, now kinda meh.
[05:03:23] <oldlaptop> *a good idea to focus...
[05:03:32] <juliaEnv> kee lol, I did my Master's in the UK
[05:03:47] <kee> I don't know how good uni SE is.
[05:03:52] <kee> But uni CS has far too much SE in it.
[05:04:04] <kee> To the point where the actual CS is pushed side.
[05:04:37] <kee> But we don't learn software engineering either. Just the surface-level, industry practices.
[05:05:01] <juliaEnv> kee it depends on which uni you choose. They tend to have a slightly different curriculum, some are also accredited by the BCS (british computer society) and some are not.
[05:05:15] <kee> juliaEnv: I concluded that the best uni in the country was Keele.
[05:05:17] <kee> Then I didn't go there.
[05:05:27] * vdamewood pets his kitty
[05:05:31] <juliaEnv> kee I believe Oxford is the best 
[05:05:34] <kee> For CS?
[05:05:38] <juliaEnv> kee yes
[05:06:04] <kee> Cambridge certainly isn't. Lemme check what the problems with Oxford were.
[05:06:21] <juliaEnv> kee check out their program: https://www.ox.ac.uk/admissions/undergraduate/courses/course-listing/computer-science
[05:06:21] <vdamewood> Too many commas
[05:06:22] <bayaz> Title: Computer Science | University of Oxford 
[05:06:32] *** Joins: jensen (~jensen@65.78.100.184)
[05:06:46] <kee> According to my spreadsheet, no problems with Oxford.
[05:07:00] * flaqoniun loses two oxen trying to ford the river
[05:07:01] <kee> I just didn't like Oxford (the place).
[05:07:20] <vdamewood> flaqoniun: Should have calked it and floated across.
[05:07:24] <kee> So yeah, Oxford is possibly the best uni for CS in the country.
[05:07:35] <kee> That website doesn't provide much info about their course.
[05:09:07] <juliaEnv> kee you can click through and get into more details, i.e. year 1 = http://www.cs.ox.ac.uk/admissions/undergraduate/courses/computer_science_core_1.html
[05:09:08] <bayaz> Title: Department of Computer Science - Undergraduate Admission 
[05:09:33] *** Joins: jabster28 (~jabster28@81.111.217.63)
[05:10:37] <kee> That just says what the topics are.
[05:10:39] <kee> Not how they teach them.
[05:11:02] <oldlaptop> You mean to tell me that the marketing on university websites isn't necessarily useful for evaluating the quality of their programs!?
[05:11:06] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[05:11:15] <kee> Yes. That's why I made a spreadsheet with every single uni in the country.
[05:11:21] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[05:11:21] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[05:11:21] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[05:11:26] <oldlaptop> Next you'll be telling me I can't take Unilever's word as to who's laundry detergent is best
[05:11:36] <oldlaptop> Or whose.
[05:11:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[05:11:39] <kee> It's Unilever's.
[05:11:47] <kee> They only pit Unilever detergents against each other.
[05:11:53] <kee> Unilever always wins.
[05:11:56] <oldlaptop> There is that problem too.
[05:12:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[05:12:23] <ProfSimm> https://www.youtube.com/watch?v=XScUYxLFt-U
[05:12:24] <juliaEnv> it's funny how I've skipped many of the theoretical computer science modules in my SW engineering education only to be forced to master them in practice while doing research.
[05:12:24] <bayaz> Title: why is this weird keyboard so good? 
[05:13:04] <oldlaptop> Hilarious, yes.
[05:13:17] <kee> juliaEnv: You understand them better than most, though.
[05:13:33] <kee> Unis don't teach theoretical CS topics as well as using them does.
[05:13:51] <kee> So far, at least.
[05:14:10] <flaqoniun> ProfSimm woah i want one
[05:14:56] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[05:15:01] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[05:15:08] *** Joins: flaqoniun (~F@32.211.211.39)
[05:16:32] *** Joins: Akiva (~Akiva@user/Akiva)
[05:16:38] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[05:16:43] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[05:16:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:17:17] <juliaEnv> kee yes, it's true. At work for different employers, I always had someone argue that what I propose to do isn't possible, so I had to code it all myself, then I handed it over and as a reward I always got fired and didn't understand why. Then I found a rule "never outshine your superior", or something along the lines, in 48 laws of power. And it became clear that others weren't used to in practice to coding parsers, DSLs, 
[05:17:17] <juliaEnv> ETLs, databases, or things like an automated convertor/transformer of all objects from Swing to JavaFX (using an agent that would load with the target jar and let you dump all Swing objects incl. layouts from memory, write an XML, and then transform it using XSLT into JavaFX). These are a few examples of what I got fired for.
[05:17:40] *** Joins: XV9 (~XV8@2601:5cb:c001:50::4a2c)
[05:18:00] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[05:18:14] *** Joins: jabster28 (~jabster28@81.111.217.63)
[05:20:47] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[05:21:11] *** Quits: XV8 (~XV8@2601:5cb:c001:50:eda7:4ec1:7fba:b4ce) (Ping timeout: 245 seconds)
[05:21:20] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 252 seconds)
[05:21:22] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[05:21:58] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:22:11] <juliaEnv> kee how they teach topics at Oxford (which btw. isn't where I went) can be found from university ranking for CS, for example at https://www.timeshighereducation.com/student/best-universities/best-universities-computer-science-degrees
[05:22:12] <bayaz> Title: Best universities for computer science degrees 2022 
[05:23:14] <juliaEnv> here is a better link https://www.timeshighereducation.com/world-university-rankings/2022/subject-ranking/computer-science#!/page/0/length/25/sort_by/rank/sort_order/asc/cols/stats
[05:23:14] <bayaz> Title: World University Rankings 2022 by subject: computer science 
[05:24:57] <Joanna> Hey juliaEnv how are your neighbors doing ?
[05:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[05:25:53] <juliaEnv> Joanna better. IDK what happened there, it seems the woman has left and the guy and the kid have stayed, and they're all quiet now
[05:26:07] <CodePoint> We should form a small team of 5 people and break Julian Asange out of the Embassy like a Star Trek rescue mission.  :)
[05:26:07] <Joanna> That’s strange..
[05:26:17] <juliaEnv> Joanna I think they were fighting and broke up
[05:26:38] <Joanna> Oh
[05:26:56] <juliaEnv> that also explains the noise 
[05:27:58] <Joanna> Have you talked to them?
[05:28:17] *** Joins: nicbk (~nicbk@user/nicbk)
[05:29:40] <juliaEnv> nope, in here people don't do a smalltalk
[05:30:25] <Joanna> That’s strange.
[05:30:27] <juliaEnv> Joanna before you joined, we were discussing which university is the best in the world for computer science
[05:30:49] <juliaEnv> Joanna did you study CS?
[05:30:52] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[05:31:29] <Joanna> I think all universities are scams and computer science is best learned by practice. I studied beginner programming at a junior college
[05:32:44] *** Joins: matacao (~eduardo@2804:14c:6322:9953::1004)
[05:34:27] <juliaEnv> Joanna by scam what do you mean that is wrong with them?
[05:34:32] *** Joins: epony (epony@user/epony)
[05:34:34] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Remote host closed the connection)
[05:34:57] <Joanna> They charge too much money for what they give
[05:35:12] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[05:36:22] <juliaEnv> Joanna in Germany and Sweden, they are free, for example.
[05:36:24] <Joanna> Colleges pretend they are teaching more than they are. It’s all just teaching the answers to the tests really.
[05:37:07] <Joanna> I’ve heard they decide who is smart enough to go to college at an early age in Germany
[05:37:35] <Joanna> It seems very rigid
[05:39:44] <psydroid> as in having various levels of secondary education?
[05:39:54] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[05:39:57] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[05:40:00] <psydroid> we have that too here in the Netherlands
[05:41:19] <Joanna> Formal education is a waste of time in my experience. The “smart kids” are sent to gymnasium the others go to lower level schools that aren’t intended to go to college
[05:41:43] <juliaEnv> Joanna teaching answers for a test is some lower level of education. At a bachelor's level, you learn the generally known facts about some subject. It has a breath and depth. At a master's level, you learn advanced concepts as you specialize in some subtopica and you slightly extend existing knowledge on a topic of your choice. And at a doctor's level you learn philosophy and research, so that you can be an actual 
[05:41:43] <juliaEnv> scientist and undertake research projects during which you answer research questions and advance the existing state of the art.
[05:41:52] <Joanna> I forgot names of the others I remember there were 3 different schools
[05:42:20] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:42:40] <juliaEnv> Joanna in the UK, the levels of education are the following: https://en.wikipedia.org/wiki/National_Vocational_Qualification
[05:42:40] <bayaz> Title: National Vocational Qualification - Wikipedia 
[05:42:51] <Joanna> juliaEnv: I know how it works I double majored in chemistry and physics before I became interested in programming
[05:43:49] <juliaEnv> Joanna some people who majored in chemistry and physics cook meth (bad joke)
[05:44:32] <juliaEnv> Joanna what do you code? Is it something related to chemistry and physics?
[05:45:00] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[05:46:03] <Joanna> Not really.
[05:46:11] <juliaEnv> so what do you code?
[05:46:29] <Joanna> Sqlite db browser
[05:46:56] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:46:59] <juliaEnv> a web app?
[05:47:02] <Joanna> I’ve forgotten most of what I was taught in college
[05:47:07] <Joanna> Desktop
[05:47:13] <juliaEnv> in Java?
[05:48:14] <ornxka> Joanna: this one? https://github.com/sqlitebrowser/sqlitebrowser
[05:48:15] <bayaz> Title: GitHub - sqlitebrowser/sqlitebrowser: Official home of the DB Browser for SQLite (DB4S) project. Previously known as "SQLite Database Browser" and "Database Browser for SQLite". Website at: 
[05:49:04] <juliaEnv> cpp with Cute :)
[05:49:44] <Joanna> Nope
[05:49:57] <juliaEnv> many years ago, I've coded an alarm clock / mp3 player (a tray app) for *NIX using Qt and mplayer.h
[05:50:44] <Joanna> I think I’ve used that one before
[05:50:45] <juliaEnv> what nope? There is cpp and I see QDialog which is QT
[05:51:11] <juliaEnv> or maybe you code in PHP and are afraid to mention it?
[05:51:13] <Joanna> My project isn’t opensource
[05:51:38] <juliaEnv> does it have a big market share?
[05:51:40] <epony> you mean you programmed a Windows tray applet on KDE
[05:52:51] <Joanna> Nope
[05:53:34] <epony> Unix is not about tray applications ;-) so it was a Qt practice, not *NIX
[05:53:47] <epony> desktoys have "nothing" to do with UNIX
[05:54:13] <epony> (wrong programming paradigm, principles and design choices for a desktop suite)
[05:55:14] <epony> but you probably learned a good deal about projects on Linux ;-)
[05:56:07] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[05:56:33] <ornxka> if the filesystem starts with / its unix
[05:56:51] <ornxka> but if it starts with C:\ its windows
[05:57:33] <epony> it's more about targetting POSIX and picking up the correct application design principles for interface independent implementation.. but that's another class of portability
[05:57:57] <ornxka> ive been using *****nix for fifteen years and to this day have no idea what a posix is or where i might find one
[05:58:12] <flaqoniun> what about android when there is no filesystem
[05:58:28] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[05:58:29] <epony> which captive models of applications don't need to care about, which is what "platformised" applications are about
[05:59:13] <juliaEnv> orkim you mean POSIX - the portable operating system interface. It's a standard that defines the OS APIs, etc. https://en.wikipedia.org/wiki/POSIX
[05:59:14] <bayaz> Title: POSIX - Wikipedia 
[05:59:33] <ornxka> flaqoniun: are you sure it doesnt have a fs? my understand is that it still has one its just weird
[05:59:38] <juliaEnv> orkim you may not realize it, but if you code something in C, for example, you are using many POSIX APIs
[06:00:18] <flaqoniun> you can fake one, i mean from an app's perspective, there is a linux filesystem running the OS
[06:00:53] <flaqoniun> unless they've fixed is since years ago, the NDK rquired packing all the data objects into a flat file
[06:01:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:01:45] <ornxka> oh you mean, the app runtime doesnt like filesystems.. ive never done any android dev, i just know if you do adb shell you can see a vaguely recognizable unix filesystem
[06:02:38] <epony> the above is not intended as a discouragement from creating GUI applications, just an encouragement for finding more about application design for portable and reliable (system) interfaces that are not locked into some particular toolkit and template of high overhead minimal use componentry of graphic interfaces
[06:03:14] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[06:04:02] <juliaEnv> if you were creating a service-oriented real-time data analysis framework, would you do a competitive analysis as on https://www.atlassian.com/software/confluence/templates/collections/product-managers to first understand what other frameworks there are and what their features are?
[06:04:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:05:14] <juliaEnv> the framework would be a product that is meant to make it easier for Java developers to do real-time analytics.
[06:05:16] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Remote host closed the connection)
[06:05:19] <epony> what are your real goals and objective, if they are like that of the other application vendors and distributors.. then yes, but otherwise and in general no, because that would mean incompetence and replication of other application feature for feature
[06:06:11] <epony> you can gain competence and replicate them still, but you will not be able to avoid replicating their hidden goals and objectives too
[06:06:14] <juliaEnv> its success would be measured by how many Java developers use it
[06:07:26] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:08:50] <epony> so "compelling" (no other such) and "accessible" (just as others) and "featureful" (problem and model replication) and "popularity" (because it's famous for being popular)
[06:09:26] <epony> no way to miss the objectives since others have the same
[06:09:55] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[06:10:07] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Remote host closed the connection)
[06:10:19] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[06:11:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[06:11:48] <epony> now, what would make it unique is a domain specific language and interactive report preparation from small subset of data and using that as a project to them process the large superset of data
[06:13:02] <epony> "then" add modularity and extensions capability and pluggable import and export tooling, reliable serialisation and robustness at 10-100 GB files and you're in business
[06:15:26] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[06:16:01] <epony> if you evade disasters like log4j.. (not just carefully distrusting legacy versions and avoiding their pitfalls, but your project not becoming the next such megafailure).. you might have a long term viable advantages
[06:17:20] *** Quits: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu) (Remote host closed the connection)
[06:17:27] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[06:18:18] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:19:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Read error: Connection reset by peer)
[06:19:32] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[06:20:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:22:36] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[06:24:27] <epony> ASF is strong on the Java projects, see what they have and if you can build on some of those ideas and projects
[06:27:31] <epony> https://en.wikipedia.org/wiki/Apache_Software_Foundation#Projects ; https://en.wikipedia.org/wiki/List_of_Apache_Software_Foundation_projects#Active_projects
[06:27:31] <bayaz> Title: The Apache Software Foundation - Wikipedia 
[06:27:32] <bayaz> Title: List of Apache Software Foundation projects - Wikipedia 
[06:28:07] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:28:36] <epony> https://en.wikipedia.org/wiki/Apache_Drill#Features
[06:28:36] <bayaz> Title: Apache Drill - Wikipedia 
[06:39:46] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[06:39:48] *** Quits: zaher_ (~zaher@37.48.184.118) (Ping timeout: 272 seconds)
[06:44:09] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[06:44:11] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[06:44:24] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[06:44:24] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[06:44:24] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[06:46:19] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[06:47:35] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f) (Quit: Client closed)
[06:51:30] <Jong> Suppose you're training a dataset and trying to reach a metric on the validation set.  If you try every single combination of hyperparameters / lr rate etc you're bound to find one combo that hits the metric. But that doesn't mean good generalization because it would be unlikely that no combination of the infinite that exist hits the metric by sheer chance. Is there a word for this?  I'm looking for a word so I can use one word instead of a
[06:51:30] <Jong>  paragraph to communicate this point.
[06:55:23] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:55:56] <epony> optimum, constraint programming
[06:57:06] <knusbaum> Jong, Assuming you're talking amout ML, I'm not sure you're right. Maybe you're talking about parameters that are "overfit" for a training and validation set?
[06:58:59] <epony> https://en.wikipedia.org/wiki/Constraint_programming#Constraint_optimization_problem
[06:59:00] <bayaz> Title: Constraint programming - Wikipedia 
[07:00:38] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:01:57] <epony> https://en.wikipedia.org/wiki/Declarative_programming#Subparadigms
[07:01:57] <bayaz> Title: Declarative programming - Wikipedia 
[07:02:43] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[07:03:28] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[07:04:02] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[07:04:49] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Client Quit)
[07:05:39] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 260 seconds)
[07:09:27] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[07:09:44] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[07:10:45] *** Joins: jabster28 (~jabster28@81.111.217.63)
[07:13:13] *** Joins: jack_rabbit (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[07:13:14] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 260 seconds)
[07:13:41] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[07:14:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[07:15:00] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[07:15:38] *** Joins: Inline__ (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de)
[07:17:06] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[07:17:49] *** Quits: Inline (~Inline@p200300cd4709ad00c6efe95d186eec52.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:18:30] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Ping timeout: 252 seconds)
[07:18:54] *** Joins: smallville7123 (uid491282@id-491282.hampstead.irccloud.com)
[07:21:23] <smallville7123> Is stupid how diskdril does not let you recover scanned files but DOES let you make a mountable byte-by-byte backup of a partition which CAN be mounted and thus recover your files
[07:22:16] <smallville7123> Also I managed to backup my data :)
[07:23:05] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:24:32] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:28:24] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 252 seconds)
[07:28:48] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:28:48] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:29:35] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[07:30:27] *** Quits: jack_rabbit (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Ping timeout: 256 seconds)
[07:31:05] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[07:31:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[07:35:13] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[07:36:17] <flaqoniun> recovering stuff from $filesystembits  is tricky enough, then you have to know how to parse file formats, or at least the headers
[07:37:16] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:37:26] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[07:37:42] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f993:6a7c:72e3:a108)
[07:38:51] *** Joins: password2 (~password8@user/password2)
[07:39:16] *** Joins: Tahr-user (~puppy@71.50.50.51)
[07:39:57] *** Quits: monr0e (~monr0e@host-81-179-96-15.static.as13285.net) (Ping timeout: 240 seconds)
[07:40:04] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[07:41:12] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[07:47:03] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:47:17] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[07:49:50] *** Quits: Tahr-user (~puppy@71.50.50.51) (Quit: Quitting)
[07:50:43] *** Joins: Tahr-user (~puppy@71.50.50.51)
[07:51:21] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[07:51:30] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 252 seconds)
[07:51:58] *** Quits: Tahr-user (~puppy@71.50.50.51) (Client Quit)
[07:52:44] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6)
[07:53:04] *** [_] is now known as [itchyjunk]
[07:56:47] *** Joins: jabster28 (~jabster28@81.111.217.63)
[08:00:52] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[08:00:52] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 272 seconds)
[08:02:08] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[08:02:30] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 252 seconds)
[08:03:10] <Jong> knusbaum what the fact that one can find a pattern that happens to persist throughout historical stock market data? That's possible because there are an infinite amount of patterns. One by random chance will inevitably be found that works on historical data.  
[08:03:19] <Jong> what *about
[08:04:23] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[08:04:32] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Client Quit)
[08:05:40] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[08:08:02] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[08:10:18] *** Joins: jabster28 (~jabster28@81.111.217.63)
[08:10:58] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[08:12:54] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[08:18:02] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[08:20:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:21:48] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:22:03] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:23:52] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[08:27:43] *** Joins: pmercado (~pmercado@186.107.58.34)
[08:32:28] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:32:48] *** Quits: matacao (~eduardo@2804:14c:6322:9953::1004) (Quit: Konversation terminated!)
[08:34:16] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[08:34:56] *** Joins: beyondhatch (~beyondhat@98.186.198.230)
[08:35:12] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:35:15] *** Quits: beyondhatch (~beyondhat@98.186.198.230) (Client Quit)
[08:37:26] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:38:09] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:39:30] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[08:41:47] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457) (Remote host closed the connection)
[08:42:10] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457)
[08:42:25] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[08:43:15] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[08:43:53] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[08:44:05] *** Joins: flaqoniun (~F@32.211.211.39)
[08:44:32] *** Joins: jabster28 (~jabster28@81.111.217.63)
[08:45:35] *** Quits: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) (Quit: Going offline, see ya! (www.adiirc.com))
[08:51:17] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[08:51:23] <sonny> which I could find a stock pattern
[08:51:44] <sonny> I wonder if that just means a similar historical even is repeating
[08:52:06] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[08:55:07] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:55:27] *** Joins: jabster28 (~jabster28@81.111.217.63)
[08:57:37] <flaqoniun> buy popcorn, their product is mostly air!
[09:00:12] <flaqoniun> and heavily subsidized by the big G
[09:00:21] <flaqoniun> you can't lose
[09:01:08] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[09:01:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[09:07:19] *** Joins: Tahr-user (~puppy@71.50.50.51)
[09:07:57] *** Quits: soapsudsxx (~soapsudsx@141.193.188.145) (Remote host closed the connection)
[09:09:03] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[09:10:30] *** Joins: cation (cation@user/cation)
[09:11:01] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:16:09] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:16:48] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:17:28] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[09:18:37] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:19:20] <PlanckWalk> Ugh, how irritating: If I run "jar uvf my.jar FileThatExists.class FileThatDoesnt.class" then jar *says* that the second doesn't exist, and that it updated the first.  But it lies: it doesn't update the first.
[09:20:23] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[09:20:32] <PlanckWalk> That was a waste of 3 hours :-p
[09:21:55] *** Quits: password2 (~password8@user/password2) (Ping timeout: 260 seconds)
[09:23:51] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Remote host closed the connection)
[09:24:16] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[09:25:40] *** Joins: jabster28 (~jabster28@81.111.217.63)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:21] *** Joins: Jaami (~Jaami@182.185.162.213)
[09:32:17] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[09:33:53] <sonny> rip
[09:34:25] <sonny> worth reporting?
[09:34:34] <sonny> PlanckWalk ^
[09:35:56] *** Quits: Compy (~compy@user/compy) (Read error: Connection reset by peer)
[09:37:19] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 260 seconds)
[09:37:55] *** Quits: Rathskalon (uid65285@id-65285.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:41:15] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[09:46:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:46:29] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[09:46:30] <Jong> When running a program that shows time elapsed per iteration of a loop, sometimes the number updates on a line that keeps updating, and other times a new line is printed constantly resulting in thousands of lines of time elapsed values. Is there a name for the two styles ? 
[09:47:27] <Jong> found it
[09:47:28] <PlanckWalk> sonny: Yeah, it probably is.  I guess the millions of tools that use jar never hit that particular corner case.
[09:47:30] <Jong> it's called a carriage return
[09:48:00] <HaMsTeRs> Hello everyone, i got one quick question: is there anything similar to powershell clixml in bashscript?
[09:49:19] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:50:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 260 seconds)
[09:50:07] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:50:26] <sonny> PlanckWalk they use IDE tools! :P
[09:51:15] <sonny> HaMsTeRs not sure what that is but I doubt there is any xml tools
[09:51:22] <sonny> you can use python instead
[09:52:01] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[09:52:24] <HaMsTeRs> thanks, but the dev env doesn't have py
[09:52:44] <sonny> oh, rip
[09:52:47] <epony> it must have Perl and CPAN then
[09:52:51] <HaMsTeRs> lol
[09:53:05] <sonny> yeah perl probably has xml
[09:53:33] <HaMsTeRs> newp
[09:53:50] <HaMsTeRs> it's a closed network without any access to internet, neither intranet
[09:53:51] <epony> otherwise, you can cut yourself back in the cryptolocker OS universe and keep updating malware definitions with.. a premium "first responders" channel
[09:54:04] <HaMsTeRs> almost like an airgap
[09:54:15] <sonny> so no powershell or other scripting languages?
[09:54:31] <epony> that's nice, where are you getting your XMLs from, the scanner?
[09:55:12] <epony> install activeperl or strawberry perl and get going at double pace..
[09:55:35] <epony> XML in shell is a "kluge"
[09:56:05] <sonny> you could install go if you are desperate I guess
[09:56:09] <sonny> it's a static binary
[09:56:27] <epony> also, check what Cygwin can offer you
[09:56:56] <sonny> it's not a windows env if it only offers bash I think
[09:57:13] <epony> powershell is just on WIN/DOS
[09:57:26] <sonny> nah, it's cross platform now
[09:57:32] <epony> non-portable, non-standard, incompatible..
[09:57:37] <epony> the shit it is ;-)
[09:57:42] <sonny> ok
[09:58:19] <epony> oh well.. what do you know.. you're right
[09:58:40] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[09:58:43] <sonny> you can do cool stuff like remote powershell sessions
[09:58:48] <epony> https://en.wikipedia.org/wiki/PowerShell Platform .NET and on select Linuzes
[09:58:49] <bayaz> Title: PowerShell - Wikipedia 
[09:58:57] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[09:59:22] *** Joins: flaqoniun (~F@32.211.211.39)
[09:59:47] <no-n> just MS trying to stay relevant 
[10:00:08] <sonny> I don't think they are trying (lol)
[10:00:16] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[10:00:31] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[10:00:32] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[10:00:32] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[10:00:40] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[10:00:44] *** Quits: KDDLB (kevin@user/kddlb) (Remote host closed the connection)
[10:00:45] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:01:17] <epony> shocking..
[10:02:14] *** Joins: analoq (~yashi@user/dies)
[10:02:22] <sonny> I dunno how to secure any of these servers ... I'd probably just pick freebsd or openbsd
[10:02:31] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 260 seconds)
[10:03:05] <sonny> set permissions and firewalls properly, keep packages up to date
[10:03:06] <epony> we just don't have XML on UNIX
[10:03:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:03:18] <epony> not part of the system design
[10:04:01] <sonny> there's gonna be XML somewhere
[10:04:11] <sonny> doesn't matter if it's in UNIX or not
[10:04:25] <epony> extra applications that come from the SGML portal
[10:04:43] *** Joins: jazzy (~jaziz@user/jaziz)
[10:04:56] <epony> it's just a serialisation format and a markup language (spec)
[10:05:34] *** Joins: KDDLB (kevin@user/kddlb)
[10:05:41] <epony> I think Apache has some resemblance to it in its configuration file..
[10:05:48] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[10:06:03] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[10:06:04] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[10:06:04] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[10:06:15] <sonny> xml is pretty nutty when you have to validate against a schema that is held in some remote place
[10:06:57] <sonny> (that won't be abused)
[10:07:37] <sonny> just put all the info in the data once
[10:07:41] <epony> https://en.wikipedia.org/wiki/Apache_HTTP_Server  Written inC, XML
[10:07:41] <bayaz> Title: Apache HTTP Server - Wikipedia 
[10:08:33] <sonny> I wonder if anyone has compared vulnerabilities in web servers made with gc languages
[10:08:45] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[10:08:50] <sonny> C for applications is insane
[10:08:58] <sonny> even 20 years ago lol
[10:08:59] <epony> https://www.openhub.net/p/apache/analyses/latest/languages_summary
[10:09:00] <bayaz> Title: The Apache HTTP Server Open Source Project on Open Hub: Languages Page 
[10:09:01] *** Joins: password (~password@user/password2)
[10:09:33] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[10:09:52] <epony> Apache is not the "security" first approach to application servers ;-)
[10:10:38] <sonny> compilers being a dependency would make me squirm as a project manager
[10:10:42] <sonny> multiple*
[10:11:20] <sonny> if I can separate them as loadable modules then it's not bad
[10:11:36] <sonny> projects like graalvm are interesting
[10:11:52] <sonny> (then again loadable modules is probably a security disaster)
[10:12:09] *** Joins: jabster28 (~jabster28@81.111.217.63)
[10:12:26] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 260 seconds)
[10:13:07] *** Joins: audio (~audio@user/audio)
[10:13:12] <epony> It's "a patchy" (apache) server after all..
[10:13:14] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[10:13:47] <sonny> ha
[10:17:59] *** Quits: smallville7123 (uid491282@id-491282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:18:18] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[10:19:37] <sonny> I think there's only one way to run untrusted code, give it a spec or audit it
[10:22:03] <sonny> should probably do both, the second one is costly
[10:23:46] *** Joins: jabster28 (~jabster28@81.111.217.63)
[10:24:01] <sonny> if you have an app store the apps should be audited?
[10:24:53] <sonny> seems like easy money tbh
[10:25:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:25:38] <sonny> request and audit to be featured in our highest tier of apps
[10:25:44] <sonny> s/and/an/
[10:27:26] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:30:05] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[10:30:29] <lf94> so I'm a mad man
[10:30:31] <lf94> http://0x0.st/oNGL.png
[10:30:32] <bayaz> Type: image/png Size: 533.9 kB 
[10:30:40] <lf94> This is all in KiTTY terminal
[10:31:24] <sonny> mad about what?
[10:31:40] <sonny> and man unix people are weird lol
[10:31:52] <sonny> terminals to play video? lmao
[10:32:36] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:32:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:33:47] <lf94> "mad man" -> crazy
[10:33:53] <lf94> like mad scientist
[10:33:57] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[10:34:26] *** Joins: wrongt (~wrongt@user/wrongt)
[10:35:10] *** Joins: Akiva (~Akiva@user/Akiva)
[10:38:32] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:38:41] *** Joins: vysn (~vysn@user/vysn)
[10:40:09] *** Joins: jabster28 (~jabster28@81.111.217.63)
[10:41:45] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:42:48] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[10:43:23] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[10:44:00] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[10:46:17] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[10:47:06] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:47:28] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[10:47:30] *** Quits: suss` (~user@user/suss) (Ping timeout: 252 seconds)
[10:50:14] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:50:46] *** Quits: widp (~widp@124.123.106.12) (Ping timeout: 245 seconds)
[10:51:12] *** Joins: widp (~widp@2405:204:5702:a6ab::2879:e8ad)
[10:51:22] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[10:52:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:56:31] <TheLinuxNerd> lf94, respect!
[10:56:45] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:58:18] *** Joins: rsx (~dummy@ppp-188-174-146-62.dynamic.mnet-online.de)
[10:59:18] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:01:01] *** Quits: wrongt (~wrongt@user/wrongt) (Remote host closed the connection)
[11:03:44] *** Joins: Pickchea (~private@user/pickchea)
[11:03:47] <audio> can anyone help? https://stackoverflow.com/questions/71597959/tensorflow-how-can-i-keep-from-running-out-of-memory-when-processing-300k-image
[11:03:49] <bayaz> Title: Tensorflow: How can I keep from running out of memory when processing 300k images? 
[11:05:15] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[11:06:12] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[11:06:53] *** Joins: jabster28 (~jabster28@81.111.217.63)
[11:08:58] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[11:09:12] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[11:11:20] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[11:12:53] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:12:59] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[11:13:42] <Raziel> audio, download more ram
[11:13:57] <Raziel> or, on a more serious note, reduce the batch size?
[11:16:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 260 seconds)
[11:18:20] <audio> Raziel, i reduced the batch size to 100. with it. the np.arrays max out at 100 items. do you know numpy enough to be able to help me with that?
[11:20:47] <Raziel> unfortunately I don't really know numpy specific stuff, and I'm going to sleep so I can't look much up right now either :p
[11:20:57] <Raziel> try to look for examples of how to handle batching properly in numpy
[11:22:23] <Raziel> your goal is to have all those images batched in such a way that each batch does fit in your memory. preferably as close to maxing it as possible, for the sake of getting through them fast too :p
[11:24:06] *** Joins: flaqoniun (~F@32.211.211.39)
[11:24:15] *** Joins: sebn (~seb@c90-142-43-192.bredband.tele2.se)
[11:28:22] *** Joins: exgirl (uid545763@id-545763.tinside.irccloud.com)
[11:30:42] *** Quits: jensen (~jensen@65.78.100.184) (Quit: WeeChat 3.4.1)
[11:31:27] *** Quits: sebn (~seb@c90-142-43-192.bredband.tele2.se) (Quit: Leaving)
[11:32:31] *** exgirl is now known as suss
[11:32:47] *** Quits: suss (uid545763@id-545763.tinside.irccloud.com) (Client Quit)
[11:32:59] *** Joins: suss (uid545763@user/suss)
[11:33:31] *** suss is now known as exgirl
[11:34:03] *** Joins: sebn (~sebn@c90-142-43-192.bredband.tele2.se)
[11:35:54] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 252 seconds)
[11:36:38] *** Quits: wauterboi (~wauterboi@185.65.135.248) (Ping timeout: 268 seconds)
[11:36:55] *** Quits: widp (~widp@2405:204:5702:a6ab::2879:e8ad) (Killed (NickServ (GHOST command used by widp`!~user@124.123.81.227)))
[11:36:57] *** Joins: Enitin (~Enitin@82.180.145.227)
[11:42:58] *** Quits: rwb (~augh@alogs.space) (Excess Flood)
[11:43:10] *** Joins: rwb (~augh@alogs.space)
[11:43:17] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[11:44:00] *** Joins: user51 (~user51@77.124.35.94)
[11:44:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[11:44:48] *** rwb is now known as rb
[11:44:59] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[11:45:48] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[11:46:38] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:47:13] *** Joins: dvanloon1 (~dvanloon@user/dvanloon)
[11:47:31] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[11:47:31] *** dvanloon1 is now known as dvanloon
[11:49:53] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[11:50:53] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7a46) (Ping timeout: 250 seconds)
[11:58:19] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[11:58:34] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[11:58:35] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[11:58:35] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[11:59:00] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[12:07:47] *** Joins: jabster28 (~jabster28@81.111.217.63)
[12:07:48] *** Joins: bob518 (~bob518@cpe-66-66-96-218.rochester.res.rr.com)
[12:08:19] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[12:09:50] *** Joins: widp (~widp@124.123.105.73)
[12:11:15] *** Joins: SerialSmile (~SerialSmi@37-144-215-48.broadband.corbina.ru)
[12:13:41] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[12:14:50] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[12:17:01] *** Quits: widp (~widp@124.123.105.73) (Read error: Connection reset by peer)
[12:17:21] *** Joins: widp (~widp@2406:7400:73:9e1b:7de5:e0e7:c0a:afe0)
[12:17:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[12:18:21] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:20:02] *** Quits: widp (~widp@2406:7400:73:9e1b:7de5:e0e7:c0a:afe0) (Read error: Connection reset by peer)
[12:20:10] *** Joins: palasso (~palasso@user/palasso)
[12:20:20] *** Joins: widp (~widp@124.123.105.73)
[12:21:25] *** Joins: eson123 (~whatever@118.69.128.37)
[12:22:23] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:22:34] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[12:23:16] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[12:23:22] *** Quits: eson123 (~whatever@118.69.128.37) (Client Quit)
[12:23:34] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[12:25:24] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[12:25:47] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[12:25:52] *** Joins: wyre (~wyre@user/wyre)
[12:26:55] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:27:30] *** Quits: Jaami (~Jaami@182.185.162.213) (Ping timeout: 272 seconds)
[12:27:37] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[12:28:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:28:25] *** Quits: Tahr-user (~puppy@71.50.50.51) (Quit: Quitting)
[12:30:07] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[12:32:35] *** Joins: aradesh (~aradesh@user/aradesh)
[12:36:58] *** Joins: Jaami (~Jaami@182.185.154.52)
[12:38:03] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[12:45:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:47:06] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[12:47:32] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Remote host closed the connection)
[12:47:41] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[12:48:01] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Remote host closed the connection)
[12:48:17] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[12:49:07] *** Joins: Sadale (~Sadale@user/sadale)
[12:49:40] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:50:22] *** Joins: Rounin (~david@84.212.130.215)
[12:54:28] *** Joins: rtypo (~alex@user/rtypo)
[12:56:15] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:56:50] *** Quits: sebn (~sebn@c90-142-43-192.bredband.tele2.se) (Remote host closed the connection)
[12:58:24] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[12:59:57] *** Joins: VoidSync (~sync@user/voidsync)
[13:00:07] *** Joins: null4bl3 (~null4bl3@192.38.81.6)
[13:01:46] *** Joins: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo)
[13:01:58] *** Quits: SerialSmile (~SerialSmi@37-144-215-48.broadband.corbina.ru) (Quit: Leaving)
[13:02:39] <null4bl3> hi guys. what do you call the concept of a sql "join table"? not the join query, but the concept of having a table that solely consists of keys from other tables and thereby joining them.
[13:03:10] <null4bl3> all i seem to be able to find with my googling is SQL query commands 
[13:03:59] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[13:04:20] *** Joins: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[13:05:18] <mobidrop> you said it yourself, a many to many join table
[13:06:37] <Trashlord> is it fine to have a CV / resume as an image file, rather than a document (doc, pdf, etc) file?
[13:07:20] <vdamewood> Trashlord: At the very least, imags aren't as accessible as the others, since assistive technologies can't read them.
[13:07:28] <Trashlord> hmm, yeah
[13:07:48] *** Joins: jabster28 (~jabster28@81.111.217.63)
[13:08:08] *** Joins: Jaami2 (~Jaami@182.185.167.201)
[13:08:45] *** Quits: Jaami (~Jaami@182.185.154.52) (Ping timeout: 256 seconds)
[13:08:51] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[13:09:20] <vdamewood> Trashlord: I guess that also applies to the keyword scanners that HR departments use.
[13:11:36] *** Quits: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Ping timeout: 252 seconds)
[13:12:16] *** Joins: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu)
[13:13:47] <mercenary> null4bl3: we always called those 'link tables'
[13:13:48] <Trashlord> I'll just keep it as a doc
[13:14:19] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[13:15:00] *** Joins: rvalue (~rvalue@user/rvalue)
[13:15:24] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[13:17:05] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f993:6a7c:72e3:a108) (Ping timeout: 252 seconds)
[13:17:15] <null4bl3> mercenary, mobidrop thanks guys. from your feedback i located the term "junction tables" for providing the best search results. i did find a few videos stating that they should be avoided, but not explaining why. i always use them for everything, and i can't seem to imagine why i shouldn't. can you ?
[13:18:31] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[13:20:30] <mercenary> if there is a better way to represent an n:m (n>1,m>1) relationship besides changing the data model to not have n:m relations, I am all ears
[13:21:01] <merijn> EdwardIII: better way to represent them than what?
[13:21:19] *** Joins: jabster28 (~jabster28@81.111.217.63)
[13:23:39] *** Parts: DaPinkOne (~Dap@user/dap) (Leaving)
[13:24:30] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 272 seconds)
[13:27:00] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[13:28:29] *** Joins: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[13:28:41] *** Joins: shkurata (~shkurata@ptr-8riebuk3lxjk0l22r6z.18120a2.ip6.access.telenet.be)
[13:28:58] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:31:46] *** Joins: jabster28 (~jabster28@81.111.217.63)
[13:32:36] *** Quits: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[13:35:38] *** Joins: lunarkitty (uid501895@user/pyra)
[13:37:06] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[13:39:15] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[13:39:53] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 250 seconds)
[13:41:55] *** Joins: gitgood (~gitgood@80.2.33.110)
[13:44:27] *** Joins: sebn (~sebn@c90-142-43-192.bredband.tele2.se)
[13:44:36] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 252 seconds)
[13:45:24] *** Joins: jabster28 (~jabster28@81.111.217.63)
[13:49:34] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[13:51:17] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:51:40] *** Joins: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[13:52:18] <mobidrop> yay political messages in my testing tools... it prints #StandWithUkraine
[13:53:46] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[13:54:13] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[13:54:25] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 256 seconds)
[13:55:37] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[13:55:45] <piou> what tool?
[13:56:52] <mobidrop> PHPUnit
[13:57:15] *** Quits: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Quit: WeeChat 3.4.1)
[13:58:39] <jelly> nice
[14:00:44] <pyzozord> I'm trying to understand https://swtch.com/~rsc/regexp/nfa.c.txt, specifically the re2post function. I don't understsand the postfix notation that is the output of this function, it just seems like a bunch of . and | characters. Why does it encode things like * + and ? to . ?
[14:01:14] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Quit: Leaving)
[14:01:48] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[14:03:47] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Remote host closed the connection)
[14:03:47] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[14:04:33] *** Joins: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[14:04:47] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[14:05:01] *** Joins: Enitin (~Enitin@82.180.145.227)
[14:08:41] *** Joins: jabster28 (~jabster28@81.111.217.63)
[14:08:44] *** Joins: arch_angel (~arch-ange@user/arch-angel)
[14:08:56] *** Quits: arch_angel (~arch-ange@user/arch-angel) (Remote host closed the connection)
[14:09:06] *** Joins: opeerateur_ (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[14:09:37] *** Joins: plastico (~plastico@neomutt/plastico)
[14:09:42] *** Joins: KillerWasp (~KillerWas@user/killerwasp)
[14:09:45] *** Joins: Klinda (~superleag@user/klinda)
[14:10:39] <vdamewood> Squishy!
[14:10:41] <KillerWasp> hello random crashed pigeons guys
[14:12:25] <piou> * + and ? are not encoded to . they are inserted as is (line 82), this looks like an implementation of the Shunting-Yard algorithm https://blog.cernera.me/converting-regular-expressions-to-postfix-notation-with-the-shunting-yard-algorithm/
[14:12:29] <piou> pyzozord: ^
[14:13:37] * vdamewood eats a pigeon.
[14:14:52] *** Joins: newwebdev13 (~newwebdev@78.135.91.191)
[14:15:10] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[14:18:32] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:21:49] <pyzozord> piou: yes thanks I think my eyes slipped when reading that code to few lines below where = '.' happens
[14:22:41] *** Joins: Tazy (~Tazmainia@2001:1c02:170b:3d00::1012)
[14:22:51] *** Joins: jabster28 (~jabster28@81.111.217.63)
[14:23:09] <pyzozord> I thought it looked like shunting yard but I wasn't sure
[14:23:27] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:24:37] *** Joins: toulene9 (~toulene@user/toulene)
[14:25:09] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 250 seconds)
[14:25:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[14:25:49] *** toulene9 is now known as toulene
[14:25:56] *** Quits: opeerateur_ (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[14:27:37] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[14:28:00] * vdamewood puts icecream on pyzozord's code.
[14:28:20] <vdamewood> pyzozord: Is the code better now?
[14:28:41] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 268 seconds)
[14:29:01] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:29:02] *** Quits: widp (~widp@124.123.105.73) (Read error: Connection reset by peer)
[14:29:12] *** Joins: widp (~widp@124.123.105.73)
[14:29:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:29:29] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f993:6a7c:72e3:a108)
[14:29:29] *** Quits: widp (~widp@124.123.105.73) (Read error: Connection reset by peer)
[14:29:52] *** Joins: widp (~widp@124.123.105.73)
[14:30:04] *** Joins: baffodoro (~raffaem@45.91.20.242)
[14:30:24] <pyzozord> hmmm I is more sweet and sticky for sure. It's going to depend on the taste of iceream if it's better though
[14:30:32] <pyzozord> I=it
[14:31:00] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 272 seconds)
[14:31:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.224)
[14:32:27] *** Joins: jabster28 (~jabster28@81.111.217.63)
[14:34:18] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:35:34] <pyzozord> pistachio or vanilla, other kinds won't work
[14:36:53] <pyzozord> looks like ken thompson had absolutely no interest in data locality
[14:37:26] <pyzozord> I see him mallocking 4 int structs one by one
[14:37:51] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[14:37:56] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 268 seconds)
[14:38:26] <piou> is that old code? data locality took a while before people understood how impactful it is on performance
[14:39:27] <GeDaMo> If this is that regex code, I don't think it was written by Ken Thompson, it's based on some IBM asm he wrote in the 60s
[14:40:24] *** Quits: password (~password@user/password2) (Remote host closed the connection)
[14:41:08] <pyzozord> hmm yes "Copyright (c) 2007 Russ Cox." looks like Ken didn't write this
[14:41:53] <GeDaMo> "Thompson's construction creates IBM 7094 machine code"
[14:42:59] <pyzozord> I'm not sure what that means, I heard that "thompson's construction" is some kind of converting algorithm that converts nfa to dfa or something like that
[14:43:11] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[14:43:26] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[14:44:10] <KillerWasp> a pigeon say piou piou
[14:44:14] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[14:44:43] *** Joins: jabster28 (~jabster28@81.111.217.63)
[14:44:47] <GeDaMo> I think in this case, it just refers to the program he wrote
[14:44:47] <pyzozord> looks like the Ken wrote the original in algol 60 https://www.oilshell.org/archive/Thompson-1968.pdf
[14:44:48] <bayaz> Type: application/pdf Size: 529.8 kB 
[14:45:03] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[14:45:48] <GeDaMo> I like the switch thing there :P
[14:46:13] <pyzozord> yeah I think that's all it
[14:46:14] <pyzozord> https://en.wikipedia.org/wiki/Thompson%27s_construction
[14:46:14] <bayaz> Title: Thompson's construction - Wikipedia 
[14:46:20] <GeDaMo> switch switch : = alpha, juxta, closure, or, eof ; ... goto switch[index(char)J;
[14:47:05] <beaky> nice so they had switch statemnets back then
[14:47:14] <beaky> and closures
[14:47:36] <no-n> hi beaky i'm pony
[14:47:52] <GeDaMo> I think 'closure' is just a label in this instance
[14:48:28] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-dc1a-c263-28ec-2555.res6.spectrum.com)
[14:48:35] *** Quits: wildo (~lain6141@202.180.111.143) (Ping timeout: 260 seconds)
[14:48:53] <beaky> hi pony
[14:51:01] <beaky> today i think i will make more progress in my tea database i have discovered a brilliant way to index my tea names but it will consume more space it is called a reverse index using elias fano encoded integers 
[14:51:19] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:51:28] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[14:51:35] <beaky> using elias fano you can sort a million 32-bit integers in under 2 mb of ram so they are a solid choice
[14:51:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:52:13] <beaky> each integer = 1 tea label
[14:52:28] <beaky> and also my tea notes 
[14:52:55] <beaky> because my tea tags have low cardinality i will just use the ordinary simple bitmap index
[14:53:09] *** Quits: bob518 (~bob518@cpe-66-66-96-218.rochester.res.rr.com) (Quit: Client closed)
[14:53:26] <beaky> now to implement all of this in idiomatic rust im sure there's already a rust crate for them
[14:53:40] <no-n> lol
[14:54:09] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[14:54:17] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:55:29] *** Joins: wyre (~wyre@user/wyre)
[14:56:00] *** Quits: w0ng (~w0ng@185.218.127.23) (Ping timeout: 260 seconds)
[14:56:03] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 260 seconds)
[14:58:46] *** Joins: BUSY (~BUSY@user/busy)
[15:01:21] <beaky> nice turns out there is https://lib.rs/crates/elias_fano_rust
[15:01:23] <bayaz> Title: elias_fano_rust ? Rust library // Lib.rs 
[15:03:23] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[15:03:33] *** Joins: w0ng (~w0ng@185.218.127.24)
[15:05:28] *** Joins: jabster28 (~jabster28@81.111.217.63)
[15:09:53] <no-n> :O
[15:10:55] *** Quits: jnnnnnnnnn (~jnnnnnnnn@c-2172524e.016-77-73746f43.bbcust.telenor.se) (Read error: Connection reset by peer)
[15:11:30] *** Joins: jnnnnnnnnn (~jnnnnnnnn@c-2172524e.016-77-73746f43.bbcust.telenor.se)
[15:12:13] *** Quits: licksjp_ (~licksjp@pkos009-160.kcn.ne.jp) (Ping timeout: 240 seconds)
[15:13:47] *** Joins: licksjp (~licksjp@pkos009-160.kcn.ne.jp)
[15:14:15] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457) (Ping timeout: 252 seconds)
[15:14:50] *** Quits: licksjp (~licksjp@pkos009-160.kcn.ne.jp) (Client Quit)
[15:18:30] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Ping timeout: 272 seconds)
[15:19:21] *** Joins: password (~password@user/password2)
[15:21:33] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[15:21:34] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[15:21:59] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[15:22:29] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 256 seconds)
[15:25:03] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[15:26:13] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[15:28:38] *** Joins: tolot (~tolot@dynamic-078-049-154-014.78.49.pool.telefonica.de)
[15:30:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[15:31:50] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:32:56] *** Joins: volume_8 (~f@snf-23141.ok-kno.grnetcloud.net)
[15:33:22] *** Quits: regedit (uid150526@id-150526.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:34:15] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[15:34:23] *** Quits: RaGE_Syria (~thelounge@47-197-61-95.tamp.fl.frontiernet.net) (Ping timeout: 256 seconds)
[15:35:06] <volume_8> Hello everyone. I'm looking for an efficient algorithm where given arbitrary data (e.g. 2MB of bytes) it chunks it into a list of 10-bit chunks. The interesting thing of course is that the chunks are not byte aligned, and hence it takes some gnarly bit tweedling, carry keeping and aligning to do with a naive algorithm. Is there a clean and fast method that systems out there implement to do 
[15:35:12] <volume_8> non-byte-aligned stuff? I'm looking to implement this in standard langs like golang or rust. Thanks!!!!
[15:35:21] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[15:35:45] <volume_8> Where can I look to get some inspiration on such methods and algorithms?
[15:36:32] *** Joins: Sadale (~Sadale@user/sadale)
[15:37:32] <Bou> the lowest common multiple of 8 and 10 is 40, so you can fit 5 bytes in 4 of these 10-bit numbers
[15:37:34] <GeDaMo> I feel like lookup tables are in your future :P
[15:37:48] <GeDaMo> Maybe look at serialization libraries
[15:37:55] <davve> I think you will have to decicde if you want readable or efficiency
[15:38:05] <davve> but since oyu are working with list, maybe reduce/fold?
[15:39:11] <davve> https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold
[15:39:39] <davve> https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.reduc
[15:39:41] <davve> https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.reduce
[15:39:49] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[15:40:03] *** Joins: Sadale (~Sadale@user/sadale)
[15:40:40] <KillerWasp> /traitor.html
[15:41:25] <KillerWasp> mmmmm....
[15:42:36] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:42:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:42:47] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:43:04] <KillerWasp> I can think of excellent communication systems.
[15:43:04] <KillerWasp> Sadale: o/
[15:43:08] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[15:43:31] <beaky> yes look at rust
[15:43:33] *** Quits: In0perable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[15:44:12] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[15:44:18] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:45:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:45:41] <beaky> rust also has a bitvector library that you can slice in any way you please so the algorithm just becomes reading the input as 10 bit slices
[15:46:28] <beaky> https://docs.rs/bitvec/latest/bitvec/index.html
[15:46:29] <bayaz> Title: bitvec - Rust 
[15:47:15] <beaky> (specifically BitSlice)
[15:47:23] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[15:47:44] <beaky> on top of a bitvector backed by u8 (bytes)
[15:48:40] <beaky> otoh bitvec does not use simd or autovectorization so it is not the most efficient possible implementation
[15:49:09] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:51:33] *** Joins: jabster28 (~jabster28@81.111.217.63)
[15:52:49] <beaky> maybe the most efficient possible implementation on x86 would be like using bit manipulation instructions to drive the chunking https://en.wikipedia.org/wiki/X86_Bit_manipulation_instruction_set#Parallel_bit_deposit_and_extract
[15:52:49] <bayaz> Title: X86 Bit manipulation instruction set - Wikipedia 
[15:55:24] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[15:55:30] <Bou> or use https://github.com/tsunaminoai/baseEmoji/ 🙃
[15:55:31] <bayaz> Title: GitHub - tsunaminoai/baseEmoji: baseEmoji is a base1024 encoding scheme that uses emoji as its lookup table. The primary purpose is to represent otherwise ugly data in more "pleasing" form in social media. 
[15:57:18] <beaky> nice i like emoji
[15:57:46] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[15:58:03] <beaky> an emoji counts as a character so it will fit better in tweets than base64
[15:58:11] <GeDaMo> If it's literally a stream of bytes to a sequence of 10-bit groups then it's 8+2, 6+4, 4+6, 2+8, only four states
[15:59:23] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[15:59:29] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:00:18] <pyzozord> or just load up 80bits at a time?
[16:00:32] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:01:14] <GeDaMo> Yeah, it depends what you're going to do with the 10-bits groups afterwards
[16:03:05] *** Joins: jabster28 (~jabster28@81.111.217.63)
[16:04:59] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[16:07:48] *** Joins: opeerateur_ (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[16:08:32] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 272 seconds)
[16:08:51] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 260 seconds)
[16:09:09] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[16:09:15] *** Joins: Enitin (~Enitin@82.180.145.226)
[16:09:31] *** Quits: Jaami2 (~Jaami@182.185.167.201) (Ping timeout: 245 seconds)
[16:09:41] *** Quits: opeerateur_ (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Client Quit)
[16:09:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:10:06] <pyzozord> how will bitwise shift operation work for an array with 80 bits
[16:10:17] <pyzozord> considering little/big endian
[16:10:47] <pyzozord> is endianness only applied to integers/floats/addresses?
[16:11:30] <GeDaMo> An array of byte-sized values wouldn't normally be considered to have an endianness
[16:12:10] <GeDaMo> It's only multi-byte values like int32 or float64
[16:12:11] <Bou> how you'd store the 10-bit digits is something to think about though
[16:12:37] <GeDaMo> I'd probably use a 16- or 32-bit integer
[16:13:20] *** Joins: berkhan (~berkhan@159.146.40.169)
[16:13:39] <pyzozord> does it even matter? It's just a bunch of bytes in memory
[16:13:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[16:14:04] <pyzozord> i guess it matters for the shift operation?
[16:14:18] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:14:40] *** Joins: jabster28 (~jabster28@81.111.217.63)
[16:15:18] <pyzozord> I'm not sure but I think it's possible in c to have fields of arbitrary length of bits
[16:15:54] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:16:35] <Bou> bit shifts are operations that happen on individual numbers, the CPU doesn't really have an order for the 64 bits in a register
[16:17:37] <pyzozord> right, so I guess best would be just native word size
[16:17:45] <pyzozord> or use simd
[16:18:30] <pyzozord> or maybe not maybe using double or quadruple word size is still better because the operation multiplexing happens inside the cpu, not in our code
[16:18:32] * vdamewood applies SIMD to all of pyzozord's bits
[16:19:32] <pyzozord> vdamewood: error, segment violation :P
[16:20:22] * vdamewood divides pyzozord into segments
[16:20:42] * vdamewood wraps the segments into packets then sends them to a random IP address
[16:20:48] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 252 seconds)
[16:21:40] <pyzozord> vdamewood: ERROR! Division by zero! :(
[16:21:42] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:21:49] *** Joins: duuude (~user@user/duuude)
[16:22:04] *** Joins: Maxc4m (~Maxc4m@37.113.239.144)
[16:23:10] <vdamewood> How can I violate a segment if there are zero segments?
[16:23:42] <amigojapan> Segmentation fault
[16:23:51] <pyzozord> puzozord is zero
[16:23:58] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[16:23:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:24:13] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:24:26] <vdamewood> Who's puzozord?
[16:24:48] *** Joins: Jaami (~Jaami@182.185.163.56)
[16:24:51] <pyzozord> err, my evil twin
[16:24:58] <amigojapan> pyzozord: a zero to the left or a zero to the right?
[16:25:23] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Remote host closed the connection)
[16:25:26] *** Joins: Twipply (~Twipply@user/twipply)
[16:26:10] <vdamewood> pyzozord: I thought you were the evil one.
[16:27:18] <pyzozord> vdamewood: we are both evil, he is evil zero, and I am evil one
[16:27:26] <KillerWasp> void(*f)()=0;f();
[16:27:38] *** Joins: Pickchea (~private@user/pickchea)
[16:28:26] *** Joins: jabster28 (~jabster28@81.111.217.63)
[16:28:45] <KillerWasp> this line give segfault.
[16:29:03] <pyzozord> is segfault the same as segv
[16:29:26] <KillerWasp> pyzozord: yes.
[16:31:59] <KillerWasp> or with: int i;void(*f)()=&i;f();
[16:32:40] <KillerWasp> this play with INTERRUPT 10, but don't work in linux: uint16_t*i=0;void(*f)()=i[0x20]+(i[0x21]<<4);f();
[16:33:07] <GeDaMo> That's not guaranteed to segfault, i isn't initialized, it could by chance turn out to be a valid code address :P
[16:33:24] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 240 seconds)
[16:34:30] <GeDaMo> Oh wait, you used the address of i, I guess it depends on whether the stack is executable or not
[16:34:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:34:50] <KillerWasp> GeDaMo: well, run the stack like a code
[16:35:34] <KillerWasp> i have garbage, and the rest of stack are the values of datas of function and jump of returns
[16:35:42] <KillerWasp> "i"
[16:36:03] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:36:17] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[16:36:31] <KillerWasp> like give segfault because the segmente of memory don't have permission for run. i guess.
[16:37:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[16:38:15] <KillerWasp> int i=96;void(*f)()=(void(*)())&i;f();
[16:38:48] <KillerWasp> still give segfault. Assuming it could run the code, with 96 it returns immediately.
[16:38:59] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Ping timeout: 256 seconds)
[16:39:13] <GeDaMo> https://www.youtube.com/watch?v=dcLlq_DXpY8
[16:39:14] <bayaz> Title: Python Lee Jackson - In a Broken Dream (1972) 
[16:40:16] <KillerWasp> Is someone here eating peanuts?
[16:42:52] <KillerWasp> wait. i get confused. 96 is RET in MOS6502
[16:43:06] <pyzozord> GeDaMo: another great one
[16:43:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[16:43:40] <GeDaMo> That's Rod Stewart singing
[16:44:11] <GeDaMo> Apparently the band's regular singer thought his own voice didn't suit the song
[16:45:27] <amigojapan> Hi vdamewood shouldn't Pikachu have evolved many times already?
[16:45:36] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[16:45:50] *** Joins: vysn (~vysn@user/vysn)
[16:45:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[16:45:56] <vdamewood> Satoshi's Pikachu
[16:45:59] <vdamewood> ?
[16:46:12] <KillerWasp> vdamewood: no, pikachu is god.
[16:47:11] *** Quits: gitgood (~gitgood@80.2.33.110) (Ping timeout: 252 seconds)
[16:47:56] *** Quits: exgirl (uid545763@user/suss) (Quit: Connection closed for inactivity)
[16:48:22] <pyzozord> amigojapan: didn't pikach didn't want to evolve? :P
[16:48:34] *** Joins: embik (~embik@user/embik)
[16:49:31] *** Quits: embik (~embik@user/embik) (Client Quit)
[16:50:06] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[16:51:43] <KillerWasp> pyzozord: you can press B for cancel the evolve
[16:52:14] <vdamewood> KillerWasp: Not when Pikachu evolves.
[16:52:56] <vdamewood> Pikachu evolves by using a thunderstone, not by leveling up.
[16:52:57] <KillerWasp> vdamewood: really? i never check it for pikachu
[16:52:59] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:53:00] <pyzozord> you can always press f to pay respects
[16:53:20] <vdamewood> KillerWasp: Really. Since you have to use an item to evolve Pikachu, there's no option to stop the evolution.
[16:53:31] <ix> The variation in topic amongst offtopic rooms
[16:53:31] <KillerWasp> sure. a stone for raichu...
[16:53:43] <amigojapan> pyzozord: is it a choice? I thought once you reach a strain level you automatically evolve
[16:53:52] <ix> Hask-offtopic on about category theory
[16:53:57] <ix> Here? Pikachu
[16:53:59] <vdamewood> amigojapan: Nope. Pikachu evolves by using an item.
[16:54:30] *** Joins: jabster28 (~jabster28@81.111.217.63)
[16:54:30] <pyzozord> ix: we are not pretencious, and topic vary a lot
[16:54:39] <ix> Im sure
[16:54:48] <amigojapan> Ah ok vdamewood what a gimmick. The real reason it to keep the original appearance going
[16:55:03] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d471:6d9f:6f1e:b65b) (Read error: Connection reset by peer)
[16:55:15] <vdamewood> amigojapan: Well, Pikachu evolving by using an item was decided before the anime was made.
[16:56:02] *** Joins: zerobyte (~b4d@36.85.37.24)
[16:56:26] *** Joins: mutty (~suss@user/suss)
[16:56:29] <amigojapan> vdamewood: I think the real reason is to keep the original look, even with the item idea
[16:57:12] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[16:57:35] <pyzozord> amigojapan: I don't know I never actually played pokemon
[16:57:44] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[16:58:08] <amigojapan> Neither did I pyzozord 
[16:58:28] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:58:36] *** Parts: zerobyte (~b4d@36.85.37.24) ()
[16:58:44] <vdamewood> amigojapan: For that to be true, though, they would need to have predicted the future, since Pikachu was just a random rare Pokémon in Yokiwa forest.
[16:58:46] <pyzozord> the gameboy game was in english or japanese and I could barely speak polish at that time
[16:59:01] <amigojapan> pyzozord: I did not know there was a game for the longest time, also I probably wouldn't have liked it since I don't like RPGs 
[16:59:04] <vdamewood> pyzozord: There were Spanish and French versions, too.
[16:59:08] <pyzozord> oh and i din't have a gameboy so I played only when friends would let me
[16:59:39] <vdamewood> Tokiwa*
[16:59:56] <amigojapan> I see vdamewood 
[17:00:28] *** Quits: null4bl3 (~null4bl3@192.38.81.6) (Ping timeout: 272 seconds)
[17:00:56] <vdamewood> amigojapan: Perhaps they picked Pikachu because it evolves by stone.
[17:01:58] <vdamewood> amigojapan: From what i've read and videos I've watched, they first thought about making Pippi the mascot in the anime. Pippi also evolves by stone, but a different one.
[17:02:03] <amigojapan> Probably they picked the cutest? vdamewood 
[17:02:09] <KillerWasp> https://art.pixilart.com/82130c02354d406.gif
[17:02:09] <bayaz> Type: image/gif Size: 300.3 kB 
[17:02:13] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[17:02:15] <vdamewood> amigojapan: That would be Eevee.
[17:02:58] <vdamewood> ^ Slightly tongue-in-cheek
[17:07:03] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[17:11:41] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:11:59] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:12:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 245 seconds)
[17:16:54] <Bou> Missingno is the best Pokémon
[17:21:14] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[17:22:37] <mobidrop> I want to be a chinpokemon master!
[17:24:38] <vdamewood> mobidrop: Do you even know what that means?
[17:24:55] <berkhan> looks like Libera is getting spammed by users such as "cryptobug"
[17:25:11] <berkhan> how can I report such cases?
[17:25:56] <vdamewood> berkhan: Maybe ask in #libera.
[17:26:18] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[17:29:03] *** Joins: norayr (376bc34bfc@37.252.78.253)
[17:29:13] *** Joins: bababb (~baracurda@user/parserblabla)
[17:30:45] *** Joins: Payam54 (~Payam@138.106.57.131)
[17:32:01] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[17:35:56] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:36:09] *** Quits: zwr (~zwr@2804:d45:b966:fb00:77fe:55bd:621e:2223) (Ping timeout: 252 seconds)
[17:36:13] <KillerWasp> Bou: I think I saw someone on the internet who has fixed the image of Misigno, and it turns out that it was Bulbasaur, the first pokemon on the list.
[17:37:07] *** Joins: zwr (~zwr@2804:d45:b966:fb00:bc86:9875:5d48:1ce6)
[17:37:11] *** Joins: jabster28 (~jabster28@81.111.217.63)
[17:38:52] *** Joins: Atque (~Atque@user/atque)
[17:41:15] *** Joins: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net)
[17:42:52] *** Joins: xbkkd (~F0@user/xbkkd)
[17:43:35] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[17:44:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[17:45:49] <password> i keep reading misingno with a chinese accent
[17:45:59] *** Joins: vysn (~vysn@user/vysn)
[17:47:06] *** Quits: pizdets (~pizdets@183.182.111.79) (Quit: pizdets)
[17:47:15] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[17:47:45] *** Joins: pizdets (~pizdets@183.182.111.79)
[17:48:25] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:48:47] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 252 seconds)
[17:49:43] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[17:51:42] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[17:51:57] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[17:52:05] <volume_8> 11:30 < pyzozord> or just load up 80bits at a time?
[17:52:25] *** Quits: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[17:52:51] <DarkTrick> Is yubikey still a thing that works?
[17:52:55] <volume_8> pyzozord: yeah that would be great, but then i have to put the 10-bit chunks into 16bit variables (short) to store them.
[17:53:06] <volume_8> i did not mention this in the beginning, sorry.
[17:53:26] <Bou> what do you want to do with the numbers then?
[17:53:47] <volume_8> Bou: send them on the internet -- to get parsed on the other side
[17:54:37] <volume_8> Bou: each such chunk represents something important to me
[17:54:43] <mobidrop> vdamewood, haha it's from Southpark
[17:55:17] <volume_8> and yes -- the 6 last bits of each short would get wasted. but that's life in this case.
[17:55:25] <Bou> the "internet" is based on bytes too, so sending 10 bits over a network connection will require 2 bytes as well, so I'm not sure what you mean
[17:55:56] <volume_8> yep agreed. i would send the shorts that include the 10-bit things. not the 10-bit things themselves.
[17:56:06] *** Quits: Maxc4m (~Maxc4m@37.113.239.144) (Quit: Maxc4m)
[17:56:11] <volume_8> so like for four 10-bit things, i would actually send four shorts of 16bits each
[17:56:28] <volume_8> (altho in reality we are talking about MBs of data)
[17:56:58] <Bou> if you need to send the whole 2 MB, why split it up at all? just send the binary data
[17:57:11] <volume_8> the rust bitvec crate seems interesting and nice to use, but i would want the logic to be done in other langs too
[17:57:41] <volume_8> Bou: that's a longer story; but assume an error correcting code that allows you to reconstruct the entire thing from a subset of the chunks
[17:57:49] <volume_8> that's why they are chunked
[17:58:18] <volume_8> they are gonna be sent in different places, and then reconstructed by parties
[17:58:22] <vdamewood> mobidrop: I know.
[18:01:01] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:02:17] <Bou> volume_8: doing this expansion first will send 31.25% (5/16th) zeroes over the internet connection, sounds very wasteful unless you use those remaining bits for the error correcting code
[18:02:37] *** Joins: Compy (~compy@user/compy)
[18:03:00] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:03:23] <mobidrop> vdamewood, probably means something rude
[18:03:32] <mobidrop> or it's just made up nonsense
[18:05:11] *** Joins: null4bl3 (~null4bl3@192.38.81.6)
[18:06:15] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[18:06:16] *** Joins: regedit (uid150526@id-150526.uxbridge.irccloud.com)
[18:07:47] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[18:08:11] *** Quits: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua) (Quit: ZNC - https://znc.in)
[18:08:27] *** Joins: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua)
[18:16:55] *** Quits: treason (~treason@2a02:c7e:3456:c900:e511:7234:1ba:ec81) (Remote host closed the connection)
[18:19:00] *** Joins: snake (~snake@user/snake)
[18:21:39] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Quit: reboot)
[18:23:47] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[18:29:12] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:29:39] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[18:30:35] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[18:31:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:32:43] *** Quits: jnnnnnnnnn (~jnnnnnnnn@c-2172524e.016-77-73746f43.bbcust.telenor.se) (Read error: Connection reset by peer)
[18:32:54] *** Joins: jnnnnnnnnn_ (~jnnnnnnnn@65.99.151.178)
[18:33:19] <pyzozord> volume_8: not sure what do you mean, Why in shorts?
[18:33:53] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:34:20] <pyzozord> volume_8: I think you could use a bitfield https://en.cppreference.com/w/c/language/bit_field or an array of bytes
[18:34:20] <bayaz> Title: Bit fields - cppreference.com 
[18:36:04] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:37:17] *** Joins: Enitin (~Enitin@82.180.145.228)
[18:37:20] <volume_8> Bou: that's ok in this simplified scenario that im presenting in this channel right here :)
[18:40:41] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:41:18] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[18:41:45] *** Joins: ddakx (~ddakx@68.169.216.216)
[18:42:11] * volume_8 keeping notes of the discussion above
[18:42:47] *** Quits: ddakx (~ddakx@68.169.216.216) (Client Quit)
[18:43:18] <Bou> pyzozord: how a struct is laid out in memory is implementation defined though, something you really don't want when sending data over a network
[18:43:47] <pyzozord> I mean a struct with one field that is 80 bits
[18:44:06] *** Joins: tangy (~tangy@user/tangy)
[18:44:22] *** Joins: ddakx (~ddakx@68.169.216.216)
[18:44:24] <merijn> pyzozord: bitfields are even less defined than most things in C. You should absolutely not use those for anything related to network/disk data :p
[18:44:28] <pyzozord> but actually a struct with 8 10bit fields should work to no? no matter the order of the fields they are still going to fall on the right places
[18:45:15] <pyzozord> I never really used bitfields, I'd need to read the spec about them
[18:46:10] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:46:27] <mawk> they are going to fall on the right place if you always use the same machine with the same compiler
[18:46:39] <mawk> but if you share the data it might not be the same
[18:46:41] <Bou> it's not about order, it's probably alignment that's going to ruin things
[18:46:49] <mawk> the order can be reversed
[18:46:49] <pyzozord> oh if the order matter than that might be a problem indeed
[18:46:52] <mawk> depending on how gcc was configured
[18:46:55] <mawk> and alignment yes also
[18:47:01] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[18:47:12] <mawk> and endianness
[18:47:32] <edgar-rft> have you ever bitten into a bitfield? how does it taste like?
[18:47:36] <pyzozord> yeah I guess it's a lot that is UB or ID
[18:47:47] <pyzozord> one 80bit longass field should be safer
[18:47:59] *** Quits: berkhan (~berkhan@159.146.40.169) (Ping timeout: 260 seconds)
[18:48:24] <mawk> well use a 10 byte char[] array and organize things how you want
[18:48:29] <mawk> and use bitwise operations to store and load
[18:48:33] <mawk> and then it's always the same way
[18:48:58] <pyzozord> or array of 80 one-bytes might be fine too, I bet modern compilers can optimize that into wider operations
[18:49:18] <mawk> maybe
[18:49:40] <pyzozord> we could check right now on godbolt but I'm too lazy
[18:49:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[18:51:57] <Bou> "wider operations" means they get shifted into 16-bit, or 32-bit, or 64-bit, or god-knows-how-many-bit ints, which may be stored little-endian, big-endian, with all kinds of alignments
[18:52:29] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[18:52:59] <pyzozord> I don't think compiler can promote it to "wider ops" when logic can potentially be different because of endianness or alignment
[18:53:12] <pyzozord> so worst case scenario just 8-bit ops
[18:53:49] <pyzozord> should be plenty fast considering it's a dense array, it will be well cached and predicted
[18:54:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[18:54:17] *** Joins: vysn (~vysn@user/vysn)
[18:54:31] <pyzozord> might be actually faster than doing extra branching with the bigger types like 16 or 32
[18:54:36] <Bou> it will work *on your computer* but you don't know how the bits are ordered, and volume_8 wants to send them over a network
[18:54:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[18:55:04] <pyzozord> doesn't tcp ensures correctness of data?
[18:55:28] <mobidrop> tpc never fixes my typos
[18:55:39] <pyzozord> and with 1 byte array there is no endianness
[18:55:56] *** Quits: widp (~widp@124.123.105.73) (Ping timeout: 260 seconds)
[18:56:09] <pyzozord> I'd KISS it and worry about extra optimizations only if this isn't fast enough
[18:56:10] <Bou> tcp/ip works on bytes, don't know about "endianness"
[18:56:23] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[18:58:00] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[18:58:38] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[19:00:06] *** Joins: HP55555 (~HP51248@49.205.97.4)
[19:00:08] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[19:04:28] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:05:33] <pyzozord> funny, my loc output in my new team is really not very high
[19:05:43] <pyzozord> but it takes quite a lot of thinking to keep it that low
[19:06:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:06:45] <Bou> you're doing it wrong then
[19:07:06] <Bou> think less, produce shittier but more code -> manager is happy about high loc
[19:07:39] <pyzozord> that is almost universally true
[19:07:41] <Bou> (and this is exactly why I don't want to work in IT)
[19:08:08] <pyzozord> but my team lead and de facto manager happens to be a full hands on engineer like everyone else
[19:08:19] <pyzozord> it's really different than normal teams
[19:08:22] <Bou> bonus points if your code is so unmaintainable they can't fire you
[19:08:54] <pyzozord> but yeah it's so true
[19:09:07] <pyzozord> one of my previous companies litearlly had slogan "Get Shit Done!"
[19:09:18] <pyzozord> litearlly had in on hoodies and cups
[19:09:21] <pyzozord> so emberrasing
[19:09:42] <user51> woudln't wanna drink from a cup that mentions shit..
[19:09:50] <pyzozord> I kept saying to everyone that they do get shit doen but they forget to clean up after themselves...
[19:10:07] <pyzozord> code was utter mess, it was shocking
[19:10:16] <Bou> I think encoding 5 bytes into a char[80], increasing the data by 1600%, would count as "get shit done" though :P
[19:10:53] *** Joins: nicbk (~nicbk@user/nicbk)
[19:10:54] <beaky> ram is cheap 
[19:11:03] <beaky> gotta get shit done bro
[19:11:07] <mawk> ream is chap
[19:11:09] <pyzozord> Bou: you don't need to send all 80 bytes
[19:11:11] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:11:19] <pyzozord> I think the question was just how to chop it up
[19:11:30] <user51> 1 bit at a time :)
[19:12:01] <pyzozord> I don't think the char[80] is gEt sHiT dOnE
[19:12:11] <pyzozord> i think it's KISS, those are two very different things :P
[19:12:13] *** Quits: null4bl3 (~null4bl3@192.38.81.6) (Read error: Connection reset by peer)
[19:12:29] <pyzozord> and you don't need to send empty chunks over internet, obviously
[19:13:57] *** Joins: wedr_ (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[19:14:07] *** Quits: baffodoro (~raffaem@45.91.20.242) (Ping timeout: 260 seconds)
[19:14:23] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Remote host closed the connection)
[19:14:40] <KillerWasp> When I said today that someone here was eating peanuts, it's because someone was eating peanuts. No one has taken the hint, but I'm sure someone started eating peanuts. Why has no one confessed that he was eating peanuts? I can know for certain that you ate peanuts a few hours ago whether you like it or not. I REALIZE EVERYTHING, AND I SAW YOU EATING PEANUTS!
[19:14:47] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[19:15:42] <pyzozord> I admit to peanut butter
[19:15:50] <pyzozord> now stop spying on me
[19:15:51] <Bou> if you're referring to me, I was eating cashew nuts, unsalted of course
[19:15:56] * KillerWasp staring pyzozord. ¬¬
[19:15:59] <mobidrop> peanut butter is a liquid so I see it more as drinking
[19:16:08] <user51> maybe i could make some peanut butter cookies
[19:16:11] <pyzozord> it had peanut chunks in it
[19:16:33] <mobidrop> lots of foods have traces of peanuts as well
[19:16:40] <mobidrop> you could've eaten a bit of peanut without knowing
[19:16:47] <user51> flour seems like a pretty good thing to have handy.. make cakes, bread, and fireworks!
[19:16:57] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[19:17:42] <pyzozord> user51: one thing in that list is not like the others
[19:17:45] *** Quits: volume_8 (~f@snf-23141.ok-kno.grnetcloud.net) (Quit: lol)
[19:17:49] <KillerWasp> mobidrop: a peanut butter also count like peanut food, emits characteristic odor of peanuts.
[19:17:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[19:17:57] <pyzozord> user51: cakes of course, other two aren't sweet
[19:18:32] <user51> pyzozord: bread can be sweet
[19:18:33] <Bou> it's illegal to call it peanut butter in my country, it's "peanut cheese" here
[19:18:48] <pyzozord> oh no, that sounds much worse
[19:19:00] <user51> nothing wrong with sweet bread
[19:19:10] <pyzozord> I meant "peanut cheese"
[19:19:16] <KillerWasp> Bou: wut, really?
[19:19:19] <user51> sounds fatty
[19:19:33] <pyzozord> imagine other things... "potatoe cheese", "icecream cheese"
[19:19:39] <Bou> KillerWasp: false advertising, butter has to be a dairy product
[19:20:01] <user51> worse: just say 'cheese sticks' aloud
[19:20:07] <GeDaMo> Is cheese not also a dairy product?
[19:20:32] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:20:42] <user51> it is a dairy product, although some cheeses can have a bit of a plastic taste
[19:20:51] <KillerWasp> "mantequilla de maní" is like translate to spanish. but cheese is "queso", like "queso de mani", which sound like a strange experiment of food. :/
[19:21:18] <user51> recently the local supermarket chain debuted their chain cheese, and it tastes.. it's cheese, but something's missing.
[19:21:21] <user51> maybe it's salt.
[19:21:48] <GeDaMo> user51: I think you're meant to take those cheese slices out of the plastic before eating them :|
[19:21:55] <Bou> GeDaMo: I don't know, apparently "cheese" wasn't protected at the time they made up the word
[19:22:07] <mobidrop> user51, molten plastic with added flavor probably
[19:22:11] <GeDaMo> "Peanut spread" would be more generic in English
[19:22:43] <pyzozord> this guy is producing so many computer systems lectures https://www.youtube.com/c/OnurMutluLectures/videos?igno=re
[19:22:59] <pyzozord> how is anyone able to keep up with this
[19:23:07] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:23:12] <user51> mobidrop: sounds better than cement!
[19:23:15] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:d11b:a263:3b58:a581)
[19:23:35] <GeDaMo> pyzozord: are they any good?
[19:23:54] *** Quits: xbkkd (~F0@user/xbkkd) (Remote host closed the connection)
[19:24:00] <pyzozord> GeDaMo: yeah seems like collage level lectures
[19:25:17] *** Quits: HP55555 (~HP51248@49.205.97.4) (Read error: Connection reset by peer)
[19:25:32] <pyzozord> but it doesn't seem possible to remember all that, or even care about all of this detail
[19:25:41] *** Joins: HP55555 (~HP51248@49.205.97.4)
[19:26:03] *** Joins: widp (~widp@2406:7400:73:9e1b:b0e4:c5e3:cd23:9156)
[19:26:27] <Trashlord> what do people learn to do in university programming courses? How to write uni tests.
[19:27:00] <davve> not all courses are the same
[19:27:10] <davve> i did bachelor CS and most of my programming courses were practical assignments
[19:27:16] <davve> i.e lots of programming
[19:27:31] *** Joins: bomb (~bomb@user/bomb)
[19:27:36] <davve> programming projects with other students. writing games or web services
[19:27:39] <davve> pretty awesome
[19:27:47] *** Joins: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net)
[19:27:48] <davve> the master program though was way more theory-heavy
[19:28:12] <GeDaMo> Unit tests weren't a thing when I was at uni :P
[19:28:35] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 260 seconds)
[19:29:04] <davve> yeah me either. nor version control management
[19:29:08] <davve> but we learned that on our own
[19:29:39] <davve> some of us atleast!
[19:29:46] *** Quits: Jaami (~Jaami@182.185.163.56) (Quit: Nettalk6 - www.ntalk.de)
[19:29:47] <davve> wish they would have taught it though. seems pretty important
[19:30:34] *** Quits: magla (~gelignite@55d40a33.access.ecotel.net) (Quit: Stay safe!)
[19:30:44] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:31:39] <pyzozord> there isn't much to learn
[19:32:35] <pyzozord> run the function with the fake input and check if result is what you expect
[19:32:55] <davve> pretty much
[19:36:14] *** Quits: moniker- (~mon@dh207-123-65.xnet.hr) (Read error: Connection reset by peer)
[19:37:51] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[19:38:10] *** Quits: Payam54 (~Payam@138.106.57.131) (Quit: Client closed)
[19:38:22] *** Joins: Payam49 (~Payam@138.106.57.131)
[19:38:27] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Client Quit)
[19:38:42] *** Joins: Decker (~d3x0r@user/d3x0r)
[19:38:47] *** Joins: moniker- (~mon@88.207.121.255)
[19:39:04] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:39:08] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[19:39:55] *** Joins: Feri (~Feriun@user/Feriun)
[19:40:03] <Feri> Hello Everyome
[19:40:11] <Feri> Hello Everyone
[19:40:50] <GeDaMo> Hi Feri :)
[19:40:53] *** Quits: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[19:41:10] <Feri> I'm glad being here :D
[19:41:34] <Feri> Hey, I like all you programmers what do you do while learning a langueage?
[19:41:44] <Feri> I'm learning Python
[19:41:56] <Feri> But I feel I'm not doing the right thing
[19:42:04] <bomb> I make web or desktop apps when learning a language
[19:42:06] <Feri> What do you do for this feeling?
[19:42:16] <bomb> database connectivity is the first thing I learn
[19:42:32] <sjmulder> I read a good book about it, cover to cover (maybe skimming over bits). It's important to know the idioms and features, otherwise you don't know what you don't know
[19:42:40] <bomb> I spent a few months learning Erlang once, only to find out it didn't have a Postgres driver.
[19:42:48] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[19:42:50] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Client Quit)
[19:43:06] <Feri> Yeaa
[19:43:37] <Feri> Do you feel u doing the wrong thing or not!!
[19:43:44] <Feri> I feel I might be doing wrong
[19:44:15] <Sqaure> I often learn languages by writing an app
[19:44:16] <Bou> I believe using the things you learned is important, you can't just read a book to learn a language
[19:44:30] <Feri> I'm doing little projects 
[19:44:45] <pyzozord> Feri: read other peoples code and ask other people to read your code
[19:44:46] <Feri> The platform I'm using is designed with questions
[19:44:53] <Sqaure> seems like the only way i can do it. Reading books / "learning just for learning" doesnt work for me.
[19:45:08] <Feri> Well How can I ask other to read mine?! No one look at my github codes
[19:45:14] <bomb> Zed Shaw's Python books teach the language by making little programs
[19:45:17] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[19:45:25] <bomb> there are some code review subreddits
[19:45:31] <pyzozord> Feri: ask here or in #python for people to review your code
[19:45:43] <Feri> pyzozord: Aw can I really do that?
[19:45:49] <Bou> plenty of people here, or on other channels, willing to look at some code
[19:46:00] <Feri> Connecting with people is realy nice in this way
[19:46:04] <bomb> #1 rule of IRC, don't ask for permission
[19:46:09] <pyzozord> Feri: yes of course, but you know, sometimes you get ignored, that's ok too
[19:46:12] <Feri> bomb: :D
[19:46:53] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[19:47:13] <Feri> Thank you people
[19:47:18] <Feri> What about ages!
[19:47:25] <Feri> I feel I've started too late
[19:47:37] *** Quits: widp (~widp@2406:7400:73:9e1b:b0e4:c5e3:cd23:9156) (Ping timeout: 240 seconds)
[19:47:42] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[19:47:48] <Feri> I'm 21! But all other people in contests I'm coding in are around 15 :/
[19:47:52] <pyzozord> never too late, takes about 3 years of full day study to get up to speed or even ahead of the curve
[19:47:56] <Feri> I'll be 22 soooon
[19:48:00] <Bou> "too late" "I'm 21" rofl
[19:48:29] <bomb> yeah that's almost the retirement age
[19:48:32] <pyzozord> it's a reasonable worry, maybe people start when they are 10 or so
[19:48:44] <Feri> Well
[19:48:49] <user51> fwiw, i could never learn from books. most of my experience just came from making projects. 90% of my projects suck though.
[19:48:50] <Feri> How old are you!
[19:49:00] <bomb> we're old. OLD old
[19:49:04] <bomb> don't worry about the age here lol
[19:49:16] <pyzozord> but there is nothing to worry, things get exponentially more difficult and slower, so you are bound to catch up with everyone else
[19:49:30] <Feri> I feel it will be late for me to start DOING
[19:49:32] <Feri> I mean
[19:49:45] <Feri> I'm a student right now... I have no job
[19:49:47] <bomb> electricity wasn't discovered when some of us were in our 20s
[19:49:54] <pyzozord> you can take a bootcamp to get you started working as a programmer
[19:50:27] <Feri> bomb: Nice quote!
[19:50:58] <Bou> one thing I can advise, do get a (part-time) job in your field as quickly as possible
[19:50:59] <Feri> What bugs me alot... is that I'm a 4'th year university student
[19:51:11] *** Joins: msv (~msv@user/msv)
[19:51:23] <bomb> Feri if you're into web apps and such, a Django bootcamp or book might help
[19:51:26] *** Joins: widp (~widp@124.123.105.73)
[19:51:50] <Feri> bomb: I'm taking an advance python course right now
[19:52:02] <bomb> kool
[19:52:18] <Feri> Well, One last question
[19:52:24] <Feri> Is this really late or not
[19:52:27] <bomb> no last question
[19:52:32] <bomb> you can ask questions forever
[19:52:36] *** Joins: baffodoro (~raffaem@95.74.63.143)
[19:52:41] <bomb> and no it's not late
[19:52:48] <pyzozord> it's not
[19:52:49] <Feri> I'm finishing university next year
[19:52:56] <Feri> bomb: I like the culture here...
[19:52:58] <pyzozord> you are disadvantaged and will need to work harder
[19:53:16] <Feri> Yep
[19:53:38] <Feri> Well, I'll want people to review my code... ;D
[19:54:11] <Feri> Thank you all ♥
[19:55:26] <pyzozord> Feri: good luck, ask questions, and read other peoples code and keep learning
[19:55:32] *** Quits: XV9 (~XV8@2601:5cb:c001:50::4a2c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:55:52] <Feri> pyzozord: I will I
[19:56:19] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4a2c)
[19:56:32] *** Parts: Feri (~Feriun@user/Feriun) (WeeChat 3.4.1)
[19:56:36] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[19:56:51] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:56:52] *** Joins: jensen (~jensen@65.78.100.184)
[19:58:00] <Bou> 21, too late, smh
[19:58:19] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[20:00:31] <Decker> (..hmm python... wonders if doing the wrong thing... that's a yes; just because it's python in the first place :)  
[20:01:15] *** Joins: xkuru (~xkuru@user/xkuru)
[20:01:39] <Bou> they didn't say it was their first language (which should obviously be C, for everyone)
[20:02:10] *** Quits: baffodoro (~raffaem@95.74.63.143) (Read error: Connection reset by peer)
[20:03:14] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[20:03:44] *** Joins: baffodoro (~raffaem@95.74.63.143)
[20:04:08] *** Quits: HP55555 (~HP51248@49.205.97.4) (Ping timeout: 272 seconds)
[20:04:12] *** Joins: vitali64_ (~vitali64@user/vitali64)
[20:04:41] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[20:04:52] <nomagno> I have a simple macro to check for endinaness in my code somewhere...
[20:04:56] *** vitali64_ is now known as vitali64
[20:04:57] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:05:16] <jensen> a lightweight c-based simple timer that counts in milliseconds and prints it out on the terminal in near "real-time"--how resource-intensive is this compared to one that only counts in 1 second? Is polling involved? Would it drain a noticeable amount of battery if run for many days, for example?
[20:05:26] <jensen> this is the application: https://sourceforge.net/projects/utimer/files/
[20:05:52] *** Joins: HP55555 (~HP51248@49.205.97.4)
[20:06:11] <nomagno> #define IS_LITTLE_ENDIAN (*(uint16_t *)&(uint8_t){ 1 })
[20:08:11] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:08:19] *** Joins: HP_1536464894 (~HP51248@49.205.97.132)
[20:09:11] <nomagno> Does this actually work?
[20:09:29] <nomagno> I can heuristically confirm it but C pointer casting is confusing
[20:09:38] <Bou> jensen: I see a `g_usleep(TIMER_CHECK_RATE_MSEC*1000)`,  and `#define TIMER_CHECK_RATE_MSEC  500` defined in utimer.h, so at first glance it only polls every 500 ms?
[20:10:21] *** Quits: HP55555 (~HP51248@49.205.97.4) (Ping timeout: 245 seconds)
[20:11:29] <Decker> nomagno VS doesn't support {1} as an expression
[20:11:44] <Decker> without it also being an assignment... so you'd need a temp variable 
[20:11:55] *** Joins: Pickchea (~private@user/pickchea)
[20:12:28] <Decker> ( ('AB' == 0x4142)==0 )
[20:13:00] <GeDaMo> That seems odd, I'm not sure how it's meant to work
[20:13:01] <Decker> err drop the last == 0
[20:13:11] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[20:13:17] <GeDaMo> nomagno's one, I mean
[20:13:42] <Decker> it stores 1 in a byte, if it's read as a uint16, LE it gets 1 and 0  which is 01... if it's big endian itgets 1 and 0 and it 0x10
[20:13:53] <Decker> 000
[20:14:12] <Decker> assuming there's not another structure packed against the first one
[20:14:16] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[20:14:47] <Decker> padding will reserve bytes that will remain 0 (since it'd be in global space)
[20:14:50] *** Joins: MangyDog (Mange@user/mangy-dog/x-7397214)
[20:14:53] <GeDaMo> I don't think your works either '' is for single characters
[20:15:02] <Decker> tht's what GCC says.
[20:15:18] <GeDaMo> gcc says a lot of things :P
[20:15:29] <Decker> yes, yes it does :)
[20:18:13] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[20:18:24] *** Joins: pmercado (~pmercado@186.107.58.34)
[20:19:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:21:15] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[20:23:47] <GeDaMo> https://en.cppreference.com/w/c/language/character_constant
[20:23:47] <bayaz> Title: Character constant - cppreference.com 
[20:24:51] *** Joins: nicbk (~nicbk@user/nicbk)
[20:24:57] <Decker> (6) 'c-char-sequence'
[20:25:19] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Remote host closed the connection)
[20:25:23] <GeDaMo> Yeah, but the value is implementation defined
[20:26:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 272 seconds)
[20:27:32] *** Joins: WeeBey (WeeBey@gateway/vpn/protonvpn/weebey)
[20:28:03] <[itchyjunk]> https://web.stanford.edu/class/archive/cs/cs103/cs103.1142/button-fsm/
[20:28:04] <bayaz> Title: Button FSM 
[20:28:16] <Decker> that's because the Int on a little endian and int on a big endian end up looking different
[20:28:27] <[itchyjunk]> My understanding of fsm is weak but i htink this makes sense
[20:29:41] <Decker> there's usually not a distinction between hover-down and down
[20:29:43] <mutty> Decker ive no idea how difference among little-endian and big endian encoding
[20:30:46] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[20:32:12] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:32:17] <GeDaMo> If you store a 32 bit value 0x12345678 into memory, on a little endian system, the 0x78 byte will be at the lowest address
[20:32:57] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[20:33:52] <Decker> ya would have to take the address of that and check the value of the first byte too I guess; since it's a int, it's int value is always the same 
[20:34:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:34:11] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[20:34:14] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[20:36:26] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[20:38:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:38:19] *** Joins: duuude (~user@user/duuude)
[20:38:51] *** Joins: jabster28 (~jabster28@81.111.217.63)
[20:41:16] *** Quits: widp (~widp@124.123.105.73) (Remote host closed the connection)
[20:41:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[20:44:40] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 272 seconds)
[20:44:57] *** Joins: widp (~widp@124.123.105.73)
[20:46:27] <Bou> the first byte of 0x12345678 can be either 0x12, or 0x78... or 0x34 if you're on a PDP-11
[20:46:27] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 252 seconds)
[20:49:00] <Decker> only 12 or 78 on arm
[20:49:15] <ProfSimm> Is Clojure's "EDN" used for other things than... Clojure?
[20:49:58] <ProfSimm> Uh lame "edn is an extensible data notation. A superset of edn is used by Clojure to represent programs"
[20:50:02] <ProfSimm> Why a superset.
[20:50:05] *** Quits: mutty (~suss@user/suss) (Read error: Connection reset by peer)
[20:50:05] <ProfSimm> Why not the thing itself.
[20:50:54] <Decker> https://github.com/edn-format/edn 
[20:50:56] <bayaz> Title: GitHub - edn-format/edn: Extensible Data Notation 
[20:50:56] *** Quits: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Quit: WeeChat 3.4.1)
[20:51:12] <Decker> could of course implement it yourself
[20:51:33] <Decker> because data format is to desribe Data not code
[20:52:00] *** Inline__ is now known as Inline
[20:52:23] <Decker> if you include code; then everyone has to implement that language also... if you limit it to data for interop then there's less to have to worry about in a foreign language
[20:52:39] <Decker> like if JSON was just JS, everything that handled JSON would need to handle full JS
[20:52:57] <ProfSimm> Decker: that's the thing tho. The language is not the syntax. 
[20:53:17] <ProfSimm> Decker: EDN could be able to describe an abstract program with no set semantics and clojure can be just one set of semantics for it. 
[20:53:18] <Decker> not solely the syntax
[20:53:26] *** Joins: jabster28 (~jabster28@81.111.217.63)
[20:53:27] <ProfSimm> Decker: or more specifically the standard library
[20:53:43] <ProfSimm> Decker: this is what I'm doing. My "data format" is the whole syntax. But not the whole language
[20:53:50] <Decker> then jst use another .cl file (or whatever extension they use)
[20:54:30] <ProfSimm> I think an opportunity was missed with EDN.
[20:54:45] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[20:54:45] <ProfSimm> Bit uninspired "let's cripple the format to just data"
[20:54:53] <ProfSimm> What's code and what's data should be up to the interpreter.
[20:54:56] <beaky> nice i like clojure
[20:54:57] <ProfSimm> Not the format itself.
[20:55:11] <knusbaum> Jong, yeah I think you are talking about overfitting. I'm not an expert, though. I think you need to consider that finding parameters that fit a data set isn't a random process of selecting values. It's a search problem where the parameters are adjusted over iterations.
[20:55:11] <ProfSimm> That's what homoiconicity is, after all
[20:55:30] *** Joins: HP55555 (~HP51248@49.205.97.143)
[20:56:01] <Decker> ProfSimm there's a rather well known difference.  One has expressions the other doesn't.  One requires an interpreter later the other doesn't.
[20:56:19] <Decker> C souce isn't data, it's code
[20:56:19] <ProfSimm> Decker: expressions are just data 
[20:56:26] <Decker> no.
[20:56:55] *** Joins: Guest3 (~Guest3@185.145.245.102)
[20:57:04] <Decker> if you want to go against what everyone else thinks that's fine.  Just be aware you're wrong in respect to everyone else :) 
[20:58:15] <ProfSimm> Decker: look on right and tell me where the distinction is: https://i.imgur.com/4i4l3R2.jpg
[20:58:16] <bayaz> Type: image/jpeg Size: 14.4 kB 
[20:58:32] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 252 seconds)
[20:58:34] <Decker> they're both code
[20:58:40] <Guest3> Jеrk off with a random girl. Wеbsite: chica.monster
[20:58:52] <ProfSimm> Decker: I mean where is the distinction between the parts that are data and code
[20:59:05] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[20:59:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:59:06] *** Quits: HP_1536464894 (~HP51248@49.205.97.132) (Ping timeout: 252 seconds)
[20:59:38] <ProfSimm> Decker: homoiconicity means data and code is the same thing. "Code" is in the eye of the beholder.
[20:59:42] *** Quits: Guest3 (~Guest3@185.145.245.102) (Client Quit)
[20:59:48] <ProfSimm> Decker: an AST is a data structure
[20:59:54] <ProfSimm> Decker: only running it makes it "code"
[21:00:47] <ProfSimm> Decker: and running it requires a "runner"
[21:01:19] <ProfSimm> Decker: that runner may choose to only interpret some things and not others, it can choose to interpret things a certain way
[21:01:27] *** Joins: password2 (~password8@user/password2)
[21:01:34] <ProfSimm> Decker: anything else is bad categorization imho
[21:01:49] <ProfSimm> We've all grown up thinking of code and data as two distinct things.
[21:02:01] <ProfSimm> Clojure pretends to be Lisp, but it failed at the first thing Lisp does: code is data
[21:02:22] <Decker> ProfSimm 'choice' doesn't help because they don't really have the choice.  If you're sending just the data parts of a program, that's probably not going to be a lot of use to anyone else until the code is evaluated and the expressions figured out
[21:02:43] <Decker> with data there's no question what the value is; it's a 1:1 mapping that has no choices
[21:03:26] <Decker> yes; my analogy starts to break down considering JSON is text that is run through some statemachine/VM and converted into a native representation... there's not a lot of difference between that and a expression handler
[21:03:27] <ProfSimm> Decker: if I decide to support addition and multiplication in a data format, am I going to fundamentally change the nature of this relationship?
[21:03:33] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[21:03:42] <Decker> other than there's no additional structures required to parse or choose to look at
[21:03:48] <ProfSimm> Decker: data format require computation to hydrate them in memory. JSON text is not the JSON in memory you work with
[21:03:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:04:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:04:15] <ProfSimm> re
[21:04:20] <Decker> heck JSOX borders on being Code with tagged types; where the objects revived have a name associated with them that might just be intreprted as the name; or implemented to do new Name()
[21:04:28] <ProfSimm> Decker: I was saying: data format require computation to hydrate them in memory. JSON text is not the JSON in memory you work with
[21:04:28] <knusbaum> I think we should be specific that homoiconicity refers to data and code being represented the same way in a language's syntax.
[21:04:41] <ProfSimm> knusbaum: well yes
[21:04:45] <knusbaum> Both code and data get transformed from that syntax into some internal memory representation.
[21:04:47] *** Joins: jabster28 (~jabster28@81.111.217.63)
[21:04:51] <ProfSimm> knusbaum: yes
[21:04:55] <knusbaum> That part isn't important.
[21:05:04] <ProfSimm> knusbaum: which part isn't important
[21:05:21] *** Quits: MangyDog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 245 seconds)
[21:05:21] <knusbaum> How it's represented specifically as an AST or a linked list or map or whatever.
[21:05:25] <knusbaum> is not important
[21:05:40] <ProfSimm> Well sure. But what IS important, is that data/code are the same format.
[21:05:53] <ProfSimm> JSON is a subset of JS, it's not homoiconic.
[21:06:01] <ProfSimm> And EDN is a subset of Clojure, so it's not homoiconic
[21:06:03] <knusbaum> Yes, I was just being pedantic that we're talking syntactical format, not memory format.
[21:06:30] <knusbaum> Code *IS* a data structure, just like program data. Just because we don't know the specific AST that a compiler/interpreter uses doesn't matter. The semantics are well defined.
[21:06:31] <ProfSimm> knusbaum: we're not talking memory format, but I'd say we're talking about beyond syntax, to about the AST level
[21:06:49] <Decker> that AST has to be constructed in memory too
[21:06:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[21:07:01] <ProfSimm> Well there are N transform stages Decker
[21:07:26] <ProfSimm> Point is code is data through as many as possible, before the actual "execution"
[21:08:11] <ProfSimm> Roughly we have: text -> tokens -> expresion trees -> statically reduced expression trees -> runtime execution 
[21:08:24] <Decker> ProfSimm data formats 1 token = 1 value.  Code formats many tokens = 1 value.  Hence your PNG both sides are code.  There's places where there's operators  (+,append,whatever) 
[21:08:33] <ProfSimm> I'd say a homoiconic language has data = code at least until and including expression treees
[21:08:40] <Decker> that's not clear either.
[21:08:57] <ProfSimm> Decker: an object is one value, but not one token
[21:08:57] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[21:09:09] <Decker> it's one token
[21:09:17] <ProfSimm> Wut
[21:09:17] <Decker> from { to }
[21:09:21] <ProfSimm> That's not one token
[21:09:35] <Decker> its members are also one tokens
[21:09:40] <ProfSimm> A token is a flat partitioning of the text, basically
[21:09:41] <knusbaum> That may be one tree node, but there will be many tokens.
[21:09:45] <Decker> an object has members, not tokens
[21:10:08] <knusbaum> Tokens are generally units of lexical analysis. They don't form nested structures.
[21:10:10] <ProfSimm> Decker: { and } are two tokens themselves in just about any parser you can find, including custom ones
[21:10:20] <knusbaum> Unless we're using some really non-standard definition of "token"
[21:10:23] <Decker> those are 0 tokens and 1 flag on a indirect token
[21:10:29] <ProfSimm> knusbaum: yup
[21:10:45] *** Quits: Inline (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:10:55] <ProfSimm> Decker: tokens is basically like taking a long sheet of paper that code is written on, and cutting it into pieces :P
[21:11:01] <Decker> it's 1 token like any quoted value is 1 token "asdfg"
[21:11:20] <ProfSimm> Decker: this is subjective to the parser...
[21:11:37] <ProfSimm> Decker: but if you make your entire JSON one token you kinda make the notion of tokens meaningless i think
[21:11:51] <Decker> it's still not M:1
[21:12:11] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[21:12:31] <knusbaum> Strings *may* be handled by the lexer, but not always. Objects and maps generally can't be because they have a more significant grammar than you can handle in a lexer.
[21:12:39] <Decker> xml;ini;json; various binary record formats
[21:12:53] <ProfSimm> Decker: anyway check the image I posted. You decide what "apply" means. So. In a way it's data or code depending on what you want
[21:12:57] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[21:12:58] <Decker> "hello"+"world"
[21:13:03] <Decker> isn't data it's 3:1 
[21:13:28] <Decker> JSOX definition is a string of single tokens
[21:13:28] <ProfSimm> knusbaum: more specifically they're recursive and strings aren't
[21:13:33] <knusbaum> Yes.
[21:13:43] <Decker> I don't know how you could impelment a parser that did it any differently
[21:13:57] <knusbaum> I think we're just using different definitions of "token"
[21:14:20] <ProfSimm> It doesn't matter what tokens are anyway
[21:14:23] *** Quits: jkotra (~jkotra@122.176.152.121) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[21:14:27] <ProfSimm> What matters is the expression tree :S
[21:14:30] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[21:14:34] <ProfSimm> https://i.imgur.com/4i4l3R2.jpg 
[21:14:34] <bayaz> Type: image/jpeg Size: 14.4 kB 
[21:14:42] *** Joins: jkotra (~jkotra@122.176.152.121)
[21:14:51] <Decker> except when you don't need an expression tree
[21:15:04] <Decker> and having an expression tree means you must USE the expression tree; noone would code both ways
[21:15:22] <ProfSimm> Decker: well JSON is an expression tree, but it's one that happens to be unable to express adding two numbers together.
[21:15:35] <Decker> there's no operators; it's not an expression tree
[21:15:40] <Decker> there's no functions
[21:15:46] <ProfSimm> Decker: {} [] , and : are operators
[21:15:58] <Decker> no those are format control characters
[21:16:38] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:16:39] <ProfSimm> You also have an exponentiation operator ;-)    10e5
[21:17:08] <Decker> sure... and negation
[21:17:10] <ProfSimm> This line that we think is there. It's not there.
[21:17:15] <ProfSimm> And negation sure
[21:17:18] *** Joins: Enitin (~Enitin@82.180.145.230)
[21:17:55] <ProfSimm> Decker: CSS was fighting for over a decade not to have math in it, because "declarative". Then they added calc() and the world kept turning
[21:18:05] <ProfSimm> Decker: still declarative.
[21:18:09] <Decker> and really number prefixes 0x 0o and 0b (0X 0O and 0B though apple doesn't support these in JS)  are also unary
[21:18:11] <ProfSimm> Decker: It's mostly a matter of perception
[21:18:13] <Decker> operators
[21:18:27] <knusbaum> Difference between code and data just comes down to whether there's a compiler or interpreter that can read the data structure and evaluate it. 
[21:18:36] <ProfSimm> knusbaum: zactly
[21:19:02] *** Joins: suss` (~user@user/suss)
[21:19:08] <knusbaum> homoiconic languages just choose to represent program data and program code with the same syntax. Ones that don't just have special syntax for defining code structures.
[21:19:30] *** Joins: jabster28 (~jabster28@81.111.217.63)
[21:19:39] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[21:20:00] <Decker> e is sort of a binary operator -but not because it's evaluated in the fromString() for a float.... it's the only binary operator JSON has
[21:20:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:20:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:20:35] <Decker> goes again back to no M:1 AST nodes (tokens)  My parser actually eats { and } so they aren't actually 'tokens'
[21:20:43] <Decker> and really the content of a text segment is a 'token'
[21:21:23] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 250 seconds)
[21:21:25] <Decker> ISO8601 times are also a glob of tokens and binary operators with : T Z +/-
[21:22:00] *** Joins: Enitin (~Enitin@82.180.145.227)
[21:22:01] <Decker> blob
[21:22:03] *** Joins: Akiva (~Akiva@user/Akiva)
[21:23:46] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[21:25:46] *** Joins: Inline (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de)
[21:26:47] <knusbaum> Consider this json: https://bpa.st/ETEA
[21:26:49] <bayaz> Title: View paste ETEA 
[21:27:34] <knusbaum> I could write an interpreter that can evaluate that structure as a piece of code that defines a function "add" with argument "x" and returns the result of adding 1 to "x".
[21:27:40] <knusbaum> And suddenly that JSON is code.
[21:28:06] <Decker> content of a interchange format is not the interchange format
[21:29:37] *** Quits: sebn (~sebn@c90-142-43-192.bredband.tele2.se) (Ping timeout: 250 seconds)
[21:29:41] <knusbaum> Sure. If I define my language this way, though, that data doesn't *stop* being JSON.
[21:30:15] *** Joins: dvanloon4 (~dvanloon@user/dvanloon)
[21:30:40] *** Quits: bababb (~baracurda@user/parserblabla) (Remote host closed the connection)
[21:30:51] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[21:30:52] *** dvanloon4 is now known as dvanloon
[21:32:05] *** Quits: HP55555 (~HP51248@49.205.97.143) (Ping timeout: 252 seconds)
[21:32:33] *** Joins: pulse (~pulse@user/pulse)
[21:32:48] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[21:35:37] *** Quits: newwebdev13 (~newwebdev@78.135.91.191) (Read error: Connection reset by peer)
[21:35:57] *** Joins: newwebdev13 (~newwebdev@78.135.91.191)
[21:37:12] *** Joins: HP55555 (~HP51248@49.205.97.143)
[21:38:00] *** Quits: jkotra (~jkotra@122.176.152.121) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[21:38:56] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[21:39:29] *** Joins: jkotra (~jkotra@122.176.152.121)
[21:40:24] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[21:40:49] *** Joins: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs)
[21:41:41] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[21:41:47] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[21:42:13] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:43:11] *** suss` is now known as suss
[21:46:05] *** Joins: Wh0 (~V@43.242.116.42)
[21:46:20] <Wh0> are there any tool which can convert database/grid/table into mindmap?
[21:47:34] *** Quits: newwebdev13 (~newwebdev@78.135.91.191) (Read error: Connection reset by peer)
[21:47:45] <[itchyjunk]> use sql and mindmap api to glue the two datastructure together?
[21:47:59] *** Joins: newwebdev13 (~newwebdev@78.135.91.191)
[21:48:17] <InPhase> Wh0: There are a variety of Python libraries for producing those.
[21:48:37] *** Quits: raym (~raym@user/raym) (Read error: Connection reset by peer)
[21:49:09] *** Quits: stanlib (~archblade@user/stanlib) (Remote host closed the connection)
[21:49:21] *** Joins: raym (~raym@user/raym)
[21:49:49] <InPhase> Wh0: And plenty of accompanying tutorials.  You would probably have to manually figure out how to map the database contents to it.  There are various ways to interpret tabular data.
[21:49:59] <Wh0> https://www.analyticsvidhya.com/blog/2016/06/12-free-mind-mapping-tools-data-scientist-enhance-structured-thinking/ any of such/similar tool can import table data & convert/format into mind-map?
[21:52:05] <InPhase> That said, I don't really understand the fascination people have with mind maps.  I think they almost always just give people the sense that information is being relayed, when I think in reality very little information is actually being relayed.
[21:53:01] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[21:53:06] <Wh0> i guess mindmap is good way of abstraction. (to hide unrelated information)
[21:53:13] <InPhase> They can be a handy way to jot down a set of related things that an individual is thinking about, but they don't seem very useful for communication.
[21:53:26] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:53:34] <Wh0> so it is better for user point of view to focus one thing at a time as well as it is nice to scroll infromation
[21:53:54] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[21:53:54] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[21:53:54] *** Joins: tane (~tane@user/tane)
[21:54:20] *** Joins: ddakx1 (~ddakx@68.169.216.216)
[21:54:32] *** Quits: ddakx (~ddakx@68.169.216.216) (Read error: Connection reset by peer)
[21:54:36] *** Joins: wauterboi (~wauterboi@185.195.233.148)
[21:58:48] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8483:311f:2ee1:73a2)
[21:59:27] <Sqaure> The old dilemma came up at work today. Complete rewrite or incremental improvements. Where the incremental stuff i pretty expensive in 10ish systems has to do manual migrations. 
[21:59:27] *** Joins: vitali64_ (~vitali64@user/vitali64)
[21:59:40] <Sqaure> is pretty*
[21:59:57] <bomb> incremental all the way
[22:00:09] <EdFletcher> seconded! what'd your team chose Square? 
[22:00:16] *** Quits: vitali64 (~vitali64@user/vitali64) (Killed (NickServ (GHOST command used by vitali64_)))
[22:00:46] *** vitali64_ is now known as vitali64
[22:00:56] <beaky> complete rewrite in rust
[22:01:00] <Sqaure> i worked at a place where a dude, who won the national maths compitition was the architect, he favored complete rewrite.
[22:01:20] <Sqaure> its of course a case by case thing.
[22:01:30] <bomb> beaky lol, instant front page on Reddit and HN
[22:01:50] <Sqaure> But id say, this time incremental is damn(!) expensive. 
[22:03:10] <EdFletcher> that much of a ball of mud huh? (or 10 balls of mud, as i'm now realizing after re-reading the initial message!) 
[22:04:31] *** Joins: Pickchea (~private@user/pickchea)
[22:07:27] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[22:14:39] *** Joins: stanlib (~archblade@user/stanlib)
[22:17:51] <ProfSimm> Decker: I think it's helpful to think how human speech works. Is it code or data
[22:18:09] <ProfSimm> Decker: if I tell you to drop and give me 10 and you do, it's code. Otherwise it's data :P
[22:18:15] <sonny> why is incremental expensive?
[22:18:15] <tane> (or (both))
[22:20:14] <ProfSimm> Sqaure: divide and conquer an option/
[22:20:15] <ProfSimm> ?
[22:20:30] <sonny> tbh, I don't think a rewrite will help ... it's a better idea to write a spec instead (in haskell)
[22:21:56] <Sqaure> sonny, every change to the "platform" requires users of the platform to upgrade. These can be pretty pricey / complex. 
[22:22:07] *** Joins: flaqoniun (~F@32.211.211.39)
[22:22:39] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[22:22:54] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:23:47] <sonny> rip
[22:23:51] <Sqaure> sonny, i have rewritten 50% of the app in haskell. The complicated parts. What remains are a bunch of easy / well defined submodules. But my peers requires an upgrade path, which i dont have yet.   
[22:24:28] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f993:6a7c:72e3:a108) (Quit: fe23)
[22:24:47] <Sqaure> also they are afraid of Haskell and think we should use React and Java for some parts.
[22:24:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:b200:f874:1c07:de06:7cf8)
[22:25:19] <sonny> what got improved by using Haskell?
[22:25:30] <ProfSimm> sonny: neckbeard density
[22:25:37] <Sqaure> haha =D
[22:25:55] <sonny> Also if it's a team effort, I guess you just have to be democratic about it
[22:26:20] <Sqaure> sonny, well. It was easy to improve so basically all parts of the app. But expecially a central DSL that is a mess and written in Java. 
[22:26:33] <sonny> oh, cool
[22:26:42] <sonny> so you made a dsl?
[22:26:58] <Sqaure> yes
[22:27:51] <sonny> did you use happy (haskell yacc?)
[22:28:19] *** Quits: Wh0 (~V@43.242.116.42) (Quit: Leaving)
[22:28:21] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[22:30:05] <sonny> I guess the alternative would have been to use xtext, but Haskell does seem more suitable to this task
[22:30:17] <ProfSimm> Sqaure: I'm curious to see a sample of the DSL
[22:30:18] <sonny> (xtext is Java)
[22:30:20] <ProfSimm> If that's Ok
[22:30:26] *** Quits: shkurata (~shkurata@ptr-8riebuk3lxjk0l22r6z.18120a2.ip6.access.telenet.be) (Quit: Leaving...)
[22:30:28] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[22:30:40] <ProfSimm> Sqaure: I'm writing a language that makes it trivial to make DSLs
[22:30:48] <Sqaure> sonny, no. Some mix of basic Haskell constructs like Read/Write monad + Validation (Applicative). Multiparam type classes and Template Haskell.  
[22:31:04] <sonny> ah
[22:31:54] <sonny> curious, why not use scala or clojure etc?
[22:32:17] <sonny> no major changes would be required
[22:33:11] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[22:33:16] <ProfSimm> sonny: why use scala/clojure over java?
[22:33:17] *** Quits: widp (~widp@124.123.105.73) (Remote host closed the connection)
[22:33:18] <flaqoniun> trivial to write a DSL, with error checks too?
[22:33:29] *** Joins: vicfred (~vicfred@user/vicfred)
[22:33:58] <ProfSimm> flaqoniun: well there's a wide range/types of errors
[22:34:04] <Sqaure> I went on the scala track for a while. Compared to haskell it was a mess. Pre 3.0? Clojure isnt statically typed. We need a strong type system
[22:34:05] <ProfSimm> flaqoniun: so I'd need an example maybwe
[22:34:17] <sonny> makes sense
[22:34:28] <flaqoniun> syntax errors
[22:35:01] <ProfSimm> flaqoniun: syntax errors are built-in. Technically the syntax doesn't change. It's just a very flexible syntax.
[22:35:03] *** Joins: rcesptro (~rcesptro@180.247.221.78)
[22:35:20] <sonny> I forgot clojure was a 'lisp', so they have static types now, or is it optional?
[22:35:26] <flaqoniun> how can it be trivial i need to see a sample of this
[22:35:30] <ProfSimm> flaqoniun: you can also emit errors on the expression tree, which people see in their editor underlined and so on
[22:35:51] <flaqoniun> oh wait you're the one who says parsers are "super easy"
[22:35:51] <flaqoniun> nvm
[22:35:58] *** Joins: RaGE_Syria (~thelounge@47-197-61-95.tamp.fl.frontiernet.net)
[22:36:00] <ProfSimm> flaqoniun: haha
[22:36:26] <sonny> flaqoniun example of what?
[22:36:29] <ProfSimm> flaqoniun: easy/hard are relative words you know
[22:36:49] <flaqoniun> super is an adjective you know
[22:37:05] <sonny> ?
[22:38:52] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[22:40:13] *** Quits: password2 (~password8@user/password2) (Ping timeout: 240 seconds)
[22:41:35] <ProfSimm> flaqoniun: try pasting some JSON on left http://coltram.com/proto/
[22:41:36] <bayaz> Title: Parser 
[22:42:00] <ProfSimm> flaqoniun: the language happens to be a superset of JSON, not intentional, but welcome
[22:42:07] *** Joins: tyson2 (~user@bras-base-toroon0949w-grc-02-142-114-235-113.dsl.bell.ca)
[22:42:18] <ProfSimm> flaqoniun: regular math also works like  (foo * 5) ^ 8 + 12 and so on
[22:42:52] <ProfSimm> flaqoniun: this is just the expression tree parser, and some things are missing, but with the token/expression printer it's like 800 lines. It's nothing
[22:43:07] <ProfSimm> flaqoniun: of course that's because the syntax is relatively simple and homoiconic
[22:44:17] <ProfSimm> flaqoniun: so I guess parsers are super easy mkay :P
[22:44:22] *** Quits: HP55555 (~HP51248@49.205.97.143) (Ping timeout: 272 seconds)
[22:46:37] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[22:47:06] *** Joins: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541)
[22:47:44] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[22:47:56] *** Joins: flaqoniun (~F@32.211.211.39)
[22:48:33] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:48:45] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:49:57] *** Quits: Matt|home (~matt@adsl-74-233-58-210.mia.bellsouth.net) (Quit: Leaving)
[22:51:19] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[22:53:29] *** Joins: Cashlin (~hp@user/cashlin)
[22:54:02] <flaqoniun> does it just create a tree for parsing, or actually does the language parsing?
[22:55:17] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[22:55:17] <flaqoniun> that page just shows two different color rectangles
[22:55:36] <ProfSimm> flaqoniun: this is just a small part of the thing, but I was trying to show that I've moved as much as possible to the standard library, and away from the actual syntax/parser. This permits not only flexibility within the language, but allows creating DSLs which have alternate interpretations of the same expression tree.
[22:55:42] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[22:55:44] <ProfSimm> flaqoniun: anyway, this is way too early to demo
[22:55:49] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[22:56:11] <ProfSimm> flaqoniun: the link is just source -> tokens -> expression tree
[22:56:32] <ProfSimm> flaqoniun: the expression tree is basically the core abstraction around which everything is based
[22:56:32] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[22:56:57] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:57:23] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:57:40] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 272 seconds)
[22:57:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:58:07] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:58:53] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[23:00:16] <ProfSimm> flaqoniun: one reason why this thing is small is because I spent an eternity thinking why so many structures in common C-like languages look like one another, and how to reduce them to one thing. I.e. why do languages have if/then/else, but also ternary operator, also switch/case and so on and so on
[23:00:25] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Quit: Leaving)
[23:00:31] <ProfSimm> flaqoniun: the language also has NO KEYWORDS
[23:00:37] <ProfSimm> flaqoniun: no reserved words
[23:00:44] *** Joins: menace (~someone@ppp-93-104-177-126.dynamic.mnet-online.de)
[23:00:52] <ProfSimm> Means you can use everything as a var name and method name
[23:01:02] *** Quits: menace (~someone@ppp-93-104-177-126.dynamic.mnet-online.de) (Changing host)
[23:01:02] *** Joins: menace (~someone@user/menace)
[23:01:06] *** menace is now known as Deknos
[23:01:22] <ProfSimm> flaqoniun: this is important when making DSLs not only so you're not blocked from using words, but also so you don't type words to do somrthing in the DSL
[23:01:28] <ProfSimm> Instead it's only words you choose
[23:01:29] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:01:42] *** Joins: nicbk (~nicbk@user/nicbk)
[23:02:03] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:02:34] *** Joins: hololeap (~hololeap@user/hololeap)
[23:02:52] <InPhase> ProfSimm: Found a bug.
[23:03:14] <InPhase> ProfSimm: 2.0e5 parses as a number.  2e5 parses as a number adjacent to a variable.
[23:03:17] *** Joins: elronus (~trace@user/trace)
[23:03:42] <InPhase> Or "name"
[23:03:45] <ProfSimm> InPhase: ah yeah I'm testing only with integers right now, but thanks good call
[23:03:50] *** bomb is now known as bomberman
[23:04:19] *** Quits: Payam49 (~Payam@138.106.57.131) (Quit: Client closed)
[23:04:55] *** elronus is now known as traeis
[23:05:20] *** Quits: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[23:05:27] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 268 seconds)
[23:06:09] <ProfSimm> InPhase: 2e5 bug fixed ;-) thanks
[23:07:21] <InPhase> ProfSimm: -5 okay, --5 okay, ---5 error
[23:07:33] <pyzozord> ouch, second day headache
[23:07:53] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[23:08:37] <pyzozord> can't focus or learn
[23:08:49] <bomberman> migraine?
[23:08:57] <duckgoose> maybe time to go to the ER
[23:09:51] <pyzozord> nah it's not strong enough for er, but if it won't stop by tomorrow I probably need to give myself break from screens
[23:09:59] <pyzozord> that's why I need an eink display :P
[23:10:04] <ProfSimm> InPhase: I disabled unary operators because I'm trying to figure out some things there.
[23:10:35] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[23:10:39] <ProfSimm> InPhase: but yes that's messed up
[23:10:43] <kee> pyzozord: A matte LCD with a white background is almost as good.
[23:10:45] <InPhase> ProfSimm: I tuned in to look for language examples, and didn't find those, so I was just poking the parser for defects.  :)
[23:11:43] <ProfSimm> InPhase: cool :) yes no examples, sorry. I'll ping you when I have them ;-)
[23:11:53] <pyzozord> kee: nah they have still emitted light, that's headache inducing. Or at least is bothersome when you have a headache
[23:11:56] *** Quits: rsx (~dummy@ppp-188-174-146-62.dynamic.mnet-online.de) (Quit: rsx)
[23:12:03] <pyzozord> need reflective screen
[23:12:35] <InPhase> ProfSimm: 10+2*2+10  This parses into a tree that will produce 144 as the answer.  Math teachers everywhere are sobbing quietly.  ;)
[23:12:46] <kee> pyzozord: A matte LCD with a white background and the backlight turned off doesn't emit light.
[23:12:57] <kee> Look into reflective LCD.
[23:13:16] <pyzozord> yeah that sounds better
[23:13:21] *** Quits: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541) (Remote host closed the connection)
[23:13:25] <pyzozord> do you have some links to look at it
[23:13:55] <kee> Sadly, no; they died in the great Firefox catastrophe of 2019. But Wikipedia should suffice.
[23:14:13] <ProfSimm> InPhase: damn unary operators :P 
[23:14:15] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Remote host closed the connection)
[23:14:28] <ProfSimm> InPhase: you'll make me sit down and fix all those tonight :/
[23:14:29] <pyzozord> kee: sounds like a catasrophic level event
[23:14:38] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:14:47] *** bomberman is now known as bomb
[23:15:01] <kee> pyzozord: It turns out that restoring a session every day for two and a half years, through multiple Firefox versions, eventually leads to a major problem.
[23:15:19] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.224) (Ping timeout: 268 seconds)
[23:16:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:16:03] <kee> pyzozord: https://en.wikipedia.org/wiki/Cholesteric_liquid_crystal I got distracted; this isn't what I was talking about, but it's better.
[23:16:04] <bayaz> Title: Cholesteric liquid crystal - Wikipedia 
[23:16:36] <kee> https://en.wikipedia.org/wiki/Ferroelectric_liquid_crystal_display is another article on the same subject.
[23:16:36] <bayaz> Title: Ferroelectric liquid crystal display - Wikipedia 
[23:16:49] *** Quits: operateur (~My_user_n@109-93-70-164.dynamic.isp.telekom.rs) (Quit: WeeChat 3.4.1)
[23:17:00] <ProfSimm> InPhase: in your opinion should -5 be a numeric literal or "unary minus" and 5
[23:17:16] <ProfSimm> InPhase: clearly in JSON it's the former, because they have no unary operators anyway
[23:17:18] *** Joins: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541)
[23:18:05] <InPhase> ProfSimm: You are deciding what the evaluation is for:  -5^2
[23:18:18] <InPhase> ProfSimm: Python says -25
[23:18:29] <InPhase> If you make -5 a numeric literal, then it's 25.
[23:18:52] <InPhase> (Python when I swap in ** of course.)
[23:18:59] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6) (Quit: Textual IRC Client: www.textualapp.com)
[23:19:01] <ProfSimm> InPhase: well it also depends on the precedence of the unary minus
[23:19:25] <ProfSimm> InPhase: I'm actually surprised Python returns -25
[23:20:05] <Trashlord> has anyone here used the service Turing.com? It's for being recruited as a dev
[23:20:28] <InPhase> Trashlord: Is their service complete?
[23:20:29] <ProfSimm> InPhase: JavaScript is being very interesting in this regard:   -5**2 ---> "SyntaxError: Unary operator used immediately before exponentiation expression. Parenthesis must be used to disambiguate operator precedence"
[23:20:35] <Trashlord> I've been doing this Python skills test there, but got disconnected, and as a result the test is marked as a failure and I can't retake it for 91 days. It's bullshit
[23:20:44] <InPhase> Trashlord: Perhaps not...
[23:20:47] <ProfSimm> Inline: "JavaScript: pick option A or B" JavaScript: "SyntaxError"
[23:21:00] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:21:05] <InPhase> Trashlord: I guess that's what you get for taking a Turing test.
[23:21:24] <Trashlord> InPhase: it's insane
[23:21:33] <InPhase> Trashlord: Do they have a support contact?
[23:21:35] *** Joins: justOkay (~justache@user/justache)
[23:21:42] <Trashlord> also if you refresh the page during a question it marks the question as having failed
[23:21:48] *** Joins: vitali64_ (~vitali64@user/vitali64)
[23:22:05] <Trashlord> I don't think they do
[23:22:07] <InPhase> Trashlord: Standard practice would be to have a system for voiding or correcting a technical issue.  If they don't have that with at least a 5 day response time, then it's not professional grade I suppose.
[23:22:10] <Trashlord> well, I can't find it
[23:22:47] <Jong> knusbaum finding an LR rate, # of nodes, etc can be a search problem, but it can also be brute forcing every combination
[23:24:23] *** Joins: jazzy (~jaziz@user/jaziz)
[23:24:31] <pyzozord> i honestly need to make my own computer from raspberry pi and eink screen
[23:24:36] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[23:24:47] *** vitali64_ is now known as vitali64
[23:25:10] *** Joins: biberao (~m@user/biberao)
[23:25:12] <biberao> hi
[23:25:14] <pyzozord> I don't understand why these epaper modules come with the entire huge "hat" board
[23:25:18] <flaqoniun> hiiiiiiiiiii
[23:25:45] <pyzozord> also this is amazing https://www.youtube.com/watch?v=vkfISTkkO3I
[23:25:46] <bayaz> Title: Waveshare 9.7inch E-Paper E-Ink Display, HDMI Interface, 15Hz Refresh Rate, 1200?825 Pixels 
[23:26:13] <flaqoniun> that sounds excellent for programming, how much do they want?
[23:26:18] <pyzozord> 15hz refresh that's pretty letting you watch youtube
[23:26:20] <flaqoniun> if the screen was a bit bigger
[23:26:25] <duckgoose> that'd be cool on an art tablet 
[23:26:40] <duckgoose> refresh probably aint good enough tho
[23:27:09] <pyzozord> good enough for me
[23:28:31] <pyzozord> https://www.waveshare.com/9.7inch-hdmi-e-paper.htm
[23:28:52] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:30:11] <ProfSimm> InPhase: I fixed the bugs you reported and enabled back unary operators out of embarassment
[23:30:16] <pyzozord> oh wait that hat is an fpga
[23:30:23] *** Quits: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541) (Remote host closed the connection)
[23:30:30] <ProfSimm> InPhase: I do allow -----5 though. Not sure if I have to forbid it. --5 is +5
[23:31:11] *** Quits: tolot (~tolot@dynamic-078-049-154-014.78.49.pool.telefonica.de) (Quit: Leaving)
[23:31:27] <ProfSimm> InPhase: in this version -5^2 is (-1 * (5)) ^ 2
[23:31:56] <ProfSimm> Hey folks what do you expect:  - 5 ^ 2   should be 25 or -25
[23:32:40] <bomb> we need to talk to your high school mat teacher
[23:32:40] <CalimeroTeknik> php would say - 5^2 = -25, but -5 ^ 2 = 25
[23:33:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:33:13] <pyzozord> python says -25
[23:33:15] <flaqoniun> Ada would say something like "unary minus requires parentheses"
[23:33:16] <duckgoose> nobody listens to PHP
[23:33:21] <ProfSimm> Oddly Python says -25, and JavaScript throws a SyntaxError saying basically "I don't know, use parenthesis"
[23:33:24] <CalimeroTeknik> the proponent of one of the two was indeed a mat teacher
[23:33:44] *** Joins: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541)
[23:33:50] <ProfSimm> flaqoniun: so JS took the Ada route
[23:33:54] <duckgoose> they should make it throw an error that says "don't write math stupidly" 
[23:33:55] <CalimeroTeknik> ProfSimm, no but js doesn't have exponentiation
[23:33:57] <ProfSimm> Is it that controversial what it is?!
[23:34:02] <ProfSimm> CalimeroTeknik: they added it: **
[23:34:15] <duckgoose> seriously
[23:34:25] <ProfSimm> srsly
[23:34:25] <CalimeroTeknik> ah, the ECMA folks keep doing it
[23:34:27] <duckgoose> throwing an error is better than giving wrong answer
[23:34:32] <duckgoose> FOR SERIOUS
[23:34:40] <CalimeroTeknik> SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'
[23:34:42] <CalimeroTeknik> :D
[23:34:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:34:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:34:58] <ProfSimm> duckgoose: I'm open to the idea. But a syntax error is a bit too much
[23:35:49] <flaqoniun> pyzozord i think it needs the fpga for HDMI implementation,  the 7.5 screen alone is $75  so i think the Eink revolution is almost here!
[23:35:55] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[23:36:02] *** Joins: inhahe_ (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[23:36:12] <duckgoose> nah
[23:36:18] <duckgoose> they have to fix burn in before its here
[23:36:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:36:36] <pyzozord> flaqoniun: yes we are close, 15hz display, that wasn't a thing just a year ago. I've been monitoring (hehe) this market for few years
[23:37:23] <pyzozord> flaqoniun: can't raspberry pi handle hdmi?
[23:37:36] <pyzozord> or a normal computer?
[23:37:39] <pyzozord> I'm not sure I understand
[23:38:01] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[23:38:14] <GeDaMo> The bare screen likely doesn't implement HDMI
[23:39:02] <flaqoniun> it has a pretty oldschool looking ribbon cable as it's input
[23:39:04] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:39:41] <pyzozord> can't raspberry pi somehow connect to that ribbon?
[23:39:54] <pyzozord> with the gpio pins
[23:40:08] <flaqoniun> maybe, but i don't know about 15hz
[23:40:11] <flaqoniun> at that resolution
[23:40:12] <pyzozord> or ideally with some port
[23:40:15] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Remote host closed the connection)
[23:40:25] <pyzozord> oh wait, via hdmi, but then we end up with that hat again
[23:40:36] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:40:38] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4a2c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:40:38] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:41:07] <GeDaMo> The slowest HDMI mode is something like 300MHz
[23:41:09] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:41:11] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[23:41:28] <flaqoniun> i mean bypassing hdmi and using the GPIO
[23:42:08] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4a2c)
[23:42:27] <flaqoniun> i don't know the max rates rPi can handle
[23:43:15] <flaqoniun> it CAN be turned into an fm transmitter though so it's got to be in the hundreds of mhz ?
[23:43:24] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:43:35] <FloridaMan> A FloridaMan transmitter?
[23:44:02] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.234)
[23:44:28] *** Joins: Auron (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net)
[23:44:52] *** Auron is now known as Guest7772
[23:45:41] *** Quits: Guest7772 (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net) (Remote host closed the connection)
[23:46:24] <flaqoniun> that resolution would require something like 61 million bits/second 
[23:46:26] <flaqoniun> at 15hz
[23:46:38] <flaqoniun> 4bits/pizel
[23:47:42] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Ping timeout: 272 seconds)
[23:47:48] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[23:49:49] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.234) (Quit: Leaving)
[23:50:15] <pyzozord> isn't milion mega?
[23:50:17] <flaqoniun> actually i don't know it depends on how the signal is read by the screen
[23:50:23] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:51:52] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Client Quit)
[23:52:31] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:54:21] <ProfSimm> Can someone recommend a good "playground code editor" web component
[23:54:54] <ProfSimm> You know with tabbable editor, drop down examples
[23:55:34] <pulse> yes
[23:55:40] <pyzozord> ProfSimm: you should be able to use vscode on the web nowadays
[23:56:12] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:56:15] <ProfSimm> pyzozord: that probably is a bit too much
[23:56:38] <pulse> ah
[23:56:40] <pulse> CodeMirror
[23:56:57] <pulse> assuming you're looking for a code editor in the browser
[23:57:03] <pulse> idk what you mean by tabbable
[23:57:56] <ProfSimm> pulse: codemirror is nice, thanks
[23:58:13] <ProfSimm> pulse: well I meant things I can trivially add by myself. The editor is prolly the most important part.
[23:58:24] *** Quits: baffodoro (~raffaem@95.74.63.143) (Ping timeout: 252 seconds)
[23:58:25] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:58:31] <pulse> yeah try CodeMirror, it's pretty damn good
[23:59:10] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[23:59:58] <ProfSimm> What it does on select text + shift tab is a bit dumb but oh well
