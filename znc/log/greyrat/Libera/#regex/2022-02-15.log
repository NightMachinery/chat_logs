[00:15:45] *** Joins: w0ng (~w0ng@103.1.212.190)
[00:29:43] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[00:29:45] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:31:39] *** Joins: wyre (~wyre@user/wyre)
[00:46:21] *** Joins: dandyn (~dandyn@user/dandyn)
[00:53:30] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: Ping timeout (120 seconds))
[00:54:02] *** Joins: monoxane (~monoxane@user/monoxane)
[01:06:24] *** Joins: netpipe (~netpipe@user/netpipe)
[01:07:50] *** Quits: netpipe (~netpipe@user/netpipe) (Client Quit)
[01:33:45] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:34:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[01:37:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:48:07] *** Joins: subie (~subie@2601:4c0:4080:bc0:a17c:d079:69d0:6b80)
[01:48:55] *** Quits: jinsun (~jinsun@user/jinsun) ()
[01:49:16] *** Joins: jinsun (~jinsun@user/jinsun)
[01:50:29] *** Quits: jinsun (~jinsun@user/jinsun) (Client Quit)
[01:50:46] *** Joins: jinsun (~jinsun@user/jinsun)
[01:55:29] *** Joins: re101-gar-3 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net)
[01:55:50] <re101-gar-3> email address validation
[01:56:02] <OnlineCop> !email
[01:56:02] <perlbot> http://www.regular-expressions.info/email.html, https://emailregex.com/, https://regex101.com/library?orderBy=MOST_POINTS&search=email
[01:56:06] <re101-gar-3> Email Address: You must use split() to split the email address up at the "@"
[01:56:06] <re101-gar-3> symbol, and the "." character, and check each part separately with regular
[01:56:07] <re101-gar-3> expressions.
[01:58:54] <OnlineCop> re101-gar-3: What do you have so far?
[01:59:40] <re101-gar-3> var username = email.split('@')[0];
[01:59:40] <re101-gar-3>                 var other = email.split('@')[1];
[01:59:41] <re101-gar-3>                 var domain = other.split('.')[0];
[02:00:26] <OnlineCop> Does your input allow more than a single email address per line?
[02:00:50] <OnlineCop> It's easier if not, but if you have to deal with multiple email addresses per line, it becomes more problematic.
[02:02:01] <OnlineCop> Don't forget that TLDs (top-level domains) can actually have more than one '.' in them, such as `.co.uk`
[02:03:06] <re101-gar-3> No, only single email is allowed
[02:03:48] <re101-gar-3> var isValid = true;
[02:03:49] <re101-gar-3>                 var username = email.split('@')[0];
[02:03:49] <re101-gar-3>                 var other = email.split('@')[1];
[02:03:50] <re101-gar-3>                 var domain = other.split('.')[0];
[02:03:50] <re101-gar-3>                 if (other.length == 3) {
[02:03:51] *** rebot sets mode: +q re101-gar-3!*@*
[02:03:52] <rebot> 14re101-gar-3: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[02:03:56] <OnlineCop> someone@this.is.my.custom.domain.example.co.uk  <-- That would be a valid email address.
[02:04:21] *** rebot sets mode: -q re101-gar-3!*@*
[02:04:28] <re101-gar-3> yes
[02:04:34] <re101-gar-3> var isValid = true;
[02:04:35] <re101-gar-3>                 var username = email.split('@')[0];
[02:04:35] <re101-gar-3>                 var other = email.split('@')[1];
[02:04:35] <OnlineCop> We only get about 4 lines of what you pasted before the auto-spam bot blocks/mutes the rest of your text.
[02:04:36] <re101-gar-3>                 var domain = other.split('.')[0];
[02:04:36] <re101-gar-3>                 if (other.length == 3) {
[02:04:36] *** rebot sets mode: +q re101-gar-3!*@*
[02:04:37] <rebot> 14re101-gar-3: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[02:04:47] <OnlineCop> !paste
[02:04:48] <perlbot> Please use https://bpa.st/ for sharing large amounts of code/data, or https://ideone.com/ to share an executable code sample.
[02:05:06] *** rebot sets mode: -q re101-gar-3!*@*
[02:05:11] <re101-gar-3> https://ideone.com/iES90F
[02:05:34] <OnlineCop> Javascript? Java?
[02:05:52] <re101-gar-3> javascript
[02:11:41] <OnlineCop> What does it mean that you must check "each part separately" with regular expressions? Each part of what?
[02:12:57] <re101-gar-3> each part of email address, we need to check it with regex
[02:14:23] <OnlineCop> I'd use the regex found on https://emailregex.com (the one for Javascript) and then use the first portion to validate the stuff before the '@' character, and the stuff after that to validate the domain portion.
[02:17:49] <re101-gar-3> Cool, Thank you so much
[02:21:10] *** Joins: stenno (~stenno@user/stenno)
[02:24:41] <stenno> good day, using javascript regexp, i am trying to match all characters of a line until a certain character. I am using negative lookahead, and got it working: /(.(?!a))+/
[02:25:14] <stenno> however, i am playing around in regexr now and was surprised the following doesn't work:
[02:25:15] <OnlineCop> A single character, or a large number of characters?
[02:25:25] <stenno> all characters
[02:25:35] <stenno> err
[02:25:43] <OnlineCop> For example, `[^\na]+` will match everything on the line until it hits an 'a'.
[02:25:51] <OnlineCop> `[^a\n]+` if it makes it more readable.
[02:25:53] <stenno> like in my example, i wanted to get every character until an a is matched
[02:26:05] <stenno> right
[02:26:22] <OnlineCop> Do you have an example, like on regex101 or somewhere?
[02:26:50] <stenno> i was wondering why the following wouldn't work /^(.(?!a))+/
[02:27:03] <stenno> https://regexr.com/6fe7q
[02:27:04] <rebot> 14Hey, stenno! Please consider posting your regex to https://regex101.com/ which is our preferred regex editor. Thanks! :)
[02:27:10] <OnlineCop> Put the negative look-ahead BEFORE the '.' that you're checking.
[02:27:21] <OnlineCop> `/^((?!a).)+/`
[02:27:53] <OnlineCop> That will "peek" right. If it's not an 'a', it will THEN continue. Which in this case, is matching an 'anything-but-newline' character.
[02:28:04] <stenno> ooh that way
[02:28:07] <stenno> thats confusing for me lol
[02:28:28] <OnlineCop> There's a "look-left" which is structured like `(?<=...)` or `(?<!...)`.
[02:28:38] <OnlineCop> The `(?=...)` and `(?!...)` look to the right.
[02:28:52] <OnlineCop> The former are positive lookarounds; the latter are negative lookarounds.
[02:29:17] <OnlineCop> So you could match '^(.(?<!a))` if you wanted to use a negative look-behind.
[02:29:45] <stenno> well if i look here:
[02:29:47] <stenno> https://www.regular-expressions.info/lookaround.html
[02:29:51] <OnlineCop> Some regex languages support variable-length look-behinds (Javascript, .NET, some Java) but most don't and you have to do it as a lookahead instead.
[02:30:23] <stenno> this will match a q that is not followed by an u: q(?!u)
[02:30:55] <OnlineCop> Right. It first matches 'q'. Then it will assert if 'u' is found to the right.
[02:31:47] <OnlineCop> So in the text "quest", it matches 'q' correctly at position [0]. Then it will have its current index at [1] and assert that text[1] doesn't equal 'u'. If it does, the match fails.
[02:32:50] <OnlineCop> Now, if it's `qat` instead, text[0] matches 'q' as expected. text[1] does NOT equal 'u', so that assertion does not fail, so you now have a successful match.
[02:34:30] <stenno> hmm i just tried /^((?!a).)+/ but it didn't match either
[02:35:25] <stenno> https://regexr.com/6fe7q
[02:35:26] <rebot> 14Hey, stenno! Please consider posting your regex to https://regex101.com/ which is our preferred regex editor. Thanks! :)
[02:35:54] <stenno> wait it does
[02:36:07] <OnlineCop> It does, but with one caveat:
[02:36:12] <stenno> it was just regexr failing
[02:36:40] <OnlineCop> When you have a single (...) capture group that you repeat with a `*` or `+`, it will keep "clobbering" whatever it had stored in result $1.
[02:37:18] <OnlineCop> With "foo bar", 'f' is stored in $1, then the `+` quantifier makes it match again, so $1 is replaced by 'o', then again by 'o', then with '[space]'.
[02:37:48] <OnlineCop> Oh, and once again for 'b' in "bar".
[02:38:03] <OnlineCop> Finally, the assertion fails when it sees 'a' in "bar" and your $1 variable is... "b" instead of "foo b" like you'd expect.
[02:38:44] <stenno> yeah i see, my group is only a single character
[02:38:45] <OnlineCop> I like to wrap a repeating group within a single outer capture group: `/^((?:(?!a).)*)/`
[02:39:02] *** Quits: re101-gar-3 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net) (Quit: Client closed)
[02:39:31] <stenno> yeah i see
[02:39:31] <OnlineCop> The `(?:...)` is just a group that isn't captured. You could do `/^(((?!a).)*)/` if you'd like, but then you have both capture group $1 (the entire "foo b") and $2 (whatever keeps getting clobbered in $2).
[02:39:36] <stenno> non-capturing groups
[02:39:38] <stenno> right
[02:40:13] <OnlineCop> Yup. Some people are already familiar with stuff like that, but until I know you know it, I'd rather err on the side of "over-explain". :P
[02:40:17] <stenno> this is still a little bit confusing for me, but thanks a lot 
[02:40:31] <OnlineCop> What kind of stuff are you still confused on?
[02:41:41] <stenno> q(?!u)
[02:41:51] <stenno> so this means: 'match a q unless it is followed by an u', right
[02:41:58] <OnlineCop> Right.
[02:42:23] <stenno> .(?!u) means: match any character which is not followed by an 'u'
[02:42:50] <stenno> .(?!u) means: match any character unless it is followed by an u'
[02:42:52] <OnlineCop> `q(?!uiet)` in the text "quest quiet quietly" will match 'q' in "quest" but not in either "quiet" or "quietly" (because it has "quiet" in it, which is supposed to be a failure).
[02:43:20] <OnlineCop> Yes, `.(?!u)` means to match any character unless that character is followed by 'u'.
[02:43:56] <stenno> `(?!u).` then basically means 'match the first character that is not a `u` ?
[02:44:56] <OnlineCop> The `(?!u).` says "make sure the next character isn't a `u`. If it IS, stop matching. Otherwise, continue and match `.` (anything)"
[02:46:03] <OnlineCop> It will evaluate your pattern left-to-right. First the '.' in `.(?!u)`, or first the "(?!u)" in `(?!u).` and if that succeeds, match the second thing: the "(?!u)" in `.(?!u)` or the '.' in `(?!u).`
[02:47:00] <OnlineCop> The only time that the `/./` dot metacharacter will fail to match is if it's at the end of a line (it won't match newlines, like [^\n], unless you have a special /s flag to tell it to match everything).
[02:49:19] <stenno> yeah i got it now
[02:49:24] <stenno> thanks for the explanation and the patience
[02:49:29] <OnlineCop> My pleasure.
[02:55:10] <stenno> VectorX: hi lol
[02:58:01] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:59:24] <stenno> VectorX: to switch to the ontopic channel, why would your variant be more efficient?
[02:59:51] <stenno> or rather, what do you mean with 'efficiency' here
[03:00:16] <VectorX> hey
[03:00:22] <VectorX> I selected PCRE so you can see the step count, 20 https://regex101.com/r/Hgabvk/1 vs 10 https://regex101.com/r/Hgabvk/2 vs 5 https://regex101.com/r/Hgabvk/3
[03:01:50] <VectorX> but if you were matching more than a char the lookaround would be the way to go again depending on your logic which ever that works
[03:02:49] <OnlineCop> Or combine them...
[03:02:59] <VectorX> ie https://regex101.com/r/Hgabvk/4   https://regex101.com/r/Hgabvk/5
[03:03:29] <OnlineCop> `^((?:[^a]+|(?!abc).)*)`
[03:05:19] <stenno> thanks!
[03:06:16] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[03:16:24] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:26:36] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 240 seconds)
[03:27:02] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[03:31:48] *** Joins: netpipe (~netpipe@user/netpipe)
[03:40:30] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 252 seconds)
[03:51:02] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:00:34] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 272 seconds)
[04:00:51] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[04:10:29] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[04:21:28] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[04:52:34] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-d449-2685-1032-d72e.res6.spectrum.com) (Remote host closed the connection)
[04:55:08] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[05:07:38] *** Joins: re101-gar-3 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net)
[05:08:20] <re101-gar-3> Phone number: Make sure to allow for square brackets, hyphens, and
[05:08:21] <re101-gar-3> dots/periods. All these phone numbers should be allowed:
[05:08:21] <re101-gar-3> [204] 555-1212
[05:08:22] <re101-gar-3> 204.444.2323
[05:08:22] *** rebot sets mode: +q re101-gar-3!*@*
[05:08:23] <rebot> 14re101-gar-3: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[05:08:28] <OnlineCop> !phone
[05:08:28] <perlbot> A simple (###) ###-#### phone number validator could be: /^\(?(\d{3})\)? ?(\d{3})-?(\d{4})$/ - For anything else, we recommend libphonenumber or another library.
[05:08:52] *** rebot sets mode: -q re101-gar-3!*@*
[05:09:11] <OnlineCop> `/^\D*(\d{3})\D*(\d{3})\D)(\d{4})\D*$/`
[05:09:51] <OnlineCop> That will ignore everything non-digit (the `\D*`), then capture 3 digits, ignore more non-digits, capture 3 MORE digits, ignore more non-digits, capture the final 4 digits.
[05:10:35] <re101-gar-3> thank you
[05:10:59] *** Parts: stenno (~stenno@user/stenno) (WeeChat 3.3)
[05:15:01] *** Joins: re101-gar-394 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net)
[05:15:06] <re101-gar-394> first name that allows -
[05:15:25] *** Quits: re101-gar-394 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net) (Client Quit)
[05:15:30] <re101-gar-3> first name that allows -
[05:15:49] <OnlineCop> What do you have so far?
[05:15:54] <OnlineCop> !name
[05:15:58] <OnlineCop> !names
[05:15:58] <perlbot> http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/
[05:16:04] <re101-gar-3> [a-z-]
[05:17:27] <OnlineCop> Can the name start or end with a hyphen?
[05:17:40] <re101-gar-3> yes
[05:17:57] <OnlineCop> That should work. Toss a `+` onto the end of it so it repeats that 1 or more times.
[05:18:55] <re101-gar-3> okay thank you
[05:22:15] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[05:24:04] *** Joins: txtsd (~txtsd@user/txtsd)
[05:27:15] *** Quits: re101-gar-3 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net) (Quit: Client closed)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:10] *** Joins: vlm (~vlm@user/vlm)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:54] *** Joins: maetthew (~maetthew@user/maetthew)
[05:43:41] *** Joins: karakedi (~eAC53C340@user/karakedi)
[05:46:43] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:06:56] *** Joins: re101-goose-46 (~re101-goo@20.24.103.80)
[06:07:14] *** Quits: re101-goose-46 (~re101-goo@20.24.103.80) (Client Quit)
[06:15:44] *** Joins: hylenbin (~hylenbin@218.68.108.240)
[06:16:06] *** Quits: hylenbin (~hylenbin@218.68.108.240) (Client Quit)
[06:16:27] *** Quits: lord_daemon (~lord_daem@187.36.203.244) (Read error: Connection reset by peer)
[06:19:47] *** Joins: lord_daemon (~lord_daem@187.36.203.244)
[06:33:04] *** Quits: lord_daemon (~lord_daem@187.36.203.244) (Read error: Connection reset by peer)
[06:37:21] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[06:48:31] *** Joins: adeliktas9 (~adeliktas@i59F5FF2F.versanet.de)
[06:50:07] *** Quits: adeliktas (~adeliktas@i59F4D79A.versanet.de) (Ping timeout: 250 seconds)
[06:50:07] *** adeliktas9 is now known as adeliktas
[07:52:24] *** Joins: blddk8 (~blddk@user/blddk)
[07:53:49] *** Quits: blddk (~blddk@user/blddk) (Ping timeout: 240 seconds)
[07:53:49] *** blddk8 is now known as blddk
[08:06:44] *** Joins: re101-ant-22 (~re101-ant@122.162.187.170)
[08:08:09] *** Quits: re101-ant-22 (~re101-ant@122.162.187.170) (Client Quit)
[08:11:14] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[08:11:50] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[08:24:45] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[08:24:47] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[08:28:16] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:01:11] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Remote host closed the connection)
[09:05:23] *** Joins: re101-dugong-68 (~re101-dug@fixed-187-188-94-158.totalplay.net)
[09:22:41] *** Joins: digitok (~death@about/regex/digitok)
[09:22:42] *** Joins: rebot (~death@about/regex/rebot)
[09:22:42] *** ChanServ sets mode: +o rebot
[09:24:26] *** Quits: re101-dugong-68 (~re101-dug@fixed-187-188-94-158.totalplay.net) (Quit: Client closed)
[09:28:42] *** Joins: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com)
[09:33:24] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:43:08] *** Joins: re101-booby-6 (~re101-boo@151.192.179.223)
[09:43:51] <re101-booby-6> https://regex101.com/r/MGtFvo/1 how do i only get the day and month from the string?
[09:45:16] *** Parts: testuser[m] (~testuserm@2001:470:69fc:105::1:167f) ()
[09:50:36] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Ping timeout: 240 seconds)
[10:02:18] <digitok> https://regex101.com/r/MGtFvo/2
[10:09:28] *** Joins: lavaball (felix@31.204.155.215)
[10:12:15] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:14:24] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Client Quit)
[10:29:09] *** Quits: cth (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:31:28] *** int is now known as Ox4
[10:32:15] <re101-booby-6> thanks @digitok it works
[10:32:29] *** Quits: re101-booby-6 (~re101-boo@151.192.179.223) (Quit: Client closed)
[10:34:07] *** Joins: palasso (~palasso@user/palasso)
[10:41:19] *** Joins: re101-cougar-74 (~re101-cou@165.225.123.55)
[10:45:07] <re101-cougar-74> can i get regex to exactly match and replace  "table" in these places  "select * from table t" , "select * from table,table2" and "select * from int_table, table , table2"
[10:50:17] <digitok> do you mean that you do not want "int_table" and "table2" to be replaced?
[10:54:19] <re101-cougar-74> no i just "table" to be replaced in all three queries with  "(select * from table where id =10)"
[10:55:34] <digitok> right, so the answer to my question is yes, correct?
[10:56:17] <digitok> assuming it is: \btable\b
[11:03:15] <re101-cougar-74> no no "table" should be replaced in " table "    " table"  "table "  ",table"  "table,"    ",table,"
[11:03:42] <re101-cougar-74> i need a regex  to match all these conditions
[11:13:09] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 252 seconds)
[11:14:58] <digitok> that is what it will do
[11:15:17] <digitok> if you are getting different results, pls share a regex101 link by clicking save at the top left
[11:34:49] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:26] *** Quits: src (~src@user/src) (Quit: Leaving)
[11:40:50] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:45:43] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[11:49:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:55:32] *** Joins: stevenm__ (~stevenm@195.62.218.30)
[11:58:44] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 272 seconds)
[12:08:55] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[12:12:02] *** Quits: stevenm__ (~stevenm@195.62.218.30) (Ping timeout: 272 seconds)
[12:36:23] *** Joins: re101-duck-3 (~re101-duc@45.133.234.154)
[12:37:14] <re101-duck-3> I have giant text that has that kind of strings  data-rk="3089234"   how to extract these numbers?
[12:39:10] *** Quits: re101-duck-3 (~re101-duc@45.133.234.154) (Client Quit)
[12:40:40] *** Joins: re101-fly-43 (~re101-fly@rrcs-108-176-17-243.nyc.biz.rr.com)
[12:43:28] <re101-fly-43> I need to match the space character if and only when inside of a string. If there are no spaces inside the string, do not match. just the space character(s) when inside double quotes https://regex101.com/r/NiZeRK/1
[12:48:30] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[12:48:48] *** Joins: m5zs7k_ (aquares@web10.mydevil.net)
[12:48:55] <re101-fly-43> anyone awake?
[12:51:58] <re101-fly-43> m5zs7k_
[12:51:59] <re101-fly-43> I need to match the space character if and only when inside of a string. If there are no spaces inside the string, do not match. just the space character(s) when inside double quotes https://regex101.com/r/NiZeRK/1
[12:57:46] *** m5zs7k_ is now known as m5zs7k
[12:58:51] <digitok> relax
[12:59:06] <digitok> you need a true/false return?
[12:59:31] <re101-fly-43> no I need to save the space character within the string as its own token. I am building a lexical analyzer
[13:00:04] <digitok> and if there are more than one?
[13:00:12] <digitok> you want to match all of them?
[13:00:19] <re101-fly-43> that is allowed, yes correct
[13:00:33] <digitok> ok, and which regex variant are you using?
[13:00:38] <re101-fly-43> java
[13:01:48] <re101-fly-43> I would also need a separate token for the characters (lowercase and individual (return letter by letter tokens only within the double quotes as well)
[13:02:03] <digitok> something like https://regex101.com/r/NiZeRK/2 ?
[13:02:10] <digitok> :|
[13:02:56] <re101-fly-43> I have been working on this for 18 hours straight now please forgive me :p
[13:03:35] <digitok> so the regex should only match if the string contains lowercase letters and spaces?
[13:04:06] <re101-fly-43> The grammar states a string expr may be " charList " and a charlist may be "char charlist", "space charlist", and " " (empty string to end the recursion)
[13:04:43] <re101-fly-43> the programming language only allows one letter lowercase characters for variable names/characters
[13:05:23] <digitok> i just need to know what to do with the regex
[13:06:35] <re101-fly-43> string "inta" would return [i] [n] [t] [a] and string "a b c" would return [a] [] [b] [] [c]
[13:07:30] <digitok> and string "a!" returns nothing?
[13:08:45] <re101-fly-43> that would return a and throw an invalid token for the !, or it can just return invalid token as a separate regex since it does contain a character not allowed/specified in the grammar.
[13:09:18] <re101-fly-43> whatever is easier, I assume the second one. That way I can throw an error message saying the whole string is invalid
[13:10:15] *** Quits: re101-cougar-74 (~re101-cou@165.225.123.55) (Ping timeout: 256 seconds)
[13:12:53] <digitok> i am not entirely sure what all of that means for this regex specifically, lol. but, i have to go for a bit now. here is what i came up with: https://regex101.com/r/NiZeRK/3
[13:12:58] <digitok> bbs
[13:13:08] <re101-fly-43> appreciate it, have a good one
[13:25:11] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[13:25:14] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:33:32] <re101-fly-43> if anyone wants to take a crack at grabbing a single space character (inside a string) that would be lovely
[13:34:36] <re101-fly-43> between words inside a string so can be multiple, as long as its only one space long
[13:53:06] <purplex> whats an example?
[13:55:06] <re101-fly-43> string "this string" would return [ ]
[13:55:54] <mysticspiral[m]> maybe something simple like (?<! ) (?! )
[14:03:42] <purplex> [ ] = space?
[14:06:30] <purplex> try it on regex101 to make it easier to communicate https://regex101.com/r/qw5r8a/1 re101-fly-43
[14:07:16] <digitok> i thought you said: "a b c" would return [a] [] [b] [] [c]
[14:07:55] <digitok> https://regex101.com/r/NiZeRK/4
[14:14:36] *** Joins: re101-birman-65 (~re101-bir@84.126.9.79.dyn.user.ono.com)
[14:14:59] *** Quits: re101-birman-65 (~re101-bir@84.126.9.79.dyn.user.ono.com) (Client Quit)
[14:25:34] *** Quits: re101-fly-43 (~re101-fly@rrcs-108-176-17-243.nyc.biz.rr.com) (Quit: Client closed)
[14:29:14] *** Joins: lavaball (felix@31.204.155.215)
[14:30:10] *** Joins: re101-dogo-71 (~re101-dog@2a01:c50e:900:f00:a4f3:6649:dc6:b399)
[14:30:19] <re101-dogo-71> hi every one!!
[14:30:46] <re101-dogo-71> lets see if someone can help me.. Im looking for a code dent can't find...
[14:31:47] <re101-dogo-71> Im trying to search a exact word before another exact word
[14:33:08] <re101-dogo-71> sorry... behind
[14:34:38] <mysticspiral[m]> simple: https://regex101.com/r/1gshMp/1
[14:40:19] <re101-dogo-71> but these also selects "apple"
[14:40:29] <re101-dogo-71> I once
[14:40:36] <re101-dogo-71> I only want "banana"
[14:42:15] <digitok> https://regex101.com/r/1gshMp/2
[14:44:25] <re101-dogo-71> yes! that's it!
[14:44:32] <re101-dogo-71> thanks a lot Digitok
[14:45:11] <digitok> np
[14:48:20] <purplex> idea of \b was thoughtful, exact word!
[14:51:45] *** Quits: re101-dogo-71 (~re101-dog@2a01:c50e:900:f00:a4f3:6649:dc6:b399) (Quit: Ping timeout (120 seconds))
[14:58:59] <digitok> much considerate
[15:08:34] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[15:29:09] *** Joins: carlos (~carlos@196.0.26.163)
[15:29:33] *** carlos is now known as Guest7710
[15:32:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:32:51] <Guest7710> hello, I need some help with a regex for numbers 201 - 399 excluding 300. tried ^[23][0-9][0-9]$ but it includes 200 and 300
[15:35:49] <mysticspiral[m]> sounds suspiciously like from a quiz
[15:37:12] <Guest7710> it is not, I am running a medical research project so enrollment ids are 201-299 and 301-399
[15:39:08] <mysticspiral[m]> this works i guess https://regex101.com/r/IrSKlt/1
[15:40:39] <mysticspiral[m]> digitok will probably find a more nifty way :D
[15:43:47] <Guest7710> Thank you so much
[15:44:29] <Guest7710> though I don't fully understand how '?:' works
[15:45:54] <mysticspiral[m]> the ?: inside () just makes the capturing group a non capturing group
[15:47:03] <mysticspiral[m]> without the group the alternation would be ^[23][1-9][0-9] and 0[1-9])$
[15:47:04] <mysticspiral[m]> we dont want that
[15:47:20] <Me-me> !range 201-299
[15:47:25] <Me-me> !range 201 299
[15:47:26] <rebot> 14Me-me: 14/0714(?:0720[1-9]14|072[1-9]\d14)0714/
[15:47:32] <Me-me> !range 301 399
[15:47:33] <rebot> 14Me-me: 14/0714(?:0730[1-9]14|073[1-9]\d14)0714/
[15:47:53] <mysticspiral[m]> !range 1234 2345
[15:47:54] <rebot> 14mysticspiral[m]: 14/0714(?:07123[4-9]14|0712[4-9]\d14|071[3-9]\d{2}14|072[0-2]\d{2}14|0723[0-3]\d14|07234[0-5]14)0714/
[15:47:59] <Me-me> [23]0[1-9]|[23][1-9]\d
[15:48:12] <mysticspiral[m]> accepts any input? nice
[15:48:29] <Me-me> Ranges come up often enough that digitok made a generator.
[15:48:35] <mysticspiral[m]> lol
[15:49:05] <mysticspiral[m]> !range 201 399
[15:49:05] <rebot> 14mysticspiral[m]: 14/0714(?:0720[1-9]14|072[1-9]\d14|073\d{2}14)0714/
[15:49:23] <mysticspiral[m]> you still need to exclude the 300 though
[15:49:26] <Me-me> Got some flags too, damned if I remember 'em all.
[15:49:35] <Me-me> Did you miss my solution? [23]0[1-9]|[23][1-9]\d
[15:49:58] <Me-me> I guess you could optimise further by saying [23](?:0[1-9]|[1-9]\d)
[15:51:21] <mysticspiral[m]> thats almost identical to what i posted in the re101 link
[15:51:46] <Me-me> What, I'm supposed to extend to you the same courtesy I ask that you extend to me? Pish posh.
[15:52:06] <Guest7710> I've applied this https://regex101.com/r/IrSKlt/1 at the moment
[15:52:17] <mysticspiral[m]> > you still need to exclude the 300 though
[15:52:17] <mysticspiral[m]> i mean when using the range thing. was not referring to your solution
[15:52:43] <Guest7710> I'm always dealing with numbers, getting better but once in a while I encounter a tricky one
[16:14:11] *** Joins: re101-dhole-96 (~re101-dho@43.242.116.243)
[16:16:07] <re101-dhole-96> Want a regex which can check if one uppercase + one lowercase + one number AND allow only A-Z, a-z, 0-9 and these chars _!@#$%^&*, AND min length 8
[16:16:46] <mysticspiral[m]> !password
[16:16:46] <perlbot> Don't put arbitrary restrictions on passwords! Use an entropy-based system like zxcvbn (https://github.com/dropbox/zxcvbn), and make sure to use modern hashes (md5 is too old; argon2 is recommended, pbkdf2 or scrypt are acceptable). (https://www.xkcd.com/936/)
[16:16:46] <re101-dhole-96> Here is my attempt = ^(?=\\S+$)(?=.[0-9])(?=.[a-z])(?=.[A-Z]).{8,20}$
[16:19:48] <mysticspiral[m]> just wanted to know if there is an entry for password
[16:20:42] <digitok> and you got a bonus comic
[16:21:09] <mysticspiral[m]> nice
[16:23:59] <re101-dhole-96> like Flask@678
[16:27:05] <digitok> ^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[\w!@#$%^&*]{8,20}$
[16:27:51] <re101-dhole-96> Thanks
[16:28:38] <mysticspiral[m]> why is underscore considered a word character but dash not?
[16:29:45] <mysticspiral[m]> probably natural vs programming languages
[16:31:08] <re101-dhole-96> https://tinyurl.com/y736ajub
[16:31:25] <re101-dhole-96> same issue as before I tried
[16:32:25] *** Quits: Guest7710 (~carlos@196.0.26.163) (Quit: Client closed)
[16:32:36] <re101-dhole-96> Trying since 4 hours
[16:37:55] <digitok> change the quotes "" to //
[16:38:06] <digitok> /^...$/
[16:41:28] <re101-dhole-96> Great digitok,   working in console, will try in code,
[16:41:28] <re101-dhole-96> -------THANK YOU---------
[16:46:57] <digitok> yw :)
[16:49:22] <digitok> 07mysticspiral[m], yea, my understanding is that it is because a-zA-Z0-9_ commmonly constitute valid characters for things like variables, etc.
[16:54:31] *** Quits: re101-dhole-96 (~re101-dho@43.242.116.243) (Quit: Client closed)
[17:11:16] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[17:53:00] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 252 seconds)
[17:53:40] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[17:55:56] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Ping timeout: 272 seconds)
[18:10:44] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:11:03] *** Joins: re101-mau-14 (~re101-mau@205-195-136-45.ddns.movitel.tv)
[18:11:48] *** Joins: re101-tang-55 (~re101-tan@223.235.51.43)
[18:11:55] *** Quits: re101-mau-14 (~re101-mau@205-195-136-45.ddns.movitel.tv) (Client Quit)
[18:17:32] *** Joins: dandyn (~dandyn@user/dandyn)
[18:22:11] *** Joins: pgas (~pgas@user/pgas)
[18:22:22] *** Parts: pgas (~pgas@user/pgas) ()
[18:33:43] *** Quits: re101-tang-55 (~re101-tan@223.235.51.43) (Quit: Client closed)
[18:36:08] *** Joins: rexrookie (~rexrookie@2405:201:c034:3a50:cc42:11db:38fb:5633)
[18:37:49] <rexrookie> whats wrong with below lazy matcher
[18:37:52] <rexrookie>      Pattern p = Pattern.compile("<(.+?)>|</(.+?)>") ;
[18:37:53] <rexrookie>      Matcher m = p.matcher("<div>hi</div>");
[18:37:53] <rexrookie>      System.out.println(m.matches());
[18:37:54] <rexrookie>      System.out.println(m.group(1)); //output div>hi</div //but i want output as : div
[18:37:54] <rexrookie>      System.out.println(m.group(2)); //output null //but i want output as : div
[18:37:55] *** rebot sets mode: +q rexrookie!*@*
[18:37:56] <rebot> 14rexrookie: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[18:38:25] *** rebot sets mode: -q rexrookie!*@*
[18:40:41] <OnlineCop> rexrookie: Java?
[18:40:51] <rexrookie> right
[18:41:03] <rexrookie> OnlineCop - right its java
[18:41:48] <OnlineCop> You're seeing something like this?
[18:41:49] <OnlineCop> https://regex101.com/r/V44nzh/1
[18:42:06] <dandyn> is there any way to just pick out the first match? https://regex101.com/r/96VW4L/1
[18:42:17] <dandyn> now it saves the data from the last It seems.
[18:42:29] <OnlineCop> Match 1 is "<div>" while Group 1 is "div"; Match 2 is "</div>" but (for some reason) Group 2 is "/div" instead of "div".
[18:42:30] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[18:43:05] <OnlineCop> dandyn: The first match would be which one?
[18:43:51] *** Joins: dandyn (~dandyn@user/dandyn)
[18:43:55] *** Joins: p-i- (~Ohmu@183.89.27.225)
[18:44:11] <OnlineCop> rexrookie: The first alternation is going to complete first in BOTH cases, regardless of that "</" in there since that `.*?` technically matches it first. You should swap those two alternations around.
[18:44:25] <OnlineCop> rexrookie: https://regex101.com/r/V44nzh/2
[18:45:01] <OnlineCop> > System.out.println(m.group(1)); //output div>hi</div //but i want output as : div
[18:45:11] <OnlineCop> ^ That sounds like you've got an "ungreedy" flag set?
[18:45:59] <OnlineCop> That is acting as though `.*?` (minimal/lazy) is behaving like `.*` (maximal/greedy).
[18:46:27] <OnlineCop> dandyn: Could you explain what you meant by "it saves the data from the last" ?
[18:46:39] <rexrookie> OnlineCop - totally independently - i arrived at the same point as you.. https://regex101.com/r/tY0FmS/1
[18:46:48] <OnlineCop> Awesome!
[18:46:55] <rexrookie> not sure why group 2 is /div
[18:47:09] <dandyn> OnlineCop: I explain better here https://regex101.com/r/5GhDHW/1
[18:47:31] <OnlineCop> rexrookie: Because `<(.+?)>` technically is allowed to match / as the first character. Swap the order of those two.
[18:47:46] <dandyn> oh wait
[18:47:55] <OnlineCop> rexrookie: First, look for `</(.*?)>` and if that fails, then go back and try to match `<(.*?)>`.
[18:48:54] <rexrookie> OnlineCop - need bit of bigger help
[18:48:57] <rexrookie> https://stackoverflow.com/questions/62462345/how-to-check-if-dom-elements-are-correctly-nested
[18:49:01] <mysticspiral[m]> or just write </?(.+?)>
[18:49:06] <rexrookie> can the above be solved in java
[18:49:53] <dandyn> OnlineCop: ok like this https://regex101.com/r/ygLLwS/1
[18:49:55] <OnlineCop> rexrookie: As Java 8 doesn't support recursion, I don't believe it can be. I'm not sure what later versions of Java are using, though. PCRE _will_ support recursion, so you can check for nested elements.
[18:50:18] <rexrookie> java 11
[18:52:09] <OnlineCop> rexrookie: From what I see on SO and other sites, Java 11 still doesn't support recursion. However, there do seem to be a few libraries (for Java) that support it, and that may be a solution for you. Then you could test using PCRE syntax and still use it within your project.
[18:53:25] <rexrookie> can not some logic be written in java to by pass it
[18:53:26] <dandyn> OnlineCop: this is what my regexp looks like now https://regex101.com/r/96VW4L/1
[18:53:28] <OnlineCop> dandyn: Since you have PCRE2 selected as your regex flavor, it would help if you could update https://regex101.com/r/96VW4L/1 with the kinds of changes you want (tip: use "Update Regex" instead of "Save Regex")
[18:53:43] <dandyn> ok
[18:54:17] <OnlineCop> dandyn: The "Update regex" lets you keep the same URL, and just that /1 updates at the end of it, so you can look over various revisions and go back and forth easily between them.
[18:54:50] <rexrookie> can not some logic be written in java to by pass it
[18:54:56] <rexrookie> OnlineCop can not some logic be written in java to by pass it
[18:56:42] <OnlineCop> rexrookie: You can probably do an extremely simple `<(\w+(?:[:-]\w+)*)[^>]*>.*?</\1>` logic to try to match from the starting tag to the ending one, but that doesn't handle nested elements properly. You could try changing from `.*?` to greedy `.*` and then grab "too much" but later parse through it and strip stuff out.
[18:58:48] <OnlineCop> dandyn: https://regex101.com/r/96VW4L/2 is the same as what you had before, but with the comments at the top, and using the `/x` flag so we can break apart the regex to make it more readable.
[19:00:58] <dandyn> OnlineCop:awesome thanks bro!
[19:01:20] <OnlineCop> dandyn: I'm trying to understand where you're getting "15" and ":e" and these other values from.
[19:02:46] <dandyn> 15 is the date, e is like  1"st"  2"nd"  15"th" but in swedish 15th is "15:e"
[19:03:10] <dandyn> 1st is 1:a
[19:04:11] <OnlineCop> The <h2>...</h2> stuff is fairly straight-forward. After that, you're doing `([^\]]*)` which is supposed to match... how far exactly?
[19:04:32] <OnlineCop> Just until `<h3 class="h4">` is found?
[19:05:19] <dandyn> yeah down to first <h3 class="h4">  where tisdag den 15 is.
[19:05:42] <OnlineCop> Do you want to capture that text, or just match (but not capture) it?
[19:05:52] <dandyn> capture :)
[19:07:47] <dandyn> I had a problem before it saved the values from match 2. I just want match 1 and the groups of it. not match 2 with group values.
[19:08:11] <OnlineCop> If I'm not mistaken, isn't all that text running from line 174 through 1654?
[19:09:09] <dandyn> I think so I can't see lines.
[19:09:37] <dandyn> wait now I can.. had to edit settings.
[19:09:48] <OnlineCop> You can turn on lines by clicking the "gear" icon (https://regex101.com/settings) and using "Show Line Numbers in ..."
[19:09:50] <OnlineCop> :)
[19:10:21] <OnlineCop> That 1st group was just so I could see what you were trying to match. I can remove it and just put the comments of what you want captured into the regex itself.
[19:10:28] <dandyn> line 1654   to 1651 values yes.
[19:10:50] <OnlineCop> https://regex101.com/r/96VW4L/3
[19:12:06] *** Joins: re101-tang-55 (~re101-tan@143.202.253.242)
[19:12:29] <OnlineCop> In version /2, you want from lines 174-1654 (1500 lines) to match? (In version /3, that got shifted up to lines 150-1637).
[19:14:01] <dandyn> hmm.. wait
[19:14:03] <OnlineCop> Because if I comment out the `([^\]]*)` line and replace the stuff below it with an OR '|' pipe, it's finding more "group 3" stuff on line 353.
[19:14:10] <OnlineCop> https://regex101.com/r/96VW4L/4
[19:14:25] <OnlineCop> So I think that `[^\]]*` is being way too greedy.
[19:15:31] <dandyn> yes this last one seems to be perfect sir! lemme see some more
[19:19:15] <dandyn> OnlineCop: I'm impressed you even understood what I was trying to do:)  you solved it! thanks so much!. Now it saves better.. but is there any way to ignore match 3 and below?
[19:21:07] <OnlineCop> https://regex101.com/r/96VW4L/6 is another way to do it (it's a bit slower), but it DOES show two matches.
[19:21:33] <OnlineCop> If you want to stop after the 1st match, just get rid of the '/g' flag (global, or "keep going after 1st match").
[19:21:54] <OnlineCop> https://regex101.com/r/96VW4L/7 <-- same as version /6 but without the /g flag.
[19:23:13] <dandyn>   /g flag?
[19:23:35] <OnlineCop> The flags are below "1 match (xxx steps)"
[19:23:59] <OnlineCop> Version /6 shows  "/gmx" while version /7 shows just "/mx"
[19:25:09] <dandyn> thanks a lot.. I'll try some with this. thanks again!
[19:25:13] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: The Lounge - https://thelounge.github.io)
[19:25:15] <OnlineCop> My pleasure.
[19:26:28] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:42:10] <dandyn> OnlineCop: do you know anything about eggdrop? Tcl error [smhi:next]: couldn't compile regular expression pattern: quantifier operand invalid    when I tried to use that regexp. Might be something not compatible with eggdrop.
[19:44:04] <dandyn> OnlineCop: I'm told to use multiple smaller expressions.. any idea what they mean?
[19:44:56] <OnlineCop> Multiple smaller expressions would be to NOT throw everything together into a single very-long-pattern style of a regex.
[19:45:44] <dandyn> okok
[19:45:58] <OnlineCop> I'm trying to find what flavor of regex TCL uses.
[19:46:06] <OnlineCop> But No, I'm not familiar with Eggdrop or Tcl.
[19:47:40] <OnlineCop> I don't see `(?>...)` in there, so it probably doesn't support atomics. You can change that to `(?:...)` instead.
[19:48:13] <dandyn> I'll try.
[19:48:36] <OnlineCop> Tcl may not support the /x flag, so all this "make it pretty" formatting that we did on regex101 might have to be smashed together onto a single line.
[19:49:20] <OnlineCop> https://regex101.com/r/96VW4L/8
[19:50:18] <OnlineCop> According to https://www.tutorialspoint.com/tcl-tk/tcl_regular_expressions.htm, the non-capturing `(?:...)` notation doesn't look like it's supported either.
[19:50:22] <dandyn> omg, you're hardcore man.
[19:50:28] <dandyn> works like a charm now.
[19:50:38] <OnlineCop> Cool.
[19:51:00] <dandyn> replaced > with : as you said on one place.. then it worked fine.
[19:51:08] <OnlineCop> https://wiki.eggdrop.fr/images/Regexp.pdf is saying that `(?:...)` is valid. So TutorialsPoint needs to update their docs.
[19:52:32] <dandyn> aha, nice. thanks again. now I can keep on going with my script.:)  you're the best!
[19:55:25] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[19:56:05] <purplex> tutorialspoint is very basic, unupdated agreed
[19:56:54] <purplex> if i ever find an answer there i always check it with three other sites
[20:01:27] *** Joins: re101-koala-83 (~re101-koa@2001:980:3861:1:7d57:e2f9:10c0:492)
[20:02:36] <re101-koala-83> Hi! Does anyone know how to get only the names (ending with ':') in a text. Example: https://regex101.com/r/POaEsv/1
[20:02:38] <re101-koala-83> Where FUTURE: and CHEDDAR: should be selected, but not anything else
[20:04:29] <re101-koala-83> It's quite difficult, because you can obviously use ':' as an ending character, but there is no predefined starting character (as its different?)
[20:10:57] *** Quits: re101-koala-83 (~re101-koa@2001:980:3861:1:7d57:e2f9:10c0:492) (Quit: Client closed)
[20:20:00] *** Quits: rexrookie (~rexrookie@2405:201:c034:3a50:cc42:11db:38fb:5633) (Quit: Client closed)
[20:20:45] <dandyn> re101-tang-55: try this (^[a-zA-Z]+\:)
[20:21:13] <dandyn> hmm.. he left
[20:21:38] <dandyn> koala
[20:35:17] *** Joins: re101-adelie-74 (~re101-ade@188.248.75.198)
[20:35:19] <re101-adelie-74> hi
[20:35:25] <OnlineCop> o/
[20:35:28] <re101-adelie-74> Can anyone help
[20:35:34] <OnlineCop> Link?
[20:35:51] <re101-adelie-74> I have few logs which needs to be parse
[20:36:03] <OnlineCop> What regex engine/flavor are you using?
[20:36:11] <re101-adelie-74> .php
[20:36:38] <re101-adelie-74> PHP
[20:37:38] <re101-adelie-74> Can i share the log ?
[20:39:05] <re101-adelie-74> Hello
[20:39:48] <purplex> u have permission to share
[20:39:59] *** Joins: re101-adelie-747 (~re101-ade@188.248.75.198)
[20:40:14] <re101-adelie-74> <189>498357: Nov 24 06:37:33.948: %MAB-5-FAIL: Authentication failed for client (9488.16a1.234e) on Interface Gi1/0/4 AuditSessionID 0A640A9700000064235A95FE
[20:40:14] <re101-adelie-74> <188>480363: Nov 23 21:34:07.148: %RADIUS-4-RADIUS_ALIVE: RADIUS server 10.123.12.150:1812,1813 is being marked alive.
[20:40:15] <re101-adelie-74> <189>498357: Nov 20 06:34:34.948: %MAB-5-FAIL: Authentication was successful for client (9488.16a1.234e) on Interface Gi1/0/4 AuditSessionID 0A640A9700000064235A95FE
[20:40:41] *** Quits: re101-adelie-747 (~re101-ade@188.248.75.198) (Client Quit)
[20:41:01] <purplex> and now the question
[20:41:08] <OnlineCop> That log is probably getting pretty torn up in IRC. A regex101 or bpaste link may be better. But: what are you trying to keep/match?
[20:41:41] *** Joins: cth (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:42:04] <re101-adelie-74> Like Date Auth IPs Interface Session IDs
[20:42:36] <OnlineCop> `^<(?<log_num>\d+)>(?<code>\d+): (?<date>[^%]+): (?<status>%[^:]+):\s*(?<message>.+)`
[20:43:56] <OnlineCop> https://regex101.com/r/lJ30xS/1
[20:44:17] <re101-adelie-74> Thank you so much bro
[20:44:22] <re101-adelie-74> so nice of you...
[20:44:26] <OnlineCop> If you want to break down the 'message' even further, you can just add the capture groups to it that you need.
[20:45:08] <re101-adelie-74> Thank you bro:)
[20:45:27] <OnlineCop> My pleasure.
[20:53:15] <re101-adelie-74> Guys can you do one more please
[20:53:17] <re101-adelie-74> <132>CWM-MDF-VEC-2: *rsyncmgrXferTrasport: Nov 24 10:43:59.962: %CHKPT-4-INVALID: [SS]chkpt_message.c:3047 Invalid checkpoint client ID (0).
[20:53:17] <re101-adelie-74> <132>CWM-MDF-VEC-2: -Traceback:  0x11ab049c 0x11ab4cec 0x11abdc6c 0x11a1d6dc 0x2adb0580 0x2aedd13c
[20:53:18] <re101-adelie-74> <134>CWM-MDF-VEC-2: *haSSOServiceTask6: Nov 24 10:43:59.963: %APF-6-USER_NAME_CREATED: [SS]apf_ms.c:8796 Username entry (FirstName.LastName) with length (12) created for mobile 02:73:1b:38:58:f9
[20:53:18] <re101-adelie-74> <134>CWM-MDF-VEC-2: *rsyncmgrXferTrasport: Nov 24 10:43:59.958: %LOG-6-Q_IND: [SS]dtl_arp.c:1544 Unable to add an ARP entry for 10.66.63.33 to the operating system. No such device.
[20:53:18] *** rebot sets mode: +q re101-adelie-74!*@*
[20:53:19] <rebot> 14re101-adelie-74: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[20:53:47] <OnlineCop> Just paste that into the same regex101 site and click 'update regex' in the top-left.
[20:53:48] *** rebot sets mode: -q re101-adelie-74!*@*
[20:54:19] <OnlineCop> https://regex101.com/r/lJ30xS/2
[20:55:48] <re101-adelie-74> The same one would be work?
[20:56:11] *** Joins: src (~src@user/src)
[20:56:14] <OnlineCop> https://regex101.com/r/lJ30xS/3
[20:56:46] <OnlineCop> Each of the sections needs to have special rules to know when to start/stop matching its own "pattern".
[20:57:21] <OnlineCop> Line 5, for example, doesn't match because you need to indicate what "rules" control how far it should match.
[20:57:33] <OnlineCop> There is no "date" field, for example, on Line 5.
[20:57:39] <re101-adelie-74> Ok
[20:58:24] <re101-adelie-74> Thank you so much for your help I was stucked
[20:58:33] <re101-adelie-74> Thank you:)
[20:58:52] *** Quits: re101-adelie-74 (~re101-ade@188.248.75.198) (Quit: Client closed)
[21:09:39] *** Quits: dandyn (~dandyn@user/dandyn) (Ping timeout: 256 seconds)
[21:21:37] *** Joins: dandyn (~dandyn@user/dandyn)
[21:53:28] *** Joins: re101-deer-85 (~re101-dee@2409:4070:4396:fc34:798f:b83d:f33:6a2f)
[21:53:33] <re101-deer-85> Hi
[21:54:13] <re101-deer-85> want a regex code to match two consecutive special characters like !@#$%^&*
[21:54:55] <re101-deer-85> @#       $%       ^&       *^        @@   !!    %%      ^^     &&
[21:55:08] <re101-deer-85> the above all should be match
[21:55:47] <mysticspiral[m]> https://regex101.com/r/EpKhiT/1
[21:56:16] <re101-deer-85> !ab!       a&d     $f      g!a    k#          ab#c@     shouldnot be match
[21:58:53] <mysticspiral[m]> is it what you want?
[21:59:38] <mysticspiral[m]> [!@#$%^&*]{2} matches any combination of the listed characters
[22:13:51] <re101-deer-85> No its not working
[22:15:40] <re101-deer-85> iam writing regex on Salesforce Validation for text area
[22:22:27] *** Quits: src (~src@user/src) (Quit: Leaving)
[22:26:26] <purplex> seems like it should work, is that same question from other day when i was away? re101-deer-85
[22:26:43] <re101-deer-85> yes
[22:27:02] <re101-deer-85> iam waiting for it from a week
[22:27:19] <re101-deer-85> it is single line text area
[22:27:22] <JohnDoe1> re101-deer-85 ([@#....])\1
[22:27:29] <purplex> can you enter the test strings in regex101?
[22:27:49] <purplex> i don't have the log from other day currently
[22:27:50] <re101-deer-85> regex link to enter?
[22:27:53] <JohnDoe1> add the rest of your characters inside the [ ]
[22:28:17] <purplex> enter here https://regex101.com/r/EpKhiT/1 and save / update
[22:28:47] <JohnDoe1> oh nvm you also have different ones
[22:28:49] <re101-deer-85> John, it wont work for second word in text are
[22:28:50] <JohnDoe1> @#
[22:28:51] <re101-deer-85> area
[22:29:29] <JohnDoe1> there are no words just characters, you might need to give further context
[22:31:20] <re101-deer-85> https://regex101.com/r/p8hYhq/1
[22:33:30] <JohnDoe1> re101-deer-85 https://regex101.com/r/p8hYhq/2 something like this? I don't know what salesforce implements, can you show me their docs?
[22:34:03] <purplex> lets start with https://regex101.com/r/p8hYhq/3 it validates the lines where you need to identify two special characters in line
[22:34:54] <rewt> re101-deer-85, do you mean that if there are multiple sets of those characters on a line, only the first one is matched?
[22:35:47] <rewt> if in that case you want all such groups to match, you need to use the /g (global match) flag (no idea how salesforce implements that)
[22:35:49] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[22:36:01] <re101-deer-85> if the first one is not having a match, second is having match then for whole its not getting matched
[22:36:03] *** Joins: rvalue (~rvalue@user/rvalue)
[22:36:58] <JohnDoe1> re101-deer-85 is this what you're doing? https://help.salesforce.com/s/articleView?id=000334073&type=1 
[22:37:32] <re101-deer-85> yes
[22:37:48] <JohnDoe1> you're SOL then, there's no way to specify flags
[22:38:05] <JohnDoe1> maybe your workaround might involve splitting the input before testing it with regex?
[22:38:32] <JohnDoe1> a wildshot might be to try including (?g) in the beginning of the regex
[22:38:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:39:27] <re101-deer-85> i will tell you the boundries
[22:39:38] <re101-deer-85> left and right
[22:41:50] <JohnDoe1> re101-deer-85 https://regex101.com/r/p8hYhq/4 click the flags and add "g/global" to see what i mean
[22:42:27] <JohnDoe1> but it looks like salesforce uses java so 99% (?g) is not a thing unless they custom-added it or some crazy syntax I do not see in their docs
[22:42:44] <purplex> what results are you getting in your software? screenshot might help re101-deer-85 
[22:44:35] *** Joins: lavaball (felix@31.204.155.215)
[22:45:31] <JohnDoe1> re101-deer-85 another way to go about this is to bruteforce it https://regex101.com/r/p8hYhq/5 but of course it's dependent on what you wish the regex to return. This one will return the whole line/input if there's at least 1 set of special characters
[22:45:46] <re101-deer-85> https://regex101.com/r/wtqLQB/1
[22:46:58] <re101-deer-85> i have given boundaries in the link above
[22:47:15] *** Quits: lavaball (felix@31.204.155.215) (Client Quit)
[22:47:20] <JohnDoe1> re101-deer-85 are they not met already?
[22:48:07] <re101-deer-85> not met
[22:48:49] <JohnDoe1> what's an example where it isn't?
[22:52:04] <JohnDoe1> https://regex101.com/r/wtqLQB/2 I don't see unmet conditions
[22:52:52] <re101-deer-85> checking
[22:52:59] <re101-deer-85> just 5 mins.. please
[22:53:10] <JohnDoe1> other than arguably superfluous (?: ) and terrible performance but given that you're doing this in salesforce it's the least of your worries.
[22:53:17] <JohnDoe1> it's the same regex from 3 links ago :)
[23:02:10] <re101-deer-85> Hi when iam giving three consecutive @@@ its not matching
[23:03:38] <JohnDoe1> "re101-deer-85 want a regex code to match two consecutive special characters like !@#$%^&*" 
[23:04:03] <re101-deer-85> two and more
[23:04:04] <JohnDoe1> you can change the {2} to be {2,3} if you want 2 or 3 consecutive special characters, or leave it open ended if more than 2, meaning {2,}
[23:04:20] <re101-deer-85> okay
[23:04:20] <re101-deer-85> will check
[23:08:04] <re101-deer-85> is there any other way to connect you John
[23:08:22] <re101-deer-85> because now the code is working super good
[23:08:55] <re101-deer-85> will approach you if any change within an hour or tomorrow
[23:10:05] <karhunkynsi> His phone number is +14844521977
[23:10:05] <re101-deer-85> Really Thankyou so much
[23:10:47] <purplex> lol
[23:13:36] <purplex> alright laters
[23:19:04] <re101-deer-85> It failed to match
[23:19:12] <re101-deer-85> @iam good
[23:19:24] <re101-deer-85> @iam good#@
[23:19:57] <re101-deer-85> two consecutives at the end of second word
[23:19:58] <re101-deer-85> it should match actually but not matching
[23:20:59] <re101-deer-85> But getting good#@ matched
[23:23:23] *** Quits: dandyn (~dandyn@user/dandyn) (Ping timeout: 256 seconds)
[23:30:46] *** Joins: re101-snake-71 (~re101-sna@2001-1ae9-212-a600-8d65-a43c-dab0-244a.ip6.tmcz.cz)
[23:34:34] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:39:05] *** Quits: re101-snake-71 (~re101-sna@2001-1ae9-212-a600-8d65-a43c-dab0-244a.ip6.tmcz.cz) (Quit: Client closed)
[23:43:28] <re101-deer-85> hi
[23:53:55] *** Joins: dandyn (~dandyn@user/dandyn)
