[00:00:03] *** Joins: srhm (~ascii@user/srhm)
[00:00:50] *** Joins: pnoud (~pnoud@user/pnoud)
[00:01:05] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Quit: egzit)
[00:01:06] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:01:12] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:01:20] <nedbat> Yhg1s: right, this is where I'm torn.
[00:01:29] *** Joins: greedom (~greedom@2001:16b8:2e48:d200:a909:4933:eff8:21f0)
[00:01:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:01:58] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[00:03:32] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:03:46] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[00:04:15] <SnoopJ> philosophically I would write the unstructured form until I had a need for the structured one, and I don't think that's happened to me yet.
[00:04:52] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:06:18] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[00:06:29] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[00:06:54] *** Joins: SuperLag (~akulbe@user/superlag)
[00:07:40] *** Joins: Crassus (~Crassus@user/crassus)
[00:08:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:08:31] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[00:13:25] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[00:13:42] *** Joins: JordiGH (~jordi@user/jordigh)
[00:13:58] <JordiGH> Is there a pretty print for dicts that makes it look like, uhm, Java style?
[00:14:09] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:14:13] <nedbat> JordiGH: what is java style?
[00:14:14] <JordiGH> Lots of vertical space, all closing brackets on their own line.
[00:14:22] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[00:14:28] <JordiGH> Newlines after opening brackets.
[00:14:57] <JordiGH> Or like JSON, I guess. I think there's a usual style for pretting printing JSON that I want.
[00:15:18] <nedbat> JordiGH: perhaps json.dumps(the_dict, indent=4)
[00:15:18] <JordiGH> Wait, I know how to describe it: I want it to look like YAML but with more brackets.
[00:16:15] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 265 seconds)
[00:16:18] <JordiGH> Yes! Like that! And then I can just patch up the nulls to be Nones and it's valid Python.
[00:18:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:18:38] <raek> JordiGH: you might want to check out pprint.pprint too
[00:18:52] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[00:18:57] <raek> it uses a different style, but the output is python syntax, not json
[00:18:57] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:19:00] <JordiGH> It's more like homely_print if you ask me.
[00:19:15] <JordiGH> I can't figure out how to make pprint look like json.dumps
[00:19:15] <KirkMcDonald> pprint() really doesn't want to do the output as described, though.
[00:19:28] <KirkMcDonald> It has its own ideas about how it wants to format things.
[00:20:42] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 276 seconds)
[00:21:29] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[00:21:34] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[00:22:03] <nedbat> JordiGH: just curious, why does it need to be valid Python?
[00:22:10] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[00:22:20] <raek> but since only the naming/spelling of True/False/None vs true/false/null is what makes JSON not Python, using the JSON formatter is a neat trick
[00:22:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[00:22:37] <JordiGH> I mean, I guess I could change things around to put the data in a non-Python file but meh.
[00:23:02] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[00:23:02] <JordiGH> It's mostly because Django's response.json() gives me Python, I guess, despite its name.
[00:23:04] <KirkMcDonald> Honestly it would not be so hard to write this.
[00:24:07] <grym> JordiGH: at least the nice part is that if you're getting something that was just deserialised, you know perfectly well you can reserialise it!
[00:24:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:24:44] <grym> (for the json.dumps() trick)
[00:25:44] *** Joins: SuperL4g (~akulbe@user/superlag)
[00:26:29] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:26:41] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 252 seconds)
[00:26:53] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:28:18] *** Joins: Trashlord (~trash@user/trashlord)
[00:28:47] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[00:29:16] *** Quits: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net) (Quit: Client closed)
[00:30:19] *** Joins: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net)
[00:30:53] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:09] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:31:55] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[00:32:06] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:33:06] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[00:33:10] *** Joins: pnoud (~pnoud@user/pnoud)
[00:33:24] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[00:33:34] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[00:33:35] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[00:33:42] *** Joins: Jefren4 (~Jefren@70.35.67.18)
[00:34:37] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[00:36:14] *** Joins: timmcg (~timmcg@c-65-96-32-86.hsd1.me.comcast.net)
[00:36:22] *** Quits: Jefren3 (~Jefren@70.35.66.170) (Ping timeout: 245 seconds)
[00:36:50] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[00:37:04] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[00:37:14] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[00:37:23] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:37:39] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[00:38:20] *** Quits: rama (~rama@2601:640:10c:6800:fc8a:66f3:cc8e:781e) (Quit: Leaving...)
[00:38:48] *** Joins: audiocat (~audio@2603-8081-1800-00ad-529e-4a13-1b41-08fc.res6.spectrum.com)
[00:38:56] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[00:40:45] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[00:42:51] *** Quits: JordiGH (~jordi@user/jordigh) (Remote host closed the connection)
[00:42:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:43:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:45:04] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:49] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Quit: egzit)
[00:46:43] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[00:47:48] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:49:11] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:50:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:50:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:51:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[00:52:04] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:52:25] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[00:52:36] <SnoopJ> The only non-null thing that sticks out to me about treating it as Python is the possibility of multiply defined keys, but I don't see the upshot either.
[00:54:28] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:55:55] <AhmedAmerican> which module you usually use to check code/function run time ?
[00:56:39] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:56:44] *** Parts: orangeboxcutter (~orange@user/orangeboxcutter) ()
[00:58:18] *** Joins: chance (~chance@user/chance)
[00:58:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:59:41] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 252 seconds)
[00:59:48] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[00:59:56] *** Joins: dbristow (~dbristow@user/dbristow)
[01:00:48] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[01:01:03] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[01:01:25] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:02:57] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[01:03:21] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[01:03:51] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[01:04:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[01:05:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:05:20] *** Joins: pnoud (~pnoud@user/pnoud)
[01:05:25] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[01:05:53] *** Joins: thiras (~thiras@user/thiras)
[01:06:02] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:06:07] <rndusr> AhmedAmerican: try timeit
[01:06:16] <rndusr> i think that's a module that times function/method performance
[01:06:44] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[01:07:30] <nedbat> I have Python 3.8 installed with pyenv.  Now I try to install psycopg2, and it fails with "ld: library not found for -lssl"  am I doomed?
[01:08:17] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 258 seconds)
[01:10:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[01:11:44] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 258 seconds)
[01:14:51] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:14:56] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[01:14:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[01:15:46] <sco1> If it's not for production I think `psycopg2-binary` has wheels
[01:15:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:16:43] *** Quits: nullheroes (~danielvu@168.235.66.22) (Quit: WeeChat 3.1)
[01:17:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:17:02] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[01:19:50] *** kevr is now known as kevr[m]
[01:20:17] *** kevr[m] is now known as kevr
[01:21:13] <nedbat> sco1: i just got it fixed with:  LDFLAGS="-I/usr/local/Cellar/openssl@1.1/1.1.1k/include -L/usr/local/Cellar/openssl@1.1/1.1.1k/lib" pip install ...etc
[01:21:30] <nedbat> sco1: where 1.1.1k was the version the pyenv recipe mentioned
[01:21:54] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[01:21:57] *** Quits: fluiD (~fluiD@161.97.231.145) (Read error: Connection reset by peer)
[01:22:09] <nedbat> sco1: why is -binary bad for production?
[01:22:38] <nedbat> sco1: and why does psycopg2 provide windows wheels but no other, and -binary provides all of them? weird.
[01:22:42] *** Joins: fluiD (~fluiD@161.97.231.145)
[01:23:03] <rjwiii> Anyone here use VSCode to edit Python?
[01:23:08] <nedbat> rjwiii: it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[01:23:29] *** Quits: rendar (~rendar@user/rendar) ()
[01:23:46] <rjwiii> nedbat: ok ...
[01:23:51] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[01:24:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[01:26:01] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:26:47] *** Joins: hrtk (~hritik@182.69.15.72)
[01:27:17] <hrtk> Hey, are there any pre-installed python packages in the Docker image (python:<version>) ?
[01:27:18] <rjwiii> I am using VSCode on my company laptop. The version is 1.55.0. I have an issue where the Python extension does not load. All I see is the "Python extension loading ..." and the spinning arrow. the version of the extension is 2021.5.9265005. Since it is a company machine (actually a VDI), I cannot upgrade or downgrade or install insiders editions. Has there been any resolution to this issue?
[01:27:35] <nedbat> hrtk: I doubt it, but it should be easy to check.
[01:28:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[01:28:12] *** Quits: SilverFox (~joe@64.223.223.162) (Quit: WeeChat 2.8)
[01:28:14] <rjwiii> I already asked in #vscode, but there's only 24 people in there and they seem a bit shy ... :)
[01:28:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:29:07] <nedbat> rjwiii: someone here may know, but this seems like a very specific issue, so others might not have the same problem
[01:30:16] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[01:30:30] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[01:30:41] <rjwiii> nedbat: I've googled it and found some topics, but nothing I try seems to fix it ... especially if I try to open a second window. I'm a busy programmer and I want to work on more than one project at a time ... :)
[01:31:52] *** Joins: pnoud (~pnoud@user/pnoud)
[01:32:01] *** Joins: jess (~jess@libera/staff/jess)
[01:32:01] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[01:32:04] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[01:33:21] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[01:33:54] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[01:34:30] *** Joins: canton7 (canton7@about/csharp/canton7)
[01:35:17] <gloin> Another "coming from perl" question here: I'm used to defining a bunch of functions at the end of my code and using them (main) near the top just after all the use module statements and variables are set up. In Python I get "name 'foo' is not defined" errors. How does one keep their main code at the top?
[01:35:46] <The-Compiler> gloin: if your main function is actually a function, this should work
[01:35:49] <nedbat> gloin: put it in a function called main
[01:36:14] <The-Compiler> gloin: see e.g. https://realpython.com/python-main-function/
[01:36:17] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[01:36:24] <gloin> nedbat: is "main" a reserved word in Python - ah checking The-Compiler's link
[01:36:30] <SnoopJ> it is not
[01:36:31] <nedbat> gloin: no
[01:36:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[01:37:23] <SnoopJ> It helps to understand how name resolution works in general, this is a good read: https://docs.python.org/3/reference/executionmodel.html#naming-and-binding (and so is https://nedbatchelder.com/text/names1.html)
[01:37:41] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[01:37:55] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[01:38:08] *** Joins: ali1234 (~al@user/ali1234)
[01:38:16] <nedbat> gloin: i don't know Perl's execution model, but Python's is very simple: start at the top of the file, and execute the statements as they are encountered until you get to the end of the file, then you are done.
[01:39:02] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:39:34] <gloin> nedbat: perl's basically the same except that everything not defined as being in a function is assumed to be in main, so you can have 5k lines of main, and one function at the very end that you call on line 35 and you're fine although your coworkers will kill you for doing it.
[01:39:41] *** Joins: entflammen (~entflamme@cpe-23-243-251-166.socal.res.rr.com)
[01:39:42] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) ()
[01:41:10] <gloin> (On a side note, neither perl nor python, I've always thought "Public Static" would make a killer name for a thrash band)
[01:41:10] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[01:41:29] *** Quits: sazawal (~sazawal@171.50.134.171) (Quit: Leaving)
[01:41:37] <SnoopJ> Python just starts looking for a name in the local scope and if it fails to find it there, it searches the next enclosing scope and so on.
[01:41:42] <nedbat> gloin: right, so Python has a simpler model.
[01:41:50] <nedbat> (some might say simplistic)
[01:42:24] <grym> gloin: (any three words is a valid band name, so `public static void` would do fine too)
[01:42:24] <gloin> lol so as I understand this, I declare the main function at the top with all the working code, declare all my other functions below that, and then at the very end call main
[01:42:39] <gloin> grym: "void" would of course be their first album
[01:44:07] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[01:44:37] <gloin> The-Compiler: is using the main() function common practice or is it something other programmers are going to gretch about? It seems kind of hackish to me.
[01:44:56] <The-Compiler> gloin: what's hackish about it?
[01:46:14] <gloin> Hard to explain - I guess most folks understand what they're dealing with when they see "main()" on the screen but on the other hand, if python is evaluated top-to-bottom then using a main function would seem to break that model.
[01:46:48] <gloin> in any case I prefer it to wading through a ton of function definitions before reaching the working code
[01:46:53] <voldial> why does this sys.stdin.buffer.read(1) block? https://bpa.st/ELSA
[01:47:44] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[01:47:49] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:47:49] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[01:47:51] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[01:47:54] <voldial> sys.stdout.buffer.write(b"\x1b[6n") -> "^[[73;1R4" (cursor is at line 73 col 1)
[01:48:00] <The-Compiler> gloin: it's actually a good practice because you don't accidentally end up defining module-global variables by having more code than necessary at module level
[01:48:05] *** Quits: qlixed (~qlixed@host172.181-9-125.telecom.net.ar) (Ping timeout: 265 seconds)
[01:48:12] <voldial> but: sys.stdout.buffer.write(b"\x1b[6n"); a=sys.stdin.buffer.read(1) blocks
[01:48:35] *** Joins: newpy (~newpy@2601:280:4381:1390:cc07:b342:d268:ed9d)
[01:48:36] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:80c7:9e7d:34f1:f447)
[01:48:43] <entflammen> I've come across some interesting behaviour that I'd love to have some input on. I am processing a large amount of images, and have gotten a multiprocessing pipeline set up such that images are loaded into a multiprocessing queue and then the worker functions take over the processing. Comparing the times though, if I set the queue to only accept 1 item at a time (which in my mind should be equivalent to single-threaded
[01:48:43] <entflammen> behaviour, the time taken by the non-multiprocessing function is much more than the multiprocessing with one worker.
[01:48:45] <raek> gloin: I would say it's common (and good) practice
[01:49:11] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:49:22] *** Quits: upsala (~zcb@2a03:1b20:6:f011::a01e) (Ping timeout: 240 seconds)
[01:50:13] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[01:50:18] <raek> it is also useful because you can declare that function to be a console script entry point, so that when your package is installed, you get a launcher script added to a suitable place that runs that function
[01:50:27] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[01:50:54] <raek> (the approach also plays nicely with analysis tools that don't want to start the application)
[01:51:24] *** Joins: derelict (~derelict@user/derelict)
[01:51:43] <Yhg1s> entflammen: the queue accepts one worker, but you have multiple workers taking items from the queue and processing them?
[01:52:04] <entflammen> there is one worker total, with a queue that accepts one item at a time
[01:52:29] <Yhg1s> entflammen: there will be one item being processed and one item in the queue, then. Are you measuring the time correctly?
[01:52:54] <entflammen> I'm measuring the time both with time.time() and the linux time command
[01:53:08] <entflammen> the difference is 4 seconds to process all images with the multiprocessing and 30 seconds without
[01:53:12] *** Joins: entuland (~entuland@user/entuland)
[01:53:38] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:54:08] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:54:27] <Yhg1s> entflammen: sounds very much like you're not processing them one at a time then.
[01:54:34] <Yhg1s> but without the actual code it's hard to say.
[01:54:43] <entflammen> getting some pastes ready, one sec
[01:55:08] <nedbat> gloin: people won't be surprised by a main() function. it's not a hack, it's structuring your code.
[01:55:18] <gloin> Alright, thanks all.
[01:55:21] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 268 seconds)
[01:55:37] <nedbat> gloin: if someone complains, you can say, this way I can write unit tests that call main()
[01:55:45] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[01:55:49] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[01:56:13] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[01:56:31] <entflammen> Well, I figured out the issue lol
[01:57:05] <entflammen> forgot that I was writing some stuff to disk in the non-multiprocessing one
[01:57:16] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[01:57:28] <entflammen> which would explain the drastic time difference lol
[01:57:30] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 240 seconds)
[01:58:41] *** Quits: mike18 (~geri@217-149-163-174.nat.highway.telekom.at) (Remote host closed the connection)
[01:59:17] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[01:59:21] <entflammen> thanks for letting bounce it off you, Yhg1s
[02:00:03] *** Joins: ethoxy (~root@cx21.havox.ru)
[02:00:48] <mefistofeles> is returning an empty dict a thing in python? I see a lot of that in this code I'm reviewing and I wonder why...
[02:00:57] <SnoopJ> voldial, I'm not sure I understand the question, but sys.stdin.read() will block until it gets the number of bytes it expects, or EOF if not specified.
[02:01:33] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:02:18] <voldial> SnoopJ: runnable example: https://bpa.st/OZ2A
[02:02:20] *** Quits: bongobrown (~omary@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 258 seconds)
[02:02:26] *** Joins: pnoud (~pnoud@user/pnoud)
[02:03:20] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:03:39] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[02:04:36] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[02:04:36] <Yhg1s> voldial: if you're asking 'why do you need to press enter for sys.stdin to provide input', it's because when connected to a terminal, by default, sys.stdin is line-buffered. The terminal doesn't send the data until you hit enter.
[02:05:04] *** Parts: orangeboxcutter (~orange@user/orangeboxcutter) (Textual IRC Client: www.textualapp.com)
[02:05:11] <SnoopJ> Yea, that.
[02:05:34] *** Joins: hyperknot (~hyperknot@dynamic-046-114-095-237.46.114.pool.telefonica.de)
[02:05:42] <voldial> aah. so.. hm. even sys.stdin.buffer.read(1) would do the same thing... until line buffering is disabled?
[02:05:46] *** Joins: V1mV1m (~VimVim@85.191.61.111)
[02:06:00] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 276 seconds)
[02:06:06] * voldial just wants to ask where the cursor is:)
[02:06:07] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:06:17] <voldial> terminals are so... eh... simple
[02:06:21] <Yhg1s> voldial: yes, the buffering isn't happening in Python itself.
[02:06:32] <Yhg1s> voldial: you probably want to use something like urwid instead.
[02:07:07] <voldial> Yhg1s: right, but how does urwid do this?
[02:07:25] <voldial> is urwid a terminal emulator too?
[02:07:54] <Yhg1s> probably, but that's not how it does it. It does it by telling the terminal to go into raw mode, instead of cooked, line-buffering mode.
[02:08:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[02:08:29] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[02:08:49] <nedbat> mefistofeles: in that code, what is meant by the empty dict?
[02:08:52] *** Quits: VimVim (~VimVim@85.191.89.249) (Ping timeout: 265 seconds)
[02:09:29] <voldial> Can I utilize urwid's machinery witout it's widgets? I just want "normal" term, but I have something that I want to have it prepend a \n in a special case.
[02:10:10] <voldial> specifically, if the cursor isnt currently on col1
[02:10:18] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[02:10:35] <voldial> I started to make some global state to track it... but eww
[02:10:54] <Yhg1s> voldial: it's difficult to query the terminal in cooked mode, and you need to take care of a lot of details to do it right. I wouldn't bother trying.
[02:13:08] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:13:19] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2 (See ya!))
[02:13:38] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[02:13:39] <SnoopJ> I think you can use the `curses` library to enter and exit raw mode fairly gracefully? But yea, the more of this detail you don't inherit as a headache, the better.
[02:14:22] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[02:15:03] <voldial> Yhg1s: good to know. ok. urwid/termui/asciimatics to the rescue
[02:15:32] <voldial> SnoopJ: I'll keep an eye out for that ability
[02:16:03] *** Quits: newpy (~newpy@2601:280:4381:1390:cc07:b342:d268:ed9d) (Remote host closed the connection)
[02:16:18] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[02:16:30] *** Joins: newpy (~newpy@2601:280:4381:1390:cc07:b342:d268:ed9d)
[02:16:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:17:29] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:17:43] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[02:18:07] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[02:18:39] *** Quits: hyperknot (~hyperknot@dynamic-046-114-095-237.46.114.pool.telefonica.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:19:59] *** Quits: Quaking (~Quaking@167.89.254.27) (Ping timeout: 252 seconds)
[02:20:18] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 276 seconds)
[02:20:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:20:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:22:11] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[02:23:40] *** Joins: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691)
[02:24:03] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[02:25:18] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:26:06] *** Quits: p-i-_ (~Ohmu@node-fts.pool-101-109.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:26:42] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:26:55] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[02:27:14] *** Joins: p-i- (~Ohmu@node-12il.pool-118-173.dynamic.totinternet.net)
[02:27:22] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 240 seconds)
[02:28:32] *** Quits: ethoxy (~root@cx21.havox.ru) (Remote host closed the connection)
[02:28:45] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 276 seconds)
[02:28:54] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:7969:171a:ce93:2df8) (Ping timeout: 252 seconds)
[02:29:51] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[02:31:31] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[02:32:04] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:33:31] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[02:33:51] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[02:34:46] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:37:32] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 256 seconds)
[02:37:40] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[02:38:04] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[02:39:21] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 252 seconds)
[02:40:18] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:40:31] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[02:42:14] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[02:42:23] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[02:42:35] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[02:43:50] *** Quits: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net) (Quit: Client closed)
[02:44:38] *** Quits: entflammen (~entflamme@cpe-23-243-251-166.socal.res.rr.com) (Ping timeout: 265 seconds)
[02:47:37] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[02:48:39] <nubonix> looking for some help sending images over an async websocket [fastapi, opencv, mss] client.py & server.py [basic example] https://bpa.st/A3FA
[02:50:21] *** Leonarbro_ is now known as Leonarbro
[02:54:24] *** Quits: Akuli (~Akuli@82-203-161-154.bb.dnainternet.fi) (Quit: Leaving)
[02:54:36] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[02:54:36] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:31] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[02:57:01] *** Quits: SuperL4g (~akulbe@user/superlag) (Quit: leaving)
[02:57:01] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[02:57:57] *** Quits: hrtk (~hritik@182.69.15.72) (Quit: Took the red pill)
[02:58:43] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[02:59:00] *** Jefren4 is now known as Jefren
[02:59:09] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[03:03:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 258 seconds)
[03:04:33] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[03:05:40] *** Joins: djapo (~archangel@user/djapo)
[03:06:52] *** Quits: sudomannn (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[03:07:13] *** Joins: sudomann (~sudomann@68.235.43.86)
[03:08:24] <nubonix> solved, didnt use a break when using cv2.imshow
[03:10:32] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[03:12:16] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[03:12:27] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:13:01] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:13:13] *** Joins: heco (~redrum@user/redrum88)
[03:13:46] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:13:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[03:14:19] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[03:14:46] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:15:48] *** Joins: EvanCarroll (~ecarroll@50.222.187.218)
[03:17:27] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:17:42] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[03:19:36] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[03:20:17] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:20:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:21:52] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:22:03] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-45eb-dc20-018b-c9ba.res6.spectrum.com)
[03:22:05] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:22:47] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:80c7:9e7d:34f1:f447) (Quit: Client closed)
[03:23:30] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8433-02bf-c0e0-ee2c.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:25:16] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:26:05] *** Quits: greedom (~greedom@2001:16b8:2e48:d200:a909:4933:eff8:21f0) (Remote host closed the connection)
[03:28:03] *** Joins: dre (~dre@2001:8003:c932:c301:a7ea:13cd:5ed6:fd3a)
[03:28:08] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[03:29:05] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[03:29:08] *** Joins: matsaman (~matsaman@user/matsaman)
[03:30:04] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[03:33:15] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:33:31] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[03:34:00] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[03:37:18] *** Joins: SuperLag (~akulbe@user/superlag)
[03:39:30] *** Joins: tecnico (~Guest37@titan.nsstc.uah.edu)
[03:40:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[03:42:09] *** Joins: cheater (~Username@user/cheater)
[03:42:20] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[03:42:37] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[03:42:42] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[03:43:16] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[03:43:37] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:43:52] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.2)
[03:44:35] *** Joins: matsaman_ (~matsaman@user/matsaman)
[03:45:11] *** Quits: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: Client closed)
[03:47:14] *** Quits: matsaman (~matsaman@user/matsaman) (Ping timeout: 256 seconds)
[03:47:25] *** matsaman_ is now known as matsaman
[03:50:26] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[03:54:42] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 252 seconds)
[03:55:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[03:55:11] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[03:55:21] <nedbat> i try to use !r when formatting values into error messages (repr), but I think it isn't a good idea for file names, since on Windows it doubles the backslashes and confuses people.
[03:55:51] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 276 seconds)
[03:56:46] *** Joins: tims (~tims@61.69.131.46)
[04:00:14] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:02:36] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:03:16] *** Joins: pnoud (~pnoud@user/pnoud)
[04:04:33] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:07:18] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:07:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[04:08:47] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[04:09:52] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:10:18] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 240 seconds)
[04:10:45] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[04:11:48] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[04:14:32] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[04:14:36] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[04:15:17] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:15:20] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:15:46] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[04:16:53] *** Quits: emika (~emika@83.136.182.235) (Ping timeout: 258 seconds)
[04:18:11] *** Joins: emika (~emika@83.136.182.235)
[04:18:38] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:19:08] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 272 seconds)
[04:19:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:19:42] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[04:21:02] *** Joins: gggp (~gggp@111.63.14.119)
[04:22:37] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 245 seconds)
[04:23:08] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:23:41] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:23:43] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[04:24:21] *** Leonarbro_ is now known as Leonarbro
[04:25:33] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:26:01] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:26:05] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:26:24] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[04:28:47] <whatsupdoc> "takes 2 positional arguments but 3 were given"
[04:28:52] <whatsupdoc> Anyone have an idea why?
[04:29:02] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 265 seconds)
[04:29:55] <matsaman> whatsupdoc: just what it says
[04:29:57] <Repiphany> Class instance method implicit self
[04:30:07] <matsaman> something got three args when it only wanted two
[04:30:34] <whatsupdoc> but there are 2 only 2 args
[04:30:56] <matsaman> if you think you gave two, and it's complaining there are three
[04:30:58] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[04:30:58] <matsaman> most likely there are three
[04:31:00] *** Joins: jochum (~jochum@user/jochum)
[04:31:13] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[04:31:24] <whatsupdoc> so I added self,  into the function name and it works now
[04:31:27] <whatsupdoc> why is that needed?
[04:31:28] <KirkMcDonald> Is something missing 'self'? Because usually that means something is--
[04:31:46] <KirkMcDonald> Because it is a method.
[04:32:12] <whatsupdoc> i don't know any other programming language where you need to do that
[04:32:20] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[04:32:27] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:32:29] <KirkMcDonald> It is true that other languages do thing differently from Python.
[04:32:33] <KirkMcDonald> things*
[04:32:41] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:32:56] <whatsupdoc> i don't think python2 needed it?
[04:33:05] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[04:33:08] <KirkMcDonald> It did.
[04:33:18] *** Joins: y1n (~y1n@84-115-65-30.wifi.dynamic.surfer.at)
[04:33:58] <whatsupdoc> Whhy do you need 'self'
[04:34:28] *** Quits: gggp (~gggp@111.63.14.119) (Remote host closed the connection)
[04:34:30] <KirkMcDonald> It needs to receive the object that the method was called on *somehow*.
[04:35:04] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[04:35:09] <whatsupdoc> c++ doesn't do that
[04:35:25] <KirkMcDonald> Correct. C++'s `this` is passed implicit, and is a keyword besides.
[04:35:29] <KirkMcDonald> implicitly*
[04:35:35] <Repiphany> whatsupdoc: https://bpa.st/3DQQ
[04:35:47] <KirkMcDonald> But C++'s object model is extremely different from Python's.
[04:35:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:36:03] <Repiphany> When you call a class method on an instance, it always passes itself as the first argument
[04:36:15] <whatsupdoc> dumb
[04:36:17] <whatsupdoc> lol
[04:36:19] <KirkMcDonald> Python isn't totally unique in this respect. Method in Lua aren't all that different.
[04:36:25] <KirkMcDonald> Methods*
[04:36:36] <KirkMcDonald> And Go uses an explicit receiver parameter, though the syntax is different.
[04:36:44] <Repiphany> You can have decorated staticmethods that don't do that
[04:36:46] <whatsupdoc> i think this is the first programming language that i've ran into where you need to do this
[04:37:11] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[04:37:55] <FunkyBob> it may not be the last.
[04:38:27] <FunkyBob> I remember it was only a couple of years ago I discovered methods get passed self through the power of the descriptor protocol...
[04:39:11] <matsaman> whatsupdoc: there's always functions =)
[04:39:37] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[04:40:09] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:40:21] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[04:40:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:42:36] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:42:55] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[04:45:33] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-45eb-dc20-018b-c9ba.res6.spectrum.com) (Quit: jarthur_)
[04:46:10] *** Joins: fructose (~fructose@user/fructose)
[04:46:28] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[04:47:59] <newpy> does anyone have preferred tools for CI/CD?
[04:48:36] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:48:46] <gloin> python idiom to approximate "next if foo == None" possibly?
[04:49:13] *** Quits: jess (~jess@libera/staff/jess) ()
[04:49:20] <gloin> also I'd give my left arm for a functioning "unless"
[04:49:55] <Yhg1s> gloin: 'if not' is just as long as 'unless'.
[04:50:16] <gloin> if not foo == bar?
[04:50:19] <Yhg1s> gloin: but the usual way to write 'next if foo == None' is to use generators instead, or possibly 'if foo is None: continue'
[04:50:33] <Yhg1s> gloin: 'if foo != bar' for that case.
[04:50:57] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[04:51:02] <gloin> != for strings, not "ne"
[04:51:03] <gloin> ?
[04:51:11] *** Quits: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[04:51:13] <Yhg1s> gloin: ... yes, Python is *very much* not Perl.
[04:51:14] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 252 seconds)
[04:51:38] <gloin> sorry, I'll go peek at the bools - obviously stuck in some habits I need to learn to ignore :D
[04:51:48] <Yhg1s> I recommend tutorials.
[04:54:58] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[04:54:59] *** Joins: monkey_ (~user@190.104.116.134)
[04:56:00] *** Joins: afidegnum (~user@102.176.94.136)
[04:56:10] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:56:37] *** Quits: sudomann (~sudomann@68.235.43.86) (Quit: Leaving)
[04:56:38] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[04:56:42] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:56:51] *** Joins: gloin (~gloin@user/gloin)
[04:57:41] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[04:58:05] <yuesbeez> Can asyncio in python 3.9.6 make a function non-blocking or does that require multithreading?
[04:58:13] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:58:41] *** Quits: monkey_ (~user@190.104.116.134) (Read error: Connection reset by peer)
[05:00:35] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[05:00:56] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[05:01:21] <Yhg1s> yuesbeez: you can write a function so it's non-blocking. you can't magically make a function non-blocking.
[05:01:43] <Yhg1s> (even using threads doesn't do that; you have to use threads correctly, just like coroutines, and it isn't easy.)
[05:02:09] <Yhg1s> yuesbeez: you can ask asyncio to call a function in a separate thread, though, and await on the result.
[05:03:05] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:51d3:394c:4618:cf07)
[05:03:12] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:05:02] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:05:54] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 268 seconds)
[05:09:24] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[05:13:23] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[05:15:15] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[05:15:15] <SnoopJ> whatsupdoc, it's fairly idiosyncratic, yes. If you really can't stand it, you could call `SomeClass.some_method(instance_of_someclass, ...)`
[05:15:26] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[05:15:33] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:15:34] <whatsupdoc> ew
[05:15:42] <whatsupdoc> that's even worse i think
[05:16:05] <SnoopJ> indeed it is
[05:16:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[05:16:56] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[05:17:11] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:17:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:17:27] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[05:19:44] <Yhg1s> I recommend instead realising that Python isn't the same as other languages (because it's a different language), and so it makes different trade-offs. If you really want to know why 'self' hasn't been made implicit, there's long discussions to be found on the interwebs.
[05:21:00] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 276 seconds)
[05:22:33] <FunkyBob> or for a quicker answer, "import this" :)
[05:23:09] <SnoopJ> FunkyBob, which part of the zen addresses `self` do you reckon?
[05:23:26] <FunkyBob> Explicit is better than implicit.
[05:24:23] *** Joins: cjb (~cjb@user/cjb)
[05:24:39] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[05:25:02] *** Joins: m33k (dexter@user/m33k)
[05:25:20] *** Quits: yte3 (~0@151.15.197.55) (Read error: Connection reset by peer)
[05:26:52] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[05:30:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:31:09] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[05:31:52] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[05:33:06] *** Quits: y1n (~y1n@84-115-65-30.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[05:33:21] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 276 seconds)
[05:33:30] *** Joins: y1n (~y1n@84-115-64-168.wifi.dynamic.surfer.at)
[05:33:49] <nedbat> whatsupdoc: it can be hard to move from one language to another. even where the languages are similar, there are differences that can be irritating until you learn them
[05:34:16] *** Joins: vlm (~vlm@user/vlm)
[05:34:34] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[05:35:32] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1582-46b3-b2a4-e984.res6.spectrum.com) (Read error: Connection reset by peer)
[05:35:35] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:37:24] <nubonix> looking for some help with opencv, i cant seem to convert bytes into a numpy array so that cv2 can read it server/client model @ https://bpa.st/7AXA
[05:37:54] <nubonix> specifically starting at https://bpa.st/7AXA
[05:37:58] <nubonix> line 27*
[05:38:10] <nubonix> so https://bpa.st/7AXA#1L27
[05:38:23] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[05:38:34] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[05:40:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[05:42:57] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:43:34] *** Leonarbro_ is now known as Leonarbro
[05:44:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:44:55] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[05:46:23] <InPhase> nubonix: Did you look at the bytes?
[05:46:33] <nubonix> InPhase wdym
[05:46:57] <nubonix> im casting the numpy array with `.tobytes()`
[05:47:04] <nubonix> and the numpy array does have valid data
[05:47:05] <InPhase> nubonix: You have bytes in data.  You didn't specify what format it is in, so, do you know what format it is in?  If not, check docs, or start by looking at it and trying to deduce it.
[05:47:21] *** Joins: zenloading (~zenloadin@user/zenloading)
[05:47:30] <nubonix> ah okay
[05:47:35] <nubonix> thanks
[05:47:52] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[05:49:02] *** Joins: califax- (~califax@user/califx)
[05:50:30] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:51:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:52:14] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:51d3:394c:4618:cf07) (Quit: Leaving)
[05:52:32] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:52:33] *** califax- is now known as califax
[05:52:58] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:52:58] *** brabrax_ is now known as brabrax
[05:53:01] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:53:12] <whatsupdoc> nedbat: i like learning new languages, python is actually pretty good
[05:53:24] <nedbat> whatsupdoc: that's good to hear :)
[05:55:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[05:55:53] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[05:56:23] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[05:57:11] *** Joins: derpadmin (~derpadmin@cloudbase2.200013.net)
[05:57:18] *** Quits: tecnico (~Guest37@titan.nsstc.uah.edu) (Quit: Client closed)
[05:57:32] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[05:59:47] *** Joins: lorcab (~user@197.251.194.240)
[06:00:15] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:00:45] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[06:04:04] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[06:04:08] *** Joins: pnoud (~pnoud@user/pnoud)
[06:05:55] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:06:08] *** Quits: fstd (~fstd@xdsl-85-197-59-162.nc.de) (Ping timeout: 258 seconds)
[06:06:50] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[06:08:34] *** Joins: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8)
[06:08:54] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 256 seconds)
[06:09:17] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 250 seconds)
[06:11:23] <hundredvisionsgu> it's quiet in here.
[06:12:01] <SnoopJ> Definitely off-peak hours right now
[06:17:07] <hundredvisionsgu> Anyone savvy about Python projects and import errors?
[06:17:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:18:08] <SnoopJ> let's assume the answer to that question is yes if there's a follow-up question
[06:18:08] <nedbat> hundredvisionsgu: it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[06:18:20] <hundredvisionsgu> getting there
[06:18:22] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[06:20:12] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[06:20:39] <hundredvisionsgu> I have a project that I restructured (I had my tests in the same folder as the scripts I was testing). After moving the scripts and a little refactoring, the tests pass but the scripts get import errors when running as scripts
[06:23:05] <hundredvisionsgu> Using VS code, and pylint does not show an issue with the import statements in the scripts, but when I run them, I get the ModuleNotFound error.
[06:24:18] <nedbat> hundredvisionsgu: can you pastebin the structure? The names and locations of the files?
[06:24:33] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[06:24:50] <InPhase> Along with a pastebin of the specific full error.
[06:25:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:26:08] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Read error: No route to host)
[06:26:20] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[06:26:49] *** Quits: timmcg (~timmcg@c-65-96-32-86.hsd1.me.comcast.net) (Remote host closed the connection)
[06:27:40] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:31:03] *** Quits: EvanCarroll (~ecarroll@50.222.187.218) (Ping timeout: 258 seconds)
[06:32:51] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[06:33:40] <afidegnum> can you please suggest an online REPL with pip importing feature?
[06:33:44] *** Quits: y1n (~y1n@84-115-64-168.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[06:34:51] *** Joins: y1n (~y1n@84-115-65-207.wifi.dynamic.surfer.at)
[06:35:07] *** Joins: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com)
[06:38:45] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[06:39:40] <hundredvisionsgu> Here's the pastebin: https://pastebin.com/7GsEtyne
[06:39:54] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Quit: Konversation terminated!)
[06:40:52] <hundredvisionsgu> My tests import the same way. I think it has to do with the __init__.py files and their location. I'm using VSCode with pipenv and as I mentioned before pylint doesn't have an issue
[06:41:21] <InPhase> afidegnum: https://replit.com/languages/python3 imports a lot of stuff, installing it into an environment (not sure if everything).  Registering for a free account is required.
[06:41:24] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[06:42:03] <afidegnum> InPhase: thanks, but i'm not able to share the code out
[06:42:10] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:42:22] <afidegnum> unless i invite for collab
[06:42:44] <InPhase> afidegnum: Do you mean that site doesn't share?  Or do you mean you don't want to share your own code?
[06:43:25] <afidegnum> InPhase: yes, i want to share my own code, just like other pasbins
[06:48:39] <InPhase> afidegnum: I see they recently locked it down even further.  This site was still shareable about a year ago but required an account, and 2 years ago didn't even require an account.  But yes, this no longer works for that purpose.
[06:49:04] <afidegnum> ouch!
[06:49:31] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[06:51:20] <hundredvisionsgu> afidegnum: you should be able to just copy the url to your project (as long as it's public). For example, here's an example: https://replit.com/@HundredVisionsGuy/PySimpleGui-Test#main.py
[06:51:34] <hundredvisionsgu> I did need an account, though.
[06:52:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:52:50] <afidegnum> hundredvisionsgu: ah, means i needed to click on the "Code" switch to display my codes, right?
[06:52:55] <afidegnum> noted.
[06:53:02] <hundredvisionsgu> yes.
[06:53:09] <hundredvisionsgu> Sorry, I forgot to mention that.
[06:53:28] <InPhase> Ok, so there is still a mechanism.
[06:53:34] <InPhase> It's just hidden better.
[06:53:34] <afidegnum> gotcha!
[06:53:52] <InPhase> And behind a captcha that I had trouble solving...
[06:58:44] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:58:44] *** FinnElija is now known as Guest8697
[06:58:44] *** Quits: Guest8697 (~finn_elij@user/finn-elija/x-0085643) (Killed (tungsten.libera.chat (Nickname regained by services)))
[06:58:44] *** finn_elija is now known as FinnElija
[06:58:53] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[06:59:17] *** Leonarbro_ is now known as Leonarbro
[07:00:15] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:01:11] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:10aa:ff90:37bd:5627)
[07:03:06] <hundredvisionsgu> I can't help but get the nagging feeling that every time I "solve" a captcha, I bring us that much closer to the point of singularity.
[07:04:47] <jessicara> i thought so myself
[07:04:49] *** Quits: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8) (Quit: Client closed)
[07:04:56] <jessicara> then i got a captcha which looked like a bad ai generated bike
[07:05:21] <jessicara> then realised i can't even solve these anymore, it's all wrong
[07:05:39] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 276 seconds)
[07:05:42] <InPhase> jessicara: I had to find trains, and had an epistemological crisis over what counted as a train.
[07:05:53] <jessicara> yeah
[07:06:20] <jessicara> feels a lot like ai generated tigers
[07:06:54] <jessicara> get some weird thing which merges two non-tiger small cats with a fallen tree's trunk, ai says 100% tiger therefore human is not human
[07:07:25] *** Joins: heco (~redrum@user/redrum88)
[07:07:42] <nubonix> InPhase yeah.. im lost
[07:08:46] <InPhase> nubonix: Pastebin your bytes output?  And then maybe explain where you got the data from.
[07:10:25] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[07:10:42] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:10:47] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[07:10:59] <nubonix> InPhase https://gist.githubusercontent.com/nubonics/af4bf834ca83af1d69a74c129ea485f7/raw/fe0c69112221b465f77af0144b3caa82d2645066/this_bytes.txt
[07:11:07] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:11:27] <nubonix> im getting the bytes from a numpy array that im converting to bytes via the .tobytes() method numpy has
[07:12:02] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[07:12:08] <nubonix> the numpy array is an array represending rgb data
[07:14:18] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:17:14] <nubonix> the data is coming from some things i found on the internet and spliced together to read the image(s) of background processes [screenshotting windows that are not in focus]
[07:17:32] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:18:03] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:18:20] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[07:18:42] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[07:19:10] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[07:19:11] <InPhase> nubonix: What's len(thebytes)?
[07:19:44] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:22:15] *** Joins: dld (~davidlowr@2601:197:600:1210:d4d0:7430:7dcd:3fff)
[07:22:25] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:22:59] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[07:24:10] <nubonix> InPhase: 1145205
[07:25:22] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:26:38] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 258 seconds)
[07:28:25] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[07:28:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:28:56] *** Quits: V1mV1m (~VimVim@85.191.61.111) (Ping timeout: 258 seconds)
[07:29:10] <InPhase> nubonix: Then perhaps something like:  Image.fromarray(np.frombuffer(thebytes, dtype=np.uint8).reshape([1497, 765, 3])).show()
[07:29:54] <InPhase> nubonix: I'm guessing on the dimensions.  You'll know when the image looks goofy that it's a different combination of the prime factors of that length.  :)  If you know what the image dimensions should be, that would help you out.
[07:30:57] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 245 seconds)
[07:33:09] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 258 seconds)
[07:33:40] *** Quits: y1n (~y1n@84-115-65-207.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[07:33:57] *** Joins: y1n (~y1n@84-115-65-96.wifi.dynamic.surfer.at)
[07:34:09] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:34:59] <nubonix> InPhase: heyyyy there we go :D
[07:35:05] *** Joins: derelict (~derelict@user/derelict)
[07:36:00] <nubonix> ty :)
[07:36:12] *** Quits: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[07:39:29] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:41:48] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[07:41:54] *** Joins: r3m (~launch@user/r3m)
[07:46:42] <InPhase> nubonix: And I see you are playing RuneScape.  I got the bottom part of an image out of your bytes pastebin.
[07:47:08] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:47:12] <nubonix> InPhase: i dont really play the game
[07:48:47] *** Joins: r3m (~launch@user/r3m)
[07:49:31] <nubonix> but yes, this project involves the game
[07:52:24] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:53:19] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:54:56] *** Quits: sreve (~quassel@p4ff44924.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:57:10] <InPhase> nubonix: If you want to understand the black magic behind the guessing, it's about looking at the patterns.  In the bytes output there's a pattern every 3, so it was likely RGB bytes, and there was no evidence of a header or footer deviating from that trend.  Also there was another periodicity about every 3000 characters, which dividing by the existing 3 takes you to 1000, and then you have to drop it
[07:57:16] <InPhase> down a little more because some characters are expanded like \xa0 etc.  So then I ran GNU factor on the length for prime factors, and looked for a multiple in the right ballpark to be the second dimension.
[07:58:06] <nubonix> InPhase: ye, ik lists of lists, or arrays of arrays
[07:58:18] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[07:58:35] <nubonix> x_cord, y_coord, r, g, b
[07:59:50] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:00:54] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[08:01:01] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:01:01] <afidegnum> hi, while trying to traverse an HTMl DOm nodes, I have hard time extracting the children of the top node. This is what I have done so far. https://replit.com/@alexandropov/DomTreeParsing#main.py
[08:01:13] <nubonix> InPhase: what im wondering about now, is why im only getting about a minute of data received
[08:01:49] <nubonix> seems client side error
[08:04:37] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[08:04:57] *** Joins: pnoud (~pnoud@user/pnoud)
[08:09:03] <afidegnum> any hint?
[08:09:57] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[08:10:10] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:13:24] <BrenBarn> afidegnum: why are you using child::node instead of just iterating over the div element?
[08:13:47] *** Quits: y1n (~y1n@84-115-65-96.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[08:13:57] <BrenBarn> which elements from the document are you hoping to get?  just the header/content/footer divs?
[08:16:21] *** Joins: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[08:17:09] <afidegnum> yes
[08:17:21] <afidegnum> BrenBarn:
[08:17:42] <afidegnum> I want to be able to group them,
[08:17:54] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[08:18:50] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[08:18:59] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:19:22] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[08:19:23] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:20:52] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[08:21:19] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:21:28] <BrenBarn> just group those three elements?  how?
[08:22:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:22:14] <afidegnum> BrenBarn: no, it suppsed to be a dynamic grouping for various html files.
[08:22:30] <afidegnum> those are to be indexed for proper manipulation
[08:23:19] <BrenBarn> can you give an example of what you expect the output to be?
[08:23:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:24:09] <afidegnum> ok, a min
[08:24:56] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:27:50] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:28:09] <afidegnum> BrenBarn: i don't know if this is the correct representation but I needed something like this div_classes = {'header': ['slider', 'navigation'], 'top_block': {'top_block' : ""}, 'inner_block': {"text_block": ["header", "paragraph"] }}
[08:29:14] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:32:32] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[08:33:54] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[08:34:39] *** Joins: anandprabhu (~anandprab@45.83.220.218)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:52] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[08:38:26] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 265 seconds)
[08:38:47] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 256 seconds)
[08:40:45] <afidegnum> BrenBarn: the objective is to be able to create a k-v data entry in a form of
[08:40:48] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:40:49] <afidegnum> cur.execute("CREATE (:theme {tag: 'div', id: 'JS_id', TEXT: None})")
[08:40:58] <afidegnum> cur.execute("CREATE (:theme {tag: 'sub_div', id: '', TEXT: None})")
[08:41:07] <afidegnum> cur.execute("MATCH (p:theme {tag: 'div'}),(k:theme {tag: 'sub_div'}) CREATE (p)-[:element_of]->(k)")
[08:41:35] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:41:53] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[08:43:46] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[08:44:40] *** Joins: emika7 (~emika@83.136.182.151)
[08:45:06] *** Joins: djapo (~archangel@user/djapo)
[08:45:08] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 272 seconds)
[08:45:18] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[08:45:27] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:46:32] *** Joins: cjb (~cjb@user/cjb)
[08:47:37] *** Quits: emika (~emika@83.136.182.235) (Ping timeout: 265 seconds)
[08:47:37] *** emika7 is now known as emika
[08:53:04] <BrenBarn> okay, so you don't just want the three elements you said before you wanted
[08:53:38] <BrenBarn> I don't see anything called "slider" or "paragraph" in the HTML in your example
[08:53:41] *** Joins: andika (~andika@subs46-116-206-42-113.three.co.id)
[08:54:17] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[08:56:17] <afidegnum> i was giving an abstract example so you can get the picture
[08:56:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[08:57:47] *** Joins: Wulf (~Wulf@user/wulf)
[08:58:21] *** Joins: c10l (~c10l@89.34.167.207)
[08:58:32] <BrenBarn> I'm asking for the specific example you gave in the replit, what is the specific output you want
[08:58:51] <BrenBarn> the point of giving a specific example in a replit is so you can get from abstract to concrete
[08:59:11] <afidegnum> i wanted to have something like, wrapper(div) -> header(div) - > h1->  div(nav) -> ul -> li*5
[09:00:36] <afidegnum> then, content-> feature -> p being a sub tree of `header`
[09:00:53] <afidegnum> etc ...
[09:00:53] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[09:01:18] <BrenBarn> so you basically want to replicate the entire DOM in a bunch of dicts?
[09:01:27] <afidegnum> yes,
[09:01:30] <BrenBarn> like nested dicts?
[09:01:34] <afidegnum> exact
[09:03:04] <BrenBarn> then forget about xpath and just recursively loop over the nodes and add them to your dict
[09:03:21] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:03:26] <BrenBarn> like the etree structure basically already is what you want
[09:03:33] <afidegnum> what module do you sugegst? I tried bs4 whicih didn't helped
[09:03:34] <BrenBarn> except it's etree objects instead of plain dicts
[09:05:33] <afidegnum> BrenBarn: I tried etree a bit earlier but it complained about not being xml compliant since i'm using html5
[09:05:54] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[09:05:59] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[09:09:38] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:11:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:11:46] <BrenBarn> I just mean the lxml structure you're already using already is what you want, it's just Element objects instead of dicts
[09:11:50] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:12:18] <afidegnum> can you please give a hint about it ?
[09:13:08] *** Joins: ziky (sid27087@user/ziky)
[09:14:08] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[09:14:47] *** Joins: cjb (~cjb@user/cjb)
[09:15:21] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 252 seconds)
[09:15:25] <mat001> In try/except block I don't have an exception. I have this: "...except queue.Full:...". Can I assert this with pytest as exception. How to handle it if it's not an actual Exception class?
[09:15:39] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[09:15:51] <BrenBarn> why do you want a nested dict instead of nested list?
[09:16:09] <afidegnum> it could be nested list, i will be glad too,
[09:16:10] <BrenBarn> like you want the key of the dict to be, what, the ID of the tag?  or the tag name?
[09:17:31] <afidegnum> the problem i initially faced was to retrieve the last inserted id of the previous entry from the db. to be able to pass to it children. I tried uuid too but the vealues changed any moment there is an iteration
[09:17:37] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:17:41] <afidegnum> maybe an iterative index will do ?
[09:17:54] <afidegnum> what do you suggest?
[09:18:04] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 265 seconds)
[09:18:06] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:18:29] *** Joins: trufas (~trufas@177.240.218.218)
[09:19:49] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:20:44] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 252 seconds)
[09:22:37] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:23:06] <BrenBarn> A simple idea is something like this:
[09:23:09] <BrenBarn> def listify(node):
[09:23:09] <BrenBarn>   kids = {node.tag: [listify(child) for child in node]}
[09:23:09] <BrenBarn>   return kids
[09:23:09] <BrenBarn> print(listify(body[0]))
[09:23:40] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Ping timeout: 268 seconds)
[09:23:41] <afidegnum> ok, let me give it a try
[09:24:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:24:02] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:24:14] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:24:56] <BrenBarn> I mean you have to think what you want to do if a node has multiple children with the same tag name
[09:25:29] <afidegnum> yes, that's why i'm looking for a better way to consolidate the relationship, since I don't have an id retainer
[09:26:10] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[09:26:49] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:28:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:28:42] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[09:29:11] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[09:29:28] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:29:34] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:48] <BrenBarn> you could also do something like this
[09:29:48] <BrenBarn> def listify(node):
[09:29:48] <BrenBarn>   kids = [{'tag': child.tag, 'children': listify(child)} for child in node]
[09:29:48] <BrenBarn>   return kids
[09:30:01] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[09:30:20] <fluiD> please don't return the kids
[09:30:22] <BrenBarn> i.e., a sort of alternating list/dict structure where you have a list of dicts where each dict has a key for "what tag is this" and then another key to hold the children, which is another list of similar formar
[09:30:23] <BrenBarn> format
[09:30:29] *** Joins: c10l (~c10l@89.34.167.207)
[09:30:34] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[09:30:37] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:30:53] *** Joins: ferz (~ferz@93.48.251.229)
[09:31:46] *** Joins: sandeepk (~sandeepk@223.130.30.125)
[09:33:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[09:33:32] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:35:10] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[09:35:22] <afidegnum> BrenBarn: thanks, I think it will do, i will give a feedback shortly
[09:37:01] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:38:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 256 seconds)
[09:39:11] *** Joins: reset (~reset@user/reset)
[09:41:57] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:44:11] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[09:44:38] *** Quits: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 258 seconds)
[09:44:38] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:47:48] <nubonix> anyone able to help me with a memory leak @ https://bpa.st/N3WA
[09:50:46] <shlomif> nubonix: hi
[09:51:01] <nubonix> sup
[09:51:33] <shlomif> nubonix: win32? :O
[09:51:41] <nubonix> ?
[09:51:50] <nubonix> instead of opencv or mss? yes, win32
[09:52:36] <shlomif> nubonix: i reworked https://www.shlomifish.org/philosophy/the-eternal-jew/#combined_meme
[09:53:42] *** Joins: doc (~doc@user/doc)
[09:55:00] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:55:04] <shlomif> nubonix: mswin leaks by design: it will likely be linux-based soon anyway: https://www.shlomifish.org/philosophy/culture/case-for-commercial-fan-fiction/indiv-nodes/starved_of_employees.xhtml
[09:55:49] <nubonix> shlomif: please keep it #python based
[09:56:33] <shlomif> nubonix: you said 'sup?'
[09:57:10] <nubonix> you initiated the conversation, and i replied as i suspected you were wanting to help with my question a few messages before
[09:57:38] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[09:57:49] *** Joins: runciter (~runciter@user/runciter)
[09:58:08] <shlomif> nubonix: i love python, but i'm not a one trick pony
[09:58:11] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[09:59:07] <BrenBarn> this channel is about python though
[09:59:13] *** Joins: andika_ (~andika@subs43-116-206-39-109.three.co.id)
[09:59:14] *** Quits: andika (~andika@subs46-116-206-42-113.three.co.id) (Read error: Connection reset by peer)
[09:59:16] <shlomif> BrenBarn: ok
[09:59:20] *** Joins: MaximB (~MaximB@87.68.165.19)
[10:00:50] <shlomif> BrenBarn: i was telling nubonix that ms windows is leaky as hell
[10:01:19] *** Joins: dvx (~dvx@185.63.97.64)
[10:01:43] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[10:02:02] *** Joins: doc (~doc@user/doc)
[10:03:12] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[10:03:54] *** Joins: sazawal (~sazawal@171.50.134.171)
[10:04:01] <shlomif> and that even microsoft probably wants to get rid of it
[10:04:25] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[10:04:33] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[10:05:48] *** Joins: pnoud (~pnoud@user/pnoud)
[10:07:20] *** Joins: cjb (~cjb@user/cjb)
[10:08:48] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[10:10:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[10:14:57] *** Joins: mkv (~znc@ubuntu/member/m4v)
[10:18:11] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 255 seconds)
[10:18:12] *** mkv is now known as m4v
[10:20:02] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[10:21:28] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[10:22:32] *** Quits: andika_ (~andika@subs43-116-206-39-109.three.co.id) (Quit: Goodbye all, I'll be back if I'm still alive :D)
[10:25:31] *** Joins: greedom (~greedom@2001:16b8:2e48:d200:a909:4933:eff8:21f0)
[10:26:28] *** Quits: greedom (~greedom@2001:16b8:2e48:d200:a909:4933:eff8:21f0) (Remote host closed the connection)
[10:29:41] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[10:29:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:30:48] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:30:55] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:35:53] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[10:37:28] *** Joins: kosh (~kosh@user/kosh)
[10:40:26] *** Joins: palasso (~palasso@user/palasso)
[10:41:08] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[10:41:22] *** Joins: hifi (hifi@m.vi.fi)
[10:42:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[10:43:14] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:44:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:45:49] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:08] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Quit: Leaving)
[10:46:25] *** Joins: seednode (~seednode@user/seednode)
[10:47:15] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[10:47:29] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 265 seconds)
[10:49:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:50:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:50:42] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[10:51:12] *** Lord_of_Life_ is now known as Lord_of_Life
[10:51:22] <sazawal> Hi all. How do I pass a function of the current class to a multiprocessing target function in another class, that is the statement `Process(target=self.class2object.func1,args=(self.func2,))` in class1. I am getting PicklingError
[10:52:34] *** Joins: upsala (~zcb@185.213.155.160)
[10:53:09] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 276 seconds)
[10:57:08] *** Quits: upsala (~zcb@185.213.155.160) (Client Quit)
[10:57:59] <afidegnum> BrenBarn: it worked, https://replit.com/@alexandropov/DomTreeParsing?v=1
[10:58:00] *** Joins: upsala (~zcb@185.213.155.160)
[10:58:36] *** Quits: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[11:00:02] *** Joins: gusto (~Augustus@109.255.100.54)
[11:00:17] <afidegnum> thanks a lot, i'm relieved :)
[11:00:41] <shlomif> sazawal: pickle is stupid
[11:01:13] <shlomif> and insecure
[11:01:46] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 240 seconds)
[11:02:59] <deniska> sazawal: I guess you'll have to find another way to tell a target which function to use
[11:03:22] <deniska> maybe by a string name or something
[11:03:42] *** Quits: audiocat (~audio@2603-8081-1800-00ad-529e-4a13-1b41-08fc.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:03:57] <deniska> sazawal: be aware that multiprocessing is RPC/IPC in disguise, so you can only pass fairly 'simple' data structures around
[11:05:25] *** Joins: llua (~llua@zsh/developer/llua)
[11:07:08] <sazawal> deniska, I tried, `self.class2object.func2=self.func2` then ``Process(target=self.class2object.func1)` then using self.func2 inside class2object.func1. That is setting the passed function as an attribute of target function class prior to starting the process, but it didn't work either.
[11:08:09] <sazawal> Strangely, all this works fine on a Linux system.
[11:08:18] *** Joins: simplicity (~yti@user/simplicity)
[11:08:42] *** Quits: emerent (~quassel@p200300cd57058c09ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:08:45] *** Quits: xy0 (~xy0@user/xy0) (Ping timeout: 265 seconds)
[11:08:56] *** Joins: emerent (~quassel@p200300cd57058ccaba27ebfffed28a59.dip0.t-ipconnect.de)
[11:09:05] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:10:54] <shlomif> sazawal: where doesnt it work, then?
[11:11:22] <sazawal> shlomif, On Windows system
[11:11:27] <deniska> sazawal: ah, that's another reason we generally avoid multiprocessing, it may do different things on different platforms
[11:11:28] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[11:11:54] <kosh> as long as you deal with basic data structures it works fine on windows
[11:12:18] <kosh> string, list, dict, tuple, and numpy arrays all work fine across platforms
[11:12:24] <deniska> sazawal: what are you using multiprocessing for? Can you restructure your program around explicitly starting processes via something like subprocess?
[11:12:49] <sazawal> But there must be a way to let class2 know about the class1 function apart from actually defining it in class2.
[11:13:04] <kosh> actually it seems weird that some objects would work on linux and not windows for multiprocessing since both use pickle
[11:13:36] <deniska> sazawal: you can pass names of methods as strings, but that sounds just like digging deeper in a technical debt hole
[11:14:26] *** Joins: chele (~chele@user/chele)
[11:14:27] <sazawal> deniska, I see
[11:14:29] <kosh> honestly on multiprocessing heavy systems I don't normally do a lot of classes, I tend to use pure functions and will hand the name of the function
[11:14:30] <deniska> kosh: on linux multiprocessing sometimes does this evil thing of fork without exec
[11:14:45] <deniska> kosh: while on windows it can only create a new process
[11:14:59] <kosh> deniska, that seems like it would help you once but if you have a pool that keeps running that could lead to weirdness
[11:15:01] *** Joins: junktext (~junktext@109.201.152.162)
[11:15:23] <kosh> so it only looks like it handed the item across but if you change it ...
[11:15:25] <sazawal> I have only one subprocess in my application
[11:15:40] <deniska> kosh: or just accidentally relying on pre-shared state which is no longer shared once multiprocessing decides to use another process spawning method
[11:15:45] <BrenBarn> I think the pickling that's happening is of the target function itself, not any data being passed
[11:15:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:15:50] <BrenBarn> you can see some stuff about this in the docs
[11:16:05] <shlomif> sazawal: ah, it's a miracle that anything works on windows: https://www.youtube.com/watch?v=AjUmULa0R-8
[11:16:26] <kosh> with normal functions you can just hand the name as a string and you don't have to pickle a large object
[11:17:01] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[11:17:07] <kosh> honestly windows and linux work about equally well, each does some stuff better and some stuff worse, they even have about the same security track record at this point
[11:17:50] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:19:21] <BrenBarn> here are some old StackOverflow questions about similar issues: https://stackoverflow.com/questions/7016567/picklingerror-when-using-multiprocessing
[11:19:22] <BrenBarn> https://stackoverflow.com/questions/27318290/why-can-i-pass-an-instance-method-to-multiprocessing-process-but-not-a-multipro
[11:20:06] <shlomif> kosh: << Aesop originally wanted to write his fable as “The Hare and Windows Update” instead of “The Hare and the Tortoise” but could not figure out how the hare will ever lose to Windows Update, even despite him not taking the race seriously.>>
[11:21:39] *** Joins: Atque (~Atque@user/atque)
[11:21:51] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:22:52] <sazawal> BrenBarn, Yea I have gone through those threads, still couldn't figure out
[11:24:04] *** Joins: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca)
[11:24:15] <persephone> hi folks
[11:25:26] <BrenBarn> Did you try pulling your method out into a class as one of those answers shows?
[11:25:29] *** Quits: poorboy (~poorboy@104.131.46.87) (Read error: Connection reset by peer)
[11:25:41] <BrenBarn> er sorry, I mean out of the class into a top-level function
[11:25:44] <persephone> having a brief problem on my os x machine were I'm getting this bug on 4 of my python tui programs https://bugs.python.org/issue24955
[11:25:54] <shlomif> persephone: hi, sup?
[11:26:08] <persephone> shlomif: hi
[11:26:27] <persephone> having a bug in my python tui programs
[11:26:50] <persephone> this bug here https://bugs.python.org/issue24955
[11:27:29] <persephone> wondering if there's a way to pull this patch into my webbrowser.py in a single command
[11:27:43] <shlomif> persephone: can you unset the env var?'
[11:27:50] <BrenBarn> can you -- yeah
[11:27:58] <BrenBarn> like you could probably do it within your script
[11:28:04] <BrenBarn> with os.env
[11:28:17] <shlomif> persephone: o monkey patch/subclass?
[11:28:21] *** Joins: poorboy (~poorboy@104.131.46.87)
[11:28:27] <shlomif> persephone: or monkey patch/subclass?
[11:28:31] *** Joins: GOD (~mad@user/god)
[11:28:46] <sazawal> BrenBarn, The argument function is only supposed to be in another class. I cannot define it in class2 which contains the target function. It is because class2 is part of the system which provides a platform system to implement class1.
[11:28:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:29:29] <shlomif> merijn: hi, ltns
[11:29:32] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 265 seconds)
[11:30:16] *** Joins: pnoud (~pnoud@user/pnoud)
[11:30:48] <afidegnum> BrenBarn: how do i use the same approach to insert a query like i posted earlier ?
[11:31:29] *** Joins: K285 (~K285@2401:4900:47f4:8b29:20c6:6452:d01:c65e)
[11:31:35] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[11:33:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:33:24] *** Quits: Quietus (~quietus@larch.ratcliffefamily.uk) (Ping timeout: 252 seconds)
[11:34:32] *** Joins: manti7 (~manti7@176.10.104.94)
[11:36:46] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[11:37:37] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[11:38:17] *** Quits: anandprabhu (~anandprab@45.83.220.218) (Quit: Leaving)
[11:38:34] *** Joins: Quietus (~quietus@larch.ratcliffefamily.uk)
[11:47:24] *** Joins: rendar (~rendar@user/rendar)
[11:48:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:48:42] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[11:49:08] *** Quits: ckdcreation (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[11:49:21] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[11:50:14] *** Joins: dkmueller (~dkmueller@2a01:c23:b9bf:fd00:c8a9:e613:87c2:dcb3)
[11:50:58] *** Quits: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691) (Ping timeout: 240 seconds)
[11:52:12] *** Joins: NeoCore (~neocore@89.40.183.16)
[11:52:18] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Client Quit)
[11:52:32] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[11:57:07] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[11:59:46] *** Joins: jazzy (~jaziz@2600:380:8577:4a6c:39b4:468b:5d5a:f419)
[11:59:49] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:01:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:01:15] *** Joins: andika (~andika@subs46-116-206-42-71.three.co.id)
[12:02:05] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:02:36] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[12:04:35] *** Quits: celphi (sid97751@user/celphi) (Quit: Connection closed for inactivity)
[12:07:06] *** Quits: schumaml4 (~schumaml@dslb-188-104-191-129.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:07:27] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:07:33] *** Joins: schumaml4 (~schumaml@dslb-188-104-191-129.188.104.pools.vodafone-ip.de)
[12:08:42] *** Joins: gggp (~gggp@111.63.14.119)
[12:10:56] *** Quits: andika (~andika@subs46-116-206-42-71.three.co.id) (Quit: Goodbye all, I'll be back if I'm still alive :D)
[12:11:34] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 256 seconds)
[12:12:24] *** Joins: Obo (~roberto@79.red-79-153-119.dynamicip.rima-tde.net)
[12:15:52] *** Joins: Mattiaslndstrm (~Mattiasln@217-210-25-247-no110.tbcn.telia.com)
[12:17:11] *** Quits: K285 (~K285@2401:4900:47f4:8b29:20c6:6452:d01:c65e) (Quit: Client closed)
[12:21:06] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[12:21:06] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:21:15] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[12:22:18] *** Quits: Mattiaslndstrm (~Mattiasln@217-210-25-247-no110.tbcn.telia.com) (Ping timeout: 240 seconds)
[12:22:54] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:24:00] *** Joins: junktext_ (~junktext@109.201.152.164)
[12:24:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:25:08] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[12:25:27] *** Quits: junktext (~junktext@109.201.152.162) (Ping timeout: 276 seconds)
[12:25:34] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:28:34] *** Quits: inom (~inom@176.59.103.126) (Remote host closed the connection)
[12:29:13] *** Joins: inom (~inom@176.59.103.126)
[12:31:24] <sazawal> bjs
[12:32:23] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:33:43] *** Joins: livingsilver94 (~livingsil@user/livingsilver94)
[12:33:46] *** Joins: dalan69 (~dalan@27-32-30-220.tpgi.com.au)
[12:34:03] <livingsilver94> Hi! Can I add methods to types created with typing.NewType() ?
[12:34:09] <gggp> quant trading with python ,is on topic ?
[12:34:35] <livingsilver94> e.g. can I define a type derived from int and add MyInt.is_odd() ?
[12:34:58] *** Quits: gggp (~gggp@111.63.14.119) (Read error: Connection reset by peer)
[12:35:24] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:52] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:36:30] *** Quits: dalan6 (~dalan@59-102-56-163.tpgi.com.au) (Ping timeout: 276 seconds)
[12:36:30] *** dalan69 is now known as dalan6
[12:36:56] *** Quits: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca) (Ping timeout: 272 seconds)
[12:37:12] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[12:38:38] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:10] <jinsun> livingsilver94: no at runtime the NewType will behave exactly like int and you cannot add methods to that, just make an actual subclass
[12:41:37] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[12:42:08] *** Quits: inom (~inom@176.59.103.126) (Remote host closed the connection)
[12:42:46] *** Joins: inom (~inom@176.59.103.126)
[12:43:18] <livingsilver94> jinsun: alright, thanks for your answer :)
[12:44:25] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 258 seconds)
[12:48:25] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[12:51:48] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Client Quit)
[12:52:11] *** Quits: junktext_ (~junktext@109.201.152.164) (Ping timeout: 265 seconds)
[12:53:15] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:54:23] *** Quits: dre (~dre@2001:8003:c932:c301:a7ea:13cd:5ed6:fd3a) (Quit: Leaving)
[12:54:36] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[12:57:35] *** Joins: y1n (~y1n@84-115-65-131.wifi.dynamic.surfer.at)
[12:58:53] *** Quits: Obo (~roberto@79.red-79-153-119.dynamicip.rima-tde.net) (Quit: WeeChat 2.8)
[13:00:00] <wedwards> I would like to disallow clients of my class to access any attribute, including functions, after calling the delete() function. I'd like to avoid `del`ling every attribute, and overriding __getattr__. Any creative ideas or are these my best bets?
[13:01:10] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-45e4-f7b6-298b-fe96.res6.spectrum.com)
[13:02:26] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 258 seconds)
[13:05:43] *** Joins: emika3 (~emika@185.207.249.100)
[13:07:41] *** Joins: andika (~andika@subs46-116-206-42-71.three.co.id)
[13:07:42] *** Joins: andika_ (~andika@subs46-116-206-42-71.three.co.id)
[13:08:08] *** Quits: emika (~emika@83.136.182.151) (Ping timeout: 268 seconds)
[13:08:08] *** emika3 is now known as emika
[13:08:11] *** Quits: andika_ (~andika@subs46-116-206-42-71.three.co.id) (Client Quit)
[13:08:13] *** Quits: andika (~andika@subs46-116-206-42-71.three.co.id) (Client Quit)
[13:09:08] *** Joins: candyman1 (~candyman@user/candyman)
[13:09:44] *** Joins: andika (~andika@subs46-116-206-42-71.three.co.id)
[13:10:17] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:10:29] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[13:10:31] *** Joins: entuland (~entuland@user/entuland)
[13:10:51] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:11:04] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[13:11:50] *** Quits: andika (~andika@subs46-116-206-42-71.three.co.id) (Client Quit)
[13:12:57] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 252 seconds)
[13:13:27] <sazawal> Hi all. How do I pass a function of the current class to a multiprocessing target function in another class, that is the statement `Process(target=self.class2object.func1,args=(self.func2,))` in class1. I am getting PicklingError.
[13:14:25] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:14:30] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Client Quit)
[13:14:44] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:15:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:15:30] <sazawal> Found a workaround by making func2 static, that is `Process(target=self.class2object.func1,args=(class1.func2,))`. But in this case I cannot use attributes of class1 (self) in func2.
[13:16:41] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[13:17:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:17:12] *** Parts: livingsilver94 (~livingsil@user/livingsilver94) (Konversation terminated!)
[13:17:16] *** Joins: andika (~andika@subs46-116-206-42-71.three.co.id)
[13:17:19] *** Joins: pnoud (~pnoud@user/pnoud)
[13:17:25] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[13:17:28] *** Joins: death916 (~death916@user/death916)
[13:17:53] <jinsun> wedwards: you could just ask the users to `del obj` instead of providing a .delete method, if you have to do it the delete way then those two that you don't want to do  are the only ways I think
[13:18:28] *** Joins: soulisson (~soulisson@user/soulisson)
[13:18:32] <soulisson> Hello
[13:18:41] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[13:19:10] <susam> sazawal: What is the exact PicklingError you get? It looks like class your has state information in it (things like DB connection, HTTP connection, etc.) that cannot be pickled and sent to the multiprocesses.
[13:19:21] *** Quits: andika (~andika@subs46-116-206-42-71.three.co.id) (Client Quit)
[13:19:22] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[13:19:23] <soulisson> Sorry about this question about semantics. Is it correct to consider any callable object to be a function?
[13:19:38] *** Joins: andika (~andika@subs46-116-206-42-71.three.co.id)
[13:19:55] <sazawal> susam, Everything works on Linux system, the problem is only on Windows system
[13:20:21] *** Joins: Deneb (~johnch@26.125.7.51.dyn.plus.net)
[13:20:30] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[13:20:40] <jinsun> soulisson: no, classes are also callable, and any object can be callable if you define __call__ method for it
[13:20:40] *** Joins: p-i-_ (~Ohmu@node-nta.pool-125-24.dynamic.totinternet.net)
[13:21:45] *** Quits: p-i- (~Ohmu@node-12il.pool-118-173.dynamic.totinternet.net) (Ping timeout: 252 seconds)
[13:22:29] <susam> soulisson: Try this. class A: pass. callable(A). You sould get True. Why? Because a class is callable. You "call" the class to instantiate it, e.g., a = A().
[13:22:32] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[13:23:32] <susam> sazawal: Hard to say what the problem is without knowing more. Certainly there is something in the class that cannot be pickled. It is possible that you depend on a library whose implementation for Windows is slightly different from how it is for Linux, so the pickling succeeds on Linux but fails on Windows.
[13:24:08] <sazawal> susam, Hold on I will share the code
[13:24:14] <soulisson> ok, my question wasn't clear. I was referring to objects with the __call__ method and if they should be considered as functions?
[13:25:07] <susam> soulisson: I would not call them functions. They are callable objects.
[13:25:40] <susam> soulisson: But they behave like functions.
[13:25:54] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:26:11] <soulisson> susam, ok, thanks a lot
[13:26:22] <afidegnum> hi, i'm a bit confused on the way on using recursion to traverse a dom tree and insert into the graph db. I had a:   maximum recursion depth exceeded while calling a Python object error
[13:27:05] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[13:27:12] <susam> sazawal: As a matter of best practice, I don't pass objects of classes or any complicated objects to multiprocesses unless I understand the implementation of those objects completely.
[13:27:32] <dav1d> I am using PyCharm and have a type annotation on a property to return typing.Set[str], but intellij complains about `Expected type 'collections.Iterable', got '() -> set[str]' instead ` is a set not supposed to be iterable?
[13:27:33] <soulisson> susam, sorry about the stupid question; I struggle a little bit :)
[13:28:03] <susam> soulisson: No worries at all. You are welcome.
[13:28:08] <susam> :)
[13:28:30] <dav1d> the problem is @memoized_property, it works with @property
[13:28:32] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[13:28:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:29:21] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[13:29:44] <jinsun> dav1d: set is iterable but a funcntion that returns a set is not
[13:29:49] <susam> aries may change their implementation and introduce some state (DB connection, HTTP connection, etc.) that cannot be pickled anymore and then all my multiprocessing code will break.
[13:30:10] <susam> Oops half my message above is gone. Let me try again.
[13:30:13] <dav1d> jinsun, it seems it doesn't understand the decorator (which works like @property), any idea how I can fix the type hint?
[13:31:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[13:31:41] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:32:29] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[13:32:36] <susam> sazawal: The problem with passing objects of large complicated classes to multiprocesses is this: The class may depend on other libraries. It may work fine today but tomorrow they may change their implementation and introduce some state (DB connection, HTTP connection, etc.) that cannot be pickled anymore and then all the multiprocessing code will break again and require fixing.
[13:33:07] <susam> sazawal: Burnt by this too many times that now I very carefully and frugally choose what needs to be passed around to multiprocesses.
[13:33:07] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:36:42] *** Quits: andika (~andika@subs46-116-206-42-71.three.co.id) (Quit: Goodbye all, I'll be back if I'm still alive :D)
[13:37:30] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[13:37:40] <sazawal> Here is the code, https://bpa.st/OHTQ
[13:37:43] <sazawal> susam
[13:38:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[13:39:33] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:40:00] <sazawal> See the lines 28, 31, 148, 151. Using either 28,148 or 31,151 works on Linux. On Windows, only 28,148 works.
[13:40:12] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 268 seconds)
[13:40:44] *** Joins: gggp (~gggp@111.63.14.119)
[13:43:44] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[13:44:08] <sazawal> I have no problems really staying with 28,148, but then how would I use other attributes of B inside network?
[13:44:35] <susam> sazawal: I tested and it does not work on macOS too. I get TypeError: cannot pickle '_thread.lock' object. Do you get this error too on Windows?
[13:44:51] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[13:44:58] <sazawal> susam, Yes I am getting the same error
[13:45:04] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:45:12] *** Joins: Mattiaslndstrm (~Mattiasln@217-210-25-247-no110.tbcn.telia.com)
[13:45:20] <sazawal> Does 28,148 work on macOS?
[13:45:39] <susam> sazawal: That is right. That works on macOS.
[13:45:50] <sazawal> I see
[13:47:19] <gitesh> Hi
[13:47:27] <gitesh> const addtwo = (a,b) => [a+2,b+2]; addtwo(4,5);
[13:47:31] <susam> sazawal: So the error is right. _thread.lock cannot be pickled anyway. Lock is a transient state. It would not make any sense to pass the lock state from one process to another process.
[13:47:36] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 268 seconds)
[13:47:43] <gitesh> Python don't define function like this like in JavaScript
[13:47:54] <gitesh> They are named function as well
[13:47:57] <supakeen> gitesh: That is correct, Python is not javascript.
[13:47:58] <sazawal> susam, Where is this thread.lock here?
[13:48:56] <susam> sazawal: In self.threads where you are storing threads. Each thread comes with its own baggage. _lock is one of the items in the baggage and it cannot be pickled.
[13:49:01] <sazawal> Is it because I am using other threads in class B? But I am not passing the whole class B to the multiprocess
[13:49:08] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[13:49:28] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[13:50:23] <susam> sazawal: You are. self.network1. It is a method. network1() will always need a copy of self passed to it for it to work. It is an implicit argument that would be passed to it automatically.
[13:50:26] <sazawal> susam, Okay what if I somehow pass the constant parameters (attributes of B) needed in network function to it?
[13:50:58] <sazawal> I see
[13:51:14] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[13:51:55] <susam> sazawal: I would recommend redesigning the solution in this manner. Create a separate function for the Process(target=<>). That function should be as simple as possible and should be free of any extra baggage. Similarly, pass minimal stuff to the multiprocesses via the queues.
[13:53:29] *** Joins: Obo (~roberto@79.red-79-153-119.dynamicip.rima-tde.net)
[13:53:32] <sazawal> You mean a separate function which calls Process(target=<>)?
[13:53:50] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:54:20] <susam> sazawal: No a separate function f which is used in Process(target=f).
[13:54:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[13:54:49] <hendry> i think i accidentally installed some docker-py library with pip3, and it's old, and I want my "system" python packages to take precedent. How do I nuke my local pip3 packages that I accidentally installed?
[13:54:55] *** Quits: TeraT (~Tera@h-85-24-240-165.A218.priv.bahnhof.se) (Quit: Leaving)
[13:54:57] <sazawal> Oh you mean a function f which is not in class A?
[13:55:13] <susam> sazawal: Yes.
[13:57:58] <sazawal> That would alter the architecture a lot. The best is I think is passing minimal stuff to the multiprocess. So, `def network(a,qsource,qsink,parameters_dict)` and `Process(target=self.a.run,args=(B.network,self.qsource,self.qsink,self.parameters_dict))`
[13:58:24] *** Joins: goldfish (~goldfish@user/goldfish)
[14:00:02] <bjs> sazawal: you cannot send arbitrary functions between processes. really the fact you can do it at all is a massive hack
[14:00:38] <bjs> sazawal: I generally really discourage `Process(target=self.foo, ...)` because it means you get *two* "self" instances with divergent states
[14:00:58] *** Quits: y1n (~y1n@84-115-65-131.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[14:01:14] *** Joins: y1n (~y1n@84-115-64-196.wifi.dynamic.surfer.at)
[14:01:39] *** Quits: shabius_ (~shabius@2a0e:1c80:2:1022::1003) (Ping timeout: 276 seconds)
[14:02:22] <jinsun> dav1d: you probably have to fix the annotations for memoized_property, or upgrade to python 3.8 and use functools.cached_property, the standard library usually has good support from the static type checkers
[14:02:45] <sazawal> susam, Hmm but the function I am actually passing is network in `Process(target=self.foo,args=(self.network))`. Am I passing self.foo somewhere?
[14:02:54] *** Joins: shabius (~shabius@45.15.19.229)
[14:02:54] *** Quits: manti7 (~manti7@176.10.104.94) (Read error: Connection reset by peer)
[14:03:01] <dav1d> jinsun, I have no idea why this works: `def memoized_property(fget: Callable[[SelfType], RetType]) -> property:`
[14:03:02] <bjs> sazawal: yes
[14:03:10] <bjs> sazawal: the first argument to self.network is self, so it needs to be passed over too
[14:03:17] <dav1d> jinsun, unfortunately I need to support 3.6
[14:03:24] <sazawal> Hey bjs
[14:03:28] <bjs> sazawal: hi
[14:03:58] <sazawal> bjs, The whole thing became a mess on Windows. It worked fine yesterday on Linux
[14:04:20] <bjs> sazawal: what is your current code
[14:04:33] <sazawal> bjs, https://bpa.st/OHTQ
[14:04:51] <sazawal> See the lines 28, 31, 148, 151. Using either 28,148 or 31,151 works on Linux. On Windows, only 28,148 works.
[14:04:53] *** Joins: manti7 (~manti7@176.10.104.94)
[14:07:44] <jinsun> dav1d: ah that's cool if it works, so maybe anything that returns property is treated like property
[14:08:13] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[14:08:28] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[14:09:53] <susam> sazawal: The whole thing is already a mess. :) You just got lucky on Linux that it worked. Beware of such luck. Always test your code on all platforms you support to ensure that your code is not depending on undefined or ill-formed implementation.
[14:10:48] <bjs> sazawal: what version of Python are you using?  Just more reason to not use an instance method as the target
[14:10:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[14:10:59] <sazawal> susam, Hmm yes. I do the development on Linux, so I try my best for it to work on Linux.
[14:11:15] <sazawal> bjs, It must be the latest 3.8.5. Let me check
[14:11:33] <sazawal> Python 3.8.10 (default, Jun  2 2021, 10:49:15)
[14:11:33] <sazawal> [GCC 9.4.0] on linux
[14:12:08] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:8ab5:537b:138e:6853)
[14:12:22] <susam> sazawal: The current class mixes multiple concerns: invoking the processes, message passing between them, arguments carrying the whole class with themselves, worker functions present in the same class as the one managing the multiprocesses, etc. A project like this should be built on the basis of a sound and clean design.
[14:12:29] <jinsun> on linux is works probably because multiprocessing uses forks where maybe there is no need to pickle, on windows and mac it uses spawn https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods
[14:12:57] *** Joins: V1mV1m (~VimVim@85.191.79.93)
[14:13:24] <susam> sazawal: A clean design I usually follow is to separate the concerns between "manager" and "worker". The manager only manages the multiprocesses and queuing between them. Any worker (the stuff that runs as multiprocesses to work on the data) is separate independent code (separate function or class).
[14:13:54] *** Quits: milosz_ (~milosz@user/milosz) (Read error: Connection reset by peer)
[14:14:13] *** Joins: milosz_ (~milosz@user/milosz)
[14:14:33] <susam> sazawal: So this is not just a programming issue. This is a design issue too. A good design is very important here because the more functionality you add to a project like this, the more complicated it will get, the more of a mess it will become. A clean design will keep things simple and easy to reason about in future.
[14:14:42] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[14:14:52] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:15:26] <sazawal> I see. Yes obviously I am not a very experienced coder, and this kind of design actually evolved from scratch after months of adding things little by little on top of the previous design.
[14:15:28] *** Joins: mickey (~user@user/mickey)
[14:15:34] <wedwards> If I use setattr() and delattr() using class inheritance, is there anything 'special' I should know? Example of what I mean: https://bpa.st/4X2Q (this works as expected btw)
[14:16:18] <sazawal> susam, Well now that you told me, I am sure there must be a library which makes my purpose easier. Suggest me something and I will go through it sometime later.
[14:16:28] <ezakimak> any reason a UUID object passed to a function as a parameter with a str typehint wouldn't even throw a warning?
[14:16:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[14:16:50] <bjs> wedwards: remember that the attributes are attributes on the "self" object, which is the same for everyone and not on the classes. So setattr()/delattr() probably "do the right thing".
[14:17:03] <bjs> wedwards: but using delattr/setattr for this is a bit weird, why not just have a boolean? `self.locked = True` ?
[14:17:25] <bjs> ezakimak: with mypy?
[14:17:50] <ezakimak> no just plain python
[14:18:06] <bjs> ezakimak: plain Python ignores the type hints,  they're just documentation to it like docstrings or comments
[14:18:08] <ezakimak> dunno what mypy is
[14:18:16] <ezakimak> it's compiled with cython
[14:18:16] <bjs> ezakimak: typecheckers like mypy and pytype actually read them and give warnings
[14:18:34] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[14:19:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[14:19:22] <susam> sazawal: There may be a library for it but I am not aware. This is something I have learnt to solve myself neatly by experience and by making a mess a few times. The clear separation of manager and worker has worked out well for me so far.
[14:19:44] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[14:20:04] <sazawal> susam, I see
[14:20:13] <wedwards> bjs: my real use case is that I don't know which attributes I receive
[14:20:26] <ezakimak> is "if isinstance(uuid, type) and hasatr(uuid, hex)" sufficient to test for it being an object with a .hex property, and not just a str ?
[14:20:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[14:20:38] <ezakimak> *hasattr
[14:20:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:21:05] <wedwards> bjs: what do you mean by 'which is the same for everyone'?
[14:21:09] <bjs> ezakimak: did you literally mean `type` and `hex` there?  Maybe you wanted hasattr(uuid, "hex")  instead
[14:21:31] <ezakimak> yes
[14:21:35] <bjs> wedwards: I mean Test2 and Test both refer to `self`, which are just aliases for `t` in this code
[14:21:39] <ezakimak> oh, "hex" maybe
[14:21:41] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[14:21:44] <bjs> wedwards: it's `t` that has or does not have the attribute.
[14:21:51] <ezakimak> but yes, type literally
[14:21:53] <bjs> ezakimak: why `isinstance(uuid, type)`  why would the uuid be a type?
[14:22:03] <ezakimak> test for being an object
[14:22:19] <bjs> ezakimak: everything in Python is "an object",  but that check fails for UUID objects
[14:22:24] <bjs> because they're not types
[14:22:52] <madprops> what could be a one liner to filter out items in a list that are not "in" any item of another list? https://www.codewars.com/kata/550554fd08b86f84fe000a58/train/python
[14:23:37] <ezakimak> oh, that's for testing if something is a class
[14:23:43] <bjs> madprops: wouldn't it be better for y ou to come up with a not-one-liner solution then try turn it into one-liner
[14:23:50] <madprops> I already did it
[14:24:20] <ezakimak> I don't want to have to name the UUID object by classname for the type check
[14:24:26] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[14:24:37] <ezakimak> just test for ducktype that it's an object with a hex attr.
[14:24:41] <ezakimak> and not a str
[14:24:46] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:25:07] <bjs> ezakimak: why not just try access the .hex attribute as if it were a UUID object, then catch the AttributeError and relay a better error to the user
[14:26:38] <ezakimak> that's overkill. there's only two callers, and I got it wrong in one spot and fixed it at the call sight, but wanted to add protection in case someone else added another call and forgot to send just the str
[14:26:46] <bjs> ezakimak: "overkill" ?
[14:26:54] <madprops> sorted({sub for sub in a1 if any(sub in s for s in a2)})
[14:26:56] <madprops> didn't know about 'any'
[14:27:09] <bjs> ezakimak: I mean you said you wanted duck typing,  and that's how you usually do ducktypes, you just try and catch the exception
[14:27:15] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:27:27] <susam> ezakimak: That is not an overkill. That is exactly the right approach in Python. Duck-typing. Check if it quacks like a duck. If it does not, raise a meaningful error.
[14:27:50] <ezakimak> if it's a str, that's perfect, I want a str
[14:28:07] <ezakimak> if it's an obj with a hex attr, I'll take it. any other case is an issue
[14:28:33] <ezakimak> shouldn't be any other cases
[14:28:42] <bjs> ezakimak: so check for str, if not, try access the .hex, and if that fails report an error
[14:28:48] <susam> ezakimak: That would solve the problem, yes. But if you really want to follow duck-typing, you don't really check the attributes. You just invoke hex() and if it fails, you know it is missing.
[14:28:50] <bjs> (or just let the exception happen and buble up)
[14:29:29] <susam> ezakimak: Checking attributes is more messy in fact. What if .hex exists as an attribute but it is not callable?
[14:29:35] <ezakimak> it was a hard bug to find. because the dictionary storing the result accepted the UUID as a key...
[14:29:54] <ezakimak> not calling it, just accessing it as a property
[14:30:37] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[14:30:41] <susam> ezakimak: Oops! I see. .hex is not a callable anyway, so I see your point.
[14:30:57] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[14:32:12] <ezakimak> so, is this reasonable, and simple enough? "if not isinstance(uuid, str): uuid = uuid.hex; ...
[14:32:36] <ezakimak> str passes through, otherwise attempts to treat it like a UUID object, and if that fails it'll raise, which I'd want
[14:33:01] *** Joins: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca)
[14:33:02] <ezakimak> not even do any hasattr check
[14:33:18] *** Joins: haroon (~haroon@gw.wmd.de)
[14:33:18] <bjs> ezakimak: why not just `hex = str(uuid)`
[14:33:37] <bjs> idk, you have to decide what you want your API to be.
[14:33:54] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:34:35] *** Joins: MikZyth (~MikZyth@188.65.242.86)
[14:34:49] <ezakimak> well the problem is one callsite passed in uuid straight from a db model, which was actually a UUID object, forgot to translate to plain str first
[14:35:40] <ezakimak> which cause a very subtle error
[14:37:33] *** Quits: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca) (Ping timeout: 265 seconds)
[14:37:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[14:38:36] *** Joins: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de)
[14:38:54] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[14:39:29] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[14:41:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:41:37] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[14:42:02] *** Joins: mweckbecker (~matthias@weckbecker.name)
[14:42:17] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[14:46:37] <ferz> How I can quote a multiline text in the python source?  The text has " and ' chars in.
[14:46:47] <CuriousErnestBro> escape it with \
[14:47:06] <CuriousErnestBro> \' or \" depending on if you're using ' or " to quote
[14:47:06] <ferz> both " and ' ?
[14:47:13] *** Joins: Ivyy (~Ivyy@2001:a61:13cb:e801:3494:973c:c131:7964)
[14:47:17] <ferz> ok, thank you
[14:47:30] <ezakimak> do you need escapes if you use """ ?
[14:47:41] <CuriousErnestBro> ferz alternatively you can use multi-line strings with """ text """
[14:48:01] <CuriousErnestBro> ferz escape ' if you're using ', and " if using "
[14:48:10] <Yhg1s> and neither if you use """ or '''.
[14:48:34] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:49:36] <ferz> Is there anything to assign to a var a multiline text?
[14:49:50] *** Joins: pnoud (~pnoud@user/pnoud)
[14:50:09] <bjs> ferz: just normal assignment   x = """some multi-line text"""
[14:50:29] <ferz> bjs: thank toy
[14:50:32] <ferz> you
[14:50:34] <ferz> :-)
[14:52:04] *** Quits: Obo (~roberto@79.red-79-153-119.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[14:54:20] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[14:54:48] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[14:54:55] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Ping timeout: 250 seconds)
[14:55:26] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[14:56:08] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[14:57:23] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[14:58:55] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[14:59:06] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 240 seconds)
[14:59:21] *** Joins: Blankspace (~abcd@user/blankspace)
[15:00:42] *** Quits: y1n (~y1n@84-115-64-196.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[15:01:02] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[15:01:06] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:01:39] *** Joins: y1n (~y1n@84-115-64-120.wifi.dynamic.surfer.at)
[15:02:28] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[15:05:09] *** Joins: stevieh (~skrodzki@tmo-112-101.customers.d1-online.com)
[15:06:32] *** Joins: pnoud (~pnoud@user/pnoud)
[15:06:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: bgardner[m] (~bgardner@2001:470:69fc:105::8a8) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Bridge terminating on SIGTERM)
[15:06:43] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Quit: Bridge terminating on SIGTERM)
[15:06:43] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Bridge terminating on SIGTERM)
[15:06:43] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Quit: Bridge terminating on SIGTERM)
[15:06:45] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Bridge terminating on SIGTERM)
[15:06:46] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Bridge terminating on SIGTERM)
[15:06:50] *** Quits: jwon (~jwon@user/jwon) (Quit: Bridge terminating on SIGTERM)
[15:06:50] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[15:07:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:09:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:09:39] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[15:12:08] *** Quits: stevieh (~skrodzki@tmo-112-101.customers.d1-online.com) (Read error: Connection reset by peer)
[15:13:19] *** Joins: ihristov (~ihristov@85.187.46.226)
[15:13:43] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[15:14:13] *** Joins: andika (~andika@subs46-116-206-42-124.three.co.id)
[15:14:27] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[15:14:41] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[15:14:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:15:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:15:55] *** Joins: Obo (~roberto@79.red-79-153-119.dynamicip.rima-tde.net)
[15:16:33] *** Quits: NeoCore (~neocore@89.40.183.16) (Quit: Leaving)
[15:18:00] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[15:18:00] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[15:18:00] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[15:18:00] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[15:18:00] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[15:18:00] *** Joins: bgardner[m] (~bgardner@2001:470:69fc:105::8a8)
[15:18:00] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[15:18:00] *** Joins: jwon (~jwon@user/jwon)
[15:18:00] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[15:18:00] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[15:18:00] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[15:18:00] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[15:18:00] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[15:18:00] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[15:18:00] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[15:18:00] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[15:18:00] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[15:18:01] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:18:09] *** Quits: andika (~andika@subs46-116-206-42-124.three.co.id) (Read error: Connection reset by peer)
[15:18:14] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[15:18:14] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[15:20:07] *** Joins: xkuru (~xkuru@user/xkuru)
[15:21:21] *** Quits: Obo (~roberto@79.red-79-153-119.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[15:21:26] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[15:21:40] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[15:22:41] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[15:22:54] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[15:23:09] *** Joins: Obo (~roberto@94.191.137.235.mobile.tre.se)
[15:24:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:25:00] *** Joins: califax- (~califax@user/califx)
[15:25:00] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[15:25:59] *** califax- is now known as califax
[15:26:05] *** Joins: bad_blue_bull (~user@ppp92-100-31-156.pppoe.avangarddsl.ru)
[15:26:08] <bad_blue_bull> hello
[15:26:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:26:26] *** Joins: cedric (~cedric@2a01:cb11:867:c200:16a9:991d:9546:77f)
[15:26:34] *** Joins: hafat (~hafat@95.70.168.45)
[15:27:09] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[15:27:26] <bad_blue_bull> what to do with it https://bpa.st/QO5Q ?
[15:27:28] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[15:27:37] <bad_blue_bull> ValueError: invalid version number '3.7.4.post0'
[15:28:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[15:28:25] <bad_blue_bull> if StrictVersion(aiohttp.__version__) < StrictVersion('3.0'): ... so I guess version is correct, but the check is buggy
[15:29:27] <bad_blue_bull> ok, i'll hack it
[15:30:42] *** Quits: michagogo (sid14316@user/michagogo) (Quit: Connection closed for inactivity)
[15:31:35] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[15:31:36] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[15:31:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:31:51] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[15:31:56] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[15:32:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:32:13] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:33:46] *** Joins: jpic (~jpic@82.142.18.126)
[15:34:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:34:43] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[15:34:58] *** Quits: Strom (strom@fedora/strom) ()
[15:35:34] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Client Quit)
[15:35:48] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[15:35:54] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[15:37:00] *** Joins: Strom (strom@fedora/strom)
[15:37:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:37:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[15:37:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:37:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:39:48] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[15:39:52] *** Joins: Brion_ (~Brion@gateway/tor-sasl/brion)
[15:39:59] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 244 seconds)
[15:40:14] *** Brion_ is now known as Brion
[15:40:25] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[15:41:16] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Quit: Leaving)
[15:41:48] *** Joins: zeden (~zeden@user/zeden)
[15:43:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:43:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:44:45] *** Quits: Deneb (~johnch@26.125.7.51.dyn.plus.net) (Quit: Leaving)
[15:50:01] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[15:50:07] <gitesh> 5. Below, we have provided a list of tuples. Write a for loop that saves the second element of each tuple into a list called seconds.
[15:50:21] <gitesh> will you use index 2 or index 1?
[15:50:42] <bjs> gitesh: if I have ('a', 'b', 'c', 'd') which is the second element of the tuple?
[15:50:56] <gitesh> bjs:
[15:50:58] <gitesh> 'b'
[15:51:14] <bjs> gitesh: and that's index 1 yeah?
[15:51:29] <gitesh> so in any problem if it's not called index then we should consider our natural numbering?
[15:51:41] <gitesh> which start with 1
[15:52:13] <bjs> gitesh: yeah,  whether 'a' is first doesn't depend on whether you say a has index 0, or a has index 1, or whatever counting system you want to use
[15:52:17] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[15:53:26] <gitesh> bjs: got it
[15:53:36] <gitesh> they are called coordinal numbers
[15:54:16] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[15:55:24] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[15:55:38] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:57:09] *** Joins: Flux (~Fluxx@user/fluxx)
[15:57:35] *** Joins: gormenghast (~gormengha@37.165.182.191)
[15:57:36] *** Joins: mexen (uid495612@user/mexen)
[15:57:45] <madprops> is this supposed to work? locals()[f"x_{p}"] += 1
[15:57:55] <madprops> doesn't seem to increment the variable
[15:59:14] <bjs> madprops: no it's not supposed to work  https://docs.python.org/3/library/functions.html#locals  "Note The contents of this dictionary should not be modified; changes may not affect the values of local and free variables used by the interpreter."
[15:59:36] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[15:59:56] <madprops> how could I modify it then?
[16:00:00] <madprops> what method can I use
[16:00:08] <bjs> madprops: there isn't one
[16:00:18] <madprops> ah dang
[16:00:29] <bjs> use a dict rather than trying to get variables by name
[16:00:36] <madprops> yeah
[16:00:42] *** Quits: y1n (~y1n@84-115-64-120.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[16:01:25] *** Joins: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at)
[16:01:40] *** Joins: FluxEq (~Fluxx@user/fluxx)
[16:01:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:02:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:02:15] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:02:32] <gitesh> why return [x, y] is not good/preferred method? when returning from a funciton
[16:02:37] <gitesh> *function
[16:02:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[16:02:57] <PJBoy> says who?
[16:03:23] *** Joins: pnoud (~pnoud@user/pnoud)
[16:04:00] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[16:04:08] *** Quits: FluxEq (~Fluxx@user/fluxx) (Client Quit)
[16:04:30] *** Joins: Fluxx (~Fluxx@user/fluxx)
[16:04:57] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[16:05:07] *** Quits: gormenghast (~gormengha@37.165.182.191) (Quit: Quit)
[16:08:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[16:09:25] <gitesh> my course
[16:09:26] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 268 seconds)
[16:09:33] *** Quits: Fluxx (~Fluxx@user/fluxx) (Quit: Leaving)
[16:09:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:10:50] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:11:00] <entuland> sounds like a dumb rule of thumb
[16:11:01] *** Joins: digilink (~digilink@user/digilink)
[16:11:21] <bjs> gitesh: I mean, it depends. if you mean to always return 2 things then it's not always the best because here x and y don't have names
[16:11:45] <bjs> gitesh: if I `return (1, 2)` oh did I mean to `return (2, 1)` ?  wait which is height and which is width again?  etc
[16:12:01] <entuland> is the course available somewhere so that we can see the context and the exact wording?
[16:12:04] <bjs> Python has lots of ways (namely, classes) to return objects that have names.
[16:12:18] *** Quits: thecoder (~mrrobot@173.171.13.109) (Ping timeout: 240 seconds)
[16:12:28] <gitesh> bjs: do you means tuples has names?
[16:12:33] <bjs> gitesh: they don't
[16:13:05] <bjs> gitesh: if I say `(1, 2)` one is width and one is height, do you know which is which?  you could easily return them the wrong way around or somewhere else get them the wrong way around
[16:13:08] *** Quits: soulisson (~soulisson@user/soulisson) (Ping timeout: 268 seconds)
[16:13:31] <gitesh> bjs: yeah then
[16:13:34] <bjs> gitesh: but if I `return Shape(width=2, height=1)` now you know for sure
[16:13:37] <gitesh> what is your poing
[16:13:43] <gitesh> oh got it
[16:14:01] <gitesh> i will wait till class comes in front of me in the course
[16:14:21] <gitesh> that's cool though, liked it
[16:15:00] <gitesh> but that was not my point
[16:15:12] <gitesh> my point was to return between tuple or list which is best
[16:15:42] <bjs> gitesh: I mean, sometimes you want to return a list and sometimes a tuple, they're for different purposes
[16:16:10] <bjs> gitesh: usually lists are variable-length collections of similar objects.  Whereas tuples as more like structures or classes or something, a small fixed set of fields
[16:16:59] *** Joins: gggp (~gggp@60.10.23.160)
[16:17:03] *** Joins: zzy23 (~zzy2357@240e:3b7:3278:1ec0:9834:c244:b6b5:14cb)
[16:17:09] <gitesh> dictionary can be for set of fields bjs
[16:17:21] *** Quits: zzy23 (~zzy2357@240e:3b7:3278:1ec0:9834:c244:b6b5:14cb) (Client Quit)
[16:17:26] <gggp> a=[1,2,3] , a[0] returns reference of 2 ,right?
[16:17:37] <bjs> gitesh: yes, but dictionaries have names (keys) and are variable sized
[16:17:42] <bjs> gitesh: no
[16:17:45] <bjs> oops
[16:17:46] <bjs> gggp: no
[16:17:51] <gitesh> bjs: return [x,y] is not the preferred method because it returns x and y in a mutable list rather than a tuple which is more efficient. But it is workable.
[16:17:58] <gggp> bjs, what is no
[16:18:06] <susam> Returning a list or tuple from a function is absolutely fine. Anyone saying otherwise is just being dogmatic.
[16:18:08] <bjs> gggp: you asked whether it returns a reference to 2, no it does not.
[16:18:27] <gggp> bjs, what does it return indeed
[16:18:31] <bjs> gggp: 1
[16:18:35] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:18:42] <bjs> gggp: this is easy to test? print(a[0]) will print 1 not 2
[16:19:00] <gggp> bjs, ah,I mean does it return a reference instead of a copy
[16:19:09] <gggp> yeah ,a[0] is 1
[16:19:11] <bjs> gggp: yes, Python almost never copies
[16:19:27] *** Quits: Ares000 (~Ares3@37.228.196.119) (Ping timeout: 276 seconds)
[16:19:29] <bjs> gitesh: that's not what it's trying to get at, I think it's trying to say that lists and tuples are designed for different purposes. It's not trying to say "never return a list" it's saying that if your list is always 2 things then maybe you want a tuple instead
[16:19:31] <gggp> bjs, so python tries to get rid of copy
[16:19:39] <bjs> gggp: not "get rid of", it just ... doesn't copy
[16:19:50] <gggp> unless explicit copy?
[16:19:55] <bjs> gggp: yes
[16:20:16] <gggp> bjs, so I do not neeed to be care of memory usage
[16:20:29] <gggp> let it go
[16:20:37] <bjs> gggp: well you should probably still care about memory usage, but yes Python isn't copying there.
[16:20:58] <gggp> bjs, no copy , so
[16:21:15] <bjs> gggp: so?
[16:21:17] <gggp> take care of what
[16:21:23] <gggp> memory usage
[16:21:30] <bjs> gggp: I'm not sure what you're asking
[16:21:35] *** Quits: Obo (~roberto@94.191.137.235.mobile.tre.se) (Ping timeout: 250 seconds)
[16:21:58] <gggp> bjs, you said I should still care about memory usage ,
[16:22:07] <gggp> why :)
[16:22:28] <gggp> does not it have a gc
[16:22:29] <bjs> gggp: I mean, just in general you shouldn't just ignore memory usage just beacuse Python didn't copy the 1 here.  Your programs still use memory
[16:22:34] <bjs> and you should be aware of that
[16:22:54] <bjs> Yes it has a gc, but if you make lots of objects and keep them around you'll use lots of memory
[16:23:06] <gggp> well
[16:23:11] <bjs> well?
[16:23:16] <gggp> I understand what you mean
[16:23:27] <gggp> and yes
[16:23:32] <gggp> it is
[16:23:47] <gggp> bjs, is there way to do memory benchmark
[16:23:50] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[16:24:03] <gggp> for a python process
[16:24:11] <m1dnight> HI all. I'm trying to use this package as a library, but I don't think it's designed to be used as a library in another python script. https://github.com/rhyst/idasen-controller
[16:24:53] <bjs> gggp: yes there are a few libraries for doing various tracing, there's tracemalloc but also some third party stuff like objgraph and guppy
[16:25:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:26:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:29:56] <susam> m1dnight: I agree. Looks like you have to hack on it yourself if you want to use it as a library.
[16:30:11] *** Quits: gggp (~gggp@60.10.23.160) (Killed (NickServ (GHOST command used by gggp__!~gggp@60.10.194.43)))
[16:30:26] *** Joins: gggp (~gggp@60.10.194.43)
[16:30:48] <gggp> bjb, does python have a "reference type" internally
[16:31:04] *** Joins: p-i- (~Ohmu@node-nta.pool-125-24.dynamic.totinternet.net)
[16:32:08] <bjs> gggp: that's not my nick,  but yes, they're called variables :)
[16:32:27] <gggp> sorry ,oops
[16:32:45] <gggp> bjs, my english is not good ,btw
[16:34:25] *** Quits: p-i-_ (~Ohmu@node-nta.pool-125-24.dynamic.totinternet.net) (Ping timeout: 258 seconds)
[16:34:32] <bjs> gggp: that's okay :)
[16:34:44] <bjs> gggp: you are doing fine,  i didn't know
[16:35:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:35:29] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:33] *** Joins: ice9 (~ice9@user/ice9)
[16:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:21] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[16:38:28] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 256 seconds)
[16:39:47] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[16:40:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:40:39] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[16:40:54] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 276 seconds)
[16:40:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:41:33] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[16:45:40] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Remote host closed the connection)
[16:46:02] *** Joins: scabby_ (~scabby@user/scabootssca)
[16:48:32] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Ping timeout: 265 seconds)
[16:49:21] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:32] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[16:51:06] *** Quits: esv (~esv@72.11.45.232) (Remote host closed the connection)
[16:52:41] *** Joins: gggp_ (~gggp@60.10.194.43)
[16:53:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:54:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:54:33] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 276 seconds)
[16:55:02] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[16:55:10] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:58:05] <rjwiii> Good morning .. I am using VSCode on my company laptop. The version is 1.55.0. I have an issue where the Python extension does not load. All I see is the "Python extension loading ..." and the spinning arrow. the version of the extension is 2021.5.9265005. Since it is a company machine (actually a VDI), I cannot upgrade or downgrade or install insiders editions. Has there been any resolution to th
[16:58:18] <rjwiii> is issue?
[16:58:34] <rjwiii> I already asked in #vscode, but there's only 24 people in there and they seem a bit shy ... :)
[16:59:52] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:00:39] <gitesh> tuple is a data structure right?
[17:00:47] <gitesh> (a, b) = (b, a)
[17:00:53] <entuland> you may start searching for any error logs, rjwiii
[17:00:57] <gitesh> then left hand side is also called tuple
[17:00:58] *** Joins: thiras (~thiras@user/thiras)
[17:01:23] <bjs> gitesh: yes it's a data structure.  `t = (a, b)` then `t` is a tuple with 2 items (a and b).
[17:01:45] *** Quits: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[17:01:45] <gitesh> bjs: (x, y) = (a, b)
[17:01:48] <bjs> gitesh: the left-hand side isn't really "real", it's just syntax for destructuring (aka unpacking)
[17:02:13] <gitesh> syntax for unpacking
[17:02:38] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:02:43] <entuland> gitesh, just in case, tuples aren't limited to 2 items
[17:02:46] *** Joins: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at)
[17:04:42] *** Joins: gggp (~gggp@111.63.14.119)
[17:04:51] *** Joins: bindu (bindu@user/bindu)
[17:05:56] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[17:06:16] *** Joins: dgdg (~dg_dg@cm-171-101-74-148.revip11.asianet.co.th)
[17:06:22] <entuland> didn't we have a bot in here to run python in the channel?
[17:06:27] <bjs> no
[17:06:30] <Yhg1s> entuland: good lord no.
[17:06:33] <entuland> ahahaha
[17:06:48] <entuland> I'm positive I've seen a python bot somewhere, must have been another channel
[17:07:53] <madprops> is list.remove(x) too expensive? what is faster?
[17:08:21] <Yhg1s> madprops: too expensive for what? Faster when trying to do what?
[17:08:25] <bjs> madprops: "too" is subjective. it's expensive in that it's linear aka O(n)
[17:08:35] <entuland> madprops, do you actually have a performance issue?
[17:08:38] <Yhg1s> linear with a lot of overhead, too.
[17:08:44] <madprops> it's no issue
[17:08:46] <madprops> I'm just practicing
[17:08:56] <madprops> https://dpaste.org/L49O
[17:08:58] <entuland> then you probably shouldn't worry about that, that would be premature optimization
[17:09:06] <bjs> madprops: faster would be using a data structure that isn't a list, lists aren't really designed for removing elements like that.  (Something like a `set` is designed for fast removal of elements by value)
[17:09:12] <Yhg1s> madprops: list.remove() searches for the list item, then removes it. Both the search and the remove are linear. If you need to do this often, perhaps you don't want to use a list.
[17:09:15] *** Quits: dg_dg (~dg_dg@156.146.57.175) (Ping timeout: 268 seconds)
[17:09:16] <Yhg1s> (But, say, a set)
[17:09:35] <bjs> madprops: yes it would be expensive,  maybe your inputs are small enough it doesn't matter.
[17:09:43] *** Joins: haroon (~haroon@gw.wmd.de)
[17:10:04] <madprops> thing is the excercise thing is timing out
[17:10:08] <madprops> it's supposed to be faster
[17:10:25] <madprops> so maybe a set?
[17:10:34] <entuland> then you may want to share the magnitude of your input
[17:10:54] <madprops> thought sets didn't have duplicates
[17:10:58] <madprops> I think I need duplicates
[17:11:06] <entuland> how many items in those lists you're scrambling?
[17:11:06] <Yhg1s> well, 'in' is linear too, and you're doing this in a loop, so you're doing several linear searches through two lists, repeatedly.
[17:11:06] <gitesh> high level question is 'what is iterable?'
[17:11:33] <Yhg1s> madprops: what is the code actually supposed to do? What are 's1' and 's2'?
[17:11:41] <madprops> entuland, can't copy them, but they are a lot of tests like "Testing for mwlyeoaqawwni and mnywawalwioqe"
[17:11:58] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:12:02] <madprops> Yhg1s, https://www.codewars.com/kata/55c04b4cc56a697bb0000048/train/python
[17:12:53] <entuland> uhm...
[17:13:28] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[17:13:32] <bjs> gitesh: iterable means "you can loop over it"
[17:13:32] <madprops> at first I was sorting it
[17:13:41] <madprops> but for some reason thought sorting wouldn't work
[17:13:44] <rk4> feels like sorting is the way to go
[17:13:53] <Yhg1s> madprops: turn them both into collections.Counters, subtract, check if anything went negative.
[17:14:06] <bjs> gitesh: if you can go "for x in y:" then we call y "iterable".  Another way of saying "looping over" is "iteration", hence "iterable".
[17:14:07] <entuland> with the kind of input you have there even a dumb inefficient code should be lightning fast
[17:14:17] *** Quits: sandeepk (~sandeepk@223.130.30.125) (Ping timeout: 258 seconds)
[17:14:35] <madprops> entuland, that's only the test input, the actual check has lots
[17:14:46] <entuland> oh
[17:14:51] *** Joins: timkofu (~timkofu@user/timkofu)
[17:14:56] <entuland> do you know how lots is in their testing set?
[17:15:12] <madprops> at least 442 checks
[17:15:18] <madprops> before it timed out
[17:15:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:15:53] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[17:15:56] <entuland> so they're willingly or unwillingly also testing your code performance
[17:16:02] <entuland> yes, you have a performance problem to sort out
[17:16:07] *** Joins: magla (~gelignite@55d45e55.access.ecotel.net)
[17:16:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:16:13] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[17:16:17] <entuland> the counters idea above looks nice
[17:16:20] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:16:44] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:16:55] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[17:17:11] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:17:21] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 258 seconds)
[17:21:56] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[17:22:14] *** ambv is now known as ambv_
[17:22:18] <entuland> eh, I should have read that page in full ahahaha https://i.imgur.com/V1fV2P6.png
[17:22:49] *** Quits: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[17:23:32] *** Joins: y1n (~y1n@213162073072.public.t-mobile.at)
[17:23:56] *** Joins: Obo (~roberto@94.191.137.235.mobile.tre.se)
[17:25:14] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 255 seconds)
[17:25:41] *** GOD is now known as BAD
[17:25:54] <madprops> Yhg1s, yep it worked. return (Counter(s2) - Counter(s1)) == Counter()
[17:26:01] <madprops> passed 520 checks in 4884 ms
[17:26:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:27:06] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:27:37] <VaniaPy> is there another way ,except from uuid, to store entities with random ids?to the db
[17:27:41] *** Joins: gggp (~gggp@60.10.194.43)
[17:28:32] <gggp> Does pandas make some optimization for large data banch algorithms
[17:29:13] <gggp> for example .window move average ,it may cache some temp result for reusing
[17:29:13] *** Joins: bulletsquid (~bulletsqu@user/bulletsquid)
[17:29:24] <entuland> VaniaPy, UUID is a good solution if you truly want random IDs - if you don't really need random, the autoincrement on insert could do just fine
[17:30:22] <VaniaPy> entuland yeah it's a good way,but doesn't work well with my API :/
[17:30:34] <entuland> so you want random integers as IDs?
[17:31:03] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[17:31:05] <entuland> you may need to define "doesn't work well" for context
[17:31:07] <VaniaPy> yes
[17:31:12] *** Joins: emika3 (~emika@83.136.182.57)
[17:31:22] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[17:31:22] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Client Quit)
[17:31:31] *** Quits: bindu (bindu@user/bindu) (Quit: WeeChat 3.2)
[17:31:38] <VaniaPy> it creates the entity to my db but not in the db of the API (it's an IoT provider)
[17:31:38] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[17:31:56] *** Joins: ferz (~ferz@93.48.251.229)
[17:32:03] <entuland> you could create, say, an sql function that generates a random integer, so that you can use it on insert, but you need to handle possible conflicts (that is, the function needs to check whether the id exists already) - or something
[17:32:12] *** Quits: emika (~emika@185.207.249.100) (Ping timeout: 245 seconds)
[17:32:13] *** emika3 is now known as emika
[17:33:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[17:34:28] *** Parts: afidegnum (~user@102.176.94.136) (ERC (IRC client for Emacs 27.2))
[17:36:16] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[17:38:17] *** Quits: y1n (~y1n@213162073072.public.t-mobile.at) (Ping timeout: 250 seconds)
[17:38:29] <bad_blue_bull> stem's Controller.get_newnym_wait() always returns 0
[17:39:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[17:40:13] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[17:41:14] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[17:42:12] *** Joins: nyah (~nyah@90.221.186.180)
[17:42:35] <GinFuyou> Hello! I'm wondering if there is an elegant solution to replace regex using captured values for input. e.g.: ([A-Z]+\d+) -> ([A-Z]+42). Basically take letters and replace number with a constant
[17:43:00] <GinFuyou> I can do it in few steps and a loop, but is there something cleaner?
[17:44:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:44:27] <phy1729> So _-_FOOBAR1729-_-  becomes FOOBAR42 ?
[17:44:28] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:44:39] <GinFuyou> Yes
[17:44:58] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[17:45:18] <GinFuyou> And input string can have a number of groups like that for replacement
[17:45:48] <entuland> GinFuyou, could you provide more context as to what the actual data is?
[17:46:12] *** Joins: vince (~vince@75.127.14.76)
[17:46:18] <GinFuyou> Basically, I'm fixing references in excel formula. so strings are like "=AB12 * 10 / B12" and so on
[17:46:32] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[17:47:10] <entuland> uhm... just as a wild shot - you know you can "fill down" formulas and lock the column / row values or both?
[17:47:43] <entuland> depending on the work you have to do, it may be faster done manually than trying to code it (if you know how to use such spreadsheet facilities)
[17:47:57] *** Joins: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi)
[17:48:35] <GinFuyou> Yes, it's not the task of fixing an spreadsheet by itself. I'm actually doing a more complex processing of an input spreadsheet using spreedsheet templates
[17:48:44] <entuland> okay
[17:48:51] <GinFuyou> to output other spreadsheets ^_^"
[17:48:59] <phy1729> Annoyingly    re.sub(r'^[^A-Z]+([A-Z]+)\d+.*$', r'\142', '-_-FOOBAR1729-_-')   is interpreted as octal
[17:49:13] <phy1729> Adding a space after \1 works, but isn't what you want
[17:49:39] <jinsun> \g<1> can be used instead of \1
[17:49:46] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 240 seconds)
[17:49:57] <GinFuyou> But I don't really know how many groups there be
[17:50:06] <phy1729> Indeed this works  re.sub(r'^[^A-Z]+([A-Z]+)\d+.*$', r'\g<1>42', '-_-FOOBAR1729-_-')
[17:50:07] <GinFuyou> Most formulas seem to have 2
[17:50:10] <phy1729> Thanks jinsun
[17:50:22] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[17:50:52] <GinFuyou> well, it still works if I do it in the loop I guess?
[17:52:38] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[17:53:10] *** Joins: me-sudoer-dentne (~siddhant@45.112.146.121)
[17:53:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[17:54:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:54:22] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:54:58] *** Joins: afidegnum (~user@102.176.94.136)
[17:55:36] *** Joins: dg_dg (~dg_dg@188.214.106.89)
[17:57:21] *** Quits: dgdg (~dg_dg@cm-171-101-74-148.revip11.asianet.co.th) (Ping timeout: 268 seconds)
[17:59:26] <afidegnum> hi, i have created a SO question, can you please have a look? https://stackoverflow.com/questions/68576410/dom-traversal-with-lxml-and-save-their-relashionship-into-a-key-value-pair-cyphe
[17:59:30] *** Joins: y1n (~y1n@84-115-65-7.wifi.dynamic.surfer.at)
[18:00:29] *** Joins: ripdog (~quassel@user/ripdog)
[18:00:58] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:01:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:03:02] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:03:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:03:21] *** Quits: Obo (~roberto@94.191.137.235.mobile.tre.se) (Ping timeout: 252 seconds)
[18:03:39] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:04:13] *** Joins: pnoud (~pnoud@user/pnoud)
[18:05:37] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[18:06:17] *** Joins: Guddu (~Guddu@171.50.141.238)
[18:07:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:08:23] *** Quits: ambv_ (~ambv@c138-59.icpnet.pl) (Quit: Bye)
[18:09:08] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[18:12:25] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:12:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[18:14:19] *** Quits: inom (~inom@176.59.103.126) (Read error: Connection reset by peer)
[18:14:46] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[18:14:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:15:00] *** Joins: inom (~inom@176.59.103.126)
[18:16:01] *** Quits: afidegnum (~user@102.176.94.136) (Ping timeout: 265 seconds)
[18:16:17] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:16:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:17:04] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[18:17:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:19:10] *** Quits: me-sudoer-dentne (~siddhant@45.112.146.121) (Quit: Leaving)
[18:19:17] <GinFuyou> Ok, thanks, now just have to package it and test with client!
[18:19:57] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Quit: bye bye friends)
[18:24:49] *** Joins: Barones (~Barones@2804:7f3:8986:c347:a0a7:cf77:2eec:3619)
[18:25:35] *** Parts: bulletsquid (~bulletsqu@user/bulletsquid) (WeeChat 2.8)
[18:26:17] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:26:18] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[18:26:27] *** Joins: Ares000 (~Ares3@37.228.196.119)
[18:26:34] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[18:26:36] *** Joins: dez (uid92154@user/dez)
[18:26:38] *** Quits: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi) (Read error: Connection reset by peer)
[18:26:59] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[18:27:58] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:30:26] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:30:37] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2 (See ya!))
[18:30:42] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[18:31:02] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:33:24] *** Joins: Obo (~roberto@94.191.137.235.mobile.tre.se)
[18:33:38] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:33:41] *** Joins: dgdg (~dg_dg@84.252.92.13)
[18:36:19] *** Quits: dg_dg (~dg_dg@188.214.106.89) (Ping timeout: 265 seconds)
[18:36:24] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2 (See ya!))
[18:36:46] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:38:05] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:40:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[18:40:22] *** Joins: r1ch (~r1ch@user/r1ch)
[18:40:24] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:41:45] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[18:42:07] *** Joins: jmft2 (~JMFT@82.3.54.26)
[18:44:54] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:44:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[18:45:24] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:45:33] *** Joins: zebrag (~chris@user/zebrag)
[18:45:55] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[18:47:25] *** Joins: akk (~akk@75.161.155.222)
[18:50:28] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[18:50:35] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[18:50:56] *** Joins: sgn (~sgn@user/sgn)
[18:50:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[18:51:10] *** Joins: erica (~erica@user/erica)
[18:51:17] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:53:33] *** Joins: Roey (~Roey@user/Roey)
[18:54:49] <rendar> are we sure hat this little snippet of code https://bpa.st/276Q isn't already inside the list functions/slice options?
[18:57:10] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[18:58:04] *** Joins: andika (~andika@subs46-116-206-42-91.three.co.id)
[18:58:37] <The-Compiler> rendar: isn't that the same as   items[amin:amin+amax:increment]
[18:58:55] <rendar> nope
[18:59:59] <rendar> The-Compiler: that will yield the first item immediately, and my function doesn't do that
[19:00:44] *** Quits: andika (~andika@subs46-116-206-42-91.three.co.id) (Remote host closed the connection)
[19:00:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:01:18] <The-Compiler> rendar: what do you mean with "yield immediately"? Are you looking for itertools.islice perhaps?
[19:01:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:01:59] <rendar> The-Compiler: i mean that if step=2 my function waits, and yields 2,4,6,8...
[19:02:09] <rendar> instead that slice ::2 will yield 1,3,5,7,9...
[19:03:05] <The-Compiler> rendar: list(range(10))[2::2] == [2, 4, 6, 8]
[19:03:23] *** Quits: y1n (~y1n@84-115-65-7.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[19:04:05] <rendar> The-Compiler: nope! if a=[1, 2, 3, 4, 5, 6, 7, 8, 9] then a[2::2] will be [3, 5, 7, 9]
[19:04:10] *** Joins: y1n (~y1n@84-115-65-7.wifi.dynamic.surfer.at)
[19:04:11] <rendar> and not [2,4,6,8,..]
[19:04:12] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:04:13] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Quit: Client closed)
[19:04:40] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[19:04:43] <The-Compiler> rendar: a[1::2] in that case then
[19:06:41] <SnoopJ> or the equivalent islice
[19:06:47] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[19:07:51] *** Joins: sedeki (~textual@user/sedeki)
[19:08:06] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:08:23] *** Quits: Strom (strom@fedora/strom) ()
[19:08:54] <rendar> SnoopJ: islice is the function equivalent of [ : : ] ?
[19:09:17] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 245 seconds)
[19:09:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:09:38] <jinsun> [::] is slice, islice is slice for iterables
[19:09:45] <The-Compiler> rendar: the function equivalent is __getitem__ with a slice() object; the difference about itertools.islice is that it's lazy and works on any iterable
[19:10:03] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[19:10:12] <rendar> i see
[19:10:18] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[19:10:18] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:10:25] *** Joins: Strom (strom@fedora/strom)
[19:10:40] <rendar> ok my function is different than slicing
[19:11:15] <SnoopJ> your function is *using* slicing
[19:11:21] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[19:11:24] <rendar> a = [1,2,3,4,5,6,7,8,9] my_fn(a, step=3) returns correctly [3, 6], while a[1::3] returns wrongly [2, 5, 8]
[19:11:44] <rendar> my function skips the first N steps, before yielding
[19:12:13] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[19:12:19] <rendar> even a[3::3] is [4,7], which is different than [3,6]
[19:12:19] <SnoopJ> Yes, it's doing that by executing a bunch of code, rather than going directly to the first interesting item.
[19:12:32] <SnoopJ> (well, it's executing a loop, not really "a bunch" of code)
[19:12:47] <rendar> SnoopJ: how'd you make it better?
[19:12:55] <SnoopJ> rendar, I probably wouldn't write this function at all
[19:12:59] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:13:01] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[19:13:11] <rendar> SnoopJ: what i could use instead?
[19:13:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:13:24] <sedeki> a[::3] ?
[19:13:35] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:14:01] <The-Compiler> rendar: you'd want a[2::3] then - you want to start on the 3rd item, i.e. the one with index 2
[19:14:46] <SnoopJ> rendar, I believe this is equivalent: `itertools.islice(items, start=amin + increment, stop=amin+amax, step=increment)`
[19:15:02] <rendar> uhm
[19:15:10] <The-Compiler> SnoopJ: start=amin + increment - 1 probably?
[19:15:12] <rendar> let's see
[19:15:38] <SnoopJ> The-Compiler, I don't think so? I didn't check, though, could definitely have off-by-one
[19:16:37] <rendar> btw: TypeError: islice() takes no keyword arguments
[19:16:45] <SnoopJ> blagh, I always make that mistake.
[19:17:39] <rendar> SnoopJ: btw that's wrong, your islise is like [3::3]
[19:18:03] *** Joins: minip (minip@user/minip)
[19:18:05] <SnoopJ> No it is not
[19:18:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[19:18:08] <SnoopJ> (it has a stop)
[19:18:50] <SnoopJ> The-Compiler, you were right, needs -1
[19:18:52] <rendar> it prints the same result
[19:18:52] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:18:55] <rendar> i have just tried
[19:19:10] <rendar> yeah with that -1 works
[19:19:58] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[19:20:17] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[19:21:22] *** Quits: jazzy (~jaziz@2600:380:8577:4a6c:39b4:468b:5d5a:f419) (Ping timeout: 240 seconds)
[19:21:33] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 258 seconds)
[19:21:52] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[19:22:23] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.79.167)
[19:22:37] *** Joins: audiocat (~audio@2603-8081-1800-00ad-0c54-6493-a7c3-9d23.res6.spectrum.com)
[19:22:44] *** Quits: candyman1 (~candyman@user/candyman) (Quit: candyman1)
[19:22:49] <Ronalds_Mazitis_> hey
[19:22:49] <Ronalds_Mazitis_> I'm compiling nautilus with gnome builder on 18.04 ubuntu
[19:22:50] <Ronalds_Mazitis_> and I'm getting following output with errors
[19:22:50] <Ronalds_Mazitis_> https://paste.ubuntu.com/p/rfzs9wGx4C/
[19:22:51] <Ronalds_Mazitis_> maybe I can switch this off in the code
[19:22:51] <Ronalds_Mazitis_> pls give me a hint
[19:22:52] <Ronalds_Mazitis_> I'm using following GIT
[19:22:52] <Ronalds_Mazitis_> https://git.launchpad.net/~ubuntu-desktop/ubuntu/+source/nautilus
[19:22:53] <Ronalds_Mazitis_> system wide pip and pip3 versions are way beyond 0.24
[19:24:06] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[19:24:12] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 252 seconds)
[19:24:20] *** Joins: erica (~erica@user/erica)
[19:24:21] *** Joins: Crassus (~Crassus@user/crassus)
[19:24:38] *** Quits: y1n (~y1n@84-115-65-7.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[19:25:40] <SnoopJ> Ronalds_Mazitis_, looks like it's trying to use setuptools features that were deprecated in 2013
[19:25:47] <grym> Ronalds_Mazitis_: looks like your setuptools may be too new, per https://github.com/pypa/setuptools/issues/2017 ; this is a bug in nautilus/gcovr-3, probably, because that's a very dead name
[19:26:09] <grym> where that means Feature
[19:26:20] <The-Compiler> Ronalds_Mazitis_: this was fixed in Markupsafe 1.1.1 or so, from what it looks like: https://github.com/pallets/markupsafe/issues/116
[19:27:01] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.79.167) (Client Quit)
[19:27:07] <The-Compiler> kthxbye
[19:28:35] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[19:29:51] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 268 seconds)
[19:30:03] *** Joins: waynew (~wayne@user/waynew)
[19:31:08] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:32:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:32:11] *** Quits: BAD (~mad@user/god) (Quit: flying away from here)
[19:32:40] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[19:32:49] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[19:32:51] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:33:17] *** Joins: erica (~erica@user/erica)
[19:33:54] *** Joins: Brion_ (~Brion@gateway/tor-sasl/brion)
[19:34:33] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 244 seconds)
[19:34:33] *** Brion_ is now known as Brion
[19:37:12] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 245 seconds)
[19:38:06] *** Joins: stevieh (~skrodzki@91.148.233.70)
[19:39:58] *** Vultyre_ is now known as Vultyre
[19:40:39] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[19:41:20] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[19:41:54] *** Joins: zeden (~zeden@user/zeden)
[19:42:23] *** Quits: averell (~averell@user/averell) (Quit: .)
[19:45:10] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[19:46:27] <thiras> anyone here using poetry with docker? https://bpa.st/43VQ This is my Dockerfile. I'm wondering what did i wrong?
[19:46:39] *** Joins: kyborg20_ (~kyborg201@217.147.170.194)
[19:46:43] <thiras> the django cannot find the installed modules
[19:46:51] <thiras> and no error at building stage
[19:47:26] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:48:24] *** Joins: kyborg2__ (~kyborg201@37.73.67.190)
[19:50:00] *** Quits: Obo (~roberto@94.191.137.235.mobile.tre.se) (Ping timeout: 256 seconds)
[19:50:03] *** Quits: kyborg2__ (~kyborg201@37.73.67.190) (Remote host closed the connection)
[19:51:04] *** Quits: kyborg20_ (~kyborg201@217.147.170.194) (Ping timeout: 258 seconds)
[19:52:36] *** Quits: newpy (~newpy@2601:280:4381:1390:cc07:b342:d268:ed9d) (Quit: Leaving)
[19:53:29] <SnoopJ> thiras, I do, but I use it by ADDing a built wheel into the Docker image
[19:53:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:54:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[19:54:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:54:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:54:43] *** Quits: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[19:54:50] <SnoopJ> thiras, it would help to see the complete output, I'm not really sure what "the django cannot find the installed modules" means here
[19:55:02] <thiras> yeah i've seen that tactic but seems quite long shot for me
[19:55:07] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:55:11] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:55:17] <SnoopJ> Not advocating for it, just answering the question that was asked.
[19:55:32] <thiras> SnoopJ, i'm buildng the image again. i'll let you know once finished
[19:55:33] <SnoopJ> At a guess, `poetry install --no-root` seems weird to do?
[19:55:49] <thiras> nope nothing weird but i have python-dotenv import at my manage.py
[19:56:10] <SnoopJ> Well, it was a guess. I don't even understand the problem, let alone what might cause it.
[19:56:11] <thiras> and getting classic module not found error from that (probably because it's one of the first imports)
[19:56:25] <SnoopJ> Is "it" your poetry project (which you aren't installing because of --no-root) ?
[19:56:43] <thiras> yes i've wrote the app and dockerfile from scratch
[19:57:14] <SnoopJ> Well, you're probably getting all the dependencies then, but not the package you wrote.
[19:57:40] <thiras> no root because i want to take advantage of version bumping without reinstallation of pyproject
[19:57:52] <SnoopJ> You won't have to worry about reinstallation: you aren't installing it *at all*
[19:58:04] <thiras> you right. let me try without it
[19:58:34] <wedwards> I want to override __getattribute__ to raise an exception in certain conditions, and otherwise return the attribute as normal. Is there a more elegant way than copying and modifying the code for __getattribute__ in my class? If not, which code should I copy
[19:59:11] *** Joins: harwiltz (~harwiltz@modemcable212.231-202-24.mc.videotron.ca)
[19:59:22] <GinFuyou> wedwards, super() ?
[20:00:56] <pathos> thiras: Good article on getting poetry to work with Docker: https://pythonspeed.com/articles/poetry-vs-docker-caching/ (you need an additional `poetry install` after you copy your app in). Also, that `apk del` on line 45 will actually make your image bigger, due to the way the docker filesystem works, see https://pythonspeed.com/articles/system-packages-docker/
[20:01:14] <wedwards> GinFuyou: like https://bpa.st/NKAA ?
[20:01:19] <harwiltz> Hello all. I'm trying to make a "class decorator", i.e. a function that takes a class and returns a modified version of that class. Oddly, it works when I treat the decorator function like a function, such as obj = decorate(Class)(params). However, when I define a new class with the @decorate directive above it, I get weird bugs, particularly during initialization.
[20:01:37] <GinFuyou> wedwards, yes, possibly
[20:01:46] <The-Compiler> harwiltz: can you show some code?
[20:01:57] <harwiltz> The-Compiler: here's a minimal example https://dpaste.com/5ZM9J3XZM
[20:02:44] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:02:48] *** Joins: Crassus (~Crassus@user/crassus)
[20:02:52] <harwiltz> I've found that when the class-to-be-decorated (B in my example) __init__ is called, the parameter self has type(self) = B, but isinstance(self, B) = False
[20:02:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:03:08] *** Quits: Barones (~Barones@2804:7f3:8986:c347:a0a7:cf77:2eec:3619) (Remote host closed the connection)
[20:03:21] <harwiltz> And the python error says that for super(type, obj) obj needs to be a instance or subtype of type
[20:04:31] <harwiltz> And to be clear, the example fails on line 11
[20:04:32] *** Joins: wbn (~wbn@user/wbn)
[20:05:02] *** Joins: pnoud (~pnoud@user/pnoud)
[20:05:40] <The-Compiler> harwiltz: no idea off-hand what's going wrong I'm afraid
[20:05:44] *** Joins: GenericUser584 (~GenericUs@42-98-107-220.static.netvigator.com)
[20:05:52] <harwiltz> The-Compiler: no problem, me neither ;)
[20:05:57] *** Joins: mike18 (~geri@217-149-163-174.nat.highway.telekom.at)
[20:06:04] <mike18> hi
[20:06:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[20:06:27] <mike18> AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID") ... is there a way i can do a check if that var is not none or will i need 2 lines?
[20:06:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:06:54] <The-Compiler> mike18: why do you want to check? I'm guessing to use a fallback value?
[20:07:04] <grym> mike18: getenv takes a default= , if that's going to solve your problem a different way
[20:07:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[20:07:06] <mike18> if not initialized - dont run the app
[20:07:24] <wib_jonas> harwiltz: I don't really understand that code. in particular, the class B is derived from A, not Base, so that's one way B differs from A already. how can I be sure it's really the decorator that causes the problem here if you aren't testing the same thing?
[20:07:29] <mike18> i dont have a default aws key and dont want to put it in the code
[20:07:30] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:07:48] <deniska> os.environ["AWS_ACCESS_KEY_ID"] will throw
[20:07:53] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Remote host closed the connection)
[20:08:05] <grym> ^
[20:08:14] <harwiltz> wib_jonas:lol, that's a good point. I hadn't thought of that, the reason for it is dependent on my actual work but let me try
[20:08:15] <mike18> throw?
[20:08:20] <grym> mike18: raise KeyError
[20:08:21] <deniska> Although you still may want to display a nicer error message… maybe… good enough for MVP though :)
[20:08:39] <mike18> grym: you mean not check it befor hand?
[20:08:52] <grym> mike18: deniska's approach will raise a KeyError if that key isn't present
[20:09:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:09:13] <mike18> i use: os.getenv("AWS_ACCESS_KEY_ID") btw.
[20:09:30] <grym> mike18: you've been given a different approach, that will (if unhandled) stop your app from continuing if not set
[20:09:34] <harwiltz> wib_jonas: it fails with the exact same error when B is derived from Base. The exception is thrown on line 61 both ways.
[20:09:39] *** Parts: Norm (~norm@user/norm) (WeeChat 3.2)
[20:10:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[20:11:17] <mike18> i get: AWS_ACCESS_KEY_ID = os.getenv["AWS_ACCESS_KEY_ID"] ... TypeError: 'function' object is not subscriptable
[20:11:36] <mike18> oh need to use environ
[20:12:01] <wib_jonas> harwiltz: in addition, overriding __getattribute__ is scary. are you sure you didn't just want to override __getattr__ instead?
[20:12:04] *** Quits: magla (~gelignite@55d45e55.access.ecotel.net) (Quit: Stay safe!)
[20:12:27] <harwiltz> wib_jonas:good question, I honestly didn't know about __getattr__, I'll check that out
[20:12:44] <wib_jonas> I'm not sure how __getattribute__ will work here and what side effects it will cause yuo
[20:14:00] <wib_jonas> that, plus you make the Decorated a subclass of cls, so it may try to call inherited methods from its superclass, and those don't know that they're supposed to be looking for anything in _instance\
[20:14:10] <wib_jonas> I don't know how Decorated is supposed to work
[20:14:12] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[20:14:28] *** Joins: afidegnum (~user@102.176.94.50)
[20:14:39] *** Joins: recursion (sid504862@user/recursion)
[20:14:56] <wib_jonas> in this case you might want to single-step with a debugger what magic method calls what other magic method, or add a lot of trace statements, because I've no idea what the code even should do
[20:15:14] <harwiltz> Same error with __getattr__, here's the code to be sure: https://dpaste.com/9GBAQU7HZ
[20:15:24] *** Quits: milosz_ (~milosz@user/milosz) (Ping timeout: 265 seconds)
[20:15:54] <harwiltz> wib_jonas: I've been using a debugger, but for some reason when I try to step into one of the super calls, it just fails immediately...
[20:16:31] <wib_jonas> I also don't know what B refers to in line 61. is it the decorated class B, or the original? which one do you want to pass to super?
[20:16:33] <harwiltz> Also it's the same issue when Decorated is not a subclass of cls
[20:16:49] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[20:17:10] <wib_jonas> what is the error you got in first place?
[20:17:24] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[20:17:32] <harwiltz> wib_jonas: I suppose I want to pass B to super, but if I remember correctly when I try that I get a recursion error, lemme check again
[20:17:50] <harwiltz> wib_jonas: the error is "TypeError: super(type, obj): obj must be an instance or subtype of type"
[20:18:12] <wib_jonas> that's the __init__ method for the original undecorated class. and you're passing it the decorated class. that doesn't seem like a good idea.
[20:18:14] <harwiltz> And in my case, type(obj) == type, but isinstance(obj, type) == False somehow
[20:18:20] *** Quits: stevieh (~skrodzki@91.148.233.70) (Ping timeout: 256 seconds)
[20:19:10] *** Joins: andyewen (~andyewen@31.124.173.163)
[20:19:16] <thiras> SnoopJ, didn't help
[20:19:24] <harwiltz> wib_jonas: sorry you're right, I want to pass the decorated class in __init__ on line 25
[20:19:27] <thiras> still getting ModuleNotFoundError: No module named 'dotenv'
[20:19:56] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[20:20:06] <SnoopJ> thiras, I don't really have enough information to help, sorry.
[20:20:45] <thiras> no problem. seems nobody has in manner of poetry + docker
[20:20:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[20:21:07] <thiras> i've set virtualenvs.create false but seems not working at all
[20:21:08] <SnoopJ> It's just hard to solve the problem when you can only see a silhouette of it.
[20:22:37] *** Quits: GenericUser584 (~GenericUs@42-98-107-220.static.netvigator.com) (Quit: GenericUser584)
[20:23:07] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 244 seconds)
[20:23:12] *** Joins: KombuchaKip (~kip@192.252.230.5)
[20:23:17] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:24:04] *** Joins: hyperknot (~hyperknot@254C7F00.nat.pool.telekom.hu)
[20:25:28] *** Joins: ckdCreations (~ckdCreati@147.55.133.132)
[20:26:56] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:46] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[20:27:54] *** Joins: andika (~Andika@subs46-116-206-42-114.three.co.id)
[20:28:40] <harwiltz> wib_jonas: figured it out! I didn't know about the argumentless 'super' function in python 3. That solved the problem
[20:28:58] *** Quits: andika (~Andika@subs46-116-206-42-114.three.co.id) (Client Quit)
[20:29:06] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 256 seconds)
[20:29:33] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:29:57] *** Joins: lorcab (~user@197.251.194.240)
[20:30:01] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[20:30:09] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[20:30:27] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:30:36] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:31:10] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:32:02] *** Joins: esv (~esv@72.11.45.232)
[20:32:17] *** Quits: MaximB (~MaximB@87.68.165.19) (Quit: Client closed)
[20:32:50] *** Quits: dkmueller (~dkmueller@2a01:c23:b9bf:fd00:c8a9:e613:87c2:dcb3) (Quit: WeeChat 3.2)
[20:32:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[20:34:20] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[20:34:36] *** Quits: GNUtoo (~GNUtoo@cyberdimension.org) (Ping timeout: 252 seconds)
[20:35:09] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[20:35:25] *** Joins: GNUtoo (~GNUtoo@cyberdimension.org)
[20:35:30] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:35:31] *** Joins: reset (~reset@user/reset)
[20:36:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[20:37:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:37:09] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:38:53] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:39:20] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[20:40:50] *** Joins: d00gy (~tonberry@user/d00gy)
[20:42:43] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[20:43:29] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:43:39] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Quit: Client closed)
[20:44:05] *** Joins: cr0n0s (~quassel@181.67.203.144)
[20:44:17] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[20:44:28] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 268 seconds)
[20:44:48] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[20:45:07] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[20:45:37] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:19] <mike18> hi how to fix that issue from s3.s3 import S3, S3Data ....E   ModuleNotFoundError: No module named 's3' ... that unit test works in the docker container...
[20:50:18] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:50:39] <rendar> can i tell (globally) python to print datetime as '2-1-2007' instead of `datetime.datetime(2007, 2, 7, 0, 0)` ?
[20:52:04] <ChrisWarrick> rendar: no
[20:52:09] <rendar> :(
[20:52:20] <ChrisWarrick> mike18: where do you experience that issue? do you have the dependencies installed?
[20:52:34] <mike18> its my own code that s3
[20:52:47] <mike18> ./s3/s3.py
[20:52:52] <mike18> class S3:
[20:53:10] <ChrisWarrick> mike18: how do you run your stuff when it works?
[20:53:12] <mike18> and i start unit testing from root dir: pytest -sv tests
[20:53:19] <ChrisWarrick> mike18: and how do you run it when it doesn’t work?
[20:53:21] <mike18> with docker imag
[20:53:43] <mike18> oh wait it works with: coverage run -m pytest -sv ./tests/ && coverage report
[20:53:50] <mike18> but fails with pytest -sv ./tests
[20:53:54] <mike18> is that expected?
[20:54:06] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[20:54:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[20:54:46] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:54:46] <ChrisWarrick> mike18: show your directory structure
[20:54:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:55:40] *** Joins: Betal (~Beta@user/betal)
[20:56:14] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 258 seconds)
[20:57:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c4f6-b782-bed6-f46f.res6.spectrum.com)
[20:57:42] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[20:57:59] *** Quits: cedric (~cedric@2a01:cb11:867:c200:16a9:991d:9546:77f) (Quit: Konversation terminated!)
[20:57:59] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[20:59:08] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[20:59:41] <mike18> ChrisWarrick: https://ideone.com/32AwE0
[21:00:16] *** Joins: defn (~n0b0dy@user/defn)
[21:00:26] *** Joins: c10l (~c10l@89.34.167.207)
[21:01:39] <ChrisWarrick> mike18: if this is the directory you run pytest from, it seems it should work
[21:01:50] <mike18> its not working
[21:02:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:02:58] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:03:44] <jinsun> pytest will actually change diretory to tests/unit I think, and not put the top level directory in sys.path
[21:04:08] <jinsun> but coverage -m will add the top level folder to sys.path
[21:04:51] <nedbat> mike18: does it work like this?  python -m pytest -sv ./tests
[21:05:06] <mike18> yes
[21:05:51] <nedbat> mike18: so problem solved?
[21:05:58] <mike18> yeah
[21:06:03] *** Joins: rsx (~dummy@ppp-188-174-145-96.dynamic.mnet-online.de)
[21:06:05] <mike18> wwhy was my cmd nto working?
[21:06:09] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 265 seconds)
[21:06:57] <jinsun> if you want to run it with pytest directly, either install your package to your env before running, or put __init__.py inside tests and tests/unit
[21:07:05] <afidegnum> hi, can anyone assist in answer this question on SO ?
[21:07:32] <nedbat> mike18: python -m puts the directory on sys.path, and pytest does its own thing with the path.
[21:08:09] <SnoopJ> https://docs.pytest.org/en/latest/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
[21:08:34] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 265 seconds)
[21:09:37] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[21:09:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:10:00] <afidegnum> https://stackoverflow.com/questions/68576410/dom-traversal-with-lxml-and-save-their-relashionship-into-a-key-value-pair-cyphe
[21:10:01] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[21:10:59] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:11:00] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:11:46] *** Joins: regreg (~regreg@86.122.113.90)
[21:11:58] *** Quits: hyperknot (~hyperknot@254C7F00.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[21:12:53] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:13:34] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:13:45] <rendar> SnoopJ: do you remember your function of before? https://bpa.st/BHIA
[21:13:48] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[21:14:08] <SnoopJ> rendar, what about it?
[21:14:09] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[21:15:23] <rendar> SnoopJ: my problem is that i should get
[21:15:33] <rendar> no element initially, but also finally
[21:16:57] <SnoopJ> rendar, neither of those is complete sentences, but I think you want `yield from itertools.islice(...)`, not `return`
[21:17:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:17:32] <rendar> nope, let me explain
[21:17:51] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:17:57] * SnoopJ waits for clarification
[21:18:50] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[21:18:54] <rendar> SnoopJ: i have an array of February 2007 days. from 1/2/2007 to 28/2/2007... now, i want to divide this array in 3 equal parts, so i want to get e.g. a day every 9
[21:18:56] <rendar> 28/9
[21:19:01] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[21:19:05] <rendar> so i can set increment=9
[21:19:43] <rendar> it starts from 9/2/2007, 18/2/2007
[21:20:03] <rendar> then 27/2/2007 <- but that's wrong!
[21:20:22] <rendar> it's too close to the last day (28/2/2007) so it won't divide in 3 equally spaced array...
[21:20:44] <SnoopJ> rendar, neither islice nor your original code divides an iterable into equally spaced chunks, no.
[21:21:01] <rendar> how can i do that with itertools?
[21:21:32] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[21:21:51] *** Joins: kosh (~kosh@user/kosh)
[21:22:12] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[21:22:19] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[21:22:58] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[21:23:03] <SnoopJ> There's nothing in that module that does this. more_itertools has something relevant, though: https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.divide
[21:23:12] <SnoopJ> note: divide() does *not* guarantee equal-length divisions
[21:23:33] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[21:23:43] <SnoopJ> (it won't always even be possible to do equal-length divisions)
[21:23:47] *** Joins: c10l (~c10l@89.34.167.207)
[21:23:56] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[21:23:59] <rendar> ModuleNotFoundError: No module named 'more_itertools'
[21:24:20] <rendar> SnoopJ: it doesn't matter if the difference is 1 day
[21:24:20] <SnoopJ> https://more-itertools.readthedocs.io/en/stable/index.html#getting-started
[21:24:29] *** Quits: python (~python@user/demon) (Ping timeout: 250 seconds)
[21:25:19] *** Joins: pnoud (~pnoud@user/pnoud)
[21:25:53] *** Joins: lazy1 (~tebeka@2a10:8008:b2af:0:b219:a961:462b:2bfa)
[21:26:16] <rendar> SnoopJ: but i don't want to divide a list into multiple list! i just want the delimiter indeces...
[21:26:36] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[21:27:00] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:27:17] <SnoopJ> oh, I see
[21:27:30] *** Quits: lazy1 (~tebeka@2a10:8008:b2af:0:b219:a961:462b:2bfa) (Client Quit)
[21:27:37] <rendar> e.g. start=10 end=20, divide=2 result: 15
[21:27:51] <rendar> e.g. start=10 end=20, divide=3 result: 12 15 18
[21:28:58] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:29:12] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:30:21] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[21:32:09] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[21:32:28] *** Joins: python (~python@user/demon)
[21:32:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:33:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:34:07] *** Quits: cr0n0s (~quassel@181.67.203.144) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:34:23] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[21:34:43] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[21:35:05] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[21:36:39] *** Joins: pink_cthulhu (~pink@ip32.ip-54-36-158.eu)
[21:36:45] *** Joins: timmcg (~timmcg@c-65-96-32-86.hsd1.me.comcast.net)
[21:38:04] *** Joins: cr0n0s (~quassel@181.67.203.144)
[21:38:14] *** Quits: et (~et@user/et) (Quit: ZNC 1.8.0 - https://znc.in)
[21:38:19] *** Joins: magla (~gelignite@55d45e55.access.ecotel.net)
[21:38:30] *** Joins: Narrat (~omnius@p200300df5f15d87906ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:38:57] *** Joins: scabby (~scabby@user/scabootssca)
[21:39:11] *** Quits: cr0n0s (~quassel@181.67.203.144) (Client Quit)
[21:39:13] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[21:39:22] *** Quits: python (~python@user/demon) (Ping timeout: 240 seconds)
[21:40:13] *** Quits: rendar (~rendar@user/rendar) ()
[21:40:30] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 256 seconds)
[21:40:38] *** Joins: et (~et@user/et)
[21:40:56] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:41:18] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:43:46] *** Joins: cr0n0s (~quassel@181.67.203.144)
[21:43:50] *** Quits: rsx (~dummy@ppp-188-174-145-96.dynamic.mnet-online.de) (Quit: rsx)
[21:45:33] *** Quits: cr0n0s (~quassel@181.67.203.144) (Client Quit)
[21:46:40] *** Joins: python (~python@user/demon)
[21:47:06] <pink_cthulhu> Hi, I have two functions, func_A and func_B, The first one checks a condition against each item in an interable. The other one uses two for loops to iterate over the items based on the condition. Which one is better to use? Here are the functions: (https://bpa.st/RAFQ). Should I calculate and compare Big-O complexity?
[21:47:27] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:48:03] *** Joins: cr0n0s (~quassel@181.67.203.144)
[21:48:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:48:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:48:30] <bjs> pink_cthulhu: well in terms of Big-O they're going to be exactly the same
[21:48:41] <bjs> pink_cthulhu: so... do whatever you think is easier to understand for the reader
[21:50:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[21:50:27] <phy1729> func = do_something if flag else other_func   is another option
[21:50:52] <phy1729> oh it always does other_func sorry
[21:51:41] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:51:49] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[21:51:59] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[21:52:25] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[21:52:29] *** Joins: pgib (~textual@173.38.117.81)
[21:54:03] <pink_cthulhu> bjs, phy1729 Thank you very much for your answer.
[21:54:47] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:55:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:56:08] *** Joins: pnoud (~pnoud@user/pnoud)
[21:56:18] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:57:22] *** Joins: emika8 (~emika@83.136.182.109)
[21:57:32] *** Joins: greedom (~greedom@2001:16b8:3211:7700:3f19:f5f7:987a:ec9f)
[21:57:36] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f) (Quit: Textual IRC Client: www.textualapp.com)
[21:58:04] *** Quits: emika (~emika@83.136.182.57) (Ping timeout: 256 seconds)
[21:58:04] *** emika8 is now known as emika
[21:59:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[21:59:26] *** Joins: Naan (~Naan@user/naan)
[21:59:38] *** Quits: afidegnum (~user@102.176.94.50) (Remote host closed the connection)
[22:00:51] *** Joins: ganchan (~thomas_w@user/ganchan)
[22:01:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[22:01:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:03:33] *** Quits: andyewen (~andyewen@31.124.173.163) (Quit: Leaving)
[22:04:57] *** Joins: derelict (~derelict@user/derelict)
[22:10:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:12:18] *** Joins: junktext_ (~junktext@109.201.152.167)
[22:12:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:13:10] *** Joins: Blankspace (~abcd@user/blankspace)
[22:13:30] *** Quits: greedom (~greedom@2001:16b8:3211:7700:3f19:f5f7:987a:ec9f) (Remote host closed the connection)
[22:13:37] *** Quits: ganchan (~thomas_w@user/ganchan) (Quit: Leaving)
[22:14:33] *** Joins: Vornotron (~Vornicus@2603-8000-5d07-7ef0-04bb-14cb-d493-4cea.res6.spectrum.com)
[22:14:42] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[22:15:06] *** Joins: Blankspace (~abcd@user/blankspace)
[22:15:22] *** Joins: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca)
[22:16:42] <AhmedAmerican> within `pandas`, can i count values based on the first 3 chars of the column ?
[22:17:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-45e4-f7b6-298b-fe96.res6.spectrum.com) (Ping timeout: 250 seconds)
[22:17:37] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[22:18:24] *** Quits: junktext_ (~junktext@109.201.152.167) (Quit: Goodbye. If you love F/LOSS, find me on Twitter: @junktext)
[22:19:02] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[22:20:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:21:15] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[22:21:42] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:22:06] *** Quits: akk (~akk@75.161.155.222) (Ping timeout: 258 seconds)
[22:22:40] <SnoopJ> AhmedAmerican, you can use Series.str.slice() for this, e.g.: https://bpa.st/BLQQ
[22:23:28] <AhmedAmerican> @SnoopJ Thank you.
[22:23:54] <SnoopJ> sure. there might be a more direct way to get counts, groupby() is just the first thing that occurred to me
[22:24:24] *** Joins: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net)
[22:24:53] <SnoopJ> I guess grouped.count() might be more useful, but refer to the groupby docs
[22:25:37] *** Joins: pnoud (~pnoud@user/pnoud)
[22:28:25] <BrenBarn> I don't think you even need slice, you can just do `series.str[0:2]` directly
[22:28:34] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Quit: WeeChat 3.2)
[22:29:34] <SnoopJ> oh, probably
[22:29:40] * SnoopJ doesn't write a lot of pandas
[22:30:16] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:30:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 245 seconds)
[22:31:17] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:32:19] <AhmedAmerican> BrenBarn: Yea, i did that already :P `df.number.astype(str).str[:2]`
[22:33:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:35:27] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[22:35:54] *** Quits: audiocat (~audio@2603-8081-1800-00ad-0c54-6493-a7c3-9d23.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:38:52] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 256 seconds)
[22:39:22] *** Joins: Akuli (~Akuli@82-203-166-10.bb.dnainternet.fi)
[22:40:11] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:41:55] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[22:43:01] *** Joins: Gerula (~Gerula@user/gerula)
[22:43:57] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Quit: leaving)
[22:44:18] *** Joins: goldfish (~goldfish@user/goldfish)
[22:44:43] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[22:44:47] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[22:44:50] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:47:46] *** Quits: harwiltz (~harwiltz@modemcable212.231-202-24.mc.videotron.ca) (Quit: WeeChat 3.1)
[22:49:10] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[22:49:29] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[22:49:47] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[22:51:27] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:51:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:52:46] <gloin> You can see here all my (failed) attempts to remove any whitespace from subprocess.getouput. Why is the space still being returned? It should be None right?
[22:52:47] <gloin> https://bpa.st/OZ7A
[22:53:16] <gloin> In this case "virtwhat" is just a shell script that only does "exit 0" without anything being output
[22:54:29] <gloin> All I'm trying to do is "Is the output from virtwhat empty?"
[22:54:49] *** Joins: erica (~erica@user/erica)
[22:55:09] <gloin> unless ($virtwhat) { #perl version, maybe need to chomp first but that's all it takes
[22:55:26] *** Joins: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi)
[22:56:08] <nedbat> gloin: .strip() will never return None, it will always be a string.
[22:56:09] <grym> gloin: '' is not None
[22:56:32] <grym> gloin: you could `if not is_vm:`
[22:57:10] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[22:57:36] <grym> or `is not subprocess.getoutput(...).strip()`, really
[22:58:22] <gloin> is that cast to str redundant on line 2?
[22:58:24] <grym> probably `output = subprocess.getoutput(...); if not output.strip():
[22:58:26] <grym> gloin: yes
[22:58:47] <grym> gloin: but not for other methods in subprocess, which can return, e.g., bytes
[22:59:08] <SnoopJ> the return value of getoutput() is guaranteed to be a str, yep
[22:59:23] <grym> check_output, though, returns bytes at least sometimes
[22:59:30] <SnoopJ> (be careful with the word "cast", too, Python doesn't really contain the idea this refers to in other languages)
[22:59:32] <grym> (don't know what it does on windows)
[23:00:00] <gloin> so I'm still getting _something_ from subprocess.getoutput, testing with "if not is_vm:"
[23:00:08] <gloin> but that something is nothing
[23:00:14] <grym> it's the empty string, probably
[23:00:21] <grym> which evaluates false
[23:01:04] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:01:06] <gloin> https://bpa.st/QPHQ still returns " wtf"
[23:01:44] <gloin> there is no output coming out of virtwhat
[23:01:54] <gloin> it's literally "exit 0" in a shell script right now
[23:03:04] <ba> So, your code is working correctly? 'wtf' is only printed if no non-whitespace output is printed
[23:03:05] <gloin> should go something like "if is_vm is empty, set a flag to 0, else set a flag to 1"
[23:03:49] <gloin> ba: it should print "Cleaned!" for now: https://bpa.st/VUXQ
[23:04:04] <gloin> d'oh holy logic error batman
[23:04:06] <gloin> aka ba
[23:04:08] <gloin> :D
[23:04:19] <ba> Remove the `not`! :)
[23:04:23] <gloin> lol
[23:04:29] <gloin> yeah, got myself turned around
[23:04:30] <gloin> thanks
[23:04:35] <ba> We've all been there :D
[23:04:42] <theseb> is it really true that if i run my python/django webapp on appengine that all my scalability issues are magically solved?  I don't necessarily want to spend time learning the nitty gritty of how to make my server bulletproof...is that what people here do?
[23:04:43] <BrenBarn> if you do `print(is_vm, "wtf")` you're going to get a space between the two values
[23:05:09] <grym> gloin: for completeness, https://bpa.st/HD3Q
[23:05:13] <grym> but you've got it figured out
[23:05:32] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:05:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[23:05:51] <ba> The name of the "is_vm" variable suggests it's a boolean, so you could consider something like `is_vm = len(getoutput(...).strip()) > 0`
[23:06:01] *** persephone is now known as clonebaby
[23:06:07] <ba> (or `== 0` depending on what your command does)
[23:06:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:06:19] <SnoopJ> bool(getoutput(...).strip()) is fine, too
[23:06:31] <SnoopJ> (empty strings are falsey, all others are truthy)
[23:06:50] <gloin> Use case here is the real "virtwhat" command outputs null if the system is a physical host, or something like "vmware" or "kvm" or whatnot if it's a VM
[23:06:57] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[23:07:36] <ba> gloin: so perhaps `is_vm = getoutput(...).strip() != 'null'`
[23:07:39] <gloin> I need to read that and either keep the is_vm variable around for later use or set a value for it ("nonvm" perhaps) to address when I get to that part of the code.
[23:08:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[23:08:20] *** Joins: Skyz (~Skyz@user/skyz)
[23:08:52] <gloin> Working on a script to check new hosts into a netbox instance, one of the required flags is device_type, which is what I'm setting up here
[23:09:01] *** Parts: Skyz (~Skyz@user/skyz) ()
[23:09:21] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:09:23] <gloin> half tempted to just use perl + mojo to talk to the api but pynetbox isn't half bad and I needed to get around to this language someday
[23:09:24] <ba> Ah righto. Sounds good then, but maybe remove the `is_` prefix if you're keeping hold of the string
[23:09:34] <gloin> ba++
[23:09:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:11:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[23:11:57] *** Gustavo6046_ is now known as Gustavo6046
[23:12:15] *** Quits: pink_cthulhu (~pink@ip32.ip-54-36-158.eu) (Remote host closed the connection)
[23:13:39] *** Joins: Barones (~Barones@2804:48dc:8500:0:34e8:f7a4:e2a7:439c)
[23:14:53] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 255 seconds)
[23:15:16] *** Joins: runciter (~runciter@user/runciter)
[23:16:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:19:31] *** Joins: jinsun (~quassel@user/jinsun)
[23:19:57] *** Joins: akk (~akk@97-123-82-25.albq.qwest.net)
[23:25:30] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[23:25:48] *** Quits: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi) (Quit: Leaving)
[23:26:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:26:51] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:27:15] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[23:27:33] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[23:27:35] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[23:27:40] <SpeakerToMeat> Hello all.
[23:28:05] <SpeakerToMeat> Question, is there any "easy" way to have an executable python program be easy to run using a specific pyenv or pyenv-virtualenv ?
[23:28:20] <SpeakerToMeat> Some way to change the interpreter in the hashbang perhaps?
[23:28:35] <grym> SpeakerToMeat: install it in the venv/environment you want it to run in
[23:28:37] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:28:48] <SpeakerToMeat> hmm
[23:28:50] <SpeakerToMeat> no other way?
[23:28:51] <SnoopJ> SpeakerToMeat, `path/to/venv/bin/python3 thatprogram.py`
[23:29:00] <SpeakerToMeat> this program comes in a .deb
[23:29:06] <SpeakerToMeat> SnoopJ, I'll try
[23:29:08] <grym> SpeakerToMeat: then probably not
[23:29:17] <grym> lord knows what's going on inside a deb
[23:29:21] <SpeakerToMeat> SnoopJ, is that file a shim them, that sets things up?
[23:29:32] <SnoopJ> SpeakerToMeat, no, it's the interpreter.
[23:29:47] <SnoopJ> But it knows about its own site (packages installed in that venv etc.)
[23:29:55] <SpeakerToMeat> Ah neat, thanks
[23:30:05] <SpeakerToMeat> So all that is compiled inside the interpreter? nice to know
[23:30:15] <SpeakerToMeat> Or, it works with relative paths...
[23:30:17] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:30:22] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[23:30:30] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:30:38] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[23:30:39] <SnoopJ> it's not "compiled inside the interpreter," but yes, relative paths play a big role
[23:31:18] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:24] <SpeakerToMeat> Ok thanks
[23:31:25] *** Joins: vicfred (~vicfred@user/vicfred)
[23:32:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:33:11] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:33:20] *** Joins: abyss_ (~robbins@user/robbins)
[23:34:05] <SpeakerToMeat> Is this somehow akin or associated with how packages and modules relate to paths? or entirely different thing?
[23:34:58] *** Quits: leonardo (~leonardo@user/leonardo) (Ping timeout: 256 seconds)
[23:36:42] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[23:36:50] *** Joins: leonardo (~leonardo@user/leonardo)
[23:37:08] *** Joins: Warped (~Warped@user/warped)
[23:38:06] *** Joins: Hafat (~hafat@95.70.168.45)
[23:38:51] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 252 seconds)
[23:39:51] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[23:40:06] <SnoopJ> I don't really understand the question
[23:41:33] <SnoopJ> SpeakerToMeat, a Python interpreter has to do a bunch of stuff when it starts up before it runs user code. One of those things is figuring out where its "site" is, and a big part of that is "okay, I know where *I* am, so we'll look in [relative location] for packages when importing things"
[23:42:02] *** Joins: Auron (~Auron956@user/auron)
[23:42:09] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:42:28] <SnoopJ> But there are a lot of fiddly little details that go into it, so please understand that I'm trying to summarize here. The punchline is that if you point at an interpreter inside a venv, you should have access to packages installed in that venv without having to think about anything else.
[23:43:37] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[23:44:28] <mehwork> does it make sense to use a csv library if only need to create a csv file, not read one?
[23:44:37] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[23:44:42] *** Joins: audiocat (~audio@2603-8081-1800-00ad-12ef-0360-32b6-677f.res6.spectrum.com)
[23:44:48] <SnoopJ> mehwork, sure
[23:45:00] <grym> soitenly
[23:45:02] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:45:13] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[23:45:14] <grym> csv.writer is pretty nice
[23:45:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:45:28] <grym> and you'll footgun yourself less with quoting
[23:45:43] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:46:28] <SpeakerToMeat> And all the different little dialects csv can have
[23:46:42] *** Joins: Payam (~Payam@c-39bfe255.01-402-73746f25.bbcust.telenor.se)
[23:46:55] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[23:47:20] <mehwork> ok, didn't know it got that complicated. Was hoping to avoid a dependency since it was just a header and then newlines like foo,bar,baz
[23:47:54] <Payam> hi
[23:47:58] <SpeakerToMeat> isn't csv built in?
[23:48:03] <grym> mehwork: csv is more of a family resembance than it is a spec or a single format.
[23:48:09] <Payam> How do I check if geckodriver is in PATH from Python?
[23:48:09] <grym> mehwork: the csv module is stdlib, you have it already
[23:48:14] <SpeakerToMeat> standard lib rather
[23:48:29] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[23:48:36] <grym> SpeakerToMeat: yes
[23:48:38] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[23:48:50] <mehwork> ok thanks
[23:49:08] <grym> mehwork: https://docs.python.org/3/library/csv.html#writer-objects
[23:49:12] *** Quits: driib (~driib@185.195.233.169) (Quit: The Lounge - https://thelounge.chat)
[23:49:32] *** Joins: driib (~driib@185.195.233.169)
[23:50:22] *** Parts: timmcg (~timmcg@c-65-96-32-86.hsd1.me.comcast.net) (Leaving)
[23:51:18] *** Joins: srhm (~ascii@user/srhm)
[23:51:33] *** Joins: hanaan (~naan@user/naan)
[23:51:37] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[23:52:10] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[23:52:20] <BrenBarn> note that the `/path/to/env/python` stuff can break if you're using libs that have "heavier" components (e.g., shared system libs)
[23:52:21] <BrenBarn> I've found this especially notable with Qt
[23:52:35] <SnoopJ> mehwork, you can write your own if you want, but as pointed out, `csv` is in the stdlib anyway, it's not like you have to install anything to use it.
[23:53:18] <grym> BrenBarn: crossing those streams gets weird, yeah
[23:53:27] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:54:36] *** Joins: pnoud (~pnoud@user/pnoud)
[23:54:37] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:54:39] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[23:54:44] <mehwork> SnoopJ: what if i need to just return it as an object, rather than generate a file on disk? E.g., for a serverless upload to s3
[23:54:45] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:54:57] <SnoopJ> BrenBarn, can you say more? I don't think activating a venv does anything particularly special (i.e. LD_LIBRARY_PATH)
[23:55:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:55:30] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:55:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:55:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:56:02] <SnoopJ> mehwork, then you could give the `csv` library a file-like object that doesn't go to the disk (i.e. io.StringIO or io.BytesIO)
[23:56:03] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:56:14] <mehwork> ic
[23:57:23] <BrenBarn> SnoopJ: Right, which is the problem if you want to have different versions of Qt in different environments (as I recall)
[23:57:52] <grym> mehwork: +1 on io.StringIO
[23:58:48] <SnoopJ> BrenBarn, I'm not understanding why that problem would be different if you had activate the venv instead.
[23:59:05] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 252 seconds)
[23:59:47] <BrenBarn> yes, you're right
[23:59:57] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
