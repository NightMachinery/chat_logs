[00:01:05] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Remote host closed the connection)
[00:01:44] <oliv3> it's 25k in evaluate() as expected
[00:02:05] <A_Dragon> verify that its not full of zeros somewhere perhaps?
[00:02:11] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:02:25] *** Quits: transacid (~transacid@transacid.de) (Ping timeout: 250 seconds)
[00:02:43] <saml> benefits of graphql: you get self-documenting strict schema. you can compose multiple graphql services into one federated graphql service. Looks like benefits of RPC
[00:04:13] <oliv3> A_Dragon: the for loops dumps no Fitness < 10000
[00:04:24] *** Quits: dr0n (~nabromov@92.40.255.112.threembb.co.uk) (Remote host closed the connection)
[00:04:52] *** Quits: xav (~quassel@103-96-87-198.novaconnect.nz) (Ping timeout: 272 seconds)
[00:05:02] <A_Dragon> every iteration store the current number and check if next iteration its smaller than the previous
[00:05:06] <A_Dragon> if it is you had an overflow
[00:05:07] *** Joins: xav (~quassel@103-96-87-198.novaconnect.nz)
[00:08:10] *** Joins: transacid (~transacid@transacid.de)
[00:10:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:12:23] *** Joins: fikran (~fikran@user/fikran)
[00:12:59] <A_Dragon> if not then no idea
[00:17:18] <foobaz> maybe try something like: if newSum < oldSum { fmt.Printf("relevant variables") }
[00:17:18] *** Quits: s-video (~s-video@c-24-63-102-188.hsd1.ma.comcast.net) (Ping timeout: 258 seconds)
[00:19:34] <oliv3> newSum can happen to be < oldSum, like 0.95*oldSum, but not 0.6
[00:19:56] <A_Dragon> you said you were adding not multiplying
[00:20:16] <b0nn> https://groups.google.com/g/golang-nuts/c/cq4xjnh0-SY
[00:20:21] <A_Dragon> if you're adding order matters and everything is off
[00:20:22] *** Joins: dr0n (~minix@94.11.23.235)
[00:20:27] <A_Dragon> s/adding/multiplying
[00:20:30] <b0nn> 1.16.7 and 1.15.15 are (officially) released
[00:20:38] <A_Dragon> b0nn: yay
[00:21:38] <b0nn> It gets my award for weirdest release process of Go thus far (one of my bots detected a release/tag on github yesterday, but no release notes, and now they exist)
[00:23:25] <foobaz> sounds like a freebsd release, where the announcement comes ~3 days after the release is tagged and builds are posted
[00:27:11] <oliv3> A_Dragon: i'm not multiplying, i just say the value of the newSum should be >= oldSum in the good cases, but approx. 95% of it in the wrong cases
[00:27:39] <A_Dragon> if its a simple add then it should always be larger, no?
[00:27:47] <A_Dragon> as its adding numbers above 10k, as you said above
[00:27:54] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[00:28:01] <A_Dragon> thus the only way for it to smaller is for it to have overflowed
[00:28:02] *** Joins: agrest (~user@45.76.36.123)
[00:28:03] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1009) (Quit: ZNC 1.8.2 - https://znc.in)
[00:28:14] <oliv3> some values might decrease from on run to another
[00:28:22] <A_Dragon> doesnt matter
[00:28:25] <A_Dragon> its in the iteration
[00:28:36] <A_Dragon> you're checking if during the adding process, there was an overflow
[00:28:43] <A_Dragon> not between executions
[00:28:51] <b0nn> are the vals always +ve?
[00:29:04] *** Joins: mrig (~mrig@user/mrig)
[00:29:46] <b0nn> hrm, wasn't a similar question on this around a couple weeks back?
[00:29:54] *** Quits: fub (uid190747@id-190747.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:00] <A_Dragon> I dont recall
[00:30:21] <b0nn> dammit, public logging required :\
[00:30:43] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 258 seconds)
[00:32:21] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[00:32:42] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[00:33:36] *** Joins: s-video (~s-video@c-24-63-102-188.hsd1.ma.comcast.net)
[00:34:18] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[00:38:07] *** Joins: independent56 (~independe@148.122.187.2)
[00:40:54] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[00:41:41] *** Joins: independent56 (~independe@148.122.187.2)
[00:45:30] *** Quits: maxamillion (sid276220@ansible/staff/maxamillion) (Ping timeout: 240 seconds)
[00:45:40] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:45:54] *** Quits: eric_hill (sid323132@id-323132.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:45:57] *** Quits: hjmcnew (sid86092@id-86092.tinside.irccloud.com) (Ping timeout: 245 seconds)
[00:46:02] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (Ping timeout: 272 seconds)
[00:46:08] *** Quits: FunnyLookinHat (~FunnyLook@64.184.172.137) (Quit: Leaving)
[00:46:40] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (Ping timeout: 272 seconds)
[00:46:48] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:46:48] *** Quits: Anderson-D (sid146635@id-146635.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:47:56] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (Ping timeout: 272 seconds)
[00:48:21] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 258 seconds)
[00:48:36] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:50:31] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:59:02] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[01:00:08] *** Joins: mertyildiran (~mertyildi@88.231.68.206)
[01:00:16] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:00:37] *** Quits: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e) (Ping timeout: 258 seconds)
[01:01:08] <mertyildiran> Hi, how can I print all bytes in `bufio.Reader` in hexadecimal form?
[01:01:45] <A_Dragon> io.ReadAll and then %X with printf?
[01:02:34] *** Joins: eric_hill (sid323132@tinside.irccloud.com)
[01:02:38] <b0nn> hex.EncodeToString()
[01:02:57] *** Joins: sa (sid1055@tinside.irccloud.com)
[01:02:58] *** Joins: stigz (sid371747@tinside.irccloud.com)
[01:03:07] <A_Dragon> or hex.Dump if its for debugging
[01:04:24] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[01:04:37] <mertyildiran> A_Dragon: OK, io.ReadAll and %X solved it. Thank you so much!
[01:04:45] *** Joins: MrFantastik (~user@cpe-69-204-101-67.buffalo.res.rr.com)
[01:05:01] <A_Dragon> note that that might use a bunch of memory
[01:05:02] <MrFantastik> https://paste.debian.net/1206710/
[01:05:10] <MrFantastik> how could I make this more dry?
[01:05:11] <A_Dragon> and hex.EncodeToString will be far more efficient than printf
[01:05:20] <MrFantastik> as in Don't Repeat Yourself
[01:06:16] <MrFantastik> i was thinking about making parseDuration a function, but that function would still have to return an err and then I'm basically still doing a bunch of if err != nil
[01:06:18] <A_Dragon> for one, by using consts for those times
[01:06:33] <MrFantastik> is that just unavoidable?
[01:06:42] <mertyildiran> A_Dragon: OK `hex.EncodeToString` seems better for printing. Thanks again!
[01:07:34] <A_Dragon> use the Duration directly and work your way down, rather than doing it that way
[01:07:38] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 272 seconds)
[01:08:11] <A_Dragon> ohwait I misread how this worked
[01:08:38] <A_Dragon> I feel like reparsing this is a bit silly
[01:08:40] *** Joins: goldfish__ (~goldfish@user/goldfish)
[01:09:14] <A_Dragon> why are you reparsing this at all, tbh, use the time stuff directly
[01:10:01] <A_Dragon> day is time.Hour * 24, why go to seconds?, then week is day * 7, and so on
[01:10:24] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[01:10:32] <A_Dragon> then for your hours remaining you can do Duration - Hour
[01:10:34] <A_Dragon> or what have you
[01:10:49] *** Joins: independent56 (~independe@148.122.187.2)
[01:11:12] <b0nn> and the order is wrong - I'd be going year to hours
[01:11:21] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[01:11:31] <A_Dragon> ^
[01:11:34] <MrFantastik> idk why I was doing seconds
[01:11:38] <A_Dragon> that way you can subtract as you go
[01:11:43] <A_Dragon> rather than re-doing every time
[01:12:06] <b0nn> or modulus
[01:12:26] *** Joins: Anderson-D (sid146635@tinside.irccloud.com)
[01:12:52] <MrFantastik> oh I remember why i did seconds now
[01:12:54] <MrFantastik> 	day := time.Hour * 24
[01:12:54] <MrFantastik> 	daysleft := day - (day * sla)
[01:12:54] <MrFantastik>  
[01:13:04] <MrFantastik> this doesn't work, but does with seconds
[01:13:05] *** Joins: beeza (sid53872@tinside.irccloud.com)
[01:13:11] <A_Dragon> Dwhy doesnt it work?
[01:13:20] <A_Dragon> what _exactly_ are you expecting that to do?
[01:13:32] <MrFantastik> mismatched typed on day *sla
[01:13:41] <A_Dragon> what types
[01:13:43] <MrFantastik> day is a time.Duration and sla is float64
[01:14:03] <A_Dragon> convert day to a float64, unless you need fractional days I dont see the issue :D
[01:14:08] <MrFantastik> and im doing a replica of https://uptime.is/
[01:14:13] <MrFantastik> but for a slack bot
[01:14:44] <A_Dragon> durations native width is nanoseconds
[01:14:50] <A_Dragon> so, you can get fractionals from there
[01:14:54] *** Joins: nescafe1001 (sid211018@tinside.irccloud.com)
[01:15:11] <fikran> Hi all. I am learning testing. When I run `go test -v` on this repository, I am getting an error saying `cannot find main module, but found .git/config`. I do not understand this issue?
[01:15:16] <MrFantastik> if i convert day, I'm reparsing the duration again aren't i?
[01:15:35] <A_Dragon> no, Duration is a uint64 alias
[01:16:20] <MrFantastik> its not time.Duration -> float64 -> time.Duration ?
[01:16:22] <fikran> My test code is very simple.
[01:17:00] <A_Dragon> MrFantastik: when you get days its not quite a duration anymore because of your math, its just a really small number (unless you do some other stuff to get the number of nanos, IIRC
[01:17:07] <A_Dragon> but Im also half asleep
[01:17:15] <fikran> Can you only test against modules, but not the main package?
[01:17:15] <A_Dragon> fikran: try ./...
[01:17:33] <A_Dragon> you can test your main, it just cant find what you want to test
[01:17:40] <fikran> A_Dragon: pardon?
[01:17:49] <A_Dragon> fikran: go test ./...
[01:18:01] <fikran> Same error.
[01:18:14] <A_Dragon> whats the directory layout and where are your tests?
[01:18:19] <b0nn> hrm sounds like go test is looking for a go.mod
[01:18:23] <A_Dragon> ^
[01:18:24] <fikran> I am in a directory called goci
[01:18:34] <fikran> could there be a name collision?
[01:18:40] <A_Dragon> doubt it
[01:18:52] <fikran> /home/fikran/goci
[01:18:54] <b0nn> if you do not have a go.mod you might need to set GO111MODULES
[01:19:04] <fikran> I need to learn about go.mod
[01:19:16] <A_Dragon> go mod init your/package/path
[01:19:31] <A_Dragon> usually something like github.com/username/name
[01:19:50] <fikran> go: invalid module path "/home/fikran/goci/": is an absolute path
[01:20:11] <fikran> so, I need a go.mod file to run tests?
[01:21:05] <A_Dragon> No, but its not simple
[01:21:12] <fikran> so, how do...tests work?
[01:21:14] <A_Dragon> and reread what I said, its not quite the path as you think
[01:21:26] <A_Dragon> tests are executed with go test, read go help test :P
[01:21:35] <A_Dragon> but you probably want a module, check go help module
[01:21:47] <A_Dragon> sorry, mod*
[01:21:57] <A_Dragon> oh thats unhelpful
[01:22:01] <A_Dragon> but you do want a mod
[01:22:31] <fikran> okay...
[01:23:12] <fikran> I often need a full demonstration before documentation makes sense to me...so this'll be a really long process for me through go help module.
[01:23:35] <fikran> as in, I literally do not know what to do righ tnow.
[01:23:52] *** Joins: derfj (sid19429@tinside.irccloud.com)
[01:23:57] <A_Dragon> https://blog.golang.org/using-go-modules start with this
[01:24:04] <A_Dragon> if you need to know all about modules
[01:24:15] <A_Dragon> test compiles your binary with tests and runs the tests specified
[01:25:03] <fikran> Okay. I read this. Lets see if it talks about unit testing...
[01:25:15] <A_Dragon> It talks about modules
[01:25:24] <fikran> right! I meant to understand how that's relevant.
[01:25:42] <A_Dragon> the go compiler prefers to work with modules, and its the best practice to use them
[01:25:54] <A_Dragon> so you want a module so the go compiler knows things about your code
[01:25:58] <fikran> okay. Reading.
[01:26:17] <fikran> its just that this isn't my learning style. But I respect that beggers cannot be choosers :)
[01:26:31] <A_Dragon> I refuse to hand out commands to fix things, it doesnt teach
[01:26:52] <fikran> each person's style of learning is different!
[01:26:52] <A_Dragon> but if you have an explicit question I can help more?
[01:26:59] <fikran> well, let me go through this.
[01:27:24] <A_Dragon> its very dense for the gist of "use go mod init to create one, and go mod tidy to keep your dependencies up to date"
[01:27:46] <fikran> does that apply to a 1-file program that is using package main?
[01:27:57] <A_Dragon> yes
[01:30:23] <fikran> go: go.mod file not found in current directory or any parent directory; see 'go help modules'
[01:30:30] <fikran> That's when I run `go test` from the example hello.go file
[01:30:42] <A_Dragon>  from?
[01:30:42] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[01:30:53] <fikran> https://blog.golang.org/using-go-modules, the "$ go test" line
[01:31:07] <fikran> where it should PASS immediately, I presume
[01:31:45] <A_Dragon> a few things have changed from then as to how the go tools treat module-less directories, its expected to be broken
[01:31:57] <fikran> okay, I'm stuck then.
[01:32:04] <A_Dragon> follow one step further
[01:32:32] *** Joins: goldfish_ (~goldfish@user/goldfish)
[01:32:52] *** Quits: goldfish_ (~goldfish@user/goldfish) (Remote host closed the connection)
[01:33:42] *** Joins: goldfish (~goldfish@user/goldfish)
[01:34:40] *** Joins: maxamillion (sid276220@ansible/staff/maxamillion)
[01:34:49] <fikran> that worked.
[01:35:18] *** Quits: goldfish__ (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[01:35:21] <fikran> There's a problem here though
[01:35:29] <A_Dragon> hmm?
[01:35:34] <fikran> None of these examples cite the main() function or main package.
[01:35:43] <fikran> so, you cannot run any of this code, except as a test
[01:35:59] <A_Dragon> you cannot test main() directly. You can test functions in the main package but not main itself
[01:36:01] <b0nn> or as a library in another application
[01:36:25] <fikran> okay, but how do you...run code then?
[01:36:30] <b0nn> Erm, you /can/ test main(), it's just another function
[01:36:40] <fikran> wait, is the main file just "run this package"?
[01:36:40] <b0nn> But it's not really done
[01:36:54] <A_Dragon> fikran: rephrase please
[01:37:11] <fikran> ie, the architecture of go has shifted from having one-file programs to main.go which then runs `your-library`
[01:37:25] <A_Dragon> you can test the _package_ main fine
[01:37:37] <A_Dragon> you cannot use tests on the main function, ie, program entrypoint
[01:37:44] <fikran> right
[01:37:45] <A_Dragon> well, okay, you can, but it wont do much
[01:37:47] <fikran> okay....
[01:38:05] <A_Dragon> can you share what you're testing please
[01:38:08] <fikran> how do I test my goci.go example?
[01:38:10] <fikran> okay
[01:38:11] <A_Dragon> or, what your intent is to test
[01:38:14] <fikran> https://gitlab.com/khanzf/goci
[01:38:24] <A_Dragon> this requires a sign in
[01:38:28] <fikran> https://gitlab.com/khanzf/goci/-/blob/master/goci.go
[01:38:29] <fikran> ohhh
[01:38:29] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[01:38:29] <A_Dragon> please use play.golang.org
[01:38:31] <fikran> I'm sorry
[01:38:45] *** Joins: independent56 (~independe@148.122.187.2)
[01:39:40] <fikran> https://play.golang.org/p/iP0mr1cD4U8 and https://play.golang.org/p/VDQqmd_XP6w
[01:40:28] <A_Dragon> this should work fine?
[01:40:36] <fikran> this is my original code
[01:40:51] <A_Dragon> okay
[01:41:13] <A_Dragon> so if you create a module for this, and then run go test, does it not work?
[01:41:17] <A_Dragon> what about go test .?
[01:41:28] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[01:41:38] <A_Dragon> also the test file will want to be called main_test.go
[01:42:04] <fikran> I'm not certain...
[01:42:12] <fikran> unless you have a one-liner, I need to cool down
[01:42:17] <b0nn> t.Fatalf("Expected %s but got %s", expectedResult, actualResult) is wrong
[01:42:32] <b0nn> %s is for strrings, you mean %d or %v
[01:43:32] <fikran> fixed that..
[01:43:36] <A_Dragon> fikran: if I create a module and test this it tests fine for me?
[01:43:54] <A_Dragon> are you struggling with the module, or is another error happening?
[01:44:12] <fikran> I think the issue was that I didn't run `go mod init gitlab.com/khanzf/goci`
[01:44:17] <fikran> i fixed that goci_test.go issue
[01:44:29] <fikran> now I'm getting `testing: warning: no tests to run`
[01:44:40] *** Joins: hjmcnew (sid86092@tinside.irccloud.com)
[01:44:44] <A_Dragon> weird
[01:44:51] <A_Dragon> try add a . (or remove it)
[01:45:10] <b0nn> and paste a tree of the project (to a paste site)
[01:45:58] <A_Dragon> okay I see your same no tests
[01:46:00] <A_Dragon> interesting
[01:46:05] <fikran> https://dpaste.org/v17w
[01:46:35] <A_Dragon> oh thats it
[01:46:39] <A_Dragon> go test annoyances
[01:46:46] <A_Dragon> try rename Testtimestwo to TestTimesTwo
[01:46:47] *** Quits: LiftLeft (~LiftLeft@191.96.227.138) (Ping timeout: 245 seconds)
[01:47:00] <b0nn> TesTimestwo (your linter should complaint about Testtimestwo
[01:47:04] <b0nn> Oh, snap
[01:47:13] <A_Dragon> yeah I always forget that
[01:47:30] <A_Dragon> go test finds test funcs by name and sig, so if name doesnt match weird things (tm) happen
[01:47:40] <A_Dragon> your linter *should* complain
[01:47:42] <fikran> package annoyances is not in GOROOT (/snap/go/7954/src/annoyances)
[01:47:46] <A_Dragon> in fact, vet shouldnt complain
[01:47:48] <b0nn> https://play.golang.org/p/Va-g879o_0F
[01:48:28] <b0nn> Ugh playground really grinds my gears
[01:48:37] <A_Dragon> fikran: no mod I'd assume
[01:48:55] <A_Dragon> b0nn: it does have multi-file support if thats it
[01:48:56] <b0nn> There's a "tests" dropdown, but when you select it it rewrites the damned paste
[01:48:59] <A_Dragon> but also yes its irksome
[01:49:16] <A_Dragon> oh thats because thats just bad ux
[01:49:20] <A_Dragon> that dropdown is examples
[01:49:29] <A_Dragon> rather than specifying what to do
[01:49:52] <b0nn> so <C-a><C-X> my paste, select "Tests" then <C-a><C-v> and then run
[01:50:09] <A_Dragon> I dont think you need to select tests, Im assuming it does magic for it
[01:50:38] <b0nn> Tests will let you run ... tests
[01:50:46] <b0nn> No main required
[01:51:03] <fikran> what do I do?
[01:51:47] <A_Dragon> b0nn: it doesnt change what the playground does, its just picking a different example
[01:52:03] <A_Dragon> you can write a test in there on your own and it'll still test it
[01:52:09] <fikran> meaning, what is causing this to not find any tests?
[01:52:17] <A_Dragon> which error?
[01:52:26] <A_Dragon> the goroot one?
[01:52:32] <fikran> i am being told there are no tests to run
[01:52:45] <b0nn> Oh, ok
[01:52:45] <A_Dragon> did you update the function name to be TestTimesTwo?
[01:53:05] <fikran> ohh, I missed that mesasge. I was reading something. I apologize.
[01:53:18] <A_Dragon> its alright, it happens
[01:53:47] <fikran> that was it!
[01:53:54] <fikran> so, everything to be tested must be exportable
[01:54:09] <A_Dragon> both exported _and_ following a specific format
[01:54:16] <A_Dragon> check `go help testfunc` it explains the format
[01:54:36] <fikran> okay...now that I have all the pieces...I think this'll make more sense to me
[01:54:38] <fikran> this documentation
[01:54:41] <fikran> I appreciate it A_Dragon
[01:54:50] <A_Dragon> sorry I was struggling to find what I wanted
[01:56:58] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 240 seconds)
[01:57:15] <A_Dragon> also sorry fikran, I didnt ask the right questions to spot what you needed
[01:57:30] <A_Dragon> Im apparently too half asleep to do help at this point :D Im gonna head to be here in a min
[02:00:31] *** Joins: LiftLeft (~LiftLeft@191.96.227.27)
[02:03:46] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:04:00] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:06:36] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (Ping timeout: 255 seconds)
[02:07:42] *** rcernin is now known as rcernin|brb
[02:09:52] *** Joins: solar_sea (~solar_sea@user/solar-sea/x-3088627)
[02:10:14] *** Joins: toretto_ (~0xe3b7@45.15.16.60)
[02:11:48] *** Quits: transacid (~transacid@transacid.de) (Ping timeout: 276 seconds)
[02:12:44] *** Joins: L1Cafe (~L1Cafe@user/l1cafe)
[02:12:58] *** Quits: toretto (~0xe3b7@user/toretto) (Ping timeout: 240 seconds)
[02:13:27] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 258 seconds)
[02:13:29] *** Joins: transacid (~transacid@transacid.de)
[02:16:47] *** Quits: DM4307842 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[02:17:24] *** Quits: zwr (~zwr@2804:d45:b966:fb00:6deb:684d:86d0:6090) (Remote host closed the connection)
[02:18:55] *** Quits: transacid (~transacid@transacid.de) (Ping timeout: 250 seconds)
[02:19:56] *** Quits: Memory (~Wei@143.198.78.64) (Quit: leaving)
[02:19:57] *** Joins: transacid (~transacid@transacid.de)
[02:19:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:22:03] *** Joins: fikran (~fikran@user/fikran)
[02:22:51] *** Quits: rcernin|brb (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 276 seconds)
[02:25:12] *** Quits: sizeof_void34 (~Thunderbi@109.252.75.112) (Quit: sizeof_void34)
[02:28:31] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:28:48] *** Joins: arcatech (~arcatech@user/arcatech)
[02:29:33] *** Joins: DM4307842 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[02:30:50] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:31:33] *** Quits: DM4307842 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Client Quit)
[02:35:00] *** Joins: DM4307842 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[02:39:28] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Ping timeout: 272 seconds)
[02:39:59] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[02:40:27] *** Joins: goldfish (~goldfish@user/goldfish)
[02:44:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 276 seconds)
[02:49:07] *** Joins: rcernin|brb (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:50:42] *** Quits: albertito (~nil@37.228.214.223) (Ping timeout: 255 seconds)
[02:50:55] *** Joins: albertito (~nil@37.228.204.251)
[02:51:16] *** Joins: goldfish_ (~goldfish@user/goldfish)
[02:51:28] *** rcernin|brb is now known as rcernin
[02:51:40] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:52:39] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[02:53:42] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[02:55:15] *** Joins: meinside_ (uid24933@id-24933.brockwell.irccloud.com)
[02:56:46] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[02:58:44] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[02:58:47] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[02:58:59] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:59:17] *** Joins: jinie (~jimmy@188.114.173.37)
[02:59:27] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[02:59:54] *** Quits: s-video (~s-video@c-24-63-102-188.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[03:00:38] *** Joins: Guest34 (~Guest34@2406:3003:2006:447e:fc93:a477:b13c:4b43)
[03:01:39] *** Joins: jinie (~jimmy@188.114.173.37)
[03:02:19] *** Joins: s-video (~s-video@c-24-63-102-188.hsd1.nh.comcast.net)
[03:03:07] *** Quits: Guest34 (~Guest34@2406:3003:2006:447e:fc93:a477:b13c:4b43) (Client Quit)
[03:03:31] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[03:05:45] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 276 seconds)
[03:10:10] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 240 seconds)
[03:10:14] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:16:30] *** Quits: dr0n (~minix@94.11.23.235) (Ping timeout: 252 seconds)
[03:19:28] *** Quits: solar_sea (~solar_sea@user/solar-sea/x-3088627) (Read error: Connection reset by peer)
[03:21:17] *** Joins: goldfish__ (~goldfish@user/goldfish)
[03:23:08] *** Quits: goldfish__ (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[03:24:08] *** Joins: goldfish__ (~goldfish@user/goldfish)
[03:24:26] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 272 seconds)
[03:26:34] *** Quits: prophet60091_ (~prophet60@87.123.159.156) (Ping timeout: 240 seconds)
[03:28:19] *** Quits: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc) (Quit: ZNC 1.8.2 - https://znc.in)
[03:28:35] *** Quits: goldfish__ (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[03:30:06] *** Joins: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc)
[03:30:55] *** Quits: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc) (Client Quit)
[03:31:15] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:41] *** Joins: Torr (~Torr@user/torr)
[03:32:27] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:55] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:56] *** Quits: s-video (~s-video@c-24-63-102-188.hsd1.nh.comcast.net) (Ping timeout: 272 seconds)
[03:38:21] *** Joins: mjorgensen (~mjorgense@splat.soy)
[03:44:36] *** Joins: goldfish (~goldfish@user/goldfish)
[03:46:22] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:46:48] *** Joins: goldfish (~goldfish@user/goldfish)
[03:47:18] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[03:47:35] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[03:49:50] *** Joins: LSD (~LSD@2.lsd.systems)
[03:50:25] *** Joins: toretto (~0xe3b7@ca1-1.azirevpn.net)
[03:51:06] *** Quits: toretto_ (~0xe3b7@45.15.16.60) (Ping timeout: 240 seconds)
[03:51:18] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:51:44] *** Joins: goldfish (~goldfish@user/goldfish)
[03:52:03] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:54:48] *** Joins: goldfish (~goldfish@user/goldfish)
[03:55:51] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:58:24] *** Quits: mhorn (~textual@134.134.139.78) (Quit: Textual IRC Client: www.textualapp.com)
[04:00:00] *** Joins: s-video (~s-video@2601:190:c300:3a50:1d77:22e8:29ce:b703)
[04:02:36] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 244 seconds)
[04:02:57] *** Joins: ninjin (~ninjin@user/ninjin)
[04:04:05] *** Quits: toretto (~0xe3b7@ca1-1.azirevpn.net) (Changing host)
[04:04:05] *** Joins: toretto (~0xe3b7@user/toretto)
[04:07:17] *** Joins: toretto_ (~0xe3b7@45.15.16.60)
[04:10:40] *** Quits: toretto (~0xe3b7@user/toretto) (Ping timeout: 272 seconds)
[04:19:57] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Ping timeout: 258 seconds)
[04:21:34] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:25:56] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[04:28:38] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[04:30:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 272 seconds)
[04:31:48] *** Joins: fikran (~fikran@user/fikran)
[04:35:40] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[04:38:20] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:34] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:51:36] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[04:52:08] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:54:04] *** Quits: revolve (~u0_a227@82-132-247-204.dab.02.net) (Ping timeout: 258 seconds)
[04:55:06] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1005.inf6.spectrum.com)
[04:55:27] *** Quits: DM4307842 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[04:55:55] *** Joins: revolve (~u0_a227@82-132-246-231.dab.02.net)
[04:56:50] *** Joins: bmojsej (~bmojsej@88.212.52.252)
[04:59:08] *** Joins: DM4307842 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[05:07:03] *** Joins: toretto (~0xe3b7@ca1-1.azirevpn.net)
[05:07:09] *** Quits: toretto (~0xe3b7@ca1-1.azirevpn.net) (Client Quit)
[05:09:42] *** Quits: toretto_ (~0xe3b7@45.15.16.60) (Ping timeout: 245 seconds)
[05:10:53] *** Joins: JimmyEatWorld (~JimmyEatW@89.45.224.32)
[05:11:36] *** Quits: JimmyEatWorld (~JimmyEatW@89.45.224.32) (Client Quit)
[05:23:29] *** Joins: gggp (~gggp@123.113.188.14)
[05:27:35] <Kyros> Is there some in memory buffer that satisfies io.Writer?
[05:28:20] <seebs> bytes.Buffer
[05:28:24] <Kyros> thank you
[05:28:45] <fizzie> And strings.Builder, sometimes.
[05:29:05] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:29:51] *** Joins: darkapex_ (~darkapex@user/darkapex)
[05:30:25] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[05:30:39] <rewt> sometimes?
[05:31:09] <fizzie> As in, "sometimes you might use that", not "sometimes satisfies io.Writer".
[05:31:14] *** Joins: darkapex (~darkapex@user/darkapex)
[05:31:17] <rewt> ah
[05:31:18] <fizzie> Not sure if there's really any particular situation where a strings.Builder would be better than a bytes.Buffer though. AFAICT it's more or less a subset.
[05:34:42] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 258 seconds)
[05:35:52] <fizzie> Huh, hadn't realized if you have a b []byte and an s string, you can do `append(b, s...)` without having to write `append(b, []byte(s)...)`. VS Code keeps overzealously autocompleting the latter.
[05:40:52] <rewt> what happens when that string contains non-ascii characters?  the utf-8 bytes are appended to b?
[05:42:21] <foobaz> yes, because strings in go are utf-8
[05:43:52] *** Quits: rewt (~default@user/rewt) (Remote host closed the connection)
[05:44:17] *** Joins: gggp_ (~gggp@123.113.188.14)
[05:45:50] *** Joins: rewt (~default@user/rewt)
[05:48:12] *** Quits: gggp (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[05:49:59] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[05:52:56] <fizzie> Not all strings are UTF-8. In the sense that you can, if you want to, put arbitrary bytes in the `string`.
[05:53:17] *** Joins: neurocyte0 (~neurocyte@185.238.253.171)
[05:53:18] *** Quits: neurocyte0 (~neurocyte@185.238.253.171) (Changing host)
[05:53:18] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[05:54:20] <bpalmer> indeed, this is rather likely to happen, if you aren't validating your inputs and being careful about encodings.
[05:55:47] *** Quits: rewt (~default@user/rewt) (Remote host closed the connection)
[05:56:56] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 258 seconds)
[05:56:56] *** neurocyte0 is now known as neurocyte
[05:57:29] *** Joins: rewt (~default@user/rewt)
[06:00:16] *** Quits: rewt (~default@user/rewt) (Killed (NickServ (GHOST command used by rewt__)))
[06:00:31] *** Joins: rewt (~default@user/rewt)
[06:02:10] *** Quits: s-video (~s-video@2601:190:c300:3a50:1d77:22e8:29ce:b703) (Ping timeout: 240 seconds)
[06:09:01] *** Joins: miasuji (~miasuji@184-96-255-85.hlrn.qwest.net)
[06:11:22] *** Joins: kiril (~kiril@85.91.153.163)
[06:15:36] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[06:26:51] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[06:28:34] *** Joins: GJdan (~quassel@107-190-25-75.cpe.teksavvy.com)
[06:29:12] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[06:29:33] *** Joins: codebam (~codebam@user/codebam)
[06:40:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 276 seconds)
[06:40:26] <newton> I'm ranging over a channel `for p := range c` -- is there a way I can check a ctx.Done() each loop to see if I should break?
[06:41:33] *** Joins: fikran (~fikran@user/fikran)
[06:43:56] *** Joins: pepee (~user@user/pepee)
[06:47:01] *** Quits: miasuji (~miasuji@184-96-255-85.hlrn.qwest.net) (Quit: Leaving)
[06:48:46] *** Joins: miasuji (~miasuji@184-96-255-85.hlrn.qwest.net)
[06:48:57] *** Quits: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:49:09] <fizzie> You *can* do that with a select statement that contains a receive from the channel and a default clause; then it will never block. But then it won't break immediately, only after you receive something from the `c` channel.
[06:50:04] <newton> thanks, I'll try that out :)
[06:52:43] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[06:56:20] *** Quits: miasuji (~miasuji@184-96-255-85.hlrn.qwest.net) (Quit: Leaving)
[07:01:40] *** Quits: mertyildiran (~mertyildi@88.231.68.206) (Ping timeout: 272 seconds)
[07:05:36] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1005.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[07:07:32] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[07:08:13] *** Joins: darkapex (~darkapex@user/darkapex)
[07:10:13] *** Quits: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:15:21] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 276 seconds)
[07:17:48] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[07:25:15] *** Joins: andlabs (~andlabs@172.58.230.243)
[07:25:58] *** Joins: andlabs_ (~andlabs@2607:fb90:f806:705c:3c1a:eac8:a3bd:9b7d)
[07:29:22] *** Quits: andlabs (~andlabs@172.58.230.243) (Ping timeout: 240 seconds)
[07:30:28] *** Quits: andlabs_ (~andlabs@2607:fb90:f806:705c:3c1a:eac8:a3bd:9b7d) (Ping timeout: 258 seconds)
[07:31:49] *** Joins: andlabs (~andlabs@2607:fb90:f803:5c5:c47f:1c34:9ac0:e160)
[07:32:46] *** Quits: bmojsej (~bmojsej@88.212.52.252) (Ping timeout: 258 seconds)
[07:35:10] *** Quits: m33k (dexter@user/m33k) (Quit: WeeChat 2.3)
[07:35:54] *** Quits: andlabs (~andlabs@2607:fb90:f803:5c5:c47f:1c34:9ac0:e160) (Ping timeout: 240 seconds)
[07:36:15] *** Joins: andlabs (~andlabs@172.58.227.73)
[07:39:04] *** Joins: andlabs_ (~andlabs@2607:fb90:f805:a655:b1b5:7a8e:eceb:9092)
[07:40:49] *** Quits: andlabs (~andlabs@172.58.227.73) (Ping timeout: 258 seconds)
[07:43:06] *** Quits: andlabs_ (~andlabs@2607:fb90:f805:a655:b1b5:7a8e:eceb:9092) (Ping timeout: 240 seconds)
[07:44:46] *** Joins: andlabs (~andlabs@172.58.227.123)
[07:56:15] *** Quits: andlabs (~andlabs@172.58.227.123) (Read error: Connection reset by peer)
[07:58:40] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 272 seconds)
[08:03:59] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[08:04:49] *** Quits: alyx (alyx@atheme/alyx) (Quit: AAAAAAAAA)
[08:07:43] <nevivurn> newton: if you're already using a channel anyway, you could do something like https://play.golang.org/p/WO630O7JA-k to avoid the potential issue mentioned above
[08:33:45] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[08:34:45] *** Quits: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se) (Quit: ZNC - https://znc.in)
[08:39:20] *** Joins: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se)
[08:47:47] *** Joins: fikran_ (~fikran@user/fikran)
[08:49:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:55:36] *** Joins: independent56 (~independe@148.122.187.2)
[09:02:21] *** Quits: independent56 (~independe@148.122.187.2) (Ping timeout: 250 seconds)
[09:02:55] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[09:04:06] *** Joins: marcel (~marcel@user/marcel)
[09:09:06] *** Joins: oxum (~oxum@136.185.191.220)
[09:11:48] *** Quits: oxum (~oxum@136.185.191.220) (Remote host closed the connection)
[09:30:36] *** Joins: independent56 (~independe@148.122.187.2)
[09:32:15] *** Quits: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:36:54] *** Joins: hikhvar79607380 (~thelounge@x4db511fa.dyn.telefonica.de)
[09:37:06] *** Quits: agrest (~user@45.76.36.123) (Ping timeout: 252 seconds)
[09:39:57] *** Joins: oxum (~oxum@136.185.191.220)
[09:40:47] *** Quits: oxum (~oxum@136.185.191.220) (Remote host closed the connection)
[09:42:29] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[09:42:42] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[09:42:58] *** Joins: darkapex (~darkapex@user/darkapex)
[09:52:12] *** Quits: meinside_ (uid24933@id-24933.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[09:53:58] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[09:54:07] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:54:40] *** Quits: kaleido (~adam@user/kaleido) (Remote host closed the connection)
[09:54:55] *** Joins: kaleido (~adam@havokworks.io)
[09:54:55] *** Quits: kaleido (~adam@havokworks.io) (Changing host)
[09:54:55] *** Joins: kaleido (~adam@user/kaleido)
[09:55:19] *** Joins: cim (~cim@205.185.117.110)
[09:58:54] *** Joins: shka (~herr@109.231.62.239)
[10:00:57] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[10:03:29] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:04:18] *** Joins: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e)
[10:06:20] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e50f:b3fe:6fb0:23af)
[10:06:29] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[10:07:48] *** Joins: frost (~frost@59.71.241.179)
[10:11:46] *** Joins: s-video (~s-video@c-24-63-102-188.hsd1.ma.comcast.net)
[10:12:17] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e50f:b3fe:6fb0:23af) (Quit: Leaving)
[10:12:30] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[10:12:39] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e50f:b3fe:6fb0:23af)
[10:12:49] *** Joins: independent56 (~independe@148.122.187.2)
[10:15:30] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 240 seconds)
[10:17:06] *** Quits: jybs (~james@110-175-225-162.static.tpgi.com.au) (Ping timeout: 240 seconds)
[10:17:12] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[10:17:57] *** Joins: jybs (~james@110-175-225-162.static.tpgi.com.au)
[10:21:29] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[10:22:11] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:22:46] *** Joins: independent56 (~independe@148.122.187.2)
[10:22:46] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:24:03] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[10:26:38] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[10:26:46] *** Joins: independent56 (~independe@148.122.187.2)
[10:27:57] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:28:25] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[10:29:11] *** Joins: oxum (~oxum@136.185.191.220)
[10:29:16] *** Joins: independent56 (~independe@148.122.187.2)
[10:29:58] *** Joins: c10l (~c10l@89.34.167.207)
[10:34:28] *** Quits: gggp_ (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[10:34:58] *** Quits: xav (~quassel@103-96-87-198.novaconnect.nz) (Ping timeout: 240 seconds)
[10:36:51] *** Quits: oxum (~oxum@136.185.191.220) (Remote host closed the connection)
[10:37:09] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 258 seconds)
[10:39:06] *** Quits: independent56 (~independe@148.122.187.2) (Ping timeout: 240 seconds)
[10:39:24] *** Joins: jespada (~jespada@90.254.247.46)
[10:39:34] *** Joins: xav (~quassel@103-96-87-198.novaconnect.nz)
[10:41:30] *** Quits: LtHummus_ (~lthummus@97-126-113-251.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:42:39] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[10:48:17] <newton> nevivurn, is the only way to break outer loop in your example to use a label?
[10:50:19] *** Joins: independent56 (~independe@148.122.187.2)
[10:50:39] *** Joins: iateadonut (~dan@121.177.17.154)
[10:51:53] <iateadonut> https://play.golang.org/p/dX6dOzWS-Gx - the returned error here satisfies the os.ErrNotExist interface.  how could i have known that without having looked it up?
[10:52:27] *** Joins: oxum (~oxum@136.185.191.220)
[10:54:06] <KirkMcDonald> iateadonut: I'm not sure what you're asking.
[10:55:01] *** Quits: fikran_ (~fikran@user/fikran) (Ping timeout: 250 seconds)
[10:55:38] *** Joins: chripell (~chripell@109.255.230.3)
[10:56:32] *** Quits: independent56 (~independe@148.122.187.2) (Ping timeout: 256 seconds)
[10:57:05] *** Joins: fikran_ (~fikran@user/fikran)
[10:57:05] *** Quits: oxum (~oxum@136.185.191.220) (Ping timeout: 258 seconds)
[10:58:35] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[10:58:43] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[10:58:59] <iateadonut> i put the question up here: https://stackoverflow.com/questions/68677030/golang-how-can-i-get-the-error-code-os-errnotexist-from-the-error-itself
[10:59:48] <iateadonut> the type of error when i do fmt.Printf("%T\n", err) is *fs.PathError
[11:00:07] <iateadonut> but errors.Is(err, os.ErrNotExist) returns true
[11:01:07] <iateadonut> so how could I have found out the specific error type "os.ErrNotExist" from the variable 'err'?
[11:01:08] *** Joins: frost (~frost@59.71.241.179)
[11:01:35] <ikke> "Is unwraps its first argument sequentially looking for an error that matches the second. It reports whether it finds a match. It should be used in preference to simple equality checks"
[11:01:36] <KirkMcDonald> You couldn't, not as such. os.ErrNotExist isn't a type, for one thing.
[11:02:02] <KirkMcDonald> But you could just print the error, and it'd say something relevant.
[11:02:05] <ikke> So, it does not check for an interface
[11:02:16] <iateadonut> ikke, i saw that and did errors.Unwrap() for each error, and never found os.ErrNotExist
[11:03:01] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[11:03:09] *** Quits: LawnGnome (~LawnGnome@user/lawngnome) (Quit: ZNC 1.8.2 - https://znc.in)
[11:03:31] *** Joins: zkanda (~zkanda@box.makean.art)
[11:03:36] *** Quits: s-video (~s-video@c-24-63-102-188.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[11:03:49] *** Joins: LawnGnome (~LawnGnome@user/lawngnome)
[11:05:22] <iateadonut> KirkMcDonals, ikke, thanks.
[11:05:22] *** Joins: independent56 (~independe@148.122.187.2)
[11:08:56] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:09:01] *** Joins: prophet60091_ (~prophet60@87.123.159.156)
[11:09:11] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[11:09:35] *** Joins: oxum (~oxum@136.185.191.220)
[11:09:44] *** Quits: LiftLeft (~LiftLeft@191.96.227.27) (Ping timeout: 258 seconds)
[11:12:48] *** Quits: xav (~quassel@103-96-87-198.novaconnect.nz) (Ping timeout: 258 seconds)
[11:13:27] *** Joins: agrest (~user@45.76.36.123)
[11:14:36] *** Joins: xav (~quassel@103-96-86-35.novaconnect.nz)
[11:14:43] *** Quits: oxum (~oxum@136.185.191.220) (Ping timeout: 258 seconds)
[11:15:10] *** Joins: xsteadfastx (~marv@94.31.100.46)
[11:15:43] *** Quits: mdel (~mdel@user/mdel) (Quit: The Lounge - https://thelounge.chat)
[11:16:32] *** Joins: mdel (~mdel@user/mdel)
[11:17:05] <iateadonut> so there is no way to have found out from the error itself, that it Is also of type os.ErrNotExist?
[11:17:28] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:18:24] <ikke> What I see so far is that os.ErrNotExist is an alias for fs.ErrNotExist
[11:18:54] <ikke> But I do not see a relation between fs.ErrNotExist and fs.PathError
[11:20:44] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[11:23:01] <iateadonut> thanks.  fmt.Printf("%T\n", errors.Unwrap(errors.Unwrap(err))) yields <nil> ; fmt.Printf("%T\n", errors.Unwrap(err)) yields syscall.Errno , by the way
[11:23:55] *** Quits: revolve (~u0_a227@82-132-246-231.dab.02.net) (Read error: Connection reset by peer)
[11:24:51] *** Joins: oxum (~oxum@122.181.47.37)
[11:25:49] *** Joins: revolve (~u0_a227@82-132-245-120.dab.02.net)
[11:26:08] *** Joins: gggp_ (~gggp@60.10.23.170)
[11:26:20] *** Quits: xav (~quassel@103-96-86-35.novaconnect.nz) (Ping timeout: 268 seconds)
[11:27:16] *** Joins: xav (~quassel@103-96-86-247.novaconnect.nz)
[11:28:58] *** Joins: mrig (~mrig@user/mrig)
[11:30:06] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:30:43] <nevivurn> newton: sorry, looked away for a while. Yes, it could be a break to a label, or you could try breaking out the loop to its own function and return instead if that feels more readable.
[11:31:29] *** Quits: oxum (~oxum@122.181.47.37) (Remote host closed the connection)
[11:32:30] *** Joins: oxum (~oxum@122.181.47.37)
[11:33:39] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:36:41] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[11:36:56] *** Quits: oxum (~oxum@122.181.47.37) (Remote host closed the connection)
[11:39:26] *** Joins: oxum (~oxum@122.181.47.37)
[11:39:34] *** Joins: absc (~absc@81.31.144.178)
[11:42:02] *** Quits: xav (~quassel@103-96-86-247.novaconnect.nz) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:44:10] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Ping timeout: 258 seconds)
[11:45:21] *** Joins: ewintr (~ewintr@89.205.136.251)
[11:45:56] *** Quits: oxum (~oxum@122.181.47.37) (Remote host closed the connection)
[11:46:08] *** Joins: oxum (~oxum@122.181.47.37)
[11:46:47] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[11:49:58] *** Joins: sizeof_void34 (~Thunderbi@109.252.75.112)
[11:50:16] *** Quits: oxum (~oxum@122.181.47.37) (Remote host closed the connection)
[11:59:31] *** Joins: oxum (~oxum@122.181.47.37)
[12:04:52] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[12:07:50] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:09:06] *** Joins: neurocyte (~neurocyte@185.238.253.171)
[12:09:06] *** Quits: neurocyte (~neurocyte@185.238.253.171) (Changing host)
[12:09:06] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[12:10:34] *** Quits: oxum (~oxum@122.181.47.37) (Remote host closed the connection)
[12:13:22] *** Quits: MrFantastik (~user@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[12:15:16] *** Joins: Giedrius (~giedrius@5.133.65.65)
[12:16:36] *** Joins: oxum (~oxum@106.203.207.2)
[12:17:48] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[12:20:33] *** Joins: oxum (~oxum@106.203.207.2)
[12:25:41] *** Joins: dr0n (~dr0n@94.11.23.235)
[12:28:39] *** Joins: minix (~nabromov@92.40.255.112.threembb.co.uk)
[12:35:32] *** Joins: jcajka (~jcajka@2a02:8308:a106:d100::2196)
[12:36:36] *** Joins: zwr (~zwr@2804:d45:b966:fb00:b9eb:e624:9dd:b60f)
[12:37:20] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2)
[12:50:36] *** Joins: menace (~someone@2001:a61:34ed:d601:e947:75be:23b8:1949)
[12:50:57] *** Quits: menace (~someone@2001:a61:34ed:d601:e947:75be:23b8:1949) (Changing host)
[12:50:57] *** Joins: menace (~someone@user/menace)
[12:51:01] *** menace is now known as Deknos
[12:56:41] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 258 seconds)
[12:56:58] *** Quits: f8l12 (~f8l12@191.96.150.66) (Ping timeout: 240 seconds)
[13:04:34] *** Quits: fikran_ (~fikran@user/fikran) (Ping timeout: 272 seconds)
[13:06:24] *** Joins: fikran_ (~fikran@user/fikran)
[13:06:42] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[13:06:56] *** fikran_ is now known as fikran
[13:13:31] *** Joins: gzj (~GZJ0X@192.243.120.171.16clouds.com)
[13:16:34] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[13:17:23] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[13:17:29] *** Joins: gggp__ (~gggp@60.10.23.170)
[13:17:54] *** Joins: darkapex (~darkapex@user/darkapex)
[13:18:09] *** Quits: gzj (~GZJ0X@192.243.120.171.16clouds.com) (Ping timeout: 258 seconds)
[13:18:32] *** Quits: prophet60091_ (~prophet60@87.123.159.156) (Ping timeout: 258 seconds)
[13:20:57] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[13:22:20] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[13:22:26] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[13:22:26] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[13:30:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 272 seconds)
[13:31:57] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[13:32:40] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[13:35:36] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:36:51] *** Joins: darkapex (~darkapex@user/darkapex)
[13:37:45] *** Joins: mei (~mei@user/mei)
[13:39:13] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Quit: Leaving)
[13:42:50] *** Quits: xsteadfastx (~marv@94.31.100.46) (Quit: WeeChat 3.2)
[13:43:08] *** Joins: xsteadfastx (~marv@94.31.100.46)
[13:43:12] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 272 seconds)
[13:45:02] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[13:45:43] *** Parts: xsteadfastx (~marv@94.31.100.46) ()
[13:49:42] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[13:50:27] *** Joins: gggp_ (~gggp@123.113.176.18)
[13:53:54] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[13:53:59] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Ping timeout: 250 seconds)
[13:57:38] *** Quits: zwr (~zwr@2804:d45:b966:fb00:b9eb:e624:9dd:b60f) (Ping timeout: 258 seconds)
[14:00:21] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[14:00:34] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[14:01:19] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[14:04:06] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[14:04:20] <A_Dragon> iateadonut: Is calls Unwrap recursively.
[14:04:43] * A_Dragon considers a looped wrapped error
[14:04:49] <A_Dragon> no thats silly let me stop that
[14:05:21] <A_Dragon> fizzie: strings in go are and arent utf8
[14:05:37] <A_Dragon> they're a byte slice really, but range and some other things treats them specially
[14:05:55] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Quit: ZNC 1.8.2 - https://znc.in)
[14:08:22] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[14:14:01] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[14:15:07] <iateadonut> A_Dragon, yeah, i unwrapped until there were no errors left, and i never saw os.ErrNotExist
[14:15:24] <A_Dragon> iateadonut: did you use %T?
[14:16:06] <iateadonut> yeah
[14:16:24] <fizzie> You don't need to see the literal os.ErrNotExist type in the chain in order for errors.Is(x, os.ErrNotExist) to be true, if any type in the chain implements the Is(error) method and returns true for that type.
[14:16:39] <A_Dragon> ^ +
[14:17:06] <A_Dragon> IIRC those are interfaces as well
[14:17:08] <fizzie> https://pkg.go.dev/errors#Is "An error type might provide an Is method so it can be treated as equivalent to an existing error. For example, if MyError defines `func (m MyError) Is(target error) bool { return target == fs.ErrExist }` then Is(MyError{}, fs.ErrExist) returns true. See syscall.Errno.Is for an example in the standard library."
[14:17:14] <A_Dragon> oh no they're not
[14:17:34] <A_Dragon> NotExist is an oserr.ErrNotExist, oserr.ErrNotExist is a errors.New()
[14:17:37] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[14:18:21] <iateadonut> fizzie, if you put something to that affect on my stackoverflow question - https://stackoverflow.com/questions/68677030/how-can-i-get-the-error-code-os-errnotexist-from-the-error-itself - i'll accept it as the answer
[14:19:01] <A_Dragon> you know what my biggest gripe with errors.Is is?
[14:19:20] *** Joins: zwr (~zwr@2804:d45:b966:fb00:b8b0:daa2:aad7:31ac)
[14:20:08] <iateadonut> geez, so i would have to go down to the go source code to understand what's going on there.  that error probably defines func Is...
[14:20:37] <A_Dragon> iateadonut: no, you dont
[14:20:46] <A_Dragon> what exactly are you trying to do?
[14:21:31] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[14:21:42] <iateadonut> anyone suggest a package/framework that generates and authenticates API keys, and also does let's encrypt certs automatically?
[14:22:06] <A_Dragon> iateadonut: https://pkg.go.dev/golang.org/x/crypto/acme/autocert
[14:22:17] <iateadonut> A_Dragon, i just want to know why errors.Is(err, os.ErrNotExist) returns true, and how i could have known that.  i think fizzie told me.
[14:22:19] <A_Dragon> for the cert half, is
[14:22:33] <A_Dragon> iateadonut: there are any number of reasons, don't worry about why, its correct :D
[14:22:50] <A_Dragon> its PROBABLY the underlying error implementing Is(error) bool
[14:22:53] *** Joins: Atque (~Atque@user/atque)
[14:23:18] <A_Dragon> `if x, ok := err.(interface{ Is(error) bool }); ok && x.Is(target) { return true }` I wish that was an exported interface -_-
[14:23:29] <fizzie> iateadonut: Posted something in there, though I don't really do SO.
[14:23:49] <iateadonut> for what it's worth, i was a C student in math until i took calculus and realized i had to do the hard problems first.  i'm a go beginner but can't stand that i can't understand this.
[14:24:03] <A_Dragon> ah okay
[14:24:07] <iateadonut> after i look at the source code, though, if i find fizzie's method in there, i'll be a happy camper.
[14:24:08] <A_Dragon> well if you WANT to dig into it
[14:24:11] <A_Dragon> is can do two things
[14:24:17] <A_Dragon> depending on what you give it
[14:24:42] <fizzie> iateadonut: Heh, coincidentally I put a link to the line that makes `syscall.Errno` equal to that error.
[14:24:46] <fizzie> (In the SO answer.)
[14:24:56] <A_Dragon> if what you give it as the thing to check implements an Is method that accepts another error, it spits out whatever the Is call says
[14:25:01] <fizzie> Didn't read the backscroll, so didn't even know that was the original context.
[14:25:21] <A_Dragon> bah who needs context
[14:25:25] <fizzie> Well, not "equal" literally, equal in terms of `errors.Is`.
[14:25:51] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Quit: Leaving)
[14:27:09] <A_Dragon> (unless the types are comparable, then yes equal >.>)
[14:28:25] *** Joins: wert (~wert@user/wert)
[14:28:32] <iateadonut> fizzie, hardly seems like a coincidence.
[14:29:17] *** Joins: dza (~dza@user/dza)
[14:31:30] *** Quits: hikhvar79607380 (~thelounge@x4db511fa.dyn.telefonica.de) (Ping timeout: 276 seconds)
[14:32:53] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[14:34:26] *** Quits: dr0n (~dr0n@94.11.23.235) (Ping timeout: 258 seconds)
[14:35:11] <iateadonut> fizzie, you don't work on the golang source code, do you?
[14:35:30] *** Quits: wert (~wert@user/wert) (Ping timeout: 245 seconds)
[14:38:42] <fizzie> Nah. I just generally browse a lot of source.
[14:39:15] <fizzie> Huh, hadn't realized pkg.go.dev links for the standard library are to a cs instance. That's nice.
[14:40:15] <fizzie> Did the "link to this line" keyboard shortcut (l-r) from muscle memory without realizing what it was I was looking at. :)
[14:42:52] *** Quits: moto (~moto@user/moto) (Ping timeout: 258 seconds)
[14:46:11] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[14:49:30] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[14:49:31] *** Joins: moto (~moto@user/moto)
[14:51:00] <A_Dragon> the go source is also pretty nice to read most of the time
[14:51:03] <A_Dragon> asm notwithstanding
[14:53:07] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[15:02:27] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 250 seconds)
[15:12:59] <iateadonut> thanks, fellas
[15:13:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[15:13:37] *** Parts: iateadonut (~dan@121.177.17.154) ()
[15:15:43] *** Joins: fikran (~fikran@user/fikran)
[15:18:42] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Ping timeout: 240 seconds)
[15:23:21] *** Joins: gggp__ (~gggp@125.33.88.79)
[15:23:38] *** Quits: gggp_ (~gggp@123.113.176.18) (Remote host closed the connection)
[15:23:55] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[15:24:16] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 258 seconds)
[15:27:37] *** Joins: Guest10 (~Guest10@ufr-132-230-194-223.eduroam-nat.uni-freiburg.de)
[15:29:22] *** Joins: mertyildiran (~mertyildi@88.231.68.206)
[15:32:08] *** Quits: jcajka (~jcajka@2a02:8308:a106:d100::2196) (Ping timeout: 272 seconds)
[15:32:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:32:52] *** Joins: jcajka (~jcajka@2a02:8308:a106:d100::ffb9)
[15:36:19] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[15:37:16] *** Joins: gggp_ (~gggp@60.10.23.170)
[15:40:31] *** Joins: oxum (~oxum@106.203.207.2)
[15:40:40] *** Quits: Guest10 (~Guest10@ufr-132-230-194-223.eduroam-nat.uni-freiburg.de) (Quit: Client closed)
[15:41:00] *** Quits: gggp__ (~gggp@125.33.88.79) (Ping timeout: 272 seconds)
[15:42:32] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[15:42:44] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[15:43:36] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[15:46:05] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[15:49:27] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[15:49:27] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Client Quit)
[16:02:09] *** Joins: gggp__ (~gggp@125.33.91.30)
[16:04:51] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[16:14:39] *** Joins: yoonkn (~user@175.197.208.79)
[16:16:50] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:18:00] *** Joins: ugjka (~ugjka@ugjka.net)
[16:30:31] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[16:32:34] *** Quits: ewintr (~ewintr@89.205.136.251) (Remote host closed the connection)
[16:34:42] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 245 seconds)
[16:40:10] *** Quits: gggp__ (~gggp@125.33.91.30) (Read error: Connection reset by peer)
[16:44:54] *** Joins: gggp (~gggp@221.219.75.146)
[16:45:42] *** Joins: oxum (~oxum@106.203.207.2)
[16:47:06] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[16:50:31] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[16:53:41] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[16:53:59] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e50f:b3fe:6fb0:23af) (Ping timeout: 258 seconds)
[16:54:03] *** Joins: ninjin (~ninjin@user/ninjin)
[16:55:37] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[16:56:04] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[16:56:42] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:cd3c:efc0:ccfd:b679)
[16:59:23] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[17:00:01] *** Joins: Torr (~Torr@user/torr)
[17:03:27] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:cd3c:efc0:ccfd:b679) (Read error: Connection reset by peer)
[17:03:30] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:08:12] *** Joins: Atque (~Atque@user/atque)
[17:10:07] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[17:10:18] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[17:12:32] <ikke> Does // [Go] mean anything special? I noticed it in a project
[17:12:54] *** Joins: frost (~frost@59.71.241.179)
[17:13:03] <ikke> Is that for godoc?
[17:13:32] *** Joins: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748)
[17:15:19] <Sam> The "[Go]" in brackets? No, probably something for an IDE or some tool they're using.
[17:15:57] <ikke> Right
[17:17:08] *** Joins: yoonkn (~user@175.197.208.79)
[17:17:54] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:3df3:6b44:b93c:faef)
[17:21:45] *** Joins: LiftLeft (~LiftLeft@191.96.227.138)
[17:22:24] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[17:23:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 272 seconds)
[17:25:02] *** Joins: fikran (~fikran@user/fikran)
[17:26:00] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[17:26:08] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Client Quit)
[17:26:09] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[17:27:00] *** Joins: oxum (~oxum@106.203.207.2)
[17:31:46] *** Joins: andlabs (~andlabs@172.58.238.250)
[17:34:23] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Quit: mikoto-chan)
[17:34:34] *** Quits: andlabs (~andlabs@172.58.238.250) (Client Quit)
[17:34:44] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[17:35:34] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:37:34] *** Joins: ugjka (~ugjka@ugjka.net)
[17:39:38] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[17:39:40] *** Quits: gggp (~gggp@221.219.75.146) (Remote host closed the connection)
[17:40:05] *** Joins: gggp (~gggp@125.33.91.30)
[17:43:15] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:44:40] *** Quits: gggp (~gggp@125.33.91.30) (Remote host closed the connection)
[17:45:13] *** Joins: gggp (~gggp@60.10.194.46)
[17:45:25] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[17:45:49] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 250 seconds)
[17:45:53] *** Joins: andlabs (~andlabs@2607:fb90:f801:ac04:d543:2386:855e:9a67)
[17:46:12] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[17:46:30] *** Joins: mrig (~mrig@user/mrig)
[17:47:40] *** Quits: gggp (~gggp@60.10.194.46) (Remote host closed the connection)
[17:48:31] *** Joins: gggp (~gggp@60.10.194.46)
[17:50:06] *** Quits: mrig (~mrig@user/mrig) (Client Quit)
[17:54:03] *** Quits: revolve (~u0_a227@82-132-245-120.dab.02.net) (Read error: Connection reset by peer)
[17:55:33] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:55:53] *** Joins: revolve (~u0_a227@82-132-247-39.dab.02.net)
[17:58:17] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[17:59:02] *** Joins: cmj (~cmj@68.207.254.124)
[17:59:27] *** Joins: darkapex (~darkapex@user/darkapex)
[18:01:49] *** Quits: andlabs (~andlabs@2607:fb90:f801:ac04:d543:2386:855e:9a67) (Ping timeout: 258 seconds)
[18:04:50] *** Joins: andlabs (~andlabs@172.58.238.215)
[18:07:30] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:10:02] *** Joins: andlabs_ (~andlabs@172.58.238.130)
[18:10:48] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:10:58] *** Quits: andlabs (~andlabs@172.58.238.215) (Ping timeout: 240 seconds)
[18:12:38] *** Joins: andlabs (~andlabs@2607:fb90:f80c:e998:d996:103:867c:1e47)
[18:13:54] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[18:14:28] *** Quits: andlabs_ (~andlabs@172.58.238.130) (Ping timeout: 258 seconds)
[18:16:19] *** Joins: andlabs_ (~andlabs@172.58.238.137)
[18:17:09] *** Quits: andlabs (~andlabs@2607:fb90:f80c:e998:d996:103:867c:1e47) (Ping timeout: 258 seconds)
[18:17:21] *** Joins: andlabs (~andlabs@2607:fb90:f801:fefd:e450:ad18:2b8a:ae76)
[18:18:38] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[18:21:00] *** Quits: andlabs_ (~andlabs@172.58.238.137) (Ping timeout: 258 seconds)
[18:22:37] *** Quits: andlabs (~andlabs@2607:fb90:f801:fefd:e450:ad18:2b8a:ae76) (Ping timeout: 245 seconds)
[18:23:31] *** Joins: andlabs (~andlabs@172.58.238.223)
[18:29:09] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 250 seconds)
[18:29:40] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:32:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:32:28] *** Joins: mrig (~mrig@user/mrig)
[18:32:51] *** Quits: andlabs (~andlabs@172.58.238.223) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:38:31] *** Quits: agrest (~user@45.76.36.123) (Quit: agrest)
[18:42:34] *** Joins: arcatech (~arcatech@user/arcatech)
[18:44:56] *** Joins: agrest (~user@styria.daemonized.org)
[18:46:45] *** Joins: oxum (~oxum@106.203.207.2)
[18:49:35] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100a)
[18:51:22] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[18:55:06] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[19:02:27] *** Joins: gggp_ (~gggp@60.10.194.46)
[19:03:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:05:50] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:09:09] *** Joins: oxum (~oxum@106.203.207.2)
[19:12:57] *** Joins: cmj (~cmj@68.207.254.124)
[19:13:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:13:44] *** Quits: Giedrius (~giedrius@5.133.65.65) (Remote host closed the connection)
[19:13:53] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[19:13:55] *** Joins: prophet60091_ (~prophet60@87.123.159.156)
[19:17:23] *** Quits: mertyildiran (~mertyildi@88.231.68.206) (Quit: WeeChat 2.8)
[19:19:56] *** Quits: cmj (~cmj@68.207.254.124) (Read error: Connection reset by peer)
[19:20:30] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[19:22:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 256 seconds)
[19:23:42] *** Joins: gggp (~gggp@60.10.194.46)
[19:24:27] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:25:00] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:25:26] *** Joins: gggp_ (~gggp@111.63.14.121)
[19:26:55] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[19:28:04] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:32:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:34:21] *** Joins: fikran (~fikran@user/fikran)
[19:35:17] *** Joins: oxum (~oxum@106.203.207.2)
[19:37:49] *** Joins: edrocks (~Ed@user/edrocks)
[19:39:57] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[19:48:27] <j416> iirc the philosophy of godoc has been to have no special markup; just as plain as possible
[19:48:39] <j416> although they do have the four spaces make a code block thing
[19:50:18] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[19:50:24] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[19:50:24] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[19:51:48] *** Joins: gggp__ (~gggp@60.10.194.46)
[19:54:10] *** Quits: gggp_ (~gggp@111.63.14.121) (Ping timeout: 240 seconds)
[19:55:17] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100a) (Ping timeout: 258 seconds)
[19:57:28] *** Quits: chripell (~chripell@109.255.230.3) (Quit: Leaving)
[19:58:47] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[19:59:24] *** Joins: mrig (~mrig@user/mrig)
[20:11:52] *** Joins: gggp_ (~gggp@60.10.23.170)
[20:15:13] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[20:15:34] *** edrocks is now known as ed
[20:16:10] *** ed is now known as edrocks
[20:19:03] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:24:52] <A_Dragon> I wish deprecation was better supported
[20:29:51] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Read error: Connection reset by peer)
[20:32:14] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[20:34:21] *** Joins: codebam (~codebam@user/codebam)
[20:36:34] *** Quits: jcajka (~jcajka@2a02:8308:a106:d100::ffb9) (Quit: Leaving)
[20:40:25] *** Joins: shka (~herr@109.231.62.239)
[20:47:23] *** Quits: absc (~absc@81.31.144.178) (Remote host closed the connection)
[20:48:46] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[20:50:00] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[20:52:56] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:52:59] <mrus> what do you folks think of the Echo web framework?
[20:53:24] <zsnes> i personally like it and have used it in a number of apis and webapps
[20:53:46] <zsnes> i think main benefit is the out of the box middleware and recipes for various use cases, super easy to use
[20:54:18] <mrus> alright, cool. Just wanted to make sure I don't run into something fishy as with Iris.
[20:54:42] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Ping timeout: 258 seconds)
[20:56:57] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[21:02:05] *** Quits: keiser0091075852 (~keiser@83.25.199.188.ipv4.supernova.orange.pl) (Quit: The Lounge - https://thelounge.chat)
[21:03:09] *** Joins: keiser0091075852 (~keiser@83.25.199.188.ipv4.supernova.orange.pl)
[21:05:11] *** Quits: cultpony (~cultpony@user/cultpony) (Quit: ZNC 1.8.2 - https://znc.in)
[21:05:35] *** Joins: cultpony (~cultpony@user/cultpony)
[21:07:07] *** Joins: prophet60091__ (~prophet60@217.138.216.4)
[21:07:30] *** Quits: zutt (~zutt@user/zutt) (Remote host closed the connection)
[21:08:49] *** Joins: prophet60091____ (~prophet60@217.138.216.4)
[21:11:11] *** Quits: prophet60091_ (~prophet60@87.123.159.156) (Ping timeout: 258 seconds)
[21:11:41] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[21:11:57] *** Quits: prophet60091__ (~prophet60@217.138.216.4) (Ping timeout: 258 seconds)
[21:14:08] *** Joins: zutt (~zutt@user/zutt)
[21:14:58] *** Quits: zutt (~zutt@user/zutt) (Client Quit)
[21:16:21] *** Joins: burningserenity (~burningse@102.129.152.155)
[21:17:52] *** Quits: fmac (~fmac@luna.fmac.xyz) (Ping timeout: 272 seconds)
[21:18:48] *** Quits: cultpony (~cultpony@user/cultpony) (Quit: ZNC 1.8.2 - https://znc.in)
[21:19:21] *** Joins: cultpony (~cultpony@user/cultpony)
[21:20:06] *** Joins: fmac (~fmac@hel1-1.fmac.xyz)
[21:21:11] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:23:51] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[21:23:51] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 252 seconds)
[21:26:22] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[21:28:36] *** Joins: agrest_ (~user@styria.daemonized.org)
[21:30:30] *** Joins: zutt (~zutt@user/zutt)
[21:30:36] *** Quits: agrest (~user@styria.daemonized.org) (Ping timeout: 272 seconds)
[21:34:14] *** Joins: ofh (~felix@2001:44b8:309b:14b:6f0:21ff:fe3c:d4d7)
[21:34:34] *** Quits: yelnah (~felix@2001:44b8:3086:9f:6f0:21ff:fe3c:d4d7) (Ping timeout: 258 seconds)
[21:34:48] *** Joins: burningserenity_ (~burningse@2603:9001:f01:ad99::100a)
[21:34:59] *** Quits: burningserenity (~burningse@102.129.152.155) (Ping timeout: 268 seconds)
[21:41:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[21:43:40] *** Joins: fikran (~fikran@user/fikran)
[21:44:35] *** Joins: s-video (~s-video@c-24-63-102-188.hsd1.nh.comcast.net)
[21:44:45] *** Joins: darkapex_ (~darkapex@user/darkapex)
[21:45:17] *** Quits: s-video (~s-video@c-24-63-102-188.hsd1.nh.comcast.net) (Client Quit)
[21:46:26] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 272 seconds)
[21:46:30] <Tv_> A_Dragon: i think deprecation checks were added to go vet. Just // Deprecated: blah in docs.
[21:46:42] *** Quits: zutt (~zutt@user/zutt) (Remote host closed the connection)
[21:47:41] <Tv_> or maybe not vet.. staticcheck for sure
[21:52:41] *** agrest_ is now known as agrest
[21:52:42] *** Joins: zutt (~zutt@user/zutt)
[21:57:06] *** Joins: f8l12 (~f8l12@191.96.150.84)
[21:58:02] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:58:25] *** Joins: edrocks (~Ed@user/edrocks)
[22:10:59] *** Joins: darkapex (~darkapex@user/darkapex)
[22:12:54] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 258 seconds)
[22:14:03] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 258 seconds)
[22:19:22] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 240 seconds)
[22:21:59] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:37:01] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[22:37:16] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[22:38:10] <A_Dragon> Tv_: definitely staticcheck
[22:38:19] <A_Dragon> but I'd like some more visuals in godoc
[22:38:22] <A_Dragon> it does SHOW now
[22:38:23] <A_Dragon> but still
[22:38:39] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:43:47] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[22:45:26] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[22:48:44] *** Joins: quippy_ (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[22:48:54] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[22:50:05] *** Quits: quippy_ (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[22:50:22] *** Joins: quippy_ (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[22:51:46] <foobaz> are you two referring to golangci-lint?
[22:51:56] <foobaz> or is there another static analyzer i should look into
[22:52:37] <Sam> foobaz: there's an actual tool called "staticcheck"
[22:52:48] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[22:52:58] <Sam> https://staticcheck.io/ I believe
[22:53:09] *** Quits: prophet60091____ (~prophet60@217.138.216.4) (Ping timeout: 258 seconds)
[22:53:23] <foobaz> how does it compare to golangci-lint? does it make sense to use both or did one replace the other?
[22:54:11] <Sam> golangci-lint runs a bunch of other linters, it's not a linter itself IIRC. I think I tried to use it once and it was just way too slow and ran a bunch of stuff that seemed unnecessarily and very unlikely to catch anything important (while still slowing CI down significantly). I'd just run staticcheck personally, it's good enough.
[22:54:21] <Sam> I run one or two others for full transparency, just not golangci-lint.
[22:54:34] <foobaz> ok thanks, i'll check it out
[22:54:48] <Sam> But your mileage and risk level may vary, of course.
[22:54:51] <bookworm> gopls can use staticcheck so if you use that it makes more sense than the ci-lint one
[22:55:06] <foobaz> i picked up golangci-lint specifically for the struct field alignment feature
[22:55:07] <bookworm> so that you see it in the editor while typing
[22:55:32] <bookworm> how often is that really a thing you notice in the real world?
[22:55:36] <foobaz> it tells you if you can make structs smaller by reordering their fields, which i thought was a cool feature
[22:55:43] *** Joins: jld (~jld@c-24-9-144-115.hsd1.co.comcast.net)
[22:55:52] <foobaz> in my case never, but it appeals to my desire for perfection :)
[22:55:53] <Sam> I think that's just running another tool; if you need it I'd just run that tool yourself personally.
[22:56:30] <bookworm> to be honest, that's an optimization the compiler could just do intrinsically without a human having to take care of it
[22:56:50] <bookworm> space vs performance being the usual tradeoff
[22:56:54] <foobaz> i do use gopls, it would be really cool to get the analysis live
[22:57:12] <foobaz> i agree, i wish the compiler would realign automatically
[22:57:22] <bookworm> set the option then: https://github.com/golang/tools/blob/master/gopls/doc/settings.md
[22:57:35] <foobaz> reordering the fields in code can make them less readable
[22:57:39] *** Quits: caubert (~caubert@136.244.111.235) (Quit: WeeChat 3.2)
[22:57:40] <foobaz> i will, thank you
[22:58:38] *** Joins: caubert (~caubert@136.244.111.235)
[23:01:17] *** Quits: caubert (~caubert@136.244.111.235) (Client Quit)
[23:03:18] *** Joins: caubert (~caubert@136.244.111.235)
[23:04:16] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[23:06:14] *** Quits: minix (~nabromov@92.40.255.112.threembb.co.uk) (Ping timeout: 272 seconds)
[23:12:00] *** Joins: oxum (~oxum@106.203.207.2)
[23:15:45] *** Joins: andlabs (~andlabs@172.58.238.166)
[23:16:53] <lungaro_> anyone know what constants in x/sys/unix are used for the protocol field in https://pkg.go.dev/github.com/vishvananda/netlink#Route
[23:17:08] <lungaro_> I am seeing Protocol=2 for some routes on my box and I can't seem to figure out what it means
[23:18:03] *** Joins: kubast2 (~kubast2@user/kubast2)
[23:18:38] <foobaz> i think it's the ones listed in /etc/protocols or at https://en.wikipedia.org/wiki/Internet_Protocol
[23:18:44] <foobaz> 2 is IGMP
[23:18:53] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[23:19:03] <kubast2> I guess it isn't possible to list all available modules under a directory? Was about to ask something stupid like, how can I "go get fyne.io/fyne/v2/*"
[23:19:21] <lungaro_> none of that makes sense to me =/
[23:19:28] <kubast2> same
[23:19:34] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:19:35] <ikke> go list?
[23:20:23] <foobaz> lungaro_: more common values are 6 for TCP or 17 for UDP, IGMP is a weird one used for multicast
[23:20:39] <lungaro_> all my routes have protocol=2
[23:20:49] <kubast2> yeah I actually couldn't use list but I do see it with ls
[23:21:18] <kubast2> I will need to figure out if they are fetched or not but I believe they arenot
[23:21:21] *** Quits: kubast2 (~kubast2@user/kubast2) (Client Quit)
[23:21:36] <foobaz> maybe it's not the IP protocol then, sorry to mislead you
[23:22:25] *** Quits: andlabs (~andlabs@172.58.238.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:22:52] <lungaro_> its all good, lemme write a small test case and see what iproute2 says
[23:27:49] <foobaz> maybe the 2 is RTPROT_KERNEL, defined in /usr/include/linux/rtnetlink.h and specified at https://datatracker.ietf.org/doc/html/rfc3549#section-3.1.1
[23:28:50] *** Joins: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net)
[23:31:48] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:a924:4956:68bc:291f)
[23:32:00] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 252 seconds)
[23:32:04] *** Quits: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net) (Remote host closed the connection)
[23:32:27] *** Joins: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net)
[23:39:12] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[23:40:43] <lungaro_> Yep, that's totally it
[23:41:40] <lungaro_> https://pkg.go.dev/golang.org/x/sys/unix#RTPROT_KERNEL -- from https://github.com/vishvananda/netlink/blob/master/route_linux.go#L1521
[23:41:58] <lungaro_> kind of a weird word to use here but works-for-me
[23:44:25] *** Joins: oxum (~oxum@106.203.207.2)
[23:44:36] <foobaz> naming things is hard
[23:45:11] <lungaro_> zebra gets its own protocol, yet it also defines bgp
[23:45:25] <lungaro_> good history there i'm sure
[23:45:43] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[23:46:04] *** Quits: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[23:47:03] *** Joins: jinie (~jimmy@188.114.173.37)
[23:47:03] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[23:48:16] *** Quits: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net) (Changing host)
[23:48:16] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[23:48:45] *** Joins: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net)
[23:49:51] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Ping timeout: 276 seconds)
[23:51:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:51:48] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 276 seconds)
[23:52:59] *** Joins: fikran (~fikran@user/fikran)
[23:53:27] *** Joins: jinie (~jimmy@188.114.173.37)
[23:55:03] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[23:55:36] *** Joins: jinie (~jimmy@188.114.173.37)
[23:55:41] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[23:57:09] *** Joins: jinie (~jimmy@188.114.173.37)
