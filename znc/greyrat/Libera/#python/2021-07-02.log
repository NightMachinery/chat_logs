[00:00:12] <Henry151> by manually test i mean like, running it and visiting the web app in a browser and seeing things work how they're supposed to
[00:00:23] <graingert> SilverFox: Right but the route callback doesn't work with methods
[00:00:48] <SilverFox> graingert: then i guess ill have to stick to the way we set it up first then, :c
[00:00:49] <graingert> Henry151: how many kloc?
[00:01:14] <graingert> SilverFox: we can unnest a few functions here
[00:01:26] <graingert> SilverFox: show the code before you made it a class?
[00:01:36] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:01:36] <SilverFox> graingert: sure thing, let me switch branches
[00:01:55] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:01:58] <Henry151> a whole bunch of it is all intertwined, so i can't really test the stuff that's supposed to run on the one server, without having the other server running for it to talk to, and a lot of the code on either of the servers needs clients to exercise it
[00:02:20] <Henry151> graingert: i think about 70kloc
[00:02:30] <SilverFox> graingert: got it https://bpa.st/GNPA
[00:02:35] <Henry151> maybe way less depending on what counts
[00:02:37] *** Quits: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ohuwuteu)
[00:02:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:02:59] <Henry151> most of it written by just a couple of people
[00:03:25] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:04:11] <Henry151> and of course, i have to take great precautions to hide the actual code itself when i'm in here or elsewhere asking for guidance or help, because of the sensitive nature of computer programs that handle other people's money
[00:06:00] <Henry151> i think the reason i was selected to help with this huge migration from 2 to 3 is because i had already worked for the company for a few years and the owner trusts me; i think he would have possibly hired a more experienced developer but didn't want to expose the code to anybody he didn't have some history of trust with
[00:06:23] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:08:03] <Henry151> find . -name "*.py" | xargs wc -l tells me i have 57066 lines of code
[00:08:43] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[00:09:45] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[00:10:45] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:11:02] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:11:20] *** Joins: chaosite (~chaosite@user/chaosite)
[00:11:46] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[00:12:38] <graingert> is this better? https://www.irccloud.com/pastebin/wxO7auqy/SilverFox.py
[00:13:04] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[00:13:25] <SilverFox> graingert: yeah, i think that looks better, ill arange mine similar to that
[00:13:35] <SilverFox> graingert: you're really helpful thank you~
[00:14:06] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[00:14:16] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[00:15:43] <SilverFox> still puts vboard =  and bot = very far apart but
[00:15:46] <SilverFox> ill take what i can get
[00:15:48] <SilverFox> thanks~
[00:17:38] <graingert> SilverFox: oh I did that on purpose
[00:17:43] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[00:17:51] <graingert> because only lifespan_context needs the vboard
[00:18:08] <graingert> you can do `async def lifespan_context(vboard, app):` instead
[00:18:10] <SilverFox> graingert: yeah, i see why u did that, thats why i like classes so much :c lets me take self in anywhere
[00:18:26] <SilverFox> graingert: i think ill be ok, i might stick with something more like the original
[00:18:39] <SilverFox> graingert: cuz honestly, if it works, it dosent need to look pretty
[00:19:10] <graingert> I quite like nested functions
[00:19:21] <graingert> it happens a lot with structured concurrency
[00:19:37] <SilverFox> graingert: Maybe it'll grow on me~
[00:20:12] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:a4fe:4846:af6a:60de) (Remote host closed the connection)
[00:20:18] <graingert> @SilverFox I plan on making a breaking change to how lifespan_context works in starlette soon
[00:20:26] *** Quits: YoungPotato (~user@c-67-186-254-165.hsd1.ut.comcast.net) (Ping timeout: 272 seconds)
[00:20:28] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:d09:e642:cfe2:16d7)
[00:20:33] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[00:20:38] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:20:47] <SilverFox> graingert: Ohno, should i fix my version in requirements or can i pre-emptivly prepare for the change?
[00:20:58] <graingert> it will start warning then failing in a new version unless you add this:
[00:20:58] <graingert> @contextlib.asynccontextmanager
[00:20:58] <graingert> async def lifespan_context(yamlDatabase, app):
[00:21:06] <graingert> but it's not forwards compatible
[00:21:20] <SilverFox> ill put it in a comment for now then
[00:21:26] <SilverFox> future me can deal with it <3
[00:21:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:21:44] <graingert> SilverFox: https://github.com/encode/starlette/pull/1227/files
[00:21:55] <SilverFox> sweet
[00:21:56] <SilverFox> thx
[00:22:11] *** Joins: snac73 (~textual@151.53.207.133)
[00:22:19] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 258 seconds)
[00:23:05] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[00:23:29] *** Joins: resmo__ (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[00:23:30] *** Quits: P4ddyF (~PaddyF@user/yogoyo) (Quit: WeeChat 3.0.1)
[00:23:44] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[00:23:49] *** Joins: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:25:08] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 265 seconds)
[00:25:54] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:d09:e642:cfe2:16d7) (Ping timeout: 240 seconds)
[00:26:04] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[00:26:10] *** Joins: justinf210 (~justinf21@2600:100e:b142:3b0f:25f8:f7f1:49a3:2aa3)
[00:26:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[00:26:50] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 244 seconds)
[00:26:51] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[00:27:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:28:48] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:28:49] *** Joins: ice99 (~ice9@user/ice9)
[00:28:56] *** Joins: waynew (~wayne@user/waynew)
[00:29:12] *** Joins: chaosite (~chaosite@user/chaosite)
[00:29:59] *** Quits: snac73 (~textual@151.53.207.133) (Quit: Textual IRC Client: www.textualapp.com)
[00:30:09] <Henry151> graingert: so, right now i am once again able to run this locally on my laptop (just tried it out to see if i could again). Is there a relatively straightforward way to assess "what i have all installed here that is working" so that i can try to replicate this setup on the remote machine?
[00:30:18] *** Quits: justinf210 (~justinf21@2600:100e:b142:3b0f:25f8:f7f1:49a3:2aa3) (Ping timeout: 240 seconds)
[00:30:55] <ssbr> Henry151: is pip freeze what you're asking about? (Joined late, can't see earlier context)
[00:31:21] <graingert> Henry151: It seems you used a broken version of pip to install your deps
[00:31:27] <ssbr> poetry has a similar lockfile functionality
[00:31:30] <graingert> So it allowed conflicting deps
[00:31:30] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665) (Ping timeout: 240 seconds)
[00:31:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[00:31:53] <graingert> Henry151: did you see my requirements.txt I sent you that I built with pip-compile?
[00:32:13] <Henry151> yes, but i'm so far unable to get those requirements to all install
[00:32:23] *** Joins: ice9 (~ice9@user/ice9)
[00:32:23] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[00:32:23] <graingert> Try changing the requirements.in and running the command at the top of the requirements.txt file
[00:32:28] <graingert> Henry151: what happens?
[00:32:31] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[00:32:36] <Henry151> thought i might take a fresh pip freeze to make sure i have an accurate picture of "what works on the dev machine"
[00:32:36] *** Quits: ice99 (~ice9@user/ice9) (Client Quit)
[00:32:53] <graingert> Henry151: you showed me a stale copy?
[00:33:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[00:33:45] <Henry151> well, i showed you the version that i thought was running here, but i'm not sure, i may have pip installed other things manually and not updated the requirements.txt
[00:33:50] *** Joins: dbristow (~dbristow@user/dbristow)
[00:34:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[00:34:58] <Henry151> sorry, not trying to waste any of your time
[00:35:20] *** Joins: pnoud (~pnoud@user/pnoud)
[00:35:21] *** Joins: ice99 (~ice9@user/ice9)
[00:35:35] <Henry151> your input is so valuable. https://termbin.com/owcg this is the result of a pip freeze that i just ran a moment ago, on the development machine, which is presently able to serve the web app that i'd like to serve from the remote machine
[00:36:03] *** Joins: digital_carver (~DCarver@49.205.154.191)
[00:37:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:38:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:39:35] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[00:39:37] <graingert> Henry151: You should follow the same process I used to make my https://github.com/graingert/henry/commits/default
[00:39:55] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[00:40:11] *** Joins: dbristow (~dbristow@user/dbristow)
[00:40:26] <graingert> Oh don't use fuzzywuzzy they accidentally GPLd it
[00:40:34] <graingert> You should use rapidfuzz
[00:40:46] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[00:40:47] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Quit: hej-hej!)
[00:40:49] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[00:41:18] *** Joins: dbristow (~dbristow@user/dbristow)
[00:41:19] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[00:41:59] <lash> graingert: fyi put the question here instead https://stackoverflow.com/questions/68216363/selectively-install-packages-based-on-extras-in-setuptools
[00:42:11] <Henry151> thanks, checking out rapidfuzz
[00:42:15] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[00:42:32] *** Joins: dbristow (~dbristow@user/dbristow)
[00:43:02] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:43:20] <Henry151> i will be back in here all day tomorrow, i think, but i have to go pick up my nephew now so i'm going to have to leave everything sitting for a bit and give it another shot either tonight or in the morning
[00:44:02] <graingert> lash: Oh you mean the actual files on disk?
[00:44:08] <graingert> lash: you can't do that
[00:44:27] *** Quits: dld (~davidlowr@73.61.8.116) (Read error: Connection reset by peer)
[00:45:00] *** Joins: chaosite (~chaosite@user/chaosite)
[00:45:05] <graingert> Imagine someone installed your package without your extra
[00:45:16] <graingert> Then later installed all the things your extra defined
[00:45:38] <graingert> The files would be missing and there would be no way to get them
[00:46:02] <graingert> How much disk space would you save here? Probably a few hundred kB?
[00:46:25] *** Joins: dld (~davidlowr@2601:197:600:1210:b1dd:9292:d6da:40cf)
[00:46:30] *** Quits: magla (~gelignite@55d461f0.access.ecotel.net) (Quit: Stay safe!)
[00:47:43] <graingert> Henry151: Well make sure you have the latest pip setuptools wheel installed and then try getting pip-compile from pip-tools to work
[00:48:38] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[00:48:58] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[00:50:05] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[00:50:26] *** Quits: Strom (strom@fedora/strom) ()
[00:50:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[00:51:34] <ali1234> entrypoint wrappers are like 300 bytes
[00:52:13] <ali1234> lash: the way i handle that is by catching the exception if the extra dep isn't available, and printing a message like, "this program needs module X"
[00:52:28] *** Joins: Strom (strom@fedora/strom)
[00:53:14] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[00:53:30] <ali1234> example: https://github.com/ali1234/vhs-teletext/blob/master/teletext/cli/teletext.py#L234
[00:53:48] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[00:55:00] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Ping timeout: 268 seconds)
[00:55:11] *** Joins: Ivyy (~Ivyy@2001:a62:41d:fa01:f36:8479:4134:98c8)
[00:55:47] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:56:22] <lash> graingert: ok
[00:56:32] <lash> ali1234: thankss for the heads up
[00:57:26] <graingert> Just let the import error happen imho
[00:58:16] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665)
[01:00:51] *** Joins: chaosite (~chaosite@user/chaosite)
[01:01:08] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:02:42] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665) (Ping timeout: 240 seconds)
[01:02:44] <ali1234> well i only catch specifically things that are installed by extras and re-raise the others
[01:02:49] *** Joins: chance (~chance@user/chance)
[01:03:13] <ali1234> i should probably mention how to install with extras in the error message
[01:03:24] <ali1234> it all depends on the experience level of our users though, imo
[01:05:24] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[01:07:07] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:08:05] *** Joins: srilyk (~wayne@user/waynew)
[01:08:42] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[01:09:09] *** Joins: waynew (~wayne@user/waynew)
[01:09:49] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:11:32] *** Joins: waynew_ (~wayne@user/waynew)
[01:11:38] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665)
[01:11:49] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[01:12:11] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[01:12:58] *** Joins: jazzy (~jaziz@2600:380:4542:186:f862:a412:d266:3c8e)
[01:13:48] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:13:59] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:14:14] <anddam> can someone point me to where Command.user_options is documented? I could not find anythin in both distutils (in docs) or in setuptools rtd page  https://docs.python.org/3/search.html?q=user_options   https://setuptools.readthedocs.io/en/latest/search.html?q=user_options
[01:14:33] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[01:14:34] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[01:14:37] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:14:54] <anddam> the use case is to add a custom option to a setup command (install) as in https://the-hitchhikers-guide-to-packaging.readthedocs.io/en/latest/specification.html#development-releases or https://marc.merlins.org/linux/talks/SvnScalingGvn/svn-tree/gvn-release/setup.py
[01:15:17] <anddam> but I would like to know what the ordered triple in the list is for, rather than guessing it
[01:16:22] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[01:16:23] <anddam> also shouldn't the latter example implement finalize_options() as well?
[01:16:49] *** Joins: chaosite (~chaosite@user/chaosite)
[01:19:08] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[01:20:58] *** Quits: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[01:21:43] *** Joins: mcope (~matt@user/mcope)
[01:21:44] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[01:21:57] *** Quits: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net) (Quit: bilb_ono)
[01:22:53] *** Quits: SilverFox (~joe@edia-64-223-223-162.myfairpoint.net) (Ping timeout: 258 seconds)
[01:24:46] <dale> I wish every library that used sockets, like boto3, exposed a "forcible close" method to interrupt blocking operations when needed.
[01:26:46] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 244 seconds)
[01:26:51] *** Joins: noctavian_ (~noctavian@gateway/tor-sasl/noctavian)
[01:27:23] *** Quits: TheRAt (~TheRAt@user/therat) (Ping timeout: 268 seconds)
[01:28:25] *** Quits: blpy (~blpy@2402:e280:3d22:227:29a0:cf18:4ea2:5c5e) (Ping timeout: 246 seconds)
[01:30:09] *** Quits: dustiestgolf (~anotherus@153.90.200.104) (Ping timeout: 268 seconds)
[01:30:17] *** Quits: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it) ()
[01:30:32] *** Joins: Necoro (~Necoro@user/necoro)
[01:30:36] *** Joins: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it)
[01:31:10] *** Quits: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it) (Client Quit)
[01:31:44] *** Joins: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it)
[01:32:34] *** Joins: chaosite (~chaosite@user/chaosite)
[01:33:16] <graingert> dale: like trio?
[01:34:23] <thiras> hello. i have a problem with black and line length. i have a line that has 91 length but black doesn't format it
[01:34:35] <grym> thiras: is it a string?
[01:34:46] <thiras> paste coming up
[01:35:14] *** Quits: Cyp (~cyp@213.237.83.38) (Excess Flood)
[01:35:24] <thiras> https://bpa.st/PQ7Q
[01:35:39] *** Joins: Cyp (~cyp@213.237.83.38)
[01:35:56] <thiras> UserAttributeSimilarityValidator line throws flake8 error correctly but black ignores to format it correctly
[01:36:04] <grym> yeah, black doesn't know where to break your string, so it won't
[01:36:13] <thiras> interestingly beside this line it works perfectly
[01:36:22] <nedbat> thiras: why have flake8 check the line length?
[01:36:36] <thiras> uhmm what would you recommend to solve this?
[01:36:40] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 265 seconds)
[01:36:55] <nedbat> thiras: turn off flake8's line length check
[01:36:57] <thiras> nedbat, good question have no idea
[01:37:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[01:37:46] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[01:38:03] <grym> thiras: possibly --experimental-string-processing
[01:40:20] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[01:41:00] <thiras> i'll stick with the disabled E501
[01:41:05] <thiras> thanks
[01:41:28] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:42:55] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:43:24] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 272 seconds)
[01:43:46] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[01:44:22] *** Joins: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net)
[01:44:42] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:45:38] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[01:45:49] <dale> graingert: Trio probably does it more right in a million ways.
[01:46:06] <dale> graingert: Not in a context where I can use it here, unfortunately.
[01:46:25] <graingert> you're in an async generator?
[01:46:55] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[01:47:07] *** Joins: Celeo (~Celeo@user/celeo)
[01:48:01] <dale> graingert: I'm in a very sensitive, important, and unfamiliar program running on Python 3.6 on Windows in a kind of weird environment and I have almost no experience with Trio.
[01:48:17] <graingert> ah F
[01:48:19] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[01:48:24] <graingert> windows is the worst for closing sockets
[01:48:28] *** Joins: chaosite (~chaosite@user/chaosite)
[01:49:30] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[01:49:39] *** Joins: skapata (~Skapata@user/skapata)
[01:49:45] <dale> Yeah, if it was *nix I'd just eff it all and for n in xrange(2**16): close(n) or something.
[01:50:05] <dale> (Sorry, no xrange, old habits die hard.)
[01:51:02] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[01:51:28] *** Quits: acid (~acid@user/acid) (Read error: Connection reset by peer)
[01:51:31] *** Joins: qlixed (~qlixed@152.170.36.244)
[01:51:36] *** Joins: acid (~acid@user/acid)
[01:51:48] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Remote host closed the connection)
[01:51:57] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[01:52:04] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Remote host closed the connection)
[01:52:07] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[01:52:12] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Quit: No Ping reply in 180 seconds.)
[01:52:13] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[01:52:46] *** Joins: Jigsy (~Jigsy@user/jigsy)
[01:52:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4ec1)
[01:53:10] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[01:53:22] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[01:53:29] <dale> I bet there's probably a Windows API equivalent I could call to with ctypes but my dedication to my job has limits. :)
[01:53:57] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[01:53:58] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:54:06] *** Joins: jinie (~jimmy@188.114.173.37)
[01:54:48] *** Quits: northernsage (~northerns@187.107.158.146) (Ping timeout: 272 seconds)
[01:56:20] *** Parts: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net) ()
[01:56:42] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[01:56:42] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 272 seconds)
[01:57:31] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[01:57:56] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:58:13] *** Joins: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net)
[01:58:13] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[01:58:35] *** Joins: cheater1__ (~Username@user/cheater)
[01:58:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[01:58:42] *** cheater1__ is now known as cheater
[01:59:06] *** Quits: greedom (~greedom@2001:16b8:2e1b:4600:bdf4:3c8b:c243:bd10) (Remote host closed the connection)
[02:00:40] *** Joins: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net)
[02:01:06] *** Parts: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net) ()
[02:01:13] *** Joins: justinf210 (~justinf21@50.sub-174-247-116.myvzw.com)
[02:01:25] *** Joins: Gerula_ (~Gerula@user/gerula)
[02:01:25] *** Quits: Gerula (~Gerula@user/gerula) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[02:01:25] *** Gerula_ is now known as Gerula
[02:01:35] *** Quits: Gerula (~Gerula@user/gerula) (Client Quit)
[02:01:52] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[02:02:56] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[02:03:09] *** Joins: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net)
[02:03:32] *** Quits: cecep (~weechat@dynamic-077-011-144-059.77.11.pool.telefonica.de) (Quit: WeeChat 3.2)
[02:03:32] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:04:11] *** Joins: Auron (~Auron956@user/auron)
[02:04:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Read error: Connection reset by peer)
[02:04:14] *** Joins: chaosite (~chaosite@user/chaosite)
[02:04:41] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[02:04:47] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[02:07:21] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 258 seconds)
[02:09:03] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[02:11:41] *** cman__ is now known as cman_
[02:17:22] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:19:18] *** cman_ is now known as cman
[02:20:10] *** Joins: chaosite (~chaosite@user/chaosite)
[02:20:10] *** Joins: semanticz0 (~semanticz@202.164.136.183)
[02:22:57] *** Joins: korg815 (~korg815@user/korg815)
[02:24:16] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[02:24:58] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[02:25:17] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[02:26:27] *** Quits: falk689 (~quassel@host-185-210-113-191.wime.it) (Ping timeout: 265 seconds)
[02:26:47] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:55f4:87a1:2368:929d)
[02:27:04] *** Joins: p-i-_ (~Ohmu@node-mbs.pool-118-173.dynamic.totinternet.net)
[02:27:04] *** Joins: azazello (~azazello@109.75.158.195)
[02:27:05] *** Quits: Barones (~Barones@2804:48dc:8500:0:55f4:87a1:2368:929d) (Read error: Connection reset by peer)
[02:27:16] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[02:27:40] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 258 seconds)
[02:28:04] *** Joins: kindablue (znc@irc.tpurist.com)
[02:29:00] *** Quits: p-i- (~Ohmu@node-27x.pool-118-173.dynamic.totinternet.net) (Ping timeout: 272 seconds)
[02:29:10] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:29:43] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:55f4:87a1:2368:929d) (Remote host closed the connection)
[02:29:57] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:55f4:87a1:2368:929d)
[02:30:50] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[02:32:01] *** Joins: THEh3rmann (~TheHerman@gateway/tor-sasl/thehermann)
[02:32:08] *** Joins: Nanobot567 (~Nanobot56@2600:1700:5d50:d0b0:6039:df91:bf5:b5f5)
[02:32:20] <Nanobot567> heeeeerrrre we go
[02:32:44] <matsaman> eyup
[02:33:10] *** Quits: nubonix (uid492751@id-492751.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:12] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[02:33:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:33:26] *** Quits: lash (~nolash@static.5.28.251.148.clients.your-server.de) (Ping timeout: 272 seconds)
[02:34:04] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 272 seconds)
[02:34:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:35:58] *** Joins: chaosite (~chaosite@user/chaosite)
[02:36:09] *** Joins: pnoud (~pnoud@user/pnoud)
[02:37:30] *** Quits: gitesh (uid423739@charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:38:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:38:41] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[02:38:42] <nedbat> Nanobot567: where are we going?
[02:38:56] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[02:39:04] <Nanobot567> into the registered python chat
[02:39:07] <Nanobot567> lol
[02:39:14] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[02:39:19] *** Joins: cuz (~user@2601:182:cc02:8b0:480:5e00:5c91:f4b2)
[02:40:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[02:41:02] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[02:41:30] <rndusr> hey
[02:41:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[02:41:59] <rndusr> i'm trying to install a pip3 package, namely pythongit, but I come across an error mentioning "404 Client Error: Not Found for url"
[02:42:05] <rndusr> what should I do about this?
[02:42:30] <Nanobot567> rndusr: did you get the pip link from pypi?
[02:42:44] <rndusr> yup, https://pypi.org/simple/pythongit/
[02:43:04] <rndusr> it installed fine on my other machine, but on my server it does not work
[02:43:18] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[02:43:32] <Nanobot567> "my server"?
[02:43:51] <Nanobot567> is that hosted by ur computer
[02:44:07] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[02:44:09] <rndusr> i'm installing it on my server, Debian 4.19.181-1
[02:44:09] <Nanobot567> or just what is your server defined as
[02:44:14] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[02:44:15] <Nanobot567> ohh ok
[02:44:17] <rndusr> it's a vps in the cloud
[02:44:49] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 265 seconds)
[02:44:50] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[02:45:00] <Nanobot567> in that case im not sure
[02:45:06] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:45:09] <Nanobot567> sry dude :( good luck
[02:45:10] <rndusr> oh, curling https://pypi.org/simple/pythongit/ just gives me a 404 not found
[02:45:14] <rndusr> huh
[02:45:19] <Nanobot567> oh lol
[02:45:24] <Nanobot567> yeah it doesnt exist
[02:45:27] <Nanobot567> i was overthinking it
[02:45:28] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[02:45:46] <rndusr> hmmst
[02:45:55] <Nanobot567> ah yes
[02:45:55] *** Joins: matsaman_ (~matsaman@user/matsaman)
[02:46:03] <rndusr> oh
[02:46:05] <rndusr> it's gitpython
[02:46:21] <rndusr> now it works
[02:46:23] <rndusr> thanks
[02:46:24] <Nanobot567> lol alr then
[02:46:28] <Nanobot567> np..?
[02:46:32] <rndusr> lo
[02:47:23] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 256 seconds)
[02:47:32] *** Quits: matsaman (~matsaman@user/matsaman) (Killed (NickServ (GHOST command used by matsaman_)))
[02:47:36] *** matsaman_ is now known as matsaman
[02:47:43] *** Joins: mertyildiran (~mertyildi@78.181.140.222)
[02:47:57] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 256 seconds)
[02:48:54] *** Joins: azazello (~azazello@109.75.158.195)
[02:49:01] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:49:21] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:50:42] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[02:51:44] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Ping timeout: 252 seconds)
[02:51:50] *** Joins: chaosite (~chaosite@user/chaosite)
[02:53:12] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 252 seconds)
[02:53:29] *** Joins: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it)
[02:55:31] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[02:56:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[02:56:39] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[02:56:47] *** Quits: Akuli (~Akuli@82-203-160-163.bb.dnainternet.fi) (Quit: Leaving)
[02:57:31] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:59:23] <Gurkenglas> How slow is it to rename() a tensor? it doesn't copy the data, right? does it have to copy over all the metadata?
[03:00:10] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:02:03] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[03:02:44] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 252 seconds)
[03:03:39] *** Joins: akaWolf (~akaWolf@akawolf.org)
[03:03:58] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[03:04:15] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[03:06:58] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[03:07:30] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[03:07:40] *** Joins: chaosite (~chaosite@user/chaosite)
[03:08:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[03:09:40] <philipp64|work> Is there an easy way to get protocol-level tracing from urllib3?  I couldn’t find anything obvious…
[03:10:13] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:9d49:dff0:63a6:b2f)
[03:10:33] <philipp64|work> Oh… asked and answered: https://urllib3.readthedocs.io/en/latest/v2-roadmap.html
[03:11:10] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[03:12:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[03:12:53] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 256 seconds)
[03:13:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:15:36] *** Quits: digital_carver (~DCarver@49.205.154.191) (Ping timeout: 268 seconds)
[03:15:56] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:16:09] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[03:19:34] <tachoknight> hey all, is there a good place to ask a matplotlib question?
[03:20:10] <grym> tachoknight: you found it
[03:20:12] <grym> ask away
[03:20:45] <anddt> tachoknight, can't see why not
[03:21:25] <tachoknight> i'm trying to get the actual values from a contour plot; i can get the points and segments that make up the contour plot, but i'd like to see what the actual value that it calculated the point for
[03:22:37] <tachoknight> i see i can get things like .allsegs from the object, but what i'm hoping for is some form of [1,[x1.0,y1.1]],[2,[v1.1,y2.4]] kinda thing (for example)
[03:23:32] *** Joins: chaosite (~chaosite@user/chaosite)
[03:23:42] <tachoknight> dunno if it supports it, and the reason why i ask is because i'd like to find a specific spot in the plot; i can see a little blip in the data, but i don't know how to get the actual values of the blip
[03:25:09] *** Quits: Necoro (~Necoro@user/necoro) (Quit: WeeChat 3.2)
[03:27:19] <tachoknight> or the max y value of the contour line
[03:27:25] <tachoknight> specifically
[03:27:49] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:27:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[03:27:56] *** Joins: easior_ (~easior@61.155.142.73)
[03:28:15] *** Quits: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net) (Quit: bilb_ono)
[03:29:17] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:29:42] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[03:31:17] *** Joins: digital_carver (~DCarver@49.205.154.191)
[03:31:18] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:31:51] *** Quits: Ivyy (~Ivyy@2001:a62:41d:fa01:f36:8479:4134:98c8) (Remote host closed the connection)
[03:32:08] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:34:59] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:35:16] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[03:35:33] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:35:34] *** Wulf4 is now known as Wulf
[03:36:36] *** Joins: Crassus (~Crassus@user/crassus)
[03:39:52] *** Joins: chaosite (~chaosite@user/chaosite)
[03:40:16] *** Quits: {HD} (~{HD}@102.165.16.22) (Ping timeout: 268 seconds)
[03:41:52] *** Quits: pynthon (~omar@80-60-40-192.fixed.kpn.net) (Quit: Lost terminal)
[03:44:12] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[03:44:18] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[03:44:38] *** caveman is now known as najad
[03:45:20] *** Joins: {HD} (~{HD}@143.244.44.72)
[03:45:33] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[03:45:54] *** Joins: srilyk (~wayne@user/waynew)
[03:46:24] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[03:46:30] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6) (Quit: Leaving)
[03:46:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:46:47] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6)
[03:47:28] <perrierjouet> can conda and poetry coexisist ?
[03:48:24] *** Joins: waynew (~wayne@user/waynew)
[03:49:53] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:50:13] *** najad is now known as caveman
[03:51:02] <perrierjouet> anyone
[03:51:07] <matsaman> perrierjouet: probably, but to what end
[03:51:10] *** Quits: IanWizard (~ianwizard@user/ianwizard) (Quit: Outta here)
[03:51:51] *** Joins: trashbird (~trashbird@user/trashbird)
[03:51:54] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[03:51:58] <CuriousErnestBro> what's the standard way to store api keys?
[03:52:18] <CuriousErnestBro> in a keys.txt and add that to .gitignore, and read that file with Pathlib?
[03:52:36] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 268 seconds)
[03:52:36] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[03:52:55] *** Joins: waynew (~wayne@user/waynew)
[03:53:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[03:53:52] <ammar2> CuriousErnestBro: for production, a library you intend to publish or just messing around?
[03:54:05] <matsaman> CuriousErnestBro: "carefully"
[03:54:19] <CuriousErnestBro> I'm publishing the thing to github so I don't want the keys to be visible
[03:54:28] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:54:51] <ammar2> CuriousErnestBro: what is "the thing", is it a library intended to be used by others or just an application?
[03:54:59] <CuriousErnestBro> an application
[03:55:15] *** Joins: chaosite (~chaosite@user/chaosite)
[03:55:37] <akk> CuriousErnestBro: Usually, I have the app either read keys from a file in ~/.config/programname, or if I just want a quickie, from an environment variable.
[03:55:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[03:55:57] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 256 seconds)
[03:56:16] <CuriousErnestBro> okay I'll do it the environment variable way
[03:56:17] <CuriousErnestBro> thanks
[03:56:31] <akk> or if I get really fancy, using something like XDG_CONFIG_HOME to be cross-platform.
[03:56:44] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[03:56:46] <akk> (You can look for that in the environment too)
[03:58:14] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Quit: Konversation terminated!)
[03:59:17] *** Joins: CombatVet (~c4@user/combatvet)
[03:59:56] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 252 seconds)
[04:00:12] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[04:00:37] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 268 seconds)
[04:03:35] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:03:54] *** Joins: srilyk (~wayne@user/waynew)
[04:03:57] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[04:04:28] *** Joins: tims (~tims@123-243-10-176.static.tpgi.com.au)
[04:05:21] *** Joins: easior__ (~easior@61.155.142.73)
[04:06:18] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[04:06:29] *** Quits: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it) (Remote host closed the connection)
[04:06:50] *** Joins: waynew (~wayne@user/waynew)
[04:07:36] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[04:07:54] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665) (Ping timeout: 240 seconds)
[04:08:40] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:08:55] *** Joins: srilyk (~wayne@user/waynew)
[04:09:04] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[04:09:36] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[04:09:50] *** Joins: easior_ (~easior@61.155.142.70)
[04:10:41] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[04:11:05] *** Joins: chaosite (~chaosite@user/chaosite)
[04:11:30] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[04:11:49] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[04:13:05] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 258 seconds)
[04:14:05] *** Quits: cuz (~user@2601:182:cc02:8b0:480:5e00:5c91:f4b2) (Ping timeout: 256 seconds)
[04:15:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[04:15:49] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: Textual IRC Client: www.textualapp.com)
[04:16:09] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 258 seconds)
[04:16:26] *** Quits: gmcastil (~gmcastil@50-206-38-118-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[04:17:12] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:17:18] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 272 seconds)
[04:17:35] *** Joins: drew (~drew@user/drew)
[04:17:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[04:17:59] *** Joins: wyclif (~wyclif@user/wyclif)
[04:18:39] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[04:20:22] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:20:35] *** Joins: trashbird (~trashbird@user/trashbird)
[04:21:07] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[04:22:16] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-116c-2848-076f-8ff4.res6.spectrum.com)
[04:22:16] *** Joins: CombatVet (~c4@user/combatvet)
[04:23:46] <CuriousErnestBro> is a generator an interable?
[04:23:56] *** Parts: gry (~quassel@botters/gry) (gone)
[04:24:03] <ammar2> interable?
[04:24:16] <Alex123> Hello guys, I am new to python. I am trying to simple script which read from input and prints it. input should be email bla@example.com  email = input('Email: ') when.I pass the email address in I get error in python2, but no error in python3
[04:24:36] <Tashtari> Alex123: In python 2, change it to raw_input.
[04:24:46] <Alex123> thanks :)
[04:24:49] <derek_v> CuriousErnestBro: yes
[04:24:50] <ssbr> CuriousErnestBro: all generators are iterable
[04:25:17] <ssbr> (x is an iterable <-> you can do "for a in x: pass")
[04:26:56] *** Joins: chaosite (~chaosite@user/chaosite)
[04:27:45] <ali1234> technically a generator returns an iterable object
[04:27:48] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:27:48] <derek_v> not to be confused with "iterator"
[04:28:07] *** Joins: srilyk (~wayne@user/waynew)
[04:28:15] *** Joins: grayhemp (~grayhemp@107-203-253-139.lightspeed.sntcca.sbcglobal.net)
[04:29:03] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:30:18] <CuriousErnestBro> oh, okay
[04:30:27] <CuriousErnestBro> yeah I confuse those a lot
[04:30:36] *** Quits: drew (~drew@user/drew) (Ping timeout: 272 seconds)
[04:31:45] *** Quits: nyah (~nyah@90.221.186.180) (Read error: Connection reset by peer)
[04:31:52] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[04:31:54] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:31:54] *** Wulf4 is now known as Wulf
[04:32:04] *** Joins: mud (~mud@user/kadoban)
[04:32:18] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:33:17] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:33:52] *** Quits: THEh3rmann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:34:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:34:17] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:34:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:35:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:37:00] *** Joins: pnoud (~pnoud@user/pnoud)
[04:37:20] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:38:14] *** Quits: amogorkon (~amogorkon@port-92-196-19-231.dynamic.as20676.net) (Ping timeout: 268 seconds)
[04:38:19] *** Joins: easior__ (~easior@61.155.142.73)
[04:38:28] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:38:28] *** Quits: mexen (uid495612@user/mexen) ()
[04:39:17] *** Joins: wyclif (~wyclif@user/wyclif)
[04:39:25] <derek_v> the breadth of the iterable category is one of the basic nice things in Python
[04:39:36] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:40:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[04:40:27] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:40:38] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Ping timeout: 252 seconds)
[04:40:39] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[04:41:04] *** Joins: waynew (~wayne@user/waynew)
[04:41:22] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 252 seconds)
[04:41:48] *** Joins: frost (~frost@59.71.241.179)
[04:41:56] *** Joins: ionface (~ionface@user/ionface)
[04:42:05] *** Joins: easior (~easior@61.155.142.73)
[04:42:16] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[04:43:01] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[04:43:40] *** Joins: audiocat (~audio@2603-8081-1800-eb5b-ed8a-504f-bfcd-fdff.res6.spectrum.com)
[04:44:13] *** vinleod is now known as vdamewood
[04:44:18] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 240 seconds)
[04:44:31] <graingert> Technically a generator is an Iterator
[04:44:42] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[04:45:02] <davve> do you really need a million ways of doing the same thing? doesnt it leave too much room for style arguments?
[04:45:16] *** Joins: easior_ (~easior@61.155.142.73)
[04:46:00] <graingert> There's loads of things generators can do that iterators cannot
[04:47:55] <nedbat> davve: having lots of things be iterable is good.  they are all different.
[04:48:08] *** Joins: CombatVet (~c4@user/combatvet)
[04:48:20] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[04:49:04] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665)
[04:49:20] <graingert> ali1234: https://github.com/python/cpython/blob/3.9/Lib/_collections_abc.py#L322
[04:50:10] *** Joins: drew (~drew@user/drew)
[04:50:11] *** Quits: justinf210 (~justinf21@50.sub-174-247-116.myvzw.com) (Remote host closed the connection)
[04:50:26] *** Joins: justinf210 (~justinf21@50.sub-174-247-116.myvzw.com)
[04:50:47] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[04:51:34] *** Quits: KeiraT (~unknown@lulzsec.co.uk) (Remote host closed the connection)
[04:52:55] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:53:45] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:d8e1:d6ed:ad1e:e665) (Ping timeout: 256 seconds)
[04:54:47] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:48] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[04:55:56] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 272 seconds)
[04:56:47] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:9d49:dff0:63a6:b2f) (Quit: Some random bits)
[04:57:36] *** Joins: mexen (uid495612@user/mexen)
[04:58:18] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[04:58:18] *** Joins: CombatVet (~c4@user/combatvet)
[04:58:28] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 272 seconds)
[04:58:37] *** Joins: chaosite (~chaosite@user/chaosite)
[05:00:25] *** Joins: mixfix41 (~homefame@user/mixfix41)
[05:03:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[05:03:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:04:38] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:8d05:aaa6:8a87:6441) (Remote host closed the connection)
[05:06:04] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 272 seconds)
[05:06:17] *** Quits: drew (~drew@user/drew) (Read error: Connection reset by peer)
[05:07:02] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[05:07:05] *** Joins: candyman (~candyman@user/candyman)
[05:07:27] *** Joins: drew (~drew@user/drew)
[05:07:54] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Ping timeout: 240 seconds)
[05:08:00] *** Joins: zaquest (~notzaques@5.128.210.178)
[05:08:55] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[05:09:57] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Quit: Leaving...)
[05:11:00] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6) (Quit: Leaving)
[05:11:18] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6)
[05:11:23] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[05:11:35] *** Joins: OPK (~OPK@user/opk)
[05:11:39] *** Joins: Keira (~unknown@lulzsec.co.uk)
[05:12:50] *** Joins: jtck (~jtck@222.164.13.173)
[05:14:32] *** Joins: chaosite (~chaosite@user/chaosite)
[05:14:49] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:16:06] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[05:18:38] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[05:19:16] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[05:19:24] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[05:20:14] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[05:20:24] *** Joins: srilyk (~wayne@user/waynew)
[05:20:42] *** Quits: candyman (~candyman@user/candyman) (Quit: candyman)
[05:20:52] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Quit: WeeChat 3.1)
[05:21:30] *** Quits: drew (~drew@user/drew) (Ping timeout: 240 seconds)
[05:21:55] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-74c5-95d2-5b20-b0b3.res6.spectrum.com) (Read error: Connection reset by peer)
[05:24:55] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 256 seconds)
[05:25:35] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[05:25:52] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[05:26:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[05:26:54] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Killed (NickServ (GHOST command used by PantelicGR_!~PantelicG@pon4522.cpe.hcn.gr)))
[05:27:29] *** Quits: cedric (~cedric@2a01:cb11:867:c200:11ab:6d52:61d2:5b6e) (Quit: Konversation terminated!)
[05:28:47] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:30:18] *** Joins: chaosite (~chaosite@user/chaosite)
[05:30:29] *** Quits: jphaynes66 (~TerraFirm@91.90.126.9) (Quit: Bye y'all.)
[05:32:11] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[05:34:20] *** Quits: semanticz0 (~semanticz@202.164.136.183) (Quit: Leaving)
[05:34:25] *** Joins: matsaman (~matsaman@user/matsaman)
[05:35:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[05:35:43] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[05:38:03] *** Joins: CombatVet (~c4@user/combatvet)
[05:38:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:38:17] *** Joins: cuz (~user@2601:182:cc02:8b0:bcb0:835d:1ce3:e86e)
[05:40:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[05:40:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:40:39] *** Joins: cheater (~Username@user/cheater)
[05:43:35] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[05:43:55] *** Quits: sgn (~sgn@user/sgn) (Quit: See ya later!)
[05:44:25] *** Joins: sgn (~sgn@user/sgn)
[05:44:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[05:45:53] *** Quits: emerent (~quassel@p200300cd5703bb15ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:45:54] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-116c-2848-076f-8ff4.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:45:58] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:46:36] *** Joins: emerent (~quassel@p200300cd5703bb7eba27ebfffed28a59.dip0.t-ipconnect.de)
[05:46:54] *** Joins: richbridger (~richbridg@213-225-32-103.nat.highway.a1.net)
[05:47:59] *** Joins: chance (~chance@user/chance)
[05:48:01] *** Quits: aquijoule_ (~richbridg@213-225-32-103.nat.highway.a1.net) (Read error: Connection reset by peer)
[05:48:09] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[05:48:18] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 240 seconds)
[05:49:21] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[05:50:52] *** Joins: djapo (~archangel@user/djapo)
[05:53:16] *** Joins: esmhammer (~dad@149.248.100.111)
[05:53:58] <habnabit_> davve, 'style' arguments? around what?
[05:54:12] *** Joins: pete443_ (~pete@user/pete443)
[05:54:16] *** Parts: esmhammer (~dad@149.248.100.111) ()
[05:54:31] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[05:54:42] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[05:55:00] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 250 seconds)
[05:55:21] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:55:44] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 265 seconds)
[05:57:34] *** Joins: nvrhome (~Bop@user/nvrhome)
[05:58:52] *** Joins: hell0_w0rld (~pacblinky@user/pacblinky)
[05:59:39] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[05:59:48] *** Joins: northernsage (~northerns@187.107.158.146)
[05:59:54] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:59:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[06:00:56] <nedbat> davve: this is like saying, "why have 100 things that can be printed? Do we need that many ways to do the same thing?"  Yes, everything should be printable.
[06:01:07] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[06:01:32] <hell0_w0rld> guys do you know how to make tkinter read str values
[06:01:48] *** Parts: bv (~bv@user/bv) (WeeChat 3.1)
[06:02:02] * SnoopJ prints a car
[06:02:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:02:30] <hell0_w0rld> value = somelist[0] = "item5"
[06:02:34] <hell0_w0rld> how to make tkinter read that
[06:03:09] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:04:17] *** Joins: CombatVet (~c4@user/combatvet)
[06:04:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:04:54] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:48d4:cc69:fdf9:955c)
[06:04:58] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[06:05:21] *** Quits: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ohuwuteu)
[06:06:29] *** Quits: hell0_w0rld (~pacblinky@user/pacblinky) (Quit: Lost terminal)
[06:06:29] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[06:08:09] *** Joins: andrew (~andrew@user/andrewyu)
[06:08:25] *** andrew is now known as AndrewYu
[06:09:41] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:48d4:cc69:fdf9:955c) (Ping timeout: 256 seconds)
[06:11:12] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:11:30] *** Joins: easior_ (~easior@61.155.142.73)
[06:13:53] <AndrewYu> Hi guys! If I am reading a python configuration file, i.e. something like config.py, will it be a good idea to just "from config import config" where "config" is a dictionary? I like having plain python files for configuration because I like flexibility, so, i.e., i have the ability to read file and put a line from it into a configuration variable...
[06:14:20] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:15:46] *** Joins: easior__ (~easior@61.155.142.67)
[06:16:48] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[06:18:10] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[06:18:45] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[06:20:48] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[06:23:17] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[06:24:43] *** Joins: noobly (~user@50.38.90.177)
[06:25:13] *** Joins: gggp (~textual@36.112.128.143)
[06:26:30] *** Quits: justinf210 (~justinf21@50.sub-174-247-116.myvzw.com) (Ping timeout: 272 seconds)
[06:29:00] *** Quits: gggp (~textual@36.112.128.143) (Client Quit)
[06:30:32] <grym> code-as-config is contentious; python's been moving away from it for a while, stylistically
[06:31:16] <noobly> KirkMcDonald: a couple days ago, or maybe yesterday, I was trying to form a command that operated on a 2D array using numpy.nonzero, that would return the index value when the last element in the row was 0. i think you gave me something like a(np.nonzero(:, -1)), but I don't exactly remember, and my computer unexpectedly shutdown so I lost my python shell history.
[06:31:54] *** Quits: cuz (~user@2601:182:cc02:8b0:bcb0:835d:1ce3:e86e) (Ping timeout: 240 seconds)
[06:32:05] <noobly> anyway, if you or anyone else knows what I'm talking about, I could use a hand, again :-)
[06:32:25] <KirkMcDonald> noobly: a[:, -1].nonzero()[0]
[06:32:28] *** Quits: digital_carver (~DCarver@49.205.154.191) (Ping timeout: 252 seconds)
[06:32:35] <KirkMcDonald> Err
[06:32:36] <akk> AndrewYu: Some people warn against that because if someone replaced the file, you'd be executing arbitrary code. But I do it in at least one program, and figure if someone has permissions to replace that file, they could replace any program I run.
[06:32:38] <SnoopJ> AndrewYu, you can use ast.literal_eval() to turn a string literal into the corresponding object, if your data of this sort is a literal. Usually you use a serialization format like JSON, TOML, etc. instead of executing whatever code is in that file (which happens when you import things and can lead to really subtle bugs)
[06:32:41] <KirkMcDonald> noobly: (a[:, -1] == 0).nonzero()[0]
[06:33:40] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[06:33:40] <noobly> KirkMcDonald: thanks so much! I'll save it this time, wasn't aware that python shell commands aren't stored anywhere
[06:34:24] <AndrewYu> SnoopJ: I do understand, and for readability, I'm considering using YAML for my configuration, but yeah. After all, if we're going to use some config.py thing, we'd just, well, import it, right?
[06:34:44] * AndrewYu does not understand well what literals mean
[06:34:52] * grym is not very sure yaml is particularly readable
[06:35:41] <habnabit_> AndrewYu, 'just import it' is unfortunately a bit simplistic. python code as configuration is somewhat more complex with that, especially when you want to involve defaults, or merging configs from multiple locations, or rereading them ever, ..
[06:36:20] <AndrewYu> I think re-reading is a large problem here
[06:36:32] <AndrewYu> But there is a module to reload imports, afaik
[06:36:40] <AndrewYu> I guess the only way is to try :D
[06:36:48] <habnabit_> AndrewYu, reloading imports also, well, doesn't work
[06:36:55] <KirkMcDonald> To an extent. Reloading modules is fraught.
[06:37:06] <AndrewYu> I mean, there's a module to reload other modules
[06:37:18] <SnoopJ> To say it is fraught is very correct
[06:37:20] <habnabit_> AndrewYu, yes. and it doesn't work
[06:37:44] <SnoopJ> AndrewYu, it just turns out that there are other ways to do it that don't have quite so many footguns and require less trivia knowledge on the part of the programmer.
[06:37:49] *** Joins: pnoud (~pnoud@user/pnoud)
[06:37:51] <AndrewYu> Yeah
[06:37:53] <AndrewYu> ...
[06:37:54] <SnoopJ> When "it" is something that does not require execution
[06:37:57] <AndrewYu> Maybe I'll use plain YAML
[06:38:02] <KirkMcDonald> "Work" is always a vague descriptor. Let's say, it does a very specific thing, and this is a thing that can easily lead to loads of complexity.
[06:38:19] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:38:23] *** Joins: CombatVet (~c4@user/combatvet)
[06:38:38] <habnabit_> reload does something highly specific that nobody ever actually wanted or is looking for in these situations
[06:38:43] <KirkMcDonald> jsonnet remains a decent option for config files.
[06:39:03] <SnoopJ> a true reload is pretty hard to reason about: how do you truly undo the result of executing arbitrary code?
[06:39:08] <habnabit_> just like sys.getsizeof, it's at best a debugging tool for cpython core developers
[06:39:14] <akk> For simple configs I like configparser.
[06:39:24] <SnoopJ> configparser is pretty good, yea
[06:39:33] <KirkMcDonald> I have never liked configparser much.
[06:39:40] <SnoopJ> now that TOML is 1.0.0 I would say it's nice to head in that direction when possible
[06:40:13] <KirkMcDonald> It's like, configparser is adjacent to the sort of .ini parser I'd want. But it's got a bunch of weirdness in there.
[06:40:54] <KirkMcDonald> It's solving a problem that isn't *quite* the problem I want it to solve.
[06:41:06] <akk> It's not super smart, but the inheritance works well if you don't need a lot of complexity.
[06:41:34] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 268 seconds)
[06:41:46] <habnabit_> AndrewYu, the what?
[06:41:48] <habnabit_> oops
[06:41:51] <habnabit_> akk, the waht?
[06:42:08] <akk> habnabit_: The way you can have a main section, set defaults there, then override some of them in subsections.
[06:42:27] <SnoopJ> KirkMcDonald, that's kinda how I feel about .ini in general :)
[06:42:36] <AndrewYu> ?
[06:42:38] <SnoopJ> "yea, this is pretty tasty, but you know what I *wish* I was eating right now?"
[06:42:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[06:43:00] <KirkMcDonald> AndrewYu: habnabit_ tab-completed your name on accident.
[06:43:09] <AndrewYu> ah xD
[06:44:28] *** Quits: fstd (~fstd@xdsl-84-44-233-102.nc.de) (Quit: Lost terminal)
[06:45:34] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[06:46:15] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[06:47:36] *** Quits: grayhemp (~grayhemp@107-203-253-139.lightspeed.sntcca.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[06:48:04] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[06:49:31] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[06:49:35] *** Joins: justinf210 (~justinf21@152.sub-97-44-1.myvzw.com)
[06:49:43] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[06:50:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:51:13] *** Quits: akk (~akk@174-28-112-132.albq.qwest.net) (Quit: +++)
[06:51:38] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[06:52:01] *** reedrichards is now known as MrFantastik
[06:53:17] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[06:54:31] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[06:56:54] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 272 seconds)
[06:57:36] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:57:51] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:57:51] *** FinnElija is now known as Guest4774
[06:57:51] *** Quits: Guest4774 (~finn_elij@user/finn-elija/x-0085643) (Killed (tin.libera.chat (Nickname regained by services)))
[06:57:51] *** finn_elija is now known as FinnElija
[06:59:03] *** Quits: justinf210 (~justinf21@152.sub-97-44-1.myvzw.com) (Ping timeout: 265 seconds)
[07:03:35] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[07:05:02] *** Quits: Vision (~Vision@024-178-231-009.res.spectrum.com) (Read error: Connection reset by peer)
[07:06:49] *** Quits: Nact (~l@host-85-27-123-59.dynamic.voo.be) (Quit: Konversation terminated!)
[07:08:03] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[07:09:16] *** Joins: p-i- (~Ohmu@node-mbs.pool-118-173.dynamic.totinternet.net)
[07:09:51] *** Quits: p-i-_ (~Ohmu@node-mbs.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[07:10:15] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[07:10:22] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (Quit: ...)
[07:10:31] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[07:10:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:10:52] *** Quits: woohoiV5 (~woohoiV5@89-139-19-40.bb.netvision.net.il) (Quit: ZNC 1.8.2 - https://znc.in)
[07:13:01] *** Joins: gpanders (~gpanders@user/gpanders)
[07:14:32] *** Joins: matsaman (~matsaman@user/matsaman)
[07:15:17] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[07:15:23] *** Quits: truth (~truth@user/truth) (Quit: bye)
[07:15:38] *** Joins: truth (~truth@user/truth)
[07:15:39] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:18:26] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[07:20:09] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[07:21:04] *** Joins: easior (~easior@61.155.142.67)
[07:21:28] *** Quits: OPK (~OPK@user/opk) (Quit: Textual IRC Client: www.textualapp.com)
[07:22:55] *** Joins: Vision (~Vision@024-178-231-009.res.spectrum.com)
[07:24:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[07:25:10] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:2435:1a6d:1110:61a6)
[07:26:04] *** __jmcantrell__ is now known as jmcantrell
[07:26:25] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:28:16] <zumba_addict> Good evening. I have flight data from my fpv drone. I think it's in csv format. I couldn't remember some of the values. What I would like to do is convert those data into a single png per frame since my csv data has timestamp. What libraries do I need?
[07:28:53] *** Joins: Fiji (~Fiji@user/fiji)
[07:30:09] *** Quits: anas (~anas@196.235.97.18) (Ping timeout: 256 seconds)
[07:31:59] <Tashtari> zumba_addict: Can't quite understand what you're trying to do.  You have some CSV data, which includes timestamps, that you want to convert into PNGs?
[07:32:37] <zumba_addict> not just timestamps. It includes like the position of the controller sticks. I like to convert those number into a png image
[07:33:09] <zumba_addict> i also record lat/lon so I can add a small map that I can overlay on my drone footage
[07:33:38] <Vision> "CSV" is the least of your worries
[07:33:39] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[07:33:57] <zumba_addict> yep, it's the graphic library that I need to know which one I should use
[07:33:59] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[07:34:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:34:42] <zumba_addict> is this good? https://pillow.readthedocs.io/en/stable/
[07:35:20] <Tashtari> Pillow is the usual recommendation for image processing, yeah.  Do you have PNG files with drone footage already or do you need to extract them from a video file of some kind?
[07:35:33] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:35:34] <SnoopJ> Pillow is good, yes
[07:36:26] <zumba_addict> I don't have png. I want to create the png using the data from the csv file. Then I will overlay the generated png images over my recorded video using ffmpeg.
[07:37:00] <zumba_addict> The python code I am planning to build will create multiple pngs based from the number of rows I have in the csv file
[07:37:27] <zumba_addict> ffmpeg can process each images and combine it with other mp4 files
[07:37:50] <zumba_addict> I can convert series of png into an mp4 file
[07:38:24] <zumba_addict> Perfect, I will take a look at the Pillow documentation
[07:38:50] <zumba_addict> I did see this too - https://stackoverflow.com/questions/8554282/creating-a-png-file-in-python
[07:39:12] <Tashtari> Pillow is the successor to PIL.
[07:39:31] <zumba_addict> cool
[07:39:40] <circuitbone> https://plotly.com/python/plot-data-from-csv/
[07:39:45] <SnoopJ> It's a successor and a drop-in-replacement, yea
[07:40:04] <zumba_addict> thank you for the link
[07:40:23] <circuitbone> https://pythonprogramming.net/loading-file-data-matplotlib-tutorial/
[07:40:24] <zumba_addict> there are examples, nice!
[07:40:25] <circuitbone> no sweat
[07:40:34] <zumba_addict> got it
[07:40:51] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Write error: Connection reset by peer)
[07:40:51] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[07:40:51] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Write error: Connection reset by peer)
[07:40:53] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[07:40:53] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Write error: Connection reset by peer)
[07:40:53] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[07:40:53] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Read error: Connection reset by peer)
[07:40:53] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Write error: Connection reset by peer)
[07:40:54] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Read error: Connection reset by peer)
[07:40:54] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Read error: Connection reset by peer)
[07:40:55] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[07:40:55] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Read error: Connection reset by peer)
[07:40:55] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[07:40:55] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Write error: Connection reset by peer)
[07:41:04] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Write error: Connection reset by peer)
[07:41:30] <zumba_addict> but what I was planning to do is a series of png files so that it looks like animation when combined together as an mp4 file and not a single final image
[07:41:31] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Write error: Connection reset by peer)
[07:41:33] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[07:41:34] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Read error: Connection reset by peer)
[07:41:34] *** Quits: jwon (~jwon@user/jwon) (Read error: Connection reset by peer)
[07:41:59] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:42:21] <zumba_addict> that way, when video is moving, the graph will also move or update
[07:42:33] <SnoopJ> You can do animations with matplotlib: https://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/
[07:42:43] <zumba_addict> oh wow
[07:42:57] *** Joins: bigRoo (~user@131.236.54.84)
[07:42:59] <SnoopJ> But it would probably be easier to load the video frame and overlay an image rendered by matplotlib (which Pillow can do)
[07:43:09] <zumba_addict> cool, got it
[07:43:14] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[07:43:14] <SnoopJ> and then stitch all those composite frames back into a video
[07:43:19] <zumba_addict> yep
[07:44:12] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 250 seconds)
[07:44:27] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[07:46:01] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[07:46:50] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[07:48:02] *** Joins: CombatVet (~c4@user/combatvet)
[07:48:57] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6) (Quit: Leaving)
[07:51:36] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[07:51:38] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[07:51:38] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[07:51:38] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[07:51:38] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[07:51:38] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[07:51:38] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[07:51:39] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[07:51:39] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[07:51:39] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[07:51:39] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[07:51:39] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[07:51:39] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[07:51:39] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[07:51:39] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[07:51:39] *** Joins: psydroid (~psydroid@user/psydroid)
[07:51:39] *** Joins: rany (~rany@user/rany)
[07:51:51] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[07:51:53] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[07:51:53] *** Joins: jwon (~jwon@user/jwon)
[07:51:54] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[08:00:11] *** Joins: mambang (~mambang@user/mambang)
[08:00:18] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[08:02:18] *** Joins: smorgasbord (~buggy@user/smorgasbord)
[08:02:38] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:03:08] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: node-irc says goodbye)
[08:03:37] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: node-irc says goodbye)
[08:03:38] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: node-irc says goodbye)
[08:03:56] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: node-irc says goodbye)
[08:03:58] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: node-irc says goodbye)
[08:04:30] *** Joins: P4ddyF (~PaddyF@user/yogoyo)
[08:04:41] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Quit: node-irc says goodbye)
[08:04:49] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: node-irc says goodbye)
[08:04:50] *** Joins: justinf210 (~justinf21@152.sub-97-44-1.myvzw.com)
[08:04:52] *** Quits: justinf210 (~justinf21@152.sub-97-44-1.myvzw.com) (Remote host closed the connection)
[08:04:59] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: node-irc says goodbye)
[08:05:33] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: node-irc says goodbye)
[08:05:33] *** Quits: rany (~rany@user/rany) (Quit: node-irc says goodbye)
[08:05:42] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:48d4:cc69:fdf9:955c)
[08:06:41] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[08:06:43] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[08:06:52] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: node-irc says goodbye)
[08:07:02] *** Joins: srilyk (~wayne@user/waynew)
[08:07:33] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Quit: node-irc says goodbye)
[08:07:41] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: node-irc says goodbye)
[08:08:05] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[08:08:20] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: node-irc says goodbye)
[08:08:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[08:09:18] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[08:09:54] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:48d4:cc69:fdf9:955c) (Ping timeout: 240 seconds)
[08:09:59] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: node-irc says goodbye)
[08:09:59] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: node-irc says goodbye)
[08:10:01] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[08:11:31] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 256 seconds)
[08:12:17] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[08:12:21] *** Joins: mumin (~mumin@py.autom8.pl)
[08:12:22] *** Joins: justinf210 (~justinf21@152.sub-97-44-1.myvzw.com)
[08:13:22] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:13:38] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[08:14:24] *** Quits: noobly (~user@50.38.90.177) (Ping timeout: 252 seconds)
[08:15:35] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[08:15:42] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Client Quit)
[08:15:57] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[08:16:12] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[08:16:31] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:17:02] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[08:17:03] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Quit: node-irc says goodbye)
[08:17:09] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: node-irc says goodbye)
[08:17:09] *** Quits: jwon (~jwon@user/jwon) (Quit: node-irc says goodbye)
[08:17:10] *** Joins: waynew (~wayne@user/waynew)
[08:19:04] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[08:20:49] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:22:19] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:23:31] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:23:33] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:24:34] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[08:25:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[08:26:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[08:26:58] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[08:27:01] *** Quits: justinf210 (~justinf21@152.sub-97-44-1.myvzw.com) (Ping timeout: 265 seconds)
[08:27:06] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[08:27:21] *** Joins: waynew (~wayne@user/waynew)
[08:27:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[08:29:56] *** Joins: easior_ (~easior@61.155.142.70)
[08:31:10] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[08:33:10] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[08:34:06] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:34:15] *** Joins: Lando-HoloNet (~LandoC@user/lando-spacepimp)
[08:34:28] *** Quits: Lando-HoloNet (~LandoC@user/lando-spacepimp) (Remote host closed the connection)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:38] *** Joins: tester (~tester@2600:1700:7e41:2c10:d98b:186b:2171:de22)
[08:38:18] <Evolver> Does Python have a configurable approximate string equality checking function using one of various distance measures?
[08:38:35] <Evolver> and a user-specified non-default max_distance value
[08:38:39] *** Joins: pnoud (~pnoud@user/pnoud)
[08:38:43] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[08:38:52] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[08:40:08] <SnoopJ> Python doesn't, but the `Levenshtein` module is a useful C extension for computing edit distance
[08:40:11] *** Joins: Midnite (~human@user/midnightlantern)
[08:40:35] <SnoopJ> and related functionality like similarity metrics
[08:42:29] *** Quits: Midnite (~human@user/midnightlantern) (Client Quit)
[08:43:28] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[08:43:40] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 268 seconds)
[08:44:02] *** Joins: srilyk (~wayne@user/waynew)
[08:44:17] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[08:47:06] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[08:48:11] *** Joins: easior (~easior@61.155.142.70)
[08:48:42] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 258 seconds)
[08:49:57] *** Quits: Widdershins (widders@ps.mad.cash) (Remote host closed the connection)
[08:51:06] *** Joins: widdershins (widders@ps.mad.cash)
[08:52:28] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[08:53:05] *** Quits: tester (~tester@2600:1700:7e41:2c10:d98b:186b:2171:de22) (Quit: tester)
[08:54:33] *** Joins: waynew (~wayne@user/waynew)
[08:54:36] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-941a-a114-89a1-725a.res6.spectrum.com)
[08:55:46] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:56:11] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:57:08] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 258 seconds)
[08:58:18] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[09:00:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[09:01:40] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[09:01:57] *** Quits: mertyildiran (~mertyildi@78.181.140.222) (Ping timeout: 256 seconds)
[09:02:07] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[09:04:41] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:04:42] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-941a-a114-89a1-725a.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:05:09] *** Joins: sgn (~sgn@user/sgn)
[09:07:43] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Ping timeout: 268 seconds)
[09:08:17] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:10:06] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[09:10:36] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:11:34] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:12:18] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[09:13:39] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:16:19] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 265 seconds)
[09:16:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[09:17:57] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[09:21:51] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: upgrades)
[09:22:14] *** Joins: litharge (litharge@libera/bot/litharge)
[09:22:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:22:36] *** ChanServ sets mode: +o litharge
[09:24:22] *** Joins: sydbarret (~anton@static-186-121-195-209.acelerate.net)
[09:24:33] *** Joins: kammmd (~kammd@223.226.37.205)
[09:25:11] *** Quits: mambang (~mambang@user/mambang) (Ping timeout: 256 seconds)
[09:25:18] <sydbarret> were you the crowd that use to live in freenode?
[09:25:19] *** Quits: kammmd (~kammd@223.226.37.205) (Changing host)
[09:25:19] *** Joins: kammmd (~kammd@user/kammd)
[09:25:39] <sydbarret> why you moved here?
[09:25:40] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[09:25:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[09:27:14] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:27:19] <leduyquang753> A drama happened.
[09:27:35] <derek_v> yes, this is the new place, same people
[09:28:00] <leduyquang753> You can find out about it around the Internet or ask around in somewhere appropriate like ##chat.
[09:28:48] <sydbarret> ok i have a button on my site that scrape a random number of sites. After crawl batch finishes I wanna call another code. Is there a way to know when the batch has finished crawling?
[09:28:55] <sydbarret> im using scrapy
[09:28:56] *** Joins: derelict (~derelict@user/derelict)
[09:28:59] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:52] <sydbarret> im using a celery task for the crawl
[09:30:16] *** Joins: wyclif (~wyclif@user/wyclif)
[09:32:06] *** Parts: kammmd (~kammd@user/kammd) ()
[09:35:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[09:35:08] *** Joins: dalan6 (~dalan@59-102-28-124.tpgi.com.au)
[09:37:30] *** Quits: dalan (~dalan@118.102.85.89) (Ping timeout: 240 seconds)
[09:37:30] *** dalan6 is now known as dalan
[09:37:54] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[09:38:47] *** Joins: wyclif (~wyclif@user/wyclif)
[09:38:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[09:40:24] <ammar2> sydbarret: looks like scapy has some an API that can notify you when it's finished https://docs.scrapy.org/en/latest/topics/signals.html
[09:41:39] <sydbarret> ammar2 but thats only for 1 call or url. What Im looking for its when all the urls were processed or crawled
[09:42:05] <sydbarret> you are referring to  def spider_closed  innit?
[09:42:07] <ammar2> sydbarret: engine_stopped
[09:42:14] <ammar2> "Sent when the Scrapy engine is stopped (for example, when a crawling process has finished).
[09:42:14] <ammar2> "
[09:42:38] <sydbarret> oh could be yes
[09:42:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[09:43:38] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:43:51] <u4t> hmm
[09:44:10] <u4t> help(str.translate) says that characters mapped to None are deleted
[09:44:15] <u4t> but that doesn't seem to be happening
[09:44:17] <u4t> python 3.9.2
[09:44:54] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) ()
[09:45:43] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[09:46:06] *** Quits: AndrewYu (~andrew@user/andrewyu) (Quit: WeeChat 3.2)
[09:46:12] <u4t> oh wait, i'm forgetting to (ord) it
[09:46:19] <u4t> * ord()
[09:47:53] <ammar2> u4t: you can also use str.maketrans({'x': 'y'})
[09:48:03] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[09:48:08] *** Quits: sydbarret (~anton@static-186-121-195-209.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:48:17] <u4t> yah :)
[09:50:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:51:09] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Remote host closed the connection)
[09:52:18] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[09:52:18] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[09:53:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:53:54] *** Quits: computeiro (~Wender@189.37.68.96) (Ping timeout: 240 seconds)
[09:55:01] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[09:55:04] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:55:18] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[09:55:42] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:55:43] *** Joins: Celeo (~Celeo@user/celeo)
[09:57:24] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[09:57:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:57:39] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[09:57:45] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:59:38] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[10:00:01] *** Joins: grayhemp (~grayhemp@107-203-253-139.lightspeed.sntcca.sbcglobal.net)
[10:02:29] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:05:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:06:54] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[10:07:28] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[10:07:36] *** Joins: srilyk (~wayne@user/waynew)
[10:16:07] <u4t> ok now
[10:16:17] <u4t> is there a sane way to do a reentrant function? (:
[10:18:45] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[10:19:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 256 seconds)
[10:19:14] *** Joins: waynew (~wayne@user/waynew)
[10:20:25] <u4t> currently i'm using class attributes and __new__ as a hack :P
[10:21:11] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:22:17] *** Joins: OPK (~OPK@user/opk)
[10:22:34] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:2435:1a6d:1110:61a6) (Quit: Client closed)
[10:22:45] *** Joins: pnoud (~pnoud@user/pnoud)
[10:24:05] *** Quits: p-i- (~Ohmu@node-mbs.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[10:24:41] *** Joins: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4)
[10:25:45] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[10:25:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[10:26:40] *** Joins: mattfly (~matheus@179-189-87-110.goldnettelecom.com.br)
[10:26:55] <mattfly> hi
[10:31:27] <mattfly> what library should i use for browsing public files of nextcloud
[10:31:28] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[10:31:33] <mattfly> is there a wrapper for this
[10:31:46] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[10:32:00] *** Joins: vassen (~vassen@188.170.193.69)
[10:32:06] <mattfly> nextcloud-sdk?
[10:32:35] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[10:33:45] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[10:35:20] <mattfly> is owncloud the same api as nextcloud
[10:35:21] *** Quits: nvrhome (~Bop@user/nvrhome) (Quit: Leaving)
[10:37:24] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 252 seconds)
[10:38:07] *** Joins: ionface (~ionface@user/ionface)
[10:38:26] *** Joins: foozle (~foozle@2001-b011-c001-52e7-9adc-b9a7-2c3c-8a66.dynamic-ip6.hinet.net)
[10:38:46] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[10:39:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:39:36] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:39:55] *** Joins: iflema (~ian@user/iflema)
[10:40:42] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[10:41:09] *** Joins: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de)
[10:42:19] <u4t> have reduced my function from O(5n) to O(3n) (:
[10:43:44] <u4t> my next trick will be to prove that P=NP
[10:44:16] *** Quits: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net) (Ping timeout: 272 seconds)
[10:44:16] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[10:44:28] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:44:37] *** Joins: waynew (~wayne@user/waynew)
[10:46:18] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 240 seconds)
[10:46:19] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[10:46:55] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:07] <u4t> might as well go the full hog and reduce it to O(1n)
[10:47:34] *** Joins: seednode (~seednode@user/seednode)
[10:48:02] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[10:48:35] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:48:41] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:49:03] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[10:49:09] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[10:49:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:50:52] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[10:51:01] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:51:54] <widdershins> u4t: fortunately O(5n) and O(3n) are both O(n)
[10:52:08] *** Joins: Mumulhl (~Mumulhl@user/mumulhl)
[10:52:25] <widdershins> u4t: what did you mean by making a function "reentrant" though? do you mean recursive?
[10:52:44] <u4t> no, i mean reentrant. remembering some values from previous runs
[10:52:54] *** Quits: mattfly (~matheus@179-189-87-110.goldnettelecom.com.br) (Ping timeout: 258 seconds)
[10:53:19] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[10:53:27] <widdershins> previous as in, other calls still on the stack?
[10:53:30] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[10:53:37] <u4t> no
[10:53:38] <widdershins> or do you mean 'memoized'
[10:53:53] *** Joins: jinsun (~quassel@user/jinsun)
[10:54:05] <u4t> yah, but with fewer typos :P
[10:54:27] <widdershins> memoized is a word
[10:54:27] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[10:54:36] <u4t> is it?
[10:54:36] <widdershins> there are no typos in it
[10:54:38] <u4t> ok
[10:54:46] <widdershins> look it up it's probably what you're talking about
[10:54:54] *** Joins: waynew (~wayne@user/waynew)
[10:55:07] *** Joins: gusto (~Augustus@109.255.100.54)
[10:56:19] *** Joins: gggp (~textual@60.10.194.47)
[10:57:16] *** Joins: Cyp_ (~cyp@192038130124.mbb.telenor.dk)
[10:58:06] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[10:58:07] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 256 seconds)
[10:58:12] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:58:42] <Gurkenglas> Is there a tool that takes a line with 5 pairs of brackets and shows me all the intermediate computed values?
[10:59:53] <ablegreen> l
[10:59:59] <widdershins> Gurkenglas: brackets? intermediate...? can you give an example?
[11:00:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[11:00:13] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[11:00:16] *** Joins: CombatVet (~c4@user/combatvet)
[11:00:25] <Gurkenglas> ticklabels = list(reversed(list(zip(*product(*[range(tensor.size(dim)) for dim in dims])))))[level]
[11:00:48] <Gurkenglas> oh they're called parentheses
[11:01:18] <serafeim> hello friends. i'm trying to udnerstand python raw strings: why this r'\' is an error ?
[11:01:22] *** Quits: Cyp (~cyp@213.237.83.38) (Ping timeout: 272 seconds)
[11:02:53] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:03:15] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:04:03] <jinsun> serafeim: because even in r strings the quotes can be escaped, so \' is single character and it doesn't end the string literal
[11:04:28] <serafeim> ah all right thank you
[11:05:11] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[11:05:16] <jinsun> don't end r strings with backslash, I do r"string without backslash in the end" + "\\"
[11:05:17] *** Joins: srilyk (~wayne@user/waynew)
[11:05:26] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[11:06:24] *** Quits: imp (~imp@186.205.11.214) (Quit: imp)
[11:06:32] <serafeim> all right i'll do that
[11:07:09] <u4t> <widdershins> look it up it's probably what you're talking about   << thanks :)
[11:07:23] <widdershins> u4t: no problem!
[11:07:30] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[11:09:20] <voldial> Anyone know of something like refbase (paper citation database/generator written in php) that's py and cli?
[11:09:27] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 256 seconds)
[11:11:17] <widdershins> Gurkenglas: oh i guess you can just break the line up into multiple statements with assignments and debug it that way
[11:11:47] *** Joins: kosh (~kosh@user/kosh)
[11:14:20] <Gurkenglas> yeah and i can put print statements in between too <.<
[11:14:45] *** Quits: smorgasbord (~buggy@user/smorgasbord) (Ping timeout: 258 seconds)
[11:14:52] *** Parts: vassen (~vassen@188.170.193.69) (Best wishes!)
[11:15:34] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[11:15:45] *** Joins: waynew (~wayne@user/waynew)
[11:17:26] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[11:17:57] *** Joins: dvx (~dvx@185.63.97.64)
[11:19:02] *** Joins: palasso (~palasso@user/palasso)
[11:19:44] *** Quits: klysm (~mdasoh@show.op8.us) (Quit: Lost terminal)
[11:20:44] <widdershins> yeah. i don't know of any ready-made way to automate this but there might be one
[11:20:59] *** Joins: p-i- (~Ohmu@node-mbs.pool-118-173.dynamic.totinternet.net)
[11:21:08] *** Joins: upsala (~zcb@185.213.155.160)
[11:21:11] <widdershins> if i can't tell what's going on i'll usually break it up and then put prints or even try to step through it in a breakpoint
[11:21:28] *** Quits: upsala (~zcb@185.213.155.160) (Client Quit)
[11:22:05] *** Joins: upsala (~zcb@185.213.155.160)
[11:23:09] <u4t> turns out @functools.cache, plus some quick redesigning, does what i implemented in far more lines (:
[11:25:25] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:26:45] <u4t> and thanks to iterators it's still O(1N)
[11:27:43] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:28:03] <u4t> also note: part of that N for me involves a look-up table, so it's more like O(n + nm)
[11:28:33] <u4t> which is why cache is nice (:
[11:29:08] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:29:38] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:30:12] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[11:31:11] *** Joins: anas (~anas@196.235.97.18)
[11:31:42] <u4t> i was talking to a guy the other day who was like "python is slow! iterators are slow and memory-intensive!"
[11:31:57] <u4t> and i was like "sounds like you're trying to write java code in python"
[11:32:15] <u4t> iterators are very powerful, and lean, when used correctly and appropriately
[11:35:26] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:35:41] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:37:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:37:40] *** Quits: welrmaron (~welrmaron@176.126.70.167) (Quit: ZNC 1.8.2 - https://znc.in)
[11:37:41] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[11:38:02] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[11:38:11] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[11:38:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:38:40] *** Quits: Mogget (Mogget@vogon.moshwire.com) (Quit: WeeChat 2.7.1)
[11:38:51] *** Quits: flyback (~flyback@2601:540:8201:1e60:a437:18b2:7a48:9163) (Ping timeout: 244 seconds)
[11:38:59] *** Joins: Mogget (Mogget@vogon.moshwire.com)
[11:39:07] *** Quits: Mogget (Mogget@vogon.moshwire.com) (Client Quit)
[11:39:49] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[11:41:37] *** Joins: Mogget (Mogget@vogon.moshwire.com)
[11:42:50] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[11:43:15] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 265 seconds)
[11:43:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[11:44:23] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[11:44:33] *** Joins: kushal (~hopless@dgplug/kushal)
[11:44:35] *** Quits: Nanobot567 (~Nanobot56@2600:1700:5d50:d0b0:6039:df91:bf5:b5f5) (Ping timeout: 256 seconds)
[11:44:51] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[11:44:59] <Julian> there's a reason we don't usually really write out constant terms in big O notation, it's not really an effective way to think about what's faster than what for real programs
[11:45:26] *** Joins: chele (~chele@user/chele)
[11:46:24] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[11:47:26] <widdershins> yeah, because 5 what. it doesn't matter. i just want to know if my input size doubles, will the amount of work increase not at all? will it double? quadruple? increase by a fixed amount? go completely insane and never finish? that's what big-O is for
[11:48:08] <widdershins> not to say that reducing constant factors is in any way bad. it just is not expressed in big-O
[11:48:30] <widdershins> you don't say you reduced it from O(4n) to O(2n), you just say you made it iterate half as many times or whatever
[11:48:50] <Helle> huh
[11:48:54] <Helle> yep
[11:48:55] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[11:49:01] <Helle> sorry, I am not awake yet
[11:49:13] *** Quits: grayhemp (~grayhemp@107-203-253-139.lightspeed.sntcca.sbcglobal.net) (Quit: Connection closed)
[11:49:17] <Gurkenglas> you can say you reduced it from 4n to 2n, though!
[11:49:31] <Gurkenglas> all O does is remove the constant term.
[11:49:41] <widdershins> Gurkenglas: i guess but that leaves a lot to explain about what the heck a 1 means
[11:50:04] <Gurkenglas> (more precisely, O sends you to the set of expressions with the same constant term)
[11:50:15] *** Joins: afidegnum (~user@102.176.94.49)
[11:50:16] *** Quits: milosz (~milosz@user/milosz) (Remote host closed the connection)
[11:50:55] <widdershins> correct
[11:51:09] <Gurkenglas> (except i confused constant term with everything but the constant term just there :D)
[11:51:11] <u4t> yah i know
[11:51:22] <widdershins> part of the definition of asymptotic complexity classes is that constant factors and slower-growing terms literally do not matter at all. they always iron out in the end
[11:51:29] <u4t> just considering my data set i figured it'd be useful
[11:51:32] <Gurkenglas> (and except it's actually also all the smaller terms)
[11:52:28] *** Joins: flyback (~flyback@2601:540:8201:1e60:5d64:de9e:dc71:ee3c)
[11:52:32] <afidegnum> what synthetic data generator can you suggest to generate simple data so i can fill in normal and financial values for proper modeling?
[11:52:32] <Gurkenglas> When I use a term I havent defined how do I automatically get an import statement and a package install?
[11:52:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[11:52:54] <Wulf> When I `pip install -i myindex somepackage` the package is downloaded from the internet instead of my own pypi server. Why and how to prevent that?
[11:52:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[11:53:16] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: node-irc says goodbye)
[11:53:27] <u4t> reducing the number of passes over my data set by 4 is worth my time saving :)
[11:53:36] <widdershins> yep
[11:54:04] <u4t> Wulf: you could download the whole internet first i guess
[11:54:34] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[11:55:13] *** dodobrain__ is now known as dodobrain
[11:55:24] <Gurkenglas> ah i think vscode's importmagic extension does this except you need to have the packages already installed
[11:55:42] *** Joins: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com)
[11:57:42] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[11:58:29] *** Joins: mambang (~mambang@user/mambang)
[11:59:38] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 272 seconds)
[12:00:37] *** Quits: mambang (~mambang@user/mambang) (Client Quit)
[12:00:38] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[12:00:52] *** Joins: goldfish (~goldfish@user/goldfish)
[12:01:27] *** Joins: lightbulbjim_ (~lightbulb@user/lightbulbjim)
[12:02:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[12:03:56] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 252 seconds)
[12:04:16] *** Joins: gggpkm (~gggpkm@36.112.135.215)
[12:04:20] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[12:04:20] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[12:04:20] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:04:20] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[12:04:20] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[12:04:20] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[12:04:20] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:04:20] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[12:04:20] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[12:04:20] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[12:04:21] *** Joins: jwon (~jwon@user/jwon)
[12:04:21] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[12:04:21] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[12:04:21] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[12:04:21] *** Joins: psydroid (~psydroid@user/psydroid)
[12:04:21] *** Joins: rany (~rany@user/rany)
[12:04:21] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[12:04:34] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[12:04:35] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[12:04:58] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Ping timeout: 246 seconds)
[12:05:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[12:06:23] *** Quits: lightbulbjim_ (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[12:06:42] *** Quits: jpic (~jpic@82.142.17.14) (Ping timeout: 240 seconds)
[12:07:13] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[12:07:25] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[12:08:28] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 246 seconds)
[12:08:39] *** Joins: upsala2 (~zcb@185.213.155.160)
[12:08:42] *** Joins: okamis (~okamis@90-229-141-188-no92.tbcn.telia.com)
[12:10:46] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[12:13:53] *** Joins: jpic (~jpic@82.142.17.14)
[12:14:16] <fluter> hi,
[12:14:29] <fluter> how can i include the source files (.py) in to the dist tar bar
[12:14:34] <fluter> it only includes .pyc files
[12:15:21] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[12:15:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[12:16:04] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[12:16:22] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Client limit exceeded: 20000)
[12:16:42] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:16:42] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[12:16:46] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[12:16:49] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[12:17:49] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Quit: Client limit exceeded: 20000)
[12:17:52] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: Client limit exceeded: 20000)
[12:17:58] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[12:18:00] <graingert> fluter: setuptools includes only .py files by default
[12:18:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[12:18:07] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[12:18:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[12:18:27] <fluter> graingert: i mean the dist
[12:18:28] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[12:18:37] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:18:37] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[12:18:38] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[12:18:41] <Gurkenglas> jupyter notebooks suck in git and what you're supposed to do is track .py files with # %% lines, right?
[12:18:46] <graingert> fluter: What's that
[12:18:47] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[12:18:54] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[12:18:56] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:18:56] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:19:15] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[12:19:15] *** Joins: psydroid (~psydroid@user/psydroid)
[12:19:18] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[12:19:19] *** Quits: rany (~rany@user/rany) (Quit: Client limit exceeded: 20000)
[12:19:24] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Quit: Client limit exceeded: 20000)
[12:19:26] <graingert> How did you obtain it? What did you run? What files are currently in it, what files do you want in it?
[12:19:38] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:19:43] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[12:19:57] <graingert> Use a bpaste
[12:20:09] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[12:20:18] *** Joins: rany (~rany@user/rany)
[12:20:32] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 272 seconds)
[12:20:40] <fluter> graingert: the output of python setup.py dist command
[12:20:52] <fluter> it's a tar.gz file cotains binary distributable
[12:20:55] <fluter> right?
[12:21:00] <fluter> unless i'm wrong
[12:21:07] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:21:14] <graingert> fluter: Right use `python -m build --sdist --wheel`
[12:21:48] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: Client limit exceeded: 20000)
[12:21:50] <fluter> graingert: i wanna inlucde both .py source file and .pyc files into one tar file
[12:21:53] <fluter> how can i do that
[12:21:57] <fluter> sdist is source only
[12:22:09] <graingert> You'll need to install build with path/to/your/venv/bin/python -m pip install build
[12:22:22] <fluter> yeah i already did that
[12:22:26] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[12:22:32] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Client limit exceeded: 20000)
[12:22:36] <graingert> The whl contains everything you need and pip will automatically create .pyc files when installing wheels
[12:23:01] <fluter> hmm, can i create .pyc and include them when do the packaking
[12:23:19] <graingert> fluter: No
[12:23:22] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[12:23:24] <fluter> why?
[12:23:29] <graingert> fluter: they are interpreter specific
[12:23:46] <fluter> .pyc are interpreter specific?
[12:23:50] <graingert> Yep
[12:24:01] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Client limit exceeded: 20000)
[12:24:38] <fluter> okk
[12:24:57] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[12:26:57] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:27:10] *** Joins: varaindemian (~varaindem@86.124.78.162)
[12:28:12] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[12:28:31] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:28:39] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[12:28:39] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[12:28:42] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[12:28:42] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Read error: Connection reset by peer)
[12:28:42] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Read error: Connection reset by peer)
[12:28:42] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[12:28:47] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Read error: Connection reset by peer)
[12:28:47] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Read error: Connection reset by peer)
[12:28:55] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[12:28:55] *** Quits: psydroid (~psydroid@user/psydroid) (Read error: Connection reset by peer)
[12:28:56] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[12:28:56] *** Quits: jwon (~jwon@user/jwon) (Read error: Connection reset by peer)
[12:28:56] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Read error: Connection reset by peer)
[12:28:57] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Write error: Connection reset by peer)
[12:29:22] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Write error: Connection reset by peer)
[12:29:27] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[12:29:27] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Read error: Connection reset by peer)
[12:29:29] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Read error: Connection reset by peer)
[12:29:29] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[12:30:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:30:20] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[12:30:57] <yte3> is it possible to run the async event loop in a python thread?
[12:31:04] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[12:31:13] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[12:31:14] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:31:14] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[12:31:14] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[12:31:14] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[12:31:26] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[12:31:28] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[12:31:42] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[12:31:42] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:31:42] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[12:31:42] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[12:31:42] *** Joins: jwon (~jwon@user/jwon)
[12:31:42] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[12:31:42] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[12:31:56] *** Joins: Gerula (~Gerula@user/gerula)
[12:31:56] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[12:32:10] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[12:32:10] *** Joins: psydroid (~psydroid@user/psydroid)
[12:32:10] *** Joins: rany (~rany@user/rany)
[12:32:10] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[12:32:44] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:32:51] *** Joins: shad (~shad@user/shad)
[12:34:07] *** Quits: foozle (~foozle@2001-b011-c001-52e7-9adc-b9a7-2c3c-8a66.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:34:27] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[12:35:22] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:35:28] *** Quits: gggpkm (~gggpkm@36.112.135.215) (Ping timeout: 252 seconds)
[12:35:55] *** Quits: Mumulhl (~Mumulhl@user/mumulhl) (Quit: Quit)
[12:36:18] *** Joins: rendar (~rendar@user/rendar)
[12:36:22] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[12:36:39] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:29] <widdershins> yte3: yes i am pretty sure
[12:37:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[12:37:53] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:38:25] <widdershins> you can have more than one event loop
[12:38:45] <widdershins> yte3: https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.get_event_loop some details here
[12:38:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:14] *** Quits: chele (~chele@user/chele) (Ping timeout: 268 seconds)
[12:39:17] <widdershins> (python threads and "OS threads" are the same thing. python threads are real threads)
[12:40:47] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[12:41:34] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[12:42:09] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[12:42:25] <yte3> widdershins: what I want to do is embedding Python in an application, and the Python code will run async functions and the async event loop in a python thread, then I can pause and resume the interpreter from the host application by acquiring/releasing the GIL
[12:42:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[12:42:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:42:57] *** Quits: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4) (Ping timeout: 256 seconds)
[12:43:08] <widdershins> that is certainly something to try!
[12:43:32] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:f7c8:886a:a9a5:ff17)
[12:43:32] *** Joins: chele (~chele@user/chele)
[12:44:17] <widdershins> i think rather than seizing the GIL like a conquering army from the outside you are probably going to be better off calling into an "i'm paused now" function you write from the python interpreter, and just don't return from that function until you want to unpause
[12:44:51] <widdershins> python has special control flow for acquiring the GIL that you shouldn't have to know about and which may change
[12:45:30] *** Joins: wyclif (~wyclif@user/wyclif)
[12:45:31] *** Joins: chaosite (~chaosite@user/chaosite)
[12:45:32] <widdershins> but if a GIL-holding function calls into non-python code that thread will continue to hold the GIL until it returns or is explicitly released
[12:45:48] <widdershins> maybe i'm wrong and maybe using the python api calls to acquire the gil is totally fine but i don't recall ever having seen that
[12:46:43] <yte3> I'm just theorizing it could work, and I have little to no experience with all of this
[12:47:05] <yte3> all I have now is a simple proof of concept that acquiring/releasing the GIL can effectively pause/resume everythong
[12:47:42] <yte3> https://pastebin.com/ivKAjbwr
[12:48:01] *** Quits: LiftLeft (~LiftLeft@154.21.23.33) (Ping timeout: 265 seconds)
[12:48:06] <widdershins> the alternative i mentioned will definitely work and if you're familiar with threading in your own program you could definitely do this (have a python function that calls a zero-argument function you give it, then give it a function that just sleeps until you want to unpause and then returns)
[12:48:16] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:48:45] <yte3> that would be another thing that would be interesting to try
[12:49:03] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[12:49:14] <widdershins> although looking at this you're right i think this is fine?
[12:49:31] *** Lord_of_Life_ is now known as Lord_of_Life
[12:49:51] *** Joins: slav0nic (slav0nic@python.su)
[12:50:04] <widdershins> i'm looking at the docs and they make no special mention of any special requirements like "only release-then-acquire, do not do the opposite" because i guess it's also common to do a bunch of python api calls to do things to python objects outside the interpreter
[12:50:23] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[12:50:40] *** Joins: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4)
[12:50:47] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Client limit exceeded: 20000)
[12:50:55] <widdershins> however: https://docs.python.org/3/c-api/init.html#non-python-created-threads
[12:51:10] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[12:51:11] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[12:51:11] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[12:51:13] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:51:25] <widdershins> oh wait no this is fine nvm
[12:51:30] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[12:51:35] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[12:51:53] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:51:58] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Quit: Client limit exceeded: 20000)
[12:52:04] *** Joins: Crassus (~Crassus@user/crassus)
[12:52:12] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[12:52:14] *** Joins: psydroid (~psydroid@user/psydroid)
[12:52:14] <widdershins> yeah i'm just overthinking things it looks like, it's 1am and i didn't think of the other use cases. 9 times out of 10 when people are mucking about with the GIL they are releasing it temporarily, not acquiring it
[12:52:20] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: Client limit exceeded: 20000)
[12:52:29] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[12:52:34] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[12:52:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:52:51] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[12:53:04] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:53:27] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[12:53:29] *** Quits: rany (~rany@user/rany) (Quit: Client limit exceeded: 20000)
[12:53:42] *** Joins: hgg (~hgg@5.79.71.148.rev.vodafone.pt)
[12:54:16] *** Joins: kompowiec (~kompowiec@2a02:a311:233d:9d80:fde5:d12b:fa7:c236)
[12:54:40] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Read error: Connection reset by peer)
[12:54:45] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:55:20] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[12:55:24] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Remote host closed the connection)
[12:55:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:55:59] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Quit: Client limit exceeded: 20000)
[12:56:01] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: Client limit exceeded: 20000)
[12:56:22] <yte3> widdershins: for me it looks symmetrical acquiring/releasing or vice versa, it just changes for how long it is held ^.^
[12:56:35] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[12:56:51] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[12:56:57] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Quit: Client limit exceeded: 20000)
[12:57:08] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[12:57:18] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[12:57:24] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[12:57:24] *** Joins: rany (~rany@user/rany)
[12:57:35] *** Quits: jwon (~jwon@user/jwon) (Quit: Client limit exceeded: 20000)
[12:57:36] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Client limit exceeded: 20000)
[12:57:49] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:58:07] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Client limit exceeded: 20000)
[12:58:08] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: Client limit exceeded: 20000)
[12:58:16] <widdershins> yeah. there's also possibly less bookkeeping to be done when you are being called from python with the gil already held. as long as you're calling the appropriate functions though you should not be required to think about it :)
[12:58:41] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[12:58:44] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[12:59:06] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[12:59:12] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[12:59:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:59:40] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Client limit exceeded: 20000)
[12:59:52] *** Joins: jwon (~jwon@user/jwon)
[13:00:04] <kompowiec> Hello. I wonder, why i have "SyntaxError: (unicode error) 'utf-8' codec can't decode byte" when i want run my program by pure interpreter but when i use jupyter notebook, it's just works?
[13:00:33] *** Quits: P4ddyF (~PaddyF@user/yogoyo) (Quit: WeeChat 3.0.1)
[13:00:38] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Client limit exceeded: 20000)
[13:00:45] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[13:00:52] <widdershins> kompowiec: is your jupyter notebook perhaps running python 2.7
[13:01:08] <Gurkenglas> What's the correct way to get a view of a torch tensor that changes nothing? i want to change only metadata.
[13:01:43] <kompowiec> my version jupyter notebook it's  6.1.6 and he use Python 3.9.5
[13:01:46] *** Joins: manti7 (~manti7@176.10.104.94)
[13:02:02] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Read error: Connection reset by peer)
[13:02:02] *** Quits: jwon (~jwon@user/jwon) (Read error: Connection reset by peer)
[13:02:03] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Read error: Connection reset by peer)
[13:02:03] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[13:02:03] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[13:02:04] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[13:02:04] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[13:02:08] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Read error: Connection reset by peer)
[13:02:08] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[13:02:13] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[13:02:13] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Read error: Connection reset by peer)
[13:02:13] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[13:02:14] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Read error: Connection reset by peer)
[13:02:22] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[13:02:37] *** Joins: canopus (~user@116.68.99.187)
[13:02:39] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[13:02:47] <tims> kompowiec: do you have the full stack trace?
[13:03:04] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:03:24] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[13:03:25] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[13:03:33] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[13:03:49] *** Joins: waynew (~wayne@user/waynew)
[13:04:27] <widdershins> kompowiec: jupyter notebook runs on a python interpreter. do you know what version of the interpreter it is? for example, `print(sys.version)`
[13:04:42] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[13:04:42] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[13:04:42] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[13:04:42] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[13:04:42] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[13:04:45] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:04:56] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[13:05:10] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[13:05:10] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[13:05:10] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[13:05:10] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[13:05:24] *** Joins: jwon (~jwon@user/jwon)
[13:05:24] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[13:05:24] *** Joins: BrenBarn1 (~brenbarn@2001:470:69fc:105::2da2)
[13:05:26] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 268 seconds)
[13:05:38] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[13:05:52] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[13:05:53] *** Joins: psydroid (~psydroid@user/psydroid)
[13:05:53] *** Joins: rany (~rany@user/rany)
[13:05:53] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[13:06:11] <kompowiec> hmm full stack trace? in sense i should run import trace?
[13:06:38] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[13:06:40] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Client Quit)
[13:06:41] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Client Quit)
[13:07:05] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:07:15] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[13:07:19] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[13:07:49] <kompowiec> widdershins: As I mentioned before, i have python 3.9.5, both in the system and in the jupyter notebook.
[13:07:50] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[13:07:59] *** Joins: azazello (~azazello@109.75.158.195)
[13:08:09] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[13:08:19] <widdershins> kompowiec: i see
[13:08:23] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:08:30] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[13:08:57] <widdershins> kompowiec: how are you running it in the interpreter? it's possible that if you're pasting it into a shell or something it's copying garbage
[13:09:15] <kompowiec> i just run python3 program.py
[13:09:17] <widdershins> since it actually says it's a SyntaxError it sounds like there is a problem with the actual source code
[13:09:20] *** Quits: azazello (~azazello@109.75.158.195) (Client Quit)
[13:09:37] <widdershins> like the code itself is invalid unicode
[13:09:51] <kompowiec> https://pastebin.com/UeSePby9
[13:09:52] <kompowiec> my code
[13:10:21] <kompowiec> when i run by python3 program.py i have issue with coding, in jupyer notebook works but i have other problems
[13:10:24] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Remote host closed the connection)
[13:10:24] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Remote host closed the connection)
[13:10:24] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Remote host closed the connection)
[13:10:24] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Remote host closed the connection)
[13:10:24] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Remote host closed the connection)
[13:10:25] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[13:10:25] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Remote host closed the connection)
[13:10:25] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Remote host closed the connection)
[13:10:25] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Remote host closed the connection)
[13:10:25] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Remote host closed the connection)
[13:10:25] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[13:10:26] *** Quits: psydroid (~psydroid@user/psydroid) (Read error: Connection reset by peer)
[13:10:26] *** Quits: BrenBarn1 (~brenbarn@2001:470:69fc:105::2da2) (Remote host closed the connection)
[13:10:26] *** Quits: jwon (~jwon@user/jwon) (Read error: Connection reset by peer)
[13:10:26] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Remote host closed the connection)
[13:10:26] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Remote host closed the connection)
[13:10:27] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[13:10:32] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Remote host closed the connection)
[13:10:32] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Remote host closed the connection)
[13:10:54] *** Joins: ulu (~ulu@user/ulu)
[13:10:55] <widdershins> did you actually save this file in utf8
[13:11:06] <widdershins> it does not hurt to double check
[13:11:30] *** Joins: wyclif (~wyclif@user/wyclif)
[13:11:46] <widdershins> if you saved it with a polish code page instead it would make sense that it would fail because you said it's utf-8 but it's not
[13:11:51] *** Quits: canopus (~user@116.68.99.187) (Ping timeout: 256 seconds)
[13:12:05] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:12:46] <kompowiec> hmm indeed i have latin2
[13:12:53] <widdershins> tada!
[13:12:56] *** Quits: afidegnum (~user@102.176.94.49) (Read error: Connection reset by peer)
[13:13:15] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[13:13:19] <kompowiec> works, thank thou!
[13:13:23] <widdershins> you're welcome!
[13:13:50] <kompowiec> I am learning python from a certified course and all this is new to me.
[13:13:58] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[13:14:09] *** Joins: Auron (~Auron956@user/auron)
[13:15:15] *** Joins: pnoud (~pnoud@user/pnoud)
[13:15:21] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[13:15:42] *** Joins: waynew (~wayne@user/waynew)
[13:15:48] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Client Quit)
[13:16:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:16:42] <Helle> hrm, is there any lightweight data permanence library (livejson or the like) that works with dataclasses or similar structures ? I don't want to explicitely call save and am willing to risk some data corruption, but I also don't want to be restricted to simple dict/array structures like livejson does
[13:17:07] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[13:17:18] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:17:42] <Helle> yes, it can store in a proper database or some other suitable format
[13:19:03] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Client Quit)
[13:19:43] <ThiefMaster> hi, i just gave mypy a try to see how much it complains in my (untyped) codebase, but i noticed this strange warning: `indico/core/signals/event/timetable.py:11: error: Cannot determine type of "_signals"` - https://github.com/indico/indico/blob/master/indico/core/signals/event/__init__.py#L13 https://github.com/indico/indico/blob/master/indico/core/signals/event/timetable.py are the files.
[13:19:43] <ThiefMaster> if I use `_signals: Namespace = Namespace()` instead of `_signals = Namespace()` it works though - but shouldn't this particular type be very straightforward to be inferred automatically?
[13:20:09] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[13:20:38] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[13:21:58] *** Joins: nubonix (uid492751@id-492751.charlton.irccloud.com)
[13:22:01] <nubonix> how can i set the text of an element with lxml etree when creating / writing an xml file?
[13:22:42] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[13:22:59] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Read error: Connection reset by peer)
[13:24:23] *** Parts: kompowiec (~kompowiec@2a02:a311:233d:9d80:fde5:d12b:fa7:c236) (Leaving)
[13:25:58] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:26:04] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:26:18] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[13:26:54] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:26:55] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[13:27:09] *** Joins: waynew (~wayne@user/waynew)
[13:27:37] *** Joins: wyclif (~wyclif@user/wyclif)
[13:28:00] *** Joins: Pickchea (~private@user/pickchea)
[13:28:15] <jinsun> ThiefMaster: yes it does infer the types normally https://mypy-play.net/?mypy=latest&python=3.9&flags=strict&gist=9c8ceeab67499392f8df1f9e59aa8e4b
[13:28:39] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[13:29:01] <ThiefMaster> yeah it seems to be related to the imports.. if I just check timetable.py directly instead of the whole indico/core/signals/ folder it doesn't complain
[13:29:05] <jinsun> probably the issue is that is complains at the wrong line, the issue is where you defined the class
[13:29:53] <ThiefMaster> the original Namespace class comes from a package w/o type hints (i silenced that using `ignore_missing_imports = true`)
[13:30:47] <ThiefMaster> ah no, even if i define the class locally in my code it happens
[13:30:51] *** Joins: frost (~frost@59.71.241.179)
[13:31:39] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[13:31:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[13:32:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[13:33:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:34:13] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[13:34:45] <ThiefMaster> different issue - not sure if what i'm trying to dot here is possible... https://mypy-play.net/?mypy=latest&python=3.10&gist=1c98199faebeec6fb1d78ab6372a9f26
[13:35:36] <jinsun> ThiefMaster: just leave it as name: str
[13:35:47] <jinsun> without assigning None
[13:36:17] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[13:36:58] <jinsun> or if your runtime code checks for None, then use Optional[str]
[13:37:07] <jinsun> can't have str with None as the value
[13:37:14] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[13:37:14] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[13:37:14] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[13:37:14] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[13:37:14] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[13:37:28] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[13:37:28] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[13:37:37] *** Joins: orbatos_ (~orbatos@user/orbatos)
[13:37:42] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[13:37:42] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[13:37:42] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[13:37:56] *** Joins: jwon (~jwon@user/jwon)
[13:37:56] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[13:37:56] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[13:38:10] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[13:38:24] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[13:38:24] *** Joins: psydroid (~psydroid@user/psydroid)
[13:38:24] *** Joins: rany (~rany@user/rany)
[13:38:24] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[13:38:37] <The-Compiler> well you could with cast(str, None), but here I agree that you could probably just remove the "= None"
[13:39:35] *** Joins: foozle (~foozle@2001-b011-c001-52e7-a8e5-ec73-19f4-897d.dynamic-ip6.hinet.net)
[13:42:45] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:43:46] *** Joins: wyclif (~wyclif@user/wyclif)
[13:44:10] *** Joins: pnoud (~pnoud@user/pnoud)
[13:44:18] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-6808-ba30-f88f-6ae1.res6.spectrum.com)
[13:45:23] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[13:47:16] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[13:47:54] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[13:47:58] *** Joins: gggp (~textual@60.10.194.47)
[13:48:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[13:48:51] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[13:48:55] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[13:49:06] *** Quits: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4) (Ping timeout: 240 seconds)
[13:49:34] <ThiefMaster> well that gives me an AttributeError if a subclass doesn't define it ;)
[13:49:42] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:51:34] <jinsun> the usual way to do that is keep an __init__ that has name as a mandatory name parameter in the base class
[13:51:54] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[13:53:02] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:53:32] <graingert> ThiefMaster: you can use a mixin self type when you access the attribute
[13:53:36] *** Joins: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4)
[13:54:09] <ThiefMaster> graingert: what's that? never heard of "mixin self type"
[13:54:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[13:54:21] <graingert> ThiefMaster: where do you access this attribute
[13:54:43] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[13:55:15] <ThiefMaster> `mapping = {getattr(cls, name_attr): cls for _, cls in objects}` - i guess i could just ass a default to the getattr call ;x i was just curious if there's a way to keep it as it is right now
[13:56:26] *** Joins: gggp (~textual@60.10.23.171)
[13:56:44] *** Joins: thiras (~thiras@user/thiras)
[13:58:01] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:58:53] *** Quits: gggp (~textual@60.10.23.171) (Client Quit)
[14:00:16] *** Joins: chaosite (~chaosite@user/chaosite)
[14:00:43] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:55f4:87a1:2368:929d) (Remote host closed the connection)
[14:00:56] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:a1c2:bcd:559d:2c34)
[14:01:01] <ThiefMaster> ah, found a nice solution that fails at import time if the attribute is missing :) def __init_subclass__(cls): assert hasattr(cls, 'name'), 'Storage backends need to have a name'
[14:01:03] *** Joins: candyman (~candyman@user/candyman)
[14:01:29] *** Joins: pnoud (~pnoud@user/pnoud)
[14:02:21] *** Joins: wyclif (~wyclif@user/wyclif)
[14:03:03] <graingert> ThiefMaster: Ah actually on the class
[14:03:25] <graingert> ThiefMaster: You can use a Protocol here
[14:04:10] <graingert> objects: Iterable[HasNameAttr]
[14:04:45] <graingert> class HasNameAttr(Protocol):
[14:04:46] <graingert>     @property
[14:04:46] <graingert>     def name(self) -> str: ...
[14:04:55] <graingert> Or an ABC with an abstract property
[14:05:21] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[14:05:50] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 265 seconds)
[14:06:24] <ThiefMaster> it's always set on the class, never on the instance
[14:06:29] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[14:06:43] <graingert> That's not really well defined in mypy
[14:06:51] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:06:54] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:07:01] <graingert> You can use ClassVar in the protocol maybe?
[14:07:16] <graingert> But when you get a `cls` that's a type right?
[14:07:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:07:52] *** Joins: srilyk (~wayne@user/waynew)
[14:08:10] <ThiefMaster> yeah
[14:08:31] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 246 seconds)
[14:08:50] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 272 seconds)
[14:10:37] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 246 seconds)
[14:11:02] *** Joins: janemba (~janemba@94.204.254.193)
[14:11:21] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[14:11:28] *** Quits: foozle (~foozle@2001-b011-c001-52e7-a8e5-ec73-19f4-897d.dynamic-ip6.hinet.net) (Quit: Leaving)
[14:11:33] <graingert> Right so you can define a protocol for instances with an attribute
[14:11:37] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[14:11:47] <graingert> And then treat cls as an instance of type with a name attribute
[14:13:05] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 265 seconds)
[14:13:43] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:14:46] *** Joins: rhax (~yannick@user/rhax)
[14:16:22] *** Joins: chaosite (~chaosite@user/chaosite)
[14:17:18] *** Joins: rsx (~dummy@ppp-188-174-136-209.dynamic.mnet-online.de)
[14:18:58] *** Joins: wyclif (~wyclif@user/wyclif)
[14:19:18] *** Joins: pnoud (~pnoud@user/pnoud)
[14:19:22] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[14:20:50] *** Joins: __that__ (~Guest22@195.59.68.214)
[14:20:52] <__that__> Hi all
[14:21:03] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:21:36] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 268 seconds)
[14:23:22] <__that__> We are having network error connection issues when trying to consume an external API using a asynchronous script. The weird thing is that the exception (badly) captured and logged as str(e) it shows None as an output. You can see the snippet here and the output we get https://dpaste.com/BTTY2UWC4
[14:23:54] <__that__> The code isn't mine though. Do you see anything abnormal there that gives me any hint to investigate further please?
[14:24:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:24:18] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Read error: Connection reset by peer)
[14:24:41] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[14:25:39] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[14:26:35] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[14:26:51] <__that__> Not sure where to start with to be honest
[14:27:57] *** Joins: waynew (~wayne@user/waynew)
[14:30:18] *** Quits: Namigator (~nami@user/namigator) (Ping timeout: 240 seconds)
[14:30:18] *** Joins: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:30:51] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[14:31:10] *** Quits: upsala2 (~zcb@185.213.155.160) (Ping timeout: 268 seconds)
[14:31:12] <__that__> it happens very randomly from time to time
[14:31:30] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[14:31:59] *** Joins: chaosite (~chaosite@user/chaosite)
[14:32:55] *** Joins: upsala2 (~zcb@185.213.155.160)
[14:33:29] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[14:34:31] <__that__> how could str(ex) possibly print out None. That wouldn't make sense, would it? I wonder if something is getting in between
[14:35:45] <The-Compiler> __that__: are you sure the [None] is coming from str(ex)? What's the code generating that "Error found:" text?
[14:36:07] *** Quits: pyfisch (thelounge@user/pyfisch) (Quit: the lounge - https://webirc.envs.net)
[14:36:07] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[14:36:31] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[14:36:35] *** Joins: sus (thelounge@user/zeromomentum)
[14:36:38] *** Joins: pyfisch (thelounge@user/pyfisch)
[14:36:50] *** Joins: wyclif (~wyclif@user/wyclif)
[14:36:51] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[14:36:51] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 256 seconds)
[14:37:09] *** Joins: waynew (~wayne@user/waynew)
[14:37:12] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:40:15] <ssbr> __that__: str(exception) can easily be None
[14:41:07] <ssbr> __that__: for example, >>> try: {}[None] ;; except Exception as e: print(e) --> None
[14:41:16] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:41:32] *** Joins: Namigator (~nami@user/namigator)
[14:41:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:41:51] <ssbr> __that__: when logging or printing exceptions, I always remember to print something like f'{e.__type__.__name__}: {e}'
[14:42:27] <ssbr> errrrr, e.__class__.__name__
[14:42:30] <ssbr> sorry, I need a coffee
[14:42:33] <The-Compiler> I really wish KeyError had a better __str__ :(
[14:42:40] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:43:00] <ssbr> The-Compiler: I ~basically wish all exceptions included their name in the __str__, this is just really bad. Alas!
[14:43:17] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[14:43:54] <ssbr> there's good reasons for the choices made here but it does make it very confusing when people try to debug this kind of thing for the first time
[14:44:29] <The-Compiler> but in this case I don't think [None] is really the str() of the exception
[14:44:42] *** Joins: wyclif (~wyclif@user/wyclif)
[14:44:47] <The-Compiler> it sounds to me more like "Cannot connect to host myhost.com:443 ssl:<ssl.SSLContext object at 0x000001FB57C0A898>" is
[14:45:06] <ssbr> ah I missed the paste and only saw the last message
[14:46:31] <OMGOMG> ssbr: can it?
[14:46:48] *** Joins: candyman (~candyman@user/candyman)
[14:46:59] <ssbr> OMGOMG: can what?
[14:47:01] <OMGOMG> oh, i had scrolled up for a second. can str(e) be None?
[14:47:02] <ssbr> or can what what
[14:47:04] <ssbr> yes
[14:47:24] <ssbr> KeyError(None) is an easy example
[14:47:51] *** Joins: chaosite (~chaosite@user/chaosite)
[14:48:38] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[14:49:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:49:22] <OMGOMG> i get 'None'
[14:49:50] *** Quits: candyman (~candyman@user/candyman) (Client Quit)
[14:50:36] <OMGOMG> which i guess was what you meant
[14:52:19] *** Parts: okamis (~okamis@90-229-141-188-no92.tbcn.telia.com) (Leaving)
[14:52:29] *** Joins: akaWolf (~akaWolf@akawolf.org)
[14:53:10] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[14:53:28] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[14:57:15] *** Quits: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4) (Ping timeout: 256 seconds)
[14:57:23] *** Joins: wickedjargon (~wickedjar@cpeac202ebc90c3-cmac202ebc90c0.cpe.net.fido.ca)
[15:00:28] *** Quits: sincorchetes (~sincorche@14.red-79-152-208.dynamicip.rima-tde.net) (Quit: Konversation terminated!)
[15:01:26] <__that__> OMGOMG, ssbr, The-Compiler apologies.I got caught up in a meeting. The paste is here: https://dpaste.com/BTTY2UWC4
[15:01:34] *** Joins: digital_carver (~DCarver@49.205.154.191)
[15:01:52] <ssbr> OMGOMG: ah. Yes. str() can't literally return a non-string.
[15:02:09] <ssbr> OMGOMG: but if you print an exception, use it as a {}/%s format parameter, etc., you can see None sometimes.
[15:02:17] <The-Compiler> __that__: but the code generating the output at the bottom is not in the paste
[15:02:38] <__that__> The-Compiler I am going to add this bit of code now too
[15:03:41] *** Joins: chaosite (~chaosite@user/chaosite)
[15:06:15] *** Joins: wyclif (~wyclif@user/wyclif)
[15:06:28] *** Joins: pnoud (~pnoud@user/pnoud)
[15:07:18] *** Quits: vsantana (~Thunderbi@fttx-177136148192.usr.predialnet.com.br) (Remote host closed the connection)
[15:07:36] *** Joins: vsantana (~Thunderbi@fttx-177136148192.usr.predialnet.com.br)
[15:07:55] <__that__> The-Compiler here is the calling method: https://dpaste.com/B7MZCTDTJ. The dispatch method shown before and now in line 29 is called by statement in line 55. The exception is then logged in line 66
[15:08:36] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[15:08:36] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[15:08:36] *** Quits: audiocat (~audio@2603-8081-1800-eb5b-ed8a-504f-bfcd-fdff.res6.spectrum.com) (Ping timeout: 256 seconds)
[15:09:23] *** Joins: betuxy (~ole@158.181.77.59)
[15:09:38] *** Joins: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4)
[15:10:30] <The-Compiler> __that__: does "status" need to be "Exception", or could you use e.__class__.__name__ (or potentially .__qualname__) there? Also, you might want to add the traceback as a string (e.g. using the traceback module) and print it too so you know where exactly it's coming from.
[15:10:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:11:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[15:11:35] <The-Compiler> __that__: As for the [None], that's either just a small part of the exception string then; or it's not actually part of the string and coming from your logging format config
[15:12:37] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 272 seconds)
[15:15:10] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:19:32] *** Joins: chaosite (~chaosite@user/chaosite)
[15:19:55] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[15:19:58] *** Joins: entuland (~entuland@user/entuland)
[15:20:35] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[15:22:26] *** Joins: wyclif (~wyclif@user/wyclif)
[15:23:29] *** pie_bnc is now known as pie_
[15:23:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[15:24:30] *** Quits: BrokenCog (~BrokenCog@132.sub-174-194-169.myvzw.com) (Ping timeout: 252 seconds)
[15:25:15] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[15:25:23] *** Joins: srilyk (~wayne@user/waynew)
[15:26:20] *** Joins: sudomannn (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:26:43] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[15:26:47] <sudomannn> does an error like this confirm that the package pautils is at least installed? https://bpa.st/7OHQ
[15:26:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[15:27:39] <betuxy> hey guys, I'm following through the flask example blog-app (flaskr) the index page shows up, however i get the following error when i try to click the login button: https://hastebin.com/raw/imucupabit  the code is the same in the documentation, what am I doing wrong?
[15:28:20] <sudomannn> In my terminal when i do `pip install path/to/pautils/package/` I can later enter a python3 sessions and successfully import
[15:28:27] <sudomannn> things i need
[15:29:25] <sudomannn> But docker instructions installing the package the same way, i get the error linked above
[15:29:52] <Yhg1s> sudomannn: it means pautils/es_utils.py is installed, but doesn't have the name your code expects.
[15:29:56] <Yhg1s> (so it's perhaps a different version.)
[15:30:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:46] <sudomannn> I have the pautils package in my folder. I'm installing it locally, and I have confirmed the function is there
[15:30:50] *** Joins: BrokenCog (~BrokenCog@132.sub-174-194-169.myvzw.com)
[15:30:59] <sudomannn> I import it in an interactive session with no problem
[15:31:05] <Yhg1s> sudomannn: and in the docker container?
[15:31:23] <Yhg1s> sudomannn: are you using a virtualenv?
[15:31:28] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[15:31:35] <sudomannn> The dockerfile copies the pautils and installs it the same way i do in my terminal
[15:32:07] <sudomannn> no use of virtual env in the container
[15:32:15] <Yhg1s> sudomannn: well, something is different about the thing in the docker container.
[15:32:18] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 240 seconds)
[15:32:27] <Yhg1s> like, for example, some other installation of the same package taking precedence.
[15:33:15] *** Joins: slbtty (~slbtty@206.176.130.245)
[15:34:52] <sudomannn> jeez I dont see what that could possibly be, after reading the dockerfile over and over  :(
[15:35:24] *** Joins: chaosite (~chaosite@user/chaosite)
[15:35:30] <Yhg1s> Make sure you're using a virtualenv the same way in both environments. Inspect both environments to check for differences.
[15:35:30] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 240 seconds)
[15:35:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:38:13] *** Joins: wyclif (~wyclif@user/wyclif)
[15:38:53] *** Joins: xsperry (~as@user/xsperry)
[15:39:06] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[15:40:01] *** Quits: wickedjargon (~wickedjar@cpeac202ebc90c3-cmac202ebc90c0.cpe.net.fido.ca) (Ping timeout: 258 seconds)
[15:40:25] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:e4c1:6db1:76db:ec36)
[15:40:40] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[15:41:47] *** Quits: betuxy (~ole@158.181.77.59) (Quit: WeeChat 3.2)
[15:41:51] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[15:42:19] *** Joins: srilyk (~wayne@user/waynew)
[15:42:40] *** Joins: betuxy (~ole@158.181.77.59)
[15:42:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:43:55] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[15:46:09] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[15:46:53] *** Quits: __that__ (~Guest22@195.59.68.214) (Quit: Client closed)
[15:48:25] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[15:48:44] *** Quits: mei (~mei@user/mei) (Quit: Client closed)
[15:48:58] *** Joins: mei (~mei@user/mei)
[15:51:14] *** Joins: chaosite (~chaosite@user/chaosite)
[15:52:58] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[15:53:14] *** Joins: waynew (~wayne@user/waynew)
[15:53:40] *** Joins: goldfish (~goldfish@user/goldfish)
[15:54:19] *** Joins: wyclif (~wyclif@user/wyclif)
[15:56:02] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[15:56:16] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[15:59:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[16:00:34] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[16:01:12] <sudomannn> i got into my container to inspect a package
[16:01:20] <sudomannn> in the pip freeze output i saw: pautils @ file:///utilities/utils
[16:01:29] <sudomannn> what does @ ... mean
[16:01:39] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:01:50] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[16:03:17] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:04:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[16:05:00] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[16:05:23] *** Joins: waynew (~wayne@user/waynew)
[16:06:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[16:06:20] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[16:07:05] *** Joins: chaosite (~chaosite@user/chaosite)
[16:07:21] *** Joins: pnoud (~pnoud@user/pnoud)
[16:08:50] <sudomannn> Yhg1s, I have just inspected the pautils in the container - pautils.es_utils.py seems to be cut off
[16:09:11] *** Keira is now known as KeiraT
[16:09:16] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 246 seconds)
[16:09:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:09:31] <sudomannn> the last function in the file which is what im trying to import - is absent in the copy of the package thats installed in the container
[16:09:46] <Yhg1s> and you're installing from a local directory?
[16:09:52] <anddam> sudomannn: I see the @ while installing requirements via VCS, but IIRC pip (or setuptools) does not support local paths
[16:09:53] <sudomannn> yep
[16:10:01] <Yhg1s> sudomannn: and in the source, is the file cut off as well?
[16:10:02] <anddam> nedbat should know better
[16:10:17] <Yhg1s> anddam: I'm not sure why you think that. they do.
[16:10:36] <sudomannn> By source, you mean in my host, or the copy in the container?
[16:10:42] <sudomannn> the code is intact on my host
[16:10:43] <Yhg1s> sudomannn: I mean what you're installing from.
[16:10:57] <sudomannn> The file has not been cut off, no
[16:11:12] <Yhg1s> sudomannn: in the directory you're installing from, in your docker container?
[16:11:32] <sudomannn> ooooh i see, sorry let me check
[16:11:54] *** Joins: wyclif (~wyclif@user/wyclif)
[16:11:59] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[16:12:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[16:14:00] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[16:14:18] <sudomannn> oof, its a multistage build, so the copied files do not exist in the output image :(
[16:15:29] *** Joins: palasso (~palasso@user/palasso)
[16:15:56] *** Joins: pnoud (~pnoud@user/pnoud)
[16:16:45] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[16:16:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:17:03] *** Joins: srilyk (~wayne@user/waynew)
[16:17:27] *** Joins: computeiro (~Wender@189.37.64.68)
[16:18:35] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[16:19:46] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4ec1)
[16:20:00] *** Joins: doev (~doev@82.115.100.62)
[16:20:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[16:21:30] <doev> hi. I have a pandas dateframe and I do a drop_duplicates on a subset. But I need a list of all values of another column that was hit by one duplicate. Similar to 'array_agg' of the postgresql group function.
[16:21:54] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:21:55] *** Quits: BrokenCog (~BrokenCog@132.sub-174-194-169.myvzw.com) (Read error: Connection reset by peer)
[16:22:51] *** Joins: acresearch (~acresearc@user/acresearch)
[16:22:59] *** Joins: chaosite (~chaosite@user/chaosite)
[16:23:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:23:30] <acresearch> people has youtube changed is policy arround pytube?   i can't seem to find URLs using the library, even though the same URLs work in firefox
[16:26:59] *** Reinhilde is now known as SarahMalik
[16:27:06] *** Joins: PdimH (~pdimh@user/pdimh)
[16:27:56] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[16:28:01] *** Joins: BrokenCog (~BrokenCog@132.sub-174-194-169.myvzw.com)
[16:28:08] <BtbN> acresearch, nope, their policy has always been: We don't support this
[16:29:11] *** Joins: wyclif (~wyclif@user/wyclif)
[16:29:14] *** Quits: p-i- (~Ohmu@node-mbs.pool-118-173.dynamic.totinternet.net) (Quit: Leaving...)
[16:29:25] *** Joins: timkofu (~timkofu@user/timkofu)
[16:29:40] <acresearch> BtbN: oh so pytube cannot be used to download youtube videos? unlike what it says in the manual?
[16:30:17] <BtbN> It's a third party library, like with all of them, Google changes something, they break. They get updated, and work again, until YouTube changes something.
[16:30:47] <acresearch> BtbN: how can i update it? if there is an update for it? i installed it through pip on a venv
[16:31:13] <BtbN> Figure out what Google changed, and patch it to be able to decipher it again
[16:31:33] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Quit: leaving)
[16:31:51] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[16:31:51] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[16:32:07] *** Joins: TheRAt (~TheRAt@user/therat)
[16:32:21] <acresearch> BtbN: i am not that good with chaging the insides of libraries,   + i want to get on with my real work,    if there is no update from the library i'll just use the online tools   :-)
[16:32:49] <BtbN> Sony is right now sueing those online tools to give out the details of who downloaded stuff.
[16:32:50] *** Joins: pnoud (~pnoud@user/pnoud)
[16:32:59] <BtbN> So, might not be the greatest idea.
[16:33:53] <acresearch> BtbN: do not really have a choice do i?      i just update puytube and still the same issue,    so online tool it is
[16:34:04] <BtbN> Use one of the dozens of alternatives?
[16:34:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:34:41] <acresearch> BtbN: there are alternatives?
[16:34:51] <acresearch> as python libraries?
[16:35:12] <BtbN> I have never heard of pytube before, so no idea how you even ended up with that one.
[16:35:13] *** Joins: daniel-k8 (~daniel-k@192.241.135.211)
[16:35:25] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:35:27] <BtbN> Normally you use youtube-dl, streamlink, ...
[16:35:46] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Ping timeout: 272 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:17] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:13] *** Joins: toretto (~0xe3b7@ca1-1.azirevpn.net)
[16:37:19] *** Quits: ulu (~ulu@user/ulu) (Remote host closed the connection)
[16:37:33] *** Joins: ulu (~ulu@user/ulu)
[16:37:39] *** Joins: pankid (~quassel@pankid.club)
[16:37:40] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 272 seconds)
[16:37:40] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Ping timeout: 272 seconds)
[16:37:40] *** Quits: pan (~quassel@pankid.club) (Ping timeout: 272 seconds)
[16:37:40] *** daniel-k8 is now known as daniel-k
[16:37:53] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[16:37:58] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[16:38:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[16:38:45] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 272 seconds)
[16:38:50] *** Joins: chaosite (~chaosite@user/chaosite)
[16:42:06] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[16:42:16] *** Joins: ionface (~ionface@user/ionface)
[16:43:17] *** Joins: wyclif (~wyclif@user/wyclif)
[16:43:39] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[16:44:42] *** Quits: jazzy (~jaziz@2600:380:4542:186:f862:a412:d266:3c8e) (Ping timeout: 240 seconds)
[16:47:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[16:47:44] *** Joins: cheater1__ (~Username@user/cheater)
[16:48:15] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:48:20] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[16:48:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[16:48:40] *** cheater1__ is now known as cheater
[16:49:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:51:33] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[16:51:43] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[16:52:00] <no_gravity> Does PEP 8 say something about nameing files that contain a class?
[16:52:06] *** Joins: srilyk (~wayne@user/waynew)
[16:53:05] <nedbat> no_gravity: there's no particular convention
[16:53:36] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[16:54:41] *** Joins: chaosite (~chaosite@user/chaosite)
[16:55:09] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 268 seconds)
[16:56:47] <no_gravity> nedbat: I see, thanks.
[16:58:42] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[16:58:59] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[16:59:16] *** Joins: Pickchea (~private@user/pickchea)
[16:59:22] <anddam> Yhg1s: I was possibly confusing straight file path support with VCS+file path to local repo support, IIRC I stumbled on an issue opened by nedbat apropos that
[16:59:50] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[16:59:57] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[17:02:10] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:25] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[17:03:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:04:07] *** Joins: waynew (~wayne@user/waynew)
[17:06:13] <anddam> Yhg1s: and also because I fiercely looked for a comprehensive documentation about install_requires syntax, but I was not able to determine why a syntax like "foo@ git+git://…" works
[17:06:37] <anddam> Yhg1s: that initial "<name>@ " puzzles me, it should be documented some place, right?
[17:06:46] *** Quits: doev (~doev@82.115.100.62) (Ping timeout: 246 seconds)
[17:07:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:08:04] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 272 seconds)
[17:08:12] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:08:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[17:09:05] *** Joins: heco (~redrum@user/redrum88)
[17:09:14] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[17:10:04] *** Quits: Wulf (~Wulf@user/wulf) (Quit: leaving)
[17:10:36] *** Joins: chaosite (~chaosite@user/chaosite)
[17:11:21] *** Joins: zeden (~zeden@user/zeden)
[17:12:02] *** Joins: shad (~shad@user/shad)
[17:12:44] *** Parts: wyclif (~wyclif@user/wyclif) ()
[17:15:31] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[17:17:30] *** Joins: Wulf (~Wulf@user/wulf)
[17:18:50] *** Quits: eyepeetee (~aa@075-135-186-198.res.spectrum.com) (Ping timeout: 272 seconds)
[17:21:36] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[17:23:40] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:24:12] *** Joins: ano (~weechat@user/ano)
[17:24:34] *** Quits: computeiro (~Wender@189.37.64.68) (Read error: Connection reset by peer)
[17:24:37] *** Joins: srilyk (~wayne@user/waynew)
[17:24:45] *** Quits: digital_carver (~DCarver@49.205.154.191) (Ping timeout: 268 seconds)
[17:26:23] *** Joins: chaosite (~chaosite@user/chaosite)
[17:26:26] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 272 seconds)
[17:26:51] *** Joins: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net)
[17:26:56] *** Joins: mossman93 (~quassel@user/mossman93)
[17:27:19] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:27:35] <ba> Hi - should I use git to drive my package version in setup.py? Why/why not?
[17:27:59] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[17:28:22] *** Joins: darksun (~darksun@user/darksun)
[17:28:23] <nedbat> ba: you should have an explicit version number in your setup.py. You can automate updating the number from another source, like git info.
[17:28:43] <nedbat> ba: you should have an explicit number so that people reading the source can see the version number, in the latest files and in the history.
[17:29:11] <ba> Thank you nedbat!
[17:29:54] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 240 seconds)
[17:30:00] <ali1234> one downside of pulling the version number from git is that you need an extra step to make a source tarball. that's getting less and less important these days though
[17:31:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[17:32:29] <Yhg1s> anddam: sure, it should be documented. early setuptools was not good at documenting.
[17:33:08] *** Joins: ice9 (~ice9@user/ice9)
[17:34:45] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[17:35:32] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[17:36:53] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[17:37:39] *** Joins: brickfat (~brickfat@user/brickfat)
[17:38:08] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Quit: leaving)
[17:38:26] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[17:38:41] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[17:39:28] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[17:39:42] *** Joins: LiftLeft (~LiftLeft@154.21.28.20)
[17:40:09] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[17:40:45] <graingert> is there a way to get pytype to write back its inferences?
[17:41:37] *** Quits: timkofu (~timkofu@user/timkofu) (Remote host closed the connection)
[17:42:44] *** Joins: chaosite (~chaosite@user/chaosite)
[17:42:53] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[17:43:32] <sudomannn> Yhg1s, can you believe between my last build of the problematic image from earlier and when I was actully trying to run it with docker compose, I git pulled a commit that had the missing function
[17:45:02] *** Joins: redgloboli (~redglobol@user/redgloboli)
[17:45:07] <sudomannn> Meanwhile genius me was trying to find a bug in an outdated image -_- 5 hrs wasted
[17:45:12] <sudomannn> fucking ridiculous man
[17:45:26] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-6808-ba30-f88f-6ae1.res6.spectrum.com) (Read error: Connection reset by peer)
[17:45:26] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[17:46:14] *** Joins: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net)
[17:46:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:47:02] *** Quits: hgg (~hgg@5.79.71.148.rev.vodafone.pt) (Quit: Client closed)
[17:47:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[17:47:39] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[17:49:55] *** Joins: cursey (uid186300@id-186300.charlton.irccloud.com)
[17:49:59] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[17:51:32] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:56:19] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 256 seconds)
[17:57:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:58:06] *** Joins: chaosite (~chaosite@user/chaosite)
[17:58:53] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[17:59:29] *** Joins: canopus (~user@116.68.99.187)
[17:59:47] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[18:00:04] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[18:00:46] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[18:00:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:02:33] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[18:02:34] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[18:02:45] *** Joins: srilyk (~wayne@user/waynew)
[18:02:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[18:07:22] *** Joins: pnoud (~pnoud@user/pnoud)
[18:07:28] *** Joins: varaindemian (~varaindem@86.124.78.162)
[18:10:45] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:11:00] *** Joins: nohop (~nohup@crack.nohup.nl)
[18:11:09] <nohop> Does python have a built-in sorted dictionary?
[18:11:23] <tumbleweed> nohop: OrderedDict
[18:11:32] <tumbleweed> (insertion-order sorted)
[18:12:09] *** Joins: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net)
[18:12:20] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[18:12:51] <mefistofeles> nohop: python dictionaries are ordered by insertion by default since some versions ago, fwiw
[18:13:16] <graingert> all supported python versions have insertion order dict
[18:13:41] <nedbat> nohop: what kind of sorted dict did you want?
[18:13:56] *** Joins: chaosite (~chaosite@user/chaosite)
[18:14:19] *** Quits: ulu (~ulu@user/ulu) (Remote host closed the connection)
[18:14:34] *** Joins: ulu (~ulu@user/ulu)
[18:15:07] <nohop> Oh, insertion sorted was indeed what I was looking for, thank you very much :)
[18:15:24] *** Quits: asix (~Anders@user/asix) (Quit: leaving)
[18:17:05] <jinsun> when I see sorted dictionary I think of the .net one (sorted by keys), but I don't think python has that built in. https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.sorteddictionary-2?view=net-5.0
[18:17:39] <nedbat> jinsun: you can sort the dict yourself if you need it in key orderr
[18:17:47] *** Joins: Elzington (~Elzington@193.27.13.102)
[18:17:53] <tumbleweed> or use a library like https://pypi.org/project/sortedcontainers/
[18:18:49] <jinsun> nedbat: ya but that will have to be done after each add  right?
[18:19:03] *** Joins: digital_carver (~DCarver@49.205.154.191)
[18:19:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[18:19:21] <nedbat> jinsun: sure if you need the order that frequently.
[18:19:33] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:20:35] *** Joins: asdfasdf (~Barones@2804:48dc:8500:0:a1c2:bcd:559d:2c34)
[18:21:20] <Tritium> is there any performance difference between "for ...: if some_bool: [huge block of indented code]" and "for ...: if not some_bool: continue; [same huge block of code but moved to the left 4 spaces]" ?
[18:21:21] *** Joins: magla (~gelignite@55d4a83f.access.ecotel.net)
[18:21:29] *** Joins: vsantana1 (~Thunderbi@2804:214:816e:9813:e81f:7e15:5e1a:6736)
[18:22:02] *** Joins: zeden (~zeden@user/zeden)
[18:22:35] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[18:22:51] <nohop> nedbat: What do you mean? Looks like, when iterating over a dict, it's in key-order already. Looks like what mefistofeles said is correct: they're insertion-sorted by default
[18:22:55] <nohop> Which is what I was looking for
[18:22:57] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:a1c2:bcd:559d:2c34) (Ping timeout: 256 seconds)
[18:23:47] <Tritium> nohop: nedbat was also talking to jinsun, who apparently was thinking of a mapping type that maintains sorted order of its keys based on some key function
[18:24:25] *** Quits: vsantana (~Thunderbi@fttx-177136148192.usr.predialnet.com.br) (Ping timeout: 265 seconds)
[18:24:25] *** vsantana1 is now known as vsantana
[18:24:53] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[18:25:18] <jinsun> nohop: the order is based on which key was insert first so if you insert "b" before "a" then "b" will show up first when you iterate, then I came with a different requirement for sorted dict where "a" has to come first even if it was inserted after "b"
[18:25:36] <nohop> Tritium: Ah, I see
[18:25:52] *** Joins: waynew (~wayne@user/waynew)
[18:26:06] <SnoopJ> Tritium, the answer to that kind of question is almost always "measure it," but the guarded version emits a slightly clumsier jump: https://bpa.st/4WSA
[18:26:08] <nohop> jinsun: I just tested this. When you iterate over .items(), a will actually show up before b
[18:26:17] <nohop> Regardless of insertion order
[18:26:34] <nedbat> nohop: that sounds wrong. what version of python, and can you share the code?
[18:27:06] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[18:27:39] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 268 seconds)
[18:27:40] <nohop> nedbat: https://pastebin.com/vRDN6Y4L
[18:28:00] <Repiphany> python 2 doesn't guarantee dictionary order
[18:28:03] <nedbat> nohop: 2.7 doesn't have sorted dicts
[18:28:10] <nedbat> nohop: python 3.6 or higher
[18:28:12] <nohop> Oooh, it's a python 3 vs 2 thing then
[18:28:34] <Tritium> SnoopJ: any difference would be...marginal... so not worth it for me to fork a project because the style bugs me :D
[18:29:23] <Tritium> nohop: a 3.6 vs. anything before 3.6 thing really
[18:29:48] *** Joins: chaosite (~chaosite@user/chaosite)
[18:29:48] <Tritium> (and only officially a 3.7+ thing, when the behavior became part of the language rather than an implementation detail)
[18:29:49] *** Joins: redgloboli (~redglobol@user/redgloboli)
[18:30:04] <SnoopJ> Tritium, it'll depend on the implementation, but I would expect it to be pretty much even because the semantics aren't that different, unless there's some wackiness in the object itself. Write it for readability.
[18:30:18] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Remote host closed the connection)
[18:30:40] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Ping timeout: 246 seconds)
[18:30:46] <nohop> Tritium: Oh, shit. That's not good. I'll look at the OrderedDict that tumbleweed mentioned then
[18:31:50] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[18:31:59] <Tritium> nohop: 3.6 is fairly ancient at this point, if you install python 3 now, you are VERY likely to get something much newer, unless you are both using linux, and your distro is also fairly ancient...
[18:32:22] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[18:32:30] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[18:34:30] *** Joins: srilyk (~wayne@user/waynew)
[18:34:40] <Tritium> SnoopJ: oh wow, moot point about forking the project for style anyways.... dug into another file and .... asyncore! its gonna need a major overhaul if i want to use it long term anyways
[18:35:03] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 268 seconds)
[18:35:08] <topoi> How would I accomplish something more general like sum resp. reduce a list with an anonymous function?
[18:35:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:35:28] <Yhg1s> topoi: a loop.
[18:35:43] *** Joins: MikZyth (~MikZyth@188.65.242.193)
[18:35:55] <hexology> what do you mean by 'sum resp. reduce'?
[18:36:31] <hexology> functools.reduce(lambda x,y: x+y, data)? functools.reduce(operator.add, data)? sum(data)?
[18:37:22] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[18:38:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[18:38:35] <topoi> hexology: this is exactly what I was looking for; kindly thanks!
[18:39:45] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[18:40:01] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[18:40:01] <topoi> s/this/the first/
[18:40:17] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[18:40:18] *** Joins: Blankspace (~abcd@user/blankspace)
[18:41:13] <Tritium> topoi: i hope that you are doing something more than simply summing a list... the first is possibly the least good choice of the three in that particular example
[18:41:32] <Tritium> to put it politely
[18:41:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[18:42:03] <topoi> Tritium: How do I have to interpret the 2. example resp. what is operator expecially?
[18:42:11] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:42:37] <Tritium> topoi: operator.add is the function that implements the + binary operator
[18:43:31] <topoi> Why aren't the 1. & 2. of hexology's example equivalent?
[18:43:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:43:39] *** Quits: yte3 (~0@151.15.46.204) (Quit: Textual IRC Client: www.textualapp.com)
[18:43:39] <nohop> Tritium: ah, perfect. Thank you!
[18:43:45] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[18:44:10] <topoi> Resp. in what terms is the 1. the least good choice?
[18:44:12] <Tritium> topoi: they will have the same result, the first one is harder to read and proooobably less performant
[18:44:18] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[18:44:35] <Tritium> id have to measure it but its doing MUCH more work
[18:44:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:44:45] <Tritium> at least at startup
[18:44:58] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[18:45:15] *** Quits: MikZyth (~MikZyth@188.65.242.193) (Quit: WeeChat 3.1)
[18:45:26] <topoi> As someone with some scheme experience I don't have any complaints about readability, to put it mildy. :3
[18:45:39] *** Joins: chaosite (~chaosite@user/chaosite)
[18:45:41] <topoi> And I'm more familiar with anonymous functions anyway.
[18:45:50] <Tritium> it does read like an expat from another language wrote it :D
[18:46:08] *** Quits: tdoss (~tdoss@wsip-70-166-238-194.ks.ks.cox.net) (Quit: Lost terminal)
[18:46:40] <topoi> :)
[18:46:58] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:a1c2:bcd:559d:2c34)
[18:47:43] *** Joins: asix (~Anders@user/asix)
[18:49:08] <Tritium> this might be out of date because I haven't looked in ages, but if data is just a sequence of numbers, sum(data) is the python native way to write it.  If data is NOT a sequence of numbers functools.reduce(operator.add, data) ...because of a design decision i disagree with in sum.  the lambda function version isn't really a python native way to write that but.... nothing inherently wrong with it, its just a bit cumbersome to a native pythoneer
[18:49:35] *** Quits: asdfasdf (~Barones@2804:48dc:8500:0:a1c2:bcd:559d:2c34) (Ping timeout: 256 seconds)
[18:50:31] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[18:51:02] <deniska> Doesn't sum() only specifically hate strings?
[18:51:15] <deniska> it sums lists with each other just fine :)
[18:51:27] <topoi> So "operator" would be a class that implements the binary add method? I don't understand why it's more performant though, but I'l give it a measure with the "timeit" module.
[18:51:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:51:56] <deniska> topoi: `operator` is a module which contains function versions of operators
[18:52:17] <Tritium> deniska: might be?  I got burned by it in the past and grudgingly just used reduce(operator.add any time it wasn't numbers because i got the feeling the developers didn't want me to use sum for anything else
[18:52:40] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-655e-630f-bd68-87b9.res6.spectrum.com)
[18:52:52] <SnoopJ> yea, sum() is for an iterable of numbers for some reason
[18:53:01] <hexology> TypeError: unsupported operand type(s) for +: 'int' and 'str'
[18:53:10] <hexology> weird internals leaking
[18:53:23] <deniska> sum([[1], [2]], start=[]) # ¯\_(ツ)_/¯
[18:53:25] <Tritium> hexology: theres a second argument.
[18:53:31] <SnoopJ> oh, it's "intended" for numbers
[18:53:32] <hexology> ...i had no idea
[18:54:08] *** Joins: cuz (~user@38.140.58.234)
[18:54:17] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: Lost terminal)
[18:54:18] <hexology> "TypeError: sum() can't sum strings [use ''.join(seq) instead]"
[18:54:26] <hexology> couldn't this just be a passthrough to ''.join()?
[18:54:29] <deniska> but for some reason sum(['a', 'b'], start='') is illegal
[18:54:38] <SnoopJ> hexology, it could, but it explicitly checks for str, bytes, and bytearray
[18:54:42] *** Joins: pnoud (~pnoud@user/pnoud)
[18:54:45] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[18:54:46] <SnoopJ> deniska, because of `start`
[18:54:55] *** Joins: P4ddyF (~PADDY@user/yogoyo)
[18:55:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[18:55:08] <SnoopJ> I think?
[18:55:17] <Tritium> I really hate that the error is to prevent "bad ideas"... it really made some code i was developing less general
[18:55:21] <SnoopJ> ah, yes: `PyObject* result = start;`
[18:56:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[18:56:07] *** Joins: timkofu (~timkofu@user/timkofu)
[18:56:13] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:56:22] *** Quits: jpic (~jpic@82.142.17.14) (Ping timeout: 272 seconds)
[18:56:53] <Tritium> functool.reduce(operator.add, "this is a horrible idea that will eat memory and cpu time, but they didn't guard against it here, so why in sum?")
[18:57:00] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[18:57:51] *** Joins: jpic (~jpic@82.142.8.102)
[18:57:52] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:58:04] <NeilRG> does anyone know how to "git clone" a pull request?
[18:58:12] <NeilRG> I want to set up a poetry dependency to it
[18:58:27] <NeilRG> This is what I tried: matplotlib = {git = "https://github.com/matplotlib/matplotlib.git@refs/pull/19255/merge"}
[18:58:29] <SnoopJ> NeilRG, clone the thing that the PR is pulling from (usually a branch)
[18:58:48] <NeilRG> SnoopJ: ohhh, interesting, let me try that
[18:59:03] <SnoopJ> or rather, clone the repo being pulled from, and check out the particular branch
[18:59:26] <SnoopJ> just remember that a PR is exactly what it says on the tin: a request to pull changes from $THERE to $HERE where $HERE is the repository the PR is attached to
[18:59:30] *** Joins: Socra (~Socra@206.217.216.27)
[18:59:40] <Tritium> NeilRG: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally TL;DR its already in the main repo, you need to checkout the PR
[18:59:43] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[18:59:53] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[18:59:57] *** Joins: Joel (~jjshoe@user/joel)
[19:00:10] <SnoopJ> Tritium, I guess str is a special case where they want to encourage people to use ''.join()
[19:00:30] <SnoopJ> since that's got more task-specific optimizations, probably?
[19:00:38] <NeilRG> Tritium: sorry I'm lost with your comment
[19:00:47] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Quit: leaving)
[19:01:09] *** Joins: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com)
[19:01:15] <Tritium> SnoopJ: ehhhh.  I got burned by two design decisions in one block of code and it just soured me to that argument
[19:01:30] *** Joins: chaosite (~chaosite@user/chaosite)
[19:01:53] <Tritium> NeilRG: Ignore my comment, the link is the instructions from microsoft themselves
[19:02:03] *** Quits: Blankspace (~abcd@user/blankspace) (Ping timeout: 256 seconds)
[19:02:16] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ended)
[19:02:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:02:28] <SnoopJ> Tritium, you could always override sum() for local use in a package (but I wouldn't prefer this to defining _sum() or something)
[19:02:32] *** Joins: Pickchea (~private@user/pickchea)
[19:02:42] *** Joins: redgloboli (~redglobol@user/redgloboli)
[19:02:43] <NeilRG> SnoopJ: I can't seem to get it working
[19:02:52] <NeilRG> SnoopJ: the pull request is from a specific branch
[19:03:05] <NeilRG> I can't get a path to just that branch and normally git wants a flag to specify it
[19:03:26] *** Quits: BrokenCog (~BrokenCog@132.sub-174-194-169.myvzw.com) (Read error: Connection reset by peer)
[19:03:32] <NeilRG> ah nevermind!
[19:03:35] <NeilRG> poetry has a branch option
[19:03:39] <SnoopJ> NeilRG, I think poetry does this as `requires = { git = "https://example.com/repo.git", branch = "branch" }` etc.
[19:03:45] <NeilRG> SnoopJ: yup!
[19:03:47] <NeilRG> just found that
[19:03:53] <SnoopJ> you can also use `rev` and `tag`
[19:04:20] <Tritium> SnoopJ: it was in one function, and i ultimately just used reduce.  the other design decision that killed the generalization of that block of code was collections.Counter objects dropping keys when added...if the value was negative
[19:04:34] <SnoopJ> note that poetry has a really annoying gotcha here: if your git tries to do interactive auth, poetry will hang silently and I think indefinitely at that prompt
[19:04:40] <NeilRG> poetry is just a marvel of technology
[19:04:55] <NeilRG> SnoopJ: ok thanks, I stopped those a long time ago
[19:05:01] <SnoopJ> I can't remember if that one is poetry's fault or cleo's
[19:05:05] <SnoopJ> probably poetry's
[19:05:17] *** Joins: waynew (~wayne@user/waynew)
[19:05:32] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:05:34] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.9.x-nightly-20210409-e0ffdddd - https://znc.in)
[19:05:36] <SnoopJ> the bizarre behavior of --verbose is definitely inherited from cleo but I'm not sure how much other zaniness is
[19:05:52] <NeilRG> SnoopJ: rev is really useful with the switch to "main" from "master" that some projects are doing
[19:06:04] <NeilRG> actually why is that a rev and not a brnach?
[19:06:06] <SnoopJ> Tritium, sorry, I don't think I'm understanding: what is there to be generalized if something is used exactly once?
[19:06:29] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[19:06:39] *** Joins: waynew_ (~wayne@user/waynew)
[19:06:43] *** Joins: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net)
[19:06:58] *** Joins: vsantana1 (~Thunderbi@fttx-177136148192.usr.predialnet.com.br)
[19:07:07] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 268 seconds)
[19:07:29] <SnoopJ> NeilRG, `rev` specifies the ID of the commit and is "most" canonical. A tag is a nickname for a particular commit (rev), and a branch is a nickname for a particular history of commits (every branch has its own HEAD)
[19:07:54] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:08:02] <NeilRG> SnoopJ: sure, but why is "main" specified as "rev" and not as "branch"?
[19:08:06] <NeilRG> main is a branch, right?
[19:08:11] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[19:08:16] <NeilRG> I guess it's a rev too
[19:08:21] <SnoopJ> no
[19:08:25] *** Joins: BrokenCog (~BrokenCog@132.sub-174-194-169.myvzw.com)
[19:08:26] <SnoopJ> it's the name of a branch
[19:08:26] <NeilRG> no to what?
[19:08:29] <NeilRG> ok
[19:08:37] <NeilRG> but I have specified in poetry "main" as a rev
[19:08:40] <NeilRG> and it seems to work
[19:08:42] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[19:08:59] *** Joins: zeden (~zeden@user/zeden)
[19:09:19] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:09:30] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[19:09:45] <SnoopJ> hmm, I guess it accepts stuff that resolve to revs
[19:09:59] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 256 seconds)
[19:09:59] *** Quits: vsantana (~Thunderbi@2804:214:816e:9813:e81f:7e15:5e1a:6736) (Ping timeout: 256 seconds)
[19:10:00] *** vsantana1 is now known as vsantana
[19:10:20] <SnoopJ> the docs suggest that rev would be a specific hash (an object ID in git jargon) but maybe the docs are wrong
[19:10:30] <NeilRG> SnoopJ: so I should change it to branch = "main"?
[19:10:44] <SnoopJ> NeilRG, I would
[19:10:52] <NeilRG> SnoopJ: thanks, that makes more sense
[19:11:17] *** Joins: Joel (~jjshoe@user/joel)
[19:11:23] <hexology> i didn't know about `class MyStrEnum(str, enum.Enum):` until today
[19:11:25] <hexology> that's a neat trick
[19:11:26] <SnoopJ> ideally someone wouldn't write a patch directly on main but I guess this is pretty common with a PR workflow since it can be merged wherever
[19:11:44] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:12:03] <Tritium> SnoopJ: the issue wasn't that i needed to use the sum function all over my code, its that i was writing a controller for output, didn't really care what the type was since i was going to let the resulting object format itself to text anyways, and the objects passed into the function were foreign.
[19:12:10] <NeilRG> SnoopJ: yeah I stopped writing patches on main because sometimes code reviews take so long and you want a second patch
[19:12:28] <Tritium> i just needed to ask objects to total themselves
[19:12:30] <NeilRG> SnoopJ: and then you're in a mess because if you move the original patch to its own branch you have to resubmit
[19:12:35] <NeilRG> the pull request
[19:12:58] <SnoopJ> Tritium, I'm losing the plot pretty rapidly here. You wanted behavior that wasn't like the built-in sum(), but you didn't write your own sum() because...?
[19:13:24] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[19:13:37] <deniska> hexology: `class OrderedCounter(OrderedDict, Counter): pass` or maybe the parent classes should be swapped, that's why it's terrible, don't use that :)
[19:13:43] <Tritium> SnoopJ: i wanted the behavior written on the tin of sum, before they gimped it for some object types
[19:13:59] <SnoopJ> Tritium, sum()'s behavior for str has been this way since sum() was introduced to Python
[19:14:01] <Tritium> SnoopJ: the point is i HAD to write an alternative
[19:14:23] <SnoopJ> https://github.com/python/cpython/commit/a70b19147fd163744be34745d393af7be603629f
[19:14:29] <hexology> deniska: this thing with Enum is specifically supported in the docs, https://docs.python.org/3/library/enum.html#restricted-enum-subclassing
[19:14:38] <hexology> (albeit very poorly explained)
[19:14:45] <hexology> can't vouch for OrderedDict et al :)
[19:14:56] <SnoopJ> hexology, this is a pretty magical case because `enum` is pretty weird
[19:15:05] <hexology> right. very useful magic though!
[19:15:26] <SnoopJ> magic is definitely the right word for multiple inheritance, just be cognizant of how many dragons can be summoned with magic :)
[19:15:45] *** Joins: VBreton (~Guest12@82-65-166-34.subs.proxad.net)
[19:15:54] <hexology> yeah i wouldn't do it in general, but in this case it seems to be very explicitly supported magic
[19:16:13] <SnoopJ> yea, this is 'just the way you do it' if you want enums that behave like strings
[19:16:33] <hexology> assert json.dumps(ClientState.CONNECTED) == '"CONNECTED"'
[19:16:34] <SnoopJ> whose members* behave like strings
[19:17:47] *** Joins: waynew (~wayne@user/waynew)
[19:19:23] *** Joins: MikZyth (~MikZyth@188.65.243.49)
[19:19:33] <Crassus> Hmm... does anyone feel like the global interpreter lock is annoying?
[19:20:04] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[19:20:18] *** Quits: waynew_ (~wayne@user/waynew) (Ping timeout: 240 seconds)
[19:20:24] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:20:28] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:20:31] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Client Quit)
[19:20:42] *** Quits: pneff (~pneff@2a02:168:fedc:0:ed3c:ad9e:e2ff:32a4) (Ping timeout: 240 seconds)
[19:20:54] *** Joins: zeden (~zeden@user/zeden)
[19:21:00] *** Joins: srilyk (~wayne@user/waynew)
[19:21:03] *** Joins: derelict (~derelict@user/derelict)
[19:21:04] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[19:22:21] *** Joins: rajkohaxor (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[19:23:26] <Tritium> Crassus: everyone that threads for cpu bound performance on multiple cores.  so...just dont do that.
[19:23:54] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[19:24:18] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 240 seconds)
[19:24:18] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 240 seconds)
[19:24:34] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[19:26:22] *** Quits: marvi (~marvi@195-67-124-194.customer.telia.com) (Quit: WeeChat 3.0.1)
[19:26:52] *** Joins: fofoni (~fofoni@user/fofoni)
[19:27:44] *** Joins: pnoud (~pnoud@user/pnoud)
[19:27:49] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[19:28:05] *** Joins: srilyk (~wayne@user/waynew)
[19:29:00] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:29:08] *** Joins: mertyildiran (~mertyildi@78.181.140.222)
[19:29:47] *** Joins: zeden (~zeden@user/zeden)
[19:30:58] *** Joins: amogorkon (~amogorkon@port-92-196-87-104.dynamic.as20676.net)
[19:32:16] <VBreton> Hi ! I started to use Tkinter. I would like to know if they are others graphics tools more recent or more appropriate. I make software (tools) in R&D, mostly on Linux environment to improve electronic sytem development.
[19:32:44] *** Joins: chaosite (~chaosite@user/chaosite)
[19:32:47] <Tritium> VBreton: pyqt5/pyside2
[19:33:01] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[19:33:15] <hexology> there are python bindings to Qt, Gtk, and Dear ImGui
[19:33:25] <Tritium> (or gtk, or wxpython...)
[19:33:38] <akk> VBreton: The choices are pretty much: tkinter, gtk, qt, wxwidgets. There's no obvious best answer, they each have their strengths and weaknesses.
[19:33:46] *** Joins: bitrot (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[19:34:03] *** Quits: mertyildiran (~mertyildi@78.181.140.222) (Quit: WeeChat 2.8)
[19:34:14] <Tritium> toga is still early days... i have hope for that
[19:34:31] <hexology> i've seen their site a few times but haven't seen anyone really talk about it
[19:34:41] <akk> I guess pygame-widgets is an option too, but I think it's pretty new.
[19:35:23] *** Joins: rajkosto (~rajkosto@109-93-188-243.dynamic.isp.telekom.rs)
[19:35:24] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[19:35:45] *** Joins: redgloboli (~redglobol@user/redgloboli)
[19:36:13] <Tritium> I would pick qt over gtk if you EVER want to go multiplatform, but if you ONLY work on linux gtk is fine
[19:36:38] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[19:36:58] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[19:36:58] <CrtxReavr> I'm quite sure there's gtk options in Windows.
[19:37:13] <hexology> it looks like toga uses gtk internally on linux, but native win/mac toolkits on win/mac
[19:37:21] <Tritium> CrtxReavr: there is, you can do it.  its SUCH a pain in the organs of generation...
[19:37:53] *** Quits: rajkohaxor (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[19:37:57] <VBreton> Thank you akk; I will continue to use tkinter and later I will try to discover pygame.
[19:37:59] <CrtxReavr> https://www.gtk.org/docs/language-bindings/python/
[19:38:19] <hexology> https://beeware.org/project/projects/tools/briefcase/ this also looks interesting, im aware of pyinstaller but i don't know much about it either
[19:38:22] *** Quits: bitrot (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[19:38:40] <CrtxReavr> https://www.gtk.org/docs/installations/windows/
[19:38:49] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[19:38:50] <CrtxReavr> Really doesn't look that bad.
[19:38:53] <Tritium> CrtxReavr: you start developing gtk on windows by installing msys2.... you start developing qt on most platforms with pip install ...and it comes with everything
[19:38:57] <hexology> i wonder how "fat" briefcase binaries are
[19:39:10] *** Joins: srilyk (~wayne@user/waynew)
[19:39:18] <Tritium> CrtxReavr: keeping in mind that on windows... python is not built with gcc...
[19:39:23] <CrtxReavr> Plus, gtk is fully FOSS.
[19:39:34] *** Joins: Adoi (~Adoi@user/adoi)
[19:40:00] <Tritium> i feel that argument looses some steam when talking about running code on *windows*
[19:40:13] <CrtxReavr> As an aside. . .
[19:40:30] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[19:40:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:40:56] <CrtxReavr> I remember being at the hospital with my wife for the birth of our daughter, and looking at the fetal heart monitor going "huh. . . those look like GTK widgets."
[19:41:01] <VBreton> Thank you very much too CrtxReavr for the interesting links. Thank you others too for their comments
[19:41:26] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:41:30] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[19:42:27] <Tritium> CrtxReavr: its when you see mosic widgets on medical equipment that you start worrying :)
[19:42:50] <CrtxReavr> VBreton, Tritium is probably right in his comments about Qt being easier on Windows than other platorms, but. . . I have seen people run into a licensing wall that causes many issues for Qt projects.
[19:43:52] <Tritium> CrtxReavr: that IS an issue if you use pyqt5, much less so with pyside2 (which only exists to resolve those licensing issues)
[19:46:02] *** Joins: LunarJetman (LunarJetma@user/zogatribe)
[19:46:50] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[19:46:52] <dka> Hi
[19:46:56] <LunarJetman> hi
[19:46:58] <LunarJetman> Python is slow and inefficient and contributes to climate change more than any other mainstream programming language.
[19:46:58] <dka> is it normal to see datetime.datetime in python code ?
[19:47:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[19:47:17] <dka> for instance here https://github.com/pass-culture/pass-culture-api/blob/79dc97ed57d03b2a9a5bf24f5ea8cb01b8ca9534/src/pcapi/scripts/payment/batch.py#L21-L27
[19:47:25] <Tritium> LunarJetman: citation needed
[19:47:25] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[19:47:45] <LunarJetman> Tritium: https://jaxenter.com/energy-efficient-programming-languages-137264.html#:~:text=Compiled%20languages%20like%20C%2C%20C,among%20the%20least%20energy%20efficient.
[19:47:52] *** Joins: cheater (~Username@user/cheater)
[19:48:03] <CrtxReavr> LunarJetman, I wonder how much green house gas this line of "thought" is generating.
[19:48:18] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[19:48:22] <maharg101> Python is intuitive and cool and contributes to climate research data science more than any other mainstream programming language ?
[19:48:39] <VBreton> Yes @CrtxReavr, Tritium is probably right but I think QT uses too much ressources for what I need and I used to preserve ressources. I think QT could be good for multiplatform development but I like to preserve quick install and ressources
[19:48:46] <LunarJetman> maharg101: only because it is calling into libraries written in C/C++
[19:49:04] <CrtxReavr> Also, a well written algorithm on a "slow" language, beats a crap alorithm on a "fast" language.
[19:49:14] <maharg101> ah. So it's C/C++ doing the heavy lifting ?
[19:49:23] <LunarJetman> CrtxReavr: bullshit; you need to learn about algorithmic complexity
[19:49:37] <CrtxReavr> Touche.
[19:50:03] <Tritium> LunarJetman: how many extra live stock need to be consumed to support developers for the longer development cycle of c/c++ applications?  you cant look at a single factor and make that kind of systematic judgment
[19:50:18] <LunarJetman> you compare like with like, i.e. the SAME algorithm on the DIFFERENT languages
[19:50:22] <CrtxReavr> LunarJetman, so you literally came in here just to share that nonsense?
[19:50:37] <LunarJetman> it isn't nonsense tho, dear, it is FACT
[19:50:47] <CrtxReavr> Seems like pretty obvious trolling.
[19:50:52] <Tritium> it is.
[19:51:01] <LunarJetman> trolling with facts isn't trolling, it is stating facts :D
[19:51:07] <maharg101> heads back to pycharm
[19:51:11] <LunarJetman> if you want to call facts trolls then you are in need of serious help
[19:51:14] <VBreton> maharg101, the heavy is made in C/C++. Python allow you to write quicky code readable
[19:51:25] <CrtxReavr> Facts, facts, or Trumpian facts?
[19:51:33] <LunarJetman> facts, as in things that are true
[19:51:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:51:52] <CrtxReavr> For various values of truth.
[19:51:52] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Ping timeout: 258 seconds)
[19:51:54] *** Joins: P403n1x87 (~p403n1x87@2001:470:69fc:105::689)
[19:51:55] <maharg101> VBreton I'm well aware :)
[19:51:59] <LunarJetman> now who is trolling, dear.
[19:52:06] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:52:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[19:52:18] <SnoopJ> LunarJetman, do you have a question about Python?
[19:52:25] *** Quits: anas (~anas@196.235.97.18) (Quit: WeeChat 3.2)
[19:52:59] <LunarJetman> Tritium: development is less of concern that actual runtime costs of using what is developed
[19:53:03] <LunarJetman> than*
[19:53:14] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[19:53:19] *** Joins: Auron (Auron956@user/auron)
[19:53:38] <Tritium> LunarJetman: that is highly doubtful for the vast majority of code
[19:53:44] <LunarJetman> Tritium: disagree.
[19:53:44] <SnoopJ> pytest question: I am writing some accuracy tests, is there a good plugin/workflow or maybe some guidance about how to store my results so I can reference the most recent release's performance when testing for a regression?
[19:53:49] <ammar2> LunarJetman: it depends on the scale, if some software is going to be run once then development time can easily eclipse run-time
[19:54:04] <ammar2> if it's used by thousands and thousands of servers all the time, the other is true
[19:54:05] <LunarJetman> ammar2: citation of that actually happening
[19:54:08] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:54:10] <SnoopJ> "development time" is one metric among many. "Energy consumed" is another
[19:54:15] <SnoopJ> (there are lots of these)
[19:55:13] <VBreton> maharg101, I use Python for strategical reasons: write more quickly code and readable. That is more easy to translate it if necessary in another language. Python is very good for prototyping softwares in science
[19:55:21] <Tritium> and there is the problem of defining a "standard program" ... we only know that this one test has this one set of results
[19:55:25] <Tritium> on that one machine
[19:55:28] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[19:55:46] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:55:53] <ammar2> SnoopJ: I think I've used pytest-benchmark for this before, check it out, is it what you're asking about?
[19:56:04] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[19:56:07] <ammar2> SnoopJ: as far as automated storage, you can probably use its JSON exporting and hook up your CI for it
[19:56:14] <SnoopJ> Tritium, you can make meaningful comparisons about the work necessary at runtime for a particular task, and people have (the paper in that link earlier is a good read)
[19:56:27] *** Quits: digital_carver (~DCarver@49.205.154.191) (Ping timeout: 268 seconds)
[19:56:33] <SnoopJ> but I would recommend reading the _paper_ and not the article, which is glossing too much for my taste.
[19:56:37] <maharg101> VBreton: I agree. I use it mostly to build systems with APIs and such like.
[19:56:55] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:56:56] <ammar2> SnoopJ: oh sorry, you said accuracy tests
[19:57:30] <ammar2> SnoopJ: yeah I think this is probably best handled by a CI, store and make the old accuracy data available
[19:58:28] <SnoopJ> ammar2, for now I think I'm probably just gonna end up with an in-repo sqlite DB that gets updated on releases and bunt the long-term down the road. We do have some in-house CI that tracks this kind of thing, but it sounds like a bear to wrestle with
[19:58:33] <Tritium> SnoopJ: oh, certainly.  to make a judgment of the environmental impact of one language over another you need be a bit more.... i hate this word, but holistic
[19:58:45] *** Joins: clawh (~clawh@185.244.214.60)
[19:58:47] <SnoopJ> Tritium, if you're interested in it, I really do recommend the paper
[19:58:49] *** Quits: toretto (~0xe3b7@ca1-1.azirevpn.net) (Changing host)
[19:58:49] *** Joins: toretto (~0xe3b7@user/toretto)
[19:59:09] *** Joins: milosz (~milosz@user/milosz)
[19:59:23] <LunarJetman> Tritium: people who use the word "holistic" have given up, they no longer want to put the effort into using their brain.
[19:59:26] <maharg101> dka: sure, or you from `from datetime import datetime` if you don't need other parts of datetime library
[19:59:33] <nedbat> LunarJetman: hello again.  Please try to stay productive in the channel.
[19:59:35] <ammar2> LunarJetman: you're being rather inflammatory
[19:59:36] <SnoopJ> It's absolutely reasonable to say that Python loses on the basis of energy: how could it be otherwise? almost all the computation happens at runtime (i.e. every time the program is started, work is repeated)
[19:59:45] *** Quits: toretto (~0xe3b7@user/toretto) (Quit: leaving)
[19:59:46] <SnoopJ> at least in *those* comparisons
[19:59:47] *** Joins: waynew (~wayne@user/waynew)
[19:59:47] <nedbat> LunarJetman: we've been through this before.
[19:59:53] <LunarJetman> nedbat: I am being productive, IRC is multi-tasking
[20:00:14] <nedbat> LunarJetman: joining this channel just to shit-post about Python is not productive.
[20:00:17] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[20:00:28] *** Quits: schumaml (~schumaml@dslb-178-002-189-095.178.002.pools.vodafone-ip.de) (Quit: WeeChat 3.0.1)
[20:00:52] <ammar2> productive as in productive towards the discussion in this channel lol
[20:00:55] <ammar2> not your personal productivity
[20:00:58] <LunarJetman> no but it is relaxing, I like emitting facts and I find it amusing when people call facts "trolls" or "shitposts"; if you don't like facts and rational truth you are in the wrong line of work, mate.
[20:01:27] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[20:01:42] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[20:02:13] *** Joins: srilyk (~wayne@user/waynew)
[20:02:22] <LunarJetman> and if what I said wasn't the case your glorious leader wouldn't be spending effort on improving CPython's performance.
[20:02:23] <SnoopJ> I've been considering that paper quite a lot since it came out, especially in light of how much better modern C++ is as an experience (but maybe this is an observer bias and I'm just better-equipped to write it)
[20:02:39] *** Quits: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com) (Quit: Client closed)
[20:02:51] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Remote host closed the connection)
[20:02:51] <nedbat> LunarJetman: your entire approach, including "dear" is dismissive and disrespectful.  Please adjust your approach.
[20:03:07] <LunarJetman> nedbat: no, I will not be toned by you are anyone else.
[20:03:09] <LunarJetman> dear.
[20:03:18] <LunarJetman> s/are/or/
[20:03:20] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[20:03:30] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[20:03:34] <SnoopJ> ammar2, I think one of the big sticking points for me in this is figuring out exactly when I should store new results. A flag that gets set at release-tag time maybe
[20:03:51] <nedbat> LunarJetman: really? why earn bans everywhere you go? You're a smart person. You could actually join communities in a useful way if you cared to.
[20:04:54] <LunarJetman> what you are asking is EXACTLY THE SAME as asking someone to speak with a different accent because you don't like it and my response to that is simply: FUCK RIGHT OFF
[20:05:11] *** ChanServ sets mode: +o nedbat
[20:05:18] <ammar2> LunarJetman: I can't speak for others but I and some others have agreed that python's runtime performance for equivalent programs is abysmal
[20:05:19] <Tritium> i was waiting for that...
[20:05:20] *** nedbat sets mode: +b *!LunarJetma@user/zogatribe
[20:05:20] *** LunarJetman was kicked by nedbat (Your behavior is not conducive to the desired environment.)
[20:05:30] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[20:05:34] <SnoopJ> well, it does depend on what metric(s) "performance" is tied to
[20:05:48] <SnoopJ> that's the whole point of that paper, really
[20:05:54] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 240 seconds)
[20:06:10] <SnoopJ> which is why they present Pareto-optimal categories for multiple combinations of metrics
[20:06:13] *** ChanServ sets mode: -o nedbat
[20:06:24] <CrtxReavr> nedbat, what took you so long, dear?  >=]
[20:06:25] <lericson> >>> [1,2] == (1,2)
[20:06:25] <lericson> False
[20:06:27] <lericson> since when?
[20:06:37] <nedbat> lericson: tuples don't equal lists
[20:06:41] <SnoopJ> lericson, since always I think
[20:06:51] *** Joins: Nact (~l@host-85-27-123-107.dynamic.voo.be)
[20:07:13] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[20:07:34] *** Joins: cheater (~Username@user/cheater)
[20:07:57] <InPhase> lericson: Should ['a', 'b'] == 'ab' ?
[20:08:10] <CrtxReavr> I could test on 2.6, but I'm too lazy to jump through the hoops of logging into that mess.
[20:08:20] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Ping timeout: 265 seconds)
[20:09:02] <InPhase> lericson: I'm actually of the opinion that [1,2] == (1,2) should be an exception throw, so I think it's still wrong behavior.  But I'm okay with it not being True.  I just think it should also not be False then.
[20:09:27] <SnoopJ> InPhase, what exception?
[20:09:35] <InPhase> "Don't Do That Exception"
[20:09:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[20:09:59] <lericson> hm
[20:10:09] <SnoopJ> InPhase, I guess I'm wondering why it's exceptional to compare objects of distinct type (in Python)
[20:10:11] <Julian> all heterogeneous comparisons should raise exceptions?
[20:10:13] <Tritium> InPhase: are you of the opinion that equality should imply type?
[20:10:15] <lericson> i guess i just assumed they would compare equal
[20:10:15] <SnoopJ> not distinct, different*
[20:10:16] <InPhase> SnoopJ: Perhaps TypeError
[20:10:22] <Julian> that's a recipe for lots of pain
[20:10:33] <Julian> (and lots of copying)
[20:10:35] <SnoopJ> InPhase, right that's the one that seems most apt, but then, why not TypeError for *all* list-to-not-a-list comps?
[20:10:43] <InPhase> SnoopJ: Yes, for all.
[20:10:48] <InPhase> What does [1,2] == 5 even mean?
[20:10:51] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-e88f-682c-e4d9-f6ba.res6.spectrum.com)
[20:11:04] <InPhase> If it's nonsense, why do we have False for nonsense?
[20:11:04] <SnoopJ> exactly what [1,2] == any_not_list_object means when
[20:11:19] <SnoopJ> InPhase, it's not nonsense in light of equality falling back on identity
[20:11:19] <InPhase> It's not even wrong.
[20:11:49] <SnoopJ> comparisons in numpy would become a lot more aggravating :(
[20:12:02] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:12:35] <Tritium> would make the comparison data model pretty useless...
[20:12:36] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[20:12:46] <Julian> I mean even without equality falling back on identity
[20:13:08] <Julian> equality is a property two objects have, if you don't have it, you're not equal
[20:13:18] <Julian> the question is what sense [1,2] == 5 *could* be true, and if it isn't, it's false
[20:13:24] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[20:13:27] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[20:13:33] <SnoopJ> it's easy to have this discussion about literals
[20:13:42] <SnoopJ> it's a lot harder to talk about when `[1, 2] == obj` is "wrong"
[20:14:16] <Julian> I mean if you think we shouldn't have heterogenous equality you're going to say that line needs to type check
[20:14:28] <SnoopJ> I don't see any way to make it unambiguous without throwing the whole "ask LHS first, then ask RHS if need be" paradigm
[20:15:35] *** Joins: Blankspace (~abcd@user/blankspace)
[20:16:00] <InPhase> Probably the whole question would be resolved with borrowing the notion of a === comparison in which only well defined comparisons yield a True.
[20:16:15] <InPhase> or False
[20:16:36] <SnoopJ> InPhase, or using annotations? 😇
[20:17:06] *** Quits: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be) (Ping timeout: 240 seconds)
[20:17:26] <Tritium> === solves a different problem that python doesn't have ... well... python 2 had it in ONE case....
[20:17:43] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:a1c2:bcd:559d:2c34) (Remote host closed the connection)
[20:17:44] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:17:51] <SnoopJ> https://bpa.st/VNZQ
[20:17:57] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:844f:906e:fe0b:2b13)
[20:18:03] <Tritium> i forget if it was JS of PHP where `"3" == 3` evaluates to true
[20:18:18] <SnoopJ> JS does have type coercion of this sort
[20:18:33] <SnoopJ> and uses === for "strict equality"
[20:19:21] *** Quits: iauc (~iauc@ti0061a400-1478.bb.online.no) (Quit: Client closed)
[20:19:26] <SnoopJ> --strict-equality is the relevant mypy flag if you don't want to just --strict
[20:20:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[20:20:23] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:20:33] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[20:20:42] <SnoopJ> not entirely sure what "overlap" means here, presumably they have to be directly-related types
[20:21:28] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:21:43] <lericson> tuple and list are so similar i would expect equality comparisons to do what you'd think because of duck typing
[20:22:08] <lericson> as for str and list, i'm not sure what i think
[20:22:12] <SnoopJ> user expectations are a hard nut to crack
[20:22:19] <InPhase> I'm of course not advocating copying javascript verbatim, as it seems to have enough quirks on comparisons to write an encyclopedia about.  :)
[20:22:21] <SnoopJ> "In the face of ambiguity, refuse the temptation to guess."
[20:23:00] <InPhase> But it's sometimes nice to have stricter definitions on operations.
[20:23:01] <SnoopJ> InPhase, I do wonder whether static analysis of that sort might work its way into the language proper at some point, but at least we have dedicated tools for it
[20:23:23] <SnoopJ> at some point you're going to hit a load-bearing part of the type system hehe
[20:24:04] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[20:24:05] <InPhase> SnoopJ: Yeah.  I don't know how it will go, but I think we hit a lot of limits in Python from the looseness, and it would be nice to be able to scale by selectively locking down.
[20:24:29] <SnoopJ> InPhase, I would say C++ is a fine example of how adding more features "solves" problems
[20:24:47] <SnoopJ> which is to say: kinda, but only if you keep track of which spellings are currently blessed
[20:25:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:25:20] *** ChanServ sets mode: +o infobob
[20:25:21] *** infobob sets mode: +b $a:Zogatribe
[20:25:21] *** infobob sets mode: -b *!LunarJetma@user/zogatribe
[20:25:44] <SnoopJ> here I'd much rather just use a static analyzer: if it's a brand new operator, I won't find out about the logic error until runtime, it might lurk for a good while
[20:26:27] <SnoopJ> a sequence comparison operator could be interesting, though?
[20:26:49] <SnoopJ> `[1,2] [=] (1,2)` looks perfectly hideous :)
[20:27:47] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[20:30:20] *** infobob sets mode: -o infobob
[20:30:34] *** Joins: ripdog_ (~quassel@user/ripdog)
[20:30:45] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[20:31:20] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Quit: szymon)
[20:31:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:31:54] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 240 seconds)
[20:31:59] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:32:26] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[20:32:33] <ATAD> I don't know if I agree that == comparison of different object types raising exceptions is a good idea -- what about "1 == 1.00" (int compared to float); that's a valid "True" as a result; if it raised a TypeError, that would be strange I would think
[20:32:42] <SnoopJ> InPhase, actually, this would be a good use-case for the similarity operator (~=) that Anthony Shaw talks about in his CPython Internals book.
[20:32:50] <SnoopJ> [1,2] is most definitely not equal to (1,2), but it *is* similar
[20:33:17] *** Joins: jarthur (~jarthur@pool-173-49-96-98.phlapa.fios.verizon.net)
[20:33:28] *** Quits: rajkosto (~rajkosto@109-93-188-243.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[20:33:46] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[20:33:56] <Julian> IMO it's a better argument that our mistake was not encouraging attribute comparisons more
[20:34:06] <Julian> [1,2] == (1,2) should be false
[20:34:11] *** Joins: srilyk (~wayne@user/waynew)
[20:34:14] <Julian> but [1,2].elements == (1,2).elements should be true
[20:34:21] *** Joins: clawh (~clawh@185.244.214.60)
[20:34:25] <SnoopJ> Julian, what would .elements be?
[20:34:36] <Julian> a view that returns a common type
[20:34:53] <Julian> (for any sequence)
[20:35:17] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[20:36:08] * SnoopJ would probably write `def seq_eq(a, b): return (len(a) == len(b) and all(aa == bb for aa,bb in zip(a,b)))` or somesuch if it came up a lot
[20:36:38] <Tritium> len(operand1) == len(operand2) and all(x == y for x, y in zip(operand1, operand2)) ... probably how you have to do it now?  i cant think of a more idiomatic way
[20:36:46] <Julian> yes you can of course do things now that we have the Python we have
[20:36:54] <Julian> but this would have "solved" the str == list debacle as well
[20:37:12] <SnoopJ> in exactly the same fashion: by changing the spelling the user uses
[20:37:17] <Julian> right
[20:37:28] <SnoopJ> it does not "solve" the == problem per se if I understand you correctly
[20:37:28] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:37:37] <SnoopJ> but then, I don't really think it's a problem :)
[20:37:42] <Julian> I didn't fully follow.. yeah that :)
[20:38:06] <Julian> I don't know what problem we think == has, but I think the above is a nicer design (and yeah additional functionality we don't have today)
[20:38:07] <SnoopJ> it's perfectly true that these objects aren't equal by their definition of the equivalence, and there is in general not one way to define equivalence classes
[20:38:19] <foo> Any suggestions for an OS X based local JSON viewer I can copy + paste text in and yank it out?
[20:38:21] *** Joins: crised (~crised@181.42.43.92)
[20:38:27] <SnoopJ> Julian, I think InPhase is thinking of e.g. how C++ does it with `operator=(T other)`
[20:38:41] * Julian nods
[20:38:45] <Julian> foo: #python-offtopic
[20:38:49] <SnoopJ> err, operator==
[20:39:13] <crised> I want to execute a list comprehension, but I don't need a list returned back. I just want a short-hand for a `for loop`. Should I use {}, instead of []?
[20:39:23] <nedbat> crised: you should use a for-loop
[20:39:39] <nedbat> crised: because it's the clearest expression of your intent.
[20:39:53] <SnoopJ> although I bet you could get operator== to have behavior a bit like what Python does with template metaprogramming
[20:40:12] <crised> nedbat: Will do. However, I will miss the one-liner ;)
[20:40:24] <dale> Also {} is going to make either a set or a dict?  So you'll be constructing some kind of object with the results with {} as well as with [].
[20:40:29] <nedbat> crised: are you running out of lines? I can send you some.
[20:40:39] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (Quit: The Lounge - https://thelounge.chat)
[20:40:47] <nedbat> ;)
[20:40:48] <SnoopJ> nedbat, do you accept bulk orders? Asking for a team
[20:40:59] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[20:41:02] *** Quits: VBreton (~Guest12@82-65-166-34.subs.proxad.net) (Quit: Client closed)
[20:41:03] <nedbat> SnoopJ: :D
[20:41:20] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[20:41:30] <Tritium> You joke, but with my recent projects i've been limited to 8k-8bytes of ram... so sending more lines would have a shipping charge :D
[20:41:48] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[20:41:53] <ATAD> b"\x0a" * ∞
[20:42:25] <SnoopJ> alas, ∞ is not a valid identifier :(
[20:42:30] <ATAD> indeed
[20:42:34] <SnoopJ> and interestingly, not valid inside one either
[20:42:45] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:e4c1:6db1:76db:ec36) (Quit: Leaving)
[20:42:48] <ATAD> just making a little joke there
[20:43:00] <Tritium> huh.  i thought you could use nearly arbitrary unicode in identifiers
[20:43:08] <SnoopJ> Tritium, Python follows Unicode Annex 31
[20:43:09] <dale> ATAD: Surely taking good jokes and ruining them by trying to make them real is a hallmark of programmer culture.
[20:43:14] <Tritium> mm
[20:43:33] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:43:42] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[20:44:12] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[20:44:46] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 258 seconds)
[20:44:52] * SnoopJ is perhaps just a little too taken with Python's very smart "this is someone else's problem" decision on identifiers
[20:45:04] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[20:45:45] *** Quits: ulu (~ulu@user/ulu) (Ping timeout: 256 seconds)
[20:45:53] *** Joins: ray (~ray@user/re)
[20:45:54] *** Joins: ulu_ulu (~ulu@user/ulu)
[20:46:04] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:46:14] <Tritium> its programmer ethos right there... "thank fudge, someone else already did the work"
[20:46:23] *** Joins: rolo_ (~error@2a02:8108:8dc0:1cec:dc01:46c2:6bfc:34be)
[20:46:31] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[20:46:34] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[20:46:42] *** Joins: cheater (~Username@user/cheater)
[20:46:57] <SnoopJ> it's very in-line with the community's "all are welcome" ethos and neat besides
[20:48:10] <SnoopJ> not always neat in a good way: equivalent identifiers are pretty surprising
[20:48:53] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:30] *** Quits: tims (~tims@123-243-10-176.static.tpgi.com.au) (Ping timeout: 240 seconds)
[20:49:30] <Tritium> wow, i have successfully procrastinated away the entire morning
[20:51:17] *** Quits: betuxy (~ole@158.181.77.59) (Quit: Leaving.)
[20:51:20] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[20:51:34] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:51:58] <akk> I'm playing with pipenv (first time pipenv user) and trying to get --site-packages to work (https://pipenv.pypa.io/en/latest/advanced/ says it should work).
[20:52:34] <akk> https://bpa.st/FQKA -- what am I doing wrong? bs4 is installed via apt, and as you see at the end, it works without pipenv.
[20:52:34] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[20:52:58] *** Joins: Warped (~Warped@user/warped)
[20:55:21] *** Quits: dambuster (~dambuster@185.193.170.225) (Quit: Leaving)
[20:56:19] *** niko is now known as o
[20:56:36] <ChrisWarrick> akk: pipenv is a bad idea, and so is --system-site-packages
[20:56:56] *** Joins: nathanjell (~Nathan@64.141.52.164)
[20:57:55] *** Joins: greedom (~greedom@2001:16b8:2e12:7900:4ece:fcc6:472a:e8d3)
[20:58:41] *** Joins: chaosite (~chaosite@user/chaosite)
[20:58:55] <CrtxReavr> pipenv gets so much hate. . .
[20:59:00] <BtbN> Depends on the usecase
[20:59:08] <BtbN> inside of a container, system-site-packages can be very useful
[20:59:15] <CrtxReavr> I've never had an issue with it.
[20:59:18] <akk> Oh, interesting. Somehow I'd gotten the idea that pipenv was the recommended way things were going.
[20:59:24] <ChrisWarrick> akk: no, that’s a lie
[20:59:29] <akk> I'll stick with regular venvs, then.
[20:59:31] <ChrisWarrick> BtbN: how would that help?
[20:59:34] <CrtxReavr> (That's an opinion.)
[20:59:58] <ChrisWarrick> CrtxReavr: the "recommended by python.org" thing was a lie or a misrepresentation
[21:00:13] <ChrisWarrick> akk: as for --system-site-packages, you effectively lose all the benefits of venvs with this option
[21:00:33] <SnoopJ> ChrisWarrick, can you elaborate on what makes it a bad idea to you?
[21:00:33] <CrtxReavr> Then don't use it.
[21:00:47] <ChrisWarrick> SnoopJ: pipenv or system-site-packages?
[21:00:48] <BtbN> ChrisWarrick, I make containers for our users, with all our dependencies pre-installed. They then just create a venv with system-site-packages, and install what they need on top.
[21:00:51] <SnoopJ> ChrisWarrick, pipenv
[21:00:54] <ChrisWarrick> SnoopJ: Pipenv is a dependency management tool. It isn’t compatible with most workflows, and comes with many issues. https://chriswarrick.com/blog/2018/07/17/pipenv-promises-a-lot-delivers-very-little/
[21:00:59] <akk> ChrisWarrick: I find there are still benefits (primarily being able to install packages that aren't available as debs).
[21:01:04] <BtbN> It's very nieche, but very useful in that case
[21:01:24] <SnoopJ> ChrisWarrick, ah, didn't realize you had a post about it, but that's perfect. Thanks :)
[21:01:26] <ChrisWarrick> akk: all packages are available in pypi and often in newer versions or with better packaging
[21:01:31] <akk> The reason I started looking into pipenv was that I thought it might let me upgrade packages, which seems to be very difficult with pip+virtualenvs.
[21:01:34] *** Joins: Akuli (~Akuli@82-203-161-68.bb.dnainternet.fi)
[21:01:46] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[21:01:46] <ChrisWarrick> akk: difficult?
[21:02:07] * SnoopJ has updated packages inside of venvs with pip many times
[21:02:25] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[21:02:28] <ChrisWarrick> BtbN: is the “container” you’re talking about the docker kind?
[21:02:29] <akk> ChrisWarrick: I've googled for how to upgrade everything in my venv and found pages with various shell loops that mostly don't seem to work, plus people saying "well, it might work but you shouldn't".
[21:02:45] <akk> e.g. https://coderwall.com/p/quwaxa/update-all-installed-python-packages-with-pip
[21:02:46] <BtbN> ChrisWarrick, singularity
[21:02:48] <NeilRG> test
[21:02:52] <ChrisWarrick> akk: pip-tools (pip-compile + pip-sync) can improve the situation
[21:03:02] <nathanjell> akk: you can update packages in virtual environments with no issues whatsoever. activate the virtual environment and use pip - no problems whatsoever
[21:03:14] <BtbN> It's pulling from Docker Hub, but I won't give my users implicit root via docker.
[21:03:19] <akk> nathanjell: I can update one package. How do I update everything?
[21:03:19] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[21:03:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:04:12] <ChrisWarrick> BtbN: I’d probably just create the venv in the base image and let users install stuff there
[21:04:13] *** Quits: jarthur (~jarthur@pool-173-49-96-98.phlapa.fios.verizon.net) (Quit: jarthur)
[21:04:23] <BtbN> ChrisWarrick, not possible. The image itself is read-only.
[21:04:36] <ChrisWarrick> BtbN: does it matter?
[21:05:01] <BtbN> How do you intend to create or install anything on something that's read-only?
[21:05:07] <BtbN> Only /home is mounted into it as read-write
[21:05:16] <nathanjell> akk: no different than outside of a virtual environment. specify the packages at the command line, perhaps automate it using pip list or freeze
[21:05:21] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[21:05:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:05:52] <kushal> akk, have a look at pip-tools, it helps :)
[21:06:07] <ChrisWarrick> BtbN: hm, maybe I’m thinking too dockery about it
[21:06:30] <BtbN> singularity has experimental support to overlay an rw-layer ontop of /
[21:06:42] <BtbN> but last time I tested it, it was incredibly wonky and not something I'd want to use
[21:06:49] <ChrisWarrick> BtbN: (and docker had it since day 1)
[21:06:55] <BtbN> docker just runs as root
[21:06:59] <BtbN> so... bad idea on a multi-user env
[21:07:05] <BtbN> singularity needs no permissions whatsoever
[21:07:10] *** Joins: pnoud (~pnoud@user/pnoud)
[21:07:33] <kushal> ChrisWarrick, on a different note, I spent the whole day today trying to figure out why 'build' is building wheels via different gcc arguments inside of a docker container than on a vm.
[21:07:35] <akk> Thanks, ChrisWarrick and kushal, I'll check out pip-tools.
[21:07:48] *** Quits: greedom (~greedom@2001:16b8:2e12:7900:4ece:fcc6:472a:e8d3) (Remote host closed the connection)
[21:07:53] *** Quits: akk (~akk@174-28-112-132.albq.qwest.net) (Quit: +++)
[21:08:10] <BtbN> singularity basically gives you a read-only /, based on some container image. And then mounts stuff into it. Usually /home and the usual Linux-FS.
[21:08:19] <kushal> https://share.riseup.net/#4BMTcPeYonJxZb6JeiwNww  on the top is inside of the container (circleci  buster 3.7), and below is bare metal/vm.
[21:08:28] <BtbN> So if you want to use the complex binary packages in the container, and still install stuff on top, a venv with system-site-packages it is
[21:08:43] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[21:10:51] <akk> ChrisWarrick: On why to use system-site-packages: not all packages install successfully from pip.
[21:11:03] <ChrisWarrick> akk: What packages?
[21:11:20] <ChrisWarrick> akk: This is a very rare situation these days.
[21:11:36] <akk> ChrisWarrick: python-gtk used to be a prime example; right now, python-gdal is failing.
[21:11:41] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 268 seconds)
[21:11:56] <ChrisWarrick> akk: failing how?
[21:12:12] <akk> Though it looks like that might just be a lack of the right -dev packages, I don't have the right header files.
[21:12:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[21:12:56] <akk> But I often encounter errors with packages where the C build wasn't tested on all platforms.
[21:14:31] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[21:15:26] <ChrisWarrick> it’s usually a good idea to try and find those -dev packages
[21:15:27] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-e88f-682c-e4d9-f6ba.res6.spectrum.com) (Quit: Leaving.)
[21:15:50] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-e88f-682c-e4d9-f6ba.res6.spectrum.com)
[21:16:06] *** Joins: greedom (~greedom@2001:16b8:2e12:7900:4ece:fcc6:472a:e8d3)
[21:16:39] *** Joins: waynew (~wayne@user/waynew)
[21:17:36] <akk> Sometimes I do, but it can be a lot of packages, 44 packages just to get the gdal headers, when there's a perfectly good single binary package.
[21:18:21] <topoi> Tritium: I wanted to use timeit to for measuring the functools, but somehow the environment lacks of the imports. The argument "setup" of timeit doesn't help either.
[21:18:31] <kushal> akk, it is not only gdal but also other related dependencies
[21:19:30] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 272 seconds)
[21:19:30] <akk> Yes, understood. I'm just saying that not everyone wants to build everything from source every time.
[21:19:40] <akk> If I wanted that I'd be using gentoo. :)
[21:20:01] <kushal> akk, people can just pull in wheels if they want to.
[21:20:38] *** Quits: canopus (~user@116.68.99.187) (Remote host closed the connection)
[21:21:49] <Tritium> topoi: i'm testing to make sure i have the timeit invocation correct...i'm also eating an entire hyperthread with it so....
[21:22:28] <akk> kushal: Wait, you're saying I could install packages like this without building them, that there's a built version somewhere already?
[21:22:44] <akk> (other than the OS distro repos)
[21:22:50] <kushal> akk, if there is a wheel on pypi for that package.
[21:22:54] <kushal> akk, yes.
[21:23:18] <kushal> akk, say you are doing python3 -m pip install PyQt5
[21:23:24] <kushal> that should pull in the wheel
[21:23:40] <ChrisWarrick> akk: lots of packages have wheels that just work™ on pypi
[21:23:51] <Tritium> topoi: https://bpa.st/URKQ
[21:23:57] *** Joins: teut (~teut@182.68.62.72)
[21:23:57] <akk> kushal: But if it didn't do that automatically when I ran pip -U install, then I guess the wheel isn't available.
[21:24:05] <ChrisWarrick> (just work™ assuming windows, macos, x86_64 linux)
[21:24:07] <teut> https://github.com/deap/deap   what does this thing do?
[21:24:13] <teut> when to use it?
[21:24:18] <kushal> akk, yup, most probably that.
[21:24:47] <nathanjell> akk: you can find which platforms have wheels available by going right to the PyPI site https://pypi.org/project/PyQt5/#files
[21:24:55] <akk> I find that a lot of packages want to build from C source when I install them on debian/ubuntu.
[21:24:56] <ChrisWarrick> teut: most people in here probably don’t know, the readme should be able to answer your question
[21:25:01] <akk> *when I pip install them
[21:25:07] <ChrisWarrick> akk: depends on the package
[21:25:09] *** Quits: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de) (Quit: Bye!)
[21:25:11] <ChrisWarrick> akk: try `pip install numpy` for example
[21:25:42] *** Joins: ray (~ray@user/re)
[21:25:43] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[21:25:57] <grym> or tensorflow or torch or scipy
[21:26:04] <grym> all of which (thank christ) have binary wheels
[21:26:05] <kushal> Anyone here used circleci/python:3.7-buster image?
[21:26:27] <grym> (for most platforms.  arm, alpine: you're out of luck)
[21:26:40] *** Joins: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net)
[21:26:50] *** Joins: reset (~reset@user/reset)
[21:26:53] *** Joins: chaosite (~chaosite@user/chaosite)
[21:26:57] <kushal> The way that image is building extensions is different than bare metal/vms. Uses a different set of arguments to gcc.
[21:28:25] <Tritium> grym: isnt there an arm repo of wheels for the common packages like scipy?
[21:28:48] <Tritium> piwheels
[21:28:57] <SnoopJ> yea, piwheels is pretty good
[21:29:02] <Tritium> its unofficial but you can get arm wheels
[21:29:27] <Tritium> the limitation on arm wheels is strictly an administrative one, and with M1 i'm sure that restriction is going away if not already gone
[21:29:43] <xsx> hi, i can use `pip install -e .` to add my project to installed one. it shows with the current version on the `pip list` etc. my question, should i update/reinstall the editable package after bumping version of it? or i can simply ignore the fact that it's listed as version that was available when installing the package for the first time?
[21:29:46] <SnoopJ> I'm not sure I'd even call it a limitation
[21:29:52] <grym> Tritium: yes, there are some options.
[21:29:52] <Tritium> the issue is *linux* arm wheels, because of *linux*
[21:30:01] <grym> Tritium: alpine + the science stack really does just suck, though
[21:30:29] <SnoopJ> musl alone creates plenty of headaches (which is not meant as a critique of musl)
[21:30:50] <SnoopJ> it's definitely the kind of thing where you should _really_ weigh the time you'll spend fiddling with alpine against the image space you'd be saving
[21:31:16] <grym> i ship fatbois and don't think twice, personally :)
[21:31:37] <grym> perhaps to the regret of our web team
[21:31:47] *** Joins: pnoud (~pnoud@user/pnoud)
[21:31:47] *** Quits: greedom (~greedom@2001:16b8:2e12:7900:4ece:fcc6:472a:e8d3) (Remote host closed the connection)
[21:31:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 265 seconds)
[21:32:18] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:32:29] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[21:33:47] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:34:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:35:53] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:37:05] *** Joins: skapata (~Skapata@user/skapata)
[21:37:21] *** Joins: srilyk (~wayne@user/waynew)
[21:37:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[21:38:06] *** Joins: Pickchea (~private@user/pickchea)
[21:38:56] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[21:39:04] *** Joins: waynew_ (~wayne@user/waynew)
[21:40:43] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[21:40:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[21:40:57] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[21:41:38] *** Joins: digital_carver (~DCarver@49.205.154.191)
[21:43:37] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[21:44:23] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:44:40] *** Joins: Betal (~Beta@user/betal)
[21:44:51] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:45:49] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[21:47:22] <argento> Hi, is there a way to set `sys.setrecursionlimit(1001)` at the command line? `python --foo 1001 script.py`?
[21:49:52] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[21:50:00] *** Joins: waynew (~wayne@user/waynew)
[21:50:21] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[21:50:32] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[21:52:00] *** Quits: teut (~teut@182.68.62.72) (Quit: Connection closed)
[21:52:04] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[21:52:19] <SnoopJ> argento, no, but you could do this with sitecustomize.py or other forms of site configuration: https://docs.python.org/3/library/site.html
[21:56:00] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:56:23] *** Joins: dustiestgolf (~spectruml@secure-wireless-nat-19-197.msu.montana.edu)
[21:57:12] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:58:24] *** Joins: jarthur (~jarthur@pool-173-49-96-98.phlapa.fios.verizon.net)
[22:00:43] <dustiestgolf> hello! is there a simple way to convert a bytestring into a string of bits? or just a regular string of zeros and ones? I have been converting to int and then using fstrings butt this doesnt seem like a great approach. Thanks in advance for your help!
[22:01:54] *** Quits: slbtty (~slbtty@206.176.130.245) (Remote host closed the connection)
[22:01:56] *** Quits: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net) (Ping timeout: 272 seconds)
[22:02:20] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[22:02:30] <Tritium> dustiestgolf: something like this? ''.join(bin(x)[2:] for x in b"bin")
[22:02:37] <bjs> dustiestgolf: it's not all that common an operation, but something like   `"".join(f"{x:b}" for x in bytestring)`
[22:02:41] *** Joins: pnoud (~pnoud@user/pnoud)
[22:02:50] <bjs> there are lots of ways of doing this and they're all roughly the same
[22:03:09] <bjs> dustiestgolf: uh wait no my code is definitely wrong :)
[22:03:17] <SnoopJ> `bin(int.from_bytes(bs, order))` is what I'd likely reach for
[22:03:37] <bjs> dustiestgolf: `"".join(f"{x:08b}" for x in bytestring)`
[22:03:42] *** Quits: zware (~zach@python/psf/zware) (Ping timeout: 244 seconds)
[22:03:58] <dustiestgolf> okay cool thanks thats pretty close to what i'm doing at this point! appreciate the help!
[22:04:17] *** Joins: krrishdhaneja (~krrish_dh@user/krrish-dhaneja/x-4890718)
[22:04:26] <dustiestgolf> i didnt realize i could do it as a oneliner like that so this definitely cleans things up a bit
[22:06:03] *** Joins: han-solo (~hanish@user/han-solo)
[22:06:23] *** Joins: zware (~zach@python/psf/zware)
[22:07:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[22:07:52] <Tritium> the only issue i can see with the from_bytes method is if there is significant 0 padding on the front of the bitstream
[22:08:20] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 258 seconds)
[22:09:01] *** Quits: rsx (~dummy@ppp-188-174-136-209.dynamic.mnet-online.de) (Quit: rsx)
[22:11:01] *** Joins: Gerula (~Gerula@user/gerula)
[22:11:04] <bjs> tbh bytes should just implement the "b" formatter
[22:11:18] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[22:11:21] <Tritium> And by significant i mean "meaningful" not "a lot"
[22:11:28] *** Joins: northernsage (~northerns@187.107.158.146)
[22:11:51] <Tritium> like if its a bitmask...that could cause problems without some post processing
[22:13:32] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:14:34] *** Quits: redgloboli (~redglobol@user/redgloboli) (Read error: Connection reset by peer)
[22:15:09] *** Joins: redgloboli (~redglobol@user/redgloboli)
[22:16:18] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Ping timeout: 240 seconds)
[22:16:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:17:42] *** Joins: darksun (~darksun@user/darksun)
[22:17:42] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[22:18:18] *** Joins: northernsage (~northerns@187.107.158.146)
[22:18:18] *** Quits: krrishdhaneja (~krrish_dh@user/krrish-dhaneja/x-4890718) (Quit: Quit)
[22:18:18] *** Quits: lacrymology (~lacrymolo@static-243-15-25-46.ipcom.comunitel.net) (Ping timeout: 258 seconds)
[22:19:24] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[22:19:46] *** Joins: Geronimo (~Geronimo@user/geronimo)
[22:20:13] *** Joins: pnoud (~pnoud@user/pnoud)
[22:20:41] <Pandadub> Guys, I'm importing a class from a file within the same dir, but it imports no only the class but evertying inside this file I'm using: from file1 import Class, is it a default behavior ?
[22:20:46] *** Quits: crised (~crised@181.42.43.92) (Ping timeout: 265 seconds)
[22:21:18] <bjs> Pandadub: well `from file1 import Class` then only the name "Class" is available. But for Python to "import" anything, it has to run the whole file
[22:21:25] <dustiestgolf> Tritium: Im not sure I understand what you mean. Basically where I'm at is reading 2 bytes from a serial device and i need to check if bit 15 is on
[22:21:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[22:21:38] <bjs> dustiestgolf: imagine your bytes are [0, 1, 1]
[22:22:10] <bjs> then you want probably want bits "0000 0000 0000 0001 0000 0001"
[22:22:28] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[22:22:44] <Tritium> dustiestgolf: imagine if both bytes were all 0.... bin(int.from_bytes(bs, order)) would return "0b0" ...which would complicate checking for bit 15 on the bitmask.  not a LOT, but it would be complicated
[22:22:48] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:22:50] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[22:23:02] <dustiestgolf> bjs: right, thats what im looking for
[22:23:07] *** Joins: Adoi (~Adoi@user/adoi)
[22:23:15] *** Joins: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net)
[22:23:26] <bjs> dustiestgolf: that's what my line will do,   "".join(f"{x:08b}" for x in some_bytes)
[22:23:33] <dustiestgolf> Tritium: i think that bj's solution avoids that issue with the padding
[22:23:36] <bjs> dustiestgolf: but note this isn't always what you want (e.g. if the bytes are actually a number, or some data structure etc)
[22:23:59] <Pandadub> I have some prints() in Class file and it get printed when it is imported, this is odd to me bjs , is that right?
[22:24:06] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[22:24:07] <bjs> Pandadub: yes that is correct
[22:24:07] <dustiestgolf> bjs: totally! unfortunately this device sometimes sends numbers and sometimes needs you to read individual bits haha
[22:24:53] <bjs> dustiestgolf: okay but imagine something sends y ou the number 307.  This means the number is two bytes right?
[22:25:02] *** Joins: candyman (~candyman@user/candyman)
[22:25:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[22:25:22] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[22:25:34] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:25:36] *** Joins: rajkosto (~rajkosto@109-93-188-243.dynamic.isp.telekom.rs)
[22:25:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:26:33] <bjs> dustiestgolf: and since it's multiple bytes they could appear in the "wrong" order (e.g. on little-endian systems)
[22:27:06] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[22:28:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:28:23] *** Joins: twinsignal (~twinsigna@68.235.43.70)
[22:29:15] <dustiestgolf> bjs: true. Luckily I'm implementing a python interface for a public standard that specifies these types of devices will be bigendian
[22:29:39] <dustiestgolf> bjs: but these are all important considerations I should still be keeping in mind.
[22:30:13] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[22:30:27] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[22:30:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:31:53] <Pandadub> great, thanks bjs
[22:31:53] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[22:32:04] *** Joins: northernsage (~northerns@187.107.158.146)
[22:33:01] *** Joins: ntdll (~ntdll@user/ntdll)
[22:33:36] *** Quits: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net) (Ping timeout: 272 seconds)
[22:33:59] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[22:34:18] *** Joins: darksun (~darksun@user/darksun)
[22:35:42] *** Quits: venmx (~albasawa@host81-155-235-58.range81-155.btcentralplus.com) (Quit: leaving)
[22:36:06] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[22:36:23] *** Joins: pnoud (~pnoud@user/pnoud)
[22:39:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[22:40:16] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[22:40:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:40:26] *** Joins: srilyk (~wayne@user/waynew)
[22:40:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:41:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:41:33] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[22:43:24] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[22:43:54] *** Joins: northernsage (~northerns@187.107.158.146)
[22:44:39] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:44:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:45:31] <kevr> Is there a way to grab $HOME inside of pyproject.toml?
[22:45:59] <SnoopJ> kevr, not as far as I know. Why?
[22:46:15] <kevr> SnoopJ: Because I'd like to use a pyproject.toml that changes some paths based on the $HOME.
[22:46:30] <SnoopJ> kevr, sure, that's relatively obvious. I was hoping you could tell us a little more than that.
[22:46:36] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[22:46:52] *** Quits: mei (~mei@user/mei) (Quit: Client closed)
[22:47:01] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[22:47:04] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 252 seconds)
[22:47:23] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[22:47:42] <SnoopJ> perhaps what you are doing could use relative pathing information from pyproject.toml and combine it with os.environ["HOME"] during configuration.
[22:47:47] <kevr> SnoopJ: I'm using coc.nvim and coc-pyright, and coc-pyright requires an extra configuration outside of COC inside of a pyproject.toml or pyrightconfig.json. In my setup, I have a virtualenv where I configure pyright for that virtualenv inside of pyproject.toml which works great. but, it's a project that people share, and so I don't want to use absolute paths from my home.
[22:48:12] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:48:34] <kevr> these vim python lsps have been driving me insane today.
[22:48:34] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:48:40] <SnoopJ> I would prefer the separate config file in that case, I think
[22:49:14] *** Joins: manti7 (~manti7@176.10.104.94)
[22:49:15] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[22:49:19] <kevr> Bleh... yeah, screw it.
[22:49:36] *** Joins: northernsage (~northerns@187.107.158.146)
[22:49:44] *** Quits: jarthur (~jarthur@pool-173-49-96-98.phlapa.fios.verizon.net) (Quit: jarthur)
[22:49:45] *** Joins: mei (~mei@user/mei)
[22:50:00] <ChrisWarrick> kevr: I’d probably complain to coc-pyright and propose a PR for some form of ~ support
[22:50:27] <SnoopJ> yea, could be that upstream could come up with a spelling in pyproject.toml that helps you out
[22:50:52] <kevr> SnoopJ: It would be better if they just allowed us to use a configuration located somewhere else than the project root, and by hidden files.
[22:50:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[22:51:03] <kevr> coc.nvim doesn't actually allow you to configure it as you would expect.
[22:51:28] *** Joins: darksun (~darksun@user/darksun)
[22:51:40] <ChrisWarrick> or you know, vimrc
[22:51:44] <kevr> They basically hard require either one of those files to exist in there, which means that i have to stare at it in my unstaged list or add it to gitignore.
[22:51:49] <kevr> ChrisWarrick: Yeah, but how?
[22:51:52] <SnoopJ> kevr, yea, could be an environment variable or something
[22:51:58] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 272 seconds)
[22:52:00] *** Joins: anas (~anas@196.235.97.18)
[22:52:16] <ChrisWarrick> kevr: that’s not a question for me, that’s a bug report for coc.nvim
[22:52:22] <kevr> :P
[22:52:23] *** ulu_ulu is now known as ulu
[22:52:43] <SnoopJ> the joys of tooling, I guess
[22:53:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:53:13] <kevr> Even more fun: coc-python is deprecated and points to coc-jedi, coc-jedi is deprecated and points to coc-python
[22:53:14] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[22:53:49] *** Quits: catdog (~quassel@birdperson.tuxzone.org) (Ping timeout: 256 seconds)
[22:54:11] <kevr> Well, coc-python points to both, coc-jedi or coc-pyright, and coc-pyright is not deprecated :P
[22:54:18] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[22:54:55] *** Joins: srilyk (~wayne@user/waynew)
[22:56:27] *** Joins: skapate (~Skapata@user/skapata)
[22:57:08] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[22:58:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[22:59:42] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[22:59:58] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:59:59] *** Joins: cheater (~Username@user/cheater)
[23:01:27] *** Quits: anas (~anas@196.235.97.18) (Quit: WeeChat 3.2)
[23:01:45] *** Joins: anas (~anas@196.235.97.18)
[23:01:49] *** Joins: schumaml (~schumaml@p200300e2ef04630053c1821a43d17d29.dip0.t-ipconnect.de)
[23:02:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:02:51] *** Joins: Celeo (~Celeo@user/celeo)
[23:02:51] *** Joins: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net)
[23:02:54] *** Joins: SteveP (~steve@99-98-103-29.lightspeed.tukrga.sbcglobal.net)
[23:03:45] <SteveP> Is anyone else having any issues with poetry/pip not resolving the latest 1.3.0 version of Pandas that was just released earlier today?
[23:04:35] <grym> SteveP: looks like the wheels are up for 3.7 only right now? https://pypi.org/project/pandas/#files
[23:05:16] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[23:05:16] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[23:05:33] *** Joins: northernsage (~northerns@187.107.158.146)
[23:05:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:05:44] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[23:05:54] *** Quits: Blankspace (~abcd@user/blankspace) (Ping timeout: 240 seconds)
[23:06:10] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[23:07:22] *** Quits: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[23:10:32] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[23:10:54] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:e4c1:6db1:76db:ec36)
[23:10:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[23:11:12] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Ping timeout: 258 seconds)
[23:12:52] <SteveP> Ahh, thanks!  A bit frustrating that Poetry can't figure that out, and use the correct dependency for my version of Python.  Or that the Pandas folks only shipped binaries up to 3.7.  I'm a bit new, so I'm not sure what the customs are around this.
[23:13:17] <grym> SteveP: if i'm right, it's the latter; and the solution is to wait a day or so
[23:14:18] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:14:19] *** Joins: darksun (~darksun@user/darksun)
[23:14:27] <grym> poetry just asks pip to do stuff
[23:14:39] <grym> and pip won't be able to give you wheels if there aren't any yet
[23:16:54] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[23:19:50] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[23:20:42] *** Joins: jarthur (~jarthur@pool-173-49-96-98.phlapa.fios.verizon.net)
[23:26:00] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:27:21] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[23:27:29] *** Joins: waynew (~wayne@user/waynew)
[23:30:33] *** Joins: ulu_ulu (~ulu@user/ulu)
[23:31:59] *** Joins: VBreton (~Guest16@82-65-166-34.subs.proxad.net)
[23:32:56] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[23:33:03] *** Quits: ulu (~ulu@user/ulu) (Ping timeout: 258 seconds)
[23:33:19] *** Quits: ulu_ulu (~ulu@user/ulu) (Remote host closed the connection)
[23:33:32] *** Quits: moto (~moto@user/moto) (Read error: Connection reset by peer)
[23:33:37] *** Joins: ulu_ulu (~ulu@user/ulu)
[23:34:24] <SteveP> I'm good now.  I was just using the wrong syntax to pin poetry to a specific older version of the dependency, so it wouldn't try to upgrade.
[23:35:21] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:36:20] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[23:36:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:36:42] *** Joins: northernsage (~northerns@187.107.158.146)
[23:38:02] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[23:38:12] *** Joins: srilyk (~wayne@user/waynew)
[23:39:39] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[23:40:15] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Client Quit)
[23:41:39] *** Joins: kosh (~kosh@user/kosh)
[23:41:40] *** Quits: cruzr (~cruzr@2604:4300:a:16b::6) (Remote host closed the connection)
[23:41:58] *** Joins: cruzr (~cruzr@2604:4300:a:16b::6)
[23:41:59] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[23:42:34] *** Quits: VBreton (~Guest16@82-65-166-34.subs.proxad.net) (Quit: Client closed)
[23:42:45] *** Quits: jess (~jess@libera/staff/jess) ()
[23:42:54] *** Quits: amogorkon (~amogorkon@port-92-196-87-104.dynamic.as20676.net) (Quit: just use()!)
[23:43:07] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Remote host closed the connection)
[23:43:15] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[23:43:22] *** Joins: darksun (~darksun@user/darksun)
[23:45:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:46:52] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[23:47:01] <argento> SnoopJ: thanks i'll check it out
[23:47:24] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[23:47:56] *** Joins: waynew (~wayne@user/waynew)
[23:48:46] *** Joins: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net)
[23:49:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[23:51:03] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[23:51:37] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 256 seconds)
[23:52:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:52:33] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[23:52:35] *** Joins: vlm (~vlm@user/vlm)
[23:57:20] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:58:15] *** Joins: betuxy (~ole@158.181.77.59)
[23:58:44] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[23:59:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:59:54] *** Quits: xsx (~x@3.red-81-36-122.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
