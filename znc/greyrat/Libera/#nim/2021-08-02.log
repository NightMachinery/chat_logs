[00:13:53] <FromDiscord> <theangryepicbanana> is play.nim-lang down? I suddenly started having issues running stuff
[00:17:36] <FromDiscord> <theangryepicbanana> nvm my code was just really bad lol
[00:36:07] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[00:44:04] *** Quits: max22- (~maxime@2a01cb0883359800f19449ecb534c013.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:45:50] *** Joins: max22- (~maxime@2a01cb088335980007d82517cdd3767c.ipv6.abo.wanadoo.fr)
[00:50:52] *** Quits: max22- (~maxime@2a01cb088335980007d82517cdd3767c.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:37:32] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:39:07] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[02:05:11] *** Joins: max22- (~maxime@2a01cb0883359800ed83cd7df5cf4480.ipv6.abo.wanadoo.fr)
[02:08:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @haxscramper\:matrix.org , parsercombinators also seem to work well in Nim\: https://xmonader.github.io/nimdays/day21_parsec.html#parser-combinators
[02:49:02] <fn> <11ForumUpdaterBot99> New thread by Xioren: Possible to have a reference in a seq of another type?, see https://forum.nim-lang.org/t/8290
[03:01:16] <FromDiscord> <theangryepicbanana> huh, why does `nnkDo` have a bunch of extra empty nodes?
[03:05:26] <FromDiscord> <theangryepicbanana> sent a code paste, see https://play.nim-lang.org/#ix=3uKb
[03:05:38] <FromDiscord> <theangryepicbanana> (edit) "https://play.nim-lang.org/#ix=3uKb" => "https://play.nim-lang.org/#ix=3uKc"
[03:05:53] <FromDiscord> <theangryepicbanana> (edit) "https://play.nim-lang.org/#ix=3uKc" => "https://play.nim-lang.org/#ix=3uKd"
[03:42:40] *** Quits: max22- (~maxime@2a01cb0883359800ed83cd7df5cf4480.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:42:55] <FromDiscord> <⃟⃟> how do i compile with optimization
[03:46:17] <FromDiscord> <Elegantbeef> `-d:release` and for enabling LTO either through `-d:lto` or `--passC:-flto` if that doesnt work
[03:57:56] <FromDiscord> <arne> @theangryepicbanana the empty nodes are placeholders for parts that might be part ore were at some point part of the ast.
[03:59:02] <FromDiscord> <arne> ast componets are positon based, that means if some part isn't used anymore, it needs to stay in the ast as an empty node, so that the other parts of the ast are still accessible as from the same index
[03:59:38] <FromDiscord> <theangryepicbanana> In reply to @arne "<@!356108561232953344> the empty nodes": hmm ok
[05:53:04] <FromDiscord> <lamersc.com 🐧> So for the difference between Rust and Nim ARC, does rust place calls to free memory at compile time,  while Nim actively frees memory as their reference count hits 0?
[05:56:02] <FromDiscord> <Elegantbeef> Arc is CT afaik
[05:56:38] <FromDiscord> <Elegantbeef> You can compile with `--expandArc` iirc to see where it inserts calls
[05:56:53] <FromDiscord> <lamersc.com 🐧> In reply to @Elegantbeef "Arc is CT afaik": What does CT stand for?
[05:56:58] <FromDiscord> <Elegantbeef> Compile time
[05:57:12] <FromDiscord> <lamersc.com 🐧> Ohhhh okay, I’ll check it out
[05:57:49] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:58:02] <FromDiscord> <Elegantbeef> Might be a good read https://nim-lang.org/blog/2020/10/15/introduction-to-arc-orc-in-nim.html
[06:55:39] <FromDiscord> <theangryepicbanana> does anyone know why this isn't working? https://replit.com/@theangryepicbanana/nim-interface-test
[06:56:38] <FromDiscord> <theangryepicbanana> basically a generic type isn't matching a generic concept with the equivalent type parameter constraints
[06:56:46] <FromDiscord> <theangryepicbanana> (edit) 04removed "the"
[06:57:31] <FromDiscord> <theangryepicbanana> when implicitly calling a converter
[07:02:13] <FromDiscord> <theangryepicbanana> basically something along the lines of ``converter convert[C: MyConcept](x: C): Values[C.T] = ...``
[07:02:28] <FromDiscord> <theangryepicbanana> (edit) "Values[C.T]" => "MyObj[C.T]"
[07:03:03] <FromDiscord> <theangryepicbanana> (as a side note, do edits work on the irc bridge?)
[07:08:23] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:29:09] <FromDiscord> <Elegantbeef> Could you minimize it a bit so it's more clear what's going on?
[07:56:14] <FromDiscord> <theangryepicbanana> In reply to @Elegantbeef "Could you minimize it": yeah sure, I'll make a small thing for it real quick
[08:06:04] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[08:07:08] *** Joins: xet7 (~xet7@user/xet7)
[08:11:08] <FromDiscord> <theangryepicbanana> In reply to @Elegantbeef "Could you minimize it": https://play.nim-lang.org/#ix=3uKU
[08:11:43] <FromDiscord> <theangryepicbanana> if the \`is-a\` constraint is removed, it works just fine
[08:14:01] <FromDiscord> <Rika> I believe converters don’t really mix with concepts
[08:14:02] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[08:14:16] <FromDiscord> <theangryepicbanana> In reply to @Rika "I believe converters don’t": they actually do, it's just undocumented
[08:14:28] *** Joins: thunder (~thunder@user/thunder)
[08:14:53] <FromDiscord> <Rika> Which either means they actually don’t or no one has written docs of it, depending on if you look at the compiler code or not
[08:15:15] <FromDiscord> <Rika> What I mean is
[08:15:22] <FromDiscord> <Rika> It might just be a coincidence that they do
[08:15:35] <FromDiscord> <Rika> That they do to a degree
[08:15:39] <FromDiscord> <theangryepicbanana> https://github.com/nim-lang/Nim/blame/1fb9a6d94631bf7f3570d3382874ba2d59e6ddbb/doc/manual_experimental.rst#L685-L716
[08:15:56] <FromDiscord> <theangryepicbanana> wrong ref
[08:16:19] <FromDiscord> <theangryepicbanana> well either way it's somewhere in there
[08:16:57] <FromDiscord> <theangryepicbanana> but again, my code works just fine without the proc constraint
[08:17:20] <FromDiscord> <theangryepicbanana> which means that something about the proc is wonky, which is weird because it ain't doing anything special
[08:18:33] <FromDiscord> <theangryepicbanana> oh I suppose it would help if I actually added the type params
[08:18:40] <FromDiscord> <theangryepicbanana> https://play.nim-lang.org/#ix=3uKW
[08:19:43] <FromDiscord> <theangryepicbanana> but basically, it seems like `MyConcept` is no longer able to see its type parameters once that constraint is added
[08:25:02] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[08:26:11] *** Joins: xet7 (~xet7@user/xet7)
[08:30:52] <FromDiscord> <Rika> Perhaps this is yet another bug of the current implementation of concepts lol
[08:35:29] *** Joins: vicfred (~vicfred@user/vicfred)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:45:21] <FromDiscord> <theangryepicbanana> In reply to @Rika "Perhaps this is yet": oof lol
[08:45:29] <FromDiscord> <theangryepicbanana> guess imma report that later
[08:45:37] <FromDiscord> <Elegantbeef> I mean you're using concepts wrong in that case arent you?
[08:45:45] <FromDiscord> <Elegantbeef> You're mixxing old style with new style arent you?
[08:46:10] <FromDiscord> <Rika> Oh
[08:46:15] <FromDiscord> <Elegantbeef> I havent got a working version, just pointing out my guess
[08:46:27] <FromDiscord> <Rika> No that’s wrong old style syntax
[08:46:50] <FromDiscord> <Rika> I didn’t bother actually reading the concept ayy lmao
[08:46:58] <FromDiscord> <theangryepicbanana> wait whar
[08:47:00] <FromDiscord> <theangryepicbanana> (edit) "whar" => "what"
[08:47:06] <FromDiscord> <theangryepicbanana> pretty sure I'm using old concepts
[08:47:41] <FromDiscord> <theangryepicbanana> sent a code paste, see https://play.nim-lang.org/#ix=3uL2
[08:47:49] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3uL3
[08:47:55] <FromDiscord> <theangryepicbanana> ah
[08:48:26] <FromDiscord> <theangryepicbanana> well calling `is-a` normally actually gave me a recursion error, so I switched it to a type check
[08:48:38] <FromDiscord> <theangryepicbanana> (edit) "well calling `is-a` normally ... actually" 03added "in the concept"
[08:48:51] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3uL4
[08:49:39] <FromDiscord> <theangryepicbanana> well then the former is closer to what I'm doing
[08:50:00] <FromDiscord> <theangryepicbanana> it should theoretically work fine I think
[08:50:38] <FromDiscord> <Elegantbeef> Nope, cause you dont have a sym named `is-a` that matches that signature
[08:51:03] <FromDiscord> <theangryepicbanana> well the thing is that it does
[08:51:35] <FromDiscord> <theangryepicbanana> the main issue is that `MyConcept` can't find its `T` parameter when it has the `is-a`
[08:52:01] <FromDiscord> <theangryepicbanana> (edit) "the main issue is that `MyConcept` can't find its `T` parameter when it has the `is-a` ... " 03added "check"
[08:52:30] <FromDiscord> <Elegantbeef> No you dont have that
[08:52:47] <FromDiscord> <Elegantbeef> You have it looking for a `is-a` symbol, not a procedure bound to the type
[08:52:50] <FromDiscord> <theangryepicbanana> sent a code paste, see https://play.nim-lang.org/#ix=3uL5
[08:53:08] <FromDiscord> <theangryepicbanana> well yes that's intentional
[08:53:20] <FromDiscord> <Elegantbeef> It's why you have to declare that procedure before that concept
[08:53:22] <FromDiscord> <Elegantbeef> Is it really?
[08:53:26] <FromDiscord> <theangryepicbanana> yes
[08:53:55] <FromDiscord> <theangryepicbanana> I'm wanting to check the signature of `is-a` to see if it matches `C, SubObj[T]`
[08:54:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3uL7
[08:54:29] <FromDiscord> <theangryepicbanana> it can have multiple overloads, which is why I declare a dummy version (`(a, b: void)`) before hand
[08:54:42] <FromDiscord> <theangryepicbanana> (edit) "before hand" => "beforehand"
[08:55:01] <FromDiscord> <Elegantbeef> I dont think it'll work that way, but i could be wrong
[08:55:13] <FromDiscord> <theangryepicbanana> it should, because it'll work if the types aren't generic
[08:55:39] <FromDiscord> <theangryepicbanana> however when they are generic, then we get these weird errors
[08:58:16] <FromDiscord> <theangryepicbanana> I'm going to assume it's some sort of variance issue, but I'm not entirely sure
[08:59:29] <FromDiscord> <Elegantbeef> Well this does the trick afaik https://play.nim-lang.org/#ix=3uL8
[09:00:01] <FromDiscord> <Elegantbeef> Remove the generics until it explodes
[09:04:01] <FromDiscord> <theangryepicbanana> looks hacky, I like it
[09:04:03] <FromDiscord> <theangryepicbanana> thx
[09:04:33] <FromDiscord> <Elegantbeef> Hacky?
[09:04:49] <FromDiscord> <Elegantbeef> Isnt it just what you wanted but done properly? 😛
[09:07:11] <FromDiscord> <theangryepicbanana> In reply to @Elegantbeef "Isnt it just what": I consider type params that use other type params sorta hacky since nim doesn't always like it ;)
[09:07:47] <FromDiscord> <theangryepicbanana> I did the same in haxe for quite a while, and apparently it's an "accidental feature"
[09:08:14] <FromDiscord> <Elegantbeef> For generics it should be fine since they're always sem'd first in first out
[09:08:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:08:28] <FromDiscord> <theangryepicbanana> 👍
[09:08:34] <FromDiscord> <theangryepicbanana> thanks for the help
[09:09:05] <FromDiscord> <theangryepicbanana> if you're wandering, I'm attempting to make fully-featured interfaces for nim, including generic interfaces
[09:09:12] <FromDiscord> <Elegantbeef> Now if you're using inferred + explicit generics, you're off the path. The compiler cannot reason them
[09:09:16] <FromDiscord> <theangryepicbanana> (edit) "wandering," => "wondering,"
[09:09:23] <FromDiscord> <theangryepicbanana> hmm
[09:09:50] <FromDiscord> <theangryepicbanana> well I suppose I'll figure that out once it becomes an issue
[09:09:55] <FromDiscord> <Elegantbeef> I investigated them for a while and it's a complicated case of explicit generics and inferred generics take two paths and i dont speak compiler enough to fix it
[09:10:12] <FromDiscord> <theangryepicbanana> sounds like a bug
[09:10:20] <FromDiscord> <Elegantbeef> I mean it is
[09:10:26] <FromDiscord> <theangryepicbanana> weird though, may take a peek at that later
[09:11:02] <FromDiscord> <Elegantbeef> The issue is only on calling
[09:11:37] <FromDiscord> <theangryepicbanana> but for types and converters, it'd be fine?
[09:11:46] <FromDiscord> <theangryepicbanana> or would converters also have issues?
[09:12:08] <FromDiscord> <Elegantbeef> What happens in the case of `a[int](10)` is `a[int]` is semd and instantiates a generic  without regard to `(10)` so it cannot be called
[09:12:33] <FromDiscord> <theangryepicbanana> huh
[09:12:43] <FromDiscord> <theangryepicbanana> interesting
[09:12:58] <FromDiscord> <Elegantbeef> talking about `proc a[T](c: int or float)` for instance
[09:13:51] <FromDiscord> <theangryepicbanana> oh I see now
[09:14:10] <FromDiscord> <theangryepicbanana> yeah that makes sense then
[09:52:31] <FromDiscord> <lamersc.com 🐧> In reply to @Elegantbeef "Might be a good": Thank you, read it and it made things very clear 😄
[09:52:53] <FromDiscord> <lamersc.com 🐧> I should definitely looking into the older blogs more
[09:52:57] <FromDiscord> <lamersc.com 🐧> Lots of good information
[10:43:20] *** Joins: max22- (~maxime@2a01cb088335980082f13b2ba4d4bc36.ipv6.abo.wanadoo.fr)
[10:52:59] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Read error: Connection reset by peer)
[10:53:38] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[11:46:00] *** Joins: pro (~pro@user/pro)
[11:46:05] *** Quits: pro (~pro@user/pro) (Client Quit)
[13:12:12] *** Quits: max22- (~maxime@2a01cb088335980082f13b2ba4d4bc36.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:20:27] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[13:25:58] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:32:40] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[15:54:24] <FromDiscord> <bolino> Hello there,↵I have a MySQL table in UTF-8 collation. When I run a query inserting a row with UTF-8 values, like this one: it works fine
[15:58:38] <FromDiscord> <bolino> sent a long message, see http://ix.io/3uMw
[15:59:12] <FromDiscord> <bolino> (edit) "http://ix.io/3uMw" => "http://ix.io/3uMx"
[15:59:28] <FromDiscord> <bolino> (edit) "http://ix.io/3uMx" => "http://ix.io/3uMy"
[16:08:58] <FromDiscord> <haxscramper> Nim strings are sequence of bytes, so maybe you need to somehow convert them. If you do `echo @"ホワイト"`
[16:09:40] <FromDiscord> <haxscramper> Maybe try to use prepared statements, or configure mysql connection somehow
[16:14:28] <FromDiscord> <bolino> In reply to @haxscramper "Nim strings are sequence": Indeed: `@['\xE3', '\x83', '\x9B', '\xE3', '\x83', '\xAF', '\xE3', '\x82', '\xA4', '\xE3', '\x83', '\x88']`
[16:14:33] <FromDiscord> <bolino> thanks
[16:14:57] <FromDiscord> <bolino> Isn't that a prepared statement already?
[16:15:46] <FromDiscord> <bolino> `configure mysql connection somehow` The DB is collated in UTF-8, I don't know where
[16:17:24] <FromDiscord> <bolino> `configure mysql connection somehow`↵The DB is collated in UTF-8 already. I have been looking at Nim db `open` proc doc (https://nim-lang.org/docs/db_mysql.html#examples-opening-a-connection-to-a-database) but can't see anything about character set
[16:24:51] <FromDiscord> <haxscramper> In reply to @bolino "Isn't that a prepared": no, `let someRandomText: string = "text"`; `db.exec(sql(someRandomText))` is not a prepared statement
[16:25:29] <FromDiscord> <haxscramper> It seems like `db_mysql` in nim cannot create prepared statements
[16:26:40] <FromDiscord> <haxscramper> and yes, `echo @"ホワイト"` is exactly `ãƒ›ãƒ¯ã‚¤ãƒˆ`  if you use extended ascii table
[16:28:13] <FromDiscord> <haxscramper> Nim devel finally got "side effect" error cause messages
[16:28:14] <FromDiscord> <haxscramper> https://wandbox.org/permlink/NIq9aKTtGrUoK2IL
[16:28:28] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3uMJ
[16:29:01] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3uMK
[16:29:11] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3uML
[16:30:15] <FromDiscord> <haxscramper> wandbox nim `head` is only three days old
[16:33:08] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/pull/18418
[16:34:30] <FromDiscord> <haxscramper> @quantimnot if you are the same person who made the PR - thanks a lot
[16:34:40] *** Joins: arkurious (~arkurious@user/arkurious)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:48:06] <FromDiscord> <bolino> In reply to @haxscramper "no, `let someRandomText: string": Oh ok
[16:49:45] <FromDiscord> <bolino> I see thanks. Any hint about how to configure the connection to manage those characters?
[16:53:26] <FromDiscord> <haxscramper> try prepared statements
[16:53:27] <FromDiscord> <haxscramper> https://nim-lang.org/docs/mysql.html#stmt_prepare%2CPSTMT%2Ccstring%2Cint
[16:54:00] <FromDiscord> <haxscramper> I don't work with mysql, but if you still have troubles try to search for solutions on passing utf8 strings in C+mysql
[17:03:02] <fn> <11ForumUpdaterBot99> New Nimble package! ballpark - An amateur radio tool to get you a ballpark estimate of where a given Maidenhead grid square is., see https://github.com/Mihara/ballpark
[17:03:03] <fn> <12R2D299> 4GitHub: 7"Command line utility for quick Maidenhead grid lookup."
[17:10:36] <FromDiscord> <bolino> In reply to @haxscramper "https://nim-lang.org/docs/mysql.html#stmt_prepare%2": I'm a bit confused about the documentation about PSTMT. If by any chance you have an example that'd be great!
[17:11:17] <FromDiscord> <bolino> (edit) "PSTMT." => "PSTMT type."
[17:13:08] <FromDiscord> <haxscramper> No I don't have any, but you can look for C/C++ examples, since std/mysql is just a simple wrapper on top of the C API
[17:15:23] <FromDiscord> <bolino> In reply to @haxscramper "No I don't have": I'll try. Thanks again
[17:32:02] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Read error: Connection reset by peer)
[17:32:07] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[17:37:03] <FromDiscord> <demotomohiro> !eval echo"ホワイト"
[17:37:07] <NimBot> ホワイト
[17:42:52] <FromDiscord> <bolino> In reply to @demotomohiro "!eval echo"ホワイト"": Yep, that works fine... It seems the conversion in ascii is only done when using sql request in nim
[17:47:24] <FromDiscord> <haxscramper> Maybe you just need to configure connection character sets as well?
[17:47:29] <FromDiscord> <haxscramper> Nim connection
[17:56:35] <FromDiscord> <bolino> In reply to @haxscramper "Maybe you just need": You mean something like↵`db.exec(sql"SET NAMES utf8mb4;")`↵before the INSERT query?
[17:59:00] <FromDiscord> <bolino> In reply to @bolino "You mean something like": Oh, it works!
[17:59:37] <FromDiscord> <bolino> I'll execute it just after the connection, as the very first query
[18:54:42] *** Joins: rockcavera (~rc@192.12.115.217)
[18:54:43] *** Quits: rockcavera (~rc@192.12.115.217) (Changing host)
[18:54:43] *** Joins: rockcavera (~rc@user/rockcavera)
[18:59:58] <mst> hmmm ... if I generate shared objects that use a dynamically linked runtime shared object ... is there any hope of upgrading the runtime .so and having the nimcode .sos still work?
[19:00:12] <mst> (I'm assuming there's no guarantee, but "any hope" is a different question)
[19:02:49] <FromDiscord> <leorize> there's little hope
[19:03:22] <FromDiscord> <leorize> we don't version any abi exposed in nimrtl
[19:20:36] <FromDiscord> <no name fits> What are the real world usecases for concepts in Nim? I'm just a little confused on how you'd actually use them
[19:22:23] <FromDiscord> <generic linux user> game
[19:22:43] <FromDiscord> <generic linux user> for android(c) and ios(objc)
[19:24:26] <fn> <06Prestige99> https://nim-lang.github.io/Nim/manual_experimental.html#concepts they are used like interfaces in java/typescript, if you're familiar with either. Used to make sure objects have a certain "form", so you can treat 2 different objects in the same manner
[19:26:04] <fn> <06Prestige99> https://en.wikipedia.org/wiki/Polymorphism_(computer_science) might be a good read
[19:29:42] <FromDiscord> <haxscramper> In reply to @no name fits "What are the real": Explicitly state requirements for generic arguments. For example .len, [], etc.
[19:30:13] <FromDiscord> <haxscramper> Like LenIndexable must have these operators, and I can explicitly require this in procedure signature
[19:31:34] <mst> leorize, right, thought as much. this may complicate my life slightly in a couple cases but I was already factoring that in as 'probably' ;)
[19:36:00] <FromDiscord> <exelotl> My library exposes operations for various "asset" enum types (sprite gfx, backgrounds and sfx), but those enums are unique to each project using the library.↵Originally I was using `include` to achieve this but then Beef pointed out that concepts were a good fit
[19:36:16] <FromDiscord> <no name fits> Without requiring a certain inheritance or implementation on the generic then?
[19:36:46] <FromDiscord> <haxscramper> Yes, only existence of some procs or fields
[19:36:46] <FromDiscord> <no name fits> Like implementing an interface i mean
[19:36:50] <FromDiscord> <no name fits> Right ok
[19:37:01] <FromDiscord> <no name fits> So it's good for generic libraries I guess
[19:37:05] <FromDiscord> <haxscramper> But you have to implement them for a concrete type of course
[19:37:12] <FromDiscord> <no name fits> Right yeah
[19:37:42] <FromDiscord> <haxscramper> In reply to @no name fits "So it's good for": Yes, but you don't have to have geneneric-heavy library to benefit from this.
[19:37:52] <FromDiscord> <no name fits> No?
[19:38:55] <FromDiscord> <haxscramper> For example you can automatically create overload for [a..^b] (so it takes backwards index) as long as you have .len and [a..b]. So you can make a generic implementation for this single proc
[19:39:19] <FromDiscord> <haxscramper> And don't bother adding more overloads for [] for different slices
[19:39:20] <FromDiscord> <no name fits> Oh I see
[19:39:48] <FromDiscord> <haxscramper> For any of your types. Stuff like this is better be at stdlib, but users certainly have a lot of similar thing's
[19:40:01] <FromDiscord> <no name fits> Are there examples somewhere other than the docs? Now I kind of want to try it out
[19:40:56] <FromDiscord> <haxscramper> Docs have old concepts if I remember correctly, and new ones are not documented fully yet (I think).
[19:41:31] <FromDiscord> <no name fits> Oh :c
[20:47:06] <FromDiscord> <theangryepicbanana> wtf https://media.discordapp.net/attachments/371759389889003532/871788710151192646/unknown.png
[20:48:32] <FromDiscord> <theangryepicbanana> what on earth is this thing
[21:14:54] <FromDiscord> <leorize> it's possible candidate for that symbol in particular
[21:24:52] <nixfreak_nim[m]> does anyone know if Fidget2 is still being worked on? I really like pixie and GLFW 
[21:29:32] <nixfreak_nim[m]> or TreeForm slowly replacing fidget into fidget 2.0 ? 
[21:29:37] <nixfreak_nim[m]>  * or is TreeForm slowly replacing fidget into fidget 2.0 ? 
[21:44:52] *** Quits: dmu (~darkmusic@user/darkmusic) (Quit: leaving)
[21:44:58] <FromDiscord> <dom96> it is being worked on
[21:48:31] *** Joins: dmu (~darkmusic@user/darkmusic)
[21:58:22] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:26:01] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[22:31:22] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[22:31:56] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[23:14:33] <FromDiscord> <theangryepicbanana> In reply to @leorize "it's possible candidate for": I'm not sure what that means? It's supposed to be untyped
[23:15:20] <FromDiscord> <theangryepicbanana> the only things doing this are dashes and brackets
[23:27:52] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I vaguely remember seeing a nim proc return a nim tuple sometime ago, but I can't quite remember the syntax for it
[23:29:14] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Was I dreaming, or is that something nim can do?
[23:31:34] <FromDiscord> <theangryepicbanana> In reply to @@bracketmaster-5a708063d73408ce4 "Was I dreaming, or": try `proc(): (T, U)`
[23:34:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thx
[23:35:01] <FromDiscord> <@bracketmaster-5a708063d73408ce4> proc testReturn() \: tuple[name\: string, age\: int] =↵  ("john", 3)↵↵echo testReturn().name
[23:35:06] <FromDiscord> <@bracketmaster-5a708063d73408ce4> this also seems to worok
