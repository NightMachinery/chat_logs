[00:03:08] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[00:20:40] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:27:37] <__adrian> > rfxn/linux-malware-detect  // haha, i know that guy
[00:28:30] <__adrian> note this is intended for large hosting environments. is it good? yes. is it easy to use/understand? not necessarily.
[00:33:04] * Thanatermesis thinks if we can group all the programmers of the world we can fit all in a small room lol
[00:33:30] <Thanatermesis> mmh, i may give it a try in the server that im going to remove soon
[00:37:27] *** Quits: hh (~g@37.214.24.96) (Remote host closed the connection)
[00:38:48] <da_wunder> Thanatermesis: I doubt that - even our medium size company devs cannot fit in small room...
[00:39:33] <__adrian> i know this has been said (by me, even), but this is not what you need.
[00:39:51] <__adrian> do a fresh install. don't try to diagnose/fix your old, possibly compromised install.
[00:40:25] <da_wunder> and docker could help there a lot
[00:40:25] *** Joins: vlm (~vlm@user/vlm)
[00:40:44] *** Quits: guido (~weechat@host-79-26-255-227.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[00:41:09] *** Joins: guido (~weechat@host-79-26-255-227.retail.telecomitalia.it)
[00:46:39] *** Joins: magla (~gelignite@55d476aa.access.ecotel.net)
[00:49:24] *** Quits: guido (~weechat@host-79-26-255-227.retail.telecomitalia.it) (Read error: Connection reset by peer)
[00:49:37] *** Joins: guido (~weechat@host-79-26-255-227.retail.telecomitalia.it)
[00:49:49] <Thanatermesis> __adrian, well, my intention is not to fix anything in the old one but basically know if there has been anything and where, in order to prevent it happening again
[00:49:54] *** Quits: tercaL (~tercaL@user/tercal) (Quit: halt -p)
[00:50:42] <Thanatermesis> da_wunder, if there's many devs in the world, why they don't start the world domination already? i mean, we are managed for so uncompetent govs..
[00:50:54] * Thanatermesis goes offtopic
[00:52:26] <Blondie101010> Thanatermesis:  prevention includes, as adrian mentioned yesterday, using wordpress security options and plugins
[00:52:57] <Thanatermesis> yes im doing that already
[00:53:24] <Blondie101010> can't be 100% sure, but I think you're worrying for nothing, or the wrong thing
[00:54:34] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[00:54:53] <Blondie101010> it could be valuable to analyze the malicious-looking requests you received
[00:55:43] <Blondie101010> but receiving those does not mean the server is susceptible to it
[00:56:55] <Thanatermesis> well i just wanted to make sure that everything im going to move to the new server is clean while finishing to import thing
[00:57:48] <Blondie101010> it's very hard to validate the data
[00:58:19] <Blondie101010> as I said yesterday, data issues are usually visible on the client
[01:05:47] *** Joins: thiras (~thiras@user/thiras)
[01:30:03] *** Quits: Splash (~Splash@host-79-42-90-6.retail.telecomitalia.it) (Read error: Connection reset by peer)
[01:31:48] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[01:43:15] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[01:44:55] *** Quits: guido (~weechat@host-79-26-255-227.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[01:46:50] *** Joins: guido (~weechat@host-87-11-250-210.retail.telecomitalia.it)
[01:49:00] *** Quits: goldcrest (~goldcrest@176.234.9.123) (Remote host closed the connection)
[01:55:40] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[02:09:33] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[02:15:02] *** Quits: MrBlue (~MrBlue@146.70.75.214) (Quit: Leaving)
[02:15:20] *** Joins: MrBlue (~MrBlue@146.70.75.214)
[02:15:48] *** Quits: MrBlue (~MrBlue@146.70.75.214) (Client Quit)
[02:20:02] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[02:26:04] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:32:11] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:41:27] *** Quits: Xavier7 (~ircap@179.6.152.57) (Quit:  IRcap  8.72 )
[02:48:05] *** Joins: MrBlue (~MrBlue@5.181.233.29)
[02:57:21] *** Parts: MrBlue (~MrBlue@5.181.233.29) (Leaving)
[03:01:44] *** Joins: MrBlue_ (~MrBlue@37.19.212.18)
[03:02:02] *** MrBlue_ is now known as MrBlue
[03:04:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[03:06:43] *** Quits: guido (~weechat@host-87-11-250-210.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[03:07:20] *** Quits: magla (~gelignite@55d476aa.access.ecotel.net) (Quit: Stay safe!)
[03:08:12] *** Quits: MrBlue (~MrBlue@37.19.212.18) (Quit: Leaving)
[03:10:02] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:10:08] *** Joins: MrBlue (~MrBlue@37.19.213.153)
[03:10:13] *** Quits: MrBlue (~MrBlue@37.19.213.153) (Remote host closed the connection)
[03:11:19] <relipse> hi
[03:11:22] <relipse> i feel better
[03:15:36] *** Joins: panella32 (~panella32@45.130.83.91)
[03:16:50] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[03:39:19] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[03:41:04] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[03:42:38] *** Quits: Teraii (~teraii@juraii-s1-1.teraii.net) (Ping timeout: 250 seconds)
[03:44:00] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[03:51:04] *** Joins: Teraii (~teraii@juraii-s1-1.teraii.net)
[03:53:55] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:56:17] *** zero is now known as zzz
[04:01:05] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:17:14] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:23:31] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[04:24:02] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[04:29:32] *** Quits: Teraii (~teraii@juraii-s1-1.teraii.net) (Ping timeout: 240 seconds)
[04:42:25] *** Joins: Teraii (~teraii@juraii-s1-1.teraii.net)
[04:59:33] <relipse> Ok so I am upgrading from php 5.6 to 8.1 and there are errors in this one library in my vendor/ folder , can I just copy that library into my own myvendor/ folder and fix the changes?
[05:02:26] <__adrian> i'd check if the library has any updated versions
[05:02:48] <__adrian> if you want to fix it yourself, no, don't just copy+fix. fork it, and use your fork.
[05:04:14] <relipse> ok thakns
[05:04:24] <relipse> __adrian: how's your weekend going
[05:04:40] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[05:04:43] <__adrian> not bad. tired.  :)
[05:07:32] *** Quits: panella32 (~panella32@45.130.83.91) (Ping timeout: 240 seconds)
[05:07:38] <relipse> nice
[05:09:17] *** Joins: Xavier7 (~ircap@179.6.152.57)
[05:17:01] *** Parts: velix (~velix@user/velix) (Leaving)
[05:17:53] <relipse> hold on
[05:18:00] <relipse> so i just forked the repo
[05:18:09] <relipse> but that doesn't mean it gets added to packagist?
[05:18:16] <__adrian> no
[05:18:24] <relipse> so how do I do that?
[05:18:43] <__adrian> publish to packagist? first question is, do you want to do that?
[05:18:57] <relipse> do I have ot?
[05:18:58] <relipse> to~
[05:19:03] <__adrian> no
[05:19:13] <relipse> so how do i tell composer to use my new library on github now?
[05:19:22] <Blondie101010> composer supports git
[05:19:52] <__adrian> yeah, it doesn't even have to be on github. BUT assuming it is, you just put your repo in your composer.json
[05:20:06] <__adrian> https://getcomposer.org/doc/04-schema.md#repositories
[05:20:28] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[05:31:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:26] <relipse> I'm getting this:
[05:32:31] <relipse> relipse@FISHEROFMEN /var/www/ubu/handofhelp (php7)$ composer update
[05:32:31] <relipse> PHP Deprecated:  Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in /usr/share/php/Symfony/Component/Console/Helper/HelperSet.php on line 104
[05:37:17] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:42:53] *** Joins: WishBoy (~WishBoy@user/wishboy)
[05:47:31] <__adrian> before you fork symfony, go back to my first bit of advice
[05:47:37] <__adrian> > check if the library has any updated versions
[05:47:55] <__adrian> symfony 6.0 supports php 8+. what version are you using?
[05:51:08] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[06:09:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:23:12] *** Quits: Xavier7 (~ircap@179.6.152.57) (Quit:  IRcap  8.72 )
[06:25:34] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[06:27:02] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[06:37:53] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:45:46] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[06:58:50] *** Joins: chozorho (~chozorho@2601:146:300:c30::549f)
[07:03:16] *** Joins: Rockwood (~Rocky@user/rocky)
[07:13:29] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[07:13:54] *** Joins: Rockwood (~Rocky@user/rocky)
[07:52:54] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[07:53:51] *** Quits: ham5 (iamfive@user/ham5) (Quit: ham5)
[07:56:13] *** Joins: ham5 (~iamfive@user/ham5)
[08:04:04] *** Quits: ham5 (~iamfive@user/ham5) (Remote host closed the connection)
[08:08:46] *** Joins: ham5 (~iamfive@user/ham5)
[08:15:58] *** Quits: ham5 (~iamfive@user/ham5) (Quit: ham5)
[08:16:13] *** Joins: ham5 (iamfive@user/ham5)
[08:30:48] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[08:46:02] *** Quits: onichomp (~onichomp@2806:264:4408:27:8c1f:856b:32b7:4532) (Ping timeout: 240 seconds)
[08:46:16] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[08:57:25] *** Joins: fef (~thedawn@user/thedawn)
[08:59:51] *** Joins: vlm (~vlm@user/vlm)
[09:16:40] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[09:19:57] <Rockwood> awesome thumbs also here now
[09:21:23] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[09:22:13] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[09:38:09] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[09:41:26] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[10:07:33] *** Joins: hh (~g@37.214.24.96)
[10:10:27] *** Joins: krux02 (~krux02@p4fe57352.dip0.t-ipconnect.de)
[10:12:05] *** Quits: krux02_ (~krux02@p4fe57f7a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:13:15] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:36:56] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 250 seconds)
[10:49:54] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[10:52:52] *** Joins: onichomp (~onichomp@2806:264:4408:27:85b7:db3:5795:fde4)
[11:01:49] *** Joins: epony (epony@user/epony)
[11:03:49] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[11:04:59] *** Joins: Rockwood (~Rocky@user/rocky)
[11:27:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[11:28:05] *** Joins: tercaL (~tercaL@user/tercal)
[11:29:16] *** Joins: Rockwood (~Rocky@user/rocky)
[11:40:58] *** Joins: Tempesta (~Tempesta@user/tempesta)
[11:42:12] *** Joins: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it)
[11:44:28] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[11:48:40] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:17:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:23:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:31:16] *** Quits: cisco87 (~quassel@user/cisco87) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:33:01] *** Joins: stenno (~stenno@user/stenno)
[12:35:49] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:49:10] *** Joins: Tempesta (~Tempesta@user/tempesta)
[13:07:02] *** Joins: Northwoods (~Northwood@202.14.122.53)
[13:15:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[13:34:47] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[13:36:26] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[13:37:10] *** Quits: onichomp (~onichomp@2806:264:4408:27:85b7:db3:5795:fde4) (Ping timeout: 250 seconds)
[13:42:49] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[13:47:03] *** Quits: sfields (~sfields@2605:a601:adea:7a00:416b:7a6e:7331:138f) (Remote host closed the connection)
[13:49:33] *** Joins: Northwoods (~Northwood@202.14.122.53)
[13:50:10] *** Joins: sfields (~sfields@2605:a601:adea:7a00:c08f:11c9:d7b2:855b)
[13:54:13] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[13:59:39] *** Quits: sfields (~sfields@2605:a601:adea:7a00:c08f:11c9:d7b2:855b) (Remote host closed the connection)
[14:00:32] *** Joins: sfields (~sfields@2605:a601:adea:7a00:c08f:11c9:d7b2:855b)
[14:15:25] *** Quits: chozorho (~chozorho@2601:146:300:c30::549f) (Quit: WeeChat 3.0)
[14:17:27] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[14:24:28] *** Joins: malmalmal (~malmalmal@38.pool92-178-53.dynamic.orange.es)
[14:42:49] *** Joins: fef (~thedawn@user/thedawn)
[14:46:37] *** Quits: malmalmal (~malmalmal@38.pool92-178-53.dynamic.orange.es) (Quit: Leaving)
[14:47:57] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[15:01:25] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Ping timeout: 250 seconds)
[15:08:18] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[15:23:13] *** Joins: magla (~gelignite@55d4ed71.access.ecotel.net)
[15:26:32] *** Quits: tercaL (~tercaL@user/tercal) (Ping timeout: 240 seconds)
[15:26:48] *** Joins: Rockwood_ (~Rocky@user/rocky)
[15:27:02] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[15:27:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[15:28:45] *** Joins: beuys (~beuys@user/beuys)
[15:28:49] <beuys> Hello everybody!
[15:30:18] *** Joins: Rockwood (~Rocky@user/rocky)
[15:33:12] *** Quits: Rockwood_ (~Rocky@user/rocky) (Remote host closed the connection)
[15:35:43] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[15:36:32] *** Joins: thiras (~thiras@user/thiras)
[15:39:18] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[15:44:12] *** Joins: ms49434 (~ms49434@user/ms49434)
[15:51:51] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[16:01:02] *** Quits: beuys (~beuys@user/beuys) (Quit: leaving)
[16:09:44] *** Joins: Rockwood_ (~Rocky@user/rocky)
[16:10:47] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[16:24:28] *** Rockwood_ is now known as Rockwood
[16:25:38] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[16:26:12] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:26:31] *** Joins: thiras (~thiras@user/thiras)
[16:31:01] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[16:32:12] *** Joins: fef (~thedawn@user/thedawn)
[16:32:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[16:36:02] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[16:49:16] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[17:01:02] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 240 seconds)
[17:05:57] *** Joins: Rockwood_ (~Rocky@user/rocky)
[17:07:17] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[17:11:14] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[17:11:40] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[17:15:16] *** Joins: Rockwood (~Rocky@user/rocky)
[17:16:19] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[17:17:52] *** Joins: Rockwood_ (~Rocky@user/rocky)
[17:19:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[17:20:36] *** Rockwood_ is now known as Rockwood
[17:39:14] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[17:40:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[17:43:08] *** Joins: Rockwood (~Rocky@user/rocky)
[17:45:42] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[17:46:05] *** Joins: Rockwood_ (~Rocky@user/rocky)
[17:49:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[17:53:49] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[17:54:32] *** Joins: NeoCron (~NeoCron@p200300c4cf4baa00766f97a7a0c56948.dip0.t-ipconnect.de)
[17:59:51] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[18:01:34] *** Rockwood_ is now known as Rockwood
[18:04:43] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:08:44] *** Joins: Northwoods (~Northwood@202.14.122.53)
[18:09:40] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[18:09:58] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.3)
[18:24:17] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:33:53] *** Quits: ordos (~ordos@user/ordos) (Remote host closed the connection)
[18:43:58] *** Quits: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it) (Read error: Connection reset by peer)
[18:44:01] *** Joins: guido_ (~weechat@host-79-25-191-220.retail.telecomitalia.it)
[18:44:07] *** guido_ is now known as guido
[18:59:34] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[19:07:35] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[19:12:35] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[19:19:37] *** Joins: sfields_ (~sfields@136.34.181.232)
[19:21:57] *** Quits: sfields (~sfields@2605:a601:adea:7a00:c08f:11c9:d7b2:855b) (Ping timeout: 240 seconds)
[19:22:28] *** Quits: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it) (Read error: Connection reset by peer)
[19:28:49] *** Joins: ordos (~ordos@user/ordos)
[19:28:56] *** Joins: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it)
[19:31:17] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:31:37] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:32:32] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:32:50] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:34:14] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[19:37:27] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[19:39:21] <znf> Out of curiosity -- I'm running the following script via CLI: https://pastie.dev/KlOTtd.php -- and it somehow manages to hit the memory limit (512M)
[19:39:49] <znf> The rows it handles are small, JSON arrays just containing 10-20 integers at max
[19:40:02] <znf> I'm assuming I'm not freeing something somewhere that it's causing it to use that much memory?
[19:45:02] <znf> If so, what exactly should I be free-ing?
[19:45:26] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:45:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[19:47:49] *** Quits: hh (~g@37.214.24.96) (Ping timeout: 256 seconds)
[19:49:52] <Rockwood> what is the motive of your code?
[19:50:34] <znf> Rockwood, adding a new ID to a json array
[19:50:43] <znf> for ~300k+ rows
[19:50:55] <Rockwood> not good idea
[19:50:58] <znf> ...?
[19:51:03] <Rockwood> mysql?
[19:51:15] <znf> yes?
[19:52:18] <Rockwood> why are you adding id after?
[19:52:27] <znf> ...why does that matter?
[19:52:49] <Rockwood> actually if i do that
[19:53:00] <Rockwood> i will be use other ways instead of this
[19:53:15] <znf> the "why" is hardly relevant in this case
[19:53:17] <Rockwood> it will be not looks good to me
[19:53:52] <znf> We've added a new category to the system and we're adding the new category to all users... that's the easiest way to do it. Again, the method is hardly relevant.
[19:54:09] <znf> I'm just curious, for my own personal knowledge, what I'm missing out here
[19:54:24] <znf> I can always increase the memory limit, obviously, as it's a one-time script, but I'm just curious why it happens
[19:55:31] <Rockwood> while ( $row = $result->fetch_assoc() ) { <-- foreach
[19:59:08] <Rockwood>   global $db; very bad idea
[20:09:18] *** Quits: AMG (ghebo@user/amg) (Read error: Connection reset by peer)
[20:17:48] *** Joins: luva2 (~luva@146.70.62.246)
[20:21:05] *** Quits: luva (~luva@45.141.152.61) (Ping timeout: 256 seconds)
[20:21:05] *** luva2 is now known as luva
[20:25:46] *** Joins: lall- (~alek@2403:6200:8862:eb0e:46b:7042:1530:c3dc)
[20:37:34] <Rockwood> bye cya
[20:39:09] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:39:09] *** Quits: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it) (Read error: Connection reset by peer)
[20:39:12] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Beware of programmers who carry screwdrivers.)
[20:39:18] *** Joins: guido_ (~weechat@host-79-25-191-220.retail.telecomitalia.it)
[20:39:34] *** guido_ is now known as guido
[20:40:47] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[20:47:42] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[20:48:02] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[20:48:31] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[20:52:15] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[20:53:56] <Blondie101010> znf:  I strongly suggest you to learn how to use a DB...  what you're doing is less efficient than the worst DB in the world
[20:54:58] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[20:55:02] <Blondie101010> beyond that and what Rockwood already said, you don't need to reprepare the same thing over and over for each row
[20:58:34] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:59:30] <Blondie101010> not yet sure exactly the intention of your json_decode() + array_map() but that looks very wrong
[21:03:04] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:03:53] <znf> Blondie101010, a previous version of the app inserted numbers as strings for a while, while the app is able to read both without issues, I prefer to have them all as integers
[21:04:01] <znf> ie: ["11", 1]
[21:04:37] <znf> so, I'm just mapping all elements back to integers with intval()
[21:04:50] <Blondie101010> can you show one full json?
[21:05:15] <znf> sure: [13,14,16,17,27,28,29,30,34,42,55,56,62,68,69,77,81,85,86,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,26,20,21,22,24,41,84,23,65,15,70,36,35,40,37,38,39,31,32,33,63,90,71,92,91,89,60,61,78,82,102]
[21:05:20] <Blondie101010> why would you need to change the same thing over and over again?
[21:05:30] <znf> (that is, after I already run the script over them anyway)
[21:05:39] <Blondie101010> you convert it all to numbers, fix your code, and don't convert it anymore!
[21:05:52] <Blondie101010> but that's not the real concern
[21:06:12] <znf> it's a one-time script, efficiency wasn't exactly the concern here
[21:08:29] <Blondie101010> learning to do things well isn't a one time thing
[21:08:59] <Blondie101010> but your DB is even worse than I expected, and that is not a one time script thing either
[21:09:23] <Blondie101010> you need to learn how to organize your data
[21:09:36] <znf> I'm not gonna change the app, that's beyond the scope
[21:09:40] <Blondie101010> a dump DB filled with dump records
[21:10:03] <Blondie101010> that whole system should be reviewed and rewritten
[21:10:05] <znf> It's been done like this, I'm leaving it like this, I'm not a programmer by trade, not gonna bother with it beyond "it works"
[21:10:08] <znf> Yeah, it's terrible
[21:10:12] <znf> I've been over this in the past
[21:10:20] <znf> It was written by 3 monkeys for all I'm concerned
[21:11:15] <znf> ...3 monkeys on cocaine, otherwise some things can't be explained logically
[21:21:43] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[21:24:14] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[21:26:50] <Blondie101010> znf:  basically any change you do for that site/app implies additional efforts to work with that badly designed system, and considering you update it, it can be assumed that someone uses it, so will eventually be affected by the bad design's performance
[21:27:16] <Blondie101010> so either you want to keep it as is and throw it away on the first complaint, or your fix it
[21:28:42] <znf> not a programmer by trade, and the "replacement" apps that have popped up are actually more terrible out there
[21:29:08] <Blondie101010> I don't think my last line is not debatable
[21:29:11] <Blondie101010> -not
[21:29:40] <Blondie101010> you keep it as is, or fix it, but changing it without fixing it is beyond crazy
[21:29:57] <Blondie101010> as you said, you're not a programmer, so either learn to be one or stop pretending
[21:30:57] <znf> I've already decided that I'm not gonna bother with it as the effort is too big. Either way, I was just curious how could I avoid using that much memory, the app itself is not my concern at this point...
[21:31:19] <znf> Thanks
[21:32:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:37:31] <biberu> znf: would suspect that the issue is that you're preparing a new statement for each update (300k times?), and never disposing of them
[21:39:09] <biberu> znf: either way you should just prepare it *once*, and execute it multiple times with different parameters
[21:40:40] <znf> I see. Thanks.
[21:41:02] <biberu> znf: try it and see if it helps?
[21:41:24] <znf> I've already "done the deed" by increasing the memory limit, I just wanted to know how to avoid that in the future :)
[21:41:34] <znf> but that makes sense
[21:41:50] <biberu> znf: also see mysqli_stmt::close, i assume that should be used, don't know if it's handled by the statement going out of scope, been a long time since i did php
[21:43:18] <biberu> znf: preparing statements over and over again in loops is a common mistake, even if it isn't the cause of the leak it should be changed
[21:43:53] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:45:37] *** Joins: thiras (~thiras@user/thiras)
[21:45:37] <znf> never done that before to be honest, don't know why I never thought of re-using prepared statements
[21:46:35] <biberu> it's not a fancy escape :)
[21:46:48] <Blondie101010> it's just like makin a new screwdriver for every screw you have to use
[21:48:18] <biberu> znf: might be good to read at least the introduction here: https://en.wikipedia.org/wiki/Prepared_statement
[21:49:05] <znf> fancy escape sounds nice!
[21:49:19] <da_wunder> php docs also covers that - https://www.php.net/manual/en/mysqli.quickstart.prepared-statements.php - see example #2
[21:50:52] <Blondie101010> PDO's
[21:50:57] <Blondie101010> urgh
[21:51:12] <biberu> "Every prepared statement occupies server resources. Statements should be closed explicitly immediately after use. If not done explicitly, the statement will be closed when the statement handle is freed by PHP."
[21:51:16] <Blondie101010> PDO is easier to work with than mysqli
[21:51:29] <biberu> znf ^
[21:51:55] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[21:58:18] *** Quits: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it) (Read error: Connection reset by peer)
[21:59:33] *** Joins: guido (~weechat@host-79-25-191-220.retail.telecomitalia.it)
[22:00:20] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[22:13:16] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 250 seconds)
[22:15:55] <__adrian> biberu: that's misleading. there's almost never a need to close a statement explicitly. so much so that pdo intentionally didn't expose the ability in userland.
[22:16:48] <__adrian> znf: prepared statements (parameters) are not escaping. that's why they're preferred over escaping - they have none of the shortcomings.
[22:18:41] <biberu> __adrian: that script is opening several hundred thousand of them though, are all the resources really cleaned up when the function returns?
[22:19:43] <__adrian> i didn't see the script, but (a) using that many statements at once seems odd (b) yes, they're closed when the resource goes outof scope (or shortly after)
[22:19:54] <znf> link above: https://pastie.dev/KlOTtd.php
[22:20:37] <biberu> hm
[22:20:38] <__adrian> i only see one statement at a time
[22:20:58] <__adrian> well, two
[22:21:31] <biberu> yeah, but one is created in a loop
[22:21:34] <__adrian> btw  foreach ($stmt->getResult() as $row) { ...
[22:22:45] <da_wunder> what you could try to is just add `$stmt = null;` after that `$stmt->execute();` and same after that foreach loop
[22:22:52] <__adrian> > one is created in a loop  // the function is called in a loop. the statement is inside the function and (afaict) isn't referred to elsewhere.
[22:23:09] <biberu> mysqli has a function to explicitly close statements when you're done with them
[22:23:15] <__adrian> yes
[22:23:22] <__adrian> and it's pointless in most cases
[22:23:52] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[22:24:18] <__adrian> unless you're actually building up a ton of them (which is likely not necessary, but a result of a poor design) or keeping them around for a _long_ time (unlikely in a typical req→res php script)
[22:24:35] <__adrian> then just let them go away when they go out of scope
[22:24:49] <biberu> __adrian: yes, but that leaves it up to the gc, whenever that runs, and whatever effect it might have, and i don't see another cause for the high memory usage
[22:24:54] <__adrian> to be clear, i'm not saying the script is a good design
[22:25:12] <__adrian> you don't?
[22:25:22] <__adrian> SELECT *  is always a good place to atart looking
[22:25:27] <__adrian> *start
[22:25:46] <biberu> yeah, but he's not fetching it all at once
[22:25:49] <da_wunder> I would really avoid those SELECT * statements
[22:26:07] <znf> indeed, I could just SELECT id,bouquet instead
[22:27:06] <Blondie101010> not sure for prepared statements, but mysqli does expect explicit closing during script execution without regarding scope or references
[22:27:09] <__adrian> the statement is buffered
[22:27:41] <__adrian> unless the script does differently. and iirc that memory does not count against php's limit
[22:27:53] <__adrian> (can't find that atm)
[22:28:30] <biberu> i'm curious to try just the statement in a loop part
[22:28:50] <da_wunder> we don't if that table eg. contains some blob column where could be eg. large file etc.
[22:29:07] <__adrian> try executing the statement and then exiting
[22:29:07] <Blondie101010> just prepare it in the main scope and pass it to the function
[22:29:25] <__adrian> i.e., don't fetch() at all. see if you still see the memory usage.
[22:29:44] <znf> let me make a copy of the table do test
[22:29:46] <Blondie101010> that shouldn't matter
[22:29:55] <__adrian> > prepare it in the main scope and pass it to the function   // i'd suggest maybe the function is in the wrong place
[22:30:05] <Blondie101010> oh it is
[22:30:09] <Blondie101010> everything there is bad
[22:30:11] <biberu> what blondie says would be the right way regardless
[22:30:36] <__adrian> take the results and loop over them, rather than taking the statement (or calling it in a loop at all)
[22:31:29] <__adrian> back to  SELECT *
[22:31:36] <__adrian> you don't even *want* all of them.
[22:31:40] <Blondie101010> the loop is on the table, but the prepared is for each row
[22:31:56] <__adrian> you want the ones that don't yet have boquet 252. why would you select all of them?
[22:32:36] <Blondie101010> read it again :)
[22:32:42] <Blondie101010> the DB is filled with JSON
[22:32:48] <__adrian> haha
[22:32:53] <__adrian> yeah stop doing that
[22:32:53] <znf> yeah :)
[22:33:06] <da_wunder> or the proper question is - what you need to process that data? I'm assuming that row ID should be enough, not all the columns on those rows
[22:33:08] <znf> obvioulsy, I could use JSON_ functions in SQL
[22:33:15] <__adrian> or that
[22:33:23] <Blondie101010> wouldn't be much better
[22:33:34] <Blondie101010> not worth it imo
[22:33:59] <Blondie101010> you either want to maintain this junk, and therefore NEED to improve the design, or throw it away!
[22:34:14] <Blondie101010> there's no middle ground in this case
[22:34:53] <__adrian> it could be one query anyway. no need for much logic in php at all.  update users set boquet=? where id in(select id from users where ...)
[22:35:21] <da_wunder> ^
[22:35:54] *** Joins: chozorho (~chozorho@2601:146:300:c30::719a)
[22:35:58] <__adrian> if that doesn't solve your memory issue, then this isn't what was causing it in the first place  ;)
[22:36:12] <Blondie101010> only if json was handled in the DB
[22:36:59] <__adrian> yes
[22:37:01] <znf> the script itself is something of a "generic" stuff I run for maintenance every now and then, hence why my default query was SELECT *, again, optimizations weren't/aren't of my immediate concern, I can afford to use 32GB RAM for that operation if it's needed -- not that I want to :)
[22:37:12] <__adrian> which if used at all, is how it should be
[22:37:12] <Blondie101010> I mean, the function add_bouquet_to_user() is probably the best part of the script
[22:37:21] <__adrian> yes
[22:37:26] <__adrian> but still needs to be better
[22:37:32] * Blondie101010 nods
[22:37:40] <znf> I'm not sure if that's sarcasm :D
[22:37:46] <__adrian> passing the stmt in (or imo, the result) would be a great improvement
[22:37:58] <da_wunder> hmm, usually CLI don't limit memory usage at all
[22:38:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[22:38:23] <__adrian> not by default, but you can configure it
[22:38:37] <Blondie101010> hmmm, I think there's one by default on Centos
[22:39:11] <Blondie101010> imo it's a good idea to have a default
[22:41:13] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[22:41:17] <da_wunder> hmm, default for cli is been no limit on servers that I've used since 2000
[22:41:36] *** Joins: stenno (~stenno@user/stenno)
[22:42:16] <znf> uhm,
[22:42:17] <znf> Fatal error: Uncaught Error: Call to undefined method mysqli_stmt::getResult()
[22:42:28] <znf> oh right
[22:42:29] <__adrian> get_result()
[22:42:31] <znf> I stupidly copy/pasted
[22:42:54] <da_wunder> your IDE should shown that too
[22:43:10] <__adrian> did i do it on purpose to make sure you're paying attention? or has it just be 10 years or so since i've had to think about mysqli?
[22:43:15] <__adrian> you may never know
[22:43:21] <znf> da_wunder, my VIM doesn't
[22:43:22] <Blondie101010> :)
[22:44:21] <da_wunder> maybe you should configure your VIM for PHP development - just to show errors like that, autocomplete, etc.
[22:44:52] <znf> it should normally lint php
[22:45:37] <da_wunder> clearly that didn't work on your case
[22:46:20] <Blondie101010> linting won't find that
[22:46:29] <znf> you know, the docs of mysqli all show while()
[22:46:40] <znf> hence why I also used while instead of foreach
[22:46:43] <__adrian> was writtena  long time ago
[22:47:05] <Blondie101010> that's fine, but note that specific examples are NOT meant to show how to write an application
[22:47:06] <__adrian> pdo_statement and mysqli_result are both iterable
[22:47:10] <__adrian> ^
[22:47:18] *** Joins: lain6141 (~lain6141@119.224.72.222)
[22:47:32] <__adrian> examples in the manual are meant to show you how functions behave, not how you're supposed to use them.
[22:48:27] <da_wunder> ^
[22:49:23] <da_wunder> and that same goes for multiple frameworks - docs show you how to use something very easy - that way isn't most likely what you really want to use
[22:49:47] <znf> foreach ($stmt->get_result() as $row) { <- this still fails though
[22:49:52] <znf> Warning: Invalid argument supplied for foreach()
[22:50:30] <znf> maybe my sunday-night vodka is getting to me
[22:50:34] <__adrian> get_result() can return false
[22:50:57] <da_wunder> ^
[22:51:37] <da_wunder> static analyzers like phpstan and psalm could show you errors like that quite easily
[22:51:38] <__adrian> speaking of, you can make mysqli throw exceptions with MYSQLI_REPORT_STRICT https://www.php.net/manual/en/mysqli-driver.report-mode.php
[22:52:17] <__adrian> then this would never happen
[22:53:09] <znf> but it doesn't return false tough?
[22:53:17] *** Joins: fef (~thedawn@user/thedawn)
[22:53:25] <__adrian> what?
[22:53:37] <da_wunder> your error is saying totally oposite
[22:53:39] <__adrian> what's your whole error message
[22:54:12] <znf> PHP Warning:  Invalid argument supplied for foreach() in /opt/add_bouquet.php on line 84
[22:54:39] <__adrian> $result = $stmt->get_result(); var_dump($result);
[22:54:41] <da_wunder> znf: so just check what that parameter is - should not be so hard - right?
[22:55:03] <znf> oh wait, I already get_result in $result earlier
[22:55:04] <znf> damn it
[22:55:10] <__adrian> mmmhm
[22:56:04] <da_wunder> znf: try to understand that we cannot see your screen - so it's quite hard to follow you - and that is why our comments might be "weird" for you
[22:57:02] <znf> ok, so, SELECT-ing only the required fields, and using a foreach() to loop over the $result = $stmt->get_result(); still runs out of memory (I've lowered it to 256MB to see if faster)
[22:57:11] <znf> let me prepare the statement just once
[23:02:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:02:49] <biberu> __adrian, znf: tried to just prepare over and over again in a loop, not closing, memory_get_usage does not increase (8.1)
[23:03:46] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[23:03:57] <__adrian> znf: we're talking about a lot of thingss here, not everything is directly about the memory problem (e.g., using foreach)
[23:04:05] *** Joins: ferdna (~ferdna@user/ferdna)
[23:04:27] <__adrian> the memory problem is almost certainly related to the fact the you select everything from your table.
[23:05:17] <__adrian> (a) don't use buffered queries (b) don't select everything at all; just issue a single UPDATE query
[23:05:54] <__adrian> latter is the much better option
[23:05:56] <znf> the memory seems to increse by ~400-500 bytes every loop
[23:06:05] <znf> which I suspect is the size of the JSON array
[23:06:42] <znf> I've only selected the 3 columns I use this time
[23:08:56] <znf> sample output: https://pastie.dev/L2Jy6T.apache
[23:10:22] <znf> seems every json_decode() is adding to the memory usage every time
[23:16:56] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[23:17:16] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[23:17:38] *** Joins: fef (~thedawn@user/thedawn)
[23:20:44] <biberu> znf: php version?
[23:21:19] <znf> right now 7.2, was just installing 8.0 to test
[23:21:51] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[23:23:29] <Blondie101010> znf:  are you still preparing on each row?
[23:24:00] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[23:24:15] <znf> Blondie101010, see what biberu said -- I tried preparing just once, but nothing changed
[23:24:32] <Blondie101010> show that code please
[23:24:39] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:24:51] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[23:25:14] <znf> sec, let me rewrite it
[23:25:32] <znf> should have commented it out instead
[23:26:08] <Blondie101010> there's no reason to revert good changes
[23:27:32] <znf> Blondie101010, https://pastie.dev/EUm1BB.php
[23:29:57] <znf> biberu, still seeing the same thing with PHP 8
[23:30:07] <znf> I even set the variable to null and unset()
[23:31:59] <Blondie101010> that is wrong
[23:32:25] <znf> oh?
[23:32:38] <Blondie101010> how you bind parameters is wrong
[23:33:02] <znf> do I bind in the loop?
[23:33:16] <znf> oh, I do need to do that, yes
[23:33:54] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:33:55] <Blondie101010> no but you don't define your variables at the right place
[23:34:07] <Blondie101010> it's a mess
[23:34:12] <Blondie101010> why not use PDO?
[23:34:36] *** Joins: hackerbuddy (~Guest27@130.240.195.90)
[23:34:54] <znf> I don't know how to pdo
[23:35:15] <znf> also, even without actually inserting the result (or, well, basically, doing anything with the function), just doing json_decode() still results into a OOM
[23:37:53] <znf> https://pastie.dev/veNzw0.php
[23:38:23] <znf> results into: https://pastie.dev/WIDoLC.apache
[23:39:39] *** Quits: hackerbuddy (~Guest27@130.240.195.90) (Quit: Connection closed)
[23:40:13] <znf> with a higher memory limit, it ends up using around ~320MB towards the end: Memory Usage (369359):322587536
[23:42:22] <biberu> znf: what does it look like if you comment out json_decode?
[23:42:25] <Blondie101010> what was the memory usage at the beginning?
[23:42:34] <Blondie101010> or that
[23:43:04] <znf> oh, still an increase
[23:43:15] <znf> starts at:
[23:43:16] <znf> Memory Usage (0):164666088
[23:44:35] <biberu> O_o
[23:45:31] <znf> I mean, that sounds fine, as I'm selecting almost 370k rows, each with a column of a few hundred bytes, but just iterating trough them increases the memory usage 2x
[23:45:51] <znf> which kinda sounds weird, but I don't know enough about the internals
[23:53:05] *** Quits: mooz (~none@23.254.112.158) (Remote host closed the connection)
[23:55:36] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
