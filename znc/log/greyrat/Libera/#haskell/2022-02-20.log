[00:00:36] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[00:01:06] <janus> Athas: there is a new -Winvalid-haddock flag in ghc9, though i guess that wouldn't be sufficient for you
[00:03:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:03:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 250 seconds)
[00:04:02] *** Joins: hyiltiz (~quassel@31.220.5.250)
[00:05:00] *** Quits: ystael (~ystael@user/ystael) (Ping timeout: 240 seconds)
[00:05:24] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 240 seconds)
[00:07:09] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[00:11:40] <considerate[m]> Athas: Yes, you can run `haddock` on a single file.
[00:11:40] <considerate[m]> https://haskell-haddock.readthedocs.io/en/latest/invoking.html#invoking-haddock
[00:14:00] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:15:10] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[00:17:06] *** Joins: ystael (~ystael@user/ystael)
[00:19:19] *** Joins: k8yun (~k8yun@user/k8yun)
[00:19:35] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[00:21:05] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:21:36] *** Joins: alx741 (~alx741@181.199.42.143)
[00:24:17] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[00:27:26] *** Joins: pavonia (~user@user/siracusa)
[00:28:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[00:34:02] *** Joins: chomwitt (~chomwitt@2a02:587:dc04:5f00:97ff:5c76:a7e3:730d)
[00:36:38] <Athas> considerate[m]: great, thanks!
[00:40:56] *** Joins: alx741 (~alx741@181.199.42.143)
[00:42:42] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[00:44:17] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[00:44:50] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[00:49:29] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:57:16] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:01:12] *** Joins: alx741 (~alx741@157.100.197.240)
[01:04:18] *** Joins: acidjnk (~acidjnk@p200300d0c7363f90cc2edb7570cac520.dip0.t-ipconnect.de)
[01:05:35] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:08:12] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[01:08:28] *** Joins: pareto-optimal-d (~pareto-op@2001:470:69fc:105::1:b61f)
[01:09:53] *** Joins: Guest80 (~Guest80@47.186.214.206)
[01:10:17] *** Quits: Guest80 (~Guest80@47.186.214.206) (Client Quit)
[01:11:17] <pareto-optimal-d> Does anyone have opinions on "Sums of data types" versus "bucket" data types with a thingType field?
[01:11:17] <pareto-optimal-d> Longer explanation/note: https://www.paretooptimal.dev/sums-of-data-types-should-be-preferred-over-bucket-data-types-with-a-thingtype-field/
[01:12:18] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:14ec:228f:c3ec:ab2c)
[01:14:18] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:16:26] <EvanR> sum types are cool and are basically the same as union + tag but more ergonomic. Literally using sum of types (nested Either) is unwieldy, at least in haskell
[01:16:44] <EvanR> though anonymous sum comes up sometimes not sure where that is
[01:17:07] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[01:19:21] <ski> i suppose by "sums" they meant not just `Either'
[01:20:33] <ski> pareto-optimal-d : in the second alternative, why are there `freeUserType' and `paidUserType' fields ?
[01:22:08] *** Joins: alx741 (~alx741@157.100.197.240)
[01:23:00] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:23:50] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:d322:f659:136d:eef6)
[01:24:52] <ski> pareto-optimal-d : also, in the second alternative, the `case u of ...' should presumably match on `Paid pu' and `Free _', rather than `PaidUser pu' and `FreeUser _' ?
[01:24:52] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:25:28] <pareto-optimal-d> Agh, i'm sorry I didn't catch those when reviewing after writing
[01:25:31] <ski> and the `case articleType a of ...' makes no sense, since there is no `articleType'. presumably uou meant `case a of ...', matching on `Paid _' and `Free fa', rather than on `PaidArticle _' and `FreeArticle fa'
[01:26:03] <ski> (oh, and you had two distinct `Free' and `Paid' data constructors, so you should either rename, or add module qualification)
[01:27:48] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 240 seconds)
[01:29:18] <ski> considering the third alternative, it is basically `User = Int * String * (1 + Int)'. if we ignore the (basically useless) `freeUserType' and `paidUserType' fields in the second alternative, then we can see that this alternative is what you get, when you distribute the multiplication over the sum, in the third one : `User = Int * String + Int * String * Int'
[01:32:19] <pareto-optimal-d> Updated the mistakes, thank you. 
[01:32:24] <ski> this whole thing is reminiscent of attempting to represent `Maybe T' by `Bool * T'. but with that representation, representing `Just t' as `(True,t)', you get useless "slack" when representing `Nothing' as `(False,t0)' for some faux `t0' value. you allow data in your representation that is useless, can be used by mistake, and may be hard to conjure up
[01:32:49] <ski> (`Maybe T' is of course `1 + T', while `Bool' is `1 + 1')
[01:33:20] *** Joins: cynomys (~cynomys@user/cynomys)
[01:33:39] <ski> (this ties into the "correct by construction" notion)
[01:34:38] *** Quits: deadmarshal (~deadmarsh@95.38.113.80) (Ping timeout: 272 seconds)
[01:35:11] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[01:35:18] *** Quits: Topsi (~Tobias@95.33.25.255) (Ping timeout: 256 seconds)
[01:37:42] <ehammarstrom> I have just been introduced to fused-effects and written a small program that composes some effects, namely a logger (glorified putStrLn) and file reader (glorified ReadFile with errorhandling). What is good "effect" design? As I see it the vocabulary of an effect could be _really big_ (Database Effect perhaps) since it's like a DSL of sorts (?) Are there any texts or fun libraries using fused-effects that showcase 
[01:37:42] <ehammarstrom> a good practice/scope of an Effect?
[01:42:03] <pareto-optimal-d> Okay, thanks for your comments ski. I'm still mulling them over. If it helps the larger context that I had in mind here was how using database models as domain types can harm type safety.
[01:42:03] <pareto-optimal-d> This was a subproblem of that I was trying to solve and get feedback on
[01:42:36] *** Joins: alx741 (~alx741@157.100.197.240)
[01:45:45] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:47:20] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:49:37] *** Quits: cyphase_eviltwin (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[01:54:45] * ski . o O ( "Using Algebraic Datatypes as Uniform Representation for Structured Data" in 2003-03-17 at <https://ofai.at/papers/oefai-tr-2003-07.pdf>,"Modelling Large Datasets Using Algebraic Datatypes: A Case Study of the CONFMAN Database" in 2002-05-15 at <http://www.ofai.at/cgi-bin/get-tr?paper=oefai-tr-2002-27.pdf>, both by Markus Mottl )
[01:54:56] <ski> pareto-optimal-d : ^ might perhaps be interesting
[01:55:37] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:d322:f659:136d:eef6) (Quit: bye)
[01:55:46] *** Joins: steerio (~steerio@aviv.kinneret.de)
[01:55:56] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:d322:f659:136d:eef6)
[01:56:17] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea)
[01:56:19] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:d322:f659:136d:eef6) (Client Quit)
[01:56:29] <jackdk> ehammarstrom: I'm not aware of anything specific but off the top of my head, I'd expect you'd want high-level effects determined by your domain: input this, output that, high-level ops against a datastore. interpret directly into IO, or perhaps an intermediate representation if you need to test at that layer: perhaps you interpret your datastore effect into either postgres or sqlite, and from tehre into IO
[01:57:09] <jackdk> The demo starting at https://www.youtube.com/watch?v=-dHFOjcK6pA&t=240 may give a good flavour. It shows the effect-system dream, certainly
[01:57:14] *** Joins: cyphase (~cyphase@user/cyphase)
[01:58:04] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[01:58:24] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[01:58:45] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Remote host closed the connection)
[02:02:27] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[02:05:15] *** Joins: alx741 (~alx741@157.100.197.240)
[02:07:31] *** Joins: deadmarshal (~deadmarsh@95.38.118.170)
[02:07:49] <pareto-optimal-d> ski: interesting indeed! I'll add those to my reading list.
[02:12:08] *** Quits: deadmarshal (~deadmarsh@95.38.118.170) (Ping timeout: 256 seconds)
[02:13:00] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:14:51] <pareto-optimal-d> <ehammarstrom> "I have just been introduced to..." <- I remember some discussion on keeping effects small and a bias towards reusing existing effects last I researched this.
[02:16:24] *** Quits: lottaquestions_ (~nick@2607:fa49:5041:a200:b668:8e8:f292:8d7c) (Remote host closed the connection)
[02:16:49] *** Joins: lottaquestions_ (~nick@2607:fa49:5041:a200:11a4:6cdd:1796:d5ed)
[02:20:04] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:20:11] *** Joins: ofl^ (~ofl@50.233.120.162)
[02:22:20] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[02:23:47] *** Joins: fendor (~fendor@178.165.200.21.wireless.dyn.drei.com)
[02:24:13] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[02:25:17] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:26:44] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[02:27:17] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[02:29:08] *** Quits: polezaivsani (~polezaivs@orangeshoelaces.net) (Quit: rcirc on GNU Emacs 27.2)
[02:29:13] *** Quits: fendor (~fendor@178.165.200.21.wireless.dyn.drei.com) (Quit: Leaving)
[02:30:37] *** Joins: alx741 (~alx741@157.100.197.240)
[02:34:52] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[02:40:28] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[02:42:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[02:42:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:45:12] *** Quits: modnar (~modnar@shell.sonic.net) (Quit: No Ping reply in 180 seconds.)
[02:46:25] *** Joins: modnar (~modnar@shell.sonic.net)
[02:46:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:52:01] *** Quits: michalz (~michalz@185.246.204.33) (Remote host closed the connection)
[02:52:25] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:34e0:8b74:dd2c:1d62) (Ping timeout: 256 seconds)
[02:53:08] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[02:53:48] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 272 seconds)
[02:54:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[02:54:59] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:55:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:55:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Remote host closed the connection)
[02:59:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[03:00:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:00:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:00:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:13:10] *** Joins: alx741 (~alx741@157.100.197.240)
[03:16:26] *** Quits: chomwitt (~chomwitt@2a02:587:dc04:5f00:97ff:5c76:a7e3:730d) (Remote host closed the connection)
[03:16:39] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:24:16] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:27:17] *** Joins: thyriaen (~thyriaen@dynamic-078-055-141-021.78.55.pool.telefonica.de)
[03:28:54] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[03:29:08] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:29:52] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea)
[03:30:20] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:31:04] *** Quits: acidjnk (~acidjnk@p200300d0c7363f90cc2edb7570cac520.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:33:26] *** Joins: alx741 (~alx741@157.100.197.240)
[03:34:38] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[03:36:49] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:37:48] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[03:38:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:39:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[03:42:57] *** Quits: max22- (~maxime@2a01cb088335980000d616136ecfccf9.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:43:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[03:46:41] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:47:19] *** travisb is now known as tabemann
[03:50:58] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea)
[03:53:28] *** Joins: alx741 (~alx741@157.100.197.240)
[03:56:26] *** Quits: thyriaen (~thyriaen@dynamic-078-055-141-021.78.55.pool.telefonica.de) (Quit: Leaving)
[03:56:50] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:00:54] *** Joins: acidjnk (~acidjnk@p200300d0c7363f905d1e0b81e1ec2707.dip0.t-ipconnect.de)
[04:07:10] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:08:02] *** Quits: iteratee (~kyle@162.218.222.107) (Read error: Connection reset by peer)
[04:08:03] *** Joins: iteratee_ (~kyle@162.218.222.107)
[04:10:25] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::99e7) (Remote host closed the connection)
[04:10:51] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::99e7)
[04:13:28] *** Joins: alx741 (~alx741@181.199.42.143)
[04:13:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[04:17:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[04:18:02] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[04:18:11] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[04:22:57] *** Joins: Me-me (~me-me@user/me-me)
[04:23:31] <Me-me> Yes hello I do not know how to read haskell, and I would like some help reading this haskell code.
[04:24:06] <Me-me> https://paste.debian.net/1231570/
[04:26:59] <pavonia> Any specific questions?
[04:27:30] <Me-me> Sure. Lines 7 and 8, what th' heck are they? variable declarations, but... how?
[04:28:15] <Me-me> And what?
[04:28:35] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[04:29:22] <pavonia> `c n k` defines a function c with two parameters n and k
[04:29:40] <pavonia> like `function c(n, k)` in JavaScript, for example
[04:29:52] <Me-me> Ah, okay, that's just saying how to do combinatorics. Sure.
[04:30:12] <pavonia> Haskell uses whitespace for separating arguments
[04:30:19] <Me-me> So then on line 13 where it says (among other things) c (n - 1) (k - 1) it's running c for those two numbers.
[04:30:37] <pavonia> Right
[04:30:43] *** Joins: Topsi (~Tobias@95.33.25.255)
[04:30:47] <Me-me> But wait, then how is it defining c twice?
[04:31:03] <Me-me> Ohh I get it, overloadinng. Sure.
[04:31:31] <pavonia> It's a single definition, but spilt into several cases
[04:31:44] <pavonia> Line 7 is the definition for k=0
[04:32:00] <Me-me> Next question! Line 11, it's defining a mapper, that's fine, but I have no idea what k = sum $ do means, or how it fits into the rest of the mapper.
[04:33:14] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[04:33:26] <pavonia> Hhm, that's a bit complicated to explain if you are not familiar with monads
[04:33:59] <Me-me> Uhhhhh Leibniz?
[04:34:01] <pavonia> $ is just function application, so it's sum(...) where ... is a list build from a monadic action
[04:34:16] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:34:30] <pavonia> https://en.wikipedia.org/wiki/Monad_(functional_programming)
[04:34:52] *** Joins: alx741 (~alx741@157.100.197.240)
[04:35:29] <Me-me> Okay ... so k is just the sum of the results of the loop comprising lines 12-18, right?
[04:36:01] <pavonia> No, the result of pie applied to k is the sum
[04:36:01] <Me-me> No, that doesn't make sense...
[04:36:21] <pavonia> pie(k) = sum(...)
[04:36:31] <Me-me> Right, another argument.
[04:38:58] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:39:06] <Me-me> Okay... So n is the amount of different values in ns. Easy. What is "fromIntegral"?
[04:39:26] <pavonia> That whole do-block is a bit like another list comprehension where `return` specifies how the return values look like
[04:39:47] <pavonia> :t fromIntegral
[04:39:49] <lambdabot> (Integral a, Num b) => a -> b
[04:40:01] <Me-me> So it's casting?
[04:40:06] <pavonia> It converts between different number types
[04:40:10] <Me-me> Got it.
[04:40:24] <pavonia> Explicity casting, so to say
[04:40:30] <pavonia> -y
[04:40:39] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:44:01] <Me-me> And then the number it's casting is the sum of ... c(length(ns)-1, k-1), which is a positive if k is even and a negative if k is odd (is that just another way of saying abs?), plus all the numbers between l and k and all the numbers between 0 and l. 
[04:44:38] <Me-me> Which are two separate things because... sometimes a <- [a..b] can be invalid?
[04:46:06] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[04:46:16] <Me-me> Is that right?
[04:46:45] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:48:55] <pavonia> [ e | x <- list ] is a mapping of values (with possible filtering) and means "take all the values from list, bind each respective value to the variable x and add a new element e to the result list. e can use the value x to form the new value
[04:49:34] <Me-me> Okay now I'm confused again.
[04:49:45] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[04:50:30] <Me-me> In your words, what is line 13 doing?
[04:50:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[04:51:11] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Quit: Textual IRC Client: www.textualapp.com)
[04:54:48] <pavonia> For each l = 0..k calculate the sum of all values (-1)^(k' - l) * c (n - l) (k' - l) for each k' from k..l
[04:54:58] <pavonia> Does that make sense?
[04:55:24] <Me-me> No.
[04:55:25] <pavonia> It's extra confusing as they are using another valuable k for the inner "loop", shadowing the function parameter k
[04:55:40] <Me-me> Yeah the namespace is bothering me but I think I have a grip on it.
[04:56:02] *** Joins: alx741 (~alx741@181.199.42.143)
[04:57:07] <Me-me> Okay let's ignore that part for now.
[04:57:39] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 256 seconds)
[04:57:40] <Me-me> ns' <- subsequences ns. I looked up subsequences and I figured out that it's grabbing the different combinations of ns.
[04:58:38] <Me-me> And the original writer said that it's doing a thing to each of those combinations.
[04:58:55] <Me-me> What lines are the thing that it is doing?
[04:59:37] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[04:59:58] <pavonia> Line 13 is basically this https://bpa.st/3CBA
[05:00:28] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[05:00:31] <pavonia> s/ws.add/ws.append/
[05:00:37] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:682c:7604:30f7:a4ea) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:00:45] <Me-me> Same dif, it's wrapped in sum.
[05:00:47] <Me-me> I assume that's javascript?
[05:01:22] <pavonia> It's pseudo code
[05:01:35] <Me-me> Okay sure.
[05:02:02] <pavonia> > subsequences "abcd"
[05:02:04] <lambdabot>  ["","a","b","ab","c","ac","bc","abc","d","ad","bd","abd","cd","acd","bcd","a...
[05:02:59] <pavonia> It selects each element from that list and binds the current value to ns'
[05:03:16] <Me-me> Current based on what?
[05:03:32] <pavonia> On the iteration through that list
[05:03:42] <Me-me> Okay, and what is it doing to each iteration?
[05:04:34] <pavonia> What is specified after the return
[05:05:06] <pavonia> guard adds some filtering to ignore values
[05:05:25] <Me-me> I thought the return was the return value to be summed up by pie.
[05:05:30] <pavonia> > do { x <- [1,2,3]; guard (odd x); return x }
[05:05:31] <lambdabot>  [1,3]
[05:06:05] <pavonia> No, the result value for pie is that sum
[05:06:26] <Me-me> I thought the sum was summing the results of the return value. What's it summing?
[05:07:20] <pavonia> That do-block builds a new lst form scratch, sum sums that new list
[05:07:41] *** Quits: scav (sid309693@id-309693.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[05:07:49] *** Joins: scav (sid309693@id-309693.helmsley.irccloud.com)
[05:08:14] <pavonia> Everything from l. 12-18 describes how to build that new list
[05:08:40] <pavonia> return ... specifies how each element looks like
[05:08:58] <pavonia> The ... <- ... portions define there the elements come from
[05:09:14] <pavonia> plus some extra filtering done by guard
[05:09:30] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[05:10:13] <Me-me> How many nested loops are there here?
[05:10:31] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[05:11:14] <pavonia> `ns' <- subsequences ns` is the "main loop"
[05:11:20] <Me-me> Right.
[05:11:26] <pavonia> plus two nested loops for calculating ws
[05:11:33] <Me-me> And for each of those it's executing lines 15-18
[05:11:57] <pavonia> Yes
[05:12:51] <Me-me> And the results are being summed up in line 11?
[05:13:02] <Me-me> The results of ns' <- subsequences
[05:13:51] *** Joins: zachel (~zachel@user/zachel)
[05:14:09] <pavonia> Yeah, the results of that main loop
[05:14:24] *** Quits: ofl^ (~ofl@50.233.120.162) (Remote host closed the connection)
[05:14:26] <Me-me> Okay.
[05:15:16] *** Joins: Erutuon (~Erutuon@user/erutuon)
[05:15:29] <Me-me> % still means modulo in haskell right?
[05:15:29] <yahb> Me-me: ; <interactive>:80:20: error: parse error on input `in'
[05:15:36] <Me-me> Ahh!
[05:15:42] * Me-me dives for cover
[05:16:31] *** Joins: alx741 (~alx741@157.100.197.240)
[05:16:56] <pavonia> Nah, a % b is a rational number a / b :p
[05:17:05] <Me-me> Okay.
[05:17:50] <Me-me> So yes. It's inverting the odds of getting 5 or fewer colours of marbles. Excellent.
[05:18:21] <Me-me> line 13 is the only remaining mystery.
[05:18:30] <Me-me> But I will take a break before attempting that again.
[05:18:35] <Me-me> Thank you for all the assistance so far.
[05:18:58] <pavonia> No problem
[05:19:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[05:20:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:21:15] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:24:48] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[05:32:35] <FernandoChu[m]> isn't it kind of redundant for newtypes to have constructors? not sure about this but it seems to me that removing the constructor wouldn't cause any ambiguity as the types can be inferred 
[05:34:51] <ski> how would you distinguish between the definiendum and the definiens, the defined type, and the type it's defined in terms of (the representation type) ?
[05:35:56] <ski> (also, what if it's a recursive `newtype' ?)
[05:37:01] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 245 seconds)
[05:37:27] *** Joins: alx741 (~alx741@157.100.197.240)
[05:38:36] <FernandoChu[m]> I think the first one should be possible to be honest, but I don't know enough to give a decent answer, but with recursion I'm convinced that it can't
[05:38:38] <FernandoChu[m]> thanks
[05:40:04] <int-e> FernandoChu[m]: If you have newtype Foo a = {-Foo-} a and f :: a -> Foo a; f x = id x, do you apply id to Foo x, or do you do Foo (id x)? Note that if you use a class member like `succ` then this will affect semantics.
[05:40:50] <int-e> "can be inferred" isn't really true when there's polymorphic types everywhere.
[05:41:52] <int-e> pavonia: ah, sorry for that terrible piece of code up there :P (fwiw, `c` computes binomial coefficients. The rest is... complicated, still don't really want to explain it in detail.)
[05:43:04] <FernandoChu[m]> int-e: shouldn't there be some free theorem that essentially it doesn't matter though? I know that is just an example but I think that in cases like this both should be equal (assuming Eq a)
[05:43:21] *** Joins: dsrt^ (~dsrt@50.233.120.162)
[05:43:51] <int-e> No there isn't. You could have an "opposite" instance for Enum that swaps the roles of succ and pred.
[05:44:02] <int-e> We do have such a thing for Ord.
[05:45:10] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[05:45:30] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:48:56] <FernandoChu[m]> hmm I'm not really getting how, could you please give an example?
[05:53:43] <int-e> FernandoChu[m]: https://paste.debian.net/1231573/ ...note that under your proposal, f1 and f2 would be syntactically the same.
[05:54:58] <FernandoChu[m]> brilliant! thank you
[05:55:23] <int-e> it's worth noting that this kind of thing, providing alternative type class implementations, is a common use case of newtypes
[05:57:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:00:09] *** Quits: marquis_andras (~marquis_a@124.170.160.147) (Remote host closed the connection)
[06:01:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[06:03:50] *** Joins: alx741 (~alx741@157.100.197.240)
[06:04:22] <pavonia> int-e: Can you explain in simple words what that pie function does?
[06:05:03] <Me-me> Yes hello I am interested also.
[06:05:14] <Me-me> pavonia: I can tell you its intent, just not exactly how it does it.
[06:05:51] <Me-me> "If you have a bag of marbles, each of which is one of 15 colours, and you pull n marbles from it at random, what are the odds that you get 6 or more colours in the marbles you pull?"
[06:05:56] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[06:06:24] <Me-me> The algorithm is supposed to calculate the odds of each possible combination of getting 5 or fewer colours.
[06:06:31] <pavonia> Ah, that was for that ##math question earlier
[06:06:35] <Me-me> Yeh.
[06:07:01] <Me-me> Binomial coefficients, he says.
[06:07:16] <Me-me> I have no idea what that is but I think there's a function for it in excel.
[06:07:16] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:08:20] <pavonia> It's this (n k) thing
[06:08:35] <pavonia> n over k
[06:08:46] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[06:08:59] <Me-me> Yeah I just don't know how it factors into the greater algorithm.
[06:09:12] *** Quits: Topsi (~Tobias@95.33.25.255) (Read error: Connection reset by peer)
[06:09:45] <pavonia> The binomial coefficient is just function c
[06:09:54] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:10:09] <Me-me> I understand what part of the code represents something called a "binomial coefficient".
[06:10:34] <Me-me> I can even mostly follow the math of that function. I do not know how that is necessary to the end result.
[06:10:35] <pavonia> Okay :p
[06:10:46] <Me-me> :P
[06:10:55] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[06:12:27] <pavonia> (n k) is the number of ways to choose k elements from a set of n elements
[06:12:39] <Me-me> So it is combinatorics.
[06:13:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[06:16:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:17:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:18:57] *** Quits: xff0x (~xff0x@2001:1a81:52c9:2700:c4c8:f455:66db:3020) (Ping timeout: 240 seconds)
[06:21:08] *** Joins: xff0x (~xff0x@2001:1a81:5301:6400:24c5:5158:4f07:abb5)
[06:23:52] *** Joins: alx741 (~alx741@181.199.42.143)
[06:26:30] <yushyin> hi Me-me ;)
[06:26:34] <Me-me> Tsup.
[06:27:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:32:10] *** Quits: zachel (~zachel@user/zachel) (Quit: Quit: Leaving!)
[06:32:39] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[06:33:21] *** Joins: alx741 (~alx741@181.199.42.143)
[06:35:36] *** Joins: zachel (~zachel@user/zachel)
[06:35:50] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[06:35:58] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[06:36:00] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[06:36:08] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[06:36:46] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[06:41:37] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[06:45:18] *** Quits: Ariakenom_ (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: Leaving)
[06:46:07] *** Quits: ubert (~Thunderbi@5.253.207.46) (Ping timeout: 256 seconds)
[06:48:15] *** Joins: ubert (~Thunderbi@86.107.21.238)
[06:48:40] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[06:52:21] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:53:41] *** Joins: alx741 (~alx741@157.100.197.240)
[06:55:17] *** Quits: td_ (~td@94.134.91.184) (Ping timeout: 240 seconds)
[06:55:20] <Sqaure> Are Profunctors widely used? Looking at base instances and the only type i remember seeing having one is Arrow. 
[06:57:20] *** Joins: td_ (~td@94.134.91.130)
[06:57:20] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:07:59] *** Quits: acidjnk (~acidjnk@p200300d0c7363f905d1e0b81e1ec2707.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:08:47] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[07:12:50] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:04] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:15:04] *** Joins: alx741 (~alx741@157.100.197.240)
[07:15:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:16:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:16:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:16:48] *** Joins: wroathe (~wroathe@user/wroathe)
[07:18:12] *** Quits: modnar (~modnar@shell.sonic.net) (Quit: No Ping reply in 180 seconds.)
[07:18:37] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:19:29] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:20:16] *** Joins: modnar (~modnar@shell.sonic.net)
[07:22:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:22:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:27:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[07:31:58] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:32:32] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:32:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[07:36:26] *** Joins: alx741 (~alx741@181.199.42.143)
[07:37:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[07:40:16] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[07:40:55] *** Joins: alx741 (~alx741@157.100.197.240)
[07:41:05] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:43:38] *** Joins: deadmarshal (~deadmarsh@95.38.118.170)
[07:46:46] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:47:11] *** Joins: haasn (~nand@haasn.dev)
[07:49:18] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:49:22] *** Joins: cynomys (~cynomys@user/cynomys)
[08:00:09] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[08:04:52] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[08:06:21] <random-jellyfish> is there a difference in speed between LL and LR parsers?
[08:06:41] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:07:24] *** Joins: alx741 (~alx741@157.100.197.240)
[08:11:41] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[08:11:58] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[08:14:06] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:19:09] *** Joins: deadmarshal_ (~deadmarsh@95.38.4.150)
[08:20:36] *** Quits: deadmarshal (~deadmarsh@95.38.118.170) (Ping timeout: 272 seconds)
[08:21:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:21:13] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:21:53] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[08:23:23] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:25:29] *** Joins: Welkin (~Welkin@216.243.35.47)
[08:25:37] <Welkin> So is this like Liberia?
[08:33:13] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[08:34:10] *** Parts: Welkin (~Welkin@216.243.35.47) ()
[08:34:42] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:37:27] *** Joins: alx741 (~alx741@157.100.197.240)
[08:38:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:38:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:38:46] *** Joins: wroathe (~wroathe@user/wroathe)
[08:41:30] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[08:42:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:42:58] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:43:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:51:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:52:29] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[08:54:17] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:54:31] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[08:55:00] *** Quits: deadmarshal_ (~deadmarsh@95.38.4.150) (Ping timeout: 240 seconds)
[08:55:47] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[08:57:57] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[08:58:54] <jackdk> Sqaure: they show up a lot in Opaleye (+ some other abstractions), but are generally quite useful if you find yourself with values that represent some "thing" with an input and an output
[08:59:39] <Sqaure> jackdk, Good to know. Thanks
[09:00:34] <jackdk> If you are trying to form a list of what things to learn when, you can defer them for a while
[09:01:05] <jackdk> oh, and the choice subclass of profunctor is used in the implementation of prisms, once you get into lens
[09:04:47] <Sqaure> allright! Well used both lens and optics a bunch so i guess they are worth knowing about at least.
[09:05:46] *** Joins: analognoise (~analognoi@91.196.220.77)
[09:07:29] *** Joins: alx741 (~alx741@157.100.197.240)
[09:10:55] *** Quits: modnar (~modnar@shell.sonic.net) (Quit: No Ping reply in 180 seconds.)
[09:13:18] *** Joins: modnar (~modnar@shell.sonic.net)
[09:16:20] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[09:16:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[09:17:49] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[09:21:38] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[09:23:05] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[09:24:04] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[09:31:03] *** Joins: caimeo (uid540603@id-540603.lymington.irccloud.com)
[09:34:06] *** Joins: alx741 (~alx741@181.199.42.143)
[09:36:23] <jackdk> you can use prisms without understanding profunctors, it was just another example
[09:45:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:47:58] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[09:48:35] *** Joins: alx741 (~alx741@157.100.197.240)
[09:50:04] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[10:01:47] *** Joins: k8yun (~k8yun@user/k8yun)
[10:03:19] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[10:04:51] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[10:05:27] *** Joins: sumanthyedoti (~sumanthye@49.207.194.101)
[10:06:11] *** Quits: sumanthyedoti (~sumanthye@49.207.194.101) (Client Quit)
[10:06:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:06:23] *** Joins: sumanthyedoti (~sumanthye@49.207.194.101)
[10:06:47] *** Quits: sumanthyedoti (~sumanthye@49.207.194.101) (Client Quit)
[10:10:41] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[10:12:06] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[10:20:57] *** Quits: xff0x (~xff0x@2001:1a81:5301:6400:24c5:5158:4f07:abb5) (Ping timeout: 240 seconds)
[10:22:11] *** Joins: xff0x (~xff0x@2001:1a81:5301:6400:b772:c1d8:3c5d:2da4)
[10:24:10] *** Joins: alx741 (~alx741@181.199.42.143)
[10:29:03] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[10:29:39] *** Joins: alx741 (~alx741@157.100.197.240)
[10:34:07] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:38:53] *** Joins: mbuf (~Shakthi@223.178.126.157)
[10:42:36] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[10:44:46] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[10:45:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:49:30] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[10:50:47] *** Joins: alx741 (~alx741@181.199.42.143)
[10:51:12] <Me-me> Okay that was a cleansing four hour Stellaris session. Now to look at the code again.
[10:51:53] <Me-me> Five hour.
[10:54:30] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:58:54] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[10:58:56] <Me-me> In the line "let w = ws !! l", what does !! mean?
[10:59:16] <ski> "select the `l'th element of `ws'"
[10:59:31] <Me-me> Ah, perfect.
[10:59:32] <ski> > [2,3,5,7] !! 3
[10:59:33] <lambdabot>  7
[10:59:39] <ski> > [2,3,5,7] !! 4
[10:59:41] <lambdabot>  *Exception: Prelude.!!: index too large
[11:00:21] <ski> @src !!
[11:00:21] <lambdabot> xs     !! n | n < 0 = undefined
[11:00:21] <lambdabot> []     !! _         = undefined
[11:00:21] <lambdabot> (x:_)  !! 0         = x
[11:00:23] <lambdabot> (_:xs) !! n         = xs !! (n-1)
[11:00:39] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[11:01:16] *** Joins: alx741 (~alx741@181.199.42.143)
[11:03:50] *** Joins: cynomys (~cynomys@user/cynomys)
[11:06:16] <Me-me> So then, the line "let ws = [fromIntegral $ sum [(-1)^(k - l) * c (n - l) (k - l) | k <- [l..k]] | l <- [0..k]]" is creating an array?
[11:07:00] <Rembane> No, a linked list
[11:07:01] <chronon> What is that @src command? It doesn't work for me in ghci.
[11:07:01] <ski> a list, not an array
[11:07:09] <Me-me> Okay.
[11:07:21] <Me-me> But multiple results.
[11:07:28] <ski> it's a lambdabot command, displaying source from a hand-written collection of source snippets
[11:07:37] <ski> @help src
[11:07:37] <lambdabot> src <id>. Display the implementation of a standard function
[11:08:06] <ski> (the actual implementation used may be different)
[11:08:32] <ski> chronon : fwiw, i think it's possible to install lambdabot locally, and to be able to call it from the interactor
[11:08:35] * ski hasn't tried, though
[11:09:01] <ski> @version
[11:09:02] <lambdabot> lambdabot 5.3.0.1
[11:09:02] <lambdabot> git clone https://github.com/lambdabot/lambdabot
[11:09:03] <ski> @where lambdabot
[11:09:04] <lambdabot> http://haskell.org/haskellwiki/Lambdabot
[11:09:22] <chronon> Or maybe I can /msg lambdabot can I?
[11:09:27] <ski> sure, you can
[11:10:03] <ski> (that's encouraged, in case you're just trying things out, and don't want to show, or ask about, something in particular, to the channel)
[11:10:03] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[11:10:45] *** Joins: alx741 (~alx741@157.100.197.240)
[11:10:48] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[11:12:02] <chronon> Ok, I'll experiment. Thanks.
[11:12:39] <ski> Me-me : yes, a sequence of multiple numbers (each being a sum of another list)
[11:13:11] <Me-me> So here is the full snippet: https://paste.debian.net/1231570/
[11:13:41] <ski> that's int-e's snippet, yea ?
[11:13:41] <Me-me> I'm just confused as to why the l is declared on line 15 but used on line 13.
[11:13:43] <Me-me> Yeah.
[11:14:02] <ski> oh, those are different variables `l'
[11:14:15] <Me-me> Okay, what's the one on line 13 then?
[11:14:16] <ski> the one on line 13 is bound by the generator `l <- [0..k]'
[11:14:23] <Me-me> Ah, right.
[11:15:00] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:15:07] <ski> for each value `l' in the (inclusive-inclusive) range from `0' to `k', we collect the values `fromIntegral (sum [...])' into a list
[11:16:28] <ski> hm, i guess the `fromIntegral' here is converting from `Int' to `Integer'
[11:17:19] <ski> oh, i see why both variables are names the same (`l')
[11:17:46] <ski> in the definition of `ws', `l' is the running index, used when defining each element (at index `l') in the list `ws'
[11:18:17] <ski> then, the `l' on line 15 is a particular index, which is then used on line 17 to select a particular element (number) from the list `ws'
[11:19:02] <ski> (also that `l' is used on line 16 to ensure `l' is not greater than `k', which is the maximum index in the list `ws')
[11:19:49] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:20:02] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[11:20:32] <ski> the whole `do'-block, with commands from line 12 to line 18 is nondeterministically computing an `Integer' (meaning, it's computing a list of `Integer's) .. the only nondeterministic choice here is  ns' <- subsequences ns
[11:21:32] <ski> (well, `guard (...)' is also, strictly speaking, a choice -- but only in the trivial sense that it acts like a veto, or a `filter', stopping the generation of a solution when `l' is greater than `k')
[11:21:57] <Me-me> Yeah.
[11:22:27] <ski> so, for every possible subsequence of `ns' (such that `l <= k'), lines 12 to 18 compute an `Integer'. all these are collected in a list, and the `sum' on line 11 is adding all these together
[11:22:45] <ski> > subsequences "abcd"
[11:22:47] <lambdabot>  ["","a","b","ab","c","ac","bc","abc","d","ad","bd","abd","cd","acd","bcd","a...
[11:22:50] <ski> > subsequences "abc"
[11:22:51] <lambdabot>  ["","a","b","ab","c","ac","bc","abc"]
[11:23:15] <Me-me> Aye.
[11:23:19] <ski> instead of using `do' here, one could just as well be using a list comprehension
[11:23:24] <Me-me> I'm mostly just trying to figure out the "compute an integer" bit.
[11:24:24] <ski> (in that case, one'd separate each of the commands by commas, remove the `guard $ ' bit, and move the last line first (removing the `return $ '), terminating it with a `|', and, of course, enclosing everything in square brackets)
[11:25:08] *** Joins: acidjnk (~acidjnk@p200300d0c7363f90955657ea6b285d32.dip0.t-ipconnect.de)
[11:25:42] <ski> well, i guess we have a sum of binomial coefficients, with alternating signs
[11:26:36] *** Quits: tabemann (~travisb@172-13-49-137.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 240 seconds)
[11:27:36] <Me-me> Right.
[11:27:48] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[11:28:44] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:30:39] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[11:31:25] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Quit: Leaving...)
[11:31:32] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[11:31:39] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[11:32:30] *** Quits: raym (~raym@user/raym) (Ping timeout: 272 seconds)
[11:33:06] *** Joins: alx741 (~alx741@157.100.197.240)
[11:37:23] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[11:37:59] *** Joins: raym (~raym@user/raym)
[11:37:59] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:38:12] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:47:33] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:14ec:228f:c3ec:ab2c) (Quit: Leaving)
[11:48:36] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[11:49:17] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:49:51] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[11:50:43] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:50:55] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:52:21] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[11:53:42] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:54:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[11:54:44] *** Joins: Batzy (~quassel@user/batzy)
[11:55:25] *** Joins: alx741 (~alx741@157.100.197.240)
[11:59:43] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:00:19] *** Quits: analognoise (~analognoi@91.196.220.77) (Read error: Connection reset by peer)
[12:00:34] *** Quits: caimeo (uid540603@id-540603.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:01:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[12:07:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:07:55] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:08:23] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:4edf:af0d:d165:e093)
[12:08:28] *** Quits: ccntrq (~Thunderbi@2a01:e34:eccb:b060:4edf:af0d:d165:e093) (Remote host closed the connection)
[12:08:59] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[12:09:08] *** Quits: srk (~sorki@user/srk) (Remote host closed the connection)
[12:09:26] *** Joins: srk (~sorki@user/srk)
[12:17:57] *** Joins: alx741 (~alx741@157.100.197.240)
[12:21:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:21:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[12:21:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:22:25] *** Joins: alx741 (~alx741@157.100.197.240)
[12:26:42] *** Joins: cosimone (~user@93-34-133-75.ip49.fastwebnet.it)
[12:27:15] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:30:31] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:35:35] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[12:36:31] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:44:43] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[12:44:48] *** Joins: alx741 (~alx741@157.100.197.240)
[12:49:10] *** Quits: enemeth79 (sid309041@id-309041.lymington.irccloud.com) ()
[12:49:22] *** Joins: enemeth79 (sid309041@id-309041.lymington.irccloud.com)
[12:49:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:50:30] *** Joins: wroathe (~wroathe@user/wroathe)
[12:53:14] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Remote host closed the connection)
[12:55:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[13:02:36] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[13:03:01] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[13:05:14] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[13:05:44] *** Joins: alx741 (~alx741@157.100.197.240)
[13:08:05] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[13:08:15] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[13:08:46] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:09:38] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:10:13] *** Joins: alx741 (~alx741@157.100.197.240)
[13:10:43] *** Joins: drdo (~drdo@roach0.drdo.eu)
[13:12:42] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:13:09] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[13:13:37] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[13:13:37] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:18:32] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:20:45] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[13:22:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:26:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[13:31:40] *** Joins: alx741 (~alx741@157.100.197.240)
[13:33:59] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:34:19] *** Joins: themc47 (~mc47@xmonad/TheMC47)
[13:34:22] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Client Quit)
[13:34:24] *** Quits: themc47 (~mc47@xmonad/TheMC47) (Client Quit)
[13:34:40] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:34:44] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[13:36:13] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:37:44] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[13:38:46] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Read error: Connection reset by peer)
[13:40:15] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:43:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[13:45:24] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[13:51:24] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[13:53:38] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[13:54:12] *** Joins: alx741 (~alx741@181.199.42.143)
[13:58:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Ping timeout: 240 seconds)
[13:58:49] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[14:00:34] *** Joins: coot (~coot@213.134.190.95)
[14:01:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[14:02:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[14:06:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:06:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:06:21] *** Joins: wroathe (~wroathe@user/wroathe)
[14:09:44] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[14:10:51] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[14:11:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[14:11:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[14:11:37] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[14:13:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:13:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[14:14:25] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[14:15:35] *** Joins: alx741 (~alx741@157.100.197.240)
[14:15:48] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:16:44] *** Quits: acidjnk (~acidjnk@p200300d0c7363f90955657ea6b285d32.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:19:30] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[14:22:14] *** Joins: averell (~averell@user/averell)
[14:24:13] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:28:28] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:29:04] *** Joins: alx741 (~alx741@157.100.197.240)
[14:33:14] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:34:22] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[14:36:33] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[14:48:52] *** Joins: themc47 (~mc47@xmonad/TheMC47)
[14:51:17] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 240 seconds)
[14:51:33] *** Joins: alx741 (~alx741@157.100.197.240)
[14:52:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:52:53] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:55:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:07:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:07:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:07:53] *** Joins: wroathe (~wroathe@user/wroathe)
[15:11:33] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:11:34] *** Joins: alx741 (~alx741@157.100.197.240)
[15:13:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:14:58] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:21:47] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:447b:39c4:735e:5310)
[15:23:51] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[15:24:56] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[15:30:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[15:32:57] *** Joins: alx741 (~alx741@157.100.197.240)
[15:33:38] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[15:33:53] *** Joins: dcoutts__ (~duncan@host86-144-78-249.range86-144.btcentralplus.com)
[15:36:12] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:36:31] *** Quits: dcoutts_ (~duncan@host86-144-78-249.range86-144.btcentralplus.com) (Ping timeout: 256 seconds)
[15:37:41] *** Joins: arievw (~arievw@85.148.234.95)
[15:38:07] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[15:38:17] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Ping timeout: 240 seconds)
[15:38:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:38:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:38:41] *** Joins: wroathe (~wroathe@user/wroathe)
[15:43:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[15:48:19] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be)
[15:48:42] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[15:50:16] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[15:51:21] *** Quits: themc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[15:52:37] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::99e7) (Ping timeout: 240 seconds)
[15:52:44] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Remote host closed the connection)
[15:52:56] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[15:52:59] *** Joins: alx741 (~alx741@181.199.42.143)
[15:53:46] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:57:52] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[15:58:28] *** Joins: alx741 (~alx741@181.199.42.143)
[16:01:59] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[16:02:06] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[16:09:46] *** Joins: img (~img@user/img)
[16:12:13] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Remote host closed the connection)
[16:15:40] *** Joins: vysn (~vysn@user/vysn)
[16:16:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[16:18:42] *** Joins: alx741 (~alx741@157.100.197.240)
[16:20:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[16:24:55] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[16:26:04] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[16:26:06] *** Quits: elkcl (~elkcl@broadband-37-110-156-162.ip.moscow.rt.ru) (Ping timeout: 256 seconds)
[16:26:15] *** Joins: elkcl (~elkcl@broadband-37-110-156-162.ip.moscow.rt.ru)
[16:26:21] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[16:28:36] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 240 seconds)
[16:31:01] *** Joins: notzmv (~zmv@user/notzmv)
[16:35:32] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[16:35:58] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[16:36:18] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:43:16] *** Joins: alx741 (~alx741@181.199.42.143)
[16:43:55] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[16:45:05] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[16:45:29] *** Joins: alp (~alp@user/alp)
[16:47:21] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[16:49:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:49:56] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[16:53:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[16:54:30] <ehammarstrom> jackdk: Thanks sharing that demo. As a side note, Sandy Maguire has written a neat book called Thinking with Types - Type-level programming in Haskell. But I don't think it discusses effect-systems
[16:56:21] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:56:31] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[16:57:15] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[16:58:25] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[16:59:21] *** Joins: thyriaen (~thyriaen@dynamic-077-191-029-223.77.191.pool.telefonica.de)
[17:00:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Ping timeout: 240 seconds)
[17:01:51] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 256 seconds)
[17:02:34] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be)
[17:06:43] *** Joins: alx741 (~alx741@157.100.197.240)
[17:10:07] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:10:18] *** Joins: son0p (~ff@181.136.122.143)
[17:14:28] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[17:14:47] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[17:19:05] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[17:20:41] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[17:22:08] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[17:24:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:24:09] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[17:24:31] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[17:26:38] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:28:06] *** Joins: alx741 (~alx741@181.199.42.143)
[17:28:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[17:30:02] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[17:30:20] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[17:30:37] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[17:34:57] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[17:35:00] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:35:20] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:37:21] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[17:41:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:43:44] *** Joins: tubogram40 (~tubogram@user/tubogram)
[17:43:51] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[17:45:04] *** Quits: tubogram4 (~tubogram@user/tubogram) (Ping timeout: 260 seconds)
[17:45:04] *** tubogram40 is now known as tubogram4
[17:47:25] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[17:47:27] *** Joins: alx741 (~alx741@157.100.197.240)
[17:48:03] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be)
[17:48:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:48:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:48:27] *** Joins: wroathe (~wroathe@user/wroathe)
[17:49:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[17:52:14] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:52:24] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:53:05] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:53:19] *** Joins: kritzefitz (~kritzefit@debian/kritzefitz)
[17:53:54] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[17:59:27] *** Joins: max22- (~maxime@2a01cb0883359800f08509aefb13de74.ipv6.abo.wanadoo.fr)
[18:02:39] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:03:14] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[18:03:16] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:05:28] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:08:23] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[18:12:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[18:13:47] *** Joins: fendor (~fendor@77.119.193.215.wireless.dyn.drei.com)
[18:16:37] <int-e> pavonia, Me-me: About https://paste.debian.net/1231570/ ... Well I'm more awake now, so I can try... So the problem is, there's a bag of marbles with 10 marbles of color 1, 20 marbles of color 2, etc., to 150 marbles of color 15. We select 10 of those marbles and want to know the probability that we get at least 6 colors, or, taken the complement, that we have at most 5 colors. Now if we focus on...
[18:16:43] <int-e> ...any l of the colors (a sublist of length l of ns) then there's a simple formula to count in how many ways we can use a subset of those marbles, that's line 18. However, that count includes cases with fewer than l colors, and if we simply added those up for all the 5-element lists we'd overcount. We need to compensate for that, using the Inclusion-Exclusion Principle (hence `pie`). The amount...
[18:16:49] <int-e> ...of overcounting that happens for sublists of length l is accounted in ws !! l. If we wanted to count the possibilities with *exactly* k colors, then we'd simply have  ws !! l = (-1)^(k-l) * c (n - l) (k - l), where the (-1)^(k-l) comes straight from the inclusion-exclusion principle, and c (n-l) (k-l) is the number of ways to extend an l-element subset of {1..n} to a k-element subset of...
[18:16:55] <int-e> ...{1..n}. But we want to count the number of ways to get at most k (== 5) colors, so we sum those terms for k' = 0..k, which becomes l..k because the expression is zero for 0..l-1 (and the implementation of `c` doesn't actually cope with those cases). [This is actually how the code evolved, so it explains the shadowing of k: overloading on the spot is less error-prone than adjusting the formula....
[18:17:01] <int-e> ...I'd change the variable name if I ever cleaned up the code.]
[18:17:37] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 240 seconds)
[18:18:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[18:20:08] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:23:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[18:23:51] *** Joins: alx741 (~alx741@157.100.197.240)
[18:24:48] *** Quits: deadmarshal (~deadmarsh@95.38.116.229) (Ping timeout: 272 seconds)
[18:26:36] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:27:33] *** Joins: zebrag (~chris@user/zebrag)
[18:27:44] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[18:30:34] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be)
[18:31:08] *** Joins: neurocyte0917090 (~neurocyte@IP-213188112151.dynamic.medianet-world.de)
[18:31:09] *** Quits: neurocyte0917090 (~neurocyte@IP-213188112151.dynamic.medianet-world.de) (Changing host)
[18:31:09] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:31:15] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:2806:79fd:17ad:ce07)
[18:36:09] *** Joins: travisb (~travisb@172-13-49-137.lightspeed.milwwi.sbcglobal.net)
[18:39:01] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[18:42:58] *** Joins: alx741 (~alx741@181.199.42.143)
[18:46:00] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[18:47:50] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[18:48:32] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:49:20] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[18:52:12] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 240 seconds)
[18:54:17] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[18:55:00] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[18:57:57] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[18:58:45] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[18:59:23] *** Quits: deadmarshal (~deadmarsh@95.38.116.229) (Ping timeout: 256 seconds)
[18:59:36] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[19:02:12] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Ping timeout: 240 seconds)
[19:02:47] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 256 seconds)
[19:03:13] *** Joins: alx741 (~alx741@157.100.197.240)
[19:03:57] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::99e7)
[19:05:53] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:06:41] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[19:10:19] *** Joins: yrlnry (~mjd@pool-74-109-20-19.phlapa.fios.verizon.net)
[19:11:47] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[19:11:57] <yrlnry> Hi folks.  I want to learn to use setrvant (https://github.com/haskell-servant/) .  It has a tutorial, and the tutorial has three sets of installation instructions, one each for cabal, stack, and nix, but none of them worked for me. I wrote up the problems I encountered here: https://github.com/haskell-servant/servant/issues/1540 
[19:12:20] *** Joins: alp (~alp@user/alp)
[19:12:34] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:12:44] <yrlnry> The cabal installation complains about an unmet dependency.  The stack installation tries to use HTP to retrieve something that replies 404.  And nix seems to work but the instructions are extremely incomplete and it doesn't say what to actually do.
[19:13:16] <yrlnry> The instructions here are https://docs.servant.dev/en/stable/tutorial/install.html .  Does someone have time and interest to work through some of the problems with me?
[19:13:27] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[19:14:00] *** Joins: alp (~alp@user/alp)
[19:14:31] <geekosaur> you're having basically the same probloem with both cabal and stack: ubuntu ships ancient versions of everything
[19:14:39] <geekosaur> wrt cabal, your ghc is too old
[19:15:06] <geekosaur> wrt stack, it tries to download a newer one but ubuntu's stack is so old that the main repository has moved and it can't find anything
[19:15:08] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[19:15:23] <geekosaur> I suggest you remove the ubuntu packages and use ghcup to install newer versions
[19:15:57] <yrlnry> I manually installed cabal 3.4
[19:16:01] <geekosaur> https://www.haskell.org/ghcup/install/
[19:16:09] <yrlnry> I'll try that, thanks.
[19:16:11] <geekosaur> cabal isn't enough. you need a nbewer *ghc*
[19:16:19] <yrlnry> Roger that.  Thanks very much.
[19:16:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[19:16:49] <geekosaur> specifically, cabal is complaining that the version of base (which is tied to the version of ghc) is too old
[19:17:55] <yrlnry> That's useful, thanks.
[19:18:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:19:03] <geekosaur> you might be able to get the stack instructions to work if you first run stack upgrade, then hash -r
[19:19:22] <geekosaur> and make sure ~/.local/bin is first in your $PATH
[19:23:10] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d50:ed7b:88e6:c382)
[19:23:40] <geekosaur> but really, I'd just ditch the ancient ubuntu stuff and start over with ghcup which will get you a modern ghc, a modern cabal, and a modern stack
[19:23:42] *** Joins: alx741 (~alx741@157.100.197.240)
[19:24:10] <geekosaur> and haskell-language-server which enables editors to be haskell IDEs
[19:24:11] <yrlnry> That is what I did, so far it looks good.
[19:24:32] <yrlnry> Do you recommend proceeding with the stack or the cabal installation?
[19:24:49] <geekosaur> that's up to you. I personally prefer cabal
[19:26:18] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:27:02] <yrlnry> cabal seems to be working.
[19:27:58] <yrlnry> Oh, it's brandon allbery.  I think we've met before, probably on usenet.
[19:28:02] <yrlnry> Hello again.
[19:29:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:29:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:29:28] <geekosaur> yes, your nick seemed familiar. been a while
[19:30:06] *** Quits: SawyerBergeron[m (~sawyerber@2001:470:69fc:105::3036) (Quit: You have been kicked for being idle)
[19:31:00] *** Joins: Midjak (~Midjak@82.66.147.146)
[19:31:11] <ehammarstrom> Is it possible for me to pattern-match on the `z` here https://paste.tomsmeding.com/fKUJge3F ?
[19:31:19] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[19:31:48] <ehammarstrom> All my attempts throws me a `Parse error in ...`
[19:31:54] <yrlnry> Do you mean like with `z@(pattern)`?
[19:32:11] <yrlnry> If all else calse you can have the body of the function be `case z of PAT -> â€¦`
[19:32:16] <yrlnry> *fails
[19:32:24] <lyxia> there's no pattern to be had there because z's type is abstract
[19:33:14] <yrlnry> @geekosaur: installation seems to have completed successfully.  Thanks very much!
[19:33:14] <lambdabot> Unknown command, try @list
[19:33:28] <geekosaur> np
[19:34:47] *** Joins: notzmv (~zmv@user/notzmv)
[19:35:27] *** Joins: dvdrw (~dvdrw@87.116.177.189)
[19:40:36] *** Quits: fendor (~fendor@77.119.193.215.wireless.dyn.drei.com) (Remote host closed the connection)
[19:41:04] <yrlnry> In   type UserAPI = "users" :> QueryParam "sortby" SortBy :> Get '[JSON] [User]
[19:41:04] <yrlnry>     what kind of lexical token is the unclosed single quote?
[19:42:27] <pavonia> int-e: Thanks. I don't understand the details, but I get the idea
[19:42:49] *** Joins: alx741 (~alx741@157.100.197.240)
[19:43:46] *** Quits: mbuf (~Shakthi@223.178.126.157) (Quit: Leaving)
[19:45:17] <dvdrw> I've been playing with GHC 9.2's impredicative polymorphism, trying to get heterogeneous lists to typecheck. I've had limited success, though.
[19:46:05] <dvdrw> Given an f :: forall a. F a -> G a, and xs :: [forall a. F a]; how would I 'lift' map so as to work with a nested forall?
[19:46:48] <dvdrw> Just applying it like 'map f xs' infers (correctly) that F a ~ forall a. F a
[19:47:10] <dvdrw> Obviously, there'd be a few constraints thrown in there, too, but I don't think that changes things much.
[19:47:29] *** Joins: xkuru (~xkuru@user/xkuru)
[19:50:25] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:50:38] <dvdrw> In fact, I can't seem to write the type for any map-like function that would typecheck here. They all involve the `a` in  `[forall a. F a] -> [forall a. G a]` bridging the gap, which is definitionally impossible.
[19:50:40] <geekosaur> yrlnry, that's a lifted type
[19:51:33] <geekosaur> with the DataKinds extension enabled, a `data Foo = Bar | Baz` is not only a type with data constructors, but a lifted kind with type constructors (typically marked with that single quote)
[19:51:41] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:25f4:e878:3056:b5be)
[19:52:42] *** Joins: dextaa_ (~dextaa@user/dextaa)
[19:54:15] *** Joins: vysn (~vysn@user/vysn)
[19:59:10] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:02:51] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[20:04:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:04:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:04:26] *** Joins: wroathe (~wroathe@user/wroathe)
[20:04:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:06:56] *** Joins: alx741 (~alx741@157.100.197.240)
[20:08:40] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 272 seconds)
[20:08:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:08:58] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[20:10:05] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:16:50] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[20:17:59] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[20:18:38] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[20:18:55] *** Quits: arievw (~arievw@85.148.234.95) (Quit: Nettalk6 - www.ntalk.de)
[20:19:21] *** Joins: fresheyeball (~fresheyeb@c-76-25-93-164.hsd1.co.comcast.net)
[20:20:57] *** Joins: Sgeo (~Sgeo@user/sgeo)
[20:23:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[20:27:11] *** Joins: alx741 (~alx741@157.100.197.240)
[20:29:47] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[20:30:20] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:30:54] *** Joins: jakalx (~jakalx@base.jakalx.net)
[20:35:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[20:36:30] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[20:37:06] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[20:37:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[20:37:37] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[20:38:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[20:38:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 240 seconds)
[20:39:16] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 240 seconds)
[20:39:17] *** Quits: max22- (~maxime@2a01cb0883359800f08509aefb13de74.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[20:39:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[20:39:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:40:22] *** Joins: max22- (~maxime@2a01cb0883359800761b1c69d9198b7f.ipv6.abo.wanadoo.fr)
[20:44:58] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:46:18] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:47:06] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Remote host closed the connection)
[20:48:47] *** Joins: alx741 (~alx741@157.100.197.240)
[20:52:14] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:52:30] *** Quits: fresheyeball (~fresheyeb@c-76-25-93-164.hsd1.co.comcast.net) (Quit: WeeChat 3.3)
[20:52:46] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[20:52:50] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[20:53:09] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[20:53:53] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[20:54:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[20:54:15] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[20:54:24] *** Joins: hololeap (~hololeap@user/hololeap)
[20:54:28] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:55:58] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[20:56:16] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:56:17] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[20:56:20] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:57:07] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:57:19] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[20:58:08] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[20:58:58] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:00:11] *** Joins: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net)
[21:04:36] *** Quits: yauhsien_ (~yauhsien@61-231-37-106.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[21:09:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:10:25] *** Joins: alx741 (~alx741@157.100.197.240)
[21:25:20] *** Joins: Achylles (~Achylles_@2804:431:d724:7449:3b4d:585c:367b:f390)
[21:25:29] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[21:26:34] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:27:33] *** Joins: jgeerds (~jgeerds@55d4b9df.access.ecotel.net)
[21:28:59] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[21:30:07] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:32:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:33:33] *** Quits: dsrt^ (~dsrt@50.233.120.162) (Ping timeout: 272 seconds)
[21:35:19] *** Joins: econo (uid147250@user/econo)
[21:41:48] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 240 seconds)
[21:44:47] *** Joins: alx741 (~alx741@157.100.197.240)
[21:48:24] *** Joins: dsrt^ (~dsrt@50.233.120.162)
[21:51:04] *** Joins: poss (~fes@mobile-access-567357-189.dhcp.inet.fi)
[21:52:03] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:52:12] *** Quits: dsrt^ (~dsrt@50.233.120.162) (Remote host closed the connection)
[21:53:48] <joel135> do you use xmonad ?
[21:54:08] <joel135> i tried it right now, without any config
[21:54:22] <geekosaur> it's very stupid without a config
[21:54:34] <joel135> i bet :)
[21:54:50] <geekosaur> you might want to go through https://xmonad.org/TUTORIAL.html
[21:55:13] <geekosaur> without a config it does the absolute bare minimum it needs to
[21:55:24] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[21:57:38] <joel135> i just spent a few hours setting up arch linux in virtualbox so i could install xmonad. maybe i will go through the tutorial another weekend
[21:58:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[21:59:29] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Remote host closed the connection)
[22:00:09] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[22:00:45] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[22:01:40] <dvdrw> joel135: It might be a bit more to learn, but Nix (the package manager) and NixOS (the distro built around it) might be more elegant to configure in the long run
[22:01:52] <joel135> good point
[22:02:44] <joel135> i had forgot about nixos
[22:03:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[22:03:51] <geekosaur> that, and arch is not the best distro to play with haskell stuff unless you're starting from ghcup instead of distro packages
[22:04:14] <geekosaur> they do really *annoying* things with their haskell packages
[22:05:54] <dvdrw> I think any install ought to go through ghcup/stack, it's much easier than whatever 'native' package manager solution you have in place
[22:05:58] <yrlnry> ghci now says that the kind of Functor is (* -> *) -> Constraint.  I expected just * -> *.   Has it changed?  What's "constraint"?
[22:06:13] <dvdrw> just like pip with python/nvm with node
[22:07:19] <dvdrw> yrlnry: There's been a fair few kind system tweaks over the years, the chronology of which I'm not so sure about. But there's now two kinds, * (or Type as it's now called) and Constraint
[22:07:19] <monochrom> If F is an instance of Functor, then F's kind is * -> *.  That doesn't mean Functor's kind is * -> *.
[22:07:20] <geekosaur> Functor is a typeclass, not a type constructor
[22:07:28] <dvdrw> Constraint is the typeclass kind
[22:07:34] <geekosaur> Constraint is something that appears to the left of =>
[22:08:15] <monochrom> Instead, given that "Functor F" is a constraint, therefore, Functor maps *->* to constraint.
[22:08:51] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[22:09:14] <yrlnry> Oh, I see.  Thanks.
[22:10:16] *** Joins: alx741 (~alx741@157.100.197.240)
[22:10:35] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:13:18] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[22:14:59] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) ()
[22:15:13] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[22:15:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[22:18:00] *** Quits: Megant (megant@user/megant) (Ping timeout: 256 seconds)
[22:18:07] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[22:18:20] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[22:19:32] *** Joins: Megant (megant@user/megant)
[22:24:46] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Remote host closed the connection)
[22:25:28] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[22:26:55] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Remote host closed the connection)
[22:28:12] *** Quits: deadmarshal (~deadmarsh@95.38.116.229) (Ping timeout: 240 seconds)
[22:29:44] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[22:31:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:32:09] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[22:32:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:32:15] *** Joins: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729)
[22:32:42] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:33:24] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[22:36:31] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[22:37:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:44bc:7304:7645:6729) (Ping timeout: 240 seconds)
[22:45:15] *** Quits: jgeerds (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 256 seconds)
[22:50:10] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[22:54:24] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[22:58:53] *** Joins: neurocyte0917090 (~neurocyte@IP-213188112151.dynamic.medianet-world.de)
[22:58:53] *** Quits: neurocyte0917090 (~neurocyte@IP-213188112151.dynamic.medianet-world.de) (Changing host)
[22:58:53] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[22:59:54] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799)
[23:01:19] *** Quits: Achylles (~Achylles_@2804:431:d724:7449:3b4d:585c:367b:f390) (Remote host closed the connection)
[23:03:53] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[23:03:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5928:8400:a51e:7799) (Ping timeout: 240 seconds)
[23:04:40] *** Joins: mcglk (~mcglk@131.191.49.120)
[23:04:58] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Remote host closed the connection)
[23:07:12] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[23:10:12] *** Joins: jao (~jao@static-68-235-44-22.cust.tzulo.com)
[23:13:30] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[23:14:00] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:14:17] *** Joins: alp (~alp@user/alp)
[23:14:36] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[23:14:57] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[23:15:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:16:44] *** Lord_of_Life_ is now known as Lord_of_Life
[23:17:42] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:20:37] *** Quits: jao (~jao@static-68-235-44-22.cust.tzulo.com) (Ping timeout: 256 seconds)
[23:20:52] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:22:22] *** Joins: jao (~jao@static-68-235-44-61.cust.tzulo.com)
[23:25:41] <joel135> hmm... what do you think about installing `stack` using pacman in arch linux?
[23:25:42] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[23:26:10] <Rembane> joel135: It will give you infinite amounts of pain, so only do that if you want to fight everything all the time to get something to work.
[23:26:23] <joel135> ok then i will install stack without pacman
[23:26:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:26:57] <joel135> weird that the command for installing stack using pacman is listed here https://xmonad.org/INSTALL.html
[23:27:54] <Rembane> Maybe that part of the docs are so old that it was a good experience using Haskell on Arch?
[23:28:57] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[23:29:56] <geekosaur> we reworked the docs. I believe the intent for Arch is you install *only* stack via pacman and let stack install everything else
[23:30:33] <Rembane> That seems like a reasonable solution.
[23:31:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[23:31:37] *** Quits: Midjak (~Midjak@82.66.147.146) (Read error: Connection reset by peer)
[23:31:41] *** Joins: random (~random@46.254.129.49)
[23:32:14] *** Joins: Midjak (~Midjak@82.66.147.146)
[23:32:48] <random> hey guys, got what's probably a dumb question
[23:32:58] <Hecate> damn
[23:33:03] <random> I'm used to deriving json instances with TH via `$(deriveJSON defaultOptions 'MyType)`
[23:33:03] <Hecate> hope you ask it then :)
[23:33:03] <joel135> geekosaur: but arch wants to install lots of haskell-* packages when i install stack
[23:33:27] <random> now I've got a type that has a parameter `newtype SomeType a = ..`
[23:33:31] <geekosaur> itwillinstall a bunch of shared objects, yes. you can ignore those; stack installs its own copies of everything including the compiler
[23:33:36] *** Quits: echoreply (~echoreply@45.32.163.16) (Quit: WeeChat 2.8)
[23:33:43] <random> and when I try to do `$(deriveJSON defaultOptions '(SomeType Something))`
[23:33:45] <joel135> ok then i will use pacman
[23:33:52] <geekosaur> so nothing else will use the stuff pacman installs
[23:33:53] <random> it fails with a parse error at the opening parentheses
[23:34:05] *** Joins: echoreply (~echoreply@45.32.163.16)
[23:34:20] <random> so it seems you can't do ''(SomeType) which is weird
[23:34:26] <geekosaur> if this annoysa you then use ghcup to install ghc and stack
[23:34:54] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:2806:79fd:17ad:ce07) (Remote host closed the connection)
[23:35:08] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 272 seconds)
[23:35:30] *** Joins: wavemode (~wavemode@2601:241:0:fc90:79a9:b149:73a6:32c7)
[23:36:29] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[23:36:45] *** Joins: juhp (~juhp@128.106.188.82)
[23:37:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:38:56] *** Quits: jao (~jao@static-68-235-44-61.cust.tzulo.com) (Ping timeout: 272 seconds)
[23:39:12] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:39:59] <random> so it seems like I'm looking for a way to construct a https://hackage.haskell.org/package/template-haskell-2.16.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name via the '' syntax
[23:40:04] *** Quits: raghavgururajan (ea769b8000@user/raghavgururajan) (Ping timeout: 250 seconds)
[23:40:05] <random> for a type that has a parameter
[23:40:42] <random> in an expression like $(deriveJSON defaultOptions ''(MyTypeWithParameter Int))
[23:41:16] *** Joins: raghavgururajan (ea769b8000@user/raghavgururajan)
[23:42:10] *** Quits: Me-me (~me-me@user/me-me) (Read error: Connection reset by peer)
[23:42:42] *** Joins: Me-me (~me-me@v.working.name)
[23:44:13] <geekosaur> you just derive it without the parameter, it looks like
[23:44:36] <geekosaur> example: https://github.com/lachenmayer/arrowsmith/blob/34b6bdeddddb2d8b9c6f41002e87ec65ce8a701a/backend/Arrowsmith/Types.hs#L44
[23:44:45] <geekosaur> (yay github search)
[23:49:11] <random> hahhaa my god this actually compiled
[23:50:02] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: tdmm (1c9b9145fc@2604:bf00:561:2000::1c8) (Ping timeout: 250 seconds)
[23:50:31] *** Joins: cjb (~cjb@user/cjb)
[23:51:20] *** Quits: lukec (9dfd4d094e@2604:bf00:561:2000::10e) (Ping timeout: 250 seconds)
[23:51:20] *** Quits: filwisher (2e6936c793@2604:bf00:561:2000::170) (Ping timeout: 250 seconds)
[23:51:46] *** Quits: sm2n (ae95cb1267@user/sm2n) (Ping timeout: 250 seconds)
[23:51:46] *** Quits: bsima1 (9d7e39c8ad@2604:bf00:561:2000::dd) (Ping timeout: 250 seconds)
[23:51:50] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[23:51:50] *** Joins: lukec (9dfd4d094e@2604:bf00:561:2000::10e)
[23:51:53] *** Joins: tdmm (1c9b9145fc@2604:bf00:561:2000::1c8)
[23:51:53] *** Joins: filwisher (2e6936c793@2604:bf00:561:2000::170)
[23:52:05] *** Joins: bsima1 (9d7e39c8ad@2604:bf00:561:2000::dd)
[23:52:18] *** Joins: sm2n (ae95cb1267@user/sm2n)
[23:55:25] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[23:56:45] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[23:59:01] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[23:59:55] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Ping timeout: 240 seconds)
