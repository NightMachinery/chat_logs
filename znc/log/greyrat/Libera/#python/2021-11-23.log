[00:01:02] *** Joins: TJ- (~root@about/linux/staff/tj-)
[00:02:26] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[00:03:23] *** Quits: gyrow (~gyrow@d54C03E98.access.telenet.be) (Ping timeout: 264 seconds)
[00:03:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[00:04:14] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:05:00] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:05:04] *** Joins: sgn_ (~sgn@user/sgn)
[00:05:19] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[00:05:24] *** Joins: gyrow (~gyrow@d54C03E98.access.telenet.be)
[00:06:26] *** Quits: m0nk3yc0wb0y (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Quit: WeeChat 3.3)
[00:06:26] *** Quits: steam (~steam@user/steam) (Read error: Connection reset by peer)
[00:06:58] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[00:07:09] *** Joins: steam (~steam@user/steam)
[00:07:12] *** Quits: faLUKE (~paolo@host-80-117-216-225.retail.telecomitalia.it) (Quit: Konversation terminated!)
[00:07:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Ping timeout: 256 seconds)
[00:08:07] *** Quits: phao (~phao@2804:d45:8e7a:de00:c065:3c08:f729:a40c) (Quit: Leaving)
[00:08:37] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[00:08:41] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[00:08:42] <SpeakerToMeat> Hello all
[00:09:20] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:09:27] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[00:11:30] *** Joins: nomic (~nomic@185.217.117.248)
[00:12:01] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[00:13:56] *** Joins: metaace_ (~metaace@user/metaace)
[00:14:13] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[00:15:00] *** Quits: metaace (~metaace@user/metaace) (Ping timeout: 276 seconds)
[00:16:55] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-ccc0-3dfe-67fb-01e8.res6.spectrum.com) (Read error: Connection reset by peer)
[00:17:14] *** Joins: vicfred (~vicfred@user/vicfred)
[00:18:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:19:58] *** Quits: raxor2k (~raxor2k@78.158.245.248) (Remote host closed the connection)
[00:20:04] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[00:20:52] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Quit: leaving)
[00:21:01] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[00:21:07] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[00:22:26] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[00:23:01] *** Joins: Auron (~Auron956@user/auron)
[00:23:26] <SpeakerToMeat> nah i reached a conclusion... probably wrong since I'm insane
[00:23:28] <SpeakerToMeat> thanks
[00:23:43] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[00:24:31] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[00:24:42] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[00:25:46] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 245 seconds)
[00:26:55] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[00:27:41] *** Quits: grimvar (~grimvar@i5C75F72B.versanet.de) (Ping timeout: 250 seconds)
[00:28:14] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[00:29:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[00:29:25] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:29:26] *** Joins: grimvar (~grimvar@i5C75F72B.versanet.de)
[00:29:34] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1d47:7f49:468:ba96) (Quit: Leaving)
[00:30:36] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[00:32:08] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[00:32:47] *** Joins: vd18 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:34:03] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[00:35:18] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[00:35:37] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:36:28] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[00:36:30] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:37:52] *** Joins: luigibu (~luigibu@80.30.201.209)
[00:38:03] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[00:38:18] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[00:39:08] *** Quits: kushal (~hopless@dgplug/kushal) (Remote host closed the connection)
[00:39:21] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[00:40:00] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Quit: WeeChat 3.3)
[00:40:18] *** Quits: greedom (~greedom@dynamic-046-114-002-077.46.114.pool.telefonica.de) (Remote host closed the connection)
[00:40:23] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[00:40:32] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[00:40:46] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 245 seconds)
[00:41:13] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Quit: leaving)
[00:41:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:d3da:57e0:913c:b7aa)
[00:41:31] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[00:41:51] *** Joins: caru (~karu@user/caru)
[00:41:58] *** Joins: fofoni (~fofoni@user/fofoni)
[00:42:02] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[00:42:38] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[00:42:51] *** Joins: kushal (~hopless@dgplug/kushal)
[00:43:43] *** Joins: legola (~legola@46.235.101.181)
[00:43:49] <caru> Hello, what is the efficient way to run a python script constantly and save its output to any database other than running a cronjob all the time
[00:43:56] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Quit: Client closed)
[00:44:15] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[00:44:26] *** Quits: legola (~legola@46.235.101.181) (Read error: Connection reset by peer)
[00:44:30] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:44:31] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Ping timeout: 245 seconds)
[00:45:13] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[00:45:28] *** Parts: sstory (~sstory@075-130-120-018.biz.spectrum.com) ()
[00:45:54] <FunkyBob> caru: why not cron?  (it will inform our recommendations)
[00:46:04] <FunkyBob> caru: _any_ database?  so timestamped files are ok?
[00:46:26] <SnoopJ> caru, you could loop in the process itself if you wanted, but yea, tell us more about what your constraints are here
[00:46:43] <SpeakerToMeat> Ok, it's not entirely python, but here's the gist. I'm working an app with a csv data source. I want it to be quick and easy to edit, so I wouldn't necessarily want to change the data format. right now it's generated via piping of shell scripts. This data file originally had 2 columns, and these are required always, and for that reason and since I don't want to missremember headers, it doesn't have
[00:46:44] <SpeakerToMeat> one. The problem is, now I'd like to add more "fields" to this data, but these are optional. My problems are, first, it will make generating the csv harder, but I will add a command to my app to generate (and modify) these files... the second problem is not all rows will have the same options defined, so 1) There will be rows with a lot of empty fields, which I will have to handle, which is a
[00:46:46] <SpeakerToMeat> bummer... and worse 2) since I can add a row that requires another parameter, I will have to load the whole csv into memory, and write a new file with new headers each time I add a row with a new parameter... I was thinking about the idiocy of using a csv whose first two fields are the required basic, and the third field contains a string with json serialized options.... is there a less insane
[00:46:48] <SpeakerToMeat> option to this?
[00:47:13] <SpeakerToMeat> Sorry I had it all almost typed when caru asked his question
[00:47:47] <grym> SpeakerToMeat: you've just described a sqlite database that has a csv frontend and automatic upserts, unless i'm very much mistaken.  have you looked at simonw's stuff? sqlite-utils and datasette in particular
[00:48:16] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 245 seconds)
[00:48:23] <SpeakerToMeat> grym, sqlite doesn't make a horrible ammount of sense here, these are one (or two at most) use files. created, used and discarded...
[00:48:39] <SpeakerToMeat> And something I'd like to be able to tweak once or twice with a text editor, not having to deal with sql for it
[00:49:46] <SpeakerToMeat> if I have a command to gen/edit the file, I could just give up, and use a json format.
[00:49:52] <grym> SpeakerToMeat: ok.  well, csv.writer will write you empty rows, and reader.DictReader can consume ragged CSV just fine
[00:49:55] <dav1d> A lot more verbose, jsonlines?
[00:50:07] <caru> FunkyBobÂ  SnoopJ I want to know if there are alternate ways than cron
[00:50:16] <dav1d> ah, right you dont wanna switch data format
[00:50:28] <caru> FunkyBob timestamped files are also ok
[00:51:29] <SpeakerToMeat> grym, yeah. I could just recreate all the file when the header changes... I think I could convert my initial two field csv to a shell script calling the create/append command. And just work with a .json file
[00:51:37] <SnoopJ> caru, of course
[00:51:48] <FunkyBob> I find some people have very limited odeas of what counts as a 'database'
[00:51:53] <grym> SpeakerToMeat: err, or just the header line
[00:52:02] <SpeakerToMeat> dav1d, if I change to a json file, it could work
[00:52:27] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 265 seconds)
[00:52:45] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[00:52:50] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[00:52:52] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[00:52:56] *** Quits: teut (~teut@122.181.77.157) (Quit: Client closed)
[00:53:06] <dav1d> SpeakerToMeat, you basically dont want to use one json file, you want to have one json object per row, separated by a newline (usually called jsonlines), so you can keep adding lines easily
[00:53:13] <SpeakerToMeat> FunkyBob, this is a database, but it's ephemeral and SQL or a full document based db layer will add complexity that will benefit me none, and create extra work.
[00:53:47] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:53:56] <SpeakerToMeat> dav1d, ok, so this is just json with one line per entry, and without a [ ] wrapper :D, it looks good I might migrate to this
[00:54:06] <dav1d> SpeakerToMeat, yeah exactly
[00:54:23] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 265 seconds)
[00:54:31] <grym> SpeakerToMeat: https://bpa.st/HTTA
[00:54:39] <dav1d> SpeakerToMeat, means you dont have to parse/load the whole thing into memory, can easily stream over it and very easily add new data just at the end
[00:54:41] <SpeakerToMeat> Then again to be useful, I need to finish migrating my code to something that makes a package with a script... typer has me amost convinced Poetry is my quickest route. :)
[00:54:46] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) ()
[00:55:11] <grym> writing out the same keys for line after line of jsonlines seems horrible unless you compress it after
[00:55:39] <dav1d> that is a lot worse for storage, but a lot easier if the keys change often
[00:55:45] <SnoopJ> FunkyBob, https://twitter.com/hillelogram/status/1459372958808522756
[00:55:56] *** Joins: khile (cacambo@triton.blinkenshell.org)
[00:56:09] <SpeakerToMeat> grym, again, this is ephemeral, and worst case scenario we're talking 65 rows, that will be worked on for 4 days or so, tops
[00:56:26] <grym> SpeakerToMeat: right, so, adding rows or changing the header is trivial then
[00:56:28] <grym> like you said it wasn't
[00:56:49] <SpeakerToMeat> grym, why am I better off using csv for this?
[00:56:54] <grym> SpeakerToMeat: you said you were
[00:57:21] <grym> so you tell me :)
[00:57:27] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[00:57:29] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:57:37] <SpeakerToMeat> If I add a command to my app, and a script for it, I could do without the csv.
[00:57:47] <dav1d> 65 rows is in the area of "basically everything works"
[00:58:24] <SpeakerToMeat> it feels cleaner/safer to have the keys only for the values the row uses (point for json), but csv is slightly easier to edit on a text editor via ssh (point for csv)
[00:59:08] *** Joins: jay-m126 (~jay-m@129.0.76.223)
[00:59:13] <SpeakerToMeat> But if I add the subcommand to generate my json, adding a command for changing key values for a single row would take me couple hours work at best, so json and csv become equal there....
[00:59:23] <dav1d> I would go with jsonlines, pretty simple and `jq` works with it
[00:59:49] <grym> dav1d: oh, TIL
[00:59:50] *** sebmont is now known as saltysoul
[00:59:50] <SpeakerToMeat> json is more verbose, for my use case size is not a real downside, the problem is it's more work to edit by hand...
[00:59:52] *** Joins: jay-m126_ (~jay-m@129.0.76.223)
[01:00:08] <SpeakerToMeat> dav1d, jq will deal with json lines without a [] (or {}) grouper?
[01:00:15] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[01:00:21] <dav1d> SpeakerToMeat, pretty sure it's -s for json lines, lemmy double check
[01:00:54] *** Quits: grooverman (~grooverma@177.95.12.14) (Remote host closed the connection)
[01:01:11] *** Joins: orbatos__ (~orbatos@user/orbatos)
[01:01:18] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 260 seconds)
[01:02:59] <dav1d> ah nvm, yeah just works without, -s was to conert it to a normal json
[01:03:12] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[01:03:18] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[01:03:59] *** Quits: orbatos_ (~orbatos@user/orbatos) (Ping timeout: 264 seconds)
[01:05:47] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:05:56] *** Joins: grooverman (~grooverma@177.95.12.14)
[01:06:17] <SpeakerToMeat> I think I'll use jsonl
[01:06:20] <SpeakerToMeat> thanks
[01:06:28] *** Quits: delvian (~delvian@41.13.204.1) (Quit: Leaving)
[01:07:39] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[01:07:39] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:08:32] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:09:10] *** Joins: grys_ (~quassel@botters/gry)
[01:09:33] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:10:23] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[01:10:46] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:11:11] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 264 seconds)
[01:11:11] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[01:12:25] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:13:08] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[01:13:30] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[01:13:39] *** Quits: grys_ (~quassel@botters/gry) (Client Quit)
[01:15:11] *** Quits: saltysoul (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Quit: leaving)
[01:15:27] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[01:16:44] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Client Quit)
[01:16:47] <glik22> is there a way to have optional arguments with argparse but without prefix_chars?
[01:16:59] *** Joins: saltysoul (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[01:17:42] *** Parts: caru (~karu@user/caru) ()
[01:18:59] <meejah> do you need to use argparese, or writing new code?
[01:19:01] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[01:20:01] *** Quits: masticass (~gzc@host-85-201-222-202.dynamic.voo.be) (Quit: WeeChat 3.3)
[01:20:44] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[01:22:25] <glik22> meejah: i'm writing new code. i'm using argparse but can change it.
[01:22:51] *** Quits: jay-m126 (~jay-m@129.0.76.223) (Ping timeout: 245 seconds)
[01:23:16] *** Quits: jay-m126_ (~jay-m@129.0.76.223) (Ping timeout: 245 seconds)
[01:23:51] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[01:24:31] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[01:24:57] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:25:27] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[01:26:38] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybob)
[01:26:42] *** Parts: kaste (~kaste@user/kaste) (WeeChat 3.2)
[01:27:53] <meejah> glik22: i greatly prefer "Click"
[01:28:53] *** Joins: luigibu (~luigibu@80.30.201.209)
[01:30:21] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (Read error: Connection reset by peer)
[01:30:39] <shodan45> is there a way to "f-string-ify" a normal string?
[01:31:24] <shodan45> like s = 'hello {name}'; s = s.fstringify()
[01:31:33] <SnoopJ> shodan45, f-strings are syntax, the objects they produce are "just" strings
[01:31:39] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 264 seconds)
[01:31:55] <SpeakerToMeat> meejah, And I've become a big fan of Typer
[01:32:27] <SnoopJ> shodan45, but maybe you want to do: `s.format(**locals())`
[01:32:29] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[01:32:40] <shodan45> SnoopJ: hmm maybe
[01:33:08] <tdsmith> there's always eval("f" + repr(s))
[01:33:32] <tdsmith> obviously never do this if s is user-supplied
[01:33:46] <shodan45> I just want to process a string as if it's an f-string using a function
[01:33:58] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[01:34:13] <SnoopJ> the mini-language is the same as what str.format() uses, and **locals() unpacks whatever's in the local namespace into the call.
[01:34:31] <shodan45> ahhh ok
[01:34:39] <shodan45> that's what I want then
[01:34:54] <tdsmith> i think f-strings let you evaluate arbitrary code in ways that str.format() doesn't, for better/worse
[01:35:11] <SnoopJ> tdsmith, in the same sense that writing source code does, yes
[01:35:12] <tdsmith> but that's probably why you can't replicate the f string experience exactly with str.format
[01:35:17] <SnoopJ> (they're literals)
[01:35:50] <SnoopJ> shodan45, just be aware if the string is in an at-all sensitive context, the potential information being risked by the **locals() approach is "everything in the local namespace
[01:35:57] *** Quits: Strom (strom@fedora/strom) ()
[01:36:03] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[01:36:38] <SpeakerToMeat> YAY!!! I finally found something to put on my __init__ !!! enums!
[01:36:38] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:36:48] <shodan45> SnoopJ: noted. In my case it's fine.
[01:36:52] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:37:03] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[01:38:01] *** Joins: Strom (strom@fedora/strom)
[01:38:06] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:38:57] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[01:39:26] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[01:41:36] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[01:42:26] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 245 seconds)
[01:42:28] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:43:57] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 256 seconds)
[01:44:11] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:44:31] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 245 seconds)
[01:45:36] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[01:45:51] <nedbat> shodan45: if you don't mind me asking, where did the string come from? I'm always interested to hear unusual situations
[01:45:56] *** Joins: anddam (~anddam@user/anddam)
[01:46:14] <shodan45> nedbat: I just decided against what I was trying to do :)
[01:46:19] <SnoopJ> hooray
[01:46:47] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 256 seconds)
[01:46:54] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[01:46:58] <shodan45> nedbat: I was separating out site-dependent settings from other settings in a django settings.py file
[01:48:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[01:49:54] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (Read error: Connection reset by peer)
[01:50:30] <aphysically> who elects the rust steering council?
[01:50:31] <aphysically> err, python
[01:50:35] <aphysically> freudian slip :D
[01:52:26] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:961d:84b8:3581:ae4a) (Ping timeout: 245 seconds)
[01:53:00] <mefistofeles> hah
[01:53:33] <nedbat> aphysically: the core devs elect the steering council
[01:53:38] <mefistofeles> aphysically: https://www.python.org/dev/peps/pep-8016/#electing-the-council
[01:53:43] <aphysically> thanks
[01:53:51] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[01:54:15] <nedbat> personally, i think it would be better to have a broader election
[01:54:43] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:54:49] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[01:55:20] <nedbat> (not that I think any of the SC elections have produced a bad result)
[01:55:26] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[01:56:22] *** Quits: Alleria (~textual@user/alleria) (Ping timeout: 268 seconds)
[01:57:01] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:57:18] <aphysically> I was just curious about it because rust is having a governance crisis with their equivalent of the steering committee so it made me wonder more specifics about python's handling
[01:58:36] <grym> "hopefully stabler"
[01:58:50] <alphasierra> was just reading about the rust moderation team risegning
[01:58:53] <alphasierra> resigning*
[01:59:13] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[01:59:15] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[02:00:16] *** Quits: magla (~gelignite@55d4a3e3.access.ecotel.net) (Quit: Stay safe!)
[02:00:27] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[02:00:33] <xheimlich> I have a long string. I'd like to find substrings of the form "[text](link)" and change them to "=> link text". I know how to find and replace with regular expressions, but not to do this kind of operation.
[02:00:37] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[02:00:37] <meejah> alphasierra: probably for #python-offtopic
[02:00:57] <alphasierra> yeah. sorry
[02:00:58] *** Quits: menace (~someone@user/menace) (Quit: menace)
[02:01:37] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:01:45] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[02:01:54] <grym> xheimlich: i think you can do that with named capture groups
[02:02:00] <grym> but i'm kind of whiffy on how
[02:02:12] <SnoopJ> you don't really have to name them but it could be handy to do so
[02:03:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:03:33] <grym> ah yeah re.sub docs say something about backreferences that seems germane
[02:04:07] <Repiphany> re.sub(r'\[(.+?)\]\((.+?)\)', r'=> \1 \2', '[text](link)')
[02:04:40] <grym> Repiphany: what's the => do?
[02:05:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:05:36] <grym> oh durr it's just the literal.
[02:05:36] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[02:05:49] <grym> but i think you wanted r'=> \2 \1'
[02:05:50] *** Joins: portalrat (~portalrat@user/portalrat)
[02:06:04] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[02:06:15] *** Joins: zebrag (~chris@user/zebrag)
[02:06:22] <Repiphany> Yes
[02:06:27] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[02:06:33] <grym> someone's undoing some markdown :)
[02:07:17] *** Joins: fikran (~fikran@user/fikran)
[02:07:26] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[02:08:08] <xheimlich> I'm moving my wordpress blog to gemini.
[02:09:14] *** Quits: Narrat (~omnius@p200300df5f0df13d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:09:27] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 256 seconds)
[02:09:39] <aphysically> what does it mean to be a python core dev? if you are inactive for a while do you fall out?
[02:10:46] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 245 seconds)
[02:10:51] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:11:01] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 250 seconds)
[02:11:14] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[02:11:43] <bjs> aphysically: core devs are those that can commit and push to the github repo.  They get voted in by other core devs
[02:12:04] <SnoopJ> aphysically, some info in the dev guide: https://devguide.python.org/coredev/#what-it-means
[02:12:06] <mefistofeles> it's a boys club
[02:12:08] <mefistofeles> :P
[02:12:26] <aphysically> thanks
[02:12:27] *** Joins: Viewday11 (~Viewday@user/viewday)
[02:12:28] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[02:12:57] <grym> "has +w" is a pretty practical definition
[02:13:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[02:13:39] *** Quits: lbracher (~lucas@77.109.116.248) (Ping timeout: 264 seconds)
[02:14:21] *** Quits: demirok (~bell@user/demirok) (Quit: Leaving.)
[02:14:44] *** Joins: demirok (~bell@user/demirok)
[02:14:49] *** Quits: demirok (~bell@user/demirok) (Client Quit)
[02:15:27] *** Joins: thiras (~thiras@user/thiras)
[02:15:45] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[02:17:01] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 245 seconds)
[02:18:41] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[02:19:12] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[02:20:33] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[02:20:46] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[02:21:46] *** Joins: adeliktas (~adeliktas@2001:16b8:22e5:f300:6070:1d72:baa1:a7ff)
[02:21:59] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[02:22:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:22:16] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[02:22:49] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:23:05] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[02:23:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:24:28] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[02:24:45] <SnoopJ> aphysically, I don't think "core dev" status is particularly expirable. The Steering Council and other roles (like release managers) have explicit terms associated with them
[02:24:46] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[02:25:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:26:05] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:26:34] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7) (Quit: smeeagle)
[02:27:10] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[02:27:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ¦)
[02:27:39] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[02:29:10] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[02:30:21] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[02:30:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:56] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[02:31:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[02:31:41] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[02:32:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[02:32:32] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[02:33:05] *** Joins: luigibu (~luigibu@80.30.201.209)
[02:33:47] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 265 seconds)
[02:34:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:34:03] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[02:34:03] *** Joins: arinov (~arinov@213.194.126.155)
[02:34:06] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[02:34:47] *** Joins: tempate (~alpha@user/tempate)
[02:35:05] <tempate> Is there a more straight forward way of doing this? https://github.com/Tempate/Prophet/blob/main/main.py#L50-L66
[02:35:14] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:36:02] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:36:24] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[02:36:28] *** Joins: sgn (~sgn@user/sgn)
[02:38:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[02:38:32] *** Parts: adeliktas (~adeliktas@2001:16b8:22e5:f300:6070:1d72:baa1:a7ff) ()
[02:39:00] <xheimlich> SnoopJ: I'll bite. Who has the authority to revoke access / de-core a dev that's gone rogue?
[02:39:25] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:39:41] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:39:41] *** vinleod is now known as vdamewood
[02:40:14] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 260 seconds)
[02:40:16] <khile> tempate: using the csv module from the stdlib https://docs.python.org/3/library/csv.html would simplify it a bit
[02:40:39] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 264 seconds)
[02:40:39] *** ayusta is now known as ayustae
[02:40:59] <tempate> khile: sweet, thanks
[02:40:59] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[02:41:40] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[02:42:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:42:49] *** Joins: luigibu (~luigibu@80.30.201.209)
[02:42:59] *** Joins: ericlee (~ericlee@2601:647:4681:3420::3)
[02:43:06] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:43:24] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[02:43:44] <ericlee> Hi, can python built-in module csv process csv data chunk? I read the doc and seems it does not support to process data chunk, it must be passed w/ file stream
[02:44:14] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[02:45:06] <grym> ericlee: if you use io.StringIO , csv.reader will consume that
[02:45:20] <tdsmith> ericlee: you have a little more flexibility than that, see https://docs.python.org/3/library/csv.html#csv.reader
[02:45:21] *** Quits: saltysoul (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[02:45:26] <grym> if you data=
[02:45:36] <grym> if you data="""foo,bar\nbaz,quux
[02:45:38] <grym> dangit
[02:45:41] <tdsmith> so """a,big,block\nof,csv,data""".split("\n") is a valid input
[02:46:06] <grym> if you data="""foo,bar\nbaz,quux""" with io.StringIO(data) as f: reader = csv.reader(f)
[02:46:39] <ericlee> I see. thanks I will give a try.
[02:47:03] <Yhg1s> You don't need an io.StringIO, just a list will do.
[02:47:05] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:47:16] <Yhg1s> (or any iterable of lines)
[02:47:24] <grym> so it would seem
[02:47:25] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[02:47:28] *** Quits: ubert (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:47:44] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[02:47:58] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:48:10] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2d77c1bfff2a135bb9e.dip0.t-ipconnect.de)
[02:48:16] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2d77c1bfff2a135bb9e.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:48:36] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[02:48:41] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[02:50:36] <ericlee> Yhg1s, sorry, what do you mean by " just a list will do." ?
[02:50:47] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[02:51:41] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:52:04] *** Quits: cul8r (~cul8r@76.113.95.199) (Remote host closed the connection)
[02:52:51] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[02:53:54] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:53:55] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:cc75:c706:8054:982d)
[02:54:21] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:55:17] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[02:55:34] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[02:56:00] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[02:56:49] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 268 seconds)
[02:57:30] *** Joins: gr1m (~gr1m@45.83.220.219)
[02:58:35] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 246 seconds)
[02:58:56] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:58:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:59:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[02:59:22] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:00:46] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[03:02:21] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:02:22] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[03:02:27] *** Joins: jinsun__ (~quassel@user/jinsun)
[03:04:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 245 seconds)
[03:04:12] *** Quits: pwug (~pwug@user/pwug) (Ping timeout: 268 seconds)
[03:04:30] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[03:06:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ¦)
[03:06:45] *** Joins: Fiji- (~Fiji@user/fiji)
[03:07:35] *** Joins: velix (~velix@user/velix)
[03:07:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:07:52] <velix> Is there a nice way to lookup ranges like in this example? https://bpa.st/QX5Q
[03:09:19] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 250 seconds)
[03:10:12] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:10:13] *** Joins: Throgkt (~Throgkt@user/throgkt)
[03:10:21] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 245 seconds)
[03:11:37] <velix> Ah, maybe xrange?
[03:11:47] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[03:12:28] <KirkMcDonald> xrange is Python 2.
[03:12:31] <tdsmith> wonder if https://github.com/WKPlus/rangedict still works
[03:13:21] <KirkMcDonald> And range won't really help.
[03:13:42] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:13:49] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[03:13:49] <KirkMcDonald> Something like that rangedict would do a thing, sure. (Looks like it's a red-black tree.)
[03:13:50] <velix> KirkMcDonald: sure, I just could scroll through all the ranges.
[03:14:06] <KirkMcDonald> velix: Yes. range() would let you do that.
[03:14:59] *** Quits: bxsx (~x@7.red-79-157-215.dynamicip.rima-tde.net) (Quit: leaving)
[03:15:59] <velix> I'll play with both. Thanks a lot.
[03:17:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[03:17:16] *** Joins: jab416171 (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net)
[03:17:50] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[03:18:34] *** Quits: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Client Quit)
[03:19:10] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:19:26] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[03:19:39] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[03:19:39] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:20:10] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[03:20:58] <SnoopJ> xheimlich, I had no idea, but PEP 13 lays out a mechanism for the steering council to do this by 2/3 majority vote. https://www.python.org/dev/peps/pep-0013/#ejecting-core-team-members (cc aphysically, this document also does describe inactivity a little more formally, might be the info you wanted)
[03:21:37] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[03:23:51] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[03:24:42] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[03:25:03] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[03:26:09] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[03:26:23] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:29:15] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[03:29:16] *** Joins: teddy_k (~theo@2600:1700:7c30:32b0::14)
[03:29:35] *** Parts: teddy_k (~theo@2600:1700:7c30:32b0::14) ()
[03:29:45] *** Joins: saltysoul (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[03:29:54] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[03:30:56] *** Joins: onichomp (~onichomp@2806:264:4404:8138:a118:6083:7c5e:9bd)
[03:31:03] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[03:32:11] *** Quits: Jefren1 (~Jefren@70.35.66.44) (Ping timeout: 256 seconds)
[03:32:51] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 245 seconds)
[03:34:19] *** Joins: Jefren1 (~Jefren@70.35.67.22)
[03:38:20] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[03:38:21] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:38:56] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[03:40:07] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7)
[03:40:33] *** Quits: foxbox (~cammy@user/cammy) (Quit: I'll see you in the future.)
[03:41:02] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[03:41:03] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:41:36] <Yhg1s> Yes, it's the SC.
[03:41:45] <Yhg1s> (we've used it a couple of times already.
[03:42:09] *** Quits: thnee (~thnee@h-85-24-144-199.A328.priv.bahnhof.se) (Quit: WeeChat 3.2)
[03:42:14] <SnoopJ> I am apparently very ill-informed, I had no idea of that either, nor that there was a countering mechanism for the core team to oversee the SC
[03:42:27] *** Joins: ano (~ano@user/ano)
[03:43:28] *** Joins: foxbox (~cammy@user/cammy)
[03:43:42] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[03:43:47] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:44:30] <Yhg1s> Accountability matters.
[03:44:31] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[03:44:52] <SnoopJ> My confidence in the governance model grows!
[03:46:29] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[03:46:51] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Quit: Leaving)
[03:47:44] *** Joins: JamGobbar (~elophant@173.82.112.112)
[03:48:03] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 256 seconds)
[03:48:21] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[03:48:30] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:48:56] <JamGobbar> which of the multi-platform gui frameworks is good for basic elements: scrolling lists, forms, popups, small diaogs, tables, ect.
[03:49:28] <BtbN> Probably all of them?
[03:49:52] <nedbat> JamGobbar: that sounds like a question on a quiz
[03:50:13] <JamGobbar> well ok, any reccomendations on ones you've used?
[03:50:31] <nedbat> JamGobbar: oops, sorry, no it doesn't/
[03:51:02] <nedbat> JamGobbar: choosing among the frameworks often comes down to which looks like the one you want, or what kind of cross-platform support you want.
[03:51:34] <JamGobbar> i'd prefer basic compatibility with linux/windows/macos, but i dont care as much about macos
[03:52:00] <JamGobbar> and im not interested in one you have to launch a web browser to use
[03:53:00] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[03:54:09] *** Joins: Warped (~Warped@user/warped)
[03:55:14] *** Joins: Retr0id (~Retr0id@user/retr0id)
[03:56:29] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[03:56:48] <SnoopJ> JamGobbar, in no particular order and off the top of my head: PyQt, Kivy, Tkinter, wxWidgets should all meet that standard
[03:58:03] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[03:58:03] <JamGobbar> any of those you used and prefer to use over the others?
[03:58:56] <SnoopJ> I've only really used PyQt/wxWidgets and of those two would recommend PyQt more strongly, but I think I'm well out of date on wxWidgets so maybe it's gotten nicer.
[03:59:05] <SnoopJ> Kivy is the newcomer of those 4 and seems like it has a gentle curve
[03:59:07] <JamGobbar> ok thanks
[03:59:17] <JamGobbar> that will give me something to go off of
[03:59:27] <SnoopJ> I agree with nedbat though, just shop around a bit and see what appeals to you
[03:59:41] <SnoopJ> certainly my list is not anywhere close to exhaustive :)
[03:59:49] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[04:00:01] <Repiphany> pyside as an alternative to pyqt if you're potentially worried about licensing issues
[04:00:34] <JamGobbar> nah i just wanted a good place to start, im adapting a script i wrote to have a nice gui so that people can use it
[04:01:10] <SnoopJ> ah yea, pyside is also well-liked
[04:01:29] <tdsmith> i guess pyside is how you spell pyqt these days
[04:01:35] <JamGobbar> my license will probably be some flavor of opensource
[04:02:36] <SnoopJ> tdsmith, I think PyQt covers more recent editions of Qt
[04:02:49] <tdsmith> i think that's no longer true but it's shifted back and forth
[04:02:50] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[04:02:55] <Repiphany> PySide6 is a thing now too
[04:03:04] <SnoopJ> ah
[04:03:16] *** Quits: saltysoul (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Changing host)
[04:03:16] *** Joins: saltysoul (~sebmont@user/sebmont)
[04:03:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[04:03:28] *** Joins: irrgit (~irrgit@146.70.26.18)
[04:04:05] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:04:10] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[04:06:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 245 seconds)
[04:07:39] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[04:07:41] <irrgit> When using the selenium webdriver, does using time.sleep() in between page requests pause the whole operation, or can time.sleep() be used to wait for a previous page load request to finish loading?  -> https://bpa.st/BWLQ
[04:08:28] *** Joins: Wulf (~Wulf@user/wulf)
[04:11:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[04:13:51] <SnoopJ> irrgit, get_page() will finish running before sleep() is called in that snippet
[04:14:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[04:15:34] <SnoopJ> there's probably a way to do what you intend but I would expect that paste to take 30 seconds total to execute (but I don't really use selenium)
[04:15:44] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[04:15:46] <irrgit> SnoopJ, I see, thanks. So basically selenium is not asynchronous
[04:16:04] *** Joins: alphasierra (~alphasier@2405:201:e:4d:b560:66b7:6b05:1a66)
[04:16:19] <irrgit> I dont really have a usecase for that. I just wanted to know for sure that driver.get_page() would wait for the page to load.
[04:16:38] *** Joins: fikran (~fikran@user/fikran)
[04:17:31] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 256 seconds)
[04:17:36] <irrgit> Had some issues getting a specific page which generates large xml/csv reports, sometimes it would take 10 seconds, sometimes +100.
[04:18:01] <irrgit> I think I should just link into changing the default timeout
[04:18:08] *** Joins: atknight (~someone@23.226.133.72)
[04:18:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[04:18:19] *** Quits: botfather (~botfather@shell1.dds.nl) (Quit: -)
[04:19:13] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[04:19:15] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[04:20:25] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:21:08] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[04:24:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:24:22] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:51] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:24:55] *** Quits: grimvar (~grimvar@i5C75F72B.versanet.de) (Ping timeout: 250 seconds)
[04:26:35] *** Joins: grimvar (~grimvar@i5C75F574.versanet.de)
[04:27:23] <SnoopJ> irrgit, I think so. This issue discusses it: https://github.com/SeleniumHQ/selenium/issues/3399
[04:29:21] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[04:29:26] <Feuermagier> how would I do a ReLu on a numpy array?
[04:29:36] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[04:31:38] <grym> Feuermagier: x[x<0]=0
[04:31:39] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:33] *** Joins: brabrax (~brabrax@user/brabrax)
[04:32:41] <Feuermagier> thx
[04:33:42] *** Joins: botfather (~botfather@shell1.dds.nl)
[04:33:56] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Ping timeout: 256 seconds)
[04:34:08] <nedbat> i am confused about how to make a C extension type behave properly with gc.  tp_clear, tp_traverse, etc. :(
[04:34:46] *** Joins: Betal (~Betal@user/betal)
[04:37:19] *** Quits: y1n (~y1n@178.115.37.88.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[04:37:23] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[04:37:39] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[04:38:14] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[04:39:02] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[04:39:34] <SnoopJ> nedbat, for a container type?
[04:41:31] <enrh> If I create a dictionary that is say 100 chars long when I len(str(dict)), how much memory would those 100 bytes take in Python? I can tell it's not 1:1, just curious how to figure that out.
[04:41:42] <nedbat> SnoopJ: yes, though I think container is a misleading term.
[04:41:59] <nedbat> SnoopJ: because it's not a container, it just has references to other python objects which could form a cycle.
[04:42:13] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) ()
[04:42:22] <nedbat> enrh: the memory footprint of a dict is pretty much unrelated to how long it is as a string.
[04:42:42] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7) (Quit: smeeagle)
[04:43:37] *** Joins: binary01 (~binary01@192.110.171.216)
[04:43:37] <enrh> nedbat, ahh. Maybe I should use a SQLite3 file or in-memory database?
[04:43:45] <KirkMcDonald> enrh: To what end?
[04:43:52] <enrh> Reduce memory usage
[04:44:03] <nedbat> enrh: are your dicts taking too much space?
[04:44:06] <enrh> Yep
[04:44:14] <nedbat> enrh: tell us more about what's going on
[04:44:26] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[04:44:31] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Remote host closed the connection)
[04:44:44] <enrh> Few hundred MB when written out with json.dump(), but using gigs and gigs when I try keeping a subset of that in memory.
[04:44:51] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[04:45:04] <nedbat> enrh: that sounds like a strange ratio
[04:45:17] <nedbat> enrh: how many gigs?
[04:45:50] <enrh> Enough it runs out of available and cases the box to swap LOL, so about 10-15GB?
[04:46:08] <enrh> There are some datatime.datetime objects in there
[04:46:16] <enrh> I could convert those to strings maybe to help
[04:46:27] <enrh> datetime.datetime*
[04:46:36] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 245 seconds)
[04:46:44] <KirkMcDonald> You can't serialize a datetime in JSON.
[04:46:45] <enrh> But y'all answered my question, what ever is happening is something wrong with my code most likely
[04:46:58] <enrh> KirkMcDonald, right, which is why I do json.dumps(default=str)
[04:46:59] <nedbat> enrh: maybe
[04:47:04] <enrh> Err json.dump(default=str)
[04:47:32] <KirkMcDonald> And when you deserialize?
[04:47:53] <enrh> It's an ISO8601 string, uses about 400MB total on disk
[04:48:29] <enrh> JFYI I'm using ldap3 module to pull stuff from LDAP and write to files. However I do some rewriting on DNs along the way.
[04:49:06] <enrh> Thanks for your thoughts folks, I'm going to re-assess my code and come back if I don't get anywhere
[04:49:14] <KirkMcDonald> I suppose my concern if memory usage is exploding in this way is that you have done something that allocates without end.
[04:49:21] <enrh> Yeah
[04:49:35] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[04:49:50] <enrh> It's gotta be something I'm doing, when I use an LDAP with a small object count I don't have noticable issie
[04:49:59] <enrh> an LDAP server*
[04:50:23] <enrh> Thank you again nedbat and KirkMcDonald
[04:50:36] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:51:46] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[04:55:46] *** Quits: esv (~esv@216.237.228.11) (Remote host closed the connection)
[04:56:52] *** Joins: jbox (~jbox@user/jbox)
[04:59:44] *** Quits: driib (~driib@185.65.135.232) (Quit: The Lounge - https://thelounge.chat)
[05:00:00] *** Joins: driib2 (~driib@185.65.135.232)
[05:00:19] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:01:03] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 264 seconds)
[05:02:06] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:03:16] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 245 seconds)
[05:04:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:05:47] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[05:09:06] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[05:09:39] *** Quits: jbe (~jbe@lysator/root/jbe) (Ping timeout: 256 seconds)
[05:10:12] *** Joins: nomic2 (~nomic@185.217.117.248)
[05:10:43] *** Joins: nozzlecleaner (~user@99-76-183-238.lightspeed.rcsntx.sbcglobal.net)
[05:11:19] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[05:12:34] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[05:13:03] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[05:13:03] *** Quits: nomic (~nomic@185.217.117.248) (Ping timeout: 256 seconds)
[05:14:28] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[05:14:34] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:14:40] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[05:15:06] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[05:15:38] *** Quits: flokuehn (~flokuehn@87.123.247.61) (Ping timeout: 260 seconds)
[05:16:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:16:21] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:16:35] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:16:39] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 264 seconds)
[05:17:12] *** Joins: flokuehn (~flokuehn@87.123.247.47)
[05:17:27] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[05:17:38] <SnoopJ> nedbat, well, my understanding is that those two slots and the using the appropriate allocation/deallocation functions (and registering with the GC at init time) are what you'd need. What's giving you a headache?
[05:19:45] <nedbat> SnoopJ: it doesn't seem to help with the memory leaks
[05:20:46] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 245 seconds)
[05:21:33] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:22:20] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:24:57] *** nomic2 is now known as nomic
[05:26:04] <SnoopJ> hmm
[05:28:14] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[05:28:18] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[05:28:20] <nedbat> SnoopJ: i'm probably just missing something
[05:28:21] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:30] <SnoopJ> If it's just holding references to other (existing) objects I would guess you 'just' need to Py_XDECREF those when your object goes away. I'm a little fuzzier on PyObject_GC_New() + PyObject_GC_Del() and the track/untrack functions
[05:31:40] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[05:32:04] <nedbat> SnoopJ: it's not enough, because my object is in a cycle.
[05:32:28] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[05:32:48] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:32:54] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ¦)
[05:33:03] <SnoopJ> nedbat, okay, and if I'm reading the docs right, tp_clear is what is used to bust up the cycle when it's sure it wants to GC the object
[05:33:19] <SnoopJ> but you've implemented one and it's still leaving something allocated, I guess?
[05:33:24] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:33:35] <nedbat> SnoopJ: yes :(
[05:34:59] <nedbat> SnoopJ: the thing i don't understand is "The memory for the object must be allocated using PyObject_GC_New()", but I don't allocate memory for the object myself at all, so I'm not sure if I need to do something different.
[05:35:35] <SnoopJ> My understanding is that you use that when you would be writing PyObject_New(), but you're in one of these 'container' objects so you need the special thingy
[05:36:17] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[05:37:25] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 256 seconds)
[05:37:45] *** Quits: p-i-_ (~Ohmu@223.206.149.105) (Read error: Connection reset by peer)
[05:38:00] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[05:38:15] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[05:38:15] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 264 seconds)
[05:38:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[05:38:27] *** Joins: Betal (~Betal@user/betal)
[05:38:46] <SnoopJ> since you're not allocating your own memory I don't think it's needed, which sounds more like a lingering reference somewhere in there
[05:39:14] *** Quits: Pilate (~pilate@pilate.io) (Ping timeout: 246 seconds)
[05:39:29] *** Quits: alphasierra (~alphasier@2405:201:e:4d:b560:66b7:6b05:1a66) (Remote host closed the connection)
[05:39:54] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Ping timeout: 260 seconds)
[05:40:12] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[05:40:39] *** Quits: xdeadface (~xdeadface@gateway/tor-sasl/xdeadface) (Ping timeout: 276 seconds)
[05:41:08] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[05:41:53] <SnoopJ> nedbat, have you already checked that your tp_traverse does visit every referenced object when the object is GC'd?
[05:42:55] <SnoopJ> tp_clear seems like the easier one to get right since it's "drop all your references"
[05:43:33] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[05:43:59] <SnoopJ> but maybe the business about Py_CLEAR over the other reference decrement in its doc has something nuanced that I've overlooked. I'm reaching, heh
[05:44:25] <nedbat> SnoopJ: https://github.com/nedbat/coveragepy/blob/nedbat/bug1283/coverage/ctracer/tracer.c#L123-L141
[05:45:27] <Evolver> Is Cython still the thing to use for accelerating a function? Numba had way too many errors, and the result took far longer to run.
[05:45:35] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[05:46:01] <SnoopJ> Evolver, it's one option
[05:46:09] <Evolver> what else can I try?
[05:46:19] <nedbat> Evolver: pypy?
[05:46:30] <Evolver> nedbat: yeah I could try that
[05:46:32] <Evolver> I could try disabling gc during some loops.
[05:46:41] <SnoopJ> or CFFI if you'd rather just write it in C or C++ or [whatever]
[05:46:46] <SnoopJ> but Cython is good
[05:47:20] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th)
[05:48:49] <SnoopJ> nedbat, I don't see PyObject_GC_Track() or UnTrack() anywhere in here, which seems like something the doc is saying is strictly not optional for these kinds of objects
[05:49:00] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[05:49:10] <nedbat> SnoopJ: right, but that happens when you allocated an object, but i never do.
[05:50:03] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:50:21] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 245 seconds)
[05:50:23] <SnoopJ> nedbat, that isn't what I'm getting from the doc, it seems to say that if you set Py_TPFLAGS_HAVE_GC you are expected to register the object with Track() once the reference-containing fields are initialized. Did I miss something?
[05:53:16] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[05:55:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ¦)
[05:56:05] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[05:57:22] <SnoopJ> hmm, seems like the builtin objects mostly do this when constructing an iterator, so perhaps I did indeed
[05:57:46] *** Joins: vd1857 (~vd18@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:01:12] *** Quits: vd18 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[06:01:50] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:03:33] <SnoopJ> nedbat, I notice that CTracer_clear() does not do anything with self->data_stacks, but that object seems like it could be holding references, I guess the file_data member would be my principal suspicion there since the others are borrowed
[06:03:54] *** Joins: qpdb (~qpdb@user/qpdb)
[06:04:01] <SnoopJ> or are those incapable of forming a cycle perhaps?
[06:04:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[06:04:27] <nedbat> it's only switch_context and disable_plugin that are leaking
[06:04:31] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:04:44] <SnoopJ> ah
[06:04:46] <nedbat> SnoopJ: they are bound methods that keep a reference to the Collector, which has a reference to the CTracer
[06:04:48] *** Joins: brabrax (~brabrax@user/brabrax)
[06:05:24] *** Joins: pluri (~pluri@user/pluri)
[06:05:51] *** Quits: irrgit (~irrgit@146.70.26.18) (Ping timeout: 264 seconds)
[06:05:54] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[06:06:31] <pluri> I want to run a python behind openVPN, such that the rest of the OS doesn't go through openVPN. is this possible? i have a vague suspicion it might be possible using containers. is this true? how can I learn how to do it? or is there a better way?
[06:06:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:09:15] <SnoopJ> nedbat, okay, and the binding closes the cycle? That makes sense enough. I'm flummoxed, then, looks like relatively little is happening with those except the calls
[06:09:48] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:10:44] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[06:10:46] *** Joins: koo5_ (~quassel@51.140.155.227)
[06:11:15] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[06:13:33] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[06:13:55] <SnoopJ> I think I understand what you mean about only needing to call Track() if you did your own alloc after poking around in the source. It does seem like they come together, I guess you get it tracked for free when it's just the type itself
[06:16:09] *** Quits: vd1857 (~vd18@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[06:16:49] <deltab> pluri: on linux, you can use a network namespace (part of how containers work)
[06:16:57] *** Joins: vd1857 (~vd1857@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:17:09] <pluri> deltab thank you. i was just looking at that.
[06:17:20] <deltab> pluri: it's also possible to use uid or pid in iptables rules
[06:20:21] <deltab> uid or gid
[06:22:16] <SnoopJ> nedbat, ah! I'm not seeing the track call in the builtins (listobject.c is mostly where I'm looking) I think because it happens in the generic allocator, which they all seem to use: https://github.com/python/cpython/blob/main/Objects/typeobject.c#L1179-L1181
[06:22:34] *** Quits: atknight (~someone@23.226.133.72) (Quit: Leaving)
[06:23:31] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:23:41] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 245 seconds)
[06:24:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:24:21] <SnoopJ> but tp_alloc is 0 for your CTracer so for sure that call of it won't happen, and I am still wondering if it's part of the "let the GC know about this object" contract but normally happens via this pretty implicit route
[06:25:59] *** Joins: fikran (~fikran@user/fikran)
[06:26:40] *** Joins: pabs3 (~pabs3@user/pabs3)
[06:27:21] <nedbat> SnoopJ: idk why, but my module follows the pattern found elsewhere of stuffing the generic new function in during module initialization.
[06:27:27] <nedbat> idk why people do that
[06:27:30] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[06:28:03] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[06:28:42] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[06:28:57] <nedbat> SnoopJ: but i'm closing shop for the night. back at it tomorrow.
[06:29:25] <SnoopJ> nedbat, well, I don't see the track call anywhere else in there, so, I guess that's as good a thought as I have about it. Curious to hear how it plays out, though. Night!
[06:29:58] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[06:34:03] *** Joins: millido (~millido@84.210.150.128)
[06:34:44] <sgt_chuckles> i enter poetry env info gives me NA for Path. How can I have poetry automatically create an env with a new project?
[06:36:13] <grym> poetry new foo && cd foo && poetry install ?
[06:37:55] <SnoopJ> install is what triggers env creation AIUI, yea
[06:38:47] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:38:50] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:39:56] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 245 seconds)
[06:40:27] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:6cb0:abe7:b16b:4f04)
[06:43:07] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[06:43:16] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[06:43:43] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 256 seconds)
[06:43:59] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[06:44:16] *** Joins: TJ- (~root@about/linux/staff/tj-)
[06:47:05] *** Joins: jbe (~jbe@lysator/root/jbe)
[06:50:02] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[06:51:47] *** Joins: Vonter (~Vonter@user/vonter)
[06:51:48] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:51:48] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:51:48] *** finn_elija is now known as FinnElija
[06:52:01] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[06:53:06] *** Joins: lowfi (~lowfi@159.196.17.52)
[06:54:21] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[06:55:49] *** Quits: binary01 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[06:56:03] *** Joins: binary01 (~binary01@192.110.171.216)
[06:56:13] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th)
[06:57:04] *** Quits: lowfi (~lowfi@159.196.17.52) (Changing host)
[06:57:04] *** Joins: lowfi (~lowfi@user/lowfi)
[06:57:14] *** Joins: JoelJoel (~jjshoe@user/joel)
[06:57:55] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 268 seconds)
[06:58:33] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 268 seconds)
[06:59:31] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th) (Ping timeout: 245 seconds)
[06:59:42] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[07:00:41] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[07:01:55] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[07:03:20] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[07:04:47] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[07:05:21] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[07:06:11] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:07:02] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[07:07:20] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:07:59] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[07:08:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Ping timeout: 256 seconds)
[07:08:58] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:09:21] *** Joins: xa0s (~xa0s@mab.sdf.org)
[07:09:32] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:09:47] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[07:10:50] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[07:10:55] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[07:12:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:12:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:12:40] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[07:13:24] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[07:14:09] *** Joins: saltysoul (~sebmont@user/sebmont)
[07:16:29] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:16:30] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:17:26] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[07:18:16] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 245 seconds)
[07:19:03] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 264 seconds)
[07:19:13] <s98259> Okay so I moved my working script from one system to another but when I run it I get "SSH connection error: 'SSHServerProcess' object has no attribute 'get_extra_info'".
[07:19:19] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[07:19:36] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 265 seconds)
[07:20:02] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:21:16] *** Joins: masoudd (~masoudd@user/masoudd)
[07:23:08] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[07:23:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:23:38] *** Joins: sgn (~sgn@user/sgn)
[07:23:51] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[07:24:37] *** Quits: xcm_ (~xcm@user/xcm) (Remote host closed the connection)
[07:24:55] *** Joins: xcm_ (~xcm@user/xcm)
[07:25:39] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[07:30:27] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[07:31:39] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[07:31:59] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[07:33:34] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[07:35:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:ddb6) (Quit: Textual IRC Client: www.textualapp.com)
[07:35:33] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:42] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[07:38:47] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 264 seconds)
[07:38:52] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[07:39:15] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:40:07] *** JoelJoel is now known as Joel
[07:41:15] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 264 seconds)
[07:41:15] *** jmiehe1 is now known as jmiehe
[07:41:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:41:54] *** Joins: eliss (~eliss@pool-96-238-11-235.prvdri.fios.verizon.net)
[07:42:55] *** Joins: rapido_edwardo (~rapido_ed@user/rapido-edwardo/x-5639012)
[07:43:00] <eliss> I'm a long time programmer by new to frontend. I'm trying to use python to just display some charts on http://localhost/  what would be the best way to go about it? I looked into http.server and have something running but I can't use variables in the html (whatever that is called). is there something I'm missing? I would google this but don't know what words to google
[07:44:10] *** Joins: orbatos_ (~orbatos@user/orbatos)
[07:45:22] *** Joins: rany (~rany@user/rany)
[07:46:03] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net)
[07:46:31] *** Quits: rapido_edwardo (~rapido_ed@user/rapido-edwardo/x-5639012) (Client Quit)
[07:46:39] *** Quits: orbatos__ (~orbatos@user/orbatos) (Ping timeout: 264 seconds)
[07:47:18] *** Quits: nawcom (~nawcom@bulldadachat.com) (Ping timeout: 260 seconds)
[07:47:54] <rannnn8888> someone here know how i can builzer with kivy external libraries ? "psycopg2" pack add
[07:53:59] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[07:55:59] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:56:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[07:57:04] *** Joins: parv (~quass@user/parv)
[07:57:40] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[07:59:47] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:cc75:c706:8054:982d) (Read error: Connection reset by peer)
[08:00:24] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:cc75:c706:8054:982d)
[08:02:53] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[08:05:08] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:05:32] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[08:05:36] *** Quits: BigShip (~BigShip@user/bigship) (Read error: Connection reset by peer)
[08:05:36] *** Quits: dalan62367 (~dalan@14-202-182-202.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[08:05:57] *** Joins: dalan62367 (~dalan@14-202-182-202.tpgi.com.au)
[08:06:07] *** Joins: BigShip (~BigShip@user/bigship)
[08:06:30] *** Quits: strugee_ (~strugee@strugee.net) (Remote host closed the connection)
[08:07:16] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:08:09] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:08:28] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:09:27] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 264 seconds)
[08:09:38] *** Joins: strugee (~strugee@strugee.net)
[08:10:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[08:10:43] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:11:01] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:12:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[08:12:52] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Client Quit)
[08:13:09] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[08:13:20] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[08:14:31] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[08:14:31] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[08:14:35] <Evolver> eliss: static or dynamic charts?
[08:15:13] <eliss> Evolver: charts that use some data in the folder to generate, which I've done with d3.js
[08:16:07] <eliss> but forget the charts for a moment, I just want to show a html page with some data from a file in it
[08:16:09] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[08:17:09] <Evolver> eliss: streamlit is one popular package, but I don't mean to suggest it's the only one
[08:17:15] <Evolver> eliss: bokeh is another
[08:17:26] <eliss> so would I still use http.server?
[08:18:17] <Evolver> you could maybe just write an html page with images
[08:18:47] <eliss> sure, all I'm really asking is how to take a variable in python, and put it in an html page, and then show it. http.server doesn't seem to have a way to do that
[08:18:58] <eliss> I can handle everything else
[08:19:17] <Evolver> you don't need a web server to locally render an html page with images
[08:19:26] <Evolver> The browser can read local html files
[08:19:48] <Evolver> You can even use an auto-refreshing browser extension
[08:20:07] <Evolver> or some trivial embedded javascript to reload
[08:20:48] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net) (Quit: Client closed)
[08:21:25] <eliss> how about if I need to show a python variable
[08:21:54] <eliss> I have this html page, mostly leave it alone, but one of the divs should show the python variable in it
[08:23:24] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[08:24:22] <bss>  eliss: I believe you are looking for a templating engine, e.g. jinja
[08:24:22] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[08:24:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[08:24:46] <bss> that can work with http.server, or increasingly complicated frameworks if you need them
[08:24:55] <Evolver> eliss: will the value of the variable keep changing? how often?
[08:25:03] <eliss> okay, thanks. I'll start with some simple first
[08:25:10] <eliss> Evolver: maybe on each page reload it can change,
[08:25:18] <eliss> let's say it's the number of files in a folder or something
[08:25:29] <Evolver> eliss: can easily print the value of the var into straight html
[08:25:47] <eliss> I see, so each time regenerate the html, and reload it
[08:25:59] <Evolver> That's the simplest way imho
[08:26:06] <eliss> I'll see which method is easier, and read a bit on templating engine too. thanks!
[08:26:11] <Evolver> For complex ways, you can setup a Kubernetes cluster with React on multicloud.
[08:27:06] *** Joins: kdc (~kdc@196.211.197.159)
[08:30:22] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:30:41] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:42] *** Quits: nozzlecleaner (~user@99-76-183-238.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[08:31:04] *** Joins: c10l (~c10l@user/c10l)
[08:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:33:16] <s98259> Okay so I moved my working script from one system to another but when I run it I get "SSH connection error: 'SSHServerProcess' object has no attribute 'get_extra_info'".
[08:33:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[08:34:11] *** Joins: esv (~esv@216.237.228.11)
[08:35:20] *** Joins: fikran (~fikran@user/fikran)
[08:35:49] <Evolver> eliss: the way I do it is to publish into a google sheet using the sheetfu package, and then I can see things in the sheet
[08:36:11] *** Quits: davef (sid287421@user/davef) (Ping timeout: 245 seconds)
[08:36:16] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[08:36:19] *** Joins: xah377 (~xah37@2603-6000-8c0b-3200-0000-0000-0000-0011.res6.spectrum.com)
[08:36:27] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 264 seconds)
[08:36:53] *** Quits: xah377 (~xah37@2603-6000-8c0b-3200-0000-0000-0000-0011.res6.spectrum.com) (Changing host)
[08:36:53] *** Joins: xah377 (~xah37@user/xah37)
[08:37:17] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[08:38:45] *** Joins: davef (sid287421@user/davef)
[08:39:54] *** Joins: givemeyourpies (givemeyour@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[08:42:08] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 268 seconds)
[08:43:25] *** Joins: SpartanBunny (~spartanbu@8.17.206.126)
[08:44:00] <SpartanBunny> /q
[08:44:08] *** Parts: SpartanBunny (~spartanbu@8.17.206.126) (WeeChat 3.3)
[08:46:09] <Mulugruntz> o/ anyone knows if there's a lib that exists where you give it a pypi package name and a python version and it gives you all the compatible versions of that package?
[08:46:48] *** Joins: SpartanBunny (~spartanbu@8.17.206.126)
[08:47:47] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 264 seconds)
[08:47:56] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[08:48:09] <SpartanBunny> I was trying to look for an easy-to-use Python Project/Build Management System
[08:48:56] *** Joins: vit (~vit@chello085216193138.chello.sk)
[08:49:27] <Mulugruntz> SpartanBunny poetry?
[08:49:34] *** Quits: dalan62367 (~dalan@14-202-182-202.tpgi.com.au) (Quit: dalan62367)
[08:50:01] *** Joins: dalan62367 (~dalan@14-202-182-202.tpgi.com.au)
[08:50:21] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[08:52:55] *** Quits: SpartanBunny (~spartanbu@8.17.206.126) (Ping timeout: 256 seconds)
[08:55:41] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[08:55:47] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Client Quit)
[08:56:17] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[08:57:27] <jinsun__> Mulugruntz: pip has an experimental command for that, you can do something like `pip index versions numpy --python-version 3.6`, but since it is experimental don
[08:57:41] *** Joins: lukeaar (~lukeaar@45.132.224.72)
[08:57:51] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[08:58:09] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[08:58:12] <jinsun__> ugh *don't rely on it being available in the future
[08:58:15] <Mulugruntz> jinsun__ thanks. I've noticed that there's also `pip download` that can do something similar~ish.
[08:58:26] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[08:58:29] *** jinsun__ is now known as jinsun
[08:59:10] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[08:59:38] <Mulugruntz> yeah pip index is not in v21.3.1 documentation
[09:00:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[09:00:51] <jinsun> yeah I think I found it from the pull request that implemented it when I was looking for something else
[09:01:16] <Mulugruntz> yeah, I'm on it in github. But...  hmmm
[09:02:06] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[09:03:07] *** Quits: Inline (~Inline@2a02:908:1252:7a80:d3da:57e0:913c:b7aa) (Quit: Leaving)
[09:03:43] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[09:03:47] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:03:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:04:49] *** Quits: jpic (~jpic@82.142.20.182) (Ping timeout: 256 seconds)
[09:04:56] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[09:06:25] *** Joins: jpic (~jpic@82.142.20.182)
[09:08:31] *** Quits: Fiji- (~Fiji@user/fiji) (Quit: Leaving)
[09:09:53] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 268 seconds)
[09:11:00] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[09:12:52] *** Quits: vd1857 (~vd1857@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[09:14:51] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 264 seconds)
[09:15:40] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[09:19:50] *** Quits: nomic (~nomic@185.217.117.248) (Quit: Leaving)
[09:25:22] *** Joins: jinsun__ (~quassel@user/jinsun)
[09:29:11] *** Joins: jinsun___ (~quassel@user/jinsun)
[09:29:27] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[09:30:06] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:30:55] *** Joins: jinsun (~quassel@user/jinsun)
[09:31:39] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[09:34:03] *** Quits: jinsun___ (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[09:34:56] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 245 seconds)
[09:35:36] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[09:35:55] *** Joins: manti7 (~manti7@176.10.104.94)
[09:36:36] *** Joins: Warped (~Warped@user/warped)
[09:37:02] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:37:51] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[09:40:39] *** Quits: esv (~esv@216.237.228.11) (Read error: Connection reset by peer)
[09:40:56] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[09:44:31] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[09:46:11] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 256 seconds)
[09:46:35] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[09:48:41] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[09:50:58] *** Quits: dale (dale@user/dale) (Read error: Connection reset by peer)
[09:51:07] *** Joins: dale (dale@user/dale)
[09:51:12] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 268 seconds)
[09:51:46] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:51:53] *** Quits: a1paca (~a1paca@user/a1paca) (Quit: ZNC 1.8.2 - https://znc.in)
[09:52:05] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[09:52:12] *** Joins: a1paca (~a1paca@user/a1paca)
[09:52:51] *** Quits: Syzygy (~Syzygy@dynamic-2l4rd4y3qrlcfmesry-pd01.res.v6.highway.a1.net) (Ping timeout: 245 seconds)
[09:53:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Quit: Client closed)
[09:56:03] <KombuchaKip> I am using python-zeroconf library. How can I get the Zeroconf object to only look for services on any local interface? I've tried Zeroconf(interfaces=my_local_ip_addresses_list), but it's still finding stuff outside of my local machine.
[09:56:43] <grawity> in other words you want it to find only services advertised by localhost?
[09:57:04] <KombuchaKip> grawity: Yes
[09:57:22] <KombuchaKip> grawity: Or ideally, everywhere, but with the local ones returned first.
[09:57:31] <KombuchaKip> grawity: But let's start with the first question.
[09:58:02] <grawity> I would guess either interfaces=["lo"] or interfaces=["::1", "127.0.0.1"] or you get all of them then discard the ones where the server address isn't among my_local_ip_address_list
[09:58:14] <grawity> (since you already have the local IP address list, after all)
[09:58:44] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th) (Remote host closed the connection)
[09:59:12] <jinsun> just realized `not a - b` is same as `not (a - b)` and not `(not a) - b`, because pylint wants me to remove parens from `not (a - b)`
[09:59:19] *** Joins: p-i- (~Ohmu@223.206.149.105)
[09:59:36] <KombuchaKip> grawity: is ["::1", "127.0.0.1"] guaranteed to be portable?
[10:00:44] <grawity> no, and older Avahi versions didn't even register services on lo, I think that was only added 2-3 years back for CUPS
[10:00:54] <grawity> well, I mean it's portable in the sense that ::1 is always localhost, etc
[10:01:17] <grawity> but services aren't guaranteed to be advertised there by apps...
[10:01:43] <KombuchaKip> grawity: Right. I just want to get services advertised on a local interface before finding ones outside.
[10:02:08] <grawity> then I think it's easiest to get all of them and split by server address
[10:02:09] *** Joins: dvx (~dvx@5.181.92.64)
[10:02:10] *** Quits: lukeaar (~lukeaar@45.132.224.72) (Ping timeout: 260 seconds)
[10:02:14] <grawity> as you already know which addresses are local
[10:02:15] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[10:03:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:03:36] <KombuchaKip> grawity: The problem is there is a race condition where it may find an external service before it finds one on a local interface.
[10:03:45] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[10:04:03] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[10:04:58] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[10:05:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:05:55] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[10:09:22] <s98259> I'm getting annoyed at asyncio cause I'm struggling to understand it.
[10:09:34] <s98259> My brain is overloaded now.
[10:09:48] *** Joins: SpartanBunny (~spartanbu@103.243.46.229)
[10:10:20] <s98259> But basically anything await functions seem to end up running into unmet conditions.
[10:10:41] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:10:48] <s98259> I'll have for example an if statement that shouldn't have been satisfied but will still be entered.
[10:11:30] <s98259> And I've been at it for 3 days trying to prevent things like this from happening in the first place.
[10:12:21] <s98259> But it would help if I could properly understand the documentation.
[10:13:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:15:15] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[10:15:49] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[10:16:00] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[10:16:08] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:16:17] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[10:16:40] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[10:16:47] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:18:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:18:27] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[10:18:57] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:21:32] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[10:21:57] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[10:22:11] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:22:38] <p-i-> In my .ipynb cell I `import Foo` and it fails with "ModuleNotFoundError: No module named '_shared.Curl'" on line `from _shared.Curl import Curl`. But I have ./_shared/Curl.py
[10:22:44] <p-i-> And it worked FINE from another location
[10:23:53] <p-i-> Why oh why can Python imports not just "work"? The way C/C++ #include-s do...
[10:24:17] <p-i-> What I end up doing is simply giving up and putting everything in the same folder
[10:25:21] <p-i-> oh now that's interesting. I have everything in the same folder now and STILL get the problem.
[10:25:38] <p-i-> There must be some issue with importing my own .py file into a notebook cell
[10:25:45] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:26:02] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[10:26:28] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:cc75:c706:8054:982d) (Read error: Connection reset by peer)
[10:27:29] *** Joins: p-i-_ (~Ohmu@223.206.149.105)
[10:31:02] *** Joins: djapo (~archangel@user/djapo)
[10:31:17] *** Quits: p-i- (~Ohmu@223.206.149.105) (Ping timeout: 268 seconds)
[10:31:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:32:26] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:32:42] *** Joins: lukeaar (~lukeaar@45.132.224.72)
[10:35:20] *** Quits: onichomp (~onichomp@2806:264:4404:8138:a118:6083:7c5e:9bd) (Read error: Connection reset by peer)
[10:35:29] <jinsun> p-i-_: the usual thing to check is sys.path, `import sys; print(sys.path)` and if you don't have the parent folder of your package there you can't import it
[10:35:59] *** Joins: onichomp (~onichomp@2806:264:4404:8138:a118:6083:7c5e:9bd)
[10:37:04] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:39:01] *** Quits: onichomp (~onichomp@2806:264:4404:8138:a118:6083:7c5e:9bd) (Read error: Connection reset by peer)
[10:39:34] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[10:39:35] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Client Quit)
[10:39:42] *** Joins: upsala (~zcb@185.213.155.232)
[10:40:29] *** Joins: jay-m126 (~jay-m@195.24.211.78)
[10:40:50] *** Parts: SpartanBunny (~spartanbu@103.243.46.229) (WeeChat 3.3)
[10:41:09] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[10:41:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:41:29] <p-i-_> jinsun: Thanks. I've checked. So /foo/test.ipynb has `import Foo` and /foo/Foo.py has `import Curl.py`.
[10:41:38] <p-i-_> Somehow it's still failing.
[10:42:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[10:43:39] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[10:43:51] <jinsun> it was _shared.Curl before, you changed it or Curl.py does that?
[10:43:54] *** Joins: mrwick (~mrwick@user/mrwick)
[10:44:21] <s98259> PIE!
[10:44:33] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[10:44:41] *** Joins: fikran (~fikran@user/fikran)
[10:45:33] *** Joins: jay-m126_ (~jay-m@195.24.211.78)
[10:46:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[10:47:03] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:9b94:a761:1a80:bf1)
[10:48:45] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[10:49:04] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:49:21] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:49:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[10:49:46] *** Quits: aoei\Chickatrice (aoei@nethackscoreboard/aoei) (Quit: brb reboot)
[10:51:02] *** Quits: treefrob (~treefrob@p2e5421a1.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:52:00] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[10:52:17] *** aoei is now known as aoei\Chickatrice
[10:52:26] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:52:33] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[10:52:36] *** Quits: Hunterkll (~hunterkll@24.112.128.217) (Killed (NickServ (GHOST command used by Seto_Kaiba!~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)))
[10:52:38] *** Seto_Kaiba is now known as Hunterkll
[10:53:43] *** Joins: gusto (~Augustus@109.255.100.54)
[10:54:23] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:55:12] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[10:56:11] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:56:28] <p-i-_> No, I just moved everything into /foo to testcase the  fail
[10:56:36] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[10:57:06] *** Joins: seednode (~seednode@user/seednode)
[10:59:28] <p-i-_> ook I think I gottit Its a dumb macos symlink issue
[11:00:27] <parv> p-i-_, Is that symlink issue specific to MacOS?
[11:01:01] <parv> ... whatever the issue happens to be
[11:01:55] <wyre> grym, is there something also like .decode()?
[11:01:57] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:02:57] <p-i-_> parv: There's a difference between drag-dropping a file with OPT held down (file reference) and `ln -s` (symlink)
[11:03:15] *** Quits: jay-m126_ (~jay-m@195.24.211.78) (Ping timeout: 256 seconds)
[11:03:21] <parv> p-i-_, Hunh. Thanks
[11:03:24] *** Joins: jyu_s (~f0fz@122.11.212.234)
[11:03:27] *** Quits: jay-m126 (~jay-m@195.24.211.78) (Ping timeout: 264 seconds)
[11:03:27] *** Joins: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de)
[11:03:31] *** Joins: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com)
[11:03:32] <p-i-_> As my .py file was a file-reference, Python couldnt parse it.
[11:03:37] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[11:03:54] <p-i-_> next machine I buy I'm just gona install linux
[11:04:04] <s98259> P I spells.... PI!
[11:04:52] <parv> Magnum Private Investigator?
[11:05:04] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[11:05:38] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[11:07:12] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--3e9.oracle-ocna.com)
[11:07:21] *** Joins: afidegnum (~user@102.176.94.200)
[11:07:58] *** Joins: luigibu (~luigi@80.30.201.209)
[11:08:01] <afidegnum> parv: hi, I managed to create a recursion but it comes with a bug. can you please look into it ?
[11:08:14] <afidegnum> still in parsing lxml tree
[11:09:08] <afidegnum> i wanted to use dictionary instead
[11:09:33] <parv> afidegnum, Sorry, as I had written earlier I can't
[11:09:39] <afidegnum> ok
[11:11:42] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[11:12:01] <afidegnum> How do i parse an lxml tree using recursion? https://replit.com/@alexandropov/DomTreeParsing?v=1
[11:13:30] *** Joins: y1n (~y1n@91.141.65.13.wireless.dyn.drei.com)
[11:14:13] *** Joins: RiFo (~RiFo@user/rifo)
[11:18:37] *** Joins: djapo (~archangel@user/djapo)
[11:19:13] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:23:14] <BrenBarn> did you read the documentation for getiterator?
[11:23:54] *** Joins: rendar (~rendar@user/rendar)
[11:24:47] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[11:25:07] *** Quits: rendar (~rendar@user/rendar) (Client Quit)
[11:25:17] *** Joins: rendar (~rendar@user/rendar)
[11:26:48] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-58.poda.cz)
[11:27:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:28:34] <afidegnum> BrenBarn, getiterator supposed to traverse the tree i guess. but it does return only a single node
[11:28:43] <afidegnum> which i don't understand
[11:30:27] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[11:30:45] <afidegnum> I need to keep track of the of the node obtained so i can insert into the database
[11:31:14] *** Joins: Batzy (~quassel@user/batzy)
[11:31:31] <BrenBarn> I repeat: did you read the documentation for getiterator?
[11:31:41] <afidegnum> yes, i did
[11:31:56] *** Joins: kosh (~kosh@user/kosh)
[11:32:20] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[11:32:29] <BrenBarn> did you see that it says this:
[11:32:34] <BrenBarn> > Returns a sequence or iterator of all elements in the subtree in document order (depth first pre-order), starting with this element.
[11:32:47] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[11:33:16] *** Quits: Batzy_ (~quassel@user/batzy) (Ping timeout: 245 seconds)
[11:33:26] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:33:47] <afidegnum> how do i keep track of the nodes?
[11:34:06] <BrenBarn> did you see that it says this:
[11:34:08] <BrenBarn> > starting with this element
[11:34:32] <BrenBarn> Think about what that means when you call `node.getiterator()`?
[11:34:54] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[11:34:56] *** Quits: lukeaar (~lukeaar@45.132.224.72) (Ping timeout: 245 seconds)
[11:34:56] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 245 seconds)
[11:35:08] <afidegnum> it's returning the same element instead of traversing the tree
[11:35:31] <BrenBarn> that's right
[11:35:57] <BrenBarn> you don't need to use recursion at all if you use `getiterator`, because it already iterates over the *entire subtree*
[11:36:05] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[11:36:09] <BrenBarn> it's going to give you all the elements, not just the direct children
[11:36:23] *** Joins: palasso (~palasso@user/palasso)
[11:36:25] <afidegnum> oh ok,
[11:36:27] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[11:36:32] <afidegnum> what other alternative do you suggest?
[11:36:35] <BrenBarn> but if you want to recurse and do something separate at each "generation" I think you want `.iterchildren()`
[11:36:44] <BrenBarn> which is also right there in the documentation
[11:37:03] *** Quits: braxas (sid508886@lymington.irccloud.com) (Ping timeout: 264 seconds)
[11:37:21] <afidegnum> i'm asking this in relation to a question i posted in SO https://stackoverflow.com/questions/70060393/save-dom-tree-into-a-graph-database-connect-related-nodes
[11:37:25] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[11:38:05] <afidegnum> I wasn't able to connect the entire tree... i'm only able to join 2 nodes: the current node and its parent
[11:38:17] *** Joins: rany (~rany@user/rany)
[11:38:58] <afidegnum> using getiterator, I was able to loop and display the entire tree but wasn't able to pass in the related IDs
[11:39:18] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Max SendQ exceeded)
[11:39:27] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[11:39:56] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[11:40:03] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 264 seconds)
[11:40:03] *** Quits: TingPing (sid2800@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[11:40:04] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[11:40:21] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 268 seconds)
[11:40:39] *** Quits: ballingt (sid190590@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[11:40:45] *** Joins: jyu_s (~f0fz@122.11.212.234)
[11:40:46] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[11:41:51] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 264 seconds)
[11:41:55] *** Joins: raxor2k (~raxor2k@78.158.245.248)
[11:42:25] <raxor2k> is it better to have all functions "async def" then having some of them "async def" and some of them only "def" ?
[11:42:41] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[11:43:15] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[11:43:18] <supakeen> a function that doesn't await shouldn't be async.
[11:43:20] *** Joins: Evolver (sid32215@user/evolver)
[11:43:44] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[11:44:11] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[11:44:15] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 264 seconds)
[11:44:29] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[11:44:40] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 268 seconds)
[11:44:45] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[11:45:10] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:45:20] *** Joins: frodl (sid527064@user/frodl)
[11:45:21] <afidegnum> BrenBarn do you suggest to use getiterator first then iterchildren ?
[11:45:28] <afidegnum> or just iterchildren?
[11:45:29] <powftw> https://www.irccloud.com/pastebin/71xzMUt6
[11:45:50] <powftw> Can someone help to solve this
[11:46:03] *** Quits: Venhal (sid515085@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[11:46:33] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[11:46:55] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[11:47:20] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:47:22] *** Joins: Venhal (sid515085@id-515085.uxbridge.irccloud.com)
[11:47:26] *** Joins: df_data (sid466269@id-466269.ilkley.irccloud.com)
[11:47:43] *** Joins: VaniaPy (~VaniaPy@46.12.188.40.dsl.dyn.forthnet.gr)
[11:47:51] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 265 seconds)
[11:47:56] <powftw> https://www.irccloud.com/pastebin/4HA4OIJH
[11:48:53] <powftw> I have made this without list comprehension. It does work except I cannot put parentheses around keys
[11:49:00] <dav1d> powftw, [''.join(k) + (f'({v})' if v > 1 else '') for k,v in i.items()]
[11:49:07] *** Joins: CyDefect (~troll@213.55.226.140)
[11:49:48] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[11:51:30] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[11:51:58] *** Parts: pabs3 (~pabs3@user/pabs3) (Don't rest until the streets are paved in poems.)
[11:52:55] *** Joins: djapo (~archangel@user/djapo)
[11:53:10] *** Joins: tempate (~alpha@user/tempate)
[11:53:16] *** Quits: tempate (~alpha@user/tempate) (Client Quit)
[11:55:17] *** Quits: p-i-_ (~Ohmu@223.206.149.105) (Remote host closed the connection)
[11:55:28] <raxor2k> supakeen: ok but what if i want to multithread those normal functions?
[11:56:07] *** Joins: tempate (~alpha@user/tempate)
[11:56:15] <jinsun> asyncio.to_thread or loop.run_in_executor
[11:56:35] <supakeen> Mixing multithreading and asyncio is probably not the best of plans but if you were to do that they shouldn't be async defs either.
[11:57:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[11:57:50] *** Joins: lukeaar (~lukeaar@45.132.224.72)
[11:58:09] *** Joins: ammarsalmi (~ammarsalm@154.121.61.208)
[11:58:15] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:58:38] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th)
[11:58:43] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[11:58:51] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[11:59:01] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:59:05] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th)
[11:59:13] *** Quits: brontosaurusrex (~mua@user/brontosaurusrex) (Quit: WeeChat 3.0)
[12:00:20] <powftw> dav1d: that's cleaver
[12:00:37] <powftw> Can I put parentheses around keys?
[12:00:41] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[12:00:45] <powftw> (ab)
[12:00:51] <powftw> And so..
[12:00:55] <dav1d> powftw, sure
[12:01:15] *** Joins: masoudd_ (~masoudd@user/masoudd)
[12:01:22] <powftw> I put a join(k)+')'
[12:01:33] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[12:01:41] <powftw> Which made upto ab) but missing opening parentheses
[12:02:17] <raxor2k> jinsun: you was taling to me there, right?
[12:02:25] <raxor2k> supakeen: so what would you do in this case then?
[12:02:30] <dav1d> powftw, ['({}){}'.format(''.join(k), f'({v})' if v > 1 else '') for k,v in i.items()]
[12:03:01] <dav1d> powftw, you can also just do '(' + ''.join(k) + ')' + ....
[12:04:03] *** Quits: afidegnum (~user@102.176.94.200) (Remote host closed the connection)
[12:04:06] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 245 seconds)
[12:04:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:04:50] <jinsun> raxor2k: yes, those are the ways to run normal non-async defs with asyncio, just converting them to async def will "work" but won't multithread them, it will just block your event loop
[12:05:00] *** Joins: afidegnum (~user@102.176.94.200)
[12:05:09] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:05:29] <p-i-> `from pycurl import Curl` gives "ImportError: pycurl: libcurl link-time version (7.64.1) is older than compile-time version (7.77.0)"
[12:05:41] *** Joins: seednode (~seednode@user/seednode)
[12:05:47] <p-i-> But `brew list curl` shows /usr/local/Cellar/curl/7.79.1_1/bin/curl
[12:05:57] <p-i-> wtf
[12:06:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:06:07] <p-i-> I got 3 different versions referenced there
[12:06:10] <powftw> If value of key is greater than one, then parentheses are fine.
[12:06:15] <powftw> dav1d: can I NOT put parentheses around keys if value is ==1
[12:06:16] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[12:06:26] <powftw> Is that possible?
[12:06:45] <raxor2k> jinsun: thank you, i will read more about them. You giving me some hope now
[12:08:06] <p-i-> `which curl` reports /usr/bin/curl which isn't a symlink
[12:08:12] <powftw> dav1d: is that possible?
[12:08:40] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[12:08:43] <p-i-> So it appears `pip install pycurl` is failing to reference the newer curl installed by homebrew
[12:08:51] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[12:09:13] <powftw> tbh, list comprehension isn't comfortable to me for things you sent above yet . Will work on it..
[12:10:32] <aphysically> whoa naming things so they have an even distribution of name lengths sounds fun
[12:10:34] <dav1d> powftw, [f'({"".join(k)})({v})' if v > 1 else f'{"".join(k)}' for k,v in i.items()] ?
[12:10:34] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 268 seconds)
[12:10:50] <grawity> ["".join(k) + (f"({v})" if v>1 else "") for k,v in i.items()]
[12:10:57] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:10:59] <grawity> why make it ugly :(
[12:11:01] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:11:03] <dav1d> powftw, honestly, the formatting part should be in a separate function: [fmt(k, v) for k,v in i.items()]
[12:11:06] *** Joins: greedom (~greedom@dynamic-046-114-002-077.46.114.pool.telefonica.de)
[12:11:29] <ammarsalmi> Hi, when you create dict with the dict(key='Value') python will not accept numbers as keys. And will give you a confusing error message about expression cannot contain assignment.
[12:11:52] <grawity> yes, so if you need numbers as keys, use {} literals instead of dict()
[12:11:57] <grawity> as in {123: "value"}
[12:11:58] <p-i-> ammarsalmi: dict({1:2})
[12:12:00] <jinsun> aphysically: are you using strlen as hash function like php :D
[12:12:09] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[12:12:23] <grawity> though if you need it in this situation, dict() also takes pairs, e.g. dict([(123, "value"), (456, "other value")])
[12:12:23] <aphysically> I just read about that yeah :D
[12:12:28] <p-i-> ammarsalmi: It's likely because dict c'tor unpacks **kwargs
[12:12:56] <powftw> grawity: can you write the same without list comprehension?
[12:13:03] <powftw> To understand well
[12:13:04] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[12:13:10] <lethu> Hello all, in the following python script from line 48 onwards I don't know what I am doing wrong, can somebody take a look at it and tell me the right way of writting this code please? https://bpa.st/M42A
[12:13:12] <p-i-> oops, wait, why even use dict(...) at all? Why not just {1:2, 3:'four'}?
[12:13:22] <grawity> powftw: result=[]; for k,v in i.items: result.append(".join(k) + (f"({v})" if v>1 else ""))
[12:13:43] <grawity> pretend I wrote i.items() there
[12:13:46] <ammarsalmi> p-i-, I'm expermenting. To see how python will react to numbers without quotes. :D
[12:14:12] <lethu> it's just an exercise I made to learn to code python
[12:14:35] <wyre> don't I need to use open() method when using rs485? https://pyserial.readthedocs.io/en/latest/pyserial_api.html#serial.rs485.RS485
[12:14:46] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--3e9.oracle-ocna.com) (Read error: Connection reset by peer)
[12:14:53] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:15:39] <grawity> hmm I wonder how python 10 reacts to dict(123=45)
[12:15:40] <p-i-> ammarsalmi: dict(...) is invoking a Python function with unknown arguments. Internally it will be like `def f(**kwargs):` (and now kwargs is a dict). You can only pass valid variable names as args into a function, and 1 isn't a valid variable name.
[12:15:54] *** Quits: eliss (~eliss@pool-96-238-11-235.prvdri.fios.verizon.net) (Quit: Leaving)
[12:16:01] <grawity> I think it had better syntaxerror messages
[12:16:12] <powftw> grawity: thank you so much
[12:16:15] <p-i-> (I think,... I'm sure I will be corrected if I'm wrong)
[12:16:22] <powftw> dav1d: thank you very much, man
[12:16:30] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[12:16:39] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:17:18] <dav1d> powftw, no worries, it's a bit messy, if you wanna work on it, try moving the formatting of "k,v" into its own function
[12:18:09] <jinsun> p-i-: invalid variable names are allowed actually in kwargs, as long as they are str
[12:18:10] *** Joins: shad (~shad@user/shad)
[12:19:10] <grawity> yeah but you can't pass them directly (as in foo(â¥=bar)), only through the same ** expansion
[12:19:19] <raxor2k> jinsun: https://bpa.st/TVVA
[12:20:12] <grawity> lethu: not sure why you have the extra 'if (i < service)' check in line 30
[12:20:28] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 260 seconds)
[12:20:31] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[12:20:39] <grawity> I mean range(service) is already going to be [0, service)
[12:20:57] <lethu> grawity, thanks for your time, will check right now
[12:21:11] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[12:21:43] <p-i-> Is there a .ipynb pastebin anywhere for Python pastes? Would be kinda neat if there was...
[12:22:00] <grawity> lethu: in line 43, it would be simpler to use `if not (choice in menu):` or more commonly `if choice not in menu:`
[12:22:32] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:22:43] <grawity> lethu: and in 50 & 55, the 'while' ... 'n = n+1' seems completely redundant with what the 'for in range' loop already does
[12:23:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[12:23:29] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[12:23:52] <jinsun> raxor2k: dunno much about fastapi or mysql or websocket
[12:24:06] <grawity> the rest seems fine, as in "there are simpler ways to do some things but this will do the job as well"
[12:25:25] <jinsun> p-i-: github can render them I think even from gists, and there is google colab, dunno if any anonymous one exists
[12:25:32] <lethu> thanks grawity, will check this all out, much appreciated!
[12:26:34] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[12:27:29] <grawity> e.g. some ()s are redundant (like 'n < (len(foo))' should be just 'n < len(foo)'), the increment 'n = n+1' can be written as 'n += 1', print() accepts multiple values which can be simpler than str()...
[12:28:42] <lethu> nice grawity thanks
[12:28:43] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:29:14] <grawity> oh yeah, also, the whole part in lines 48-51-52 doesn't quite make sense, it feels like you wanted to update an existing dict (add more data on every iteration), instead of replacing the whole thing?
[12:29:55] *** Joins: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net)
[12:29:56] <lethu> grawity, not replace but rather append
[12:30:06] <lethu> grawity, at least my intent
[12:30:27] <grawity> right so I think you wanted 'orders_dict[menu[n]] = invitee' or something like that
[12:31:01] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Remote host closed the connection)
[12:31:07] <lethu> grawity, that seems more like it, will take this into consideration
[12:31:22] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[12:31:42] <grawity> (though in recent python, dicts can be extended using |=, so 'orders_dict |= {menu[n]: invitee}' would achieve the same thing, but probably unnecessarily fancy)
[12:32:59] *** Quits: greedom (~greedom@dynamic-046-114-002-077.46.114.pool.telefonica.de) (Remote host closed the connection)
[12:33:42] <lethu> grawity, I will try perhaps fanciness shouldn't pose a problem
[12:34:09] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:34:12] <p-i-> https://bpa.st/KMQA <-- can anyone see why ipython cannot see pycurl? I just installed it!
[12:34:38] *** masoudd_ is now known as masoudd
[12:34:50] <lethu> grawity, even tho it might be overkill
[12:35:26] <grawity> I don't think |= is overkill, necessarily, just that "get the logic working" is higher priority
[12:35:31] <parv> (That's an OR operation seemingly, with set as more natural operands. Then again a += op I would have preferred as is the case with lists)
[12:35:40] <lethu> grawity, I see
[12:36:15] <lethu> grawity, something along the lines of "the zen of python"
[12:36:23] <grawity> regarding prints, what I meant is that you can do print("So you are bringing", names, "with you")
[12:36:39] <bookworm> p-i-: you didn't install ipython, you are using the libs installed from your ipython installation
[12:36:40] <lethu> grawity, gotcha
[12:36:56] <grawity> parv: I guess += would've been slightly better but at least there's precedent with sets also using |= {foo, bar}
[12:36:57] <bookworm> aka venv python is not the same python as ipython
[12:37:11] <p-i-> "UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv." ... but I just did that! I just did `pip install ipython; which ipython` and it gives /Users/pi/curlfail/.venv/bin/ipython
[12:37:26] <p-i-> Now I run `ipython`, but I STILL get the warning
[12:37:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:38:01] *** Joins: mikeliuk (~mikeliuk@213.205.198.174)
[12:38:45] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:38:45] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:38:51] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[12:39:00] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:39:03] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:39:11] <grawity> lethu: in other situations, it's more common to see f-strings (or %-formatting), e.g. print(f"You are bringing {names} with you"), this will also str() implicitly
[12:39:22] *** Joins: sus (zero@user/zeromomentum)
[12:39:34] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[12:39:50] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[12:40:39] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:40:48] <p-i-> oohkaay so `sys.executable` still reports /usr/local/opt/python@3.9/bin/python3.9 when I run ipython, even though I just did `pip install ipython` with my .venv activated, and `which ipython` reports correctly as /Users/pi/curlfail/.venv/bin/ipython
[12:40:56] *** Quits: drogas (~drogas@jump2.jet.uk) (Client Quit)
[12:40:56] <p-i-> grrrrrreat
[12:41:16] *** Joins: lethu (~lethu@user/lethu)
[12:41:16] <grawity> be sure to do `hash -r` to clear bash's $PATH lookup cache
[12:41:22] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[12:41:28] *** Quits: jyu_s (~f0fz@122.11.212.234) (Remote host closed the connection)
[12:41:43] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:42:05] <p-i-> !
[12:42:11] <p-i-> `hash -r` fixes
[12:42:15] <lethu> grawity, sorry desktop was acting had to log out
[12:42:16] <p-i-> tx
[12:42:33] <lethu> grawity, got your last message tho
[12:42:37] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[12:43:48] *** Parts: VaniaPy (~VaniaPy@46.12.188.40.dsl.dyn.forthnet.gr) ()
[12:44:36] *** Joins: delvian (~delvian@41.13.246.202)
[12:44:46] *** dcaro_away is now known as dcaro
[12:44:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[12:44:54] *** Quits: betuxy (~betuxy@p579ad707.dip0.t-ipconnect.de) (Quit: Connection closed)
[12:47:00] *** Quits: bn_work (uid268505@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:47:01] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[12:47:43] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:48:20] *** Quits: givemeyourpies (givemeyour@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:49:45] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[12:50:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:52:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[12:53:37] *** Joins: lethu (~lethu@user/lethu)
[12:53:46] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[12:54:02] *** Joins: fikran (~fikran@user/fikran)
[12:54:11] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:55:05] *** Joins: goldfish (~goldfish@user/goldfish)
[12:55:22] *** Joins: niv (~niv@limbo.cypherpunks.io)
[12:55:35] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[12:55:46] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 245 seconds)
[12:56:11] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 245 seconds)
[12:57:03] *** Joins: jyu_s (~f0fz@122.11.212.234)
[12:57:49] *** Joins: Evolver (sid32215@user/evolver)
[12:57:50] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[12:58:10] <p-i-> https://gist.github.com/vidakDK/de86d751751b355ed3b26d69ecdbdb99#gistcomment-3971555 <-- can anyone see a path through this? Looks like a lot of devs are hitting up against this within the last month.
[12:58:25] <p-i-> "ImportError: pycurl: libcurl link-time version (7.64.1) is older than compile-time version (7.80.0)"
[12:58:27] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:59:15] *** Quits: afidegnum (~user@102.176.94.200) (Ping timeout: 264 seconds)
[12:59:57] *** Joins: comet23 (uid528492@user/comet23)
[12:59:58] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[13:02:15] *** Quits: lukeaar (~lukeaar@45.132.224.72) (Ping timeout: 264 seconds)
[13:03:03] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[13:03:53] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:03:56] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[13:03:57] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[13:04:06] *** Quits: mage (~julien@orval.bbpf.belspo.be) (Ping timeout: 260 seconds)
[13:04:52] *** Joins: arinov (~arinov@77.67.129.200)
[13:06:35] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[13:06:53] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:07:16] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:08:19] *** Joins: jyu_s (~f0fz@122.11.212.234)
[13:08:49] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:09:02] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[13:09:16] *** Joins: mcope (~matt@user/mcope)
[13:10:39] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[13:11:44] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:45] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[13:15:33] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:16:17] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[13:16:44] *** Joins: Geronimo (~Geronimo@user/geronimo)
[13:17:02] *** Quits: chromis (sid150893@tinside.irccloud.com) (Ping timeout: 240 seconds)
[13:17:15] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[13:17:15] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 264 seconds)
[13:17:26] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 245 seconds)
[13:18:05] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[13:18:19] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[13:18:33] *** Joins: jyu_s (~f0fz@122.11.212.234)
[13:18:44] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[13:18:58] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[13:19:28] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: bye)
[13:19:54] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[13:20:14] *** Joins: bjs (sid190364@user/bjs)
[13:20:33] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:20:39] *** Joins: dav1d (~dav1d@user/dav1d)
[13:20:57] *** Joins: saltysoul (~sebmont@user/sebmont)
[13:24:04] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[13:24:57] *** Joins: logithack (~logithack@p200300cfbf3b2700f0d5250f219bed4b.dip0.t-ipconnect.de)
[13:26:08] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:27:35] <logithack> I'm trying to collect a number of checks to perform in a class. A simple way to do it would be this: https://bpa.st/6WBA However, you would end up with lots of repetitions for each check. Any ideas how this could be implemented more neatly?
[13:28:36] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[13:28:46] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[13:28:54] <logithack> repetitions meaning repeating yourself by typing the same things over and over again
[13:30:36] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[13:30:59] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:32:44] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:01] *** Quits: delvian (~delvian@41.13.246.202) (Quit: Leaving)
[13:34:15] *** Joins: jyu_s (~f0fz@122.11.212.234)
[13:34:26] *** Joins: bloody (~bloody@user/bloody)
[13:34:56] *** Quits: manuels (~manuel@80.211.205.88) (Quit: The Lounge - https://thelounge.chat)
[13:35:07] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[13:35:16] *** Joins: manuels (~manuel@80.211.205.88)
[13:37:22] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[13:37:53] <nedbat> logithack: you haven't shown what the code would really be in check_A and check_B, so it's hard to know how to fold them together
[13:38:01] *** Joins: jyu_s (~f0fz@122.11.212.234)
[13:38:30] *** Quits: davef (sid287421@user/davef) ()
[13:38:56] *** Joins: davef (sid287421@user/davef)
[13:39:19] *** Joins: delvian (~delvian@41.13.246.202)
[13:39:23] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 268 seconds)
[13:39:35] *** Joins: guenhael (~Thunderbi@193.52.208.30)
[13:40:04] *** Joins: sreve (~quassel@p4ff44975.dip0.t-ipconnect.de)
[13:41:03] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th) (Quit: Leaving...)
[13:41:21] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[13:41:32] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[13:42:35] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se)
[13:42:58] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[13:42:59] *** Joins: afidegnum (~user@41.66.202.47)
[13:43:10] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:43:30] *** Quits: newpy (~newpy@2601:280:4381:1390:4584:88f3:53fe:a33b) (Quit: Leaving)
[13:44:09] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[13:44:33] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se) (Client Quit)
[13:44:57] <sreve> Hi. Does someone know an api to process openapi-definitions? I don't mean code generation tools. I am looking for some converter from json/yaml-files to a python-object. I want to extract the components (paths/schemas/...).
[13:44:59] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se)
[13:45:50] *** Joins: chilversc (~chilversc@user/chilversc)
[13:50:20] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (Quit: dv^_^)
[13:50:32] *** Quits: gitly (~gitly@148.252.128.154) (Ping timeout: 260 seconds)
[13:51:10] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:f173:981d:781e:bf48)
[13:52:11] *** Joins: gitly (~gitly@85.255.236.154)
[13:52:51] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[13:55:23] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (Client Quit)
[13:56:25] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[13:57:22] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:57:44] <wyre> how can I get b'\x03\x01' from '0301' string?
[13:58:01] <wyre> .encode() gives b'0301'
[13:58:12] <Repiphany> bytes.fromhex('0301')
[13:58:25] *** Joins: jinsun__ (~quassel@user/jinsun)
[13:58:55] *** Quits: gitly (~gitly@85.255.236.154) (Ping timeout: 256 seconds)
[14:00:30] *** Joins: gitly (~gitly@185.69.144.123)
[14:00:43] *** Joins: p-i- (~Ohmu@223.206.149.105)
[14:01:39] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[14:05:36] *** aoei\Chickatrice is now known as Rust\Chickatrice
[14:06:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:07:20] *** Joins: savolla (~Guest5@84.44.28.28)
[14:08:19] <savolla> Hi guys, I asked this question on ##machinelearning but also wanted to ask here. I'm trying to build a forecasting application with python. I'm using univariate time series algorithm there. But It's not working as expected. I created a data pattern just to see if it's gonna predict the next element. My pattern consists of 23 numbers. all different.
[14:08:19] <savolla> I copyed and pasted the same number sequence like 150k times and led the algorithm learn for like 20 minutes. The result is not correct! Do you guys have any idea why the machine learning model cannot see the pattern? Any little help will be so helpful. I'm new to this field. thank you!
[14:10:04] *** Quits: mikeliuk (~mikeliuk@213.205.198.174) (Quit: Ping timeout (120 seconds))
[14:12:40] <Swayze> have you tested with diff patterns?
[14:12:54] <Swayze> something more like 'aaabbccccdddee' where the letters / numbers repet
[14:13:01] <Swayze> perhaps 23 is too big
[14:13:09] *** Joins: Naan (~Naan@user/naan)
[14:13:12] <Swayze> just to see wht kind of predictions you get
[14:16:42] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[14:16:45] *** Quits: Linux77 (~Linux7_7@186.233.179.193) (Quit: Leaving)
[14:17:43] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[14:18:04] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[14:18:19] *** Joins: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it)
[14:22:26] <savolla> Swayze thanks for reply but I didn't try it with diff patterns. here is a precise example to explain what I do here; first I have this pattern like [1,6,32,8]. now I add the same pattern again and again like [1,6,32,8,1,6,32,8,1,6,32,?]. I added the question mark at the end. this is what the AI should find. it's 8 as you can see. now I added the
[14:22:26] <savolla> same pattern consecutively for 150.000 and led the ai learn this pattern but it is still predicting the wrong number. Maybe there is another algorithm or solution? Or the machine learning approach is not suitable for this kind of problem?
[14:22:29] *** Quits: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it) (Client Quit)
[14:22:32] *** Joins: koziad (~koz@user/koziad/x-1285628)
[14:23:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:23:46] *** Quits: logithack (~logithack@p200300cfbf3b2700f0d5250f219bed4b.dip0.t-ipconnect.de) (Quit: Leaving)
[14:24:34] <ammarsalmi> a little python puzzle: with one line, single loop using dict comprehension demonstrate that the latest assignment to a key will overright the previous ones. It's a given but the puzzle is in proving it with one line and single loop.
[14:24:54] <Swayze> i do understand what you're trying to do but testing the way i asked is a step closer to understanding why it may or may not be working
[14:25:00] <Swayze> in my humble opinion
[14:25:03] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se) (Ping timeout: 264 seconds)
[14:25:07] <Swayze> try a smaller repetitive sample first
[14:25:23] <Swayze> [1,2,2,3,3,3,4,4,4,4]
[14:26:37] <savolla> Okay I'll try that in a second. Thank you!
[14:28:07] *** Joins: Klinda (~superleag@user/klinda)
[14:28:42] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 268 seconds)
[14:29:09] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:29:27] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:29:51] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--628.oracle-ocna.com)
[14:29:56] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 268 seconds)
[14:30:42] *** Joins: chenqisu1 (~chenqisu1@183.217.201.124)
[14:30:48] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:31:17] *** Quits: chenqisu1 (~chenqisu1@183.217.201.124) (Max SendQ exceeded)
[14:32:44] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[14:32:46] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[14:32:49] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:33:02] *** Joins: ham5urg (~ham5urg@p200300d167387400ad9095523aad4ec1.dip0.t-ipconnect.de)
[14:33:16] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 245 seconds)
[14:33:17] *** ayusta is now known as ayustae
[14:33:27] *** Quits: gitly (~gitly@185.69.144.123) (Ping timeout: 264 seconds)
[14:33:32] <wyre> why I cannot get the bytestring from an arbitrarily long string? https://bpa.st/BSWQ
[14:34:10] <leduyquang753> You are having an odd number of hex digits.
[14:34:34] <wyre> ohh, sure, leduyquang753 thank you ð
[14:35:20] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[14:35:29] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[14:35:32] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[14:36:10] <savolla> Swayze I tryed it with smaller squence but it's still givng me wrong answer
[14:36:47] <ham5urg> I want to get every n-th index of a list. My goal is to iterate over every n-th element but to access n+1-element too.
[14:37:05] <ham5urg> How to get that in a short manner?
[14:37:24] <ham5urg> n-th index != n-th element
[14:37:53] *** Joins: jyu_s (~f0fz@122.11.212.234)
[14:38:08] *** Joins: julia (~quassel@user/julia)
[14:38:13] <leduyquang753> I would make a generator for the indices.
[14:39:01] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:39:58] *** Joins: gitly (~gitly@85.255.235.212)
[14:40:02] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[14:40:04] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[14:40:14] *** Quits: schumaml (~schumaml@p200300e2ef31de0053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:42:04] *** Joins: schumaml (~schumaml@p4ff9166e.dip0.t-ipconnect.de)
[14:42:16] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[14:42:46] <nedbat> ham5urg: what does this mean:  n-th index != n-th element ?
[14:42:47] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[14:43:10] <nedbat> ham5urg: you want 0, n, 2n, 3n, etc i see
[14:43:28] <ham5urg> nedbat, just a hint that I look for indices, not values.
[14:43:29] <nedbat> ham5urg: for i in range(0, len(the_list), n):
[14:43:39] <ham5urg> Thanks
[14:43:57] <leduyquang753> "but to access n+1-element too."
[14:44:13] <nedbat> leduyquang753: i+1
[14:44:57] <leduyquang753> That would require duplicating the access code.
[14:46:22] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 260 seconds)
[14:46:24] <nedbat> leduyquang753: i don't know what the access code would look like, so idk if it's a problem. do you have another suggestion?
[14:46:43] <leduyquang753> > I would make a generator for the indices.
[14:48:05] <nedbat> leduyquang753: i interpreted the question as meaning, I need n and n+1 as a pair, but i really don't know
[14:49:22] *** Quits: raxor2k (~raxor2k@78.158.245.248) (Remote host closed the connection)
[14:52:10] <deniska> ham5urg: if your python is new enough there's that https://docs.python.org/3/library/itertools.html#itertools.pairwise which you can combine with enumerate if you actually need the indices
[14:53:07] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[14:53:49] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[14:54:32] *** Joins: kosh (~kosh@user/kosh)
[14:55:19] *** Joins: jyu_s (~f0fz@122.11.212.234)
[14:55:20] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[14:56:24] <f8e4> i want to install a pypi pkg, but not have deps hang in global python installtion. so venv and how to expose an entrypoint in the shell of said pkg?
[14:56:47] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[14:57:03] <Yhg1s> f8e4: what does 'the shell of said pkg' mean?
[14:57:10] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[14:58:42] <supakeen> Depending on your usecase (say, a cli tool you want to always have available as your user) `pip --user` might be what you like?
[14:58:43] <nedbat> i added tp_traverse and tp_clear to my C extension, and added the HAVE_GC flag: https://github.com/nedbat/coveragepy/blob/nedbat/bug1283/coverage/ctracer/tracer.c#L123-L141  but it still leaks cycles
[14:59:13] <Yhg1s> oh, if you just mean 'I want to install a package with an entrypoint, in a venv'? That'll just work. You may want pipx? I'm not sure.
[14:59:19] <nedbat> the instructions say to use PyObject_GC_New, but I never allocate the memory for my object in the first place, so I'm confused.
[15:00:10] <Yhg1s> nedbat: do the leaked cycles show up in gc.garbage?
[15:00:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:01:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:01:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:01:46] *** Joins: jyu_s (~f0fz@122.11.212.234)
[15:01:50] <Yhg1s> nedbat: I notice you decref a lot more things in dealloc than you visit/clear.
[15:02:07] <nedbat> Yhg1s: they show up in this test: https://github.com/nedbat/coveragepy/blob/nedbat/bug1283/tests/test_oddball.py#L194-L233 , which I got from a bug report by psycopg
[15:02:26] <nedbat> Yhg1s: i only added the two attributes to visit/clear that can be cycles.  the others are strings/bools
[15:02:37] <nedbat> Yhg1s: the leaks are bound methods
[15:03:22] *** Joins: fikran (~fikran@user/fikran)
[15:03:52] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[15:04:28] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 268 seconds)
[15:04:37] <nedbat> Yhg1s: if I don't use PyObject_GC_New, when should I use PyObject_GC_Track, or I don't have to?
[15:04:43] <Yhg1s> Okay, but are the cycles showing up in gc.garbage? :) If they aren't, Python doesn't realise it's part of a cycle, which means something in the cycle doesn't implement tp_traverse, or doesn't visit the right things in its tp_traverse.
[15:04:51] <Yhg1s> nedbat: you don't have to.
[15:07:49] <nedbat> Yhg1s: gc.garbage is empty
[15:08:07] *** Joins: Elodin (~weechat@user/elodin)
[15:08:11] <nedbat> Yhg1s: which confirms my extension is not doing something right, yes?
[15:08:42] <Yhg1s> It suggets that, yes.
[15:08:46] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[15:09:03] <Yhg1s> something else could also be disrupting it, but since you only use builtin types, it shouldn't.
[15:09:21] <Yhg1s> Are the threads in your reproducer important?
[15:09:41] <nedbat> Yhg1s: yes. because each thread starts a new CTracer
[15:10:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[15:10:16] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:10:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:10:37] <Yhg1s> I'm just wondering if the leak is actually there. Something holding a reference to the CTracers when it shouldn't, or without being traversable by the cyclic-G
[15:10:40] <Yhg1s> GC.
[15:11:41] <Yhg1s> I don't see anything wrong with your fix, even though it doesn't work. Leaving tp_alloc/tp_free/tp_del/etc empty is fine for GC objects, as PyType_Ready() will fill them in with the GC versions if you have HAVE_GC set
[15:12:58] <nedbat> Yhg1s: a separate question: I got this pattern from a doc someplace, but why do this?  https://github.com/nedbat/coveragepy/blob/nedbat/bug1283/coverage/ctracer/module.c#L39  Why not init tp_new in the C struct initializer?
[15:13:46] <Yhg1s> Even if it didn't, the GC tracking is only important for the *start* of GC tracing. If everything pointing to your objects is going to be GC-tracked itself, it doesn't matter if your type is (but you still have to implement tp_traverse)
[15:14:15] <f8e4> how do expose an entrypoint in a venv globally, eg in terminal
[15:14:17] <Yhg1s> nedbat: I don't know why that pattern exists.
[15:14:47] <Yhg1s> f8e4: set PATH to include your virtualenv's bin directory, or add a symlink to the binary you want to expose to a directory already in PATH (like ~/bin), or use pipx.
[15:15:01] <Yhg1s> nedbat: I can take a closer look at the leak if you want, if I can reproduce it locally.
[15:15:16] <nedbat> Yhg1s: one sec.
[15:15:34] <nedbat> Yhg1s: let me clean out a little of the extra debugging weirdness
[15:16:04] <Yhg1s> yeah, wouldn't want that to get in the way of my own extra debugging weirdness.
[15:16:57] <f8e4> folks, you like foo_bar or foo-bar ?
[15:17:28] *** Parts: afidegnum (~user@41.66.202.47) (ERC (IRC client for Emacs 27.2))
[15:17:44] <supakeen> One is a valid identifier and one is subtracting two identifiers.
[15:17:53] <supakeen> I like subtracting things so let me pick option B please.
[15:20:54] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 260 seconds)
[15:21:00] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:21:26] <nedbat> Yhg1s: https://gist.github.com/nedbat/b66eb23a11b63c9e0a2d9eb5b293e9e5
[15:21:27] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[15:21:28] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[15:21:36] *** Joins: luigibu (~luigi@80.30.201.209)
[15:22:47] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[15:23:00] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[15:23:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[15:24:58] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[15:25:25] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se)
[15:25:46] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--628.oracle-ocna.com) (Ping timeout: 245 seconds)
[15:26:27] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[15:28:18] *** Joins: cruncher (~cruncher@90.68.118.49)
[15:28:20] *** Joins: jyu_s (~f0fz@122.11.212.234)
[15:28:24] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[15:28:27] *** Quits: guenhael (~Thunderbi@193.52.208.30) (Ping timeout: 256 seconds)
[15:28:39] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[15:29:51] *** Joins: jyu_s (~f0fz@122.11.212.234)
[15:29:56] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[15:30:42] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[15:30:43] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 256 seconds)
[15:30:59] <nedbat> Yhg1s: btw, my understanding of the cycle is that CTracer has references to bound methods from Collector, which reference Collector, and Collector has a reference to the CTracer objects (in a list)
[15:31:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:31:13] *** Joins: blei (~blei@209.201.38.106)
[15:31:13] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[15:31:27] *** Joins: Axy (~Axy@user/axy)
[15:31:32] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[15:31:39] <blei> good morning. on debian buster, I did a custom compile / altinstall of python3.10 to the system. how do I now install packages for this python using pip?
[15:31:47] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[15:32:43] <grym> blei: the/full/altinatall/path/to/python -m pip
[15:33:16] *** Joins: greknod28 (~grek@120.88.171.98)
[15:33:24] <blei> thanks
[15:34:19] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[15:34:27] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:35:27] *** Joins: Batzy_ (~quassel@user/batzy)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:39] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 264 seconds)
[15:38:50] *** Joins: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it)
[15:39:14] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:39:34] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:40:06] <grym> wyre: b'foo'.decode()
[15:41:56] <ham5urg> Is it possible to run pathlib.with_name() in a dry-run?
[15:42:14] *** Joins: jyu_s (~f0fz@122.11.212.234)
[15:43:03] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 264 seconds)
[15:43:13] <nedbat> ham5urg: it doesn't change anything real, so what do you mean by dry-run?
[15:43:25] *** Joins: Batzy (~quassel@user/batzy)
[15:44:10] *** Joins: mcope (~matt@user/mcope)
[15:44:11] <ham5urg> nedbat, ahh, yes, now I see. I believed first it does a renaming.
[15:44:55] *** Joins: luigibu (~luigi@80.30.201.209)
[15:44:56] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[15:45:10] *** Quits: Batzy_ (~quassel@user/batzy) (Ping timeout: 268 seconds)
[15:45:44] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[15:45:55] *** Quits: _slate_ (~slate@2a01:4f8:c0c:f0a9::1) (Quit: quit)
[15:48:20] *** Joins: spuz (~spuz@213.129.88.97)
[15:48:27] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:49:16] <spuz> how is possible that 'foo' in dir(obj) returns False, but hasattr(obj, 'foo') returns True? How can I get the attributes of "obj" such that it returns 'foo' in its list?
[15:49:32] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[15:50:00] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:50:35] <Yhg1s> nedbat: wouldn't it be easy to recreate the cycle without threads, if that were the case?
[15:50:40] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[15:50:44] <grawity> spuz: objects can implement dynamic __hasattr__() and __getattr__() (and setattr)
[15:50:47] *** Joins: Batzy_ (~quassel@user/batzy)
[15:50:57] *** Joins: Cienisty (Cienisty@user/cienisty)
[15:51:43] <nedbat> Yhg1s: i see what you mean. i think it could be because the test is doing a delta, and creating the thread is what puts a CTracer.new() inside the delta?
[15:52:14] <grawity> spuz: this means the list of attributes may not necessarily be possible to obtain, or even finite
[15:52:19] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[15:52:36] <spuz> grawity interesting, thanks
[15:52:49] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 256 seconds)
[15:53:26] <grawity> e.g. an RPC "proxy" object might have a __getattr__() that dynamically returns a wrapper function for any API method, without knowing whether that method is valid or not
[15:53:44] *** Quits: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[15:53:47] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[15:54:37] *** Joins: mcope (~matt@user/mcope)
[15:54:48] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[15:56:32] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[15:56:34] <Yhg1s> nedbat: in any case, your tp_traverse *is* being called. tp_clear isn't getting called, but that isn't surprising (it would only be called if it would otherwise end up in gc.garbage)
[15:56:56] <Yhg1s> nedbat: so I think it's really the case that you're not visiting all the things involved in this reference cycle, or something the GC module can't see is holding on to a reference.
[15:57:03] <Yhg1s> (like CPython itself)
[15:57:16] *** Joins: usr123 (~usr123@27.255.248.104)
[15:57:18] *** Joins: shad (~shad@user/shad)
[15:57:51] *** Joins: noord (~noord@user/noord)
[16:00:59] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[16:01:13] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[16:01:20] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[16:01:23] <bjs> spuz: what kind of object do you have? and what are you going to do with the list of attributes? maybe there is some way to get what you need
[16:01:24] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[16:02:15] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 264 seconds)
[16:02:15] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 264 seconds)
[16:02:15] *** rexbinary_ is now known as rexbinary
[16:02:20] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[16:02:33] *** Joins: menace (~someone@user/menace)
[16:02:36] <spuz> bjs, grawity's hint caused me to look at the source code of the object in question and it does in fact implement its own __getattr__ method. It's a runner.Context object from the behave library.
[16:03:30] <spuz> It's part of an acceptance test that passes around a single Context object to multiple steps and I wanted to see how the attributes had been affected by previous steps to see if the context already contained the information I needed
[16:03:45] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[16:04:12] <nedbat> Yhg1s: doesn't it seem unlikely that the problem is in CPython?
[16:05:15] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[16:05:21] <nedbat> Yhg1s: or maybe that isn't what you meant?
[16:05:30] *** Joins: mcope (~matt@user/mcope)
[16:06:16] <Yhg1s> nedbat: you should know by now you're not exactly in well-traipsed paths in CPython :)
[16:06:32] *** Joins: nomic (~nomic@185.217.117.248)
[16:06:50] <bjs> spuz: https://behave.readthedocs.io/en/stable/api.html#behave.runner.Context this thing?  It has some attributes (feature, tags, scenario, table etc) that might be useful to introspect what it has on it
[16:06:53] <Yhg1s> FWIW, I'm manually stepping through the runtime trying to find the cycle and counting references.
[16:07:02] *** Joins: luigibu (~luigi@80.30.201.209)
[16:07:02] <nedbat> Yhg1s: i appreciate it
[16:08:33] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:09:13] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[16:09:43] <spuz> bjs: yeah that's it. It's the custom attributes that I'm looking for. For example if previous steps set ctx.foo1 = "Hello", ctx.foo2= "Bye", then in a later step I'd like to see which attributes have been set. It's pretty tricky to do this without knowing the name of the attributes. Looking at the __getattr__ method implementation was enough to
[16:09:43] <spuz> help me find them.
[16:09:52] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[16:12:34] *** Joins: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it)
[16:13:32] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:17:18] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 260 seconds)
[16:17:33] *** Quits: m1dnight (~christoph@christophe.dev) (Quit: WeeChat 3.1)
[16:18:13] *** Joins: m1dnight (~christoph@christophe.dev)
[16:19:03] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[16:19:38] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[16:19:41] *** Joins: hifi (hifi@m.vi.fi)
[16:19:47] *** Joins: Linux77 (~Linux_77@186.233.179.193)
[16:19:57] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:20:35] *** Joins: onichomp (~onichomp@2806:264:4404:8309:b85d:681f:5d9a:d435)
[16:21:05] *** Joins: lukeaar (~lukeaar@45.132.224.31)
[16:23:26] *** Quits: y1n (~y1n@91.141.65.13.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[16:24:11] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:25:39] *** Quits: lukeaar (~lukeaar@45.132.224.31) (Ping timeout: 264 seconds)
[16:26:24] *** Joins: upsala (~zcb@185.213.155.232)
[16:26:35] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[16:27:45] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[16:28:00] <kosh> does anyone know of a method in numpy to turn an array into a running minimum of an array to [5,4,1,3,1,0] would turn into [5,4,1,1,1,0]  ?
[16:28:06] *** Joins: grooverman (~grooverma@177.102.119.40)
[16:28:51] *** Joins: legola (~legola@46.235.101.181)
[16:29:37] *** Joins: Arw- (~Arwalk@lfbn-dij-1-163-68.w109-215.abo.wanadoo.fr)
[16:30:21] *** Quits: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[16:30:55] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:31:30] *** Joins: thiras (~thiras@user/thiras)
[16:32:07] *** Joins: darksun (~darksun@user/darksun)
[16:32:35] *** Joins: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se)
[16:33:00] <Yhg1s> nedbat: it *looks* like something is leaking a reference to the list of cov._collector.tracers
[16:33:17] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:33:30] <Yhg1s> since its refcount is 5 but I can only find 2 references to it. Do you know if that list is passed to C code anywhere?
[16:33:33] <nedbat> Yhg1s: how do you determine that?  in my theory, that list is part of the cycle
[16:33:42] *** Quits: savolla (~Guest5@84.44.28.28) (Quit: Client closed)
[16:33:47] <jinsun__> kosh: np.minimum.accumulate
[16:33:50] <squid_game> how can I find "x" in d = "2\x009897"? I am trying "if "x" in d" or "if "\\x" in d", it doesn't work.
[16:34:03] *** jinsun__ is now known as jinsun
[16:34:11] <Yhg1s> nedbat: I used gc.get_referrers() to look at all the references to the tracer that referred to the bound methods that were leaking
[16:34:32] <Yhg1s> nedbat: and the list's refcount is 5, but the gc module can only find 2 references.
[16:34:47] <Yhg1s> (there's always 2 extra references, so one reference is missing.)
[16:35:07] <nedbat> Yhg1s: i don't share that list with the C code, but i iterate over it during starting and stopping
[16:35:09] <kosh> jinsun, wow thanks that does exactly what I wanted, I just did not find it when searching
[16:35:38] *** Joins: Syzygy (~Syzygy@dynamic-2l4rd2zuqbvmbdvecf-pd01.res.v6.highway.a1.net)
[16:36:27] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[16:36:42] <nedbat> squid_game: there is no x in that string.  the second character is \x00, a zero byte
[16:37:01] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:37:24] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:16] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[16:38:52] <Syzygy> I'm having a problem where my flask server seems to produce correct output, throws no errors, but when I actually query it, I receive an internal server error (500). Here's the relevant code, logs and REST query result in that order: https://bpa.st/PLCQ
[16:39:18] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 260 seconds)
[16:40:16] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[16:40:18] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[16:40:48] *** Joins: jyu_s (~f0fz@122.11.212.234)
[16:40:50] <nedbat> Syzygy: first thing you should do is add some error reporting to the server so that it shows you the full traceback for the 500 error
[16:41:00] *** Quits: delvian (~delvian@41.13.246.202) (Quit: Leaving)
[16:41:14] <Syzygy> nedbat, normally it shows errors, just in this case it doesn't.
[16:41:26] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:41:33] <nedbat> Syzygy: i would guess it's something wrong with your response that flask fails on
[16:42:00] <Syzygy> plus the logs show that both the response is valid and that the line right before return response is reached.
[16:42:01] <Yhg1s> nedbat: the iteration is in Python code, though, right?
[16:42:02] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[16:42:07] <nedbat> Yhg1s: yes
[16:42:26] <squid_game> nedbat, I receive a string like this "2\x009897" from pyserial. I am trying to remove the part after the espace charachter, but " x in foo" sytax doesn't seem like it works. Can you give me a hint how I can do it?
[16:42:34] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[16:42:42] <nedbat> squid_game: try this:   "\x00" in foo
[16:42:49] *** Joins: Cienisty (Cienisty@user/cienisty)
[16:42:59] <nedbat> squid_game: "\x00" is one character.  len("\x00") == 1
[16:43:27] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:44:26] <ham5urg> Is there a way to invoke os.rename or os.replace with a dry-run possibility? I want to rename a lots of files and maybe there are some corrupt. I would like to test it before.
[16:44:27] <squid_game> nedbat, thanks "\x00" in worked :)
[16:44:42] *** Joins: jyu_s (~f0fz@122.11.212.234)
[16:45:50] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[16:46:24] *** Joins: delvian (~delvian@41.13.246.202)
[16:46:24] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[16:46:28] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[16:46:39] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Ping timeout: 264 seconds)
[16:47:26] *** Joins: swensson (~swensson@host-90-235-11-206.mobileonline.telia.com)
[16:48:06] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[16:48:21] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[16:48:40] *** Joins: iflema (~ian@user/iflema)
[16:49:25] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[16:50:00] *** Joins: rany (~rany@user/rany)
[16:50:39] *** Joins: jyu_s (~f0fz@122.11.212.234)
[16:50:40] <Yhg1s> nedbat: okay, so, a bit of progress: if I correctly visit all of your DataStacks, the gc module actually calls tp_clear on the CTracer. That suggests it did find a reference cycle and tried to clean it up.
[16:50:46] <Yhg1s> nedbat: unfortunately it doesn't fix your leak :P
[16:51:18] *** Joins: nyah (~nyah@94.6.71.219)
[16:51:21] <nedbat> Yhg1s: i didn't realize this would be so thorny
[16:51:43] *** Joins: luigibu (~luigi@80.30.201.209)
[16:52:05] *** Joins: fcjsx (~fcjsx@2800:a4:814:e100:61c3:84a5:312a:1abd)
[16:52:07] *** Quits: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se) (Remote host closed the connection)
[16:52:17] *** Quits: fcjsx (~fcjsx@2800:a4:814:e100:61c3:84a5:312a:1abd) (Remote host closed the connection)
[16:53:15] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 264 seconds)
[16:53:32] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[16:53:58] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[16:54:02] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[16:54:51] *** Parts: transhumanist (~hiken@2601:196:8800:35f0:f4a3:575c:c3bd:1db9) ()
[16:55:37] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[16:55:47] *** Quits: usr123 (~usr123@27.255.248.104) (Quit: Client closed)
[16:56:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:57:04] <Yhg1s> nedbat: yeah, I'm _pretty_ sure the CTracer's DataStacks are part of the reference cycle, and traversing/clearing them isn't entirely straight-forward.
[16:57:30] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[16:57:35] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[16:57:37] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 250 seconds)
[16:57:40] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 265 seconds)
[16:58:21] <zamba> what module should i use for creating an xml from different variables in python?
[16:58:24] *** Joins: bjs (sid190364@user/bjs)
[16:58:40] <nedbat> Yhg1s: the bug report i got from psycopg only checks for methods leaking, which is why the bound methods appear in the deltas.  I haven't understood yet why they only looked for them.
[16:58:44] *** Joins: luigibu (~luigi@80.30.201.209)
[16:59:01] *** Joins: frodl (sid527064@user/frodl)
[16:59:31] <nedbat> Yhg1s: https://github.com/nedbat/coveragepy/commit/3d40331d7148599258a018de15ac687b57eaaf7f#r60681533
[16:59:46] *** Joins: vukky (~vukky@wikipedia/vukky)
[16:59:46] *** Joins: jyu_s (~f0fz@122.11.212.234)
[17:00:05] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 265 seconds)
[17:00:11] *** Joins: e2m4n (~ezman@user/e2m4n)
[17:00:19] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:02:22] <Yhg1s> nedbat: probably just to get a handle on the things that leaked, since everything referenced by any of the things involved in the cycle will show up as leaks, even if they aren't *part* of the cycle.
[17:02:47] <nedbat> Yhg1s: right, so the fact that only the bound methods are in the delta could be a red herring
[17:04:48] *** Joins: lukeaar (~lukeaar@167-179-177-241.a7b3b1.bne.nbn.aussiebb.net)
[17:06:11] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[17:06:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:07:58] *** Joins: dez (uid92154@user/dez)
[17:08:11] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[17:08:47] *** Quits: CyDefect (~troll@213.55.226.140) (Ping timeout: 265 seconds)
[17:08:53] *** Quits: swensson (~swensson@host-90-235-11-206.mobileonline.telia.com) (Quit: Client closed)
[17:10:34] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[17:10:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[17:12:36] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:12:43] *** Joins: fikran (~fikran@user/fikran)
[17:13:28] *** Quits: onichomp (~onichomp@2806:264:4404:8309:b85d:681f:5d9a:d435) (Read error: Connection reset by peer)
[17:13:39] *** Joins: legola (~legola@46.235.101.181)
[17:14:06] *** Joins: onichomp (~onichomp@2806:264:4404:8309:b85d:681f:5d9a:d435)
[17:14:57] <rindolf> zamba: hi. lxml?
[17:15:12] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 268 seconds)
[17:15:12] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:15:54] *** Joins: EGH (~EGH@185.25.195.104)
[17:18:27] *** Quits: legola (~legola@46.235.101.181) (Ping timeout: 265 seconds)
[17:18:54] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[17:19:28] *** Joins: legola (~legola@46.235.101.181)
[17:20:07] <zamba> rindolf: thanks :)
[17:20:58] <rindolf> zamba: maybe search for 'xml writer'
[17:21:11] <rindolf> zamba: and - you're welcome
[17:23:10] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[17:23:18] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[17:23:37] *** Joins: Elodin (~weechat@user/elodin)
[17:23:50] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[17:23:53] *** Joins: mikeliuk (~mikeliuk@213.205.198.174)
[17:24:52] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:24:56] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[17:25:46] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[17:26:33] *** Quits: nomic (~nomic@185.217.117.248) (Quit: Leaving)
[17:26:36] <Yhg1s> nedbat: I think there's still more going on, or I'm missing something about the implementation of CTracer, because I can't get the tp_clear correct. Py_CLEAR()ing all owned references *should* be enough, but it doesn't appear to work. Maybe I'm misunderstanding which references are owned and which aren't.
[17:27:14] <Yhg1s> nedbat: in any case, I think a correct change to start with is to visit all owned PyObject *'s in tp_traverse, and Py_CLEAR them in tp_clear.
[17:28:18] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[17:28:30] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[17:29:21] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:30:10] *** Joins: vaio (~gary@user/ghost)
[17:30:22] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[17:30:44] *** Joins: alex11 (~alex11@user/alex11)
[17:30:50] *** Quits: Ilyu_ (~quassel@166.215.82.79.rev.sfr.net) (Read error: Connection reset by peer)
[17:30:55] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:31:35] <nedbat> Yhg1s: ok.  i have to review which of them are owned also
[17:32:00] <Yhg1s> On the other hand, I can't explain why nothing ends up in gc.garbage when commenting out tp_clear...
[17:32:31] <mav`rik> Hi all, is there anything like a Stream whose read method would be via repeated application of a function (or a generator)? So if for example I wanted to create a large CSV stream, but didn't want to store it all in memory I could feed `csv.write` one of these objects and calls to `read` would result in multiple calls to `fn` (or iterations of a generator) so I don't fill memory?
[17:32:48] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:33:51] *** Joins: zothix (~zoth@user/zothix)
[17:34:00] <zothix> Hi, i am sending a UDP broadcast on a port say 10011, the listener replies on the port that was selected from my python script automatically like 4508, how can i listen the reply on this random port?
[17:34:22] <Yhg1s> mav`rik: do you mean csv.writer()? Its writerows() method takes any iterable, including generators.
[17:34:58] <bjs> and csv.reader can take a generator of lines directly
[17:35:33] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[17:35:58] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[17:36:23] <grawity> zothix: hmm I *think* the same socket will automatically be bound to that port so you can just recv()?
[17:36:35] <zothix> ouhh yes xD
[17:36:38] <zothix> let me try that
[17:36:39] <zothix> thanks
[17:36:51] <mav`rik> Yhg1s: sorry, yes, typo, but I mean that the `writerows` would only be applied sufficient to fulfil a request to the same input stream's `.read(some_length)`  so if I had `stream = ThisThing()`, and `csv.writer(stream)` then I could do `stream.data_filler = some_function_which_writes_a_new_row_to_writer`
[17:37:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:37:30] <bjs> mav`rik: i'm a little confused, the argument to csv.writer is the place to write the output csv to,  not where the input stream came from
[17:37:36] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[17:38:03] <grawity> it is also possible to .bind() the socket to a specific local port upfront, e.g. you can send packets 10022 -> 10011 if you want
[17:38:07] <zothix> grawity, so basically alot of clients will reply to me on this port, is there a way i could specify this random port, so i can just add a continuous listener on it?
[17:38:27] <bjs> mav`rik: you go `writer = csv.writer(output_location);  writer.writerows(input)`
[17:38:30] <bjs> roughly
[17:38:32] <grawity> e.g. if it's an IPv4 (AF_INET) socket, you should be able to sock.bind(("0.0.0.0", 10022))
[17:38:42] <Yhg1s> mav`rik: I'm afraid that's not how file objects or csv.writer() work, no. You could create a generator that calls writerow() on, say, an io.StringIO, then yields the written row.
[17:39:11] <grawity> bind sets the local address/port both for sending outgoing packets and for listening for incoming ones
[17:39:17] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[17:39:22] <zothix> grawity, got it, leme try that
[17:39:43] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 265 seconds)
[17:40:19] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[17:40:23] <mav`rik> bjs: assume I have a database cursor, and I have another function which takes a csv filehandle as an input, I don't want to do stream = io.StringIO(); csv = csv.writer(stream); csv_writer.writerows(cursor); stream.seek(0); some_function_accepting_readable_stream(stream)  because that would fill memory with the CSV in the string IO when the stream is just a pass-through
[17:40:27] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[17:41:06] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 268 seconds)
[17:41:17] <bjs> mav`rik: your stream doesn't have to be an io.StringIO instance, it can be any file-like object
[17:41:19] <Yhg1s> mav`rik: if it needs to be a file-like object, the object's read or readline method could fetch the input data, turn it into csv and yield that.
[17:41:45] <mav`rik> bjs: right, I was wondering if this is something which already existed. I agree I could craft my own
[17:41:46] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:43:24] *** Joins: bloody (~bloody@user/bloody)
[17:44:10] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[17:45:26] *** Joins: pigweed (~pigweed@184.97.150.164)
[17:45:30] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[17:45:46] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[17:45:56] <mav`rik> For want of a better word, a read-through stream
[17:46:28] *** Quits: vukky (~vukky@wikipedia/vukky) (Quit: Vukky.exe is not responding.)
[17:46:41] *** Quits: delvian (~delvian@41.13.246.202) (Read error: Connection reset by peer)
[17:46:45] *** Joins: vukky (~vukky@wikipedia/vukky)
[17:47:03] *** Joins: han-solo (~hanish@user/han-solo)
[17:47:38] <mav`rik> Yhg1s: I guesa a follow-up question then, is there something like functools.total_ordering, but for files?
[17:47:43] <grawity> wait but
[17:47:48] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[17:48:00] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:48:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[17:48:07] <grawity> oh right, nevermind
[17:48:54] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:49:03] <Yhg1s> mav`rik: not really. It's not that simple with files :)
[17:49:43] <Yhg1s> I mean, there's a bunch of classes in io, but it's usually not worth using them if you know you'll only need, for example, 'read' or 'readline'.
[17:49:46] <grawity> ugh, doesn't the csv module have a function that would just return a formatted string and not write it
[17:50:05] *** Joins: jyu_s (~f0fz@122.11.212.234)
[17:50:19] *** Joins: delvian (~delvian@41.13.246.202)
[17:50:20] <mav`rik> Yhg1s: thanks, fair enough, I guess you generally don't know ahead whether something needs to be seekable/etc.
[17:51:37] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[17:52:13] *** Joins: jyu_s (~f0fz@122.11.212.234)
[17:53:16] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[17:53:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[17:54:31] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[17:55:11] <bjs> i think csv writer only needs write
[17:55:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:55:17] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:55:17] <bjs> but the docs don't say
[17:55:47] <bjs> oh no it does I can't read " csvfile can be any object with a write() method."
[17:56:27] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[17:56:34] <mav`rik> bjs: yeah, I always found a few bits around the standard library like this a _little_ frustrating. With the increasing shift to protocols in parts of the language (or even ABCs from earlier) it might be nice if things in the standard library could be documented with them included.
[17:58:18] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[17:58:36] *** Quits: spuz (~spuz@213.129.88.97) (Ping timeout: 256 seconds)
[18:01:33] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:02:40] *** Joins: d00gy (~d00gy@user/d00gy)
[18:02:41] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[18:02:47] <mav`rik> grawity: I didn't want the entire CSV in memory, if I could help it. I could be dealing with millions+ of rows. I can save on costs, and reduce various overheads if it just acts like a conduit/pip rather than an arbitrarily large buffer
[18:02:51] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[18:03:03] <mav`rik> s/pip/pipe/
[18:03:03] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:04:26] *** Quits: onichomp (~onichomp@2806:264:4404:8309:b85d:681f:5d9a:d435) (Read error: Connection reset by peer)
[18:04:36] *** psystemupdate is now known as FoieGras
[18:04:46] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[18:05:04] *** Joins: onichomp (~onichomp@2806:264:4404:8309:b85d:681f:5d9a:d435)
[18:06:02] *** Quits: onichomp (~onichomp@2806:264:4404:8309:b85d:681f:5d9a:d435) (Read error: Connection reset by peer)
[18:06:32] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Quit: leaving)
[18:06:39] *** Joins: superboot (~agentgasm@user/superboot)
[18:06:48] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[18:07:13] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5c87-20ba-1b06-e1c2.res6.spectrum.com)
[18:07:45] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[18:08:13] *** Joins: swensson (~swensson@host-90-235-11-206.mobileonline.telia.com)
[18:09:29] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[18:10:00] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[18:10:19] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:10:43] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:11:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:12:26] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:15:31] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[18:19:00] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[18:19:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:22:20] <kek_> hi, I'm still confused as to how python people read docs of libs. E.g. https://pytorch.org/docs/stable/generated/torch.nn.BCELoss.html here it says "Output: scalar." but yet the type is "<class 'torch.Tensor'>". Am  missing something? An object isn't realyl a scalar to me. Sure, I expect a loss function to return a scalar but the function actually returns an object. So why does it say it returns a scalar?
[18:23:50] <kek_> I guess it makes sense in the context of pytorch because they probably handle all numbers using their tensor thingie but still. I have this problem all the time and end up either reading the source or print(type(foo)).
[18:23:53] <Yhg1s> kek_: everything is an object.
[18:24:01] <Yhg1s> kek_: So, a scalar is also an object.
[18:24:10] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se)
[18:24:24] <grym> kek_: pytorch has a specific meaning of 'scalar', which is "a tensor, of rank 0"
[18:24:31] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[18:25:25] <grym> (numpy does this too;  `np.array(5)` is scalar
[18:26:26] <rapha> hi all
[18:26:44] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:27:09] <kek_> Yhg1s, grym ok thanks, that was jsut an example. I simply suck at reading docs for python, I keep feeling like there is so much implicit stuff in there.
[18:27:34] <grym> kek_: especially in ML python land :)
[18:27:48] <grym> lots of nouns have many domain specific senses
[18:27:49] <Yhg1s> kek_: other than the apparent misunderstanding of what an object is, the confusion here doesn't seem to be Python-specific. Torch/numpy/tensor-specific, perhaps.
[18:27:51] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-58.poda.cz) (Remote host closed the connection)
[18:28:07] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-58.poda.cz)
[18:28:19] <rapha> does ElementTree's Element class have a way where with the search string 'div/span' it would find _either_ '<div><p><span>...</span></p></div>' _or_ '<div><span>...</span></div>'? findall() finds _direct_ descendants only :-/
[18:29:07] <kek_> Yhg1s, yeah the fact that I'm no pro at python surely doesn't help.
[18:29:09] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[18:29:33] <merijn> I mean, it's common in (some) languages for scalar to refer to unboxed values. But python doesn't have unboxed values, so that interpretation doesn't make sense
[18:29:38] *** Quits: FoieGras (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: leaving)
[18:30:08] *** Joins: Fiji (~Fiji@user/fiji)
[18:30:15] *** Quits: delvian (~delvian@41.13.246.202) (Quit: Leaving)
[18:30:38] <merijn> I presume kek_ is referring to something like Java or C++ where that usage seems common
[18:30:50] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[18:30:54] *** Quits: swensson (~swensson@host-90-235-11-206.mobileonline.telia.com) (Ping timeout: 256 seconds)
[18:31:18] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 260 seconds)
[18:31:24] <jamwil> rapha: You may be able to use `div//span` or some similar construct with the double forward-slash
[18:31:40] *** Quits: ammarsalmi (~ammarsalm@154.121.61.208) (Ping timeout: 268 seconds)
[18:32:07] <jamwil> rapha: From the docs, // "Selects all subelements, on all levels beneath the current element. For example, .//egg selects all egg elements in the entire tree."
[18:32:31] <grym> scalar in the sense of numerics libraries is the linear algebra sense
[18:32:34] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:32:38] <grym> not any programming language sense w/r/t boxing
[18:33:14] *** Joins: saltysoul (~sebmont@user/sebmont)
[18:33:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:33:35] <grym> (https://mathworld.wolfram.com/TensorRank.html)
[18:33:59] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[18:34:08] *** Joins: jyu_s (~f0fz@122.11.212.234)
[18:34:49] <grym> assumed domain knowledge in the docs arises because the objects being manipulated are ordered collection of numbers, so implicitly of course this is linalg time
[18:36:29] <mav`rik> rapha: are you after the text context of the span, and it definitely _has_ to be either div/p/span or div/span?
[18:37:39] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[18:38:01] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:38:09] *** Joins: akk (~akk@75.161.146.115)
[18:39:01] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 250 seconds)
[18:39:01] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 250 seconds)
[18:39:08] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[18:39:12] *** Joins: Naan` (~Naan@user/naan)
[18:39:27] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[18:39:29] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[18:39:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:40:22] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[18:41:04] *** Joins: jyu_s (~f0fz@122.11.212.234)
[18:41:24] <IceMichael> hi
[18:41:48] <IceMichael> stupid question: I want to pass some arguments to Pool.map which should not be parallelized
[18:41:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[18:42:05] *** Joins: arinov (~arinov@77.67.129.200)
[18:42:42] <IceMichael> any idea how? I could of course explode them like if I want to parallelize [1,2,3,4,5] but want to have some common argument "Peter", I could pass [(1,'Peter'), (2,'Peter')...] but any better way
[18:42:44] <IceMichael> ?
[18:42:49] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 256 seconds)
[18:43:08] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[18:44:02] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[18:44:39] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 250 seconds)
[18:44:40] <mav`rik> IceMichael: consider `functools.partial` perhaps?
[18:45:40] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[18:45:45] *** Joins: saltysoul (~sebmont@user/sebmont)
[18:49:03] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[18:50:36] *** Joins: reset (~reset@user/reset)
[18:52:34] *** Joins: xdeadface (~xdeadface@gateway/tor-sasl/xdeadface)
[18:53:10] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:53:14] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[18:57:54] *** Quits: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) (Remote host closed the connection)
[18:58:09] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:59:07] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[19:00:35] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:00:58] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:02:22] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[19:02:39] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[19:03:12] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[19:05:03] *** Joins: arinov (~arinov@77.67.129.200)
[19:06:18] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se)
[19:06:44] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[19:07:09] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[19:07:26] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[19:11:08] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.155.mobile.tre.se) (Ping timeout: 268 seconds)
[19:12:17] *** Quits: visl (~visl@user/visl) (Ping timeout: 256 seconds)
[19:12:42] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[19:13:12] *** Joins: xardas (~xardas@149.233.51.127)
[19:13:47] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[19:14:02] *** Joins: BlueSky (~BlueSky@user/bluesky)
[19:14:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:14:42] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[19:14:48] *** Joins: teut (~teut@122.161.16.132)
[19:16:31] *** Joins: Klinda (~superleag@user/klinda)
[19:16:40] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[19:17:39] *** Quits: xardas (~xardas@149.233.51.127) (Client Quit)
[19:19:30] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[19:19:33] *** Joins: delvian (~delvian@41.13.246.105)
[19:19:39] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[19:20:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[19:22:04] *** Joins: fikran (~fikran@user/fikran)
[19:22:32] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[19:25:03] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 264 seconds)
[19:25:54] *** Joins: mickey8 (~user@user/mickey)
[19:27:01] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[19:27:01] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 245 seconds)
[19:27:07] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[19:27:24] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[19:27:27] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 264 seconds)
[19:27:51] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 245 seconds)
[19:27:52] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[19:28:52] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[19:28:55] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[19:29:10] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[19:29:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[19:29:47] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[19:33:37] *** Quits: comet23 (uid528492@user/comet23) (Ping timeout: 250 seconds)
[19:34:03] *** Quits: hogarius (hogarius@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[19:34:39] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Ping timeout: 264 seconds)
[19:34:39] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[19:35:21] *** Quits: dez (uid92154@user/dez) (Ping timeout: 245 seconds)
[19:35:21] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 250 seconds)
[19:35:52] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[19:36:10] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 260 seconds)
[19:36:15] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[19:36:18] *** Joins: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[19:36:24] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Read error: Connection reset by peer)
[19:36:25] *** Quits: davef (sid287421@user/davef) (Ping timeout: 268 seconds)
[19:36:27] *** Quits: df_data (sid466269@id-466269.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[19:36:27] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (Ping timeout: 264 seconds)
[19:36:34] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[19:37:00] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:37:01] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[19:37:03] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 264 seconds)
[19:37:05] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 250 seconds)
[19:37:17] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[19:37:26] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 245 seconds)
[19:37:33] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[19:37:41] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[19:37:43] *** Joins: dez (uid92154@user/dez)
[19:37:47] *** Joins: debnet (sid330295@python/afpy/debnet)
[19:37:49] *** Joins: Evolver (sid32215@user/evolver)
[19:37:59] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:38:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:38:04] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:38:30] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[19:38:32] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[19:38:42] *** Joins: dohtem (uid524096@user/dohtem)
[19:38:44] *** Joins: davef (sid287421@user/davef)
[19:39:34] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[19:42:38] <SnoopJ> nedbat, I took a closer look at that issue and was able to run your example test, but I don't think I was on to anything, nothing I tried really seemed to influence it. It seemed like _installation_trace was also leaking? I got the sense it had something to do with setting the attributes but didn't get anywhere with it
[19:42:50] <rapha> jamwil: div//span worked, thank you!
[19:42:53] *** Quits: mikeliuk (~mikeliuk@213.205.198.174) (Quit: Connection closed)
[19:43:23] <rapha> (to answer mav`rik's question, yes, it was a definitive either/or in this case)
[19:44:34] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 260 seconds)
[19:44:34] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 260 seconds)
[19:44:49] *** Joins: saltysoul (~sebmont@user/sebmont)
[19:45:31] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:46:21] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:46:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[19:47:15] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[19:47:26] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:f173:981d:781e:bf48) (Remote host closed the connection)
[19:47:28] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[19:49:39] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 250 seconds)
[19:49:55] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:50:37] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 268 seconds)
[19:50:51] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[19:53:56] *** Joins: saltysoul (~sebmont@user/sebmont)
[19:54:51] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 250 seconds)
[19:55:03] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[19:55:13] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[19:55:21] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[19:55:39] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Ping timeout: 264 seconds)
[19:56:13] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:1008:3982:ff03:513f:ef0d)
[19:56:46] <tomeaton17> How can I get plotly scatter to show the coordinates of each point?
[19:56:51] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[19:56:54] <tomeaton17> It appears on hover but I want it to show always
[19:56:55] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:57:00] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Remote host closed the connection)
[19:57:00] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:57:12] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[19:57:59] *** Joins: shad (~shad@user/shad)
[19:58:41] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 245 seconds)
[19:59:11] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 250 seconds)
[20:00:37] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:00:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:01:39] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 264 seconds)
[20:01:39] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 264 seconds)
[20:01:46] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:01:52] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[20:02:08] *** Joins: saltysoul (~sebmont@user/sebmont)
[20:03:18] *** Quits: jyu_s (~f0fz@122.11.212.234) (Read error: Connection reset by peer)
[20:03:21] *** Joins: grooverman (~grooverma@177.102.119.40)
[20:03:51] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[20:04:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:05:09] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[20:06:00] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[20:06:01] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 268 seconds)
[20:06:01] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 268 seconds)
[20:06:47] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:07:25] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Remote host closed the connection)
[20:07:26] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[20:08:08] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[20:08:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:10:02] *** Joins: jcarl43 (~jcarl@node-1w7jr9pj6xbfpbvumr522w6fg.ipv6.telus.net)
[20:11:07] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[20:11:13] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 256 seconds)
[20:12:17] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[20:12:51] <ArtfulDodger> Hey guys, do you know why random.choices(k=10) if so much faster than [random.choice() for _ in range(10)? https://bpa.st/GV6Q
[20:12:59] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[20:13:21] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:13:25] <ArtfulDodger> I can understand a slight performance improvement because it's probably optimized by the difference is huge
[20:13:39] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 264 seconds)
[20:14:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[20:14:48] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[20:15:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:57f:99d1:5cdc:b71e)
[20:15:18] <bjs> ArtfulDodger: well it's not quite computing the same thing,  but there's also the unstated but obvious that function calls are expensive and choices has 10x fewer of them
[20:15:40] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:15:46] <Wooble> (also 400ns isn't a huge amount of time.)
[20:17:15] <bjs> well the difference is 4us not 4ns (there is a factor of 1000 between them)
[20:17:18] <ArtfulDodger> It's still not much time but I mean the difference is huge: choices() is 2x faster
[20:17:27] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[20:17:33] <bjs> ArtfulDodger: these kind of benchmarks are notoriously hard to draw conclusions from
[20:18:05] <bjs> who knows where the time is actually being spent, maybe the difference is totally in the list comprehension
[20:18:06] <ArtfulDodger> bjs: also, why do you say they do not compute the same thing?
[20:18:19] <bjs> and nothing to do with the random module at all, it can be hard to tell
[20:19:21] <ArtfulDodger> Could it be a loss of time due to the random seed that would be picked more often with choice()? (I don't know when it is actually picked)
[20:20:20] <bjs> ArtfulDodger: have you considered that the time difference is that the random() version has many function calls and a list comprehension and a Python loop over a range()
[20:21:08] <nedbat> SnoopJ: if it's any consolation, Yhg1s worked on it this morning and was stumped!
[20:21:27] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 264 seconds)
[20:22:05] <bjs> ArtfulDodger: and all those things may be a much bigger contributor to the difference than the actual random module itself.  I would indeed expect Nx function calls to each return 1 random number to "in general" be slower than 1 call to return N random numbers
[20:22:15] <Yhg1s> Eeeh, hang on, I did show you how the tp_traverse and tp_clear methods weren't traversing or clearing enough :)
[20:22:28] <Yhg1s> (and then I ran out of time.)
[20:22:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:23:39] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[20:24:52] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[20:25:45] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[20:26:10] *** Quits: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu) (Quit: reboot)
[20:27:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:27:14] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:27:48] *** Joins: afidegnum (~user@102.176.94.236)
[20:27:54] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[20:28:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c8eb-bc7c-9a6e-e932.res6.spectrum.com)
[20:29:07] *** Joins: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu)
[20:29:56] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[20:30:08] *** Quits: lukeaar (~lukeaar@167-179-177-241.a7b3b1.bne.nbn.aussiebb.net) (Quit: WeeChat 3.3)
[20:31:50] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[20:32:56] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:1008:3982:ff03:513f:ef0d) (Quit: Client closed)
[20:33:51] <nedbat> Yhg1s: i love what you did! I was trying to give a sense of the challenge
[20:34:25] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[20:34:32] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[20:36:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:36:45] <afidegnum> hi, i posted a question on SO, can you please have a look? i am having issue passing the IDs consistently after traversing and saving the dom tree into a graph database
[20:37:09] <nedbat> Yhg1s: i am going to try your suggestion now... i was out for a while
[20:37:34] <afidegnum> https://stackoverflow.com/q/68576410/5713751
[20:38:04] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[20:38:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:38:20] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[20:38:27] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[20:38:41] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 245 seconds)
[20:39:13] <Wooble> ArtfulDodger: choices() implementation https://github.com/python/cpython/blob/main/Lib/random.py#L448 is also full of microoptimizations. _repeat(None, k) instead of range(k)? adding 0.0 to convert to float?
[20:39:21] <afidegnum> the question is bountied
[20:39:38] *** Quits: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[20:39:41] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[20:39:42] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:40:09] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[20:40:12] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[20:40:15] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[20:40:32] <bjs> Wooble: and it avoids calling choice N times
[20:40:37] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:40:56] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:00] *** Joins: grooverman (~grooverma@177.102.117.95)
[20:41:11] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 245 seconds)
[20:41:15] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 256 seconds)
[20:41:17] <Wooble> well sure, that too, although it contains many function calls itself.
[20:41:22] *** Joins: lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce)
[20:41:44] <Wooble> ...nearly all of which are extra-optimized but making locals of the function names.
[20:41:48] <Wooble> by*
[20:42:22] *** Joins: BlueSky (~BlueSky@user/bluesky)
[20:43:06] <bjs> that's fairly common for repeated calls in the stdlib
[20:43:09] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[20:43:26] <bjs> which is another difference ArtfulDodger's original comprehension had (repeated attribute lookup on the `random` module)
[20:44:32] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:44:42] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[20:44:57] *** andyduckworth is now known as m0nk3yc0wb0y
[20:45:09] <ArtfulDodger> Yeah I see, thank you bjs
[20:45:13] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:45:14] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 260 seconds)
[20:45:24] <Wooble> just looking at the history of that one function, Raymond was finding way to optimize it still like 15 years after he wrote it.
[20:45:25] <lawr3nce> https://docs.opencv.org/2.4/doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.html -> does anyone know this algorithm to detect text orientation of an image before performing OCR?
[20:45:36] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[20:45:41] <bjs> Wooble: of all the things raymond does,  I think this one is perfectly fair
[20:45:43] *** Joins: saltysoul (~sebmont@user/sebmont)
[20:45:44] <bjs> :)
[20:45:56] <Wooble> sure, just mean that's some real dedication to squeezing out performance.
[20:46:12] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[20:46:16] <bjs> it's a totally appropriate place to do so
[20:46:34] <axisys> is there a way to shorten this? if '3m' not in root_dir and 'apm' not in root_dir:
[20:46:43] <lawr3nce> or better, I meant I have an image with some skew text. I need to rotate it good enough before performing OCR.
[20:47:07] <bjs> axisys: if it's just those two things, maybe not.  But in general `if all(tag not in root_dir for tag in ["3m", "apm"]):`
[20:47:18] <Wooble> axisys: if not any(x in root_dir for x in ('3m', 'apm')):
[20:47:27] *** Joins: nomic (~nomic@185.217.117.164)
[20:48:05] <Wooble> axisys: saves... 1 byte. :)
[20:48:28] <axisys> :-)
[20:48:51] <axisys> bjs: yeap that exact line with only two things
[20:49:29] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[20:49:31] <Wooble> it does make the diff shorter if you add a third thing in the future, but... meh.
[20:50:05] <axisys> Wooble: agree
[20:50:19] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 256 seconds)
[20:50:59] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[20:51:19] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[20:51:26] <lawr3nce> anyone? :3
[20:51:56] *** Joins: jay-m126 (~jay-m@129.0.76.219)
[20:52:04] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[20:52:07] *** Joins: jay-m126_ (~jay-m@129.0.76.219)
[20:52:07] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:53:15] <nedbat> Yhg1s: in theory, can I skip a member in traverse and clear if I "know" that it can't be part of a cycle?
[20:54:07] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[20:54:12] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[20:56:33] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[20:57:51] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[20:57:52] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[20:57:52] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:57:53] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Client Quit)
[20:58:15] *** Joins: amazoniantoad (~jr@c-98-193-154-245.hsd1.tn.comcast.net)
[20:58:18] <amazoniantoad> I'm trying to use opencv to filter out from an image all pixels which do not match a certain color. How can I do this? This was my attempt: https://stackoverflow.com/questions/70084832/change-colors-that-do-not-match-specific-colors-to-white-using-opencv
[20:58:22] *** Joins: visl (visl@user/visl)
[20:58:28] *** dcaro is now known as dcaro_away
[20:58:54] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 1.9.1)
[21:00:20] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:00:21] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Client Quit)
[21:00:27] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Ping timeout: 264 seconds)
[21:00:31] *** Quits: amazoniantoad (~jr@c-98-193-154-245.hsd1.tn.comcast.net) (Client Quit)
[21:01:39] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:01:42] *** Joins: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr)
[21:01:54] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:02:19] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[21:02:20] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:03:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:03:20] *** Quits: m0nk3yc0wb0y (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Quit: WeeChat 3.3)
[21:03:43] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:03:44] *** Joins: tobybl (~tobybl@213.31.134.21)
[21:04:00] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:04:48] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:05:09] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[21:05:53] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net)
[21:06:08] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[21:06:28] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[21:06:44] <rannnn8888> Someone know how make apk KIVY with external libraries ?
[21:07:18] *** Parts: afidegnum (~user@102.176.94.236) (ERC (IRC client for Emacs 27.2))
[21:09:00] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[21:10:18] *** Joins: DerpGusta (~quassel@user/derpgusta)
[21:14:12] *** Quits: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu) (Quit: reboot)
[21:15:08] *** Joins: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu)
[21:15:15] *** Joins: naranja (~orange@user/orangeboxcutter)
[21:15:22] *** Joins: daoudr_ (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[21:15:27] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[21:16:41] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Read error: Connection reset by peer)
[21:18:02] *** Joins: HurricaneHarry_ (~quassel@84-85-122-182.fixed.kpn.net)
[21:18:27] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[21:19:11] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net) (Quit: Client closed)
[21:19:14] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-4c36-2ae5-60f2-6776.fixed6.kpn.net) (Ping timeout: 260 seconds)
[21:19:56] *** Quits: lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce) (Remote host closed the connection)
[21:20:49] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:21:33] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:21:47] *** Joins: parv (~quass@user/parv)
[21:22:09] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:22:18] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:22:51] *** Quits: daoudr_ (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Ping timeout: 245 seconds)
[21:23:02] *** Quits: Falconer (~ronnyma@227.84-48-191.nextgentel.com) (Ping timeout: 260 seconds)
[21:23:11] *** Joins: mikeliuk (~mikeliuk@213.205.198.174)
[21:23:11] *** Quits: mikeliuk (~mikeliuk@213.205.198.174) (Excess Flood)
[21:23:30] *** Quits: saltysoul (~sebmont@user/sebmont) (Ping timeout: 260 seconds)
[21:23:30] *** Joins: stealth[] (~stealth]@2001:9e8:36e3:5500:c9:d29d:23a9:2b15)
[21:24:05] <nedbat> Yhg1s: I've fully implemented tp_clear and tp_traverse, but the behavior is the same: https://github.com/nedbat/coveragepy/tree/nedbat/bug1283
[21:25:08] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:25:33] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:26:50] *** Joins: xon (~xon@103.255.7.31)
[21:26:55] *** Quits: orbatos_ (~orbatos@user/orbatos) (Quit: Leaving)
[21:27:20] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:28:28] *** Joins: legola (~legola@46.235.101.181)
[21:28:40] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[21:29:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[21:29:36] <Yhg1s> nedbat: yes, but now if you add a breakpoint to CTracer_clear (or an fprintf()) you'll see that it's actually called, which means the GC module now at least realises there is a reference cycle
[21:30:05] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:30:44] *** Joins: givemeyourpies (givemeyour@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[21:30:55] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[21:31:03] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[21:31:06] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[21:31:25] *** Joins: fikran (~fikran@user/fikran)
[21:32:53] *** Joins: orbatos (~orbatos@user/orbatos)
[21:33:23] *** Quits: legola (~legola@46.235.101.181) (Ping timeout: 256 seconds)
[21:33:57] <Yhg1s> nedbat: oh, hm, it's not getting called in your version of the code... let me compare it with mine.
[21:34:00] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:34:02] <axisys> is there a clearer way to do this when say file 'qaz' does not exist? https://dpaste.org/fz7a
[21:34:08] <axisys> cleaner*
[21:34:50] <axisys> I am not interested in a error message, just be able to ignore when a file not exist
[21:35:04] <axisys> code will still work
[21:36:17] <phy1729> There's contextlib.suppress
[21:36:44] <Yhg1s> nedbat: ah, no, it is, I was testing the wrong thing, sorry.
[21:37:10] <apocalyptech> I know that try/except is often recommended; I'd personally check on `os.path.exists(foo)` though
[21:37:49] <apocalyptech> (If you do stick with try/except, though be sure to specify the actual exception generated by a file not found, rather than a "global" one like that)
[21:38:09] <phy1729> checking for existance beforehand is racy
[21:39:25] <apocalyptech> Good point, though how much you care about that kind of race condition may depend on your use cases.  :)
[21:43:47] *** Joins: Widdershins (widders@ps.mad.cash)
[21:45:17] *** Quits: menace (~someone@user/menace) (Quit: menace)
[21:45:23] <Yhg1s> nedbat: in fact, if you add prints to CTracer_init and CTracer_dealloc, you can see that after your change, way more of the tracers are destroyed.
[21:46:15] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[21:46:39] <nedbat> Yhg1s: so, an improvement, but not a complete solution?
[21:47:43] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:29] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[21:49:33] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:6cb0:abe7:b16b:4f04) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[21:49:43] <Yhg1s> nedbat: I created a simpler testcase to run in isolation, which ends up creating 11 CTracers. Without your latest change, none of the CTracers are destroyed. With your latest change, all 11 CTracers are destroyed, one of which after tp_clear is called (so, involved in a reference cycle)
[21:49:55] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[21:50:05] *** Quits: davef (sid287421@user/davef) ()
[21:50:07] <Yhg1s> nedbat: I think the one tracer that is cleared kept the other ones alive
[21:50:24] <Yhg1s> (or maybe they were all involved in the reference cycle, but it only needed to be broken in one place)
[21:50:44] <Yhg1s> nedbat: but as you say, the leak is still there, so there is more going on :)
[21:51:21] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[21:51:39] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:53:46] *** Joins: davef (~davef@user/davef)
[21:54:13] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:6cb0:abe7:b16b:4f04)
[21:54:13] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:6cb0:abe7:b16b:4f04) (Client Quit)
[21:54:43] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:54:52] *** Quits: xon (~xon@103.255.7.31) (Quit: Leaving...)
[21:56:45] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:57:11] <Yhg1s> nedbat: ah, no, making CTracer_clear not do anything still destroys all the tracers, so CTracer_clear isn't important in those cycles. (One of the other objects involved in the cycle will have its tp_clear called instead). The traverse is important for the GC module to find the cycle, though.
[21:57:44] <Yhg1s> (damn you for nerdsniping me again :)
[21:59:35] *** Joins: greentree (~greentree@pool-108-46-153-220.nycmny.fios.verizon.net)
[22:00:04] <greentree> is there a python lib to parse public rsa keys for ssh? as defined in rfc 4253, 6.6
[22:01:13] <greentree> i was looking at what golang had and they had a func called ParsePublicKey which i think parses the key differently than what i actually see when i check that same key in ~/.ssh
[22:01:36] <supakeen> I believe cryptography can take keys in that format.
[22:01:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:02:25] *** Joins: PointThink (~PointThin@abzi189.neoplus.adsl.tpnet.pl)
[22:02:29] <supakeen> https://cryptography.io/en/latest/hazmat/primitives/asymmetric/serialization/#cryptography.hazmat.primitives.serialization.load_der_public_key specifically
[22:02:38] <supakeen> However that quotes a different RFC.
[22:04:25] *** Quits: jay-m126_ (~jay-m@129.0.76.219) (Ping timeout: 268 seconds)
[22:04:32] *** Quits: ArtfulDodger (~ArtfulDod@147.210.204.164) (Quit: Leaving)
[22:04:39] *** Quits: jay-m126 (~jay-m@129.0.76.219) (Ping timeout: 264 seconds)
[22:06:09] *** Joins: Atque (~Atque@user/atque)
[22:06:10] <nedbat> Yhg1s: just to double check: we think it is truly a leak?
[22:06:21] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[22:07:07] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:07:34] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[22:08:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:09:41] *** Joins: MikZyth (~MikZyth@host-211-157-66-217.spbmts.ru)
[22:10:01] *** Joins: _harias_ (~work@user/harias/x-6947046)
[22:11:09] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[22:12:59] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[22:13:46] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[22:14:21] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:14:31] *** Quits: ham5urg (~ham5urg@p200300d167387400ad9095523aad4ec1.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[22:14:51] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 264 seconds)
[22:15:13] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[22:15:28] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:15:32] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:3039:a900:628d:f875)
[22:16:08] *** Joins: ham5urg (~ham5urg@p200300d16738740067485cbb3560a6f5.dip0.t-ipconnect.de)
[22:16:41] <awmv> I probably failed my on site coding interview. I feel so dumb :(
[22:17:39] <awmv> How do you deal with rejection mentally?
[22:18:46] <yitz> Do a bunch more and realize that you hit some and miss some and that's just he numbers
[22:18:50] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net)
[22:18:53] <yitz> *the
[22:19:15] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[22:19:32] <rannnn8888> someone know how kivy with external libraries buldizor APK ?
[22:19:41] *** Joins: ede (~ede@user/ede)
[22:20:47] <akk> I tried Kivy about 3 years ago and succeeded in building an app, but the documentation was poor, the APK was huge and the app was slow to start up. It's probably better now.
[22:21:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:23:37] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:23:45] <rannnn8888> akk maybe you know how i can add the external libraries when i make the buldizorÂ  apk ?
[22:23:52] <awmv> yitz: I'm gonna try to see it that way. But this way was really caused by me. I could have done so much better
[22:24:11] <akk> rannnn8888: Sorry, don't know.
[22:25:47] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:b138:4c3b:22dc:57b)
[22:26:11] <yitz> Some days you do well, others you just bomb. It's part of being human.
[22:27:24] <han-solo> "It is possible to commit no mistakes and still lose. That is not a weakness. That is life." --Jean-Luc Picard
[22:29:46] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[22:30:06] *** Joins: daoudr_ (~daoudr@161.12.105.92.dynamic.wline.res.cust.swisscom.ch)
[22:30:43] *** Joins: erica (~erica@user/erica)
[22:33:27] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 250 seconds)
[22:33:47] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:34:45] <SnoopJ> nedbat, Yhg1s, oh, I should also say that when I was running nedbat's test, I did *not* see any invocation of tp_clear() or tp_dealloc(), but I don't really know what to read into that.
[22:35:22] *** Quits: erica (~erica@user/erica) (Client Quit)
[22:35:39] *** Joins: Andrynet (~Andrynet@190.152.200.211)
[22:36:11] *** Quits: _harias_ (~work@user/harias/x-6947046) (Quit: Konversation terminated!)
[22:36:12] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:36:39] *** Joins: erica (~erica@user/erica)
[22:37:51] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 245 seconds)
[22:38:07] *** Joins: emf (~emf@2620:10d:c090:400::5:14a4)
[22:38:25] *** Joins: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it)
[22:38:51] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[22:38:53] <SnoopJ> possibly that I don't understand how the GC works :)
[22:39:48] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[22:40:42] *** Joins: jay-m126 (~jay-m@129.0.76.219)
[22:41:51] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[22:41:56] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[22:42:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[22:43:15] *** Quits: sazawal (~sazawal@223.190.87.36) (Ping timeout: 265 seconds)
[22:43:52] *** Joins: irrgit (~irrgit@192.241.175.183)
[22:44:06] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2dd58f8dc088e4eca94.dip0.t-ipconnect.de)
[22:44:17] <mat001> Is there a PEP reason that Pycharm added space in line 2? Between importing collections and six?
[22:44:18] <mat001> https://bpa.st/CI6A
[22:44:51] <mat001> collections is std lib? and six isn't?
[22:45:03] *** Joins: jay-m126_ (~jay-m@129.0.76.219)
[22:45:06] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:19] <jinsun> it is runing isort on your code maybe
[22:45:56] <mat001> What's isort?
[22:46:19] <jinsun> isort has those rules, not sure if any pep mentions anything about sorting imports
[22:46:28] <mat001> ah, thx
[22:46:43] <jinsun> mat001: https://github.com/PyCQA/isort
[22:46:48] *** Quits: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it) (Quit: WeeChat 3.3)
[22:47:02] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[22:47:17] *** Joins: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it)
[22:48:05] <IceMichael> mav`rik: indeed, thank you!
[22:48:06] <bjs> mat001: jinsun: PEP 8 says that imports should go at the top, should be ordered stdlib ; third-party ; local and there should be a blank line between each section
[22:48:11] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:32] <jinsun> ah yeah just checked pep8, https://www.python.org/dev/peps/pep-0008/#imports
[22:48:34] <bjs> isort will try figure out which import is which, and will put them into blank-line separated 'sections'
[22:48:35] *** Quits: tofran (~tofran@37.189.158.134) (Quit: The Lounge - https://thelounge.chat)
[22:49:14] *** Joins: St327 (~St327@user/st327)
[22:49:36] <mat001> bjs: jinsun I see Py style guide says standard library imports first, then related third party imports, then Local application/library specific imports.
[22:49:43] <mat001> thx, that answers it
[22:49:58] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2dd58f8dc088e4eca94.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:50:46] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[22:52:17] *** Quits: feoh (~feoh@137.184.104.30) (Changing host)
[22:52:17] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[22:52:43] *** Parts: velix (~velix@user/velix) (Leaving)
[22:52:55] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Read error: Connection reset by peer)
[22:52:59] *** Quits: arcrin (~wbai@209.52.68.8) (Quit: Leaving)
[22:53:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[22:54:33] *** Joins: mokulus (~mokulus@user/mokulus)
[22:54:33] *** Joins: arcrin (~wbai@209.52.68.8)
[22:54:56] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[22:55:05] <mokulus> Hi, I'm using pytest for unit testing. Is it ok to import fixtures from other test_*.py or should I do this differently?
[22:56:17] *** Joins: Macuser (~Macuser@2600:1003:b453:bf7f:df1:2275:a197:a473)
[22:58:21] *** Quits: emf (~emf@2620:10d:c090:400::5:14a4) (Quit: emf)
[22:58:47] <Wooble> mokulus: it's most common to put them in conftest.py and not import them explicitly.
[22:58:52] <SnoopJ> mokulus, it's possible, but usually you use conftest.py
[22:58:52] *** Quits: zothix (~zoth@user/zothix) (Remote host closed the connection)
[22:59:08] *** Joins: magla (~gelignite@55d416db.access.ecotel.net)
[22:59:18] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:59:34] <Wooble> (if you do import them, your linter starts shouting at you for naming a parameter the same as the fixture)
[22:59:44] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[22:59:54] <mokulus> I have an Artist class and the Song class. I'd like to use artist fixture in test_song to init it
[23:00:09] *** Joins: naan (~Naan@user/naan)
[23:00:14] <mokulus> song need an artist to be initialized
[23:00:49] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:01:19] *** Joins: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it)
[23:01:34] <mokulus> I guess I have to put them all in conftest, pity
[23:01:43] <SnoopJ> You don't _have_ to
[23:02:05] <mokulus> I get the flake warning as you said, I must not have them in final code
[23:02:19] <mokulus> Unless you have a different solution
[23:02:25] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:02:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[23:02:44] <SnoopJ> mokulus, to me, putting a fixture in test_foo.py implies (weakly) that the fixture is specific to testing foo
[23:03:10] <SnoopJ> if instead it's useful across a whole suite of tests, I would personally put them in the conftest for that suite (or possibly define them in some fixtures file and import them in conftest.py)
[23:03:47] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 250 seconds)
[23:04:58] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[23:05:06] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[23:05:24] <meejah> agree with ^, and additionally I find it good to put most of the "real code" in helpers/util modules that are imported from conftest.py
[23:07:27] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[23:08:15] *** Quits: vladoski (~vladoski@host-87-15-101-38.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[23:08:19] *** Joins: amaenli (~amaenli@user/amaenli)
[23:08:54] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Ping timeout: 260 seconds)
[23:10:12] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[23:11:45] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[23:12:06] *** Quits: St327 (~St327@user/st327) (Quit: Leaving)
[23:12:10] <mokulus> i don't really agree that fixture in test_foo is only used to test foo, fixture is a fixture, if you have a wheel fixture you'd use it in car test, obviously
[23:12:11] *** Joins: anddam (~anddam@user/anddam)
[23:12:33] <mokulus> i guess it's just a language limitation
[23:12:47] *** Quits: davef (~davef@user/davef) (Quit: Quit)
[23:13:12] <Wooble> "my fixture is a database connection, so I need it to be imported from the database's test suite"?
[23:13:49] *** Joins: Auron (~Auron956@user/auron)
[23:14:46] <mokulus> where else would you expect it? fixture is a part of test suite
[23:15:24] *** Quits: anddam (~anddam@user/anddam) (Client Quit)
[23:15:29] *** Joins: xkuru (~xkuru@user/xkuru)
[23:15:30] <SnoopJ> mokulus, the part of the suite that isn't the tests
[23:15:42] *** Joins: anddam (~anddam@user/anddam)
[23:15:45] <SnoopJ> which is precisely what conftest.py and utility modules are
[23:16:12] * SnoopJ introduced util.py to a suite recently, actually
[23:16:12] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[23:16:30] <SnoopJ> but again, it's not a "limitation" because precisely what you want to do *is* possible
[23:18:17] *** Quits: anddam (~anddam@user/anddam) (Client Quit)
[23:19:12] <mokulus> limitation doesnt mean impossible... it's a limitation because it limits me to one file with all shared fixtures, instead of allowing me to selectively import them
[23:19:42] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:20:29] <mokulus> i understand that there isnt any other solution, but it doesnt mean the current one is good
[23:20:35] <Wooble> You can also import them selectively. the only limitation is whether you need to tell your linter to shut up because it's not smart enough to understand why you're importing them
[23:20:35] *** Joins: anddam (~anddam@user/anddam)
[23:20:53] *** Quits: jay-m126 (~jay-m@129.0.76.219) (Ping timeout: 268 seconds)
[23:21:27] *** Quits: jay-m126_ (~jay-m@129.0.76.219) (Ping timeout: 264 seconds)
[23:21:43] *** Quits: stealth[] (~stealth]@2001:9e8:36e3:5500:c9:d29d:23a9:2b15) (Quit: Leaving)
[23:22:00] <Wooble> (You can also name your fixtures fixture_whatever, and do @pytest.fixture(name='whatever') and then nothing will complain)
[23:23:16] *** Quits: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it) (Ping timeout: 245 seconds)
[23:24:58] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:27:49] *** Quits: Macuser (~Macuser@2600:1003:b453:bf7f:df1:2275:a197:a473) (Quit: Textual IRC Client: www.textualapp.com)
[23:29:22] <mokulus> alright, thanks, i guess i got to work with what i have
[23:29:31] *** Quits: PointThink (~PointThin@abzi189.neoplus.adsl.tpnet.pl) (Ping timeout: 268 seconds)
[23:29:50] <mat001> I researched a while ago, but not quite getting a straight anwer online. What are the downasides of using namedtuple versus a class with __eq_- and _-hash__ methods? Class is extensible and namedtuple isn't?
[23:31:52] *** Quits: zeudap (~zeudap@45.91.23.141) (Remote host closed the connection)
[23:32:32] *** Quits: baloona (~baloona@mail.baloona.de) (Remote host closed the connection)
[23:32:41] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:33:38] *** Joins: baloona (~baloona@mail.baloona.de)
[23:33:52] *** Joins: kar (~kar@68.203.99.60)
[23:36:11] *** Quits: Jefren1 (~Jefren@70.35.67.22) (Ping timeout: 245 seconds)
[23:36:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:36:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:57f:99d1:5cdc:b71e) (Ping timeout: 256 seconds)
[23:37:05] *** Joins: zeden (~zeden@user/zeden)
[23:37:06] *** Joins: PointThink (~PointThin@abzi189.neoplus.adsl.tpnet.pl)
[23:37:08] *** Joins: kek_ (~kek_@ipr31.alvhaus.ch)
[23:37:29] <Wooble> mat001: https://www.attrs.org/en/stable/why.html#namedtuples has some good arguments against namedtuple, which aren't at all specific to attrs being better than them.
[23:37:55] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:38:32] *** Joins: Jefren1 (~Jefren@70.35.67.211)
[23:38:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[23:39:31] *** Quits: vukky (~vukky@wikipedia/vukky) (Ping timeout: 245 seconds)
[23:39:42] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:39:56] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[23:40:20] <Wooble> mat001: that said, writing your own class with __eq__ and __hash__ is likely an even worse idea, especially if you don't have a way to make the values immutable.
[23:40:46] *** Joins: fikran (~fikran@user/fikran)
[23:42:34] <mat001> Wooble: thx. i wrote own class with the two methods. But I remember there was a good reason to do so.
[23:43:05] *** Quits: pigweed (~pigweed@184.97.150.164) (Ping timeout: 268 seconds)
[23:44:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[23:44:52] <SnoopJ> mokulus, yes, my point is that you are not actually limited to one file if you really really hate that idea.
[23:45:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[23:45:32] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:45:37] *** Joins: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it)
[23:45:58] <SnoopJ> If the other people who will read the test suite will understand that fixtures for the suite test_foo may be defined in the suite test_bar and vice versa, then go nuts
[23:46:07] <mokulus> sorry i misunderstood
[23:46:34] <mokulus> linter does seem to be a problem in this case not i've thought about it
[23:46:36] *** Joins: saltysoul (~sebmont@user/sebmont)
[23:46:39] *** Quits: PointThink (~PointThin@abzi189.neoplus.adsl.tpnet.pl) (Ping timeout: 264 seconds)
[23:48:19] *** Quits: kar (~kar@68.203.99.60) (Quit: WeeChat 3.0)
[23:50:49] <s98259> I'm trying to check if a file is empty, I've tried both os.stat(FileName).st_size and os.path.getsize(FileName) but both are returning 151 and the file is definitely empty.
[23:51:15] <SnoopJ> mokulus, well, there's always the option of not linting the tests at all, which is where I'd fall
[23:51:55] <SnoopJ> s98259, does empty mean "zero bytes" ? There are a variety of file formats that can be "empty" but contain a nonzero number of bytes.
[23:55:09] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:57f:99d1:5cdc:b71e)
[23:55:14] *** Quits: teut (~teut@122.161.16.132) (Quit: Client closed)
[23:55:19] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[23:56:22] *** Joins: TuckerBrandy1997 (~TuckerBra@209.87.29.242)
[23:57:24] *** Joins: emf (~emf@2620:10d:c090:400::5:824c)
[23:57:25] <TuckerBrandy1997> https://dpaste.org/kx6G
[23:57:27] <TuckerBrandy1997> how do i fix this
[23:57:36] <TuckerBrandy1997> oh nvm
[23:57:40] <TuckerBrandy1997> it's not an error
[23:58:31] <Wooble> TuckerBrandy1997: you really shouldn't use a conditional expression like that, though.
[23:58:54] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 260 seconds)
[23:59:21] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
