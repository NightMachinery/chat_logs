[00:00:12] <[relay]_> <dmiles> (usually there are many more rules that result in negation than result in non-negation)
[00:01:42] <[relay]_> <dmiles> so we can afford to do deeper searches since the negative space is occupied by strong negations
[00:01:54] <[relay]_> <dmiles> deeper postive searches
[00:05:28] <[relay]_> <dmiles> why i use PFC (forward chaininjg is i can manage and write rules about how unit clauses get propagated) ideally they overalp producing some of the same pathways
[00:05:52] <[relay]_> <dmiles> teh foward chaining helps ensure i am not duplicating those pathways
[00:29:05] <Celelibi> I'll need to dissect all you just said.
[00:31:04] <Celelibi> BTW, the authors of SMA* applied to to PTTP to make the search faster and memory-bounded.
[00:39:47] *** Quits: wacki (~wacki@87.122.81.3) (Quit: Leaving.)
[00:50:04] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net)
[00:53:10] *** Quits: yauhsien_ (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[00:56:06] *** Joins: rgrinberg (~textual@187.223.139.175)
[01:15:03] <Celelibi> Oh ! dmiles made FLUX.
[01:25:53] <aindilis> I think Michael Thielscher made FLUX
[01:26:50] <aindilis> "Reasoning Robots: The Art and Science of Programming Robotic Agents" - or something is the book on FLUX
[01:27:17] <aindilis> FLUX is cool, but doesn't seem to do nested terms and without FLUXPlayer, does not come with any search algorithms.
[01:27:37] <aindilis> I wrote a primitive Breadth First Search implementation for FLUX.
[01:28:26] <aindilis> ( dmiles made Logicmoo \ PromudMUD \ NomicMU )
[01:28:46] <aindilis> *PrologMUD
[01:30:35] <aindilis> FLUX is not super performant
[01:31:40] <aindilis> I wrote some stuff to offload planning problems from Prolog to PDDL planners
[01:32:03] <aindilis> but, while super useful for certain applications, PDDL has many limitations.
[01:32:22] <aindilis> Now I'm using Jason<-JPL->SWIPL, which doesn't really do any planning whatsoever.
[01:33:22] <aindilis> I plan to control the PDDL planners from Jason as a "metaplanner."  grandrew wrote a metaplanner, Logicmoo has a metaplanner, and there are a few others.
[01:34:13] <aindilis> I also have a few MCTS Prolog implementations
[01:37:03] <Celelibi> What is a metaplanner?
[01:37:21] <aindilis> good question
[01:37:22] <aindilis> one sec
[01:37:44] <aindilis> https://github.com/hyperc-ai/metaplanner <- here are some sample features of a metaplanner
[01:37:51] <aindilis> I can look for another doc that talks about it too
[01:37:57] <Celelibi> How is MCTS useful? What is it you're trying to evaluate?
[01:38:19] <aindilis> real-world life planning
[01:39:04] <aindilis> home security, domestic violence situations
[01:39:25] <aindilis> I wrote a draft paper talking about all this
[01:39:33] <pikrzysztof> MCTS is very useful for AI
[01:40:38] <aindilis> Here is another document on metaplanners I think https://docs.google.com/document/d/1th8cIxuhlsm9HjxYfkd1JzNRPe230R4y/edit
[01:40:40] <Celelibi> I love the idea of a metaplanner. ^^
[01:42:16] <aindilis> In my case, I'm going to use Jason/SWIPL to control the financial planner program I have, which can compute several months of financial plans in 0.02 seconds.  I'm going to vary the domain,
[01:42:17] <aindilis> like make certain paychecks late, and things of that nature, for contingency planning.
[01:42:56] <aindilis> I actually tried to do that with FLUX, but ran into some difficulties.
[01:45:43] <Celelibi> Is your finances that complex? I mean I personnally don't have much decisions to be made. ^^
[01:45:57] <aindilis> Here are some limitations of PDDL: http://paste.debian.net/1231799/
[01:46:13] <aindilis> re: finances - I'm trying to write something that can help people with cash-flow issues.
[01:46:55] <Celelibi> Ah, yes, useful, indeed.
[01:49:18] <Celelibi> I think I've seen some papers trying to produce non-linear plans.
[01:49:41] <aindilis> yeah, like DNFct for instance
[01:49:59] <aindilis> (I mainly want to collect and package all the useful planners (ATP systems/everything actually) out there.  make a knowledge base about their strengths and weakness, use-cases, features, etc).
[01:50:09] <Celelibi> BTW, is that your area of research?
[01:50:35] <aindilis> planning?
[01:51:04] <Celelibi> As a whole?
[01:51:19] <aindilis> I'm interested in using mathematical logic and/or planners to solve real-life problems affecting people.  To make "proofs" that bad things don't happen to people.
[01:53:10] <aindilis> e.g. I will (ceteris paribus) not run out of money this month.
[01:53:14] <Celelibi> What is jason? Hard to google too.
[01:53:25] <aindilis> http://jason.sf.net
[01:53:35] <aindilis> it's a BDI agent based on Java/Prolog.
[01:54:22] <Celelibi> Is that your job?
[01:54:32] <aindilis> It's my self-appointed duty :)
[01:55:27] <Celelibi> Nice. :)
[01:55:50] <aindilis> It's just that, you write one decent life planning program, you can have 8 billion copies of it.  Seems like someone needs to write it?
[01:56:09] <aindilis> the effective per capita price of it is 0
[01:56:34] <Celelibi> This is bordeing AGI.
[01:56:52] <aindilis> true, I intend to use dmiles' AGI implementation when it is ready
[01:57:05] <aindilis> via Pengines
[01:58:04] <aindilis> https://swish.swi-prolog.org/pldoc/doc_for?object=section(%27packages/pengines.html%27)
[02:02:00] <Celelibi> I'm also very interested in AGI. And a good planning and reasonning engine is of course essential.
[02:02:30] <aindilis> cool!  yeah totally
[02:03:15] <aindilis> is that the motivation behind writing the planner and the program analysis?
[02:04:41] <Celelibi> Those are "real world" problems. There's a website with challenges. These are two of them.
[02:06:00] <Celelibi> But I choose to pick thel because they fit very well into my vision of AGI and make me learn new stuff.
[02:06:27] <aindilis> do you have any writings about your vision that I could read?
[02:06:36] <Celelibi> Not yet.
[02:08:32] <Celelibi> But mostly, I see an iterative process that can choose either a neural network or a reasonning system.
[02:08:55] <Celelibi> So that we could combine both approaches arbitrarily.
[02:09:05] <aindilis> cool! I like it.
[02:09:11] <aindilis> btw, I would encourage you to get your AGI ideas down on paper, since, if you're like me, you're liable to forget the details years later...
[02:09:53] <Celelibi> I will most likely re-discover them...
[02:10:00] <Celelibi> again and again. :D
[02:10:13] <aindilis> :)
[02:10:29] <aindilis> alright, well hope to hear more about your progress on this channel going forward!
[02:10:32] <aindilis> bbiab
[02:10:54] <Celelibi> But yeah, I probably should white them. I'm long overdue to make a blog somewhere.
[02:11:16] <aindilis> excellent
[02:11:47] <aindilis> https://swmath.org/ <- has a lot of good math programs, for instance
[02:24:49] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[02:27:10] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[02:30:16] *** Quits: RLa (~RLa@85.253.187.184.cable.starman.ee) (Quit: Client closed)
[02:31:45] <Celelibi> aindilis, oh, also. A long standing project of mine: a decompiler.
[02:32:03] <Celelibi> Which is tightly related to program analysis.
[02:32:41] <Celelibi> And require both state-space search and some intuition.
[02:38:19] <Celelibi> Most tools I know are rule-based. While a search is usually needed to recover the control structures and eliminate as many goto as possible and to be able to explore the graph of the "good" alternatives.
[02:39:01] <Celelibi> And intuition is needed to guide the search to make the program look more like a human-made one.
[02:40:17] <Celelibi> Adding general knowledge of the real world might also help making up variables names and comments.
[02:43:48] <Celelibi> And also, maybe, to incentivise unsafe transformations when they are very likely. And I just realized that if compilation is deductive, decompilation might have to be abductive at some point.
[02:54:29] *** Quits: sakasama (~sakasama@user/sakasama) (Ping timeout: 256 seconds)
[02:59:27] *** Quits: rgrinberg (~textual@187.223.139.175) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:25:25] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:c5a6:da8d:b74b:6ce8)
[03:30:59] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[03:39:08] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:c5a6:da8d:b74b:6ce8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:49:12] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d5a0:edd8:6280:59e9)
[03:49:12] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d5a0:edd8:6280:59e9) (Changing host)
[03:49:12] *** Joins: skapata (~Skapata@user/skapata)
[03:49:47] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:c5a6:da8d:b74b:6ce8)
[03:55:18] *** Joins: nitrix (~nitrix@user/nitrix)
[04:23:49] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[04:31:10] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Remote host closed the connection)
[04:32:31] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[04:36:14] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[04:36:46] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[04:37:34] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:46:38] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[04:55:32] <Celelibi> Hm... looks like rsasak fell off the internet. The few results I get, o ly those related to logicmoo are remotely relevant.
[05:01:05] <[relay]_> <dmiles> crazy.. i see that
[05:02:16] <[relay]_> <dmiles> well he set his repo's to hidden
[05:04:39] <[relay]_> <dmiles> nope.. here they are
[05:04:40] <[relay]_> <dmiles> https://github.com/RobertSasak/Prolog-Planning-Library
[05:20:31] <Celelibi> Thanks.
[05:45:02] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Remote host closed the connection)
[05:46:06] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[05:51:14] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[06:29:11] *** Joins: cmsmcq (~cmsmcq@65.19.36.46)
[06:42:58] *** Quits: jealousmonk (~user@user/jealousmonk) (Ping timeout: 250 seconds)
[06:48:18] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:51:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[06:51:44] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[06:56:29] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[06:59:37] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:c5a6:da8d:b74b:6ce8) (Ping timeout: 240 seconds)
[07:01:50] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[07:02:43] *** Joins: jealousmonk (~user@user/jealousmonk)
[07:04:12] <Celelibi> https://ethos.bl.uk/OrderDetails.do?uin=uk.bl.ethos.628450
[07:05:39] *** Joins: skapata (~Skapata@user/skapata)
[07:06:07] *** Joins: millido (~millido@84.210.150.128)
[07:07:11] <Celelibi> Heuristic search on lifted models  I don't know yet what symmetry breaking means in this context, but it sounds fascinating.
[07:15:48] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[07:30:24] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[07:31:12] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[07:34:00] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a)
[08:15:07] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[08:15:42] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[08:41:52] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:47:02] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a)
[09:13:22] *** Joins: wacki (~wacki@87.122.91.154)
[09:38:53] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[09:48:41] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:00:51] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 256 seconds)
[10:20:05] *** Quits: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:20:19] *** Joins: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net)
[10:27:09] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net) (Quit: Leaving)
[10:42:41] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[10:46:02] *** Joins: octetta56 (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[10:46:14] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[10:48:10] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[10:48:40] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Remote host closed the connection)
[10:48:48] *** Quits: octetta56 (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Quit: Client closed)
[10:48:55] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[10:49:58] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[10:56:45] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:10:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[11:12:43] *** Joins: skapata (~Skapata@user/skapata)
[11:18:48] *** Joins: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[11:20:50] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[11:23:35] *** Quits: yauhsien (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:25:02] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Ping timeout: 240 seconds)
[11:25:51] *** Joins: rogersm (~rogersm@90.166.180.250)
[12:15:43] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Ping timeout: 256 seconds)
[12:22:26] *** Joins: yauhsien (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net)
[12:40:10] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[12:45:06] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[12:49:45] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[13:03:11] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[13:03:24] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:04:11] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[13:05:45] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:09:16] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:21:24] *** Quits: stis_ (~stis@h46-236-78-23.cust.a3fiber.se) (Read error: Connection reset by peer)
[13:21:36] *** Joins: stis_ (~stis@h46-236-78-23.cust.a3fiber.se)
[13:22:17] *** Quits: stis_ (~stis@h46-236-78-23.cust.a3fiber.se) (Client Quit)
[13:37:03] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 272 seconds)
[13:38:17] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:53:21] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[14:53:31] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[15:01:02] *** Joins: vukung (~vukung@t1.iit.bme.hu)
[15:29:48] *** Quits: vukung (~vukung@t1.iit.bme.hu) (Ping timeout: 256 seconds)
[16:01:34] *** Joins: Leone (~Leo@108.175.224.215)
[16:22:12] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[16:26:45] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:09:12] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[17:19:22] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:26:09] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[17:31:22] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[18:30:06] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[18:35:09] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Ping timeout: 256 seconds)
[18:46:22] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:06:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fde8:44d1:927a:3cf9)
[19:06:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fde8:44d1:927a:3cf9) (Changing host)
[19:06:32] *** Joins: skapata (~Skapata@user/skapata)
[19:11:14] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a)
[19:24:31] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:24:35] *** Joins: jealousmonk (~user@user/jealousmonk)
[19:30:12] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[20:06:39] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a)
[20:19:33] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:29] *** Joins: RLa (~RLa@85.253.187.184.cable.starman.ee)
[20:29:54] *** Joins: pbmagi (~Thunderbi@host-92-14-106-162.as13285.net)
[20:32:49] *** Quits: pbmagi (~Thunderbi@host-92-14-106-162.as13285.net) (Client Quit)
[20:40:34] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[20:57:37] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Ping timeout: 256 seconds)
[21:00:27] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a1e9:5294:11ab:484a)
[21:01:57] *** Joins: econo (uid147250@user/econo)
[21:14:01] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[21:18:29] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Ping timeout: 250 seconds)
[21:39:58] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[21:54:21] *** Joins: skapata (~Skapata@user/skapata)
[22:44:03] *** Joins: Volt_ (~Volt_@c-73-145-161-51.hsd1.mi.comcast.net)
[22:45:03] *** Quits: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:57] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[22:50:28] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[23:36:36] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:40:05] *** Quits: RLa (~RLa@85.253.187.184.cable.starman.ee) (Quit: Client closed)
[23:42:39] *** Joins: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net)
[23:49:08] *** Joins: skapata (~Skapata@user/skapata)
[23:51:58] *** Quits: wacki (~wacki@87.122.91.154) (Quit: Leaving.)
[23:59:48] *** Quits: yauhsien_ (~yauhsien@61-231-19-150.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
