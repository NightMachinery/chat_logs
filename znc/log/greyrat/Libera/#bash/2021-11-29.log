[00:00:55] *** Joins: extern (~archer@213.137.71.14)
[00:07:46] *** Joins: reset (~reset@user/reset)
[00:08:09] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[00:08:26] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[00:08:41] *** Quits: jab416171 (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[00:08:56] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[00:10:57] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[00:12:07] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:13:15] *** Quits: extern (~archer@213.137.71.14) (Read error: Connection reset by peer)
[00:13:31] *** Joins: seninha (~seninha@user/seninha)
[00:15:17] *** Joins: sublim20 (~sublim20@user/sublim20)
[00:15:21] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 268 seconds)
[00:16:38] *** magla is now known as geli
[00:17:18] *** Quits: DAR_Linux (~DAR_Linux@2601:405:4901:7b80:fcd1:7acf:cdc2:4d1a) (Remote host closed the connection)
[00:17:29] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Remote host closed the connection)
[00:17:42] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[00:19:37] <Blondie101010> xx:  your list is at least missing: & | * ? !
[00:19:56] <xx> yeah
[00:20:21] <xx> in fact I can't think of any non-alphanumeric character that wouldn't have a special meaning in some place
[00:21:39] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[00:22:29] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 250 seconds)
[00:23:28] <parst> there's no need to guess.  just look at that syntax.h
[00:23:41] *** Joins: lavaball (felix@31.204.155.215)
[00:23:49] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[00:24:20] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:24:39] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:26:14] *** Quits: geli (~gelignite@55d4f645.access.ecotel.net) (Quit: Stay safe!)
[00:26:21] *** Joins: aphorise (aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl)
[00:26:49] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[00:27:35] <aphorise> How can I synthesise the opening of 10's of thousands of files at the same time... trying to simulate potential inode exhaustion.
[00:28:09] <Blondie101010> just create the files if you want to see how it behaves
[00:28:30] <Blondie101010> for i in {1..10000000000}; do touch $i; done
[00:28:37] <Blondie101010> it will eventually fail
[00:28:55] <Blondie101010> not something you should run on an important system
[00:29:29] <Blondie101010> df -i # would give you the real number, btw
[00:29:51] <parst> you want inode exhaustion of open fds exhaustion?
[00:29:55] <parst> *or
[00:30:07] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:30:23] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[00:30:51] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:18fd:8642:c4bd:1f7e)
[00:32:44] <aphorise> parst great correction - both would be great.... thanks Blondie101010 - but I was hoping for something faster than just an increment like that - although I will try that just to see how fast it doesnt go & ofc I'm not going to be doing this outside a VM ;-)
[00:33:55] <parst> are you trying to test the kernel or trying to test how your program responds to the exhaustions?
[00:34:46] <Blondie101010> aphorise:  it's very predictable with `df -i`
[00:34:46] *** Quits: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com) (Quit: WeeChat 3.2)
[00:35:04] <Blondie101010> which is actually what monitoring should look at
[00:35:26] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[00:36:23] <aphorise> parst kernel
[00:36:31] <Blondie101010> doesn't matter
[00:36:51] <aphorise> Blondie101010 we are way past that - and I'm always using sar - or at least trying to for the current purposes.
[00:36:54] <Blondie101010> oh forget me :)
[00:37:11] *** Joins: itachi19 (~itachi19@46.232.210.60)
[00:37:33] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:18fd:8642:c4bd:1f7e) (Ping timeout: 268 seconds)
[00:37:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[00:37:43] <Blondie101010> open fd is a tiny bit more complicated but faster to reproduce
[00:37:44] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[00:38:12] *** Joins: sdu (~doo@185.44.146.165)
[00:38:26] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[00:38:47] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[00:39:11] <parst> you can do `mkfs.ext4 -N <number of inodes>` on a loopback filesystem in your test vm.  make it some tiny number, like 10.  then watch what happens when you try to create file 11
[00:39:36] <aphorise> I wish there was a nice tool set just to simulate some of these conditions - sort of like what Brendan Gregg gives on his talks on performance analysis... I've still not read his books but would be cool if there was a suit out there to cause some mayhem on-loop and at random... rather he does a lot of his talks with programs that cause known symptoms which i cant blame him as that's the only way
[00:39:36] <aphorise> to give a presentation in < 1hr :-p
[00:40:02] <parst> for simulating fd exhaustion, can use `ulimit -n` with a similarly small number
[00:40:07] <aphorise> parst  smart... I see - reduce max then hit it soon good idea.
[00:40:16] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:42:41] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[00:42:41] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 265 seconds)
[00:43:50] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:44:07] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[00:44:38] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[00:46:19] <xx> I have a command at location /usr/bin/command=text (yes, really...) and it is in PATH. How do I run this thing?
[00:47:08] <xx> is using the absolute path the only way?
[00:47:24] <geirha> command\=text
[00:47:35] <aphorise> ^^ indeed
[00:48:13] <xx> ah, thanks
[00:48:18] *** Joins: dre (~dre@2001:8003:c932:c301:7e35:e886:e998:1b1c)
[00:48:25] <earnest> Everything is a string, so quote it
[00:48:26] <parst> or just quote it
[00:48:35] <earnest> parst: \ is a quote in shell
[00:48:51] <aphorise> xx you can also `bash 'command=text'`  if it's a system wide thing for example
[00:49:11] <geirha> that assumes it's a bash script
[00:49:15] <xx> somehow I didn't expect running 'command=text' to work, but it does
[00:49:20] <xx> it's not a script sadly
[00:51:57] <Blondie101010> why keep that?
[00:52:18] *** Joins: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com)
[00:52:19] <Blondie101010> if the script is useful, rename it, alias it, symlink it
[00:52:27] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[00:54:55] <earnest> There's no need to change anything
[00:55:19] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[00:56:32] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[00:57:05] <aphorise> yeah sorry I assumed it was shell / script of some sort - you can `exec ` in that case no?
[00:57:31] <parst> I've seen this kind of thing before.  most of the time the commands are named like that so the vendor can know how their command was invoked without having to have different commands.  they just look at argv[0] and pull out the part after the = -- its a little bit of a trick to encode arguments into a symlink.  its goofy.
[00:57:31] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[00:58:16] <osse> but that's why there's argv[1] :O
[00:58:17] <parst> so renaming it, symlinking it to something else will change argv[0] and break the program
[00:58:19] *** Quits: Mmike (~mario@user/mmike) (Quit: Purpuratum, floret pratum...)
[00:58:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:59:12] <aphorise> yeah it's not an invalid naming mind you almost nothing is nix land :-D  - however your opinionated thinking is not wrong... as typically any arg space or arg=... is what you'd typically expect.
[01:00:00] *** Joins: Mmike (~mario@user/mmike)
[01:01:24] <earnest> What does become a pain is that posix sh doesn't allow - in function names, which makes wrapping commands containing such characters difficult (can uses aliases)
[01:01:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:02:02] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[01:02:23] <aphorise> ^^^ I didnt even think of that! - how did it just come to you :-D
[01:02:33] <Blondie101010> using '-' in names is senseless in any programming environment
[01:02:35] <earnest> I.e. wrap() { real-command; }; alias real-command=wrap
[01:02:48] <earnest> Blondie101010: What?  youtube-dl
[01:03:01] <Blondie101010> not saying it can't be done, but it shouldn't
[01:03:01] <aphorise> Blondie101010 got a lot of opinions :-D
[01:03:10] <parst> lisp :-(
[01:03:17] <Blondie101010> if you know grade 3 Math you could guess why
[01:03:40] <earnest> Blondie101010: clang-doc, ssh-add, run-parts, gcc-ar, etc., etc.
[01:03:47] <earnest> - in command names is extremely common
[01:03:48] <aphorise> why cause you always treat hyphens as minuses? - is that what they teach in school these days? :-p
[01:03:49] <Blondie101010> forget it
[01:03:54] <earnest> I have almost 800 of them
[01:03:57] <geirha> exec requires wrapping it in a subshell so it replaces the subshell instead of the shell
[01:03:59] <Blondie101010> I know
[01:04:09] *** comruminoAlt is now known as comrumino
[01:04:10] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[01:04:34] <Blondie101010> an in command lines, dashes are often used as options which makes it even more confusing
[01:04:53] <BSaboia> How can I check if a variable value is on a list? I am tying to validate user input (i.e can be only 'yes' or 'no')
[01:04:54] <aphorise> Why is it dashes - not hyphens (these Americans honestly)
[01:05:28] <geirha> because they dash all hope or normalsy
[01:05:36] <BSaboia> The "user input" in this case must be passed as an env var, so ANSWER=yes script.sh
[01:05:40] <earnest> aphorise: I wouldn't fret over the loss of language, you'll find endless examples there
[01:05:45] <aphorise> geirha  LMAO
[01:05:58] <parst> BSaboia: you want the `case` statement
[01:06:01] <earnest> (All you can do is preserve it in your own manner)
[01:06:16] <BSaboia> parst, thanks
[01:06:47] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[01:06:59] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[01:07:02] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[01:08:39] *** Joins: akoana (~ah@user/akoana)
[01:10:58] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[01:11:04] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:11:44] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:1802:f496:bffe:dc54)
[01:11:46] *** Joins: Warkruid (~MarderIII@2001:985:e889:1:1802:f496:bffe:dc54)
[01:12:35] *** Quits: Doraemon (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[01:12:55] *** Joins: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de)
[01:15:07] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[01:17:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:23:58] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:24:15] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[01:24:15] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[01:27:31] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[01:28:36] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[01:29:50] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:1802:f496:bffe:dc54) (Quit: Leaving)
[01:29:57] *** Joins: Atque (~Atque@user/atque)
[01:30:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[01:30:38] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:33:44] *** Joins: ano (~ano@user/ano)
[01:34:12] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:36:55] *** Joins: millido (~millido@84.210.150.128)
[01:38:57] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[01:39:31] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:41:23] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:18fd:8642:c4bd:1f7e)
[01:42:45] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 256 seconds)
[01:43:35] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[01:47:26] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:18fd:8642:c4bd:1f7e) (Ping timeout: 245 seconds)
[01:48:44] *** Parts: Thanatermesis (~Thanaterm@191.92.148.122) (ɯlɐɔ uı ʞɹoʍ oʇ ƃuıoƃ)
[01:50:34] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[01:52:39] <xx> I realllly should have checked the wiki https://mywiki.wooledge.org/BashGuide/SpecialCharacters
[01:52:46] <xx> that's what I was looking for
[01:55:12] <larryv> didn't think you wanted a list of most-but-not-all special characters
[01:55:36] *** Joins: nuh^ (~nuh@68.101.58.90)
[01:56:31] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[01:57:02] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:57:06] *** Quits: Warkruid (~MarderIII@2001:985:e889:1:1802:f496:bffe:dc54) (Quit: Leaving)
[01:57:32] <xx> yeah I hardly ever know what I actually want
[01:57:36] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[01:57:43] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 268 seconds)
[02:00:26] *** Joins: useretail (~useretail@185.132.19.151)
[02:00:26] *** Quits: useretail (~useretail@185.132.19.151) (Client Quit)
[02:00:33] *** Joins: useretail (~useretail@185.132.19.151)
[02:02:10] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[02:06:32] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[02:07:28] *** Quits: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2) (Remote host closed the connection)
[02:07:34] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[02:08:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:09:32] *** Quits: maledictium (~crux@bl14-67-155.dsl.telepac.pt) (Ping timeout: 240 seconds)
[02:11:09] *** Joins: LanDi (~landi@177.37.147.34)
[02:12:00] *** Quits: Inline (~Inline@aftr-37-201-240-2.unity-media.net) (Remote host closed the connection)
[02:13:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:13:28] *** Quits: unclutter (~gentoo@60.81-166-246.customer.lyse.net) (Quit: Lost terminal)
[02:14:36] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:17:13] *** Quits: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[02:17:37] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:22:43] *** Parts: nickodd (~nickodd@user/nickodd) ()
[02:23:23] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[02:23:51] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[02:24:11] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[02:29:00] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:29:30] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[02:30:55] *** Joins: sublim20 (~sublim20@user/sublim20)
[02:32:45] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[02:32:46] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[02:33:16] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[02:34:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:34:44] *** Joins: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[02:35:57] *** Quits: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Ping timeout: 250 seconds)
[02:37:12] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:38:28] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:39:07] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:40:47] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[02:42:23] *** Joins: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[02:42:49] *** Quits: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Ping timeout: 256 seconds)
[02:43:31] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[02:44:23] *** Joins: nickodd (~nickodd@user/nickodd)
[02:48:11] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:12] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:49:31] *** Quits: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com) (Ping timeout: 268 seconds)
[02:51:44] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[02:53:23] *** Joins: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com)
[02:54:44] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:56:05] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Ping timeout: 265 seconds)
[02:56:05] *** Joins: emanuele6 (~emanuele6@net-2-36-148-173.cust.vodafonedsl.it)
[02:56:11] *** Quits: emanuele6 (~emanuele6@net-2-36-148-173.cust.vodafonedsl.it) (Changing host)
[02:56:11] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[02:56:34] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[02:56:45] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[02:57:16] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[02:57:33] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[03:00:58] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[03:03:02] *** Quits: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:03:35] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:56] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[03:04:11] *** Quits: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr) (Quit: Leaving)
[03:05:14] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 260 seconds)
[03:06:00] *** Joins: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com)
[03:06:58] *** Quits: sazawal (~sazawal@122.161.84.237) (Quit: Leaving)
[03:10:00] *** Joins: pj (~pj@ghettoforge/pj)
[03:11:43] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[03:12:15] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[03:12:19] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[03:12:31] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[03:13:26] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:32] *** Joins: noord (~noord@user/noord)
[03:16:44] *** Quits: az (az@user/azz) (Write error: Connection reset by peer)
[03:16:44] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Quit: Stable ZNC provider #bnc4you)
[03:18:48] *** mpagano_ is now known as mpagano
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:25:54] *** Quits: sudomann (~sudomann@2601:155:8402:4960:b845:8dae:1b6a:9b76) (Ping timeout: 268 seconds)
[03:30:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[03:30:10] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:30:42] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[03:32:20] *** BadWolf is now known as azerty
[03:32:41] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:33:07] *** Joins: rgrinberg (~textual@200.5.63.76)
[03:35:12] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:35:36] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:39:38] *** Joins: az (az@stable.bnc.by.bnc4you.xyz)
[03:40:02] *** az is now known as Guest7716
[03:43:28] <k-man> i like how the ix.io pastebin provides a nice bash function to paste to it http://ix.io/    - anyone aware of a bash project that has a more generic paste function that will use a selection of paste bins? and maybe if one fails, it will just move to the next and try that?
[03:48:41] <yitz> patebin () { pasteA || pasteB || pasteC || pasteD ; }
[03:48:53] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[03:48:53] <yitz> Replace with your choice of pastebin commands
[03:49:26] <yitz> I could stick that on a Github gist and name it yitz's fabulous paste script if you need a project
[03:52:27] <larryv> yitz: do it
[03:55:26] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[03:55:50] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[03:55:55] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[03:58:06] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[04:00:10] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[04:00:30] <e36freak> yitzs_fabulous_paste_script "$file"
[04:00:33] <e36freak> that's a lot of typing
[04:01:46] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[04:05:16] *** Joins: igemnace (~ian@user/igemnace)
[04:06:12] <xx> yfps < "$file"
[04:09:04] *** Joins: Delf (Delf@user/delf)
[04:09:20] <Delf> If I have a loop inside a loop, how do I break the parent loop?
[04:12:21] <yitz> return from a function. or set a var
[04:13:03] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:14:32] <Delf> Or not. I asked too quick! break can take an option
[04:16:46] <Delf> while true ; do while true ; do echo test ; sleep 2s ; break 2 ; done ; done
[04:17:42] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:18:18] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[04:19:04] <Delf> Thanks for the quick reply, yitz :)
[04:22:37] <Blondie101010> the while condition should match the break case
[04:23:44] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[04:26:01] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:26:09] *** Joins: sgn_ (~sgn@user/sgn)
[04:27:39] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[04:30:40] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 268 seconds)
[04:36:24] <xx> such a pity that there's no goto in bash
[04:36:27] <Delf> the nth of the target loop to be broken
[04:36:38] <Delf> xx: There isn't?
[04:37:19] <thebombzen> >pity
[04:38:11] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[04:40:32] <Delf> Didn't even know there was no goto. What do you want to use it for, xx?
[04:40:51] <xx> to... go to?
[04:40:53] <xx> :)
[04:41:42] <xx> would be a wonderful way of making code even less readable, and thus ensuring job security for yourself because you're the only one who knows how it works
[04:41:44] <Delf> I see no reason for goto to be your "go to".
[04:41:49] <Blondie101010> most goto uses could be done with a `case`, or functions
[04:42:17] <Delf> What about when you forget how it works? :D
[04:42:40] <xx> Delf: that's when I quit :)
[04:42:43] <Delf> It's a triple edged-sword
[04:43:02] <xx> too much edge on that sword
[04:43:13] <Delf> Indeed
[04:45:48] *** Quits: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[04:45:53] *** Joins: cdown_ (~cdown@89.32.122.5)
[04:46:15] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[04:46:24] *** Quits: rgrinberg (~textual@200.5.63.76) (Ping timeout: 256 seconds)
[04:48:40] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[04:48:48] *** cdown_ is now known as cdown
[04:49:27] *** Joins: gschanuel29 (~gschanuel@user/gschanuel)
[04:52:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[04:53:03] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 265 seconds)
[04:53:03] *** gschanuel29 is now known as gschanuel2
[04:54:12] *** Joins: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com)
[04:54:21] *** Quits: jcbjoe2021 (~joe@user/jcbjoe2021) (Quit: ZNC - https://znc.in)
[04:54:26] *** Quits: LanDi (~landi@177.37.147.34) (Remote host closed the connection)
[04:55:02] *** Quits: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:55:24] *** Joins: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com)
[04:55:58] *** Joins: xizhendu_ (~xizhendu@36.112.188.169)
[04:56:16] *** Joins: jcbjoe2021 (~joe@user/jcbjoe2021)
[04:56:52] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Read error: Connection reset by peer)
[04:59:04] *** Quits: MattMadness (~MattMadne@2603-7080-5702-ceee-e029-0839-8ced-f934.res6.spectrum.com) (Read error: Connection reset by peer)
[05:01:47] <Delf> Is it possible to run a function in the background? FunctionName &
[05:02:11] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[05:02:34] <pj> Delf: yes
[05:02:45] <Delf> How does one keep track of it? :P
[05:03:07] <pj> The same way you would keep track of any other backgrounded task
[05:03:10] <Delf> Can I use the wait command too?
[05:03:15] <pj> yep
[05:03:43] <pj> do keep in mind that if the function changes bash variables those changes won't end up in the parent process.
[05:04:12] <Delf> Even if the variables are declared before calling the function?
[05:04:21] *** Joins: xizhendu__ (~xizhendu@240e:404:8a40:e37c:4d3:b5f6:f5be:9)
[05:04:40] <pj> correct, because the function is backgrounded it is forked, so the variables won't survive the fork.
[05:04:54] <Delf> Damn it
[05:05:21] <Delf> How do I "collect" stuff from them?
[05:05:28] <Delf> return n?
[05:06:35] <pj> That will work if you use wait.
[05:06:40] <pj> otherwise no.
[05:07:00] <pj> Delf: What is your acual goal?
[05:07:04] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Ping timeout: 265 seconds)
[05:07:05] <pj> *actual
[05:08:34] <pj> # f(){ foo=2; echo "In f: $foo"; }; foo=1; echo "Before f: $foo"; f; echo "After f: $foo";
[05:08:34] <shbot> pj: Before f: 1
[05:08:34] <shbot> pj: In f: 2
[05:08:34] <shbot> pj: After f: 2
[05:08:46] <pj> # f(){ foo=2; echo "In f: $foo"; }; foo=1; echo "Before f: $foo"; f &; echo "After f: $foo";
[05:08:47] <shbot> pj: bash: syntax error near unexpected token `;'
[05:08:51] <pj> # f(){ foo=2; echo "In f: $foo"; }; foo=1; echo "Before f: $foo"; f & echo "After f: $foo";
[05:08:57] <shbot> pj: Before f: 1
[05:08:57] <shbot> pj: [1] 51
[05:08:57] <shbot> pj: etc... ( http://ix.io/3GqJ )
[05:10:39] <pj> # f(){ foo=2; echo "In f: $foo"; return 69; }; foo=1; echo "Before f: $foo"; f& wait 1; echo "After f: $foo, Exit code: $?";
[05:10:45] <shbot> pj: Before f: 1
[05:10:45] <shbot> pj: [1] 51
[05:10:45] <shbot> pj: etc... ( http://ix.io/3GqK )
[05:10:59] <pj> oh, bleh
[05:11:06] <pj> # f(){ foo=2; echo "In f: $foo"; return 69; }; foo=1; echo "Before f: $foo"; f& wait $!; echo "After f: $foo, Exit code: $?";
[05:11:11] <shbot> pj: Before f: 1
[05:11:11] <shbot> pj: [1] 51
[05:11:11] <shbot> pj: etc... ( http://ix.io/3GqL )
[05:11:34] <pj> Delf: ^^^^
[05:12:23] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Ping timeout: 265 seconds)
[05:12:29] <Delf> Imagine shbot breaking lines on ; and indenting, showing the script and it's result, in the url.
[05:13:22] <pj> If you're going to do that you may as well just run it locally and use a pastebin
[05:13:53] <pj> At the end of the day there is a limit to what shbot can do.
[05:16:22] <Delf> Nothing in particular @ ..your actual goal. Just trying to learn
[05:16:24] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:16:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:16:38] <pj> Delf: okay
[05:16:48] <pj> hrmmm, I wonder ...
[05:17:07] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[05:17:15] <pj> # f(){ echo "Beginning of f: $foo"; foo=2; echo "In f: $foo"; return 69; }; foo=1; echo "Before f: $foo"; f& wait "$!"; echo "After f: $foo, Exit code: $?";
[05:17:20] <shbot> pj: Before f: 1
[05:17:21] <shbot> pj: [1] 51
[05:17:21] <shbot> pj: etc... ( http://ix.io/3GqN )
[05:17:31] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:75eb:8ac3:5205:ec9d)
[05:18:07] <pj> so the function inherits bash variables even if they aren't exported, but the parent script doesn't get them back from the function.
[05:18:46] <Blondie101010> why the & and wait?
[05:18:49] <Blondie101010> it changese nothing
[05:19:04] <pj> Blondie101010: the question was specifically about what happens when you background a function.
[05:19:15] <pj> the wait was to show that you can get the exit code from the function.
[05:19:35] <Blondie101010> well you're waiting for it, so not benefiting from the background
[05:19:45] <Blondie101010> ah ok
[05:19:50] <pj> Blondie101010: it's not meant to be practical, it's demonstrative.
[05:20:30] <Blondie101010> getting the return value on real backgrounded jobs would be more work than that
[05:21:26] <pj> well, yes, you do have to wait specifically on that job, at best it allows you to run a couple of other things while the backgrounded job is running, and I would assume that if the backgrounded job ends before the wait then you would loose the exit code.
[05:22:03] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:22:10] <Delf> You just run the wait command in background, problem solved :P
[05:22:17] <pj> lol
[05:22:41] <pj> at the end of the day I wouldn't be relying on getting the exit code from a backgrounded job.  it is possible, but as Blondie101010 points out, not very practical.
[05:25:56] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[05:26:11] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[05:26:16] *** Joins: sublim20 (~sublim20@user/sublim20)
[05:26:35] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[05:26:47] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 268 seconds)
[05:27:27] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[05:28:17] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[05:29:40] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[05:30:49] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[05:34:13] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[05:35:26] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[05:36:04] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[05:42:17] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[05:44:20] *** Joins: xizhendu_ (~xizhendu@36.112.188.169)
[05:47:07] *** Quits: xizhendu__ (~xizhendu@240e:404:8a40:e37c:4d3:b5f6:f5be:9) (Ping timeout: 268 seconds)
[05:47:24] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 260 seconds)
[05:49:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[05:50:13] <Delf> So how does one go about doing some multi-threaded acrobatics?
[05:50:52] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[05:50:52] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[05:50:52] *** Joins: wuseman (~wuseman@user/wuseman)
[05:52:05] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:53:13] *** Joins: guest13 (~guest13@49.205.116.48)
[05:53:15] <Blondie101010> Delf:  well that's not what a thread is for starters
[05:53:34] <Blondie101010> and if your jobs depend on each other, delegate control
[05:54:13] <Blondie101010> can't see why you'd start jobs conditionally and then wonder what happened...  worst case, output the status to some fd
[05:55:15] *** Joins: ferdna (~ferdna@user/ferdna)
[05:55:50] <Delf> Multi-tasking?
[05:56:02] *** Joins: sublim20 (~sublim20@user/sublim20)
[05:56:10] <Blondie101010> yes but your description indicates clearly that you don't have a real use case
[05:56:19] <Blondie101010> when you have one, we can talk about it
[05:56:59] *** Quits: tex (~super@user/dix) (Ping timeout: 268 seconds)
[05:58:21] <Delf> Suppose I want to continuously watch multiple files for something specific (using tail -f and grep) for example, and when depending on which task finds that something specific... we do something
[05:58:36] <Blondie101010> that's one task
[05:58:37] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[05:59:14] <Delf> But a tail -f keeps following and it doesn't release control
[05:59:57] <Delf> I don't want to poll either
[06:00:04] <Blondie101010> that's a different story, because it expects the programs you call to react differently than normal
[06:00:21] <Blondie101010> it would probably involve replacing or rewriting them
[06:00:30] *** Joins: magyar (~magyar@user/magyar)
[06:00:41] <Delf> replacing or rewriting tail?
[06:00:59] <Blondie101010> how would you get grep to terminate ?
[06:01:09] <Delf> Rewrite, possibly... replace? Never!
[06:01:14] <pj> That sounds more like a task for another programming language.  Don't get me wrong, bash can probably do it, but another language where you can open the various different FDs, and then select(3) on them in a loop would be more appropriate.
[06:01:28] <Blondie101010> definitely
[06:01:41] <Blondie101010> select seems very applicable to file monitoring
[06:02:47] <Blondie101010> ah that's a misleading term in bsh
[06:02:56] <Blondie101010> never seen bash's select
[06:02:59] <Delf> I run man select but it's showing me programmer's manual. I'm by no measure any kind of programmer
[06:03:19] <Blondie101010> yeah it's meant for non blocking IO
[06:03:50] <Blondie101010> it allows concurrent streams without threading
[06:04:27] <pj> Blondie101010: bash's select does something entirely different.  The closest thing bash has to select(3) is read, and that would probably work, but not nearly as well as select(3) in another language.
[06:04:56] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[06:05:03] <Blondie101010> no one here would suggest you do that kind of thing in bash
[06:05:14] <pj> right
[06:05:23] *** Quits: guest13 (~guest13@49.205.116.48) (Remote host closed the connection)
[06:05:35] *** Joins: vlm (~vlm@user/vlm)
[06:06:06] <pj> Delf: various other languages may implement select(3) in different ways.  The reason I say select(3) is because that's the underlying system function that they would use.
[06:06:08] <Blondie101010> note that there are *plenty* of monitoring programs that do things like that
[06:06:19] <Blondie101010> so you should clarify your thoughts and search for one
[06:06:44] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[06:06:56] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[06:07:14] <pj> actually I've been saying select(3) but select(2) is probably more approriate.
[06:07:19] <pj> *appropriate
[06:07:23] <Delf> How do I make use of any such monitoring program in a bash script?
[06:09:01] <e36freak> !pm
[06:09:02] <greybot> http://mywiki.wooledge.org/ProcessManagement
[06:10:23] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[06:11:44] <e36freak> Delf: everything you can do is sort of hacky, and therefore what exact hack you use depends on the actual problem you're trying to solve
[06:11:49] <e36freak> a lot is discussed in that link
[06:12:30] <Delf> Lots of meat, chewing it now.
[06:14:11] *** Quits: datatech (~specter@user/datatech) (Quit: Lost terminal)
[06:16:37] <e36freak> actual attempts at something like multi-threading would also require IPC, probably through at least one fifo
[06:17:10] <e36freak> and at that point you're pretty far past what should ideally be done with a shell
[06:17:43] <emanuele6> !graduated
[06:17:43] <greybot> Congratulations! You've graduated to needing to use a real language!
[06:18:11] <e36freak> not to say it can't be done, but it would be a lot more painful than it needs to be
[06:19:48] <e36freak> you're kinda into more "i wanted to see if it can be done for the challenge" territory than something that's actually useful
[06:20:30] <Delf> Real language?
[06:20:56] <e36freak> yes, an actual programming language, not a shell
[06:21:21] <e36freak> you know, python, perl, C, C++, java, haskell, lisp...
[06:21:31] <Delf> If you were to bash me and then ask me if it was real, I'd say yes
[06:22:03] <pj> some languages will even allow you to specify a list of files to select on and will wait for input to become available from any one of them.
[06:22:52] <pj> basically put, other languages make this type of thing *easy*.  In bash it's hard and hacky.
[06:22:58] <Delf> I'm afraid of those languages. I'm afraid I'll get addicted to them and not use bash anymore
[06:23:04] <pj> lol
[06:23:21] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[06:23:51] <pj> Delf: you will be much more likely to grow an understanding of which language is appropriate under a given set of requirements.
[06:24:01] <pj> often times that language is bash.
[06:24:03] <e36freak> yup
[06:24:11] <e36freak> more tools just means more options to make your life easier
[06:24:30] <e36freak> "when all you have is a hammer, everything looks like a nail"
[06:24:52] <pj> and you can drive a screw in with a hammer, but it's much better to use a screwdriver.
[06:24:55] <e36freak> now if you also get a screwdriver and a wrench, you have a lot more options to get a fastener in there
[06:25:03] <e36freak> better and easier
[06:25:21] <e36freak> but you don't use that screwdriver when you do see a nail
[06:25:31] <Delf> Hahahh
[06:25:38] <pj> but jsut because you get a screwdriver doesn't mean you will stop using your hammer.
[06:26:02] <pj> okay, I need to go
[06:26:11] <e36freak> don't forget your hammer
[06:26:30] <Delf> Or your screwdriver!
[06:27:28] <Delf> I've now learned more than I have in 2 months. Thanks for all your feedback! Much appreciated
[06:27:34] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[06:28:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:31:03] *** Quits: zaz_ (~zaz@poneybl.eu) (Quit: bye)
[06:31:29] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:27] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[06:32:27] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[06:32:27] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[06:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:39:43] <Delf> Is it possible to "bind" keys in bash?
[06:40:00] <Delf> ctrl-f for example
[06:40:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:41:21] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[06:42:31] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[06:43:33] <Blondie101010> depends for what
[06:44:02] <Delf> In a script, like with a trap ctrl-c
[06:44:13] <Blondie101010> ctrl-c is controlled by `stty`
[06:44:29] <Blondie101010> what would you want ctrl-f to do ?
[06:44:55] <Blondie101010> if it's not for a signal, it won't affect the running program
[06:45:23] <Blondie101010> because that kind of control would come from the program's design
[06:46:17] <Delf> So I send HUP to the script and the script sends QUIT or does it send HUP to the child?
[06:46:58] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:47:21] *** Joins: sgn (~sgn@user/sgn)
[06:48:33] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:50] <Delf> s/HUP/INT/g
[06:55:24] <Blondie101010> it will do what you code it to do
[06:56:19] <Blondie101010> you could experiment with signal handling, but can't see how you could do anything useful before you get actual program design experience
[06:56:51] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[06:57:26] <e36freak> !sigint
[06:57:26] <greybot> How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[06:57:27] <e36freak> worth a read
[06:57:59] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[06:58:23] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:00:59] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:05:41] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:06:54] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:07:18] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[07:07:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:07:54] *** Joins: sgn (~sgn@user/sgn)
[07:09:09] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[07:09:32] *** Quits: jos1 (~jos3@dyndsl-178-142-064-194.ewe-ip-backbone.de) (Ping timeout: 260 seconds)
[07:09:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[07:17:26] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:17:45] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:19:27] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:19:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[07:20:02] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:20:57] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:21:14] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:22:28] *** Joins: jos1 (~jos3@dyndsl-091-248-052-116.ewe-ip-backbone.de)
[07:23:47] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:26:12] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[07:27:24] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:27:30] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[07:30:28] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[07:30:37] *** Joins: shbot (~shbot@37.139.2.101)
[07:30:40] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:30:59] *** Quits: greenriot (~greenriot@user/gr33nr10t) (Ping timeout: 260 seconds)
[07:31:25] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[07:32:26] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[07:32:38] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[07:32:50] *** Joins: kdc (~kdc@196.211.197.159)
[07:33:31] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.3)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:43:16] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 245 seconds)
[07:44:57] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[07:45:29] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:46:19] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:49:43] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[07:51:09] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.3)
[07:54:47] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 265 seconds)
[07:57:01] *** Quits: krisk (~krisk@user/krisk) (Ping timeout: 245 seconds)
[07:57:15] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Quit: okbye)
[07:59:28] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:01:17] *** Joins: vishal (~vishal@fedora/vishal)
[08:03:29] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 265 seconds)
[08:05:52] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3086:126b:ad23:6938)
[08:05:52] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3086:126b:ad23:6938) (Changing host)
[08:05:52] *** Joins: skapata (~Skapata@user/skapata)
[08:05:57] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[08:07:15] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[08:07:37] *** Joins: zostj (~rue@1-162-46-144.dynamic-ip.hinet.net)
[08:09:22] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[08:10:12] <quazimodo> so am i meant to just 'set +e' and 'set -e' around every "read -r -d '' my_var <<EOF ... EOF"
[08:11:29] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Read error: Connection reset by peer)
[08:12:20] <Blondie101010> why would you need that?
[08:13:39] <emanuele6> there are better ways
[08:13:50] <emanuele6> but preferably you would not use `set-e' at all
[08:15:46] <emanuele6> # set -e; ! false; ! true; echo hi
[08:15:47] <shbot> emanuele6: hi
[08:15:56] <emanuele6> # set -e; true; false; echo hi
[08:15:56] <shbot> emanuele6: (shell exited with 1)
[08:16:12] <emanuele6> negated pipelines can't make set-e exit for example
[08:16:57] <emanuele6> !-e > quazimodo: if you don't know that, you probably don't even know how set-e actually works and why you really should NOT use it
[08:16:58] <greybot> quazimodo: if you don't know that, you probably don't even know how set-e actually works and why you really should NOT use it: "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[08:17:22] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[08:17:36] <emanuele6> you can learn how set-e works in the external link in that wiki page and read the wiki for additional information against using set-e
[08:18:16] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 245 seconds)
[08:18:53] <quazimodo> emanuele6: it's not that i love using it, it's just that it appears to be used frequently in many cicd environments
[08:19:15] <Blondie101010> only if the script was written accordingly
[08:19:36] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 265 seconds)
[08:19:37] <Blondie101010> check return values instead of expecting the script to bail out magically
[08:19:46] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 260 seconds)
[08:20:11] <emanuele6> quazimodo: anyway, you can check that page, and learn that you can write a `!' before any command to make set-e ignore its exit value
[08:20:38] *** Joins: BlueShark (sid10311@user/blueshark)
[08:20:40] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Ping timeout: 268 seconds)
[08:20:41] <emanuele6> not sure why you need `read -r -d '' my_var', it's a terrible code smell
[08:21:00] <emanuele6> why don't you just use my_var="
[08:21:10] <emanuele6> s/$/ ?/
[08:21:54] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[08:22:14] *** Joins: ljharb (sid43720@user/ljharb)
[08:22:30] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 265 seconds)
[08:23:30] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[08:23:52] *** Joins: hubvu (sid495858@user/hubvu)
[08:23:59] *** Joins: kurahaupo_ (~kurahaupo@pa49-180-158-66.pa.nsw.optusnet.com.au)
[08:24:17] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Killed (NickServ (GHOST command used by kurahaupo_!~kurahaupo@pa49-180-158-66.pa.nsw.optusnet.com.au)))
[08:24:21] *** kurahaupo_ is now known as kurahaupo
[08:26:18] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[08:26:47] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[08:34:56] *** Joins: rgrinberg (~textual@200.5.63.76)
[08:35:59] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d)
[08:36:29] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[08:38:27] <quazimodo> emanuele6: yeah i'll read it more
[08:38:38] <emanuele6> quazimodo: why do you need read??
[08:38:55] <quazimodo> EOF felt nice :(
[08:40:37] <emanuele6> so you are basically misusing read, and misusing -d '' to just set a variable..
[08:40:53] <emanuele6> on top of that, you are doing it with set-e
[08:41:14] <emanuele6> ok.
[08:41:25] <emanuele6> if you like it that way
[08:42:37] <Blondie101010> still, my solution would be to remove the need for -e
[08:43:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:43:28] <Blondie101010> anyways, we all have our bad habits I suppose
[08:44:24] <quazimodo> Blondie101010: so one thing that was ... not surprising but a little annoying
[08:44:35] <quazimodo> 'returning' values by doing printf/echo is workable
[08:44:57] <quazimodo> but it gets harder to debug or do messaging to the user (not as stderr)
[08:45:11] <quazimodo> should I just manually pipe output to stdout or stderr in those cases?
[08:45:16] <emanuele6> you don't even know how set-e actually works though
[08:45:27] <emanuele6> so using it is just asking for trouble
[08:45:40] <emanuele6> and once you know how it works, you realise it is useless
[08:45:42] <Blondie101010> and it wouldn't solve this display question
[08:45:48] <quazimodo> emanuele6: i'm not saying i know best, only that it's something that i've seen done and copied
[08:45:53] <quazimodo> happy to be schooled in the correct solution
[08:46:00] <Blondie101010> echo "this is an error" 2>&1
[08:46:12] <Blondie101010> no: echo "this is an error" 1>&2
[08:47:28] <Blondie101010> and if you want to filter certain file pipes/file descriptor, you can use others
[08:47:30] <quazimodo> so for the sake of argument lets take a function like myfunc() { ... echo "user instruction"; printf "my return value" }, in this case i'd like to say 'user instruction' on stdout but capture the 'my return value' via foo="$(myfunc)"
[08:47:37] <quazimodo> is this possible, or advised?
[08:47:38] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[08:48:34] <Blondie101010> that will contain everything you output
[08:48:57] <Blondie101010> but I thought you wanted to capture errors
[08:49:27] <quazimodo> separate question entiroly
[08:49:46] <Blondie101010> well $() captures stdout
[08:49:57] <quazimodo> you and emanuele6 answered my questiens re. set -e and also advised on a better way to define the variables
[08:50:06] <quazimodo> but in the case of $(some_function) i'm a bit confused
[08:50:16] <quazimodo> suppose that the function asks for user input, but i want to capture that input
[08:50:18] <Blondie101010> if you want only one of the two lines to show up, use a different fd
[08:50:18] *** Joins: seninha (~seninha@user/seninha)
[08:50:33] <quazimodo> is there a way to 'escape the capturing of stdout by $()' for _some_ echo calls?
[08:50:35] <Blondie101010> sure, you output it
[08:50:44] <Blondie101010> mmm
[08:51:01] <Blondie101010> that's something that belongs in the function itself
[08:51:54] *** Joins: r3m (~launch@user/r3m)
[08:53:38] <e0> wii
[08:53:49] <emanuele6> nes
[08:56:21] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:57:40] *** Quits: joerg (~saturn@user/joerg) (Ping timeout: 268 seconds)
[08:58:11] *** Joins: joerg (~saturn@user/joerg)
[09:01:55] <Blondie101010> quazimodo:  here's an example of how you could handle 3 different outputs:  function myfunc() { echo "this is normal; echo "this is bad" 1>&2; echo "this is a catastrophee" 1>&3; } (myfunc |sponge stdout.txt) 2> stderr.txt 3>catastrophee.txt
[09:02:37] <Blondie101010> typo fix:  function myfunc() { echo "this is normal"; echo "this is bad" 1>&2; echo "this is a catastrophee" 1>&3; }; (myfunc |sponge stdout.txt) 2> stderr.txt 3>catastrophee.txt
[09:05:03] <quazimodo> i understand those
[09:05:25] <Blondie101010> then I don't get your question
[09:05:45] <Blondie101010> you can also use the function return value
[09:07:24] <quazimodo> i didn't know if there's an 'accepted way' to do something like myfunc() { echo "a question the user should see" 1>&__something__; printf "1 + 1 = 4"; }; EXAMPLE_MATH=$(myfunc)
[09:07:40] <quazimodo> such that the user sees something and EXAMPLE_MATH gets populated correctly
[09:07:51] <quazimodo> i can see now that I can use those redirects to achieve this
[09:09:20] *** Quits: lorimer (~lorimer@user/lorimer) (Ping timeout: 256 seconds)
[09:13:07] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:22:16] *** Joins: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830)
[09:23:41] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:24:07] *** Joins: sgn (~sgn@user/sgn)
[09:25:46] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[09:26:10] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[09:29:08] *** Atque is now known as hammond
[09:29:17] *** hammond is now known as Atque
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:32:02] *** Quits: capn (~capn@user/capn) (*.net *.split)
[09:32:02] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:32:02] *** Quits: shalok (~shalok@user/shalok) (*.net *.split)
[09:32:02] *** Quits: randm (~randm@user/randm) (*.net *.split)
[09:32:02] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[09:32:02] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[09:32:02] *** Quits: Scarecr0w (~Scarecr0w@user/scarecr0w) (*.net *.split)
[09:32:02] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (*.net *.split)
[09:32:02] *** Quits: riddle (riddle@user/riddle) (*.net *.split)
[09:32:02] *** Quits: Ders (MrA@user/ders) (*.net *.split)
[09:32:02] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[09:32:02] *** Quits: bertptrs (~quassel@user/bertptrs) (*.net *.split)
[09:32:02] *** Quits: lachesis (~lachesis@user/lachesis) (*.net *.split)
[09:32:02] *** Quits: Gerlo (~Gerlo@user/gerlo) (*.net *.split)
[09:32:02] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (*.net *.split)
[09:32:02] *** Quits: haro (beau@saweet.net) (*.net *.split)
[09:32:02] *** Quits: e0 (ec@user/e0) (*.net *.split)
[09:32:03] *** Quits: wolfox (~101@bad.wolf.gr) (*.net *.split)
[09:32:03] *** Quits: Tadgy (~tadgy@slackware.uk/founder/tadgy) (*.net *.split)
[09:32:03] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[09:32:03] *** Quits: modin (~modin@user/modin) (*.net *.split)
[09:32:03] *** Quits: fcser (~fcser@booty.farted.net) (*.net *.split)
[09:32:03] *** Quits: gl (~x@pwn.lu) (*.net *.split)
[09:32:03] *** Quits: Noventicx1 (~Noventicx@crux.uberspace.de) (*.net *.split)
[09:32:03] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (*.net *.split)
[09:32:03] *** Quits: td001 (~td001@172.245.134.58) (*.net *.split)
[09:32:03] *** Quits: r00t`work (~r00t@82-198-216-115.briteline.de) (*.net *.split)
[09:32:03] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (*.net *.split)
[09:32:03] *** Quits: rj1 (~rj1@i.dont.know.how.com.puters.work) (*.net *.split)
[09:32:03] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (*.net *.split)
[09:32:03] *** Quits: Buliarous (~gypsydang@185.207.166.57) (*.net *.split)
[09:32:03] *** Quits: friedrich_ (~friedrich@aextron.de) (*.net *.split)
[09:32:03] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:32:03] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[09:32:03] *** Quits: izabera (izabera@user/izabera) (*.net *.split)
[09:32:03] *** Quits: itu (~wp@wikipedia/itu) (*.net *.split)
[09:32:03] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[09:32:03] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[09:32:03] *** Quits: hata (~hata@hata.moe) (*.net *.split)
[09:32:09] *** Joins: gl_ (~x@pwn.lu)
[09:32:11] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[09:32:11] *** Joins: friedrich (~friedrich@aextron.de)
[09:32:12] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[09:32:12] *** Joins: Buliarous (~gypsydang@185.207.166.57)
[09:32:12] *** Joins: MrA (MrA@2602:ff75:7:3ccc::20)
[09:32:12] *** Quits: dre (~dre@2001:8003:c932:c301:7e35:e886:e998:1b1c) (Quit: Leaving)
[09:32:16] *** Joins: haro (beau@saweet.net)
[09:32:17] *** Joins: rj1 (~rj1@i.dont.know.how.com.puters.work)
[09:32:18] *** Joins: wolf_ (~101@bad.wolf.gr)
[09:32:20] *** Joins: itu (~wp@lynx.uberspace.de)
[09:32:20] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[09:32:20] *** Joins: fcser (~fcser@booty.farted.net)
[09:32:20] *** Joins: Gerlo (~Gerlo@2a01:4f9:4b:4f30::2)
[09:32:21] *** Joins: lachesis (~lachesis@192.151.156.218)
[09:32:21] *** Joins: e0 (~x@rie.sdf.org)
[09:32:22] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[09:32:24] *** Joins: r00t`work (~r00t@82-198-216-115.briteline.de)
[09:32:24] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[09:32:29] *** Quits: Gerlo (~Gerlo@2a01:4f9:4b:4f30::2) (Changing host)
[09:32:29] *** Joins: Gerlo (~Gerlo@user/gerlo)
[09:32:29] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[09:32:31] *** Quits: lachesis (~lachesis@192.151.156.218) (Changing host)
[09:32:31] *** Joins: lachesis (~lachesis@user/lachesis)
[09:32:35] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[09:32:37] *** Joins: modin (~modin@user/modin)
[09:32:37] *** Joins: bertptrs (~quassel@user/bertptrs)
[09:32:40] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[09:32:40] *** Joins: Tadgy (~tadgy@slackware.uk/founder/tadgy)
[09:32:41] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[09:32:44] *** Quits: e0 (~x@rie.sdf.org) (Changing host)
[09:32:44] *** Joins: e0 (~x@user/e0)
[09:32:49] *** Joins: riddle (riddle@vps-dcf2ed18.vps.ovh.net)
[09:32:54] *** Joins: shalok (~shalok@user/shalok)
[09:32:55] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:32:59] *** itu is now known as Guest6257
[09:32:59] *** Quits: riddle (riddle@vps-dcf2ed18.vps.ovh.net) (Signing in (riddle))
[09:32:59] *** Joins: riddle (riddle@user/riddle)
[09:33:09] *** Joins: hata (~hata@hata.moe)
[09:33:27] *** Joins: randm (~randm@user/randm)
[09:33:34] *** Joins: quesker (~idnet@mail.89vx.net)
[09:33:37] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[09:33:42] *** Joins: td001 (~td001@172.245.134.58)
[09:33:53] *** Joins: capn (~capn@user/capn)
[09:34:10] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[09:34:27] *** Joins: Chaser (~Chaser@user/chaser)
[09:35:03] *** Quits: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:35:52] *** Joins: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net)
[09:36:19] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:36:24] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[09:36:24] *** Quits: themachine (~themachin@user/themachine) (*.net *.split)
[09:36:24] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[09:36:24] *** Quits: chunky (~chunky@i.dont.know.how.com.puters.work) (*.net *.split)
[09:36:24] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[09:36:24] *** Quits: modobasico (~modobasic@2001:470:69fc:105::1:1bc) (*.net *.split)
[09:36:24] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[09:36:24] *** Quits: icebearii[m] (~icebearii@2001:470:69fc:105::1:3135) (*.net *.split)
[09:36:24] *** Quits: Psi-Jack (psi-jack@user/psi-jack) (*.net *.split)
[09:36:24] *** Quits: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7) (*.net *.split)
[09:36:24] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (*.net *.split)
[09:36:24] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[09:36:24] *** Quits: topoi_ (~topoi@user/topoi) (*.net *.split)
[09:36:24] *** Quits: Camusensei (~Camusense@megaman.thican.net) (*.net *.split)
[09:36:24] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[09:36:24] *** Quits: MDingas- (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[09:36:24] *** Quits: akaporu (~akaporu@hs17.make2.me) (*.net *.split)
[09:36:24] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (*.net *.split)
[09:36:25] *** Quits: ccl (ccl@shell.xshellz.com) (*.net *.split)
[09:36:25] *** Quits: PsyZeus (~TheLight@user/psyzeus) (*.net *.split)
[09:36:25] *** Quits: a1 (~ekaj@user/ekaj) (*.net *.split)
[09:36:25] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[09:36:25] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[09:36:25] *** Quits: deetwelve (~deetwelve@user/deetwelve) (*.net *.split)
[09:36:25] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[09:36:25] *** Quits: soifou (~soifou@51.68.77.7) (*.net *.split)
[09:36:25] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:36:25] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[09:36:25] *** Quits: auri (~quassel@fsf/member/auri) (*.net *.split)
[09:36:25] *** Quits: Anvil (~anvil@193.252.149.222) (*.net *.split)
[09:36:25] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[09:36:25] *** Quits: Patsie (patsie@patsie.nl) (*.net *.split)
[09:36:32] *** Joins: Patsie (patsie@patsie.nl)
[09:36:32] *** Joins: Anvil (~anvil@193.252.149.222)
[09:36:33] *** Joins: theglass (~glass@246.ip-137-74-113.eu)
[09:36:34] *** Joins: ccl (ccl@shell.xshellz.com)
[09:36:34] *** Joins: PsyZeus (~TheLight@37.48.95.134)
[09:36:34] *** Joins: nvz (~user@nvz.farted.online)
[09:36:37] *** Joins: Camusensei (~Camusense@megaman.thican.net)
[09:36:37] *** Quits: theglass (~glass@246.ip-137-74-113.eu) (Changing host)
[09:36:37] *** Joins: theglass (~glass@user/theglass)
[09:36:38] *** Joins: soifou (~soifou@51.68.77.7)
[09:36:39] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[09:36:39] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[09:36:40] *** Joins: deetwelve (~deetwelve@66.70.242.150)
[09:36:40] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[09:36:40] *** Joins: chunky (~chunky@i.dont.know.how.com.puters.work)
[09:36:41] *** Quits: deetwelve (~deetwelve@66.70.242.150) (Changing host)
[09:36:41] *** Joins: deetwelve (~deetwelve@user/deetwelve)
[09:36:41] *** Joins: themachine (~themachin@user/themachine)
[09:36:41] *** Joins: akaporu (~akaporu@hs17.make2.me)
[09:36:41] *** Quits: PsyZeus (~TheLight@37.48.95.134) (Changing host)
[09:36:41] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[09:36:42] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[09:36:43] *** Joins: vinnix (~vinnix@user/vinnix)
[09:36:46] *** Joins: mweckbecker (~matthias@weckbecker.name)
[09:36:47] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:36:47] *** Joins: topoi (~topoi@user/topoi)
[09:36:49] *** Joins: Psi-Jack (psi-jack@user/psi-jack)
[09:36:53] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[09:36:57] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[09:37:13] *** Joins: chronon (~chronon@user/chronon)
[09:37:14] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[09:37:18] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[09:37:26] *** Joins: modobasico (~modobasic@2001:470:69fc:105::1:1bc)
[09:37:48] *** Joins: auri (~quassel@fsf/member/auri)
[09:38:49] *** Joins: icebearii[m] (~icebearii@2001:470:69fc:105::1:3135)
[09:38:51] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[09:39:19] *** Quits: lachesis (~lachesis@user/lachesis) (Ping timeout: 256 seconds)
[09:39:41] *** Joins: lachesis (~lachesis@user/lachesis)
[09:39:49] *** Joins: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr)
[09:40:27] *** Quits: Chaser (~Chaser@user/chaser) (Ping timeout: 256 seconds)
[09:40:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[09:41:01] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Ping timeout: 256 seconds)
[09:41:35] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[09:41:48] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[09:42:02] *** Joins: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7)
[09:42:39] *** Joins: Chaser (~Chaser@user/chaser)
[09:43:23] *** Joins: namkeleser (~namkelese@101.175.102.188)
[09:43:54] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[09:44:12] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[09:48:17] *** Joins: birkoff (birkoff@thunderirc.net)
[09:48:17] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[09:48:17] *** Joins: birkoff (birkoff@user/birkoff)
[09:49:02] <namkeleser> Hey I have a bit of a stupid question to ask about r75.46, so I have changed the password via the "set user admin password" command. which works fine for ssh termnal. but it doesnt change the password for the smartdashboard. i have read that you can it by bringing up cpconfig.deleting the admin account, and recreating it with a new password. but
[09:49:02] <namkeleser> sounds a bit wrong to me. if i try to do it from the dashboard itself, it says user can only be managed by cpconfig
[09:52:33] <e36freak> what does any of this have to do with bash
[09:54:03] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[09:57:57] *** Quits: Jong (~Jong@2620:10d:c090:400::5:31eb) (Ping timeout: 250 seconds)
[10:03:30] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:05:05] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[10:05:29] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[10:09:03] <quazimodo> so when i do myfunc() { read -p "Input something: " user_input; echo "user input was $user_input"; } and do result=$(myfunc) then 'read' must be doing some filedescriptor management itself eh?
[10:09:51] <e36freak> no
[10:09:59] <e36freak> file descriptors are inherited
[10:10:21] <e36freak> !redirtut
[10:10:21] <greybot> Redirections: http://mywiki.wooledge.org/Redirection
[10:11:08] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[10:11:57] <e36freak> the same way as if you redirected stdout or stdin for the whole script, anything in the script inherits that and reads from or writes to the appropriate place
[10:12:11] <e36freak> same thing happens with any subshell, including those created by $()
[10:12:18] <quazimodo> e36freak: that's what I understood, i was presuming that read then checks to see if there's a tty or something and manually redirects to some file
[10:12:19] <e36freak> only difference is $() redirects stdout
[10:12:42] <e36freak> oh
[10:12:53] <quazimodo> i shouldn't have said file descriptiors, although technically it would 'write to a file' by establishing a file descriptor '3' or something, wouldn't it
[10:13:00] <geirha> stdin and stderr are inherited from the main shell, and that's the two fds read uses
[10:13:02] <e36freak> read -p prints the prompt to stderr
[10:13:11] <quazimodo> it doesn't
[10:13:13] <quazimodo> i checket
[10:13:15] <e36freak> try result=$(myfunc) 2>/dev/null
[10:13:31] <quazimodo> yeah i tried that
[10:13:34] <e36freak> and?
[10:13:38] <quazimodo> it's not stderr
[10:14:01] <e36freak> oh, sorry
[10:14:06] <quazimodo> i think read might be using 'tty' to get the path to the tty's pts
[10:14:09] <e36freak> result=$(myfunc 2>/dev/null)
[10:14:20] <quazimodo> you win
[10:14:29] *** Joins: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de)
[10:14:31] <quazimodo> that surprises me though
[10:15:34] <quazimodo> either way it turns out it's easy enough to escape the capturing of stdout by $() by using echo "stuff" > $(tty)
[10:15:38] <e36freak> you can force it with read -p prompt var 2>/dev/tty
[10:15:47] <quazimodo> i'll have to check that there's a tty in the first place but it seems to work
[10:15:49] <e36freak> don't need to fork a command
[10:15:55] <e36freak> just use /dev/tty
[10:15:57] <quazimodo> oh
[10:16:18] <quazimodo> that's nice
[10:16:20] <quazimodo> i didn't know
[10:19:37] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[10:20:57] *** Quits: roadie` (~user@2a02:8108:ec0:1427:d48e:1fc2:ff82:7830) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[10:26:21] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:26:33] *** Quits: reset (~reset@user/reset) (Ping timeout: 265 seconds)
[10:27:02] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 265 seconds)
[10:34:47] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 250 seconds)
[10:36:28] *** Joins: cdown_ (~cdown@188.214.11.14)
[10:37:34] <mihaiadrian> hi
[10:37:39] <mihaiadrian> i have the following json
[10:37:39] <mihaiadrian> https://pastebin.com/raw/MjFpycAY
[10:37:45] <mihaiadrian> how can i count the number of elements in this json?
[10:39:36] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 265 seconds)
[10:39:38] *** cdown_ is now known as cdown
[10:40:21] <mihaiadrian> https://pastebin.com/raw/TD9aExEm
[10:40:24] <mihaiadrian> sorry, missed a closing "
[10:40:41] *** Joins: krisk (~krisk@user/krisk)
[10:41:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:41:45] <mihaiadrian> jq '. | length' file
[10:41:50] <mihaiadrian> ok, found out
[10:46:33] *** Joins: maledictium (~crux@bl14-67-155.dsl.telepac.pt)
[10:46:38] *** Joins: chuck_ (~chuck@181.191.143.126)
[10:46:47] *** Joins: reset (~reset@user/reset)
[10:46:56] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[10:46:56] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[10:46:57] *** Joins: wuseman (~wuseman@user/wuseman)
[10:56:10] <emanuele6> !jq
[10:56:11] <greybot> jq is a flexible and lightweight JSON processor: http://stedolan.github.com/jq/ . See #jq. Also, query JSON data with jshon: http://kmkeen.com/jshon/
[10:56:13] <emanuele6> #jq
[10:57:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:57:40] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[11:00:37] *** Joins: rendar (~rendar@user/rendar)
[11:01:58] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:04:19] *** Joins: carl-- (~carl-@185.103.188.130)
[11:04:34] *** Joins: gschanuel20 (~gschanuel@user/gschanuel)
[11:07:11] *** Quits: eleventh (~eleventh@143.131.13.208) (Ping timeout: 268 seconds)
[11:07:28] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 264 seconds)
[11:07:42] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:07:51] *** Quits: sinaowolabi (~SinaOwola@41.58.60.82) (Quit: Leaving)
[11:07:53] *** Joins: eleventh (~eleventh@143.131.13.208)
[11:08:00] *** Joins: sinaowolabi (~SinaOwola@41.58.60.82)
[11:08:24] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 268 seconds)
[11:08:24] *** gschanuel20 is now known as gschanuel2
[11:10:54] *** Joins: dreamon (~dreamon@ppp-88-217-67-53.dynamic.mnet-online.de)
[11:13:16] *** Joins: extern (~archer@213.137.73.51)
[11:13:26] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[11:13:53] *** Quits: chuck_ (~chuck@181.191.143.126) (Quit: leaving)
[11:16:14] *** Joins: kapad (~kapad@ppp-94-66-58-183.home.otenet.gr)
[11:17:51] *** Quits: kurahaupo (~kurahaupo@pa49-180-158-66.pa.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[11:18:00] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[11:20:14] *** Quits: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk) (Ping timeout: 256 seconds)
[11:21:49] <xx> # touch a.txt b.png c.mp4; for i in ./*!(*.txt); do echo mv "§i" "§i".old; done
[11:21:50] <shbot> xx: mv §i §i.old
[11:21:50] <shbot> xx: mv §i §i.old
[11:21:50] <shbot> xx: mv §i §i.old
[11:22:09] <xx> hmm
[11:22:11] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:22:38] <xx> is there a page somewhere that has *a lot* of extglob examples?
[11:23:10] *** Quits: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[11:23:16] <geirha> Think of !(...)   as being the same as *, but with exceptions
[11:23:43] <xx> # touch a.txt b.png c.mp4; for i in ./!(*.txt); do echo mv "§i" "§i".old; done
[11:23:43] <shbot> xx: mv §i §i.old
[11:23:43] <shbot> xx: mv §i §i.old
[11:23:56] <xx> geirha: that actually makes sense, thanks
[11:23:58] <geirha> now try with $ instead of §
[11:24:08] <xx> eh, still shows 2 files instead of 3, so it works
[11:24:21] <xx> but now it suddenly clicked that !(...) replaces the *
[11:25:08] <xx> it's so obvious now
[11:25:56] *** Quits: deetwelve (~deetwelve@user/deetwelve) (Quit: null)
[11:26:48] *** Quits: kapad (~kapad@ppp-94-66-58-183.home.otenet.gr) (Quit: Leaving)
[11:27:26] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:28:13] *** Joins: TomyWork (~TomyLobo@p200300e80f0f270088f808e325e1c9fc.dip0.t-ipconnect.de)
[11:28:16] *** Joins: deetwelve (~deetwelve@user/deetwelve)
[11:28:22] <extern> geirha: good morning
[11:28:26] *** Joins: prompt32 (~prompt32@ppp-94-66-58-183.home.otenet.gr)
[11:29:34] <extern> § = $ ?
[11:30:27] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[11:30:36] <xx> extern: I was just looking for non-alphanumeric characters that don't have any special meaning
[11:32:04] <osse> any non-ascii will probably do
[11:32:15] <extern> xx im failing to see your ultimate goal with this
[11:32:27] <extern> can you share with me maybe there's a better way ?
[11:32:39] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[11:33:24] *** Joins: han-solo (~hanish@user/han-solo)
[11:34:26] *** Quits: carl-- (~carl-@185.103.188.130) (Quit: Leaving)
[11:34:28] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:34:42] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[11:35:14] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[11:37:17] <extern> ws/quit
[11:37:18] *** Quits: extern (~archer@213.137.73.51) (Quit: WeeChat 3.3)
[11:43:59] *** MrA is now known as Guest6179
[11:44:03] *** Quits: sinaowolabi (~SinaOwola@41.58.60.82) (Quit: Leaving)
[11:44:17] *** Joins: sinaowolabi (~SinaOwola@41.58.60.82)
[11:45:37] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[11:45:37] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[11:45:37] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[11:46:28] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 264 seconds)
[11:47:16] *** Quits: xx (~xx@user/xx) (Ping timeout: 265 seconds)
[11:51:15] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[11:51:55] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Ping timeout: 256 seconds)
[11:54:06] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:75eb:8ac3:5205:ec9d) (Ping timeout: 245 seconds)
[11:57:41] *** Quits: zostj (~rue@1-162-46-144.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[11:58:00] *** Joins: zostj (~rue@1-162-46-144.dynamic-ip.hinet.net)
[11:58:51] *** Quits: dermoth (~dermoth@dsl-10-148-34.b2b2c.ca) (Ping timeout: 250 seconds)
[12:01:00] *** Joins: sazawal (~sazawal@122.161.84.237)
[12:01:20] *** prompt32 is now known as kapad
[12:02:26] *** Quits: kapad (~prompt32@ppp-94-66-58-183.home.otenet.gr) (Quit: Leaving)
[12:02:30] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Quit: Leaving)
[12:02:45] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[12:02:59] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[12:03:03] <quazimodo> is it possible to prevent a lack of fifo readers from causing the parent process to fail?
[12:03:09] <quazimodo> sorry, the process writing to the fifo
[12:03:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[12:03:17] *** Joins: kapad (~kapad@ppp-94-66-58-183.home.otenet.gr)
[12:03:41] <quazimodo> i'd love to be able to turn a daemon on & have it write to a fifo, and then have a monitoring tool be able to occasionally connect to it & listen for some updates, then disconnect
[12:06:16] *** Joins: narendra (~user@2a02:8109:b63f:ff7c::56c2)
[12:06:38] <emanuele6> a fifo is blocking io, you can't not read it all the time
[12:07:24] <quazimodo> great...
[12:07:45] <emanuele6> why does it have to be a fifo?
[12:08:40] <emanuele6> or why does it have to be one fifo, and not multiple created on demand?
[12:09:16] <quazimodo> might have to use sockets
[12:09:17] <emanuele6> it's not clear how you think "fifos" (named pipes) work
[12:09:32] <quazimodo> i used to know, a long time ago
[12:09:46] *** Quits: narendra (~user@2a02:8109:b63f:ff7c::56c2) (Remote host closed the connection)
[12:09:50] <quazimodo> i'll research later tonight
[12:09:50] <emanuele6> yes, but i don't know how you think they work..
[12:10:11] <emanuele6> so it is not clear what you want
[12:10:50] <quazimodo> let me read more & i'll probably end up with better question, thank you
[12:10:50] <selckin> sounds like you want a log file
[12:11:13] <quazimodo> selckin: no actually I want to run a number of processes & display their output in a CLI based dashboard
[12:11:15] <emanuele6> right, i don't get why you need a fifo instead of a regular file
[12:11:25] <quazimodo> howewver the dashboard should not be the parent that forked them
[12:11:32] <emanuele6> it sounds like you think fifo do something that i don't get
[12:11:41] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[12:11:53] *** Joins: dermoth (~dermoth@dsl-149-192.b2b2c.ca)
[12:12:00] <quazimodo> emanuele6: i was hoping to publish stdout to a fifo, then read via dashboard. I can see now that this is an incorrect use of fifos
[12:12:08] <quazimodo> sockets may be better fit, i'll have to read more
[12:12:30] <selckin> sounds like a file you can tail
[12:12:47] <emanuele6> but named pipes don't duplicate output, once you read from a pipe, you can't read the same thing again, what you read is gone
[12:13:18] *** Quits: kapad (~kapad@ppp-94-66-58-183.home.otenet.gr) (Quit: Leaving)
[12:13:26] <quazimodo> yes I expected that
[12:13:42] <emanuele6> that also means that two processes cannot read from the same pipe
[12:13:59] *** Joins: kapad (~kapad@ppp-94-66-58-183.home.otenet.gr)
[12:14:53] *** Quits: kapad (~kapad@ppp-94-66-58-183.home.otenet.gr) (Client Quit)
[12:16:29] <quazimodo> understood
[12:16:50] <quazimodo> it's been quite a long time since I covered the specific mechanisms
[12:17:59] <emanuele6> named pipes are just pipes; similar to the ones used to connect curl|jq
[12:18:08] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[12:21:17] <emanuele6> # exec 2>/dev/null; mkfifo my_pipe; printf '%s\n' 2 5 > my_pipe & awk '{print $1*3}' < my_pipe & wait
[12:21:18] <shbot> emanuele6: 6
[12:21:18] <shbot> emanuele6: 15
[12:21:40] *** Joins: shad (~shad@user/shad)
[12:22:04] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[12:23:40] *** Joins: neure (~TimoSuora@dzpbkmrkyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[12:23:42] <neure> hi
[12:24:07] <neure> I am on git for windows bash, and echo $(__git_ps1) takes almost two seconds. Any suggestions what I can do to fix this?
[12:24:28] <neure> This started happening yesterday after updating to latest version of Git for Windows
[12:24:32] <emanuele6> that means that __git_ps1 takes 2 seconds
[12:25:11] <emanuele6> if the question is git specific (it sounds like it is), try #git
[12:25:34] <neure> where is __git_ps1 implemented?
[12:25:38] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[12:25:44] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:25:47] <emanuele6> it's not bash that implements it
[12:26:09] <emanuele6> probably a function bundled with git-bash for windows
[12:26:28] <emanuele6> if it is, you can see the function definition with:    declare -f __git_ps1
[12:28:23] <osse> neure: C:\Program Files\Git\mingw64\share\git\completion\git-prompt.sh
[12:30:13] <neure> thanks!
[12:30:51] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:31:00] <osse> what version did you upgrade from
[12:31:38] *** Joins: tex (~super@user/dix)
[12:33:03] <neure> Can't remember
[12:33:21] <neure> not too old but could have been a few months
[12:33:57] <osse> nothing interesting has happened wtih that file for at least a year
[12:34:11] <osse> so maybe some defaults have changed in one of the commands it runs
[12:34:18] <neure> no it is in git itself that has changed
[12:34:43] <osse> that's what I was trying to say
[12:34:49] <neure> first thing in there I tried is git rev-parse --git-dir --is-inside-git-dir --is-bare-repository --is-inside-work-tree --short HEAD 2>/dev/null and that alone takes 0.8 seconds
[12:35:56] <neure> just plain `git rev-parse` is slow
[12:36:20] <geirha> takes about 0.006s here
[12:36:42] <neure> it is slow regardless of being inside repo directory or not
[12:37:35] <osse> try GIT_TRACE=1 git rev-parse ...
[12:39:40] <neure> https://gist.github.com/tksuoran/df6327f2de2917bbdeff27d4a151165b
[12:39:45] <neure> not sure how useful that is
[12:40:08] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:40:40] <osse> It wasn't
[12:41:00] <osse> I hoped it would be
[12:41:47] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[12:42:05] <geirha> only 0.001s between those two lines, so maybe it's the initial execution of git that takes time?
[12:42:29] *** Joins: sky-8 (~sky@user/sky-)
[12:42:51] <geirha> how fast is   ''git show'' ?
[12:43:14] <geirha> or git status
[12:44:09] *** Quits: sky- (~sky@user/sky-) (Ping timeout: 250 seconds)
[12:44:09] *** sky-8 is now known as sky-
[12:44:22] <neure> all of them are slow
[12:44:31] <osse> GIT_TRACE2=1 git ...
[12:44:38] <osse> should have some more deets
[12:45:05] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[12:45:27] <neure> https://gist.github.com/timo-suoranta-varjo/c3f21ff36a80402e0b6cffafa8c71211
[12:46:01] <neure> hmm
[12:46:02] <neure> https://gist.github.com/timo-suoranta-varjo/533e630eb693641e44160f5edb6c3fe9
[12:46:26] <neure> I wonder if F-Secure is to blame
[12:46:35] <neure> It used to work with previous version though
[12:46:41] <osse> Have you disabled the prompt? This looks plenty quick to me
[12:46:50] <neure> I have
[12:46:54] <geirha> anti-virus software making things slow? unheard of!
[12:47:31] <neure> 0.8+ s per command is not quick to me
[12:47:43] *** Joins: polve (~polve@twcitalia/polve)
[12:48:04] *** Joins: shad (~shad@user/shad)
[12:48:10] <osse> How do you measure it?
[12:48:17] <neure> using time comand
[12:48:26] <geirha> the timestamps in there only span about 0.015s
[12:48:35] <osse> Because it looks like git itself is done in 0,05 sec and then there's another 0.75 sec until the prompt appears
[12:48:37] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[12:49:06] <neure> time command does not include prompt, which I've set to simple "$ " anyway
[12:49:27] <neure> so it seems that loading/launching git executable takes time.. I think
[12:49:36] <neure> is there way to measure specifically that part?
[12:50:04] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[12:50:07] <geirha> is there an strace equivalent for windows?
[12:51:39] <osse> Maybe the previous git exe was on the anti-virus' whitelist, but that's been cleared because of the upgrade
[12:52:10] <neure> I run this strace on windows so I guess so :P
[12:52:20] <neure> aha
[12:52:27] <neure> It was F-Secure
[12:52:45] <neure> I added git folder in program files to exclusion list and BAM, now it is fast again
[12:53:27] <neure> yeah, totally unheard of..
[12:56:24] *** Joins: narendra (~user@2a02:8109:b63f:ff7c::56c2)
[12:58:54] *** Joins: hero (~quassel@176.62.187.24)
[12:59:03] *** gl_ is now known as gl
[13:02:44] *** Quits: hero (~quassel@176.62.187.24) (Client Quit)
[13:04:46] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:07:52] *** Joins: ztx (~ztx@user/ztx)
[13:07:59] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 265 seconds)
[13:08:11] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[13:08:18] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[13:08:30] *** Joins: lavaball (felix@31.204.155.215)
[13:13:13] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:13:51] *** Joins: furrymcgee (~devuan@cgn-89-1-209-86.nc.de)
[13:15:19] *** Joins: earnest (~earnest@user/earnestly)
[13:17:13] *** Joins: thevishy (~Nishant@2405:201:f005:c007:f92b:9823:fedf:deab)
[13:25:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:26:01] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[13:26:10] *** Joins: shbot (~shbot@37.139.2.101)
[13:26:21] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[13:27:09] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:27:42] *** Joins: myrrh (~user@2607:fb90:b414:3a3c:877e:2085:c20f:2e47)
[13:32:36] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:32:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[13:32:56] *** Joins: MrPixels (~MrPixels@82-75-30-20.cable.dynamic.v4.ziggo.nl)
[13:33:30] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:33:54] *** Lord_of_Life_ is now known as Lord_of_Life
[13:35:06] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Remote host closed the connection)
[13:35:37] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:35:47] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[13:36:23] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[13:38:52] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[13:40:02] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:44:07] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[13:44:35] *** Joins: Jong (~Jong@2620:10d:c090:400::5:6ce8)
[13:50:21] *** Quits: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[13:54:59] *** Joins: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net)
[13:59:59] *** Joins: prompt32 (~kapad@ppp-94-66-58-183.home.otenet.gr)
[14:00:16] *** Quits: prompt32 (~kapad@ppp-94-66-58-183.home.otenet.gr) (Remote host closed the connection)
[14:01:18] *** Joins: prompt32 (~kapad@user/kapad)
[14:05:11] *** Quits: prompt32 (~kapad@user/kapad) (Client Quit)
[14:05:39] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[14:06:06] *** Joins: prompt32 (~kapad@user/kapad)
[14:06:19] <furrymcgee> bind -x '"X": select X in 1 2 3; do echo $X && break; done;' ??
[14:06:55] *** Quits: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net) (Quit: quit)
[14:08:33] <emanuele6> furrymcgee: what?
[14:09:27] <emanuele6> if you are asking why that does not work, it is because the READLINE shell's stdin is not the terminal in which bash is running.
[14:10:18] *** Quits: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9) (Changing host)
[14:10:18] *** Joins: izabera (izabera@user/izabera)
[14:10:26] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:11:03] <furrymcgee> how does it work?
[14:11:23] <emanuele6> how does what work?
[14:11:39] <furrymcgee> stdin in readline
[14:13:28] <emanuele6> i think that how it actually works is that it is the same as the bash shell, but while the READLINE shell is running, you can't write to the terminal
[14:14:45] *** Joins: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl)
[14:14:50] <emanuele6> well, you can
[14:15:02] <emanuele6> but only if you read from readline instead of from the terminal
[14:15:07] <emanuele6> for example with `read -e'
[14:15:13] <emanuele6> that would work
[14:15:30] <emanuele6> but regular read or select are not going to work
[14:17:20] *** Quits: nuh^ (~nuh@68.101.58.90) (Remote host closed the connection)
[14:17:20] *** Joins: shad (~shad@user/shad)
[14:19:18] *** Joins: arinov (~arinov@178.240.181.140)
[14:19:25] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[14:19:59] *** Joins: prompt32 (~kapad@user/kapad)
[14:21:37] <quazimodo> so after reading & looking at how things work, i actually think that what I want to do may not be possible without writing to a file on disk
[14:21:48] <quazimodo> i wonder if i can create a file in ram
[14:22:10] <quazimodo> i guess i could mount a tmpfs to keep it in ram
[14:23:15] <emanuele6> furrymcgee: something like this would work:   bind -x '"X":i=0;while (( i++ < 2 )) && read -er; do printf %s\\n "$REPLY"; done'
[14:23:44] <emanuele6> the point is that, if you want to read from the terminal, you must read from it with readline
[14:25:17] <emanuele6> (that reads two lines and prints them unmodified to stdout)
[14:27:35] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[14:27:49] <furrymcgee> why is read different from select?
[14:28:01] <emanuele6> read does not work
[14:28:08] <emanuele6> read -e works
[14:28:21] <emanuele6> and the difference is that read -e uses READLINE.
[14:28:25] <furrymcgee> select -e?
[14:28:38] <emanuele6> that is not a thing. see `help select'.
[14:29:04] <furrymcgee> in bash 6?
[14:29:38] <emanuele6> do you want help or are you trolling?
[14:30:09] <furrymcgee> yes help select
[14:30:19] <quazimodo> it seems really non trivial to 'create a server client architecture in bash' to provide some sort of asynchronous io, i read someone use the concept of 'on demand logging'
[14:30:43] <emanuele6> named pipe are not a bash thing.
[14:31:07] <emanuele6> they are implemented by the kernel and used in all programming languages, and they do not do what you think they do
[14:31:11] <quazimodo> i think that's exactly what i wanted, to run a bunch of processes that I could later 'read the output of' at random times to achieve an 'on demand logging'
[14:31:26] <selckin> when you use the words client & server any sane person would move to python/perl/.. some non shell scripting language
[14:32:50] <quazimodo> emanuele6: i'm aware that they're not a shell script thing, but a kernel thing
[14:34:46] <quazimodo> i had read & understood it a long while ago but sometimes old knowledge leaks out, I understand them to be buffer areas established by calls to the kernel, that they are accessed using fds and that bash organises these into the child processes, roughly
[14:34:53] <furrymcgee> you could write to #bash and see the logs on demand
[14:36:26] <emanuele6> quazimodo: bash does not use named pipes for pipes, no
[14:36:38] <emanuele6> it uses them for process substitutions
[14:36:44] <emanuele6> other languages use them too
[14:37:29] <emanuele6> like many programs use regular files for logging, or unix sockets, or tcp sockets
[14:37:48] <quazimodo> i think what surprised me the most is actually that it's not common to try to achieve this 'on demand logging' where a process doesn't make any writes to disk, but from time to time an admin can somehow 'connect and read' the logs, that are just thrown out otherwise
[14:37:59] <emanuele6> and "named pipes" cannot be used "to provide some sort of asynchronous io", no
[14:38:11] <quazimodo> no, the usecase really doesn't seem to support that
[14:38:24] <quazimodo> sorry, the capabilities/design
[14:38:55] <quazimodo> all I can think to do is to write to a file in a tempfs to avoid writes to disk
[14:39:53] <emanuele6> or you can simply store the output in the program.
[14:39:54] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[14:40:01] <quazimodo> emanuele6: what do you mean?
[14:40:09] <furrymcgee> all you can do is write to /dev/fd/X and let the user select X
[14:40:11] <emanuele6> and when you get a request on a socket, respond with a line and delete it
[14:40:22] <quazimodo> oh, right
[14:40:32] <quazimodo> i can't change the programs, sadly
[14:41:25] *** Joins: timj (~timj@user/timj)
[14:41:25] <emanuele6> what programs?
[14:41:40] <quazimodo> redis, postgres, docker
[14:41:48] <quazimodo> in the future probably others
[14:41:49] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[14:41:52] <emanuele6> what does that matter?
[14:42:14] <quazimodo> do you mean to create a wrapping program that manages the outputs?
[14:42:16] <quazimodo> yeah I could do that
[14:42:29] *** Joins: prompt32 (~kapad@user/kapad)
[14:42:32] <emanuele6> i don't understand what you were thinking
[14:42:43] <furrymcgee> but aware select does not work well with readline
[14:42:56] <furrymcgee> yet
[14:43:09] <selckin> investing syslog i guess
[14:43:12] <quazimodo> emanuele6: it's late, i thought you meant to modify our software tosupport thisthing
[14:43:22] <quazimodo> but yeah a wrapper program could handle this fine i guess
[14:44:11] <quazimodo> furrymcgee: I'm not sure what you mean by write to /dev/fd/X
[14:44:29] <quazimodo> i think I understand but not confident in my understanding
[14:45:03] *** Quits: arinov (~arinov@178.240.181.140) (Quit: WeeChat 3.3)
[14:45:12] <emanuele6> if you think you understand furrymcgee and that what is saying is related to your problem, you really need sleep.. :)
[14:45:25] <emanuele6> s/what/& he/
[14:46:51] <quazimodo> emanuele6: probably why it was weird to me, if i've understood correctl /dev/fd is related to the running process
[14:47:00] *** Joins: arinov (~arinov@178.240.181.140)
[14:47:26] <quazimodo> anyway, time for bed, i feel like a moron
[14:47:34] <quazimodo> thank you all so much
[14:48:06] <emanuele6> sleep well
[14:49:00] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:49:22] *** Joins: lavaball (felix@31.204.155.215)
[14:51:51] <furrymcgee> no at some point the logs need to saved
[14:52:02] <furrymcgee> you can not decide later
[14:52:23] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[14:52:41] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[14:52:58] <frojnd> Hi there.
[14:54:57] <frojnd> Does bash have something like assigning value to a var if value is not empty? e.g. value="$(getsomething) || $(getsomethingelse)" so it would assign either one if one is not empty string?
[14:55:02] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 240 seconds)
[14:55:21] *** Quits: MrPixels (~MrPixels@82-75-30-20.cable.dynamic.v4.ziggo.nl) (Quit: Connection closed)
[14:56:46] <geirha> value=$(getsomething); [[ $value ]] || value=$(somethingelse)
[14:56:54] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[14:56:58] <pj> # foo=; bar=something; (( baz = foo || bar )); echo "$baz"
[14:56:59] <shbot> pj: 0
[14:57:04] <pj> hrmmmm, bleh
[14:57:24] <geirha> value=$(getsomething) value=${value:-$(somethingelse)}
[14:57:29] <pj> yeah
[14:57:32] <pj> that's the one
[14:57:35] <emanuele6> pj: bar evaluates something that evaluates to 0
[14:57:46] *** Joins: new_guest_21 (~new_guest@static.165.121.9.5.clients.your-server.de)
[14:57:48] <emanuele6> or to something else if something was set
[14:57:48] <pj> yeah, it's numerically evaluated there.
[14:58:33] <emanuele6> # export something='$(echo hax0red >&2)'; foo= bar=something; (( baz = foo || bar )); echo "$baz"
[14:58:33] <shbot> emanuele6: bash: ((: $(echo hax0red >&2): syntax error: operand expected (error token is "$(echo hax0red >&2)")
[14:58:39] *** Quits: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr) (Quit: Leaving)
[14:58:45] <emanuele6> # export something='q[$(echo hax0red >&2)0]'; foo= bar=something; (( baz = foo || bar )); echo "$baz"
[14:58:45] *** Quits: arinov (~arinov@178.240.181.140) (Quit: WeeChat 3.3)
[14:58:45] <shbot> emanuele6: hax0red
[14:58:45] <shbot> emanuele6: 0
[14:58:55] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[14:59:49] <geirha> frojnd: if the command additionally returns non-zero when it has no output, you can do   value=$(getsomething) || value=$(somethingelse)  or even   value=$(getsomething || somethingelse)
[15:00:02] <emanuele6> i was about to write that hehe
[15:03:29] <new_guest_21> Hello, I am using `inotifywait` to monitor a directory for changes, specifically `CLOSE_WRITE` and `MOVED_TO` events. The output is then piped to a `while while read -r events path file; do ... done` loop for further processing.
[15:03:30] <new_guest_21> QUESTION: In the loop, I only need to check **the last event** for the file, i.e. does it stop at `CLOSE_WRITE` or `MOVED_TO` ? Is it possible to do that?
[15:03:30] <new_guest_21> REASON: When files are dropped in the dir via FTP, they end with `CLOSE_WRITE` event. When rsync'd they end with `MOVED_TO`. I want to use the same script for both types of transfers.
[15:06:00] <Soliton> how would you do it in simple logic at all?
[15:07:05] <new_guest_21> I don't know. So far it's simple. I suppose introducing this requires complex logic then?
[15:07:25] <Soliton> there is nothing simple about it if you cannot even tell how to do it.
[15:07:52] <Soliton> how do you know a file will be moved or not?
[15:08:09] <Soliton> it's a broken design really.
[15:08:19] <Soliton> !upload
[15:08:19] <greybot> If you're asking "How can I find all the files that have been uploaded recently?" then you're probably in deep trouble. The server side can't tell when a file is finished uploading unless the client renames it or uploads an "all done" file afterward.
[15:08:48] <Soliton> maybe you can cobble some heuristics together and hope for the best.
[15:09:30] <new_guest_21> I see. I'll just keep separate scripts then.
[15:09:37] <new_guest_21> thanks
[15:09:52] <osse> does either program generate the other event as part of its processing?
[15:10:05] <Soliton> unless that means you use two dirs as well i don't know what that should help.
[15:10:32] <osse> if not, isn't it only a matter of watching for both events?
[15:10:35] <Soliton> i assume that rsync must also produce CLOSE_WRITE.
[15:10:49] <osse> ah, makes sense
[15:11:14] <Soliton> it's ftp where you can just hope for the best if something finishes writing and rsync where you can be sure after the move.
[15:11:56] <new_guest_21> Problem is when rsync produces CLOSE_WRITE, the file isn't renamed yet—it has that temp. name `.FILENAME.ext.daMsJd` . It's only after MOVED_TO that it shows the proper name.
[15:12:03] <Soliton> usually with ftp people use a "done" file to signal the upload is finished to work around it.
[15:12:08] *** Joins: arinov (~arinov@178.240.181.140)
[15:12:41] <new_guest_21> So I could also just use --inplace to overcome this problem.
[15:12:55] <new_guest_21> (But I didn't want to, because it's not recommended.)
[15:12:57] <Soliton> yeah, make rsync as bad as ftp.
[15:13:05] <Soliton> !ftp
[15:13:05] <greybot> http://mywiki.wooledge.org/FtpMustDie
[15:13:22] *** Quits: neure (~TimoSuora@dzpbkmrkyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[15:13:39] <furrymcgee> probably they use a checksum file for it
[15:13:46] <Soliton> but if you support ftp and even in the same dir it's not really making things worse anyway, i guess.
[15:14:36] *** Joins: legola (~legola@46.235.101.65)
[15:14:39] <pj> I have also found (and this might have been fixed) that inotify won't detect file events if they're done on the other side of a bind mount.
[15:16:08] <Soliton> if you control the senders then i'd just do away with ftp.
[15:17:18] <new_guest_21> Hmm
[15:19:53] <frojnd> geirha: your solution is readable (first one :P) at least for non bash experts
[15:23:51] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[15:25:11] *** af is now known as he
[15:29:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:34:52] *** Joins: seninha (~seninha@user/seninha)
[15:36:00] <prompt32> https://bugzilla.mozilla.org/show_bug.cgi?id=1739752
[15:39:45] *** Joins: bud (~bud@user/bud)
[15:43:50] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:45:52] *** Quits: narendra (~user@2a02:8109:b63f:ff7c::56c2) (Ping timeout: 264 seconds)
[15:45:55] *** Quits: justache (~justache@user/justache) (Ping timeout: 268 seconds)
[15:48:36] *** Joins: justache (~justache@user/justache)
[15:48:49] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[15:50:21] *** Quits: l4yer (~l4yer@2001:ac8:31:6e:1012:caf7:418b:4543) (Ping timeout: 245 seconds)
[15:50:52] <furrymcgee> why they consider it a search not asking local dns?
[15:51:30] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[15:52:07] <furrymcgee> firefox has search field
[15:52:30] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[15:53:19] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[15:55:25] <furrymcgee> Ctrl+K
[15:56:23] *** Joins: short-bike (~short-bik@centos/community/short-bike)
[15:58:09] <short-bike> I'm running this successfully "find /home/user/Pictures/Wallpapers -type f | sort -R | head -1" - but trying to understand how I would pass the result to something like gsettings. Objective is to create a random wall paper script. Any help appreciated.
[15:59:53] *** Joins: narendra (~user@2a02:8109:b63f:ff7c::56c2)
[16:00:07] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[16:00:26] *** Joins: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl)
[16:02:12] <tirnanog> short-bike: gnu/linux?
[16:02:22] *** Joins: justache (~justache@user/justache)
[16:02:32] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 252 seconds)
[16:02:41] <short-bike> tirnanog: yes - fed 34 with cinnamon.
[16:02:57] *** Quits: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 256 seconds)
[16:03:11] <selckin>  gsetting --set-wallaper "$(find -type f | head -1")
[16:03:14] <tirnanog> IFS= read -rd '' path < <(find /etc -type f -print0 | shuf -z -n1); if [[ $path ]]; then some_command "$path"; fi
[16:03:48] <tirnanog> what exactly you do with the expansion of "$path" with gsettings is presumably already something you know.
[16:04:08] <short-bike> I've found option using 'ls' but I get it that you should not parse 'ls' for good reasons.
[16:04:11] <tirnanog> oops, /home/user/Pictures/Wallpapers of course. was just using /etc for testing here.
[16:05:06] <selckin> short-bike: some issue with find, if the files have whitespaces in their names etc, but if you only want 1 it should be fairly ok
[16:05:25] <selckin> short-bike: thats what tirnanog's solution tries to solve
[16:05:49] <short-bike> selckin: Thank you - testing that now.
[16:05:51] <tirnanog> does solve, in fact.
[16:06:11] <selckin> well i didn't test it, but i'm sure ti does yes :)
[16:06:27] <emanuele6> if you are going to pass it to gsettings, i think you need to encode it as a file URI
[16:06:56] *** Quits: justache (~justache@user/justache) (Ping timeout: 252 seconds)
[16:07:11] <emanuele6> i don't know any simple way of doing it in bash though
[16:07:12] <mihaiadrian> how would i check if the third last char from a string is "0"?
[16:07:49] <emanuele6> the dumb solution is to prepend file://, but i don't think that would work for filenames with special characters
[16:08:05] <geirha> [[ $var = *0?? ]]
[16:08:11] <emanuele6> ^
[16:08:16] *** Joins: polve (~polve@twcitalia/polve)
[16:08:17] <mihaiadrian> geirha: thanks a lot. it makes sense.
[16:08:23] <geirha> and in sh: case $var in *0??) ...
[16:08:29] <selckin> emanuele6: there is rpobably some curl url encode option you can use, it has 500 options for everything under the sun
[16:08:49] <prompt32> furrymcgee, even if you disable search in any way, the same happens.
[16:09:01] <emanuele6> i don't think you can use curl to encode a string without making a dumb connection..
[16:09:04] *** Joins: justache (~justache@user/justache)
[16:09:04] *** Quits: justache (~justache@user/justache) (Excess Flood)
[16:09:25] <prompt32> furrymcgee, its not a matter of search, cause the domain+path exist
[16:10:16] <furrymcgee> yes its malicious
[16:10:27] <prompt32> furrymcgee, and finnaly domain+validpath1 is OK, but domain+validpath2 is not
[16:10:35] <prompt32> it is
[16:11:23] <prompt32> a mapping gift to your engine and its bots
[16:11:32] <furrymcgee> redirect google.com in your local dns
[16:12:33] *** Joins: justache (~justache@user/justache)
[16:12:56] <prompt32> if you dont have adjust your server to reply, in such queries, they can acces your net, even if the domain is local, and unresolve in public
[16:13:15] <prompt32> just using curl
[16:13:20] <prompt32> + your ip
[16:14:02] <mihaiadrian> geirha: it's [[ $var = *0?? ]] or [[ $var == *0?? ]] ?
[16:14:14] <emanuele6> they are equivalent
[16:14:16] <geirha> either. = and == is the same operator
[16:14:20] <mihaiadrian> ok, thanks a lot
[16:16:36] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[16:17:07] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[16:19:19] <emanuele6> selckin: standard python can do it: python -c 'import pathlib,sys; print(pathlib.Path(sys.argv[1]).as_uri())' "$file"
[16:20:38] <emanuele6> short-bike: but, since python is needed, you might as well do the whole thing in python instead of gluing GNU find, GNU shuf and python together with bash
[16:20:50] <emanuele6> since python makes GNU find and GNU shuf unnecessary
[16:21:12] *** Joins: arinov (~arinov@178.240.181.140)
[16:21:45] <short-bike> emanuele6: good idea and Thank you.
[16:22:12] *** Joins: justache (~justache@user/justache)
[16:22:20] *** Quits: prompt32 (~kapad@user/kapad) (Ping timeout: 252 seconds)
[16:22:34] *** Quits: short-bike (~short-bik@centos/community/short-bike) (Quit: and on that note...)
[16:23:14] <emanuele6> the issue is that `gsetting set org.gnome.desktop.background picture-uri "$wallpaper"' requires a uri for $wallpaper, not a regular absolute path
[16:23:21] <emanuele6> oh, short-bike left
[16:24:05] <furrymcgee> #python probably
[16:24:43] <emanuele6> no.
[16:25:45] <kurahaupo> emanuele6: does it work if you just put file:/// on the front of the regular path?
[16:26:40] *** Quits: justache (~justache@user/justache) (Ping timeout: 264 seconds)
[16:26:48] <emanuele6> then 'file%20with%20percent.png' will be treated as 'file with percent.png'
[16:27:14] <emanuele6> it works as long as the input does not have percent, and then there are either pitfalls probably
[16:28:07] <emanuele6> s/either/other/
[16:32:45] *** Joins: justache (~justache@user/justache)
[16:33:17] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:33:24] <Blondie101010> that's regular URL encoding
[16:35:23] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Remote host closed the connection)
[16:35:48] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[16:36:04] *** Joins: shad (~shad@user/shad)
[16:36:07] *** Quits: new_guest_21 (~new_guest@static.165.121.9.5.clients.your-server.de) (Quit: new_guest_21)
[16:37:11] *** Quits: justache (~justache@user/justache) (Ping timeout: 252 seconds)
[16:37:17] *** Joins: zeden (~zeden@user/zeden)
[16:38:22] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[16:38:23] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:39:01] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[16:41:18] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:41:53] <emanuele6> so, no, prepending file:// does not work well
[16:43:33] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[16:44:52] *** Joins: lorimer (~lorimer@user/lorimer)
[16:45:04] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:45:25] *** Joins: dj (~dj@162.223.44.49)
[16:46:12] <mihaiadrian> please, can someone correct this line for me?  if [[ $(cat $i/last_bid_3) > $(cat $i/last_bid_2) > $(cat $i/last_bid_1) ]]
[16:46:20] <mihaiadrian> so i store a value into a file
[16:46:23] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:46:28] *** Joins: justache (~justache@user/justache)
[16:46:30] <mihaiadrian> and i want to do a 3 way comparision
[16:46:56] <mihaiadrian> so [[ $(cat a) > $(cat b) > $(cat c) ]]
[16:47:12] <osse> do two two-way comparisons
[16:47:19] <mihaiadrian> osse: ok, thanks
[16:47:27] <mihaiadrian> but is it possible to do more than two?
[16:47:31] <mihaiadrian> now i'm just curious
[16:47:42] <osse> no
[16:48:02] <emanuele6> > is "alphabetical order comparison"
[16:48:23] <osse> the only language I know that supports that is perl6, but there are probably others
[16:48:25] <mihaiadrian>   if [[ $(cat $i/last_bid_3) > $(cat $i/last_bid_2) ]] && [[ $(cat $i/last_bid_2) > $(cat $i/last_bid_1) ]]
[16:48:29] <mihaiadrian> ok, thanks osse
[16:48:33] <emanuele6> in case, you think it is numeric comparison
[16:48:49] <mihaiadrian> i'm using it for numeric comparision
[16:48:51] <geirha> if [[ $(sort a b c) != "$(cat a b c)" ]]
[16:49:04] <mihaiadrian> i know bash treats everything as a string
[16:49:04] <emanuele6> mihaiadria then you are doing it wrong.
[16:49:24] <emanuele6> [[ 10 > 2 ]] is false
[16:49:28] <earnest> It's not being 'treating' things as strings, things /are/ strings
[16:49:28] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 264 seconds)
[16:49:36] <mihaiadrian> oh
[16:49:40] *** cdown_ is now known as cdown
[16:49:45] <earnest> The pain comes when you try to pretend things aren't strings
[16:49:50] <emanuele6> mihaiadrian: bash has arithmetic comparison it just is not [[>]]
[16:50:04] <emanuele6> it's something else
[16:50:14] <earnest> Bash's arthimetic contexts are full of ACE and this makes me sad
[16:50:23] <mihaiadrian> i see
[16:50:30] <mihaiadrian> thanks
[16:50:35] <mihaiadrian> is there a way to do it via bc?
[16:50:39] <mihaiadrian> i'm curious
[16:50:52] <emanuele6> thar is POSIX arithmetic in general
[16:51:00] <earnest> make bc print a string that you compare
[16:51:04] <earnest> Like everything else
[16:51:04] <mihaiadrian> i also have a question about (( )) in general
[16:51:16] <emanuele6> mihaiadrian: what geirha sent, but with -n...
[16:51:41] <mihaiadrian> ((1+2)) should be used only in if statements, but $((1+2)) is the right way to substitute that sum
[16:51:45] <mihaiadrian> is that correct?
[16:51:52] <earnest> emanuele6: Can you make posix sh print the date using $(( ))?
[16:52:15] <earnest> emanuele6: As a case of ACE
[16:52:59] <emanuele6> print date, no
[16:53:06] <emanuele6> assign variables, yes
[16:53:15] <earnest> Yeah, but that's intended I think
[16:53:24] <earnest> Or general evaluation of arithmetic strings
[16:53:25] <osse> What's ACE?
[16:53:35] <earnest> osse: arbitrary code execution/evaluation
[16:53:44] <osse> oh
[16:53:46] *** Joins: Kruppt (~Kruppt@50-111-48-108.drhm.nc.frontiernet.net)
[16:53:48] <mihaiadrian> if (( $(cat a) > $(cat b) > $(cat c) ))
[16:53:52] <mihaiadrian> is that right?
[16:53:59] <geirha> no
[16:54:09] <mihaiadrian> i can't call a subshell inside (())?
[16:54:32] <geirha> read -r a < a ; read -r b < b ; read -r c < c ; if (( a > b && b > c )) ; then
[16:54:32] <earnest> osse: There was a mailing list thread after greycat mostly discovered it but went further with examples from test -v triggering ACE as well.  I'm surprised there isn't a website yet because this is shellshock times 10
[16:54:48] <mihaiadrian> geirha: thanks
[16:54:56] <phogg> three way comparisons are a gee-whiz feature supported only by a handful of programming languages
[16:54:58] *** Quits: arinov (~arinov@178.240.181.140) (Quit: WeeChat 3.3)
[16:55:11] <emanuele6> a > b > c would work like in C
[16:55:15] <earnest> osse: Iow, if you expose user input in any way to test -v or arithmetic context, including array lookups, you have ACE
[16:55:39] <emanuele6> so 10 > 2 > 0 would be true, but 10 > 11 > -1 would also be true
[16:55:54] <geirha> even in languages that do have it, like python, I usually forget to use it for the rare cases where I need it ^^
[16:56:41] <earnest> I've never had the need to use them, even if I did remember
[16:57:10] <earnest> (Which probably says more about the problems I've had to handle than the feature)
[16:58:32] <osse> min < x < max occurs every so often
[16:59:05] <osse> but checking a < b < c for abtitrary a,b,c is something i've never done, I think
[16:59:13] <earnest> osse: https://www.mail-archive.com/bug-bash@gnu.org/msg27394.html
[16:59:50] <osse> hasn't ormaaj abused this for years?
[17:00:00] <earnest> I would hope so
[17:00:38] <earnest> The plebs like me don't know about it (well I did before this, but not long before)
[17:01:08] <olspookishmagus> /usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
[17:01:11] <olspookishmagus> !?
[17:01:12] <greybot> A question mark indicates a sentence is a question. When you see a sentence directed at you terminated with this symbol, somebody has asked you a question and is waiting for you to answer it.
[17:01:23] <emanuele6> !which
[17:01:23] <greybot> which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use (from most to least portable) ''command -v'' or ''type -P'' (to find the path) or ''hash'' (to check) instead. See http://mywiki.wooledge.org/BashFAQ/081
[17:01:47] <olspookishmagus> all I did was: xdg-open mindmap.mm
[17:01:53] <emanuele6> # which can you run which, shbot?
[17:01:54] <shbot> emanuele6: Sorry, I don't do whichcraft.
[17:03:08] <emanuele6> shbot can run which at least
[17:03:45] <emanuele6> scripts that depend on which, will work fine hopefully
[17:04:04] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[17:04:35] <tirnanog> olspookishmagus: it's debianutils trolling you. it still works, in so far as it ever did, but will unconditionally print that warning.
[17:05:22] <olspookishmagus> I'm in unrequited love with debian so I can cope with that :D
[17:05:45] <tirnanog> unrequited sounds about right.
[17:06:02] <olspookishmagus> thank you both emanuele6 and tirnanog
[17:06:18] <tirnanog> https://salsa.debian.org/debian/debianutils/-/blob/master/which#L4
[17:06:19] <emanuele6> https://sources.debian.org/src/debianutils/5.5-1/which/
[17:06:22] <emanuele6> oh, oops
[17:07:21] <emanuele6> olspookishmagus: anyway, if that is your script that uses that version of which, you can just replace the `which' with `command -v' and it will work the same
[17:07:44] <emanuele6> well, not quite the same
[17:07:57] <emanuele6> `type -P ls' would be the same
[17:08:04] <emanuele6> (without ls)
[17:08:12] <olspookishmagus> like Mic Jagger said: all I did was to open a mindmap that-a-way: xdg-open mindmap.mm
[17:08:26] <olspookishmagus> dpkg-query: no path found matching pattern /usr/bin/which
[17:08:28] <olspookishmagus> <3 debian
[17:09:03] *** Joins: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de)
[17:09:50] <emanuele6> though probably that mindmap program is relying on which (which is bad)
[17:09:56] <emanuele6> s/though /
[17:10:15] <olspookishmagus> is there a way to follow enter a rabbit hole of symlinks? like /usr/bin/which -> /etc/alternatives/which -> /usr/bin/which.debianutils ?
[17:10:22] <tirnanog> readlpath
[17:10:25] <tirnanog> realpath
[17:10:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:c0d3:dc09:809f:9fd0)
[17:10:57] <geirha> readlink -f  # very GNU
[17:11:08] <olspookishmagus> I don't have -f
[17:11:09] *** Quits: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de) (Client Quit)
[17:11:10] <emanuele6> and debian installs that which program to give users an annoying error message so that they report it to the maintainers of programs that use it, so that they use something more portable instead
[17:11:33] <tirnanog> because of course, that's exactly what your common or garden user will do.
[17:11:43] <olspookishmagus> also last night I got tipped off for: GRML and I'm very happy with it
[17:12:09] <olspookishmagus> can realpath show all the intermediate stops before the final destination?
[17:12:22] <olspookishmagus> so you know how to NOT mess up stuff and make it worse
[17:12:29] <tirnanog> you're going to love namei.
[17:12:41] <geirha> didn't know you could have debian without GNU coreutils
[17:13:00] <tirnanog> which flavour would that be, geirha?
[17:13:11] <geirha> the one olspookishmagus has apparently
[17:13:20] <tirnanog> oh, I see.
[17:13:32] <olspookishmagus> I'm on testing/unstable (same as me)
[17:13:43] <geirha> then surely readlink will have -f
[17:13:57] <olspookishmagus> thank you VERY MUCH for the namei tip tirnanog
[17:14:28] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:14:54] <mihaiadrian> i have a problem
[17:15:21] <mihaiadrian> i forgot that those values i store in files are floating numbers :(
[17:15:34] <emanuele6> !graduated
[17:15:34] <greybot> Congratulations! You've graduated to needing to use a real language!
[17:15:40] <olspookishmagus> geirha: https://paste.debian.net/plainh/75936d1e
[17:15:47] <geirha> to the awk-mobile!
[17:16:04] <geirha> olspookishmagus: right, so it has -f
[17:16:55] <olspookishmagus> ummm.. yes, you're right and I'm wrong
[17:17:03] <olspookishmagus> am I going to be Ok?
[17:17:11] <mihaiadrian> i already wrote a lot of the script
[17:18:42] <emanuele6> awk 'FNR==1 { a[++i]=$0 } END { for(j = 1; j < length(a); j += 2) if (a[j] <= a[j+1]) exit 1 }' a b c
[17:19:10] <geirha> awk '{if (prev >= $1) exit(1); prev = $1}' a b c
[17:19:13] *** Joins: motherr (~motherr@user/motherr)
[17:19:27] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Ping timeout: 256 seconds)
[17:19:59] <mihaiadrian> if (( $(echo "$a > $b && $b > $c" | bc -l) ))
[17:20:13] <emanuele6> if you want to check all lines of all files in order, use geirha's if you want to check only the first line, use mine, if the files only contain one line, use either
[17:20:22] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[17:20:48] <geirha> awk '{ if (NR > 1 && prev >= $1) exit(1); prev = $1}' a b c
[17:22:22] <mihaiadrian> >Congratulations! You've graduated to needing to use a real language!
[17:22:33] <emanuele6> a real language like awk!
[17:22:57] *** Joins: irrgit (~irrgit@192.241.175.183)
[17:23:08] <mihaiadrian> is there a hard and fast distinction between a fake and a real lang? :D
[17:23:39] <olspookishmagus> is a thing as a babelfish real yet?
[17:24:00] <olspookishmagus> sorry for the noise geirha and thank you once more
[17:25:47] <emanuele6> mihaiadrian: if it can handle real numbers, it is real
[17:26:16] <emanuele6> bash is a relative language because it can only handle relative numbers
[17:26:17] <OMGOMG> awk is the realest language there is
[17:26:32] *** Joins: djp (~djp@107-179-223-174.cpe.teksavvy.com)
[17:29:10] <mihaiadrian> if i want to call python in a bash script, or any other language
[17:29:10] *** Joins: gschanuel21 (~gschanuel@user/gschanuel)
[17:29:23] <earnest> Almost all uses of readlink -f found in the wild should probably be readlink -e
[17:29:41] <olspookishmagus> "in the wild"
[17:30:04] <olspookishmagus> are you by any chance playing with Pokemon GO? ^^
[17:30:14] <mihaiadrian> function urlencode() { python -c 'import urllib, sys; print urllib.quote(sys.argv[1], sys.argv[2])' }
[17:30:27] <mihaiadrian> to be able to write python on multiple lines
[17:30:28] <emanuele6> that is not valid bash
[17:30:31] <selckin> olspookishmagus: common saying way before pokemon existed
[17:30:31] <mihaiadrian> i can use the \ operator?
[17:30:38] <olspookishmagus> selckin: agreed
[17:30:49] <Soliton> !urlencode
[17:30:49] <greybot> See http://mywiki.wooledge.org/BashFAQ/071 or https://gist.github.com/887e74e74877c7613920
[17:30:53] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: Lost terminal)
[17:30:54] <geirha> mihaiadrian: no need for \, just use multiple lines
[17:30:55] <mihaiadrian> function urlencode*
[17:31:04] <geirha> python -c '
[17:31:09] <geirha> import urllib, sys
[17:31:09] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:31:13] <geirha> print ...
[17:31:14] <mihaiadrian> ok, thanks
[17:31:15] <geirha> '
[17:31:19] <emanuele6> also that is python2
[17:31:20] <mihaiadrian> ^^
[17:31:32] <emanuele6> i would not use python2
[17:32:21] <mihaiadrian> it does run with python3 i think
[17:32:29] <mihaiadrian> i don't think i have python2 installed
[17:32:40] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 264 seconds)
[17:32:40] *** gschanuel21 is now known as gschanuel2
[17:32:43] <mihaiadrian> nop
[17:32:47] <geirha> then print won't work. It requires ()
[17:32:49] <emanuele6> that python code you sent before is not valid python3 code
[17:33:00] <mihaiadrian> oh, i see
[17:33:13] <mihaiadrian> i'm on a new installation, and i did not set up that script yet
[17:33:30] <emanuele6> also i don't think urllib.quote() is a thing in python3
[17:33:31] <mihaiadrian> but i have the impression i ran it and it worked, just like that
[17:35:04] <emanuele6> then you are using a python2 interpreter.
[17:36:44] <emanuele6> $ python -c 'import urllib; print(urllib.quote("hi"))'     ...      AttributeError: module 'urllib' has no attribute 'quote'
[17:36:57] <emanuele6> python2 -c 'import urllib; print(urllib.quote("hi"))'
[17:36:59] <emanuele6> hi
[17:37:35] *** Joins: twy (~twy@27.34.16.110)
[17:39:09] *** Quits: twy (~twy@27.34.16.110) (Quit: Leaving)
[17:40:28] *** Quits: eleventh (~eleventh@143.131.13.208) (Ping timeout: 264 seconds)
[17:40:48] <emanuele6> (in python3, you need to import urllib.parse and then use urllib.parse.quote)
[17:41:05] *** Joins: twy (~twy@27.34.16.110)
[17:41:29] *** Joins: eleventh (~eleventh@143.131.13.208)
[17:41:43] <emanuele6> mihaiadrian: it is a little odd that in your system you have python2 as the default python interpreter since python2 has been deprecated for quite a bit
[17:42:00] <twy> hi
[17:42:16] <emanuele6> you probably can still use a python3 interpreter, by using the python3 command though
[17:42:42] *** Joins: samy1028b (~samy1028@068-184-115-031.res.spectrum.com)
[17:44:42] <emanuele6> s/deprecated/discontinued/
[17:46:01] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:47:06] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:47:13] *** Joins: prompt32 (~kapad@user/kapad)
[17:49:49] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:52:15] *** dfdx_ is now known as dfdx
[17:55:18] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:57:35] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[18:03:30] *** Joins: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de)
[18:05:24] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[18:06:30] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 268 seconds)
[18:08:57] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[18:09:06] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:10:32] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[18:10:46] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[18:10:46] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[18:10:46] *** Joins: Bercik (~Redomen@user/bercik)
[18:13:28] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[18:14:14] *** Joins: abip20 (~abdullah@user/abip20)
[18:17:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:17:40] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[18:18:19] *** Joins: new_guest_21 (~new_guest@static.165.121.9.5.clients.your-server.de)
[18:18:25] <Bayes> re:shell can we chain a command so that (1) we establish a remote shell via ssh, and (2) a command gets run remotely as soon as I connect automatically but the shell keeps open?
[18:18:32] <new_guest_21> Hi again, can I get some help with using a different pattern delimiter for sed in this command? This works:
[18:18:32] <new_guest_21> `echo '~/SOME/directory/SOME/' | sed '0,/\/SOME\//{s/\/SOME\//\/ANOTHER\//}'`
[18:18:33] <new_guest_21> But this doesn't:
[18:18:33] <new_guest_21> `echo '~/SOME/directory/SOME/' | sed '0,#/SOME/#{s#/SOME/#/ANOTHER/#}'`
[18:19:06] <new_guest_21> (I only want to replace the first instance of string in path.)
[18:19:10] <emanuele6> yes, that is not valid awk
[18:19:26] <emanuele6> \#/SOME/# would be valid
[18:19:42] <emanuele6> err, i meant sed, not awk :P
[18:19:55] <new_guest_21> I see, let me go try that...
[18:20:00] <Bayes> yeah I was like "oh wow I didn't know sed does awk" xD
[18:20:25] *** Joins: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr)
[18:20:46] <TomyWork> only a very very small subset
[18:20:59] <new_guest_21> Tried `echo '~/SOME/directory/SOME/' | sed '0,\#/SOME/#{s#/SOME/#/ANOTHER/#}'` and got this error:
[18:21:03] <new_guest_21> `-bash: ~/ANOTHER/directory/SOME/: No such file or directory`
[18:21:21] <new_guest_21> Should I escape all instances of `#` with `\#`?
[18:21:26] <Soliton> # echo '~/SOME/directory/SOME/' | sed '0,\#/SOME/#{s#/SOME/#/ANOTHER/#}'
[18:21:27] <shbot> Soliton: ~/ANOTHER/directory/SOME/
[18:21:30] <new_guest_21> (That's counterproductive.)
[18:21:34] <TomyWork> what do you even want to do?
[18:21:59] <new_guest_21> Replace the first occurence of SOME in path with ANOTHER
[18:22:05] <Soliton> perhaps show what you actually did.
[18:22:07] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[18:22:20] <new_guest_21> Soliton: 🤷‍♂️ I did
[18:22:28] <new_guest_21> Please scroll up.
[18:22:33] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:22:36] <Soliton> so you can see that it works.
[18:22:40] <new_guest_21> I provided what works and what doesn't.
[18:23:01] <new_guest_21> (In my first post in this IRC session.)
[18:23:49] <new_guest_21> Odd that it works for you...
[18:23:52] *** he is now known as af
[18:24:15] <new_guest_21> Ah, backticks... copy-paste error on my part :P
[18:24:30] <TomyWork> # echo '~/SOME/directory/SOME/' | sed 's#/SOME/#/ANOTHER/#'
[18:24:31] <shbot> TomyWork: ~/ANOTHER/directory/SOME/
[18:24:54] <new_guest_21> Thank you emanuele6 and Soliton !
[18:24:55] <TomyWork> why even do the limitation if you're only ever going to pipe in one line?
[18:25:06] <Soliton> an address of 0 is an extension, btw.
[18:25:08] *** Joins: sublim20 (~sublim20@user/sublim20)
[18:25:08] <new_guest_21> I am not, this is for testing.
[18:25:23] <new_guest_21> ^ TomyWork
[18:25:24] <TomyWork> and you never described your input, so this is all we know about it
[18:25:33] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[18:26:34] <new_guest_21> Okay. Input is `$path` provided by `inotifywait`. I want to replace a string in the path with another and use that to create an adjacent directory (maintaining the names).
[18:26:52] <new_guest_21> Am I making sense now?
[18:26:54] <olspookishmagus> say I'm typing mv /path1/path2/path3/path4/.../pathN/file and I want just rename that file to file.BACKUP, is there a way to do that without retyping that whole directory structure and also without cd'ing into that directory and start typing again?
[18:27:07] <Soliton> ${path//"$string"/$other}
[18:27:15] <TomyWork> # echo '~/SOME/directory/SOME/' | sed '0,\#/SOME/# s##/ANOTHER/#' # Here's how you can shorten this a bit. "s" defaults to matching the same thing as the regex address
[18:27:16] <shbot> TomyWork: ~/ANOTHER/directory/SOME/
[18:27:19] <Soliton> you don't use sed to work on shell variables.
[18:28:33] <new_guest_21> Soliton: Not directly, no. I'm echoing $path first. Am I missing something? Is it bad? (Checking your solutions above...)
[18:28:37] <emanuele6> ${path/"$string"/$other} to only replace the first occurence of "$string"
[18:28:48] <Soliton> and wanting to replace the first occurence sounds odd. do you have multiple lines in the variable?
[18:29:14] <Soliton> echo | cmd  is almost always non-sense.
[18:29:23] <new_guest_21> No. There could be multiple directories with the same name as shown in my example. '~/SOME/directory/SOME/'
[18:29:27] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[18:29:38] <Soliton> but surely you just have one path in the variable?
[18:29:45] <TomyWork> # path='~/SOME/directory/SOME/'; olddir=/SOME/; newdir=/ANOTHER/; printf '%s\n' "${path/"$olddir"/"$newdir"}"
[18:29:46] <shbot> TomyWork: ~/ANOTHER/directory/SOME/
[18:30:12] <TomyWork> # path='~/SOME/directory/SOME/'; olddir=/SOME/; newdir=/ANOTHER/; printf '%s\n' "${path//"$olddir"/"$newdir"}"
[18:30:13] <shbot> TomyWork: ~/ANOTHER/directory/ANOTHER/
[18:30:18] <TomyWork> pick one
[18:30:19] <Soliton> ah, multiple path components.
[18:30:32] <new_guest_21> yeah
[18:30:47] <TomyWork> to do that with sed, add "g" at the end of the "s" command
[18:30:55] <TomyWork> (but dont do that with sed)
[18:31:12] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[18:31:22] <emanuele6> !b6
[18:31:23] <greybot> When given a choice of solutions, the newbie will always choose the wrong one.
[18:31:42] <TomyWork> my understanding was that you specifically only want the first match to be replaced
[18:32:14] <Soliton> the sed command works on multiple lines though. this is all confusing.
[18:32:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:34] <new_guest_21> Re `${path/"$string"/$other}` — it looks like I'm going to have to escape slashes for I need to replace `/SOME/` with `/ANOTHER/` so that I don't replace words, but only path components/dirs
[18:32:47] <TomyWork> # path='~/SOME/directory/SOME/'; olddir=/SOME/; newdir=/ANOTHER/; printf '%s\n' "${path//"$olddir"/"$newdir"}" # no you don't
[18:32:48] <shbot> TomyWork: ~/ANOTHER/directory/ANOTHER/
[18:33:15] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[18:33:33] <TomyWork> that's the great thing about doing this in bash instead of sed
[18:33:43] <new_guest_21> Okay... I should probably test it out before talking
[18:33:44] <TomyWork> you don't have to escape anything in your paths
[18:33:52] <Soliton> slashes in the string are not syntax and patterns are disabled with the quoting.
[18:33:54] <TomyWork> new_guest_21++
[18:34:06] <TomyWork> !new_guest_21++
[18:34:18] <TomyWork> how does karma work again?
[18:34:26] <osse> like a bitch
[18:34:33] <TomyWork> -_-
[18:34:47] <emanuele6> this is #bash, not #java
[18:34:49] *** Quits: bud (~bud@user/bud) (Remote host closed the connection)
[18:35:03] <osse> only cool channels have karma systems
[18:35:08] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:35:54] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:35:56] <TomyWork> could have sworn #bash had one
[18:36:32] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:36:49] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[18:38:05] <TomyWork> new_guest_21, btw, your idea has a flaw that might or might now be relevant
[18:38:17] <TomyWork> # path='~/SOME/directory/SOME/SOME/'; olddir=/SOME/; newdir=/ANOTHER/; printf '%s\n' "${path//"$olddir"/"$newdir"}" # no you don't
[18:38:18] <shbot> TomyWork: ~/ANOTHER/directory/ANOTHER/SOME/
[18:38:26] <new_guest_21> First time seeing something like `${path/"$string"/$other}` so took me a bit to wrap my head around it. Thank you TomyWork for the full example!
[18:38:55] <Soliton> they just want to replace the first occurence.
[18:39:00] *** Joins: superboot (~agentgasm@user/superboot)
[18:39:09] <TomyWork> my impression was they want to replace it all
[18:39:14] <new_guest_21> no
[18:39:17] <TomyWork> ah
[18:39:19] <new_guest_21> just the first
[18:39:31] <TomyWork> reduce the double-/ to a single /
[18:39:32] <new_guest_21> But you got me curious...
[18:39:49] <new_guest_21> TomyWork none of my examples use double /
[18:40:04] <TomyWork> no i mean after "path"
[18:40:06] <MiLeon>  "${path// ?
[18:40:14] <Soliton> !pe
[18:40:14] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[18:40:27] <TomyWork> "//" replaces all, while "/" replaces only the first match
[18:40:29] *** Quits: twy (~twy@27.34.16.110) (Remote host closed the connection)
[18:41:10] <TomyWork> Soliton, that's a good article to read later, but throwing that right in the middle of this conversation did nothing good
[18:41:35] <new_guest_21> Oh, yes, I understood that. What I meant was, when I was referring to the code `${path/"$string"/$other}` I made sure to not use double /
[18:41:41] <new_guest_21> :)
[18:41:48] <TomyWork> yeah so you got it right
[18:41:52] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:41:52] <new_guest_21> Nevermind though. I get it. Thanks!
[18:42:27] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[18:42:30] <TomyWork> new_guest_21, but quote your expansions
[18:42:44] <TomyWork> "${path/"$string"/"$other"}"
[18:43:09] <new_guest_21> Always! I noted this down in my script:
[18:43:10] <new_guest_21> "$Quote" "$Every" "$Fucking" "$Expansion"
[18:43:14] <new_guest_21> Someone said it before.
[18:43:20] <emanuele6> there is no reason to quote $other
[18:43:28] <emanuele6> but do it if you want i guess
[18:45:11] <geirha> # var=foo ; printf '%s\n' "${var/"foo"/"bar"}"
[18:45:12] <shbot> geirha: bar
[18:45:15] <geirha> 42# var=foo ; printf '%s\n' "${var/"foo"/"bar"}"
[18:45:16] <shbot> geirha: "bar"
[18:45:18] <new_guest_21> I have a few books bookmarked for this (CLI: commands, shell scripting), but is there any book in particular that you'd recommend? One that would teach safe ways and provide gotchas like you all have been doing? Or do I have to learn that o experience?
[18:45:47] <new_guest_21> o <> from
[18:46:14] <geirha> much fun, though 4.2 is getting old enough to almost not be an issue anymore
[18:46:25] <emanuele6> yeah, quoting $other also has portability problems other than being unnecessary
[18:46:28] *** Quits: eleventh (~eleventh@143.131.13.208) (Ping timeout: 264 seconds)
[18:46:35] <emanuele6> TomyWork: i would not suggest that
[18:46:40] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[18:46:46] *** Joins: twy (~twy@27.34.16.110)
[18:47:00] <geirha> !guide > new_guest_21
[18:47:00] <greybot> new_guest_21: http://mywiki.wooledge.org/BashGuide or in PDF: http://s.ntnu.no/bashguide.pdf
[18:47:07] *** Joins: eleventh (~eleventh@143.131.13.208)
[18:48:15] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:48:30] <geirha> !books
[18:48:30] <greybot> Most of the published shell/bash books are relatively poor. They may have a few gems here and there, but they're few and far between. Try the BashGuide instead: http://mywiki.wooledge.org/BashGuide
[18:49:16] <new_guest_21> Excellent and good to know! :)
[18:49:42] *** Quits: twy (~twy@27.34.16.110) (Client Quit)
[18:51:17] *** Joins: sublim20 (~sublim20@user/sublim20)
[18:52:48] *** Joins: noord (~noord@user/noord)
[18:55:56] *** Joins: zoe (~zoe@fsf/member/zoe)
[19:00:50] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:53] <rairden> how can bash sort using the last numbers?  file001, file432. I have tried "sort -r" and played with stuff like "sort -k1.2n"
[19:02:23] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[19:03:03] <rairden> ah, I got it now.  "sort -Vr"
[19:03:27] <geirha> FYI that's GNU spesific
[19:03:37] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[19:03:59] <geirha> but when the numbers are zero-padded like that, regular lexicographical sorting will sort them right
[19:04:36] *** Guest6257 is now known as itu
[19:04:53] *** Quits: itu (~wp@lynx.uberspace.de) (Changing host)
[19:04:53] *** Joins: itu (~wp@wikipedia/itu)
[19:05:26] *** Quits: djp (~djp@107-179-223-174.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[19:09:05] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[19:09:27] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[19:10:44] <Soliton> if the padding is not as shown then you can use: -k 1.5nr
[19:11:20] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[19:12:05] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[19:12:08] <rendar> "a/b/c" -> best way to get x="a" y="b/c" (or even "b/c/d/e...")
[19:12:09] <rendar> ?
[19:12:27] *** Joins: _Ad1Tech_ (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[19:12:30] <Soliton> !faq 100
[19:12:30] <greybot> https://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
[19:15:03] *** Quits: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 256 seconds)
[19:16:47] <TomyWork> emanuele6, eh, my way is easier to remember
[19:17:20] <TomyWork> "just quote it all", vs. "quote it EXCEPT in the last part of a slash expansion"
[19:17:34] <emanuele6> but it was already quoted correctly
[19:18:12] <emanuele6> and you told the guy to also quote the expansion that does not need quoting introducing portability problems
[19:18:20] <emanuele6> as if that was not already correct
[19:19:08] <TomyWork> and quoting $string does not introduce portability problems?
[19:19:18] <emanuele6> why would it?
[19:19:36] <TomyWork> idk, why would quoting $other introduce portability problems?
[19:20:16] <emanuele6> the first part is a pattern, in patterns quoted substitutions are interpreted literally and unquoted substitutions as patterns
[19:21:16] *** Quits: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr) (Ping timeout: 264 seconds)
[19:21:31] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[19:22:15] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[19:22:18] <TomyWork> and portability to what exactly?
[19:22:33] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[19:23:36] <emanuele6> # a='hello'; printf '%s\n' "${a/e/"x"}"
[19:23:37] <shbot> emanuele6: hxllo
[19:23:40] <emanuele6> 42# a='hello'; printf '%s\n' "${a/e/"x"}"
[19:23:41] <shbot> emanuele6: h"x"llo
[19:24:33] <emanuele6> 42# a='hello' y=x; printf '%s\n' "${a/e/"$y"}"
[19:24:34] <shbot> emanuele6: h"x"llo
[19:24:36] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Remote host closed the connection)
[19:24:38] <emanuele6> # a='hello' y=x; printf '%s\n' "${a/e/"$y"}"
[19:24:39] <shbot> emanuele6: hxllo
[19:24:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[19:25:19] <TomyWork> that's disturbingly recent... wtf
[19:25:40] *** Joins: beencubed (~beencubed@209.131.238.248)
[19:27:20] <TomyWork> new_guest_21, do you care about portability to ubuntu 12.04 or centos 7?
[19:28:36] <emanuele6> TomyWork: there is also a compatibility setting for that in bash
[19:28:41] <emanuele6> # a='hello' y=x; printf '%s\n' "${a/e/"$y"}"
[19:28:42] <shbot> emanuele6: hxllo
[19:28:53] <emanuele6> # shopt -s compat42; a='hello' y=x; printf '%s\n' "${a/e/"$y"}"
[19:28:53] <shbot> emanuele6: h"x"llo
[19:31:27] *** Joins: goldfish (~goldfish@user/goldfish)
[19:31:28] <emanuele6> TomyWork: the point is more that is preferable not to quote that substitution, so you should not recommend to someone has been told to not quote it, to quote it
[19:31:48] <emanuele6> s/someone/& that/
[19:31:55] <TomyWork> ubuntu 14.04 and sles12 has 4.3, centos 8 and debian 9 have 4.4. can't find a jessie anywhere and can't think of any other important non-rolling distros
[19:32:34] <TomyWork> is that an objective "preferable"? if so, why? if not, whose preference is that?
[19:33:03] <Soliton> usually people that know how quoting works prefer to only quote what is necessary to quote.
[19:33:36] *** Joins: zro (~zro@user/zro)
[19:33:44] <Soliton> and it's certainly good to encourage people to understand quoting since it's an integral part of shell scripting.
[19:33:55] <OMGOMG> !qefs > also acceptable:
[19:33:55] <greybot> also acceptable:: "$Quote" "$Every" "$Fucking" "$Substitution"
[19:34:14] <TomyWork> yes, that's easy to remember
[19:34:26] <Soliton> the point is that it isn't always when it comes down to it.
[19:34:27] <phogg> I prefer to quote everything and let God sort it out.
[19:34:43] <Soliton> at some point you will have to understand quoting in detail.
[19:34:50] <tirnanog> emanuele6: what was the reason for introducing quote removal in 4.3? do you know?
[19:35:08] <han-solo> i understand nothing
[19:35:39] <TomyWork> https://lwn.net/Articles/589566/ here are the 4.3 release notes, tirnanog
[19:35:42] <emanuele6> tirnanog: i think for ~
[19:35:45] *** Quits: _Ad1Tech_ (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Quit: Leaving)
[19:36:02] <emanuele6> ~ expands in the substitution
[19:36:14] <emanuele6> but i am not sure that is the only reason
[19:36:16] <OMGOMG> # set -- racer; echo "$15" "$1"5 "${1}5"
[19:36:17] <shbot> OMGOMG: racer5 racer5 racer5
[19:36:21] <OMGOMG> which of these is idiomatic?
[19:36:32] <emanuele6> 42# a=a; echo "${a/a/~}"
[19:36:32] <TomyWork> the reasoning seems to be "since the shell treats quotes as special"
[19:36:33] <shbot> emanuele6: ~
[19:36:40] <emanuele6> # a=a; echo "${a/a/~}"
[19:36:40] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:36:40] <shbot> emanuele6: /root
[19:37:24] <phogg> OMGOMG: for clarity I recommend ${1} since this is clear about will happen *and* what you intended to happen
[19:38:08] <Soliton> "$1"5 is very similar.
[19:38:37] <han-solo> i prefer the ${1} too
[19:38:46] <Soliton> probably depends if you like to quote like "$a...$b" or "$a"..."$b"
[19:38:54] <TomyWork> brace yourselves, parser is coming
[19:40:49] <new_guest_21> TomyWork: No. I only use and care about compatibility with Debian/Ubuntu and will always have control over what OSs I use.
[19:41:11] <new_guest_21> But when someone says something is a safe/good practice, I incorporate it.
[19:41:43] <TomyWork> # a='{1'; b='5}'; eval "echo $a""..""$b"
[19:41:43] <shbot> TomyWork: 1 2 3 4 5
[19:41:54] <TomyWork> # a='{1'; b='5}'; eval "echo $a..$b"
[19:41:55] <shbot> TomyWork: 1 2 3 4 5
[19:43:29] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[19:43:38] *** Joins: sgn (~sgn@user/sgn)
[19:44:04] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[19:47:59] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:24d3:2aa8:afd:ebec)
[19:50:56] *** Joins: crst (~crst@78-73-145-31-no2661.tbcn.telia.com)
[19:52:19] <crst> Hi, is there a shortcut for this character combo, I hate to write that: ~/
[19:54:34] <djph> crst: ~/ IS the shortcut ...
[19:54:41] <tirnanog> set up a readline binding, I suppose.
[19:54:47] *** Joins: SuperLag (~akulbe@user/superlag)
[19:54:47] <djph> the long form is $HOME/
[19:54:51] <tirnanog> if it's that much of a nuisance.
[19:54:59] <djph> the even longer form is /home/username/
[19:55:24] <emanuele6> or even /////////home/////////////username/////
[19:55:34] <djph> ...
[19:55:51] <crst> Lol, yeah looking for an even shorter approach not longer ones
[19:55:59] <djph> crst: knowing why you need to be typing the explicit path would help though ...
[19:56:02] <phogg> crst: you can't get better than two characters for this
[19:56:10] <Soliton> gonna be tough to beat two characters.
[19:56:12] <phogg> three keystrokes, if you require shift to get to ~
[19:56:37] <phogg> crst: if you create a variable containing the path it's still two characters (and three keystrokes) at best: $h
[19:56:59] *** Quits: sinaowolabi (~SinaOwola@41.58.60.82) (Ping timeout: 256 seconds)
[19:57:02] <emanuele6> phogg: ~ requires altGr and / requires shift for me
[19:57:09] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[19:57:19] <djph> phogg: relative path './' 2 keystrokes! :D
[19:57:21] <phogg> emanuele6: at worst four, then
[19:57:23] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[19:57:41] <crst> Things like alt + / are much easier, the ~/ I always struggle and I'm into computer stuff for years now fwiw, hahah
[19:57:51] <emanuele6> { is altgr+shift+key
[19:58:04] <tirnanog> so use bind and do it however you want.
[19:58:11] <tirnanog> or don't. that's the answer.
[19:58:15] <phogg> crst: is the problem you have with reaching the ~ key? You can remap another key to emit it, or set up a macro to type out the string for you
[19:59:03] <emanuele6> so the question is how to bind alt+/ to "~/" in readline?
[19:59:08] <emanuele6>  bind '"\e/":"~/"'
[19:59:33] <crst> phogg: Not really, I've been using different international layouts and always have problems with this. But yeah bind sounds good, I'll try that, thanks a lot guys
[19:59:53] <phogg> crst: emanuele6 beat me to it, enjoy
[20:00:30] <emanuele6> now it's three keys that awkwardly need to be pressed at the same time, yay
[20:00:40] <phogg> only two for me
[20:00:48] <phogg> and it still saves time if they're easier to reach!
[20:00:55] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:01:32] <emanuele6> i have to hold down shift and (left) alt and press 7
[20:01:54] <emanuele6> (left alt because i don't have a right alt, that is altGr)
[20:02:40] *** Quits: narendra (~user@2a02:8109:b63f:ff7c::56c2) (Ping timeout: 264 seconds)
[20:03:56] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:04:05] *** Joins: sgn (~sgn@user/sgn)
[20:08:37] *** Joins: tobybl_ (~tobybl@213.31.134.21)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:09] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 256 seconds)
[20:15:54] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[20:17:28] <rendar> if var="a/b/c", `${var%*/}` is still "a/b/c" instead of "a"
[20:17:51] <ELFrederich> Hi, is it possible to grep for something like "foo" but ignore lines that also have some special term like SKIP_THIS_FOO?  Or would I first have to "grep foo", then pipe it to "grep -v SKIP_THIS_FOO"?
[20:18:06] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:18:43] <e36freak> !faq foo and bar
[20:18:44] <greybot> https://mywiki.wooledge.org/BashFAQ/079 -- How can I grep for lines containing foo AND bar, foo OR bar?  Or for files containing foo AND bar, possibly on separate lines?  Or files containing foo but NOT bar?
[20:19:03] *** Quits: at_work (~at_work@user/at-work/x-5282331) (Quit: Coyote finally caught me)
[20:19:04] <phy1729> rendar: the / is on the wrong side
[20:19:21] <phy1729> Also seems you want %%
[20:19:40] <rendar> phy1729, oh that's it, %% thanks
[20:19:41] <emanuele6> yeah, %*/ won't do anything, var does not end in /
[20:19:48] <rendar> `${var%%/*}` works
[20:19:53] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[20:22:16] <ELFrederich> e36freak, thanks... doesn't look like there's a "grep" only solution, only awk
[20:22:38] <rendar> now problem is getting "b/c" because `${var%/*}` instead gives me "a/b" :|
[20:22:40] <e36freak> i mean grep | grep -v would work
[20:22:59] <e36freak> nothing particularly wrong with that
[20:23:02] <ELFrederich> I was looking for a grep only solution because I'm actually running it through a "git grep"
[20:23:34] <phogg> git grep has a lot of differences from the real grep...
[20:23:44] *** Joins: ekaj (~ekaj@user/ekaj)
[20:24:24] <phogg> ELFrederich: all things are possible with grep -P, but they may be nasty and inefficient. 'perldoc perlre' and read about lookaround assertions.
[20:24:36] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[20:24:48] <TomyWork> git grep has -P as well, i just checked
[20:24:53] <ELFrederich> okay... worth an ask.  Basically, I'm looking for hard coded values which should come from environment variables.  So foo.bar.com is bad.  But something like os.environ.get("CI_REGISTRY", "foo.bar.com") would be okay.
[20:25:22] <emanuele6> `git grep -P' support is an optional compile-time extension
[20:25:41] <ELFrederich> Basically if I see CI_REGISTRY on the same line (no matter what language they're using), I'll assume they're doing it correctly and not hard coding the domain
[20:26:27] <phogg> ELFrederich: if you know it's always going to be before and not *sometimes* after then it's very easy
[20:26:32] *** Quits: at_work (~at_work@user/at-work/x-5282331) (Ping timeout: 252 seconds)
[20:27:00] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[20:27:16] <ELFrederich> phogg, correct, but in some cases it'll be after.  Perhaps even in a comment.
[20:27:43] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 268 seconds)
[20:28:24] <ELFrederich> I have this automation already set up... I'll just do an additional grep -v
[20:28:43] *** Joins: wigums (~wigums@user/wigums)
[20:28:53] <ELFrederich> And I guess I can't overwrite the same file like "cat /tmp/hits | grep -v CI_REGISTRY > /tmp/hits".  I'll have to use a new file
[20:29:35] <emanuele6> git grep -P '(?!SKIP_THIS_FOO.*)foo(?!.*SKIP_THIS_FOO)'
[20:34:47] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:37:15] *** Joins: extern (~archer@141.226.73.54)
[20:38:17] *** Quits: tobybl_ (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:39:05] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:39:15] <e36freak> ELFrederich: right, use a new file and mv
[20:39:24] *** Joins: arinov (~arinov@178.240.181.140)
[20:40:03] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:40:12] *** Joins: narendra (~user@2a02:8109:b63f:ff7c::56c2)
[20:41:17] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:42:51] *** Joins: brainoff (~brainoff@77.222.109.84)
[20:44:02] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[20:47:29] *** Joins: zebrag (~chris@user/zebrag)
[20:48:04] *** Quits: narendra (~user@2a02:8109:b63f:ff7c::56c2) (Ping timeout: 268 seconds)
[20:48:18] <phogg> when I think about the runtime cost of that it makes my brain hurt
[20:52:59] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[20:54:06] *** Quits: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Quit: ZNC - https://znc.in)
[20:54:39] <ELFrederich> e36freak, okay... mostly working now.  Is there a way with grep to ignore lines with CI_REGISTRY but not lines with CI_REGISTRY_USER.  I've tried "grep -v "CI_REGISTRY[^_]" but that fails if CI_REGISTRY is at the end of the line
[20:55:10] * ELFrederich may just switch to Python if this gets any more complicated.
[20:55:31] <emanuele6> grep -Ev 'CI_REGISTRY([^_]|$)'
[20:56:13] <ELFrederich> ahh... or end of line.
[20:56:46] <Soliton> you probably don't want to match CI_REGISTRYFOO either.
[20:57:30] <TomyWork> ELFrederich, git grep also has --and and --not (and --or)
[20:57:37] <ELFrederich> Soliton, these would be crazy corner cases at that point.  These are GitLab variables
[20:58:34] *** Joins: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[21:00:10] *** Quits: extern (~archer@141.226.73.54) (Quit: BB is in the building)
[21:02:37] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[21:04:57] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[21:11:04] *** Quits: dreamon (~dreamon@ppp-88-217-67-53.dynamic.mnet-online.de) (Ping timeout: 264 seconds)
[21:11:47] <ELFrederich> I looked at all the false positives.  This catches all of them correctly.  grep -Ev "${GOOD_TERM}([^_A-Za-z0-9]|$)"
[21:11:57] *** Quits: zostj (~rue@1-162-46-144.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[21:12:25] <ELFrederich> Thanks TomyWork Soliton emanuele6 e36freak phogg
[21:12:42] *** kurahaupo is now known as Martin
[21:14:25] *** Quits: furrymcgee (~devuan@cgn-89-1-209-86.nc.de) (Quit: leaving)
[21:16:48] <phogg> that's not much different from [^_[:alnum:]]
[21:18:42] <TomyWork> phogg, russia would disagree
[21:20:26] <cornfeedhobo> this is first for me. has anyone seen a shell script that has trailing binary data? specifically following `exit 0`?
[21:20:39] <koala_man> cornfeedhobo: shar files, yes
[21:20:41] <TomyWork> cornfeedhobo, common pattern with installers
[21:21:19] <cornfeedhobo> but i don't see an obvious operation where this binary data is used or interpreted or ... any ideas?
[21:21:29] <TomyWork> basically the script knows how long it itself is, then cuts off that many bytes and pipes that into tar xz or whatever
[21:21:34] <koala_man> there's undoubtedly a non-obvious one
[21:21:40] <koala_man> if not an obvious one
[21:21:54] <cornfeedhobo> sudo sed -n -e '1,/^exit 0$/!p' $0 > "${tmpdir}/AmLite.tgz" 2>/dev/null
[21:21:55] <TomyWork> cornfeedhobo, look for a variable that gets assigned a constant number, near the top of the script
[21:21:56] <cornfeedhobo> found it
[21:22:03] <TomyWork> oooor they use a marker
[21:22:17] <cornfeedhobo> thanks
[21:22:35] <Soliton> presumably a useless sudo.
[21:22:37] <koala_man> sudo. wonderful.
[21:22:42] <TomyWork> why tf do they run sed as sudo?
[21:22:46] <cornfeedhobo> yeah, i'm pulling this all apart
[21:22:58] <cornfeedhobo> uncertain. sloppy work for sure
[21:23:14] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Read error: Connection reset by peer)
[21:23:29] <TomyWork> at least they're quot--- nope there's an unquoted $0
[21:23:42] <TomyWork> if you wanna have fun, rename it to something with a space in it and run it
[21:23:50] <cornfeedhobo> heh
[21:24:08] <TomyWork> also wasteful to make a temporary file
[21:24:09] <cornfeedhobo> okay i've found what i was looking for. thanks! interesting trick
[21:24:14] <TomyWork> could just pipe it into tar xz
[21:24:17] <cornfeedhobo> indeed
[21:25:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:25:34] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[21:26:27] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[21:26:51] *** Joins: prompt32 (~kapad@user/kapad)
[21:28:05] *** Quits: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[21:28:11] <cornfeedhobo> heh. if you could only see the rest of the script :p
[21:28:15] *** Quits: prompt32 (~kapad@user/kapad) (Client Quit)
[21:28:48] *** Joins: prompt32 (~kapad@user/kapad)
[21:28:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6dc1:f15c:f052:6c31)
[21:28:49] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6dc1:f15c:f052:6c31) (Changing host)
[21:28:49] *** Joins: skapata (~Skapata@user/skapata)
[21:29:16] *** Quits: prompt32 (~kapad@user/kapad) (Remote host closed the connection)
[21:29:46] *** Joins: prompt32 (~kapad@user/kapad)
[21:29:54] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:30:35] <omegatron> is it still a script or already a pain inducer ?
[21:31:18] <cornfeedhobo> hehe
[21:31:27] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:32:52] *** Quits: thevishy (~Nishant@2405:201:f005:c007:f92b:9823:fedf:deab) (Quit: Leaving)
[21:33:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:34:48] *** Martin is now known as kurahaupo
[21:35:47] *** Joins: extern (~archer@141.226.73.54)
[21:36:44] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[21:37:10] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[21:37:10] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[21:37:10] *** Joins: wuseman (~wuseman@user/wuseman)
[21:37:34] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[21:37:41] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[21:37:53] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[21:39:49] <wstrnr> i've recently acquired a habit of doing  select x in */; do cd "$x"; break; done
[21:40:24] <wstrnr> sometimes typing this spell is not much hurdlesome as typing some crazy directory name, even with tab auto-completion
[21:40:35] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:41:56] <omegatron> and I recently made a function cdrnd() which  cd  into a random sub-directory .. we all have our hobbies  ... =D
[21:44:31] *** Joins: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de)
[21:46:15] <han-solo> `while sleep 0.1;do tput cup $((RANDOM%50)) $((RANDOM%50)); echo $((RANDOM%100));done`
[21:46:32] <han-solo> when bored
[21:47:19] <extern> han-solo :D
[21:47:56] <extern> the pythoneer han-solo ?
[21:48:26] <han-solo> um, i lurk there somtimes yes ':)
[21:48:31] <new_guest_21> TomyWork: Beginning from "why even do the limitation if you're only ever going to pipe in one line?" I misunderstood/missing a few things you said! Understood and noted, thanks! (And I missed such a simple thing!)
[21:48:45] <extern> you used to help me there
[21:48:46] <new_guest_21> missed*
[21:49:02] <extern> so respect
[21:49:04] <han-solo> extern: oh, cool. Glad :)
[21:51:33] *** Quits: arinov (~arinov@178.240.181.140) (Quit: WeeChat 3.3)
[21:52:19] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[21:54:11] <phogg> han-solo: I like this better: while sleep 0.1; do tput cup $((RANDOM%${ROWS-25})) $((RANDOM%${COLUMNS-80})); tput setab $((RANDOM%8)); printf ' '; done
[21:55:00] <extern> phogg: i don't like this at all
[21:56:18] <TomyWork> extern "C"
[21:56:46] *** Quits: new_guest_21 (~new_guest@static.165.121.9.5.clients.your-server.de) (Quit: new_guest_21)
[21:56:52] <han-solo> phogg: colors fun
[21:57:10] <cornfeedhobo> colors == more fun
[21:57:16] <han-solo> mm, should probably random color and show numbers
[21:59:35] <han-solo> while sleep 0.01; do tput cup $((RANDOM%${ROWS-25})) $((RANDOM%${COLUMNS-80})); tput setaf $((RANDOM%8)); printf '%d' "$((RANDOM%10))"; done
[22:00:23] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[22:00:33] *** Joins: sgn (~sgn@user/sgn)
[22:00:54] <phogg> han-solo: I was thinking more 'terminal screen saver' https://termbin.com/enru
[22:01:01] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[22:02:13] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[22:02:39] <han-solo> phogg: ah, if you speed it up, it looks like it's generating ascii art :)
[22:03:47] <Soliton> it's LINES not ROWS.
[22:04:01] <phogg> oops, yes it is
[22:05:06] *** Quits: brainoff (~brainoff@77.222.109.84) (Quit: Client closed)
[22:07:08] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[22:12:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:14:04] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[22:14:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:15:02] *** Quits: extern (~archer@141.226.73.54) (Quit: WeeChat 3.3)
[22:15:20] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Quit: Quit)
[22:15:37] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[22:16:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:30] *** Joins: linnet (~linnet@149.155.223.155)
[22:22:20] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[22:22:20] *** Joins: extern (~archer@141.226.73.54)
[22:23:10] *** Joins: justache (~justache@user/justache)
[22:31:41] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[22:32:02] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:32:28] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:32:50] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[22:33:10] *** Joins: l4yer (~l4yer@2a07-a880-3101-1051-a922-bb49-135a-4393.pool6.ovpn.com)
[22:35:15] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:35:29] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[22:36:52] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[22:37:26] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Ping timeout: 252 seconds)
[22:38:38] *** Joins: kill (~killown@user/killown)
[22:38:51] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[22:39:30] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[22:39:50] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[22:40:41] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Remote host closed the connection)
[22:41:02] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[22:44:10] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[22:44:10] *** Quits: extern (~archer@141.226.73.54) (Quit: WeeChat 3.3)
[22:44:16] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[22:44:38] *** Joins: tobybl (~tobybl@213.31.134.21)
[22:44:50] *** Joins: Momentum (momentum@tilde.team)
[22:45:43] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Read error: Connection reset by peer)
[22:46:15] *** Joins: mei (~mei@user/mei)
[22:46:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:48:16] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[22:48:31] *** Joins: DrNostril (~DrNostril@82.102.21.197)
[22:48:53] *** Joins: DocNostril (~DrNostril@82.102.21.197)
[22:51:09] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:713a:c3a0:ebd0:8790)
[22:51:58] *** Quits: myrrh (~user@2607:fb90:b414:3a3c:877e:2085:c20f:2e47) (Quit: ERC (IRC client for Emacs 27.2))
[22:53:31] *** Joins: peve (~peve@ucb-np2-234.colorado.edu)
[22:54:02] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[22:54:21] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Remote host closed the connection)
[22:55:09] <Momentum> can anyone tell me what the syntax error on this command is?
[22:55:12] <Momentum> <&"${GAWK[0]}" while :; do openssl s_client --connect "irc.libera.chat:6697" -quiet; done >&"${GAWK[1]}"
[22:57:07] <Momentum> >syntax error near unexpected token `do'
[22:57:35] *** Joins: hingoanashi1209 (~hingoanas@user/hingoanashi1209)
[22:57:53] <kurahaupo> Momentum: unlike simple commands, redirections on compound commands must come afterwards
[22:58:37] <kurahaupo> That's because keywords like "while" must come first to be recognised
[22:59:24] <kurahaupo> so it's thinking that "while :" is a simple command, and then getting confused by "do" (which is a keyword)
[22:59:50] <Momentum> oh i see
[23:00:18] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:00:41] <kurahaupo> Same for if/fi, case/esac, (/), {/} etc
[23:03:06] <kurahaupo> also the "quote everything" rule does not apply to <&$var; I'm mildly surprised that that doesn't cause an error
[23:03:33] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[23:03:51] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[23:04:32] <Momentum> it's a coproc if that makes any difference kurahaupo
[23:04:37] <TomyWork> han-solo, this is your fault: fac=1000000 limitsq=$((4*fac*fac)); while sleep 0.0001; do xp=$((RANDOM%160)) yp=$((RANDOM%60)) cx=$(((xp-100)*fac/40)) cy=$(((yp-30)*fac/20)) x=0 y=0; for i in {1..7}; do x2=$(((x*x-y*y)/fac+cx)) y=$((2*x*y/fac+cy)) x=$x2; if ((x*x+y*y > limitsq)); then tput cup "$yp" "$xp"; tput setab "$i"; printf ' '; break; fi; done; done
[23:04:50] <TomyWork> psh, left in the meantime
[23:05:01] <kurahaupo> Momentum: Yes I guessed that from the array notation
[23:05:24] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[23:05:24] <kurahaupo> (and no it doesn't affect the desirability of quoting)
[23:05:29] <TomyWork> phogg, maybe you can appreciate it :)
[23:07:20] *** ekaj is now known as a1
[23:07:40] <kurahaupo> Momentum: Due to a long-standing bug, the shell only supports one coproc at a time, but you can fairly easily use « exec {NAME[0]}<&${NAME[0]}- {NAME[1]}<&${NAME[1]}- » to get around that.
[23:07:41] *** Quits: l4yer (~l4yer@2a07-a880-3101-1051-a922-bb49-135a-4393.pool6.ovpn.com) (Ping timeout: 252 seconds)
[23:08:02] <phogg> TomyWork: kind of resource intensive
[23:08:18] <TomyWork> ah, it's fine! no worse than bogosort
[23:08:23] <phogg> lol
[23:09:16] <Momentum> thanks kurahaupo. i'll try that
[23:09:58] *** Joins: rgrinberg (~textual@201.191.195.218)
[23:12:51] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[23:13:09] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[23:13:23] *** Joins: mixfix41 (~homefame@user/mixfix41)
[23:14:17] <TomyWork> I wonder, if I prerender that linearly, xz'ed it and base64-encoded it, would it be smaller?
[23:15:53] *** Joins: xx (~xx@user/xx)
[23:15:54] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:16:14] <phogg> there's one obvious way to find out...
[23:17:38] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[23:18:03] *** Quits: hata (~hata@hata.moe) (Quit: The Lounge - https://thelounge.chat)
[23:19:47] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[23:20:05] *** Joins: hata (~hata@hata.moe)
[23:20:30] *** Joins: sbodin (~Android@185.12.224.209)
[23:20:32] <Momentum> kurahaupo: i wonder if i can also just reverse the two commands. like put the openssl command in a coproc and wrap it around the gawk command which is a simple command?
[23:20:42] *** Joins: l4yer (~l4yer@2a07-a880-3101-1051-a922-bb49-135a-4393.pool6.ovpn.com)
[23:21:47] <Momentum> hmm that's probably not gonna work as expected tho
[23:22:58] <TomyWork> base64 -d<<<QlpoOTFBWSZTWUrbg3sAAB5/AAAQAAhAQH+AEFAACAACUAScD0vGsbZkAAoaaYAChppgAEnqqgAACkqJBo2ptQKmpKkaADgq3XfHMSI964ZZkzVmRmUzSzVZkM1GaTNUzRZqWaVjQZqGNUY1JjVTFlCJce/ACkfPpKineSBW0USwCkahKeePXXwQUjnrxim22TqrtmRDSxJJJmYljZLbZozSs1LNVIzFVM1SzUs1RZqUzCzVSZkP8tuWbJMSwT4xnxVLMUJqoE22I2sCasRtojWiNqI1RG2ItsRtEaiLURbEYixGBtJKxKofWqmzbbTVTAG2pA2qUCtsptZNWltkmZJsSwk20jNI2SbNJgOmEm0miNIJDSCTJNkmaTaQsxMYLLKsZDJwlF5TW0ptqU22VNi
[23:22:58] <TomyWork> AAajWIDybbSbIkkIkSCRkmyQaQ0m2JGTMEZhUzKrMosxHLKmZTmE7NUzKxqzKxhLJNpEom1kSREk3HIhNEiTRGkJEm3kbckQEjZJsSYSGHj5TfVOLYkkcnOcdqh5HNFtM+U4mjzmkaTRNI5DiSNJE0hPq5jkSSZpCTYkSGefR9HEk5znJ2ckjzzns6rkhE3iQ5OGkkOccTRJpMSSEkkmckyJJppzm55kmUSTcmiROyc0kcnI3JP+LuSKcKEglbcG9gA==|bzip2 -d
[23:23:02] <TomyWork> nah it's longer
[23:23:11] <TomyWork> (even longer with xz)
[23:23:57] <Momentum> you can actually use a pastebin TomyWork
[23:25:50] <TomyWork> Momentum, my excuse is that i didnt know my client would cut it in two. what's yours?
[23:26:09] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:27:47] *** Quits: rgrinberg (~textual@201.191.195.218) (Ping timeout: 256 seconds)
[23:28:12] <Momentum> nothing actually. i just thought it would look nicer :)
[23:28:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[23:28:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[23:28:59] <TomyWork> possibly, but not by much :)
[23:29:53] *** Quits: dreinull3 (~dreinull@2a01:4f8:1c1c:8981::1) (Quit: Ping timeout (120 seconds))
[23:30:11] *** Joins: dreinull3 (~dreinull@2a01:4f8:1c1c:8981::1)
[23:30:22] <phogg> TomyWork: the code version is smaller and could be more easily scaled to the viewport
[23:30:29] *** Quits: omnigoat (~omnigoat@user/omnigoat) (Quit: The Lounge - https://thelounge.chat)
[23:30:34] <TomyWork> yeah
[23:31:08] *** Quits: samnob (~samnob@user/samnob) (Remote host closed the connection)
[23:31:18] *** Joins: samnob (~samnob@user/samnob)
[23:31:41] *** Quits: friedrich (~friedrich@aextron.de) (Remote host closed the connection)
[23:31:42] *** Quits: bertptrs (~quassel@user/bertptrs) (Remote host closed the connection)
[23:32:37] *** Quits: dj (~dj@162.223.44.49) (Quit: Leaving)
[23:32:49] *** Joins: friedrich (~friedrich@aextron.de)
[23:32:56] *** Quits: riddle (riddle@user/riddle) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: izabera (izabera@user/izabera) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: mattcen (~mattcen@2001:470:69fc:105::936) (Ping timeout: 265 seconds)
[23:32:57] *** Joins: bertptrs (~quassel@user/bertptrs)
[23:33:22] <Momentum> also i think that's not your client cutting your message in half like that, TomyWork
[23:33:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 265 seconds)
[23:33:31] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[23:33:32] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Ping timeout: 252 seconds)
[23:33:34] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[23:33:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[23:33:54] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: lautre[m] (~lautreg@2001:470:69fc:105::311f) (Ping timeout: 265 seconds)
[23:34:02] *** Joins: riddle (riddle@user/riddle)
[23:34:29] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[23:34:50] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:35:24] <kurahaupo> Momentum: That would probably make more sense
[23:35:41] *** Joins: legola (~legola@46.235.101.65)
[23:36:39] <TomyWork> ok wtf, bzip2. bzip2 -9 compresses the fractal with spaces and colors codes better than if i replace it by just numbers 0..7
[23:37:05] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[23:38:10] <Momentum> yup kurahaupo. that worked out :D
[23:38:15] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Quit: .)
[23:38:16] <Momentum> thanks i appreciate it the help
[23:39:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[23:39:14] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:39:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:40:14] <phogg> TomyWork: bzip is magic?
[23:40:28] *** Joins: Betal (~Betal@user/betal)
[23:40:46] <peve> if I add a script to one of the directories in PATH, bash's tab autocompletion recognizes it immediately. that's not true for all shells. what does bash do to allow this?
[23:41:12] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[23:41:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:c0d3:dc09:809f:9fd0) (Ping timeout: 264 seconds)
[23:44:04] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[23:44:30] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:44:38] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[23:44:39] *** Quits: armin (~armin@unix.porn) (Quit: leaving)
[23:45:08] *** Joins: jinsun_ (~jinsun@user/jinsun)
[23:45:28] *** Joins: voices- (~voices_@84.238.197.28)
[23:45:28] *** Joins: armin (~armin@unix.porn)
[23:45:29] *** Joins: mattcen (~mattcen@2001:470:69fc:105::936)
[23:45:45] *** Joins: gschanuel24 (~gschanuel@user/gschanuel)
[23:45:53] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[23:46:10] <OMGOMG> search the directory when you press tab
[23:46:21] *** Joins: pyeverything (~pyeveryth@goku.bu.edu)
[23:46:50] <pyeverything> Is there a way to find total number of jpeg images in all directories of a directory?
[23:48:20] *** Quits: crst (~crst@78-73-145-31-no2661.tbcn.telia.com) (Remote host closed the connection)
[23:48:45] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:48:49] <phogg> how do you know if a file is a jpeg?
[23:48:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:49:12] <phogg> if by extension it's a trivial call to find, if you need to detect the data in the file it's a bit harder
[23:49:28] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 264 seconds)
[23:49:28] *** gschanuel24 is now known as gschanuel2
[23:49:42] <earnest> identify has -f format which is nice, but lacks \0 which makes it sketchy
[23:50:21] <phogg> I like file --mime-type -0
[23:50:53] <TomyWork> phogg, https://gist.github.com/TomyLobo/9d892ac193994551fbf04005e0ae6264 hope this works with your version of xz :)
[23:51:21] *** Joins: lautre[m] (~lautreg@2001:470:69fc:105::311f)
[23:51:30] <earnest> Oh true, there is file(1) which has that
[23:51:32] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[23:51:48] <OMGOMG> pyeverything: how accurate does it need to be
[23:51:57] <phogg> TomyWork: works just fine
[23:52:33] *** Joins: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d)
[23:52:47] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[23:52:58] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[23:53:03] <TomyWork> good. I cut it down a bit more by using xz's raw format, but I still used the -9e preset, which could be different in your version... according to the warning, anyway
[23:53:50] <phogg> bzip still wins?
[23:54:01] <TomyWork> no, xz is actually smaller there
[23:54:14] <TomyWork> i think
[23:54:24] *** Joins: voices- (~voices_@84.238.197.28)
[23:54:40] <CrtxReavr> peve, (t)csh caches what's in the path at login, so if you add something, it's not recoginized until you re-login. . . or run rehash.
[23:55:09] <TomyWork> so does bash, but only after you run it
[23:55:33] <CrtxReavr> Um. . . no.
[23:55:36] <TomyWork> i'd hate it if it did that for everything at login
[23:55:39] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:55:55] *** Quits: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[23:56:10] <peve> CrtxReavr: thanks! That's what I was looking for
[23:56:31] <CrtxReavr> peve, also. . . 1975 called.  They want their shell back.
[23:56:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:c0d3:dc09:809f:9fd0)
[23:57:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[23:57:32] <phogg> someone using thompson sh?
[23:57:46] *** Joins: Vartaxy (~taxy@p200300ea970f64b000a65fa019bf6d68.dip0.t-ipconnect.de)
[23:57:52] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 264 seconds)
[23:57:54] <CrtxReavr> Sounds like they're using a csh variant.
[23:58:16] <phogg> pretty sure csh postdates '75
[23:58:31] <phogg> I want to say 1979, but I don't remember
[23:58:32] <CrtxReavr> Maybe.
[23:58:53] <CrtxReavr> But it's path caching feature harkens back to hard drives that were slower than floppy drives.
[23:59:16] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[23:59:20] <TomyWork> CrtxReavr, https://gist.github.com/TomyLobo/6685ba222f59aff032fbad702837a404 bash caches too
[23:59:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:59:59] <peve> CrtxReavr: LOL
