[00:18:08] *** Quits: Kirk (~kirk@user/kirk) (Ping timeout: 268 seconds)
[00:20:25] *** Joins: Kirk (~kirk@user/kirk)
[00:34:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 264 seconds)
[00:37:48] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Ping timeout: 260 seconds)
[00:42:36] *** Quits: Kirk (~kirk@user/kirk) (Quit: Textual IRC Client: www.textualapp.com)
[00:42:42] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5975:f7df:f696:47f9)
[00:44:50] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:45:31] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[00:48:34] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b)
[01:16:42] *** Quits: mallkrampus (~mallkramp@172.93.207.242) (Read error: Connection reset by peer)
[01:21:45] *** Joins: Kirk (~kirk@user/kirk)
[01:24:44] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 268 seconds)
[01:33:39] *** Joins: mallkrampus (~mallkramp@172.93.177.92)
[01:41:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:48:23] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Ping timeout: 264 seconds)
[03:52:55] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[03:58:31] *** Quits: sdfgsdfg (sdfgsdfg@user/sdfgsdfg) (Quit: BNC by #bnc4you)
[03:59:51] <Hash[m]> 80 simultaneous channel going... :) 
[03:59:51] * Hash[m] uploaded an image: (218KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/fyFQxihkxiNCinMDxYRjcIUx/image.png >
[04:00:03] <Hash[m]> s/channel/channels/
[04:02:41] * Hash[m] uploaded an image: (2477KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/GwzpaiTrOFHWszpgjEbMRuJO/ima_4788e89.jpeg >
[04:18:22] * Hash[m] uploaded an image: (332KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/cowWnqMRqBdoGnKTaCxUqIHD/image.png >
[04:18:50] <Jacob[m]12> Nice organization üëç
[04:19:11] <Hash[m]> Took inspiration from your FHSS flowgraph!
[04:19:43] <Jacob[m]12> Is 80 enough to test what you need?
[04:19:50] <Jacob[m]12> 4 hops?
[04:20:18] <Hash[m]> No, need 240-260... So still going... But wish I could figure out this Underflow issue that keeps getting worse as I scale up
[04:20:40] <Hash[m]> well, yes I could do it with 4 hops if I can't do all 240 at the same time
[04:21:02] <Hash[m]> I'd still be within the 700mS window
[04:21:41] <Hash[m]> 3 hops only for 240, so actually not that bad
[04:22:58] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 268 seconds)
[04:23:26] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Ping timeout: 260 seconds)
[04:27:17] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[05:10:46] <Hash[m]> When I scale up to 260 channels the Underflow is excessive, so I never get a good packet out... Since my bursts are so small though seems like I should be able to wait until all the data is passed through before the USRP sends it so it's all there... 
[05:11:14] <Hash[m]> Is that why you are saying I should look at scheduled transmissions with time tags Jacob?
[05:14:56] <Jacob[m]12> Yep, thats right
[05:15:36] <Jacob[m]12> right as soon as sample data hits UHD it must be continuous or you will get underflows
[05:16:12] <Hash[m]> There any way to just buffer it so it doesn't hit USRP while it's still being processed?
[05:16:12] <Jacob[m]12> with `tx_time` tags, data can queue until transmit time, even a few ms in the future will build up a solid sample buffer
[05:16:13] *** Quits: yesno (~yesno@109.98.151.179) (Remote host closed the connection)
[05:16:22] <Jacob[m]12> you could probably build a custom block to do this
[05:16:31] *** Joins: yesno (~yesno@109.98.151.179)
[05:16:34] <Jacob[m]12> a delay block might do the trick
[05:21:51] <Jacob[m]12> the delay block should queue samples without incurring the processing time, however it's going to add some [fixed] latency. another thing you might want to do is to set the min output buffer fairly large. larger will help give some buffer between work() calls in the delay block, but too large will potentially truncate samples. maybe 8k?
[05:23:32] <Hash[m]> Seems to buffer at start but then catches up and just Underflows once a second after that, I send a burst once a second
[05:28:46] <Hash[m]> You think I should be setting the output buffer on the polyphase synthesizer? I don't have any buffer values set anywhere, everything is 0
[05:36:44] <Jacob[m]12> you could try that also. alternatively you could try to get clever and buffer the entire burst length
[05:38:21] <Hash[m]> Yea, I'm testing on my smallest flowgraph where I just transmit on 10 channels and get one underflow per burst. 
[05:39:08] <Hash[m]> The introduction of the polyphase synthesizer is what causes this, even a small one
[05:50:24] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:51:09] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[05:52:16] *** Joins: brettgilio (~brettgili@x-node.gq)
[06:11:40] <Hash[m]> Is there an easy way to test the scheduled transmit theory? Add a tag to just transmit at a set time to see if it corrects the issue?
[06:13:19] *** Joins: sdfgsdfg (sdfgsdfg@user/sdfgsdfg)
[06:14:44] <Jacob[m]12> thats the general idea, but its complicated by the fact that UHD setup time is not deterministic, so its difficult to know what to set the `tx_time` to
[06:15:39] *** Joins: huoy99 (~huoy99@gateway/vpn/pia/huoy99)
[06:16:08] <Jacob[m]12> the general burst detector will give you the time offset per burst though, which is helpful even though its referenced from sample 0
[06:16:59] <huoy99> I'm trying to work through a tutorial with gnuradio and I found that it's using wx ui, while gnuradio ported everything to qt. is there a drop in replacement for wx gui fft sink?
[06:17:47] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 264 seconds)
[06:18:21] <Hash[m]> QT GUI Frequency Sink
[06:20:38] <Jacob[m]12> there is a trick here, and im trying to remember; i think what i did was to start streaming at some specific time well in advance of the longest setup time and then just hand-jam that in to the block that sets the transmit time as a fixed offset
[06:21:12] <huoy99> thanks Hash[m]
[06:22:15] <Hash[m]> Jacob: If you use time tags though, doesn't the data just have to buffer somewhere? Seems odd that the burst can't be buffered somehow, like buffer until tx_eob is received then pass buffer to USRP
[06:22:36] <Jacob[m]12> you could make a simple custom block that did that too actually
[06:22:50] <Jacob[m]12> not a bad idea, it could be tag-aware
[06:23:55] <Jacob[m]12> when you use time tags, the dat a buffers in the UHD sink block or the upstream blocks output buffer so it is immediately available
[06:24:26] <Jacob[m]12> any other buffering mechanism is going to be dependent on the work() call in the upstream block
[06:26:53] *** Joins: cuoops (~cuoops@user/cuoops)
[06:27:21] <Hash[m]> What I find odd is if I use the Tag Gate block between the USRP Sink and the block feeding it, it still manages to get the stream tags. Am I missing something? I thought that would block it
[06:34:47] <huoy99> Hash[m] is QT GUI Frequency Sink truly 1:1? I'm having an issue seeing a waveform that i believe should be there. this is the original : https://greatscottgadgets.com/sdr/images/lesson2-grc.png and this is what mine looks like: https://i.imgur.com/ajJTe2F.png
[06:34:51] <huoy99> total newbie here :)
[07:03:02] <Jacob[m]12> Hash: the tag gate block can programatically block or pass tags
[07:03:28] <Jacob[m]12> if propagate is set to false it should certainly not be passing them
[07:11:07] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Remote host closed the connection)
[07:12:26] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[07:21:16] <Hash[m]> <huoy99> "Hash is QT GUI Frequency Sink..." <- If you want to see the Sine wave then it's QT GUI Time Sink, the Frequency sink should show you a spike on the plot at the frequency of the wave you are inputting
[07:31:01] <huoy99> Hash, thanks. what if i want to see the spike on the frequency spectrum? i'm assuming right now it's just one point so i can't see it?
[07:45:41] * Hash[m] uploaded an image: (68KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/TlIzfCglXjlSbdnsiTzZaUAG/image.png >
[07:45:51] <Hash[m]> That's what I get when I run it
[08:01:57] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[08:23:27] <huoy99> hmm, weird. any idea why i'd not be seeing that?
[08:26:13] <matt_mills[m]> Options: Run: Off
[08:27:02] <huoy99> matt_mills: thank you!
[08:27:13] <matt_mills[m]> np
[08:33:22] *** Quits: huoy99 (~huoy99@gateway/vpn/pia/huoy99) (Quit: Client closed)
[09:57:38] *** Quits: mallkrampus (~mallkramp@172.93.177.92) (Ping timeout: 260 seconds)
[10:10:53] *** Joins: mallkrampus (~mallkramp@172.93.207.86)
[10:14:59] *** Joins: ldplayer[m] (~ldplayerg@2001:470:69fc:105::1:2a74)
[10:22:56] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[10:29:10] <Hash[m]> 240 channels!! üòÄ
[10:29:13] * Hash[m] uploaded an image: (108KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/VjMzpEgGAuCiGgFRqXTkyHyY/image.png >
[10:34:15] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[10:34:55] *** Joins: spithash (~spithash@user/spithash)
[10:58:46] * ldplayer[m] uploaded an image: (367KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/a2587112b8de604f86550934887222519c3d2c7e/1.jpg >
[10:59:02] * ldplayer[m] uploaded an image: (97KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/44bc3508c954113ab75d79f7c603d4f2eef21320/IMG_6519.jpg >
[10:59:10] <ldplayer[m]> Hello, I have a few questions, and I would appreciate it if you could answer them. Currently, we are conducting a study to determine the existence of satellites in correlation between GPS L1 band actual signals and local signals.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/163c4a4d6b547ece9bff8122ba327ea38345d0f5)
[11:11:49] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:46:08] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1898:8898:d393:938d)
[11:47:05] *** Quits: harish (~harish@158.140.144.42) (Read error: Connection reset by peer)
[11:47:27] *** Joins: harish (~harish@158.140.144.42)
[12:07:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[12:34:44] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[12:36:30] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[12:49:06] *** Joins: schwach5 (~schwach@191.96.170.32)
[12:50:28] *** Quits: schwach (~schwach@191.96.170.117) (Ping timeout: 268 seconds)
[12:50:29] *** schwach5 is now known as schwach
[12:56:20] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[12:57:23] <jemius> Folks, what is the correct way of telling GRC that an invalid parameter has been passed to your OOT-block? For example a too short tap-list
[12:59:13] <DerekKozel[m]> Include assert statements in the block.yml file
[13:01:09] <DerekKozel[m]> https://wiki.gnuradio.org/index.php/YAML_GRC#Asserts_.28optional.29
[13:01:13] <DerekKozel[m]> jemius: 
[13:02:22] *** Joins: Guest13 (~Guest13@117.221.70.189)
[13:02:26] <DerekKozel[m]> Hi ldplayer I suggest working through a few of the tutorials including Using GNU Radio with Hardware.
[13:02:26] <DerekKozel[m]> https://wiki.gnuradio.org/index.php/Tutorials
[13:03:05] <jemius> DerekKozel[m], muchas gracias, Don Kozel ;)
[13:03:40] <DerekKozel[m]> I don't understand your first question. The USRP is always outputting complex sample values with signal information in both I and Q.
[13:04:05] <Guest13> Hi I am learning the code of GNU Radio.There is Mako template engine used.But it is used for developing web application.Can you tell how its useful for GNU radio
[13:04:41] <DerekKozel[m]> The GNU Radio standard complex type is the numpy.complex64 (32 bit float for I, 32 bit float for Q). or std::complex<float> in c++ (equivalent 32 bit floats for I and Q)
[13:05:39] <DerekKozel[m]> Picking what output format you want from the USRP depends on what your next processing step is going to be. If you're writing to an output file immediately then it's up to your MATLAB code to handle the datatype
[13:06:12] <DerekKozel[m]> There's some information about using Octave (or Matlab) with GNU Radio files.
[13:06:12] <DerekKozel[m]> https://wiki.gnuradio.org/index.php/Octave
[13:06:28] <DerekKozel[m]> Hi Guest (are you the same Guest who keeps visiting?)
[13:07:26] <DerekKozel[m]> GNU Radio Companion generates a Python or C++ source code file for the flowgraph using templates.
[13:07:56] <DerekKozel[m]> An example of a code template for a block is here: https://wiki.gnuradio.org/index.php/YAML_GRC#Templates
[13:13:06] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[13:16:46] <Guest13> Hi ,I new here.
[13:19:12] <atluxity> welcome
[13:20:16] <Guest13> DerekKozel[m]¬† but Mako is used for websites ,how is it done for a desktop app?Are we creating a web server here?
[13:25:50] <funkylab[m]> Guest13: Mako is just a library to fill in values into text files with placeholders. That can be used to generate websites, or for anything else...
[13:26:37] <Guest13> Ok ,thank you for your reply.
[13:37:50] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 260 seconds)
[13:39:54] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[13:47:10] *** Quits: Guest13 (~Guest13@117.221.70.189) (Quit: Client closed)
[14:39:25] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[14:55:53] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:35:20] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Remote host closed the connection)
[15:44:13] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[15:54:59] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 264 seconds)
[16:00:10] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5975:f7df:f696:47f9) (Read error: Connection reset by peer)
[16:09:38] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[16:11:02] <muaddib[m]> <Hash[m]> "image.png" <- Holy polyphase synthesizer Batman! 
[16:19:44] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Read error: Connection reset by peer)
[16:20:06] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[16:25:32] <Jacob[m]12> Hash LOL what did you end up doing to address underflows to get to 240?
[16:26:13] <Jacob[m]12> also, looks like maybe your TX LO is clobbering one of your channels; you should be able to offset tune that away though
[16:26:50] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:29:33] <Hash[m]> Yea, have to offset tune in that flowgraph
[16:29:57] <Hash[m]> I still get underflows but less so it manages to work mostly‚Ä¶
[16:30:22] <Hash[m]> I did it with a SINGLE poly synth üò≥
[16:30:43] <Hash[m]> Also reduced the tightness of the filter in there
[16:31:28] <Hash[m]> Can‚Äôt have as many taps it seems or it just dies
[16:34:54] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:36:13] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:37:13] <Hash[m]> I have to look at it all again today‚Ä¶ I descended into madness last night at 2am :)
[16:37:58] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[16:40:42] <Hash[m]> I met some guys at GRCon 2021 that had written the GPU accelerated Channelizer‚Ä¶ if there was a GPU accelerated Synthesizer I think this would work
[16:55:42] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[16:59:50] <Hash[m]> For your viewing pleasure... I grew this 30 channels at a time with lots of coffee and patience! Tuning the filter as it started to fail each time until it worked again.
[17:00:01] * Hash[m] uploaded an image: (86KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/XBWvnmCsBkxcvfJeWPySQsBe/image.png >
[17:01:40] <muaddib[m]> I remember a few years ago writing a python script to automate the GRC connections on a 125 channel project because I got sick of clicking!
[17:03:00] <Hash[m]> I almost went full python and was just going to skip FG, but alas here we are
[17:04:06] <jsallay[m]> I haven't done an analysis on this, but you might do better doing the synthesis in a few stages.  If the filters end up being a lot cheaper in each stage then it can add up to a significant savings.
[17:04:47] <Hash[m]> That was my initial approach, it completely chokes for some reason
[17:04:49] *** Quits: willcode4 (~willcode4@user/willcode4) (Quit: Leaving)
[17:05:02] *** Joins: Guest13 (~Guest13@117.221.70.189)
[17:05:03] <Hash[m]> even reducing the filters to the same relaxed version used in this one
[17:05:24] <Hash[m]> something about going from one synth to another exacerbates this underflow issue
[17:07:13] <jsallay[m]> You need to set output multiples. Gnuradio is really bad at scheduling when there is a big change in rate.
[17:07:32] <Hash[m]> Go on... :)
[17:10:08] <Guest13> Hi when I am going through the code ,there was code for qt in the gr-qtqui folder and also gtk in grc folder.
[17:10:13] <Guest13> Can you tell me which gui framework the GNU radio is using?
[17:12:24] <jsallay[m]> By default each stage is going to try to process the same amount of data, perhaps 4096 samples. If you have an interpolation stage that goes up by a factor of 20, then the work function will be called 20 times on the second stage for each call on the first stage.  I would set an output multiple for the first stage of maybe 256 and then 5120 for the second stage.
[17:13:14] <jsallay[m]> I've done this for multistage decimation and it makes a huge difference. I can't promise it will work here, but it might.
[17:13:47] <Hash[m]> Where do you set that in the block?
[17:14:11] <Jacob[m]12> under "advanced"
[17:14:18] <Hash[m]> minoutputbuff>
[17:14:40] <Jacob[m]12> actually no. sorry
[17:15:40] <jsallay[m]> I think you have to set it in the python
[17:18:06] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[17:19:03] <jsallay[m]> <Guest13> "Hi when I am going through the..." <- It uses both. The graphical designer uses gtk, while plotting tools use qt.
[17:21:27] <Hash[m]> <jsallay[m]> "I think you have to set it in..." <- Simultaneous hope and despair :) 
[17:24:29] <Guest13> Ok, Thank you for your response jsallay[m]
[17:28:00] <Hash[m]> <jsallay[m]> "I think you have to set it in..." <-  Do you have any example showing how this would be added in python you can point me to?
[17:28:22] *** Quits: Guest13 (~Guest13@117.221.70.189) (Quit: Client closed)
[17:38:01] *** Quits: Peanut_ (~paul@user/peanut) (Ping timeout: 245 seconds)
[17:39:10] <jsallay[m]> Here is a simple example:
[17:39:10] <jsallay[m]> Source = blocks.null_source(4)
[17:39:10] <jsallay[m]> Source.set_output_multiple(256)
[17:39:33] *** Joins: Peanut (~paul@user/peanut)
[17:41:22] <Hash[m]> Thanks, I found that as well, i'm not noticing any difference, 256 on first block and 5120 on second. My first block does 1 to 10, and the second does 1 to 26
[17:44:55] <jsallay[m]> Try 512 on the first. Are you using the default filters?
[17:46:55] <Hash[m]> firdes.low_pass_2(28, 28*1000e3, 1000e3/3.0, 1000e3/4.0, 60)
[17:48:06] <Hash[m]> That's the second block filter, 28 channels with only 26 used
[17:49:41] *** Quits: harish (~harish@158.140.144.42) (Remote host closed the connection)
[17:50:59] <jsallay[m]> What is your first one?
[17:51:26] <Hash[m]> firdes.low_pass_2(12, 12*100e3, 100e3/3.0, 100e3/4.0, 60)
[17:51:45] <Hash[m]> 1 to 10 chans, 12 used and sides filtered off
[17:52:04] *** Joins: harish (~harish@158.140.144.42)
[17:53:06] <jsallay[m]> What is the actual channel bandwidth?
[17:53:38] <Hash[m]> each channel is 100kHz
[17:53:55] <jsallay[m]> But how wide is the signal of interest?
[17:54:22] <Hash[m]> 25khz
[17:54:37] <Hash[m]> 2FSK
[17:57:07] <jsallay[m]> I would change your cutoff to 12.5e3 and transition width to 75e3.
[17:57:19] <jsallay[m]> That will give you a much cheaper filter.
[18:00:21] <drmpeg> Here's a weird idea. Just use an IFFT.
[18:04:15] <drmpeg> Here's a proof of concept flow graph for AM. https://www.w6rz.net/amofdm.grc
[18:04:41] <drmpeg> Sends 64 copies of an AM signal.
[18:06:08] <Hoernchen> spAM.
[18:07:32] <drmpeg> Yeah, can also be used as a wide band jammer with a message for the cult. :)
[18:07:59] <Hash[m]> You're the guy on all the shortwave broadcasts :) 
[18:10:24] <drmpeg> Anyway, something to think about. The IFFT is pretty easy on the CPU. Down side would be extra junk on the signals.
[18:12:57] <Hash[m]> Thanks, as long as the signal makes it through, extra junk on the side doesn't bother me
[18:14:13] <Hash[m]> What does "SSSSSSSS" dumped to console mean?
[18:14:43] <drmpeg> Oh wait.
[18:15:35] <drmpeg> In the USRP sink, you have to change send_frame_size=65536 to send_frame_size=8192
[18:16:17] <drmpeg> That flow graph was from a time when send_frame_size=65536 worked on UHD.
[18:16:42] <Hash[m]> Got it, wonder how this will work with bursty transmissions, look forward to trying it out!
[18:19:21] <drmpeg> It's cpu friendly, A 128 point FFT is a piece of cake.
[18:28:05] <LOWWer> Hey
[18:28:08] <LOWWer> Who is here?
[18:31:18] <Hash[m]> <drmpeg> "It's cpu friendly, A 128 point..." <- The signal looks right, but I get no data received...
[18:32:11] <drmpeg> That repeat block is important.
[18:32:58] * Hash[m] uploaded an image: (163KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/RCxyZDFTvfXDvzHSTBeeqeRG/image.png >
[18:35:19] <drmpeg> Looks good.
[18:36:03] <Hash[m]> Yea, the spectrum looks good to when I capture, but modem doesn't decode anything so data must be getting corrupted somehow
[18:36:20] <drmpeg> There may be too much distortion. AM is pretty tolerant.
[18:37:27] <drmpeg> Also it doesn't care if it's spectrally inverted.
[18:37:33] <Hash[m]> weird, now it works... Slowly losing my mind
[18:38:06] <Hash[m]> Hmmm, could that change when I start the flowgraph, inverted or not?
[18:39:01] <drmpeg> Dunno. Play with it some more and get a feel for it.
[18:41:03] <Hash[m]> My man, I do believe I am going to owe you a beer
[18:41:14] <drmpeg> Also, the channel spacing is based on the sample rate, so you'll have to fiddle with that.
[18:43:55] * Hash[m] uploaded an image: (245KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/yXrlyzdfIZGezJJeDETppuMH/image.png >
[18:44:03] <Hash[m]> Works like a freaking CHARM!!
[18:44:34] <Hash[m]> 3 to 4 underflows per transmission, basically no issues
[18:45:01] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5854:37c:14e4:1863)
[18:45:20] <Hash[m]> And by Beer I mean like a keg :) 
[18:45:42] <bpadalino> drmpeg gonna get crunk!
[18:46:00] <Hash[m]> USRP B200 has no issues sending bursts on all 260 channels simultaneously
[18:46:18] <Yamakaja[m]> Hash: just wondering, why do you need all of those channels? Do you want a broadcast a message to lots of devices which are all listening on different subchannels or something like that?
[18:47:12] <Hash[m]> Yamakaja: The devices frequency hop across 260 channels every 700mS, I want a transmitter that lets me send bursts and no matter where the receiver is, it receives it and has to deal with it
[18:47:25] <drmpeg> I think it's just a way to avoid frequency hopping for now.
[18:47:46] <Yamakaja[m]> Oh, i see. IT hops across 260 different frequencies?!
[18:47:53] <Jacob[m]12> now just hope the receiver can tolerate simultaneous adjacent channel transmissions ;)
[18:47:58] <Hash[m]> Exactly, basically circumvents frequency hopping 
[18:48:05] <drmpeg> BTW, you can use OFDM to frequency hop.
[18:48:22] <Yamakaja[m]> Can you do OFDM with FSK?
[18:48:30] <Hash[m]> Jacob[m]12: The Landis+Gyr modem I am feeding directly into has no issues, so we;ll see
[18:48:56] <Hash[m]> ofcourse, I have to put an antenna on this and see how it does... So not out of the woods yet
[18:49:04] <Jacob[m]12> good! is that receiving valid bursts from you now?
[18:49:17] <Yamakaja[m]> s/Can you do OFDM with FSK?/<del>Can you do OFDM with FSK?</del>Nvm, that's not FSK/
[18:49:28] <Hash[m]> valid bursts no matter what channel I switch the modem to 
[18:49:49] <drmpeg> You can split any signal X ways with an IFFT.
[18:50:18] <drmpeg> Analog OFDM if you will.
[18:51:22] <Jacob[m]12> much more efficient than PFB
[18:51:29] <Yamakaja[m]> drmpeg: Uh, can you point me to a mathematical description of that? :D
[18:51:36] <drmpeg> So for FHSS, instead of repeating 64 times, you would fill 63 slots with zeroes and one slot with your desired signal.
[18:51:38] <Yamakaja[m]> * of that technique? :D
[18:52:18] <drmpeg> It's just OFDM.
[18:53:15] <Yamakaja[m]> Yeah but my individual "channels" with OFDM are of constant frequency, and the information is in the phase. How would you make OFDM shift the phase of your carrier around? Or we talking about GMSK again? :D
[18:53:35] <Yamakaja[m]> s/phase/frequency/, s/carrier/subcarriers/
[18:54:21] <Yamakaja[m]> s/Yeah but my individual "channels" with OFDM are of constant frequency, and the information is in the phase. How would you make OFDM shift the phase of your carrier around? Or we talking about GMSK again? :D/Yeah but my individual "channels" with OFDM are of constant frequency, and the information is in the phase and amplitude. How would you make OFDM shift the frequency of your subcarriers around? Or we talking about GMSK again? :D/
[18:54:33] <drmpeg> Each carrier can be modulated any way you like.
[18:56:29] <Hash[m]> I didn't get enough sleep, be back later after I recover from the high of this working :)
[18:57:09] <drmpeg> :)
[18:59:16] <drmpeg> Yamakaja: You've seen gr-paint in action? It's the same concept. https://www.w6rz.net/paintpanda.png
[18:59:50] <Yamakaja[m]> drmpeg: That's not FSK on a subcarrier, that's just amplitude modulation
[19:00:07] <drmpeg> It's OFDM.
[19:00:44] <drmpeg> It's my OOT.
[19:00:58] <Yamakaja[m]> Yes, and OFDM has to be constructed in a very specific way to be orthogonal, which doesn't work with FSK afaik
[19:01:46] <drmpeg> All it takes is an IFFT.
[19:08:13] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[19:30:08] *** Quits: drmpeg[m] (~drmpeggnu@2001:470:69fc:105::e139) (Quit: You have been kicked for being idle)
[19:30:09] *** Quits: jackdondy[m] (~jackdondy@2001:470:69fc:105::1:8d3) (Quit: You have been kicked for being idle)
[19:46:36] <willcode4[m]> The filter per subcarrier is designed for orthoganality, not the signal on each one, right?
[19:52:03] <jholtom> yeah, you can stuff whatever you want in a subcarrier
[19:52:38] <Yamakaja[m]> But is that still OFDM ("orthogonal") if you do whatever you want, and can you construct such a signal using an IFFT?
[19:53:22] <Yamakaja[m]> Because how are you going to apply a small frequency shift to a subcarrier using the fft?
[19:53:23] <jholtom> yes, since OFDM gets it orthgonality from the sleection of subcarrier frequencies
[19:53:26] <Yamakaja[m]> s/fft/ifft/
[19:54:02] <jholtom> so as long as your FSK signal remains within the subcarrier width, you'll be fine
[19:55:12] <jholtom> no reason this shouldn't work
[19:55:23] <willcode4[m]> Think of it as the amplitude/phase of a bin in each iteration of the IFFT changing. Then it's the same as a plain old signal of width Fs/N.
[19:55:24] <Yamakaja[m]> I see no reason how it could work, mathematically
[19:56:15] <drmpeg> Why is QAM or QPSK used in WiFi any different than FSK or AM.?
[19:56:19] <Yamakaja[m]> willcode4: Changing in each "iteration" of the IFFT? You mean a modified algorithm based on the ifft?
[19:56:42] <willcode4[m]> No, just each time you take the IFFT of the next N samples.
[19:56:54] <Yamakaja[m]> drmpeg: Because they are purely amplitude and phase modulated tones. You can't encode a frequency into a single complex number
[19:57:18] <drmpeg> ?
[19:57:21] <Yamakaja[m]> willcode4: Well, but that's no longer a single fft but multiple OFDM symbols as part of an OFDM frame, and that's not really fsk
[19:58:29] <Yamakaja[m]> (Well you can obviously do that in the right context, but not in an ifft). Every frequency bin will result in a tone at a fixed frequency, you can't set the bin to a value that results in a shift
[19:58:32] <Yamakaja[m]> s/(Well you can obviously do that in the right context, but not in an ifft). Every frequency bin will result in a tone at a fixed frequency, you can't set the bin to a value that results in a shift/(Well you can obviously do that in the right context, but not in an ifft). Every frequency bin will result in a tone at a _fixed_ frequency, you can't set the bin to a value that results in a shift)/
[19:58:53] <drmpeg> Yet it worked for Hash.
[19:59:08] <Yamakaja[m]> He's using a channelizer not an IFFT, isn't he?
[19:59:41] <willcode4[m]> Maybe forget about OFDM for the moment. A PFB channelizer is an FFT with some fancy distribution of the filter.
[19:59:43] <jholtom> yes, he is using a channelizer for now
[19:59:44] <drmpeg> No, he converted to an IFFT. Read the backlog.
[19:59:50] <jholtom> oh cool, glad he did
[20:00:15] <jholtom> easy enough and vastly more efficient
[20:01:36] <drmpeg> When I developed my DVB-T2 project, the light went on for me about OFDM.
[20:01:50] <Yamakaja[m]> drmpeg: Well, Hash is also NOT doing FSK, but GMSK
[20:02:14] <Yamakaja[m]> GMSK is an coherent digital modulation technique and can be used with OFDM
[20:03:47] <drmpeg> Isn't GMSK just tricky FSK?
[20:05:10] <Hoernchen> lol
[20:05:19] <Hoernchen> it's tricky CPM
[20:05:58] <Hash[m]> ‚ÄúTricky FSK‚Äù is the phrase of the day :)
[20:06:29] <Yamakaja[m]> * (<del>GMSK is, * with OFDM</del>) Statement retracted, i don't know enough about GMSK for such assertions :)
[20:06:48] <jholtom> GMSK is just tricky FSK lol
[20:06:56] <jholtom> but its also a CPM
[20:07:27] <jholtom> GMSK is just MSK with a gaussian pre-filter applied
[20:07:32] <jholtom> and MSK is jus tCPFSK
[20:07:42] <jholtom> so...eventually it all looks the sameish
[20:11:09] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:14:56] <Yamakaja[m]> Ahhh, i think now i understand where we've been talking past each other: While it is not possible to get any kind of frequency shift inside of a single OFDM symbol, if you increase your samplerate by a factor of n (Where n is the FFT size), the ofdm symbol rate is the same as your previous symbol rate, but now you just repeat your signal on multiple sub-carriers. So you spread out the individual complex samples of your slower stream over
[20:14:57] <Yamakaja[m]> your subcarriers by doing a bunch of FFTs after each other! Taking a look at your flowgraph really helped me get the idea drmpeg :D
[20:17:20] <drmpeg> Cool.
[20:40:42] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Ping timeout: 276 seconds)
[21:05:49] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:08:33] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[21:33:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:32] *** Joins: pcero (~pcero@187.135.224.50)
[21:38:45] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:57:41] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5854:37c:14e4:1863) (Read error: Connection reset by peer)
[21:59:25] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[22:04:12] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1802:bb7a:f439:95db)
[22:05:30] *** Joins: DiffieHellman_ (~Username@user/curve25519chacha)
[22:07:06] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[22:21:44] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[22:22:57] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[22:25:13] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[22:33:23] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1898:8898:d393:938d) (Quit: uros)
[22:53:10] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Ping timeout: 260 seconds)
[22:53:46] <funkylab[m]> <drmpeg> "When I developed my DVB-T2..." <- Getting used to OFDM: doing it the **intense** way
[22:58:07] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[22:59:18] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:00:47] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:38:26] *** Joins: jemius (~imperator@2001:16b8:2da9:3600:6456:53dd:3553:5557)
