[00:00:16] <FunkyBob> (and, of course, a ticket on trac / post on the ML if you feel it's worth revisiting)
[00:00:34] *** Joins: ianthrive (~ianthrive@166.70.191.9)
[00:01:30] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:06:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[00:07:51] <nbjoerg> FunkyBob: not easily
[00:09:25] <nbjoerg> core of the issue is that e.g. for German locales UPPER('ÃŸ') = 'SS'
[00:13:27] <nbjoerg> and UPPER(foo) ends up using the field collation order compared to the default collation of the database
[00:13:30] <nbjoerg> fun...
[00:13:38] <FunkyBob> my understanding is to patch would require sub-classing the IContains class from django.db.models.lookups and implement the PG specific path
[00:14:30] <FunkyBob> hmm... except the UPPER handling is in the db backend... yeah, not so easy
[00:14:55] <FunkyBob> but as you say, it's resulting in undesirable ( or even wrong!) results...
[00:14:59] <FunkyBob> so core should address it
[00:24:58] <FunkyBob> wow... how is this still in the docs? https://docs.djangoproject.com/en/3.2/topics/install/#install-apache-and-mod-wsgi
[00:28:24] *** Joins: djapo (~archangel@user/djapo)
[00:31:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:33:01] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[00:36:49] *** Joins: unixbeard (~ironbeard@neuro.mancer.org)
[00:37:27] <unixbeard> I'm running into an issue when running makemigrations in django where pandas.tseries.offsets BDay has been used and dependencies updated via pipenv (pipfile/pipfile.lock recently updated).  The error is ModuleNotFoundError: No module named 'pandas._config.localization'
[00:37:55] *** Quits: Elzington (~Elzington@static-68-235-44-38.cust.tzulo.com) (Quit: Leaving)
[00:40:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[00:42:30] *** Joins: fikran (~fikran@user/fikran)
[00:54:56] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:02:15] *** Joins: pycode (~pycode@2001:b07:5d28:551:cce5:604d:c84e:ee68)
[01:08:40] *** Joins: thiras_ (~thiras@user/thiras)
[01:12:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[01:26:07] *** Quits: unixbeard (~ironbeard@neuro.mancer.org) (Quit: .)
[01:31:59] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[01:33:47] *** Joins: thiras_ (~thiras@user/thiras)
[01:59:47] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:02:31] *** Quits: schinckel (uid38120@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:03:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[02:03:59] *** Quits: audiobirb (~audio@2603-8081-1800-1546-aa2c-362e-4508-2aa9.res6.spectrum.com) (Ping timeout: 264 seconds)
[02:13:30] *** Joins: dez_ (uid92154@user/dez)
[02:17:19] *** Quits: pycode (~pycode@2001:b07:5d28:551:cce5:604d:c84e:ee68) (Ping timeout: 258 seconds)
[02:20:47] *** Joins: schinckel (uid38120@id-38120.ilkley.irccloud.com)
[02:30:34] *** Joins: vpoat (~vpoat@113.185.47.19)
[02:31:30] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 258 seconds)
[02:39:56] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 258 seconds)
[02:40:14] *** Quits: vpoat (~vpoat@113.185.47.19) (Ping timeout: 260 seconds)
[02:49:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:51:51] *** Joins: fikran (~fikran@user/fikran)
[02:57:11] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 245 seconds)
[03:02:19] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[03:02:19] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[03:15:23] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:29:06] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:30:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:34:25] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:39:55] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:02:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) ()
[04:06:40] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[04:07:18] <stats4647> Hi, I have code which does a count by date, something like annotate( f1 = Cast( field, DateField() ) ).annotate( total = Count(f1) ), the problem is that when casting the datetime to date, I lose the tz info. Is there a way to do this cast using timezone.localtime() ? TIA
[04:09:05] *** Joins: yang_ (~yang@d207-6-48-121.bchsia.telus.net)
[04:09:22] <FunkyBob> why cast to date?
[04:09:32] <FunkyBob> wouldn't truncating be a more sensible move?
[04:09:52] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/models/database-functions/#trunc
[04:12:34] <evidlo> I've got a binary blob with a timestamp that I'd like to unpack and create lots of objects from.  Which django-rest-framework class should I use to do this and still have nice documentation??
[04:21:06] <PaulWay[w]> A binary blob.  So you have some way of decoding it?
[04:21:31] <evidlo> yes, I'll just be using the struct module and creating lots of "Record" objects
[04:22:18] <PaulWay[w]> OK.  So this blob is a list of structures you recognise.
[04:22:44] <PaulWay[w]> Then you have a Model to store them in and a ModelSerializer class to check them?
[04:23:03] <evidlo> yes I know how to decode it.  There just isn't a model associated with the blob, so I don't know how to adapt the examples
[04:23:26] <PaulWay[w]> What are you doing with the list of structures then?
[04:23:29] <PaulWay[w]> Where are they going?
[04:23:35] <FunkyBob> so you'll be replacing the JSON parser with the struct module, and then still using the DRF serialisers?
[04:23:48] <FunkyBob> wouldn't DRF then be able to auto-generate help based on those?
[04:23:52] * FunkyBob doesn't use DRF
[04:24:03] <PaulWay[w]> We can talk in #restframework if you like.
[04:24:20] <evidlo> there is no Model for binary blobs, but there is one for Record
[04:24:32] <PaulWay[w]> Right.
[04:24:38] <FunkyBob> the blob is just a serialised form of Records, isn't it?
[04:24:43] <FunkyBob> like JSON would be
[04:24:45] <PaulWay[w]> So, yes, you can then have a RecordSerializer class.
[04:25:21] <PaulWay[w]> And your view function or method would just be receiving the data, unpacking it into a bunch of record-shaped dicts, and then throwing each one at the RecordSerializer.
[04:25:42] *** Quits: gitly (~gitly@148.252.128.182) (Ping timeout: 260 seconds)
[04:26:06] <evidlo> my view endpoint looks like this right now (without DRF): https://gitlab.engr.illinois.edu/cubesat/ground-station/moc-website/-/blob/dev/django/api/views.py
[04:26:38] <FunkyBob> that appears to require a login
[04:27:09] <evidlo> https://termbin.com/kuxz
[04:27:35] *** Joins: gitly (~gitly@148.252.132.214)
[04:29:56] <evidlo> I have a RecordSerializer written already: https://termbin.com/widl
[04:30:40] <evidlo> so how is throwing the parsed record into RecordSerializer different/better from creating Record objects directly?
[04:32:51] <evidlo> also, since RecordSerializer exists already, perhaps it makes more sense for the client to do the parsing and simply use the existing Record DRF api?
[04:33:15] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 260 seconds)
[04:35:08] <evidlo> PaulWay[w]:
[04:35:17] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-162-211.red.bezeqint.net)
[04:37:37] <PaulWay[w]> Well, depends on how you're getting your data.
[04:37:54] <PaulWay[w]> It's better to use a serializer because that does validation.
[04:37:56] <PaulWay[w]> Like a form.
[04:38:35] <PaulWay[w]> If your client is posting data to the API, then don't use binary blobs.
[04:38:50] <evidlo> the client is physically connected to a radio where it receives the binary blob
[04:38:55] <PaulWay[w]> If you have to receive binary blobs because that's the only way clients transmit data, make your API do the work.
[04:39:30] <PaulWay[w]> So you've got a coupling here.
[04:39:50] <PaulWay[w]> You need to think about how you deal with the client dying, and how your client deals with the API dying.
[04:40:41] <PaulWay[w]> I would tend to make the client do the unpacking and store-and-forward.
[04:40:49] <PaulWay[w]> And have the API do the validation and storage.
[04:41:05] <PaulWay[w]> But there are lots of different approaches and no one approach is best.
[04:41:16] <evidlo> yeah, then I don't have to do anything on the API, because the DRF Record endpoint exists already
[04:41:39] <evidlo> and theres only a few dozen records per blob, which come in only every few minutes
[04:46:05] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[04:46:29] <ezarowny> Ah! Finally figured out you guys moved IRC networks ðŸ˜…
[04:46:48] <PaulWay[w]> Yes, specifically to avoid [REDACTED].
[04:47:04] <ezarowny> I have a query that I'm having a wee bit of trouble translating into a Django ORM query:
[04:47:24] <ezarowny> SELECT id, name, alt_name
[04:47:24] <ezarowny>   , similarity(name, 'query_string') AS s_name
[04:47:25] <ezarowny>   , similarity(alt_name, 'query_string') AS s_alt_name
[04:47:27] <ezarowny> FROM   some_table
[04:47:29] <ezarowny> WHERE     (name || ' ' || alt_name) %   'query_string'  -- !!
[04:47:31] <ezarowny> ORDER  BY (name || ' ' || alt_name) <-> 'query_string'  -- !!
[04:47:33] <ezarowny> LIMIT  100;
[04:47:47] <ezarowny> I want to use the string concat operator since it's immutable and thus can be used against an index
[04:48:00] <PaulWay[w]> CONCAT
[04:48:20] <PaulWay[w]> Sorry, the Concat function in django.db.models.functions
[04:48:21] <ezarowny> I'm pretty sure that will use CONTCAT which I don't want to do
[04:48:31] <ezarowny> Also I could learn to spell
[04:49:11] <PaulWay[w]> You could write your own function.
[04:49:44] <ezarowny> Ah, true. I guess raw SQL is also an option though I don't love that.
[04:49:54] <PaulWay[w]> No, don't do that.
[04:51:33] <FunkyBob> ezarowny: please don't paste into the channel in future...
[04:51:45] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-162-211.red.bezeqint.net) (Quit: Client closed)
[04:51:49] <ezarowny> Yeah I meant to use the paste online function in limechat but I messed that up
[04:51:58] <ezarowny> Sorry!
[04:52:00] <FunkyBob> np
[04:52:32] <ezarowny> Yeah I can reduce my query down to like 10% if I use the one I wrote above :P
[04:54:38] <FunkyBob> why guess at what the ORM would do when you can try and see the results?
[04:55:23] <dang`r`us> ezarowny, http://dpaste.de (see channel topic if you forget the URL) works well as code paste bin
[04:56:03] <dang`r`us> as to looking at what the ORM does, I find it useful to enable SQL logging: https://stackoverflow.com/a/20161527
[04:56:22] <ezarowny> FunkyBob: I'm definitely trying. I'll try writing a custom Func though.
[04:56:27] <dang`r`us> as noted elsewhere in my link, there's also django-debug-toolbar
[04:56:43] <ezarowny> Yup, have that installed to. I should probably add that I'm a longtime Django user.
[04:56:56] <FunkyBob> yah... the built-in Concat is somewhat complicated by cross-backend support
[04:57:39] <FunkyBob> whereas the PG concat() is null-safe and N-ary
[04:58:07] <ezarowny> Yeah, contact_ws has the same problem
[04:58:12] <ezarowny> DB func might cover it though
[04:59:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[05:01:12] *** Joins: fikran (~fikran@user/fikran)
[05:04:06] <ezarowny> Ah, this looks quite helpful: https://github.com/django/django/blob/main/django/db/models/functions/text.py#L71-L76
[05:05:06] *** Joins: rje (~rje@50.35.241.164)
[05:07:08] *** Quits: gitly (~gitly@148.252.132.214) (Ping timeout: 258 seconds)
[05:08:54] *** Joins: gitly (~gitly@85.255.232.130)
[05:11:54] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[05:21:27] *** Quits: gitly (~gitly@85.255.232.130) (Ping timeout: 265 seconds)
[05:23:13] *** Joins: gitly (~gitly@85.255.233.61)
[05:29:19] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[05:30:36] *** Joins: The_Jag_ (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:31:43] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[05:32:03] *** Quits: The_Jag (~The_Jag@host-80-183-32-131.pool80183.interbusiness.it) (Ping timeout: 258 seconds)
[05:33:23] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Client Quit)
[05:33:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[05:33:35] *** Quits: gitly (~gitly@85.255.233.61) (Ping timeout: 258 seconds)
[05:35:33] *** Joins: gitly (~gitly@148.252.132.214)
[05:45:02] *** Quits: gitly (~gitly@148.252.132.214) (Ping timeout: 260 seconds)
[05:45:17] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:46:53] *** Joins: gitly (~gitly@148.252.128.190)
[05:52:45] *** Quits: bambanxx (~bambanx@181-163-39-75.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[05:55:48] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Quit: Kalov)
[05:57:21] <ezarowny> YO I got it
[05:57:22] <ezarowny> Hell yeah
[05:57:30] <ezarowny> Just a bit over 100ms now
[05:57:38] <ezarowny> Trigram search against like 500k rows
[05:57:42] <ezarowny> Over two fields
[05:58:02] <ezarowny> The longer I can stay in Postgres for search the better
[06:01:03] *** Quits: eraDnaD (~DanDare@user/dandare) (Quit: Quit)
[06:07:20] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Quit: leaving)
[06:08:07] *** Joins: DanDare (~DanDare@user/dandare)
[06:11:38] *** Quits: yang_ (~yang@d207-6-48-121.bchsia.telus.net) (Ping timeout: 260 seconds)
[06:13:48] <FunkyBob> nice
[06:17:59] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:26:44] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Remote host closed the connection)
[06:28:48] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[06:33:01] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Ping timeout: 245 seconds)
[06:40:34] *** Quits: gitly (~gitly@148.252.128.190) (Ping timeout: 260 seconds)
[06:42:16] *** Joins: gitly (~gitly@85.255.234.27)
[07:08:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[07:10:33] *** Joins: fikran (~fikran@user/fikran)
[07:15:31] *** Quits: schinckel (uid38120@id-38120.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[07:16:22] *** Quits: dez_ (uid92154@user/dez) (Ping timeout: 252 seconds)
[07:16:42] *** Quits: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com) (Ping timeout: 258 seconds)
[07:17:11] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[07:17:40] <esaym153> of course not hard to make myself, but I assume if it is not done already, then it must be a stupid idea :-/
[07:17:45] *** Joins: schinckel (uid38120@ilkley.irccloud.com)
[07:18:05] *** Joins: coldmountain (sid484352@helmsley.irccloud.com)
[07:19:36] *** Joins: pierrepaul (sid504261@uxbridge.irccloud.com)
[07:22:05] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[07:24:43] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[07:37:54] <stats4647> FunkyBob: Trunc() did the trick, thank you vm
[07:38:25] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[07:41:28] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[07:58:01] <Cybergeek> Good mornings
[08:02:42] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 258 seconds)
[08:08:48] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[08:11:54] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:31:21] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[08:49:05] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Quit: Au revoir â€¦)
[08:50:38] *** Joins: jasonbraganza (jasonbraga@user/jasonbraganza)
[09:02:19] *** Joins: shangxiao (~davids@124.187.230.212)
[09:17:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[09:19:53] *** Joins: fikran (~fikran@user/fikran)
[09:22:17] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:23:50] <serafeim> hello friends
[09:27:11] <schinckel> Greetings serafeim
[09:29:07] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[09:32:38] *** Joins: mattil (~mattil@dy6nrh-flyt23lvqvg39y-4.rev.dnainternet.fi)
[09:32:49] *** Quits: mattil (~mattil@dy6nrh-flyt23lvqvg39y-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:33:19] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[09:33:21] *** Joins: mattil (~mattil@airio.portalify.com)
[09:37:01] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[09:38:44] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (Remote host closed the connection)
[09:39:00] *** Joins: zBeeble42 (~zBeeble@2001:1928:1::35)
[09:40:25] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 252 seconds)
[09:41:53] *** Joins: slavfox (~slavfox@93.158.232.111)
[09:49:17] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:49:35] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:17:38] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 258 seconds)
[10:17:56] *** Joins: Trieste (T@user/pilgrim)
[10:25:02] *** Quits: shangxiao (~davids@124.187.230.212) (Ping timeout: 260 seconds)
[10:29:57] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[10:40:17] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:41:30] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[10:41:43] *** Joins: shangxiao (~davids@124.187.230.212)
[10:41:47] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[10:54:37] <serafeim> i'm using django tables2 and a column uses floats. is there a simple way to properly format this column to display only 2 decimal fields ?
[11:14:55] *** Joins: jgee (~jgee@186.80.49.20)
[11:24:32] *** Joins: dor (~erg@188.147.32.133.nat.umts.dynamic.t-mobile.pl)
[11:27:23] *** Joins: Tas-sos (~Tas-sos@ppp141237065163.access.hol.gr)
[11:27:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[11:29:14] *** Joins: fikran (~fikran@user/fikran)
[11:34:09] *** Joins: Ilyu (~quassel@78.202.228.230)
[11:44:07] *** Quits: dor (~erg@188.147.32.133.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[11:44:41] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Ping timeout: 245 seconds)
[11:48:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:54:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[12:02:30] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:04:03] <duoi> serafeim from the documentation it suggests you can create a render_foo method which would allow you to format the data
[12:04:28] <serafeim> duoi: yes i've seen it... i actually added a custom column that does this
[12:18:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[12:21:18] *** Quits: ianthrive (~ianthrive@166.70.191.9) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:24:12] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[12:40:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:50:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[12:59:14] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:04:13] *** Parts: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Leaving)
[13:07:43] *** Joins: eliotreid (~eliotreid@240-68-190-109.dsl.ovh.fr)
[13:07:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[13:08:15] <eliotreid> Hello, how can I store passwords (that are not for users and logins) with django and drf ?
[13:10:56] <GinFuyou> You can store anything as long as it can be taken by database. If you should or not is another matter
[13:12:52] <eliotreid> Well, I'm currently using this to store ftp passwords https://pastebin.com/iwJEzYKp
[13:15:10] <GinFuyou> I've never set on using some particular cipher lib, but as long as you encode it, don't see why not
[13:16:00] <eliotreid> The goal is obviously to not store any clear password but as DRF doesn't accept bytes, decoding this way makes it weird, doesn't it ?
[13:20:01] <GinFuyou> You mean you can't store it as bytes?
[13:21:20] <knbk> eliotreid: decoding ciphertext as utf8 is bound to run into problems. Better to use something like base64 or hex encoding if you can't use bytes
[13:23:16] <eliotreid> GinFuyou maybe I coul
[13:23:46] <eliotreid> could* but I chose to pass the password in the validated_data, it's maybe not the right thing to do
[13:24:16] <eliotreid> knbk thanks, I'll use b64 instead
[13:25:32] <eliotreid> apart from using utf8, does it make sense what I did or should I do it differently?
[13:35:06] <knbk> I assume it's a password for a remote ftp server, so you need the actual password? It makes sense to encrypt it. It may be better to handle it at the database field layer, so you can't forget to encrypt it if there's ever a way to set the password without using a serializer
[13:35:49] *** Quits: Tas-sos (~Tas-sos@ppp141237065163.access.hol.gr) (Ping timeout: 258 seconds)
[13:36:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:38:34] *** Joins: fikran (~fikran@user/fikran)
[13:40:31] <eliotreid> knbk sounds good. I can then use a binaryfieldfrom django to store the binary after passing the pasword in fernet. Passing the data through drf serializer and encrypt it with is actually a bad idea yes
[13:40:32] <eliotreid> thanks !
[13:42:49] *** Joins: Tas-sos (~Tas-sos@46-165-176.adsl.cyta.gr)
[13:48:51] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[13:52:35] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Ping timeout: 264 seconds)
[13:53:53] *** Quits: eliotreid (~eliotreid@240-68-190-109.dsl.ovh.fr) (Ping timeout: 256 seconds)
[14:09:36] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:18:45] <duoi> hey FunkyBob still around?
[14:18:56] <duoi> is classy settings still good to use?
[14:20:06] <GinFuyou> Yes, but I think there was newer more general-purpose package
[14:20:54] <duoi> GinFuyou yeah Confucius or whatever it's called, i liked the cbs interface though hah
[14:21:36] <GinFuyou> I'll be using CBS for some time, I'm sure
[14:24:07] *** Joins: dor (~erg@188.147.32.133.nat.umts.dynamic.t-mobile.pl)
[14:30:46] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[14:36:46] *** Quits: dor (~erg@188.147.32.133.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[14:39:23] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Ping timeout: 264 seconds)
[14:39:59] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:41:38] *** Parts: Momentum (momentum@tilde.team) (WeeChat 3.2)
[14:46:00] *** Joins: slav0nic (slav0nic@python.su)
[14:49:37] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:54:50] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:16:34] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:17:06] <theprophet> why is there a import.os in wsgi.py ? what the purpose of import.os in that particular file?
[15:17:21] <theprophet> what is the purpose*
[15:17:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:23:21] *** Joins: audiobirb (~audio@2603-8081-1800-1546-9262-1b64-15ea-2d11.res6.spectrum.com)
[15:27:08] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[15:28:38] <Lartza> theprophet, Well you can clearly see that no?
[15:28:45] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:28:50] <Lartza> It's only three lines below the import when it's used :/
[15:30:22] <theprophet> Lartza well, i wanted a detailed explanation. which i already found. but yea thanks superior race man.
[15:30:39] <Lartza> A what now?
[15:30:53] <Lartza> And if you want a detailed explanation you should ask a detailed question
[15:31:28] <Lartza> I don't known your level of knowledge from just that question, and will assume you don't know to look for things that start with "os." after the import
[15:31:35] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Ping timeout: 264 seconds)
[15:33:23] *** Joins: eliotreid (~eliotreid@240-68-190-109.dsl.ovh.fr)
[15:46:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:47:55] *** Joins: fikran (~fikran@user/fikran)
[15:52:07] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[15:56:21] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Ping timeout: 245 seconds)
[16:02:12] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[16:08:03] *** Joins: dez (uid92154@user/dez)
[16:44:10] *** Joins: mad_moses (~mad_moses@2a02:6d40:2349:6f01:6401:814:391a:28f9)
[16:44:11] <mad_moses> hi
[16:45:24] <Lartza> Hello
[16:48:35] *** Joins: dor (~erg@188.147.32.133.nat.umts.dynamic.t-mobile.pl)
[16:50:43] *** Joins: READ10 (~dallan@user/read10)
[16:53:44] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[16:54:24] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[16:55:35] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[16:58:13] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[17:02:36] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[17:04:42] *** Joins: aselman4 (~aselman4@136.2.17.165)
[17:04:57] *** Quits: aselman4 (~aselman4@136.2.17.165) (Client Quit)
[17:06:56] *** Joins: imakestuff (~imakestuf@197.156.77.171)
[17:08:22] <imakestuff> Can I do unique_together with ManyToMany field?
[17:08:24] <imakestuff> https://pastebin.com/7dcBhubp
[17:09:08] <imakestuff> I want the items be unique in the context of a field in the model not just the current row... I hope I'm not cryptic
[17:09:47] <imakestuff> sorry for using pastebin
[17:09:58] <imakestuff> pasting to dpaste ASAP!
[17:10:34] <imakestuff> https://dpaste.org/qfMn
[17:12:03] *** Joins: aselman4 (~aselman4@136.2.17.165)
[17:12:22] *** Quits: aselman4 (~aselman4@136.2.17.165) (Client Quit)
[17:13:15] *** Joins: stdout (~stdout@216.163.21.11)
[17:17:40] *** Quits: eliotreid (~eliotreid@240-68-190-109.dsl.ovh.fr) (Quit: Client closed)
[17:20:32] *** Quits: dor (~erg@188.147.32.133.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[17:25:40] *** Joins: thiras_ (~thiras@user/thiras)
[17:39:42] *** Joins: flagz (~flagZ@188.127.164.67)
[17:55:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[17:57:16] *** Joins: fikran (~fikran@user/fikran)
[17:57:58] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Quit: Kalov)
[18:00:44] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:01:48] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[18:01:49] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Client Quit)
[18:03:23] *** Quits: Tas-sos (~Tas-sos@46-165-176.adsl.cyta.gr) (Ping timeout: 258 seconds)
[18:05:24] *** Joins: Tas-sos (~Tas-sos@ppp005054065184.access.hol.gr)
[18:07:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[18:14:58] *** Quits: Tas-sos (~Tas-sos@ppp005054065184.access.hol.gr) (Ping timeout: 260 seconds)
[18:15:54] *** Joins: Tas-sos (~Tas-sos@ppp005054067227.access.hol.gr)
[18:16:19] <duoi> imakestuff you might be better off just defining your own through model
[18:16:41] <imakestuff> duoi: how do i do that?
[18:17:09] *** Joins: ianthrive (~ianthrive@166.70.191.9)
[18:22:36] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (WeeChat 3.2)
[18:30:32] <duoi> imakestuff https://docs.djangoproject.com/en/3.2/topics/db/models/#extra-fields-on-many-to-many-relationships
[18:31:13] <imakestuff> duoi: thanks!
[18:52:35] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[19:07:37] *** Quits: Tas-sos (~Tas-sos@ppp005054067227.access.hol.gr) (Quit: leaving)
[19:13:23] *** Joins: Guddu (~Guddu@200-90-224-92.baf.movistar.cl)
[19:15:13] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[19:15:36] *** Quits: Guddu (~Guddu@200-90-224-92.baf.movistar.cl) (Client Quit)
[19:15:43] <ToAruShiroiNeko> Hello, I am running Django on an IIS server, is there a way for me to see the console/log output?
[19:16:08] *** Joins: Guddu (~Guddu@200-90-224-92.baf.movistar.cl)
[19:20:52] *** Quits: mad_moses (~mad_moses@2a02:6d40:2349:6f01:6401:814:391a:28f9) (Quit: Leaving)
[19:23:47] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 264 seconds)
[19:36:16] *** Joins: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl)
[19:37:05] *** Quits: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl) (Client Quit)
[19:37:53] *** Joins: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl)
[19:39:18] *** Quits: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl) (Client Quit)
[19:44:14] <duoi> ToAruShiroiNeko that is an IIS specific question rather than a django question
[19:45:24] <ToAruShiroiNeko> I guess. I am not sure where else to ask it. I am just trying to figure out why the ISS deployment behaves differently.
[19:56:02] <ToAruShiroiNeko> Where do you suggest I ask?
[19:59:50] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[20:04:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:06:37] *** Joins: fikran (~fikran@user/fikran)
[20:15:36] *** Joins: rje (~rje@65.141.156.170)
[20:17:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:22:02] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[20:22:26] *** Staunch is now known as Stench
[20:26:07] *** Joins: thiras (~thiras@user/thiras)
[20:26:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:27:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:34:09] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:11:52] *** Quits: ianthrive (~ianthrive@166.70.191.9) (Quit: Textual IRC Client: www.textualapp.com)
[21:12:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:12:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:19:44] <ToAruShiroiNeko> Basically I want to capture my print()'s into the log. I have no idea where they go at the moment.
[21:21:04] *** Joins: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl)
[21:22:06] *** Quits: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl) (Client Quit)
[21:23:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 264 seconds)
[21:24:10] <Wooble> why do you have print()s in a webapp at all? use a logger.
[21:26:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:36:56] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[21:42:05] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:46:45] <ToAruShiroiNeko> For debugging.
[21:46:55] <moldy> ToAruShiroiNeko: that's more an IIS than a django question
[21:47:13] <moldy> and there might not be many people here who have ever used IIS
[21:47:27] <ToAruShiroiNeko> I do not know where else I can ask.
[21:47:35] <ToAruShiroiNeko> Where would be better?
[21:47:50] <moldy> i'd google "IIS stdout"
[21:47:59] <ToAruShiroiNeko> I tried that.
[21:48:26] <ToAruShiroiNeko> The doc gives me logging but it is a very limited log not giving me a fraction of what I would get in a console. :(
[21:48:40] <moldy> did you try the suggestions here, for example? https://stackoverflow.com/questions/40536073
[21:49:00] *** Quits: imakestuff (~imakestuf@197.156.77.171) (Read error: Connection reset by peer)
[21:49:18] <moldy> alternatively, you could forget about stdout / print and configure django's LOGGING setting such that it logs directly to a file
[21:49:35] <ToAruShiroiNeko> I have no idea how to do that.
[21:49:42] <ToAruShiroiNeko> Can you point me at the doc?
[21:50:12] <ToAruShiroiNeko> I want to avoid rewrtiting the app completely. The reason why I want to capture the console output is it would give me tracebacks.
[21:50:57] <ToAruShiroiNeko> I have a problem with a subprocess possibly.
[21:51:25] <moldy> https://docs.djangoproject.com/en/3.2/topics/logging/ https://docs.python.org/3/library/logging.html
[21:51:40] <moldy> unfortunately the config is a bit tedious, but at least it's documented
[22:00:13] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[22:08:30] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[22:13:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:15:58] *** Joins: fikran (~fikran@user/fikran)
[22:19:17] *** Joins: pycode (~pycode@2001:b07:5d28:551:e4f4:61f9:9958:6a63)
[22:20:50] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:26:51] *** Quits: READ10 (~dallan@user/read10) (Quit: WeeChat 3.2)
[22:29:39] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[22:35:28] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[22:38:38] *** Joins: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl)
[22:39:30] *** Joins: d1rewolf (sid312924@helmsley.irccloud.com)
[22:41:00] <d1rewolf> hello all. I'm working through the "Wedge of Django" book and running into a problem with factoryboy. the book uses "client.force_login(user)" where user is a UserFactory object which extends DjangoModelFactory.
[22:43:01] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[22:43:08] <d1rewolf> However, I get the error "AttributeError: 'DjangoOptions' object has no attribute 'pk'", from this line of code
[22:44:29] <d1rewolf> https://github.com/django/django/blob/fd881e8cd9b7686ab8fcd32332100710a8ffaa10/django/contrib/auth/__init__.py#L129
[22:44:51] <d1rewolf> "uest.session[SESSION_KEY] = user._meta.pk.value_to_string(user)"
[22:45:27] <d1rewolf> so it seems it's trying to access user._meta.pk on a factory object. This might work on a regular model object but I guess it doesn't on factory objects. Has anyone ran across and/or solved this?
[22:45:42] <d1rewolf> I've emailed the authors but would love to figure this out on my own...
[22:45:49] <d1rewolf> (or with the help of the irc :) )
[22:49:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:52:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:52:54] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:59:15] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Remote host closed the connection)
[23:00:16] <d1rewolf> maybe a condensed version of the question. Anyone successfully using factory boy objects with Django's client.force_login?
[23:23:51] *** Quits: pycode (~pycode@2001:b07:5d28:551:e4f4:61f9:9958:6a63) (Ping timeout: 258 seconds)
[23:29:59] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[23:30:25] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[23:34:16] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Ping timeout: 252 seconds)
[23:36:33] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[23:38:16] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Remote host closed the connection)
[23:39:23] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[23:48:16] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[23:55:56] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc)
[23:59:10] <d1rewolf> is there a way to test template tags from the console? for example, to call url as a function to see what it would return based on parameters you pass in?
