[00:07:11] <NimEventer> New Nimble package! odsreader - OpenDocument Spreadhseet reader, see https://github.com/dariolah/odsreader
[00:10:34] *** MightyJoe is now known as cyraxjoe
[00:35:30] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:07:15] <NimEventer> New Nimble package! gene - Gene - a general purpose language, see https://github.com/gcao/gene-new
[01:13:34] <FromDiscord> <Rika> huh
[02:02:10] <FromDiscord> <tandy> huhâ†µ(<@709044657232936960_=41mun-=52a=5b=49=52=43=5d>)
[02:02:16] <FromDiscord> <tandy> how do you mean of
[02:02:28] <FromDiscord> <tandy> i wrote this
[02:02:31] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3E2R
[02:02:38] <FromDiscord> <tandy> but it doesnt work
[02:03:47] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3E2U
[02:03:54] <FromDiscord> <codic> But after the "finished dispatching" the program just doesn't go to get the next event
[02:03:57] <FromDiscord> <codic> weird
[02:04:35] <FromDiscord> <Elegantbeef> You dont need to enumerator positions ðŸ˜€
[02:05:00] <FromDiscord> <Elegantbeef> there's a built in `seq.find`
[02:05:13] <FromDiscord> <tandy> yee i used this, but it didnt work
[02:05:23] <FromDiscord> <tandy> I'm comparing instances of OOlib classes
[02:05:35] <FromDiscord> <tandy> Position is a class
[02:05:40] <FromDiscord> <Elegantbeef> Ah then you want `Position of B`
[02:05:43] <FromDiscord> <Elegantbeef> No it's not a class!
[02:05:48] <FromDiscord> <Elegantbeef> I'll hunt you down for saying that! ðŸ˜›
[02:06:00] <FromDiscord> <tandy> lol
[02:06:03] <FromDiscord> <tandy> whats B?
[02:06:25] <FromDiscord> <Elegantbeef> Whatever type you want to see if it's type of
[02:06:32] <FromDiscord> <tandy> i dont want to see if its a type
[02:06:33] <FromDiscord> <Elegantbeef> So you have your `instance of Type`
[02:06:44] <FromDiscord> <tandy> i want to see whether the two instances have hte same values
[02:06:57] <FromDiscord> <codic> In reply to @codic "I am runniing into": This might be like a nim compiler bug because only thing I can think of is XGrabPointer is called even if ev.subwindow == None and the early return doesnt work
[02:07:01] <FromDiscord> <Elegantbeef> Can you make your own `==` proc
[02:07:21] <FromDiscord> <tandy> hmm good idea
[02:09:05] <FromDiscord> <Elegantbeef> Codic it's highly unlikely to be a nim compiler bug
[02:09:14] <FromDiscord> <Elegantbeef> It's vastly more likely to be an xlib api issue
[02:09:44] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3E2X
[02:09:46] <FromDiscord> <tandy> is this how it should look
[02:09:59] <FromDiscord> <Elegantbeef> What event type do you get?
[02:10:15] <FromDiscord> <Elegantbeef> No it's not how it should look
[02:10:26] <FromDiscord> <tandy> damn ok il look at the nim src then
[02:10:31] <FromDiscord> <codic> For some reason I don't get any MotionNotify or ButtonPress events after the proc early returns
[02:10:35] <FromDiscord> <Elegantbeef> That's how it should look ðŸ˜€
[02:10:35] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3E2Y
[02:10:45] <FromDiscord> <codic> But that makes no sense
[02:10:56] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Xmp
[02:10:59] <FromDiscord> <tandy> lmao thank u
[02:11:04] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3E30
[02:11:45] <FromDiscord> <codic> I updated it to just check if it's a client; aka the exact same thing, but still same issue
[02:11:52] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3E31
[02:13:03] <FromDiscord> <Elegantbeef> You really like making code hard to follow dont you ðŸ˜›
[02:13:59] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3E32
[02:14:39] <FromDiscord> <codic> What's hard to follow about that?
[02:14:53] <FromDiscord> <Elegantbeef> You do early returns which hides intent
[02:14:54] <FromDiscord> <codic> I think early break/continue is easier to follow personally
[02:15:10] <FromDiscord> <Elegantbeef> You dont care that it's not success you care that it is success
[02:16:14] <FromDiscord> <codic> I care that it's not success because if it's not success then I should not handle whatever garbage is in self.currEv
[02:16:26] <FromDiscord> <codic> Or I care if it's success because if it is I can execute what I want to
[02:16:30] <FromDiscord> <codic> You can argue either way really
[02:16:45] <FromDiscord> <Elegantbeef> I mean you care that it's successful
[02:16:52] <FromDiscord> <Elegantbeef> You're only running code when it's successful
[02:17:00] <FromDiscord> <codic> yea
[02:17:14] <FromDiscord> <codic> anyways I don't understand anything which could possibly cause this
[02:17:17] <FromDiscord> <Elegantbeef> Isnt it e.window not e.subwindow?
[02:17:51] <FromDiscord> <Elegantbeef> Actually i guess you're framing
[02:17:55] <FromDiscord> <codic> but I'm pretty sure it's x11 not nim because the wm handles other events just not motionnotify / buttonpress
[02:17:57] <FromDiscord> <codic> yeah ,tho that doesn't matter
[02:18:03] <FromDiscord> <codic> because any way it would early return
[02:18:11] <FromDiscord> <codic> (edit) "return" => "return, problem is after that it doesn't work"
[02:18:22] <FromDiscord> <codic> `if ev.subwindow == None` this case is hit when it should be hit
[02:18:29] <FromDiscord> <Elegantbeef> Sounds like you're forgetting to set some listen flags maybe
[02:20:03] <FromDiscord> <Elegantbeef> Also you're not using all events
[02:20:07] <FromDiscord> <codic> Oh I think I figured it out 1 sec
[02:20:08] <FromDiscord> <codic> wdym?
[02:20:23] <FromDiscord> <Elegantbeef> you should have something like https://github.com/beef331/goodwm/blob/master/src/goodwm.nim#L70-L71
[02:20:36] <FromDiscord> <codic> nvm didn't figure it out
[02:20:40] <FromDiscord> <Elegantbeef> Where you iterate through all queued events
[02:20:46] <FromDiscord> <codic> hmm
[02:21:05] <FromDiscord> <Elegantbeef> Though that loop is different
[02:21:32] <FromDiscord> <codic> no change
[02:21:36] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3E34
[02:21:37] <FromDiscord> <Elegantbeef> It runs indefinitely like yours except it uses a blocking selector to stop the loop inbetween processing
[02:21:53] <FromDiscord> <Elegantbeef> Yea didnt expect it to cahnge
[02:21:56] <FromDiscord> <codic> https://www.toptal.com/developers/hastebin/ukujakadod.swift here's the full code to put it in context
[02:21:56] <FromDiscord> <codic> ah
[02:22:03] <FromDiscord> <codic> lol hastebin thinks nim = swift
[02:23:02] <FromDiscord> <Elegantbeef> Debugging x isnt fun ðŸ˜€
[02:24:31] <FromDiscord> <codic> I agree
[02:24:57] <FromDiscord> <Elegantbeef> You dont create a screen
[02:25:05] <FromDiscord> <Elegantbeef> That might be an issue?
[02:25:13] <FromDiscord> <Elegantbeef> I'm just comparing to my WM at this point
[02:25:49] <FromDiscord> <codic> nah shouldnt be an issue
[02:25:57] <FromDiscord> <codic> What I see is happening is I get a ButtonPress but not a ButtonRelease
[02:26:04] <FromDiscord> <codic> Which is what causes the sisue
[02:26:21] <FromDiscord> <codic> but why???
[02:26:35] <FromDiscord> <Elegantbeef> Cause you grab the pointer
[02:26:37] <FromDiscord> <Elegantbeef> I think
[02:26:51] <FromDiscord> <Elegantbeef> line 79
[02:27:36] <FromDiscord> <codic> Pointer should be ungrabbed in ButtonRelease, that wouldn't stop me from getting the event
[02:27:37] <FromDiscord> <Elegantbeef> I dont know what's correct but my root window is the onlything that grabs the pointer
[02:27:43] <FromDiscord> <codic> But also if subwindow == None then I don't grab the pointer
[02:27:51] <FromDiscord> <codic> so no, that cant be related
[02:28:00] <FromDiscord> <codic> yeah thats for moving/resizing
[02:28:32] <FromDiscord> <Elegantbeef> [tandy](https://matrix.to/#/@tandy1000:matrix.org)\: so did the `==` work?
[02:28:41] <FromDiscord> <tandy> no \:(
[02:28:49] <FromDiscord> <Elegantbeef> What is Position?
[02:28:58] <FromDiscord> <Elegantbeef> A ref object or a normal object?
[02:29:10] <FromDiscord> <tandy> im using OOlib
[02:29:14] <FromDiscord> <Elegantbeef> Ok that doesnt help
[02:29:16] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3E36
[02:29:19] <FromDiscord> <tandy> il have a look at the src
[02:29:23] <FromDiscord> <Elegantbeef> Is it a reference object or a normal object ðŸ˜€
[02:29:32] <FromDiscord> <Elegantbeef> I'm guessing a reference
[02:30:55] <FromDiscord> <tandy> i think ref yeah
[02:31:04] <FromDiscord> <tandy> source is a lil hard to understand but i only see ref objects being defined
[02:31:05] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3E39
[02:31:31] <FromDiscord> <Elegantbeef> You can always just do `assert A is ref object`
[02:31:43] <FromDiscord> <tandy> oh smart
[02:31:51] <FromDiscord> <Elegantbeef> But i assume it is
[02:32:03] <FromDiscord> <Elegantbeef> What's the issue now?
[02:32:35] <FromDiscord> <Elegantbeef> Yea sorry codic I cannot help much, aside from looking at mine or prestiges WM and going "You dont do X like us" ðŸ˜€
[02:34:39] <FromDiscord> <codic> lol
[02:34:50] <FromDiscord> <codic> meh im too lazy im just gonna use my old rust version
[02:34:57] <FromDiscord> <codic> ill try to fix it later
[02:35:41] <FromDiscord> <Elegantbeef> Uh oh we lost tandy!
[02:35:55] <FromDiscord> <treeform> how to check if --threads:on or not was passed?
[02:36:13] <FromDiscord> <tandy> oh sorry beef, im hunting a bug, will test very soon \:)
[02:37:08] <FromDiscord> <amadan> sent a code paste, see https://paste.rs/S1y
[02:37:25] <FromDiscord> <Elegantbeef> You can also do `const threadsOn {.booldefine.} = false` afaik
[02:37:35] <FromDiscord> <Elegantbeef> that should be `threads`
[02:37:58] <FromDiscord> <amadan> Oh neat
[02:38:18] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#implementation-specific-pragmas-compileminustime-define-pragmas
[02:38:22] <FromDiscord> <Elegantbeef> Works for int, bool and str
[02:38:55] <FromDiscord> <Elegantbeef> Actually that might not work
[02:38:59] <FromDiscord> <tandy> it works \:))) thank u
[02:39:03] <FromDiscord> <Elegantbeef> SInce threads isnt a define
[02:39:15] <FromDiscord> <treeform> sent a code paste, see https://paste.rs/6Bd
[02:40:07] <FromDiscord> <Elegantbeef> Yep i was right in that it wouldnt work
[02:42:05] <FromDiscord> <treeform> I am trying to test my lib with both threads on and off:
[02:42:06] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/905957607028695102/unknown.png
[02:42:12] <FromDiscord> <treeform> the compiler flag works for that
[03:14:40] <FromDiscord> <Goat> sent a long message, see http://ix.io/3E3j
[03:14:55] <FromDiscord> <Goat> (edit) "http://ix.io/3E3j" => "https://paste.rs/kdp"
[03:15:52] <FromDiscord> <Elegantbeef> What's the interesting library?
[03:19:59] <FromDiscord> <Goat> At the moment it's nimib and LiteStore
[03:20:31] <FromDiscord> <Goat> I want to make a web version of the Alone Against The Flames adventure for Call of Cthulhu
[03:21:37] <FromDiscord> <Goat> And I want to test out LiteStore as a db for stuff
[03:36:26] <FromDiscord> <willyboar> This sounds interesting
[03:50:39] *** Joins: Guest40 (~Guest40@2a01:4b00:876f:d400:6d2c:e5ea:46a6:a8f2)
[03:52:49] *** Quits: Guest40 (~Guest40@2a01:4b00:876f:d400:6d2c:e5ea:46a6:a8f2) (Client Quit)
[03:57:15] <FromDiscord> <evoalg> sent a long message, see http://ix.io/3E3v
[03:58:50] <FromDiscord> <leorize> a template might be better for that
[03:59:29] <FromDiscord> <leorize> a proc in there would cause the creation of closures and closures in loops are weird
[04:03:09] <FromDiscord> <evoalg> ok thanks ... Im not up to that part of my nim learning yet, but I'll look out for them for it
[04:51:41] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:08:01] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:09:15] <FromDiscord> <codic> I tried some random shit and now my wm works
[06:09:33] <FromDiscord> <codic> Now I have a Nimble question, can I build 2 binaries in 1 nimble package?
[06:09:35] <FromDiscord> <codic> If so, how?
[06:10:06] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 268 seconds)
[06:13:10] <FromDiscord> <Elegantbeef> `bin = @[]` stuff
[06:13:47] <FromDiscord> <codic> cool
[06:13:57] <FromDiscord> <codic> i want one binary for my actual wm and one for the ipc client
[06:14:06] <FromDiscord> <codic> `bin = @[ worm, wormc ] `
[06:14:21] <FromDiscord> <codic> (edit) "worm, wormc" => ""worm", "wormc""
[06:44:07] *** Joins: mahlon (~mahlon@martini.nu)
[07:29:31] *** Joins: lane (~lane@86.106.121.217)
[07:32:53] <nrds> <06Prestige99> Is there a way to echo the name of a param passed into a template?
[07:33:38] <nrds> <06Prestige99> like if I have a template foo, and a variable bar = 5, I call foo(bar) I want to echo out "bar"
[07:33:47] <FromDiscord> <Elegantbeef> `static echo astToStr(yourVar)`
[07:35:51] <nrds> <06Prestige99> hm I must be missing something, not seeing anything printed
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:28] <nrds> <06Prestige99> like https://play.nim-lang.org/#ix=3E4d ?
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:46] <FromDiscord> <Elegantbeef> it echos out bar at CT
[07:36:51] <FromDiscord> <Elegantbeef> if you want it at runtime remove static
[07:37:06] <nrds> <06Prestige99> ah thanks
[07:37:17] <nrds> <06Prestige99> Guess the playground doesn't show compile time echos
[07:37:49] <FromDiscord> <Elegantbeef> Yea it does
[07:38:17] <nrds> <06Prestige99> Mm there's a toggle button for output, I see
[07:38:23] <nrds> <06Prestige99> Well thanks beef this helps a lot
[07:38:26] <FromDiscord> <Elegantbeef> Yep
[07:38:37] <FromDiscord> <Elegantbeef> As always you're not welcome
[07:38:41] <FromDiscord> <Elegantbeef> Wait that's not it
[07:39:17] <nrds> <06Prestige99> Lol :P
[08:00:27] <FromDiscord> <evoalg> what does AST stand for in astToStr ?
[08:00:38] <FromDiscord> <Elegantbeef> abstract syntax tree
[08:00:52] <FromDiscord> <evoalg> oooooo ok
[08:01:57] <FromDiscord> <Elegantbeef> So if prestige did `foo(bar[0])` it'd echo `bar[0]`
[08:04:50] <FromDiscord> <evoalg> nice
[08:15:46] <FromDiscord> <evoalg> for a func, there's a way to print things for debugging ... I saw it somewhere but it's hard to find?
[08:16:27] <FromDiscord> <Elegantbeef> `debugecho`
[08:17:10] <FromDiscord> <leorize> debugEcho is just side-effect-less echo for the most part
[08:17:20] <FromDiscord> <leorize> I think there's an actual debug macro these days
[08:17:37] <FromDiscord> <evoalg> debugecho, nice ðŸ˜‰
[08:18:24] <FromDiscord> <evoalg> debug macro ... I haven't seen that yet
[08:18:28] <FromDiscord> <evoalg> Thanks!
[08:37:07] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:59:54] <FromDiscord> <evoalg> The best practices github says `Prefer in-place functions, for example, sort instead of sorted where appropriate.`  Is this because it's faster or because it uses less mem?
[09:01:15] <FromDiscord> <Elegantbeef> A bit of both
[09:01:58] <FromDiscord> <evoalg> ok thanks
[09:02:01] <FromDiscord> <Elegantbeef> If you're sorting a bunch of things sorted allocates more which will slow down the process
[09:04:59] <FromDiscord> <evoalg> a bunch of things like a really long seq?, or do you mean lots of seq's?
[09:05:08] <FromDiscord> <Elegantbeef> The latter
[09:05:37] <FromDiscord> <Elegantbeef> Allocating new sequences requires talking to the OS/allocator so it'll be slower than just using already allocated memory
[09:06:02] <FromDiscord> <evoalg> ahh I see that makes sense - thank you
[09:06:58] <FromDiscord> <Elegantbeef> It's also why you may want to call `setLen` to preallocate to a given size
[09:07:14] <FromDiscord> <Elegantbeef> By default though i think all collections are allocated to 64 entires
[09:07:18] <FromDiscord> <evoalg> oh so that could speed things up?
[09:07:47] <FromDiscord> <Elegantbeef> Yea if you're adding a lot, cause it doesnt have to talk to the allocation logic so it just puts the data at the index then  increases the capacity
[09:08:24] <FromDiscord> <Elegantbeef> I mean increase count not capacity
[09:08:56] <FromDiscord> <evoalg> Nice! ... that best practices says what to do but doesn't really explain why. It'll be good when you write that book that pmunch said you're writing
[09:09:13] <FromDiscord> <Elegantbeef> I'm writing a book?
[09:09:47] <FromDiscord> <evoalg> I'm being cheeky, referring an earlier discussion
[09:09:59] <FromDiscord> <Elegantbeef> Oh right
[09:10:06] <FromDiscord> <evoalg> ... but I'm meaning it as a compliment
[09:10:08] <FromDiscord> <Elegantbeef> someone actually back reads
[09:13:26] <FromDiscord> <evoalg> speaking of speed ... I've only ever used int's and nothing like int8 or whatever because I read that the process will do int's just as fast, and I'm worried about speed not memory ... but for a bunch of ints it that still true?
[09:14:32] <FromDiscord> <evoalg> processor
[09:14:56] <FromDiscord> <Rika> Unless youâ€™re explicitly using SIMD then there is no difference
[09:15:21] <FromDiscord> <Rika> Well, there can be but it involves a lot more integers than regular use
[09:15:43] <FromDiscord> <evoalg> yay I can ignore them then - thank you
[09:17:53] <FromDiscord> <Elegantbeef> You generally use them for when you only need that information
[09:19:28] <FromDiscord> <Elegantbeef> IE if you only need 255 unsigned values you use uint8 ðŸ˜€
[09:20:26] <FromDiscord> <Elegantbeef> Then you can use enums/ranges for even smaller selections ðŸ˜€
[09:21:52] <FromDiscord> <evoalg> why would you used uint8 instead of int ... just to save memory and not wasteful and beautiful, but not because of speed right?
[09:22:09] <FromDiscord> <Elegantbeef> Memory and dont need 64bits
[09:22:32] <FromDiscord> <Elegantbeef> depending on what you're doing 64bit gives you way more room for errors
[09:23:23] <FromDiscord> <evoalg> meaning that you could catch errors earlier and easier if you defined a smaller amount
[09:24:13] <FromDiscord> <Elegantbeef> Well you can prevent wrong values at compiletime/runtime without issue
[09:25:01] <FromDiscord> <Elegantbeef> Otherwise you need to use a range type `var a: range[0..255]` ðŸ˜›
[09:26:26] <FromDiscord> <evoalg> I understand - thank you
[09:26:58] <FromDiscord> <Elegantbeef> The nim type system has a bunch of nice features for runtime/compiletime value assurance
[09:29:13] <FromDiscord> <evoalg> it's more for me to remember and I'd need to be mindful of it when writing the code, but it's the proper way of doing it as it will lead to less buggy code ... unlike lazy me who just uses ints all the time for everthing
[09:31:17] <FromDiscord> <Elegantbeef> Yea distincts and ranges really allow you to prevent bugs
[09:33:04] <FromDiscord> <Elegantbeef> For an example of a distinct in action if interested https://forum.nim-lang.org/t/8576#55735
[09:33:14] <FromDiscord> <evoalg> ok ... you said by setting the length beforehand, there'd be less mem calls to allocate mem ... but if I set the length of a seq then I'd just use an array instead and not a seq right?
[09:33:33] <FromDiscord> <Elegantbeef> That only works if the len is known at compile time
[09:33:56] <FromDiscord> <Elegantbeef> Say you're reading a file that stores`size, elements`
[09:34:45] <FromDiscord> <Elegantbeef> You read the size, then set the sequences capacity(`newSeqOfCap`) to `size` then just iterate and add and dont have any more memory allocations
[09:35:08] <FromDiscord> <evoalg> ahhhh I see okay
[09:35:30] <FromDiscord> <evoalg> "You have a distinct string that you use when you dont trust the source you got a string from" <-- that's cunning
[09:38:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3E4s
[09:38:05] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3E4t
[09:38:20] <FromDiscord> <Elegantbeef> .1ms faster roughly
[09:38:42] <FromDiscord> <Elegantbeef> Not much in this case but each entry is only 4 bytes, change it to something bigger and it gets interesting ðŸ˜›
[09:39:52] <FromDiscord> <evoalg> I guess it get get exponentially slower
[09:40:16] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3E4u
[09:40:34] <FromDiscord> <Elegantbeef> Twice as fast without any extra effort
[09:40:54] <FromDiscord> <evoalg> wow great example!
[09:41:47] <FromDiscord> <evoalg> Thanks for the example ... newSeqOfCap <-- I've looked at that before, and I read the system module about it, but I was confused as it didn't tell me what "cap" was ... but yea an example really shows it - thank you
[09:43:33] <FromDiscord> <evoalg> Also I didn't know about benchy ... I was using "import timeit" and and then using "timeGo"
[09:44:03] <FromDiscord> <Elegantbeef> Benchy is just treeforms benchmark library
[09:44:10] <FromDiscord> <Elegantbeef> timeit does similar afaik
[09:44:48] <FromDiscord> <Elegantbeef> Timeit gives more information(smaller times) but treeform does nice outputs ðŸ˜€
[09:45:24] <FromDiscord> <evoalg> right ðŸ™‚
[09:45:54] <FromDiscord> <evoalg> I really like treeforms print too ... so nice
[09:48:34] <FromDiscord> <evoalg> what does `keep data` do in your examples?
[09:48:54] <FromDiscord> <Elegantbeef> Treeform has some logic to ensure a value isnt optimized away
[09:49:09] <FromDiscord> <Elegantbeef> The C compiler is smart and may optimize values out that are unused
[09:49:24] <FromDiscord> <evoalg> ohhhh I see nice
[09:50:10] <FromDiscord> <impbox [ftsf]> has anyone made a nim based wiki anywhere?
[09:50:19] <FromDiscord> <dangbinghoo> hi, what's the difference of   --os:any and --os:standalone ?
[09:50:28] <FromDiscord> <impbox [ftsf]> it's very hard to search for "wiki" >_<
[09:50:44] <FromDiscord> <Elegantbeef> I dont think so imp, or i havent seen any
[09:50:54] <FromDiscord> <Elegantbeef> I think standalone has been deprecated for any
[09:51:01] <FromDiscord> <evoalg> In reply to @impbox "has anyone made a": that would be awesome
[09:51:13] <FromDiscord> <Elegantbeef> Well there is the wiki on the github page
[09:51:25] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/wiki
[09:51:47] <FromDiscord> <dangbinghoo> In reply to @Elegantbeef "I think standalone has": ok, thanks
[09:51:54] <FromDiscord> <impbox [ftsf]> i don't think that's made in nim though?
[09:52:03] <FromDiscord> <Elegantbeef> Oh you mean wiki nim implementations
[09:52:07] <FromDiscord> <impbox [ftsf]> that's github's wiki... would be cool if they used nim
[09:52:10] <FromDiscord> <Elegantbeef> I thought you meant wikis for nim
[09:52:18] <FromDiscord> <impbox [ftsf]> yeah, a wiki made in nim
[09:52:28] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[09:52:41] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[09:52:54] <FromDiscord> <Elegantbeef> Rereading your question it's obvious now
[09:53:03] <FromDiscord> <dangbinghoo> I found that os:standalone needs  user must supply panicoverride.nim in prj dir, and os:any just don't
[09:53:43] <FromDiscord> <impbox [ftsf]> fair, i don't want to write a wiki either =p
[09:56:13] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3E4D
[10:58:37] *** Joins: kenran (~kenran@b2b-37-24-119-190.unitymedia.biz)
[11:27:41] *** Quits: lane (~lane@86.106.121.217) (Ping timeout: 268 seconds)
[11:42:03] <FromDiscord> <ratapenado> Hello, it seems that "nim c test.nim" manage to find the libraries imported but "nimble build" requires to add the imports in the .nimble file. Why is that ?
[11:42:51] <FromDiscord> <Elegantbeef> Cause nimble clears the path to make it more reproducable
[11:46:08] <FromDiscord> <Rika> Reproducible
[11:53:10] <FromDiscord> <ratapenado> Sorry, what do you mean by clear the path ?
[11:53:46] <FromDiscord> <Elegantbeef> It removes the nimble files from being accessible then adds only those that are `require`'d back
[11:54:22] <FromDiscord> <Rika> Itâ€™s so that when you install it in a clean install of Nim it will still work
[11:57:56] <FromDiscord> <ratapenado> Allright thanks !
[12:05:12] <NimEventer> New thread by Didlybom: Include std/prelude vs import std/prelude (and other small prelude oddities), see https://forum.nim-lang.org/t/8591
[12:13:33] <FromDiscord> <evoalg> sent a long message, see http://ix.io/3E5i
[12:15:26] <FromDiscord> <Elegantbeef> [leorize](https://matrix.to/#/@leorize:envs.net)\: would know best
[12:15:52] <FromDiscord> <Elegantbeef> But he's probably asleep now so...
[12:16:19] <FromDiscord> <evoalg> Thank you ... gosh you don't need sleep it seems LOL
[12:16:30] <FromDiscord> <evoalg> I mean it's late for you
[12:16:32] <FromDiscord> <Elegantbeef> Well i'm about to go to sleep soon
[12:16:33] <FromDiscord> <Elegantbeef> So...
[12:16:43] <FromDiscord> <Elegantbeef> Only 3am, i'm useless afterall
[12:17:02] <FromDiscord> <Rika> Lol
[12:17:22] <FromDiscord> <Rika> Can you link your init vim?
[12:17:33] <FromDiscord> <Rika> Iâ€™ll at least try and see
[12:21:04] <FromDiscord> <evoalg> I can paste it somewhere sure ... hang on .... https://www.paste.org/120339
[12:21:22] <FromDiscord> <evoalg> geez I didn't know where to paste it ... I had to google
[12:21:53] <FromDiscord> <enthus1ast> HTTP ERROR 500  lol
[12:21:57] <FromDiscord> <enthus1ast> you broke it \:)
[12:22:04] <FromDiscord> <Rika> Nothing looks wrong about it
[12:22:08] <FromDiscord> <Rika> I could load it
[12:23:17] <FromDiscord> <evoalg> maybe it's me using nvim on linux which is on docker running on my mac
[12:23:33] <FromDiscord> <Rika> Youâ€™re crazy
[12:23:53] <FromDiscord> <Elegantbeef> You have the wrong OS sandboxed
[12:24:03] <FromDiscord> <enthus1ast> include APPLE\_RANT\_1
[13:33:23] <NimEventer> New thread by Benjamindlee: How to make a proc with a default genetic type that can be inferred at compile time?, see https://forum.nim-lang.org/t/8592
[14:09:03] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[15:20:52] <FromDiscord> <deech> Why can't `none(MyType)`  infer `MyType`? Especially when the type is bigger like `seq[tuple[...` it gets pretty cluttered to the point where `Option` is difficult to use without `matching` or ugly `if isSome: ... else: ...` statemetns.
[15:28:49] <FromDiscord> <Rika> nim doesnt have reverse inference afaik
[15:29:36] <FromDiscord> <Rika> `var a = sometype` (<-) works but you cant get `var a: Option[T] = none` (->) to work afaik
[15:33:06] <FromDiscord> <dom96> you can do `var a = none[T]()`
[15:33:09] <FromDiscord> <dom96> iirc
[15:33:49] <FromDiscord> <dom96> but yeah, this can't be inferred
[15:34:05] <FromDiscord> <dom96> I read the discussion in the wrong order ðŸ™‚
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:49:48] *** Quits: kenran (~kenran@b2b-37-24-119-190.unitymedia.biz) (Quit: WeeChat info:version)
[16:08:09] <FromDiscord> <deech> I would suggest then that pattern matching for `Option` should be provided by the `options` module so we don't have to take on a `fusion` dependency.
[16:20:57] <FromDiscord> <IsaacPaul> In reply to @dangbinghoo "hi, what's the difference": it also seems standalone users an array + bump pointer for allocation.. I'm not sure what 'any' does tho..â†µhttps://github.com/nim-lang/Nim/blob/f2f15e972645496f901fcfde197048de368453d6/lib/system/osalloc.nim#L195
[16:21:08] <FromDiscord> <IsaacPaul> (edit) "users" => "uses"
[16:24:35] <FromDiscord> <0ffh> sent a long message, see http://ix.io/3E6A
[16:25:12] <FromDiscord> <0ffh> oops, backtips seem to do some kind of formatting in discord...
[16:25:20] <FromDiscord> <0ffh> (edit) "backtips" => "backtics"
[16:25:27] <FromDiscord> <0ffh> (edit) "backtics" => "backticks"
[16:26:32] <FromDiscord> <0ffh> (edit) "http://ix.io/3E6A" => "http://ix.io/3E6C"
[16:28:00] <FromDiscord> <0ffh> i've replaced the backticks with normal ticks in the code
[16:34:34] <FromDiscord> <demotomohiro> Your macro works for me.
[16:36:03] <FromDiscord> <0ffh> lol, that's interesting! ðŸ˜†
[16:36:33] <FromDiscord> <0ffh> what version?
[16:36:36] <FromDiscord> <0ffh> i'm 1.6
[16:36:45] <FromDiscord> <demotomohiro> im devel nim
[16:37:17] <FromDiscord> <0ffh> hmmm, i think i'll do some choosenim in the console and try it out
[16:37:59] <FromDiscord> <demotomohiro> How do you call it?â†µYou cannot use method call syntax for untyped parameter
[16:39:26] <FromDiscord> <0ffh> `def x 3f`
[16:43:52] <FromDiscord> <demotomohiro> def x, 3f works
[16:44:11] <FromDiscord> <0ffh> d'oh!â†µthanks!
[16:44:22] <FromDiscord> <0ffh> so i need the comma?
[16:44:44] <FromDiscord> <0ffh> no way to just use juxtaposition?
[16:48:00] <FromDiscord> <demotomohiro> !eval import macros; dumpTree: def x 3f
[16:48:05] <NimBot> <no output>
[16:49:13] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3E6O
[16:49:37] <FromDiscord> <0ffh> thank, i will
[16:49:42] <FromDiscord> <0ffh> (edit) "thank," => "thanks,"
[16:50:22] <FromDiscord> <0ffh> ah it interprets the x as another ocmmand
[16:50:29] <FromDiscord> <demotomohiro> Nim parses it as command invocation syntax as def(x(3f))
[17:05:46] *** Joins: rockcavera (~rc@192.12.113.201)
[17:05:47] *** Quits: rockcavera (~rc@192.12.113.201) (Changing host)
[17:05:47] *** Joins: rockcavera (~rc@user/rockcavera)
[17:19:19] *** Joins: arkurious (~arkurious@user/arkurious)
[17:22:36] <FromDiscord> <Ricky Spanish> how does nim's runtime memory size compare to golangs? im trying to decide if its worth rewriting a small raspberry pi application i wrote in golang a while ago because id prefer it takes less memory
[17:26:25] <FromDiscord> <Stuffe> Is it known when the next stable patch for Nim 1.6 might be?
[17:26:30] *** Joins: Vladar (~Vladar@46.162.2.53)
[17:27:14] <FromDiscord> <Stuffe> currently 1.6 doesn't work with older versions of glibc
[17:27:34] <FromDiscord> <Stuffe> but I see a fix is already committed to the dev branch
[17:32:00] <NimEventer> New thread by Xioren: Best way to turn byte array into int?, see https://forum.nim-lang.org/t/8593
[17:57:34] <FromDiscord> <tandy> is anyone here familiar with the Minimax algorithm?
[19:31:03] *** Quits: anjovi (~userf@gateway/tor-sasl/mantisfan) (Remote host closed the connection)
[19:31:21] *** Joins: anjovi (~userf@gateway/tor-sasl/mantisfan)
[19:34:27] *** Quits: anjovi (~userf@gateway/tor-sasl/mantisfan) (Remote host closed the connection)
[19:34:53] *** Joins: anjovi (~userf@gateway/tor-sasl/mantisfan)
[19:37:26] <FromDiscord> <juan_carlos> Would be cool a blog post explaining how to do something like this for new people, at least in a brief way with a simpler "hello world", also I can not find the source code of `nicoscript` module, I do not think all people understand that is running without calling a compiler on a backend tho, congrats for the demo it looks awesome: https://www.jasonbeetham.com/snake/nicoscripter.html
[20:05:45] <FromDiscord> <treeform> Does any one know if there are code analysts tools for Nim like Cyclomatic complexity? Or some sort of other branch factor etc? After listening to Casey Muratori I would like to programmatically measure the quality of my code. But there seems to be little research into this.
[20:08:30] <FromDiscord> <treeform> Probably test code coverage would be a better one.
[20:21:37] <FromDiscord> <dom96> iirc the most popular tool for cyclomatic complexity does support Nim
[20:21:43] <FromDiscord> <dom96> I could be misremembering though
[20:21:55] <FromDiscord> <Rika> which is?
[20:23:15] <FromDiscord> <dom96> Can't remember lol
[20:24:49] <FromDiscord> <Rika> damn
[20:39:18] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:41:00] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[20:48:34] <NimEventer> New thread by Manatlan: Compute a Sha256 : the fastest implem ?, see https://forum.nim-lang.org/t/8594
[21:14:35] <NimEventer> New Nimble package! htmlToVdom - Karax extension to convert html in string form to embeddable Karax vdom, see https://github.com/C-NERD/htmlToVdom
[21:32:42] <FromDiscord> <Zoom> Is there a reason `readRow` in `std/parsecsv` is a proc\: bool and not an iterator?
[21:33:21] <FromDiscord> <tandy> doesnt this already exist?â†µ(<@709044657232936960_=4eim=45venter=5b=49=52=43=5d>)
[21:54:53] <NimEventer> New thread by Alpine: CreateDir on Windows using URL, see https://forum.nim-lang.org/t/8595
[22:35:06] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 245 seconds)
[22:36:30] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[22:52:48] *** Joins: flynn0 (~mcbloch@user/flynn)
[22:52:53] *** Quits: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de) (Ping timeout: 268 seconds)
[22:53:22] *** Joins: NimEventer (~NimBot@78.47.140.224)
[22:53:26] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 245 seconds)
[22:53:26] *** flynn0 is now known as flynn
[23:33:10] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[23:34:22] *** Joins: flynn (~mcbloch@user/flynn)
[23:36:10] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[23:37:17] *** Joins: xet7 (~xet7@user/xet7)
[23:50:09] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 268 seconds)
[23:50:46] *** Joins: xet7 (~xet7@user/xet7)
[23:51:13] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[23:51:40] *** Joins: xet7 (~xet7@user/xet7)
[23:52:47] <FromDiscord> <Ty> Hey, folks. I'm trying to understand the differences between lisp macros and nim macros. Are there any resources that have a detailed comparison?
