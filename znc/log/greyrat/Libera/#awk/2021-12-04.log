[00:22:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[00:26:41] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[00:32:49] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[00:43:09] <nmz1> its still a english based seq
[00:43:12] <nmz1> which is terrible
[00:43:20] <nmz1> why would you take math and put words in it
[00:44:19] <emanuele6> # which seq
[00:44:20] <shbot> emanuele6: Sorry, I don't do whichcraft.
[00:44:59] <nmz1> it also breaks all of my rcscripts that use seq for looping :S
[00:45:15] <emanuele6> well, they should not be using it
[00:45:24] <emanuele6> it's not like seq is a standard tool
[00:45:39] <nmz1> it is
[00:46:17] <yeti> you can replace it by nonstandard bash
[00:46:19] <yeti> :-P
[00:46:25] <earnest> Or standard sh
[00:46:40] <nmz1> two things I hate
[00:46:51] <emanuele6> or standard awk
[00:47:07] <yeti> dc?
[00:47:12] <earnest> I wish dc was standard
[00:47:16] <earnest> Instead of its frontend
[00:47:22] <earnest> (Or both, why not)
[00:48:23] <emanuele6> well, dc is "standardised", just not by posix
[00:48:48] <earnest> hmm
[00:49:14] <earnest> I appreciate that all the 'nu' tools use different names
[00:49:38] <emanuele6> 'nu' tools?
[00:49:55] <earnest> fd, bat, whatever else
[00:50:35] <yeti> if dc had nicer I/O I'd use it more often
[00:51:23] <yeti> the world needs dc++
[00:51:34] <earnest> I wasn't aware they had IO at all
[00:51:44] <earnest> (besides stdout)
[00:51:49] <yeti> you can read stuff via ?
[00:51:58] <yeti> get input
[00:52:08] <yeti> but that's very limited
[00:53:03] <yeti> even string operations are doable in dc
[00:53:25] <yeti> bt no conversion from [stringconstant] to mutable strings
[00:53:29] <yeti> but
[00:54:07] <earnest> Ah, yeah that's a bit weak
[00:54:49] <yeti> and you cannot ? (input) non constant strings
[00:55:00] <yeti> only their numerical equivalent
[00:55:18] <yeti> the memory image of the string as "bignum"
[00:55:36] <yeti> dc can operate on that and mimic all kinds of string ops
[00:55:54] <yeti> https://yeti.tilde.institute/brain/dc/dc.html#org5857eb8
[00:57:01] <earnest> yeti: tidy css btw, very good
[00:57:14] <yeti> I like it boring
[00:57:39] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[00:58:02] <yeti> https://yeti.tilde.institute/plain/  and  https://yeti.tilde.institute/plain/under-the-hood.html
[00:58:06] <yeti> smaller example
[00:58:26] <earnest> No, the colour is nice, it's still instant and the content is visible
[00:58:34] <earnest> This is a pretty high bar for the web these days
[00:59:51] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[01:00:33] <yeti> the "plain" example should look different and only be an example with even less distractin than the other contents
[01:01:29] <yeti> it is mostly my heap of outsourced notes/cheatsheets for myself but somewhen others started to find some of them useful
[01:01:50] <yeti> sure not perfect or complete
[01:02:02] <yeti> heap of notes and ideas
[01:03:16] <yeti> orgmode helps a lot.   I tried lots of other ways to write stuff and so far org is the best for writing about code in a nearly literate programming way
[01:03:31] <yeti> C-c C-c on a code block and the results are inserted
[01:03:43] <yeti> no cut and paste to get logs from runs into the text
[01:03:54] <yeti> helps to keep stuff consistent
[01:04:16] <yeti> the org sources are side by side to the html exports
[01:04:22] <yeti> no secrets hidden
[01:04:33] <yeti> just dont laugh
[01:04:47] <yeti> it never hat the intention to be perfect
[01:05:28] <yeti> http://yeti.freeshell.org/orgy/fastspin/fastspin.html <<< I'd never had managed such long stuff without org
[01:16:42] <yeti> I'm not there yet... with exporting all kinds of org-brain refs to html.  cannot address pointers to sections yet, just refs to complete files.
[01:17:48] <yeti> https://yeti.tilde.institute/brain/just-for-fun.html#navigation <<< the GUID-like refs are such pointers I havent found an easy way to dereference yet
[01:17:58] <yeti> I'll get there some day...
[01:19:36] *** Joins: roarde (~roarde@user/roarde)
[01:27:37] <earnest> yeti: Perhaps incroporate old style URN type stuff
[01:28:10] <yeti> I abuse org-brain as IDE...
[01:28:23] <yeti> the "plain" example was org only
[01:28:39] *** Quits: kapu (~kapu@user/egm) (Ping timeout: 256 seconds)
[01:28:46] <yeti> org-brain is a sweet desktopwiki/mindmal like thingy
[01:29:04] <yeti> but if I dont manage to get the refs exported, I might drop it again
[01:29:06] <earnest> I haven't advanced to using anything more structural like that, just plain text
[01:30:07] <yeti> http://yeti.freeshell.org/tmp/20210802-182635-UTC__now_I_know_why_I_need_a_huuuuge_screen.png
[01:30:36] <yeti> but it lacks a nice export
[01:31:19] <yeti> and I'm not yet fit with elisp...
[01:31:30] <yeti> even my days only hav 24hrs
[01:31:46] <yeti> santarella just refuses to deliver the 100hrs day!
[01:32:01] <yeti> I've that on my wishlist for decades
[01:32:32] <yeti> emacs isnt perfect... but damn useful!
[01:33:30] *** Quits: user51 (~user51@176.228.151.30) (Remote host closed the connection)
[01:34:30] <yeti> emacs has a quasi shell and a vfs like layer called tramp...  I just can cd to remote systems and manipulate stuff there or open texts via that quasi vfs layer
[01:34:56] <earnest> Yeah, I vaguely remember TRAMP mode
[01:35:02] <yeti> ;-D
[01:35:10] <yeti> tramp + eshell = dynamite
[01:35:10] <earnest> Mostly with slime and such
[01:37:12] <yeti> I use nvi a lot for short config stuff edits and I do complex text stuff in emacs
[01:37:42] <yeti> I'm not good in pseudo religious editor wars
[01:37:43] <yeti> :-D
[01:37:59] <yeti> different tools for different jobs
[01:53:29] <earnest> yeti: emacs is nice insofar as it is an integrated environment that you can take with you
[01:53:36] <earnest> And use on different systems
[01:53:53] <yeti> and modules interact...
[01:54:09] <yeti> trramp works with simplke edits, dired, eshell, ...
[01:54:19] <yeti> it is nearly an OS
[01:54:53] <earnest> It is an OS, just without the kernel
[01:54:54] <yeti> but it has some flaws...
[01:55:16] <yeti> e.g. org inserts timestemps as ascii respecting the CURRENT timezone
[01:55:31] <earnest> Yeah, although the biggest flaw imo is its difficulty to adapt to change, such as being stuck with elisp.  The C code for that stuff is quite scary
[01:55:43] <yeti> instead of unixtime and only overlaying a view which converts to the TZ of the viewer
[01:55:44] <earnest> Switching to something like guile or whatever else seems virtually impossible
[01:55:59] <yeti> just have that topic in #emacs 
[01:56:16] <yeti> voting for only using utc to get along without TZ terror
[01:57:55] *** Joins: lavaball (felix@31.204.155.215)
[02:01:26] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:09:43] *** Joins: int (~int@0x4.cx)
[02:10:48] <int> hello everyone. Could somebody advice shold I escape '&' sumbol in the symbol class, like [\\&'"
[02:10:54] <int> hello everyone. Could somebody advice shold I escape '&' sumbol in the symbol class, like [\\&'"]?
[02:11:13] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[02:20:16] <yeti> maybe octal?   \046   havent needed it yet...
[02:22:47] *** Joins: concrete-houses (~g@209.6.150.53)
[02:22:52] <concrete-houses> https://ia903404.us.archive.org/0/items/pdfy-MgN0H1joIoDVoIC7/The_AWK_Programming_Language.pdf
[02:22:56] <concrete-houses> this book ?
[02:24:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[02:25:25] *** Joins: Torr (~Torr@user/torr)
[02:32:03] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[02:32:21] <yeti> I just wanted to start typing... :-(
[02:38:33] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[02:55:43] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[02:56:44] <e36freak> int: it has no special meaning there
[03:01:29] <aetnaeus> hmm
[03:01:47] <aetnaeus> it looks like even gawk does line based input buffering irrespective of RS
[03:01:51] <aetnaeus> unless I am mistaken
[03:02:10] <aetnaeus> the following prints nothing
[03:02:12] <aetnaeus> (printf "one,two";read)|awk -FRS=',' '{print}'
[03:02:16] <aetnaeus> but 
[03:02:27] <aetnaeus> (printf "one,two\n";read)|awk -FRS=',' '{print}'
[03:02:28] <aetnaeus> does
[03:02:37] <aetnaeus> is this expected behaviour?
[03:02:57] <aetnaeus> or have I misunderstood something?
[03:03:43] <aetnaeus> oops
[03:03:49] <aetnaeus> I was using -F instead of -v
[03:03:54] <aetnaeus> :/
[03:03:56] <aetnaeus> nevermind
[03:03:57] <aetnaeus> I am dumb
[03:05:11] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:20:39] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[03:23:39] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:34:43] <aetnaeus> another weird bug
[03:34:58] <aetnaeus>  (printf 'test,\';read) |awk -vRS=',\\\\' '{print}'
[03:35:09] <aetnaeus> doesn't print until newline or another character
[03:35:41] <aetnaeus> s/awk/gawk
[03:36:05] <aetnaeus> this one is real I think :P
[03:41:53] <aetnaeus> the comma is unnecessary, so more succintly:
[03:41:57] <aetnaeus> (printf 'test\';read)|gawk -vRS='\\\\' '{print}'
[03:42:18] <aetnaeus> interestingly (printf 'test\';read)|gawk -vRS='\\' '{print}' works
[03:43:11] <aetnaeus> the problem is that if something precedes the slash in the record separator then you cant just do '<thing>\\' for some reason
[03:44:24] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Quit: Reconnecting)
[03:44:30] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[03:45:41] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Client Quit)
[03:46:15] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[03:55:42] *** Joins: Torr_ (~Torr@user/torr)
[04:02:39] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[04:27:42] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:33:37] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[05:09:24] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:32:35] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[05:32:35] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[05:32:35] *** Joins: wuseman (~wuseman@user/wuseman)
[06:15:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:18:57] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:38:03] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[06:39:59] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:42:23] *** Joins: concrete-houses (~g@209.6.150.53)
[06:54:25] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[07:10:15] *** Joins: kapu (~kapu@user/egm)
[07:16:03] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[07:19:59] *** Quits: kapu (~kapu@user/egm) (Ping timeout: 256 seconds)
[07:21:01] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:33:01] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[07:38:17] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[07:42:39] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[07:43:45] <concrete-houses> awk masters I changed input for the solutions given and it doesnt quite work
[07:43:48] <concrete-houses> want to see?
[07:44:09] <concrete-houses> perhaps the solution is not quite general
[07:44:39] <nmz1> well, if the formatting changed 
[07:44:46] <concrete-houses> I am beginning to apprecaite the idea of lists
[07:44:53] <nmz1> that's like changing the language
[07:45:26] <nmz1> concrete-houses: what is it then?
[07:47:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:52:33] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[07:52:37] <concrete-houses> ok posting
[07:56:19] <concrete-houses> https://controlc.com/635665f1
[07:59:31] <mute> why the BEGIN{getline}
[08:02:33] <mute> seems fine without it concrete-houses 
[08:04:24] <concrete-houses> https://controlc.com/610f9767
[08:04:35] <concrete-houses> Well someone gave me that last night
[08:05:01] <concrete-houses> and piv3 is taken from nmz1 last night who also donated a solution
[08:05:16] <concrete-houses> I am learning awk
[08:05:22] <concrete-houses> slowly
[08:05:25] <mute> why NR == 1 { next }
[08:05:28] <mute> in piv4?
[08:06:15] <concrete-houses> no idea really
[08:06:26] <mute> both of those skip the first line
[08:06:43] <mute> which is why you are missing the belham fishing 900
[08:06:47] <nmz1> you changed the code and expected it to work the same?
[08:07:13] <nmz1> PS You should use a pastebin
[08:07:22] <concrete-houses> if I changed it, it was an accident
[08:07:27] <nmz1> cant even open this site with w3m :S
[08:07:33] <concrete-houses> ok
[08:08:07] <nmz1> so the problem is that your initial code had a header, this one doesn't
[08:08:27] <nmz1> the initial dataset
[08:08:44] <concrete-houses> https://pastebin.com/gCtaFzeS
[08:08:44] <nmz1> so the first line gets skipped
[08:08:49] <nmz1> when it shouldn't
[08:10:04] <nmz1> just remove the BEGIN {getline} section
[08:10:05] <concrete-houses> ah ha
[08:10:38] <mute> man i said that 10min ago :D
[08:10:44] <nmz1> because you're learning awk, maybe its better to use a environment variable that will say whether you should skip
[08:10:46] <nmz1> oh sorry mute 
[08:11:00] <mute> i wasn't so direct i guess
[08:11:03] <nmz1> i'll go to sleep then
[08:11:57] <nmz1> concrete-houses: how can you tell whether the first line should be ignored or not?
[08:12:17] <concrete-houses> I uh
[08:12:29] <concrete-houses> I don't remember why the first line was no good .... mmm
[08:12:42] <nmz1> mmm I don't like the idea of having an if checking the first line to see if its a header or not but theres no other way
[08:12:59] <concrete-houses> works like a charm without that begin getline
[08:13:10] <nmz1> concrete-houses: because the first line contained a header like:  Country Licenses Sales 
[08:13:22] <concrete-houses> ah yes yes
[08:13:53] <nmz1> so you need 2 versions or an arg that indicates what type of file it is
[08:14:19] <concrete-houses> https://controlc.com/969eaba3 here it is from last night
[08:15:11] <concrete-houses> you are exactly right and mute copped it too
[08:15:21] <concrete-houses> so when you know awk this is clear as day?
[08:15:22] <concrete-houses> wow
[08:17:29] <mute> a rudimentary check maybe: NR == 1 && $NF !~ /[0-9] { next }
[08:19:16] * e36freak hands mute a /
[08:19:21] <nmz1> no
[08:19:31] <mute> whoops
[08:19:39] * nmz1 slaps a / from e36freak hands
[08:19:44] <concrete-houses> lol
[08:20:54] <nmz1> concrete-houses: its a pretty straightforward language. sane defaults. everything works as it should, there's few surprises once you get it
[08:23:24] <mute> i can do it without a / ... watch ...
[08:23:40] <mute> # printf '%s\n' 'county license 8' blah blah blah | awk 'NR==1&&$NF==0+$NF{next}1'
[08:23:41] <shbot> mute: blah
[08:23:41] <shbot> mute: blah
[08:23:41] <shbot> mute: blah
[08:23:51] *** Joins: earnest (~earnest@user/earnestly)
[08:24:09] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[08:24:09] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[08:24:09] *** Joins: wuseman (~wuseman@user/wuseman)
[08:25:56] <nmz1> nice
[08:26:50] *** Joins: seninha (~seninha@user/seninha)
[08:27:44] * nmz1 picks up the / and hands it back to e36freak
[08:43:18] *** Joins: user51 (~user51@176.228.151.30)
[08:44:32] <concrete-houses> thanks gentlemen and ladies and whatever
[09:33:13] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[09:38:49] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[09:43:58] <nmz1> I am a dog
[09:45:29] * emanuele6 throws a /
[09:47:27] * nmz1 fetches the /
[09:48:13] <seninha> wtf
[09:51:26] <user51> think i had an idea for aoc3.2
[09:51:45] <user51> sort it, then binary search
[09:52:04] <user51> don't ned an array - use FS = "\n"; RS = ""
[09:52:33] <seninha> I used multidimensional arrays and the `in` operator.
[09:52:50] <user51> can i see a code link?
[09:53:13] <seninha> [spoiler]https://github.com/phillbush/aoc/blob/master/2021/day03b[/spoiler]
[09:53:59] <seninha> oops
[09:54:07] <seninha> https://github.com/phillbush/aoc/blob/master/2021/day04b
[09:54:48] <user51> nah the first one is right, i said day 3 part 2 :)
[09:55:23] <seninha> oh
[09:55:37] <seninha> sorry
[09:55:49] <user51> no worries i didn't click on the second
[09:56:33] <e36freak> seninha: i used arrays at first but then cleaned it up with substr() and it was much faster
[09:56:36] <e36freak> fwiw
[09:57:04] <e36freak> http://ix.io/3GTa
[09:57:07] <seninha> for the day03b I deleted array entries that didn't match until resting one
[09:57:14] <e36freak> likewise
[10:07:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:09:15] *** Joins: seninha (~seninha@user/seninha)
[10:10:07] <seninha> I think my solutions for today were kinda convoluted... I used too many subscripts on the arrays
[10:10:56] <e36freak> http://ix.io/3GXj
[10:11:12] <e36freak> i'm sure there's a better way to implement has_win(), but it works
[10:23:03] <e36freak> smart, they way you kept a running total of filled marked spots for each row/col
[10:23:12] <e36freak> mine's much more brute-forcey, but it's fast enough
[10:40:27] <seninha> e36freak: check your code with this big input (it uses 15x15 bingo rather than a 5x5): https://the-tk.com/files/4-900-15.in.xz
[10:46:27] <e36freak> oh i'm sure
[10:46:39] <e36freak> if that were the case i would've done it smarter :)
[11:02:06] <e36freak> seninha: http://ix.io/3GXz
[11:02:24] <e36freak> thanks for the idea, modified similarly
[11:03:40] <user51> http://sprunge.us/MUiSeC
[11:03:50] <user51> does my x and y lists look right?
[11:04:08] <e36freak> erm, used 5 instead of SIZE
[11:04:46] <e36freak> and now it doesn't work quite right. /me debugs
[11:04:51] <e36freak> user51: hm?
[11:05:27] <user51> i'm at part 1, just making sure i got the x and y lists right
[11:05:43] <e36freak> i'm not sure what you mean by x and y lists
[11:05:44] <seninha> e36freak: you need to increment the row and col count before checking for returning
[11:06:04] <e36freak> yep
[11:06:08] <user51> http://sprunge.us/UdbjWL
[11:06:10] <user51> better one
[11:06:13] <seninha> in your code you are incrementing the col array only if the row array is not incremented
[11:06:21] <e36freak> yeah, realized
[11:06:22] <e36freak> thanks
[11:06:25] <seninha> np
[11:08:40] <e36freak> also needed to check to make sure the number is in the board
[11:09:02] <e36freak> this works http://ix.io/3GXB
[11:13:50] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[11:13:50] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[11:13:50] *** Joins: wuseman (~wuseman@user/wuseman)
[11:19:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[11:34:29] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[11:37:42] *** Joins: wuseman (~wuseman@81-234-215-30-no68.tbcn.telia.com)
[11:37:42] *** Quits: wuseman (~wuseman@81-234-215-30-no68.tbcn.telia.com) (Changing host)
[11:37:42] *** Joins: wuseman (~wuseman@user/wuseman)
[11:39:31] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:43:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[11:45:15] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[11:45:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:57:27] <int> e36freak, it has no special meaning there | which meaning? what do you mean?
[12:00:29] *** Joins: wuseman (~wuseman@81-234-215-30-no68.tbcn.telia.com)
[12:00:29] *** Quits: wuseman (~wuseman@81-234-215-30-no68.tbcn.telia.com) (Changing host)
[12:00:29] *** Joins: wuseman (~wuseman@user/wuseman)
[12:00:39] <emanuele6> that & is just &
[12:00:50] <emanuele6> you don't need to escape it in awk
[12:01:02] <emanuele6> if you think you do, then it is an sh quoting problem, not awk
[12:01:11] <emanuele6> show the whole command line
[12:01:19] *** Joins: lavaball (felix@31.204.155.215)
[12:02:56] <int> just a second
[12:03:02] <emanuele6> in sh, `cmd &' means run `cmd' in the background in a subshell. it does not have any special meaning in awk extended regular expressions.
[12:04:24] <int> for example this one: gsub("[&%#_]", "\\\\&");
[12:04:59] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[12:05:13] <Patsie> gah! what a stupid typo to make: if (card[j][i] = number)
[12:05:27] <Patsie> took me too long to track that down :(
[12:05:31] <emanuele6> int: show the command line..
[12:06:09] <emanuele6> my_command | awk gsub("")
[12:06:16] <emanuele6> you have something like that, no?
[12:07:34] <int> it is embedded into bash script
[12:07:39] <emanuele6> yes
[12:07:44] <emanuele6> can you show it?
[12:09:00] <int> it is more than 2k lines there :-(
[12:09:17] <emanuele6> the awk pipeline
[12:09:22] <emanuele6> not the whole script
[12:09:33] <int> ah, ok
[12:11:54] <int> sometning likie this: http://ix.io/3GXS 
[12:11:56] <int> $1 == section
[12:12:17] <int> I do not know why, but $1 disappeared \O/
[12:12:44] <emanuele6> you keep omitting the bash code but it seems like you have a large awk script
[12:12:51] <emanuele6> anyway, you are using "\\&" there
[12:13:01] <emanuele6> that replaces the regex with a literal &
[12:13:36] <emanuele6> <int > hello everyone. Could somebody advice shold I escape '&' sumbol in the symbol class, like [\\&'"]?
[12:13:55] <emanuele6> anyway, in your original message, you were asking how to quote & in a regex
[12:14:14] <emanuele6> and there & does not have any special meaning, but in replacement strings it does have special meaning
[12:14:49] <emanuele6> # awk '{ gsub("[&%#_]", "\\&") } 1' <<< 'hello & hi # x f _ %'
[12:14:50] <shbot> emanuele6: hello & hi & x f & &
[12:15:02] <int> emanuele6, so the gsub("[&%#_]", "\\\\&"); is correct, right?
[12:15:11] <emanuele6> depends on what you want to do
[12:15:15] <int> thank you very much
[12:15:22] <emanuele6> "&" is effectively a no-op
[12:15:50] <emanuele6> "\\&" is seen by awk as `\&' and replaces with a literal &
[12:16:15] <emanuele6> "\\\\&" is seen by awk as `\\&' and replaces with a literal \ and whatever matched
[12:16:46] <emanuele6> "\\\\\\&" is seen as `\\\&' and replaces with a literal \ and a literal &
[12:17:33] <emanuele6> but you do not need to escape the & in the [&%#_] character class has you were asking in your original question
[12:17:40] <emanuele6> it has no special meaning there
[12:18:15] <emanuele6> also note that you can use /[&%#_]/ instead of "[&%#_]" since it is a constant regex
[12:19:49] <emanuele6> i say it because i noticed you were using "" regexes only for that regex and // for all the others
[12:19:51] <int> wow, excellent. Thank you!
[12:20:15] <emanuele6> s/class has/class as/
[12:20:20] *** Joins: lesihctej (jetchisel@user/jetchisel)
[12:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:25:12] <Patsie> aoc day04 finished
[12:25:23] <Patsie> I liked this one
[12:31:02] <Patsie> had to change extremly little to make part2 work
[12:31:59] <Patsie> but yeah, I did use gawk. multidim arrays are so much more readable for this
[12:34:54] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:36:15] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:49:22] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[12:49:22] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[12:49:22] *** Joins: wuseman (~wuseman@user/wuseman)
[13:29:59] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:33:59] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[13:36:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[13:37:36] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[13:42:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:43:33] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[13:43:34] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[13:43:34] *** Joins: wuseman (~wuseman@user/wuseman)
[13:45:40] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:49:56] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[14:08:21] *** Joins: loganlee (~Thunderbi@user/loganlee)
[14:21:53] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:47:04] *** Joins: kapu (~kapu@user/egm)
[14:53:58] *** Joins: earnest (~earnest@user/earnestly)
[14:54:10] <earnest> geirha: https://nullprogram.com/blog/2021/12/04/
[14:54:31] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[15:10:58] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:12:30] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:14:11] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 252 seconds)
[15:15:58] *** Joins: concrete-houses (~g@209.6.150.53)
[15:30:04] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:30:44] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[16:03:05] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[16:14:04] *** Joins: wuseman (~wuseman@81-234-215-30-no68.tbcn.telia.com)
[16:14:04] *** Quits: wuseman (~wuseman@81-234-215-30-no68.tbcn.telia.com) (Changing host)
[16:14:04] *** Joins: wuseman (~wuseman@user/wuseman)
[16:17:32] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:21:13] *** Joins: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[16:28:57] *** Quits: kapu (~kapu@user/egm) (Quit: leaving)
[16:37:14] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[16:37:39] *** Joins: node1 (~node1@user/node1)
[17:00:21] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:00:46] *** Joins: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[17:02:00] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[17:02:00] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[17:02:00] *** Joins: wuseman (~wuseman@user/wuseman)
[17:10:35] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:13:38] *** Joins: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[17:26:19] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[17:26:32] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[17:26:33] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[17:26:33] *** Joins: wuseman (~wuseman@user/wuseman)
[17:28:33] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:30:45] *** Joins: seninha (~seninha@user/seninha)
[17:34:04] *** Joins: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[17:45:38] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[17:45:38] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[17:45:38] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[17:45:59] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[17:50:23] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[17:58:04] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[18:37:47] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[18:56:42] *** Joins: heiner (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[19:15:46] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:20:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[19:20:50] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:22:47] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 252 seconds)
[19:22:51] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[19:22:52] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[19:22:52] *** Joins: wuseman (~wuseman@user/wuseman)
[19:38:26] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[19:45:42] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:46:59] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[19:49:02] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[19:49:02] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[19:49:02] *** Joins: wuseman (~wuseman@user/wuseman)
[19:49:10] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[19:49:27] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:50:33] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[19:58:15] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[19:59:21] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[19:59:21] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[19:59:21] *** Joins: wuseman (~wuseman@user/wuseman)
[19:59:58] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[20:16:48] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[20:16:49] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[20:16:49] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[20:16:53] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[20:20:35] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Read error: Connection reset by peer)
[20:21:55] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[20:21:55] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[20:21:55] *** Joins: wuseman (~wuseman@user/wuseman)
[20:51:34] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[20:54:47] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[20:54:47] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[20:54:47] *** Joins: wuseman (~wuseman@user/wuseman)
[21:12:56] *** Quits: Torr_ (~Torr@user/torr) (Quit: leaving)
[21:13:46] *** Joins: node1 (~node1@user/node1)
[21:28:59] <emanuele6> what's a good way to check if a variable is uninitialised (for function arguments)?
[21:29:18] <emanuele6> i came up with     var == "" && var == 0    and it seems to work
[21:30:51] <earnest> That is the common idiom
[21:31:07] <emanuele6> oh, really?
[21:31:11] <earnest> Yeah lol
[21:31:30] <emanuele6> haha, ok then
[21:33:02] <earnest> undefined variables have the value of 0
[21:35:12] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[21:35:56] *** Joins: Strykar (~wakka@signald/Strykar)
[21:44:13] *** Joins: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net)
[21:56:29] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:12:20] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:12:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:20:58] <nmz1> y no !var ?
[22:26:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[22:29:46] <earnest> nmz1: Could be legitimately ""
[22:30:04] <earnest> foo = ""
[22:30:52] <earnest> emanuele6: (And that order matters too iirc)
[22:30:56] <earnest> Checking "" first
[22:33:40] *** Joins: lgc (~lgc@user/lgc)
[22:34:07] *** Quits: lgc (~lgc@user/lgc) (Client Quit)
[22:45:27] <emanuele6> nmz1: i am calling an external command with system
[22:45:37] <emanuele6> and one argument is optional
[22:47:00] <emanuele6> i can't if i use   system("cmd -- " shellquote(arg1) " " shellquote(arg2))   it will always pass an empty arg2 to cmd and i don't want that
[22:47:39] <emanuele6> earnest: oh, really?
[22:48:19] <emanuele6> i came up with that because i noticed that `unset == ""' and `unset == 0' were both true, but `"" == 0' was false
[22:48:27] <earnest> You'll have to find out, I think checking it also defines it, something weird like this.  I think freeshell has an article on this
[22:48:47] <earnest> But yes, anyway
[22:49:01] <emanuele6> but i couldn't figure out if it was portable even though it worked on every implementation i tried
[22:49:07] <e36freak> should be good
[22:49:51] <emanuele6> earnest: freeshell?
[22:50:00] <emanuele6> isn't that just sdf?
[22:50:24] <emanuele6> oh, you mean the awk wiki in the topic
[22:50:34] <earnest> Yeah, https://nitter.1d4.us/pic/media%2FFFxRQ8SXMAYbBVK.jpg%3Fname%3Dorig
[22:51:17] <emanuele6> dog :)
[22:51:35] <earnest> \o/
[22:55:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:01:57] *** Joins: node1 (~node1@user/node1)
[23:10:14] <emanuele6> s/^i can't if/if/
[23:10:59] <emanuele6> earnest: i don't think the order matters
[23:15:55] <emanuele6> i also tried oawk and it does not matter there
[23:20:01] <earnest> Hm okay
[23:20:10] <earnest> I thought accessing it might define it
[23:20:18] <emanuele6> the first thing i thought when you said that var==0 should not be executed first, was that numeric evaluation of `var' caused by var==0 would have set unset var to 0 and then 0=="" will always be false
[23:20:30] <emanuele6> but that does not seem to be the case
[23:21:50] <emanuele6> also it would not be consistent with what happens when you compare a string variable with a number
[23:21:55] <earnest> Hmm
[23:22:05] <emanuele6> # awk 'BEGIN {v = "1gsdkja"; print v == 1; print v}'
[23:22:11] <shbot> emanuele6: awk: syntax error at source line 1
[23:22:11] <shbot> emanuele6:  context is
[23:22:11] <shbot> emanuele6: etc... ( http://ix.io/3H1b )
[23:22:40] <emanuele6> # awk 'BEGIN {v = "1gsdkja"; print (v == 1); print v}'
[23:22:40] <shbot> emanuele6: 0
[23:22:41] <shbot> emanuele6: 1gsdkja
[23:22:53] <emanuele6> i didn't know that was a gawkism hehe
[23:23:07] <emanuele6> anyway, v does not get set to 1 after the numeric evaluation
[23:25:45] <emanuele6> and i when i tested with oawk '1==1 ... v == "" && v == 0' <<< 'a'  (... -> {v=""}/{}/{v=0}) in both orders and it always worked correctly
[23:25:57] <emanuele6> maybe you got confused with another language
[23:37:47] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[23:40:55] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 252 seconds)
[23:48:53] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[23:50:07] *** Joins: brw (~bas@haring.bas.sh)
[23:59:07] *** Quits: wuseman (~wuseman@user/wuseman) (Remote host closed the connection)
