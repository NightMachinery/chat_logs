[00:00:09] <Thanatos> habnabit_, I know. but right now it's python's extra escaping that's causing the issue
[00:00:26] *** Quits: inom (~inom@176.59.109.161) (Quit: leaving)
[00:00:31] <BrenBarn> but if you're already running Python why can't you just have Python make the request too?
[00:00:45] *** Joins: Scot (~Dark@2605:6440:1003::420)
[00:01:46] <habnabit_> Thanatos, python doesn't do "extra" escaping
[00:02:16] <habnabit_> Thanatos, but bash is horrible at escaping, so
[00:02:31] <habnabit_> Thanatos, what's stopping you from getting rid of bash?
[00:02:53] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:187:c623:be13:1a24)
[00:03:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[00:04:04] *** Joins: wyclif (~wyclif@user/wyclif)
[00:04:24] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-8-8.play-internet.pl)
[00:05:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:06:44] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[00:07:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:07:29] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:07:31] *** Quits: computeiro (~Wender@189.37.67.197) (Quit: Leaving)
[00:08:50] *** Joins: computeiro (~Wender@189.37.67.197)
[00:08:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:09:34] *** Joins: wyclif (~wyclif@user/wyclif)
[00:09:59] *** Quits: Mikaela (~sid12355@user/mikaela) (Remote host closed the connection)
[00:10:25] *** Joins: Mikaela (~sid12355@user/mikaela)
[00:12:35] *** Quits: ioe (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[00:13:22] *** Quits: Mikaela (~sid12355@user/mikaela) (Remote host closed the connection)
[00:13:53] *** Joins: Mikaela (~sid12355@user/mikaela)
[00:14:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[00:14:36] <phy1729> Is there a nicer way to have a type that indicates a string must be a key in a constant dict other than    Keys = Literal[...];  CONST_DICT: dict[Keys, ...] = ...     Something like Keys[CONST_DICT] would be nice
[00:14:39] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:14:46] *** Quits: clawh (~clawh@185.244.214.60) (Quit: Leaving)
[00:15:06] <NeilRG> should I be setting my project's Python version upper bound to 3.10 or leaving it unbounded?
[00:15:07] *** Joins: clawh (~clawh@185.244.214.60)
[00:15:23] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[00:15:29] *** Joins: wyclif (~wyclif@user/wyclif)
[00:15:31] <NeilRG> I'm running into a problem with Poetry, and it seems that some projects (SciPy and NumPy) are starting to bound the Python version
[00:15:32] <NeilRG> https://github.com/python-poetry/poetry/issues/4292
[00:15:38] *** Joins: clawh (~clawh@185.244.214.60)
[00:16:00] *** Joins: qwfz (~clawh@185.244.214.60)
[00:16:01] <SnoopJ> NeilRG, there isn't a one-size-fits-all answer to that question. I like to choose whatever fits my pinned dependencies best as a coarse rule
[00:16:11] *** Quits: qwfz (~clawh@185.244.214.60) (Remote host closed the connection)
[00:16:47] *** Quits: greenx (~greenx@user/greenx) (Quit: Textual IRC Client: www.textualapp.com)
[00:16:47] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[00:16:57] *** Quits: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Remote host closed the connection)
[00:17:02] <SnoopJ> I think it would be better if Poetry wasn't so inherit-y about that
[00:17:24] <NeilRG> SnoopJ, you're in good company then, because rgommers agrees
[00:17:34] <NeilRG> SnoopJ, someone has to bend haha
[00:17:45] <NeilRG> either scipy/numpy or poetry
[00:17:56] <SnoopJ> or the users, away from poetry, heh.
[00:17:59] <NeilRG> lol
[00:18:11] <NeilRG> in the meantime, I could fix it on my side by bounding to 3.9
[00:18:26] *** Joins: Crassus (~Crassus@user/crassus)
[00:18:31] <NeilRG> just seems like I'll be doing more work every Python version raising the bound
[00:18:41] <NeilRG> on all projects
[00:18:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[00:19:06] <SnoopJ> assuming that poetry continues to exhibit this behavior, anyway
[00:19:17] <NeilRG> right
[00:19:37] <NeilRG> I'm surprised they bound it though.  don't they want people testing scipy on 3.10?
[00:19:55] <SnoopJ> NeilRG, testing scipy, or testing a scipy *release*?
[00:20:14] <NeilRG> SnoopJ, ahh, right
[00:20:18] <NeilRG> good point
[00:20:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:20:29] *** Joins: thiras (~thiras@user/thiras)
[00:20:35] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 255 seconds)
[00:20:37] <SnoopJ> ABI compatibility is definitely a big worry for a project like theirs
[00:20:45] <NeilRG> what do you mean?
[00:20:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Client Quit)
[00:21:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:22:27] <SnoopJ> NeilRG, if the Python ABI changes between versions, it's not transparent to them; it could break the build etc.
[00:22:58] <SnoopJ> I don't know if there's a formal policy on "how far into the future should we be gazing" but I would guess there is, the scipy ecosystem is usually pretty methodical about that kind of thing.
[00:23:06] <NeilRG> got it
[00:23:09] <NeilRG> thanks
[00:24:00] *** Joins: thiras_ (~thiras@user/thiras)
[00:24:53] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:25:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[00:26:34] *** Joins: wyclif (~wyclif@user/wyclif)
[00:26:37] <SnoopJ> NeilRG, ah, right, NumPy has a NEP discussing how this works: https://numpy.org/neps/nep-0029-deprecation_policy.html#nep29
[00:26:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[00:27:06] <NeilRG> Yeah I'm a big fan of NEP 29
[00:27:15] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:ac2b:c1a4:7500:a2cb)
[00:27:30] <SnoopJ> I haven't read very many of the NEPs but they're always thought-provoking
[00:27:30] <NeilRG> mainly because it pushes the scientific community to use more modern versions of things
[00:27:35] <NeilRG> yup
[00:27:38] <Thanatos> In a continuation of gloriously ugly programming, I fixed my problem by finding and replacing double-escaped characters i.e. \\' with single escaped characters \'
[00:27:43] <NeilRG> the numpy developers are top notch
[00:28:00] <SnoopJ> I'd say the whole community is, but maybe that's bias speaking? 😅
[00:28:04] <grym> Thanatos: when in doubt, sed it out :)
[00:28:31] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 258 seconds)
[00:28:34] <SnoopJ> the library is certainly a seasoned veteran of backwards compatibility concerns
[00:28:53] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-8-8.play-internet.pl) (Quit: Dolor_Avis)
[00:29:14] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[00:29:30] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[00:29:46] <Thanatos> grym, Indeed
[00:30:11] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:31:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:32:48] <SnoopJ> NeilRG, more pragmatically speaking, it's a hard sell to guarantee support for more than one unreleased version of Python. A lot could happen between now and Oct 2022 (3.11)
[00:33:26] *** Quits: Novi (~novi@user/novi) (Ping timeout: 268 seconds)
[00:33:29] *** Joins: Quaking (~Quaking@167.89.254.27)
[00:33:35] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[00:33:38] <SnoopJ> or uh, I guess maybe May 2022 (feature freeze) is more reasonable to talk about
[00:35:01] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[00:35:18] *** Quits: Quaking (~Quaking@167.89.254.27) (Client Quit)
[00:35:19] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[00:37:28] *** Joins: Narrat (~omnius@p200300df5f12a79906ea56fffe2e7cdc.dip0.t-ipconnect.de)
[00:37:34] *** Joins: wyclif (~wyclif@user/wyclif)
[00:38:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[00:38:44] *** Dap is now known as DaPinkOne
[00:39:13] <Samian> anyone know of a more elegant way to do   someString[:someString.find(' ')]  ? maybe someString.split(' ')[0] ? anyone thing better?
[00:39:38] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:39:39] <SnoopJ> Samian, better how?
[00:40:16] *** Joins: fofoni_ (~fofoni@user/fofoni)
[00:40:24] <Samian> easier on the eyes
[00:41:52] <Akuli> i would do .split(' ')[0]
[00:42:00] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[00:42:01] <Akuli> it will always work, even if the string contains no spaces
[00:42:04] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[00:42:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[00:42:27] <grym> partition, as well
[00:42:38] <SnoopJ> I would do .split()[0] unless I wanted to treat non-space whitespace as distinct
[00:42:56] *** Quits: fofoni (~fofoni@user/fofoni) (Ping timeout: 250 seconds)
[00:43:07] <SnoopJ> or yea, str.partition() is nice, it always returns `before, sep, after`
[00:43:25] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:43:25] *** Joins: wyclif (~wyclif@user/wyclif)
[00:44:04] *** Quits: zathras (~zodd@84-106-62-193.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[00:46:54] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:47:01] *** Quits: Samian (~Sami@2620:10d:c091:480::1:6681) (Read error: Connection reset by peer)
[00:47:32] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[00:48:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:48:35] <dav1d> split(None, 1)[0]
[00:48:36] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:06] *** Joins: lexandrop (~lex@user/lexandrop)
[00:50:14] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:51:02] *** Quits: {HD} (~{HD}@102.165.16.92) (Excess Flood)
[00:51:09] <bilb_ono> how can I create a list of tuples from a list of strings? Right now its splitting my string into a character list tuple https://bpa.st/RGSQ
[00:51:45] *** Joins: {HD} (~{HD}@102.165.16.92)
[00:52:27] <Repiphany> bilb_ono: [(x,) for x in ids]
[00:52:33] <acresearch> people, is there a way to access (import) a spesific line from a text file without neither importing the whole file or looping/skipping to desired line?    like a list index?   import only lines [100, 14, 2000]  ?
[00:52:47] <bilb_ono> I guess I want a list of ‘one element tuples’
[00:52:49] <SnoopJ> acresearch, no
[00:52:51] <bilb_ono> Repiphany: ah nice thanks
[00:53:10] <habnabit_> acresearch, no. lines aren't stored in files, so you have to count them forward
[00:53:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[00:53:46] <SnoopJ> depending on what's on those lines, you could maybe parse the relevant file for them
[00:53:53] <habnabit_> acresearch, you can use a for loop with enumerate, or itertools.islice, or whatever
[00:54:06] *** Joins: wyclif (~wyclif@user/wyclif)
[00:55:41] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:ac2b:c1a4:7500:a2cb) (Ping timeout: 255 seconds)
[00:56:07] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 246 seconds)
[00:57:20] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[00:57:34] <acresearch> habnabit_: SnoopJ hmmmm, that will slow things down,,, ok thanks guys
[00:57:36] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[00:57:42] <habnabit_> acresearch, slow things down compared to what?
[00:59:39] *** Quits: computeiro (~Wender@189.37.67.197) (Quit: Leaving)
[00:59:43] <acresearch> habnabit_: i have file with 30k lines   it is a CSV file and each line has 7M data points... i need to extract lines at random to generate batches (data generation) and these batches puched through a neural network.... a new batch is needed after each epoch    it takes 3 hours to just loop though the lines once. !!!
[01:00:08] <grym> acresearch: that sure sounds like something i'd make a sqlite database out of
[01:00:09] *** Joins: p-i-_ (~Ohmu@node-5zi.pool-1-0.dynamic.totinternet.net)
[01:00:09] *** Joins: computeiro (~Wender@189.37.67.197)
[01:00:19] <grym> (or similar thing that provides indexed random search by design)
[01:00:34] *** Joins: Pickchea (~private@user/pickchea)
[01:00:49] <acresearch> habnabit_: hence it would be after if i index the lines, shuffle the indexes, and then just access the desired lines as needed instead of a for loop
[01:01:19] <grym> acresearch: (converting a csv file to a database is ~trivial)
[01:01:26] <acresearch> grym: i am not sure how to use sql to be honest, and how to connect it with a neural network
[01:01:48] *** Quits: p-i- (~Ohmu@node-183p.pool-118-173.dynamic.totinternet.net) (Ping timeout: 268 seconds)
[01:01:51] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:558c:2c74:b63b:9420) (Read error: Connection reset by peer)
[01:02:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:02:46] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[01:02:49] <grym> acresearch: https://github.com/simonw/csvs-to-sqlite/tree/main/csvs_to_sqlite  makes your database, then https://dataset.readthedocs.io/en/latest/api.html#dataset.Database.query (select <thing> from <table> order by random() limit n) where n is how many rows you want
[01:02:51] <SnoopJ> acresearch, sounds like a bad choice for text storage, could you convert to a more efficient format?
[01:02:53] <grym> nice and snappy
[01:03:28] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 246 seconds)
[01:03:56] <grym> (but using random() to make data splits weirds me out, so... set a seed)
[01:04:43] <SnoopJ> if you have some kind of storage that lets you quickly seek to the Nth element, you could just generate the random indices you need and go get those, without scanning the whole file.
[01:05:03] <SnoopJ> sqlite definitely qualifies, but there are a lot of things that fit that description
[01:05:45] <grym> acresearch: what's the ultimate type of each row
[01:06:00] <grym> (if ndarray, there are other answers here that might be a better fit than sqlite, as much as i love it)
[01:06:29] <Helle> mmmm, hey, I am trying to see if "ssl" supports this, I have to deal with a site with currently expired TLS certificates... and I'd like to set checking to only ignore the expiration on the session, but not disable the other checks, is there a way to achieve that, or am I just going to have to disable checking entirely ?
[01:07:33] <SnoopJ> Helle, are you looking into this because you're using the `ssl` module directly, or are you investigating on behalf of some library that uses it?
[01:08:20] <Helle> SnoopJ: I am using aiohttp, but to do anything other then switching ssl off, I need to provide it with a modified ssl.SSLContext
[01:08:43] *** Joins: wyclif (~wyclif@user/wyclif)
[01:09:08] <graingert> Helle: how long has it been expired for?
[01:09:18] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:db3:82cf:fae3:4032)
[01:09:51] <NeilRG> is there a nice way to do something like this? https://bpa.st/EDUQ
[01:09:55] <Helle> I am just more then a little annoyed to discover this issue on a Friday evening with no chance that the other party will fix their TLS certs over the weekend, honestly, the security is not even a problem, this could be connections over plain HTTP, but the fact it just happened
[01:10:10] <NeilRG> I'm relying on the fact that r won't have next called on it extra times
[01:10:24] <NeilRG> but it's weird that if I switch the order of zip's arguments, I would get different results
[01:10:27] <NeilRG> maybe there's  anice way?
[01:10:53] <Helle> But it looks like I can only disable all checks
[01:11:09] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[01:11:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:11:43] <graingert> NeilRG: You want to islice it?
[01:11:46] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[01:12:26] *** Joins: Kalium (~kalium@178.62.246.247)
[01:12:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:12:44] <NeilRG> graingert, would that be the nicest way to code this?
[01:13:18] <NeilRG> graingert, this is what I'm actually doing
[01:13:19] <NeilRG> https://bpa.st/L6CQ
[01:13:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:13:26] <SnoopJ> NeilRG, do you want two lists, or would one list suffice?
[01:14:14] *** Joins: wyclif (~wyclif@user/wyclif)
[01:14:15] <NeilRG> SnoopJ, I just pasted the whole code, which is only slightly longer and maybe makes things clearer?
[01:16:32] <nubonix> graingert r u on discord python help channel? jw
[01:16:42] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:18:25] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[01:18:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:18:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:19:45] *** Joins: wyclif (~wyclif@user/wyclif)
[01:20:03] <SnoopJ> NeilRG, I can't see the answer to the question I asked there, but if one list suffices: https://bpa.st/3FTQ
[01:20:46] <NeilRG> @SnoopJ, Yeah, I considered chaining, but if you look at the code, the processing is different for each half of the loop, so that would be extra complexity
[01:21:08] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 252 seconds)
[01:21:15] <SnoopJ> NeilRG, I did look at the code
[01:22:02] <SnoopJ> NeilRG, write a generator function maybe?
[01:22:04] *** Quits: Akuli (~Akuli@82-203-167-126.bb.dnainternet.fi) (Quit: Leaving)
[01:22:26] <NeilRG> SnoopJ, I did?
[01:22:35] <NeilRG> batch_dimension_iterator...
[01:22:59] *** Joins: Akuli (~Akuli@dy5gs-ytcd5w---v3qqvy-4.rev.dnainternet.fi)
[01:23:03] <SnoopJ> NeilRG, I don't see range() anywhere in this code. Was the original question a euphemism for a more complicated one?
[01:23:10] <NeilRG> SnoopJ, yes
[01:23:15] <SnoopJ> NeilRG, I would prefer to know the actual question, then.
[01:23:26] <NeilRG> SnoopJ, ok I'll keep that in mind
[01:23:43] <NeilRG> I think I'll just add complexity to my generator function
[01:23:59] <SnoopJ> NeilRG, `def gen(): r = iter(range(10)); yield zip(range(4), r); yield zip(range(6), r)` was what I had in mind
[01:24:03] <NeilRG> make it a full class with its own method for advancing
[01:24:15] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[01:24:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[01:24:50] <NeilRG> hmm, yeah so it seems that you are not bothered by keeping r in the second argument of zip
[01:25:00] <NeilRG> and relying on zip's promise not to call next on it an extra time
[01:25:07] <SnoopJ> why would zip do that
[01:25:10] <NeilRG> it won't
[01:25:16] *** Joins: wyclif (~wyclif@user/wyclif)
[01:25:17] *** Quits: wyclif (~wyclif@user/wyclif) (K-Lined)
[01:25:18] <SnoopJ> so why would I be bothered by it
[01:25:28] <NeilRG> but normally swapping the order of the components of zip doesn't change results
[01:25:32] <NeilRG> arguments*
[01:26:04] <NeilRG> I was looking for an easy way to write this in which I didn't rely on the order
[01:26:05] <SnoopJ> ...? yes it absolutely does
[01:26:06] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:26:31] <NeilRG> SnoopJ, no it doesn't  for a, b in zip(as, bs) is usually the same as for b, a in zip(bs, as).  In probably 99% of cases
[01:26:34] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:26:59] <SnoopJ> NeilRG, is is absolutely false to say that zip(as, bs) and zip(bs, as) are the same
[01:27:03] <SnoopJ> it* is
[01:27:06] <NeilRG> SnoopJ, not what I'm saying
[01:27:08] <SnoopJ> yes it is
[01:27:14] <NeilRG> SnoopJ, no, please read what I wrote
[01:27:17] <SnoopJ> 16:55 <NeilRG> but normally swapping the order of the components of zip doesn't change results
[01:27:24] <SnoopJ> ^ this is incorrect, full stop.
[01:27:27] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:27:28] <NeilRG> SnoopJ, and please don't tell people what they're saying
[01:27:35] <NeilRG> it's incredibly rude
[01:27:42] <SnoopJ> NeilRG, the iterable object returned by zip() depends on the order of the arguments
[01:27:48] <SnoopJ> "the result" is that object
[01:27:57] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:27:57] <NeilRG> SnoopJ, and I made it very clear in the next statement exactly what I meant in code
[01:27:59] *** enrico_ is now known as enrico
[01:28:15] <NeilRG> in case it wasn't obvious that I was also interchanging the iterators
[01:28:33] <NeilRG> anyway, if you read the statements, it should have been clear to you
[01:28:48] <NeilRG> I don't know why you become so difficult sometimes
[01:28:56] <SnoopJ> If clarifying questions are difficult, I will stop asking them.
[01:29:19] <NeilRG> Is this clear to you?  for a, b in zip(as, bs) is usually the same as for b, a in zip(bs, as).  In probably 99% of cases
[01:29:52] <NeilRG> it's only logical to interpret questions in the way that makes the most sense.  you're not a computer
[01:30:00] *** Joins: Samian (~Sami@2620:10d:c091:480::1:6681)
[01:30:11] <nedbat> seems like there was a misunderstanding, and people should take a breath
[01:30:15] <SnoopJ> +1
[01:30:19] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Quit: Leaving)
[01:30:31] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:31:12] <nedbat> btw, "what you said is wrong" is often better spelled as "that doesn't sound right, I must be missing something"
[01:31:18] <SnoopJ> Helle, I'm not sure the granularity you're seeking is there. Possibly you could take two passes at the cert with different options and inspect the exception
[01:31:43] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:31:49] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:32:12] <SnoopJ> but I think the gulf between CERT_NONE and CERT_REQUIRED is too large for this distinction
[01:32:40] *** Joins: molyvius (~molyvius@user/molyvius)
[01:33:13] <Helle> SnoopJ: yeah, it's a bit of a shame, I am just going to turn of TLS validation for this specific connection, as said, it could have been HTTP, except they are HTTPS for everything
[01:33:15] <SnoopJ> nedbat, or perhaps not at all.
[01:36:39] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:36:58] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:37:33] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:39:03] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[01:39:07] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:39:14] *** Joins: pnoud (~pnoud@user/pnoud)
[01:40:05] *** Joins: cheater (~Username@user/cheater)
[01:40:19] <SnoopJ> Helle, I agree, it's a shame that there isn't more nuance, something like this has come up before.
[01:40:54] *** chowmein__ is now known as chowmeined
[01:42:09] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 265 seconds)
[01:42:14] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[01:42:14] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[01:42:30] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[01:43:12] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:44:05] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 265 seconds)
[01:44:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[01:45:50] *** Joins: Thanattt (~Thanatos@102.89.2.158)
[01:46:13] *** Joins: Barones (~Barones@2804:48dc:8500:0:5155:8eaf:4c6a:bb19)
[01:46:24] <SnoopJ> Helle, after a quick consultation with the docs, I think you can do what you want in `cryptography`. No idea if there's a drop-in solution that fits the mold of SSLContext though.
[01:46:31] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[01:48:07] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[01:48:10] <Helle> SnoopJ: thanks for the check, I may do some time on that tomorrow :)
[01:48:36] *** Joins: strudl (~strudl@user/strudl)
[01:48:36] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[01:48:50] <SnoopJ> Helle, to be clear, I'm not an authority on `ssl`, so get a second opinion maybe :)
[01:48:51] *** Quits: ThanatosJ (~Thanatos@197.210.55.212) (Read error: Connection reset by peer)
[01:49:09] *** Joins: strudl (~strudl@user/strudl)
[01:49:25] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[01:50:38] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:52:00] *** Quits: sectec84 (~sectec84@24.18.109.173) (Read error: Connection reset by peer)
[01:52:02] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:52:48] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:53:10] *** Joins: sectec84 (~sectec84@24.18.109.173)
[01:53:28] <rud0lf> hello, i've installed python module with `pip3 install --user` on Ubuntu Server 20.04... import says "No module named 'pycrypto'" ... what do i need to export for it to work?
[01:53:30] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[01:53:36] <rud0lf> i mean environment variable? is it LIBPATH?
[01:54:01] <rud0lf> it sits in /home/<user>/.local btw
[01:54:38] *** Quits: molyvius (~molyvius@user/molyvius) (Ping timeout: 255 seconds)
[01:54:51] <SnoopJ> rud0lf, it's possible whatever you installed depends on pycrypto, but doesn't declare that dependency. It is available on PyPI and can be installed with pip: https://pypi.org/project/pycrypto/
[01:55:11] *** Joins: ThanatosJ (~Thanatos@102.89.2.32)
[01:55:24] *** Quits: Akuli (~Akuli@dy5gs-ytcd5w---v3qqvy-4.rev.dnainternet.fi) (Quit: Leaving)
[01:55:55] *** Quits: Thanattt (~Thanatos@102.89.2.158) (Ping timeout: 258 seconds)
[01:56:01] <rud0lf> i beg to differ.. had the same problem on my home desktop vanilla ubuntu...
[01:56:21] <SnoopJ> rud0lf, you installed pycrypto itself, but can't import it?
[01:56:25] <rud0lf> yes
[01:56:32] <rud0lf> pip3 install --user pycrypto
[01:56:58] <rud0lf> last message from pip "Successfully installed pycrypto-2.6.1"
[01:57:01] *** Joins: Akuli (~Akuli@82-203-167-126.bb.dnainternet.fi)
[01:57:08] <rud0lf> no errors nor warning on the way
[01:57:12] <graingert> SnoopJ: probably pycryptodome
[01:57:24] <SnoopJ> rud0lf, sometimes pip3 and python3 point to different interpreters. That might be what's happening here. I usually run pip as `python3 -m pip ...` to avoid this
[01:57:31] <graingert> Don't install pycrypto it's broken
[01:57:31] <Yhg1s> rud0lf: the module isn't called 'pycrypto'.
[01:57:48] <rud0lf> holy moly
[01:57:51] <rud0lf> it's Crypto
[01:57:55] <SnoopJ> oh, and so it is
[01:57:57] <rud0lf> thanks Yhg1s , another XY problem
[01:58:00] <graingert> https://pypi.org/project/pycryptodome/
[01:58:15] <graingert> Uninstall pycrypto it's dangerously out of date!
[02:01:02] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[02:01:22] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[02:01:36] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:03:44] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:03:54] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[02:04:56] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:05:46] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 246 seconds)
[02:06:09] *** Joins: Vonter (~Vonter@user/vonter)
[02:06:28] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[02:06:55] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:06:57] <rud0lf> is there a simple way to convert 64-bit integer into bytes and back?
[02:07:14] *** Joins: ham5urg (~ham5urg@92.240.33.192)
[02:07:16] *** Quits: ham5urg (~ham5urg@92.240.33.192) (Remote host closed the connection)
[02:07:17] <rud0lf> i don't care about validity of what i get "back"
[02:08:04] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:08:05] <rud0lf> int.to_bytes(8) ?
[02:08:43] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[02:09:19] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[02:09:36] <rud0lf> i don't see the way back :/
[02:10:02] <rud0lf> oh, again, int.from_bytes()
[02:10:13] <rud0lf> thank you ;)
[02:10:55] <SnoopJ> there's also the struct module, but it's less configurable in terms of width
[02:11:23] *** Joins: Naan (~naan@user/naan)
[02:12:54] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:14:24] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:14:42] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[02:15:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:18:01] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[02:19:30] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[02:21:11] *** Joins: shailangsa (~shailangs@host86-186-196-229.range86-186.btcentralplus.com)
[02:21:55] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:59] *** Joins: cr0n0s (~quassel@181.67.203.30)
[02:22:53] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[02:23:43] *** Quits: Barones (~Barones@2804:48dc:8500:0:5155:8eaf:4c6a:bb19) (Quit: Leaving)
[02:24:09] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 255 seconds)
[02:26:01] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:27:24] *** Joins: p-i- (~Ohmu@node-467.pool-118-173.dynamic.totinternet.net)
[02:27:33] *** Joins: bilb_ono (~alexmarsh@12.190.239.194)
[02:28:01] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[02:28:32] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[02:28:55] *** Joins: ano (~weechat@user/ano)
[02:29:40] *** Joins: shoobie (~shoobie@user/shoobie)
[02:29:46] *** Joins: cman (~Cody@2603:9000:d104:8465:a807:3bec:8e60:783f)
[02:29:50] *** Quits: shoobie (~shoobie@user/shoobie) (Remote host closed the connection)
[02:29:59] *** Quits: p-i-_ (~Ohmu@node-5zi.pool-1-0.dynamic.totinternet.net) (Ping timeout: 268 seconds)
[02:30:22] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:30:52] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[02:31:11] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:31:12] *** Joins: ano (~weechat@user/ano)
[02:33:25] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:44] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[02:38:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[02:39:40] <Jin^eLD> habnabit_: I've been looking into exec and importlib, i.e. that other topic we touched - re-running a user script cleanly; am I right to assume that in order to start with a clean environment I need to manually iterate globals()/locals()/dir() and remove all elements that do not start with "__" or is there some automated/builtin way by now which I did not find?
[02:40:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[02:40:51] *** Quits: cedric (~cedric@2a01:cb11:867:c200:66a6:2535:5f72:704d) (Quit: Konversation terminated!)
[02:42:14] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:42:14] *** Joins: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it)
[02:42:56] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 268 seconds)
[02:44:24] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[02:44:50] *** Quits: Akuli (~Akuli@82-203-167-126.bb.dnainternet.fi) (Quit: Leaving)
[02:45:17] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[02:45:47] *** Joins: DaNeenjah (~jake@162.sub-72-105-217.myvzw.com)
[02:47:21] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[02:47:28] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[02:49:44] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:51:32] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:51:58] *** Joins: Thanattt (~Thanatos@102.89.2.204)
[02:52:10] *** Quits: cr0n0s (~quassel@181.67.203.30) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:53:25] *** Quits: ThanatosJ (~Thanatos@102.89.2.32) (Ping timeout: 268 seconds)
[02:54:38] *** Quits: Samian (~Sami@2620:10d:c091:480::1:6681) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:54:51] *** Joins: sazawal (~sazawal@182.68.81.25)
[02:58:34] *** Quits: Thanattt (~Thanatos@102.89.2.204) (Read error: Connection reset by peer)
[02:59:26] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Remote host closed the connection)
[02:59:26] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1009) (Read error: Connection reset by peer)
[02:59:50] <sazawal> Hi all. I am having a lot of issues doing multiprocessing with decorators on Windows. This is a simplified version of my code which gives me error on Windows but runs perfect on Linux, https://bpa.st/2GQA . Please help!
[02:59:56] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1009)
[03:00:06] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[03:00:34] *** Quits: magla (~gelignite@55d4f0de.access.ecotel.net) (Quit: Stay safe!)
[03:00:48] <nubonix> ok, so i need some help with thinking / flow logic or w/e. So im creating a slave master relationship between many:one computers, and i need to install a few things on each computer programmatically. I've written everything that i need, but my logic is a bit whacked atm. Atm im trying to have the restful api for each slave call its own api's to download&install the dependencies. The reason im doing this is: when i download and run
[03:00:48] <nubonix> the slave.py aka agent.py on the slave computer, by the time i get back to the control panel on the master computer, everything should be downloaded and installed. Also, the time that it takes for one slave to download and install the dependencies, by the time i download and install agent.py on the next slave computer, the first one should be done. Atm im unable to call the apis from within the agent.py as this doesnt make much
[03:00:48] <nubonix> sense when creating a webserver to call its own routes... so was hoping you could help with the thought proces
[03:01:01] *** Joins: korg815 (~korg815@user/korg815)
[03:01:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:02:52] <nubonix> This might seem weird, but it allows me to download the correct version at the time of installation, and install newer versions of the dependencies later on.
[03:03:05] <nubonix> calling its own urls / api's
[03:03:17] <nubonix> at the installation phase
[03:03:54] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[03:03:58] *** Joins: ThanatosJ (~Thanatos@197.210.79.172)
[03:04:49] <nubonix> suppose i could just create an installer that calls the apis from the controller / master computer and wait until its completed?
[03:04:55] <nubonix> probably would make the most sense
[03:08:12] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[03:11:24] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:11:34] *** Quits: weibullguy (~drowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 246 seconds)
[03:13:10] <Jin^eLD> sazawal: look for mp.set_start_method('spawn')
[03:13:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:13:30] <Jin^eLD> I remember only vaguely, but i think thats the trick to make it run on both, windows and linux
[03:13:56] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[03:14:27] *** Quits: Mikaela (~sid12355@user/mikaela) (Remote host closed the connection)
[03:14:58] *** Joins: Mikaela (~sid12355@user/mikaela)
[03:15:05] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[03:15:07] <sazawal> Jin^eLD, Thanks. I tried set_start_method("fork") in my original code, but it didn't work. Well, right now the code I pasted here is working if I use functool.wraps as decorator. Let me slowly reach the point of no running from this code to my original code. I will be back here :)
[03:15:40] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:16:53] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[03:17:25] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[03:18:43] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 258 seconds)
[03:19:56] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 252 seconds)
[03:20:18] *** Quits: ThanatosJ (~Thanatos@197.210.79.172) (Ping timeout: 252 seconds)
[03:21:24] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:21:28] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[03:21:59] *** Joins: Thanatos (~Thanatos@197.210.79.250)
[03:22:04] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[03:22:50] *** Quits: Thanatos (~Thanatos@197.210.79.250) (Read error: Connection reset by peer)
[03:23:11] *** Joins: Thanatos (~Thanatos@197.210.79.250)
[03:25:38] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507)
[03:25:57] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[03:26:23] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[03:27:29] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:187:c623:be13:1a24) (Quit: Client closed)
[03:27:46] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:28:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[03:29:43] <graingert> sazawal: Try using multiprocessing.get_context("spawn").Process on Linux
[03:30:00] <graingert> It will crash if your functions are not pickleable on both platforms then
[03:30:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[03:30:50] <sazawal> graingert, You mean  multiprocessing.get_context("spawn").Process instead of Process?
[03:32:17] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[03:32:24] *** Joins: entflammen (~entflamme@cpe-23-243-251-166.socal.res.rr.com)
[03:33:15] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[03:34:06] <graingert> sazawal: yeah
[03:34:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:34:18] <sazawal> Thanks for the tip!
[03:36:49] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[03:37:51] <sazawal> graingert, It gives me an error - ValueError: cannot find context for 'Spawn'
[03:38:27] <sazawal> Oh sorry, lowercase
[03:40:04] *** Joins: pnoud (~pnoud@user/pnoud)
[03:41:04] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[03:43:32] *** Quits: Thanatos (~Thanatos@197.210.79.250) (Ping timeout: 255 seconds)
[03:43:51] <sazawal> graingert, Can you help me running this code, https://bpa.st/XTSA . It is the modified version of the earlier code I pasted. The earlier one worked when I used functools.wraps.
[03:44:29] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:44:42] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3)
[03:45:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[03:45:36] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 255 seconds)
[03:45:54] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 240 seconds)
[03:46:32] *** Quits: _mal (~mal@user/mal/x-8025409) (Ping timeout: 252 seconds)
[03:47:05] *** Joins: explodes (~explodes@user/explodes)
[03:47:29] *** Joins: _mal (~mal@user/mal/x-8025409)
[03:49:13] *** Quits: cdown (~cdown@89.32.122.5) (Remote host closed the connection)
[03:49:15] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[03:49:34] *** Joins: Thanatos (~Thanatos@197.210.79.172)
[03:49:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[03:51:33] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:51:44] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:4829:dbfa:9849:bbfb)
[03:53:21] *** Joins: darksun (~darksun@user/darksun)
[03:55:12] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[03:57:30] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:58:04] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[03:58:39] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 255 seconds)
[04:00:01] *** Joins: m4v (~znc@ubuntu/member/m4v)
[04:02:35] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[04:03:02] *** Joins: Memory (~Wei@143.198.78.64)
[04:05:06] *** Joins: kenoba (~kenoba@user/kenoba)
[04:05:38] *** Joins: Paul_ (~Paul@user/paul)
[04:06:04] *** Joins: ThanatosJ (~Thanatos@192.145.124.124)
[04:07:58] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[04:08:29] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[04:09:48] *** Quits: Thanatos (~Thanatos@197.210.79.172) (Ping timeout: 252 seconds)
[04:11:47] *** Paul_ is now known as Paul
[04:12:25] *** Quits: Paul (~Paul@user/paul) (Quit: Leaving)
[04:12:38] *** Joins: Paul_ (~Paul@user/paul)
[04:12:54] *** Paul_ is now known as Paul
[04:14:02] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[04:16:42] *** Quits: shiddy (uid501592@id-501592.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[04:18:47] *** Joins: darksun (~darksun@user/darksun)
[04:20:59] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[04:22:41] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[04:23:53] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[04:24:18] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 255 seconds)
[04:24:48] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[04:26:08] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:26:13] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:26:25] <habnabit_> Jin^eLD, no. the environment you pass in starts out clean. you can make a new one every time
[04:27:57] <Jin^eLD> habnabit_: but only manually? I was wondering if I could solve that by doing importlib.load_module(zipimport.zipimporter("user.zip")) inside a thread?
[04:28:22] <Jin^eLD> in theory anything that was loaded/defined inside a thread should stay there and die when the thread dies?
[04:28:58] <Jin^eLD> ok the line I wrote is bogus :)
[04:29:17] <Jin^eLD> script = zipimport.zipimporter("user.zip") and then module = script.load_module("__main__")
[04:29:30] <Jin^eLD> and the above two inside a thread
[04:29:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 258 seconds)
[04:29:38] *** Wulf4 is now known as Wulf
[04:29:46] *** Quits: Narrat (~omnius@p200300df5f12a79906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[04:30:53] *** Quits: Paul (~Paul@user/paul) (Quit: Leaving)
[04:30:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[04:32:46] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:db3:82cf:fae3:4032) (Ping timeout: 246 seconds)
[04:33:49] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[04:34:10] *** Joins: thiras (~thiras@user/thiras)
[04:35:03] <Jin^eLD> trial and error - nope, that does not help
[04:35:05] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[04:35:38] <habnabit_> Jin^eLD, eh? no, that's not how threads work at all
[04:36:05] <habnabit_> Jin^eLD, you do't need threads for that. just make a new zipimporter when you have a new zip file
[04:36:10] <Jin^eLD> yeah I just noticed, that was a total misassumption on my side
[04:36:26] <Jin^eLD> habnabit_: but then all vars from the old file remain?
[04:36:32] <Jin^eLD> and potentially functions and whatever it registered itself to?
[04:36:33] <habnabit_> Jin^eLD, what vars?
[04:36:54] *** Joins: darksun (~darksun@user/darksun)
[04:36:55] <Jin^eLD> global vars that the script may have defined, functions that registered to callbacks and stuff like that
[04:37:13] <habnabit_> Jin^eLD, global vars are assigned to the module object that load_module returns
[04:38:32] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:38:56] *** Joins: kenoba (~kenoba@user/kenoba)
[04:38:57] *** Joins: Crassus (~Crassus@user/crassus)
[04:39:02] *** Joins: Thanattt (~Thanatos@197.210.47.227)
[04:39:41] <habnabit_> Jin^eLD, if it's registered callbacks, those won't be automatically cleaned up. it's definitely a benefit of a total runtime reinit
[04:40:06] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[04:41:44] <Jin^eLD> habnabit_: I just checked, the vars imported remain, i.e. if I load module 1 and it defines foo and then load module 2 over the same importer instance that defines bar
[04:41:51] <Jin^eLD> I can still print foo and bar at the end
[04:42:08] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[04:42:12] <Jin^eLD> habnabit_: well, yesterday we kinda learned that a total runtime reinit is not offered by cffi...
[04:42:32] *** jarthur_ is now known as jarthur
[04:42:34] <habnabit_> Jin^eLD, i'm not sure what you mean by 'module 1' and 'module 2' here. two different .zip files at the same path?
[04:42:46] <Jin^eLD> let me paste some code
[04:42:55] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[04:42:55] *** Quits: ThanatosJ (~Thanatos@192.145.124.124) (Ping timeout: 265 seconds)
[04:43:40] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[04:43:41] *** Joins: kenoba (~kenoba@user/kenoba)
[04:43:46] <bilb_ono> is there such thing as a profiler that will automatically let me know what line of my python script is on any time I press a key ?
[04:44:02] <bilb_ono> the ones I have found make summaries of which function sare taking the longest which isn’t quite what I want
[04:44:22] *** Quits: DaNeenjah (~jake@162.sub-72-105-217.myvzw.com) (Quit: WeeChat 3.2)
[04:44:38] <bilb_ono> right now I have print statements everywhere just so I can tell whats taking so long, but it owuld be could if I could just press like j and it would say on line 53 of this file - waiting for this to return
[04:44:50] <Jin^eLD> habnabit_: https://paste.ee/p/g3q9p
[04:45:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:46:20] <Jin^eLD> habnabit_: would the following work: when I start with my embedded script, I remember/copy dir()/globals()/locals(), then import the zip and load the module so it runs, when its time to replace it with a new one, I cross reference my saved env and delete all keys that the script has left behind?
[04:46:34] *** Quits: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820) (Ping timeout: 240 seconds)
[04:46:56] *** Joins: derelict (~derelict@user/derelict)
[04:47:45] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 265 seconds)
[04:48:06] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:48:07] <habnabit_> Jin^eLD, yes in this example you're telling them 'use the same module object: the one named __main__'
[04:48:14] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[04:48:42] <habnabit_> Jin^eLD, which happens to be your current module object, which causes some weird effects to globals
[04:48:49] <Jin^eLD> oh hmm
[04:48:59] <habnabit_> Jin^eLD, (globals and locals are the same at the module scope)
[04:49:03] <Jin^eLD> I thought zips are supposed to have a __main__.py entry point
[04:49:14] <Jin^eLD> at least docs said that...
[04:49:22] <habnabit_> Jin^eLD, sure, but they don't usually all share the same module object for that
[04:49:42] <habnabit_> Jin^eLD, you run one .zip file, not multiple
[04:49:57] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:50:01] *** Joins: kenoba (~kenoba@user/kenoba)
[04:50:35] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:50:39] <Jin^eLD> habnabit_: OK I see... so what would be the solution here to achieve what I am trying to do?
[04:51:59] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[04:53:30] *** Joins: darksun (~darksun@user/darksun)
[04:54:37] <habnabit_> Jin^eLD, importlib is very full of stuff now.. trying to find the part i'm thinking of
[04:55:10] <Jin^eLD> I did look at its reference, but nothing caught my eye that would solve this issue specifically
[04:55:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:55:25] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[04:55:36] <Jin^eLD> the closest thing seemed to be reload(), but it's still not quite what I would need
[04:55:58] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[04:57:13] <SnoopJ> Jin^eLD, the problem here is that the module you get from zipimport lingers in the cache?
[04:57:50] *** Joins: Celeo (~Celeo@user/celeo)
[04:58:34] <Jin^eLD> SnoopJ: the "module" from  zipimport is actually a user script that does whatever stuff it needs, the problem is that all of its methods, global vars it defined and what not need to be removed when its time to replace this user script with a new user script
[04:58:53] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[04:59:22] <SnoopJ> Jin^eLD, why the scare quotes? It's a module proper
[04:59:29] <Jin^eLD> so the .zip is not a module in the python sense that would be used by others, but actually an own python program that does stuff
[04:59:36] *** Quits: sazawal (~sazawal@182.68.81.25) (Quit: Leaving)
[04:59:36] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[05:00:11] *** Joins: Qtronix (~qtronix@cm-84.213.108.169.getinternet.no)
[05:00:20] <Jin^eLD> SnoopJ: dunno, maybe because I am scared :)
[05:00:21] <SnoopJ> "module" just means "an organizational unit of Python code"
[05:01:07] <Jin^eLD> ok, if its allowed to do just anything, then I shouild indeed drop the scare quotes
[05:01:08] <c4017w_> bilb_ono, you could run it through a debugger and pause whenever you want to see where it is
[05:01:18] <SnoopJ> Jin^eLD, it's just a namespace, basically.
[05:01:28] <bilb_ono> c4017w_: yeah thats probably the solution
[05:02:14] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-0dd5-40fe-995e-105e.res6.spectrum.com) (Read error: Connection reset by peer)
[05:03:27] <Jin^eLD> SnoopJ: ok, but how do I get rid of everything it did before I reload it?
[05:03:30] <SnoopJ> Jin^eLD, anyway, since each module is its own namespace, names defined in one won't interfere with names in another as a general rule. If you use zipimporter() to load foo.zip which contains a function named bar(), then load baz.zip which contains a different function named bar(), this is perfectly fine, just like it would be for foo.py, baz.py defining the same function and being imported by some
[05:03:31] <SnoopJ> program.
[05:03:55] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[05:03:58] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[05:04:02] <Jin^eLD> right, but what if both are, unfortunately, foo.zip
[05:04:15] <habnabit_> Jin^eLD, https://bpa.st/GFBQ
[05:04:16] <SnoopJ> then you do indeed need to flush the module
[05:04:17] <Jin^eLD> where foo.zip is just being replaced once in a while but can be totally different form its predecessor
[05:04:25] <habnabit_> Jin^eLD, a .whl file is just a .zip file
[05:04:30] <habnabit_> Jin^eLD, pretend that's the path to your zip file
[05:04:46] <Jin^eLD> ok looking
[05:05:07] <habnabit_> Jin^eLD, you use PathFinder to set up the zipimporter for the file and turn it into a ModuleSpec, then import a module from that spec, and the module you get is fresh every time
[05:05:11] <SnoopJ> ooh, that's much nicer than using zipimporter directly
[05:05:18] <SnoopJ> (I was looking for this last week but struck out)
[05:05:21] <habnabit_> importlib is quite fully featured
[05:05:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[05:06:13] <Jin^eLD> habnabit_: trying...
[05:06:21] <SnoopJ> yea, importlib is great
[05:07:09] *** Quits: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[05:07:16] *** Joins: Thanatos (~Thanatos@197.210.47.227)
[05:09:28] *** Joins: darksun (~darksun@user/darksun)
[05:09:46] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[05:10:30] <Jin^eLD> habnabit_: what is the "name" in find_spec? I don't quite get that
[05:10:40] <habnabit_> Jin^eLD, the name of the module to find
[05:10:54] <SnoopJ> (a path may contain many)
[05:10:57] *** Quits: Thanattt (~Thanatos@197.210.47.227) (Ping timeout: 265 seconds)
[05:11:03] <habnabit_> Jin^eLD, in your case, it would be '__main__', but it won't conflict here
[05:11:05] <Jin^eLD> i.e. file name without extension? because the next parameter is the path
[05:11:10] <Jin^eLD> ah
[05:11:22] <habnabit_> Jin^eLD, the fully qualified module name
[05:12:05] *** Joins: Crassus (~Crassus@user/crassus)
[05:12:47] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 268 seconds)
[05:14:00] <Jin^eLD> holy crap, I can't say that I fully understand it, but it does work
[05:14:04] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 246 seconds)
[05:14:19] <SnoopJ> Jin^eLD, how would you feel about it if it was just a folder?
[05:14:33] <Jin^eLD> although... I do not think it actually runs the script
[05:14:52] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[05:14:57] <SnoopJ> find_spec does not, no
[05:15:03] <habnabit_> Jin^eLD, oh right there'e one more step one sec
[05:15:18] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[05:15:21] <Jin^eLD> SnoopJ: why do you ask, about the folder that is? what would be the difference?
[05:15:36] <SnoopJ> Jin^eLD, because I'm wondering if the "stuff from inside a file" part is what feels magical to you.
[05:15:42] *** Quits: akk (~akk@97-123-109-214.albq.qwest.net) (Quit: +++)
[05:16:12] <Jin^eLD> habnabit_: exec_module() ?
[05:16:18] <habnabit_> Jin^eLD, yes
[05:16:50] *** Quits: Intruder777 (~Intruder7@user/intruder777) (Quit: Leaving)
[05:17:12] *** Joins: ThanatosJ (~Thanatos@197.210.47.227)
[05:17:27] <Jin^eLD> SnoopJ: no, that was not it :) I was caught in a mindset of "this is a module that provides functionality that you need to call/instantiate/whatever" vs "this is a script that runs on itself and does stuff by itself", so it was not zip vs directory which confused me :)
[05:18:35] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[05:20:05] <Jin^eLD> habnabit_: I can't seem to figure out who is providing exec_module()
[05:20:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[05:20:18] <habnabit_> Jin^eLD, me neither..
[05:20:31] *** Joins: Thanattt (~Thanatos@197.210.47.227)
[05:20:36] <Jin^eLD> its the "loader" but who is the loader in my scenario
[05:20:38] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:20:43] *** Quits: Thanatos (~Thanatos@197.210.47.227) (Ping timeout: 246 seconds)
[05:21:00] <habnabit_> Jin^eLD, the loader is on the spec, but the zipimport loader doesn't have an exec_module
[05:21:00] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 255 seconds)
[05:21:00] *** reedrichards is now known as MrFantastik
[05:21:17] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Quit: padraigd)
[05:21:26] <Jin^eLD> but we're not using  zipimport anymore? importlib.machinery.PathFinder.find_spec() imports the zip just fine?
[05:21:33] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[05:21:48] <habnabit_> Jin^eLD, find_spec assembles the metadata, which includes a zipimport loader
[05:21:57] <Jin^eLD> oh
[05:22:43] *** Joins: Thanatos (~Thanatos@197.210.47.227)
[05:22:45] <SnoopJ> TIL the module's creation and the exec are separate steps
[05:23:04] <Jin^eLD> I think I got there too now: script.loader.exec_module(mod) => AttributeError: 'zipimporter' object has no attribute 'exec_module'
[05:23:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[05:23:10] *** Quits: ThanatosJ (~Thanatos@197.210.47.227) (Ping timeout: 246 seconds)
[05:23:14] <habnabit_> they're separate so sys.modules is populated before any module code runs
[05:23:49] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[05:25:21] <SnoopJ> is one supposed to use `spec.loader.load_module("mod")` here?
[05:25:35] <habnabit_> it looks like zipimport supports that
[05:25:41] *** Quits: Thanattt (~Thanatos@197.210.47.227) (Ping timeout: 255 seconds)
[05:25:47] <habnabit_> i'm not sure how zipimport is supposed to hook in with importlib tbh
[05:25:56] <SnoopJ> yea, this is what I snagged on last week
[05:26:00] <habnabit_> this wasn't supposed to be so confuseing
[05:26:02] *** Joins: darksun (~darksun@user/darksun)
[05:26:18] <SnoopJ> and it was frustrating enough that I just decided not to support anything but .zip and that'd be fine
[05:28:44] <Jin^eLD> SnoopJ: if I do script.loader.load_module("__main__") then I am back where I started
[05:28:56] <Jin^eLD> ie. both variables visible in global scope after scripts are done
[05:29:22] <habnabit_> Jin^eLD, yes, that's because of what i explained
[05:29:39] <SnoopJ> Jin^eLD, yes, because as documented on the page habnabit_ linked, load_module() is legacy and goes through sys.modules
[05:29:46] <SnoopJ> I guess zipimporter doesn't do the fancy new thing yet
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:32] <Jin^eLD> oh that's what the remark about sys.modules meant..
[05:30:54] <Jin^eLD> crap, 3 a.m. again
[05:31:08] <Jin^eLD> :)
[05:31:10] <SnoopJ> huh, it does say that it "should be used and reloaded" though, what's that about
[05:31:12] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[05:31:39] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:31:44] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[05:32:30] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[05:32:30] *** reedrichards is now known as MrFantastik
[05:32:42] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 255 seconds)
[05:33:03] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[05:33:23] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:33:25] <SnoopJ> it does seem to re-run the entire module, neat
[05:33:42] *** Joins: ThanatosJ (~Thanatos@197.210.47.227)
[05:34:25] *** Joins: vlm (~vlm@user/vlm)
[05:34:49] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:35:43] <Jin^eLD> SnoopJ: but reload does not clean up everything as far as I understood?
[05:36:13] *** Joins: jpe__ (~sharpergu@2001:16b8:5c04:7b00:1bce:612a:144e:2845)
[05:36:14] <SnoopJ> Jin^eLD, not sure, what do you mean by clean up?
[05:36:32] <Jin^eLD> I was reading this part: https://docs.python.org/3/library/importlib.html#importlib.reload
[05:36:46] <SnoopJ> I don't think it's the same machinery
[05:36:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:37:02] <Jin^eLD> oh
[05:37:03] *** Quits: Thanatos (~Thanatos@197.210.47.227) (Ping timeout: 265 seconds)
[05:37:12] *** Joins: pete443_ (~pete@user/pete443)
[05:37:26] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:37:26] *** Quits: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3) (Remote host closed the connection)
[05:37:35] <SnoopJ> I mean, I haven't seen the implementation, either
[05:38:23] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3)
[05:38:27] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c68:e100:3314:b2f6:65ff:8c17) (Ping timeout: 245 seconds)
[05:39:05] <SnoopJ> Jin^eLD, hmm, it does seem like names will linger. So if one version of a module defines a name, but the other doesn't, and they're loaded in that order, that name will still be there.
[05:39:25] <Jin^eLD> that's how I understood that documentation passage
[05:40:01] *** Quits: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3) (Remote host closed the connection)
[05:40:06] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:40:11] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3)
[05:40:54] *** Joins: pnoud (~pnoud@user/pnoud)
[05:41:45] <SnoopJ> Jin^eLD, in a quick test, removing the module from sys.modules does seem sufficient to get around that. Not sure if there's a better spelling
[05:42:59] <Jin^eLD> well that was my original thought which was one of the google suggestions
[05:43:04] <Jin^eLD> manually remove the vars and what not
[05:43:14] <Jin^eLD> from globals(), locals() and stuff
[05:43:19] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[05:43:42] <Jin^eLD> let me try the sys.modules thing
[05:43:58] <SnoopJ> those aren't the same approach, they're distinct
[05:44:06] <Jin^eLD> oh
[05:44:06] <habnabit_> Jin^eLD, you're kind of just confusing yourself by telling it to execute into the same module that you're running
[05:44:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:44:15] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[05:44:48] *** Joins: Thanatos (~Thanatos@197.210.47.227)
[05:44:51] <SnoopJ> yea, that's going to make a mess if you know you will be loading another module of the same name
[05:45:08] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[05:45:18] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 255 seconds)
[05:45:26] <habnabit_> SnoopJ, yeah but this is specifically loading into _the current module_
[05:45:28] <SnoopJ> I'm not sure what happens to the module if you remove it from sys.modules but someone's holding a reference to something yanked out of it
[05:45:42] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[05:45:42] <SnoopJ> habnabit_, the one wot's doing the loading, yea?
[05:45:48] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:45:55] <habnabit_> SnoopJ, yes
[05:46:03] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:46:05] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[05:46:09] <habnabit_> trampling on your own globals
[05:46:20] <SnoopJ> yea, pretty bad idea imo
[05:46:30] <SnoopJ> especially if the code is arbitrary-ish
[05:47:13] <Jin^eLD> so... is what I am trying to do even achievable or do we not know that yet?
[05:47:19] <Jin^eLD> I got somewhat lost to be honest
[05:47:33] *** Quits: ThanatosJ (~Thanatos@197.210.47.227) (Ping timeout: 255 seconds)
[05:47:39] <SnoopJ> Jin^eLD, what you want is possible, yes. Spewing the contents of the module all over your application code is a bad idea, though.
[05:47:50] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 258 seconds)
[05:47:56] <SnoopJ> Someone could even replace the code that does the loading, and then load whatever the heck they want.
[05:48:04] *** Joins: ditiris (~jimz@147.160.222.111)
[05:48:16] <SnoopJ> (which I guess is not a big deal, they're already getting loaded anyway)
[05:48:22] <Jin^eLD> SnoopJ: now why would they do that if they are allowd to upload their scripts anyway? :)
[05:48:47] <Jin^eLD> my original approach was with Python.h
[05:48:49] <SnoopJ> Jin^eLD, if you want to do it this way, you're stuck with the mess it makes.
[05:48:57] <ditiris> if i return an array of bytes from serial read, how can i convert to a list of ints?
[05:48:59] <Jin^eLD> there I could init/deinit the leaky interpreter
[05:49:13] <Jin^eLD> cffi does not offer me the option of reinitializing python
[05:49:16] <SnoopJ> If the mess is bothersome, consider if you can rewrite your application to...not do that. Leave the names in the modules namespace and get what you need by attribute access
[05:49:37] <SnoopJ> module's*
[05:49:49] <Jin^eLD> I did not quite get your suggestion
[05:49:54] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[05:50:02] <Jin^eLD> what do you mean?
[05:50:05] <SnoopJ> Jin^eLD, unpacking the names from the module is a bad idea.
[05:50:23] <Jin^eLD> "unpacking the names" means?
[05:50:42] <SnoopJ> Jin^eLD, putting all that stuff into your application's globals/locals
[05:51:01] <Jin^eLD> the "application" is just a cffi wrapper which starts the user script
[05:51:12] <Jin^eLD> actually, thats all I am trying to do...
[05:51:25] <Jin^eLD> launch a user script, but I need to be able to replace those
[05:51:30] <Jin^eLD> without restarting the main C application
[05:51:33] *** Joins: ThanatosJ (~Thanatos@197.210.47.227)
[05:51:41] <SnoopJ> I don't think my point is getting through
[05:51:56] <Jin^eLD> probably not.. sorry, could you try explaining from another angle?
[05:52:32] <Jin^eLD> first time python embedding for me, so I am over my head somewhat
[05:52:33] <SnoopJ> Jin^eLD, removing the module from sys.modules before running the load_module() again is sufficient to create a brand new module object, which contains only what it should.
[05:52:43] <Jin^eLD> ok...
[05:52:47] <Jin^eLD> ...but?
[05:52:54] <SnoopJ> But any names you take out of the old module need to be cleaned up.
[05:53:08] <Jin^eLD> cleaned up in globals()/locals()/dir() ?
[05:53:12] *** Quits: Thanatos (~Thanatos@197.210.47.227) (Ping timeout: 258 seconds)
[05:53:12] <Jin^eLD> or where?
[05:53:39] <SnoopJ> Jin^eLD, do you understand what I mean when I talk about taking a name out of the module?
[05:53:41] *** Joins: sydbarret (~anton@static-186-121-195-241.acelerate.net)
[05:53:54] <habnabit_> Jin^eLD, there's just one set of names: the module globals. its locals and dir read from the same place
[05:54:14] <Jin^eLD> SnoopJ: I assume that you mean, any variable names that the old module has defined and that are no longer present in the newly loaded module?
[05:54:35] <SnoopJ> Jin^eLD, I am talking about *your application* doing `name = mod.foo`
[05:54:40] <Jin^eLD> habnabit_: ah, so I unly need to concern myself with globals()?
[05:54:56] <SnoopJ> this creates a new reference to whatever the name `foo` refers to in that module
[05:54:57] <habnabit_> Jin^eLD, no, you only need to concern yourself with the module object
[05:55:08] <habnabit_> Jin^eLD, globals is a way to view it. it isn't itself relevant. you can't rebind it
[05:55:11] <SnoopJ> yes, if you leave stuff inside the module, you do not need to worry about anything else
[05:55:21] <Jin^eLD> SnoopJ: oh thats all reversed :) to the loaded user zip my application is the module that is providing functionality
[05:56:01] <SnoopJ> Jin^eLD, okay. I don't really think that changes anything I said...
[05:56:24] <Jin^eLD> SnoopJ: well, indeed, I could still be holding references to callbacks that the module registered with me
[05:56:52] <SnoopJ> yes, and any references you're holding can keep the corresponding values alive
[05:56:56] *** Joins: Thanatos (~Thanatos@197.210.47.227)
[05:57:01] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[05:57:06] *** Joins: gggpkm (~gggpkm@221.219.77.161)
[05:57:06] <Jin^eLD> but those I can clean up, since I know what I keep
[05:57:18] <Jin^eLD> ultimataely the callback handles to python methods are the only things that I keep
[05:57:22] <Jin^eLD> *ultimately
[05:57:47] *** Joins: ttys000 (~ttys000@user/ttys000)
[05:57:50] <SnoopJ> maybe it makes sense to encapsulate the behavior needed for each .zip in a class, and destroy the instance and the module together when getting ready to load a new .zip
[05:58:10] *** Quits: ThanatosJ (~Thanatos@197.210.47.227) (Ping timeout: 246 seconds)
[05:58:18] <Jin^eLD> the handles go to C, not sure a class as such will help?
[05:58:30] <Jin^eLD> but worth evaluating
[05:58:39] *** Quits: ditiris (~jimz@147.160.222.111) (Quit: Client closed)
[05:58:40] <Jin^eLD> right now I am still at the "how to do it" stage
[05:58:53] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:59:04] <Jin^eLD> habnabit_: I was talking about globals() so much only because all google hits of "cleaning the environment" pointed to code snippets that were trying to remove stuff from the globals dictionary
[05:59:12] <habnabit_> Jin^eLD, odd
[05:59:41] *** Quits: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3) (Remote host closed the connection)
[06:00:38] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3)
[06:01:02] <Jin^eLD> ok, but to summarize... 1. make sure to release all references I may hold on the loaded script, 2. remove it from sys.modules, 3. all names introduced by the module, 4. load the new one?
[06:01:11] <Jin^eLD> or did I get confused yet again?
[06:01:30] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[06:02:27] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:02:42] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[06:04:23] *** Quits: emerent (~quassel@p200300cd57058cd4ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[06:04:29] <SnoopJ> if you clear the module from sys.modules before the second load, the new module will contain only names it defines
[06:04:36] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 265 seconds)
[06:04:36] *** brabrax_ is now known as brabrax
[06:04:39] *** Joins: emerent (~quassel@p200300cd57058c26ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:05:54] *** Quits: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3) (Ping timeout: 240 seconds)
[06:06:27] <Jin^eLD> so then its just 1. 2. and 4., make sure to release references, remove from sys.modules, load again
[06:07:03] <SnoopJ> right, (3) you'll get for free when those names go out of scope (because the module does)
[06:07:33] <SnoopJ> and even if you didn't, they inside the module, so they're not really interfering with anything
[06:07:49] <SnoopJ> (as long as the newly loaded thing is a *new* module object, which is why we have to flush sys.modules)
[06:08:08] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[06:08:35] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[06:08:49] <Jin^eLD> SnoopJ: whats the definition of new in your case?
[06:09:31] <SnoopJ> Jin^eLD, not the same object
[06:09:42] <Jin^eLD> ok, as in "newly loaded object"
[06:09:48] <SnoopJ> as in a new object
[06:10:07] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[06:10:14] <Jin^eLD> doing module = script.load_module("__main__") repeatedly will overwrite the module variable, right?
[06:10:54] <SnoopJ> Jin^eLD, it checks if there is a module object in sys.modules with that name. If there is one, it executes the requested code using that object as a namespace, _including_ stuff that's already defined there.
[06:11:10] <SnoopJ> that's the lingering stuff importlib.reload()'s doc is warning about
[06:11:43] <Jin^eLD> ah, but since we nuke it in sys.modules prior to that its always "new"
[06:11:44] <SnoopJ> if we pop it out of sys.modules first, then the second load_module() looks, sees no module in that cache, says "okay, I'll make a brand new module object"
[06:11:53] <Jin^eLD> right, right, I think I get it now
[06:11:54] <SnoopJ> and then uses that as the working namespace
[06:13:35] <Jin^eLD> looks good
[06:14:01] <Jin^eLD> and since __main__ is not mandatory anymore because I am loading myself and not by default, I think I will pick a more distinct one
[06:14:06] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[06:14:18] <SnoopJ> yea, preferably something that isn't a dunder :)
[06:15:22] <SnoopJ> Jin^eLD, do modules make a little more sense to you now?
[06:16:06] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[06:16:06] <Jin^eLD> SnoopJ: I still need to process a few things, but I understand that they are way more flexible than I thought
[06:17:42] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:20:37] *** Joins: darksun (~darksun@user/darksun)
[06:21:29] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 255 seconds)
[06:21:30] <Jin^eLD> yep, I think it works now, at least the test scripts behaves as it should, will try it with cffi then
[06:21:37] <Jin^eLD> but now it's time to hit the sack
[06:21:44] <Jin^eLD> almost 4 a.m. doh
[06:22:01] <Jin^eLD> SnoopJ, habnabit_: again - thanks a lot for the help! really appreciate it
[06:22:02] <Jin^eLD> nite
[06:23:06] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[06:24:54] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:25:32] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 255 seconds)
[06:25:47] *** Joins: ThanatosJ (~Thanatos@197.210.47.227)
[06:26:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[06:27:11] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3)
[06:27:19] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 265 seconds)
[06:27:40] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.2)
[06:27:56] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[06:28:03] *** Quits: Thanatos (~Thanatos@197.210.47.227) (Ping timeout: 255 seconds)
[06:28:24] *** Joins: digilink (~digilink@user/digilink)
[06:29:00] *** Joins: hexa- (~hexa-@juno.lossy.network)
[06:30:58] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[06:31:17] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[06:31:26] <sydbarret> how do you call a task but tell it to execute after n seconds?
[06:31:31] <sydbarret> a celery one
[06:32:12] *** Quits: hposca (~hposca@node-1w7jr9phoke2sad1ixki5h523.ipv6.telus.net) (Ping timeout: 256 seconds)
[06:33:02] *** Joins: andrews (~andrews@user/andrews)
[06:33:06] *** Quits: ThanatosJ (~Thanatos@197.210.47.227) (Read error: Connection reset by peer)
[06:33:21] <andrews> I'm a pro gamer, can I be a programmer?
[06:33:27] <llua> no
[06:33:36] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[06:33:59] <andrews> :(
[06:34:39] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:35:15] *** Quits: andrews (~andrews@user/andrews) (Client Quit)
[06:36:26] <hodapp> ...
[06:37:11] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[06:37:12] *** Quits: zyeri (~zyeri@tilde.team) (Ping timeout: 252 seconds)
[06:37:35] *** Joins: digilink (~digilink@user/digilink)
[06:37:38] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:37:57] *** Quits: BillyZane2 (~BillyZane@91.196.220.173) (Ping timeout: 255 seconds)
[06:40:04] <jessicara> s/no/with some work/
[06:40:50] <jessicara> controversial opinion: many pro gamers are actually quite smart and understand the detail of how things function in what are playing, but might not have a c/c++ background...
[06:40:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:41:03] <jessicara> so, no "no"
[06:43:22] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[06:43:59] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:44:53] <SnoopJ> jessicara, is a c/c++ background necessary to be a programmer?
[06:45:14] <circuitbone> They left ages ago and your conjecture assertions are bunk.
[06:46:59] *** Quits: zebrag (~chris@user/zebrag) (Read error: Connection reset by peer)
[06:47:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:48:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:48:13] <jessicara> SnoopJ: no
[06:48:18] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 255 seconds)
[06:48:19] <SnoopJ> phew :)
[06:48:26] <jessicara> it's just very common in games
[06:48:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[06:48:41] <jessicara> circuitbone: of course it's bunk, i'm rarely all that serious
[06:48:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:48:56] <jessicara> apparenly it's quite hard to know when i am or aren't these days
[06:49:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 268 seconds)
[06:49:54] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 240 seconds)
[06:51:10] <SnoopJ> such a requirement would make programming a surprisingly modern activity :)
[06:51:28] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:51:46] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[06:56:04] *** Quits: gggpkm (~gggpkm@221.219.77.161) (Ping timeout: 258 seconds)
[06:56:24] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 255 seconds)
[06:59:45] *** Joins: djapo (~archangel@user/djapo)
[07:03:46] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[07:06:15] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 268 seconds)
[07:07:40] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[07:07:44] *** Joins: MartyMacGyver (~MartyMacG@2601:643:4300:8e2:4cf2:c503:ce56:22eb)
[07:07:49] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[07:08:16] *** Parts: MartyMacGyver (~MartyMacG@2601:643:4300:8e2:4cf2:c503:ce56:22eb) ()
[07:08:44] *** Joins: ripdog (~quassel@user/ripdog)
[07:08:53] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 265 seconds)
[07:08:55] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[07:09:16] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[07:10:30] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[07:10:53] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[07:12:26] *** Joins: pnoud (~pnoud@user/pnoud)
[07:16:22] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 245 seconds)
[07:16:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:17:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[07:18:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[07:19:10] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[07:20:17] *** Joins: darksun (~darksun@user/darksun)
[07:22:34] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:23:55] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[07:25:58] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[07:27:44] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Ping timeout: 256 seconds)
[07:29:14] *** Quits: sectec84 (~sectec84@24.18.109.173) (Read error: Connection reset by peer)
[07:29:34] *** Joins: sectec84 (~sectec84@24.18.109.173)
[07:35:56] *** Quits: entflammen (~entflamme@cpe-23-243-251-166.socal.res.rr.com) (Ping timeout: 258 seconds)
[07:36:31] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[07:38:15] *** Joins: riposte (~finalripo@2403-5800-3200-5c02-20c-29ff-fe65-f69c.ip6.aussiebb.net)
[07:39:29] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[07:42:57] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:44:03] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:47:32] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[07:49:08] *** Quits: sectec84 (~sectec84@24.18.109.173) (Remote host closed the connection)
[07:49:35] *** Joins: sectec84 (~sectec84@24.18.109.173)
[07:50:09] *** Quits: kor1 (~kor1@user/kor1) (Quit: Leaving.)
[07:50:24] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[07:50:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[07:52:05] <sectec84> I am trying to get Jupyter notebooks working on the Amazon Deep Learning AMI. I am getting the following error when I try to run "jupyter notebook": Bad config encountered during initialization: The 'kernel_spec_manager_class' trait of <notebook.notebookapp.NotebookApp object at 0x7f1f8e00ac10> instance must be a type, but 'nb_conda_kernels.CondaKernelSpecManager' could not be imported
[07:52:18] <sectec84>  I have tried 'pip install environment_kernels' as many online have suggested, and this didn't help
[07:53:17] *** __jmcantrell__ is now known as jmcantrell
[07:54:53] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:58:05] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[07:58:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:58:41] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[08:00:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[08:05:01] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:a456:1295:c765:d66e)
[08:08:27] *** Joins: knowmadic (~ryan@user/knowmadic)
[08:08:52] *** Joins: phax (~phax@user/phax)
[08:09:03] <sectec84> .... hmmm that's weird, I fixed it but I don't understand why. I did "source activate python3" (I was in the pytorch_latest_p37 environment before). Why would that fix it?
[08:09:36] <sectec84> Will code running in notebooks be able to access modules in pytorch_latest_p37 environment somehow?
[08:09:41] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[08:14:40] *** Quits: sydbarret (~anton@static-186-121-195-241.acelerate.net) (Read error: No route to host)
[08:15:30] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-dcfa-1836-6c8e-0e77.res6.spectrum.com) (Ping timeout: 240 seconds)
[08:24:52] *** Joins: derelict (~derelict@user/derelict)
[08:30:08] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[08:33:17] *** Joins: Synthead (~Synthead@50.35.66.182)
[08:34:15] <Synthead> I'm trying to get this script to work to recover a hikvision camera: https://github.com/scottlamb/hikvision-tftpd  Basically, it's a custom TFTP server.  The script should make TFTP listen on port 69, but I cannot connect to it via telnet on my local.  What's going on here?
[08:34:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:35:28] <Synthead> I'm running it with "sudo ./hikvision_tftpd.py --server=0.0.0.0", and I'm attempting to connect via "telnet 127.0.0.1 69"
[08:35:41] <Synthead> I get: telnet: Unable to connect to remote host: Connection refused
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:07] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:44] <Synthead> I've also tried leaving the bind IP as the default (192.0.0.128), and connecting to that port, too
[08:39:16] <jmcantrell> is there a way to specify +/- inf as an int? doing comparisons with float('inf') is making mypy unhappy
[08:39:28] *** AnySomebody is now known as Confusioned
[08:44:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-35cb-7aa5-ce54-31ee.res6.spectrum.com)
[08:46:06] *** Joins: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820)
[08:46:14] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:49:45] *** Joins: rsrx (~rsrx@103.225.150.81)
[08:50:16] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[08:52:12] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[08:54:51] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:926:525a:b432:e401)
[08:56:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[08:56:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[08:57:46] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[08:58:07] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 265 seconds)
[08:58:08] *** reedrichards is now known as MrFantastik
[08:58:31] *** Quits: Synthead (~Synthead@50.35.66.182) (Quit: Leaving)
[08:59:01] *** Joins: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[09:01:16] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:03:22] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:926:525a:b432:e401) (Quit: Textual IRC Client: www.textualapp.com)
[09:05:09] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:06:50] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[09:07:17] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:08:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:09:02] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:11:39] *** Joins: sydbarret (~anton@static-186-121-195-241.acelerate.net)
[09:12:57] *** Joins: cornduck (~cornduck@li1755-129.members.linode.com)
[09:14:28] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:14:59] *** Joins: bilb_ono (~alexmarsh@12.190.239.194)
[09:16:42] *** Quits: Allegretto (~allegrett@94-21-231-58.pool.digikabel.hu) (Ping timeout: 276 seconds)
[09:18:22] *** Joins: darksun (~darksun@user/darksun)
[09:18:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[09:20:18] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[09:21:32] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:21:42] *** Joins: Crassus (~Crassus@user/crassus)
[09:22:12] *** Quits: c4017_ (~c4017@S010664777dab66f3.vf.shawcable.net) (Ping timeout: 256 seconds)
[09:22:19] <sydbarret> anybody has used celery tasks?
[09:22:36] *** Joins: palasso (~palasso@user/palasso)
[09:23:33] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[09:25:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[09:27:15] <jinsun> jmcantrell: you can change the annotation to float, then mypy will allow both int and float, if you really want int only then I think you can't have infinity, you can use some arbitrary upper limit as infinity
[09:27:45] <jmcantrell> jinsun: ok thanks
[09:28:08] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[09:28:27] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[09:29:08] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 255 seconds)
[09:29:26] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:30:45] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 255 seconds)
[09:33:40] *** Joins: xkuru (~xkuru@user/xkuru)
[09:34:06] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[09:34:20] *** Joins: darksun (~darksun@user/darksun)
[09:34:59] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 255 seconds)
[09:36:14] *** Quits: ska (~ska@user/ska) (Quit: Leaving)
[09:37:36] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[09:37:39] *** Joins: xkuru (~xkuru@user/xkuru)
[09:39:22] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[09:39:26] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[09:39:47] *** Quits: hexeme (~hexeme@user/hexeme) (Quit: co'o ro do)
[09:40:12] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[09:41:18] *** Joins: hexeme (~hexeme@user/hexeme)
[09:43:50] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[09:45:55] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:47:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:48:28] <Pseudocrat> Is there a preferred/standard package for managing virtual environments? I've just been using venv, but I read today that venv is just a subset of virtualenv and then I read a few recommendations for pipenv over virtualenv. I've only tested venv myself
[09:49:11] <BrenBarn> there are various competing tools
[09:50:38] <Pseudocrat> Are there any of note that I didn't mention above? I'll just test them out individually and pick what feels right in that case
[09:51:51] *** Joins: doev (~doev@p54a70a0d.dip0.t-ipconnect.de)
[09:56:29] <BrenBarn> there's also pyenv I guess and I think some others too
[09:56:37] <BrenBarn> and then there's conda, which is somewhat different
[09:57:02] <MightyMu> "that's the great thing about standards, there are so many to choose from!"
[09:57:08] <Pseudocrat> lol
[09:57:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:57:52] <Pseudocrat> After some googling it looks like PyEnv is more for managing multiple python versions, but also has an extension for pyenv-virtualenv to get the whole package. And then there's another called Poetry
[09:57:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:00:11] *** Joins: pnoud (~pnoud@user/pnoud)
[10:00:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:00:33] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[10:05:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[10:13:06] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:15:29] *** Quits: hexeme (~hexeme@user/hexeme) (Quit: co'o ro do)
[10:17:51] *** Joins: hexeme (~hexeme@user/hexeme)
[10:19:14] *** Quits: phax (~phax@user/phax) (Ping timeout: 258 seconds)
[10:19:23] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-35cb-7aa5-ce54-31ee.res6.spectrum.com) (Quit: jarthur)
[10:19:46] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[10:20:48] *** Joins: tims (~tims@193-82-234-90.tpgi.com.au)
[10:21:08] *** Joins: kmh_ (~kmh@p200300df5f357b0076234ac1b2522dde.dip0.t-ipconnect.de)
[10:21:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[10:22:06] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[10:23:24] *** Quits: Scot (~Dark@2605:6440:1003::420) (Ping timeout: 255 seconds)
[10:23:27] *** Quits: computeiro (~Wender@189.37.67.197) (Ping timeout: 258 seconds)
[10:23:31] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[10:23:34] <Thanatos> Hello everyone
[10:28:02] <trashbird> hell
[10:28:09] <trashbird> o
[10:28:41] *** Joins: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net)
[10:28:42] <yolk> Hello
[10:30:26] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[10:32:07] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[10:32:35] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Remote host closed the connection)
[10:32:48] <twainwek> hi
[10:36:42] <kmh_> hi
[10:43:09] *** Quits: sydbarret (~anton@static-186-121-195-241.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[10:43:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:46:29] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:40] *** Joins: slav0nic (slav0nic@python.su)
[10:46:57] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[10:47:06] *** Joins: seednode (~seednode@user/seednode)
[10:47:15] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 255 seconds)
[10:51:51] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[10:54:46] *** Joins: zmt00 (~zmt00@user/zmt00)
[10:55:40] *** Joins: just-me (~just-me@94.235.8.252)
[10:57:31] <graingert> Pseudocrat: poetry is pretty great
[10:57:54] *** Joins: Ara (~Ara@user/ara)
[10:57:56] <graingert> Pseudocrat: but I use pip-tools and python3.9 -venv
[10:58:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:58:14] <just-me> Hello, I'm having trouble with my bank account object in Python, can you guys help out?
[10:58:28] <just-me> Here is the block of code: https://pasteboard.co/Kby6pjz.png
[10:58:42] <just-me> And here is the error: https://pasteboard.co/Kby6O82.png
[10:59:57] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[10:59:58] <Repiphany> You're overwriting the function withdraw with an int in the first line of its definition
[11:01:00] <just-me> Was it that thing the whole time? But when I did the same in deposit it fixed a problem
[11:01:16] <just-me> Oh well it works now, thank you :)
[11:01:26] *** Joins: upsala (~zcb@185.213.155.160)
[11:01:30] <Repiphany> What was your intention with self.withdraw = withdraw
[11:01:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:02:20] <Repiphany> You keep reusing variable names and that's going to lead to problems
[11:02:34] <Repiphany> self.balance is a function but you also want to have it be a number
[11:02:41] <just-me> I don't remember in detail, deposit method wasn't working and when I put "self.deposit = deposit" in it did
[11:02:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:03:05] <just-me> I thought it would work with withdraw method too, I didn't even know I was overriding anything
[11:03:06] <Repiphany> Why even make functions that returns a string of the numbers
[11:03:57] <just-me> You mean balance method?
[11:04:15] <sectec84> Does anyone here have experience using the Deep Learning AMI (DLAMI) on AWS? I am trying to run some machine learning stuff using Torch/CUDA and torch.cuda.is_available() keeps returning false, even when I'm in the Torch/CUDA environment and running on a EC2 instance with GPUs
[11:04:26] <Repiphany> Literally all of your functions that you've defined are also supposed to be strings or numbers
[11:04:32] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[11:04:32] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[11:04:50] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[11:06:48] <just-me> I don't know what do you mean by that.
[11:07:01] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[11:08:33] *** Quits: just-me (~just-me@94.235.8.252) (Quit: Leaving)
[11:09:28] <voldial> How is class Client used as a context manager when it has no __enter__? https://github.com/coleifer/greendb/blob/master/greendb.py#1222 README.md says "If you wish to explicitly connect, the client may be used as a context manager." but when I try to "with" it: https://bpa.st/VNWA yea, "AttributeError: __enter__" am I missing something?
[11:10:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[11:10:05] *** Joins: iflema (~ian@user/iflema)
[11:10:44] *** Joins: djapo (~archangel@user/djapo)
[11:10:50] * voldial wraps it
[11:11:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[11:11:54] <dav1d> voldial: https://docs.python.org/3/library/contextlib.html#contextlib.closing
[11:12:13] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[11:12:31] <supakeen> I'd suspect they want you to use contextlib.closing as well, it isn't written very clearly.
[11:13:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:13:30] *** Quits: kmh_ (~kmh@p200300df5f357b0076234ac1b2522dde.dip0.t-ipconnect.de) (Quit: Leaving)
[11:14:03] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 258 seconds)
[11:15:27] <voldial> dav1d: supakeen thanks, haha, I was writing the exact example code there. Gotta remember to use contextlib.
[11:16:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:17:20] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 252 seconds)
[11:17:51] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 255 seconds)
[11:18:04] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[11:18:49] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[11:18:55] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[11:19:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[11:20:29] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:20:30] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[11:20:52] *** Quits: doev (~doev@p54a70a0d.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[11:21:36] *** Joins: brabrax (~brabrax@user/brabrax)
[11:26:24] *** Quits: dalan6 (~dalan@27-32-31-114.tpgi.com.au) (Quit: dalan6)
[11:26:54] *** Joins: dalan6 (~dalan@27-32-31-114.tpgi.com.au)
[11:27:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:29:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:30:51] *** Joins: califax (~califax@user/califx)
[11:31:26] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:31:29] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:32:28] <voldial> is it possible to get isort to make pylint happy? it reorganizes my imports, and it's better, but it seemingly cant do stuff like "C0413: Import "import binascii" should be placed at the top of the module (wrong-import-position)" https://github.com/PyCQA/isort
[11:34:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[11:35:05] *** Joins: darksun (~darksun@user/darksun)
[11:35:25] *** Joins: tspng (~tspng@2a02:168:a1a1:1:2841:b021:a44c:1995)
[11:35:29] <AhmedAmerican_> I'm unable to read the full sheet , here's my code but for somehow it's only reads 1457 rows instead of `769396`
[11:35:29] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[11:35:38] <AhmedAmerican_> ^ code https://bpa.st/R7WA
[11:39:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[11:40:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[11:42:43] *** Joins: rendar (~rendar@user/rendar)
[11:43:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Quit: Leaving)
[11:45:59] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:46:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:47:19] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[11:48:13] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[11:49:21] *** Quits: dld (~davidlowr@73.61.9.64) (Ping timeout: 255 seconds)
[11:50:09] <AhmedAmerican_> what could be the reason for pandas to read specific rows from the sheet?
[11:51:04] <BrenBarn> the code you posted doesn't use pandas
[11:51:25] *** Joins: dld (~davidlowr@73.61.8.183)
[11:51:34] <BrenBarn> oh, I see, you write it to a file
[11:52:20] <BrenBarn> it's hard to say without seeing the file
[11:52:40] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:53:42] <AhmedAmerican_> BrenBarn: direct link to download the file https://rigcount.bakerhughes.com/static-files/802b7dd4-05ea-44c1-8f95-680f4b5718a3
[11:58:09] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[11:58:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[11:59:33] <jinsun> AhmedAmerican_: I tried reading that file, and weirdly sheet_name=1 gives only 1457 rows but sheet_name="Master Data" gives all the rows
[11:59:45] *** Joins: manti7 (~manti7@176.10.104.94)
[12:00:05] <AhmedAmerican_> that's sound a BUG
[12:00:16] *** Joins: pnoud (~pnoud@user/pnoud)
[12:00:26] <jinsun> ya eiter pandas bug or pyxlsb bug
[12:01:15] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[12:01:31] <AhmedAmerican_> sure it will be the reader which is `pyxlsb`
[12:01:42] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[12:08:09] <graingert> voldial: I disable pylint's wrong-import-position
[12:08:31] <graingert> voldial: and use isort directly with `--profile=black --add-imports='from __future__ import annotations'`
[12:08:46] <graingert> voldial: (via pre-commit.ci
[12:08:47] <graingert> )
[12:09:09] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[12:09:33] *** Joins: Jigsy (~Jigsy@user/jigsy)
[12:11:46] <graingert> voldial: I think if you put your isort config and pylint config both in pyproject.toml pylint should pick it up
[12:11:51] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[12:11:52] *** Joins: wyclif (~wyclif@user/wyclif)
[12:12:01] <graingert> you need like pylint 2.8+ and isort 5+
[12:13:45] *** Joins: imp (~imp@186.205.11.214)
[12:16:58] <voldial> graingert: sweet, I'll try all that.
[12:17:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:18:33] <voldial> I havent run into a bug yet caused by a wrong-import-position, I feel like yea, that's good to know... but it's just adding globals and as long as there's not code mixed in with the imports, or circular imports, it wont matter??
[12:19:02] *** Joins: entuland (~entuland@user/entuland)
[12:19:57] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[12:21:22] *** Quits: codl (~codl@user/codl) (Ping timeout: 245 seconds)
[12:22:33] *** Joins: darksun (~darksun@user/darksun)
[12:22:57] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[12:23:32] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 265 seconds)
[12:23:40] <jinsun> AhmedAmerican_: the problem is that the excel file has 2 hidden sheets, and the 2nd sheets really has 1457 rows, the Master Data is actually the 4th sheet, so sheet_name=3 will work
[12:23:42] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Ping timeout (120 seconds))
[12:23:59] *** Parts: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) ()
[12:24:14] <Widdershins> data arson
[12:24:21] <jinsun> so not really a bug
[12:25:13] <voldial> excel format has hidden sheets? eh jeesh.. how did I just not a$$uMe that
[12:25:37] <jinsun> coincidentally the 2nd sheet had the same columns as the 4th so it was hard to notice
[12:26:05] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[12:26:20] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[12:26:38] <AhmedAmerican_> jinsun: Thank you. that's make sense!
[12:27:43] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 246 seconds)
[12:28:08] *** Joins: minip (minip@user/minip)
[12:30:12] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[12:30:48] *** Quits: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) (Client Quit)
[12:30:53] *** Joins: Pickchea (~private@user/pickchea)
[12:31:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[12:34:50] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[12:34:50] *** Quits: tspng (~tspng@2a02:168:a1a1:1:2841:b021:a44c:1995) (Remote host closed the connection)
[12:37:11] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:57] *** Quits: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) (Quit: leaving)
[12:39:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:59] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:41:27] <AhmedAmerican_> jinsun: `x = pd.ExcelFile(fname); x.sheet_names` will output `['Current Week Summary', 'Current Week Summary Data', 'Master Data Pivot', 'Master Data']` here's a clue for it too
[12:46:10] <jinsun> ya I did a similar thing using pyxlsb to find that out
[12:47:35] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[12:50:43] *** Joins: [Syntax] (syntax@charger.kire.net)
[12:50:50] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 252 seconds)
[12:51:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[12:51:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[12:52:00] <[Syntax]> Ive coded myself into a corner.. Im just getting started learning python..
[12:52:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:52:53] <[Syntax]> Would someone be willing to help me with a loop, that goes thru a sql result, and looks up the corresponding row from another table using the value and field name from the first result?
[12:52:54] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[12:53:19] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[12:53:31] <[Syntax]> trying to transition out of php for backend stuff and into python..
[12:56:24] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:57:57] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:59:00] <yolk> [Syntax]: here's a list comprehension that might help if you have a list of rows in `result` `[lookup(row["field_name"], row["value"]) for row in result]`
[12:59:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[12:59:25] <yolk> lookup is a function for grabbing that row from your other table
[12:59:29] *** Joins: darksun (~darksun@user/darksun)
[12:59:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 255 seconds)
[12:59:36] *** Lord_of_Life_ is now known as Lord_of_Life
[13:00:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:02:29] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[13:02:39] <[Syntax]> Im lost.. is that a function of pandas?
[13:03:56] *** Quits: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) (Quit: leaving)
[13:04:37] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[13:04:45] *** Joins: Vonter (~Vonter@user/vonter)
[13:04:57] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[13:05:31] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[13:06:34] <yolk> sorry my example isn't great without any context. do you have something your stuck on in particular [syntax]?
[13:07:04] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[13:07:32] *** Joins: codl (~codl@user/codl)
[13:08:19] <[Syntax]> lemme see if I can pastebin something to demonstrate what it is Im working with..
[13:09:21] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[13:09:40] <p-i-> This is kinda sad.
[13:09:54] <p-i-> I made a very obvious feature request to the VSCode team: https://github.com/microsoft/vscode/issues/124656#issuecomment-848613812
[13:10:00] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:10:14] <p-i-> And their process kills it if it doesn't get 20 upvotes within 60 days.
[13:11:00] <p-i-> So their process will favour requests by those with social networking clout over requests that are inherently valuable.
[13:11:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[13:16:59] <gcbirzan_> Is there a way to tell pyenv to not make a symlink when creating a virtualenv?
[13:17:01] *** Joins: amirouche (~amirouche@user/amirouche)
[13:17:03] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[13:17:05] *** gcbirzan_ is now known as gcbirzan
[13:17:19] <amirouche> hello, is there blake3 bindings using cffi? my google-fu is failing me
[13:18:30] *** Quits: nac (~nac@user/nac) (Ping timeout: 276 seconds)
[13:19:26] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[13:20:06] <ZenixOwler> if a = -1 and between doing abs(a) and -a, which is seem to be fast ? this isn't very significant for just a few tries but not sure when it comes to scalability tho
[13:20:10] <ZenixOwler> faster*
[13:20:55] <gcbirzan> You can use timeit to fin dout.
[13:21:58] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[13:22:40] *** Joins: upsala (~zcb@185.213.155.160)
[13:22:54] <amirouche> I predict -a is faster.
[13:23:15] *** Joins: sazawal (~sazawal@182.68.81.25)
[13:24:00] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[13:24:15] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Connection closed)
[13:24:42] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:24:48] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:25:45] <gcbirzan> 22 vs 36 ns per call on my machine, yea
[13:25:49] <ApostleInTriumph> Hello. Is it a good idea to use multiprocessing while performing inference in pytorch? each forward pass during inference takes 2min but just 2gb of memory (with 40GB available in the machine). I've 190 such forward passes. What is the best way to parallelise?
[13:27:04] <gcbirzan> are you sure it's using just one CPU/GPU whatever?
[13:27:14] <gcbirzan> because otherwise it won't make any sense to do that
[13:27:53] <ApostleInTriumph> gcbirzan yes
[13:28:20] *** Quits: mcfrdy (uid507892@user/mcfrdy) ()
[13:28:28] <ApostleInTriumph> I've 64 available PUs and 1GPU
[13:30:12] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[13:31:48] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:32:40] <amirouche> is there a function in asyncio stdlib to make a coroutine out of a regular function?
[13:33:25] <gcbirzan> ApostleInTriumph: though I guess it would work, on linux at least. you can make a pool of let's say 16 workers you push the tasks to
[13:33:41] <ApostleInTriumph> gcbirzan thanks
[13:33:45] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 255 seconds)
[13:34:48] <jinsun> ZenixOwler: abs(a) and -a are not the same always, use what you really want to do in your code
[13:35:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:40:03] *** Joins: timkofu (~timkofu@user/timkofu)
[13:41:22] <timkofu> Hi
[13:41:23] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:41:46] <p-i-> Suppose I am constructing a large dict of {'timestamp': ..., 'payload':...} items. They should arrive in ascending timestamp, but it's not guaranteed. I def. want to STORE / access them by ascending timestamp.
[13:41:53] <p-i-> What's a good primitive to use?
[13:42:00] <p-i-> ~1 million items
[13:43:47] *** Joins: darksun (~darksun@user/darksun)
[13:44:15] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Client Quit)
[13:44:40] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:45:10] <AhmedAmerican_> p-i-: so your goal to have a sorted dict?
[13:47:09] *** Quits: sectec84 (~sectec84@24.18.109.173) (Ping timeout: 265 seconds)
[13:48:34] <sazawal> Hi all. Is there a way I can get the undercorated function and run it in a parallel process? So far I have tried setting the undecorated function reference from the decorator to my class (containing the decorated function) but it didn't work. I also tried using functools.wraps to get the undecorated function as myfunction.__wrapped__, but it didn't work either. I have no issues on Linux, just that the code is not running on Windows.
[13:48:50] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[13:49:14] <p-i-> AhmedAmerican_: yup
[13:49:25] *** Quits: koltrast (32216d47@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[13:49:48] <p-i-> hmm I have duplicated timestamps. I guess I need to use a list.
[13:50:20] <AhmedAmerican_> @p-i- or tuple ?
[13:50:31] <p-i-> Yes, much faster
[13:52:03] <timkofu> p-i-: dict(sorted(x.items(), key=lambda d: d[0]))
[13:52:05] *** Quits: codl (~codl@user/codl) (Read error: Connection reset by peer)
[13:52:32] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Quit: Leaving)
[13:52:33] *** Joins: codl (~codl@user/codl)
[13:52:40] <timkofu> p-i-: Ah, dups ... would you be able to make the timestamps have higher resolution? Like millisecond res?
[13:52:42] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 240 seconds)
[13:52:45] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:53:12] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[13:54:18] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Connection closed)
[13:54:50] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[13:54:59] *** Joins: koltrast (403c30d0@h77-53-57-114.cust.a3fiber.se)
[13:56:04] <acresearch> people, is there a way to get the number of lines in a text file without opening it?    if i have a VERY VERY large text file that would take 3 hours to loop through, is there a faster way than looping?
[13:56:07] <AhmedAmerican_> i think list comprehension will be more faster.
[13:56:26] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153)
[13:56:40] <AhmedAmerican_> acresearch: which OS you are using ?
[13:57:00] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Client Quit)
[13:57:10] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:57:18] <acresearch> AhmedAmerican_: linux
[13:57:24] <pyfisch> acresearch: I think you need to read the file. However under Linux (and unix systems)  the wc command is the fastest way
[13:58:00] <AhmedAmerican_> acresearch: just use the OS commands! it's will be more quick as it's deal with the fork directly.
[13:58:18] <acresearch> AhmedAmerican_: pyfisch ok
[13:58:21] <AhmedAmerican_> `wc -l file`
[13:58:27] <timkofu> acresearch: You could call "wc -l" from subprocess.check_output()
[13:59:01] <acresearch> ok i am not familair with how to use subprocess, i usually use os.system()
[13:59:18] <acresearch> but wc -l will be faster? isn't it the same thing? it loops through the lines?
[13:59:40] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[13:59:50] <AhmedAmerican_> `out = subprocess.run('wc -l file', shell=True)`
[14:00:26] <jinsun> wc will also loop through the file, but I guess since it is a C loop it will be a bit faster, don't expect too much improvement though
[14:00:47] <pyfisch> AhmedAmerican_: why shell=True?
[14:01:17] <timkofu> acresearch: Much. Give it a shot and let us know?
[14:01:24] <acresearch> timkofu: ok
[14:01:26] <acresearch> thanks
[14:01:41] <AhmedAmerican_> otherwise refer back to docs :) in case
[14:01:48] <AhmedAmerican_> btw just found out https://pypi.org/project/wcpy/
[14:02:55] <pyfisch> AhmedAmerican_: that uses a tokenizer to actually count words. Its very useful if you want to know how many words are in a document but not if you need a fast line count
[14:03:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[14:03:11] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[14:03:15] <AhmedAmerican_> make sense
[14:03:34] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[14:04:46] <sazawal> Hi all. Is there a way I can get the undercorated function and run it in a parallel process? So far I have tried setting the undecorated function reference from the decorator to my class (containing the decorated function) but it didn't work. I also tried using functools.wraps to get the undecorated function as myfunction.__wrapped__, but it didn't work either. I have no issues on Linux, just that the code is not running on Windows.
[14:06:03] <AhmedAmerican_> `undecorated function` = `regular function` so calling it in parallel is possible!
[14:06:04] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[14:06:35] <AhmedAmerican_> it all depends on how you call it from your class.
[14:06:36] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 255 seconds)
[14:06:53] <pyfisch> acresearch: subprocess.run(["wc", "-l", file], check=True, stdout=subprocess.PIPE, text=True) is the complete command I would use. Check with the docs what the parameters mean
[14:07:38] <acresearch> pyfisch: thanks, let me check it now
[14:07:38] <AhmedAmerican_> ^ https://docs.python.org/3/library/subprocess.html#subprocess.run
[14:08:31] *** Quits: AhmedAmerican_ (sid470527@id-470527.charlton.irccloud.com) (Quit: Updating details, brb)
[14:09:17] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 268 seconds)
[14:09:26] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.27.153) (Quit: Connection closed)
[14:12:05] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:13:06] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[14:13:44] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[14:14:01] *** Joins: rsx (~dummy@ppp-188-174-154-158.dynamic.mnet-online.de)
[14:15:49] <jazzy> oh how nice
[14:15:53] <jazzy> nearly all of #python has migrated
[14:15:58] <jazzy> impressive given the number
[14:16:13] <jazzy> how united irc is
[14:17:49] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[14:19:50] <Luyin> it's not irc, it's the FLOSS community IMHO :)
[14:19:56] <Luyin> welcome to the light side!
[14:20:32] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Read error: Connection reset by peer)
[14:20:42] *** Joins: AhmedAmerican (sid470527@id-470527.charlton.irccloud.com)
[14:21:03] <AhmedAmerican> 😏
[14:21:31] <nubonix> looking for some help with path, as uivcorn is unable to find my file and the function main [trying to have a webserver that is run via an .exe] code+tb :https://bpa.st/XCPA
[14:21:37] <nubonix> pathing*
[14:22:15] *** Joins: Nanobot567 (~Nanobot56@024-181-099-188.res.spectrum.com)
[14:22:41] <dav1d> nubonix: NBMS.apis.agent:main?`
[14:23:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:23:36] <nubonix> dav1d: sec, works via .py, building .exe now
[14:24:12] <sazawal> AhmedAmerican, Please have a look at this basic setup https://bpa.st/XTSA . The purpose of the decorator is to return the queue variable and to set the arguments of the original function. When run is called, the function is executed with the earlier provided arguments and the queue variable.
[14:24:56] <nubonix> dav1d: `Error loading ASGI app. Could not import module "NBMS.apis.agent"` perhaps i need to use resource_path?
[14:25:17] *** Joins: frostschutz (~frostschu@2a01:c23:78eb:dd00:3b54:54bf:2392:d97e)
[14:25:57] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[14:26:20] <nubonix> dav1d: hmm, im not sure
[14:28:00] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:30:27] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[14:31:20] <nubonix> when i use resource_path i get `Error loading ASGI app. Could not import module "C"`
[14:37:55] <nubonix> hmmm... i can find the certs this way... but i cant find the agent.py [app.py] `resource_path('NBMS/apis/agent.py')`
[14:38:24] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[14:38:26] <nubonix> correction* the paths are  identical when using this
[14:39:17] <jinsun> nubonix: can't you pass the main function directly to uvicorn.run?
[14:39:29] <nubonix> jinsun not with an .exe
[14:39:44] <nubonix> mm, should be able to*
[14:39:57] <nubonix> it appears that it cant find agent.py
[14:40:22] <jinsun> I mean not as a string but the function object itself
[14:40:36] <nubonix> e.g?
[14:41:00] <nubonix> `uvicorn.run(f"{resource_path('NBMS/apis/agent.py')}:{main}",` ?
[14:41:29] *** Joins: goldfish (~goldfish@user/goldfish)
[14:41:39] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:41:46] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[14:41:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:42:35] <jinsun> I was tihnking `from NBMS.apis.agent import main; uvicorn.run(main, ...)`
[14:42:57] *** Joins: wyclif (~wyclif@user/wyclif)
[14:43:00] <nubonix> thats a circular import though?
[14:43:00] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[14:43:23] <nubonix> or should i just create another file that runs it and build that exe instead
[14:43:53] <nubonix> seems kinda odd imo but i can try if you want
[14:44:55] <nubonix> main() returns a starlette app object
[14:45:08] <nubonix> forgot to mention that....
[14:45:12] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:45:37] <nubonix> ohhhh you mean the main function without the file prefix
[14:45:50] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[14:46:15] <nubonix> trying now
[14:46:20] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[14:47:24] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[14:47:28] <nubonix> mb jinsun didnt know what you meant
[14:47:38] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[14:47:52] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:47:56] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[14:48:33] *** dshikoh is now known as count
[14:49:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:49:05] *** Joins: goldfish (~goldfish@user/goldfish)
[14:49:20] <nubonix> WOOO :D
[14:49:25] <nubonix> Woooo* :D
[14:49:32] <nubonix> ty ty! jinsun
[14:49:40] <nubonix> thank you as well dav1d  :)
[14:50:08] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[14:51:08] *** count is now known as dshikoh
[14:51:10] *** dshikoh is now known as count
[14:53:04] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[14:53:17] *** Joins: zaquest (~notzaques@5.128.210.178)
[14:54:23] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:56:11] <nubonix> alright, still kinda need help with the ssl files part
[14:56:15] <nubonix> ` ssl_certfile=resource_path('NBMS/certs/server.crt'),`
[14:56:45] <nubonix> that gives me the actual path, but for some reason i am unable to run it via the .py file [havent tried the .exe yet]
[14:57:30] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[14:57:40] <nubonix> ouput from `resource_path('NBMS/certs/server.crt')` : `'C:\\Users\\nubonix\\PycharmProjects\\NBMS\\NBMS/certs/server.crt'`
[14:57:46] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[14:58:13] <nubonix> output from absolute path via pycharm : `C:\Users\nubonix\PycharmProjects\NBMS\NBMS\certs\server.crt`
[14:58:23] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:59:00] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[14:59:01] *** Joins: wyclif (~wyclif@user/wyclif)
[15:00:18] *** Joins: pnoud (~pnoud@user/pnoud)
[15:02:58] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Read error: Connection reset by peer)
[15:03:07] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[15:03:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[15:04:11] *** Quits: p-i- (~Ohmu@node-467.pool-118-173.dynamic.totinternet.net) (Quit: Leaving...)
[15:04:26] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[15:04:49] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[15:04:52] *** Joins: wyclif (~wyclif@user/wyclif)
[15:05:12] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[15:05:35] *** Joins: upsala1 (~zcb@193.32.127.218)
[15:05:40] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:06:02] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[15:06:29] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[15:06:50] *** Joins: upsala2 (~zcb@185.213.155.160)
[15:09:38] <ChrisWarrick> nubonix: are you sure this path doesn't work?
[15:09:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[15:09:53] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:10:01] <nubonix> ChrisWarrick: wdym
[15:10:10] *** Quits: upsala1 (~zcb@193.32.127.218) (Ping timeout: 252 seconds)
[15:10:24] <ChrisWarrick> nubonix: windows will work with mixed slashes
[15:10:24] <nubonix> suchas a test via echo or w/e cat windows equilivilent
[15:10:30] *** Quits: count (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[15:10:49] <ChrisWarrick> you can use `cat` in powershell, `type` in legacy cmd
[15:11:00] <nubonix> na, im running lstc
[15:11:05] <nubonix> ill use type tho, thx
[15:11:06] <nubonix> sec
[15:11:24] <nubonix> o weird, guess cat does work
[15:11:58] <nubonix> yeah, both can be cat'd
[15:12:30] <nubonix> and the outputs r identical
[15:12:41] <ChrisWarrick> and both can be open()ed in python
[15:13:19] <nubonix> via the .py file?
[15:13:24] <nubonix> sec
[15:13:28] <nubonix> well, few mins
[15:13:37] *** Quits: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820) (Ping timeout: 246 seconds)
[15:13:55] *** Joins: Brocker (~NoBody@user/brocker)
[15:15:08] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[15:16:07] <nubonix> cannot be loaded by python `FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\nubonix\\PycharmProjects\\NBMS\\NBMS\\apis\\NBMS\\certs\\server.crt'`
[15:22:43] <nubonix> o
[15:24:29] *** Joins: Allegretto (~allegrett@77-234-81-76.pool.digikabel.hu)
[15:25:50] <dnns01> Hey, I have a method that gets called once a second in an infinite loop. In that method I want to send some data via a websocket. What would be the best way to do that?
[15:27:03] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[15:28:30] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 255 seconds)
[15:29:47] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[15:32:42] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[15:32:55] <beeza> hi, can I somehow always show captured output?
[15:33:30] <beeza> with pytest that is
[15:33:44] <beeza> instead of just showing it when there is a failure
[15:33:45] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[15:34:16] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[15:34:27] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[15:34:37] *** Joins: azazello (~azazello@109.75.158.195)
[15:35:41] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:59] <beeza> pytest -rA
[15:38:55] <nubonix> ChrisWarrick: so atm my resource_path is : `C:\Users\nubonix\PycharmProjects\NBMS\NBMS\apis\..\certs\server.crt` which can be opened via python, but i cant see it when i use pyinstaller
[15:40:13] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 246 seconds)
[15:43:49] *** Joins: rbdr (~rbdr@37.120.25.13)
[15:46:13] *** Joins: samleh (~slfeneaso@2001:470:69fc:105::5240)
[15:46:27] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[15:50:36] *** Joins: p-i- (~Ohmu@node-467.pool-118-173.dynamic.totinternet.net)
[15:50:37] *** Joins: foobaz212 (~foobaz212@2.49.11.81)
[15:51:18] <p-i-> I have made a couple of `@dataclass class Foo:...` `@dataclass class Bar:...`
[15:51:21] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:51:27] <p-i-> Now I have an array of mixed foo and bar objects
[15:52:36] <p-i-> How to deduce if an item is a Foo or Bar instance?
[15:52:48] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Ping timeout: 255 seconds)
[15:53:01] <p-i-> type(arr[k]) gives __main__.Foo
[15:53:37] <p-i-> Surely one can do better than `isFoo = 'Foo' in str(type(x))`...?
[15:53:55] *** Joins: Pickchea (~private@user/pickchea)
[15:54:18] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[15:54:35] *** Joins: spithash (~spithash@user/spithash)
[15:55:10] <jinsun> p-i-:  `isFoo = isinstance(x, Foo)`?
[15:55:32] <p-i-> yeah, that's coming back False for some reason
[15:56:00] *** Joins: akaWolf (~akaWolf@akawolf.org)
[15:56:22] <p-i-> I'm working out of a Notebook in VSCode, I don't know if that should have any bearing on it.
[15:57:14] <jinsun> hmm you might hve redefined Foo then
[15:57:25] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:3e00:8986:ae6e:2aac)
[15:58:12] <p-i-> huh. It works in ipython fine.
[15:58:30] <p-i-> Maybe each cell has its own __main__
[16:00:00] <jinsun> no, but you might have ran the cell with the class definition again after making the list of objcts, then you lost the original Foo
[16:01:37] <p-i-> damn this is confusing. Testcase working in notebook cells passes fine.
[16:02:08] <p-i-> And defn is in same cell as I create the objects, at root level (0 indent). There's only one cell in the notebook!
[16:02:17] <p-i-> And I just ran it.
[16:03:27] <p-i-> f[0], type(f[0]) gives (Depth(x=...)), __main__.Depth) but isinstance(f[0], Depth) gives False
[16:03:46] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 250 seconds)
[16:03:54] <AhmedAmerican> someone created Amazon RDS database before ? is it a big deal or easily enough to communicate with with Python?
[16:03:55] *** jpe__ is now known as sharperguy
[16:04:29] <p-i-> BUT, if I create a fressh `@dataclass class Foo: x:int; foo = Foo(42)`, `isinstance(foo, Foo)` gives True
[16:06:37] *** Quits: sazawal (~sazawal@182.68.81.25) (Quit: Leaving)
[16:07:05] *** Quits: Qtronix (~qtronix@cm-84.213.108.169.getinternet.no) ()
[16:08:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[16:08:20] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[16:09:30] *** Quits: foobaz212 (~foobaz212@2.49.11.81) (Quit: Client closed)
[16:09:48] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:09:48] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[16:12:08] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 252 seconds)
[16:12:14] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:13:35] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[16:14:52] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[16:19:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:20:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:20:29] *** Joins: Oddity (Oddity@user/oddity)
[16:20:47] <p-i-> and now it works. I have no idea what I messed up.
[16:21:36] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[16:22:04] *** Quits: imp (~imp@186.205.11.214) (Quit: imp)
[16:22:25] *** Joins: mexen (uid495612@user/mexen)
[16:26:30] *** Joins: j00n (~mario@user/j00n)
[16:27:44] <bjs> p-i-: with notebooks it's almost always that there was some stale state from a previous cell
[16:27:58] <bjs> like you ran the cell that defined Foo twice or something
[16:29:24] *** Joins: resmo (~resmo@2a00:d420:9:8a00:d916:8653:276f:70b6)
[16:30:45] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[16:30:59] *** Joins: tspng (~tspng@2a02:168:a1a1:1:217a:a539:7659:429b)
[16:31:35] <nubonix> anyone know why a resource path works in a .py file, but not when using pyinstaller?
[16:32:02] <nubonix> ive added the path that im using via resource path to my data in my .spec
[16:32:03] *** Joins: thiras (~thiras@user/thiras)
[16:32:18] <rannnn8888> where i wrong in the xpath ? i try get the text in the news https://dpaste.org/Owq8
[16:32:36] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[16:34:19] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:34:53] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:05] <rannnn8888> nubonix you good in this :d ?
[16:36:15] <nubonix> i can webscrap yes
[16:36:26] <nubonix> id suggest using a different browser, paths like that almost never work
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:39] <nubonix> webscrape*
[16:36:40] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[16:37:13] <nubonix> id just use bs4 to find it instead of using an xpath
[16:37:15] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[16:37:18] *** Joins: acresearch (~acresearc@user/acresearch)
[16:37:23] <rannnn8888> nubonix you maybe can cheack in your browser ? i try get all the text in div "id="release_body""
[16:37:30] <nubonix> thats all you need
[16:37:38] <nubonix> soup.find(id='release_body')
[16:37:46] *** Joins: slevin (~slevin@142.79-160-14.customer.lyse.net)
[16:38:18] <nubonix> checking in my browser doesnt help you learn
[16:38:56] <nubonix> thats a very weird way to parse things imo
[16:39:08] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[16:39:08] <nubonix> soup = bs(r.content, 'lxml.parser')
[16:39:27] <nubonix> instead of using a tree, is what id suggest
[16:40:11] <rannnn8888> soup = BeautifulSoup(resp2.text, "lxml")
[16:40:11] <rannnn8888>             res = soup.find(id='release_body')
[16:40:33] <rannnn8888> yep i work have strip do remove the html class ?
[16:40:48] <nubonix> you can do a .text() on res
[16:41:13] <nubonix> this usually works, and if not there is another method that does, which i cant remember atm
[16:41:26] <rannnn8888> AttributeError: 'NoneType' object has no attribute 'text'
[16:41:39] <rannnn8888> k i check in ggl
[16:42:00] <nubonix> rannnn8888: what does that error mean?
[16:43:08] *** PJBoy is now known as Guest5421
[16:43:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:43:44] <slevin> hi all. i'm writing up a simple-ish python script for automating some tasks on a server. it's for work, so there quite high standards with regards to code quality and security. two things i think is important to get right from the start, is the error handling pattern (the script will be used by humans, so think input validation stuff) and unit
[16:43:45] <slevin> tests to again provide some assurance of the input validation and logic. any tips for getting started? looking for simple, effective error handling patterns and  a unit test library
[16:44:30] <nubonix> slevin what is your threat model?
[16:45:21] <slevin> the script will be used by unprivileged users to do privileged tasks, so could be nice target for local privilege escalation
[16:45:23] <nubonix> what kind of access do you have [where the program will be living]
[16:46:01] <nubonix> alright
[16:46:26] <rannnn8888> nubonix dont know if i print only the string i get the data https://dpaste.org/ARC6
[16:46:26] <nubonix> well, there has to be some trust otherwise it wont work
[16:46:28] <slevin> it's a unix-based server, so local users will given execution rights to the scripts to perform some file manipulation tasks in a specific directory (hint `/srv/sftp`)
[16:46:36] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 272 seconds)
[16:46:41] <nubonix> rannnn8888: should probably learn what the error is
[16:46:48] *** Quits: Guest5421 (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[16:47:11] <nubonix> slevin okay, so specific users or groups of users have access to specific programs
[16:47:33] *** Joins: jelmer (~jelmer@user/jelmer)
[16:47:46] <nubonix> slevin so thats just authentication
[16:47:46] <slevin> nubonix: it's trusted users, so it's mostly to avoid human error as removing the wrong data would be bad
[16:47:56] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 258 seconds)
[16:48:49] <nubonix> i think a typical way to do this would be creating a webserver, and have that webserver available internally
[16:49:39] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[16:50:04] <slevin> nubonix: sure, the security part is handed on a OS level, so the scripts assumes that the user is trusted, though making sure that the files being manipulated are in a specific directory primarily
[16:50:56] <slevin> it's actually an SFTP server, but some employees needs shell access internally to move files, cleanup, create directory structures etc
[16:51:04] <slevin> but they're not trusted with root privs
[16:52:07] <slevin> so again, i want to keep things as simple as possible, and try not to over engineer anything. though i still would like to write some unit tests, to provide some assurance
[16:52:54] <nubonix> mm, think someone else needs to take over from here to help you further
[16:53:05] <slevin> and in addition, a nice pattern for printing useful errors messages when checks fails
[16:53:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[16:53:25] <slevin> trying to avoid the following pattern:
[16:53:27] <slevin> ```
[16:54:00] <slevin> if not check_file_something(file):
[16:54:02] <genewitch> that's  a lot of ticks on your back
[16:54:09] <slevin> sorry, obviously failing on the formatting
[16:54:25] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[16:54:27] <slevin> genewitch: what does that mean? ^^
[16:55:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:55:36] <bjs> slevin: ` is often called a "backtick"
[16:55:41] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[16:56:15] <slevin> lol, got it. a bit used to markdown formatting
[16:56:43] *** Quits: tspng (~tspng@2a02:168:a1a1:1:217a:a539:7659:429b) (Remote host closed the connection)
[16:58:30] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 255 seconds)
[16:58:34] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[16:59:08] <rannnn8888> nubonix thxx i find the problem
[16:59:24] <nubonix> rannnn8888: np
[17:00:23] *** Joins: akaWolf (~akaWolf@akawolf.org)
[17:00:38] *** Joins: node1 (~node1@user/node1)
[17:01:07] *** Joins: pnoud (~pnoud@user/pnoud)
[17:01:31] <slevin> so, i'm no python expert, but how about a pattern where custom exceptions are thrown from the utility functions doing checks, and caught in the main function, for instance, where they're printed nicely?
[17:04:16] *** Joins: Gerula (~Gerula@user/gerula)
[17:06:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[17:08:43] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:08:57] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[17:09:56] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:10:52] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Ping timeout: 246 seconds)
[17:13:58] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[17:14:56] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[17:15:10] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[17:17:24] *** Quits: Allegretto (~allegrett@77-234-81-76.pool.digikabel.hu) (Ping timeout: 252 seconds)
[17:19:36] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[17:19:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[17:21:41] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[17:23:53] *** Joins: mokulus (~mokulus@user/mokulus)
[17:23:54] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 240 seconds)
[17:26:02] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (Remote host closed the connection)
[17:27:28] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:27:32] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[17:28:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:28:15] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[17:30:54] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:4829:dbfa:9849:bbfb) (Ping timeout: 255 seconds)
[17:31:21] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[17:31:43] *** Joins: jelmer (~jelmer@user/jelmer)
[17:34:13] <petaflot> Hello! I am working with kivy and there's this really strange bug which _might_ be somewhere upstream. so I'm posting here for reference: unknown reason for AttributeError https://www.imgpaste.net/image/KVtVEX https://bpa.st/BKBQ
[17:35:25] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[17:35:52] *** Joins: nyah (~nyah@90.221.186.180)
[17:36:59] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[17:37:51] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[17:38:00] <oprypin> when using `open(path)` and there is a directory at that path, can I always rely on the produced exception to always be `IsADirectoryError`?
[17:38:27] *** Joins: timkofu (~timkofu@user/timkofu)
[17:38:44] <oprypin> welp just answered my own question: on Windows it's PermissionError
[17:40:14] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[17:40:29] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:43:16] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:43:24] *** Joins: molyvius (~molyvius@user/molyvius)
[17:43:50] *** Quits: slevin (~slevin@142.79-160-14.customer.lyse.net) (Quit: Client closed)
[17:43:51] *** Joins: DrNostril (~DrNostril@37.120.201.204)
[17:43:56] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[17:44:01] *** Joins: white_shadow (~brey@117.222.231.112)
[17:46:48] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[17:46:58] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:3e00:8986:ae6e:2aac) (Remote host closed the connection)
[17:47:10] *** Joins: Roey (~Roey@user/Roey)
[17:48:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[17:48:28] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:49:33] *** Joins: somlis (~somlis@user/somlis)
[17:49:39] <Yhg1s> petaflot: I'm not sure what the confusion is, sorry. You have 'on_relase' and that's not something kivy knows what to do with.
[17:49:53] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:50:19] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a)
[17:50:42] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 240 seconds)
[17:51:17] <Liblx> hello, how to get the data points of a pandas dataframe column which are the highest from the beginning on. without using a for loop. i could not get it ... thanks!
[17:52:10] <petaflot> Yhg1s: oh dude thanks for stating the obvious. I missed it
[17:52:36] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[17:53:16] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a) (Excess Flood)
[17:53:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[17:53:43] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a)
[17:55:34] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:56:20] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[17:57:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[18:00:49] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[18:01:38] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0)
[18:02:19] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[18:03:24] *** Quits: molyvius (~molyvius@user/molyvius) (Remote host closed the connection)
[18:03:46] *** Joins: molyvius (~molyvius@user/molyvius)
[18:04:19] *** Joins: nickjj (~nickjj@user/nickjj)
[18:05:21] <nickjj> can someone lend a hand with wanting to replace only 1 part of a regex match with a variable? here's the regex and some test data: https://regex101.com/r/wEMISD/1
[18:05:39] <nickjj> my goal is to be able to say "find this match but then replace what's in green with a variable of my choosing"
[18:06:48] <nickjj> the missing link is how to use re.sub (or something else) to accomplish this, i've tried a bunch of things unsuccessfully
[18:07:11] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 265 seconds)
[18:07:17] <bjs> nickjj: what did you try?
[18:07:30] *** Joins: kmh (~kmh@p200300df5f3d230035b7f5463ee68434.dip0.t-ipconnect.de)
[18:08:28] <nickjj> bjs, the latest iteration is re.sub(fr"(?<=)^\s*gem '{package}', ('>*.*\d+.*')", fr"\1".replace(current, latest), data, flags=re.MULTILINE)
[18:09:21] <nickjj> in this case {package} is the name of the package, {current} is 6.0.0.beta.7 and {latest} is 6.0.0.pre-2 but the above code snippet only returns the {current}
[18:09:24] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[18:09:41] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[18:10:02] <bjs> nickjj: that (?<=) looks kind of odd
[18:10:05] <nickjj> using the regex101 example link, i'd like to get gem 'webpacker', '6.0.0.pre-2' as the final result (swapping the current with the latest but also returning the whole line)
[18:10:44] <nickjj> but i guess "returning the whole line" isn't quite accurate, basically i want to go through the whole file and just replace the version numbers of each package without messing with how the file is formatted
[18:11:03] <nedbat> nickjj: I would put matching groups around all three sections: before, interesting, after.  Then you can use \1 and \3 in the replacement
[18:11:21] <nickjj> so i figured the way to go about that is to get the regex working, put a group around where i care about and then swap that group with a variable of my choosing -- the last part is where i'm stuck
[18:11:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:11:44] <nedbat> nickjj: or if this is line-by-line, then use regex to match the line, and a simple str.replace to change the line
[18:11:53] <nickjj> nedbat, it's acting on a whole file
[18:12:07] <nickjj> "data" in this case is the entire contents of the file as a string
[18:12:07] <nedbat> nickjj: ok
[18:12:59] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[18:13:08] <nedbat> nickjj:   re.sub(r"^(\s*gem 'webpacker', ')(>*.*\d+.*)'", r"\1NEWTHING'", the_file_data)
[18:13:24] <nickjj> wouldn't that return OLDTHINGNEWTHING?
[18:13:37] <nedbat> nickjj: no, because \1 is everything before the version number
[18:13:50] *** Quits: molyvius (~molyvius@user/molyvius) (Ping timeout: 255 seconds)
[18:13:50] <nedbat> \2 is the thing you want to replace, and it's not in the subst
[18:14:33] <nickjj> i dropped in your example but when i run it, it throws: re.error: invalid group reference 15 at position 1
[18:15:04] <nedbat> nickjj: ok, then r"\g<1>NEWTHING  in the sub
[18:15:05] <nickjj> and for a sanity check, here's what i did: re.sub(fr"^(\s*gem 'webpacker', ')(>*.*\d+.*)'", fr"\1{latest}", dependency_file_data, flags=re.MULTILINE)
[18:16:56] <nickjj> that works with a slight adjustment, i had to put: fr"\g<1>{latest}'"
[18:17:06] <nedbat> nickjj: yes, f-string
[18:17:17] <nickjj> notice the last ' , without that the match was missing the closing '
[18:17:39] <nickjj> it was returning: gem 'webpacker', '6.0.0.pre.2
[18:18:14] <nickjj> thanks a lot, trapped on an island on a million years and there's a 0% chance i'm coming up with that on my own
[18:18:59] <seanicus> nedbat: are you the guy who runs the boston python group?
[18:19:02] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[18:19:11] <nedbat> seanicus: yes
[18:19:32] <nedbat> seanicus: i should probably find other hobbies :)
[18:19:45] <seanicus> I should probably go back to those.  Also I saw your name on hackernews before.
[18:20:14] <nickjj> you know you've beat the game when you're able to rattle off a regex solution like that as if it's nothing
[18:20:25] <seanicus> is there a boston or new england python irc/discord/any sort of chat?
[18:20:34] *** Joins: rememberYou (~someone@user/rememberyou)
[18:22:30] *** Quits: white_shadow (~brey@117.222.231.112) (Quit: Leaving)
[18:23:41] <nedbat> seanicus: there's https://about.bostonpython.com/slack
[18:26:21] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-2404-dbc3-ced0-7997.res6.spectrum.com)
[18:26:29] *** Quits: rbdr (~rbdr@37.120.25.13) (Quit: :()
[18:27:31] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:30:02] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[18:31:19] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[18:33:46] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[18:36:51] *** Joins: Montyr (~Montyr@p200300f0af2e9903110f8772cae9ce48.dip0.t-ipconnect.de)
[18:37:47] <Montyr> hello everyone.. can you tell me if there is a smarter way to achieve this assignment? https://bpa.st/JSBA
[18:38:06] <Montyr> entry[16:19] = ... does not work
[18:38:22] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[18:38:22] <Montyr> well it works but the bytes end up in wrong positions
[18:38:30] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3090:85c6:9f17:fd2a) (Quit: WeeChat 3.1)
[18:38:46] <leduyquang753> 16:19 is elements 16, 17 and 18, not including 19.
[18:38:57] *** Joins: Jefren (~Jefren@208.104.190.50)
[18:39:20] <Montyr> aaaah
[18:40:22] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 256 seconds)
[18:40:26] *** Joins: licensed (~licensed@189-48-165-65.user3p.veloxzone.com.br)
[18:40:46] *** Joins: jelmer (~jelmer@user/jelmer)
[18:40:54] *** Jefren is now known as Jefren1
[18:41:00] <Montyr> thank you so much
[18:41:10] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[18:41:56] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0) (Ping timeout: 250 seconds)
[18:42:24] *** Quits: Montyr (~Montyr@p200300f0af2e9903110f8772cae9ce48.dip0.t-ipconnect.de) (Quit: Client closed)
[18:42:48] *** Jefren1 is now known as Jefren2
[18:43:05] *** Jefren2 is now known as Jefren3
[18:43:17] *** Jefren3 is now known as Jefren4
[18:43:58] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 246 seconds)
[18:44:18] *** Joins: the-mask (~the-mask@user/the-mask)
[18:44:33] *** Jefren4 is now known as Jefren
[18:45:14] <the-mask> Hello, is anybody familiar with tksheet by any chance ?
[18:46:50] *** Joins: dez (uid92154@user/dez)
[18:48:56] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 255 seconds)
[18:49:17] *** Quits: Jefren (~Jefren@208.104.190.50) (Quit: Leaving)
[18:51:27] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Ping timeout: 255 seconds)
[18:52:23] *** Joins: Jefren (~Jefren@208.104.190.50)
[18:52:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[18:53:06] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 240 seconds)
[18:55:21] <timkofu> How can I get the name of an SQLAlchemy (declarative_base()) Base subclass? ChildModel.__class__.__name__ returns 'DeclarativeMeta', for every Base subclass
[18:55:55] <timkofu> Looking to get 'ChildModel'
[18:56:46] <nedbat> the-mask: it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[18:56:57] *** Joins: jelmer (~jelmer@user/jelmer)
[18:57:18] <nedbat> timkofu: can you show the value of MyClass.__mro__ ?
[18:57:24] *** Joins: molyvius (~molyvius@user/molyvius)
[18:57:41] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[18:58:09] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[18:58:36] <rannnn8888> Someone know how slove this ? get from proxy ? https://dpaste.org/7Fna
[18:58:41] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[18:59:06] <timkofu> nedbat: https://dpaste.org/7UJY
[18:59:45] <Yhg1s> timkofu: is is 'ChildModel' you're after here, or what name do you expect to get?
[18:59:49] <nubonix> having some difficulties building an .exe via pyinstaller. i cant seem to add files via resource path. spec file & how im calling resource_path: https://bpa.st/ZU6Q
[19:00:13] <timkofu> Yhg1s: Yes, 'ChildModel'
[19:00:25] <Yhg1s> timkofu: pehraps you just want 'ChildModel.__name__' then?
[19:01:30] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[19:01:57] *** Joins: pnoud (~pnoud@user/pnoud)
[19:02:33] *** Quits: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud) (Quit: Textual IRC Client: www.textualapp.com)
[19:02:56] <timkofu> Yhg1s: 🤦🏾‍♂️
[19:03:00] <timkofu> Yhg1s: Thanks.
[19:03:37] <the-mask> nedbat, I know, it is just I'm having trouble even defining what I want to do ....; and I just wanted maybe to clarify if it' even possible; tksheet documentation is not so clear and even more I'm at the functional programming level; including and using classes in my script is confusing at this moment ...
[19:06:06] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[19:06:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[19:06:54] *** Quits: Jefren (~Jefren@208.104.190.50) (Quit: WeeChat 3.2)
[19:08:21] *** Joins: Jefren (~Jefren@208.104.190.50)
[19:08:22] *** Quits: molyvius (~molyvius@user/molyvius) (Ping timeout: 268 seconds)
[19:09:11] *** Joins: Snyp (~rksht@49.207.206.57)
[19:10:11] <nedbat> the-mask: ok, we're here to help if we can.
[19:10:34] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[19:10:38] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[19:13:03] *** Quits: asix (~Anders@user/asix) (Ping timeout: 255 seconds)
[19:14:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[19:14:47] <the-mask> nedbat, in short, I have 3 variables - 2 read from excel file, 3rd one is calculated; I want to write those variables in tksheet, row by row ...is this possible ? like quantity / unit price / total price where variables will be different on each row, line by line ...
[19:15:44] <rannnn8888> nedbat maybe u understent how set a froxy in reqyest here httpx ? https://py-googletrans.readthedocs.io/en/latest/
[19:15:52] <rannnn8888> this my try https://dpaste.org/b0tA
[19:16:40] <nedbat> the-mask: i'm certain that would be possible.  Do you have any code using tksheet now?
[19:16:44] <the-mask> it looks to me tksheet is used to display a set of data taken from a database for example - but not sure if one can populate each cell with different values, row by row ....
[19:17:22] <nedbat> the-mask: you definitely can
[19:17:39] *** Joins: Notgnoshi (~nots@2001-48F8-8-40-FA77-B918-2203-346-dynamic.midco.net)
[19:17:49] <the-mask> nedbat, ok, that's encouraging, thank you ...
[19:18:33] *** Joins: Naan (~Naan@user/naan)
[19:18:34] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:20:58] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[19:21:13] *** Joins: zebrag (~chris@user/zebrag)
[19:21:35] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[19:22:39] <the-mask> nedbat, most likely I'll need to make a light version of the script
[19:24:21] *** ihaveamac_ is now known as lucario
[19:24:26] *** lucario is now known as ihaveamac
[19:24:28] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[19:25:15] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:25:36] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[19:30:52] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:31:45] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:32:00] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[19:32:31] *** Joins: white_shadow (~brey@117.222.231.112)
[19:34:02] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:34:14] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[19:34:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:35:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:39:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:39:54] *** Joins: ioe (~is0ke3@user/is0ke3)
[19:40:01] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[19:40:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:41:07] *** Joins: Elw3 (~Elw3@dynamic-046-114-158-202.46.114.pool.telefonica.de)
[19:41:11] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:41:15] *** Parts: Elw3 (~Elw3@dynamic-046-114-158-202.46.114.pool.telefonica.de) (Leaving)
[19:41:37] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[19:41:53] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[19:42:27] *** Joins: rf` (~envex@cpe-173-91-189-33.neo.res.rr.com)
[19:42:49] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[19:43:03] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[19:43:26] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:43:31] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 268 seconds)
[19:44:04] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:44:08] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 268 seconds)
[19:44:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[19:44:38] <Jin^eLD> SnoopJ, habnabit_ are you guys around? :) I ran into another issue while testing the solution that we came up with last night
[19:44:41] <Jin^eLD> https://bpa.st/LESA
[19:44:45] *** Quits: wgwz (~wgwz@45.55.193.150) (Ping timeout: 268 seconds)
[19:44:58] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Client Quit)
[19:45:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:45:01] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[19:45:02] <rannnn8888> someone know how use the pack googletrans with proxy ?
[19:45:03] *** Joins: pacbard_ (~pacbard@user/pacbard)
[19:45:04] *** Joins: wgwz (~wgwz@45.55.193.150)
[19:45:22] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[19:45:22] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[19:45:22] *** Quits: programmerq (~programme@user/programmerq) (Ping timeout: 268 seconds)
[19:45:22] *** Quits: sabet (~sabet@user/sabet) (Ping timeout: 268 seconds)
[19:45:22] *** Quits: Tashtari (~tashtari@user/tashtari) (Ping timeout: 268 seconds)
[19:45:22] *** Quits: civillian (~nick@124-171-97-43.dyn.iinet.net.au) (Ping timeout: 268 seconds)
[19:45:37] <Jin^eLD> if the script that is being imported from the .zip tries to include further code (for its own purpose, not meant for export) - that does not work, those modules can't be found
[19:45:38] *** Joins: m0nkey__ (~quassel@user/m0nkey/x-3352227)
[19:45:52] <Jin^eLD> any ideas what it could be?
[19:45:55] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[19:45:59] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: GoldAndAppel (goldandapp@gateway/vpn/protonvpn/goldandappel) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: twobitsprite (~twobitspr@66.115.154.132) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: m0nkey_ (~quassel@user/m0nkey/x-3352227) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: jbeimler (~quassel@user/jbeimler) (Ping timeout: 268 seconds)
[19:46:00] *** Joins: sabet (~sabet@user/sabet)
[19:46:08] <Jin^eLD> I tried various import statements in attempt to work around, but nothing helped
[19:46:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[19:46:09] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[19:46:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:46:36] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 268 seconds)
[19:46:50] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:46:58] *** m0nkey__ is now known as m0nkey_
[19:47:01] *** Joins: GoldAndAppel (goldandapp@gateway/vpn/protonvpn/goldandappel)
[19:47:02] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[19:47:13] *** Quits: djhankb (~djhankb@208.113.164.68) (Ping timeout: 268 seconds)
[19:47:28] *** Joins: twobitsprite (~twobitspr@66.115.154.132)
[19:47:28] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[19:47:50] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 268 seconds)
[19:47:56] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[19:48:26] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:48:27] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[19:48:27] *** reedrichards is now known as MrFantastik
[19:49:00] <weibullguy> the-mask: probably set_row_data() or set_cell_data() are tkSheet methods that might be interest you
[19:49:15] *** Joins: mastardet (~mastardet@user/mastardet)
[19:49:30] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[19:49:36] *** Joins: programmerq (~programme@user/programmerq)
[19:50:04] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[19:51:23] *** Joins: shodan45 (~quassel@107.161.22.155)
[19:52:11] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[19:52:41] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[19:53:00] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[19:53:28] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 258 seconds)
[19:53:45] *** Joins: spjb (~spjb@S0106f0f24985fe23.wp.shawcable.net)
[19:55:17] <the-mask> weibullguy, correct, I'm trying smth like demo.sheet.set_cell_data(2, 1, quantity.get()) inside a function ( defined at the same level like demo class ), but I receive error: "demo object doesn't have an attribute sheet " ; after some search it looks like my function which is calculating / reading the variables should be inside the demo class ....
[19:55:41] *** Quits: licensed (~licensed@189-48-165-65.user3p.veloxzone.com.br) (Quit: licensed)
[19:56:21] *** Joins: sebastianos (~sebastian@user/sebastianos)
[19:56:21] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[19:56:26] *** Joins: wisefriday (wisefriday@sempiternity.club)
[19:56:46] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[19:57:35] *** Quits: Snyp (~rksht@49.207.206.57) (Quit: WeeChat 3.2)
[19:58:37] *** Quits: t3nj1n_ (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Read error: Connection reset by peer)
[19:58:50] *** Joins: ST47 (~ST47@wikimedia/st47)
[19:59:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:00:37] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[20:01:23] *** Joins: somlis (~somlis@user/somlis)
[20:03:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:03:47] *** Joins: jelmer (~jelmer@user/jelmer)
[20:03:51] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[20:07:36] <rannnn8888> https://dpaste.org/jrD0 help googletrans
[20:07:52] <weibullguy> the-mask: ah.  so the problem isn't with tksheet?  if you're starting point is the tksheet demo, try app.sheet.set_cell_data(...)
[20:08:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:08:36] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:11:02] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[20:12:02] <nedbat> the-mask: can you link us to the code? This doesn't sound like a sheet issue at all
[20:12:32] *** Quits: akk (~akk@97-123-109-214.albq.qwest.net) (Quit: +++)
[20:12:34] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[20:13:55] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[20:13:58] *** Joins: molyvius (~molyvius@user/molyvius)
[20:15:16] *** Joins: Tashtari (~tashtari@user/tashtari)
[20:15:59] <acagastya> Hi.  I have a query, which I am aware is very broad, and could be vague.  Allow me to explain.
[20:16:19] <acagastya> Currently, I was using HTML5 canvas, to make an animation like this: https://0x0.st/-Vog.webm
[20:16:34] <acagastya> I am loading an audio file, and charting the amplitude as the audio progresses.
[20:16:47] <acagastya> I would like to do something similar, in Python.
[20:17:06] <lidless> You want a graphic EQ?
[20:17:11] * lidless can't click that; checks term settings
[20:17:22] *** Joins: Betal (~Beta@user/betal)
[20:17:32] <lidless> ohh I see
[20:17:40] <acagastya> To load an audio file, and animate the amplitude and make a recording of it.
[20:17:57] <acagastya> What kind of GUI tool would I need for that?
[20:18:02] <weibullguy> the-mask: see if this is sorta what you're trying to do -> https://bpa.st/55YA
[20:18:22] <lidless> acagastya: https://gist.github.com/leouieda/9043213
[20:18:28] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:18:29] <acagastya> And any library/package suggestion for audio handling?
[20:18:30] <lidless> also https://stackoverflow.com/questions/18625085/how-to-plot-a-wav-file seems related
[20:18:38] <lidless> Yes - wave :)
[20:18:49] *** Joins: mickey (~user@user/mickey)
[20:19:18] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:703d:a760:f1e7:a405)
[20:19:25] <acagastya> lidless: is https://bpa.st/55YA for the GUI?
[20:19:44] <Harlin> just for the hell of it, is there a way to do: from 'mod_string_name' import *  ?
[20:19:57] <lidless> acagastya: If you know Tk then stick to it. I would use Qt
[20:20:02] <nedbat> Harlin: you would use importlib to do that
[20:20:28] <lidless> acagastya: Additionally, I've heard a lot of positive talk about https://kivy.org/#home
[20:20:29] <Harlin> nedbat, any idea how I would do that with importlib? I'm having some trouble finding "import *" part.
[20:20:48] <acagastya> lidless: I don't have any experience with GUI, Tk, or Qt -- except matplotlib's render.  I will try it out.  Thanks!
[20:21:07] <lidless> Np! I've found both Tcl and Tk a little clunky for my liking
[20:21:19] <nedbat> Harlin: you would have to import the module, and then copy the attributes from the module into your globals, which is a big mess.
[20:21:37] <nedbat> Harlin: can you say more about why you want import* ?  It's usually discouraged
[20:21:42] *** Joins: syb0rg (~syb0rg@184.170.242.152)
[20:21:55] <Harlin> yeesh ... that does sound like it. if i have to do that, forget it. this is just a for the f* of it kind of deal.
[20:22:07] <Harlin> nothing production or work code.
[20:22:45] <acagastya> I need a simple, GUI, anything which does not take too much RAM would work for me.  I would have done it in C, if I could, but well, let me prototype it first :)
[20:22:54] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[20:23:01] <Harlin> nedbat, so I've got a plugin directory that houses modules. I just want to add some variables into a module.config.py file and then import them all into the general namespace (err global)
[20:23:12] <syb0rg> Hi all, for someone who has some programming experience (but not Python), what would be a good Python 3 book?
[20:23:39] <Harlin> nedbat, it's not a serious project and didn't want to take up anyone's time over best practice for pulling in plugins
[20:24:15] *** Joins: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[20:25:28] *** Joins: nac (~nac@user/nac)
[20:25:47] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[20:25:59] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[20:26:16] *** Joins: hendursa1 (~weechat@user/hendursaga)
[20:26:59] *** Joins: skapata (~Skapata@user/skapata)
[20:28:46] <syb0rg> Seems like there are *tons* of good options for python 2 books, but I would rather just jump into python 3. The options seem a tad bit more limiited, and the ones I am finding are mostly for beginning programmers or experienced python coders trying to further improve
[20:28:57] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:29:10] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 256 seconds)
[20:30:21] *** Joins: asix (~Anders@user/asix)
[20:30:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[20:32:31] *** Joins: jelmer (~jelmer@user/jelmer)
[20:34:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:02] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:35:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[20:35:45] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[20:36:34] *** Joins: Auron (~Auron956@user/auron)
[20:36:57] *** Joins: kor1 (~kor1@user/kor1)
[20:41:08] <ioxzev1z> syb0rg, avoid learning/programming python books, they are ~1500 pages with a lot of unneeded info
[20:41:22] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[20:41:33] <ioxzev1z> I think both books could easily be reduced to ~500 pages without losing anything relevant
[20:41:55] *** Joins: c10l (~c10l@89.34.167.207)
[20:42:12] <deniska> the tutorial https://docs.python.org/3/tutorial/ was how I started
[20:43:08] <PantelicGR2> deniska: +1
[20:43:35] <deniska> it assumes some familiarity with algol-descendant programming languages, and nicely walks you through various basics of python you should know about
[20:43:43] <rannnn8888> maybe u know what him want from me :d ?https://dpaste.org/8vxw
[20:44:14] <PantelicGR2> syb0rg: You may read the official python documentation and try to build a python app with it. You will learn a lot.
[20:44:18] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:46:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[20:46:35] *** Joins: sectec84 (~sectec84@24.18.109.173)
[20:47:31] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 246 seconds)
[20:48:47] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[20:49:00] <syb0rg> Ok, thanks for the feedback all of you. I will star with the tutorial/docs
[20:49:16] <syb0rg> *start
[20:49:21] <acagastya> Oh, but an important question I forgot to ask lidless: how do I record the things happening in GUI?
[20:50:13] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:50:30] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:51:52] *** Quits: Nanobot567 (~Nanobot56@024-181-099-188.res.spectrum.com) (Remote host closed the connection)
[20:52:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[20:54:43] *** Quits: rsx (~dummy@ppp-188-174-154-158.dynamic.mnet-online.de) (Quit: rsx)
[20:55:13] *** Quits: asix (~Anders@user/asix) (Ping timeout: 246 seconds)
[20:55:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[20:59:09] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[21:02:47] *** Joins: pnoud (~pnoud@user/pnoud)
[21:04:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[21:07:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[21:08:37] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[21:09:13] *** Joins: asix (~Anders@user/asix)
[21:11:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:12:11] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:12:40] *** Joins: AndyTurner (~andyt@alligin.plus.com)
[21:15:53] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[21:16:34] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[21:18:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:19:38] *** Joins: jelmer (~jelmer@user/jelmer)
[21:19:39] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[21:20:35] *** Joins: Jefren1 (~Jefren@70.35.67.159)
[21:20:58] *** Joins: bilb_ono (~alexmarsh@12.190.239.194)
[21:21:43] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:22:39] *** Quits: Jefren (~Jefren@208.104.190.50) (Ping timeout: 255 seconds)
[21:22:47] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[21:22:48] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[21:24:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:26:11] *** Joins: cheater (~Username@user/cheater)
[21:27:07] *** Quits: Jefren1 (~Jefren@70.35.67.159) (Ping timeout: 268 seconds)
[21:27:42] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[21:27:54] *** Joins: Fiji (~Fiji@user/fiji)
[21:28:52] *** Joins: Jefren1 (~Jefren@70.35.67.60)
[21:30:41] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Quit: Leaving)
[21:31:27] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[21:31:30] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:32:55] *** Joins: Jefren2 (~Jefren@70.35.67.18)
[21:34:04] *** Quits: Jefren1 (~Jefren@70.35.67.60) (Ping timeout: 252 seconds)
[21:37:22] *** Joins: magla (~gelignite@55d4b6dc.access.ecotel.net)
[21:37:36] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[21:38:28] *** Quits: Jefren2 (~Jefren@70.35.67.18) (Ping timeout: 252 seconds)
[21:39:12] *** Quits: white_shadow (~brey@117.222.231.112) (Quit: Leaving)
[21:40:27] *** Joins: Jefren (~Jefren@70.35.67.42)
[21:41:35] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:43:37] *** Quits: AndyTurner (~andyt@alligin.plus.com) (Quit: leaving)
[21:44:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[21:45:53] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[21:46:14] *** Quits: Jefren (~Jefren@70.35.67.42) (Ping timeout: 268 seconds)
[21:48:32] <enrh> MyPy question. I'm working FastAPI, you can create Enum classes and documentation is automatically constructed. This is the problem, https://mypy-play.net/?mypy=latest&python=3.10&gist=296486b938ae79e1eb071475a307a839
[21:48:41] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[21:48:44] *** Joins: Jefren (~Jefren@70.35.67.106)
[21:49:03] <enrh> Do I have to define the default as Options.ONE?
[21:49:25] *** Quits: syb0rg (~syb0rg@184.170.242.152) (Quit: Client closed)
[21:49:29] <grym> enrh: yes
[21:49:41] <enrh> This isn't ideal for me, but if it's the way... https://mypy-play.net/?mypy=latest&python=3.10&gist=f2448b0f7e8ee731b36beb3464081d29
[21:49:53] <grym> or i guess optional[Option, str]
[21:49:58] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:50:02] <enrh> Oh yeah doy
[21:50:05] <enrh> Thanks gr
[21:50:06] <grym> enums are a bit clonky
[21:50:09] <enrh> grym
[21:50:33] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[21:51:11] *** Joins: Jefren1 (~Jefren@70.35.66.236)
[21:51:17] <nubonix> running a .exe made with pyinstaller, how can i copy the .exe to a folder? copy itself to another directory within the code itself?
[21:51:31] *** Joins: darksun (~darksun@user/darksun)
[21:51:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:51:55] <nubonix> heres what i got atm, but its only copying the .py file instead of the .exe that is being ran https://bpa.st/EBKA
[21:51:59] *** Joins: exciteabletom (~tom@180.150.82.109)
[21:53:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[21:53:38] *** Quits: Jefren (~Jefren@70.35.67.106) (Ping timeout: 268 seconds)
[21:54:24] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[21:54:58] <apollo13> nubonix: maybe try sys.argv[0] ?
[21:55:05] <nubonix> ye, trying rn
[21:55:16] <nubonix> `os.path.abspath(sys.argv[0])`
[21:55:53] <apollo13> also see https://pyinstaller.readthedocs.io/en/stable/runtime-information.html#using-sys-executable-and-sys-argv-0
[21:56:01] <nubonix> ah perfect, works
[21:56:06] <nubonix> ty apollo13 :D
[21:56:08] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[21:56:26] *** Jefren1 is now known as Jefren
[21:56:59] *** Joins: Vonter (~Vonter@user/vonter)
[21:59:19] *** Joins: Akuli (~Akuli@87-94-109-15.bb.dnainternet.fi)
[22:01:24] *** Joins: heco (~redrum@user/redrum88)
[22:02:24] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:05:35] *** Quits: Dotz0cat (~Dotz0cat@h234.70.213.151.dynamic.ip.windstream.net) (Ping timeout: 255 seconds)
[22:06:02] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[22:06:04] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:06:35] *** Quits: Jefren (~Jefren@70.35.66.236) (Ping timeout: 268 seconds)
[22:06:49] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:08:00] *** Joins: mexen (uid495612@user/mexen)
[22:09:24] *** Joins: Jefren (~Jefren@208.104.190.11)
[22:10:06] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[22:10:57] *** Joins: darksun (~darksun@user/darksun)
[22:10:59] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 255 seconds)
[22:11:25] *** Joins: Pickchea (~private@user/pickchea)
[22:12:14] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Client Quit)
[22:13:14] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 255 seconds)
[22:13:19] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[22:13:59] *** Quits: Jefren (~Jefren@208.104.190.11) (Ping timeout: 268 seconds)
[22:16:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[22:16:46] *** Joins: Jefren (~Jefren@70.35.67.145)
[22:18:25] *** Joins: elezium (~elezium@modemcable039.188-176-173.mc.videotron.ca)
[22:19:15] *** Joins: jimklo_ (~jimklo@gemini.sri.com)
[22:19:21] *** Quits: jimklo (~jimklo@2600:6c52:6f00:ae5f:713f:becb:48c:c2e3) (Ping timeout: 255 seconds)
[22:20:14] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[22:20:33] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[22:20:42] *** Parts: knowmadic (~ryan@user/knowmadic) ()
[22:21:06] <SnoopJ> Jin^eLD, is the module it's trying to import also in that .zip? It should 'just work' if `import othermod` would work in the host's source.
[22:22:31] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[22:22:44] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[22:22:49] <Jin^eLD> SnoopJ: yes, see the paste... that's exactly what I found so confusing; the "other module" is part of that zip, so it should have been a local import
[22:23:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:23:21] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[22:23:27] <Jin^eLD> SnoopJ: https://bpa.st/LESA
[22:23:38] *** Joins: bilb_ono (~alexmarsh@12.190.239.194)
[22:23:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:24:19] <rannnn8888> help what him want from me ?https://dpaste.org/8vxw
[22:25:07] <bjs> rannnn8888: what?
[22:25:20] *** Joins: knowmadic (~ryan@user/knowmadic)
[22:25:45] <SnoopJ> Jin^eLD, ah, I'd missed that. When you're using the importlib machinery directly like this, it unfortunately doesn't work like that. I think it can work if the contents of the .zip are organized like a package and you use relative imports, though
[22:25:50] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[22:26:02] <rannnn8888> bjs i get the error when i try add the dict proxy, i try all and same i dont know to slove this
[22:26:10] <bjs> rannnn8888: your paste is a 404
[22:26:13] <SnoopJ> Jin^eLD, it *would* 'just work' if the .zip itself were on sys.path, but this isn't a great choice for what you want to do imo
[22:26:16] <bjs> rannnn8888: (dont use dpaste)
[22:27:03] <Jin^eLD> can trigger the machinery manually somehow or work around that? I woud not want to force users to organize packages in a special way
[22:27:12] <rannnn8888> bjs where past ?
[22:27:21] <bjs> rannnn8888: use the one in the topic, https://bpa.st/+python
[22:28:06] <Jin^eLD> SnoopJ: why would sys.path be a bad idea?
[22:28:10] *** Joins: jdmark (~jdmark@67.8.137.130)
[22:28:11] *** Joins: jelmer (~jelmer@user/jelmer)
[22:28:30] <rannnn8888> bjs i all day try fix this :x https://bpa.st/EETA
[22:28:44] <bjs> rannnn8888: what is it i am looking at here
[22:28:55] <SnoopJ> Jin^eLD, I'm not sure it would be a bad idea per se, but it's harder to control the loading process with it.
[22:29:03] <rannnn8888> bjs this the full code https://bpa.st/QE2Q
[22:30:05] <Jin^eLD> SnoopJ: adding sys.path.append("s2.zip") before running the script seems to do the trick
[22:30:08] <SnoopJ> Jin^eLD, also: any supplementary absolute imports will also populate sys.modules, so you need to clear those out, too. I think if you use relative imports this isn't a problem (because they're in the package's namespace)
[22:30:25] <bjs> rannnn8888: now I'm more confused, your previous paste had 'http' now this has 'http://'
[22:30:33] <SnoopJ> Jin^eLD, it "does the trick" in the sense that the import works, but it's probably going to create headaches for you because now you have to keep track of everything imported like this from that .zip.
[22:31:12] <Jin^eLD> SnoopJ: I got a nice hint regarding modules clearing: backup sys.modules.copy(), then before running a new script do a sys.modules.clear() followed by sys.modules.update(backup)
[22:31:14] <SnoopJ> Jin^eLD, if you don't like the idea of requiring users to organize their vendored dependencies inside the .zip, you might consider providing a "please import a named module for me" hook to them.
[22:31:15] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 268 seconds)
[22:31:18] <rannnn8888> bjs Yes I just tried all the options and nothing works
[22:31:42] *** Parts: KindOne (kindone@user/kindone) (Channel Purge)
[22:32:25] <rannnn8888> bjs in the example its this {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'} https://py-googletrans.readthedocs.io/en/latest/
[22:32:38] <rannnn8888> show i write proxies = {'http': 'http://XXX-dest:XXXX@138.XXXX.59.XXX:XXXX/'}
[22:32:48] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:32:52] <rannnn8888> but get Parameter proxies of googletrans.client.Translator.__init__ proxies: Optional[Dict[str, SyncHTTPTransport]]
[22:33:06] <bjs> rannnn8888: what do you mean "get" ?
[22:33:17] <bjs> rannnn8888: you said something about an error?  But your pastes didn't include any errors?
[22:33:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:34:43] <SnoopJ> Jin^eLD, you could also just have these modules declare their sibling dependencies and load those after loading the entrypoint. Could be as simple as `__depends__ = ["foomod", "barmod"]` and then you do something like: `for dep in entrypoint.__depends__: track_module_for_later_unloading(your_zipimporter.load_module(dep))`
[22:35:01] *** Quits: pavelow (~pavelow@opticalchimp.com) (Quit: No Ping reply in 180 seconds.)
[22:35:15] <Jin^eLD> SnoopJ: but that would again force users to know all that stuff, I'd prefer to keep it as simple for them as possible
[22:35:16] <SnoopJ> or you'd probably want to do `getattr(entrypoint, "__depends__", [])` to avoid the AttributeError when the user doesn't have deps
[22:35:23] *** Joins: Allegretto (~allegrett@84-236-36-123.pool.digikabel.hu)
[22:35:26] *** Joins: pavelow (~pavelow@opticalchimp.com)
[22:35:42] <SnoopJ> Jin^eLD, well, they're required to vendor the dependencies in either case, so this is why I think requiring them to use relative imports is the simplest thing
[22:35:48] <Jin^eLD> I am looking at the sys.path thing now and it seems to work just like I need - if I add the .zip there before running it, everything works
[22:35:49] <SnoopJ> "you hand me an autonomous package, I load that package"
[22:36:14] <SnoopJ> Jin^eLD, I have made the case for why it's a bad idea, it's up to you to decide if that's worth heeding.
[22:36:56] <Jin^eLD> well, if I restore the original path afterwards, just like how I do it with sys.modules - that'd solve the thing you mentioned, no?
[22:36:58] <SnoopJ> stashing the old sys.modules might suffice, idk what the edge cases are there, really
[22:37:08] *** Joins: darksun (~darksun@user/darksun)
[22:37:23] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[22:37:35] <rannnn8888> bjs No have error but its not use the proxy after i over the limit i get 429 , this the only i can see problem https://ibb.co/3z1yXGs
[22:37:52] <bjs> rannnn8888: that's just your editor giving a warning
[22:37:56] <bjs> have you actually tried running the code?
[22:38:02] <SnoopJ> Jin^eLD, so, remember how we talked about modules being nice as a bag-of-code last night? If you go with sys.path, you're now juggling N+1 bags where N is the number of imports done inside the thing you imported.
[22:38:16] <SnoopJ> It might be okay, but it's certainly more complicated, and that's smelly to em
[22:38:18] <SnoopJ> me*
[22:38:23] <Jin^eLD> hmm
[22:38:39] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[22:38:42] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[22:38:43] <SnoopJ> and since the users have to vendor stuff anyway, I think it's a little cleaner if you just ask them to organize their stuff as a package
[22:38:45] <rannnn8888> bjs yes i say its running Until I get to the limit and then return 429 which mean it does not use proxy
[22:39:25] <SnoopJ> Jin^eLD, this is how the zipimporter stuff I worked on recently works, there's a bunch of accessory/helper modules inside the package, and the thing I load_module() on uses relative imports, so everything stays under one module.
[22:39:27] <Jin^eLD> SnoopJ: ok I'll read up on python "packages" to make sure I fully understand the difference between what I have now and how it needs to be
[22:39:42] <bjs> rannnn8888: does that really mean it didn't use the proxy?  429 just means you tried to send too many messages at once?
[22:39:48] *** Joins: kosh (~kosh@user/kosh)
[22:40:07] <bjs> rannnn8888: if you're trying to use a local proxy to get around rate limiting, well that might've worked 20 years ago :)
[22:40:22] <SnoopJ> Jin^eLD, helpful reading: https://docs.python.org/3/reference/import.html#package-relative-imports
[22:40:43] <rannnn8888> bjs what u mean local proxy  ? its proxy i buy
[22:41:01] <Jin^eLD> SnoopJ: ack, thanks, will look at it right after finish the read on packages as such
[22:41:05] <bjs> rannnn8888: I mean the proxy can also get rate limited, what makes you think the proxy isn't being used?
[22:41:06] <Jin^eLD> *finishing
[22:41:33] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[22:41:42] <SnoopJ> Jin^eLD, the correspondence between the listing given in that section and your code: `package` is what you would load_module() on, `subpackage1`, `subpackage2` would be the user's vendored dependencies, and they would `from . import subpackage1` etc.
[22:42:21] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[22:42:33] <rannnn8888> bjs u see i make a loop and when i over the limit i get this https://bpa.st/SCNQ
[22:42:44] <bjs> rannnn8888: well yes, 429 means you sent too many messages
[22:42:55] *** Joins: kosh (~kosh@user/kosh)
[22:42:58] <bjs> and so you sent a lot of messages, then got a 429 error.  Is that surprising to you?
[22:43:10] <rannnn8888> bjs yep so why its not use the proxy :D  ?
[22:43:17] <bjs> rannnn8888: what makes you think it's not using it?
[22:43:45] <Jin^eLD> SnoopJ: but what would I be loading? since I use load_module() myself it would not even look at __init__.py? or how does it know that its a package if I am kind of bypassing the default import machinery?
[22:43:50] <rannnn8888> bjs so why if i try run the script again its dont work ?
[22:43:55] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[22:44:22] <bjs> rannnn8888: because you (or maybe, the proxy) is rate limited,  probably whatever server you were hitting with requests just went "stop sending me messages for a few minutes"
[22:44:44] <SnoopJ> Jin^eLD, you aren't bypassing that machinery, you're using it directly instead of letting importlib try a bunch of different techniques to find what you want.
[22:45:14] <Jin^eLD> aha
[22:45:23] <rannnn8888> bjs what u mean the proxy i send from diffrent proxy all time
[22:45:42] <bjs> rannnn8888: and what happens when you switch proxy?
[22:45:58] <SnoopJ> Jin^eLD, i.e. you go straight for PathFinder because you know that's what is relevant, but if you'd done `import something` importlib would possibly try a bunch of stuff too.
[22:46:09] <SnoopJ> Jin^eLD, anyway, you wouldn't change your load_module *at all*
[22:46:18] <rannnn8888> bjs i get same 429 what its mean its use my ip and not from the proxy all the time
[22:46:48] <bjs> rannnn8888: do you mean you get 429 immediately or you have another loop and it works then stops again?
[22:47:01] <bjs> rannnn8888: or it means the proxy's ip is what got rate limited...
[22:47:17] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[22:47:30] <SnoopJ> Jin^eLD, but your users would no longer be doing absolute imports. Making them relative gives a strong hint to the import system: "I am inside a package, please load this thing located relative to that package"
[22:47:35] <Jin^eLD> SnoopJ: I am still reading, but I remember I read that starting from some py3 version __init__.py is no longer required and I wonder what identifies a "package" vs a "module", but let me read through the docs to the end..
[22:48:03] <rannnn8888> bjs im sure its not use the proxy , i start script again with diffrent proxy and its same 429
[22:48:17] <bjs> rannnn8888: okay but do you get the 429 immediately? you said something about a loop?
[22:48:21] <supakeen> A module is a .py file, a package is a directory with an __init__.py.
[22:48:22] <SnoopJ> Jin^eLD, a package is a module with __path__ set. There are two kinds: regular packages (ones with __init__.py) and namespace packages (ones without). See sec 5.2 of that same import doc.
[22:49:02] *** Quits: tims (~tims@193-82-234-90.tpgi.com.au) (Ping timeout: 258 seconds)
[22:49:29] <SnoopJ> Jin^eLD, like I said, it's pretty much the file layout in that first link I sent, except that it'll be inside of a .zip
[22:50:03] <SnoopJ> your users's vendored dependencies are likely already packages, so all they need to worry about is making sure the top-level is a package and the rest comes pretty much for free.
[22:50:29] <SnoopJ> (assuming those dependencies aren't being lazy and using absolute imports for stuff, which is...possible.)
[22:50:50] <Jin^eLD> SnoopJ: gimme some time, still reading :)
[22:51:15] <rannnn8888> bjs this example in the list_proxy  i have like 5000 proxy work ! https://bpa.st/4UOQ
[22:51:36] *** Quits: Jefren (~Jefren@70.35.67.145) (Ping timeout: 268 seconds)
[22:51:52] <bjs> rannnn8888: you're spamming some server and it's figuring you out and rate limiting you. I'm not sure what you expect other than a bunch of 429 errors
[22:52:51] <rannnn8888> bjs how the server know its me if i run its from a proxy
[22:53:04] *** Joins: Jefren (~Jefren@70.35.66.80)
[22:53:15] <bjs> rannnn8888: you can try give it a proxy url that isn't a real proxy and see if it fails;  if it doesn't then it's probably not using the proxy. I think this googletrans thing is using httpx under the hood, so you can probably ask httpx to give you debug information so you can see the proxy stuff
[22:53:19] *** Joins: digilink (~digilink@user/digilink)
[22:53:29] <bjs> rannnn8888: proxies are a really old technology, and you're trying to spam Google.
[22:54:00] *** Quits: lexandrop (~lex@user/lexandrop) (Ping timeout: 255 seconds)
[22:54:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:54:44] <rannnn8888> bjs k when i can send again i try , and i dont mean use in this loop i only make this for cheack if its send from proxy
[22:55:02] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[22:55:29] *** Joins: Dotz0cat (~Dotz0cat@h6.93.213.151.dynamic.ip.windstream.net)
[22:56:22] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:56:28] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[22:56:33] <rannnn8888> bjs i try same 429 i not use a proxy
[22:56:41] <rannnn8888> it*
[22:57:26] *** Joins: darksun (~darksun@user/darksun)
[22:57:35] <rannnn8888> bjs this the clinet maybe u see ? https://bpa.st/LUTA
[22:58:03] <the-mask> weibullguy, still here ?
[22:58:08] <bjs> rannnn8888: It's very unlikely the libraries code is wrong, it's just passing the proxy to httpx
[22:58:38] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 265 seconds)
[22:59:13] <rannnn8888> bjs There is no other problem that can be but: D
[22:59:33] <the-mask> weibullguy, the code is awesome, thanks; one issue tough - it populates the rows all together and I need that to be filled in row by row ......
[22:59:37] *** Quits: Jefren (~Jefren@70.35.66.80) (Ping timeout: 268 seconds)
[23:00:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[23:00:20] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:00:58] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[23:01:38] *** Joins: Jefren (~Jefren@70.35.66.115)
[23:02:30] *** Quits: bilb_ono (~alexmarsh@12.190.239.194) (Quit: bilb_ono)
[23:03:19] <weibullguy> the-mask: the for loop in run_demo() populates all the rows.  it's just an example, the rest is up to you for now.
[23:04:27] *** Joins: pnoud (~pnoud@user/pnoud)
[23:05:59] <Jin^eLD> SnoopJ: doh :) after a lot of reading... so the actual solution was to simply use "from s2 import utilitymod" and that's it
[23:06:01] <the-mask> weibullguy, correct, I'm trying to tune it up to solve the problem; if keeping the for loop it opens another tksheet after each click on the button ...; so I need to write row by row ....
[23:07:30] <SnoopJ> Jin^eLD, about the same thing, but yea.
[23:09:56] <weibullguy> the-mask: i've got to finish stretching fence around the orchard before the deer eat all my trees.  i'll be around tonight if you need more help.
[23:10:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[23:10:17] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:a456:1295:c765:d66e) (Quit: Client closed)
[23:10:22] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[23:10:59] *** Quits: exciteabletom (~tom@180.150.82.109) (Quit: Konversation terminated!)
[23:11:16] *** Quits: ioe (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[23:11:20] *** Quits: Jefren (~Jefren@70.35.66.115) (Ping timeout: 268 seconds)
[23:12:17] <the-mask> weibullguy, good luck with the chores . . I'll keep you informed on the progress :D
[23:12:59] *** Joins: Jefren (~Jefren@70.35.66.38)
[23:14:04] *** Quits: DrNostril (~DrNostril@37.120.201.204) (Quit: Leaving)
[23:16:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:16:30] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[23:16:55] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[23:17:08] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Ping timeout: 255 seconds)
[23:17:27] <beeza> I'm trying to make a generic function return the same type as it gets in input: https://ideone.com/Kdhq7g
[23:17:50] <beeza> but when I run mypy against this I get: test_generic_func.py:47: error: Incompatible types in assignment (expression has type "Iterable[Union[str, PurePath]]", variable has type "List[str]"
[23:17:57] <beeza> I don't quite understand why
[23:18:07] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:18:09] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:18:36] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[23:18:45] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[23:19:30] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 240 seconds)
[23:19:57] *** Joins: digilink (~digilink@user/digilink)
[23:20:08] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:20:46] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[23:21:08] *** Quits: Jefren (~Jefren@70.35.66.38) (Ping timeout: 252 seconds)
[23:21:17] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[23:23:03] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 268 seconds)
[23:23:17] *** Joins: Jefren (~Jefren@70.35.66.77)
[23:23:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:23:40] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[23:24:16] <graingert> beeza: try with mypy-play.net?
[23:25:10] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[23:25:48] <beeza> thanks for the hint, here is the mypy-play.net link: https://mypy-play.net/?mypy=latest&python=3.10&gist=cfb491236624447a9d81baba720ae929
[23:26:20] *** Joins: Jefren1 (~Jefren@70.35.66.51)
[23:26:40] <bjs> beeza: it's because ReplaceableT = Iterable[Union[...]], and you cannot "turn" an Iterable[...] into a List[...] like that
[23:26:50] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:26:53] <bjs> beeza: maybe you actually wanted to use bound=... on the TypeVar ?
[23:27:29] *** Quits: Jefren (~Jefren@70.35.66.77) (Ping timeout: 255 seconds)
[23:27:32] <beeza> let me try
[23:28:26] <bjs> beeza: (or add `List[str]` to the possible arguments in ReplaceableT)
[23:28:51] <beeza> I did want to use bound
[23:29:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:31:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:34:30] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[23:34:31] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[23:34:46] *** Quits: Jefren1 (~Jefren@70.35.66.51) (Ping timeout: 268 seconds)
[23:35:29] *** Joins: taskin (~Srain@203.96.189.147)
[23:36:38] *** Joins: Jefren1 (~Jefren@70.35.66.247)
[23:36:45] <Gustavo6046> This big rewrite is scary
[23:37:14] <Gustavo6046> Sometimes I feel discouraged because surely everyone and their dog already has a better botting framework and doesn't need yet another one to the backlog
[23:37:29] <Gustavo6046> https://github.com/Gustavo6046/triarc if you look at Issues you'll see I haven't done a single thing ever since I plotted the roadmap
[23:38:16] *** Joins: ITD4004 (~ITD4004@187.61.233.248)
[23:38:28] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 268 seconds)
[23:39:55] *** Quits: taskin (~Srain@203.96.189.147) (Quit: taskin)
[23:40:16] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Quit: Leaving)
[23:40:57] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[23:41:39] *** Quits: Jefren1 (~Jefren@70.35.66.247) (Ping timeout: 265 seconds)
[23:41:50] *** Joins: Jefren1 (~Jefren@70.35.66.208)
[23:42:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:44:22] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:45:31] <acresearch> hello people, i have 3 large lists [X1, X2, X3], i am trying to find the final SD (if i combine the values of all the lists), but i cannot combine them because they are too large. is there a way to calculate individual values and them from them calculate the final SD? for example calculate each lists SD and then take the mean of the SDs to get the final SD?
[23:46:08] <beeza> Why does str have to be Iterable[str] :/
[23:46:59] <bjs> beeza: because it's iterable
[23:47:10] <beeza> yes I know, just annoying with typing
[23:47:16] *** Joins: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com)
[23:47:45] <bjs> beeza: perhaps typing.py should've had Iterable and BaseIterable or something where Iterable didn't include str
[23:47:50] <Gustavo6046> Alright, so I'll start with the reactor thing
[23:47:52] <nubonix> can i iterate through starlette query_params?
[23:47:55] <Gustavo6046> A reactor class can interact with a bot class
[23:48:03] <Gustavo6046> It can do so locally (in the same process) or remotely (via RPC)
[23:48:08] <Gustavo6046> How do I implement the interface?
[23:48:37] <Gustavo6046> Maybe have a BotRemote typing.Protocol that provides access for some Bot utilities, either locally or remotely?
[23:48:50] <Gustavo6046> So an implementation would just access a local Bot reference but another would use RPC
[23:49:09] <Gustavo6046> And wouldn't synchronizing this remote implementation with the actual underlying Bot class be an issue?
[23:49:34] *** Quits: Jefren1 (~Jefren@70.35.66.208) (Ping timeout: 268 seconds)
[23:49:48] *** Quits: dld (~davidlowr@73.61.8.183) (Ping timeout: 255 seconds)
[23:49:49] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[23:50:14] <beeza> bjs: things are a bit better now: https://mypy-play.net/?mypy=latest&python=3.10&gist=fd989334e675529beb099320224f15b6
[23:50:26] <beeza> still have some type errors, which I don't quite understand why
[23:50:49] <beeza> I'm guessting mypy is just not smart enough, though maybe I am doing it wrong
[23:51:07] *** Joins: Jefren1 (~Jefren@206.253.157.235)
[23:51:17] <todda7> Say you have a class A. Then you have multiple constructor functions, each of which do 2 things: add/edit class A init arguments, and call methods on A after init. I want to combine constructor functions -- run them in series. How do make a framework/architecture for doing so?
[23:51:46] *** Joins: dld (~davidlowr@73.61.8.96)
[23:52:45] <beeza> no wait, I think I'm doing it wrong, will share another paste shortly
[23:52:49] <Gustavo6046> todda7: generally separating those concerns is good, but for flexibility it's worth trying to have a classmethod that just constructs a class instance (where the constructor just initializes the member variables), and this classmethod calls the post-initialiaztion methods
[23:53:52] *** Joins: noobly11 (~noobly@50.38.123.106)
[23:53:59] <todda7> e.g: Class Dog.  And two constructor functions: make_bomb_sniffing_dog(*args, **kwargs): kwargs['nose_sensitivity'] = 100; dog = Dog(*args; **kwargs); dog.train('police_training'); dog.train('bomb_sniffing')
[23:54:25] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[23:55:35] <todda7> make_angry_dog(*args, **kwargs): kwargs['angriness'] = 100; dog = Dog(*args, **kwargs); dog.experience('beaten_by_owner'); return dog
[23:55:38] <Gustavo6046> todda7: so class Dog has a __init__ that initializes the Dog's state, and a method train() that trains self, and a @classmethod make_trained(...) that initializes a dog and pretarins it before returning it.
[23:55:41] <beeza> Okay, I think this is how it should be: https://mypy-play.net/?mypy=latest&python=3.10&gist=cdc018cfc65b0d732bcaf09deb27f3c3
[23:55:52] <beeza> but still getting unexpected type error
[23:55:53] <Gustavo6046> Still, just in general look at attrs; it was designed for this kind of object-oriented simplicity  :)
[23:56:26] <Gustavo6046> Just a suggestion though https://www.attrs.org/
[23:56:41] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:56:58] <Gustavo6046> It helps a lot when it comes to OOP stuff in python
[23:59:26] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 268 seconds)
