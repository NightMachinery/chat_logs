[00:00:09] <kakolainen[m]> finding first dot is easier than finding last dot so just reverse the string before doing regexp
[00:03:11] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:13:04] <jaawerth> I mean the problem is already solved but sure let's keep going :D io.popen(("bash -c 's=%q; printf %%s %q'":(format('footxt', '${s%.*}'):(read('*a')
[00:24:51] *** Quits: pizdets (~pizdets@183.182.111.233) (Ping timeout: 250 seconds)
[00:25:09] *** Joins: pizdets_ (~pizdets@183.182.111.212)
[00:50:56] *** Joins: AndroidToad83 (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[00:51:48] *** Quits: ratchet_freak (~ratchetfr@d8d8779d9.access.telenet.be) (Ping timeout: 268 seconds)
[00:53:51] *** Joins: svm_invictvs_ (~svm_invic@user/svm-invictvs/x-6696469)
[00:54:05] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Read error: Connection reset by peer)
[00:55:39] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[00:56:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:56:12] *** Joins: pb_ (~pb@polemon.org)
[00:56:13] *** AndroidToad83 is now known as AndroidToad
[00:56:28] *** Joins: nheir_ (~nheir@public.itai.re)
[00:56:47] *** Quits: jwoe324 (~jwoe324@2001:470:69fc:105::1:1a67) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: ttmrichter-M (~ttmrichte@user/ttmrichter) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: robertovpt[m] (~robertovp@2001:470:69fc:105::e0e2) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: pb (~pb@polemon.org) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: nheir (~nheir@public.itai.re) (Ping timeout: 246 seconds)
[00:56:52] *** Joins: cryocaustik76 (~cryocaust@user/cryocaustik)
[00:57:15] *** Quits: dionys (dionys@user/dionys) (Ping timeout: 260 seconds)
[00:57:16] *** Quits: TheMatten (~thematten@2001:470:69fc:105::83c) (Ping timeout: 268 seconds)
[00:57:20] *** Joins: nmz (nmz@brought.to.you.by.bnc4free.com)
[00:57:46] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: Saphire (saphire@lunar.exchange) (Ping timeout: 246 seconds)
[00:57:47] *** cryocaustik76 is now known as cryocaustik7
[00:58:01] *** Joins: Saphire (saphire@lunar.exchange)
[00:58:23] *** Quits: nmz| (nmz@brought.to.you.by.bnc4free.com) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Ping timeout: 264 seconds)
[00:58:29] *** Quits: sqz1 (~sqz@178.62.201.14) (Ping timeout: 246 seconds)
[00:58:56] *** Joins: sqz1 (~sqz@178.62.201.14)
[00:59:40] *** Joins: jwoe324 (~jwoe324@2001:470:69fc:105::1:1a67)
[01:01:42] *** Joins: ttmrichter-M (~ttmrichte@user/ttmrichter)
[01:02:16] *** Joins: robertovpt[m] (~robertovp@2001:470:69fc:105::e0e2)
[01:04:47] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:8a08:f3ba:6c3c:916a) (Quit: ZNC 1.8.2 - https://znc.in)
[01:05:00] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:c02b:c826:8dec:a35d)
[01:05:49] *** Joins: TheMatten (~thematten@2001:470:69fc:105::83c)
[01:09:55] *** Joins: dionys (dionys@user/dionys)
[01:15:43] *** Joins: pizdets (~pizdets@183.182.114.21)
[01:16:18] *** Quits: pizdets_ (~pizdets@183.182.111.212) (Ping timeout: 260 seconds)
[01:19:55] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[01:22:23] *** Joins: R2robot (~R2robot@user/r2robot)
[01:22:54] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[01:25:23] <kakolainen[m]> the regexp is a lot simpler when reversing the string: local lastdotpos = -str:reverse():match("[^.]+()")
[01:32:03] <tumn> but the task is to return the substring up to the last dot
[01:35:12] <kakolainen[m]> local fn,ext = str:sub(1,lastdotpos),str:sub(lastdotpos,-1)
[01:35:39] <tumn> that's 2 calls, :match("(.*)%..*$") is only 1
[01:36:12] <tumn> actually 3 with reverse
[01:36:28] <tumn> but if you want to find the position of the last dot, :match(".*()%.") doesn't require :reverse()
[01:37:06] <tumn> also :match("(.*)%.") might work now that I think about it, I haven't tested it
[01:37:35] <Habbie> they are not regexes, to be clear - i'm saying that in the hope it helps somebody
[01:40:56] <kakolainen[m]> none of those patterns might not always be a stable, [^.]+ will always be stable
[01:43:01] <kakolainen[m]> any pattern language which expresses exactly regular language are regular expressions
[01:46:26] <Habbie> right, i understand that definition, and most things we call 'regex' today are not in fact that
[01:46:29] <glguy> The absense of an alternation operation makes the lua string pattern language not regular
[01:47:01] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:47:06] *** Quits: netlynx (~jan@94-226-69-15.access.telenet.be) (Quit: Leaving)
[01:47:14] <kakolainen[m]> what is alternation?
[01:47:33] <glguy> In normal regexp syntax that is the | operator
[01:47:37] *** Quits: g5pw (~g5pw@mittelab/sudo/g5pw) (Quit: leaving...)
[01:47:58] *** Joins: g5pw (~g5pw@mittelab/sudo/g5pw)
[01:49:04] *** Joins: ano (~ano@user/ano)
[01:49:41] <glguy> the lua pattern language is restricted in other ways, too, that exclude it from being regular expressions. It's Kleene star can only be applied to a single character-set
[01:50:09] <glguy> Its*
[01:50:44] <Habbie> how does the absence of something make a language non-regular?
[01:51:16] <Habbie> (as i remember it, a language if regular if a DFA can implement it)
[01:51:24] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:51:41] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255)
[01:51:48] *** Joins: ano (~ano@user/ano)
[01:53:10] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:54:59] *** Joins: ano (~ano@user/ano)
[01:55:13] <kakolainen[m]> one day I found the probable reason why Lua disabled that alternation operator in wikipedia, it's because Lua is using simple recursive implementation and alternation would make some patterns horribly slow
[01:55:51] <Habbie> s/if regular/is regular/
[01:56:16] <glguy> Habbie: the statement is that lua patterns are not regular expressions, the word language doesn't feature
[01:56:49] <glguy> "regular expression" has a particular formal definition
[01:56:57] *** Joins: monkey_ (~user@190.104.116.153)
[01:57:11] <Habbie> glguy, lua patterns are a language, i meant
[01:59:18] <RhodiumToad> regular expressions are called that because they can recognize regular languages
[01:59:42] <RhodiumToad> whereas with lua patterns, there are regular languages that cannot be recognized by patterns
[02:00:22] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[02:00:47] <RhodiumToad> (of course these days some "regular expression" engines have features that allow them to recognize some non-regular languages too)
[02:01:26] <Habbie> RhodiumToad, that sounds exactly right to me, thanks
[02:03:23] <RhodiumToad> and yes, the set of regular languages is exactly the set of languages that can be recognized by a DFA (or NFA)
[02:04:09] <kakolainen[m]> Lua patterns are actually already more powerfull than regular language because the operator %c which can be used to count and match parenthesis 
[02:04:28] <RhodiumToad> but they're less powerful in other ways
[02:04:38] <kakolainen[m]> I mean %bxy
[02:04:51] <RhodiumToad> so they can recognize some non-regular languages, but they can't recognize some regular languages
[02:06:54] <RhodiumToad> so %b() recognizes the language of strings containing balanced parens, which is not regular
[02:07:47] <RhodiumToad> while the regular language (ab)* cannot be recognized by a lua pattern
[02:16:33] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[02:19:12] <kakolainen[m]> my take is that Lua has solved that just correctly with :gmatch("ab") also alternatin words is solved by extracting the words and using them as keys on a table which is what you usually want anyway
[02:25:39] *** Quits: Elw3 (~Elw3@x59cc9ac9.dyn.telefonica.de) (Quit: Leaving)
[02:29:33] *** Joins: sertsa (~sertsa@209.140.9.160)
[02:33:59] *** Quits: pizdets (~pizdets@183.182.114.21) (Ping timeout: 250 seconds)
[02:34:03] *** Joins: pizdets_ (~pizdets@183.182.110.19)
[02:34:23] <kakolainen[m]> also with Lua .* is currently guaranteed to get the longest match because the simple recursive backtracking implementation basically just reverses the string and iterates from end to start but if Lua or Luajit changes to more efficient implementation it might get unstable https://en.wikipedia.org/wiki/Regular_expression#Implementations_and_running_times
[02:36:04] <tumn> fun fact: if lua had a true regexp implementation, the code would probably be much bigger than lua itself
[02:37:26] <tumn> or rather bigger than all of the lua libraries together
[02:42:13] <tumn> random noob question: when people type s/foo/bar/ to correct previous messages on irc, is there some convention for clients to parse that and actually edit the previous message, or is it just a cute way to correct a typo?
[02:42:45] <kakolainen[m]> the Lua pattern engine is mostly just one 70 line function and a dozen small helper functions
[02:43:02] <technomancy> tumn: some clients can automatically apply it but I think it's a rather unusual feature
[02:43:12] <Habbie> tumn, i used to have an irssi script that did it
[02:43:20] <Habbie> i also recall the official Skype clients did it
[02:43:31] <Habbie> but generally, assume it happens in people's minds :)
[02:43:33] <tumn> interesting
[02:43:34] <fcr> I wonder if we should use BREs or EREs?
[02:43:42] <Habbie> which is why the weaker *foo form is also acceptable
[02:43:43] <tumn> thanks for the info
[02:44:02] <Habbie> fcr, what are B and E here?
[02:44:02] <tumn> for some reason I've always preferred foo* over *foo
[02:44:16] <Habbie> right, i'm not picky
[02:44:16] <fcr> Habbie: different flavors of regular expressions
[02:44:28] <Habbie> fcr, i figured, but what flavours are those?
[02:44:36] <fcr> basic and expanded
[02:44:47] <Habbie> ah
[02:45:26] <RhodiumToad> historically, BREs were what grep and ed offered
[02:45:26] <fcr> the most significant difference is that BREs don't officially support \|, while EREs don't always officially support backreferences I believe
[02:46:15] <fcr> I guess humans can deduce the flavor from the context
[02:46:32] <RhodiumToad> I don't recall where EREs first came from; maybe awk?
[02:47:31] <Habbie> extended, not expanded, then?
[02:47:40] <RhodiumToad> extended, yes
[02:48:09] <Habbie> how some flavours want \ to make things special, and others want \ to make things not special, annoys me to no end
[02:48:51] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:49:18] *** Joins: monkey_ (~user@190.104.116.153)
[02:51:56] <kakolainen[m]> Where GREP Came From - Computerphile https://www.youtube.com/watch?v=NTfOnGZUZDk
[02:51:57] <fcr> it seems ex is previous to awk, but it uses BREs..
[02:57:37] <fcr> ok, so lex docs (from 1975): https://www.epaperpress.com/lexandyacc/download/lex.pdf says: "The definitions of regular expressions are very similar to those in QED", and it proceed to basically define EREs
[02:59:40] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:00:18] <fcr> and QED from 1970, also present something similar to EREs, but a bit weirder: https://www.bell-labs.com/usr/dmr/www/qedman.html
[03:00:23] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-0655-0000-d569-e993-1e74-0956.dyn.netcomnetz.de) (Ping timeout: 264 seconds)
[03:04:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[03:08:41] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[03:20:37] *** Quits: sertsa (~sertsa@209.140.9.160) (Quit: Leaving)
[03:21:57] *** Joins: szutt (~szutt@116.37.2.145)
[03:31:49] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[03:53:07] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Quit: Leaving)
[03:56:11] *** Quits: magla (~gelignite@55d469ae.access.ecotel.net) (Quit: Stay safe!)
[04:15:14] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[04:18:35] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[04:28:16] *** Quits: fcr (~fran@r167-60-53-108.dialup.adsl.anteldata.net.uy) (Ping timeout: 268 seconds)
[04:32:46] *** Joins: fcr (~fran@r167-60-103-50.dialup.adsl.anteldata.net.uy)
[04:50:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5127-c5ae-948a-d7af.res6.spectrum.com) (Read error: Connection reset by peer)
[05:10:02] *** Quits: desolator (~desolator@140.238.242.25) (Quit: Ping timeout (120 seconds))
[05:10:12] *** Quits: feoh (~feoh@137.184.104.30) (Quit: Ping timeout (120 seconds))
[05:10:21] *** Joins: desolator (~desolator@140.238.242.25)
[05:10:42] *** Joins: feoh (~feoh@137.184.104.30)
[05:40:45] *** Quits: khoa (~khoa@user/khoa) (Ping timeout: 256 seconds)
[05:48:47] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[05:50:20] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[06:11:15] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:27] *** Joins: kiril (~kiril@85.91.153.163)
[06:33:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:07:54] *** Quits: rando25892 (~user@user/rando25892) (Quit: changing servers)
[07:09:19] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[07:09:24] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-069b-b500-2036-370c-d25d-0dd4.dyn.netcomnetz.de)
[07:28:42] *** Quits: splud (~noneya.bi@user/splud) (Ping timeout: 260 seconds)
[07:41:18] *** Joins: splud (~noneya.bi@user/splud)
[07:44:22] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-069b-b500-2036-370c-d25d-0dd4.dyn.netcomnetz.de) (Ping timeout: 268 seconds)
[08:24:48] *** Joins: w0ng (~w0ng@103.1.212.157)
[08:25:38] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 260 seconds)
[08:28:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[08:34:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[08:44:13] *** Quits: Wally (~Wally@dragonbox/forum-staff/wally) (Quit: Ah yeah)
[08:47:32] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[08:49:08] *** Quits: bbielsa (sid76145@id-76145.lymington.irccloud.com) (Ping timeout: 260 seconds)
[08:49:43] *** Quits: GoldenIvy (sid293767@id-293767.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[08:50:07] *** Joins: Wally (~Wally@121-200-22-21.79c816.mel.nbn.aussiebb.net)
[08:50:46] *** Quits: pony (sid524992@smol/hors) (Ping timeout: 260 seconds)
[08:51:51] *** Joins: bbielsa (sid76145@2a03:5180:f:2::1:2971)
[08:52:26] *** Joins: pony (sid524992@smol/hors)
[08:52:28] *** Joins: GoldenIvy (sid293767@2a03:5180:f:5::4:7b87)
[09:03:09] *** Joins: ano (~ano@user/ano)
[09:19:40] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:30:45] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:46:07] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:59:20] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[10:10:04] *** Joins: khoa (~khoa@user/khoa)
[10:11:23] <khoa> I have a question. How to I abort using luaL_Buffer after luaL_buffinit ?
[10:11:58] <khoa> From the manual it seems like luaL_Buffer messes with the stack so I couldn't just return without luaL_pushresult
[11:05:44] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[11:32:32] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[11:35:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:38:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:45] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:47:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:49:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:05:29] *** Joins: szutt (~szutt@116.37.2.145)
[12:44:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[12:46:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:16:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[13:18:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:36:57] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:45:34] <RhodiumToad> if you return back to lua (or throw an error) then the stack gets cleaned up anyway
[13:47:19] <RhodiumToad> in 5.4 it even frees any allocated buffer space immediately (in previous versions that gets cleaned up by GC)
[14:02:52] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[14:49:11] *** Joins: Elw3 (~Elw3@x59cc9b63.dyn.telefonica.de)
[14:57:38] *** Quits: Elw3 (~Elw3@x59cc9b63.dyn.telefonica.de) (Ping timeout: 260 seconds)
[15:26:35] *** Joins: Elw3 (~Elw3@x59cc99ae.dyn.telefonica.de)
[15:50:29] *** Quits: khoa (~khoa@user/khoa) (Ping timeout: 256 seconds)
[15:56:26] *** Quits: zenfold (~zenfold@user/zenfold) (Ping timeout: 260 seconds)
[16:10:44] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[16:30:22] *** Quits: fcr (~fran@r167-60-103-50.dialup.adsl.anteldata.net.uy) (Ping timeout: 268 seconds)
[16:35:25] *** Joins: fcr (~fran@r186-48-19-39.dialup.adsl.anteldata.net.uy)
[16:42:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[16:43:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:50:24] *** Joins: bomb (~bomb@user/bomb)
[16:52:04] *** Joins: zostj (~rue@1-162-47-227.dynamic-ip.hinet.net)
[16:52:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[16:54:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:58:57] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[17:14:09] *** Joins: graywolf (~wolf@user/graywolf)
[17:33:01] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[17:39:20] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[17:41:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[17:43:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:43:27] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-41ea-e7b0-8e8f-bea4.res6.spectrum.com)
[18:02:23] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[18:02:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:02:57] *** Joins: bomb (~bomb@user/bomb)
[18:03:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:13:50] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.3)
[18:23:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:24:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:29:57] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:19:51] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[19:30:12] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:477:1061:59ab:6b1f)
[19:30:12] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:477:1061:59ab:6b1f) (Changing host)
[19:30:12] *** Joins: skapata (~Skapata@user/skapata)
[19:37:50] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[19:42:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[19:42:25] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:05:17] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[20:14:52] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[20:19:52] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:40] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-069b-b500-a8ac-bc24-515b-7c5d.dyn.netcomnetz.de)
[20:40:31] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:45:08] *** Joins: ano (~ano@user/ano)
[20:50:49] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:51:33] *** Joins: ano (~ano@user/ano)
[20:52:01] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:53:48] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[21:04:58] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:06:25] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:20:09] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[21:20:25] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:21:00] *** Joins: rgrinberg (~textual@200.5.63.76)
[21:28:46] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-069b-b500-a8ac-bc24-515b-7c5d.dyn.netcomnetz.de) (Read error: Connection reset by peer)
[21:43:39] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[21:43:53] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[21:52:02] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a052:a7f8:c6e4:b537)
[21:52:02] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a052:a7f8:c6e4:b537) (Changing host)
[21:52:02] *** Joins: skapata (~Skapata@user/skapata)
[21:55:44] <bomb> https://news.ycombinator.com/item?id=29127098
[21:59:04] *** Joins: ano (~ano@user/ano)
[22:00:43] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[22:01:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[22:15:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:30:36] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:35:09] *** Joins: rgrinberg (~textual@200.5.63.76)
[22:44:15] *** Quits: Kane (~Kane@portal.yarg.fr) (Remote host closed the connection)
[22:44:23] *** Joins: reset (~reset@user/reset)
[22:47:47] *** Joins: Kane (~Kane@vps-546dd2ef.vps.ovh.net)
[22:51:16] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[22:53:20] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:56:01] *** Joins: ano (~ano@user/ano)
[22:57:07] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255) (Quit: Textual IRC Client: www.textualapp.com)
[23:07:51] *** Quits: zostj (~rue@1-162-47-227.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[23:30:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:31:19] *** Joins: ano (~ano@user/ano)
[23:33:25] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:33:48] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:34:48] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:35:40] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:59:21] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Read error: Connection reset by peer)
[23:59:27] *** Joins: ratchet_freak (~ratchetfr@d8D8779D9.access.telenet.be)
