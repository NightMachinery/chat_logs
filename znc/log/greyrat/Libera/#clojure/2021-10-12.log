[00:11:05] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c00bb172cd4356a9046.dip0.t-ipconnect.de) (Quit: to-hu)
[00:27:11] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 245 seconds)
[00:50:48] *** Joins: lad (~lad@user/lad)
[01:01:10] *** Joins: kreved (~user@176.194.138.167)
[01:05:29] *** Quits: kreved (~user@176.194.138.167) (Remote host closed the connection)
[01:06:43] *** Joins: kreved (~user@176.194.138.167)
[01:10:02] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:13:59] *** Quits: kreved (~user@176.194.138.167) (Remote host closed the connection)
[01:14:37] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[01:19:22] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:27:54] *** Quits: patrice (~patrice@user/patrice) (Quit: Leaving)
[01:30:55] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[01:32:02] *** Joins: evocatus (~rg@84.51.113.13)
[01:33:17] <evocatus> hi :)
[01:46:36] *** Quits: benoitj (~benoitj@user/benoitj) (Remote host closed the connection)
[01:46:55] *** Joins: benoitj (~benoitj@user/benoitj)
[01:51:40] *** Quits: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru) (Remote host closed the connection)
[01:52:40] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[01:57:22] *** Quits: evocatus (~rg@84.51.113.13) (Remote host closed the connection)
[01:57:42] *** Joins: evocatus (~rg@84.51.113.13)
[01:57:43] *** Quits: harrigan (~harrigan@162.43.195.133) (Ping timeout: 265 seconds)
[01:57:57] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[01:59:58] *** Quits: tcrawley (~tcrawley@2600:6c5e:467f:b0cb:fdda:191c:9b47:c913) (Ping timeout: 268 seconds)
[02:00:09] *** Joins: harrigan (~harrigan@162.43.194.138)
[02:09:01] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[02:13:25] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[02:14:13] *** Joins: bjorkintosh (~bjork@2600:1702:6a0:af0:55a7:a0fc:48ed:3860)
[02:28:05] <sobel> Strange Loop videos are up
[02:28:11] <sobel> starting to go up
[02:28:34] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[02:34:42] *** Joins: skeemer (~skeemer@h-158-174-23-142.na.cust.bahnhof.se)
[02:35:05] <skeemer> hello all i am studying SICP and quite excited about lispy languages... is clojure more similar to scheme or common lisp? 
[02:38:01] *** Quits: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru) (Ping timeout: 245 seconds)
[02:54:16] *** Quits: lad (~lad@user/lad) (Ping timeout: 245 seconds)
[03:12:58] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[03:20:43] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[03:26:46] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[03:28:13] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 252 seconds)
[03:33:51] <technomancy> skeemer: the macro system is more like CL but the rest is more like scheme
[03:33:56] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Ping timeout: 246 seconds)
[03:37:47] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[04:01:56] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[04:20:50] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[04:21:04] *** Quits: libertyprime (~libertypr@118.149.78.205) (Ping timeout: 252 seconds)
[04:48:16] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[04:48:32] *** Quits: evocatus (~rg@84.51.113.13) (Quit: Konversation terminated!)
[05:03:17] *** Quits: lunik1 (~lunik1@37.205.14.203) (Quit: Ping timeout (120 seconds))
[05:03:32] *** Joins: lunik1 (~lunik1@37.205.14.203)
[05:04:10] *** Quits: gaustin (sid356092@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: meinside (uid24933@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:04:20] *** Joins: gaustin (sid356092@id-356092.helmsley.irccloud.com)
[05:04:21] *** Quits: Ingvix (~Ingvix@user/ingvix) (Remote host closed the connection)
[05:04:42] *** Joins: Ingvix (~Ingvix@user/ingvix)
[05:05:23] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[05:59:52] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[06:38:42] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[06:46:56] *** Quits: mlb- (~kahr@158.51.193.173) (Ping timeout: 268 seconds)
[06:48:36] *** Joins: mlb- (~kahr@158.51.193.173)
[06:53:42] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 260 seconds)
[06:58:19] *** Joins: mbuf (~Shakthi@122.178.178.86)
[07:08:57] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 250 seconds)
[07:17:01] *** Joins: skeemer__ (~skeemer@h-158-174-23-142.NA.cust.bahnhof.se)
[07:17:01] *** Quits: skeemer (~skeemer@h-158-174-23-142.na.cust.bahnhof.se) (Remote host closed the connection)
[07:17:13] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[07:18:19] *** Quits: kipz (~kipz@home.kipz.org) (Remote host closed the connection)
[07:18:52] *** Joins: kipz (~kipz@home.kipz.org)
[07:30:00] *** Quits: rufo (~rufo@ct.rufoa.com) (Quit: bye)
[07:31:28] *** Joins: rufo (~rufo@ct.rufoa.com)
[07:36:57] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[08:31:01] *** Joins: struchu (~struchu@staticline-31-183-182-200.toya.net.pl)
[09:02:47] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[09:03:43] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[09:26:19] *** Joins: to-hu (~Thunderbi@p200300e9af0e9c00c16c3edf26491f6a.dip0.t-ipconnect.de)
[09:30:25] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[09:34:41] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 245 seconds)
[09:36:13] *** Quits: struchu (~struchu@staticline-31-183-182-200.toya.net.pl) (Ping timeout: 252 seconds)
[09:38:22] *** Joins: struchu (~struchu@staticline-31-183-182-200.toya.net.pl)
[09:44:30] *** Joins: wonko (~wjc@62.115.229.50)
[09:46:40] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[09:51:04] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[09:57:06] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 260 seconds)
[09:57:06] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c00c16c3edf26491f6a.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:04:38] *** Quits: mbuf (~Shakthi@122.178.178.86) (*.net *.split)
[10:04:39] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (*.net *.split)
[10:04:39] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (*.net *.split)
[10:04:39] *** Quits: jaawerth (~jaawerth@104.131.115.202) (*.net *.split)
[10:04:39] *** Quits: jsn- (~jason@scw.ice-9.eu) (*.net *.split)
[10:04:39] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[10:04:39] *** Quits: sobel (~matt@66.219.34.76) (*.net *.split)
[10:04:39] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[10:04:39] *** Quits: maskd (~eu@user/maskd) (*.net *.split)
[10:04:39] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[10:04:39] *** Quits: Para (~Para@95.216.176.167) (*.net *.split)
[10:16:14] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[10:20:38] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[10:26:26] *** Joins: mbuf (~Shakthi@122.178.178.86)
[10:26:26] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[10:26:26] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[10:26:26] *** Joins: jaawerth (~jaawerth@104.131.115.202)
[10:26:26] *** Joins: jsn- (~jason@scw.ice-9.eu)
[10:26:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[10:26:26] *** Joins: sobel (~matt@66.219.34.76)
[10:26:26] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[10:26:26] *** Joins: maskd (~eu@user/maskd)
[10:26:26] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[10:26:26] *** Joins: Para (~Para@95.216.176.167)
[10:40:36] *** Joins: atw (~user@dynamic-089-014-193-130.89.14.pool.telefonica.de)
[10:43:43] *** Joins: cranium (~cranium@user/cranium)
[11:17:18] *** Quits: struchu (~struchu@staticline-31-183-182-200.toya.net.pl) (Quit: WeeChat 3.3)
[11:17:36] *** Joins: struchu (~struchu@staticline-31-183-182-200.toya.net.pl)
[11:37:03] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:40] *** Parts: mwnaylor (~user@2601:5ce:4300:5560::6a2) (ERC (IRC client for Emacs 26.3))
[11:38:01] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::6a2)
[11:38:15] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:06:41] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[12:44:38] *** Joins: amoe (~amoe@visarend.solasistim.net)
[12:44:48] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[12:48:37] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:48:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:49:53] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 264 seconds)
[12:53:39] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[13:00:23] *** Joins: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de)
[13:21:54] <andreyorst> I've recently finished reading the Practical CL book, and I've found much more similarities in Clojure to CL, than to Scheme (I wrote some Guile prior to Clojure)
[13:28:11] <atw> I believe CL was an inspiration for Clojure
[13:29:38] <andreyorst> yeah, that what I felt while reading PCL. A lot of inspiration :)
[13:34:17] *** Joins: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-101F-static.midco.net)
[13:34:19] *** Quits: atw (~user@dynamic-089-014-193-130.89.14.pool.telefonica.de) (Ping timeout: 252 seconds)
[13:34:50] *** Joins: atw (~user@dynamic-089-014-193-130.89.14.pool.telefonica.de)
[13:37:11] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1019-static.midco.net) (Ping timeout: 245 seconds)
[14:31:25] <leah2> imo clojure is more different to cl and scheme than cl and scheme are different :)
[14:34:58] *** Quits: struchu (~struchu@staticline-31-183-182-200.toya.net.pl) (Ping timeout: 265 seconds)
[14:36:54] *** Joins: struchu (~struchu@staticline-31-183-182-200.toya.net.pl)
[15:00:34] <andreyorst> well, I mean, differences like that Clojure's `defn` creates a function on a top level, and Scheme's `define` does it in the current scope, which makes Clojure closer to CL than to a Scheme
[15:01:21] <goodger> defn isn't short for define, it's short for (def (fn))
[15:01:29] <goodger> def is clojure's define
[15:01:30] <andreyorst> define is def in scheme
[15:01:41] <andreyorst> well, not def, as it is local scoped
[15:01:43] *** Quits: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de) (Ping timeout: 250 seconds)
[15:02:17] <andreyorst> but it does define variables, as (define (foo bar)) is (define foo (lambda (bar)))
[15:03:20] <andreyorst> What I'm saying is that the difference is in scoping, which is more close to what CL does
[15:04:36] <andreyorst> Clojure just went for a more general approach, where CL has defvar, defparameter, etc, Clojure just has def + metadata to adjust its behavior
[15:24:57] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:30:30] *** Joins: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de)
[15:33:26] <sobel> Soooo, I might be at a point where I can estimate the number of languages/technologies I might have interest for, before I retire to rules like "nothing with more than 1kb of RAM" or "should be made out of wood"
[15:33:42] <sobel> it's optimistic -- i hope i get to retire one day!
[15:33:53] <sobel> but... #clojure, should CL be on that list?
[15:36:59] <sobel> At some point, the desperate question of what lies beyond OOP was well answered by Clojure and more broadly by FP. What does CL offer a clojure nerd whose first lisp is clojure?
[15:38:10] <sobel> every time i hear one of those CL-to-clojure stories i feel lucky to have clojure as my first, but disappointed i slept on CL until clojure.
[15:41:10] *** Quits: hiredman (~hiredman@frontier1.downey.family) (Ping timeout: 260 seconds)
[15:44:08] <andreyorst> CL is a decent language, but I find it breeming with unnecessary details, and overburdened by its past
[15:44:45] <andreyorst> but it is defenitiviely not a bad language
[15:45:48] <andreyorst> as for what it offers, I think it offers/allows for more expressiveness than Clojure will ever do, as Clojure is opiniated, whereas Common Lisp is, well, /common/
[15:46:32] <andreyorst> not to say it doesn't have flaws, and Clojure just fixes a lot of CL's flaws IMO
[15:50:07] <sobel> expressiveness in what dimension(s)? i'm sorta blind to clojure's opinionation without contrasting examples
[15:50:26] <sobel> TYVM, too. that closes a few questions for me.
[15:51:29] <sobel> and is pretty much in line with the sentiment i've absorbed over the past few months since i started trying to pay more attention to CL/CLers. one of my favorite apps (pg_loader) is a well-known CL app, so it's come up from the postgresql side of things too.
[15:51:48] <sobel> speaking of opinionation: lisp + postgresql, wooo!
[15:56:54] <lunik1> I've heard enough people I respect say enough things about CLOS that I want to check it out
[16:00:13] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[16:04:51] *** Joins: tcrawley (~tcrawley@2600:6c5e:467f:b0cb:6aea:ca3b:b263:65ed)
[16:07:54] *** Quits: euandreh (~euandreh@191.181.59.160) (Ping timeout: 265 seconds)
[16:15:31] *** Quits: atw (~user@dynamic-089-014-193-130.89.14.pool.telefonica.de) (Ping timeout: 245 seconds)
[16:15:51] <andreyorst> sobel: well, you're basically not limited by the languages. I'm not a CL programmer, but what I understand is that you're free to do things YOU think is appropriate.
[16:16:27] <andreyorst> Clojure is kinda focused on solving concrete problems Rich faced during his years of professional development
[16:17:01] <andreyorst> which isn't a bad thing, but you would rarely see things that are go against Clojure's conventions
[16:18:56] <andreyorst> let's put it this way - you probalby can implement all Clojure semantics in CL via (reader)macros and a functional library, but you probably can't implement CL semantics in Clojure, as you're constrained by JVM and the language itself
[16:19:09] <lunik1> If I'm being honest with myself when a language gives me that kind of power I usually use it for evil
[16:19:17] <andreyorst> it's not a super accurate statement, so don't be mad at me pls :D
[16:36:39] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:ce7f:4e93:4cc4:1ccd)
[16:45:42] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[16:45:45] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[16:47:43] <sobel> i guess i don't really understand the CL VM model. i mostly get the JVM these days, and i am pretty sure i get the linux/windows variants of the posix VM
[16:48:07] <sobel> or whatever that process model is called these days
[16:48:23] <sobel> welp, sounds like another adventure might be in store for me then :)
[16:52:01] <andreyorst> cool thing about CL is that it is compiled to machine code
[17:02:47] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[17:12:16] <sobel> that's pretty much the core of my interest in CL. being able to get that close to hardware has appeal.
[17:13:43] <sobel> it feels weird calling r.pi "embedded" but that's sorta my eventual target for personal server apps these days. everything for work goes to the cloud, and i don't care to manage any real hardware beyond a laptop.
[17:14:28] <andreyorst> for real embedded theres microscheme, or ulisp, or lokoscheme IIRC
[17:14:54] <Para> I learned yesterday that Roomba in fact runs on embedded Lisp.
[17:15:52] <sobel> oh neat
[17:16:05] *** Quits: struchu (~struchu@staticline-31-183-182-200.toya.net.pl) (Ping timeout: 246 seconds)
[17:16:29] <sobel> i might be looking to run embedded lisp when i start digging into my stash of ESP32 parts
[17:17:06] <sobel> alas, i got ready to dive into ESP32 then ended up diving into oauth2 and react instead (work got busy)
[17:30:19] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[17:54:47] *** Quits: lunik1 (~lunik1@37.205.14.203) (Ping timeout: 268 seconds)
[17:56:12] *** Joins: to-hu (~Thunderbi@p200300e9af0e9c00894999244c28dab1.dip0.t-ipconnect.de)
[18:04:01] *** Joins: arjun (~Srain@user/arjun)
[18:04:03] <arjun> hi
[18:04:15] <arjun> how do i introduce a dev-mode flag in my codebase
[18:04:51] <arjun> for things like type-checking via malli, that should only be done when i am developing
[18:06:28] <andreyorst> you need a dev profile
[18:06:43] <arjun> where do i get that andreyorst?
[18:06:57] <andreyorst> what project management tool do you use?
[18:07:04] <andreyorst> lein, deps, boot?
[18:07:08] <arjun> there are .edn files
[18:07:18] <arjun> so i suppose thats deps right?
[18:07:30] <andreyorst> deps.edn is probably deps, yeah
[18:09:02] <arjun> so, where do i look for it if i use that?
[18:09:30] <arjun> * i am new to clojure AND this project :P, pardon the noobness of the questions *
[18:09:48] <Para> You're asking a darn good question, I'll give you that.
[18:10:06] <andreyorst> I would suggest to look at deps.edn in some already existing project
[18:10:17] <andreyorst> like https://github.com/babashka/babashka/blob/master/deps.edn
[18:10:39] <andreyorst> I'm not deps.edn user so I don't really know details on adding aliases and profiles thre
[18:10:43] <andreyorst> there*
[18:11:27] <arjun> right, i'll look into it, thanks
[18:11:28] <Para> As analogs, deps.edn is pretty much the same as package.json
[18:11:35] <Para> It's very omakase.
[18:12:28] <arjun> i see
[18:12:44] *** Joins: son0p (~ff@181.136.122.143)
[18:14:02] <Para> Leiningen used to be the defacto, and its analog is Maven. Its just explicit configuration. I'm not sure why exactly this has been perceived as something worth replacing but the whole deps.edn/cli tools/tools.build thing feels like Extinguish of classic 3E's to me.
[18:14:54] <andreyorst> maybe because Clojure was seen as a language without official tooling
[18:15:07] <Para> I always do get a slightly uneasy feeling about talking this topic as it's one of those things which really don't matter _that_ much... :) It's just weird to me. Boot already died trying to show that all builds are programs.
[18:15:27] <andreyorst> languages which have separate package managers are kinda weird
[18:16:06] <Para> Clojure has never felt like something meant to be packaged, anyways. It's one of the good secondary features of it though.
[18:16:27] <andreyorst> especially since it is hosted
[18:16:30] <Para> Like since deps are mostly just .clj files in a JAR, you'll pretty much never run into binary incompatability issues.
[18:17:09] <Para> I guess I just don't have the nixbeard for understanding the relevance of this, and I'm fine with it :)
[18:21:03] <Para> If you're ever interested, do read into how Boot used to work. It was basically a plugin based state machine for filesystem changes.
[18:21:20] <Para> Which of course meant that writing simple build extension plugins for it was terrible.
[18:24:32] *** Quits: xsperry (~xs@user/xsperry) ()
[18:24:41] *** Quits: kipz (~kipz@home.kipz.org) (Ping timeout: 265 seconds)
[18:25:05] <andreyorst> I'm so glad I've started with leiningen
[18:25:20] <andreyorst> it really eased introduction to Clojure
[18:26:23] <arjun> smh
[18:26:36] <arjun> how difficult is it to pass a flag ?
[18:26:45] <Para> Yes.
[18:27:05] <arjun> neither would it let me define it anywhere in .edn nor let me pass one
[18:28:04] *** Joins: lunik1 (~lunik1@37.205.14.203)
[18:29:07] <Para> I have this slightly kneejerky idea that your cli sucks if the commands you input to it don't pass the `[a-z0-9-_\s]+` regex. Parameter values notwithstanding, as those tend to be horrible for other reasons usually out of your control.
[18:30:41] <ridcully> arjun: i dont know what exactly you are after.  it's quite common to put dev-stuff in your user.clj.  so you usually fire up your repl for dev and then pick and choose, what you need - then this tooling is all there just for "dev mode"
[18:31:14] <arjun> ridcully: i'd like to import/run certain things when developing
[18:31:18] <arjun> and not in runtime
[18:31:37] <arjun> for eg:-
[18:31:39] <arjun> (require '[malli.dev :as dev])
[18:31:40] <arjun> ;;     (require '[malli.dev.pretty :as pretty])
[18:31:40] <arjun> ;;     (require '[malli.instrument :as mi])
[18:31:40] <arjun> ;;     (dev/start! {:report (pretty/reporter)}))
[18:31:43] <ridcully> if you really need to kill-switch things in your prod-code, env-vars are an option.  or even starting a net-repl in prod to toggle things.  this can be some atom/dyn-var.  or an env var for some more permanent setup
[18:32:21] <arjun> ridcully: i'd like to require them, run the dev/start only when developing
[18:32:22] <ridcully> putting that in your user.clj is the right place usually
[18:32:37] <andreyorst> I think arjun talks about things like *assert*
[18:32:56] <andreyorst> setting this var to false disables assertions
[18:33:08] <arjun> andreyorst yes
[18:33:13] <andreyorst> which is commonly done in prod builds, but left on in dev builds
[18:33:21] <arjun> totes
[18:33:35] <andreyorst> sadly I don't know how to do this with deps.edn, only with leiningen
[18:33:44] <arjun> tell me
[18:33:48] <andreyorst> and not sure if malli supports it
[18:33:51] <arjun> i'll translate that somehow
[18:34:14] <andreyorst> well, leiningen has a dedicated profiles section, in which you can change global variables
[18:34:15] <ridcully> dev/start! enabled the instrumentation (it starts an background process)
[18:34:29] <ridcully> so if you add this in user you have that for your dev env
[18:34:55] <ridcully> instrumentation is way more "intrusive" than toggling asserts
[18:35:05] <Para> andreyorst: I've done similar flag trickery before with https://github.com/borkdude/dynaload
[18:35:13] <Para> Not the cleanest way if you think about it, but it works :)
[18:35:36] <andreyorst> arjun: https://github.com/technomancy/leiningen/blob/stable/sample.project.clj#L285-L290 not sure how helpful it will be, as lein is a totally different beast
[18:36:09] <arjun> thanks guys ridcully andreyorst Para, i'll see what i can find
[18:37:08] <ridcully> make sure to hold on to something from the dev/start! if you want to stop/restart
[18:38:02] <ridcully> if you always want to have that running, just run it in user.clj.  if you want it optionally, make it a function, that devs can run
[18:38:02] *** Joins: hiredman (~hiredman@frontier1.downey.family)
[18:38:08] <arjun> ridcully, right!
[18:38:38] <ridcully> (or rather make it always two functions to start and stop and then run that top-level or not)
[18:38:56] <Para> I should/could put to GitHub my basic project structure, just for giggles.
[18:39:16] *** Joins: kipz (~kipz@home.kipz.org)
[18:39:31] <Para> I actually have three source roots, src/ and test/ for obvious things and then dev/ for devvy things.
[18:41:05] <ridcully> that's quite a standard layout.  e.g. figwheel template create a user.clj to start figwheel etc.  the component/integrant/... reload workflows have their reload tooling there etc
[18:42:00] <Para> I do sometimes also use the Maven directory layout for Reasons, usually related to interop/resource files, eg. project has Logback and I want tests/dev to use their own configs and package something else to JAR.
[18:42:20] <Para> So I end up with src/{main,test,dev}/{clj,resources} :)
[18:44:37] <Para> src/dev/clj/root/user.clj which is the main entrypoint for dev REPL and src/main/clj/root/main.clj (or cli.clj) for JAR entrypoint
[18:44:51] <Para> Or some nonsense like that.
[18:46:08] <Para> And to be specific, I have the main.clj or cli.clj present only if it makes sense, the app core entrypoint ns is always core.clj, done so that the all the other nses I just mentioned use the core.clj in some way or form.
[18:57:18] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[18:57:35] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:d981:e67:a14e:69db)
[18:57:56] *** molson__ is now known as molson
[18:58:39] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:d981:e67:a14e:69db) (Client Quit)
[18:59:08] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:d981:e67:a14e:69db)
[19:04:28] *** Joins: mamapitufo (~mamapituf@92.41.150.42.threembb.co.uk)
[19:04:58] *** Quits: tcrawley (~tcrawley@2600:6c5e:467f:b0cb:6aea:ca3b:b263:65ed) (Ping timeout: 260 seconds)
[19:10:04] *** Joins: op2 (~op@user/op2)
[19:11:45] *** Joins: seschwar (~seschwar@user/seschwar)
[19:14:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[19:17:31] *** Quits: mamapitufo (~mamapituf@92.41.150.42.threembb.co.uk) (Ping timeout: 252 seconds)
[19:27:04] *** Quits: arjun (~Srain@user/arjun) (Ping timeout: 268 seconds)
[19:34:17] *** Quits: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de) (Ping timeout: 250 seconds)
[20:15:41] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 264 seconds)
[20:36:08] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (Ping timeout: 268 seconds)
[20:37:24] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[20:54:46] *** Joins: mamapitufo (~mamapituf@92.41.150.42.threembb.co.uk)
[21:06:48] *** Quits: amoe (~amoe@visarend.solasistim.net) (Quit: leaving)
[21:10:08] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[21:13:17] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[21:13:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:14:41] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[21:25:50] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[21:29:59] *** Quits: sailorCa` (~user@p200300f6a70c4a15e1db8b968a616df3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:31:46] *** Joins: sailorCa` (~user@p200300f6a70c4ac62541a09f7b95491c.dip0.t-ipconnect.de)
[21:36:42] *** Quits: mbuf (~Shakthi@122.178.178.86) (Quit: Leaving)
[21:44:16] *** Joins: wonko (~wjc@62.115.229.50)
[21:57:29] *** Quits: mamapitufo (~mamapituf@92.41.150.42.threembb.co.uk) (Ping timeout: 246 seconds)
[22:06:25] *** Joins: pseudonymous (~pseud@78.143.68.142.static.fibianet.dk)
[22:09:53] <pseudonymous> I am writing a system using integrant to start components. I used to have (jetty/run-jetty #'server options) but I need to pass some context (a db var) to the handlers. Something like https://github.com/prestancedesign/usermanager-reitit-example/blob/main/src/usermanager/handler.clj breaks wrap-reload, I have to restart the web server (e.g. (run-jetty #'server options) is ok, (run-jetty (make-server 
[22:09:59] <pseudonymous> db) options) won't work). Ideas ?
[22:14:20] *** Joins: arno (~arnaudgei@178.197.192.80)
[22:15:02] <arno> ^s
[22:16:09] *** Parts: arno (~arnaudgei@178.197.192.80) ()
[23:15:15] *** Joins: struchu (~struchu@staticline-31-183-170-9.toya.net.pl)
[23:18:03] *** Joins: xsperry (~xs@user/xsperry)
[23:51:33] *** Joins: mamapitufo (~mamapituf@92.41.150.42.threembb.co.uk)
[23:57:54] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c00894999244c28dab1.dip0.t-ipconnect.de) (Remote host closed the connection)
