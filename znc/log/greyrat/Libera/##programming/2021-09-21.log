[00:00:37] <snake> negate the following: Some sites are slow and ugly
[00:01:08] <snake> i'm thinking No sites are slow and ugly, but I could also see No sites are slow or no sites are ugly
[00:01:37] <InPhase> Many sites are fast or attractive.
[00:01:59] <InPhase> The logical inversion must flip the boolean operation.
[00:02:44] <snake> InPhase, many sites is the same as some sites
[00:02:51] <InPhase> It's not.
[00:03:27] <snake> in this case i think it is
[00:03:28] <InPhase> Oh, but also, you want the inverse, not the opposite statement.  I messed up.
[00:03:50] *** Joins: on^ (~on@12.203.127.82)
[00:03:53] <InPhase> "No sites are slow and ugly" is the strict negation of the proposition.
[00:04:18] <snake> there are two options, universal quantifier or existential quantifier
[00:04:41] <snake> at least so far, idk about later
[00:05:02] <snake> oh yeah i have inverse in my notes, but i didn't know it was negation, thankyou
[00:05:08] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[00:05:08] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Client Quit)
[00:05:12] <InPhase> And it's confusing because "some" is actually a restrictive statement.  If all sites are slow and ugly, it's not correct in English to say "Some sites are slow and ugly".
[00:05:26] <InPhase> It's logically correct, but also wrong to say.  :)
[00:05:34] <snake> oh inverse for implication, so nvm i dont have inverse for AND
[00:05:58] <snake> sure but the professor translates "some" to "at least one"
[00:06:00] <snake> :v
[00:06:05] <snake> it is a little odd sounding tho
[00:06:36] <InPhase> Under that operational definition, the no sites one is the negation of the proposition.
[00:06:40] <[itchyjunk]> snake pick your proposition
[00:07:09] *** Joins: reddit89 (~user@user/reddit89)
[00:07:28] <InPhase> In the real world "Some sites" is an assertive claim that there is more than one.
[00:07:37] <[itchyjunk]> sites are slow and ugly as P, not P would be Not(sites are slow and ugly) and negative of that would be Not(Not(Sites are slow and ugly))
[00:07:43] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[00:08:15] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:08:18] <snake> i see
[00:08:20] <[itchyjunk]> its an intro to OOP class
[00:08:22] <GeDaMo> https://en.wikipedia.org/wiki/De_Morgan%27s_laws
[00:08:23] <bayaz> Title: De Morgan's laws - Wikipedia 
[00:08:30] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[00:08:37] <Hash> Morning
[00:08:41] <[itchyjunk]> snake for English being negated, its never a nice answer
[00:08:51] <Inline> All else aren't fast and beautiful 
[00:08:55] <Inline> lol
[00:08:55] <[itchyjunk]> you have to somehow decide what your proposition is and then negate those
[00:09:01] <Hash> How it going folks
[00:09:05] <Hash> And non folks
[00:09:14] <Hash> And hidden aliens among us
[00:09:20] <[itchyjunk]> this class is all over the place though
[00:09:30] <[itchyjunk]> I was hoping to see polymorphism and shit
[00:09:36] <[itchyjunk]> maybe compare it to FP somehow
[00:09:37] *** Quits: reddit891 (~user@user/reddit89) (Ping timeout: 252 seconds)
[00:09:45] <[itchyjunk]> all I get is shitty TA's telling me to no ask questions
[00:10:06] <Hash> Someone at a university said don't ask questions
[00:10:13] <Hash> Perhaps it's not even a university
[00:10:42] <snake> [itchyjunk], i was thinking There exists an x such that (S(x) and U(x))
[00:10:52] <Hash> That's where you go and ask questions
[00:11:31] <snake> and this is where i get confused, because of demorgan's law :v you would swap and with or and or with and
[00:11:56] <InPhase> [itchyjunk]: Standard content for an introduction to OOP should include bundling data and behavior, encapsulation, inheritance, dispatch, and polymorphism as the main topics.  Preferrably approximately in that order.
[00:12:25] <InPhase> [itchyjunk]: The word "composition" should be taught in the first part.
[00:12:39] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:12:46] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[00:12:47] <[itchyjunk]> snake in that case GeDaMo link is useful
[00:12:54] <[itchyjunk]> de Morgans law
[00:13:17] <[itchyjunk]> we've not learned any of those topics
[00:13:18] <snake> right yeah i saw that, but then this is also specifically de morgan's law with the quantifiers
[00:13:41] <[itchyjunk]> we learned about using recursion on tree like data structure
[00:14:02] <snake> here we go https://en.wikipedia.org/wiki/De_Morgan%27s_laws#Extension_to_predicate_and_modal_logic
[00:14:05] <bayaz> Title: De Morgan's laws - Wikipedia 
[00:14:07] <[itchyjunk]> well (Not A and B ) can be negated right?
[00:14:07] <Hash> What is a tree like data structure
[00:14:10] <InPhase> [itchyjunk]: A comprehensive coverage would then move into abstraction, modeling of real world systems, cover some example patterns, and architectural decisions using OOP.
[00:14:14] <Hash> Isn't it just a tree
[00:14:17] <[itchyjunk]> not( not A and B ) = ?
[00:14:38] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[00:14:48] <InPhase> [itchyjunk]: If you have not learned the first list of things I gave, you have not learned OOP yet.  Is it early in the course?
[00:14:55] <[itchyjunk]> maybe my class is just called accelerated introduction to object oriented programming
[00:14:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:15:01] <[itchyjunk]> its a month in
[00:15:17] <InPhase> Of 4 months?
[00:15:34] <[itchyjunk]> yeah 18 week ish
[00:15:46] <InPhase> [itchyjunk]: Was there a programming course prereq?
[00:16:18] <[itchyjunk]> I am not sure. this is 1420. there is a 1410. I had to take a programming class to graduate so I was thrown into this
[00:16:26] <[itchyjunk]> not sure how the CS department classes work
[00:16:31] <[itchyjunk]> I think there is none
[00:16:42] <[itchyjunk]> you can take this and skip 3 lower level classes
[00:16:55] <[itchyjunk]> its for "advanced students who might have already seen programming" it says
[00:17:09] <InPhase> [itchyjunk]: If there is no prereq, then the first portion of the course must be an introduction to structured programming, and OOP can only occur toward the later half.
[00:17:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:17:17] *** Joins: zaher_ (~zaher@37.48.183.40)
[00:17:28] <[itchyjunk]> ah I must be in the structred programming class then
[00:17:39] <[itchyjunk]> part of the class
[00:18:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:18:17] <InPhase> [itchyjunk]: It is customary to distribute a syllabus of topic outlines.  Did you not receive one?
[00:18:57] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:41b2:17b3:58ee:8d51) (Read error: Connection reset by peer)
[00:19:18] *** Quits: zaher (~zaher@37.48.187.133) (Ping timeout: 265 seconds)
[00:19:33] <[itchyjunk]> hm I have the syllabus somewhere 
[00:19:37] * [itchyjunk] checks
[00:20:26] <[itchyjunk]> oh shit
[00:20:31] <[itchyjunk]> October has fall break
[00:21:01] <[itchyjunk]> oh yeah It does say what gets covered
[00:21:12] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:fd8b:da48:a404:88bc) (Quit: Textual IRC Client: www.textualapp.com)
[00:22:12] <[itchyjunk]> next is arrays, classes, object fields and methods, constructors object lifecycles accessors mutators refrences
[00:22:17] <[itchyjunk]> in one class? yikes
[00:23:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[00:23:14] <InPhase> [itchyjunk]: In C#?
[00:23:19] <[itchyjunk]> java
[00:23:24] <[itchyjunk]> its OOP class being taught in java
[00:23:41] <InPhase> Oh.  Well, that is a classic choice I guess.
[00:23:55] <InPhase> And a little better than C#.
[00:24:03] <[itchyjunk]> final project will be a GUI games, which is stressing me out
[00:24:14] <snake> i think S(x) and U(x) is like P(x) or (S(x) and U(x)) so i would leave the and there
[00:24:17] <[itchyjunk]> I don't get to start early because he won't describe the final project till end of next months
[00:24:43] *** Joins: yinghua (~yinghua@2800:2121:1400:1db:3d91:483:36a2:ad4f)
[00:24:53] <[itchyjunk]> snake you mean not(A and B ) becomes not A or not B ?
[00:24:59] *** Joins: jazzy2 (jaziz@gateway/vpn/protonvpn/jaziz)
[00:25:09] <InPhase> [itchyjunk]: I made a really fun Java web game 18 years ago, and now no one can play it because Java got ripped out of all the browsers.  :(
[00:25:22] <[itchyjunk]> wait did it?
[00:25:32] <[itchyjunk]> I thought you had those applets or somesuch
[00:25:54] *** Quits: jazzy2 (jaziz@gateway/vpn/protonvpn/jaziz) (Remote host closed the connection)
[00:26:09] <[itchyjunk]> web game sounds harder , I'd have to learn web protocol and sockets :P
[00:26:19] <InPhase> It was no harder.
[00:26:24] <InPhase> Back when this worked.
[00:26:26] <[itchyjunk]> I am hoping I can make some stupid game with a front end
[00:26:34] <InPhase> It just ran as Java, in the browser.
[00:26:36] *** Joins: jazzy2 (jaziz@gateway/vpn/protonvpn/jaziz)
[00:26:50] *** Joins: user51 (~user51@176.228.90.248)
[00:26:51] <[itchyjunk]> browers could run java byte codes?
[00:26:56] <InPhase> Yep.
[00:26:56] <[itchyjunk]> sounds wild
[00:27:02] <InPhase> It was pretty nice actually.
[00:27:12] <snake> [itchyjunk], well yeah, but in this case it is more like NOT((S(a) AND U(a)) OR (S(b) AND U(b)))
[00:27:19] <InPhase> Like having a proper modern language for things on the web.  And then they decided this was risky.
[00:27:40] <[itchyjunk]> and hence java script was born?
[00:28:03] <InPhase> Javascript was around all along, but not relied on for the serious stuff until a certain point along the way.
[00:28:14] *** Quits: jazzy (~jaziz@2600:380:457b:dc40:6db7:481b:9945:77d8) (Ping timeout: 246 seconds)
[00:28:15] <InPhase> Well, not all along, but for a while.
[00:28:35] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:28:35] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[00:28:54] <InPhase> Late 1995 they integrated javascript.
[00:29:00] <InPhase> Somewhere around then.
[00:29:00] <[itchyjunk]> what are the most basic games that you can think of?
[00:29:01] <[itchyjunk]> gui
[00:29:16] <GeDaMo> Minesweeper?
[00:29:20] <[itchyjunk]> yikes
[00:29:26] <GeDaMo> Reversi
[00:29:27] <[itchyjunk]> that sounds hard
[00:29:35] <[itchyjunk]> what's reverse?
[00:29:39] <[itchyjunk]> auto complete..
[00:29:50] <snake> [itchyjunk], de morgan's applies on the operation between the predicate for each element in the domain, not the individual components of the quantifier's scope
[00:29:53] <dodo> throw a dice, bigger number wins. flip a coin
[00:29:53] <GeDaMo> https://en.wikipedia.org/wiki/Reversi
[00:29:54] <bayaz> Title: Reversi - Wikipedia 
[00:30:02] <GeDaMo> There was a version of that with Windows 1
[00:30:06] *** Joins: jazzy3 (~jaziz@2600:380:457b:dc40:5c0f:a321:1cd7:19b9)
[00:30:07] <MrMobius> tic tac toe
[00:30:19] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[00:30:19] *** Quits: hexingb (~hexingb@111.30.224.85) (Read error: Connection reset by peer)
[00:30:21] <MrMobius> paper, rock, scissors
[00:30:27] <[itchyjunk]> won't that have millions of if else
[00:30:37] <[itchyjunk]> paper rock scissors doesn't sounds gui'ish though
[00:30:49] <[itchyjunk]> since gui is mandatory part of it
[00:30:51] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:30:56] <GeDaMo> It'll all be done with arrays :P
[00:31:09] <MrMobius> if you have pictures of the paper, rock, and scissors and buttons to click
[00:31:36] <[itchyjunk]> yeah that's cutting it
[00:31:40] <snake> [itchyjunk], have i lost you?
[00:31:43] <[itchyjunk]> wonder how hard snake would be
[00:31:46] <[itchyjunk]> snake yes
[00:31:51] <MrMobius> gui snake?
[00:31:51] <snake> same ngl
[00:31:54] <[itchyjunk]> I don't know what your P is
[00:31:56] <dodo> minesweeper too
[00:32:06] <snake> [itchyjunk], there are two predicates
[00:32:23] <snake> some sites are just slow, others are only ugly
[00:32:41] <snake> P is essentially S and U
[00:32:42] *** zaher_ is now known as zaher
[00:32:53] <dodo> GeDaMo: oh, you already said that. i wrote one when i was, like, 13. it was fun
[00:33:08] <[itchyjunk]> your original was slow and ugly right?
[00:33:11] <snake> so i would leave the and, because... of the explantion i wrote before
[00:33:26] <[itchyjunk]> minesweeper is easy?
[00:33:29] <dodo> didn't know how to do clicks, so you had to walk around
[00:33:33] <[itchyjunk]> seems complicated
[00:33:44] <dodo> well, i was 13. maybe i'm just a genius
[00:33:50] *** Quits: jazzy2 (jaziz@gateway/vpn/protonvpn/jaziz) (Ping timeout: 246 seconds)
[00:34:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:35:05] <MrMobius> you could make an idle clicker game
[00:35:14] <[itchyjunk]> hmm what is that?
[00:35:24] <MrMobius> google cookie clicker
[00:35:54] <Hash> It's funny when I'm reading wikipedia for fun, boring science articles and history and biographies and all that. But when it comes to reading coursework, my mind wanders when reading. I have to read things many times because my mind thinks other things.
[00:36:06] <Hash> Fellow students
[00:36:08] <[itchyjunk]> ah I've played games like this
[00:36:15] <[itchyjunk]> but it gets hard since you can upgrade and such
[00:36:22] <user51> good evening
[00:36:33] <MrMobius> maybe just very simple upgrades then
[00:36:43] <Hash> Do you ever find your mind functioning similarly? How do you make yourself read boring school work?
[00:36:52] <Hash> Textbooks and such.
[00:37:03] <dodo> Hash: i don't. i just play fifa instead
[00:37:04] <[itchyjunk]> I guess I can start learning JFrame before I decide what I want to do
[00:37:10] <[itchyjunk]> since we are supposed to use that
[00:37:14] <user51> Hash: some textbooks work better than others
[00:37:18] <[itchyjunk]> and I struggled to draw a line with that already
[00:37:19] <dodo> the juniors can do the learning
[00:37:20] <MrMobius> [itchyjunk], depends on whether you're trying to make a game everyone will play which is hard or a game that's not that fun but will teach you things which is easy
[00:37:33] <user51> i really enjoyed brian kernighan's book - otoh, algorithm textbooks never quite made sense to me
[00:37:41] <user51> s/book/&s/
[00:37:42] <[itchyjunk]> game that will give me a passing grade, MrMobius
[00:37:45] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:37:53] <MrMobius> [itchyjunk], great. it doesnt need to be fun then :)
[00:38:00] <[itchyjunk]> right!
[00:38:04] <[itchyjunk]> less fun the better!
[00:38:24] <[itchyjunk]> alright I'm off to class to learn about class
[00:38:31] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Client closed)
[00:38:36] <snake> i have only read a little bit in my algorithms book
[00:38:48] <snake> nothing was assigned to read yet, and we're on some real basic stuff so far
[00:39:13] <dodo> i treat algo books more like encyclopedias, not something i read through
[00:39:14] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:39:24] <InPhase> [itchyjunk]: Looks like my old Java game still runs in appletviewer locally, if you want to play and see the source.  :)  Drop this in index.html:  https://bpa.st/WSIQ in the same directory that has a SlimeHockey subdirectory from this zip file:  https://sourceforge.net/projects/slimehockey/files/  Then, "appletviewer index.html".
[00:39:26] <bayaz> Title: View paste WSIQ 
[00:39:26] <bayaz> Title: Slime Ice Hockey, 2 player - Browse Files at SourceForge.net 
[00:39:41] *** Joins: pavonia (~user@user/siracusa)
[00:39:43] <InPhase> You can tell how old it is, since it's on sourceforge, which used to be a reasonable place to put things.  :)
[00:39:58] <user51> i wait a few seconds before clicking on sourceforge links
[00:40:03] *** Joins: independent56 (~independe@163.172.58.132)
[00:40:07] <dodo> they kind of revived sf a few years ago
[00:40:22] <InPhase> user51: And sourceforge links also wait a few seconds before letting you download things.  :)
[00:41:23] <InPhase> Github didn't even exist yet the last time I edited that program.
[00:41:36] <InPhase> Actually, git didn't exist yet either...
[00:41:47] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[00:42:14] <InPhase> But credit to Java for it still working without recompiling.
[00:44:23] <InPhase> A few times over the years I thought about that game and thought it would have made a fun phone game with a networking feature added in.  But alas, I always had a day job.
[00:45:05] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:49:17] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[00:49:56] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:50:25] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[00:52:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[00:55:34] *** Quits: zaher (~zaher@37.48.183.40) (Ping timeout: 260 seconds)
[00:58:44] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[00:59:24] *** Joins: zaher (~zaher@188.229.238.160)
[01:01:20] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[01:03:14] *** Joins: artifishul (~nate@162.218.217.134)
[01:03:53] <Donitz> c++
[01:03:57] <Donitz> plenty of maps and constants
[01:04:05] <Donitz> I want to load one of multiple configs
[01:04:08] <Donitz> how to do that
[01:04:29] <pulse> what kind of config
[01:04:51] <Donitz> const Uint8 SDL_CONTROLLER_TRIGGER_RIGHT = 101;
[01:04:54] <pulse> and what do you mean by load
[01:04:59] <Donitz> const std::map<Uint16, MouseEvent> BUTTON_UP_TO_MOUSE_EVENT = { { SDL_CONTROLLER_TRIGGER_RIGHT, MOUSE_LEFT_UP } };
[01:05:13] <Donitz> const DWORD MOVE_KEY_DOWN = 0x53; // S
[01:06:10] *** Quits: qbt (~edun@user/edun) (Ping timeout: 240 seconds)
[01:06:11] <pulse> i'm having trouble understanding what any of that's got to do with loading, or configs :p
[01:06:28] <pulse> you want to load user config for buttons?
[01:07:04] *** Joins: devhelper (~devhelper@46-47-65-212.kazanluk.ddns.bulsat.com)
[01:10:37] *** Quits: devhelper (~devhelper@46-47-65-212.kazanluk.ddns.bulsat.com) (Quit: Lost terminal)
[01:12:55] *** Joins: independent_ (~independe@163.172.58.132)
[01:13:06] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:13:10] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Izem)
[01:13:31] <Donitz> sigh
[01:13:38] <Donitz> well, how do I select one of multiple config classes in c++
[01:13:44] <Donitz> how do I even use a configuration class
[01:13:47] <Donitz> do I need an interface
[01:13:53] *** Joins: dld (~davidlowr@2620:6e:6000:2900:9df:744b:194c:a7af)
[01:13:57] <Donitz> damnit, c++ makes everything hard
[01:14:17] <Donitz> and the google answers are as wishy washy as the language itself
[01:14:38] <Donitz> if this was C#, I'd use serialization and be done with it
[01:14:44] *** Joins: Klinda (~klinda@2.227.251.209)
[01:14:46] <pulse> xD
[01:14:48] <jeaye> C++ can do serialization.
[01:14:53] <pulse> you update the map one element at a time Donitz 
[01:14:53] <jeaye> So do that?
[01:15:04] <pulse> i mean there's fancy ways to do anything in C++, literally anything
[01:15:15] <Donitz> indeed, you just need to use a non-standard method
[01:15:20] <pulse> but if you do the dumbest possible thing you can think, typically you're not that far off
[01:15:23] <AbleBacon> do you think there will ever be a "content ID" system for repos? like "sorry--the code you have pushed in 'helloworld.cpp' is too similar to existing code owned by apple inc. this entity has been given control of your repo until the dispite is resolved"
[01:15:27] <Donitz> which most likely is 10x more complicated than what you'd find in another languages
[01:15:27] <pulse> like literally setting each element in a loop or whatever
[01:15:36] <pulse> Donitz, oh, for sure
[01:15:49] <jeaye> Donitz: Why are you using C++ then?
[01:15:49] <pulse> C++ is not for the easily scared
[01:15:51] <edk> AbleBacon: yes
[01:16:00] <Donitz> because I want it to be as response as possible
[01:16:07] <Donitz> responsive*
[01:16:17] *** Quits: independent56 (~independe@163.172.58.132) (Ping timeout: 264 seconds)
[01:16:21] <jeaye> So use Rust? It has a great serialization story.
[01:16:26] <Donitz> beh
[01:16:28] <Donitz> SDL is in c++
[01:16:38] <pulse> technically speaking, SDL is C
[01:16:39] <mrig> AbleBacon: no
[01:16:44] <jeaye> https://serde.rs/
[01:16:45] <bayaz> Title: Overview · Serde 
[01:17:00] <jeaye> Donitz: SDL is in C, which is usable from both C++ and Rust.
[01:17:04] <AbleBacon> Donitz, an "interface" in C++ is called an "abstract class"
[01:17:16] <mrig> since day one in programming, programmers have immediately recognised that they all end up writing the same things.
[01:17:23] <Donitz> please google
[01:17:27] <Donitz> stop removing my search terms
[01:17:39] <Donitz> it keeps removing "configuration" and keeps changing "config" into "configure"
[01:17:39] <jeaye> DDG?
[01:17:57] <AbleBacon> interfaces are just a special type of abstract class made up by C# and java so that they could add another thing to their list of features when trying to sell their langauges to big companies
[01:18:01] <Donitz> so I want an abstract config class
[01:18:09] <Donitz> well, I don't know
[01:18:16] <Donitz> I just want to change out all my constants
[01:18:18] <jeaye> Seems like you don't know what you want.
[01:18:26] <Donitz> I just want to change out all my constants
[01:18:38] *** Quits: cm007magnum (~Rheanna@101.91.214.30) (Remote host closed the connection)
[01:18:39] <AbleBacon> dunno what you mean by a "config" class. if you want to store multiple configurations, you can use a 'struct' which is like a class but without functions
[01:18:40] <jeaye> Why not just use a map, then? Is a class needed at all?
[01:19:05] <Donitz> a struct I guess is more fitting
[01:19:05] <pulse> Donitz, you want to *change* your *constants*?
[01:19:10] <Donitz> no
[01:19:17] <Donitz> I want to have sets of constants
[01:19:22] <pulse> ah
[01:19:29] <AbleBacon> a map is good if some configs are gonna have custom items in them
[01:19:38] <Donitz> it would be a map of structs then
[01:19:46] <pulse> you know C programmers just type out all keycodes in one large .h file right
[01:19:51] <Donitz> yes
[01:19:54] <Donitz> I would know that
[01:19:55] <pulse> keep it simple and all that
[01:20:02] <Donitz> { SDL_CONTROLLER_BUTTON_B, VK_SHIFT },
[01:20:02] <pulse> so use that, and use ints for easy mapping
[01:20:21] <pulse> just store ints, i don't really see a big issue here
[01:20:22] <Donitz> I can't keep it simple
[01:20:29] <Donitz> I got about 4 maps
[01:20:32] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[01:20:34] <Donitz> and 12 integers
[01:20:42] <AbleBacon> don't store 'int'--store the type of the 'enum'. it's more type-correct
[01:20:48] <pulse> 4 maps and 12 integers sounds pretty simple to me
[01:20:49] <Donitz> 6 maps
[01:21:05] *** Quits: dld (~davidlowr@2620:6e:6000:2900:9df:744b:194c:a7af) (Ping timeout: 246 seconds)
[01:21:16] <Donitz> let me just copy paste
[01:21:28] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:22:05] <Donitz> https://www.dropbox.com/s/fczqg7j3j4hic9k/config.cpp?raw=1
[01:22:05] <bayaz> Domain: uc3d1cc61220773c3c31f0ac36c6.dl.dropboxusercontent.com Type: text/plain; charset=utf-8 
[01:22:21] <AbleBacon> if it weren't for the fact that people would lose interest, they really ought to start programmers off with some kind of assmebly (or pseudo assembly), then learn them some C, and then onto C++
[01:22:22] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[01:22:31] *** Joins: lunarkitty (uid501895@user/pyra)
[01:22:37] <AbleBacon> and then they can do / explore whatever
[01:22:56] <AbleBacon> obviously not teach them *all* of C++, but like... use it to introduce object-oriented stuff
[01:22:57] <jeaye> Hm, dropbox for sharing code snippets.
[01:23:06] <jeaye> Might be the first time I've seen that on IRC.
[01:23:35] <pulse> i went VB3->Batch->Pascal->VB5->VB6->C->C++->Python->JS
[01:23:44] <AbleBacon> don't use Uint8 as the map key though, use whatever enum those keys come from
[01:23:46] <pulse> some R and Java sprinkled in between
[01:23:50] <Donitz> beh, I've been through quite a few
[01:24:10] <Donitz> yes, python, r, bit of fortran90
[01:24:12] <pulse> oh and PHP
[01:24:12] <Donitz> nbasic
[01:24:13] <pulse> oh god PHP
[01:24:15] <InPhase> AbleBacon: I think a gentler high-level introduction to programming helps build up the modern reasoning modes faster.
[01:24:25] <pulse> Donitz, why were you writing fortran xD
[01:24:28] <AbleBacon> conceptually, yes, it's being stored as a Uint8, but that doesn't help a reader understand what's being stored there
[01:24:29] <Donitz> pascal C# java
[01:24:37] <InPhase> AbleBacon: One can fill in the low level mechanisms later without loss.
[01:24:51] <Donitz> visual basic php javascript perl
[01:25:00] <AbleBacon> i just feel like people often ignore the lower level stuff and never bother to learn it because they can make code that will technically run without it
[01:25:00] *** Joins: nvmd (~nvmd@user/nvmd)
[01:25:07] <Donitz> a little bit of assembly
[01:25:08] <mrig> pulse: do you have a favorite from your experience?
[01:25:17] *** Quits: independent_ (~independe@163.172.58.132) (Ping timeout: 246 seconds)
[01:25:35] <pulse> mrig, C++ and JS
[01:25:55] <pulse> and i guess VB pre-.NET for purely nostalgic reasons
[01:26:00] <InPhase> AbleBacon: Well there are some "programmers" who just want to write some code, and then there are "software engineers" who need to understand full layers of the system for the expected full competence of that field.
[01:26:02] <mrig> oh cool, suppose those two probably work pretty well together too.
[01:26:12] <pulse> not really, most gamedevs opt for C++ and Lua
[01:26:22] <pulse> Lua being about as performant as JS, or so they say
[01:26:22] <Donitz> then there are people who believe that using c++ is a boon in itself
[01:26:29] <pulse> no, C++ is marvelous
[01:26:33] <Donitz> when in reality they may just have spent 10x the time to make something
[01:26:35] <AbleBacon> huge fan of C++
[01:26:38] <Donitz> as if they had picked a higher language
[01:26:39] <mrig> ah right, yes, lua being the newer common scripting language.
[01:26:45] <pulse> you just have to figure out one simple fact - you can't use the whole language, ever. use a subset and use it well and that's all you need
[01:26:47] <InPhase> AbleBacon: I think it's okay that multiple levels of goals exist for this.
[01:27:04] *** Quits: death916 (~death916@user/death916) (Remote host closed the connection)
[01:27:06] <mrig> the C++ subset thing scares the life out of me :|
[01:27:08] <InPhase> AbleBacon: We just don't always have the right language to describe the differences.
[01:27:14] <AbleBacon> C++ has pretty much all of the high-level language features--it's just that nobody bothers to use them and they keep writing bad code with bare pointers and type punning like they used to in the 80s
[01:27:16] <amahl> wonder if anyone knows the entire c++
[01:27:17] <Donitz> c++ is like a nerdy toy for people who like to work close to the metal
[01:27:32] <pulse> AbleBacon, maybe because 80s style code is easier to reason about, especially in the long run :p
[01:27:35] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[01:27:35] <AbleBacon> i've always been using "programmer" to just mean "software engineer" :-/
[01:27:52] *** Joins: paravida (~myChateau@23.31.187.1)
[01:27:52] <pulse> Donitz, ah, you mean a rite of passage ;)
[01:28:05] <Donitz> yes, spending weeks making something basic
[01:28:10] <Donitz> I know that
[01:28:12] <mrig> The idea of having a main language and an program scripting language is pretty appealing though, I must say.
[01:28:13] <pulse> yes but you make that basic thing very detailed
[01:28:17] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[01:28:25] <pulse> and then you can copy that basic thing over and over and you have a not so basic thing
[01:28:31] <mrig> an in program language rather.
[01:28:33] <Donitz> oh can you now
[01:28:38] <Donitz> or will it give you 50 warnings
[01:28:49] <Donitz> and be deprecated and not working in the next version of gcc
[01:28:50] <Donitz> hehehe
[01:28:53] <pulse> squint on one eye, if it compiles it's probably good to go
[01:29:05] <AbleBacon> well then don't do things that throw warnings... that means you're messing up
[01:29:10] <Donitz> haha
[01:29:14] <Donitz> tell that to most the developers 
[01:29:16] <jeaye> "if it compiles it's probably good to go" is not something one can say about C++.
[01:29:18] <pulse> you know what they say - warnings are not errors :p
[01:29:25] <Donitz> have you ever compiled something from source in linux?
[01:29:25] <AbleBacon> sure python might not give you as many warnings, but you also might find out much, much later that your program isn't working the way you wanted it to...
[01:29:26] <jeaye> It has UB built into its nature.
[01:29:27] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[01:29:56] <Donitz> anyway
[01:29:56] <pulse> Donitz, i've tried, god knows i've tried
[01:29:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[01:30:05] <Donitz> does structs not need a fixed size?
[01:30:09] <Donitz> can structs even contain maps
[01:30:10] <AbleBacon> the compiler is strict because it's stopping you from writing bugs into your code
[01:30:20] <Donitz> c++ has tons of bugs
[01:30:21] <jeaye> Structs and classes are the same in C++, except for default public/private.
[01:30:25] <AbleBacon> yes structs can contain maps, and even when they do they're still fixed size
[01:30:32] <Donitz> aren't like most security issues c++ overflow issues
[01:30:39] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[01:30:57] <AbleBacon> overflow is more of a crash issue and data corruption issue than a security issue
[01:31:09] <Izem> I think memory stuff is higher
[01:31:11] <jeaye> AbleBacon: What? Not true at all.
[01:31:41] <pulse> yeah, it's a huge security issue
[01:31:52] <jeaye> AbleBacon: "Crash issue and data corruption" == opportunity for executing whatever code I want
[01:32:02] <AbleBacon> you see that kind of thing in low-level C stuff usually
[01:32:29] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 264 seconds)
[01:32:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:adf5:f6dc:ea8d:6fa1)
[01:32:43] <AbleBacon> when people implement their own memory management for each individual thing they do, it can cause problems. versus using modern C++ STL
[01:32:45] *** Parts: Dellawara (~Dellawara@2001:67c:2660:425:92e2:baff:fe0b:6f64) ()
[01:32:54] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:adf5:f6dc:ea8d:6fa1) (Remote host closed the connection)
[01:33:27] <jeaye> 1. It's the stdlib, not the STL; 2. C++ is ridiculously unsafe and it inherits all of the unsafe baggage from C++ and then adds even more on top of it
[01:33:56] <jeaye> Like vtable exploits.
[01:34:03] <AbleBacon> idk i find that there's typically a container for whatever i need in C++
[01:34:14] <AbleBacon> i don't find myself using stdlib stuff like "new" ever
[01:34:36] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[01:34:39] <jeaye> "new" is a language feature; it's not in the stdlib.
[01:34:40] <Izem> new is part of the language, not stdlib?
[01:34:53] <AbleBacon> what's in the stdlib then?
[01:35:05] *** Quits: magla (~gelignite@55d4b2c3.access.ecotel.net) (Quit: Stay safe!)
[01:35:13] <Izem> iostream at least
[01:35:28] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[01:35:30] <jeaye> <string>, <vector>, <algorithm>, <memory>, <functional>, etc
[01:35:44] <jeaye> I think we have a lot poeople talking authoritatively about C++ here who don't know it very well.
[01:35:47] <AbleBacon> i thought strings and vectors were STL
[01:35:59] <AbleBacon> and if iostream is causing memory allocation errors, i'd think somebody would have seen it by now
[01:36:38] <Izem> errors still seem to happen in msvc
[01:36:38] <jeaye> The correct term is stdlib.
[01:36:40] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[01:36:40] <jeaye> STL can mean: (1) C++ standard library; (2) the library Stepanov designed; (3) the parts of [1] based on [2]; (4) specific vendor implementations of [1], [2], or [3]; (5) the underlying principles of [2]; (6) The parts of [1] only in C++03; (7) Stephan T. Lavavej. So, the term is highly ambiguous. If you meant [1] and insist on abbreviating, stdlib is a better choice.
[01:36:46] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:36:50] *** Joins: hexingb (~hexingb@111.30.224.85)
[01:37:05] <Izem> Lavavej is a great programmer :)
[01:37:19] <AbleBacon> i'm talking about the standard template library
[01:37:28] <AbleBacon> sorry for the confusing
[01:37:31] <jeaye> You're talking about the C++ standard library.
[01:37:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[01:37:36] <jeaye> i.e. the C++ stdlib.
[01:37:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:38:15] <amahl> don't allocate. use fixed size static arrays. why couldn't you calculate maximum bounds for your needs? also modern OS do virtual memory. so even a 50 GB array should be no problem, right?
[01:38:26] <jeaye> My point is that you're the one confused, since you're misusing terms.
[01:38:35] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 246 seconds)
[01:38:50] <Izem> So I'm curious, has there ever been a large scale attempt to make a robust general library outside of C++ compiler devs?
[01:38:56] <AbleBacon> well, when i've talked to C++ people, they've referred to a "standard template library" i dunno if that maybe isn't the preferred term anymore
[01:38:57] <pulse> a 50GB array sounds like a bad idea on many levels
[01:39:01] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:39:06] <Izem> Or is it all up to the committee?
[01:39:06] <jeaye> amahl: No, not right. That 50GB needs to exist *somewhere*. If you only have 4GB RAM, you don't have space for it.
[01:39:17] <pulse> Izem, um, yes? boost? :p
[01:39:24] <jeaye> AbleBacon: Many C++ people don't know what they're talking about.
[01:39:27] <AbleBacon> most of the stuff i use is not within "stdlib"
[01:39:32] <AbleBacon> (the header i mean)
[01:39:33] <jeaye> The past 30m in this channel demonstrate that.
[01:39:34] *** Lord_of_Life_ is now known as Lord_of_Life
[01:39:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[01:40:04] <Izem> stuff from boost ends up in the c++ library?
[01:40:08] <jeaye> The quote I just provided, defining how ambiguous "STL" is, is straight out of ##c++.
[01:40:09] <amahl> the 50 GB exists in address space only if you aren't using it. but if you are then fancy 'new' operator won't save you either
[01:40:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[01:40:18] <AbleBacon> cppreference.com is calling it the "containers" library now. interesting
[01:40:21] <jeaye> Izem: Yes, often times.
[01:40:28] <AbleBacon> why did they get rid of the old STL name?
[01:40:38] <mrig> The notion that man C++ programmers do not know what they are doing scares me even more!
[01:40:42] <mrig> many
[01:40:48] <jeaye> AbleBacon: I'm going to show that definition one more time.
[01:40:54] <jeaye> STL can mean: (1) C++ standard library; (2) the library Stepanov designed; (3) the parts of [1] based on [2]; (4) specific vendor implementations of [1], [2], or [3]; (5) the underlying principles of [2]; (6) The parts of [1] only in C++03; (7) Stephan T. Lavavej. So, the term is highly ambiguous. If you meant [1] and insist on abbreviating, stdlib is a better choice.
[01:41:14] <Izem> mrig: "just use what you need, you don't need to learn it all"
[01:41:18] <Izem> lmao
[01:41:19] <jeaye> AbleBacon: The "standard template library" refers to (2). It was absorbed into the C++ stdlib (1).
[01:41:37] <AbleBacon> ah, okay
[01:41:47] *** Joins: arcatech (~arcatech@user/arcatech)
[01:41:51] <jeaye> It's been this way for over two decades.
[01:42:00] <Izem> c++ is the sunken cost fallacy irl
[01:42:15] <AbleBacon> wikipedia still has a page on it, but other places have updated
[01:42:28] <mrig> the concern is that none can read anyone else's code.
[01:42:34] *** Joins: src_ (~src@user/src)
[01:42:47] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 246 seconds)
[01:42:55] <mrig> I suppose it is ok if you stay for a long time in the same company, with the same code base.
[01:42:56] <Izem> I looked at some c++ winrt code ... wow
[01:43:00] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[01:43:11] <Izem> they must have warlocks at redmond
[01:43:19] <jeaye> AbleBacon: And using the stdlib does not mean your code is safe.
[01:43:22] <jeaye> Not one bit.
[01:43:26] *** Quits: on^ (~on@12.203.127.82) (Remote host closed the connection)
[01:43:27] <mrig> of if you have a specific thing that you need to code very efficiently.
[01:43:43] <AbleBacon> i was saying it's *preferable* over manual allocations and deallocations
[01:43:48] <Donitz> where is the best place to initialize my different game configurations
[01:43:48] <jeaye> Because every line of code you write in C++, even if it's using the stdlib, is armed to fuck you up.
[01:43:56] <Donitz> I got a gameconfig.h class with struct GameConfig
[01:43:57] <AbleBacon> why's that?
[01:44:02] <Izem> at this point, I don't think it's acceptable to sacrifice clarity
[01:44:14] *** Joins: src__ (~src@user/src)
[01:44:19] <jeaye> AbleBacon: Because C++ defaults to UB and compiles UB without issue.
[01:44:40] <Donitz> or I guess I should have one .cpp file per game
[01:44:44] <AbleBacon> well hopefully they're not using UB in stdlib implementations
[01:44:52] <Donitz> games/solitaire.cpp
[01:44:55] <Donitz> which loads each config
[01:45:09] <mrig> I think that the programmer needs to have clarity before starting, but that is really hard to achieve, unless you really are familiar with a domain I suppose.
[01:45:15] <SuperNintendoSUX> "C++ defaults to UB" this is a blanket statement
[01:45:30] <SuperNintendoSUX> I get you hate the language
[01:45:32] <jeaye> AbleBacon: No, but the code you're writing which is using that std::{string, vector, map} will likely have it.
[01:45:35] *** Quits: src (~src@user/src) (Ping timeout: 246 seconds)
[01:45:44] <jeaye> SuperNintendoSUX: `int a;` // all we need to show this
[01:45:48] <SuperNintendoSUX> also UB is good :)
[01:45:48] <Izem> mrig: I mean, anything but cryptic undocumented code
[01:45:51] <SuperNintendoSUX> int a; is amazing
[01:46:15] <Izem> sometimes stuff is really complex, but then you should put a lot of effort into documenting it
[01:46:15] <SuperNintendoSUX> unitialized storage is useful
[01:46:30] <SuperNintendoSUX> most C++ haters never understood the language :(
[01:46:33] <jeaye> SuperNintendoSUX: I don't hate C++. I know it intimately and well enough to know that I should use something else.
[01:46:36] <Izem> how is `int a` UB?
[01:46:43] <jeaye> Izem: What's the value of a?
[01:46:47] <AbleBacon> yeah, you don't want to waste performance settings things to "0" when you're just gonna set them to something else later
[01:46:58] <Izem> jeaye: depends where it is?
[01:47:03] <AbleBacon> it's only UB if you try to get its value
[01:47:16] <SuperNintendoSUX> yup
[01:47:17] <jeaye> Izem: No, it does not. It's not defined what the value of a is. It's garbage.
[01:47:29] *** Quits: src_ (~src@user/src) (Ping timeout: 264 seconds)
[01:47:30] <jeaye> AbleBacon: Why else would you define it?
[01:47:31] <SuperNintendoSUX> no one cares, jeaye
[01:47:33] <SuperNintendoSUX> only you
[01:47:38] <Izem> even globally ?
[01:47:41] <jeaye> Izem: Yes.
[01:47:42] <AbleBacon> if you're gonna store something in it
[01:47:51] <AbleBacon> pass it by reference that sets it to something, for example
[01:47:52] <Izem> I thought it would be zero initialized but I guess not
[01:48:01] <jeaye> AbleBacon: Take a look at this: https://raw.githubusercontent.com/jeaye/value-category-cheatsheet/master/value-category-cheatsheet.pdf
[01:48:02] <bayaz> Type: application/octet-stream Size: 70.3 kB 
[01:48:04] <jeaye> You may be surprised.
[01:48:05] <Izem> globally at least
[01:48:32] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[01:48:40] <jeaye> SuperNintendoSUX: That's not a productive way to have this discussion.
[01:48:41] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:adf5:f6dc:ea8d:6fa1)
[01:48:48] <AbleBacon> which part, jeaye?
[01:49:17] <jeaye> AbleBacon: All of it.
[01:49:18] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[01:49:22] <AbleBacon> :-/
[01:49:38] <pulse> lol @ "I know it intimately and well enough to know that I should use something else."
[01:49:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[01:49:52] <pulse> seems about right
[01:49:53] *** jazzy3 is now known as jazzy
[01:50:10] <pulse> i like C++, but that's because i make games. i'm allowed to be crazy
[01:50:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:50:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[01:50:20] <AbleBacon> i would say that "int a;" is not undefined behavior, because undefined behavior can do basically anything
[01:50:42] <Izem> pulse: what do you use to make games? sdl?
[01:50:44] <pulse> pretty sure it's just a random value in your RAM
[01:50:53] <AbleBacon> and "int a;" is not in itself going to generate code
[01:50:53] <jeaye> Yep. Wrote C++ for several years and was the guy everyone went to with difficult template metaprogramming questions. At the same time, I was the one telling people to use a different lang.
[01:50:56] <pulse> Izem, i went through Allegro and sfml phases, now i'm at SDL
[01:51:09] <pulse> used a bunch of other libraries in between too, but those are the best ones
[01:51:12] <Izem> ok
[01:51:21] <jeaye> AbleBacon: It will result in a change in the binary, for sure. That space needs to be allocated.
[01:51:21] <Izem> godot looks really interesting
[01:51:41] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 264 seconds)
[01:51:42] <AbleBacon> but it's in the data part of the stack, not within the program code
[01:51:50] <AbleBacon> it's not something that has "behavior"
[01:52:01] <AbleBacon> it's only if you access it without initializing it that you get UB
[01:52:05] <jeaye> Correct.
[01:52:37] <AbleBacon> so just don't access it! :D or write "int a();" or "int a{};" instead
[01:52:48] <jeaye> `int a();` is not the same. ;)
[01:52:58] <AbleBacon> yeah that might declare a function instead
[01:53:03] <jeaye> It's a function declaration. This is called the most vexing parse.
[01:53:16] <jeaye> One of the reasons we got uniform initialization in C++11.
[01:53:29] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:adf5:f6dc:ea8d:6fa1) (Ping timeout: 264 seconds)
[01:54:14] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:54:15] <AbleBacon> just sometimes you don't wanna initialize everything
[01:54:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:54:28] <jeaye> That's just *one* example of UB.
[01:54:46] <jeaye> Check out that sheet on value categories. There are so many ways to fuck things up.
[01:55:31] <AbleBacon> well you can sort of just forget about value categories if you want and do everything by value
[01:55:32] <jeaye> This is why Rust has a borrow checker, so we don't need to manually track lvalues, xvalues, rvalues, and prvalues.
[01:55:56] <amahl> the OS has to 0-init memory before handing it to a program for security's sake. so true uninitialized memory only exists within a c++ program, yes?
[01:55:58] <jeaye> AbleBacon: If you pass everything by value, you can forget about the whole reason you're using C++: you wanted things to be responsive. :)
[01:56:20] <jeaye> amahl: The OS will not zero memory for a program.
[01:56:22] <AbleBacon> but if it's something you worry about a lot, i mean. like how java or C# only use one way of passing
[01:56:40] <jeaye> AbleBacon: They pass by reference for all objects.
[01:56:47] <AbleBacon> there's no allocation going on in that example, amahl
[01:56:51] <jeaye> Not value. Only primitives are passed by value.
[01:57:01] <AbleBacon> that's gross to me
[01:57:11] <jeaye> o.O
[01:57:37] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Quit: WeeChat 3.2.1)
[01:57:54] <amahl> gotta test it. would be cool to find a previous program's things in newly allocated memory
[01:58:34] *** Joins: fulljab (~fulljab@2620:8d:8000:1070:5531:8cd2:ad2f:cdb4)
[02:00:18] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[02:00:45] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Remote host closed the connection)
[02:00:51] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[02:01:02] <Izem> pass by reference can be problematic with pointer aliasing being difficult in C++
[02:01:32] *** Quits: fulljab (~fulljab@2620:8d:8000:1070:5531:8cd2:ad2f:cdb4) (Client Quit)
[02:01:42] *** Joins: fulljab (~fulljab@2620:8d:8000:1070:5531:8cd2:ad2f:cdb4)
[02:02:07] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[02:02:27] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:02:36] <jeaye> It's also UB to return a ref if you have a ref param and pass in a prvalue, as shown in the cheat sheet.
[02:02:45] *** Joins: flaknet99 (~0x100@32.211.211.39)
[02:03:02] <jeaye> That'll probably work, most of the time. It'll definitely compile. Will likely crash for your customers, though, some of the time.
[02:04:07] <jeaye> Rust would prevent it at compile-time.
[02:04:08] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 246 seconds)
[02:04:34] <amahl> wrote a c program that mallocs 1024 MiB and checks if its all zeros. it was all zero the 3 times I ran it. so much for uninitialized
[02:05:25] <Izem> nice sample size :P
[02:05:28] <jeaye> Will depend on the compiler and OS. malloc has no promise to zero memory, that's for sure.
[02:05:30] <flaknet99> now go check the C spec
[02:05:43] <amahl> maybe embedded OS for microcontrollers omit the zeroing?
[02:05:55] <jeaye> Desktop OSs will not zero either.
[02:05:57] <arahael> amahl: now, set them to 1's, free() them, then re-malloc again?
[02:05:59] <jeaye> No reason for them to.
[02:06:18] <arahael> if you want them consistently zero'ed, use calloc.
[02:07:40] <amahl> arahael: but that is the very act of initializing the memory
[02:07:54] <jeaye> o.O
[02:08:14] <jeaye> His point is that they won't be all 0 again when you malloc the second time.
[02:08:28] <jeaye> i.e. malloc is not going to 0 for you.
[02:08:36] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[02:08:38] *** Quits: yaboiburner (~yaboiburn@static-68-235-44-10.cust.tzulo.com) (Remote host closed the connection)
[02:08:53] <paulo> does free() detect double frees
[02:08:54] <paulo> ?
[02:09:01] <jeaye> Nope.
[02:09:02] <flaknet99> no
[02:09:04] <arahael> jeaye: *probably. i don't know which malloc he's using :)
[02:09:17] <jeaye> Double free is another type of common vulnerability.
[02:09:31] <flaknet99> if only they didn't charge a fee for the C spec
[02:09:41] <Izem> draft is available
[02:09:44] <jeaye> ^
[02:09:48] <jeaye> Same with C++.
[02:09:58] <flaknet99> the questions you constantly see would be easily linkable
[02:10:06] <Izem> linear types is a nice solution for double free
[02:10:14] *** Joins: cm007magnum (~Rheanna@101.91.238.197)
[02:10:15] <Izem> wonder who came up with it
[02:10:23] <amahl> java and rust etc... don't lose anything by having memory be 0 by default. you get the same "uninitialized" behaviour if you explicitly re-use your objects and arrays there
[02:10:23] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[02:10:33] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[02:10:45] <flaknet99> like if someone has an Ada question you can link right to the full specification, not with C
[02:10:58] <Izem> too bad they get no questions
[02:11:09] <flaknet99> then you don't have to fight them to accept the truth
[02:12:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[02:13:10] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:13:46] <amahl> malloc doesn't 0-init but the OS does (the first time when malloc gets new memory at least)
[02:13:53] *** Quits: Burgundy (~yomon@5-12-93-128.residential.rdsnet.ro) (Ping timeout: 264 seconds)
[02:14:44] <flaknet99> 0 init is often a waste, and a hack
[02:14:58] <amahl> you can only get 0-initialized memory with malloc (until you mess it up yourself). which defeats the optimization purpose of not initializing
[02:15:45] <flaknet99> how many root exploits have been emporered by 0 initialization setting a UID to 0/root?
[02:15:55] *** Joins: nctcf^ (~nctcf@12.203.127.82)
[02:15:57] <flaknet99> wasteful hack that is also dangerous
[02:16:08] *** Joins: paravida (~myChateau@71.215.86.34)
[02:19:53] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 264 seconds)
[02:20:33] *** Joins: nvmd (~nvmd@user/nvmd)
[02:22:38] *** Quits: Akuli (~Akuli@213.216.210.147) (Quit: Leaving)
[02:23:58] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[02:25:17] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Quit: Leaving)
[02:25:27] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[02:25:54] *** Joins: somercet (~somercet@c-73-190-18-206.hsd1.mi.comcast.net)
[02:26:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[02:32:06] *** Quits: Klinda (~klinda@2.227.251.209) (Quit: Leaving)
[02:34:17] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:34:23] *** Joins: Kornikaned (~nicolas@2a01cb088163f900b39a4a7dd4427b62.ipv6.abo.wanadoo.fr)
[02:34:27] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:34:27] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:34:53] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:35:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[02:36:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[02:36:38] *** Quits: dfg (~dfg@user/dfg) (Quit: I hate quit messages.)
[02:36:58] *** Joins: dfg (~dfg@li490-89.members.linode.com)
[02:36:58] *** Quits: dfg (~dfg@li490-89.members.linode.com) (Changing host)
[02:36:58] *** Joins: dfg (~dfg@user/dfg)
[02:41:30] *** Quits: eddof13 (~textual@200-188-5-138.static.axtel.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:41:50] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[02:44:00] *** Joins: zaher_ (~zaher@37.48.181.49)
[02:45:22] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:45:45] *** Quits: zaher (~zaher@188.229.238.160) (Ping timeout: 265 seconds)
[02:46:06] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[02:46:37] *** Parts: Kornikaned (~nicolas@2a01cb088163f900b39a4a7dd4427b62.ipv6.abo.wanadoo.fr) ()
[02:46:42] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[02:51:21] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:52:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:52:44] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 260 seconds)
[02:56:27] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[02:57:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[02:58:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:58:46] *** Quits: cm007magnum (~Rheanna@101.91.238.197) (Remote host closed the connection)
[03:00:06] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[03:00:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:03:05] *** Joins: dre (~dre@2001:8003:c932:c301:3f8b:db9:edc2:8200)
[03:03:33] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:03:56] *** Joins: snake (~snake@user/snake)
[03:04:40] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[03:05:22] <austincheney> anybody mind helping me understand decoding instructions on binary data, specifically unmasking websocket packets per rfc6455?
[03:06:03] *** Quits: EtherNet (~Gerardo@user/ethernet) (Ping timeout: 265 seconds)
[03:06:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[03:07:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[03:07:37] *** Parts: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Good Bye)
[03:07:47] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:08:04] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[03:08:30] *** Quits: src__ (~src@user/src) (Ping timeout: 264 seconds)
[03:08:39] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:12:07] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.2)
[03:12:38] <somercet> hello, has anyone programmed in GTK?
[03:13:38] *** Quits: dre (~dre@2001:8003:c932:c301:3f8b:db9:edc2:8200) (Quit: Leaving)
[03:14:33] <phogg> I have written exactly two programs that use GTK 1.x, both were trivial. One was in C, one was in Perl. That said, I'll help if I can...
[03:17:07] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[03:17:39] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[03:17:39] *** Joins: Samian (~Sami@user/samian)
[03:21:33] <somercet> ty, phogg, oops, hang on, trying to link an outside page
[03:22:25] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:22:29] <somercet> I'm working on a GtkApp. Does this allow me to add a weak pointer to a subwidget? https://docs.gtk.org/gobject/method.Object.add_weak_pointer.html does this let me add a point
[03:22:33] <bayaz> Title: GObject.Object.add_weak_pointer 
[03:23:03] *** Joins: masber (~masber@213.55.226.77)
[03:23:47] <somercet> basically, GApp->open() gives the app pointer along with a file name to open, but I need the pointer to the proper sub widget to open it.
[03:24:29] <phogg> a quick grep confirms my programs didn't use this function
[03:26:57] <phogg> however, it seems logical that it should work. A subwidget is still a GObject, right?
[03:27:03] *** Quits: JavaBean (~javabean@user/javabean) (Quit: oh bother)
[03:27:25] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[03:27:44] *** launchd is now known as lunchd
[03:27:56] <somercet> Yah, I'm just trying to make sure this is a reference inside the object to a subwidget, and that gtk.so won't otherwise access it.
[03:27:58] *** lunchd is now known as launchd
[03:27:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[03:28:06] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[03:29:04] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:29:22] *** Joins: JavaBean (~javabean@user/javabean)
[03:29:57] <somercet> And trying to avoid groveling through a list of subwidgets to  find a GtkNotebook, hopefully the right one,  to open a new tab with the file open() gives you.
[03:30:25] <somercet> Is there a way to set symbolic names for subwidgets? That would work a treat.
[03:31:43] *** launchd is now known as mad_dragon
[03:32:03] *** mad_dragon is now known as launchd
[03:32:30] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[03:33:48] *** Quits: pizdets_ (~pizdets@183.182.111.213) (Ping timeout: 268 seconds)
[03:33:50] *** Joins: pizdets (~pizdets@183.182.110.57)
[03:34:54] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 264 seconds)
[03:37:28] *** Joins: Thedarkb1 (~Thedarkb@80.233.41.144)
[03:37:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[03:38:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[03:38:43] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:85bf:29:c02c:4639) (Ping timeout: 268 seconds)
[03:38:43] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173) (Ping timeout: 268 seconds)
[03:39:10] *** Joins: wasd (~wasd@user/axis)
[03:39:35] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:42:10] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[03:42:36] *** Quits: Tazy (~Tazmainia@102.39.80.61) (Read error: Connection reset by peer)
[03:42:41] *** Quits: Guest88 (~textual@85.249.161.186) (Ping timeout: 264 seconds)
[03:43:50] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[03:45:55] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:48:04] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[03:48:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[03:48:41] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[03:50:27] *** Joins: cm007magnum (~Rheanna@218.78.88.163)
[03:52:16] *** Quits: fulljab (~fulljab@2620:8d:8000:1070:5531:8cd2:ad2f:cdb4) (Quit: Textual IRC Client: www.textualapp.com)
[03:53:25] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[03:55:23] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:58:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[03:58:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[03:59:52] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[04:01:43] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[04:01:52] *** Parts: artifishul (~nate@162.218.217.134) ()
[04:05:27] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[04:06:19] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:08:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:08:44] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[04:08:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:09:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[04:09:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:11:29] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 264 seconds)
[04:12:26] <PamiPetteri> https://clairlair.xyz/~pamipetteri/programming/Einstein_Planck_equation_count_energy.py
[04:12:27] <bayaz> Type: text/plain; charset=utf-8 Size: 293 B 
[04:15:03] *** Joins: LiftLeft (~LiftLeft@172.98.92.20)
[04:18:01] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:18:19] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[04:19:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[04:19:39] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[04:20:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:21:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:25:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:27:17] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 246 seconds)
[04:27:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:29:03] *** Joins: bpmedley_ (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[04:29:10] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[04:29:25] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[04:29:28] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[04:30:02] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[04:31:29] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Ping timeout: 246 seconds)
[04:34:38] *** Quits: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu) (Remote host closed the connection)
[04:36:23] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[04:37:06] *** Quits: masber (~masber@213.55.226.77) (Quit: Client closed)
[04:38:37] *** Quits: cm007magnum (~Rheanna@218.78.88.163) (Remote host closed the connection)
[04:38:59] *** Quits: NerdyGirl (adie@incest.quest) (Quit: ZNC 1.8.x-git-177-e6dcaf06 - https://znc.in)
[04:39:05] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[04:39:24] *** Joins: NerdyGirl (cummy@fuck.irc.ops.incest.quest)
[04:39:41] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:39:44] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[04:39:53] <NerdyGirl> hi
[04:40:19] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[04:41:16] *** Joins: cm007magnum (~Rheanna@218.78.27.29)
[04:42:27] *** Joins: hexfive (~eric@50.35.83.177)
[04:42:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[04:50:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[04:50:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[04:52:50] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0.1)
[04:54:00] *** Buggys- is now known as Buggys
[04:55:53] *** Joins: quartz (~quartz@user/quartz)
[04:56:20] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 246 seconds)
[04:57:36] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:58:17] *** Joins: artifishul (~nate@162.218.217.134)
[05:00:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[05:00:41] *** Quits: hexingb (~hexingb@111.30.224.85) (Ping timeout: 264 seconds)
[05:01:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[05:04:52] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:05:16] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[05:05:30] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[05:06:05] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 264 seconds)
[05:07:18] *** Joins: maroloccio (~marolocci@89-172-7-22.adsl.net.t-com.hr)
[05:07:32] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 246 seconds)
[05:07:37] *** Parts: artifishul (~nate@162.218.217.134) ()
[05:08:23] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[05:08:27] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[05:10:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[05:10:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[05:10:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[05:11:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[05:15:07] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:21:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[05:21:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[05:23:41] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:23:45] *** Joins: hexingb (~hexingb@2409:8902:78c4:6717:40e4:46d2:56df:78b4)
[05:24:45] *** Joins: lunarkitty (uid501895@user/pyra)
[05:26:10] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[05:26:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[05:27:22] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:29:03] *** Joins: paravida (~myChateau@71.215.86.34)
[05:29:06] *** Quits: cm007magnum (~Rheanna@218.78.27.29) (Remote host closed the connection)
[05:30:42] *** Joins: cm007magnum (~Rheanna@101.91.240.201)
[05:31:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[05:32:03] *** Quits: hexingb (~hexingb@2409:8902:78c4:6717:40e4:46d2:56df:78b4) (Ping timeout: 246 seconds)
[05:32:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[05:32:23] *** Joins: hexingb (~hexingb@111.30.224.85)
[05:35:02] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:36:37] *** Joins: xiongxin8802 (~xiongxin@113.116.33.208)
[05:37:10] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[05:38:24] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[05:41:29] *** Quits: xff0x (~xff0x@83.236.31.114) (Ping timeout: 264 seconds)
[05:41:48] *** Quits: TechTest (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:41:54] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[05:42:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[05:43:16] *** Joins: xff0x (~xff0x@2001:1a81:53a2:cb00:c07c:d089:8b2f:814c)
[05:46:09] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:47:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:49:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[05:50:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[05:50:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[05:51:16] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:52:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[05:52:47] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[05:53:49] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:55:34] *** Quits: hexingb (~hexingb@111.30.224.85) (Read error: Connection reset by peer)
[05:55:47] *** Joins: hexingb (~hexingb@111.30.224.85)
[05:56:46] *** Joins: Thedarkb-Desktop (~beno@86-42-4-182-dynamic.agg3.kny.prp-wtd.eircom.net)
[06:00:17] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:00:32] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:02:33] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[06:03:07] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[06:03:20] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[06:06:41] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 252 seconds)
[06:09:31] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:10:08] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[06:10:08] *** brabrax_ is now known as brabrax
[06:10:20] <Izem> Why are some of the iso languages languishing?
[06:11:34] <flaknet99> which ones?
[06:11:44] <flaknet99> prolog or cobol?
[06:11:46] <Izem> ada, modula-2, prolog
[06:11:58] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[06:12:05] <flaknet99> ada is definitely not languishing
[06:12:06] <phogg> their best ideas have been incorporated into many newer languages
[06:12:40] <Izem> oh
[06:12:53] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[06:13:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[06:13:29] <Izem> flaknet99: there is only one open source compiler as far as I can tell
[06:13:38] <flaknet99> if the only metric of success is how many gooooogle searches per day then maybe
[06:13:39] <flaknet99> gcc
[06:13:47] <flaknet99> gcc has had Ada since the 90's
[06:13:57] <Izem> yeah, that's the only one
[06:14:10] <pikapika> flaknet99, asm is a very well liked language
[06:14:13] <Izem> others seem to be proprietary 
[06:14:21] <pikapika> Not as popular as C but still has a steady fanbase
[06:14:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[06:14:35] <Izem> for a language in the same environment as C, you think there would be much more compilers
[06:14:39] <flaknet99> they're working on llvm front-end too
[06:14:44] <flaknet99> don't know why but they are
[06:14:48] <Izem> oh interesting
[06:14:54] <somercet> Does anyone think Glib/GTK will be ported to Rust, or a similar language?
[06:14:59] <Izem> already is
[06:15:09] <somercet> I don't mean a binding.
[06:15:21] <Izem> then no
[06:15:54] <somercet> Constantly adding cast macros to GTK code is a hassle.
[06:16:02] <Izem> porting something of this magnitude would be better off doing a redesign
[06:16:20] *** Joins: Thedarkb2 (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173)
[06:16:29] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 246 seconds)
[06:16:35] <Izem> it's not really compatible with the rust paradigm either
[06:16:47] <somercet> hmmm
[06:17:04] <Izem> does rust have objects?
[06:17:09] <phogg> somercet: I would more readily believe in a new toolkit written from scratch in Rust. A port seems unlikely.
[06:18:11] *** Joins: kmh_ (~kmh@p200300df5f1282007143a36be9ce9e14.dip0.t-ipconnect.de)
[06:18:22] <Izem> flaknet99: good point though, I need to find another metric
[06:18:30] <phogg> all languages have objects if you squint hard enough
[06:18:38] *** Quits: cm007magnum (~Rheanna@101.91.240.201) (Remote host closed the connection)
[06:18:38] <phogg> but yes, rust has them
[06:19:08] <somercet> Rust has objects and encapsulation, but not inheritance.
[06:19:11] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:19:17] *** Quits: Thedarkb1 (~Thedarkb@80.233.41.144) (Ping timeout: 264 seconds)
[06:19:18] <Izem> ok
[06:19:20] <phogg> inheritance is not particularly virtuous
[06:19:42] <Izem> not as seen in the c++ or java flavour yeah
[06:19:56] *** Quits: kmh (~kmh@p200300df5f03530075ceafc9a632845f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:20:20] <Izem> if a feature is misused, it may as well be dropped
[06:20:34] <Izem> cause that indicates poor design
[06:20:36] <somercet> "For these reasons, Rust takes a different approach, using trait objects for polymorphism instead of inheritance.
[06:20:38] <phogg> interfaces and mixins do a better job
[06:21:21] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[06:21:35] <Izem> wish rust was smaller but I think I'm getting used to handling larger languages
[06:21:49] <flaknet99> i suspect the reason there are no other open ada compilers is that the features you have to implement to be standard compliant are an endless list of "wow wait what?"
[06:21:59] <Izem> most ones in industry are anyways
[06:22:17] <phogg> even really popular languages rarely have more than three compilers
[06:22:28] <Izem> flaknet99: meaning it's difficult to implement?
[06:22:49] <phogg> flaknet99: Oh? I barely know any ada. Can you give an example?
[06:22:49] <flaknet99> yes very much more difficulat than C
[06:23:16] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[06:23:30] <flaknet99> well you can do crazy crazy things like initialize an array to a fibonachi sequence, and let the compiler generate the values based off of the first few values
[06:23:46] <phogg> That's not so crazy.
[06:23:50] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[06:24:11] <Izem> iirc ada 2012 has had really desirable features for some time now
[06:24:15] <phogg> Although I guess "Raku does that" is not exactly the benchmark for sanity
[06:24:35] <Izem> really?
[06:24:39] <Izem> fibonacci?
[06:24:52] <phogg> I've seen an example of it somewhere
[06:24:59] <Izem> I know sequences are done with some languages but that's pretty specific :P
[06:25:34] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[06:25:35] <Izem> so [1,1,2,3 ... n] will get completed?
[06:25:37] <flaknet99> any sequence iirc  i've never used the feature though so it probably breaks down if it can't figure it out
[06:26:25] <phogg> in Raku it's something like 0, 1, * + * ... *
[06:26:32] <phogg> making an infinite list
[06:27:02] <flaknet99> oh and their runtime library is crazy bloated
[06:27:04] <phogg> it's not that crazy, any language supporting generators does that
[06:27:09] <Izem> it's still a curious thing why people don't know there are alternatives to c++ :P
[06:27:10] <flaknet99> so you have to implement all that junk too
[06:27:54] <Izem> e.g. servo could've been done in ada
[06:28:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:28:45] <phogg> you need a critical mass of people to support projects long-term, so popular languages are safer
[06:29:11] <Izem> rust didn't have a critical mass back then
[06:29:35] <phogg> it's an uphill battle for anyone
[06:29:40] <Izem> true
[06:29:58] <phogg> most fail, so it follows that some succeed
[06:30:51] <Izem> I don't think you need that much people imo
[06:31:08] <Izem> there are some design decisions you can do to avoid that
[06:31:10] <phogg> need is a strong word, but I said "safer"
[06:31:18] <Izem> oh ok
[06:31:57] <phogg> the bigger pool of people you can source for interest (to drive features), patches, and future maintainers, the better odds you have of keeping your language alive longer
[06:32:55] <Izem> do you think kotlin had a larger reach because of the design decisions they made, or the audience?
[06:33:10] <[itchyjunk]> what happened to java channel?
[06:33:13] <Izem> scala seems to have fallen behind clojure at this point
[06:33:29] <Izem> [itchyjunk]: it's gone?
[06:33:30] <phogg> too bad, I like scala more
[06:33:47] <flaknet99> the worst part about ada is you are basically forced to enable exceptions if you do any rutntime generic instntiations. otherwise theres no way to sanely deal with an allocation failure
[06:33:49] <[itchyjunk]> i can't joint it
[06:33:52] <[itchyjunk]> can you?
[06:33:53] <phogg> Izem: doesn't kotlin have corporate backers? That helps more, while they last
[06:33:56] <Izem> phogg: I just wonder why
[06:34:21] <flaknet99> assuming the generic in question needs to allocate memory, but it could blow up the stack otherwise
[06:34:27] <Izem> clojure uses s-exp which are notorious NOpe for a lot of programmers
[06:34:41] <phogg> I don't see any channels defined matching #java
[06:35:09] <Izem> phogg: it only has coporate backers now because of it's success (except intellij)
[06:35:11] <[itchyjunk]> huh it existed today morning
[06:35:14] <[itchyjunk]> wonder what happened
[06:35:21] <Izem> missed a ?
[06:35:26] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[06:36:35] <phogg> Izem: if you say so. I don't really keep up with JVM languages
[06:36:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[06:36:52] <Izem> I don't know, I wonder myself
[06:38:01] <phogg> these things are a mistery
[06:38:12] <Izem> can scala take advantage of these new gcs there are making progress with in Java?
[06:38:30] <Izem> or is it totally it's own language
[06:39:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:39:30] <Izem> [itchyjunk]: well you can always ask here
[06:40:31] <Izem> flaknet99: are they like windows exceptions?
[06:41:56] <Izem> dart's website get's better every time I look at it, guess they are still at it
[06:42:41] <[itchyjunk]> Yeah, was just curious to what happened
[06:42:59] *** Quits: xiongxin8802 (~xiongxin@113.116.33.208) (Ping timeout: 252 seconds)
[06:43:48] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[06:44:10] *** Quits: poprocks (~logan@user/poprocks) (Ping timeout: 240 seconds)
[06:44:29] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 246 seconds)
[06:44:32] <flaknet99> it's like the exception handler in JS (if exception propagation is enabled) i think
[06:44:58] <flaknet99> but you can disable propagation and only work at a certain depth
[06:45:26] <Izem> ok
[06:46:14] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[06:46:20] *** Joins: poprocks (~logan@bras-base-toroon1016w-grc-32-76-64-53-16.dsl.bell.ca)
[06:46:21] <flaknet99> theres also a last chance hendler that you cannot disable, which is basically like a c bort()
[06:46:22] <flaknet99> abort()
[06:46:43] *** Quits: yinghua (~yinghua@2800:2121:1400:1db:3d91:483:36a2:ad4f) (Quit: Leaving)
[06:46:44] *** Joins: xiongxin8802 (~xiongxin@113.116.32.188)
[06:47:17] <flaknet99> BUT you can't handle the memory  exceptions there, only program_error constraint_error and something else (might be gnat/gcc specific)
[06:48:20] <flaknet99> everything i've said might actually be gnat/gcc specific.  the downfall of learning through experience
[06:50:19] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[06:50:39] *** Joins: Jigsy (~Jigsy@user/jigsy)
[06:55:51] <pavonia> [itchyjunk]: #java is back open to everyone. Seems to have been a mistake that has just been fixed :)
[06:56:26] *** Quits: xiongxin8802 (~xiongxin@113.116.32.188) (Quit: Konversation terminated!)
[06:56:43] <[itchyjunk]> heh
[06:56:54] *** Joins: xiongxin8802 (~xiongxin@113.116.32.188)
[06:57:38] <pikapika> flaknet99, asm is quite popukar
[06:57:45] <pikapika> Its a very well liked language
[06:57:52] <flaknet99> which asm
[06:58:01] <pikapika> On all platforms
[06:58:05] <flaknet99> intel or att x86?
[06:58:17] <pikapika> thats just a matter of syntax 
[06:58:19] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[06:58:26] <pikapika> asm in general is quite well liked
[06:59:48] <flaknet99> the problem is that you spend so much time wrirting the code, and then it only runs on a specific machine using a specific assembler
[07:01:07] <flaknet99> even the comments aren't portable!
[07:01:10] <pikapika> flaknet99, its quite popular
[07:08:15] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:08:26] *** Joins: flaknet99 (~0x100@32.211.211.39)
[07:08:43] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[07:10:06] <somercet> "asm is liked, but it isn't well liked."
[07:11:09] *** Joins: xiongxin (~quassel@119.123.103.94)
[07:11:45] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[07:13:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[07:14:14] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 246 seconds)
[07:15:57] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:16:24] *** Joins: zaher__ (~zaher@37.48.176.172)
[07:16:56] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[07:16:58] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:17:57] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:882b:583c:4118:b97a)
[07:19:50] *** Quits: zaher_ (~zaher@37.48.181.49) (Ping timeout: 252 seconds)
[07:21:14] *** Quits: poprocks (~logan@bras-base-toroon1016w-grc-32-76-64-53-16.dsl.bell.ca) (Changing host)
[07:21:14] *** Joins: poprocks (~logan@user/poprocks)
[07:22:11] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.3)
[07:25:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[07:25:26] *** Joins: INeedAHandle (~INeedAHan@110.9.129.177)
[07:27:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:28:17] *** Quits: INeedAHandle (~INeedAHan@110.9.129.177) (Client Quit)
[07:28:22] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:28:28] *** Quits: JavaBean (~javabean@user/javabean) (Quit: oh bother)
[07:33:45] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[07:34:12] *** Quits: somercet (~somercet@c-73-190-18-206.hsd1.mi.comcast.net) (Quit: somercet)
[07:34:44] *** Joins: somercet (~somercet@c-73-190-18-206.hsd1.mi.comcast.net)
[07:37:44] *** Joins: JavaBean (~javabean@user/javabean)
[07:37:50] *** Joins: password2 (~password@user/password2)
[07:39:32] *** Joins: dld (~davidlowr@2601:197:600:1210:9df:744b:194c:a7af)
[07:39:41] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 264 seconds)
[07:43:02] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[07:44:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[07:45:02] *** Parts: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Good Bye)
[07:45:29] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Quit: Leaving)
[07:45:41] *** Joins: Samian (~Sami@user/samian)
[07:47:07] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[07:47:12] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[07:47:13] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:47:19] *** Joins: deathonater (~deathonat@98.15.38.21)
[07:47:20] *** Quits: deathonater (~deathonat@98.15.38.21) (Changing host)
[07:47:20] *** Joins: deathonater (~deathonat@user/smeef)
[07:47:40] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3d44:b4b4:9588:c922)
[07:49:05] *** Quits: llh (~llh@user/llh) (Ping timeout: 268 seconds)
[07:50:00] *** Joins: llh (~llh@198.48.244.21)
[07:50:17] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 246 seconds)
[07:50:17] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 246 seconds)
[07:50:29] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:3d44:b4b4:9588:c922) (Ping timeout: 264 seconds)
[07:50:29] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 264 seconds)
[07:50:38] *** Quits: Cashlin (~hp@user/cashlin) (Ping timeout: 246 seconds)
[07:50:56] *** Quits: Smeef (~deathonat@user/smeef) (Ping timeout: 268 seconds)
[07:50:57] *** Joins: Cashlin (~hp@user/cashlin)
[07:51:11] *** Quits: Kharon (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[07:51:13] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Ping timeout: 265 seconds)
[07:52:02] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[07:54:05] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 264 seconds)
[07:54:08] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[07:54:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[07:54:57] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[07:55:06] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[07:55:16] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[07:55:23] *** Joins: Kharon (uid511277@user/cypris)
[07:56:01] *** Joins: wei2912 (~wei2912@112.199.250.21)
[07:56:20] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[07:57:14] *** Joins: anton (anton@tloks.com)
[07:57:17] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:58:49] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[08:01:34] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[08:04:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[08:05:04] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[08:05:45] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:06:57] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:11:11] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:11:39] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:11:59] <vdamewood> Code!
[08:12:00] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[08:12:36] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[08:12:54] <flaknet99> noooo it's dinner time
[08:13:20] <Izem> In c++, is the left side of the :: operator is a class?
[08:13:31] <Izem> s/is a//
[08:13:39] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:13:40] <flaknet99> or a namespace
[08:14:00] <Izem> ty
[08:15:28] <Izem> ApplyDebugLocation DL(*this, E); -- Is this a object declaration?
[08:16:03] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[08:16:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:16:13] <flaknet99> thats scary
[08:16:34] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:17:06] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:17:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[08:17:50] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[08:18:18] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[08:19:17] *** Quits: LiftLeft (~LiftLeft@172.98.92.20) (Ping timeout: 264 seconds)
[08:21:30] *** Joins: kts (~kts@103.73.237.234)
[08:24:09] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[08:25:05] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[08:26:23] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:27:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[08:28:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[08:28:14] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[08:30:00] *** Quits: xiongxin8802 (~xiongxin@113.116.32.188) (Read error: Connection reset by peer)
[08:30:15] *** Joins: xiongxin8802 (~xiongxin@113.116.33.208)
[08:30:38] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:32:14] *** Quits: xiongxin8802 (~xiongxin@113.116.33.208) (Client Quit)
[08:32:35] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[08:32:54] *** Joins: NorthBits (~WestBits@user/northbits)
[08:33:06] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[08:33:07] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[08:33:07] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[08:33:14] *** Joins: Guest_3399 (~WebIRC@223.189.59.208)
[08:34:44] *** Quits: Thedarkb-Desktop (~beno@86-42-4-182-dynamic.agg3.kny.prp-wtd.eircom.net) (Ping timeout: 246 seconds)
[08:36:03] *** AbleBacon_ is now known as AbleBacon
[08:36:17] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[08:37:17] *** Quits: hexingb (~hexingb@111.30.224.85) (Ping timeout: 264 seconds)
[08:37:49] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:37:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[08:38:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[08:39:35] *** Quits: zaher__ (~zaher@37.48.176.172) (Ping timeout: 252 seconds)
[08:40:05] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[08:41:04] *** Joins: hexingb (~hexingb@2409:8902:78c4:6717:e135:2d86:323a:d292)
[08:43:13] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[08:47:20] *** Quits: hexingb (~hexingb@2409:8902:78c4:6717:e135:2d86:323a:d292) (Ping timeout: 246 seconds)
[08:47:41] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[08:48:02] *** Joins: hexingb (~hexingb@111.30.224.85)
[08:48:43] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[08:49:35] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[08:49:53] *** Quits: maroloccio (~marolocci@89-172-7-22.adsl.net.t-com.hr) (Ping timeout: 264 seconds)
[08:51:12] *** Joins: cm007magnum (~Rheanna@101.91.238.197)
[08:51:50] *** Joins: maroloccio (~marolocci@93-142-92-177.adsl.net.t-com.hr)
[08:52:14] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:55:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[08:55:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[09:00:33] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[09:03:17] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:03:26] *** paulo is now known as paul0
[09:03:29] *** paul0 is now known as paulo
[09:05:35] *** Joins: LiftLeft (~LiftLeft@172.98.80.40)
[09:05:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[09:06:05] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Ping timeout: 264 seconds)
[09:06:05] *** Quits: xiongxin (~quassel@119.123.103.94) (Ping timeout: 264 seconds)
[09:06:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[09:09:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:10:47] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 246 seconds)
[09:11:21] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[09:15:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[09:16:30] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[09:18:10] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[09:21:00] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 268 seconds)
[09:21:08] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 265 seconds)
[09:21:48] *** Joins: kodah (~kodah@user/kodah)
[09:22:30] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:22:37] *** Joins: xiongxin (~quassel@119.123.103.94)
[09:25:53] *** Quits: LiftLeft (~LiftLeft@172.98.80.40) (Ping timeout: 246 seconds)
[09:25:53] *** Quits: password2 (~password@user/password2) (Ping timeout: 264 seconds)
[09:26:16] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[09:26:50] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[09:27:59] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[09:28:15] *** Quits: zwr (~zwr@2804:d45:b966:fb00:f689:d439:2171:256f) (Remote host closed the connection)
[09:28:55] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[09:28:55] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[09:28:55] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:23] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 246 seconds)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:42] *** Joins: soapsudsxx (~soapsudsx@141.193.188.134)
[09:31:59] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[09:35:45] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Izem)
[09:36:14] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 252 seconds)
[09:36:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[09:37:09] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[09:39:01] *** Joins: TechTest (uid283215@id-283215.lymington.irccloud.com)
[09:43:28] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[09:43:51] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:43:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:48:33] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:48:35] *** Joins: Burgundy (~yomon@5-12-93-128.residential.rdsnet.ro)
[09:51:19] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[09:51:31] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Quit: Konversation terminated!)
[09:51:51] *** Joins: xiongxin8802 (~xiongxin@113.116.32.188)
[09:53:22] *** Quits: voirnox_ (~voirnox@voidbyte.xyz) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[09:53:42] *** Joins: voirnox (~voirnox@voidbyte.xyz)
[09:55:09] *** Quits: voirnox (~voirnox@voidbyte.xyz) (Client Quit)
[09:55:30] *** Joins: voirnox (~voirnox@voidbyte.xyz)
[09:56:03] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[09:56:53] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[09:56:59] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[09:57:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[09:57:29] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:00:00] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:01:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[10:01:40] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 268 seconds)
[10:02:51] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[10:04:22] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:05:53] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[10:07:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[10:07:18] *** Quits: soapsudsxx (~soapsudsx@141.193.188.134) (Remote host closed the connection)
[10:07:46] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[10:09:01] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[10:11:14] *** Quits: Kharon (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[10:12:44] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[10:14:07] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[10:15:12] *** Quits: cm007magnum (~Rheanna@101.91.238.197) (Remote host closed the connection)
[10:15:15] *** Joins: gggp (~textual@60.10.194.42)
[10:17:16] *** Joins: audio (~audio@2603-8081-1800-b44d-cdf4-18f2-ada3-a94f.res6.spectrum.com)
[10:17:51] *** Joins: cm007magnum (~Rheanna@218.78.27.29)
[10:18:04] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[10:18:36] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[10:19:20] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[10:20:44] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[10:21:13] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[10:21:29] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 246 seconds)
[10:21:44] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 264 seconds)
[10:21:47] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[10:21:48] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[10:21:54] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:22:07] *** Joins: flaknet99 (~0x100@32.211.211.39)
[10:22:08] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:22:20] *** Joins: flaknet99 (~0x100@32.211.211.39)
[10:22:21] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:22:33] *** Joins: flaknet99 (~0x100@32.211.211.39)
[10:22:59] *** Quits: hexingb (~hexingb@111.30.224.85) (Ping timeout: 252 seconds)
[10:23:12] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.2)
[10:23:26] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[10:25:05] *** Joins: MeddlingHuman (~meddlingh@203-114-140-73.sta.inspire.net.nz)
[10:29:20] *** Quits: cm007magnum (~Rheanna@218.78.27.29) (Remote host closed the connection)
[10:29:49] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[10:30:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) ()
[10:31:02] *** Quits: xiongxin8802 (~xiongxin@113.116.32.188) (Quit: Konversation terminated!)
[10:31:15] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[10:31:32] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[10:32:35] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[10:33:37] *** Joins: Klinda (~klinda@2.227.251.209)
[10:34:00] *** Quits: kts (~kts@103.73.237.234) (Ping timeout: 252 seconds)
[10:34:15] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[10:34:27] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[10:35:33] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Remote host closed the connection)
[10:35:38] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[10:35:54] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[10:36:00] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[10:36:41] *** Quits: xiongxin (~quassel@119.123.103.94) (Ping timeout: 264 seconds)
[10:36:57] *** Joins: xiongxin (~quassel@113.116.32.188)
[10:37:01] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[10:39:44] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[10:40:21] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[10:48:19] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[10:50:43] *** Joins: hexingb (~hexingb@2409:8902:78c4:6717:89d4:726:2dfd:4527)
[10:54:49] *** Quits: rofl (rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8) (Ping timeout: 260 seconds)
[10:54:53] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[10:55:17] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[10:56:36] *** Joins: jrqc (~rofl@96.78.87.197)
[10:57:21] *** Joins: palasso (~palasso@user/palasso)
[10:57:53] *** Quits: xiongxin (~quassel@113.116.32.188) (Ping timeout: 246 seconds)
[10:58:17] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Ping timeout: 264 seconds)
[10:59:17] *** Quits: hexingb (~hexingb@2409:8902:78c4:6717:89d4:726:2dfd:4527) (Ping timeout: 246 seconds)
[10:59:59] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[11:02:53] *** Joins: qbt (~edun@user/edun)
[11:04:49] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:04:52] *** Joins: reddit89_ (~user@user/reddit89)
[11:05:24] *** Joins: hub2 (uid126296@id-126296.uxbridge.irccloud.com)
[11:07:20] *** Quits: reddit89 (~user@user/reddit89) (Ping timeout: 246 seconds)
[11:10:34] *** Joins: reddit89 (~user@user/reddit89)
[11:13:15] *** Quits: reddit89_ (~user@user/reddit89) (Ping timeout: 265 seconds)
[11:17:53] *** Joins: SecretFire (~secret-fi@97-120-38-94.ptld.qwest.net)
[11:18:53] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[11:19:47] *** Joins: togusa (~togusa@user/togusa)
[11:19:48] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[11:20:03] *** Joins: cm007magnum (~Rheanna@101.91.197.175)
[11:20:38] *** Joins: newpy (~newpy@2601:280:4381:1390:9d0c:798:e192:4e33)
[11:22:44] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:23:12] *** Joins: xiongxin (~quassel@119.123.103.94)
[11:23:40] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[11:24:38] *** Joins: mrig (~mrig@user/mrig)
[11:29:12] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 265 seconds)
[11:29:43] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Read error: Connection reset by peer)
[11:31:32] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[11:32:56] *** Quits: nctcf^ (~nctcf@12.203.127.82) (Remote host closed the connection)
[11:33:28] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-18ad-5d92-995f-43fb.res6.spectrum.com)
[11:33:47] *** Joins: togusa (~togusa@user/togusa)
[11:33:50] *** Quits: togusa (~togusa@user/togusa) (Client Quit)
[11:34:04] *** Joins: togusa (~togusa@user/togusa)
[11:35:35] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 252 seconds)
[11:35:51] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[11:36:07] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 264 seconds)
[11:36:07] *** Joins: JavaBean (~javabean@user/javabean)
[11:36:53] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[11:37:22] <Alex123> hello all, I need to write a script which needs to import data into db, if there are duplicates based on defined keys it will update rest of the fields or create new one if data does not exists. The data is stored following way: user_id, field, value , imported data will be  <email:email@example.com, phone:1234, firstname; bla>,  <email: email1@example.com, phone:1234, firstname; bla>,  <email:email2@example.c
[11:37:22] <Alex123> ame; bla> and matching fields will be "phone and email". I can run one query per input and see if there are any matches but if I have 1000s of lines 
[11:37:34] <Alex123> this will not be performing 
[11:37:50] <Alex123> I was thinking to make a query with and or statements and run single query 
[11:39:07] *** Quits: togusa (~togusa@user/togusa) (Quit: Leaving)
[11:40:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:41:12] <pyzozord> you can clean up your input before inserting it or you can make mysql solve the duplicates
[11:41:17] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[11:41:54] <pyzozord> if you wanna make mysql solve the duplicates I'd make one "upsert" per one row, and put all of them in single transaction
[11:43:22] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[11:44:45] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:01] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:46:04] *** Joins: Tazy (~Tazmainia@102.39.80.61)
[11:49:58] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:50:48] <Alex123> the data in mysql is not one row per user
[11:50:53] <Alex123> it multi line
[11:51:08] <Alex123> data will look like
[11:51:17] <Alex123> 123, email, mam@yahoo.com
[11:51:30] <Alex123> 123, phone, 12121
[11:51:44] <Alex123> 123, website, https://example.com
[11:51:45] <bayaz> Title: Example Domain 
[11:51:58] <Akronymus> That breaks the normal forms
[11:52:13] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[11:52:14] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[11:52:14] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[11:52:45] <Akronymus> Specifically the 3rd one afaict.
[11:53:24] <pyzozord> oh then I don't know, maybe mysql has some mechanisms for unique keys that span multipe rows
[11:53:28] <Akronymus> I can promise you that such a table will lead to suffering.
[11:53:32] <pyzozord> then I'd clean up data before inserting tbh
[11:54:28] <pyzozord> yeah and what Akronymus said, unless you really need that structure or can't change it -- do try to make it just one row for one record
[11:55:00] <Akronymus> More that you put emails in their own table, phones in their own and websites in their own.
[11:55:19] <Akronymus> As dependencies between columns within a row are BAD.
[11:55:24] <Alex123> fields per user are created dynamically 
[11:55:40] <Alex123> each account has different set of contact fields they decide 
[11:55:54] <Alex123> so not all accounts which have users have email
[11:55:59] <Akronymus> Yes, so make one table per contact type.
[11:56:12] <Akronymus> And only add to the ones you actually need
[11:56:27] <Akronymus> Ofc it is more joins, but does that actually matter?
[11:56:41] <Alex123> how would it work, accounts can have N number of types, they can create email1, email2 email3 if they wish
[11:57:15] <Akronymus> recid, userid, emailaddress
[11:57:18] <Akronymus> As the table?
[11:57:34] <Alex123> right now table is account_id, user_id, type, value
[11:57:37] <mobidrop> the solution to any kind of table problems is to simple add a JSON column to store arbitrary data
[11:57:51] <mobidrop> s/simple/simply/
[11:57:53] <Akronymus> mobidrop that breaks the 1st NF though.
[11:57:59] *** Joins: gggp (~textual@60.10.194.42)
[11:58:42] <mobidrop> I didn't say it was a good solution ;)
[11:59:14] <Akronymus> Alex123 I have ran into problems with bad database layouts often enough.
[11:59:21] <pyzozord> Alex123: or frankly, do the dumb thing, just write your php/python/java script that checks what is in database and based on that makes inserts or updates. It will take whole night or something but you will be able to move on to other tasks
[11:59:33] <Akronymus> PLEASE do trust me when I say that your current version is gonna make you suffer
[12:00:04] <pyzozord> Alex123: although you might wanna listen to Akronymus
[12:00:47] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:01:01] <Akronymus> As soon as you have a "type" column you should think hard about whether it is the right design.
[12:01:17] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[12:01:34] *** Joins: user51 (~user51@176.228.90.248)
[12:02:50] <Alex123> so what will be alternative, except storing json 
[12:02:56] <pyzozord> I was working once in a hosting corpo, we had a webshop with highly configurable products. The data base was architectured in this way. It really was PITA. Eventually smart manager came along and trashed all that and created a database with 1 table per product. It was so much more simple to work with
[12:03:24] <Alex123> problem list of products are not defined 
[12:03:37] <Alex123> each client create its own list of "products"
[12:04:00] <Akronymus> 1 table per variant
[12:04:08] <Akronymus> 1 table for emails
[12:04:13] <Akronymus> 1 table for websites
[12:04:17] <pyzozord> dynamically create new tables
[12:04:21] <Akronymus> 1 table for phone numbers
[12:04:26] <Akronymus> pyzozord eeeeeh.
[12:04:59] <pyzozord> or yeah N:1 table per field
[12:05:13] <Akronymus> Oh for products.
[12:05:22] <Akronymus> That is a different problem than the contacts.
[12:05:31] <Alex123> he called it product
[12:05:50] <Alex123> so I keep it as product but besically its user meta data 
[12:05:53] *** Joins: chm15 (~connor@2604:3d09:737c:efe0::f069)
[12:06:01] <Alex123> can be email,wechat, kik, phone
[12:06:01] <pyzozord> I didn't call your thing a product :P I was bringing up my story
[12:06:05] <Akronymus> Ok-
[12:06:22] <Akronymus> So, you have a defined list of types of contacts?
[12:06:30] <Alex123> or 随机的
[12:06:48] <Alex123> whole list is dynamic account starts empty 
[12:06:56] <Alex123> and they define what info they want about their users
[12:07:07] <Akronymus> IMO have one table for each contact method
[12:07:29] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[12:07:36] <Alex123> 随机的 ;) table
[12:07:56] <Alex123> they can create any contact type they want to, any language 
[12:08:08] <Akronymus> With either 3 columns (recordid, userid, email/website/etc.)
[12:08:35] <Akronymus> With a unique constraint over userid and the last column and the recordid as primary
[12:08:36] *** Quits: cm007magnum (~Rheanna@101.91.197.175) (Remote host closed the connection)
[12:08:40] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[12:08:56] <Akronymus> or leave recordid out and make userid and the value a composite primary key.
[12:09:09] <Akronymus> You can also use these tables to enrich the data with metadata.
[12:09:36] <Akronymus> For example, for emails you could additionally store if it has been verified
[12:09:59] <chm15>  
[12:10:12] *** Joins: cm007magnum (~Rheanna@101.91.238.197)
[12:10:54] *** Joins: Rounin (~david@84.212.130.215)
[12:11:39] *** Joins: kariosfox (~kariosfox@195.164.182.230)
[12:11:39] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[12:11:53] *** Parts: chm15 (~connor@2604:3d09:737c:efe0::f069) (WeeChat 2.8)
[12:12:18] <Alex123> can not use unique constrain 
[12:12:32] <Akronymus> Why not?
[12:12:41] <Alex123> it will be again based on user to  tell during this import what are unique
[12:12:42] <Alex123> fields 
[12:12:52] <Alex123> they can pick email only for import, next one
[12:12:54] <password> meh
[12:12:55] <Alex123> email and phone
[12:12:58] <Akronymus> Can one person have multiple emails?
[12:13:09] <Alex123> the same email can be used by multiple people
[12:13:17] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[12:13:17] <password> i tried to find a graph for what teh effort is to fix a db bug , but i only find for software in general
[12:13:25] <Akronymus> Yes, hence unique constraint over userid and value
[12:13:33] <Akronymus> As in, they together have to be unique
[12:13:33] <password> i think a DB design issue is so much moreexpensive in production
[12:13:55] <Akronymus> Rather than each one having to be unique
[12:14:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[12:14:17] <Akronymus> https://stackoverflow.com/questions/37810760/composite-unique-constraint-sql
[12:14:18] *** Joins: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu)
[12:14:19] <bayaz> Title: Composite Unique Constraint SQL 
[12:14:51] <Alex123> the problem is constrains are different per import 
[12:14:51] *** Joins: GilP (~GilP@user/gilp)
[12:15:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:10] <pyzozord> what do you mean?
[12:15:16] <Alex123> user defines what is unique per import  
[12:15:23] <pyzozord> so just messy input data then?
[12:15:38] <Akronymus> All the more important to have a good DB schema
[12:15:47] *** Quits: kmh_ (~kmh@p200300df5f1282007143a36be9ce9e14.dip0.t-ipconnect.de) (Quit: Leaving)
[12:16:13] <Alex123> user can say this run use only emails as unique, next run can be 随机的 is unique  
[12:16:17] *** Quits: kariosfox (~kariosfox@195.164.182.230) (Ping timeout: 264 seconds)
[12:16:31] <Alex123> next run it can be phone, email, 随机的
[12:16:36] *** Joins: plastico (~plastico@neomutt/plastico)
[12:16:49] <password> pyzozord \o/
[12:17:01] <pyzozord> password: hello :)
[12:17:05] <Akronymus> I think you may think of a different unique
[12:17:07] <password> somehow my client always colour your nick the same as mine
[12:17:17] <Akronymus> Unique in the context of a DB means it can only exist once.
[12:17:26] <Akronymus> You can still use multiple different entries
[12:17:35] <pyzozord> password: computers confuse us, people do too
[12:17:50] <Alex123> basically unique is matching fields which are all connected with. "AND"
[12:17:54] *** Joins: kmh (~kmh@p200300df5f1282005c27103ce1ac4852.dip0.t-ipconnect.de)
[12:18:01] <Akronymus> For example, storing the same email + user pair multiple times doesn't make sense
[12:18:13] <Alex123> the same email for the same user can be multiple times
[12:18:22] <Akronymus> ????
[12:18:28] <Akronymus> HOW does that make sense?
[12:18:28] <Alex123> for example if they work email field and personal email
[12:18:36] <Alex123> for the same user they can put the same email address
[12:19:42] <Akronymus> Have a table for private and one for work emails?
[12:19:55] <Akronymus> Altough, I guess that kinda do gets messy again.
[12:20:07] <pyzozord> it doesn't sound like you want a rdbms
[12:20:45] <Alex123> so right now the format account_id, user_id, type, value working fine for storing this kind dynamic data 
[12:21:03] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[12:21:04] <Akronymus> Where do you store whether it is private or work related?
[12:21:17] <Alex123> type will be private_email, work_email
[12:21:29] <Akronymus> So, just email can be both?
[12:21:39] <Akronymus> Or all contact methods?
[12:21:50] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 252 seconds)
[12:21:51] <Alex123> all contact methods can be shared for example phone
[12:21:55] <Alex123> can be phone and the fax
[12:22:01] <Alex123> and whatsapp
[12:22:02] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[12:22:43] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[12:22:52] <Akronymus> Ok, I'd use a different design then.
[12:23:24] <Akronymus> Store all emails, without userid in one table, all phone numbers in another and so on.
[12:23:49] <Akronymus> Then have a table that does n:m mapping from user to the records per type
[12:24:16] <Akronymus> the n:m table would additionally have a private or work column
[12:24:48] <Alex123> so how would you update email this case, for the user 
[12:24:55] <Alex123> just add new email and update mapping
[12:25:00] <pyzozord> you need to kind of create a metadatabase. Inside your database you create a schema for a database and use that
[12:25:10] <pyzozord> table per field, table per property of the field etc
[12:25:28] <Alex123> :) sounds too complex 
[12:25:45] <pyzozord> or do hacky thing and suffer
[12:25:53] <Alex123> for just avoiding having type 
[12:25:56] <pyzozord> you'll suffer anyway because you want everything
[12:25:56] <Alex123> suffer how?
[12:26:08] <Alex123> what is downside of storing the type
[12:26:16] <Akronymus> A in between table that has the userid, emailrecordid and a column whether it is private or public
[12:26:28] <Akronymus> Alex123 EXTREMELY hard to get the constraints right
[12:26:30] <Akronymus> Error prone
[12:26:31] *** Joins: wwilly (~wwilly@217.140.106.13)
[12:26:42] <Akronymus> quickly gets unwieldy on large data sets
[12:27:36] <Alex123> ok so constrain is main issue?
[12:27:50] <pyzozord> just spaghetti syndrome
[12:28:07] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Remote host closed the connection)
[12:29:23] *** Joins: cadmio (~cadmio@151.25.156.194)
[12:29:25] <pyzozord> you need to model the relationships somehow, rdbms, or at least mysql is not the best inmodeling inter-row relations
[12:29:26] <cadmio> Hello
[12:29:43] <cadmio> each time I calculate an expression I print the head value of the linked list https://paste.gnome.org/petduroek#line-278
[12:29:45] <bayaz> Title: GNOME Pastebin 
[12:29:54] <cadmio> I get /jac "sin (pi/2 + 3 + 5)/2"; head is: 3.141593; op head = /; head is: 9.570796; op head = *; 0.2879033166650652938
[12:30:07] <cadmio> the first head is correct I don't understand how 9.570796 is being produced
[12:31:09] <Akronymus> https://hastebin.com/ujijudutuz.properties put that
[12:31:12] <Akronymus> into here https://dbdiagram.io/d
[12:31:14] <bayaz> Title: dbdiagram.io - Database Relationship Diagrams Design Tool 
[12:31:27] <Akronymus> Something like that
[12:31:55] <Akronymus> pyzozord you can convert it to a inter table relation though
[12:32:04] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[12:32:20] <pyzozord> Akronymus: yep, but he says that is too complex
[12:32:27] <Akronymus> ...
[12:32:41] <Akronymus> Then I suggest getting a different job
[12:32:49] <pyzozord> :D
[12:33:11] <Akronymus> Alex123 did you see the links I posted?
[12:33:20] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:33:23] <Akronymus> That one is just for emails
[12:33:39] <Akronymus> But you can do the same pattern for the other contact types too
[12:33:49] <Alex123> not all accounts will have emails :) it was just example
[12:34:07] <Alex123> some will only have social media ids, some will have only first name last names
[12:34:17] <Akronymus> You just don't make a entry in the useremails table
[12:35:42] <Akronymus> Just because a table exists, doesn't mean you have to add entries to it
[12:37:01] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[12:37:14] <pyzozord> Akronymus: can you create indexes/constraints that span multiple tables?
[12:37:26] <Akronymus> Foreign keys?
[12:38:02] <pyzozord> hmm I'm not sure if foreign keys would do the job here, would need to think abit
[12:38:08] <pyzozord> my mysql is very rusty
[12:38:32] <Akronymus> The foreign key would be that the user.id that the useremails.userid refers to has to exist.
[12:38:44] <Akronymus> Same for email.id and useremails.emailid
[12:39:10] *** Parts: GilP (~GilP@user/gilp) (Leaving)
[12:39:17] <pyzozord> oh yeah
[12:39:21] <Akronymus> It doesn't say the useremail.userid has to exist for user.id for example.
[12:39:38] <pyzozord> right but I think he says that "email" is just example and users can add their own fields
[12:40:17] <Akronymus> But it still seemed limited to a specific set of possible contact methods
[12:40:30] <Akronymus> You'd just do the same pattern but with other contact methods
[12:40:46] <Akronymus> Just replace email with whatsapp for example.
[12:41:08] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[12:41:22] <Akronymus> This method has the additional benefit that you can add metadata to each user -> contactmethod table as appropriate.
[12:42:27] <Akronymus> For example, for phones it makes sense to have it refer to a table about whether it is a plain phone address, a fax, whatsapp, etc
[12:43:14] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:43:32] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[12:44:43] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:45:17] <Akronymus> https://hastebin.com/ukohilozog.properties something like that pyzozord
[12:45:40] <Akronymus> Put it into the dbdiagram site again
[12:46:34] <Akronymus> Oh, forgot to add `isprivate bool [pk]` to the userphones table
[12:48:34] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[12:48:37] <pyzozord> damn, HRs are reaching out to me saying they wanna "connect"
[12:48:43] <pyzozord> I'm being fired
[12:48:49] <pyzozord> I'm sure of it
[12:48:50] *** Joins: weeoo (~nikola@93-86-197-190.dynamic.isp.telekom.rs)
[12:49:02] <Akronymus> Or maybe promoted
[12:49:22] <pyzozord> no no way, I had to much discussions about my "communication skills" with my manager
[12:49:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[12:49:36] <somercet> ugh
[12:49:40] <somercet> I know the feeling
[12:49:42] <Akronymus> Getting reassigned to a new manager?
[12:49:55] <Akronymus> Or the manager being reassigned
[12:49:55] <pyzozord> i wish, i hate that asshole
[12:50:24] <Akronymus> HR isn't there to protect you
[12:50:26] <pyzozord> so tired of switching jobs again and again every year or two
[12:50:30] <Akronymus> Nor does it protect the manager
[12:50:35] <Akronymus> It protects the company
[12:50:46] <Akronymus> So if the manager sucks for more people than just you
[12:51:00] <Akronymus> The manager is more likely to get the axe
[12:51:02] <pyzozord> problem is, I don't think he does suck for other people
[12:51:20] <pyzozord> these people are very... backstaby
[12:51:26] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:51:36] <pyzozord> and I can't stand that. But they all seem to be happy with each other
[12:53:46] <pyzozord> bleh
[12:57:13] *** Quits: gggp (~textual@60.10.194.42) (Read error: Connection reset by peer)
[12:57:34] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[12:58:36] *** Quits: cm007magnum (~Rheanna@101.91.238.197) (Remote host closed the connection)
[12:58:44] <Akronymus> https://www.red-gate.com/simple-talk/databases/sql-server/database-administration-sql-server/ten-common-database-design-mistakes/ Alex123
[12:58:47] <bayaz> Title: Ten Common Database Design Mistakes - Simple Talk 
[12:59:21] *** Parts: cadmio (~cadmio@151.25.156.194) (WeeChat 3.0)
[12:59:47] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[12:59:56] <beaky> how do i avoid these mistakes in my tea database design
[13:00:05] <somercet> The law says you can be fired for being "offensive" at work
[13:00:10] <somercet> in the U.S.
[13:00:27] <pyzozord> oh no, they will just not extend my contract that's it
[13:00:37] <pyzozord> fuckers still lie to me that they will
[13:00:52] <beaky> 'Not using stored procedures to access data' 
[13:00:54] <Akronymus> Lawyer up/start searching for a new job?
[13:01:01] <pyzozord> but all signs in the air say otherwise
[13:01:08] <Akronymus> beaky I actually agree with that one.
[13:01:13] <pyzozord> yea gotta start searching soon
[13:01:14] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:01:16] <Akronymus> Because stored procs are aamzing
[13:01:19] <pyzozord> hard to find fully remote jobs :(
[13:01:23] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[13:01:52] <Akronymus> Altough, I guess it depends on the DB beaky
[13:02:04] <Akronymus> In T-SQL they work very well and are easy to write.
[13:02:10] <Akronymus> In mysql on the other hand...
[13:02:48] <beaky> yes i have mixed feelings on stored procedures on one hand they make up a lot for the deficiencies in sql on the other hand they feel very adhoc
[13:03:00] <Akronymus> I partially like stored procs because you can set accessibility per user/stored proc
[13:03:21] <Akronymus> I personally feel like generating sql in the application is more adhoc
[13:04:06] <TJ-> one very  good thing about SPs is you can create a standard API and change the implementation behind the scenees without changing any client application
[13:04:13] <beaky> yes the point is that sql itself is flexible enough to accomodate multiple different applications whereas with stored procedures they get designed to conform to specific applications
[13:04:44] <Akronymus> TJ- like when data constraints change
[13:04:44] <pyzozord> Actually I'll start searching right now... The only problem is where I live it extremly hard to find rent without at least temporary contract and I don't want to have another temporary contract, I'm thinking about switching to freelance
[13:04:46] <beaky> but then on the flipside you can just code the app as a set of stored procedures
[13:05:39] <Akronymus> I think of stored procs as more of a API than being application specific.
[13:05:58] <Akronymus> But tbh, the DB almost always is VERY closely married to the application anyways.
[13:06:07] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 264 seconds)
[13:06:16] <beaky> yes i think with the right design there will be a nice midleground to benefit alot from stored procedures 
[13:06:18] <TJ-> I've seen SPs save weeks of time when there's a major business change (e.g. integrating some major new requirement. One-such might be having acquired another company and needing to integrate data sources)
[13:06:53] <Akronymus> They also are amazing for generating data for reports.
[13:06:58] *** Joins: mrig (~mrig@user/mrig)
[13:07:14] <Akronymus> And there is no rule that you can only use a limited amount of SP's
[13:07:34] <Akronymus> At my last company I worked for, we had literally hundreds.
[13:08:12] <Akronymus> With many doing what would have taken an insane amount of work in application
[13:08:16] <beaky> nice what is the most briliant use of stored procedure u have seen
[13:08:20] *** Joins: zwr (~zwr@2804:d45:b966:fb00:352e:f87c:52f3:8f6a)
[13:08:41] <Akronymus> Aggregating almost all business data to generate a report on earnings.
[13:09:03] <mercenary> 'middle ground' being the operative words. I still have ptsd from working on a large banking app that was built from 100% stored procedures
[13:09:38] <Akronymus> We used stored procs for basically every DB access.
[13:10:01] <Akronymus> It allowed us to reduce our boilerplate, such as setting last change by user/data and such
[13:10:15] <Akronymus> (A lot of it was automatically generated)
[13:10:24] <beaky> yes my dream is to figure out how to get stored proceeudres to shoehorn in diferential data flow but at that point might as well come up with a new database design (thus my tea database)
[13:10:48] <beaky> nice i like banking
[13:10:53] *** Quits: Inhonion (~uhhh3@user/tastywiener95) (Ping timeout: 264 seconds)
[13:11:04] <TJ-> One of the useful things for SPs is they can generate a static result on first use that is cached and then served without any calculations when a query calls them
[13:11:05] *** Joins: rexar89 (~alexi5@208.83.82.234)
[13:11:35] <Akronymus> All our db accesses within the application were calls to specific stored procs + with the data we need.
[13:11:46] *** Joins: Lyn (~Lyn@user/law)
[13:11:51] <beaky> yes that caching thing is very imporiotant
[13:12:10] <Akronymus> Also allows for incremental updating of the cache
[13:12:21] <TJ-> asynchronous updates yes
[13:12:39] <Akronymus> For eaxample, having it be updated at night to show the earnings this month so far.
[13:13:05] <TJ-> or triggers when X number of record updates have been applied
[13:13:18] <Akronymus> That too.
[13:13:35] <Akronymus> And if you always have to go through x stored proc for y.
[13:13:47] <Akronymus> And something about y changes, you just need to update x
[13:13:52] <Akronymus> Not the application itself
[13:14:02] <TJ-> having user data sanitation in the DB also is far more secure than hoping/expecting the application to do that
[13:14:22] <Akronymus> Yeah, stored procs give you injection protection basically for free
[13:15:19] <Akronymus> You can not pass non-parametrized values in the first place
[13:15:26] <mercenary> Also another layer of access control that is difficult to do otherwise
[13:15:35] <Akronymus> Oh yeah.
[13:16:08] <pyzozord> I'm not to found of stored procedures, I feel they are kind of tucked on to the db system. In general I'm not a big fan of databases
[13:16:12] <Akronymus> In quite a few stored procs that touched C level only data, there was an additional check that hooked into AD to only give data when the user is a C level
[13:16:13] <TJ-> mercenary: yes; I've done things like time-based ACLs because you know that some application should not be making queries at certain times (weekends maybe)
[13:16:24] <pyzozord> I like berkeley db
[13:16:30] <beaky> nice i like berkley db too
[13:16:31] <mercenary> Also things like 'user can see all fields except when the record is part of <some criteria>'
[13:16:43] <beaky> it comes by default in freebsd
[13:16:46] <TJ-> Akronymus: yes, linking into Kerberos/LDAP is very useful
[13:16:47] <Akronymus> pyzozord yeah I get that. SP's really should be source controlled too
[13:17:12] <beaky> write stored procedures to implement source control for stored procedured
[13:17:13] *** Quits: gitgood (~gitgood@85.210.186.158) (Ping timeout: 252 seconds)
[13:17:20] <Akronymus> Eww
[13:17:28] <pyzozord> hahah
[13:17:42] <Akronymus> We just ran git on a frequent export of the stored procs.
[13:17:43] <pyzozord> implement a turing machine in stored procedures, implement a vm in that, install linux, profit
[13:17:47] <Akronymus> I think it was hourly.
[13:18:14] <Akronymus> And automatically commited to git whenever there has been any changed stored proc from last time
[13:18:38] <Akronymus> Git is nice because it just works on text files
[13:18:56] <TJ-> I wouldn't let SPs onto production until they'd passed decent unit tests on the dev platform
[13:19:08] <pyzozord> in some sense git is a database, and a database can be made to be a version control system
[13:19:38] <pyzozord> I don't see why wouldn't database with SPs have some version control system
[13:19:49] <Akronymus> TJ- we kinda hacked around in prod...
[13:19:51] <pyzozord> although that still feels separated from the application
[13:19:52] <TJ-> everything is a database at some level, but doesn't mean it is a 'database' :)
[13:20:29] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Ping timeout: 264 seconds)
[13:20:40] <mercenary> pyzozord: gitSQL ?
[13:20:51] *** Quits: xiongxin (~quassel@119.123.103.94) (Ping timeout: 265 seconds)
[13:20:54] *** Joins: xiongxin_ (~quassel@113.116.32.178)
[13:21:44] <pyzozord> mercenary: that sounds foul :D
[13:22:26] <TJ-> for a RDBMS I guess the 'key' (excuse the pun!) is indexes
[13:23:02] <Akronymus> Key can also be for constraints
[13:23:14] <mercenary> indexes are just an optimization. What you can do with indexes, you can do with a full table scan ;)
[13:23:47] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[13:25:14] <TJ-> mercenary: that is rather the point though; you could just go through a bunch of physical file cabinets instead or you could have common files collected into one drawer 
[13:26:11] <Akronymus> One thing I quite dislike though: views
[13:26:20] <Akronymus> Maybe I just don't get them
[13:26:27] <pyzozord> hah, I like them kind of
[13:26:33] <TJ-> I rather like views, in DNS at least
[13:26:34] <Akronymus> But to me, it seems everything they do, stored procs do better
[13:26:38] *** Quits: password (~password@user/password2) (Quit: Ping timeout (120 seconds))
[13:26:51] <pyzozord> oh that could be, I don't know that much about SPs
[13:27:21] <pyzozord> would be cool if a database under the hood converted everything to it's internal language
[13:27:35] <pyzozord> so all the sql layer was just being translated to that SP language
[13:27:40] <mercenary> updateable views can be useful just to write things more compact
[13:28:10] <Akronymus> I read that in some cases, views get stacked on top of each other until it is basically unuseable
[13:28:11] <mercenary> and things like materialized views can speed things up nicely
[13:28:32] <Akronymus> But as I said: I don't know much about them
[13:30:39] *** Quits: xiongxin_ (~quassel@113.116.32.178) (Ping timeout: 260 seconds)
[13:30:44] *** Quits: somercet (~somercet@c-73-190-18-206.hsd1.mi.comcast.net) (Quit: somercet)
[13:32:54] <weeoo> Someone here knows libalsa?
[13:33:19] <weeoo> Should I use snd_config_unref() or snd_config_update_free_global() when I want to destroy global configuration tree?
[13:33:47] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-18ad-5d92-995f-43fb.res6.spectrum.com) (Quit: Leaving.)
[13:35:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 246 seconds)
[13:37:17] *** Joins: EtherNet (~Gerardo@user/ethernet)
[13:37:22] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[13:37:22] *** Joins: andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[13:38:06] <amigojapan> pyzozord: try an orm
[13:38:17] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:38:18] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:38:18] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:39:44] <Akronymus> orm...
[13:39:54] * Akronymus sets himself on fire and runs in circles
[13:40:15] *** Joins: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net)
[13:40:32] <pyzozord> orms are terrible, not a fan
[13:40:37] <Akronymus> I can easily outpace devs that use ORM's with purely sql
[13:41:04] <Akronymus> Assuming the data model is somewhat sane
[13:41:38] <merijn> SQL, otoh, is great
[13:42:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:43:23] <amigojapan> Yeah I prefer using my SQL but I thought orm was what the cool kids were doing
[13:43:35] <Akronymus> ORM's IMO as a rule suck
[13:43:42] <Akronymus> Altough, I am biased
[13:43:47] <Akronymus> I fucking loathe OOP
[13:44:01] <amigojapan> I love oop
[13:44:04] <Akronymus> Mind the double O though
[13:44:11] <Akronymus> I actually like objects
[13:44:14] <amigojapan> But am used to SQL
[13:44:21] *** Quits: weeoo (~nikola@93-86-197-190.dynamic.isp.telekom.rs) (Quit: leaving)
[13:44:21] <Akronymus> But object orientation just plain sucks
[13:44:27] <Akronymus> IME
[13:44:54] <amigojapan> I think oop makes much sense for games
[13:45:36] <GeDaMo> The main thing I dislike about OOP is inheritance hierarchies
[13:47:24] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:47:28] <Akronymus> Inheritance is the ONE defining thing of oop
[13:47:34] <merijn> The main thing I dislike about OOP is inheritance, tying implementation to data...
[13:47:41] <merijn> Akronymus: Smalltalk disagrees
[13:47:49] <Akronymus> in practice*
[13:48:56] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[13:49:54] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[13:50:07] *** Joins: rsx (~dummy@ppp-188-174-150-47.dynamic.mnet-online.de)
[13:50:15] *** Joins: password (~password@user/password2)
[13:50:59] <amigojapan> GeDaMo: yeah. I think inheritance only makes sense to reduce the amount of code with many objects that will share the parent class methods and data
[13:51:22] *** Joins: artifishul (~nate@162.218.217.134)
[13:51:23] *** Joins: zaher (~zaher@37.48.146.60)
[13:51:27] <GeDaMo> I think databases might be a better model for games 
[13:51:56] <artifishul> I just finished a coding assignment for a job interview at 3am, do I submit it now? Or should I wait until sunup?
[13:52:11] <amigojapan> GeDaMo: what do you mean? At least structs that hold character attributes
[13:52:42] <GeDaMo> Database-like tables are likely to have better memory layout
[13:52:59] <amigojapan> artifishul if it is online why not now?
[13:53:01] <GeDaMo> It's unusual to only deal with one game entity at a time
[13:53:11] <Rounin> The model of adding behaviours by importing, say, interfaces, seems much better to me... Is that mixins, perhaps? At any rate, Ruby uses it a lot, for instance... You implement a method called "all" or something like that, and suddenly you can do .map, .filter, .take(number) etc. on your object and treat it as a stream
[13:53:40] <amigojapan> GeDaMo: maybe if the database is held in ram
[13:53:49] <artifishul> amigojapan: Submission is just emailing the manager for the team. I don't want to look like a weirdo staying up until 3am coding on his assignment.
[13:54:36] <GeDaMo> Yes, in-memory DB
[13:54:37] <Donitz> inheritance isn't just useful for reducing data
[13:54:51] <PlanckWalk> artifishul: if it's 3am, check it in the morning.
[13:54:55] <Donitz> it also allows you to create specialized versions of things
[13:55:06] <amigojapan> I see artifishul then I guess you answered your own question. If you think that makes you seem like a weirdo. Then do it at sun up
[13:55:08] <PlanckWalk> (Unless you normally stay up until 3am with no loss of cognitive function whatsoever)
[13:55:09] <Donitz> Missile : Projectile
[13:55:18] <Donitz> shoot(Projectile projectile)
[13:55:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:55:58] <merijn> GeDaMo: I mean, isn't that essentially what ECS are?
[13:56:12] <Donitz> or for a more realistic example, I usually use a Collidable superclass for my inworld game entities
[13:56:13] <GeDaMo> Yes
[13:56:18] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:56:44] <merijn> Donitz: That same thing can be done with ECS, though...
[13:56:54] <Donitz> yes, but it's not as convenient
[13:57:08] <amigojapan> GeDaMo: I don't think databases are usually held in ram
[13:57:15] <PlanckWalk> Lots are
[13:57:15] <Akronymus> I'd rather have 1 datastructure I access with 100 functions than 10 I access with 10 functions
[13:57:15] <GeDaMo> Many are
[13:57:27] <Akronymus> Given that the data is immutable
[13:57:28] <Donitz> databases can be held in ram just fine
[13:57:31] <GeDaMo> https://en.wikipedia.org/wiki/In-memory_database
[13:57:33] <bayaz> Title: In-memory database - Wikipedia 
[13:57:45] <PlanckWalk> Even the on-disk ones are often held in memory in practice
[13:57:45] <amigojapan> Let me see
[13:58:03] <PlanckWalk> (with some commit-to-disk writebehind for updates)
[13:58:28] <PlanckWalk> Depending on your transaction settings
[13:58:34] <Akronymus> I prefer to have "simple" records of subrecords/collections/primitives
[13:58:55] <Akronymus> Where I can use generic functions to handle the collections for example
[13:59:05] <GeDaMo> I'm using 'database' in a generic sense, not necessarily a full relational DB
[13:59:23] <Donitz> for proper ECS, I'd imagine having long arrays of component data would allow you to entirely remove cache misses
[13:59:27] <GeDaMo> A collection of data on which you can perform queries
[14:00:07] <Donitz> each component has the exact same amount of data preferably
[14:00:09] <PlanckWalk> If the arrays are long enough you can evict the whole lot every tick
[14:00:16] <Donitz> each instance*
[14:00:28] <amigojapan> GeDaMo: maybe I should try making a game with an in memory database. Sounds interesting
[14:00:42] <Donitz> meh, sounds inefficient
[14:00:47] <Donitz> mixing the whole ACID thing into gamedev
[14:00:49] <Donitz> probably slow
[14:01:12] <PlanckWalk> The 3 MMOs I've played for more than a few minutes all used in-memory DB
[14:01:18] <GeDaMo> You don't necessarily need all that
[14:01:21] *** Quits: andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Read error: Connection reset by peer)
[14:01:23] <Donitz> yes, but probably written from scratch
[14:01:23] <PlanckWalk> Other games, not so much
[14:01:35] <Donitz> and at that point
[14:01:36] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[14:01:38] <Donitz> is it even a database anymore?
[14:01:50] <GeDaMo> A collection of data on which you can perform queries
[14:02:04] <PlanckWalk> Well, two were commercial off the shelf in-memory DBs
[14:02:17] <PlanckWalk> (Relation DBs)
[14:02:26] <Akronymus> Most object graphs are basically a database, just worse for aggregating data
[14:03:02] <amigojapan> I think GeDaMo was talking about normal graphical games where the game entities are stored in a db instead of in methods
[14:03:30] <GeDaMo> SELECT object FROM scene WHERE AABB intersects frustum
[14:03:41] *** Quits: jazzy (~jaziz@2600:380:457b:dc40:5c0f:a321:1cd7:19b9) (Ping timeout: 264 seconds)
[14:03:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:03:51] <Akronymus> https://wiki.c2.com/?TableOrientedProgramming
[14:04:05] <Amadiro> even a full ACID database is fine for a lot of games, you might just want to offload some of the most high-scale high-throughput stuff from it, like the position of every player or mob in an MMO. But for things like player attributes and items it's still a good choice, or if your game does not have a massive scale
[14:04:06] <Donitz> haha
[14:04:13] <Donitz> have you used postgresql for GIS?
[14:04:17] <Donitz> it's pretty great
[14:04:20] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[14:04:20] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[14:04:20] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:04:21] <Amadiro> (if it does have a massive scale, you have to expect to spend a lot more time on all kinds of small details anyway)
[14:04:24] <amigojapan> GeDaMo: what's intersects?
[14:04:30] <Donitz> two things overlap
[14:04:38] <Donitz> in this case Axis Aligned Bounding Boxes
[14:04:49] <Donitz> min x, max x, min y, max y
[14:04:54] <Donitz> + whatever dimensions
[14:04:55] <Amadiro> PostGIS is great, sadly I mostly have to work with geospark (sedona) these days, which is not
[14:05:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:05:46] <Donitz> if you like to use a super efficient broadphase collision pruning method, check out sweep and prune
[14:06:01] <Donitz> it can work at speed n most of the time
[14:06:40] <amigojapan> Donitz: how can SQL know if they intersect?
[14:06:52] <Donitz> custom methods
[14:06:56] *** Joins: Atque (~Atque@user/atque)
[14:06:57] <Donitz> extensions
[14:07:03] <amigojapan> Ah ok
[14:07:19] <GeDaMo> https://en.wikipedia.org/wiki/Spatial_database
[14:07:20] <bayaz> Title: Spatial database - Wikipedia 
[14:07:43] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:07:45] <amigojapan> Let me see
[14:07:59] <pyzozord> what's JAM stack?
[14:08:05] <pyzozord> Java Apatche Mysql?
[14:09:00] <Donitz> https://codepen.io/_bm/pen/ExPBMrW
[14:09:03] <pyzozord> oh "JavaScript, API & Markup"
[14:09:29] *** Joins: Brumaire (~quassel@37.165.26.197)
[14:12:05] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 265 seconds)
[14:12:25] *** Joins: absc1 (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[14:15:22] <amigojapan> Interesting GeDaMo this may come in useful if I ever try to reimplement 3dpl in an open source system
[14:17:23] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 246 seconds)
[14:18:30] <Donitz> by allowing the 8 corners of blocks in a block-based world to be shifted individually, you could create a very accurate landscape
[14:18:54] <Donitz> but it would be harder to see where blocks are
[14:19:17] <Donitz> could probably use a minimal volume requirements for blocks
[14:19:34] <Akronymus> Clearly a block has 24 corners
[14:19:37] <Akronymus> 4 at the top, 4 at the bottom, 4 in front, 4 in back, 4 left and 4 right.
[14:20:25] *** Parts: artifishul (~nate@162.218.217.134) ()
[14:20:49] <GeDaMo> https://en.wikipedia.org/wiki/%22%E2%80%94And_He_Built_a_Crooked_House%E2%80%94%22
[14:20:50] <bayaz> Title: "—And He Built a Crooked House—" - Wikipedia 
[14:21:16] *** Quits: absc1 (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 265 seconds)
[14:21:49] *** Joins: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[14:22:30] *** Joins: absc (~absc@access03.colt-engine.it)
[14:23:11] <amigojapan> GeDaMo: how much math do you need to know to read that book?
[14:23:58] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 268 seconds)
[14:24:37] <GeDaMo> It's a short story, no maths is required :P
[14:25:53] *** Quits: Tazy (~Tazmainia@102.39.80.61) (Ping timeout: 264 seconds)
[14:26:39] *** Joins: Donitz (~Donitz@mobile-access-6df0f7-64.dhcp.inet.fi)
[14:26:43] <amigojapan> Ah ok thanks GeDaMo 
[14:27:07] *** Joins: absc1 (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[14:27:33] *** Quits: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 265 seconds)
[14:27:57] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[14:27:58] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[14:27:58] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:28:12] <GeDaMo> There's a link to the story itself https://archive.org/stream/Astounding_v26n06_1941-02_dtsg0318-LennyS#page/n67/mode/2up
[14:28:13] <bayaz> Title: Astounding v26n06 (1941 02) (dtsg0318 LennyS) : Free Download, Borrow, and Streaming : Internet Archive 
[14:28:46] *** Quits: absc (~absc@access03.colt-engine.it) (Read error: Connection reset by peer)
[14:29:10] *** Joins: kts (~kts@103.73.237.170)
[14:29:23] <amigojapan> Ty GeDaMo !
[14:30:02] <amigojapan> GeDaMo: I have been looking for stories in a similar idea as Flatland, I really enjoyed that
[14:30:21] *** Joins: on^ (~on@12.203.127.82)
[14:30:44] <GeDaMo> I haven't read flatland
[14:30:56] *** Quits: maroloccio (~marolocci@93-142-92-177.adsl.net.t-com.hr) (Quit: WeeChat 3.0)
[14:31:13] <Donitz> uff, there goes the landline
[14:31:24] <Donitz> what genius at the telephone companies go
[14:31:38] <Donitz> "derp, at 1:00 is the best time to mess with internet"
[14:33:05] *** Quits: absc1 (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 264 seconds)
[14:33:26] <amigojapan> GeDaMo: well it explains everything to do with special dimensions without needing any prior knowledge of math. Also it is pretty funny
[14:33:50] *** Quits: Brumaire (~quassel@37.165.26.197) (Ping timeout: 265 seconds)
[14:34:03] <Donitz> I've made a couple of 1 dimensional flash games
[14:34:08] <Donitz> it's quite a challenge
[14:34:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:34:27] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:34:41] <smallvil_> how do i render text?
[14:34:49] <GeDaMo> There were games on the Sinclair MK14 which only had a single display line so they would have been 1D too :P
[14:35:25] <Donitz> well, first you need a font in a supported format such as .ttf
[14:35:39] <Donitz> and you must use a font licensed that you are allowed to you use
[14:35:46] <Donitz> then you take one female goat
[14:35:56] <Donitz> and put it in the center of a drawn pentagram and slit its throat
[14:35:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:36:05] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 264 seconds)
[14:36:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:36:51] <Donitz> seriously though, it depends on the framework
[14:36:57] *** Joins: JavaBean (~javabean@user/javabean)
[14:37:09] *** Joins: ralinux (~saje@37.156.188.75)
[14:37:49] <GeDaMo> amigojapan: if you want to include time as a dimension, you might also enjoy https://en.wikipedia.org/wiki/By_His_Bootstraps and https://en.wikipedia.org/wiki/All_You_Zombies
[14:37:50] <bayaz> Title: By His Bootstraps - Wikipedia 
[14:37:50] <bayaz> Title: All You Zombies - Wikipedia 
[14:38:23] <Donitz> o oo, I know a lot about time travel
[14:38:24] <jelly> much Heinlein
[14:38:25] <amigojapan> Thanks GeDaMo 
[14:38:37] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[14:39:15] <Amadiro> Also "a brief history of time"
[14:39:21] <Donitz> great book
[14:39:26] <Donitz> or was that the abridged version?
[14:39:29] <Donitz> There are two books
[14:39:42] <GeDaMo> "By His Bootstraps" is on archive.org https://archive.org/details/Astounding_v28n02_1941-10?view=theater#page/n7/mode/2up
[14:39:43] <bayaz> Title: Astounding v28n02 (1941 10) : Free Download, Borrow, and Streaming : Internet Archive 
[14:40:20] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[14:40:52] *** Joins: cm007magnum (~Rheanna@101.91.197.175)
[14:41:13] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Remote host closed the connection)
[14:41:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[14:41:57] <Donitz> ah yeah, the theory of everything is the short book, a brief history of time coverse it
[14:41:59] <Donitz> covers*
[14:42:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:42:14] <Donitz> both on audible
[14:42:52] <pyzozord> Aggm recruiters. Sometiems they make me feel more safe
[14:43:00] <pyzozord> s/Aggm/Ahh/
[14:44:24] <pyzozord> Sorry I'm making this channel my personal blog
[14:44:37] <pyzozord> I guess I'll just go work on another codility problem
[14:44:42] <Donitz> I do that to every channel I am on
[14:45:00] <Donitz> blame caffeine
[14:45:15] <pyzozord> heheh, or terrible managers 3:->
[14:46:19] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 252 seconds)
[14:46:46] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[14:47:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:47:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:49:15] <pyzozord> It's not normal when HR reaches out on slack to you and says "Hi, Pyzozord, I'm the new HR Manager. I wanted to reach out and see if you had some time to connect so I can learn more about your part of the organization and you!"
[14:49:32] <pyzozord> right?
[14:49:46] <Akronymus> How long have you been working there?
[14:50:04] <pyzozord> about 9 months. My contract ends in 3 months.
[14:50:10] *** Joins: xiongxin8802 (~xiongxin@113.116.33.208)
[14:50:28] <Akronymus> I'd accept the meeting then.
[14:50:35] <pyzozord> And I had lots of discussions with my manager about my "combative communication, and not enough positive vibes"
[14:50:50] *** Joins: [R] (~rs@genoce.org)
[14:50:59] <Akronymus> Because, quite frankly, avoiding it isn't gonna do you any good
[14:50:59] <pyzozord> oh yeah of course, one can't not accept HR meeting invites lest they wan't to get fired :D
[14:52:08] <Donitz> CR
[14:52:24] *** Joins: otapiot[m] (~otapiotma@2001:470:69fc:105::fe07)
[14:52:43] <GeDaMo> LF
[14:52:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[14:52:57] <pyzozord> oh no, what is this, windows? :P
[14:53:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:47] <Akronymus> fp
[14:54:07] <Akronymus> or pp if you so prefer
[14:54:41] *** Quits: xiongxin8802 (~xiongxin@113.116.33.208) (Ping timeout: 252 seconds)
[14:55:03] *** Joins: xiongxin (~quassel@119.123.102.205)
[14:55:10] *** Quits: NorthBits (~WestBits@user/northbits) (Quit: Leaving)
[14:56:20] *** Quits: zaher (~zaher@37.48.146.60) (Ping timeout: 252 seconds)
[14:57:05] *** Quits: ralinux (~saje@37.156.188.75) (Ping timeout: 264 seconds)
[14:57:13] <arahael> pyzozord: Not normal but not unusual either, but I'd definitely accept. If you are on good terms with HR, that can only go well for you, so being a new HR Manager, I'd _definitely_ accept.
[14:59:10] <pyzozord> Yes, already accepted. I suspect they just made the new girl check out what is my situation. Not sure why though. Assuming the decision to not extend my contract has been already made.
[14:59:36] <pyzozord> ALthough there is a new CTO, maybe he asked HR to build their own opinon so he has multiple signals
[15:02:39] *** Joins: dunkeln_ (~dunkeln@94.129.71.70)
[15:03:29] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[15:03:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:04:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:05:50] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:09:02] <pyzozord> can someone recommend good book about devops?
[15:09:38] <EtherNet> pyzozord: it's not that you read a book and that's it. You better know what technologies should know, and then you can get different books and trainings on different tools. DevOps is an ecosystem of tools
[15:10:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:10:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:42] <Amadiro> pyzozord, the phoenix project is a novelization of devops principles, so it's a light read/listen
[15:11:05] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Read error: Connection reset by peer)
[15:11:23] <pyzozord> I know docker on reasonable level, I used gitlab, I heard about kubernetes and amazon cloud
[15:11:39] <EtherNet> pyzozord: that's good, add jenkins to that flow that will help
[15:11:51] <Amadiro> devops is not about any of those technologies in particular, it's about a style of working and distributing responsibility
[15:12:01] <Amadiro> you could do devops on an atari
[15:12:02] <pyzozord> jenkins / gitlab / circleci / buildkite they are all kind of the same thing
[15:12:17] <Amadiro> (well, maybe not really, but you get what I'm saying)
[15:12:22] <EtherNet> pyzozord: Jenkins can connect to any control version, gitlab is a controlversion itself
[15:12:23] <pyzozord> I used all, I like gitlab the best, cool thing with those runners etc
[15:12:33] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:12:56] <EtherNet> pyzozord: Terraform is something that will help as well to deploy infra on cloud
[15:12:58] <EtherNet> very used nowadays
[15:13:27] <pyzozord> hmm I guess I could get a book about kubernetes and some book about cloud
[15:13:37] <pyzozord> amazon/google. I guess amazon is more popular
[15:13:49] <EtherNet> Azure/Amazon/Google and then IBM cloud.
[15:13:53] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 264 seconds)
[15:14:22] <Akronymus> https://learnopengl.com/In-Practice/Text-Rendering smallville7123
[15:14:24] <bayaz> Title: LearnOpenGL - Text Rendering 
[15:15:02] <pyzozord> any of these books are any good? https://blog.turbonomic.com/top-kubernetes-book
[15:15:04] <bayaz> Title: The 7 Best Books to Get You Started with Kubernetes 
[15:15:20] <Akronymus> kubernates is often misapplied
[15:15:27] <Akronymus> As in when you don't actually need it
[15:15:32] *** Joins: kariosfox (~kariosfox@195.164.182.193)
[15:15:32] *** Quits: kariosfox (~kariosfox@195.164.182.193) (Remote host closed the connection)
[15:16:00] <pyzozord> Yeah I know, it's the new shiny. Well they wanna pay for it so
[15:16:14] *** Joins: Tazy (~Tazmainia@41.193.250.213)
[15:16:28] <Amadiro> learn the basics of k8s, but don't spend too much time on it, the chances that you'll ever have to run a k8s cluster at work are very slim
[15:16:40] <Amadiro> in most scenarios you'll just be a user of it
[15:16:40] <pyzozord> I work in a company now that decided to write their own micro service architecture on top of kubernetes
[15:16:54] <Akronymus> A decent to good sql server can handle a lot more requests than you might think
[15:16:55] <EtherNet> pyzozord: that's insane
[15:16:57] <pyzozord> they have a bunch of leaky abstractions
[15:17:04] <pyzozord> I know, it's absurd
[15:17:16] <EtherNet> nowadays you deploy a kubernetes in couple of minutes on cloud
[15:17:18] <EtherNet> EKS for example.
[15:17:20] <pyzozord> especially that the company does have maybe like 6 devops people
[15:17:21] <Akronymus> Microservices can be quite troublesome
[15:17:25] <EtherNet> so as Amadiro said, dont worry on learning that too much
[15:18:05] <pyzozord> problem is everone want's to be netflix now
[15:18:17] <EtherNet> you configure policies on the EKS to increase or decrease instances based on the demand, window frame, cpu usage, memory, whatever, it's all click based, dont need to burn your brain.
[15:18:26] <Akronymus> If you think "we can solve that with microservices" then you most likely will just make more problems for yourself
[15:19:12] <pyzozord> can you guys tell me if you recognize any of these books? https://blog.turbonomic.com/top-kubernetes-book
[15:19:12] <bayaz> Title: The 7 Best Books to Get You Started with Kubernetes 
[15:19:34] <Akronymus> EtherNet except with such "simple" gui stuff, if you dont know how it works underneath you can screw yourself badly
[15:19:58] <Akronymus> for example if you don't know git then git ui tools let you screw yourself in 1001 ways.
[15:20:02] <EtherNet> Akronymus: that's for sure.. in that case that's much better to put some efforts on learning the cloud much more than the technology itself
[15:20:12] <EtherNet> Akronymus: yeah you need the concepts
[15:20:21] <Akronymus> While not really enabling you to unscrew yourselv
[15:20:25] <Akronymus> yourslef*
[15:20:26] <pyzozord> I guess I'll go with the O'Reilly book
[15:20:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:20:54] <EtherNet> pyzozord: dont know so much about books, can't help you on that, i just read random .pdf, technotes, or whatever I find useful
[15:21:45] <pyzozord> Yeah I'm trying to find areason to burn educational budget from my company, before they fire me
[15:21:56] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:882b:583c:4118:b97a) (Read error: Connection reset by peer)
[15:22:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:22:13] <pyzozord> what is the best programming book that made the most impact on you?
[15:22:17] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Quit: WeeChat 3.2.1)
[15:22:21] <Akronymus> SICP and/or HTDP
[15:22:26] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Quit: Konversation terminated!)
[15:22:49] <Akronymus> IF you follow the tasks
[15:22:50] <arahael> pyzozord: In my case, perhaps "The C++ Programming Language, 3rd Edition".
[15:23:37] *** Joins: kariosfox (~kariosfox@195.164.182.193)
[15:23:40] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:882b:583c:4118:b97a)
[15:23:54] <Akronymus> https://fsharpforfunandprofit.com/books/ there is also DDD made functional
[15:23:55] <bayaz> Title: Books | F# for fun and profit 
[15:24:02] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[15:24:28] <arahael> Akronymus: Yes, but did they have the most impact *on you*?
[15:24:36] <Akronymus> Yeah
[15:24:49] <arahael> Akronymus: Reason I cited that C++ book, is because it was the first book I read and thus started me on my compiled languages journey.
[15:25:20] <arahael> I... Did not have an easy life starting with computers. :)
[15:25:27] <Amadiro> Similar for me with K&R -- but I probably would not recommend it anymore nowadays, at least not as a first experience
[15:25:32] <Akronymus> For me, htdp and sicp are for thinking about programming as actual engineering
[15:26:12] <Akronymus> And ddd made functional is amazing for grokking how to make a well designed/behaved domain model.
[15:26:24] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[15:26:56] <EtherNet> K&R for sure.
[15:27:10] <EtherNet> I still read K&R some times ;)
[15:27:19] <EtherNet> and got my heart into C forever.
[15:28:14] *** Quits: kariosfox (~kariosfox@195.164.182.193) (Ping timeout: 252 seconds)
[15:28:34] *** Quits: cm007magnum (~Rheanna@101.91.197.175) (Remote host closed the connection)
[15:30:11] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:30:51] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[15:32:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:33:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:29] *** Quits: dunkeln_ (~dunkeln@94.129.71.70) (Ping timeout: 264 seconds)
[15:35:50] <arahael> EtherNet: My condolences. :)
[15:37:55] <user51> i like c, but not as a day to day alnguage
[15:38:17] <Donitz> I adore javascript, I can throw something together in minutes
[15:38:30] <user51> Akronymus: ddd?
[15:38:41] <Akronymus> Domain driven design
[15:38:44] *** Joins: gggp (~textual@60.10.194.42)
[15:38:55] <Akronymus> Mind you, the fp approach is much better than the oop one. IMO
[15:38:55] <nitrix> The kind of project written in C are rarely something you'd pull off "in minutes".
[15:39:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:39:21] <nitrix> So I found JavaScript would have any kind of advantage there.
[15:39:29] <nitrix> *doubt
[15:39:40] <user51> Akronymus: that's a lot of syllables
[15:39:40] <Akronymus> I personally do a lot of scripting in f#
[15:39:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:39:54] <user51> personally i'm more into whatever language maps best for the problem at hand
[15:39:58] <Donitz> yeah
[15:40:01] <Donitz> have you used r?
[15:40:08] <Akronymus> Not yet
[15:40:12] <Akronymus> Want to at some point
[15:40:16] <Donitz> I adore it, over matlab at least
[15:40:45] <user51> with enough eexperience you'll be both amazed and horrified how much you can fit into a language which almost xors the problem away
[15:42:20] <user51> it's both a fun and frustrating exercise
[15:42:26] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:42:28] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[15:43:12] <Donitz> though python is still the king in machine learning
[15:44:27] <jelly> but who is queen of ML
[15:44:41] <Donitz> umm... c++?
[15:44:54] <pyzozord> I have to say K&R is one of the strongest impacts on me. And I read it a year ago
[15:45:05] <Akronymus> Standard ML I'd think jelly or maybe ocaml or f# or haskell
[15:45:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:45:18] <pyzozord> it really opened up the world for me, bursted the webdev bubble
[15:45:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:45:45] <Akronymus> Webdev is pure pain
[15:46:02] <Akronymus> Just html + css would be much nicer, as a end user.
[15:46:22] <Akronymus> In most cases.
[15:46:27] <Donitz> I have yet to read a single book on programming :P
[15:46:45] <Donitz> I did read: "How to lie with statistics" and "algorithms to live by" tho
[15:46:58] <Donitz> apparently, stacks are great
[15:47:06] <Akronymus> Stacks are amazing
[15:47:16] <Akronymus> Altough, they are just a more specific list. 
[15:47:24] <edgar-rft> as a web developer it should be easy to develop your own web
[15:48:33] <Donitz> web developer is a funny term
[15:48:34] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[15:48:36] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Remote host closed the connection)
[15:48:44] <Donitz> there is a fairly broad spectrum
[15:48:48] <pyzozord> ideally I'd get my company to buy me SCIP but I'm not sure if I can sell it
[15:48:53] <pyzozord> they already bought me CLRS
[15:48:54] <Donitz> from someone who knows html + css to someone who makes quake in javascript
[15:48:57] *** Joins: Brumaire (~quassel@37.165.2.61)
[15:49:12] <jelly> step 1) make x86 emu in js
[15:49:17] <Akronymus> wasm
[15:49:24] <edgar-rft> I have spiders sitting in the corner who are far better web developers than me
[15:49:27] <Donitz> overhyped
[15:49:32] <Donitz> wasm has plenty of overhead
[15:49:39] <Donitz> not really good for real-time stuff I think
[15:49:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:49:56] <Donitz> there is some delay when executing it
[15:50:05] <piou> pyzozord: Note that SICP is (legally) available entirely for free as a web version and PDF. Not as pleasant as paper, I agree, but free.
[15:50:15] <Akronymus> Same with htdp
[15:50:29] <Akronymus> Also: DDD made functional should be a pretty easy sell
[15:50:34] <edgar-rft> When doctors say SICP they mean you are a Scary Insanely Crazy Person.
[15:50:35] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[15:50:58] <Akronymus> SICP aka "the wizard book"
[15:51:32] <merijn> pyzozord: tbh, SICP is kinda overrated (not bad, but not as unique and mindblowing as its often made out to be)
[15:51:48] <Akronymus> SICP is great for changing your thinking.
[15:51:54] <Akronymus> But you have to put the work in.
[15:52:03] <piou> You can also find the original SICP lectures in video on youtube, but their content differs a bit from the most recent versions of the book
[15:52:04] <Akronymus> It was made for a MIT course after all
[15:52:15] <merijn> Akronymus: That argument only applies for a certain subset of programmers and there are other books that can provide the same paradigm shift, is my point
[15:52:21] <arahael> pyzozord: Honestly, I think what gives more value to a company as a software developer is to get books on techniques - such as "The Art of Unit Testing", and things like that.
[15:52:21] <user51> piou: i agree
[15:52:25] <user51> i have the paper version
[15:52:26] <Akronymus> Oh thats fair
[15:52:30] <user51> the paper is pleasent, the book is not
[15:52:53] *** Joins: Twipply (~Twipply@user/twipply)
[15:53:26] <Donitz> audiblebooks or bust
[15:53:30] <Donitz> audiobooks*
[15:53:34] <Donitz> well, for me it's the same
[15:54:03] <merijn> Akronymus: Like, if someone has done a deep dive into F#/Ocaml/Haskell, the value of SICP is greatly diminished. And tbh, I'd probably encourage people to play with those over picking up SICP
[15:54:14] <Akronymus> Fair point.
[15:54:19] <relmnight[m]> I find most technical books not really accessible as an audiobook
[15:54:27] <user51> 14:17 < Akronymus> Altough, they are just a more specific list. 
[15:54:31] <Akronymus> I was thinking for people who never done any proper FP in a good fp language
[15:54:43] <user51> i've been wondering how standard data structures could be implemented as an array
[15:54:50] *** Joins: cth (~Cthulchu@193.194.107.250)
[15:55:07] <edgar-rft> SICP is great for getting a feel for thowto solve problems with computers in general, but it's a bit hard for absolute beginners.
[15:55:14] <Akronymus> for stack it'd just be a additional pointer tracking the top element user51
[15:55:29] <merijn> Akronymus: Yeah, and it's still a good book, especially if people wanna learn Scheme. So certainly nothing wrong with it, but I think there are more useful approaches that teach most of the same things :)
[15:55:30] <piou> I really loved SICP but it was some tough love and it required a few readings. But that's where I got my introduction to algorithmic complexity, where I learned about the tradeoffs of functionnal versus state-based computation, where I saw how to design an object system for OOP, an interpreter, where I learned about how languages may be designed in very different way giving them very different
[15:55:36] <piou> characteristics such as with prolog, and of course a small introduction to compilers. That's what made me understand streams such as python generators and issues related to parallelism. I learned a lot through SICP.
[15:56:00] *** Quits: Brumaire (~quassel@37.165.2.61) (Ping timeout: 265 seconds)
[15:56:02] *** Quits: kmh (~kmh@p200300df5f1282005c27103ce1ac4852.dip0.t-ipconnect.de) (Quit: Leaving)
[15:56:09] <piou> It isn't great at teaching scheme but it provides a first approach to it so there's that
[15:56:10] <GeDaMo> user51: tree as an array https://en.wikipedia.org/wiki/Heap_(data_structure)
[15:56:11] <bayaz> Title: Heap (data structure) - Wikipedia 
[15:56:59] <piou> Of course the later you read it the less mindblowing it gets (or the earlier I guess, if you read it too soon to get what it's trying to provide you)
[15:57:00] *** Quits: Donitz (~Donitz@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:57:18] <Akronymus> Yeah thats perfectly reasonable
[15:57:50] <Akronymus> DDD made functional is all around a great book IMO.
[15:57:56] *** Joins: kmh (~kmh@p200300df5f128200ddbbcf2aa0479af8.dip0.t-ipconnect.de)
[15:57:59] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:58:22] <Akronymus> Correction "Domain Modeling Made Functional"
[15:58:25] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[15:58:48] *** Joins: Hax0r (~Hax0r@87.101.192.39)
[15:59:03] <edgar-rft> SICP was written for students who want to become engineers, what is not a trivial task, so it was written for people who want to be challenged :-)
[15:59:47] <Akronymus> Akronymus13:22:04
[15:59:48] <Akronymus>  It was made for a MIT course after all
[16:00:06] <piou> It was also written at a time before the popularization of the internet and the shift toward library-based development that we see today where you can use many software bricks without ever getting to know how they function or need to design them yourself
[16:00:17] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 246 seconds)
[16:00:45] <Akronymus> Lisp's are especially great at that though
[16:01:24] *** Quits: Hax0r (~Hax0r@87.101.192.39) (Remote host closed the connection)
[16:02:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:02:33] *** Joins: Hax0r (~Hax0r@87.101.192.39)
[16:02:36] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[16:02:36] <piou> Language wise, sure, tool wise, meh
[16:02:38] *** Joins: pncl1 (~Hax0r@87.101.192.39)
[16:03:56] <edgar-rft> somewhere I read: if you're looking for a free Common Lisp IDE you can choose between Emacs+Slime, Emacs+Slime, and Emacs+Slime :-)
[16:04:21] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[16:05:54] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[16:06:44] <Akronymus> edgar-rft you can also use vim 
[16:06:44] <pyzozord> is SICP that challanging?
[16:06:55] <pyzozord> is it competetive programming level challanging?
[16:07:03] <Amadiro> pyzozord, there are some challenging tasks in there
[16:07:05] <merijn> pyzozord: Yes, no, maybe?
[16:07:06] <Akronymus> It is oriented at quite a high math level 
[16:07:14] <pyzozord> meaning adding puzzles that have nothing to do with anything just to spice up things
[16:07:33] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:07:34] <GeDaMo> I don't think competitive programming was really a thing when SICP was written :P
[16:07:45] <Akronymus> For example, one of the first tasks is implementing a find 0 point function
[16:07:52] <pyzozord> or is it K&R level challaning where the challanges actaully teach you important and highly relevant things
[16:07:56] <merijn> Akronymus: I wouldn't really consider it a high math level, tbh. I'd consider that sort of the baseline level for programming
[16:07:57] <Akronymus> Newtons method
[16:08:16] <Akronymus> Which most people haven't even heard of before
[16:08:25] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[16:08:30] <Akronymus> pyzozord both?
[16:08:36] <edgar-rft> 100 years ago even *thinking* about a computer was challenging
[16:08:39] <pyzozord> oof that's bad
[16:08:56] <pyzozord> i've heard about newtowns method but I'm not a newton so I would have not come up with it
[16:08:58] <Akronymus> They definitely are math oriented, but they teach you lisp and/or how to think it through
[16:09:04] <pyzozord> yes that is the bad kind of pointless challange
[16:09:19] <Akronymus> As in they teach you how to program properly
[16:09:33] <Akronymus> Each one is made to illustrate what you learned
[16:09:51] <piou> pyzozord: you don't need to know newton's method to read sicp or benefit from it, it just happens that one of the earlier examples has you implement it but it's guided, it's not "here, you already know how to do that don't you? hahaha"
[16:10:01] <edgar-rft> pyzozord: I'm really *not* a math genius but I had no problems wirth understanding the math in SICP
[16:10:02] *** Quits: wwilly (~wwilly@217.140.106.13) (Quit: Leaving)
[16:10:36] <Akronymus> Yeah, you can look the methods up 
[16:10:43] <piou> pyzozord: the exercises are well designed in my opinion. They're not all strictly in topic, but you've got a healthy amount of exercises that are there purely so you can manipulate the notion and exercises that are there to get you to think outside the realm of the book
[16:10:45] <pyzozord> piou: hahah there is something commical about cruel proffesors/textbook authors like that
[16:10:48] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (platinum.libera.chat (Nickname regained by services)))
[16:10:48] *** vinleod is now known as vdamewood
[16:11:05] <Akronymus> car cdr was a mistake though
[16:11:25] <Akronymus> (Altough I know where it is from I think it should've at least been fst and snd)
[16:11:44] <GeDaMo> Logo calls car 'first' and cdr 'butfirst' :P
[16:11:56] <piou> pyzozord: all in all, it's a book that has a lot of potential and will provide you as much as you put into it. If you decide to skip all exercises (like I did on my first two readings, to be honnest) you'll still get some things out of it, just less
[16:12:21] <piou> head/tail
[16:12:21] <pyzozord> ok, so I had a lot of trouble figuring out how to do common prime factorization for few days. Specifically this problem https://app.codility.com/programmers/lessons/12-euclidean_algorithm/common_prime_divisors/. If I had so much trouble with that problem, am I ready for SICP?
[16:12:33] <Akronymus> yes
[16:13:15] <piou> pyzozord: yes, you don't need to know math to read SICP. You may have to let go of quite a few exercises but that's alright, and maybe you'll have issue understanding some of the mathematical examples but it's not a math book
[16:13:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:13:30] * edgar-rft votes for buttfirst
[16:13:44] <piou> pyzozord: maybe the programming perspective will actually enlighten you on what the math is trying to say
[16:13:45] <pyzozord> piou: good to know thanks
[16:13:50] <Akronymus> head and tail work ok-ish
[16:13:53] <Akronymus> edgar-rft
[16:14:27] <piou> Akronymus: I just don't really like "second" because you generally don't just have a value there but a whole chain of values
[16:14:31] <edgar-rft> tail-wagging should be included in the Scheme standard
[16:14:42] <piou> second sounds a bit final to me
[16:14:43] <pyzozord> can you give me some example page/exercise from SICP so I can look i tup?
[16:15:01] <Akronymus> piou cons literally consists of a first and second element piou most of the time the second one is a cons too though
[16:15:04] <pyzozord> some harder one that would work as gate keeping
[16:15:18] <piou> pyzozord: as I said, the book is free, read up as you want https://mitpress.mit.edu/sites/default/files/sicp/index.html https://web.mit.edu/alexmv/6.037/sicp.pdf
[16:15:19] <bayaz> Title: Welcome to the SICP Web Site 
[16:15:19] <bayaz> Type: application/pdf Size: 7.4 MB 
[16:15:19] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Read error: Connection reset by peer)
[16:15:21] <Akronymus> It is nested tuples all the way down
[16:15:23] *** Joins: mindraj (~mindraj@user/mindraj)
[16:15:35] <pyzozord> piou: I know I have it, just asked for specific page to look at
[16:15:37] <piou> pyzozord: no idea what specific problems you're going to have though
[16:16:13] <piou> but, like, the whole chapter where it's manipulating images to play with symmetries and composition, it's very easy to play with
[16:16:59] <edgar-rft> "second" for cdr is wrong because it's usually a pointer to the rest of the list - Common Lisp has "first" and "rest" as alternative names - "second" is the same as cadr (first element of the rest of the list)
[16:17:01] <piou> Akronymus: I know, but that's this "most of the time" which is bound to trip people over
[16:17:07] <pyzozord> it's strange for me because I think I am an ok programmer, but as soon as we start doing pure puzzles / pure math, I'm really really terrible
[16:17:19] <user51> GeDaMo: wow that's really interesting, i thought about that before
[16:17:35] <Akronymus> edgar-rft oh that makes sense
[16:17:37] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[16:17:48] <Akronymus> Altough, all names suck.
[16:17:51] <Akronymus> Some just less
[16:18:14] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:18:17] <edgar-rft> Akronymus: I *always* make sense :-)
[16:18:33] <vdamewood> Slarpo is a terrible name for a variable.
[16:18:33] *** Quits: cm007magnum (~Rheanna@101.91.214.30) (Remote host closed the connection)
[16:18:34] <arahael> pyzozord: I'm not great at puzzles though I often tell myself that I'm "average" when it comes to them.
[16:18:41] <user51> GeDaMo: https://en.wikipedia.org/wiki/Leftist_tree
[16:18:41] <bayaz> Title: Leftist tree - Wikipedia 
[16:18:49] <user51> political data structuers! :P
[16:18:53] <piou> pyzozord: you know, your math abilities come back to this channel a lot, and the more I read you the more I get convinced that a good 40% of your issues come from a preconception of your inability to do math
[16:18:59] <user51> thanks for the link, time to read :)
[16:19:02] <micrex22> vdamewood: so what you're saying is that it should be called 'harpo' instead?
[16:19:08] <edgar-rft> Slarpo might be one of the Marx Brothers
[16:19:13] <vdamewood> micrex22: Maybe.
[16:19:13] <micrex22> :0)
[16:19:29] <micrex22> edgar-rft: yeah it's funny how everyone's mind immediately shifted towards that
[16:19:29] <vdamewood> If it hits the marx, I guess.
[16:19:35] <Sqaure> God, i hate Slack chat program with intense passion. It requires me to upgrade my android OS on a android device that probably isnt upgradable though only 3 years old.
[16:19:45] <GeDaMo> "Outside of a dog, a book is a man's best friend. Inside of a dog, it's too dark to read" :P
[16:20:32] <pyzozord> piou: it's strange, I sometimes feel that under all these problems and all that complexities there are actually simple and beautiful concepts that I can grasps without much trouble. Like it isn't supposed to be this hard
[16:20:49] <Amadiro> Sqaure, that's kinda the fault of your android phone provider, not slack -- you can't really expect software to support arbitrarily old and insecure platform versions. It's kinda shameful that many android manufacturers give their phones so short lifetimes though.
[16:20:59] <micrex22> Sqaure: are you saying you would rather use MS teams??? 0_0
[16:21:22] *** Joins: cm007magnum (~Rheanna@101.91.197.175)
[16:21:43] <GeDaMo> Whose fault is it that Android changes so much that software will no longer run on it?
[16:21:54] <Sqaure> Amadiro, if all you are bringing to world is a mundane chat program you ought to make it work for more than 3 years. 
[16:22:08] <vdamewood> I think my last iPhone stopped getting OS updates about 10 years after I bought it. Granted, that update 10 years later was a special emergency update, and the second-to-last one was 3 years earlier.
[16:22:11] *** Joins: gggp (~textual@60.10.194.42)
[16:22:27] <jelly> GeDaMo, whose fault is it that hw vendors fails to provide updates for old hw they don't profit from any more?
[16:22:29] <Amadiro> Sqaure, it's a _lot_ more than a chat program. But even if they could support your old version, if it's insecure and not updated anymore, they arguably shouldn't
[16:22:46] <arahael> vdamewood: And in that time, the arch changed to 64-bit on newer phones.
[16:22:49] <Sqaure> micrex22, I was thinking some matrix variant
[16:23:06] <jelly> GeDaMo, I suspect, the law maker's 
[16:23:06] <Sqaure> Amadiro, what more is it? 
[16:23:16] <vdamewood> arahael: My last phone was an iPhone 5. I was pissed off that I hadn't waited 5 months to get my first iPhone.
[16:23:41] <Amadiro> Note however that slack works great on my iphone 6 2014 or so, which still receives the latest updates. It's the phones distributors responsibility to solve this problem -- but sadly in the android world, there's a lot of "pump and dump"
[16:23:58] <arahael> vdamewood: iPhone 5 was still a decent phone at the time, though!
[16:24:06] <vdamewood> arahael: Actually, I think it was 2 months.
[16:24:15] <vdamewood> arahael: Yeah, but it was the last 32-bit iPhone.
[16:24:24] <bihtori> My old iPhone SE from 2018 still gets teh iOS 15 update which is pretty nice by Apple.
[16:24:27] <Sqaure> Slack is glorified IRC as a bloat-fest electron app.
[16:24:52] <Amadiro> Sqaure, video and audio chat, file sharing, all kinds of integrations with external services, 2FA, search etc etc
[16:25:06] <pyzozord> I had iPhone 5s. I liked it. The physical aspect of it. It looked nice, and felt nice. And it was smaller, that was good. Current smartphones are massive
[16:25:13] <arahael> bihtori: That's 3 years old. My iPhone 7 is older, and just today got updated to iOS 15.
[16:25:24] <Amadiro> Companies using slack expect it to uphold certain security standards, and it's reasonably if they decide that these standards can't be uphold on unsupported android versions
[16:25:28] <pyzozord> although now with the bendy screen I do admit that phone that rolls out or opens up to be a table is quite cool
[16:26:08] <arahael> Amadiro: I don't believe it's the security issues that prevent slack from being installed.
[16:26:44] <Amadiro> arahael, possibly not in this case, but developers do sometimes disable apps on certain platform versions for this reason.
[16:26:54] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:26:55] <vdamewood> arahael: Granted, at the time, NO ONE, has a 64-bit phone, and Apple was the first to make a 64-bit ARM processor, so it wasn't something I could have foreseen.
[16:27:05] <arahael> Amadiro: Again, not for security reasons, but due to other compatibility reasons.
[16:27:17] <Amadiro> arahael, also for security reasons.
[16:27:29] <arahael> vdamewood: Honestly, I still find it weird phones are 64-bit.  Hell, *watches* are 64-bit now.
[16:27:38] <arahael> Amadiro: Security excuses, then.
[16:27:51] <arahael> Amadiro: What security reasons are you thinking of, just so we're on teh same page?
[16:28:19] <vdamewood> arahael: And Just think, macOS and Windows 11 are both 64-bit only.
[16:28:42] <arahael> vdamewood: Indeed, but I think that's understandable.
[16:28:59] <vdamewood> arahael: It is.
[16:29:15] <vdamewood> arahael: At least the Marquee in my bus is still a 16-bit system.
[16:29:32] <arahael> vdamewood: Wow. :)
[16:29:42] <vdamewood> It only has 32k of RAM.
[16:29:53] <micrex22> vdamewood: guess that means more enterprise customers will be going back to OS/2 for 16-bit support
[16:29:55] <arahael> For a marquee, that's huge.
[16:30:10] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Ping timeout: 240 seconds)
[16:30:17] <vdamewood> Yeah, probably the smallest memory module they could get.
[16:30:19] <Amadiro> arahael, for instance Duo (2FA app) will decline running on iOS versions that have known security vulnerabilities even if it's the latest or second-latest version. Whether that's an excuse or part of "security in depth" can be argued about. But when you're protecting valuable data of your customers, you need to show you're committed to best-effort
[16:30:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 246 seconds)
[16:30:46] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 260 seconds)
[16:30:52] *** Quits: PlanckWalk (~Planck@user/planckwalk) (Ping timeout: 252 seconds)
[16:31:12] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:31:57] <vdamewood> Well, I'm upgradng to iOS 15 now.
[16:32:15] <vdamewood> I kind of wish Apple would rename iOS to iPhoneOS.
[16:32:42] <vdamewood> And maybe rename the iPod Touch to the iPhoneless
[16:32:45] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[16:32:47] <arahael> Amadiro: It's weird to learn that Duo doesn't always run on the latest iOS for security reasons.  Generally security updates are only applied to the latest iOS.
[16:33:19] <vdamewood> arahael: From what I understand, continuing support for iOS 14 is new with iOS 15.
[16:33:38] <vdamewood> Except for 'emergency' updates like the 10-years-later update for my iPhone 5.
[16:34:17] <arahael> vdamewood: Well, and also the iPod Touch 4" I have which is too old for iOS 13.  That recently got updated too, to iOS 12.4.8 or thereabouts.
[16:34:39] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[16:34:44] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[16:35:29] <pyzozord> Can someone help me interpret this problem? https://app.codility.com/programmers/lessons/10-prime_and_composite_numbers/flags/ it says "The distance between indices P and Q is the absolute value |P − Q|." and "two flags, you can set them on peaks 1 and 5". But I don't see why can't we put flags on peaks 1 and 3. 3-1 is 2 which equals K for this example
[16:35:30] <bayaz> Title: Flags coding task - Learn to Code - Codility 
[16:35:38] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:36:03] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:36:14] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[16:37:47] <pyzozord> "if you take K flags, then the distance between any two flags should be greater than or equal to K."
[16:38:36] <pyzozord> K=2 P=1 Q=3 |P-Q|==K, so we should be able to plant 2 flags on peaks 1 and 3
[16:38:47] *** Quits: NerdyGirl (cummy@fuck.irc.ops.incest.quest) (K-Lined)
[16:40:20] <vdamewood> pyzozord: It doesn't say that 1, 3 is not an option. It just doesn't give it as an example.
[16:40:40] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[16:41:03] <pyzozord> indeed, so is it an option or do I not understand something?
[16:41:22] <vdamewood> pyzozord: It's an option, but it looks like it's trying to maximize k.
[16:41:32] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[16:41:47] <pyzozord> I know I know, I'm just talking about this one specific example where K=2
[16:42:03] <pyzozord> why say peaks 1,5 why not 1,10 to be more explicit
[16:42:13] <pyzozord> 5 is confusing, because it's close to 3
[16:42:24] *** Joins: slav3000 (~user@2a01:e0a:aa:f3f0:b956:bf59:ec62:f0fe)
[16:42:41] <vdamewood> Well, they just picked one valid example.
[16:42:42] <merijn> Man, this seems like a stupid exercise anyway
[16:42:53] <merijn> Seems like it's convoluted just for the sake of being convoluted
[16:42:59] <PlanckWalk> It certainly has a lot of redundancy
[16:43:10] <vdamewood> PlanckWalk: And it says the same thing a lot.
[16:43:32] <slav3000> Hi, I'm currently writing my ping implementation. I'm trying to make it work for ipv6 but IDK what is the proper way to set the source address in my IPV6 header. With IPV4 I was setting "0.0.0.0" and the kernel (I guess) was doing the translation, but setting "::" for IPV6 fails. What do you suggest ? Or do you know the good channel where I can ask this question ?
[16:43:41] <merijn> PlanckWalk: So happy I learned to program before all these silly sites got into vogue >.>
[16:43:53] <PlanckWalk> Yeah
[16:44:15] <merijn> PlanckWalk: Except Advent of Code, that actually has interesting stuff
[16:44:17] <pyzozord> slav3000: ##networking is great
[16:44:26] <pyzozord> #networking
[16:44:28] <PlanckWalk> Like, the input list can be condensed down to just indices representing peaks.
[16:44:35] <slav3000> Cool thanks
[16:44:41] <PlanckWalk> (Who care about how high the peak is?)
[16:44:45] <vdamewood> slav3000: Which language and API are you using?
[16:45:06] <slav3000> I write it in C
[16:45:35] <pyzozord> PlanckWalk: yeah that first part with finding peaks seems pointless and irrelevant
[16:45:42] <merijn> pyzozord: Have you considered finding a site with less shitty exercises? :p
[16:46:24] <PlanckWalk> If I recall, this is the one used for pyzozord's interview
[16:46:26] <user51> pyzozord: i read that as "#notworking" :P
[16:46:33] <merijn> PlanckWalk: RIP
[16:46:48] <pyzozord> merijn: sadly no, my (eventual) interview wil be on that platform
[16:46:49] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:46:50] <merijn> Have you considered interviewing at places with less stupid interviews? :D
[16:46:53] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 264 seconds)
[16:47:21] <pyzozord> merijn: I wish, but this is really kind of an exception
[16:47:27] <vdamewood> slav3000: Okay, you answered half my question. What's the answer to the other half?
[16:47:55] <PlanckWalk> The funny thing is that heights can be up to 1 billion, but at most 400k different values
[16:49:09] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[16:49:09] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[16:49:59] <PlanckWalk> Funny that it's in a "prime and composite numbers" section.  I don't see any relation with prime and composite numbers.
[16:50:19] <PlanckWalk> (to arriving at an solution efficiently)
[16:50:30] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (Quit: Leaving)
[16:50:36] <slav3000> vdamewood: I'm using C sockets, but IDK if we can call it an API
[16:50:42] *** Joins: rexar89 (~alexi5@208.83.82.234)
[16:50:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:51:08] <vdamewood> slav3000: Yes, Sockets is an API. 2: Sockets is a Unix thing, not a C thing.
[16:52:00] <slav3000> vdamewood: Then it is Unix socket API ?
[16:52:26] <vdamewood> Yes.
[16:52:44] <PlanckWalk> (But not the thing called Unix Domain Sockets)
[16:53:10] <merijn> You can't really do ping with the regular socket API
[16:53:14] <merijn> You need raw sockets for that
[16:53:14] *** Joins: newpy_ (~newpy@2601:280:4381:1390:40ae:cdf8:a607:3c4a)
[16:53:15] <PlanckWalk> Which are sometimes called unix sockets
[16:53:26] <PlanckWalk> Yep, need root privileges
[16:53:55] *** Quits: ra4king (~ra4king@roiatalla.com) (Quit: Take a byte out of this!)
[16:54:01] <slav3000> yes I use a raw socket with root privileges
[16:54:20] <vdamewood> slav3000: So, which kernel are you coding for? I just realized my ping implementation does something special for my OS's kernel.
[16:54:28] *** Joins: ra4king (~ra4king@roiatalla.com)
[16:54:35] <merijn> You need to manually tell the kernel which IPv6 address to use when sending raw packets
[16:54:47] <vdamewood> merĳn: MacOS supports ICMP sockets for situations like this.
[16:55:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[16:55:39] <vdamewood> As in, I can open a socket to a particular address on macOS, send an echo, and receive an echo response packet on the same socket.
[16:55:41] *** Quits: newpy_ (~newpy@2601:280:4381:1390:40ae:cdf8:a607:3c4a) (Client Quit)
[16:56:11] *** Joins: pulse (~pulse@user/pulse)
[16:56:24] <slav3000> I code for linux kernel
[16:56:38] *** Quits: newpy (~newpy@2601:280:4381:1390:9d0c:798:e192:4e33) (Ping timeout: 246 seconds)
[16:57:25] <slav3000> vdamewood: that seems to be the same for linux kernel
[16:58:26] *** Quits: Klinda (~klinda@2.227.251.209) (Read error: Connection reset by peer)
[16:58:44] <jtgd> "unix sockets" has nothing to do with IP.
[16:59:14] <slav3000> merijn: What do you mean by that ? My source address is in an IPv6 header and my raw socket is set as AF_INET6 
[16:59:29] <jtgd> they are local to the machine
[16:59:43] <jtgd> not a part of Internet Protocol
[17:00:28] *** Quits: Tazy (~Tazmainia@41.193.250.213) (Read error: Connection reset by peer)
[17:00:59] <slav3000> jtgd: yes I know but to establish an ICMP connexion you need to open a socket and fill an IP header
[17:01:30] <jtgd> yes
[17:01:41] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[17:02:20] <vdamewood> jtgd: Your comment is pretty unhelpful.
[17:05:21] <[itchyjunk]> I need to define precondition and postconditions in method contracts in java.
[17:05:28] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[17:05:33] <[itchyjunk]> I vaguely know it but i can't seem to google it out
[17:05:46] <[itchyjunk]> like here they talk about it without defining it https://docs.oracle.com/cd/E19683-01/806-7930/assert-13/index.html
[17:05:46] <bayaz> Title: Preconditions, Postconditions, and Class Invariants (Java 2 SDK for Solaris Developer's Guide) 
[17:06:34] <vdamewood> slav3000: In my own code, I use getaddrinfo to get the source and destination of a datagram connection, then pull the source address from that.
[17:07:50] * [itchyjunk] opens sockets and walks away without closing them
[17:08:18] * vdamewood throws a TCP timeout at [itchyjunk] 
[17:08:58] * edgar-rft puts off his socks and throws them at [itchyjunk] 
[17:08:58] *** Quits: cm007magnum (~Rheanna@101.91.197.175) (Remote host closed the connection)
[17:09:38] <vdamewood> If you play a game, and you get socks as a prize, are they winsocks?
[17:10:01] <edgar-rft> if tey stink then yes
[17:10:29] <edgar-rft> somebody ate the h
[17:11:12] <[itchyjunk]> if i declare a method with no body, do i need a terminating ; ?
[17:11:22] *** Joins: cm007magnum (~Rheanna@101.91.232.94)
[17:11:23] <[itchyjunk]> public static void stupid() ; ?
[17:11:27] <[itchyjunk]> no ;  right?
[17:11:33] <[itchyjunk]> or yes ; ?
[17:11:34] <vdamewood> [itchyjunk]: no. yes right.
[17:11:34] <merijn> I don't suppose there's any MPI experts around? :p
[17:11:51] <[itchyjunk]> no ;.
[17:11:52] <vdamewood> merĳn: Don't ask to ask, just ask.
[17:12:07] <[itchyjunk]> Are there any experts on experts around?
[17:12:08] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Ping timeout: 256 seconds)
[17:12:09] <merijn> vdamewood: I need to do an N:M scatter/gather
[17:12:17] <slav3000> vdamewood: AH nice and this getaddrinfo connexion can be ipv6 ?
[17:12:20] *** Joins: Whateverest (~yannick@p200300ca9f2579008a82f003f4da0ea9.dip0.t-ipconnect.de)
[17:12:24] <slav3000> I will try this
[17:12:26] <merijn> I fear the answer is: You can't and have to do it manually >.>
[17:12:36] <vdamewood> merĳn: Good luck.
[17:13:28] <merijn> vdamewood: The reason I didn't ask is because I don't actually have a question yet. Just a vague cloud of ideas
[17:14:03] *** Parts: Whateverest (~yannick@p200300ca9f2579008a82f003f4da0ea9.dip0.t-ipconnect.de) ()
[17:16:15] <PlanckWalk> [itchyjunk]: There's a difference between "no body" (an abstract method declaration) and "empty body" definition.
[17:16:35] <PlanckWalk> "Empty body" is specified by {}
[17:16:52] <[itchyjunk]> java treats it differently?
[17:17:03] <[itchyjunk]> pulic test() and public test() {} ?
[17:17:14] *** Parts: nulleip (~luiz@189.34.167.234) ()
[17:17:14] <PlanckWalk> In any given context you can only use one or the other
[17:17:29] <PlanckWalk> public abstract void test();  or  public void test() {}
[17:18:03] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:18:34] <PlanckWalk> The first can only be used in abstract classes or interfaces and says "when you extend this class to a concrete class, you need to provide a method definition".
[17:18:47] <PlanckWalk> The second says "this method does nothing"
[17:19:17] *** Quits: password (~password@user/password2) (Ping timeout: 264 seconds)
[17:19:25] <[itchyjunk]> well i dont mean with the abstract keyword
[17:19:36] <PlanckWalk> Then you will need the braces
[17:19:52] <[itchyjunk]> like if (condition) ; vs if (condition) {}
[17:19:59] <[itchyjunk]> first needs the ; and the second doesn't
[17:20:05] <PlanckWalk> No, braces are optional around statements
[17:20:25] <PlanckWalk> Well technically it's  statement  vs  statement-group
[17:20:28] <[itchyjunk]> ah methods don't share this and i do need the {} then. almost screwed this up
[17:20:40] <[itchyjunk]> having to write code on paper is tricky
[17:21:20] <[itchyjunk]> do you happen to know about method contracts? having crappy luck with google
[17:21:30] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:21:32] <PlanckWalk> Maybe statement-list?  Can't remember the symbol they used in the grammar spec
[17:21:35] <[itchyjunk]> "In methodcontracts, what are preconditions and postcondition? Define each term"
[17:22:16] <[itchyjunk]> oh found it nm
[17:23:39] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[17:24:21] <beaky> java 2 sdk nice that's ancient
[17:26:15] *** Joins: password (~password@user/password2)
[17:27:35] <[itchyjunk]> "Assume you need to call a function named start() that might throw a RunttimeException. write a try/catch block" ... blah blah. try { start(); } catch (RuntimeException e) { System.out.println("I caught a RuntimeException"); }
[17:27:54] <[itchyjunk]> right? but i am always confused if i need to import specific things for shit like this
[17:28:44] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Quit: rebootin')
[17:29:06] <[itchyjunk]> i'll risk it an not import anything'
[17:31:07] <PlanckWalk> You don't need to import things in java.lang, or thing you explicitly provide package names for.  Everything else you do.
[17:31:11] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[17:31:42] <[itchyjunk]> wait, if i explicitly use some stuff, i dont need to import?
[17:31:53] <PlanckWalk> RuntimeException and System are in java.lang, so that's okay.
[17:32:06] <[itchyjunk]> java.util.Scanner variable = new java.util.Scanner(System.in); ?
[17:32:22] <PlanckWalk> Yes, that's fine
[17:32:25] <[itchyjunk]> wtf
[17:32:32] <[itchyjunk]> why wouldn't they mention this
[17:33:08] <PlanckWalk> import only imports names into the current namespace, not anything else
[17:33:33] <PlanckWalk> It's not like #include
[17:35:05] <[itchyjunk]> hmmmmmmmm
[17:35:07] <PlanckWalk> All the declarations in other packages and classes are resolved by the compiler and linker
[17:35:14] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[17:35:42] <[itchyjunk]> how is #include different? it would still be the compiler doing the stuff no?
[17:36:11] <PlanckWalk> #include tells the compiler to literally paste code into the current file
[17:36:22] <[itchyjunk]> :O
[17:36:26] <PlanckWalk> You can put anything in a #include file
[17:36:34] <[itchyjunk]> i kinda imagined something like that for import tbh
[17:36:54] <PlanckWalk> import java.util.Scanner just means "when I write Scanner, I mean java.util.Scanner"
[17:37:10] <[itchyjunk]> right, i think i saw that in some other language.. like py?
[17:37:15] <[itchyjunk]> crate a shortcut for names
[17:37:21] *** Joins: paravida (~myChateau@23.31.187.1)
[17:37:26] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:8088:5337:f25e:a96d)
[17:37:27] <vdamewood> Nope. Pythin's import is completely different.
[17:37:28] <[itchyjunk]> import Numpy as np or somesuch
[17:37:42] <[itchyjunk]> oh
[17:37:45] <vdamewood> In Python import means 'runs this code, then give me access to it and its values.'
[17:37:45] <Akronymus> https://twitter.com/foone/status/1440014690831126528
[17:37:52] <PlanckWalk> The java compiler does check type definitions using class files, but doesn't actually include anything.
[17:38:02] <vdamewood> So in python you can to import math; then math.sin(math.pi)
[17:38:14] <[itchyjunk]> oh..
[17:38:22] <vdamewood> if you try math.sin(math.pi) without import math, you get an error saying math is indefined.
[17:38:24] <vdamewood> undefined
[17:38:25] <PlanckWalk> Oh, one exception: it replaces static constants with values.
[17:38:51] <PlanckWalk> Err, static final
[17:38:51] *** Quits: kts (~kts@103.73.237.170) (Quit: Konversation terminated!)
[17:39:48] <vdamewood> [itchyjunk]: In Python, everything is an object, and names are pointers to object. So, when you import in python, it runs the other python source file, and makes a module object out of it and assigns it to the name you imported.
[17:40:02] <PlanckWalk> (This exception was a horrible idea and should never have been included)
[17:40:25] <[itchyjunk]> hmm most things are objects in java
[17:40:42] <vdamewood> Quite a few things are not objects in Java.
[17:40:50] <vdamewood> classes themselves are not objects.
[17:40:51] <[itchyjunk]> why is it bad to replace constants with their values?
[17:40:52] *** Quits: Hax0r (~Hax0r@87.101.192.39) (Quit: Leaving)
[17:40:57] <[itchyjunk]> oh
[17:41:03] <vdamewood> functions are not objects in Java.
[17:41:06] <Amun-Ra> primitive types are not objects, too
[17:41:10] <[itchyjunk]> classes are objects in py?
[17:41:12] <PlanckWalk> [itchyjunk]: It creates silent corruption if you update the class files without recompiling everything
[17:41:17] <vdamewood> [itchyjunk]: Yes.
[17:41:18] <[itchyjunk]> sure, primitives aren't objects
[17:41:25] *** Joins: snake (~snake@user/snake)
[17:41:25] <PlanckWalk> (and sometimes you can't recompile everything)
[17:41:28] <[itchyjunk]> PlanckWalk, ah
[17:41:29] <vdamewood> primatives are objects in Python.
[17:41:40] <[itchyjunk]> py doesn't have primitives, does it?
[17:41:51] <Amun-Ra> it doesn't it that sense
[17:41:52] <vdamewood> [itchyjunk]: That's another way to look at it, too.
[17:42:09] <vdamewood> Oh, and finally, in Python, modules are objects.
[17:42:30] <Amun-Ra> and 'object' is an object too ;)
[17:42:31] <vdamewood> I could do this, and it would work just fine: import math; m = math; m.sin(m.pi)
[17:42:49] <vdamewood> Even None is an object.
[17:43:06] <[itchyjunk]> what's a module?
[17:43:18] <vdamewood> The thing you import in python.
[17:43:25] *** Quits: slav3000 (~user@2a01:e0a:aa:f3f0:b956:bf59:ec62:f0fe) (Quit: ERC (IRC client for Emacs 27.2))
[17:43:29] <[itchyjunk]> does py have monads?
[17:43:47] <[itchyjunk]> i wish i was learning haskell over java. no offense to hava
[17:44:12] *** Quits: paravida (~myChateau@23.31.187.1) (Changing host)
[17:44:12] *** Joins: paravida (~myChateau@user/paravida)
[17:46:15] <vdamewood> To be honest, I'm not familiar enough with monads to determine if some Python feature is analogous.
[17:46:56] <vdamewood> Often in programming, languages will support the same feature or technique, but will call them entirely different things.
[17:48:16] <Amun-Ra> monads can be implemented in python
[17:49:00] <[itchyjunk]> true monads can't be inplemented in java for some reason or another
[17:49:07] <[itchyjunk]> but you can make them with try catch or somesuch
[17:49:35] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[17:50:18] <vdamewood> [itchyjunk]: Also, because everything is an object in Python, and python doesn't have primatives, per se, when CPython starts up, it instantiates all integers from -5 to 255 as an optimization.
[17:50:23] *** Joins: LiftLeft (~LiftLeft@172.98.92.58)
[17:50:40] *** Joins: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de)
[17:52:33] <[itchyjunk]> hmmmm?
[17:52:46] <[itchyjunk]> what is CPythong and why -5 to 255?
[17:52:54] <[itchyjunk]> is integers objects in python?
[17:53:02] <[itchyjunk]> integers are apparently functions in haskell
[17:53:09] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:7d1f:dc06:868e:31c2)
[17:53:41] <vdamewood> CPython is a nickname for the standard Python interpreter, which is written in C.
[17:53:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:54:15] <vdamewood> And a question like " is integers objects in python?" shows that you're not paying attention to what was said.
[17:55:05] *** Quits: hub2 (uid126296@id-126296.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:55:28] *** Joins: asdfkl (~asdfkl@user/asdfkl)
[17:56:52] *** Parts: asdfkl (~asdfkl@user/asdfkl) (WeeChat 3.0.1)
[17:58:39] *** Quits: cm007magnum (~Rheanna@101.91.232.94) (Remote host closed the connection)
[17:59:22] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 252 seconds)
[18:00:29] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[18:00:35] <Valware> as far as I'm aware python defines only one type of function, the "function" started with "def"
[18:00:48] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[18:01:02] <Valware> C and (I've never tried it but from what you describe) haskell can use different types of function for return values
[18:01:19] <Valware> like something where the return value should be an int, you can make a functional int
[18:01:40] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[18:04:06] <vdamewood> Valware: C doesn't really have 'types' of functions at all.
[18:04:43] <Valware> ok
[18:05:06] <[itchyjunk]> well you said everything is an object so ntegers would be objects
[18:05:16] <[itchyjunk]> Valware, i dont think functions return in haskell
[18:05:22] <[itchyjunk]> what was that word
[18:06:05] <[itchyjunk]> there is a word for it
[18:06:34] <TheArchitect> hey peeps, can anybody help me with https://dpaste.com/97CFZJRRV
[18:06:47] <bayaz> Title: dpaste: 97CFZJRRV 
[18:07:14] <nitrix> There's evaluate and yield.
[18:07:42] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[18:07:52] <vdamewood> TheArchitect: What's buf?
[18:07:57] <[itchyjunk]> but what is that word?
[18:08:00] <[itchyjunk]> imperative?
[18:08:02] <nitrix> Assuming there's an expression with a function application in it, the evaluation will apply the function and yield a value.
[18:08:03] <[itchyjunk]> maybe that's the word
[18:09:54] <TheArchitect> char buf[MAXDATASIZE] // define MAXDATASIZE 1024
[18:09:55] <Valware> I'm not sure if this is helpful
[18:09:59] <Valware> but I'm used to seeing BUFSIZE
[18:10:02] <Valware> not BUFFSIZE
[18:10:12] <nitrix> Return is still fine. You don't have a `return` statement to modify the control-flow, but the execution still executes the body and returns from it, though it's a pretty imperative way to think of it, since, especially for Haskell, evaluation isn't entirely the same as execution.
[18:10:28] <[itchyjunk]> https://stackoverflow.com/questions/48177824/how-does-return-statement-work-in-haskell
[18:10:29] <bayaz> Title: How does return statement work in Haskell? 
[18:11:11] <TheArchitect> is return comment for me?
[18:11:16] <[itchyjunk]> no
[18:11:19] <[itchyjunk]> previous discussion
[18:11:29] <TheArchitect> cool cool
[18:11:33] <[itchyjunk]> oh and haskell function can only ever take one argument!
[18:11:36] <[itchyjunk]> oh ohh
[18:11:50] <nitrix> Yes, Haskell's return is Applicative's pure. It doesn't do control-flow.
[18:11:52] <vdamewood> TheArchitect: My question was for you, though.
[18:12:32] <TheArchitect> vdamewood, char buf[MAXDATASIZE] // define MAXDATASIZE 1024
[18:13:10] <nitrix> Depends what's your definition of argument. You can still consider them independent arguments, even when curried into one.
[18:13:18] <TheArchitect> its a url get request which does request correctly and returns the data fine, it just crashes on fwrite once its written teh data to a file
[18:13:42] <vdamewood> Are you sure you write the whole buffer to the file?
[18:13:56] <GeDaMo> TheArchitect: instead of using sizeof(buf), you might want to use the value returned from read
[18:14:01] <TheArchitect> vdamewood, yes!
[18:14:04] <TheArchitect> it writes good!
[18:14:14] <TheArchitect> then the program segfaults at the end of the write lol
[18:14:17] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:15:13] <vdamewood> So, if you only read 35 bytes, you still want to write 1024 bytes to the file?
[18:15:34] <TheArchitect> oh nah tht doesnt sound right am I doing that by sheer oversight lol
[18:15:53] <Valware> hey question, because I'm not pro, but it looks like it might break - bzero'ing your buffer size after what seems to be each iteration of the while loop might break it?
[18:15:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:16:32] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 252 seconds)
[18:16:36] <vdamewood> So, to go with that, what's BUFFSIZE?
[18:16:39] *** Quits: _inky (~inky_@46.36.119.235) (Ping timeout: 265 seconds)
[18:16:42] <TheArchitect> 1024
[18:16:44] <TheArchitect> hmm
[18:16:53] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 264 seconds)
[18:17:13] <vdamewood> Why are you using BUFFSIZE instead of sizeof(buff)?
[18:17:21] <vdamewood> err sizeof(buf)
[18:17:24] <GeDaMo> Or MAXDATASIZE
[18:18:03] <TheArchitect> theyre the same anyway
[18:18:06] <TheArchitect> both are 1024
[18:18:12] *** Joins: nvmd (~nvmd@user/nvmd)
[18:18:16] <vdamewood> This is horrible coding practice though.
[18:18:26] <TheArchitect> vdamewood, you have a clever point on 35 bytes instead reading 1024 though
[18:18:33] <TheArchitect> well thats why im asking
[18:18:36] *** Quits: pncl1 (~Hax0r@87.101.192.39) (Remote host closed the connection)
[18:18:42] <TheArchitect> what do you think is best practice here
[18:18:51] <TheArchitect> also, its just crashing
[18:18:58] <vdamewood> Also, while we're at it, don't use &buf. An array name automatically converts to a pointer to its first element, to just use fwrite(buf,...)
[18:19:20] <GeDaMo> Is this code in a function other than main?
[18:19:35] <TheArchitect> GeDaMo, no
[18:19:39] <TheArchitect> vdamewood, cool
[18:20:30] <GeDaMo> I feel like there's something outside this snippet of code that might be the problem
[18:21:12] <vdamewood> Also, on that same hand, you can index pointers as they're arrrays. Given "int *ptr";, ptr[1] is the same as *(ptr + 1).
[18:21:12] <TheArchitect> GeDaMo, if i comment the fwrite the program completes
[18:21:27] <TheArchitect> vdamewood, yes thats good base practice for pointers
[18:21:32] <GeDaMo> That doesn't mean the problem isn't somewhere else
[18:21:33] <vdamewood> s/pointers as/pointers as if/
[18:21:40] <TheArchitect> array iteration isnt neccessary here i agree
[18:22:01] <TheArchitect> ive changed the code to stop dereferencing buf and it still cracks out
[18:22:56] <vdamewood> Why don't you bzero buff before you read() into it?
[18:24:47] *** Quits: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[18:25:04] *** Joins: inky_ (~inky@5.77.144.217)
[18:25:21] *** Quits: inky (~inky@46.36.119.235) (Ping timeout: 265 seconds)
[18:25:40] *** Joins: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de)
[18:26:00] <GeDaMo> You fprintf buf using %s, how can you be sure it's NUL terminated?
[18:26:01] <vdamewood> I mean, if buff has "GET / HTTP/1.1\r\nHost: example.com\r\nUser-Agent mybot/1.0\r\n\r\n" And you get back "HTTP/1.1 200 Ok\r\nContent-Type: text/plain\r\n\r\n"  it will then contain: "HTTP/1.1 200 Ok\r\nContent-Type: text/plain\r\n\r\n-Agent mybot/1.0\r\n\r\n"
[18:26:10] *** Joins: trace (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de)
[18:27:03] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:27:07] *** Quits: trace (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de) (Remote host closed the connection)
[18:27:55] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[18:27:59] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:28:25] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[18:28:38] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[18:28:38] <vdamewood> Oh, man. I just learned a new insult! "You are impossible to underestimate."
[18:29:21] *** Joins: quartz (~quartz@user/quartz)
[18:29:28] <TheArchitect> interesting
[18:29:33] <TheArchitect> might not be NT'd
[18:30:30] *** Joins: wwilly (~wwilly@fw-tnat-cam2.arm.com)
[18:30:38] <TheArchitect> vdamewood, i get the 200 OK from the server and the data streams back very nicely
[18:30:49] <TheArchitect> might be a null term issue tho like u said?
[18:32:17] <vdamewood> Fix problems, then see what happens.
[18:35:18] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[18:36:12] <pyzozord> hah it took a moment before I understood that insult
[18:38:51] *** Joins: asdfkl (~asdfkl@user/asdfkl)
[18:39:48] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:8cd1:a006:2ddc:5d85)
[18:39:58] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[18:40:09] <asdfkl> learned about the /me <message> command
[18:40:31] <asdfkl> but i can't find /me on IRC's rfc
[18:41:10] *** Quits: cronos (~cronos@user/cronos) (Ping timeout: 252 seconds)
[18:41:47] *** Quits: nupilios (~nupilios@user/nupilios) (Ping timeout: 265 seconds)
[18:42:01] <vdamewood> asdfkl: /me is an alias for /action
[18:42:10] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[18:42:11] *** Joins: cronos (~cronos@user/cronos)
[18:42:16] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[18:42:21] *** Joins: _falx (~falx@znc.falx.tech)
[18:42:49] *** Quits: Fleck (~fleck@user/fleck) (Ping timeout: 252 seconds)
[18:42:49] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Ping timeout: 252 seconds)
[18:42:49] *** Quits: allegorical (~guest@cpe788df7e7edf3-cm788df7e7edf0.cpe.net.cable.rogers.com) (Ping timeout: 252 seconds)
[18:42:49] *** Quits: falx (~falx@user/falx) (Ping timeout: 252 seconds)
[18:42:50] *** _falx is now known as falx
[18:42:50] *** Quits: falx (~falx@znc.falx.tech) (Changing host)
[18:42:50] *** Joins: falx (~falx@user/falx)
[18:43:05] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-4041-2f01-8e64-a424.res6.spectrum.com)
[18:43:22] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 252 seconds)
[18:44:00] <asdfkl> not /action too
[18:44:29] *** Joins: Flecks (~fleck@user/fleck)
[18:44:35] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[18:45:48] *** Joins: Inari (~Pinkishu@p508ef06c.dip0.t-ipconnect.de)
[18:46:20] <jelly> wasn't /me just a privmsg to a channel starting with \x01ACTION 
[18:47:05] <Valware> jelly: yeah
[18:47:15] <Valware> also had to end with \x01
[18:47:16] <Akronymus> What about /you then?
[18:47:19] <Amun-Ra> me is an alias for privmsg target \x01ACTION message\x01
[18:47:23] <Valware> as it's a CTCP "ACTION"
[18:47:25] <EtherNet> asdfkl: are u coding an irc client?
[18:48:17] *** Joins: nupilios (~nupilios@user/nupilios)
[18:48:21] <Akronymus> If you code an irc: https://datatracker.ietf.org/doc/html/rfc1459
[18:48:22] <bayaz> Title: rfc1459 
[18:48:22] <SuperNintendoSUX> one more useless irc client
[18:48:32] <asdfkl> EtherNet: no 
[18:48:33] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[18:48:37] <Akronymus> https://xkcd.com/927/
[18:48:37] <bayaz> Title: Standards 
[18:48:48] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[18:48:49] <Valware> hot idea: an ircd on a snes
[18:50:54] <EtherNet> a new IRC with some cool new features (i am not thinking about any now) would be good
[18:50:56] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[18:51:20] <Akronymus> matrix? EtherNet
[18:51:23] <EtherNet> irc is very outdated nowadays for the current technology
[18:51:28] <EtherNet> Akronymus: didn't try it but maybe that's the answer
[18:51:58] <piou> I think the famicom servers are still online, so you can definitely develop IRC for famicom. Not sure about snes though
[18:52:35] <Inari> EtherNet: Isn't that IRCv3
[18:52:43] <davve> slack and discord are irc for the masses
[18:53:24] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[18:53:33] <Inari> Matrix is neat, but still a bit lacking (or at least Element, not sure how much of the lack is from Matrix and how much from Element)
[18:54:05] <EtherNet> Inari: what are the new features on v3 ? isn't SASL and some auth stuff? just wondering
[18:54:12] * piou still prefers irc to matrix, slack or discord
[18:54:21] * EtherNet is an IRC guy
[18:54:32] <EtherNet> been using it since mIRC and Comic Chat..
[18:54:59] <Inari> EtherNet: account info stuff too? And like history playback improvements or something like that :P
[18:55:02] <Inari> Never looke dtoo much into it
[18:55:17] <EtherNet> Inari: me neither
[18:55:24] *** Joins: pulse (~pulse@user/pulse)
[18:55:58] <EtherNet> dont know, but it has to be something that captures people that uses whatsapp for e.g. or Telegram, like mix IRC for casual chat with contacts
[18:57:21] *** Joins: maroloccio (~marolocci@93-142-92-177.adsl.net.t-com.hr)
[18:57:29] <EtherNet> have some tech topics like these channels, some channels for people to know and meet new people, etc
[18:57:30] <Inari> Discord? ;p
[18:57:38] <EtherNet> Inari: Discord is good, i use it
[18:58:35] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[18:58:35] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[18:58:35] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[18:58:56] <EtherNet> Inari: still needing a sort of command line client , tho.
[18:59:05] <EtherNet> like weechat, irssi, BitchX, ircII
[18:59:06] <EtherNet> etc
[18:59:39] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Read error: Connection reset by peer)
[18:59:54] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:00:25] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[19:00:33] <pulse> discord is not good
[19:00:35] *** Joins: salitos (~salitos@154.122.2.215)
[19:00:38] <pulse> it is in fact the very opposite of good
[19:01:02] <EtherNet> pulse: I do use it for playing some games, and it's very cool
[19:01:10] <EtherNet> dont know why you dont like it, but I find it very useful
[19:01:25] <pulse> it may be useful, it's not good :D
[19:04:17] <[itchyjunk]> my class has a discord
[19:04:24] <[itchyjunk]> shit pissed me off
[19:06:02] <Akronymus> https://www.youtube.com/watch?v=RKW6rjnYEkc
[19:06:03] <bayaz> Title: Ping! 
[19:06:08] <Akronymus> [itchyjunk]
[19:06:30] <Akronymus> Anyways, g2g
[19:06:36] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: off to school)
[19:07:26] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:07:40] *** Joins: eddof13 (~textual@200.52.90.10)
[19:10:08] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:3d44:b4b4:9588:c922)
[19:12:38] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:13:38] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:13:42] <Izem> chat apps are a difficult market since they are usually not interoperable and new apps don't have any users
[19:13:48] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3d44:b4b4:9588:c922) (Ping timeout: 268 seconds)
[19:13:53] *** Quits: password (~password@user/password2) (Ping timeout: 264 seconds)
[19:14:41] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:16:08] *** Joins: eson123 (~eson123@118.69.128.37)
[19:16:23] <Izem> Is it possible to extend IRC?
[19:16:28] <eson123> i am a bit confused about how to solve this so help please, like imagine if i have two table, one is Result and one is Student, i wanna select all student's name whose score is say... bigger than 7 for example, how can i construct a query from two table ? https://hatebin.com/nyieacqyyb the table is like this
[19:16:30] <bayaz> Title: hatebin 
[19:17:46] <Izem> to use two tables might require a join?
[19:18:14] *** Quits: llh (~llh@198.48.244.21) (Changing host)
[19:18:14] *** Joins: llh (~llh@user/llh)
[19:18:22] <[itchyjunk]> SASL is irc extended
[19:19:53] * smallvil_ has 2 java process that are consuming 1.9 GB -_-
[19:20:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:20:20] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[19:20:33] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[19:23:23] <[itchyjunk]> not bad
[19:23:31] <[itchyjunk]> for java
[19:24:22] *** Quits: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de) (Remote host closed the connection)
[19:24:41] <beaky> nice i like java
[19:24:52] *** Joins: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de)
[19:25:06] <beaky> when i use java i feel like i am using a software environment relied upon by industyr professionals to do serious heavy duty commerce
[19:27:29] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[19:27:32] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Izem)
[19:27:46] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[19:27:46] <[itchyjunk]> is it?
[19:27:57] <[itchyjunk]> i dont know if i will use java after passing this class
[19:28:17] <[itchyjunk]> Haskell,assmebly and C are 3 things i wish i knew
[19:28:24] <[itchyjunk]> followed by coq,agda
[19:28:52] <vdamewood> I know C. C is fun.
[19:29:14] <vdamewood> It also comes with the warts that come with a 50-year-old language.
[19:29:26] <[itchyjunk]> wish i knew math too
[19:29:32] <Thedarkb-Desktop> C is just... nice to write.
[19:29:35] <[itchyjunk]> i was looking at graduate school and i'm too dumb for it
[19:29:39] <Thedarkb-Desktop> In a way that I can't really descrive.
[19:29:43] <pyzozord> C is simple, powerful and fun
[19:29:43] <[itchyjunk]> idk how people with PhD's did it
[19:29:46] <Thedarkb-Desktop> s/descrive/describe.
[19:29:55] <vdamewood> Math is fun. But it comes with all the warts of a 5000-year-old language.
[19:30:00] <[itchyjunk]> heh
[19:30:17] <Thedarkb-Desktop> Assembly isn't hard to learn.
[19:30:24] <vdamewood> It's hard to get right.
[19:30:38] *** Quits: Guest_3399 (~WebIRC@223.189.59.208) (Ping timeout: 246 seconds)
[19:30:40] <[itchyjunk]> i will dabble with assembly after my midterms
[19:30:50] <vdamewood> [itchyjunk]: Which architecture?
[19:30:50] <[itchyjunk]> i have some assembly i just need to figure out how to run qemu
[19:30:54] <Thedarkb-Desktop> Most instruction sets are conceptually simpler than most high level programming languages.
[19:30:56] <[itchyjunk]> riscv65
[19:30:57] <[itchyjunk]> 4
[19:31:14] <[itchyjunk]> i didn't write it, i used riscv cross compiler
[19:31:20] <[itchyjunk]> but it's in assembly form now
[19:31:23] <[itchyjunk]> just need to run it
[19:31:27] <pyzozord> math is not fun :(
[19:31:33] <[itchyjunk]> math is hard.
[19:31:38] <vdamewood> Math us muchly fun!
[19:31:39] <[itchyjunk]> really wish i didn't suck at it this bad
[19:31:43] <vdamewood> s/us/is/
[19:31:43] <[itchyjunk]> oh i'm running lagte
[19:32:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:32:14] <pyzozord> misscalculated the meeting time?
[19:32:33] <vdamewood> Oh, 'late'. I thought lagte was a new runtime environment or something.
[19:33:18] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:34:01] <pyzozord> lah-gah-tey sounds fancy
[19:34:35] <vdamewood> Lag-te
[19:35:16] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[19:35:52] <pyzozord> I'm stuck on that problem in codility
[19:36:04] <pyzozord> infuriating to do 1 problem per three days
[19:36:59] <vdamewood> I'm trying to get all of the non-source files out of my source trees so that git doesn't have to ignore any files.
[19:37:15] *** Joins: x28girl (~x28girl@user/x28girl)
[19:37:22] <vdamewood> Well, except for .git. That, and its contents, are staying.
[19:38:04] <pyzozord> Git has some support for blobs, but I heard there are other vcs that handle blobs better
[19:38:09] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:38:15] <pyzozord> maybe subversion?
[19:38:37] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[19:39:18] *** Quits: Lyn (~Lyn@user/law) (Quit: Leaving)
[19:40:43] <pyzozord> ugh, break. I can't look at this problem anymore
[19:40:43] *** Joins: cm007magnum (~Rheanna@101.89.197.243)
[19:41:13] *** Joins: rtypo (~alex@user/rtypo)
[19:41:19] <pyzozord> What do I keep doing wrong with these. The way I approach these problem must be wrong.
[19:42:00] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[19:42:00] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[19:42:00] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[19:42:13] <pyzozord> They are simple but I can't fix them. I feel like very close yet very far. I still haven't figured out something about these types of problems. And it's not about programming.
[19:42:25] *** Joins: jokoon (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4)
[19:42:28] <pyzozord> I don't think it's math either to be honest.
[19:42:33] <vdamewood> pyzozord: No, I mean things like Foo.vscode-workspace, and .vscode, and such.
[19:43:21] <pyzozord> oh, you don't like having those?
[19:43:41] <vdamewood> No, it makes it hard to work with a source tree that's, for example, on a read-only share.
[19:43:55] <pyzozord> I like having global dot files in my home directory, and whenever I need to override the defaults I do that locally per project
[19:44:08] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-103A-static.midco.net)
[19:44:37] <vdamewood> pyzozord: Don't get me wrong. My only problem is that these files are in the source tree. So, I'm moving them to their own separate directory.
[19:45:08] <vdamewood> So, I have ~/dev/code, and ~/dev/build, now I'm going to add ~/dev/vscode
[19:45:17] *** Quits: maroloccio (~marolocci@93-142-92-177.adsl.net.t-com.hr) (Quit: WeeChat 3.0)
[19:45:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:46:06] <pyzozord> is there so much vscode junk? I thought it's just one file/directory kind of like .git
[19:46:29] <vdamewood> Well, even one file can be a problem.
[19:47:28] <pyzozord> in frontend projects we usually end up with so much dotfiles in the root, it's a lost cause to clean it up
[19:47:39] <vdamewood> And it's atleast two. Foo.code-workspace and .vscode
[19:47:57] <pyzozord> seems like almost every js library nowadays wants it's own dotfile in the project root
[19:48:43] <pyzozord> I added a ~/.gitignore that ignores a set of my personal dotfiles I keep in projects
[19:48:56] <pyzozord> so I don't even add my personal stuff to project/.gitignore
[19:49:10] *** Joins: Cashlin (~hp@user/cashlin)
[19:49:37] <pyzozord> but I don't think I'll surprise you with anything about programming vdamewood :D
[19:49:53] *** Quits: asdfkl (~asdfkl@user/asdfkl) (Ping timeout: 264 seconds)
[19:50:32] <vdamewood> Well, only one of my tools pays attention to .gitignore.
[19:51:01] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[19:52:14] <beaky> nice are you using monorepo
[19:52:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[19:53:03] <vdamewood> Oh, hell no.
[19:53:15] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:53:45] *** Joins: mrig_ (~mrig@user/mrig)
[19:54:05] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 246 seconds)
[19:54:32] <beaky> but i like monorepo it lets you have everything under a single umbrella
[19:54:34] *** mrig_ is now known as mrig
[19:55:18] <pyzozord> even better: a monorepo where each project is actually a gitsubmodule muahahah
[19:56:01] *** Joins: cadmio (~cadmio@151.43.3.71)
[19:56:06] <cadmio> Hello
[19:56:12] <cadmio> this is the output https://paste.debian.net/1212701/ for this https://paste.gnome.org/pzehl3des
[19:56:16] <bayaz> Title: debian Pastezone 
[19:56:16] <bayaz> Title: GNOME Pastebin 
[19:56:24] <cadmio> every number is read correctly but the result is not correct
[19:56:42] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:57:15] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[19:58:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:59:35] *** Joins: nulleip (~luiz@189.34.167.234)
[20:01:37] <vdamewood> cadmio: Perhaps you should add more debigging messages to see the result after each operation.
[20:01:49] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:01:57] <no_gravity> Good evening
[20:02:26] <vdamewood> no_gravity: Good time period.
[20:02:58] <no_gravity> vdamewood: Hell yeah! Is there a bad one?
[20:03:23] *** Joins: Tazy (~Tazmainia@41.193.250.213)
[20:03:42] <vdamewood> Between 2 AM and 3 AM, when all the drunks are out driving because the bars have closed.
[20:03:58] <no_gravity> I sleep then :)
[20:04:17] <vdamewood> I don't.
[20:04:21] <no_gravity> When you guys look for a monitor, does the so called "dynamic contrast ratio" have any value to you?
[20:04:26] <vdamewood> Well, I guess sometimes I do.
[20:04:58] <vdamewood> The last time I bought a monitor, it was a CRT.
[20:05:31] *** Quits: livestradamus (~quassel@user/livestradamus) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:06:04] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:06:06] *** Joins: livestradamus (~quassel@user/livestradamus)
[20:06:38] <pulse> sometimes i look for a monitor and then i'm like, woah, it's right in front of me
[20:07:10] *** Joins: asdfkl (~asdfkl@user/asdfkl)
[20:08:44] <cadmio> vdamewood: indeed I can confirm the expression inside parenthesis is correct
[20:10:07] <vdamewood> cadmio: So, if you try to get sin of that value to you get the same (wrong) result?
[20:10:17] <vdamewood> s/to you/do you/
[20:11:32] <cadmio> vdamewood: I've noticed that if I add double parentheis is working (sin (pi/2+3+5))/2
[20:11:44] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:719e:a0a5:6129:cf10)
[20:12:03] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[20:12:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:12:47] *** Joins: x28girl (~x28girl@user/x28girl)
[20:13:15] <vdamewood> cadmio: What do you get if you try sin ((pi/2+3+5)/2) ?
[20:13:33] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[20:14:08] <cadmio> -0.9973360132431250419
[20:15:27] *** Joins: chronon (~chronon@user/chronon)
[20:15:39] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:15:44] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[20:17:10] <user51> http://sprunge.us/j21YAu
[20:17:17] <user51> hacky code of the day! :D
[20:17:38] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:18:33] <GeDaMo> Pfft! How is that hacky? :P
[20:19:22] <user51> probably not gonna win IOCC, but it's still feels like a "wait, why that way?" kind of code
[20:19:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:20:19] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:21:47] *** Quits: xiongxin (~quassel@119.123.102.205) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:22:11] <pyzozord> nice, branchless code
[20:22:35] *** Quits: qbt (~edun@user/edun) (Quit: Leaving)
[20:22:48] <vdamewood> cadmio: Notice that it's the same as the value you get without the extra parentheses.
[20:22:57] <pyzozord> i wonder if predictors predict only instructions or also data
[20:23:15] <user51> i ran it for 2^20, but the branch version performed better
[20:23:51] <cadmio> vdamewood: this what could indicate=
[20:23:54] <cadmio> ?
[20:24:16] <vdamewood> I can't parse that question.
[20:24:32] *** Joins: yinghua (~yinghua@2800:2121:1400:1db:705e:acf0:71e7:8a79)
[20:24:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:25:09] <user51> f
[20:25:14] <user51> my bad
[20:26:27] <vdamewood> user51: Shouldn't it be a <= b or b >= a?
[20:27:44] <GeDaMo> I would just use <, if they're the same, it doesn't matter which one you return
[20:28:03] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[20:28:18] <vdamewood> Are there architectures where < and > are faster than <= and >=?
[20:28:23] *** Quits: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de) (Remote host closed the connection)
[20:28:32] <GeDaMo> Hmmm ... don't know
[20:28:40] *** Quits: cm007magnum (~Rheanna@101.89.197.243) (Remote host closed the connection)
[20:28:47] *** Joins: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de)
[20:28:56] <user51> vdamewood: no idea, i haven't thought about it, just wanted to get it running
[20:29:08] *** Joins: brickfat (~brickfat@user/brickfat)
[20:29:29] <vdamewood> user51: Well, if you have a<=b and a is less than b, then you get 0 as your index which would select a.
[20:29:45] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:29:56] <vdamewood> So, this is giving the lower of thw two values, not the greater.
[20:30:02] <vdamewood> s/thw/the/
[20:30:15] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[20:30:40] <vdamewood> oops, s/<=/>=/
[20:30:47] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[20:31:24] <user51> vdamewood: oh, i see it
[20:31:25] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:31:35] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[20:32:17] <pyzozord> user51: have you checked out the branched and branchless versions in https://gcc.godbolt.org/
[20:32:18] <bayaz> Title: Compiler Explorer 
[20:32:43] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Quit: Leaving.)
[20:33:30] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:33:38] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:33:50] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:34:12] *** Quits: user51 (~user51@176.228.90.248) (Read error: Connection reset by peer)
[20:34:16] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[20:34:28] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 252 seconds)
[20:34:45] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[20:34:59] *** Joins: Guest74 (~Guest74@171.121.105.52)
[20:36:00] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:38:08] <mhmd> folks, is it possible to move a git repo 10-20 commits back, without leaving a trace?
[20:38:33] <pyzozord> yeah git reset @~20; git push -f
[20:38:52] *** Quits: kariosfox (~kariosfox@176.221.124.163) (Ping timeout: 252 seconds)
[20:38:56] <mhmd> it's on gitlab, no one can notice that this happened, right? 
[20:38:58] *** Quits: cadmio (~cadmio@151.43.3.71) (Quit: WeeChat 3.0)
[20:38:58] <pyzozord> but do backups before you do it
[20:39:12] <pyzozord> oh no, they will know probably
[20:39:34] <pyzozord> those systems are usually designed to keep log of what exactly happend
[20:39:40] <mhmd> do they need to look for it, or is it somewhere obvious?
[20:39:56] <pyzozord> on github it's obvious, right in the pull request
[20:40:05] *** Joins: user51 (~user51@176.228.90.248)
[20:40:09] <pyzozord> gitlab not sure, suspect also
[20:40:12] <user51> sorry, my pc hanged
[20:40:41] <vdamewood> mhmd: So how much do you need to leave no trace?
[20:40:49] <user51> anyway, i got the idea from a call-bomb (fork bomb?) factorial function i wrote some time ago
[20:41:56] <mhmd> vdamewood: it should look normal, and there are only two people having access to the repo, and the other person doesn't check it much
[20:41:57] <user51> http://sprunge.us/6te9FT
[20:42:20] <pyzozord> mhmd: if you broke production accidentally your employer should understand, if they don't you better find another place anyway
[20:42:23] <user51> some sort of silly function which chooses between 0/1 depending on a binary condition
[20:42:27] <pyzozord> no need to hide things like this
[20:42:41] <user51> but that' just moving up the abstraction ladder for no reason
[20:42:43] <vdamewood> pyzozord: Ah, but what if there's a password in the code?
[20:43:07] <user51> and in the factorial case, might as well use a lookup table, but if not that, loop
[20:43:12] <mhmd> no there's no production, I can't trust the other person and share the code from a point froward
[20:43:26] <pyzozord> vdamewood: I was thining of private github/lab for companies
[20:43:45] <pyzozord> vdamewood: the public open source stuff I'm not sure, it might very well be hidden from public
[20:43:47] <mhmd> but I already have committed changes, and I can't revoke his access, not now
[20:44:25] <gamah> nuke the repo
[20:44:27] <gamah> reset local
[20:44:28] <gamah> push
[20:44:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[20:44:52] <pulse> the safest thing to do with git is
[20:44:56] <pulse> make local backup
[20:45:03] <pulse> destroy repo, make another one
[20:45:22] <gamah> ^ this, but i don't think you need to in the local copy?
[20:45:34] <gamah> so long as you don't plan to push again in the future.
[20:45:39] <pyzozord> agreed. I deleted my github account. I use local repos without remotes and upload backups to secure location :P
[20:46:02] <mhmd> can I undo commits, in a way that the changes in those commits can't be seen?
[20:46:38] <mhmd> so everything would be normal, and he won't have access to the newer stuff that he shouldn't have access to
[20:46:40] <pyzozord> you can remove it from the remote repo yes, but the git server might still keep track of it outside of git
[20:46:57] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[20:47:22] <pyzozord> imagine like a middlelayer before git server, you think you are talking to git server but you are talking to that layer, that layer can record whatever it wants and store it wherever it wants
[20:47:28] <mhmd> it's ok if he sees the undoing, as long as he can't see its contents
[20:47:37] <pulse> you can unroll commits yes
[20:47:55] <mhmd> it's on gitlab, I'm pretty sure he hasn't forked it recently
[20:48:00] <pulse> maybe ask #git
[20:48:06] <mhmd> right
[20:48:29] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[20:48:34] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:48:45] <mhmd> so unroll, and the newer code is gone, there's a trace of unrolling, but not from the contents of it
[20:48:48] <mhmd> right?
[20:48:49] <austincheney> mhmd, what about stepping back in the git log and then making a new commit?
[20:49:07] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:49:44] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 246 seconds)
[20:49:44] *** Joins: jazzy (~jaziz@2600:380:457b:dc40:5c0f:a321:1cd7:19b9)
[20:49:49] <mhmd> austincheney: what will remain of the newer code?
[20:50:09] <austincheney> probably gone
[20:50:13] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[20:50:20] <austincheney> mhmd what exactly are you wanting to accomplish?
[20:50:21] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[20:50:50] <mhmd> remove everything from a commit forward, in a way that it looks normal
[20:51:06] <austincheney> then thats how you do it
[20:51:38] <mhmd> does it have a name in git jargon? sorry I'm a little new to git stuff
[20:53:45] <pyzozord> i don't think it has a name
[20:54:05] *** Joins: herpderp (~gnba@p5dd9273c.dip0.t-ipconnect.de)
[20:54:32] <mhmd> ok, thank you all for helping me
[20:54:44] <herpderp> Hi, I am looking for any book recommendations on threading/socket/networking on Windows? It should cover the very basics.
[20:58:18] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[20:58:19] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[20:58:19] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:59:11] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 246 seconds)
[21:00:11] <Izem> herpderp: msdn
[21:00:59] <Izem> there is very little you have to do since it has a decent berkeley sockets implementation
[21:02:00] <Izem> It does have more OS specific networking and threading APIs, is that what you are interested in?
[21:02:34] <Izem> I'd have to recommend msdn again since there doesn't seem to be many up to date books for windows
[21:03:46] *** Quits: salitos (~salitos@154.122.2.215) (Read error: Connection reset by peer)
[21:04:40] *** Joins: kariosfox (~kariosfox@176.221.124.163)
[21:06:07] *** Joins: salitos (~salitos@154.122.2.215)
[21:07:00] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:cd51:67e6:380:eb01)
[21:07:53] *** Quits: jazzy (~jaziz@2600:380:457b:dc40:5c0f:a321:1cd7:19b9) (Ping timeout: 264 seconds)
[21:11:22] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[21:11:26] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:cd51:67e6:380:eb01) (Ping timeout: 246 seconds)
[21:11:39] *** Joins: jazzy (~jaziz@2600:380:476c:a7ad:7dff:c969:60da:33bf)
[21:12:16] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: Lost terminal)
[21:14:00] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:15:42] *** Quits: salitos (~salitos@154.122.2.215) (Read error: Connection reset by peer)
[21:15:47] *** Joins: contagious_meow (~salitos@154.122.2.215)
[21:16:56] *** Joins: jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[21:16:57] <beaky> what would programming be like if we switched to superscript and subscript-based notations like in maths https://en.wikipedia.org/wiki/Actuarial_notation
[21:16:58] <bayaz> Title: Actuarial notation - Wikipedia 
[21:18:06] *** Joins: paravida (~myChateau@23.31.187.1)
[21:18:34] *** Quits: cm007magnum (~Rheanna@101.91.214.30) (Remote host closed the connection)
[21:19:36] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 276 seconds)
[21:19:37] *** jacktar_ is now known as jacktar
[21:20:02] *** Quits: rsx (~dummy@ppp-188-174-150-47.dynamic.mnet-online.de) (Quit: rsx)
[21:20:36] *** Joins: cm007magnum (~Rheanna@101.89.207.55)
[21:20:47] *** Quits: contagious_meow (~salitos@154.122.2.215) (Ping timeout: 252 seconds)
[21:21:00] *** Quits: on^ (~on@12.203.127.82) (Remote host closed the connection)
[21:23:24] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[21:25:38] *** Joins: salitos (~salitos@154.122.2.215)
[21:25:44] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 252 seconds)
[21:27:33] *** Joins: rexar89 (~alexi5@208.83.82.234)
[21:27:37] <GeDaMo> https://en.wikipedia.org/wiki/Cistercian_numerals
[21:27:38] <bayaz> Title: Cistercian numerals - Wikipedia 
[21:27:52] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Izem)
[21:28:06] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[21:28:44] <herpderp> @izem: thanks, need to mention I am Delphi (object pascal) dev
[21:29:22] *** Quits: eddof13 (~textual@200.52.90.10) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:29:26] <Izem> what version of windows are you programming for?
[21:29:43] *** Joins: extern (~archer@141.226.62.247)
[21:30:31] <herpderp> windows 10 and above
[21:31:27] <Izem> I don't think there will be a lot of good stuff, but you can try amazon I guess
[21:32:39] <Izem> Using delphi I assume you will be working with the win32 layer
[21:32:46] <herpderp> yep
[21:32:58] <Izem> ok
[21:33:15] <GeDaMo> Maybe the Free pascal people would have something?
[21:33:17] <GeDaMo> #fpc
[21:33:27] <herpderp> ah true
[21:33:48] <Izem> personally I used a combination of old sources and msdn, I doubt there are any books worthwhile
[21:34:05] <Izem> a lot of them seem to be stuck in the past at around windows 8
[21:34:20] <EtherNet> does Delphi/pascal still exist? I thought it was totally dead.
[21:34:37] <Thedarkb-Desktop> Yeah, the FOSS world is keeping it alive along with Embarcadero.
[21:34:56] <EtherNet> wow !!
[21:35:00] <EtherNet> that's totally new for me
[21:35:35] *** Quits: salitos (~salitos@154.122.2.215) (Read error: Connection reset by peer)
[21:35:49] *** Joins: salitos (~salitos@154.122.2.215)
[21:37:23] *** Quits: jokoon (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4) (Quit: Leaving)
[21:37:47] <Izem> herpderp: these might be useful http://www.winprog.org/tutorial/ ; https://www.modula2.org/win32tutor/start.php ; https://bytepointer.com/resources/index.htm
[21:37:47] <bayaz> Title: theForger's Win32 API Tutorial 
[21:37:49] <bayaz> Title: Modula-2 WIN32 tutorial. 
[21:37:49] <bayaz> Title: BYTE* / Resources 
[21:38:46] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[21:38:55] <Izem> on the last resource there is a win32 chm that is really helpful
[21:39:08] *** Joins: contagious_meow (~salitos@154.122.2.215)
[21:39:26] *** Quits: salitos (~salitos@154.122.2.215) (Read error: Connection reset by peer)
[21:39:33] <Izem> fpc probably has stuff yeah, that is something I overlooked
[21:39:39] <pyzozord> this, I have problem with this https://www.youtube.com/watch?v=QvuQH4_05LI
[21:39:40] <bayaz> Title: Tips to be a better problem solver [Last live lecture] | Lockdown math ep. 10 
[21:39:56] <Izem> can you summarize the problem?
[21:40:14] <Izem> from the title it sounds like 3b1brown
[21:40:27] <pyzozord> it is
[21:40:35] <Izem> cool
[21:40:39] <pyzozord> and no I cannot summarize the problem
[21:40:53] <pyzozord> problem is my ability to solve problems
[21:40:56] <Izem> ok, guess I'm not doing anything ;)
[21:41:34] <Izem> pyzozord: it's ok, you just need to solve more problems
[21:41:47] <Izem> there isn't really a trick to this
[21:42:21] <Izem> it's so weird watching the video with him in it ...
[21:42:24] <herpderp> EtherNet: nah, delphi feels like it's dead but the software of my employer is over 20 years old :D
[21:42:55] <EtherNet> herpderp: heheh, what is it about,  I mean the software written in delphi?
[21:43:11] <pyzozord> Izem: I thought he was older
[21:43:21] <herpderp> inventory management software/erp
[21:43:27] <pyzozord> Izem: are you sure there is no trick? I could use a trick
[21:44:13] <pyzozord> Do people enjoy this? It feels excruciating
[21:44:50] <Izem> yeah it's fun, just don't try to do to many difficult problems
[21:44:52] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[21:45:25] *** Joins: Akuli (~Akuli@213.216.209.129)
[21:45:29] <Izem> I'm still in chapter 2 of concrete math, and I had to review the first chapter recently
[21:45:37] <Izem> so, I'm still in chapter 1 lol
[21:45:40] <GeDaMo> Just because other people enjoy it, that doesn't mean that you have to
[21:45:46] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[21:45:59] <pyzozord> I mean I don't think I can get much easier than a "training website". I'm stuck now on this problem https://app.codility.com/programmers/lessons/10-prime_and_composite_numbers/flags/
[21:46:01] <bayaz> Title: Flags coding task - Learn to Code - Codility 
[21:46:24] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[21:46:43] <Izem> if you get stuck you can either skip it or come back to it later
[21:46:50] <Izem> there isn't really much choice there
[21:46:54] <pyzozord> or maybe I should move back to easier problems? Ignore the programming, and just simply practice simper mathematical training problems?
[21:47:07] <Izem> that was my choice
[21:47:28] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:47:29] <Izem> those algorithm websites are pretty meh
[21:47:41] <pyzozord> this one is tough as hell
[21:48:07] <Izem> the problem description is sometimes unclear which I suspect is a part of it
[21:48:27] <Izem> as well as the odd ways they decide to code the solution
[21:48:37] <pyzozord> I mean depends, some tasks I solve in 30 minutes, and some other in 3 days or not at all. And the difficulty grating or lesson numbering doesn't seem to have much to do with it. Although I admit further lessons more offten give me trouble
[21:48:41] <Izem> books have no such pretense ... usually :P
[21:49:23] *** Quits: user51 (~user51@176.228.90.248) (Ping timeout: 252 seconds)
[21:49:44] <Izem> on leetcode I solved a couple hard questions in a row and I got stuck on easy ones, not sure how they assess that 
[21:50:32] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:7d1f:dc06:868e:31c2) (Quit: Textual IRC Client: www.textualapp.com)
[21:50:57] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[21:55:32] *** Quits: jazzy (~jaziz@2600:380:476c:a7ad:7dff:c969:60da:33bf) (Ping timeout: 246 seconds)
[21:56:25] <pyzozord> I wish there was some way to solve problems like I do with debugging.
[21:56:52] <pyzozord> I can debug virtually any bug I stumble on
[21:57:01] <pyzozord> I wish there was a way to debug problems
[21:57:02] <Izem> there is, you just need a pencil and paper
[21:57:19] <Izem> but the process is not as nice as with a true debugger
[21:57:38] <pyzozord> then I'm using my problem debugging tools incorrectly, because I spent 1.5h "debuggin" and without any result
[21:57:53] *** Quits: JavaBean (~javabean@user/javabean) (Quit: oh bother)
[21:57:55] <Izem> yeah, I admit that part I'm not sure how to convey
[21:58:02] <Izem> I've been learning it myself recently
[21:58:03] <extern> ingrown toenails is very nasty
[21:58:27] <extern> make you want to cut of your toe and get it over wilth
[21:58:41] *** Joins: JavaBean (~javabean@user/javabean)
[21:58:48] <pyzozord> extern: TMI
[21:59:09] <extern> ok sry
[21:59:17] <extern> i just wanted to share someone with my pain
[21:59:29] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Izem)
[22:00:34] <extern> god forgive me for i have sinned
[22:00:35] *** Joins: Izem (~Srain@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[22:00:49] <pyzozord> no need to appologise to me I just expressed my opinion :P
[22:02:11] *** Joins: Usr07 (~k@70.90.132.249)
[22:02:30] *** Joins: eddof13 (~textual@200.52.90.10)
[22:03:26] <Usr07> assuming you were a +3000% (more) of a programmer, what would you be coding?
[22:03:27] *** Joins: magla (~gelignite@55d4b17a.access.ecotel.net)
[22:04:23] *** Quits: Usr07 (~k@70.90.132.249) (Client Quit)
[22:04:52] <extern> developing some very precise laser cutter so i can **cking cut off my toenail1
[22:04:56] <pulse> replacement for git
[22:06:12] <extern> that dones't requier much programming wisdom 
[22:06:24] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:06:32] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[22:09:14] *** Joins: diophantoz (~diophanto@user/diophantoz)
[22:09:39] <diophantoz> hello, firefox is acting weird on two (!) computers
[22:10:30] <GeDaMo> Same user? :P
[22:10:32] <pulse> s/two/all/
[22:10:33] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:57] <diophantoz> no, even two different OS:s
[22:11:46] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[22:11:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:12:25] *** Joins: Usr07 (~k@70.90.132.249)
[22:13:00] <Usr07> I'm sick you guys. I'm sick. *head spins 360 degrees*. AAAAHHhHHHHhHH bllaaaaah
[22:13:41] *** Quits: wwilly (~wwilly@fw-tnat-cam2.arm.com) (Quit: Leaving)
[22:14:25] *** Joins: jazzy (~jaziz@2600:380:8660:f034:4864:d7e1:2938:69b7)
[22:15:54] <Usr07> I need help you guys. I need help.
[22:16:46] *** Quits: Usr07 (~k@70.90.132.249) (Client Quit)
[22:17:10] <diophantoz> welp
[22:17:56] <pyzozord> hahah
[22:17:58] <pyzozord> rude!
[22:18:07] *** Joins: Izem` (~user@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[22:18:39] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[22:18:43] *** Joins: Usr07 (~k@70.90.132.249)
[22:19:28] *** Joins: user51 (~user51@176.228.115.184)
[22:19:39] <Usr07> pro-gramming; professional grammer. professional drug measurer.
[22:20:27] <user51> professional oneliner here..
[22:20:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:21:07] <pyzozord> does "problem solving" require above average iq? Maybe I'm just lacking brain cpu
[22:21:13] <Izem`> no
[22:21:25] <Izem`> iq is irrevelvant anyways
[22:21:29] <user51> pyzozord: it really depends on what you define as a problem
[22:21:31] <whatsupboy> pyzozord:  no 
[22:21:40] <whatsupboy> practise is all one need
[22:21:56] <Izem`> yeah, you just need to see more problems
[22:22:25] *** Joins: dsrt^ (~dsrt@12.203.127.82)
[22:22:27] <Usr07> everyone has the same IQ when they're asleep: 0
[22:22:28] <mercenary> pyzozord: it requires a box. to think outside of.
[22:22:45] <pyzozord> I admit after a year on leetcode, reading chapters in books etc. I noticed I was able to solve all problems from lesson 1-8 more or less without any troubles. Half our for a problem or less
[22:22:45] <Izem`> there's always a few geniuses
[22:22:58] *** Joins: Klinda (~klinda@2.227.251.209)
[22:23:04] <pyzozord> before even these early problems were 3 days for me
[22:23:47] <user51> i think a lot of problems are best solved by using the right mapping
[22:24:27] <user51> here's one: select a 2-character permutation of "ABC" without repeating digits
[22:24:54] <user51> this is pretty easy if you know your bits
[22:26:00] <pyzozord> don't really understand the problem
[22:26:17] <Usr07> SMOKE dope. SMOKE code. Get it in life, download the mode;
[22:26:26] <pyzozord> "AB" there, I promise it was random
[22:26:44] *** Joins: jokoon (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4)
[22:27:31] <user51> pyzozord: well, if i pick AA, what structure would alert you about it?
[22:28:36] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[22:29:35] <Usr07> user51, professional one-liner you say..that's brilliant! utterly brilliant idea.
[22:30:21] <user51> Usr07: i've practiced a lot of bond one-liners :P
[22:30:33] <Usr07> user51, what is bond?
[22:31:02] <user51> james bond
[22:31:14] <Usr07> I thought you meant code one-liners
[22:31:35] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[22:33:36] *** Joins: jokoon2 (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4)
[22:33:37] <user51> once you think about it, you'll see some FSM diagram, then think: "this is basically a program"
[22:35:13] <pyzozord> i still don't understand the problem
[22:35:47] *** Quits: jokoon (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4) (Ping timeout: 246 seconds)
[22:36:31] <user51> pyzozord: i wanted to get you thinking about mapping each permutation to a binary number
[22:37:19] <DPA> But if AB and BA are different permutations?
[22:37:41] <user51> so, A = 100, AA = 100 | 100, but we needed two different letters, so that's forbidden
[22:39:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:39:19] *** Joins: TheRedRipper (~student@user/theredripper)
[22:39:35] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[22:40:06] <pyzozord> at the risk of annoying everyone, I still don't see what is the problem to solve there
[22:43:49] <TheRedRipper> ayoo
[22:43:52] <TheRedRipper> hey pyzozord 
[22:43:56] <pyzozord> hello
[22:44:10] <Hash> Power Rangers Zords
[22:44:10] <TheRedRipper> whats up?
[22:44:17] <Hash> Dragonzord
[22:44:19] <TheRedRipper> hey Hash! o/
[22:44:22] <Hash> Hi
[22:44:26] <pyzozord> I think I'll go, I've been annyoing everyone enough for today :P
[22:45:41] *** Quits: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de) (Ping timeout: 264 seconds)
[22:46:20] <TheRedRipper> noo
[22:46:23] <TheRedRipper> whats going on?
[22:46:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:48:02] *** Joins: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de)
[22:48:34] <user51> pyzozord: eh, nevermind then
[22:48:39] <user51> maybe it will help in the future
[22:48:44] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:49:11] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:49:15] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:49:35] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:50:03] <TheRedRipper> hey user
[22:50:08] <TheRedRipper> howsit going
[22:50:12] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:51:32] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:52:09] <user51> good
[22:53:30] <TheRedRipper> s good
[22:54:40] *** Joins: Izem`` (~user@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[22:54:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:54:54] *** Joins: Izem_ (~Srain@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[22:55:10] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[22:56:16] <Hash> https://brennan.io/2015/01/16/write-a-shell-in-c/
[22:56:18] <bayaz> Title: Tutorial - Write a Shell in C - Stephen Brennan 
[22:56:29] *** Quits: Izem` (~user@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 264 seconds)
[22:56:29] *** Quits: Izem (~Srain@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 252 seconds)
[22:56:54] *** Izem`` is now known as Izem
[22:58:13] <novns> Hash, 1. Write a loop,  2. Write the rest of a shell
[22:58:20] <Hash> I can't
[22:58:26] <Hash> It's 45F outside and I'm very cold
[22:58:31] <user51> write a shell in shell
[22:58:35] <Hash> i have to warm up fingers
[22:58:42] *** Quits: cm007magnum (~Rheanna@101.89.207.55) (Remote host closed the connection)
[22:58:47] <Hash> My goal is to write a shell with php
[22:58:47] <novns> Hash, type with your nose
[22:58:55] <Hash> not in php, but with php interpreter support
[22:59:05] <Hash> Full system shell, using php language to do things.
[22:59:13] <Hash> i want to also have a perl and a python backend
[22:59:16] <Hash> Also a js backend. 
[22:59:23] <novns> Hash, that would be a bullshell
[22:59:28] <Hash> Universal shell, use any scripting langue you like to program it.
[22:59:42] <Hash> programmable shell
[22:59:45] *** extern is now known as sudonym
[22:59:57] <Hash> solve/fix all the problems I found in other shells.
[23:00:05] <novns> the shell is supposed to be minimal and to never depend on anything
[23:00:18] <novns> or it's not usable
[23:00:26] <Hash> Perhaps in your opinion.
[23:00:32] <novns> in any opinion
[23:00:37] <Hash> In your opinion.
[23:00:46] <Hash> You are one person. You are not many people.
[23:00:53] <Hash> You can only speak for yourself.
[23:01:02] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[23:01:08] <novns> what's the shell that you cannot start after updating some libs
[23:01:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:01:14] *** Quits: Usr07 (~k@70.90.132.249) (Quit: Leaving)
[23:01:24] <Hash> And clearly, my opinion differs than yours, so not in 'any' opinion! Ta da :D
[23:01:45] <novns> and libs are breaking APIs every day
[23:01:59] <Hash> You don't have to use it.
[23:02:18] <Hash> You can use bash or zsh
[23:02:27] <novns> you too
[23:02:36] <novns> there's no need in another shell
[23:02:55] <Hash> I am going to now ignore you because I feel you're discouraging me and holding me back and I don't like that kind of an env.
[23:03:00] <Hash> I wish you the best.
[23:03:27] <novns> you are a shellfish
[23:03:32] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[23:03:37] *** Joins: flaknet99 (~0x100@32.211.211.39)
[23:03:50] *** Joins: Dellawara (~Guest98@2001:67c:2660:425:b::3b3)
[23:05:37] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[23:09:14] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[23:10:53] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:11:14] *** Joins: teut (~teut@122.162.88.202)
[23:11:22] *** Quits: Guest74 (~Guest74@171.121.105.52) (Quit: Connection closed)
[23:12:00] <teut> https://2ality.com/2013/09/javascript-unicode.html     in the code unit's definition ,  whats that  code point is too large to fit in thing telling?
[23:12:01] <bayaz> Title: Unicode and JavaScript 
[23:12:45] *** Joins: Guest70 (~Guest70@171.121.105.55)
[23:16:13] *** Joins: Samian (~Sami@user/samian)
[23:16:46] <flaknet99> in utf8 anything larger than 8 bits  i'd imagine
[23:16:49] <bjs> teut: e.g. https://www.compart.com/en/unicode/U+03B1  note how with UTF-8 it takes 2 bytes
[23:16:51] <bayaz> Title: “α” U+03B1 Greek Small Letter Alpha Unicode Character 
[23:16:55] <flaknet99> dr. javascript doesn't seem to provide a greate definition
[23:18:42] <teut> https://www.section.io/engineering-education/what-is-little-endian-and-big-endian/    thanks , together with the help of what you gave bjs and this I understood it
[23:18:43] <bayaz> Title: What Is Little-Endian And Big-Endian Byte Ordering? 
[23:19:46] <teut> each 2 characters in hex   indicate 1 byte
[23:19:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 264 seconds)
[23:20:12] *** Joins: Trieste_ (T@user/pilgrim)
[23:20:30] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[23:20:54] *** Quits: TheRedRipper (~student@user/theredripper) (Quit: WeeChat 3.2)
[23:21:05] <bjs> teut: yes, 4 base-2 characters (bits) == 1 base-16 character (hex).
[23:21:31] <user51> dont forget middle endian :)
[23:21:33] *** Joins: mickey (~user@user/mickey)
[23:22:06] <teut> I m still on understanding that  type cast c code
[23:22:52] <teut> 4 bits == 1 hex character bjs?
[23:23:14] <bjs> teut: yes, a 4-bit number is a number between 0-15
[23:23:17] <teut> 1 hex character was 16 bit
[23:23:22] <bjs> teut: a hex digit is ... a number between 0-15
[23:23:23] <teut> oh ok ok
[23:23:25] <teut> right
[23:23:31] <teut> 2^4 = 16
[23:23:35] <bjs> teut: no it's base16, in that there are 16 digits
[23:23:47] <bjs> like how base 10 (decimal) has 10 digits (0,1,...,9) and base 2 has two (0, 1)
[23:24:05] *** Quits: jazzy (~jaziz@2600:380:8660:f034:4864:d7e1:2938:69b7) (Ping timeout: 246 seconds)
[23:24:40] <teut> yes , I m clear now with that thanks
[23:26:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[23:26:29] *** Quits: sudonym (~archer@141.226.62.247) (Ping timeout: 264 seconds)
[23:27:13] <teut> unsigned long long * x_p = &x;
[23:27:13] <teut> unsigned int * y_p = (unsigned int *)x_p;
[23:27:21] <teut> is this called a pointer downcast?
[23:27:34] *** Joins: alycidyne (~kova@lfbn-nan-1-386-99.w82-120.abo.wanadoo.fr)
[23:27:36] <teut> which is the parent class and which is the child one?
[23:28:00] <bjs> teut: that doesn't sound like there are classes involved at all, or really any kind of parent/child relationship
[23:28:00] <alycidyne> Hello, to all C programmers, what is your experience with C's integer promotions (not conversions)?
[23:28:32] <teut> in the second link that I gave it says its a pointer downcast
[23:28:55] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:29:10] <teut> downcast is converting parent type to child type(used in java when you declare something of type of an interface)
[23:29:18] <bjs> teut: yes, in C the (type)value  syntax is called a "cast".  Here you're "down"casting to a smaller number
[23:29:31] <teut> I know type casting in c
[23:29:31] <bjs> is this C? or C++? or Java? or what?
[23:29:42] <teut> it looks like c to me
[23:29:57] <flaknet99> what is x though
[23:29:59] *** Joins: Auron (~Auron956@user/auron)
[23:30:02] <flaknet99> its undefined
[23:30:07] *** Joins: X-Scale` (~ARM@83.223.240.141)
[23:30:08] <bjs> teut: C doesn't have classes,  so you can't talk about parent/child class
[23:30:13] *** Trieste_ is now known as Trieste
[23:30:14] <teut> but that parent child downcast I have seen it in java
[23:30:23] <teut> https://www.section.io/engineering-education/what-is-little-endian-and-big-endian/
[23:30:24] <bayaz> Title: What Is Little-Endian And Big-Endian Byte Ordering? 
[23:30:34] <teut> see the c/c++ code there
[23:30:38] <alycidyne> teut: downcasting in C++ requires dynamic_cast<>() IIRC
[23:30:40] <flaknet99> alycidine in my experience, it's all conversions
[23:30:44] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 246 seconds)
[23:30:49] <bjs> teut: what about it? there's no java here, no classes
[23:30:58] <teut> whats a downcast?
[23:31:11] <teut> in this context
[23:31:19] <bjs> teut: like what I just said,  in C the (type)value syntax is a "cast". a "downcast" is when you cast from a bigger type to a smaller one
[23:31:38] <teut> long long to int?
[23:31:45] <teut> ok can understand that
[23:31:58] <alycidyne> teut: you gave the definition of downcasting in Java... it's the same thing in C++
[23:32:37] <teut> i heard downcasting in that sense the last time I heard in , in a java tutorial
[23:32:43] <bjs> teut: this code looks like C not C++ anyway
[23:32:44] <teut> it*
[23:32:48] *** Joins: Usr07 (~k@70.90.132.249)
[23:32:59] <teut> but downcasting looked like a general concept
[23:33:00] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:33:04] <Soni> 127.1 is like ::1 and 0 is like :: yeah?
[23:33:06] <bjs> teut: yes but this isn't Java, C doesn't even have classes so there isn't a parent/child relationship. 
[23:33:13] *** X-Scale` is now known as X-Scale
[23:33:14] <Soni> (for ipv4 and ipv6 respectively)
[23:33:15] <flaknet99> soni no
[23:33:20] <teut> afterall bytes are also data structures
[23:33:27] <flaknet99> some tools interpret that differently
[23:33:36] <Soni> flaknet99: why shouldn't one put those in configs?
[23:33:37] <teut> but many people will call me an idiot if I say that
[23:33:53] <teut> there might be bjs
[23:34:02] <bjs> teut: might be what
[23:34:04] <alycidyne> flaknet99: care to explain a bit?
[23:34:20] <flaknet99> if you can find that syntax in the protocol spec i will retract my statement
[23:34:20] <teut> whats the hiearchy of the integer tytpe?
[23:34:29] <alycidyne> I was kind of expecting an answer like "useful", "annoying" or "dangerous"
[23:34:31] <teut> type hierchy *
[23:34:33] <bjs> teut: there isn't a hierarchy really, you can cast from int to long or from long to int
[23:34:39] <flaknet99> alycidyne  enable -Wconversion and you will see
[23:34:49] <flaknet99> \ its all swept under the rug
[23:34:54] <teut> yes thats too true
[23:35:10] <teut> ok so the casting thing is different
[23:35:21] <teut> thanks for the info
[23:35:32] <bjs> teut: C doesn't have classes,  so it doesn't have parent/child hierarchies of classes. All C has is a flat set of types, with rules about casting between them
[23:35:35] <GeDaMo> https://en.cppreference.com/w/c/language/conversion
[23:35:36] <bayaz> Title: Implicit conversions - cppreference.com 
[23:36:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[23:36:13] <teut> yes I know about implicit type conversions, like float a = 1  converts to 1.0000000000000
[23:36:37] <teut> whatever number of 0s in the data type
[23:36:38] <alycidyne> flaknet99: Right, I think I get the idea
[23:37:07] <teut> yes bjs I get it now, that java concept is not applicable here
[23:37:09] *** Quits: Usr07 (~k@70.90.132.249) (Quit: Leaving)
[23:37:37] <bjs> teut: everything in Java is going to talk about classes. But C doesn't have classes.  It doesn't mean they're not applicable/similar it just means they're not going to be exactly the same thing
[23:37:44] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[23:37:50] *** Joins: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it)
[23:38:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:38:23] <teut> c doesnt have the class like java but you can obviously create a classs with the help of structs
[23:38:30] <teut> and pointers to funtion
[23:39:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[23:40:23] <alycidyne> teut: there is a difference between the language having some concept and the language *implementing* some concept
[23:40:34] <teut> unsigned int * y_p = (unsigned int *)x_p;     does this line  modified  the   x_p?
[23:40:42] <jeaye> no
[23:40:45] <teut> ok
[23:41:12] <alycidyne> teut: C implements classes, it doesn't have them
[23:41:17] <teut> yes
[23:41:36] <alycidyne> s/implements/can express implementations of/
[23:41:47] <teut> the implementation of class is different in all languages
[23:41:56] <teut> some parts do match though
[23:43:01] <teut> unsigned long long * x_p = &x;   on 64 bits processor  , x_p occupies 16 bits and   y_p  4 bits right?
[23:43:29] <teut> bytes
[23:43:30] <teut> *
[23:43:31] *** Quits: alycidyne (~kova@lfbn-nan-1-386-99.w82-120.abo.wanadoo.fr) (Quit: leaving)
[23:44:36] *** Quits: contagious_meow (~salitos@154.122.2.215) (Quit: Leaving)
[23:44:39] <jeaye> No, pointers are all the same size.
[23:44:52] <teut> this number model, its just too much hard to get in the head for a long time, I just forget it soon everytime I study
[23:44:54] <jeaye> A pointer to a byte is the same size as a pointer to an int64_t.
[23:45:20] <jeaye> The size of the pointer is just the size it takes to store an address on that machine.
[23:45:20] <teut> you sure about that?
[23:45:37] <teut> a pointer to a struct  is bigger size than to an int
[23:45:50] <Inari> a pointer is literally just a memory address
[23:46:02] <GeDaMo> teut: no, that's wrong
[23:46:04] <jeaye> teut: I am sure, yes.
[23:46:13] <GeDaMo> A pointer to a struct will be the same size as a pointer to an int
[23:46:13] <teut> I read some assembly previously 
[23:46:29] <jeaye> Try it out, using the sizeof operator, on your machine. :)
[23:46:41] <teut> so in that  first on eax register you store a memory loc in the register
[23:46:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:46:54] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:47:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:47:07] *** Joins: flaknet99 (~0x100@32.211.211.39)
[23:47:08] <jeaye> sizeof(pointer to struct) == sizeof(pointer to byte) == sizeof(pointer to int) and so on.
[23:47:17] <teut> and in the register which you store the loc of you write the value
[23:47:45] <teut> ok , I will keep that in mindaye
[23:47:54] <teut>  mind jeaye *
[23:48:47] <GeDaMo> There are some systems with different sized pointers to e.g. functions on something like a Harvard architecture
[23:48:48] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[23:49:08] <teut> oh I remember that thing now
[23:49:19] <teut> the type indicates how many bits to read
[23:49:21] <teut> to skip
[23:49:32] <Inari> A lot of this kinda stuff you could just try out really
[23:49:39] <Inari> https://onlinegdb.com/2NfljsGDS
[23:49:40] <bayaz> Title: 
[23:49:52] <GeDaMo> A void * must be big enough to hold any kind of pointer
[23:50:01] <teut> ok Inari
[23:50:31] *** Joins: cm007magnum (~Rheanna@218.78.27.29)
[23:51:31] <Inari> Might also help with retaining the info, as you're finding it out and using it, rather than just being told about it
[23:51:54] *** Quits: jokoon2 (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4) (Quit: Leaving)
[23:52:56] *** Quits: Buggys (~Buggys@2a01:4f8:150:91ed::2) (Read error: Connection reset by peer)
[23:54:47] <jeaye> teut: https://godbolt.org/z/75x8zWvh9
[23:54:48] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[23:56:06] *** Quits: eddof13 (~textual@200.52.90.10) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:56:35] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:57:45] *** Parts: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Leaving)
[23:58:39] <teut> https://godbolt.org/z/1eb373fn9
[23:58:40] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[23:58:44] <teut> it gave 139
[23:59:04] *** Joins: extern (~archer@141.226.57.133)
[23:59:11] <teut> no no , sorry something wrong there
[23:00:03] <GeDaMo> t isn't a pointer
[23:00:06] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Quit: rebootin' again)
[23:00:09] <teut> s is but
[23:00:32] <teut> why isnt it printing the string?
[23:01:06] <jeaye> You used %s in your format, which is not correct for the arg you passed: sizeof(s)
[23:01:12] <jeaye> %s expects a null-terminated string.
[23:01:18] <teut> %d right
[23:01:32] <jeaye> You should be using %zu for that.... exactly like the line above which I wrote.
[23:01:43] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[23:02:06] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[23:02:11] <teut>     char b = 67  how much byte does this take?
[23:02:30] <GeDaMo> 1
[23:02:31] <teut> it must be rejecting some bytes
[23:02:42] <jeaye> oh boy
[23:02:45] <teut> is it C?
[23:02:58] <jeaye> It's not C, it's you. ;)
[23:03:25] <jeaye> teut: https://godbolt.org/z/rzWsjffjr
[23:03:26] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[23:03:30] <jeaye> That's a fixed version of yours.
[23:04:06] <jeaye> The values of a and b don't matter when we're talking about the size of the struct.
[23:04:14] *** Joins: eddof13 (~textual@200.52.90.10)
[23:04:30] <teut> that structure is 6 bytes  , is that die to the structure padding thing/
[23:04:31] <teut> ?
[23:04:31] <jeaye> The size is a compile-time constraint. The values can change at run-time, but they'll always have the same size.
[23:04:43] <teut> 8*
[23:04:46] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[23:04:46] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[23:04:46] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[23:05:03] <jeaye> How do you figure it's 6 bytes?
[23:05:08] <teut> 8
[23:05:14] *** Quits: trace987 (~trace@dynamic-002-247-251-086.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[23:05:23] <teut> I pressed wrong key
[23:06:05] <GeDaMo> It's padded so that arrays of it will be aligned to 8 bytes
[23:06:08] <jeaye> teut: sizeof(int) == 4, sizeof(char) == 1, so the struct is 5 bytes, with padding up to 8.
[23:06:26] *** Joins: jokoon (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4)
[23:06:26] <teut> yes GeDaMo , was asking that only
[23:06:38] <jeaye> Note that the sizeof values are just for this machine. Don't count on them being the same on another machine.
[23:06:43] <teut> wait , arrays?
[23:06:54] <GeDaMo> If you wanted to make an array of structs
[23:07:20] <GeDaMo> e.g. struct baz arr[10];
[23:07:25] <teut> you got some website link for this thing too?
[23:07:49] <jeaye> Any book on C or C++ will do.
[23:08:07] <teut> ya, I need to complete K & R then
[23:08:18] <teut> will take a long time
[23:08:47] <jeaye> Books are going to be much more useful than teeth pulling in here.
[23:09:21] <teut> there are lot of books and I cant ask the book, tell this question
[23:09:27] <PamiPetteri> I like C's typedef when used to make a struct. elegantly it can be named "complex" as in complex number.
[23:09:32] <Inari> As well as trying around with a compiler and small code snippets
[23:09:34] <teut> tell answer to this question*
[23:09:51] <jeaye> teut: Any intro book to C or C++ will cover all that we've been discussing today.
[23:10:02] <PamiPetteri> I have learned python lately but am heavily medicated during the night time.
[23:10:03] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[23:10:03] <jeaye> Or YT videos or paid courses or whatever you prefer which is oriented around teaching you this material.
[23:10:17] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 264 seconds)
[23:10:26] <teut> no , no YT doesnt have good enough content on this
[23:10:40] <jeaye> If you say so.
[23:11:14] <teut> books, to find the relevant piece of info, you have to parse through a lot of stuff which you dont need right now
[23:11:26] <PamiPetteri> arr[0].name="Lauri"; arr[1].name="Peter";
[23:11:54] * jeaye bows out.
[23:12:00] <PamiPetteri> teut: simple enough? what do you actually want to do?
[23:12:04] <teut> I was reading kernighan and richardson  and realised that a lot of features which I do not need in most programs were occuring in plenty
[23:12:26] <PamiPetteri> oh I was thinking of Python.
[23:12:51] <teut> finding the right book is very difficult
[23:13:32] <PamiPetteri> strcpy(arr[0].name, "foo"); strcpy(arr[1].name, "bar");
[23:16:55] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:719e:a0a5:6129:cf10) (Read error: Connection reset by peer)
[23:21:32] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: Visit me at: gopher://gcpp.world)
[23:22:19] *** Joins: calcmandan (~quassel@user/calcmandan)
[23:22:30] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[23:26:24] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[23:28:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:29:53] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:29:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:30:57] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[23:34:26] *** Quits: magla (~gelignite@55d4b17a.access.ecotel.net) (Quit: Stay safe!)
[23:36:02] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[23:37:01] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:37:15] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:37:17] *** Quits: xff0x (~xff0x@2001:1a81:53a2:cb00:c07c:d089:8b2f:814c) (Ping timeout: 264 seconds)
[23:37:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:37:30] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:37:39] *** Joins: xff0x (~xff0x@2001:1a81:53a2:cb00:fe64:bcbc:d8a9:c1f9)
[23:38:27] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[23:38:30] *** Joins: llh (~llh@user/llh)
[23:38:38] *** Quits: cm007magnum (~Rheanna@218.78.27.29) (Remote host closed the connection)
[23:39:34] *** Quits: jokoon (~eio@2a01:e0a:542:e160:4037:f76a:393e:eff4) (Quit: Leaving)
[23:41:00] *** Joins: pavonia (~user@user/siracusa)
[23:41:49] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[23:45:04] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:14] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: The Lounge - https://thelounge.chat)
[23:46:32] <extern> a
[23:47:02] *** Quits: user51 (~user51@176.228.115.184) (Remote host closed the connection)
[23:47:23] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[23:48:59] *** Joins: zaher (~zaher@37.48.188.143)
[23:51:10] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[23:51:12] *** Joins: kinduff (~kinduff@user/kinduff)
[23:51:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:51:26] *** Joins: Cashlin (~hp@user/cashlin)
[23:54:03] *** Joins: _inky (~inky_@46.36.119.235)
[23:56:02] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[23:56:04] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[23:56:20] *** Quits: locky (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Read error: Connection reset by peer)
[23:56:29] *** Quits: teut (~teut@122.162.88.202) (Quit: Client closed)
[23:58:00] *** Joins: Pickchea (~private@user/pickchea)
[23:59:12] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
