[00:01:04] *** Quits: malloy (~jimery@120.235.172.170) (Ping timeout: 265 seconds)
[00:05:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[00:05:38] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[00:07:15] *** Joins: malloy (~jimery@120.235.172.170)
[00:13:33] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[00:14:08] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[00:14:50] *** Joins: paul424 (~tom@ip-5-172-239-183.multi.internet.cyfrowypolsat.pl)
[00:15:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:16:53] <rpav> dammit what's the nodiscard warning
[00:17:07] <rpav> i should keep a gist of the warning-errors i usually use
[00:17:14] <ville> ashafq: https://www.snellman.net/blog/archive/2016-12-13-ring-buffers/ this could be a fun read
[00:17:49] <ashafq> ville: Thank you very much!
[00:17:56] <ville> ashafq: and then there's the whole mmap situation if you want to go that route
[00:19:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:19:02] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[00:19:20] <ville> also never ignore an article by the ryg: https://fgiesen.wordpress.com/2010/12/14/ring-buffers-and-queues/ or https://fgiesen.wordpress.com/2012/07/21/the-magic-ring-buffer/
[00:19:24] <cbreak> rpav: -Wall -Weverything -pedantic -Werror? :)
[00:19:34] *** Joins: malloy (~jimery@120.235.172.170)
[00:20:20] <rpav> nah can't -Weverything -Werror, but there are a few good -Werror
[00:20:26] *** Joins: skapata (~Skapata@user/skapata)
[00:20:30] <rpav> -Werror=return-type and one or two others i forget
[00:20:40] <rpav> i don't write them all the time
[00:21:02] <rpav> -Werror=unused-result
[00:21:06] <rpav> also a few -Wno:
[00:22:24] <ashafq> ville: Thanks again. Reading them now ðŸ˜Š
[00:24:56] <cbreak> rpav: I try to use -Werror, and then cut out stuff with -Wno-error later
[00:26:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[00:32:22] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[00:32:42] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[00:32:44] *** Quits: paul424 (~tom@ip-5-172-239-183.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:34:24] *** Joins: luizfrds (~Luiz@152.250.243.147)
[00:35:41] <ashafq> ville: So I guess the problem is when read and write crosses over, the ringbuffer state is totally undefined.
[00:37:36] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:38:14] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:41:02] <ville> umm... well you have to make a decission what kind of a buffer it is, does it drop the new data on the floor, does it drop the old data on the floor, does it block if its between threads...
[00:41:33] <ville> does it grow to accomodate? does it grow only upto a point...
[00:42:26] *** Joins: noarb (~noarb@user/noarb)
[00:46:00] *** Joins: noarb- (~noarb@user/noarb)
[00:46:57] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 240 seconds)
[00:47:49] *** Quits: DrMax (~DrMax@node-1w7jra94757g2d7prpws7r2yc.ipv6.telus.net) (Ping timeout: 240 seconds)
[00:48:24] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[00:48:45] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:2ed6:1eb0:fc62:3192)
[00:48:45] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:2ed6:1eb0:fc62:3192) (Changing host)
[00:48:45] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:49:57] <rpav> void* sigh heh
[00:52:51] *** Joins: unyu (~pyon@user/pyon)
[00:55:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:58:55] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[01:01:04] *** Joins: DrMax (~DrMax@node-1w7jra94757fz37lptcdb8pyu.ipv6.telus.net)
[01:01:28] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[01:06:47] *** Inline is now known as UpTheButt
[01:07:13] *** UpTheButt is now known as Inline
[01:09:54] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[01:15:26] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[01:15:52] *** Joins: malloy (~jimery@120.235.172.170)
[01:16:09] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:19:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:20:16] *** Joins: LuckyFire (~LuckyFire@46.217.35.198)
[01:23:42] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:25:23] *** Quits: robod34 (~Username@79.113.243.73) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:39:07] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 256 seconds)
[01:42:51] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[01:44:04] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:44:12] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:44:12] *** ChanServ sets mode: +v npaperbot
[01:44:32] *** Joins: blackbird_0 (~blackbird@102.157.62.138)
[01:45:35] *** Joins: filename (~kilitary@188.242.105.134)
[01:46:23] *** Quits: blackbird_0 (~blackbird@102.157.62.138) (Quit: Leaving)
[01:47:27] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:49:56] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[01:51:33] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[01:56:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:2181:1fae:1c0b:d04f)
[01:56:31] *** Joins: ferdna (~ferdna@user/ferdna)
[02:06:40] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[02:08:18] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7ced:662b:151f:9503) (Ping timeout: 268 seconds)
[02:09:30] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7ced:662b:151f:9503)
[02:13:07] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 256 seconds)
[02:13:19] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[02:16:21] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[02:16:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:18:32] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:20:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:27:16] <mort> it seems like you'd often want to take a string_view and use it to look up something into an unordered_map<string, ...>; can that be done without allocating a std::string from the string_view?
[02:28:26] <cbreak> mort: indeed it can, since c++14 I think
[02:28:32] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:65c2) (Quit: Leaving)
[02:29:02] <mort> how do you do that then?
[02:29:07] <mort> unordered_map::find takes a Key&
[02:29:44] <cbreak> seems it's c++20 for unordered
[02:29:53] <cbreak> https://en.cppreference.com/w/cpp/container/unordered_map/find
[02:30:00] <mort> oh :(
[02:30:21] <cbreak> it's c++14 for normal map :P
[02:31:04] <mort> so, wait
[02:31:46] <mort> you're saying people went all the time from the 1980s to like 2025 just accepting that a hash table lookup requires an unnecessary allocation
[02:33:46] <cbreak> no.
[02:33:59] <cbreak> unordered_map is from c++11
[02:34:11] <cbreak> and it's well known to not be a fantastic implementation of a hash table
[02:34:33] <cbreak> string views are c++17 I think, so it's not like this is old
[02:34:49] <cbreak> normally, you'd pass around std::string, since that's fairly cheap and efficient
[02:34:56] <cbreak> or references to them if you don't want your own values.
[02:35:11] <mort> it's not that cheap when you have to allocate a new string every time
[02:35:37] <mort> such as when looking up a key given by a string literal
[02:36:18] <mort> but, well
[02:36:33] <mort> if std::unordered_map isn't meant to be a particularly good or efficient hash map I suppose it's fine
[02:36:43] <cbreak> I don't know if it's meant to be good
[02:36:47] <cbreak> but ... it's not
[02:36:57] <cbreak> well, it's not exactly bad, but ... there are ways to improve it.
[02:37:27] <mort> I'm aware of the issue that you can't make a non-bucked-based map, and obviously there's this issue; are there more? And is it mainly quality of implementation issues or specification issues?
[02:38:03] <mort> I've done some benchmarking between absl's hash maps and unordered_map and my own hash maps and, man, I agree that unordered_map is far from good
[02:38:33] <cbreak> I've never actually benchmarked it
[02:39:00] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:a132:2b5b:ce74:5a64) (Ping timeout: 252 seconds)
[02:39:30] <cbreak> but indeed, the lack of data locality, and the allocation overhead of buckets is an issue
[02:39:58] <cbreak> the hash function object API is worse than that in boost, even though the boost unordered map and its hash algos predate c++11
[02:40:06] *** Quits: LuckyFire (~LuckyFire@46.217.35.198) (Ping timeout: 252 seconds)
[02:40:32] <mort> that last point is a usability issue not a performance issue, right?
[02:40:37] <cbreak> (boost had nice functional hash functions with an overload based API, similar to begin / end, while c++ ended up with a specialization based hash api
[02:40:40] <cbreak> )
[02:40:45] <cbreak> well. both.
[02:40:54] <cbreak> I have my doubts that the hash function is that great
[02:41:04] <cbreak> and the one in boost provided semi-automated hash combiners
[02:41:31] <cbreak> so if you had a struct with two ints, a string and a float, it could give you a combined hash for those fairly easily
[02:41:44] <cbreak> (and in a way such that the hash value wasn't too bad)
[02:42:10] <cbreak> how would you combine two hashes?
[02:42:42] <cbreak> it's of course possible to do it in a good way yourself, but it's not 100% straight forward.
[02:43:02] <mort> yeah
[02:43:28] <mort> there was a discussion here about that some days ago, about how it really sucks that you can't just put slightly complicated types in unordered_map
[02:43:49] <mort> I had to map a pair of pointers to something and that's way too hard
[02:46:05] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7ced:662b:151f:9503) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:48:29] <cbreak> it was possible in boost fairly easily a decade ago.
[02:48:34] <cbreak> and probably still is...
[02:49:09] <cbreak> https://www.boost.org/doc/libs/1_78_0/doc/html/hash/combine.html
[02:50:19] <mort> ugh fuck google code
[02:50:27] <mort> the abseil pkg-config file adds a billion warning flags
[02:50:45] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[02:51:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[02:53:19] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:55:19] <mort> anyways, i dusted off my old hash table benchmark code: https://p.mort.coffee/7vA.cc
[02:55:24] <mort> seems unordered_map isn't that bad on my system
[02:55:46] <mort> "gilia namespace" is my programming language runtime's purpose-built int->int hash table
[02:56:06] <mort> so it's testing int->int versions of absl and the stdlib
[02:57:02] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[02:57:20] *** Quits: k8yun__ (~k8yun@user/k8yun) (Remote host closed the connection)
[02:57:45] *** Joins: k8yun__ (~k8yun@user/k8yun)
[03:01:00] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d91b:267d:4123:397) (Ping timeout: 240 seconds)
[03:01:14] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:03:01] *** Joins: markong (~kvirc@213.146.188.203)
[03:04:40] <mort> eh idk
[03:04:49] <mort> I think maybe a stupid refcounting system could be ok for the time being
[03:05:15] <mort> then maybe if that turns out to be an issue have a grace period where you keep stuff around for some time after the last reference
[03:05:35] *** Quits: k8yun__ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[03:06:01] <mort> wait sorry, wrong chat, lol
[03:07:02] <cbreak> std::shared_ptr: stupid ref counting system :D
[03:07:12] <mort> yeah, that's the idea
[03:07:25] <mort> that wouldn't quite work for the grace period thing though
[03:07:41] *** Quits: k8yun_ (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[03:07:54] <mort> but one could always move from shared_ptr to a custom CacheRef or something
[03:08:11] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:11:13] <cbreak> why would you want to keep anything around if there's no possible way for anyone to ever access it again? (because the last reference to it just expired)
[03:12:23] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[03:12:44] <mort> this would be a cache for a resource system where there is a source of the data somewhere persistent (in the application binary for shaders, on disk for images)
[03:13:21] <mort> you would ask a cache system for "foo.png", that system could either give you an existing in-memory representation of that image or load it from disk and decode it
[03:14:00] <mort> when the last external (from the cache system's perspective) reference to the in-memory representation of that image is destroyed, it might make sense to keep the memory around for some time in case something else asks for "foo.png" later
[03:14:10] <cbreak> well, then you could use a custom "deleter" instead of delete
[03:14:29] <cbreak> and the deleter just tells your resource system that a resource was just orphaned, and you can move it into the "expired" pool
[03:14:34] <mort> if I had intended to discuss this here I would have introduced the context from the beginning, I realize that keeping stuff around after the refcount goes to 0 is weird :p
[03:14:37] <cbreak> and periodically clean it, or rule-based
[03:15:09] *** Joins: blackout69 (~blackout6@37.183.198.248)
[03:15:10] <mort> that would work, yea
[03:15:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:15:40] <mort> was thinking about keeping the orphaned stuff in a priority queue ordered by the time it got orphaned
[03:17:02] <cbreak> is that useful?
[03:17:02] *** Quits: undephin3d (~undephin3@158.181.75.6) (Ping timeout: 240 seconds)
[03:17:28] <mort> well it would let you iterate over things ordered by the time they got destroyed so that you can efficiently destroy everything older than like 30 seconds, right?
[03:17:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:18:04] <cbreak> but... why would you want to keep something around, at all? Only because you expect it to be used again, right?
[03:18:36] <cbreak> so the rule to destroy things shouldn't be "the oldest", it should be "the least likely to be used again"
[03:18:44] *** Joins: proller (~p@80.240.216.69)
[03:19:11] <mort> how would you quantify that though if not through age?
[03:19:16] <mort> there's a reason LRU caches are common
[03:19:22] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[03:19:25] <cbreak> by number-of-times-it-was-loaded-from-disk
[03:19:36] <cbreak> or maybe number-of-times-it-was-requested
[03:19:45] <mort> maybe
[03:20:10] *** Quits: proller (~p@80.240.216.69) (Remote host closed the connection)
[03:20:49] *** Joins: proller (~p@80.240.216.69)
[03:20:58] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:21:04] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:21:09] <cbreak> there's a reason my file system cache (ZFS) has both MFU and MRU, and the MFU cache is 97% of the size
[03:21:26] <cbreak> hmm... no, not size, hit-rate it seems
[03:22:00] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:22:02] <cbreak> MFU is 88.2% of the size, but 97.6% of the hits
[03:22:16] <cbreak> this obviously depends on your usecase, so ... you could make it dynamic
[03:22:29] <cbreak> (the exact ratio of the two caches in zfs is dynamic)
[03:23:37] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[03:23:44] <mort> would be interesting to read research on how that changes depending on size, like how does it look if both are 50%? Or if LRU is 88.2% of the size?
[03:24:07] <smallville7123> what does   target.pointerIdBits &= ~pointerIdBits;    do
[03:25:51] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:26:50] <cbreak> smallville7123: it's bit math
[03:27:02] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[03:27:04] <cbreak> A &= B is a short form of A = A & B
[03:27:15] <xkoncek> nullifies bits at pointerld
[03:27:16] <cbreak> ~A is bitwise not, while & is bitwise and
[03:27:24] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:27:48] <xkoncek> basically inverse of |=
[03:28:00] <cbreak> the result will have all bits set to 1 that are 1 in the original bits, and NOT in the pointerIdBits
[03:31:46] *** Joins: undephin3d (~undephin3@158.181.75.6)
[03:34:09] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[03:38:17] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[03:39:52] *** Joins: proller (~p@2a02:6b8:b081:b404::1:14)
[03:40:44] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[03:44:12] *** Joins: malloy (~jimery@120.235.172.170)
[03:46:32] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[03:59:45] <RandomReader> mort - here's the original paper, I don't know if there's been recent analysis on it: https://www.usenix.org/legacy/events/fast03/tech/full_papers/megiddo/megiddo.pdf
[04:00:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:03:22] <RandomReader> there have been quite a few more ideas since though, so you can probably find newer algorithms that might discuss it indirectly
[04:08:55] *** Joins: filename (~kilitary@188.242.105.134)
[04:14:54] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[04:15:17] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[04:17:48] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:18:47] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Remote host closed the connection)
[04:21:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:26:40] <smallville7123> A == -1 if ALL bits are 1, right?
[04:28:36] <johnny> this is when it's nicee to just open up python and give it a go
[04:28:43] <johnny> repl time
[04:28:57] <smallville7123> OOF
[04:28:59] <smallville7123> oof *
[04:29:18] *** Joins: filename (~kilitary@188.242.105.134)
[04:29:27] <johnny> or node , since it's a bit more syntatically similar , but of course not that important in this context
[04:29:40] <johnny> i wonder how cling is going these days
[04:33:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:36:39] <Alipha> { unsigned short A = ~0; cout << (A == -1); }
[04:36:40] <geordi> warning: comparison is always false due to limited range of data type
[04:36:48] <Alipha> geordi: -w { unsigned short A = ~0; cout << (A == -1); }
[04:36:49] <geordi> false
[04:37:24] <Alipha> { unsigned short A = ~0; cout << A; }
[04:37:24] <geordi> 65535
[04:38:06] <Alipha> smallville7123: if sizeof(A) >= sizeof(int) or A is signed, then yes.
[04:38:39] <smallville7123> so A == -1 if ALL bits are 1
[04:41:16] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[04:41:58] *** Joins: codedChaos (~William@static-24-233-200-9.md.cpe.atlanticbb.net)
[04:43:17] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[04:53:49] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:55:31] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[04:57:47] *** Quits: codedChaos (~William@static-24-233-200-9.md.cpe.atlanticbb.net) (Quit: Leaving)
[05:06:04] *** Quits: pulse (~pulse@user/pulse) (Quit: Join us at https://indiedevs.net/)
[05:15:38] *** Quits: teepee (~teepee@openscad/teepee) (Quit: bye...)
[05:16:37] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:18:22] *** Joins: teepee (~teepee@openscad/teepee)
[05:18:33] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:22:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:24:46] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[05:25:24] <Alipha> smallville7123: yes, generally
[05:26:01] <Alipha> geordi: -w { unsigned short A = ~0; cout << (A == -1); } // here, A is "all bits are 1"
[05:26:02] <geordi> false
[05:27:17] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[05:29:34] <smallville7123> oof
[05:29:40] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:29:48] <smallville7123> its false, not true
[05:30:42] <InPhase> geordi: -w { unsigned short A = ~0; cout << (A == decltype(A){-1}); }
[05:30:43] <geordi> true
[05:33:37] *** Joins: filename (~kilitary@82.148.25.66)
[05:34:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:37:37] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:38:04] *** Joins: CaCode (~CaCode@user/cacode)
[05:44:04] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:44:14] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:44:14] *** ChanServ sets mode: +v npaperbot
[05:46:16] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:d82d:89c0:e177:c2f7:c9a9) (Remote host closed the connection)
[05:49:41] *** Joins: _filename (~kilitary@188.242.105.134)
[05:50:45] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[05:50:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:51:52] *** Quits: filename (~kilitary@82.148.25.66) (Ping timeout: 250 seconds)
[05:51:59] *** _filename is now known as filename
[05:54:15] *** Joins: letto (~letto@188.26.158.114)
[05:58:13] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[06:01:44] *** Joins: filename (~kilitary@188.242.105.134)
[06:07:57] *** Joins: Inline__ (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[06:08:25] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:2181:1fae:1c0b:d04f) (Quit: Quit)
[06:10:30] *** Quits: Inline (~Inline@p200300cd470af600c32f3b3744c2844b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:11:18] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[06:17:23] *** Joins: geli (~gelignite@d536146e.access.ecotel.net)
[06:18:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:19:56] *** Quits: magla (~gelignite@55d49742.access.ecotel.net) (Ping timeout: 245 seconds)
[06:22:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:23:36] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[06:24:25] *** Joins: ferdna (~ferdna@user/ferdna)
[06:28:21] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[06:28:49] *** Joins: CaCode (~CaCode@user/cacode)
[06:46:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:52:08] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:54:42] *** ravan_ is now known as ravan
[06:55:29] *** Joins: k8yun_ (~k8yun@user/k8yun)
[06:58:04] *** Joins: k8yun__ (~k8yun@user/k8yun)
[06:58:43] *** Quits: ARoxdale (~ARoxdale@93.107.214.80) (Ping timeout: 256 seconds)
[07:01:25] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[07:01:54] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:03:05] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[07:03:44] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[07:04:47] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[07:08:49] *** Joins: adeliktas7 (~adeliktas@i59F4D808.versanet.de)
[07:10:44] *** Quits: adeliktas (~adeliktas@i59F5FD1E.versanet.de) (Ping timeout: 250 seconds)
[07:10:45] *** adeliktas7 is now known as adeliktas
[07:11:22] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[07:19:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:21:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:22:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:31:44] *** Quits: Tokamak (~Tokamak@172.58.188.132) (Read error: Connection reset by peer)
[07:35:31] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[07:36:01] *** Joins: Tokamak (~Tokamak@172.58.188.132)
[07:40:15] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[07:43:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[07:44:56] *** Joins: CaCode (~CaCode@user/cacode)
[07:53:12] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:06:17] *** Quits: undephin3d (~undephin3@158.181.75.6) (Ping timeout: 240 seconds)
[08:09:53] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[08:10:25] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[08:13:08] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[08:17:07] *** Quits: geli (~gelignite@d536146e.access.ecotel.net) (Quit: Stay safe!)
[08:19:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:23:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:49:33] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5576:5234:dd88:34d3)
[09:11:03] *** Joins: filename (~kilitary@188.242.105.134)
[09:14:29] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[09:20:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:23:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:30:31] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[09:39:49] *** Joins: cursey_ (~cursey@user/cursey)
[09:40:14] *** Quits: cursey (~cursey@user/cursey) (Ping timeout: 250 seconds)
[09:41:07] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[09:41:32] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[09:44:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:44:13] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:44:13] *** ChanServ sets mode: +v npaperbot
[09:55:21] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:05:31] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6103)
[10:09:04] *** Joins: p-i- (~Ohmu@171.6.228.218)
[10:15:26] *** Quits: p-i- (~Ohmu@171.6.228.218) (Remote host closed the connection)
[10:20:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:24:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:25:47] *** Joins: filename (~kilitary@188.242.105.134)
[10:28:13] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:30:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:32:40] <xkoncek> has any of you ever written a skip list? we didn't have that at uni, i have no idea how simple it is
[10:33:23] <xkoncek> second question: is there some hybrid data structure that combines the simplicity of linked list with efficiency of a node-based heap?
[10:35:32] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:35:51] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[10:36:32] *** Quits: emerent (~quassel@p200300cd5743c3f1ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:36:34] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[10:37:45] *** Joins: emerent (~quassel@p200300cd5743c3f5ba27ebfffed28a59.dip0.t-ipconnect.de)
[10:39:18] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[10:40:32] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:40:40] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:40:54] <smallville7123> how do i merge two lists without having multiple occurrences of the same element(s)
[10:41:28] <xkoncek> smallville7123 in that case, don't you want a set?
[10:41:50] <smallville7123> yes
[10:41:59] <smallville7123> but i need to produce a new list
[10:43:52] <xkoncek> if you don't care about wasting microseconds, just just standard containers and their constructors that take iterators as parameters
[10:44:47] *** Joins: filename (~kilitary@188.242.105.134)
[10:47:17] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:48:07] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[10:48:32] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:49:52] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:52:26] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:53:19] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[10:57:00] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::43) (Ping timeout: 240 seconds)
[11:00:18] *** Quits: nq (~nq@2a02:2f08:e015:a900:4c2b:6fcb:65:18e) (Quit: Leaving)
[11:01:53] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[11:02:04] *** Joins: manjaro-user (~manjaro-u@199.119.235.244)
[11:03:49] *** Quits: ville (~ville@user/ville) (Quit: ville)
[11:04:39] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[11:05:54] *** Joins: ravan_ (~ravan@42.201.198.151)
[11:05:54] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[11:05:54] *** Joins: ravan_ (~ravan@user/ravan)
[11:06:55] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[11:07:40] *** Joins: ville (~ville@user/ville)
[11:12:50] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[11:14:37] *** Quits: letto (~letto@188.26.158.114) (Ping timeout: 240 seconds)
[11:21:46] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:24:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:36:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[11:40:52] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:43:02] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:43:02] *** manjaro-user is now known as Kill-Animals
[11:46:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[11:47:44] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[11:49:43] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[11:52:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:57:25] *** Quits: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt) (Ping timeout: 240 seconds)
[11:57:56] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[12:06:40] *** Joins: robod34 (~Username@79.113.243.73)
[12:16:48] *** Joins: xkuru (~xkuru@user/xkuru)
[12:22:21] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:25:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:30:52] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[12:33:26] *** Joins: evangeline (~Eleanor@178.79.105.181)
[12:36:25] *** Joins: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e)
[12:37:11] <very_sneaky> LordKalma: i'm quietly worried that conan docs won't be well maintained
[12:37:32] <very_sneaky> the last comment i saw about them was "we're not going to bother with docs until conan 2.0 is released"
[12:38:10] <very_sneaky> such a bad process. they should mandate all PRs have an associated doc update, and not be merged until there is docs for them
[12:39:19] <LordKalma> yes
[12:39:23] <LordKalma> I've noticed
[12:39:29] <LordKalma> I don't like it either
[12:41:19] <ville> i like it
[12:43:44] <LordKalma> writing documentation at the last possible moment?
[12:43:54] <ville> it's the "i've changed. this time i will not beat you. i promise" model.
[12:44:29] <very_sneaky> leaving documentation to the end means not doing documentation. there are always higher priorities
[12:44:34] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:45:03] <ville> i like it because it spells trouble for non-distro packaging system
[12:45:09] <johnny> pretty sure ville knows htat very_sneaky
[12:45:20] <very_sneaky> ville: i was literally just thinking that was your motivation hahaha
[12:45:36] <johnny> after distro messes i still hat the distro packages
[12:45:47] <johnny> you can't have multiple versions to cover different projects.. which makes the whole thing super dumb
[12:46:03] <johnny> wehther that be debian, rhel, fedora, opensuse, arch
[12:46:09] <johnny> only nix covers it
[12:46:14] <johnny> well distros like nix and guix
[12:46:49] <johnny> which im' theoretically a fan of, but haven't jumped in yet
[12:46:59] <ville> johnny:  yes that's a separate issue, not a property of distro packaging. although as you point out manifests in most current distro packaging systems.
[12:47:28] <johnny> it doesn't matter if it prevents you from using hte idstor packaging.. it by itself is a non starter
[12:47:47] <johnny> no point in worry about anything else until that is fixed
[12:47:55] <ville> as in you could, at least in theory, have distro packaging that didn't have that limitation. so far no major distro has pulled it off other than for major releases of big packages
[12:48:05] <johnny> yeah because the maintenance burden is too high
[12:48:16] <johnny> the support in most of the package managers is there
[12:48:25] <johnny> there's no technical limitations for most of them anyways
[12:48:29] <ville> you probaby can find gtk1 still packaged on some?
[12:48:44] <very_sneaky> yes, i find it very frustrating that there aren't legacy packages of clang and gcc
[12:48:47] <johnny> sure, becuase applications use htem
[12:48:49] <ville> you just have gtk1, gtk2, gtk3... packages
[12:48:59] <johnny> that's only because applications in the distro use them, they're not for developers
[12:49:12] <johnny> they're for support for building the applications that the distro hapepns to ship at that moment in time
[12:49:16] <ville> very_sneaky: arch has pretty good coverage... ok there isn't gcc 1.x
[12:49:23] <very_sneaky> ville: does it??
[12:49:40] <very_sneaky> that's what i'm using - there was some coverage of clang in the aur from memory, but it was spotty at best
[12:49:40] <ville> or better say AUR has it. which of course arch doesn't support
[12:49:41] *** Joins: paul424 (~tom@ip-5-172-239-3.multi.internet.cyfrowypolsat.pl)
[12:49:44] <very_sneaky> and i don't remember any gcc
[12:50:11] <ville> aur/gcc34-bin 3.4.6.4.1-3 (0, 0.00)
[12:50:12] <very_sneaky> i think docker containers are my saviour here
[12:50:19] <very_sneaky> huh. maybe i missed that
[12:50:21] <ville> that's the oldest i can see
[12:50:37] <johnny> not me though.. i'd prefer something like pyenv but for compilers
[12:50:58] <johnny> although i guess you could put THAT in a container
[12:51:05] <ville> aur/clang35 3.5.2-8 (1, 0.00)
[12:51:45] <johnny> very_sneaky, since i do embedded stuff, i have a copy of the arm embedded branch of gcc from the arm folks.. and i just rely on CC via direnv
[12:52:00] <johnny> and of course also using that to add the compiler to the path
[12:55:02] <very_sneaky> i've mostly offloaded the task of other-compiler compilation to my CI's now
[12:55:40] <very_sneaky> i just use conanio/{clang,gcc}XY-ubuntu16.04 images for all my compilation now
[12:55:49] <very_sneaky> doesn't do windows or mac - i should sort that out
[12:56:00] <johnny> well i have to flash the physical device, so that won't do
[12:57:11] <very_sneaky> you can't crosscompile?
[13:00:16] <johnny> i do
[13:00:22] <johnny> that's the only way it works
[13:00:34] <johnny> i compile it for arm and then flash it
[13:01:23] <very_sneaky> gotcha, so if there was an arm conan image it would be fine
[13:01:33] <very_sneaky> or, at least the arm compilers
[13:01:40] *** Quits: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e) (Excess Flood)
[13:02:21] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:02:26] <johnny> i guess, but i haven't bothered with conan since it seems unlikey that enough libraries have code meant to run on these little thingies.
[13:02:58] <johnny> i have 1mb flash and 256kb ram on the most powerful one
[13:03:25] <very_sneaky> maybe, it has the capacity to build stuff for watchOS and android
[13:03:32] <very_sneaky> though, they're getting more powerful now
[13:03:43] <johnny> both of htose are massively more powerful than this
[13:04:05] <johnny> or rather run more massively more powerful and have more storage
[13:04:28] <very_sneaky> fair enough.
[13:04:59] <johnny> i just wish i wasn't stuck with cmake
[13:05:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:06:03] <johnny> if i switch underlying rtos.. i might get Kconfig based instead.. lol
[13:06:12] <ville> speaking of which i was trying out a microcontroller board the other night, managed to pick 4 usb cables that only had power pins connected before the 5th and last one i had with right connectors had all the pins connected. should add the usb spec designers on my list of people to kill with a time machine
[13:06:54] <johnny> or just get them to spec it right instead
[13:07:04] <johnny> i've definitely run into that myself with power only cables
[13:07:25] <johnny> probably ones that came with chargers shipped with a phone
[13:07:51] <johnny> i was surprised to see that my newest acquisition has a usb c port on it
[13:08:39] <ville> you can now get usb-c pretty good even on the cheap crap off aliexpress
[13:09:14] <ville> search for something like "arduino micro" and there're likely sellers that give you choice of usb connector
[13:11:41] <ville> just about any usb-a connector has that usb trident on it. they should have designed different styles of it for different types of cable
[13:14:48] *** Joins: ARoxdale (~ARoxdale@93.107.214.80)
[13:18:09] <LordKalma> so ville has a vile agenda against package managers
[13:19:34] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[13:22:08] *** Quits: Inline__ (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:22:40] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:23:01] <ville> no, i am against non-distro package managers specifically
[13:23:05] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[13:23:17] <TinoDidriksen> Agreed.
[13:23:27] <TinoDidriksen> Distro package managers are best.
[13:23:59] <very_sneaky> not by any metric that's friendly to developers
[13:24:48] <TinoDidriksen> I find it the opposite. apt-get is so much nicer.
[13:24:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:25:14] <TinoDidriksen> Why should I have to use pip/conan/node/composer/etc when I already have a distro manager?
[13:26:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:26:36] <very_sneaky> if distro managers handled multiple versions of the same libraries more robustly it might be more competitive
[13:27:00] <TinoDidriksen> I don't want multiple versions. I want the code to work with the distro version.
[13:27:03] <very_sneaky> but, like, in python there's a massive deal about package isolation on a per-project basis to solve exactly that issue
[13:27:22] <very_sneaky> what if you have different projects that all have dependencies on different versions of the same package?
[13:27:30] <LordKalma> well, that's a balance
[13:27:31] <TinoDidriksen> Then those projects are bad.
[13:27:47] <TinoDidriksen> Projects should work with whatever is available in the distro.
[13:27:49] <very_sneaky> what, all projects need to coordinate to reach consensus on the package version to use?
[13:28:04] <LordKalma> for example ecosystems like JS that run fast as hell are impossible to package on the distro
[13:28:08] <very_sneaky> doesn't sound practical
[13:28:14] <TinoDidriksen> No need to coordinate - just use distro packages.
[13:28:17] <LordKalma> especially because they are API incompatible all the time
[13:28:23] <LordKalma> which distro?
[13:28:26] <TinoDidriksen> All of them.
[13:28:29] <very_sneaky> which package?
[13:28:31] <very_sneaky> which version?
[13:28:33] <TinoDidriksen> All of them.
[13:28:41] <TinoDidriksen> Yes really.
[13:29:07] <very_sneaky> i think you're ignoring the practicalities associated with evolving api's
[13:29:52] <LordKalma> Well, by that way of reasoning, I would be forbidden of using Qt 6
[13:29:58] <LordKalma> (for example)
[13:30:31] <LordKalma> and then you have a massive chicken and egg problem. Distros won't package Qt 6 because nobody is on qt 6 because distros didn't package it because devs aren't using because ....
[13:30:37] <TinoDidriksen> What I do and what we do in Apertium - we build against the distro version of all supported Debian, Ubuntu, Fedora, RedHat, SUSE. If a strongly desired library is not available, then we will package it ourselves, but still build that against distros.
[13:30:46] <TinoDidriksen> Yes, Qt 6 is too new.
[13:31:09] <LordKalma> I do aknowledge all the advantages of distro packaging, and it's great and all, but not compatible with wanting to move faster
[13:31:14] <TinoDidriksen> Correct
[13:31:27] <TinoDidriksen> Takes ~5 years for a new library to be widely usable.
[13:31:44] <LordKalma> installing boost-dev and being able for it to just work is nice, not gonna lie
[13:31:50] <LordKalma> but I want to move faster myself
[13:31:55] <LordKalma> so it's nice to have options
[13:32:10] <very_sneaky> i get a pretty similar experience with conan (now that i know how to use it)
[13:32:23] <very_sneaky> `conan install boost/1.78.0@`
[13:32:37] <LordKalma> that said
[13:32:45] <LordKalma> with things like python, and node, it's nice to have venvs
[13:32:52] <very_sneaky> (and conan)
[13:33:02] <LordKalma> I'm a user of conda myself
[13:33:21] <LordKalma> mostly because historical reasons and because I haven't bothered to check what's the "latest" venv tech stack
[13:33:37] <LordKalma> and I use it at work, I use it for my personal projects
[13:34:03] <very_sneaky> venv is pretty flexible. it doesn't build other language dependencies though, so building numpy for example will fail witohut having CC/CXX set
[13:34:13] <very_sneaky> pip doesn't*
[13:34:22] <LordKalma> it's nice to be able to have an environment with my work stuff, that require a specific python version, an environment with django 3 for my website project, etc etc
[13:34:29] <LordKalma> sometimes "dev" environments to fuck around
[13:34:47] <TinoDidriksen> Docker is nice for that.
[13:35:04] <LordKalma> yeah, true
[13:35:10] <LordKalma> I use docker for the deployment of the website
[13:35:25] <LordKalma> in fact, in my VPS I only use docker for enything
[13:35:32] <LordKalma> if it doesn't have a docker imaage, I'll make one
[13:35:51] <LordKalma> it's soooo nice to be able to just delete the image when I make mistakes
[13:35:54] <LordKalma> which I do, a *lot*
[13:36:12] <LordKalma> instead of irremediably break my server
[13:36:51] *** Quits: ARoxdale (~ARoxdale@93.107.214.80) (Ping timeout: 256 seconds)
[13:38:56] <very_sneaky> well, my gitlab ci pipeline is starting to take shape now. Building for gcc9/10/11 clang11/12/13, deploying the conan packages and building/deploying documentation to a gitlab pages site on every commit
[13:39:38] <very_sneaky> need to add in static analysis and security analysis and it will be chugging along nicely
[13:40:20] <LordKalma> there's a package in the gibhub CI library that allows you to write the flows in python
[13:40:24] <LordKalma> I'm going to try it eventually
[13:41:53] <very_sneaky> hm, i wonder if that's preferable
[13:42:09] <very_sneaky> the matrix directive in github actions does most of what i need it to
[13:43:48] <very_sneaky> what's annoying about github actions is configuring the appropriate gcc or clang version - need to mess around with ppa's and update-alternatives
[13:44:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:44:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:44:15] *** ChanServ sets mode: +v npaperbot
[13:44:19] <very_sneaky> with gitlab i just do `image: conanio/${COMPILER}${VERSION}-ubuntu16.04`
[13:45:08] <LordKalma> yeah, it'd be cool if they supported docker
[13:47:50] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[13:52:48] <very_sneaky> i've just learnt an important lesson about resourcing though. 6 parallel builds on 1 vCPU leads to incredibly slow build times
[13:59:02] *** Joins: jokoon (~eio@2a01:e0a:542:e160:9c4e:870d:32c3:343a)
[13:59:50] <LordKalma> who would have guessed
[14:06:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:08:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:09:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:10:17] *** Joins: callq (~callq@2409:4062:4e9a:a9bd:6456:ab6c:e293:181b)
[14:10:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:11:45] <jokoon> any idea how to put a breakpoint when something inserts something into a std::map ?
[14:11:56] <jokoon> on visual studio
[14:11:58] *** Joins: p-i- (~Ohmu@182.232.217.101)
[14:13:39] *** Quits: p-i- (~Ohmu@182.232.217.101) (Read error: Connection reset by peer)
[14:15:32] <ville> jokoon: navigate to the map header and hit f9?
[14:16:25] <ville> jokoon: easiest way to get to the right spot is probably just write a simple: std::map<int, int> xs; xs.insert({0, 0}); and jump-to-definition from that
[14:17:14] <ville> was f9 breakpoint toggle in visual studio? i can't remember it's been some years i used it
[14:20:23] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[14:20:26] <jokoon> yes it is
[14:20:57] <jokoon> I used "step into" but it just skips everything, doesn't go to some header
[14:21:13] <jokoon> I used m[1] = 321;
[14:22:06] <ville> not step into. jump-to-definition
[14:22:08] <jokoon> same for insert
[14:22:15] <ville> also try use the m.operator []() form? some editors are funny when it comes to operators and can't jump i
[14:23:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:23:26] <ville> is that a debug build or a release build?
[14:23:28] <jokoon> did not trigger in insert()
[14:23:31] <jokoon> debug
[14:23:39] <jokoon> going to look for operator[]
[14:23:51] <ville> "did not trigger" meaning?
[14:24:07] <jokoon> did not trigger my breakpoint
[14:24:18] <jokoon> although I found operator[] by click find definition
[14:24:39] <ville> yes if you use operator [] then breakpoint on insert() is not necessarily hit
[14:25:01] <jokoon> ok so I need to disable it until re-enable it
[14:26:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[14:26:33] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:26:37] <jokoon> problem is that I want to target one specific instance of a map
[14:26:51] <jokoon> maybe with a conditional breakpoint
[14:26:53] <ville> then set a watchpoint on that variable?
[14:27:32] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Ping timeout: 240 seconds)
[14:27:32] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[14:27:50] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[14:28:42] <ville> https://docs.microsoft.com/en-us/visualstudio/debugger/watch-and-quickwatch-windows?view=vs-2019
[14:29:25] <ville> also it's amazing that they've hardcoded the number of watch windows
[14:29:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:31:28] <jokoon> "break when value changes" ?
[14:32:12] <jokoon> https://i.imgur.com/vAY9u4S.png
[14:32:53] *** Joins: p-i- (~Ohmu@2001:44c8:474e:76a:5cd4:c54e:8492:a95)
[14:34:16] *** Joins: p-i-_ (~Ohmu@182.232.217.101)
[14:37:02] *** Quits: p-i- (~Ohmu@2001:44c8:474e:76a:5cd4:c54e:8492:a95) (Ping timeout: 240 seconds)
[14:39:48] <jokoon> I just put breakpoints where there was the [] operators I wanted
[14:39:54] <jokoon> found the culprit
[14:40:15] *** Quits: malloy (~jimery@120.235.172.170) (Ping timeout: 265 seconds)
[14:45:01] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:46:32] *** Joins: malloy (~jimery@120.235.172.170)
[14:46:53] <CarloWood> jokoon: are you on a 32bit OS?
[14:56:58] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[15:00:45] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:06:15] <jokoon> no
[15:06:29] <jokoon> although Im building in x8
[15:06:35] <jokoon> x86
[15:13:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:17:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[15:20:52] *** Joins: markong (~kvirc@213.146.188.203)
[15:21:57] *** Joins: meator (~meator@user/meator)
[15:23:15] <meator> Hi. What's the difference between std::ldiv_t div( long x, long y ) and std::ldiv_t ldiv( long x, long y )?
[15:23:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:24:06] <TinoDidriksen> None in C++. The different names are from C, because C can't overload.
[15:25:19] *** Joins: letto (~letto@188.26.158.114)
[15:27:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:27:25] <meator> Ok, thanks!
[15:31:42] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[15:35:32] *** Joins: plastico (~plastico@neomutt/plastico)
[15:37:41] *** Quits: paul424 (~tom@ip-5-172-239-3.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:37:52] *** Joins: malloy (~jimery@120.235.172.170)
[15:41:24] *** Quits: p-i-_ (~Ohmu@182.232.217.101) (Remote host closed the connection)
[15:42:54] *** Quits: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net) (Remote host closed the connection)
[15:46:12] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[15:46:18] *** Joins: p-i- (~Ohmu@2001:44c8:474e:76a:6424:3e5b:dcb:5201)
[15:55:30] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:55:35] *** Quits: p-i- (~Ohmu@2001:44c8:474e:76a:6424:3e5b:dcb:5201) (Remote host closed the connection)
[16:03:17] *** Quits: Alipha (~AliphaX@user/alipha) (Ping timeout: 256 seconds)
[16:08:38] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[16:11:27] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6103) (Quit: Leaving)
[16:12:01] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 245 seconds)
[16:12:26] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:14:43] *** Joins: malloy (~jimery@120.235.172.170)
[16:14:53] *** Joins: Alipha (~AliphaX@user/alipha)
[16:16:01] *** Joins: p-i- (~Ohmu@49.228.217.130)
[16:24:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:26:09] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[16:26:32] *** Quits: callq (~callq@2409:4062:4e9a:a9bd:6456:ab6c:e293:181b) (Ping timeout: 240 seconds)
[16:27:45] *** Quits: ravan_ (~ravan@user/ravan) (Read error: Connection reset by peer)
[16:27:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[16:29:25] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[16:35:10] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[16:36:32] *** Quits: Kill-Animals (~manjaro-u@199.119.235.244) (Ping timeout: 240 seconds)
[16:37:36] *** Quits: p-i- (~Ohmu@49.228.217.130) (Remote host closed the connection)
[16:38:12] *** Joins: p-i- (~Ohmu@49.228.217.130)
[16:38:32] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[16:42:10] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[16:42:37] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[16:42:57] *** Quits: p-i- (~Ohmu@49.228.217.130) (Ping timeout: 256 seconds)
[16:46:22] *** Joins: p-i- (~Ohmu@49.228.217.130)
[16:46:58] *** Joins: str0 (~str0@178.220.28.32)
[16:49:17] *** Joins: Kakurady (~nekoyasha@207.236.147.169)
[16:50:14] *** Quits: Kakurady (~nekoyasha@207.236.147.169) (Client Quit)
[16:50:52] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[16:51:36] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c881:2ac6:eb65:ad08)
[16:52:58] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Quit: Leaving)
[16:53:11] *** Quits: p-i- (~Ohmu@49.228.217.130) (Remote host closed the connection)
[16:53:14] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[16:53:26] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[16:53:45] *** Joins: meator (~meator@user/meator)
[16:56:20] *** Joins: pulse (~pulse@user/pulse)
[16:57:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:59:21] *** Joins: magla (~gelignite@d536146e.access.ecotel.net)
[16:59:33] *** gentooclimax is now known as climax
[17:00:16] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:02:59] *** Joins: Msandoy (~Msandoy@telia-59089f-40.connect.netcom.no)
[17:07:04] *** climax is now known as gentooclimax
[17:07:45] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:10:20] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[17:17:48] *** Joins: hackinghorn (hackinghor@user/hackinghorn)
[17:18:48] <hackinghorn> hi, I'm thinking who is funding the C++ compilers and standard for people to work on them every day?
[17:19:52] <ville> companies and in some cases goverments presumably. i don't know how every country's standard organizations function
[17:19:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:20:50] <ville> which companies correlates strongly with the employers of the people in the committee
[17:24:12] *** Joins: Msandoy_ (~Msandoy@telia-59089f-40.connect.netcom.no)
[17:24:18] *** Quits: Msandoy (~Msandoy@telia-59089f-40.connect.netcom.no) (Remote host closed the connection)
[17:24:40] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:25:50] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:26:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:26:23] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[17:26:41] *** Joins: meator (~meator@user/meator)
[17:28:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[17:29:15] <cbreak> I think the standard committee is democracy-paid-for-by-employers usually
[17:30:05] <cbreak> so, compiler vendors, os vendors and similar probably
[17:34:51] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 256 seconds)
[17:44:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:44:14] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:44:14] *** ChanServ sets mode: +v npaperbot
[17:44:21] *** gentooclimax is now known as climax
[17:46:35] *** Joins: darkbit (~db@152.32.100.99)
[17:47:03] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[17:47:21] *** Joins: meator (~meator@user/meator)
[17:48:07] *** climax is now known as gentooclimax
[17:50:59] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:57:13] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:58:09] *** gentooclimax is now known as climax
[17:58:49] <LordKalma> prettu much everybody with real stakes in the game, I'd assume
[17:58:55] <LordKalma> same as the linux kernel, and many others
[18:03:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:04:53] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:11:36] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:16:47] *** Joins: ferdna (~ferdna@user/ferdna)
[18:17:38] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[18:17:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[18:19:50] *** Joins: pulse (~pulse@user/pulse)
[18:24:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:26:26] *** climax is now known as gentooclimax
[18:28:24] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Quit: joined libera)
[18:28:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[18:30:03] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[18:30:24] *** Quits: jokoon (~eio@2a01:e0a:542:e160:9c4e:870d:32c3:343a) (Quit: Leaving)
[18:31:31] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:33:59] <LordKalma> https://godbolt.org/z/84vvWMMeq
[18:34:04] <LordKalma> do you know why this error happens?
[18:34:08] <LordKalma> doesn't happen on msvc
[18:36:06] <LordKalma> (nevermind the weirg argument, std::size_t value is what I want, but gives the error anyway)
[18:36:26] *** gentooclimax is now known as climax
[18:37:00] <LordKalma> accepts unsigned long long...
[18:39:20] <cbreak> LordKalma: https://en.cppreference.com/w/cpp/language/user_literal
[18:39:28] <cbreak> unsigned long long is allowed, size_t isn't
[18:40:55] <LordKalma> ah ok, thanks
[18:41:40] <LordKalma> might as well #define _sz ULL
[18:41:41] <LordKalma> hahah
[18:44:57] *** Joins: pulse (~pulse@user/pulse)
[18:45:02] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[18:52:07] *** Joins: filename (~kilitary@188.242.105.134)
[18:54:10] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[19:04:40] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:2d74:1a23:5767:1547)
[19:04:40] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:2d74:1a23:5767:1547) (Changing host)
[19:04:40] *** Joins: skapata (~Skapata@user/skapata)
[19:05:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[19:06:27] *** Quits: str0 (~str0@178.220.28.32) (Quit: Leaving)
[19:08:55] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:6227:95d6:fb3b:beb0)
[19:10:45] *** Joins: paul424 (~tom@ip-5-172-236-59.multi.internet.cyfrowypolsat.pl)
[19:10:46] *** Joins: tom_ (~tom@ip-5-172-236-59.multi.internet.cyfrowypolsat.pl)
[19:11:28] *** Quits: tom_ (~tom@ip-5-172-236-59.multi.internet.cyfrowypolsat.pl) (Client Quit)
[19:21:39] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[19:25:17] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:26:38] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[19:28:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:31:05] *** Quits: AmR (~AmREiSa@156.207.194.71) (Ping timeout: 268 seconds)
[19:39:32] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 250 seconds)
[19:44:44] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[19:45:15] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[19:46:24] *** Joins: toulene (~toulene@user/toulene)
[19:53:17] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[19:53:59] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[19:57:30] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:58:40] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[19:59:41] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:07:30] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:10:15] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:10:55] *** Joins: blackout69 (~blackout6@37.183.198.248)
[20:12:46] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[20:18:49] *** Joins: rond_ (~rond_@90.254.208.190)
[20:21:39] *** Joins: ravan (~ravan@user/ravan)
[20:22:28] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[20:25:37] *** Joins: keipi (~keipi@82-73-174-146.cable.dynamic.v4.ziggo.nl)
[20:25:48] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:29:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:34:16] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[20:34:19] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[20:35:42] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Remote host closed the connection)
[20:36:09] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[20:39:31] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[20:50:24] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[21:02:04] *** Quits: letto (~letto@188.26.158.114) (Quit: Konversation terminated!)
[21:06:32] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:06:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[21:07:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:59] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:10:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:11:49] *** Joins: LuckyFire (~LuckyFire@46.217.38.223)
[21:13:39] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[21:14:02] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[21:17:15] <xkoncek> c++23 added "z" and "uz" suffixes, didn't it?
[21:17:22] <xkoncek> {0uz; 0z;}
[21:17:23] <geordi> warning: use of C++23 'make_signed_t<size_t>' integer constant
[21:23:52] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:24:53] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[21:25:55] <xkoncek> i have a following problem, you start with a number like 2**32 - 1, you want to apply operations (N = N / 16 * 9) and the inverse of that (in integer math) and still be able to obtain the exact original
[21:26:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:26:23] *** Quits: LuckyFire (~LuckyFire@46.217.38.223) (Remote host closed the connection)
[21:26:27] <xkoncek> so like, apply that 20 times, then 20 times the inverse and the result would be 2**32 - 1
[21:26:59] <xkoncek> the intermediate numbers don't have to be exactly N / 16 * 9, can be rounded to some floor / ceil
[21:27:45] <xkoncek> applying (| 15) helped a bit but it doesn't work always
[21:29:26] *** Quits: magla (~gelignite@d536146e.access.ecotel.net) (Read error: Connection reset by peer)
[21:29:43] *** Joins: magla (~gelignite@d536146e.access.ecotel.net)
[21:29:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[21:30:28] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:31:12] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Remote host closed the connection)
[21:31:38] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[21:34:13] <xkoncek> and i want to avoid having to remember remainders
[21:34:48] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:40:27] <blackbird_0> xkoncek: You wanna compute the number of operations to restore the original number?
[21:44:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:44:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:44:16] *** ChanServ sets mode: +v npaperbot
[21:45:38] <xkoncek> blackbird_0: you know what octree is? i am doing that with coordinates, except i am not halving them but applying that operation
[21:46:32] <xkoncek> i can go from up down, but i would also like to be able to compute parent's coords
[21:47:15] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[21:48:12] <ville> your octree is laid out in a flat buffer and you want to get the index going either way?
[21:48:59] <xkoncek> i want to be able to compress one-line paths
[21:49:23] <ville> one-line path?
[21:49:34] <xkoncek> so then when i actually need to insert a new node in the middle of the path, i don't want to go from parent down
[21:49:39] <xkoncek> lemme post a pic
[21:51:31] <blackbird_0> xkoncek: To go from down to up, can you use a pointer in each child indicating its parent?
[21:52:27] <xkoncek> https://ibb.co/23BpMPW
[21:52:40] <xkoncek> i use array + index, same semantics as pointers
[21:53:35] <xkoncek> that is why -1 means nullptr
[21:55:36] <xkoncek> oh and i didn't mention: the box coordinates in the pic are fixed-point, they use underlying integers still
[21:56:53] *** Quits: paul424 (~tom@ip-5-172-236-59.multi.internet.cyfrowypolsat.pl) (Ping timeout: 256 seconds)
[21:57:53] <xkoncek> you see what i meant by one-line path?
[22:01:14] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[22:02:23] *** Quits: Brewster (~Brewster@user/brewster) (Read error: Connection reset by peer)
[22:02:34] *** Joins: ARoxdale (~ARoxdale@93.107.214.80)
[22:04:51] <ville> sorry watching quake tournament
[22:06:39] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 252 seconds)
[22:07:24] <ville> something to do with just having one child?
[22:07:59] <ville> so a 43-44-45 would be a one-line path?
[22:08:06] <blackbird_0> xkoncek: Sorry I'm out of ideas here, because I Never worked with this kind of tree
[22:09:05] <ville> or say 56-57-...-65
[22:09:22] *** Joins: paul424 (~tom@ip-5-172-236-166.multi.internet.cyfrowypolsat.pl)
[22:09:44] <blackbird_0> xkoncek: how knowing the parent, can help in insertion?
[22:10:42] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Remote host closed the connection)
[22:11:10] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[22:11:18] <xkoncek> ville 44-45-46 not, but for example the righmost: 82 -> ... -> 90, that can be compressed into 46 -> 90
[22:12:23] <xkoncek> blackbird_0 imagine you want to insert a node in the middle of a compressed path, that needs to recompute its dimensions
[22:12:54] <xkoncek> one way to do it is to go see parent and do / 16 * 9 several times to get it
[22:13:16] <xkoncek> but i was hoping i could do it without it
[22:14:03] <xkoncek> or even deciding the smallest box that an object can fit into requires to go from bottom upwards
[22:14:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[22:14:42] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Remote host closed the connection)
[22:15:10] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[22:15:44] <xkoncek> each node has a "path" which is a sequence of array indices of all its parents, it uniquely identifies its box coordinates
[22:24:01] <xkoncek> anyway the real problem is about integer division, i have an example:
[22:24:24] <xkoncek> max // 16 * 9 = something; something // 9 * 16 + 15 = max
[22:24:42] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Remote host closed the connection)
[22:25:05] <xkoncek> 13620240 // 16 * 9 = 7661385; 7661385 // 9 * 16 + 15 = 13620255;
[22:25:09] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[22:26:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:30:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:34:08] *** Quits: kevr (~kevr@user/kevr) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:34:50] *** Joins: kevr (~kevr@user/kevr)
[22:35:42] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Remote host closed the connection)
[22:35:49] *** Joins: str0 (~str0@178.220.28.32)
[22:36:09] *** Joins: blackbird_0 (~blackbird@197.244.161.2)
[22:36:53] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:6227:95d6:fb3b:beb0) (Ping timeout: 252 seconds)
[22:40:18] <blackbird_0> xkoncek: It is an algorithmic problem, to help you I need to understand more, may be you have to change some things like may be using a pointer to parents, use a doubly linked list instead of array, change the way of your compressed data, ...
[22:40:50] <blackbird_0> Must leave now
[22:44:36] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 252 seconds)
[22:46:28] *** Quits: blackbird_0 (~blackbird@197.244.161.2) (Quit: Leaving)
[22:56:32] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[22:57:24] *** Joins: evilpyro (~evilpyro@user/evilpyro)
[23:00:22] *** Joins: Guest8537 (~Guest@host52.181-14-185.telecom.net.ar)
[23:09:23] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[23:11:35] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:17:30] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[23:27:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:31:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[23:31:30] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Quit: Leaving)
[23:33:43] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[23:34:37] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 240 seconds)
[23:36:57] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c881:2ac6:eb65:ad08) (Ping timeout: 256 seconds)
[23:38:17] *** Quits: ARoxdale (~ARoxdale@93.107.214.80) (Ping timeout: 240 seconds)
[23:43:08] *** Joins: filename (~kilitary@188.242.105.134)
[23:44:56] *** Quits: paul424 (~tom@ip-5-172-236-166.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:45:37] *** Quits: xq (~xq@user/xq) (Ping timeout: 240 seconds)
[23:47:52] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[23:48:18] *** Joins: ARoxdale (~ARoxdale@93.107.214.80)
[23:48:55] *** climax is now known as gentooclimax
[23:49:57] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 240 seconds)
[23:50:53] *** Joins: noarb (~noarb@user/noarb)
[23:50:58] *** Joins: xq (~xq@user/xq)
[23:54:29] *** Joins: noarb- (~noarb@user/noarb)
[23:55:38] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 250 seconds)
[23:59:49] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:40fd:1a9f:e098:5b8e)
