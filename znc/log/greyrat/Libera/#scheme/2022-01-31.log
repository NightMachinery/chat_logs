[00:00:04] <Zipheir> jcowan: Wow, I'm sorry to hear that.
[00:00:14] <mdhughes> aeth: That'sâ€¦ why isn't that a SRFI yet?
[00:00:33] <sham1> Embed /bin/sh into Scheme for string processing and process handling
[00:00:40] <sham1> What could go wrong
[00:00:45] <drakonis> they were actually doing that lmao
[00:01:13] <drakonis> there's a couple shells written in scheme dialects and one in pure scheme
[00:01:27] <drakonis> genuinely fascinating stuff
[00:02:32] *** Joins: livoreno (~livoreno@user/notzmv)
[00:02:32] <mdhughes> jcowan, good to see you're alive & functioning! And somehow IRCing from hospital.
[00:02:41] <mdhughes> And now a-bed.
[00:02:47] <sham1> Imagine IRCing pre-smartphone
[00:02:52] <sham1> Must have been terrible
[00:02:59] <Zipheir> ?
[00:03:12] <sham1> Well pre-smartphone one might have not been able to IRC from hospital
[00:03:20] <dpk> sham1: we had to type in the TCP packets *by hand*
[00:03:26] <jcowan> I'm using a laptop
[00:03:38] <sham1> Well then
[00:04:20] <Zipheir> Portable IRC pre-smartphone https://en.wikipedia.org/wiki/Osborne_1
[00:04:27] <flyke> I'm reading scheme programming https://www.scheme.com/tspl4/start.html#./start:h0
[00:04:28] <Zipheir> Actually, pre-IRC :)
[00:04:32] <Franciman> hey jcowan glad to see you back!
[00:04:40] <flyke> Can anybody clarify the dotted notation?
[00:04:57] <flyke> dotted-pair notation*
[00:05:08] <Zipheir> flyke: (x . y) is equivalent to (cons x y).
[00:05:11] <sham1> I've watched videos about the Osborne. It's a fascinating piece of kit, and I'd love to have one. Well, with modern stuff. So not a laptop but a "portable" machine with modern desktop components in a similar form factor
[00:05:17] <aeth> sham1: I can't imagine IRCing with a smartphone. It becomes read-only at that point ime. I can type about 3x faster with a keyboard than with a smartphone and I can barely keep up with an active channel typing at max speed.
[00:05:35] <Zipheir> sham1: Yes.
[00:05:43] <aeth> some arguments online are won by whoever can type the fastest
[00:06:02] <flyke> Zipheir: Is that so? a shortcut?
[00:06:17] <sham1> Yes
[00:06:29] <Zipheir> flyke: Yes.  You'll see it most often in macros and procedure formals.
[00:06:48] <sham1> And similarly (a b . c) is short for (cons a (cons b c))
[00:07:01] <jcowan> This particular keyboard is Very Bad
[00:07:22] <jcowan> I'll be rid of it in a day or two
[00:07:28] <sham1> Although there is a difference between the dotted lists and doing the cons calls, and that's that (a b . c) is immutable
[00:07:30] <Zipheir> (lambda (x y . rest) ...) will bind its first two args. to x and y and everything that follows will be listed up and bound to `rest`.
[00:07:35] <Zipheir> flyke: ^
[00:07:39] <aeth> Zipheir: wrong. '(x . y) is equivalent to (cons 'x 'y)
[00:07:56] <aeth> very slight distinction there, mainly with the "distributive law" of QUOTE being involved
[00:07:58] <Zipheir> aeth: Er, yes, sorry.
[00:08:08] <aeth> https://en.wikipedia.org/wiki/Distributive_property
[00:08:10] <jcowan> Modulo mutability
[00:08:22] <Zipheir> -*- All of my IRC content is implicitly quasiquoted -*-
[00:08:24] <aeth> most people are aware of the distributive property from math, so it shouldn't be too hard to learn that for quoting cons/list
[00:08:38] <flyke> Zipheir: Thanks the book doens't make it much clear
[00:08:48] <flyke> Only say it's an *improper list*
[00:08:56] <Zipheir> flyke: Yeah, that's not super helpful.
[00:09:13] <Zipheir> flyke: Feel free to ask any other questions you have.  Dybvig can be pretty terse sometimes.
[00:09:33] <flyke> perhaps I should read the standard?
[00:09:38] <sham1> Both improper list and dotted list are valid terms, although improper list is more general because it also contains within its definition cyclic lists
[00:09:39] <Zipheir> flyke: Have you checked out the Little Books?
[00:09:43] <flyke> no
[00:10:30] <Zipheir> flyke: The Little Schemer is a good one.
[00:10:37] <Zipheir> Well, I like them all.
[00:11:12] <Zipheir> The standards tend to be pretty easy to read, although they don't try to explain *programming* Scheme.
[00:12:16] <jrincayc> I read R5RS, but I didn't really understand programming scheme until I read The Little Schemer.
[00:13:07] <flyke> Gonna read little shcemer then
[00:13:35] <sham1> And then there's the "Seasoned Schemer" which is after that
[00:14:37] <Zipheir> flyke: If you need a copy, some of us may have one...
[00:14:50] <flyke> got it on the internet
[00:14:54] <Zipheir> Good.
[00:15:08] <flyke> just google any book name followed by "pdf" lol
[00:16:47] <Zipheir> sham1: You probably know about how the Osborne 1 was designed by Lee Felsenstein, who also designed this masterpiece https://en.wikipedia.org/wiki/Sol-20  He apparently despised the Osborne 1 as basically just an appliance.
[00:17:14] <sham1> Ooh, that's a nice looking thing
[00:17:49] <Zipheir> It really sounds like the ultimate hacker microcomputer.  Too bad it wasn't a hit.
[00:19:27] <amazigh> good to read jcowan!
[00:21:54] *** Quits: jeko (~jeko@2a01:e0a:25f:d8f0:1d6a:fdfd:ebc4:592f) (Ping timeout: 260 seconds)
[00:25:56] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Quit: jrincayc)
[00:26:19] *** Joins: klovett (~klovett@107.127.17.177)
[00:26:24] *** Quits: klovett_ (~klovett@107.127.17.177) (Ping timeout: 256 seconds)
[00:28:04] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:33:49] *** Joins: ASau (~user@lmpc.drb.insel.de)
[00:50:27] *** Joins: jeko (~jeko@2a01:e0a:25f:d8f0:f00a:3741:422d:8de4)
[00:58:50] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 268 seconds)
[00:59:51] *** Joins: cjb (~cjb@user/cjb)
[01:21:19] <nomagno> Zipheir: The system in question is a custom CPU/virtual machine with an original MISC instruction set
[01:21:53] <nomagno> so... The limiations are effectively self-imposed
[01:22:38] <nomagno> Not that I couldn't implement recursion with an adhoc stack, mind you. But it'd be kinda cumbersome
[01:32:08] *** Joins: ouestbillie (~gallup@192.222.211.58)
[01:37:48] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 256 seconds)
[01:39:31] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 245 seconds)
[01:41:40] *** Joins: aeth (~aeth@user/aeth)
[01:56:10] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 260 seconds)
[01:57:02] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[01:58:43] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:08:31] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[02:10:27] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:12:50] *** Joins: wnklmnn (~wnklmnn@2a02:908:4e2:9740:2d8:61ff:fef9:b4c2)
[02:12:59] *** Quits: rx80 (~quassel@user/rx80) ()
[02:14:43] *** Quits: ouestbillie (~gallup@192.222.211.58) (Remote host closed the connection)
[02:15:10] *** Joins: rx80 (~quassel@user/rx80)
[02:23:20] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:39:02] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:50:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:54:50] *** Quits: jeko (~jeko@2a01:e0a:25f:d8f0:f00a:3741:422d:8de4) (Quit: Konversation terminated!)
[02:56:50] *** Quits: civodul (~user@guix/contributor/civodul) (Quit: ERC (IRC client for Emacs 27.2))
[03:29:40] *** Joins: notzmv (~zmv@user/notzmv)
[03:34:05] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[03:35:48] *** Joins: aeth (~aeth@user/aeth)
[03:56:39] *** Quits: wnklmnn (~wnklmnn@2a02:908:4e2:9740:2d8:61ff:fef9:b4c2) (Quit: Leaving)
[04:19:42] *** Quits: ouestbillie (~gallup@192.222.211.58) (Quit: leaving)
[04:20:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:22:51] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:25:19] *** Quits: ouestbillie (~gallup@192.222.211.58) (Client Quit)
[04:25:41] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:49:55] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[04:51:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
[04:51:38] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:57:10] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[04:58:45] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[05:00:13] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:06:07] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[05:06:54] *** Quits: jao (~jao@68.235.43.84) (Ping timeout: 256 seconds)
[05:08:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:09:05] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[05:10:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:11:01] *** Joins: s-liao46 (~s-liao@101.86.96.21)
[05:11:35] *** Joins: klovett_ (~klovett@107.127.17.177)
[05:14:03] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:14:57] *** Quits: klovett (~klovett@107.127.17.177) (Ping timeout: 240 seconds)
[05:19:09] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:21:06] *** Joins: jao (~jao@static-68-235-44-71.cust.tzulo.com)
[05:22:40] *** Joins: klovett (~klovett@107.127.17.177)
[05:24:49] *** Quits: s-liao46 (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:24:57] *** Quits: klovett_ (~klovett@107.127.17.177) (Ping timeout: 240 seconds)
[05:27:08] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:36:51] *** Joins: klovett_ (~klovett@107.127.17.177)
[05:40:00] *** Quits: klovett (~klovett@107.127.17.177) (Ping timeout: 250 seconds)
[05:56:13] <flyke> Hey, what about we make a scheme userpace for linux in the same fashion as NodeOS?
[05:56:57] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[05:57:18] <flyke> All the utilities are written in scheme and there is a scheme vm running on the center, that interprets them.
[05:58:09] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:58:24] *** Joins: m455 (~m455@user/m455)
[06:09:31] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:33:35] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: Lost terminal)
[06:34:10] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[06:55:41] <mdhughes> Before smartphones (Treo), I would occasionally find a random public computer (or hack in), ssh to my home system, screen -d -r, and check on ICB, IRC, and mail with mutt.
[07:00:25] <ski> ("ICB" ?)
[07:02:41] <mdhughes> Internet Citizens Band. It's a single server-based chat, but with better group controls than IRC has.
[07:03:03] <ski> hm, interesting
[07:03:30] <mdhughes> I even wrote one of the clients for it. https://mdhughes.tech/tools/
[07:03:50] <mdhughes> http://www.icb.net
[07:04:32] *** Quits: jao (~jao@static-68-235-44-71.cust.tzulo.com) (Remote host closed the connection)
[07:04:33] <ski> hm, <http://markdamonhughes.com/JICB/> is 404
[07:04:52] <mdhughes> Yeah, their site hasn't been updated in some time.
[07:05:18] <mdhughes> And my old domain doesn't forward any subdirs because fucking godaddy.
[07:05:37] <ski> that's too bad :(
[07:06:07] <mdhughes> The Internet is writ in water.
[07:06:58] <ski> sic transit gloria mundi
[07:23:36] *** Joins: jao (~jao@static-68-235-44-71.cust.tzulo.com)
[07:33:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:39:51] *** Joins: Darkcoal (~user@139.64.3.35)
[08:10:17] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:28:02] *** Joins: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net)
[08:28:06] *** Parts: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net) (WeeChat 3.4)
[08:29:55] *** Joins: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net)
[08:32:26] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Remote host closed the connection)
[08:33:14] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[08:33:51] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:34:05] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[08:36:00] *** Quits: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[08:36:03] *** Joins: aeth (~aeth@user/aeth)
[08:36:20] *** Quits: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[08:36:36] *** Joins: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net)
[08:47:28] *** Quits: jao (~jao@static-68-235-44-71.cust.tzulo.com) (Remote host closed the connection)
[08:54:42] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[08:58:37] *** Joins: jao (~jao@static-68-235-44-71.cust.tzulo.com)
[08:59:35] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:01:12] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:04:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:06:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:08:56] *** Quits: jao (~jao@static-68-235-44-71.cust.tzulo.com) (Remote host closed the connection)
[09:10:21] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:12:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[09:17:05] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Remote host closed the connection)
[09:18:20] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[09:19:47] *** Joins: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net)
[09:43:33] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[09:43:53] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[09:44:57] *** Joins: ksu (~ksu@user/prtr)
[09:49:10] *** Joins: jao (~jao@static-68-235-44-71.cust.tzulo.com)
[09:52:08] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:12:54] *** Quits: jao (~jao@static-68-235-44-71.cust.tzulo.com) (Ping timeout: 256 seconds)
[10:18:39] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[10:18:47] <amazigh> hey schemers :)
[10:18:57] *** Quits: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[10:21:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:23:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:44:05] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[10:54:21] *** Joins: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net)
[10:55:03] *** Parts: ksu (~ksu@user/prtr) (End of Transmission Block)
[11:02:01] *** Quits: flyke (~flyke@user/flyke) (Remote host closed the connection)
[11:11:14] *** Quits: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net) (Quit: Leaving)
[11:21:03] *** Joins: notzmv (~zmv@user/notzmv)
[11:26:15] *** Quits: taw10 (~taw@46.235.227.49) (Quit: leaving)
[11:41:03] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[11:42:18] *** Joins: taw10 (~taw@46.235.227.49)
[11:42:33] *** Joins: silasfox (~sbv@p200300cec7133b0028044f0edc9e9537.dip0.t-ipconnect.de)
[11:47:28] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[11:50:29] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:57:14] *** Quits: silasfox (~sbv@p200300cec7133b0028044f0edc9e9537.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[11:58:18] *** Joins: civodul (~user@guix/contributor/civodul)
[12:02:28] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[12:02:57] *** Joins: Lysandros_ (~Lysandros@2a02:aa13:8104:c080:21a:a0ff:fea7:35e)
[12:03:51] *** Joins: webshinra (~shinra@2a01cb080779fc00b3436da62fafc69e.ipv6.abo.wanadoo.fr)
[12:04:13] *** Quits: mjsir911 (~bnc@user/mjsir911) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: wallymathieu (sid533252@id-533252.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[12:04:43] *** Joins: mjsir911 (~bnc@user/mjsir911)
[12:04:50] *** Quits: fizzie (irc@selene.zem.fi) (Ping timeout: 268 seconds)
[12:05:27] *** Joins: terrorjack5 (~terrorjac@2a01:4f8:1c1e:509a::1)
[12:05:28] *** Quits: webshinra_ (~shinra@2a01cb080779fc00b3436da62fafc69e.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[12:05:52] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:a696:8e79:2f37:9aef)
[12:06:04] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: chris2 (cky@meredith.poweredbytaylor.com) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: dnm (sid401311@id-401311.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Lysandros (~Lysandros@user/lysandros) (Ping timeout: 268 seconds)
[12:06:04] *** terrorjack5 is now known as terrorjack
[12:07:49] *** Joins: dnm (sid401311@id-401311.lymington.irccloud.com)
[12:09:13] *** Joins: karlosz (~karlosz@47.151.136.69)
[12:18:58] *** Joins: wallymathieu (sid533252@id-533252.uxbridge.irccloud.com)
[12:19:52] *** Joins: chris2 (cky@meredith.poweredbytaylor.com)
[12:21:43] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[12:22:07] *** Joins: fizzie (irc@selene.zem.fi)
[12:32:28] *** Joins: klovett (~klovett@107.127.17.177)
[12:35:38] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:36:16] *** Quits: klovett_ (~klovett@107.127.17.177) (Ping timeout: 256 seconds)
[12:51:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[13:08:30] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 250 seconds)
[13:09:06] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[13:09:19] *** Joins: ski (~ski@remote12.chalmers.se)
[13:10:47] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[13:10:58] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[13:11:36] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 245 seconds)
[13:13:34] *** Joins: buhman (sid411355@user/buhman)
[13:13:46] *** Quits: vito (sid1962@user/vito) (Ping timeout: 260 seconds)
[13:14:30] *** Joins: vito (sid1962@user/vito)
[13:14:45] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[13:52:06] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:54:32] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[14:19:42] *** Joins: flatwhatson (~flatwhats@220.253.110.95)
[14:23:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:24:17] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:a696:8e79:2f37:9aef) (Ping timeout: 256 seconds)
[14:24:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:31:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:33:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:45:45] *** Joins: X-Scale` (~ARM@83.223.248.131)
[14:48:15] *** Quits: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt) (Ping timeout: 268 seconds)
[14:48:15] *** X-Scale` is now known as X-Scale
[14:48:58] *** Joins: xsperry (~xs@user/xsperry)
[14:55:07] *** Joins: seninha (~seninha@user/seninha)
[15:06:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:08:28] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:09:48] *** Joins: frost (~frost@user/frost)
[15:25:45] *** Joins: notzmv (~zmv@user/notzmv)
[15:36:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:44:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:39:24] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[16:39:36] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:41:06] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[16:42:54] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[16:43:07] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:44:02] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[16:47:52] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:c6b8:ceb9:9a96:eaac)
[16:56:11] <sham1> Hello schemers
[16:57:24] <Franciman> hello sham1 
[16:57:48] <sham1> How are you today
[16:57:57] <Franciman> studying game theory
[16:58:02] <sham1> Nice
[16:58:09] <Franciman> can't wait to finish exams and work on my r7rs small implementation. What about you?
[16:58:38] <sham1> I'm fine. A bit tired but that's par for the course with insomnia
[16:58:51] <sham1> I'm currently thinking about GC
[16:59:39] <sham1> And also walking because ideas of course tend to come when that's done
[17:00:20] <Franciman> awesome, sorry about insomina
[17:02:39] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[17:03:17] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[17:05:56] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[17:18:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:19:25] *** Joins: seninha (~seninha@user/seninha)
[17:27:56] <Franciman> sham1: are you also implementing a gc?
[17:27:59] <Franciman> or just thinking abou tit
[17:28:03] <Franciman> about it
[17:29:01] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:c6b8:ceb9:9a96:eaac) (Ping timeout: 256 seconds)
[17:29:25] <sham1> I'm thinking about it mostly. Basically my thing is that I need to figure out a good way of representing stuff like pointers and general memory in Scheme in such a way that the generated code itself doesn't require allocation, since that'd become a circular thing since the allocation might require the very GC that is implemented
[17:29:57] <Franciman> well the memory needed by the GC is easier to manage
[17:30:01] <Franciman> you can manage it statically
[17:30:03] <Franciman> err
[17:30:05] <Franciman> manually
[17:30:07] <Franciman> inside the gc
[17:30:13] <sham1> One way I've been wondering about is having a separate memory pool for the GC where it can allocate any necessary structures
[17:30:15] <sham1> Yeah
[17:30:17] <Franciman> but sure, if you reduce  the amount it's cool
[17:30:30] <Franciman> for example free list allocators
[17:30:38] <Franciman> add metadata in the memory regions
[17:30:55] <Franciman> so you intersperse the GC's internal data with the memory
[17:30:58] <sham1> Another idea is to make the GC in assembly embedded in Scheme code, making the Scheme act like a macro assembler
[17:31:28] <sham1> That's also useful for other things like defining primitive procedures like car and such
[17:31:45] <Franciman> interesting
[17:33:20] <sham1> So C could be delegated to small parts like getting the `errno` when needed
[17:33:50] <sham1> And it could then be made into a small platform support library
[17:40:48] *** Joins: wnklmnn (~wnklmnn@2a02:908:4e2:9740:2d8:61ff:fef9:b4c2)
[18:00:57] *** Quits: Darkcoal (~user@139.64.3.35) (Ping timeout: 240 seconds)
[18:38:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe)
[18:38:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe) (Changing host)
[18:38:18] *** Joins: skapata (~Skapata@user/skapata)
[19:12:30] <dpk> the T compiler had its garbage collector written in Scheme
[19:12:40] <dpk> Olin Shivers wrote a bit about it in his history of T
[19:12:54] <Franciman> scheme is the language
[19:13:33] <dpk> it's trickier than it sounds! you have to make sure the compiler doesn't introduce any memory allocations which aren't inside the GC's self-managed static pool
[19:14:07] <dpk> mainly in lambda, which of course can fall out of the macro-expansions of any number of other operators
[19:15:50] <dpk> Scheme 48's approach of introducing an entirely distinct mode of compilation in which the compiler makes you manage memory yourself (PreScheme in Scheme 48's case), and using that to compile the GC, is probably the most sensible way to be safe about that
[19:19:11] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Read error: Connection reset by peer)
[19:20:01] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[19:21:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:23:29] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[19:24:56] *** Joins: aeth (~aeth@user/aeth)
[19:25:31] *** Joins: mogrim (~mogrim@gateway/tor-sasl/mogrim)
[19:26:39] *** Joins: silasfox (~sbv@p200300cec7133b0020ab95fb7e869f34.dip0.t-ipconnect.de)
[19:28:09] *** Joins: mogrim_ (~mogrim@gateway/tor-sasl/mogrim)
[19:39:14] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[19:39:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[19:53:44] *** Quits: klovett (~klovett@107.127.17.177) (Ping timeout: 256 seconds)
[19:54:19] *** Quits: mogrim (~mogrim@gateway/tor-sasl/mogrim) (Quit: leaving)
[19:54:19] *** Quits: mogrim_ (~mogrim@gateway/tor-sasl/mogrim) (Quit: leaving)
[19:54:47] *** Joins: mogrim (~mogrim@gateway/tor-sasl/mogrim)
[20:01:34] *** Quits: aeka (~aeka@2606:6080:1001:18:8d41:9604:d435:36b6) (Quit: ZNC 1.8.2 - https://znc.in)
[20:01:54] *** Joins: aeka (~aeka@user/hiruji)
[20:21:42] *** Quits: mogrim (~mogrim@gateway/tor-sasl/mogrim) (Ping timeout: 276 seconds)
[20:21:45] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:28:14] *** Joins: mogrim (~mogrim@gateway/tor-sasl/mogrim)
[20:31:27] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[20:38:56] *** Quits: Lysandros_ (~Lysandros@2a02:aa13:8104:c080:21a:a0ff:fea7:35e) (Changing host)
[20:38:56] *** Joins: Lysandros_ (~Lysandros@user/lysandros)
[20:38:57] *** Lysandros_ is now known as Lysandros
[20:54:57] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 240 seconds)
[20:57:32] *** Joins: jao (~jao@static-68-235-44-23.cust.tzulo.com)
[21:00:03] *** Quits: mogrim (~mogrim@gateway/tor-sasl/mogrim) (Ping timeout: 276 seconds)
[21:01:06] *** Quits: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[21:01:23] *** Joins: Rue (~rue@2001-b011-1000-11b6-9802-64fa-1e5c-3e4d.dynamic-ip6.hinet.net)
[21:05:08] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:07:06] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:09:07] *** Quits: silasfox (~sbv@p200300cec7133b0020ab95fb7e869f34.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[21:16:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:26:36] *** Joins: ManDay (~manday@185.236.155.245)
[21:27:49] *** Quits: ManDay (~manday@185.236.155.245) (Client Quit)
[21:28:23] *** Joins: ManDay (~manday@185.236.155.245)
[21:32:48] *** Quits: ManDay (~manday@185.236.155.245) (Changing host)
[21:32:48] *** Joins: ManDay (~manday@user/manday)
[21:35:00] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[21:35:11] *** Joins: ManDay (~manday@185.236.155.245)
[21:35:17] *** Quits: ManDay (~manday@185.236.155.245) (Changing host)
[21:35:17] *** Joins: ManDay (~manday@user/manday)
[21:35:53] *** Quits: ManDay (~manday@user/manday) (Client Quit)
[21:36:04] *** Joins: ManDay (~manday@user/manday)
[21:36:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:37:13] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:f810:eec9:8a20:6a95)
[21:38:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:41:36] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:44:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[21:48:49] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 268 seconds)
[21:51:54] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 268 seconds)
[21:53:38] *** Joins: aeth (~aeth@user/aeth)
[21:54:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748)
[21:54:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748) (Changing host)
[21:54:21] *** Joins: skapata (~Skapata@user/skapata)
[21:56:51] *** Joins: dstein64- (~dstein64@dannyadam.com)
[21:57:38] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:00:40] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[22:00:40] *** dstein64- is now known as dstein64
[22:00:45] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[22:01:18] *** Joins: dstein64 (~dstein64@dannyadam.com)
[22:03:21] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:06:21] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[22:10:50] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[22:13:31] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:14:29] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[22:23:15] *** Quits: zwr (~zwr@2804:d45:b966:fb00:9fc4:4e83:5c60:86bb) (Quit: Lost terminal)
[22:32:45] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[22:34:34] *** Joins: aeth (~aeth@user/aeth)
[22:34:46] *** Joins: paul_j (~user@67.26.169.217.in-addr.arpa)
[22:37:36] *** Joins: mogrim (~mogrim@gateway/tor-sasl/mogrim)
[22:43:13] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzzâ€¦)
[22:46:50] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[22:58:14] *** Joins: flyke (~flyke@user/flyke)
[23:05:11] <flyke> Is there a way to set raibow parenthesis in vim. eamcs seem to support it.
[23:07:17] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[23:07:18] <sham1> With a plugin
[23:09:55] <flyke> Wow a plugin? I though it was convenient enough to have builtin support.
[23:10:36] <flyke> I think most lispers are fine without parenthesis highlight 
[23:10:41] <sham1> Well it's not built into Emacs either
[23:10:50] <sham1> And Emacs is more of a lisp editor than vim is
[23:10:50] <flyke> (ok)
[23:11:13] <Zipheir> sham1: At least in the sense that it's 75% (?) elisp.
[23:12:36] <Zipheir> There's also paredit.  I'm not sure if vim has an equivalent to that.
[23:12:59] <Zipheir> Apparently there is https://github.com/vim-scripts/paredit.vim
[23:13:07] <sham1> Zipheir: sure, rainbow parenthesis stuff is in elisp but of course it is, what else would it be
[23:18:14] *** Quits: flyke (~flyke@user/flyke) (Ping timeout: 268 seconds)
[23:19:18] *** Joins: flyke (~flyke@45.168.124.52)
[23:40:00] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[23:42:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:53:36] *** Quits: mogrim (~mogrim@gateway/tor-sasl/mogrim) (Ping timeout: 276 seconds)
