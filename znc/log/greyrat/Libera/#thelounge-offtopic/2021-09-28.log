[00:50:50] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 268 seconds)
[01:28:32] *** Joins: mcint (mcint@user/mcint)
[02:15:25] *** Quits: gummipunkt (~gummipunk@mail.gummipunkt.eu) (Ping timeout: 252 seconds)
[02:16:33] *** Joins: gummipunkt (~gummipunk@mail.gummipunkt.eu)
[02:55:45] *** Quits: lenore (~lenore@user/lenore) (Quit: Ping timeout (120 seconds))
[02:56:05] *** Joins: lenore (~lenore@user/lenore)
[06:31:39] *** Quits: eliocamp (~eliocamp@user/eliocamp) (Quit: The Lounge - https://thelounge.chat)
[07:03:25] <xnaas> You're offtopic
[07:03:32] <xnaas> Your mom is offtopic
[07:03:43] <bookworm> node is the server stack, server side js based on v8 iirc
[07:03:44] <xnaas> Isn't TL node? :P
[07:03:50] <bookworm> the language is js ;P
[07:03:53] <bookworm> yes
[07:05:59] <xnaas> https://github.com/flackr/circ
[07:06:05] <xnaas> Obviously this is the only way to go
[07:06:06] <mooff> what do you mean 'based on v8 iirc'?
[07:06:20] <mooff> it was v8 from the go
[07:06:22] <bookworm> you weren't aware of the soju protocol moof? You lurk in ircv3, how did you miss it? :P
[07:06:35] <mooff> it could be defined as v8 plus new standard library
[07:06:42] <mooff> :P
[07:06:42] <bookworm> indeed
[07:06:57] <mooff> yes, we all have different exposure, and shouldn't assume
[07:07:25] <bookworm> worked very well actually, although why you'd want a dynamic language for the backend I can't imagine
[07:07:30] <bookworm> I'd prefer go
[07:07:45] <bookworm> then again, TL os what it is and I'm not gonna rewrite it
[07:08:41] <mooff> the original introductory talks for node were basically like "look i hooked up v8 to sockets, look at it go"
[07:08:50] <bookworm> XD
[07:08:58] <mooff> "haha javascript go brr"
[07:09:12] <bookworm> let frontend devs write the backend, what could go wrong
[07:09:19] <mooff> and yo dawg, i heard you like vendoring?
[07:09:30] <bookworm> leftpad
[07:09:35] * bookworm backs away
[07:10:13] <bookworm> let me get that dependency to reverse a slice
[07:10:28] <bookworm> (to be fair, the js stdlib was crap)
[07:10:43] <bookworm> it got a lot better since, making dash etc obsolete
[07:10:48] *** Quits: Vercas (~Vercas@gateway/tor-sasl/vercas) (Remote host closed the connection)
[07:11:06] *** Joins: Vercas (~Vercas@gateway/tor-sasl/vercas)
[07:11:23] <bookworm> s/slice/Array/ in js land, apologies
[07:11:39] <xnaas> re: golang -- I tried out https://github.com/khlieng/dispatch some time ago, but it wasn't for me. 
[07:11:50] <xnaas> TL still unmatched, imo. Â¯\_(ãƒ„)_/Â¯ 
[07:12:38] <xnaas> Though the DCC bit is nice. 
[07:12:50] <xnaas> Would mean not loading up hexchat once a year. ;P
[07:13:21] <mooff> bookworm: yeah, mostly. the hot paths anyway. but i still find that when i see _. used in the wild, i miss the ease and intuition i had using it
[07:13:52] <mooff> it's mostly faded / gone in the years since, cos i rely on the new standard APIs. but there are gaps / less well treated areas
[07:15:00] <mooff> using _. felt like using Enumerable in Ruby.. it just opens a new intuitive landscape for transforms, plucks, etc
[07:16:23] <mooff> and the docs were very clear, complete, coherent, sorted, ctrl-f searchable etc
[07:23:34] <bookworm> fair, still better if they are part of the stdlib in my opinion, else it's a completely different languages in the end full of domain specific stuff
[07:23:59] <bookworm> and I mean, I say that and use pandas / numpy in python... sooooo
[07:30:00] <mooff> yeah agreed. i almost want lodash to become part of the stdlib but a) _ has meaning in REPLs, b) lodash is good enough being lodash
[07:31:41] <bookworm> can also iterate much quicker like that. It was essentially a playground for the api without hammering it into stone for the rest of eternity
[07:32:18] <bookworm> and how easy it is to break that, python has a story or two to tell
[07:32:32] <mooff> want to see an IRC client i wrote in -//W3C//DTD XHTML 1.0 Transitional? :)
[07:32:45] <bookworm> god I hate xml
[07:32:51] <bookworm> but sure, shoot
[07:33:04] <mooff> i wrote something that was similar in spirit to thelounge with timestamps that say 2008, 2009 and 2010
[07:33:50] <mooff> i suspect the 2008 html and js files are example code i pulled in.. named jsWindow.html, jsWindow.js
[07:34:24] <mooff> makes me excited to see if i had some kind of scriptaculo.us or other windows going on inside the page :-D
[07:35:50] <mooff> Meteor.mode = 'longpoll';
[07:40:37] <mooff> https://awful.cooking/irc.js
[07:47:01] <bookworm> emoji transformation, keyboard driven... it had it all
[07:47:18] <mooff> haha. there's actually an irc.js.html file in the dir
[07:47:26] <mooff> https://awful.cooking/irc.js.html
[07:47:27] <bookworm> IRC.imstillhere() ^^ PONG?
[07:47:36] <mooff> yes ðŸ˜‚
[07:48:04] <mooff> it's a shame i didn't upload this in 2010
[07:56:10] <mooff> i haven't got a backend running yet but the client is serving here at https://jank.casa/canhasirc/
[08:02:07] <bookworm> well, it was surely looking nice at the time :P buuut it kinda didn't age well
[08:05:08] <mooff> it used spool files for connections
[08:11:31] <mooff> https://awful.cooking/index.php.html
[08:13:34] <mooff> i probably hacked the spool files into makeshift sockets using Python and inotify :P
[08:13:47] <mooff> chmod($spool_file, 0777); :P
[09:12:15] <mooff> i need a meteor server to get this working. but i found the python spool backend :D
[09:21:27] <mooff> https://awful.cooking/canhasirc/ircbot.py.html
[09:21:55] <mooff> i wrote services bots with that
[10:15:21] *** Quits: mooff (~mooff@awful.cooking) (Remote host closed the connection)
[10:18:57] *** Joins: mooff (~mooff@awful.cooking)
[10:26:21] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 265 seconds)
[10:30:45] *** Quits: iXNyNe (~NyNe@user/nyne) (Quit: iXNyNe)
[10:33:44] *** Joins: iXNyNe (~NyNe@user/nyne)
[11:30:53] *** Quits: iXNyNe (~NyNe@user/nyne) (Quit: iXNyNe)
[11:58:43] *** Joins: iXNyNe (~NyNe@user/nyne)
[12:53:57] *** Joins: Mysteria4 (~Mysteria@v2202107139540158951.bestsrv.de)
[13:06:58] *** Quits: AKTheKnight (~AKTheKnig@user/aktheknight) (Quit: Ping timeout (120 seconds))
[13:07:01] *** Quits: Vercas (~Vercas@gateway/tor-sasl/vercas) (Quit: Ping timeout (120 seconds))
[13:07:10] *** Joins: AKTheKnight (~AKTheKnig@user/aktheknight)
[13:07:27] *** Joins: Vercas (~Vercas@gateway/tor-sasl/vercas)
[14:01:57] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[14:04:45] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[14:25:51] *** Quits: shadoozo (~shadoozo@user/shadoozo) (Quit: ZNC - https://znc.in)
[14:26:23] *** Joins: shadoozo (~shadoozo@user/shadoozo)
[14:34:22] *** Quits: shadoozo (~shadoozo@user/shadoozo) (Quit: ZNC - https://znc.in)
[14:35:09] *** Joins: shadoozo (~shadoozo@user/shadoozo)
[15:59:58] *** Joins: pyfisch0 (~pyfisch@user/pyfisch)
[16:01:26] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 250 seconds)
[16:01:27] *** pyfisch0 is now known as pyfisch
[16:35:14] *** Joins: eliocamp (~eliocamp@user/eliocamp)
[20:55:58] *** Joins: mcint (mcint@user/mcint)
[22:46:58] *** Joins: Crims (~Crims@cpc1-brnt1-2-0-cust33.4-2.cable.virginm.net)
[22:57:44] *** Quits: Crims (~Crims@cpc1-brnt1-2-0-cust33.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
