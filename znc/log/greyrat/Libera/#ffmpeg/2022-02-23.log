[00:03:57] <aphysically> so there's either a bug in ffmpeg mpegts muxing or in reading it for framerate wise, but I'm not sure there's a workaround hmmmmmm
[00:08:32] <aphysically> here, you can replicate the bug/problem with a trivial lavfi input:
[00:08:36] <aphysically> ffmpeg -r 2997/125 -t 20 -f lavfi -i testsrc -pix_fmt yuv420p -c:v libx264 bad_framerate.mkv; ffmpeg -i bad_framerate.mkv -c:v copy bad_framerate.ts
[00:08:55] <aphysically> then ffprobe the bad_framerate.ts
[00:10:29] <aphysically> ffprobe -show_entries stream=r_frame_rate bad_framerate.ts
[00:10:45] <aphysically> and you can verify the mkv is correct and still 2997/125
[00:19:12] *** Joins: Volgaar (~volgaar@2001:861:3744:3250:e1b9:cedf:4cd2:3b02)
[00:26:12] *** Quits: Volgaar (~volgaar@2001:861:3744:3250:e1b9:cedf:4cd2:3b02) (Ping timeout: 240 seconds)
[00:31:27] *** Joins: lavaball (felix@31.204.155.215)
[00:32:37] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[00:34:09] *** Joins: bradh (~bradh@2001:8004:1400:3105:23dc:96ff:df5b:e155)
[00:34:17] *** Joins: realies0 (~realies@user/realies)
[00:34:52] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:35:41] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[00:35:41] *** realies0 is now known as realies
[00:38:01] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:40:32] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[00:41:23] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[00:41:24] *** Quits: iconoclasthero (~quassel@pool-100-14-231-162.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[00:43:43] *** Quits: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[00:48:29] *** Joins: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net)
[00:49:17] *** Quits: fkaa (~fkaa@user/fkaa) (Remote host closed the connection)
[00:51:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:52:40] *** Joins: crashrep (~crashrep@user/crashrep)
[00:57:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:59:35] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[01:03:49] *** Joins: dbal (~dbal@2603:300c:b04:b100:6cb0:dc5f:fcab:d2ea)
[01:04:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[01:04:35] *** Quits: blaze (~blaze@user/blaze) (Ping timeout: 252 seconds)
[01:04:49] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:07:05] *** Quits: dbal_ (~dbal@2603:300c:b04:b100:d80a:3da8:9190:c1e7) (Ping timeout: 250 seconds)
[01:09:19] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[01:11:26] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:14:03] *** Joins: Vonter (~Vonter@user/vonter)
[01:14:30] *** Joins: oriba (~oriba@dynamic-078-054-159-212.78.54.pool.telefonica.de)
[01:17:14] *** Quits: bradh (~bradh@2001:8004:1400:3105:23dc:96ff:df5b:e155) (Quit: Konversation terminated!)
[01:18:34] *** Joins: crashrep (~crashrep@user/crashrep)
[01:19:08] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[01:19:49] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:22:03] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:65dc:ab5d:8da2:d8b4)
[01:22:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:23:47] *** Joins: crashrep (~crashrep@user/crashrep)
[01:24:15] <johnjaye> is there a way with filters to chop a video up into segments interspersed with a clip of silent audio?
[01:24:23] <johnjaye> like every 100 seconds it plays a clip of silence?
[01:25:19] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[01:26:29] *** Quits: jbg (~jbg@user/jbg) (Quit: Ping timeout (120 seconds))
[01:28:08] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[01:28:15] <durandal_1707> johnjaye: yes, see (a)segment filters and color source video filter, and anullsrc audio source filter
[01:28:38] <durandal_1707> and finally concat audio/video filter
[01:28:55] *** Quits: beaver (~beaver@user/pong) (Ping timeout: 240 seconds)
[01:39:18] *** Joins: beaver (~beaver@user/pong)
[01:39:29] *** Quits: malloy (~jimery@116.30.220.175) (*.net *.split)
[01:39:29] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[01:39:53] *** Joins: malloy (~jimery@116.30.220.175)
[01:40:46] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Quit: Leaving)
[01:41:26] <johnjaye> ok it says asegment will split it into parts
[01:41:41] <johnjaye> but in order to insert things at those parts i would have to write a shell script i guess right
[01:41:48] <johnjaye> ffmpeg doesn't seem like i can join the filters to do this
[01:42:11] <johnjaye> well maybe with concat. hmm
[01:42:14] *** Joins: rvalue (~rvalue@user/rvalue)
[01:42:15] *** Joins: a0z (~a0z@90.244.190.0)
[01:42:31] <durandal_1707> johnjaye: concat filter
[01:42:54] <durandal_1707> it will be complex filtergraph but certainly doable
[01:43:51] <durandal_1707> its doable in single command
[01:44:05] <durandal_1707> but better do with several ones first
[01:45:08] <johnjaye> should i use map or no
[01:48:08] <durandal_1707> multiple segments gives multiple outputs, so yes
[01:56:12] *** Quits: durandal_1707 (~computer@212.15.177.16) (Ping timeout: 240 seconds)
[02:01:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[02:06:16] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[02:06:27] *** Joins: dgcampea (~dgc@user/dgcampea)
[02:07:57] *** Quits: euphoricallysane (~quatro@user/euphoricallysane) (Remote host closed the connection)
[02:08:16] *** Joins: euphoricallysane (~quatro@user/euphoricallysane)
[02:11:56] *** Joins: MrZeus__ (~MrZeus@185.248.85.10)
[02:12:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:14:08] *** Quits: emagex (~user@user/emagex) (Quit: ERC (IRC client for Emacs 27.1))
[02:15:46] *** Quits: MrZeus_ (~MrZeus@185.195.232.164) (Ping timeout: 272 seconds)
[02:23:29] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:24:54] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[02:27:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[02:32:52] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[02:34:41] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[02:35:35] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 240 seconds)
[02:35:37] *** Joins: SystemError (~SystemErr@user/systemerror)
[02:36:13] *** SystemError is now known as System_Error
[02:38:34] *** Quits: tc_ (~tc@103-140-203-11.vic.as139284.net.au) (Ping timeout: 272 seconds)
[02:44:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[02:54:45] *** Joins: Vonter (~Vonter@user/vonter)
[03:05:46] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[03:08:03] *** Joins: Vonter (~Vonter@user/vonter)
[03:19:20] *** Quits: cosimone (~user@93-34-132-33.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:21:51] *** Quits: oriba (~oriba@dynamic-078-054-159-212.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:25:44] *** Joins: minimal (~minimal@user/minimal)
[03:28:17] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[03:28:20] *** Joins: crashrep (~crashrep@user/crashrep)
[03:32:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[03:36:12] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 272 seconds)
[03:40:31] *** Quits: Gaboradon (~Gaboradon@user/Gaboradon) (Ping timeout: 256 seconds)
[03:42:45] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[03:51:46] *** Quits: lbvotkin (~lbvotkin@108.red-88-3-241.dynamicip.rima-tde.net) (Quit: Connection closed)
[03:52:40] *** Joins: Bombo (atom@p4ff00b5d.dip0.t-ipconnect.de)
[03:52:41] *** Quits: Bombo (atom@p4ff00b5d.dip0.t-ipconnect.de) (Changing host)
[03:52:41] *** Joins: Bombo (atom@user/bombo)
[04:01:42] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[04:02:59] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[04:04:29] *** Joins: crashrep (~crashrep@user/crashrep)
[04:05:13] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[04:08:29] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:10:53] *** Quits: vulpine (~xfnw@pidgin.owen.bellz.org) (Ping timeout: 256 seconds)
[04:11:57] *** Joins: Vonter (~Vonter@user/vonter)
[04:51:48] *** Joins: vulpine (~xfnw@pidgin.owen.bellz.org)
[04:53:57] *** Quits: vulpine (~xfnw@pidgin.owen.bellz.org) (Max SendQ exceeded)
[04:55:20] *** Joins: vulpine (~xfnw@pidgin.owen.bellz.org)
[05:02:13] *** Quits: nd (~nd@user/nd) (Quit: bye)
[05:03:48] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9) (Ping timeout: 240 seconds)
[05:04:39] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9)
[05:08:47] *** Joins: nd (~nd@user/nd)
[05:11:14] *** Joins: jbg (~jbg@user/jbg)
[05:12:57] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[05:16:11] *** Joins: lucaswang (~lucaswang@58.246.19.98)
[05:30:11] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:35:54] *** Quits: MrZeus__ (~MrZeus@185.248.85.10) (Ping timeout: 272 seconds)
[05:41:09] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[06:06:40] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:07:48] *** Joins: justAstache (~justache@user/justache)
[06:16:18] *** Quits: dgcampea (~dgc@user/dgcampea) (Killed (NickServ (Forcing logout dgcampea -> dgcampea)))
[06:16:18] *** Joins: dgcampea-2 (~dgc@user/dgcampea)
[06:16:18] *** dgcampea-2 is now known as dgcampea
[06:20:30] *** Quits: cheetahw26 (~cheetahw2@14.150-pool-xdsl-mi.sccoast.net) (Quit: Client closed)
[06:36:28] *** Quits: jos1 (~jos3@host-091-097-186-159.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[06:37:18] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 250 seconds)
[06:37:24] *** Quits: vulpine (~xfnw@pidgin.owen.bellz.org) (Ping timeout: 240 seconds)
[06:49:57] *** Joins: jos1 (~jos3@dyndsl-178-142-067-053.ewe-ip-backbone.de)
[06:50:27] *** Quits: Atsuko (~x@94.242.254.66) (Remote host closed the connection)
[06:51:25] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:58:56] *** Joins: dgcampea-2 (~dgc@user/dgcampea)
[06:58:56] *** Quits: dgcampea (~dgc@user/dgcampea) (Killed (NickServ (Forcing logout dgcampea -> dgcampea)))
[06:58:56] *** dgcampea-2 is now known as dgcampea
[07:00:44] *** Joins: hpkn (~hpkn@gateway/tor-sasl/hpkn)
[07:05:26] *** Joins: Atsuko (~x@94.242.250.86)
[07:23:20] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:52:51] *** Joins: vulpine (~xfnw@pool-96-241-144-171.washdc.fios.verizon.net)
[08:03:33] *** Quits: lucaswang (~lucaswang@58.246.19.98) (Quit: Connection closed)
[08:55:53] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Read error: Connection reset by peer)
[08:55:56] *** Joins: w1r4d (~w1r3d@user/w1r3d)
[09:00:14] *** Joins: guest (~guest@222.128.6.148)
[09:07:53] *** Quits: guest (~guest@222.128.6.148) (Quit: Connection closed)
[09:10:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 260 seconds)
[09:12:16] *** Joins: malloy (~jimery@116.30.220.175)
[09:13:33] *** Joins: Buster_ (~Buster@46.160.36.66)
[09:31:25] *** Joins: Limits (~Limits@user/Limits)
[09:31:35] *** Parts: Limits (~Limits@user/Limits) ()
[09:31:38] *** Joins: therobin_ (~UserNick@45.72.193.179)
[09:32:31] *** Joins: guest (~guest@161.117.202.209)
[09:33:14] *** Quits: therobin (~UserNick@2607:f2c0:94b9:9e00:4cd5:b6e1:f625:9291) (Ping timeout: 250 seconds)
[09:33:24] *** therobin_ is now known as therobin
[10:10:08] *** Quits: w1r4d (~w1r3d@user/w1r3d) (Quit: Leaving)
[10:13:58] *** Joins: lucaswang (~lucaswang@58.246.19.98)
[10:25:11] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[10:25:37] *** Quits: OsteHovel (~OsteHovel@ti0056a400-1758.bb.online.no) (Ping timeout: 240 seconds)
[10:27:37] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:5014:69b3:7a23:e16d) (Ping timeout: 240 seconds)
[10:33:24] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:36:48] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[10:37:29] *** Joins: OsteHovel (~OsteHovel@ti0056a400-0096.bb.online.no)
[10:39:02] *** Joins: Hackerpcs (~user@user/hackerpcs)
[10:39:18] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[10:40:26] *** Joins: Hackerpcs (~user@user/hackerpcs)
[10:43:43] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[10:47:40] *** Joins: rpthms (~rpthms@user/rpthms)
[11:03:31] *** Quits: a0z (~a0z@90.244.190.0) (Quit: Leaving)
[11:03:48] *** Quits: guest (~guest@161.117.202.209) (Ping timeout: 240 seconds)
[11:05:48] *** Quits: Buster_ (~Buster@46.160.36.66) (Ping timeout: 240 seconds)
[11:06:17] *** Joins: ossifrage_ (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net)
[11:08:24] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[11:08:32] *** Quits: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[11:09:01] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[11:13:58] *** Joins: lbvotkin (~lbvotkin@108.red-88-3-241.dynamicip.rima-tde.net)
[11:16:33] <lbvotkin> Has anybody got any suggestions to where I may be able to start looking to find out why my code (using nvenc) is writing out corrupt mp4 files that ffprobe errors with `Missing picture in access unit with size X` and `No start code is found`? Interestingly when I change the output format from mp4 to `264` it works fine, so it can't be the encoder.
[11:16:34] <lbvotkin> Are there any common gotchas?
[11:17:23] <lbvotkin> Uploaded file: https://uploads.kiwiirc.com/files/76fb4c58b5d2e98cfad8439ab8992080/pasted.txt
[11:17:41] <lbvotkin> I've done a trace ffprobe and get reasonable dtss
[11:17:49] <lbvotkin> Uploaded file: https://uploads.kiwiirc.com/files/76fb4c58b5d2e98cfad8439ab8992080/pasted.txt
[11:17:56] *** Joins: MajorBiscuit (~MajorBisc@c-001-017-039.client.tudelft.eduvpn.nl)
[11:20:11] *** Joins: palasso (~palasso@user/palasso)
[11:20:47] <galad> lbvotkin: maybe you are writing annex b nal into a mp4, instead of the right nal format for mp4
[11:22:46] <lbvotkin> that sounds plausible, but shouldn't ffmpeg internals handle that? I'm just doing `avcodec_send_frame` then `avcodec_receive_packet` where the encoder is `h264_nvenc` ...
[11:24:31] <galad> well check the NALs written and see which format they are using
[11:24:36] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:24:48] <lbvotkin> thanks - i will do!
[11:26:42] *** Quits: euphoricallysane (~quatro@user/euphoricallysane) (Quit: Leaving)
[11:31:21] <galad> or make sure you are passing the extradata to the muxer
[11:32:00] *** Joins: Volgaar (~volgaar@147.94.11.51)
[11:34:15] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[11:35:02] <lbvotkin> yeah can confirm it's not the NALs - they are in the correct format. I'm going to validate the extradata
[11:36:31] <lbvotkin> what would be a reason for extradata not being generated correctly?
[11:39:33] *** Joins: lavaball (felix@31.204.155.215)
[11:41:54] *** Joins: XdaddyZX_ (uid456733@id-456733.tinside.irccloud.com)
[11:43:53] *** Quits: led_belly (~led_belly@37.120.197.44) (Ping timeout: 256 seconds)
[11:47:18] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:52:33] *** Joins: led_belly (~led_belly@37.120.197.44)
[11:54:44] *** Joins: kurosu (uid342582@id-342582.hampstead.irccloud.com)
[12:01:42] *** Joins: sosodank (~dankamong@199.185.175.96)
[12:03:42] <lbvotkin> I've found that my packets are being emitted from the encoder and sent to the muxer with `duration=0` is that a problem?
[12:04:08] *** Joins: cosimone (~user@93-34-132-33.ip49.fastwebnet.it)
[12:04:54] <JEEB> only for the last packet; most encoders lead to that so it's not a problem per se
[12:05:37] <JEEB> it's probably something else. you can check if you have a proper avcC etc
[12:05:43] <JEEB> with boxdumper etc
[12:06:11] <JEEB> although no start code means it can't find NAL units
[12:06:29] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[12:06:47] *** Quits: moviuro_ (~moviuro@znc.popho.be) (Quit: Reboot? Or did my jail(8) just die?)
[12:07:11] *** Joins: moviuro (~moviuro@znc.popho.be)
[12:08:16] <lbvotkin> yeah you're correct that my `avvC` box is empty.
[12:09:05] <JEEB> have you set the global header option?
[12:09:21] <JEEB> not sure if that one is utilized in nvenc o' course
[12:10:10] <lbvotkin> yes I have and when I'm stepping through nvenc it seems to detect that and call `nvenc_setup_extradata()`
[12:10:33] <lbvotkin> it's very frustrating because it has to be something stupid and simple that i'm missing
[12:11:17] <galad> Is the extradata/avcC set automatically in the muxer or maybe must be set manually?
[12:11:30] <JEEB> it should be handled automagically if the encoder sets the extradata
[12:11:48] <JEEB> AVCodecContext has extradata after init, and the AVStream's codecpar should have it, too
[12:12:20] <JEEB> of course if you don't copy parameters from context to codecpar it's missing, but I expect that to be done since the codec_id is set :)
[12:12:41] <JEEB> (for the AVStream)
[12:12:45] <lbvotkin> it could well be the order in which I do that. It has to be something stupid like that :)
[12:16:54] *** Joins: durandal_1707 (~computer@95.168.116.15)
[12:17:51] <lbvotkin> JEEB it was that!! 🎉I was calling `avcodec_parameters_from_context` before I had called `avcodec_open2` Thank you so much for your pointers!
[12:18:23] <JEEB> glad that fixed it
[12:18:48] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:9d4b:bf25:26b7:c649)
[12:22:18] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[12:23:56] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[12:43:57] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[13:03:40] *** Quits: lucaswang (~lucaswang@58.246.19.98) (Ping timeout: 272 seconds)
[13:04:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:10:04] *** Joins: arinov_ (~arinov@31.142.86.27)
[13:19:15] <lbvotkin> If audio processing is happening much faster than video frame processing, what is the technique for buffering audio until the video is ready? I was under the impression that `av_interleaved_write_frame()` did that under the hood, but I get the `non monotonically increasing dts` error which makes me think it's not?
[13:20:52] <galad> the "non monotonically increasing dts" refers to the dts of single track
[13:25:20] *** Joins: emagex (~user@user/emagex)
[13:25:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:25:58] <lbvotkin> @gala
[13:26:24] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[13:26:30] <lbvotkin> galad thanks a lot! Turned out I wasn't setting the `stream_index` correctly
[13:44:17] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 240 seconds)
[13:46:58] *** Joins: lavaball (felix@31.204.155.215)
[13:50:00] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[14:04:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:06:09] *** Joins: Vonter (~Vonter@user/vonter)
[14:08:54] *** Quits: arinov_ (~arinov@31.142.86.27) (Ping timeout: 272 seconds)
[14:11:41] *** Joins: arinov_ (~arinov@31.142.86.27)
[14:25:38] <znf> is there any way to make ffmpeg stop when used with pipe input and there's no data in "X" seconds?
[14:27:45] <JEEB> rw_timeout?
[14:30:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:32:17] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[14:32:18] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[14:32:34] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:34:09] *** Joins: System_Error (~SystemErr@user/systemerror)
[14:35:59] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[14:37:04] *** Joins: waffeln (~waffeln@ip5b40ce95.dynamic.kabel-deutschland.de)
[14:38:38] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6d72-f335-2f9d-689a.res6.spectrum.com) (Quit: jarthur)
[14:40:02] <waffeln> hi! i'm having issues with the 'showspectrumpic' filter. if i don't pass any arguments the command generates the picture in about 10 seconds on one of my music files, but if i pass any parameter, the command seems to be stuck and doesn't finish. when i add '-loglevel debug' i see 'Last Message repeated 15309 times' after a while. the last regular
[14:40:02] <waffeln> (default loglevel) output is the stream mapping and the 'Press [q] to stop' etc.
[14:40:15] <waffeln> can someone point me in the right direction what i'm doing wrong?
[14:40:51] <znf> oh nice, let's see
[14:40:53] <durandal_1707> waffeln: use height that is not power of 2 or 3 number
[14:41:08] <durandal_1707> *is power of 2 and/or 3
[14:41:18] <durandal_1707> 2 * 2 * 2  * 3
[14:41:21] <durandal_1707> for example
[14:41:21] <waffeln> i tried that, like 1024x1024, no change
[14:41:45] <durandal_1707> waffeln: 1024x1024 should work
[14:41:50] <waffeln> my version is 'ffmpeg version 5.0-essentials_build-www.gyan.dev' on win10 x64 btw
[14:41:56] <waffeln> installed through chocolatey
[14:42:40] <durandal_1707> as i said, 1024x1024 works here fine
[14:42:53] <furq> does it give correct output for non-po2 dimensions now
[14:43:26] <waffeln> it's stuck for me for any resolution
[14:45:14] <durandal_1707> waffeln: please provide full cmd
[14:45:31] <durandal_1707> furq: yes, but you will need to wait few hours
[14:45:55] <waffeln> ffmpeg-cur -i '.\05 Halo.mp3' -lavfi "showspectrumpic=size=1024x1024" output.png -y -loglevel debug
[14:46:22] <waffeln> 'ffmpeg-cur' points to the normal ffmpeg executable because 'ffmpeg' points to a version with libfdk-aac
[14:50:07] <durandal_1707> pastebin log output of that cmd
[14:52:34] <waffeln> hmm how can i pipe the text into a file if the process doesn't terminate?
[14:52:44] <waffeln> i mean how can i pipe the command output
[14:53:06] <durandal_1707> waffeln: what duration of that mp3?
[14:53:07] <waffeln> actually i should be able to copy from the terminal
[14:53:17] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:53:54] <waffeln> https://pastebin.com/LG3s0nhg
[14:54:10] <waffeln> the file is 4 min 55 sec
[14:54:22] <waffeln> i know of the ~50min limitation of the showspectrumpic filter
[14:55:30] <waffeln> i have the same issue when i try other files, that was the first thing i tried
[14:57:37] <durandal_1707> waffeln: in master limitation is gone
[14:57:49] <waffeln> what does that mean?
[14:57:50] <durandal_1707> you are now limited only by available RAM
[14:58:02] <waffeln> oh i get it
[14:58:05] <durandal_1707> that ~50 min limitation for 44100 rate
[14:58:07] <waffeln> that's great news!
[14:59:00] <waffeln> there's a spectrum tool for foobar2000 that's using ffmpeg and had to deal with this limitation before
[14:59:26] <waffeln> i'm essentially using ffmpeg for the same thing, but i'm fiddling with the command it's using directly so i can optimise it for speed
[14:59:34] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:01:42] <durandal_1707> waffeln: try master ffmpeg version build
[15:01:55] <waffeln> so the normal direct download?
[15:01:58] <waffeln> from the ffmpeg website
[15:02:01] *** Joins: Blacker47 (~Blacker47@user/blacker47)
[15:02:08] <durandal_1707> gyan builds for windows
[15:03:20] *** Quits: Volgaar (~volgaar@147.94.11.51) (Ping timeout: 252 seconds)
[15:05:43] <waffeln> same result
[15:06:09] <waffeln> for reference first line of output now prints 'ffmpeg version 2022-02-21-git-b8e58f0858-full_build-www.gyan.dev Copyright (c) 2000-2022 the FFmpeg developers'
[15:07:03] *** Joins: Volgaar (~volgaar@147.94.11.51)
[15:07:12] <durandal_1707> waffeln: give number of samples that "ffmpeg -i Halo.mp3 -af astats -f null -" reports at end
[15:07:53] <waffeln> Number of samples: 13028662
[15:08:49] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[15:09:28] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:10:09] <durandal_1707> waffeln: sorry can not reproduce your bug
[15:10:14] <waffeln> :(
[15:10:47] <waffeln> what can i do?
[15:11:17] *** Quits: arinov_ (~arinov@31.142.86.27) (Ping timeout: 240 seconds)
[15:12:36] <durandal_1707> dunno, give .mp3 as last step...
[15:12:54] <waffeln> how do i do that without violating any rules?
[15:13:12] <durandal_1707> maybe its using strange number of samples in each frame?
[15:13:18] <waffeln> but also this appears to happen with every file i have
[15:13:24] <waffeln> i'll try a few more
[15:13:56] <durandal_1707> try: ffmpeg -i '.\05 Halo.mp3' -lavfi "asetnsamples=1024,showspectrumpic=size=1024x1024" output.png
[15:14:07] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[15:15:14] <waffeln> okay so i got the command to finish on a file, but it took a very long time
[15:15:26] *** Quits: Volgaar (~volgaar@147.94.11.51) (Ping timeout: 252 seconds)
[15:15:26] <waffeln> and i also ran it on a much shorter file and it "only" took like 20 seconds
[15:16:06] <waffeln> yes, that command that you sent worked
[15:16:11] <durandal_1707> how much short?
[15:16:20] <intrac> waffeln: have you tried adding -shortest parameter (Finish encoding when the shortest input stream ends.)
[15:16:54] <intrac> I just wonder if the showspectrumpic filter is expecting more data and keeps repeating frames, even though the audio has finished
[15:17:02] <waffeln> durandal_1707 i think 30 seconds
[15:17:05] <intrac> it might not be the cause, but I've had this issue with other filters
[15:17:36] <durandal_1707> waffeln: 30 seconds is instant here
[15:17:48] <waffeln> intrac no i have not tried that because i don't know a lot about this stuff ^^'
[15:17:58] <waffeln> so i just add that as a param?
[15:18:01] <intrac> yep
[15:18:23] <durandal_1707> somehow gyan builds are maybe botched if they are so slow in fft
[15:18:47] <intrac> waffeln: I'm not sure on exactly where to place it, but somewhere near the middle or end of the params list
[15:18:50] <waffeln> the -shortest param seems to have the same effect as the "asetnsamples" filter
[15:19:00] <waffeln> it also makes it finish a lot faster
[15:19:19] <waffeln> i added -shortest to the very end after -y
[15:19:32] <intrac> yep, it should be ok there
[15:19:59] <intrac> although I normally put parameters before the output filename
[15:20:14] <waffeln> i should mention that my computer is pretty slow and probably has some performance issue, but for example Spek (http://spek.cc) is really fast in comparison
[15:20:21] <waffeln> on the same computer
[15:20:52] <waffeln> i'm basically looking for the same functionality and speed (or even faster) but with automatic image file output instead of a window
[15:21:04] <waffeln> Spek can export a picture but not via CLI
[15:22:53] <waffeln> okay apparently -shortest doesn't go at the end, ffmpeg just told me when i tried it again
[15:23:03] *** Joins: arinov_ (~arinov@31.142.86.27)
[15:23:04] <waffeln> not sure if i missed something that caused it to work in that case
[15:23:29] <waffeln> ugh now i think i'm passing -shortest correctly but it's still taking ages...
[15:26:26] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[15:26:51] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[15:27:31] <intrac> waffeln: is it just converting slowly, or encoding past the end of the audio file duration?
[15:27:44] <waffeln> how can i check?
[15:28:05] <waffeln> it looks like it never even starts with the encoding
[15:28:16] *** Joins: fkaa (~fkaa@user/fkaa)
[15:28:34] <waffeln> it gets stuck right before the "Output #0 ..." line would get printed
[15:29:40] <intrac> weird. sorry, I haven't used the showspectrumpic filter. just thought that the -shortest command might halt the conversion as soon as the end of the audio file is reached
[15:30:12] *** Quits: arinov_ (~arinov@31.142.86.27) (Ping timeout: 240 seconds)
[15:31:45] <durandal_1707> waffeln: how much you have RAM?
[15:32:55] <waffeln> 8GB
[15:33:17] <waffeln> ~5GB used (62%)
[15:36:42] <durandal_1707> waffeln: try with ffmpeg -cpuflags 0 ... rest of stuff
[15:38:48] *** Quits: hpkn (~hpkn@gateway/tor-sasl/hpkn) (Remote host closed the connection)
[15:38:52] <waffeln> this seems to have helped a lot
[15:39:10] <waffeln> it seems to work now with sizes that are a power of 2
[15:39:22] <durandal_1707> lol
[15:39:30] *** Joins: hpkn (~hpkn@gateway/tor-sasl/hpkn)
[15:39:40] <durandal_1707> that disables x86 assembly that is supposed to make things ultra fast
[15:39:51] <durandal_1707> what CPU you have?
[15:39:58] <waffeln> i7-7300HQ
[15:40:02] <waffeln> i mean i5
[15:40:29] <durandal_1707> heh, it probably fails to init tx somehow
[15:40:37] <durandal_1707> Lynne: ^
[15:41:28] <waffeln> i prefixed the command with the time command in bash
[15:41:37] <waffeln> real is 6 seconds
[15:41:52] <durandal_1707> for long audio?
[15:42:00] <waffeln> normal length, probably 3-4 minutes
[15:42:03] <waffeln> let me check
[15:42:40] <waffeln> 4 min 55s
[15:44:45] <waffeln> size=512x512 is consistently like 40% faster than size=128x128
[15:45:27] <waffeln> size=1024x1024 is slightly slower than 512 again which makes sense
[15:46:09] <Lynne> what's the issue here?
[15:47:35] <durandal_1707> Lynne: looks like tx with assembly have issues on windows
[15:48:18] <waffeln> 64: 11s, 128: 8s, 256: 6s, 512: 5.5s, 1024: 6.5s, 2048: 10s
[15:48:19] <waffeln> :D
[15:49:18] <waffeln> since values that are not powers of 2 seem to get stuck in the same fashion (or just take a lot longer, i don't know) it looks like 512x512 is the best resolution for speed
[15:49:40] <waffeln> maybe there are more parameters with which i can speed up the process
[15:49:58] <Lynne> try 960x960
[15:50:32] <Lynne> I don't get it, it's a modern CPU, shouldn't have any problems with the assembly
[15:50:38] <waffeln> 6.4s
[15:50:58] <waffeln> how come 960 works fine?
[15:50:59] <Lynne> just to check, it's only slow without cpuflags 0, right?
[15:51:05] <Lynne> what do you mean it works fine?
[15:51:11] <Lynne> it's nearly the same time as 1024
[15:51:20] <Lynne> that's what I'd expect
[15:51:23] *** Joins: minimal (~minimal@user/minimal)
[15:51:25] <waffeln> as in it's not a power of 2 and yet finishes in an earthly time
[15:51:44] <waffeln> all other numbers i've tried don't finish
[15:52:07] <Lynne> oh, there's a fast path for multiples of 3, 5, 7, 9, and 15
[15:52:13] <Lynne> 960 is 64x15
[15:52:16] <waffeln> ahh i understand
[15:52:19] <waffeln> good to know!
[15:52:37] <waffeln> anyway, i tried 960 without the cpuflags param and it finished @_@
[15:52:40] <waffeln> i'm so confused
[15:52:46] <waffeln> and it took only 5.5 seconds
[15:52:52] <waffeln> so faster than with the flag
[15:53:08] <Lynne> I am confused because I don't know what the issue is
[15:53:11] <Lynne> start from the start
[15:53:16] <Lynne> with size 1024 only
[15:53:28] <Lynne> what are the times with and without cpuflags 0
[15:54:55] <waffeln> time ffmpeg.exe -i 05\ Halo.mp3 -lavfi showspectrumpic=s=1024x1024 output.png -y
[15:54:56] <waffeln> result: 5.8s
[15:55:24] <waffeln> time ffmpeg.exe -cpuflags 0 -i 05\ Halo.mp3 -lavfi showspectrumpic=s=1024x1024 output.png -y
[15:55:25] <waffeln> result: 6.7s
[15:55:48] <waffeln> i don't understand, it used to not work like at all without -cpuflags or the sampling filter or -shortest
[15:56:17] <Lynne> those numbers look fine to me
[15:56:22] <waffeln> yeah same
[15:57:53] <waffeln> i can't reproduce the issues i've had before unless i use an odd size
[15:58:38] <waffeln> well i guess the ghost in my computer doesnt wanna bother me right now
[15:59:23] <Lynne> I'll fix the odd size issue soon
[15:59:40] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[16:01:15] <waffeln> do i have any other options in speeding the command up? other than new hardware of course
[16:01:41] <waffeln> like sacrificing accuracy
[16:02:01] <Lynne> ask durandal_1707 to speed the other parts of the code up ofc :)
[16:02:46] <Lynne> the issue is that ffmpeg has to first decode the entire file into memory, then do the transforms, then draw the image, but spek can do decoding and transforms in parallel
[16:03:15] <waffeln> yeah spek is a much simpler software than ffmpeg
[16:03:25] <waffeln> so it's a lot more optimized for that one task
[16:03:48] *** Joins: MrCollinsGA (~MrCollins@38.21.140.88)
[16:04:05] <waffeln> though ffmpeg is really amazing and snappy most of the time. it really helped me a lot over the years. i often use ffmpeg via the CLI directly for video and audio compression instead of external programs or GUIs for ffmpeg.
[16:04:07] <durandal_1707> waffeln: its because duration is not known at start
[16:04:29] <waffeln> ah yes, that's why that one script i saw passes the duration directly
[16:04:35] <durandal_1707> could be fixed if seeking support is added to libavfilter
[16:04:38] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[16:04:41] <waffeln> i know the duration beforehand, so can i use that to speed it up?
[16:05:11] <durandal_1707> waffeln: nope, there is no currently way to set duration to filter via user input
[16:05:13] <waffeln> or do you mean the duration thing is part of the architecture
[16:05:16] <waffeln> oh okay
[16:05:41] <waffeln> any other speedup possibilities?
[16:06:08] <shibboleth> i'm trying to get tvheadend working with a providers iptv setup (udp/rtp multicast on dedicated vlan). for some reason tvh fails at scanning streams and pyaing them like... 95 times out of a 100. using ffmpeg manually succeeds every time (as does using ffmpeg to pull the multicast stream and -f mpegts it to localhost and then having tvh consume that
[16:06:09] <waffeln> maybe i can split the audio in 30 second chunks so i can display parts of the spectrum a lot sooner
[16:06:38] <shibboleth> any ideas as to how to determine the magic/flags/variables/etc ffmpeg is using?
[16:07:56] <Lynne> durandal_1707: can't lavfi do the transforms as packets come in?
[16:08:06] <Lynne> it'll take the same amount of space in terms of samples
[16:09:02] *** Quits: sosodank (~dankamong@199.185.175.96) (Ping timeout: 240 seconds)
[16:09:36] <shibboleth> ffmpeg initially throws a bunch of errors ([  ERROR] libav: AVFormatContext: Application provided invalid, non monotonically increasing dts to muxer in stream 2: 7034795798 >= 7034795798, [  ERROR] iptv: libav: Error muxing packet: Invalid argument, [  ERROR] libav: AVCodecContext: decode_slice_header error, [  ERROR] libav: AVCodecContext: no frame)
[16:09:36] *** Joins: Volgaar (~volgaar@147.94.11.51)
[16:09:49] <shibboleth> but it recovers. tvh stalls
[16:10:43] *** Joins: sosodank (~dankamong@199.185.175.96)
[16:11:11] <durandal_1707> Lynne: better waste time on adding seeking support
[16:13:48] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[16:14:03] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[16:15:00] *** Quits: Volgaar (~volgaar@147.94.11.51) (Ping timeout: 240 seconds)
[16:15:10] <waffeln> "oh, there's a fast path for multiples of 3, 5, 7, 9, and 15"
[16:15:11] <waffeln> these add to the power-of-2 rule, correct? how can i figure out which resolutions are "fast"? is there a table or function i can use in javascript to list them?
[16:15:45] <waffeln> because JS is the only programming language i know well enough to do something like this
[16:19:01] <waffeln> it's working in foobar2000!!
[16:19:06] <waffeln> thank you guys very very much
[16:19:24] <waffeln> i have no idea what ended up fixing my issue but still thank you lots, i learned a bunch today
[16:22:04] <Lynne> waffeln: if it's divisible by 1, 3, 5, 7, 9, or 15 and leaves a power of two remainder, it's currently fast
[16:22:16] <waffeln> ah i see
[16:23:18] <waffeln> so i could print the numbers lets say up to 4000 and check for each if they are either a power of 2, or if they leave a power of 2 after clean dividing by one of those numbers
[16:23:54] <Lynne> no need, just do those divisions, then do !(remainder & (remainder - 1)), and if the result of this is 0, then it's fast
[16:24:12] <Lynne> 0 for at least one
[16:24:41] <waffeln> but wouldn't that fail if the number was 64 for example?
[16:24:55] <waffeln> because 64 is not divisible by any of those numbers is it?
[16:27:00] <Lynne> no, 64 / 1 == 64
[16:27:14] <Lynne> 64 & (64 - 1) == 0 => fast
[16:27:21] <waffeln> i thought the div by 1 was a mistake...
[16:27:34] <waffeln> doesn't that fit every integer??
[16:28:05] <waffeln> which number can't be expressed as (power of 2) + n?
[16:28:24] <Lynne> it does, but it doesn't really matter for this, though if you replace 1 by 2 it'll work just as well
[16:28:48] <waffeln> so why didn't you say all whole numbers are fine? or am i stupid? xD
[16:32:14] <durandal_1707> not all prime number work well as height for filter
[16:32:47] <waffeln> okay, i guess i'm too stupid xD i can't think of any number that can't be expressed with what Lynne told me
[16:33:24] *** Joins: Volgaar (~volgaar@147.94.11.51)
[16:33:31] <waffeln> 11 is just 8 + 3 * 1
[16:34:53] <durandal_1707> 11 is prime number
[16:35:01] <waffeln> yea
[16:35:10] <waffeln> that's why i chose that as an example
[16:38:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:40:32] <durandal_1707> + != *
[16:45:32] *** Joins: MrZeus__ (~MrZeus@185.248.85.53)
[16:48:04] *** Joins: Vonter (~Vonter@user/vonter)
[16:51:24] *** Quits: slisnake (~slisnake@103.107.198.140) (Ping timeout: 240 seconds)
[16:53:56] *** Quits: Volgaar (~volgaar@147.94.11.51) (Ping timeout: 250 seconds)
[16:58:23] *** Quits: sosodank (~dankamong@199.185.175.96) (Ping timeout: 256 seconds)
[17:11:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[17:12:44] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[17:20:19] *** Joins: Buster_ (~Buster@46.160.36.66)
[17:20:51] *** Quits: blb (~blb@user/blb) (Ping timeout: 252 seconds)
[17:21:52] *** Joins: blb (~blb@user/blb)
[17:26:12] <znf> JEEB, nope, rw_timeout seems to do nothing for pipe inputs
[17:27:31] *** Joins: Jerrk (~Jerrk@45.83.220.192)
[17:31:02] *** Quits: MrZeus__ (~MrZeus@185.248.85.53) (Read error: Connection reset by peer)
[17:34:42] *** Joins: MrZeus (~MrZeus@185.248.85.38)
[17:51:27] *** Quits: cosimone (~user@93-34-132-33.ip49.fastwebnet.it) (Remote host closed the connection)
[17:51:50] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[17:52:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:57:24] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[17:57:44] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[18:03:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[18:34:24] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:34:29] *** Joins: dgcampea-2 (~dgc@user/dgcampea)
[18:34:29] *** Quits: dgcampea (~dgc@user/dgcampea) (Killed (NickServ (Forcing logout dgcampea -> dgcampea)))
[18:34:29] *** dgcampea-2 is now known as dgcampea
[18:35:21] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[18:35:48] <JEEB> znf: at least there is generic rw_timeout logic in libavformat/avio.c , which should be protocol agnostic.
[18:36:27] <znf> doesn't really seem to do anything with pipe sadly
[18:36:27] <JEEB> I wonder if pipe protocol returns EAGAIN
[18:36:35] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[18:37:07] <JEEB> ok, so pipe is actually part of file
[18:37:11] <JEEB> unsurprisinglty
[18:38:51] <JEEB> ok, so follow has to be set for it not to be EOF
[18:38:56] <JEEB> which is a file-only option
[18:38:58] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[18:39:33] <JEEB> znf: try adding http://git.videolan.org/?p=ffmpeg.git;a=blob;f=libavformat/file.c;h=7001750c80d0057e22c26264c6e046cc84b185c7;hb=HEAD#l85 to the pipe options list, and set -follow 1
[18:39:44] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[18:39:48] <JEEB> although...
[18:39:57] <znf> pipe option list?
[18:39:59] <JEEB> if reading pipe files never times out
[18:40:05] <znf> I just use `-` for input
[18:40:13] <JEEB> yes, which is the same as pipe:
[18:40:39] <JEEB> ok, and here comes the bit where I don't know how reading pipes works
[18:40:57] <JEEB> like, with files when you hit EOF you get zero
[18:41:00] <JEEB> right away
[18:41:17] <JEEB> but does pipe just instead get stuck on the read function until you get more data
[18:41:48] <znf> I've no idea
[18:41:57] <znf> Right now, it seems that it's simply never stopping
[18:42:12] <znf> # nvidia-smi | grep ffmpeg | wc -l
[18:42:12] <znf> 97
[18:42:40] <znf> and it's just...
[18:42:40] <znf> v
[18:42:41] <znf> strace: Process 27585 attached
[18:42:41] <znf> read(0,
[18:42:58] <JEEB> yea, so most likely the system read call just blocks
[18:43:08] <JEEB> so you need an external thing that kicks it instead
[18:44:48] <JEEB> sounds like fun to implement it in a cross-platform way
[18:44:58] <JEEB> I guess all OSs nowadays have async read/write I/O APIs
[18:45:02] <JEEB> but this isn't using them :D
[18:45:02] *** Joins: crashrep (~crashrep@user/crashrep)
[18:45:55] <JEEB> also reminds me that I should at one point attempt to implement a separate "if you haven't received any packets from input in X time" timeout
[18:46:12] <JEEB> since I've got enough MPEG-TS streams which contain MPEG-TS packets just fine, just no media packets :P
[18:46:24] <JEEB> so on the I/O level everything is OK, data is being received
[18:46:31] <JEEB> but then demuxer never returns anything
[18:47:08] <kepstin> honestly, there's not really any good general purpose async IO on linux, you've just got to use IO threads :(
[18:47:31] <kepstin> (there's useful async IO for some specific circumstances, but not in general)
[18:47:33] <JEEB> I might check how other synchronous IO things like http work with rw_timeout
[18:47:35] <JEEB> or rtmp
[18:47:51] <JEEB> if they do anything which could be reusable for pipes
[18:48:05] <JEEB> since pipe read() most likely just blocks until data is received or the other side dies or something
[18:48:22] <JEEB> not sure if it will die with named pipes on *nix
[18:51:59] *** Quits: waffeln (~waffeln@ip5b40ce95.dynamic.kabel-deutschland.de) (Quit: Connection closed)
[18:52:58] *** Joins: arinov_ (~arinov@31.142.86.27)
[18:59:45] <znf> not sure how I'd implement something myself
[18:59:59] <znf> I just use tvheadend to pass stuff to ffmpeg to encode :P
[19:00:12] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[19:03:05] *** Joins: beaver (~beaver@user/pong)
[19:23:47] *** Joins: Volgaar (~volgaar@147.94.11.82)
[19:34:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:47:17] *** Joins: rsx (~dummy@ppp-188-174-138-205.dynamic.mnet-online.de)
[19:51:15] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[20:00:17] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:01:58] *** Joins: xkuru (~xkuru@user/xkuru)
[20:03:27] *** Joins: crashrep (~crashrep@user/crashrep)
[20:08:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:12:44] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[20:15:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:21:27] *** Quits: MrCollinsGA (~MrCollins@38.21.140.88) (Quit: Leaving)
[20:21:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:22:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:31:48] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 240 seconds)
[20:32:18] *** Quits: MajorBiscuit (~MajorBisc@c-001-017-039.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[20:35:09] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:45:23] *** Joins: crashrep (~crashrep@user/crashrep)
[21:02:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:04:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:05:17] <aphysically> huh, the normalize filter with dual_mono=true converts mono to stereo
[21:05:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:05:29] <aphysically> I thought it just adjusted the  normalization based on the description, but it actually converts it
[21:06:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:35] *** Joins: Elzington (~Elzington@68.235.43.84)
[21:08:39] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[21:09:37] <aphysically> I was able to work around the dashenc problem :^)
[21:10:18] <Bombo> in bash script i got an array with file list (file filename.mp4) in ${FLIST[@]} i want ffmpeg to read that list as input (for -f concat), normally that would be '-i flist.txt' so i use ffmpeg -f concat -safe 0 -i <(printf '%s\n' "${FLIST[@]}") -c copy out.mp4 which works. is there a better way?
[21:10:35] <aphysically> as long as I force the read framerate with -r *and* transcode to a new resolution at least once, even though the copied stream has the wrong framerate listed, the other ones have correct framerates and dash will share a timebase between them for the playlist which is enough to fix the hiccups/keep it working
[21:10:39] <aphysically> in dashjs
[21:22:22] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[21:28:32] <kepstin> aphysically: huh, does it actually convert it, or does it just put a restriction on its input regarding supported channel layouts so an auto-conversion is added?
[21:28:41] <kepstin> i suppose there's not much difference from a user point of view tho
[21:32:59] <aphysically> kepstin: I think it does actually convert it?
[21:33:01] <aphysically> ffmpeg -r 2997/125 -t 20 -f lavfi -i testsrc -pix_fmt yuv420p -c:v libx264 -y bad_framerate_direct.ts; ffmpeg -i bad_framerate_direct.ts -c:v copy -y out.mp4
[21:33:24] <aphysically> -> out.mp4 has 24000/1001, but if I add -r 2997/125 before the input on the second command it's 2997/125
[21:33:40] <kepstin> oh, i was referring to your previous comment about the normalize filter
[21:33:48] <aphysically> oh
[21:34:01] <aphysically> I don't know!
[21:34:12] <aphysically> I'll have to look at the the formats
[21:34:18] <aphysically> errr, the filter chain I mean
[21:34:23] <kepstin> it's kind hard to tell and it doesn't really make much difference to people using the filter, heh.
[21:34:26] <aphysically> (to distinguish between auto conversion or not)
[21:35:42] <aphysically> I need to find that old patch on the ML that adds a command to print out he full filter chain still
[21:35:55] <aphysically> JEEB mentioned it but I never tracked it down :P
[21:36:41] <aphysically> (it's just easier than reading through it in verbose/debug mode where things aren't clear always)
[21:36:54] <aphysically> but I've always eventually figured out what I needed from it
[21:38:19] <Bombo> since what version does -pattern_type glob work? un my ubuntu i got 'ffmpeg version 4.2.4-1ubuntu0.1 Copyright (c) 2000-2020 the FFmpeg developers'
[21:38:42] <Bombo> '*.mp4: No such file or directory' hm
[21:40:40] <aphysically> kepstin: I think it does matter from a user POV
[21:41:06] <aphysically> "Multi-channel input files are not affected by this option. Options are true or false. Default is false." -> but if it works by putting a restriction on the input, then stereo input would be treated as mono
[21:41:24] <aphysically> so in order for the documentation to be correct I think that must not (or uhh, should not) be the case
[21:42:12] <aphysically> my reading was "it's safe for me to turn this on always and it won't affect non mono stuff", but that wouldn't be true if it works by auto conversion, I think
[21:42:53] <aphysically> so I guess now I need to figure out which it is to find out if I need to modify stuff to only turn it on for mono input :P
[21:43:01] <kepstin> Bombo: pretty sure it's been around since before that version. But the "-pattern_type" option is specifically an option for the image2 demuxer, and isn't applicable for inputs that aren't image sequences.
[21:44:24] <kepstin> Bombo: if you share what you're trying to accomplish, we could point you at an appropriate way to actually do that.
[21:44:37] <Bombo> kepstin: oh that would be the reason. i'm trying ffmpeg -f concat -pattern_type glob -i '*.mp4' -c copy out.mp4
[21:45:00] <kepstin> yeah, that's not how concat demuxer works :)
[21:45:45] <Bombo> i already got this solution ffmpeg -f concat -safe 0 -i <(printf '%s\n' "${FLIST[@]}") -c copy out.mp4
[21:45:51] <kepstin> Bombo: see the example on https://trac.ffmpeg.org/wiki/Concatenate#demuxer - the concat demuxer takes a "playlist" files that contains a list of input files. There's some examples provided of how to automatically make that file.
[21:46:03] <Bombo> this worked, but the dudes in #bash say it's bad
[21:46:47] <Bombo> so i just wondered if there is a 'better' way to do it. without creating a temp file.
[21:46:54] <furq> printf "file %q" *.mp4 | ffmpeg -safe 0 -f concat -i -
[21:47:00] <furq> is more or less what i use
[21:47:13] <furq> "file %q\n"
[21:48:00] <Bombo> ok pretty much the same i guess :)
[21:48:05] <kepstin> note the use of the %q specifier in particular there, which does shell-style quoting for escaping (I'm not sure that's an exact match for what ffmpeg expects? but it's probably better than no quoting)
[21:48:23] <furq> pretty sure someone in here said it's not perfect
[21:48:26] <Bombo> oh that's nice
[21:48:31] <kepstin> the particular thing the bash folks would say is a problem with your command would be how it deals with filenames containing problematic characters
[21:48:33] <furq> but as long as your filename doesn't contain doublequotes i'm sure it'll be fine
[21:48:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:48:48] <emanuele6> furq: yes, that would quote potentially
[21:48:52] <emanuele6> err
[21:49:09] <emanuele6> furq: yes, that would quote potentially using bash's $'..' syntax which is not compatible with ffmpeg's
[21:49:16] <Bombo> yes i get that, but my source files are clean just [a-z][A-Z][0-9]_
[21:49:22] <furq> no problem then
[21:49:28] <furq> i would say it's more portable but %q isn't
[21:49:31] <furq> but you're using bash anyway so who cares
[21:49:58] *** Quits: NaviTheFairy (~Squirrel@user/navithefairy) (Ping timeout: 272 seconds)
[21:51:17] <emanuele6> furq: the more correct way would be:     shopt -s nullglob; files=( *.mp4 ); (( ${#files[@]} )) && printf "file '%s'\\n" "${files//\'/\'\\\'}" | ffmpeg ... -i -
[21:51:53] <emanuele6> err: "${files//\'/\'\\\'}" -> "${files[@]//\'/\'\\\'}"
[21:52:03] <furq> yeah i'll just stick with what i have
[21:52:32] <Bombo> too many slashes ;)
[21:52:36] <emanuele6> i.e. save files in an array, use   file '%s'\n  instead of  file %q\n
[21:53:04] <emanuele6> and pass to print the files with ' replaced with '\'' instead of the files directly
[21:53:19] <emanuele6> also, again, err: "${files[@]//\'/\'\\\'\'}"
[21:53:37] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[21:53:47] <emanuele6> which you could write like this to make it more readable:  "${files[@]//\'/"'\\''"}"
[21:57:54] <Bombo> i do it like this: FILES=(${SRCDIR}/record_${NUM}.mp4 ${SRCDIR}/record_${NUM}_*.mp4); for file in ${FILES[@]}; do FLIST+=("file '$PWD/$file'"); done; ffmpeg -f concat -safe 0 -i <(printf '%s\n' "${FLIST[@]}") -c copy out.mp4
[21:58:15] <emanuele6> that is just wrong though
[21:58:25] *** Joins: Enverex (~Enverex@213.31.251.6)
[21:58:46] <Bombo> works for me
[21:58:54] <emanuele6> that will definitely 100% break if the files contain ' '
[21:58:57] <emanuele6> have you even tried?
[21:59:00] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[21:59:13] <Bombo> yes like i said files are clean ;)
[21:59:37] <emanuele6> not sure why you are writing this much code if it just piling up even errors and is not even necessary
[21:59:39] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[22:00:34] *** Joins: rvalue (~rvalue@user/rvalue)
[22:00:53] <Enverex> I'm trying to copy one collection of streams into another format (specifically MKV) using copy to avoid losing anything, but ffmpeg doesn't seem to like pcm_bluray. Is there any way of telling it to copy all streams except for that one, for which it should use FLAC instead? (without having to specify every single stream individually, as there's
[22:00:53] <Enverex> often more than a dozen so it would be an absolute mess). In short, a "if it's an unsupported format, use FLAC" style switch.
[22:01:09] <emanuele6> Bombo: like
[22:01:12] <emanuele6> printf "file '%s'\n" "${SRCDIR}/record_${NUM}"{,_*}.mp4 | ffmpeg -f concat -safe 0 -i - -c copy out.mp4
[22:01:20] <emanuele6> that is still wrong
[22:01:34] <emanuele6> but that is shorter and at least works in a decent amount of cases
[22:01:47] <emanuele6> your code is just an horrid pile of errors
[22:03:02] <emanuele6>   files=( "file '%s'\n" "${SRCDIR}/record_${NUM}"{,_*}.mp4 ); printf "file '%s'\n" "${files[@]//"'"/"'\''"}" | ffmpeg -f concat -safe 0 -i - -c copy out.mp4
[22:03:14] <emanuele6> and that is perfectly safe and way shorter than yours ^
[22:03:19] <emanuele6> err
[22:03:25] <emanuele6>   files=( "${SRCDIR}/record_${NUM}"{,_*}.mp4 ); printf "file '%s'\n" "${files[@]//"'"/"'\''"}" | ffmpeg -f concat -safe 0 -i - -c copy out.mp4
[22:03:35] <emanuele6> i copy pasted too much, it's even shorter :)
[22:04:52] <emanuele6> if you want to make it even better, enable extglobs, and use: "${SRCDIR}/record_${NUM}"?(_*).mp4 instead of "${SRCDIR}/record_${NUM}"{,_*}.mp4
[22:06:27] *** Quits: l4yer (~l4yer@84.69.191.245) (Ping timeout: 272 seconds)
[22:07:24] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:07:44] <furq> printf "file %q\n" "$SRCDIR/record_$NUM"{,_*}".mp4" | ffmpeg -f concat -safe 0 -i -
[22:09:37] *** Quits: arinov_ (~arinov@31.142.86.27) (Ping timeout: 272 seconds)
[22:10:12] <emanuele6> exactly, that is still wrong, but it's better than that pipe of bugs with all those unquoted substitutions
[22:10:22] <emanuele6> s/pipe/pile/
[22:10:39] <furq> i guess there's no reason to not just use 'file "%s"\n' if it only breaks on " anyway
[22:10:51] <furq> then you can run it in ksh which i'm sure is a pressing desire of everyone
[22:11:03] <emanuele6> furq: you can't use "" in a playlist file for quoting
[22:11:14] <emanuele6> or can you? are you sure you can? i am pretty sure you can't
[22:11:20] <aphysically> kepstin: well doesn't matter now anyway :^) https://github.com/GBeauregard/pyffstream/commit/29ff7669e0afb538d17844ebf042341ac2c3de48
[22:12:46] <emanuele6> still i don't get the point of using %q at all.
[22:13:13] <emanuele6> you are relying on playlist file quoting being fully compatible with bash quoting which is not true and doesn't make sense to me
[22:13:45] <emanuele6> and the bash code you need to make that operation fully safe is really not much as i have shown above.
[22:13:51] <aphysically> fwiw I use ' quoting for ffconcat playlists, because I couldn't figure out the other rules for playlist file quoting
[22:14:01] <aphysically> (it's like shell quoting, but not quite)
[22:14:56] <aphysically> "'" + str(unescaped).replace("'", "'\\''") + "'"
[22:14:58] <aphysically> in Python
[22:15:06] <emanuele6> ^ exactly
[22:15:14] <emanuele6> that is all it takes to make it 100% safe
[22:16:24] <emanuele6> it's like that shell quoting, but there is only '-quoting and \-quoting
[22:16:50] <aphysically> the filter complex quoting is hilarious
[22:16:53] <emanuele6> not sure what furq was talking about with that "%s" thing, "" is not special in ffconcat playlist
[22:16:58] <aphysically> there's 3 levels of quoting if you're doing it in shell
[22:17:04] <aphysically> luckily in python I don't have to do the shell quoting portion
[22:17:35] <aphysically> https://bpa.st/BGYA
[22:18:13] <aphysically> and then on top of that you need to do shell escaping if you're in a shell
[22:19:20] <aphysically> the docs is hilariou
[22:19:22] <aphysically> s
[22:19:26] <aphysically> -vf "drawtext=text=this is a \\\\\\'string\\\\\\'\\\\: may contain one\\, or more\\, special characters"
[22:19:34] <aphysically> that draws: this is a 'string': may contain one, or more, special characters
[22:19:49] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:30:28] *** Joins: crashrep (~crashrep@user/crashrep)
[22:33:48] <jafa> ffmpeg encoding with libfdk_aac is adding silence frames to the start - AAC-LC adds 2x1024 samples, HE-AACv1 adds 2x2048 samples, and HE-AACv2 adds 3x2048 samples
[22:34:57] <jafa> for AAC-LC I can skip the first frame but that presumably won't work for HE-AACvs/v2 due to not every frame being a key frame
[22:35:31] <JEEB> uhh, I only recall TrueHD and AC-4 having non-random access point audio packets...
[22:35:32] <aphysically> kepstin: have you seen the normalize patches on the ML
[22:35:43] <galad> jafa: that should be the priming delay, at least in mp4 and mkv the actual delay value should be written in the container
[22:36:00] <galad> jafa: here's some info on mp4/mov https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFAppenG/QTFFAppenG.html
[22:36:06] <aphysically> JEEB: is ac4 support for ffmpeg in the works? I remember someone talking about it, but I've never even seen any ac4 sample before
[22:36:19] <aphysically> dolby seems to insist they're out there though
[22:36:39] <JEEB> yea, they are offering blowjobs if you as much as test their encoders in your broadcast system
[22:36:48] <JEEB> sweet patent dough
[22:37:25] <JEEB> aphysically: there was work but apparently the developer got C&D'd by dolby even though it was an implementation following the publicly available ETSI specification. I don't know if that developer wishes to continue the work without getting something out of it
[22:37:46] <JEEB> there are patches on the mailing list as well as various people might have additional patches to fix things that weren't working correctly
[22:38:21] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[22:38:38] <aphysically> oof that's annoying for them
[22:39:15] <JEEB> D are OK with open source as long as you do not make your own implementation of the decoder or encoder. people are supposed to license those from D
[22:39:31] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[22:39:46] <JEEB> meanwhile I hear DTS will just yell and ramble at you if you even mention open source
[22:40:40] <aphysically> ffmpeg already supports all the new DTS stuff, or at least the core part relevant for playback and can pass on the object nonsense?
[22:40:45] <aphysically> I thinK?
[22:41:10] <aphysically> relevant for stereo/basic surround playback, I mean
[22:41:22] <JEEB> yea, an anonymous hacker's DTS decoder stuff got merged which made it bitexact a few years back. I haven't heard of them doing any object based audio
[22:41:46] <JEEB> for Dolby ETSI has the E-AC-3 object based audio spec, and I have a hunch the object coding is similar in the extra stream in TrueHD
[22:41:48] <aphysically> hmm I thought they had their own version of Atmos but maybe I misremember
[22:42:07] *** Joins: waffeln (~waffeln@ip5b40ce95.dynamic.kabel-deutschland.de)
[22:42:19] <JEEB> in truehd if you just decoded all sub-streams you'd get the object stuff, but since it isn't PCM audio it resulted in just random noise
[22:42:44] <JEEB> which is why for now its decoding is disabled
[22:43:22] <aphysically> there isn't any open source implementation of the object stuff at all, right? As in nobody has an open source implementation of Atmos that, say, tries to render it in some particular spatial stereo configuration, (or even some arbitrary one?)
[22:43:48] <aphysically> not just ffmpeg, but anywhere
[22:43:52] <JEEB> not that I know, even though the object coding is defined in ETSI at least for E-AC-3. but as usual, it requires a hacker that is actually interested in it :P
[22:44:01] <JEEB> interested and having the time
[22:44:05] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-a8d1-84de-9802-ba0b.res6.spectrum.com)
[22:44:11] <durandal_1707> stop calling me hacker
[22:44:38] <aphysically> and doesn't mind being contacted by Dolby or is anonymous, apparently
[22:44:40] <JEEB> I called you a developer, the first mention of "hacker" was towards the person whose nickname I don't recall who did the DTS decoder
[22:44:59] <JEEB> the bitexact DTS XL extensions and bitexactness
[22:45:16] <JEEB> and hacker is just someone dealing with stuff, a geek :P
[22:45:26] <JEEB> at least in my parliance
[22:45:42] <kepstin> there has been stuff done in open source for positional audio for e.g. games and stuff, so there's probably something that can be leveraged for the actual audio rendering once the object decoding/positioning stuff is figured out.
[22:45:51] <JEEB> yea
[22:46:17] <JEEB> the problem is that someone needs to care about it first to get the decoding done. and I find myself being not really too much interested in it with the amount of time I have available to things
[22:46:26] *** Quits: waffeln (~waffeln@ip5b40ce95.dynamic.kabel-deutschland.de) (Client Quit)
[22:46:27] <JEEB> not sure if I have any blu-rays with that stuff
[22:47:00] <JEEB> I have thought about poking at fraunhofer's lovechild MPEG-H Audio but then remembered it has zero actual usage outside of the sample suite
[22:47:08] <JEEB> I guess at least there's a reference sample suite :P
[22:47:11] *** Quits: durandal_1707 (~computer@95.168.116.15) (Read error: Connection reset by peer)
[22:47:11] <JEEB> with reference decode results
[22:47:51] <JEEB> fraunhofer is publishing reference code but its license I'm not sure if it's compatible with normal OSS licenses
[22:48:04] <JEEB> since it only says it's OK to put that code into implementations of that specific audio format
[22:48:27] <JEEB> so if you put it into LGPL or GPL project, if someone takes a line of that code and puts it into another format's implementation that makes it not kosher
[22:48:41] <JEEB> so I guess you just can't utilize it in normal open source? ┐(´д｀)┌
[22:48:44] <jafa> galad - thanks
[22:48:53] <JEEB> meanwhile at least ITU utilizes normal MIT license now
[22:48:55] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 240 seconds)
[22:48:58] <JEEB> for reference implementations
[22:49:05] <JEEB> no random fraunhofer/ISO|IEC bullshit
[22:49:23] *** Joins: durandal_1707 (~computer@95.168.116.15)
[22:51:19] <Bombo> emanuele6: sorry, thx it works now with spaces, but i'm not sure about printf "file '%s'\n" "${FILES[@]//"'"/"'\''"}" it replaces ' in filenames with \' right?
[22:51:48] <emanuele6> it replaces ' with '\''
[22:52:15] <emanuele6> and then in the format string you have '%s' so it adds a ' at the start and at the end
[22:52:42] <emanuele6> so like:   this file's great.mp4
[22:52:43] <Enverex> Is there any way to -c copy all streams except for one?
[22:53:08] <emanuele6> becomes:   file 'this file'\''s great.mp4'
[22:53:48] <Bombo> emanuele6: isn't that too much? wouldn't file 'this file\'s great.mp4' do?
[22:55:31] <emanuele6> try it and see.
[22:55:37] <emanuele6> either way no.
[22:55:50] <emanuele6> maybe read the documentation for concat that has been linked.
[22:56:35] <emanuele6> https://ffmpeg.org/ffmpeg-formats.html#concat
[22:58:03] *** Joins: System_Error (~SystemErr@user/systemerror)
[22:59:01] <Bombo> emanuele6: i see. thx again.
[22:59:20] <Bombo> and that's why %q doesn't work it just does \'
[23:00:21] <emanuele6> the reason that %q is nonsensical is that it is assuming that bash's quoting and ffconcat's are fully compatible which is not true.
[23:00:51] <emanuele6> %q quotes the string in a manner in which it would be safe to inject it in another bash shell
[23:00:52] <Bombo> omkay
[23:01:21] <emanuele6> bash does not only have '-quoting and \-quoting, it also has $''-quoting, $""-quoting "-quoting
[23:02:21] <emanuele6> as an example, if you had a file that contains a newline character e.g. stupid<newline>file.mp4
[23:02:51] <emanuele6> printf 'file %q\n' *.mp4   will print    file $'stupid\nfile.mp4
[23:03:24] <emanuele6> which ffmpeg will interpret as if the file is named   $stupid\nfile.mp4   (literally backslash n)
[23:04:01] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:04:35] <emanuele6> also the exact output format of %q is unspecified, it could change between bash version, etc. the only guarantee is that if you inject properly its output in a bash shell, it will be safe.
[23:05:01] <emanuele6> and ffconcat playlist files are not bash shells, and it is silly to think otherwise
[23:05:17] <aphysically> if softworkz patch ever makes it the graphicsub2text will be really cool
[23:05:48] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-a8d1-84de-9802-ba0b.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:07:22] <aphysically> especially if dashenc ever adds subtitle support :P
[23:07:44] <aphysically> I'm not even sure what the best subtitle format would be for dash if it was ever supported
[23:08:47] *** Quits: NaviTheFairy (~Squirrel@user/navithefairy) (Quit: Oh no. A thing broke.)
[23:11:29] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[23:11:50] *** Quits: NaviTheFairy (~Squirrel@user/navithefairy) (Remote host closed the connection)
[23:12:49] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[23:16:41] *** Quits: rsx (~dummy@ppp-188-174-138-205.dynamic.mnet-online.de) (Quit: rsx)
[23:17:02] <aphysically> huh, actually none of these can be carried over mpegts anyway
[23:19:16] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 272 seconds)
[23:19:48] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[23:20:28] *** Joins: darkapex (~darkapex@user/darkapex)
[23:22:04] <aphysically> oh, huh
[23:22:49] <aphysically> I can't support text subs anyway even if dash did support it: mpegts can't carry any of the text subtitle formats that ffmpeg is capable of encoding to
[23:22:56] <Bombo> but
[23:23:22] <aphysically> maybe there's a filter somewhere that can encode as closed captions?
[23:23:34] <aphysically> not ideal still
[23:23:42] <Bombo> this doesn't work: FILES=("test/record_10"{,_*}.mp4); printf "file '%s'\n" "${FILES[@]}" | ffmpeg -f concat -safe 0 -i - -c copy out.mp4
[23:24:05] <Bombo> [file @ 0x55d183eeb240] Protocol 'file' not on whitelist 'crypto'! [concat @ 0x55d183ee8680] Impossible to open 'test/record_10.mp4' pipe:: Invalid argument
[23:25:04] <Bombo> just two files in test/record_10.mp4 test/record_10_1.mp4
[23:32:40] *** Joins: lavaball (felix@31.204.155.215)
[23:35:44] <aphysically> hmm I think the only way to fix that would be to just seriously investigate using something that's not mpegts
[23:38:34] *** Joins: shokohsc4 (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[23:38:47] <jafa> is there a quick way to detect how many samples of priming/preroll an encoder is adding?
[23:39:11] <jafa> doing an encode followed by a decode results in differing amounts of silence depending on the decoder
[23:39:30] <jafa> encode to mp4 container and look at the start timestamp?
[23:39:43] <jafa> source is a wav file so no src timestamps
[23:40:09] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:40:09] *** shokohsc4 is now known as shokohsc
[23:40:19] <JEEB> if you are encoding with libavcodec, you will get negative timestamps from plus side data for samples to be skipped
[23:40:34] <JEEB> then the skipped samples count is written into the mp4
[23:40:38] <JEEB> as an edit list, I think?
[23:40:58] <jafa> interesting, will run a test
[23:41:41] <JEEB> if you are using ffmpeg.c, nobody seems to have implemented that there :P so when you decode a file where the priming samples are known, it will then just read it as a file with negative timestamps. then it will look at f.ex. WAV output format, and see that WAV does not support negative timestamps. thus it will then adjust the timestamps to start at zero, not cut initial X samples off
[23:42:35] <JEEB> if you encode with ffmpeg.c from mp4 to mp4 you will get double priming samples, but at least your timestamps can be properly negative.
[23:43:09] <JEEB> basically, nobody implemented the skip/dropping of priming samples in ffmpeg.c :P
[23:43:16] <JEEB> the API itself supports it
[23:44:34] <JEEB> the encoder can expose AV_PKT_DATA_SKIP_SAMPLES as well as it most likely adjusts timestamps to be negative if you start at zero PTS
[23:45:04] *** Joins: minimal (~minimal@user/minimal)
[23:45:08] <JEEB> so that if you feed raw audio with PTS=0 as the start point, your encoder output should start at a timestamp earlier than that due to the priming delay
[23:46:21] <aphysically> kepstin: this patch series http://ffmpeg.org/pipermail/ffmpeg-devel/2022-February/293352.html
[23:47:55] <jafa> ffprobe shows the first frame of the mp4 file I generated to be 0
[23:48:17] *** Quits: LRN (~LRN@broadband-95-84-200-6.ip.moscow.rt.ru) (Quit: Leaving)
[23:49:07] <JEEB> that does not match my experience
[23:49:23] <JEEB> let me double-check with ffmpeg.c
[23:50:05] <jafa> ffmpeg -i build/TimingTest.wav -filter_complex "[0:a]pan=stereo|FL=FC|FR=FC[a]" -map [a] -c:a libfdk_aac -cutoff 20k -b:a 128k aaclc.mp4
[23:50:21] <jafa> ffprobe aaclc.mp4 -show_frames
[23:51:12] <jafa> same result with mkv
[23:52:19] <JEEB> whew
[23:52:41] <JEEB> I verified with -debug_ts and I'm seeing negative timestamps from the encoder
[23:53:04] <JEEB> ffmpeg -v verbose -i stuff.wav -debug_ts -t 0.5 -c:a aac -b:a 192k random_aac.mp4
[23:53:09] <JEEB> so if you do something like that
[23:53:22] <JEEB> keep an eye on the encoder and muxer lines
[23:54:09] <JEEB> encoder -> type:audio pkt_pts:-1024 pkt_pts_time:-0.0213333 pkt_dts:-1024 pkt_dts_time:-0.0213333
[23:54:29] <JEEB> so at least that encoder is doing its thing at that point
[23:54:39] <JEEB> I would expect fdk_aac wrapper to do similar, but you can check
[23:54:50] *** Joins: arinov_ (~arinov@5.24.108.1)
[23:54:55] <JEEB> "encoder <-" lines are "fed to encoder"
[23:55:05] <JEEB> "encoder ->" lines are "received from encoder"
[23:55:17] <jafa> encoder -> type:audio pkt_pts:-43 pkt_pts_time:-0.000895833 pkt_dts:-43 pkt_dts_time:-0.000895833
[23:55:51] <jafa> negative but not negative enough - should be approx 2048 samples
[23:56:07] <JEEB> then I see that muxer's first packet in my case gets that same negative PTS
[23:56:10] <JEEB> muxer <- type:audio pkt_pts:-1024 pkt_pts_time:-0.0213333 pkt_dts:-1024 pkt_dts_time:-0.0213333 size:492
[23:56:41] <jafa> muxer <- type:audio pkt_pts:-43 pkt_pts_time:-0.043 pkt_dts:-43 pkt_dts_time:-0.043 size:341
[23:56:55] <JEEB> so at least that bit seems to go according to plan
[23:57:19] <JEEB> you'd have to look into the fdk-aac encoder and wrapper why the values is not as you expect
[23:57:35] <jafa> 42.66ms is about right for the delay
[23:58:00] <JEEB> ah, then it's just your time base being different
[23:58:48] <jafa> i thought ffmpeg forced the timebase to be the sampling rate (which always confused me as the purpose of timestamps is for av sync)
[23:59:17] <JEEB> I don't think it forces stuff, it just looks at the previous thing in line
[23:59:20] <JEEB> usually at least
[23:59:26] <jafa> ok, so this tells me the delay but not with enough resolution to count samples
