[00:00:48] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[00:01:50] *** Joins: kiran (~kiranostr@78.40.148.178)
[00:02:38] <patchie> Code using SQLAlchemy: db1 = create_engine("mssql+pyodbc://user:{}@hostname.xc.domain.com/database?driver=ODBC+Driver+18+for+SQL+Server".format("password"), echo=True)
[00:02:45] <patchie> Error message: pyodbc.InterfaceError: ('IM002', '[IM002] [Microsoft][ODBC Driver Manager] Data source name not found and no default driver specified (0) (SQLDriverConnect)')
[00:02:48] <patchie> anyone?
[00:03:03] *** Batzy_ is now known as Batzy
[00:04:01] <patchie> Everything seems fine to me in "ODBC Data Source administrator": https://usercontent.irccloud-cdn.com/file/v4j3GuG4/ODBC_Data_Source_administrator.png
[00:06:02] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[00:06:20] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[00:06:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[00:06:43] *** Joins: bindu (~bindu@user/bindu)
[00:07:07] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[00:07:19] *** Joins: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de)
[00:07:38] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[00:07:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:07:48] *** Joins: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net)
[00:08:06] *** Joins: wyclif (~wyclif@user/wyclif)
[00:08:40] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[00:08:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:09:00] *** Joins: noteness (~noteness@user/noteness)
[00:09:16] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[00:09:28] <mickey> in ["hello world", "hi there"], why does [s.split(" ") for s in l] think s is a float and not a string?
[00:09:42] <mickey> i expect to get [["hello", "world"], ["hi", "there"]]
[00:09:53] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[00:10:10] <SnoopJ> mickey, can you share the complete error report, and perhaps the runnable source that produced it?
[00:10:18] <SnoopJ> on https://bpa.st/
[00:12:24] *** Quits: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net) (Client Quit)
[00:12:40] <mickey> SnoopJ oddly i can't reproduce it myself in a new file
[00:12:59] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:13:18] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 250 seconds)
[00:13:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[00:13:23] <mickey> i have a df.values.to_list() that print just fine as ['sentence one', 'sentence two
[00:13:53] <mickey> i have a l = df.values.to_list() that print just fine as ['sentence one', 'sentence two'], and then l = [s.split(" ") for s in l] which errors with AttributeError: 'float' object has no attribute 'split'
[00:13:56] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[00:13:58] <jinsun> it probably has nan in between somewhere
[00:14:44] *** Joins: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net)
[00:14:57] <mickey> interesting, i'll check
[00:15:01] <jinsun> do df.isna().any() and see if you any True
[00:15:05] *** Joins: magla (~gelignite@d5367992.access.ecotel.net)
[00:15:20] *** Quits: jessicaferem (~jessicama@2001:470:69fc:105::1:d6a1) (Quit: Reconnecting)
[00:15:34] *** Joins: jessicaferem (~jessicafe@2001:470:69fc:105::1:d6a1)
[00:16:11] <SnoopJ> oh, you have a DataFrame, not a list?
[00:16:40] <mickey> it *was* a dataframe, i used to_list() to make it a list.
[00:16:54] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[00:18:14] <mickey> yeah that was it. had an empty value somewhere in the middle
[00:18:23] <mickey> thanks. would never have thought about that
[00:18:26] <SnoopJ> ah
[00:19:28] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:19:42] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[00:21:06] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 250 seconds)
[00:21:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:21:17] *** Quits: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:22:01] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[00:22:16] *** Quits: KevinX (~KevinX@user/KevinX) (Read error: Connection reset by peer)
[00:22:43] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[00:22:43] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[00:23:19] *** Joins: KevinX (~KevinX@user/KevinX)
[00:24:25] <patchie> Anyone?
[00:26:46] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:27:13] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[00:27:13] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Quit: Leaving...)
[00:27:14] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 256 seconds)
[00:27:31] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:27:34] <ChrisWarrick> patchie: mssql is a fairly obscure topic here
[00:27:44] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:28:23] <pragmaticenigma> what's the question again patchie ? I came in a moment too late it would appear
[00:29:08] <patchie> pragmaticenigma: Code using SQLAlchemy: db1 = create_engine("mssql+pyodbc://user:{}@hostname.xc.domain.com/database?driver=ODBC+Driver+18+for+SQL+Server".format("password"), echo=True)
[00:29:18] <patchie> Error message: pyodbc.InterfaceError: ('IM002', '[IM002] [Microsoft][ODBC Driver Manager] Data source name not found and no default driver specified (0) (SQLDriverConnect)')
[00:29:24] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[00:29:28] <patchie> Everything seems fine to me in "ODBC Data Source administrator": https://usercontent.irccloud-cdn.com/file/v4j3GuG4/ODBC_Data_Source_administrator.png
[00:29:45] *** Joins: dbristow (~dbristow@user/dbristow)
[00:29:54] <patchie> ChrisWarrick: Yeah, i understand what you mean, but i have no better places to ask :P
[00:30:16] <TML> patchie: The error message seems to indicate it was expecting an ODBC DSN rather than the connect syntax you're using there.
[00:31:07] <patchie> but i dont want to use DSN, i dont want to store the connection syntax in windows
[00:31:11] <patchie> i wanna store it in the code
[00:31:15] <patchie> it has worked before
[00:31:17] *** Quits: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:31:43] <patchie> thats what's crazy, it seems that i always have this problem, and i have to tweak a bit, and restart the server and then it works. bah
[00:31:54] <patchie> but now i cannot figure out how to fix it
[00:31:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:32:12] <patchie> i also tested with earlier python versions, and also 32 bit
[00:32:16] *** Joins: blei (~blei@user/blei)
[00:33:20] <TML> patchie: :shrug: I rarely use Windows, so I can't be much help there, just offering an insight that I saw in the error message.
[00:33:42] <patchie> TML: appreciate it.
[00:33:49] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[00:34:11] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[00:34:46] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:34:52] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Remote host closed the connection)
[00:36:04] *** Joins: xkuru (~xkuru@user/xkuru)
[00:36:09] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[00:36:20] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[00:37:05] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[00:37:46] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:37:53] *** Joins: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net)
[00:38:05] <pragmaticenigma> from an example I see online, the instance is prefixed with a backslash not forward slash: create_engine(f"mssql+pyodbc://user:{password}@{host}\\{database}?driver={driver_name}", echo=True)
[00:38:39] <pragmaticenigma> MS really likes backslashes on paths
[00:39:22] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:2f9c) (Quit: Client closed)
[00:39:35] <grym> pragmaticenigma: it's not required, though
[00:39:42] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[00:40:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[00:40:38] <pragmaticenigma> just going by what I see for examples... seems to be a trend, and can't hurt to try
[00:40:51] <CodeMouse92_Work> I'm brand new to Django here, working in an existing code base. `rest_framework.test.APIClient` is being used to mock out API responses, but I'm getting `AttributeError: module 'responses' has no attribute '_is_string'`...
[00:40:52] <patchie> hmm, thats interresting, if i replace it with 1 or 2 backslashes, i got the same error message.
[00:41:12] <patchie> this must mean that there is something else wrong there with the syntax i guess?
[00:41:34] *** Quits: jinsun (~jinsun@user/jinsun) ()
[00:41:47] <CodeMouse92_Work> I'm really not sure how to move forward resolving this test, as both the absence of the attribute and the presence of the assumption responses._is_string is valid are within the libraries in question.
[00:41:48] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:41:50] *** Joins: wyclif (~wyclif@user/wyclif)
[00:41:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:41:57] <pragmaticenigma> patchie: personally I'm not a fan of the string formatter in python. It could be that. You might want to try simple string concatenation instead?
[00:42:00] *** Joins: dbristow (~dbristow@user/dbristow)
[00:42:12] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[00:42:36] <patchie> pragmaticenigma: do you have a simple example of "simple string concatenation"?
[00:42:42] <pragmaticenigma> patchie: when I look at Microsofts documentation, they have a completely different format for the connection string for the pyodbc: https://docs.microsoft.com/en-us/sql/connect/python/pyodbc/step-3-proof-of-concept-connecting-to-sql-using-pyodbc?view=sql-server-ver15
[00:42:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[00:43:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:43:25] <patchie> yes, but thats not sqlalchemy
[00:43:29] <pragmaticenigma> patchie: "mssql+pyodbc://" + user + ":" + password + "@" + host
[00:43:41] <patchie> ah, ok
[00:43:49] <patchie> i can test
[00:45:00] *** Joins: jinsun (~jinsun@user/jinsun)
[00:45:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:45:43] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:46:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:47:23] <patchie> still same problem
[00:47:24] <patchie> hmm
[00:47:31] <pragmaticenigma> patchie: there is also a helper in the sqlalchemy library to build the connection string.
[00:47:35] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[00:47:41] <pragmaticenigma> from sqlalchemy.engine import URL
[00:47:55] <patchie> aha
[00:48:27] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[00:48:38] *** Joins: unyu (~pyon@user/pyon)
[00:48:38] <pragmaticenigma> patchie: https://docs.sqlalchemy.org/en/14/dialects/mssql.html#dsn-connections
[00:48:50] *** Quits: akaWolf (~akaWolf@akawolf.org) (Read error: Connection reset by peer)
[00:48:56] <pragmaticenigma> near the bottom of the secondtion HostnameConnections, there is an example on using the URL builder
[00:49:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[00:49:10] *** Quits: parv (~quass@user/parv) (Read error: Connection reset by peer)
[00:49:13] *** Joins: drillbyt (drillbyt@user/drillbyt)
[00:49:14] <patchie> ok, will check it out, thanks!
[00:49:28] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[00:50:44] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[00:51:45] <SnoopJ> CodeMouse92_Work, I don't see that attribute anywhere in the Django source, is it perhaps something that's being crammed onto objects in the application you're working on, so that it's not there in general, but in critical pathways something populates it before it's used (except in your error) ?
[00:52:46] <SnoopJ> unless it's a Django plugin or somesuch. I would be poking around to see where in your codebase/dependencies the identifier `_is_string` appears. If it's only on your side, someone's probably stashing state.
[00:52:48] *** Quits: c_89 (~c_89@151.74.29.155) (Quit: Connection closed)
[00:53:14] *** Joins: aslicedbanjo (~aslicedba@81.141.55.116)
[00:53:56] *** Quits: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:30] <pragmaticenigma> that's kind of what I was thinking... strange for a library to raise an error about something prefixed with a single "_"
[00:55:10] *** Joins: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net)
[00:55:15] *** Quits: nuh^ (~nuh@50.232.121.75) (Remote host closed the connection)
[00:55:24] *** Joins: Pickchea (~private@user/pickchea)
[00:55:34] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:55:58] *** Quits: greedom (~greedom@p200300de670e4700f4b3f26165c1fae4.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:56:02] <rvalue> people who use wx, do they hand code all elements or is there a UI designer one can use?
[00:56:35] *** Quits: paul424 (~tom@ip-5-172-237-214.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:57:03] <pragmaticenigma> If it was me, I'd probably have developed a set of helper methods and wrappers to handle the repetitive build outs
[00:57:48] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[00:58:08] <patchie> pragmaticenigma: Ah, it works with the URL stuff. but if i want the signle line to work... i just found out that the password contains an "@"... how can i escape that character?
[00:58:32] <pragmaticenigma> ah-ha! the fun of "@" in a password
[00:58:32] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:58:58] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[00:58:59] <pragmaticenigma> patchie: if it was me, I'd always use the URL builder, store that connecting string to a variable and reference that variable throughout the code
[01:00:52] *** Quits: user51 (~user51@77.126.87.206) (Remote host closed the connection)
[01:00:57] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:01:06] <pragmaticenigma> patchie: otherwise, you can try running the password through urllib.parse.quote() but I don't recommend it
[01:01:36] <patchie> yeah, the strange thing is that the original code worked, and it didnt use urllib.parse.quote or URI builder
[01:01:37] *** Quits: ub (~Thunderbi@p200300ecdf3be98f4574cf7817efb211.dip0.t-ipconnect.de) (Quit: ub)
[01:01:42] <patchie> quite strange
[01:01:48] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[01:02:46] *** Joins: qlixed (~qlixed@181.44.129.13)
[01:03:22] <patchie> in python 3.8 32bit, it works.  in python 3.10 64bit, it doesnt work
[01:03:23] <pragmaticenigma> Could be variants in the parser for deciphering the connection string. I encourage the use of the URL builder because that would build out a connection string compatible with sqlalchemy, because both sides of the equation would be based within sqlalchemy and have compatibility
[01:03:54] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[01:04:11] *** Joins: TheCat (~TheCat@user/z-cat)
[01:04:30] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[01:04:57] <patchie> yeah
[01:05:00] *** Quits: magla (~gelignite@d5367992.access.ecotel.net) (Quit: Stay safe!)
[01:05:05] <patchie> thanks a lot though
[01:05:18] <patchie> super informative and super support :)
[01:05:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:05:53] *** Parts: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Leaving...)
[01:06:57] <pragmaticenigma> patchie: also, Python 3.10 probably contains a patch to UrlParse that wouldn't be in python 3.8. The urlparse method would have been fixed per the recent Log4J vulnerability
[01:07:31] *** Joins: matsaman (~matsaman@user/matsaman)
[01:08:14] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:09:25] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[01:10:04] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[01:10:58] <patchie> ah, ok. good to know
[01:11:08] <patchie> so probably its just a bugfix that breaks my code then
[01:11:21] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[01:11:45] *** Joins: TheCat (~TheCat@user/z-cat)
[01:11:55] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:13:51] *** Joins: wyclif (~wyclif@user/wyclif)
[01:14:26] *** Quits: VIle` (~Vile@73.182.253.255) (Read error: Connection reset by peer)
[01:15:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:15:49] *** Joins: Barones (~Barones@user/Barones)
[01:15:59] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[01:17:28] *** Joins: VIle` (~Vile@73.182.253.255)
[01:17:28] <ChrisWarrick> how was python's urlparse related to log4j?
[01:17:34] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:18:14] *** Quits: sinan (~sinan@85-76-81-181-nat.elisa-mobile.fi) (Ping timeout: 256 seconds)
[01:18:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:18:37] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:18:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[01:18:48] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[01:19:41] <pragmaticenigma> indirectly, but a lot of urlparsing libraries made use of the same regular expression to parse the URL
[01:20:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:20:46] *** Quits: nolan__ (~nolan_@user/nolan/x-2434303) (Remote host closed the connection)
[01:21:58] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:22:39] <SnoopJ> there don't appear to be any relevant changes since Log4Shell: https://github.com/python/cpython/commits/main/Lib/urllib/parse.py
[01:22:58] *** Joins: hams (~hams@user/hams)
[01:22:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:23:26] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 260 seconds)
[01:24:00] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:24:03] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:577:6cc8:313f:dee9)
[01:24:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:24:59] *** Quits: aslicedbanjo (~aslicedba@81.141.55.116) (Quit: Leaving.)
[01:25:46] <hams> hi friends. im getting these errors when trying to run code to operations.csv https://bpa.st/GLBQ
[01:25:51] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[01:26:11] <hams> most of the code runs and im getting graph data, but i dont know what to do with these AttributeError
[01:26:21] *** Joins: cliluw (~cliluw@47.147.77.43)
[01:26:47] *** Joins: xkuru (~xkuru@user/xkuru)
[01:27:10] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[01:27:51] *** Quits: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:28:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:29:33] *** Joins: fofoni_ (~fofoni@user/fofoni)
[01:30:29] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[01:30:44] <pragmaticenigma> SnoopJ: not sure, unless there's a base library elsewhere. my comment was based out of an article I read implicated using regex for url parsing, and highlighted python as being one of them
[01:31:34] <jinsun> hams: hist doesn't take normed as a parameter, looks like you have code for really old version of pandas and matplotlib
[01:31:36] <TML> hams: Google suggests https://stdworkflow.com/67/attributeerror-rectangle-object-has-no-property-normed-solution
[01:31:48] <SnoopJ> pragmaticenigma, do you have a link handy?
[01:31:48] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[01:32:30] <jinsun> hams: it was removed 2 years back, use density instead https://github.com/matplotlib/matplotlib/blob/main/doc/api/prev_api_changes/api_changes_3.2.0/removals.rst
[01:32:36] *** Quits: fofoni (~fofoni@user/fofoni) (Ping timeout: 250 seconds)
[01:32:47] <hams> oh wow
[01:32:53] <hams> thank you jinsun
[01:33:09] <hams> why does this happen?
[01:33:25] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[01:33:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:33:36] *** Joins: _0x00 (~0x00@user/0x00/x-6246543)
[01:34:23] <pragmaticenigma> SnoopJ: https://www.grc.com/sn/SN-853-Notes.pdf
[01:34:30] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[01:34:32] *** Quits: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:34:40] <hams> ---> 20 data["amount"].density(normed=True)
[01:34:42] <hams> like this?
[01:34:49] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[01:34:52] <jinsun> no
[01:35:05] *** Joins: redgloboli (~redglobol@user/redgloboli)
[01:35:08] <jinsun> normed has to be replaced with density
[01:35:30] *** Joins: sinan (~sinan@mobile-access-6df05d-76.dhcp.inet.fi)
[01:35:31] <jinsun> don't change hist to density
[01:36:09] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:36:18] <hams> wohooo that worked!!!
[01:36:33] <jinsun> it happens because the authors are allowed to change the api with newer versions, they normally deprecate and show deprecation warnings for a few version because actually removing it
[01:37:18] <jinsun> s/because/before
[01:37:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[01:38:12] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[01:38:13] <pragmaticenigma> SnoopJ: through that link has the link to the researchers: https://claroty.com/wp-content/uploads/2022/01/Exploiting-URL-Parsing-Confusion.pdf
[01:38:18] *** Quits: drillbyt (drillbyt@user/drillbyt) (Quit: Leaving)
[01:38:22] <jinsun> and it is a bit more common with scientific packages to break stuff too fast
[01:38:59] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:39:08] <TML> pragmaticenigma: Uhm - Log4Shell wasn't a URL parsing problem, it was an intentional design feature of the library to load classes from arbitrary LDAP servers.
[01:39:26] *** Joins: blackout69 (~blackout6@37.183.230.121)
[01:39:38] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder)
[01:39:55] *** Joins: parv (~quass@user/parv)
[01:40:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:40:27] *** Joins: ATAD (~ATAD@user/atad)
[01:40:48] *** Joins: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net)
[01:41:25] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Ping timeout (120 seconds))
[01:41:28] <SnoopJ> yea, what they're talking about here is distinct from Log4Shell (and amounts to "urllib doesn't follow the RFC" which I think is correct?)
[01:41:43] <SnoopJ> I can't tell if there's a CVE associated with that but I can't find one in that document
[01:41:56] <pragmaticenigma> TML: I never said it was... I said that some changes may have been made in light of it
[01:42:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:42:57] <pragmaticenigma> I have no proof if the python devs did anything. The person I was helping was using two diffrent versions of Python , which in itself can explain the different behavior witnessed.
[01:44:36] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9625:d862:24dc:5f5f) (Quit: pvergain)
[01:44:54] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:44:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:45:26] <TML> pragmaticenigma: I apologize, I seem to have misconstrued your statements
[01:45:44] <diverdude> Hi, given a dataframe like this:  https://dpaste.org/soKq  How do i make a query which selects all rec_id which has u_id = 1 and 2 ? (the would mean rec_id = [1, 2] should be the result)
[01:45:46] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:45:47] <pragmaticenigma> all good TML
[01:46:13] *** Joins: uxemacs (~timothy@user/uxemacs)
[01:46:47] *** Joins: wyclif (~wyclif@user/wyclif)
[01:47:17] <Timvde> Typing question: apart from an external API accepting a dict, is there any real reason to ever use a TypedDict over a dataclass?
[01:47:24] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[01:48:25] <tdsmith> hm, a typeddict is not what i thought it was
[01:48:41] <tdsmith> the pep suggests that one use case is to start gradually typing older codebases that are expecting to handle dicts
[01:48:50] <jinsun> tdsmith: not really, it is only good for legacy code and external apis
[01:49:03] <jinsun> oops Timvde ^
[01:49:22] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[01:49:24] <TML> diverdude: If I understood your question correctly, maybe you want df[df['rec_id'].isin([1,2])]
[01:49:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:49:58] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[01:50:09] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:5a9f:6734:1f65:234f) (Remote host closed the connection)
[01:50:12] <Timvde> Okay, thanks :) A colleague has written dict[str, Union[Foo, Bar, None]] as a return type and I was in doubt whether I should just request to define a TypedDict or ask to create a dataclass, seems like I'll be doing the latter then :)
[01:50:31] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[01:51:10] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:52:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[01:52:22] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[01:52:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:52:40] *** Quits: njhanley_ (~njhanley@static.15.210.217.95.clients.your-server.de) (Quit: ZNC - https://znc.in)
[01:52:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:53:06] *** Joins: njhanley (~njhanley@static.15.210.217.95.clients.your-server.de)
[01:53:26] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:9503:8932:cdd9:9528)
[01:54:35] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:9503:8932:cdd9:9528) (Remote host closed the connection)
[01:54:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:55:00] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:9503:8932:cdd9:9528)
[01:55:00] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[01:55:01] *** Quits: 040AAH1DN (~root@ip209.ip-94-23-121.eu) (Ping timeout: 240 seconds)
[01:55:24] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[01:55:24] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[01:55:33] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:55:58] <diverdude> TML: mm no that does not work.... but this seems to be a way to do it: [rec for rec, grp in df[['u_id','rec_id']].drop_duplicates().groupby('rec_id') if sorted(grp['u_id'].tolist()) == [1,2]]
[01:56:18] <TML> diverdude: LOL - I clearly horribly misunderstood the question :D
[01:57:02] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[01:57:12] <diverdude> haha yeah.. i probably formulated the question poorly
[01:57:26] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[01:57:49] *** Quits: jant (~jant@pavlov.tiddo.net) (Remote host closed the connection)
[01:57:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c43:29d1:6bad:59e7) (Ping timeout: 268 seconds)
[01:58:04] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:58:37] *** Joins: not_not (~not_not@193.178.220.10)
[01:58:39] *** Joins: phryk (~totallyno@user/phryk)
[01:58:40] *** Joins: uxemacs (~timothy@user/uxemacs)
[01:58:47] <not_not> Hai
[01:59:16] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[01:59:51] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[02:00:41] *** Joins: jant (~jant@pavlov.tiddo.net)
[02:01:10] *** Joins: xkuru (~xkuru@user/xkuru)
[02:02:40] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[02:03:46] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[02:04:28] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Quit: The Lounge - https://thelounge.chat)
[02:05:37] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[02:07:30] *** Joins: Barones (~Barones@user/Barones)
[02:07:54] *** Joins: supakeen[m] (~supakeent@2001:470:69fc:105::1:d6b9)
[02:12:26] *** Joins: x_kuru (~xkuru@user/xkuru)
[02:13:32] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[02:13:48] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:04] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[02:15:37] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[02:15:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[02:16:15] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:36] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:17:25] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[02:18:11] *** Joins: root3 (~root@ip209.ip-94-23-121.eu)
[02:18:32] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:18:52] *** supakeen[m] is now known as supakeen_t
[02:18:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:19:00] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:19:33] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Read error: Connection reset by peer)
[02:20:02] *** Joins: wyclif (~wyclif@user/wyclif)
[02:20:19] <SnoopJ> oh hey, neat: https://peps.python.org/
[02:20:55] *** Joins: civillian (~nick@124-148-119-69.dyn.iinet.net.au)
[02:20:55] <supakeen> is that a new thing? :)
[02:22:54] *** Joins: pythonoob (~thelounge@om126254142243.33.openmobile.ne.jp)
[02:23:02] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[02:23:12] <SnoopJ> I thought so, maybe I'm late to the party
[02:23:24] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[02:24:22] <hams> cool
[02:24:47] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:24:49] <BrenBarn> it's been there for a long time I think
[02:24:52] *** Joins: billchenchina[m] (~billchenc@2001:470:69fc:105::1:d6b5)
[02:25:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:27:32] <jinsun_> it was there at https://python.github.io/peps
[02:28:04] <jinsun_> the python.org url is new I think
[02:28:17] <SnoopJ> ah, yea: https://github.com/python/peps/commit/563de32559118750c5df62f9262ba8bf013aa364
[02:28:23] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:28:46] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:29:04] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:30:13] *** Quits: supakeen_t (~supakeent@2001:470:69fc:105::1:d6b9) (Quit: Reconnecting)
[02:30:27] *** Joins: supakeen_t (~supakeen@python/site-packages/supakeen)
[02:31:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:33:42] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:36:13] *** Quits: Iolo (~iolo@user/Iolo) (Remote host closed the connection)
[02:37:28] *** Joins: audio (~audio@user/audio)
[02:37:34] *** Quits: bfoley (~bfoley@pool-173-76-212-66.bstnma.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:38:46] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[02:39:07] *** Quits: lntl (~joey@50.234.12.38) (Quit: Leaving)
[02:40:45] *** Joins: aod (~a@190-207-87-44.dyn.dsl.cantv.net)
[02:41:01] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[02:41:23] *** Joins: cebor (~cebor@user/cebor)
[02:42:37] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 240 seconds)
[02:43:05] *** Quits: aod (~a@190-207-87-44.dyn.dsl.cantv.net) (Client Quit)
[02:43:20] *** Joins: wyclif (~wyclif@user/wyclif)
[02:44:14] *** Joins: aod (~a@190-207-87-44.dyn.dsl.cantv.net)
[02:44:58] *** Quits: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:45:50] *** Quits: Guest5584 (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[02:45:50] *** Quits: cebor (~cebor@user/cebor) (Client Quit)
[02:46:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:46:10] *** Joins: dreamer (~dreamer@user/dreamer)
[02:46:29] *** Joins: cebor (~cebor@user/cebor)
[02:46:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:47:44] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:57] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 240 seconds)
[02:48:04] *** Joins: mud (~mud@user/kadoban)
[02:48:30] *** Quits: Evan (~Adium@d14-69-206-126.try.wideopenwest.com) (Quit: Leaving.)
[02:48:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[02:48:37] *** Joins: LuKaRo_ (~LuKaRo@p200300dfa712f15a9a5d23a6a02b67bb.dip0.t-ipconnect.de)
[02:48:50] *** Quits: adeliktas7 (~adeliktas@v15153.1blu.de) (Ping timeout: 260 seconds)
[02:49:19] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[02:49:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:49:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.4)
[02:50:57] *** Quits: supakeen_t (~supakeen@python/site-packages/supakeen) (Quit: issued !quit command)
[02:51:24] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:52:23] <KnowledgeShark> Afternoon Everyone!
[02:52:27] <jinsun> diverdude: another way using numpy, without comprehension, `np.where(df.groupby("rec_id")["u_id"].unique().map(set).eq({1,2}))[0]`
[02:52:36] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Ping timeout: 240 seconds)
[02:52:47] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:53:14] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:53:16] <KnowledgeShark> Why only 1 of 3 json files written to current_json_dataset.txt - My dpaste: https://dpaste.com/73NYPY9Q8 (Strange... it prints all 3 files; just doesn't write all 3. only the last .json).
[02:53:28] <KnowledgeShark> any pointers appreciated.
[02:54:11] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:54:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:54:37] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[02:56:00] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:56:00] <pragmaticenigma> KnowledgeShark: what happens if you open the file with "wb" instead?
[02:56:40] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[02:56:44] <pragmaticenigma> KnowledgeShark: nevermind, I see the problem
[02:56:45] <jinsun> KnowledgeShark: lots of problems there, 1) the part that is writing to file is outside the loop, so it only runs once, 2) the file name is a constant, it should change depending on the loop variable, 3) current_json_dataset would be a file name not json, if your json data also had the same current_json_dataset then don't use that name for the loop variable
[02:57:04] <KnowledgeShark> pragmaticenigma: I got a traceback error when I did that.
[02:57:52] <jinsun> also don't do os.chdir('./')
[02:58:00] <KnowledgeShark> jinsun: Thank you for that critique! Does anyone have an example of how to put the writing of the file inside the loop?
[02:58:14] <KnowledgeShark> jinsun: I was looking for working directory.
[02:58:20] <KnowledgeShark> jinsun: bad coding practice?
[02:58:23] <pragmaticenigma> very
[02:58:27] <KnowledgeShark> okay.
[02:58:30] <KnowledgeShark> duly noted.
[02:59:05] <jinsun> yes doing chdir is bad practice, and chdir("./") doesn't even do anything
[02:59:31] *** Joins: squirrel (uid529456@user/squirrel)
[02:59:32] <KnowledgeShark> jinsun: okay!
[02:59:41] *** Joins: jtj90 (~jtj90@2607:fb90:b2d4:b3e4:89c:d655:39e8:f77c)
[03:00:06] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[03:00:23] <jinsun> for putting the with block inside the loop, just indent it so that it is at the same "level" as the print inside the loop
[03:00:34] *** Quits: schumaml (~schumaml@dslb-178-002-182-132.178.002.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[03:00:56] <KnowledgeShark> jinsun: okay! I think I understand now. Thank you both, jinsun & pragmaticenigma
[03:01:35] *** Joins: e-snail (~pete@user/e-snail)
[03:02:21] *** Joins: schumaml (~schumaml@dslb-188-104-175-094.188.104.pools.vodafone-ip.de)
[03:02:34] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:03:11] <pragmaticenigma> KnowledgeShark: while fine for quick and simple one offs, scaning the local directory is fine. But more robust is to prompt for a directory path to scan instead, when the program is running.
[03:03:22] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:03:22] *** Joins: supakeen_test (~supakeen@2a01:4f9:c010:3f2a:1:1:3:42)
[03:03:42] *** Joins: takezo (~takezo@gateway/vpn/pia/takezo)
[03:03:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:04:10] <KnowledgeShark> pragmaticenigma: I like that; I can see that being far more versatile!
[03:04:50] <KnowledgeShark> https://dpaste.com/CYXKNZVNL (my second attempt); prints 3 times & only 1 json gets written.
[03:05:01] <KnowledgeShark> I did move it up and remove the obsolete line.
[03:06:07] <KnowledgeShark> It's overwriting it over and over, I believe.
[03:06:11] <pragmaticenigma> yep
[03:06:18] <pragmaticenigma> I'd open the file, then perform your loops
[03:06:19] <KnowledgeShark> I need to append
[03:06:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:06:49] <pragmaticenigma> KnowledgeShark: placing the "with" before you start the loops would work better
[03:07:05] <KnowledgeShark> pragmaticenigma: Thank you! I will go that route.
[03:08:08] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[03:10:20] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:11:47] *** Quits: blackout69 (~blackout6@37.183.230.121) (Quit: Leaving.)
[03:12:59] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:13:15] *** Joins: JMatrix1[m] (~mattwilso@2001:470:69fc:105::1:517c)
[03:13:26] *** Joins: Gerula (~Gerula@user/gerula)
[03:13:35] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[03:13:52] *** Quits: mythos (~mythos@user/mythos) (Ping timeout: 272 seconds)
[03:15:00] *** Quits: LuKaRo_ (~LuKaRo@p200300dfa712f15a9a5d23a6a02b67bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:15:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:16:09] <nedbat> what do people think of this program to demonstrate sync vs async vs async q?  https://gist.github.com/b65d59729ac4b8222238c6804f64753e
[03:18:16] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Ping timeout: 245 seconds)
[03:18:49] <hams> hi guys, im using jupyter and i want to add a new line between other lines rather than a new one at the end. is that possible?
[03:18:50] *** Joins: LuKaRo (~LuKaRo@p200300dfa712f15a9a5d23a6a02b67bb.dip0.t-ipconnect.de)
[03:18:56] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[03:19:06] <nedbat> hams: do you mean a new cell between two cells?
[03:19:29] <hams> yes
[03:19:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:19:40] *** Joins: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de)
[03:20:30] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[03:20:49] <nedbat> hams: isn't there a menu for insert cell above?
[03:21:13] *** Quits: waynew (~wayne@user/waynew) (Quit: adios)
[03:21:51] <hams> there it is
[03:21:51] <hams> ty
[03:22:00] <hams> i was using shift + enter
[03:22:52] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[03:26:34] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[03:26:52] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:26:55] *** Joins: mythos (~mythos@user/mythos)
[03:27:03] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[03:27:20] *** Quits: tomg (~tomg@user/tomg) (Read error: Connection reset by peer)
[03:27:21] <nedbat> if anyone understand asyncio.Queue, there's some code in my gist that i don't understand.
[03:27:22] *** Quits: mythos (~mythos@user/mythos) (Client Quit)
[03:27:28] *** Joins: biotty (~coien@li35-173.members.linode.com)
[03:27:32] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 240 seconds)
[03:28:51] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[03:29:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[03:30:01] *** Joins: devish (~devish@54-240-198-34.amazon.com)
[03:30:52] <tpr> hmm, instead of cancelling the workers, I've seen (and used) it by having a sentinel that is used as a condition for breaking out the loop
[03:30:58] *** Quits: schumaml (~schumaml@dslb-188-104-175-094.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[03:31:23] *** Joins: tomg (~tomg@user/tomg)
[03:31:33] <nedbat> tpr: that makes sense to me. What I don't understand is this: nothing is awaiting the workers. How do they start?
[03:31:35] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:31:38] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[03:32:32] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 240 seconds)
[03:32:39] <phy1729> so close to using a nice seed ;)
[03:32:40] *** Joins: jazzy (~jaziz@user/jaziz)
[03:32:40] *** Joins: schumaml (~schumaml@ipservice-092-211-203-113.092.211.pools.vodafone-ip.de)
[03:32:51] <nedbat> phy1729: maybe that will make it clearer!
[03:33:43] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[03:34:31] <tpr> nedbat: create_task schedules the execution, no?
[03:35:37] *** Quits: devish (~devish@54-240-198-34.amazon.com) (Ping timeout: 256 seconds)
[03:35:38] <tpr> to my understanding, so while waiting for the queue to become handled, the event loop keeps running those existing tasks
[03:35:47] <jinsun> yeah create_task is starting them, it schedules the task to execute in the event loop
[03:36:17] <nedbat> tpr: oh, maybe. I tried just create_task(some_async_def), and it told me no loop.  But in this program there's already a loop running.  thanks
[03:36:45] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[03:37:09] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:37:31] *** Joins: wilk_ (~wilk@user/wilk)
[03:37:31] <tpr> sure thing :) btw, I think you can combine multiple context managers in the newest python versions, avoiding deep nesting
[03:37:37] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 240 seconds)
[03:37:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:37:43] *** wilk_ is now known as wilk
[03:37:44] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:37:46] <tpr> I've never tried that so far, but having so many levels of nesting made my eyes bleed :')
[03:37:56] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Quit: Konversation terminated!)
[03:38:35] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[03:38:57] <jinsun> you should still await them in the end otherwise they might "disappear" mid execution
[03:39:33] <nedbat> tpr: the many levels are a problem.  Also, await await await await
[03:39:41] <tpr> in this case the join on the queue followed by cancelling the workers takes care of that, I think
[03:39:51] *** Joins: Jong (~Jong@2620:10d:c090:400::5:b29a)
[03:39:58] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:40:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[03:40:26] <jinsun> nedbat: also get_one should take ClientSession object and just do session.get, it is creating new ClientSession for each request right now
[03:40:50] <nedbat> jinsun: i know, but i wanted to keep it kind of self-contained
[03:41:59] *** Quits: JohnDoe2 (~johndoe1@184-091-099-189.res.spectrum.com) (Read error: Connection reset by peer)
[03:42:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:43:17] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:9503:8932:cdd9:9528) (Remote host closed the connection)
[03:43:21] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:43:42] <tpr> depends on what's the end goal, yeah. if you would be doing something like "fetch favicons from all alexas top 1M sites", you don't want to have session sharing
[03:43:55] <nedbat> jinsun: i wish aiohttp let me do it with a simple .get.  the session just clutters this.
[03:44:31] *** Joins: bfortifi- (~bfortifie@user/bfortified)
[03:44:38] *** Joins: alienhead (~solas@user/alienhead)
[03:44:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:44:45] *** Joins: Wulf (~Wulf@user/wulf)
[03:45:15] *** Quits: bfortified (~bfortifie@user/bfortified) (Ping timeout: 256 seconds)
[03:45:34] <nedbat> why is the word "cancelled" always in italics?  https://docs.python.org/3/library/asyncio-task.html#asyncio.gather
[03:45:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[03:45:52] *** Joins: pipe_connector (~pipe_conn@65.128.22.78)
[03:46:03] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:46:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:47:02] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:47:15] *** Joins: cheater (~Username@user/cheater)
[03:47:15] <jinsun> yeah it could do something like requests and make a new client for each request internally if you don't make a session, but I guess it wants to force better practice
[03:47:17] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:41cb:43ff:7db5:d0eb) (Ping timeout: 240 seconds)
[03:47:18] <nedbat> in other descriptions on the page, "cancelled" or "cancellation" is a link to cancel().  weird.
[03:47:59] <jinsun> most people don't use sessions with requests because it is so easy to let it make one for you
[03:48:06] <tpr> I'm looking at httpx docs right now, and I'm wondering why it also doesn't provide the high-level shortcuts for asyncio interface just like it does for the sync one..
[03:48:12] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:48:26] <tpr> I've heard httpx being recommended over aiohttp several times in the past couple of years
[03:48:31] *** Quits: heldwin (~heldwin@user/asmodee) (Write error: Connection reset by peer)
[03:48:31] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Write error: Connection reset by peer)
[03:48:31] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Write error: Connection reset by peer)
[03:48:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Write error: Connection reset by peer)
[03:48:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Write error: Connection reset by peer)
[03:48:31] *** Quits: tejr (~tejr@user/tejr) (Write error: Connection reset by peer)
[03:48:31] *** Quits: bindu (~bindu@user/bindu) (Write error: Connection reset by peer)
[03:48:31] *** Quits: ano (~ano@user/ano) (Write error: Connection reset by peer)
[03:48:31] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Write error: Connection reset by peer)
[03:48:31] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Write error: Connection reset by peer)
[03:48:31] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Write error: Connection reset by peer)
[03:48:31] *** Quits: kevr (~kevr@user/kevr) (Write error: Connection reset by peer)
[03:48:31] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Write error: Connection reset by peer)
[03:48:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Write error: Connection reset by peer)
[03:48:31] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Write error: Connection reset by peer)
[03:48:31] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Write error: Connection reset by peer)
[03:48:31] *** Quits: CombatVet (~c4@user/combatvet) (Write error: Connection reset by peer)
[03:48:31] *** Quits: noteness (~noteness@user/noteness) (Write error: Connection reset by peer)
[03:48:31] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Write error: Connection reset by peer)
[03:48:31] *** Quits: spithash (~spithash@user/spithash) (Write error: Connection reset by peer)
[03:48:31] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Write error: Connection reset by peer)
[03:48:31] *** Quits: de-facto (~de-facto@user/de-facto) (Write error: Connection reset by peer)
[03:48:31] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Write error: Connection reset by peer)
[03:48:31] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Write error: Connection reset by peer)
[03:48:31] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Write error: Connection reset by peer)
[03:48:36] *** Quits: andreasbuhr (~quassel@p549db5f7.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:48:45] *** Quits: jtj90 (~jtj90@2607:fb90:b2d4:b3e4:89c:d655:39e8:f77c) (Quit: Ping timeout (120 seconds))
[03:48:51] <tpr> one thing it has is both sync & async interfaces, but while you can do `x = httpx.get()` there's no async variant for it...
[03:48:52] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[03:48:56] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Ping timeout (120 seconds))
[03:49:04] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Ping timeout (120 seconds))
[03:49:09] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[03:49:16] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Ping timeout (120 seconds))
[03:49:22] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[03:49:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[03:49:32] *** Quits: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:49:39] <jinsun> maybe because the __del__ can do .close for the sync session but can't do await aclose? dunno, just guessing
[03:49:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:49:57] *** Joins: masoudd_ (~masoudd@user/masoudd)
[03:50:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:50:27] *** Joins: kevr (~kevr@user/kevr)
[03:50:29] *** Joins: noteness (~noteness@user/noteness)
[03:50:35] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[03:50:38] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:50:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:50:49] *** Joins: de-facto (~de-facto@user/de-facto)
[03:50:50] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[03:50:52] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:50:53] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[03:50:54] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:50:54] *** Joins: bindu (~bindu@user/bindu)
[03:50:54] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[03:50:55] *** Joins: CombatVet (~c4@user/combatvet)
[03:50:55] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[03:51:01] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:51:05] *** Quits: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Changing host)
[03:51:05] *** Joins: muffin_storm (~muffin_st@user/muffin-storm/x-3740471)
[03:51:09] <aod> Hi guys, help me pls, i am trying to customize the comandline, https://bpa.st/S6UQ, https://pasteboard.co/TuIdPgsX7P4Z.jpg, after execute the code if i go back 1 time i cant delete all the character, how can i fix it?
[03:51:20] <aod> Xd
[03:51:24] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[03:51:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:51:27] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:51:50] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[03:51:53] <aod> it is just 2 lines of code lol.
[03:51:58] <jinsun> nah it is doing the with block in the sync version, so could do the same in async version too really
[03:52:07] <aod> but i just dont get it, pls help
[03:52:19] <yitz> Is there any reason to believe that `1 << n` is any faster or more efficient than `2**n` ?
[03:53:00] <KirkMcDonald> yitz: Probably not. What happens if you time it?
[03:53:17] *** Joins: tejr (~tejr@user/tejr)
[03:53:17] *** Joins: spithash (~spithash@user/spithash)
[03:53:21] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:53:22] <tpr> yitz: that's implementation specific, I'd assume. try what dis.dis() says in the bytecode
[03:53:31] <yitz> KirkMcDonald: that sounds like work :P I was hoping for a definitive answer without needing to time
[03:53:39] <yitz> tpr: will take a look. Thanks!
[03:53:46] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[03:53:59] <jinsun> timing on my machine tells 1 << n is faster
[03:54:09] *** Joins: unyu (~pyon@user/pyon)
[03:54:10] <tpr> maybe it's optimized to left shift, maybe not
[03:54:30] <jinsun> 60 ns vs 275 ns, so not even close
[03:54:36] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[03:54:39] <yitz> BINARY_POWER  vs  BINARY_LSHIFT
[03:55:00] <yitz> From dis.dis() with standard .... cpython(?)
[03:55:01] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[03:55:09] <KirkMcDonald> Looks like the shift is somewhat faster, aye: https://bpa.st/BH7A
[03:55:20] <yitz> I wasn't expecting that
[03:55:27] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043)
[03:55:31] *** Joins: ano (~ano@user/ano)
[03:55:35] <aod> Do you guys use the command line very often?
[03:55:57] <tpr> in contrast to what, aod?
[03:56:06] <yitz> aod: every day
[03:56:07] <aod> Do you have color on it?
[03:56:14] <aod> Hi guys, help me pls, i am trying to customize the comandline, https://bpa.st/S6UQ, https://pasteboard.co/TuIdPgsX7P4Z.jpg, after execute the code if i go back 1 time i cant delete all the character, how can i fix it?
[03:56:27] <tpr> try ipython, or bpython
[03:56:33] <tpr> if you are looking for python repl
[03:56:54] <tpr> if you are looking for a nicer shell prompt, check out starship or fish or zsh
[03:56:59] <aod> tpr that is whut i am asking for help
[03:57:34] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[03:57:41] <tpr> PS1 is shell-specific, alas, I don't know much about how those work so I cannot really help here
[03:57:41] <aod> would you check this pls, https://pasteboard.co/TuIdPgsX7P4Z.jpg
[03:58:02] <aod> {
[03:58:07] <yitz> dis.dis() shows a BINARY_POWER. Is there any way to know what BINARY_POWER represents?
[03:58:36] *** Quits: jpic (~jpic@145.224.77.205) (Ping timeout: 256 seconds)
[03:58:51] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[03:58:54] <nedbat> yitz: is 1<<n the slow part of your program?
[03:59:22] <yitz> nedbat: I have no intention of actually using 1<<n ... but I'm still having a conversation about efficiency and speed
[03:59:29] <yitz> It's pretty academic
[03:59:30] <jinsun> yitz: it just looks up the __pow__ method and calls it I think
[03:59:43] <yitz> jinsun: thanks
[04:00:07] *** Joins: jpic (~jpic@145.224.77.223)
[04:01:15] <aod> i will asume this is an os problem for me. Thanks guys.
[04:01:30] <tpr> now I'm intersted in what does BINARY_LSHIFT do and where it is defined
[04:01:50] <tpr> grepping through cpython source for it doesn't return any matches
[04:02:04] *** Joins: al_ (~archer@114.5.215.206)
[04:02:37] <yitz> tpr: If you find matches for either, I'd love to know. BINARY_POWER sounds different from a non-bin __pow__
[04:02:49] <tpr> Python/ceval.c seems to have NB_LSHIFT and NB_INPLACE_LSHIFT defined
[04:02:56] *** Quits: CodeMouse92_Work (~CodeMouse@user/codemouse92) (Quit: Leaving)
[04:03:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:03:14] <tpr> but where does the asm BINARY_LSHIFT come from o_O
[04:03:44] <nedbat> tpr: make sure your source matches your python version. These things change a lot
[04:04:06] *** Joins: rje (~textual@50.35.241.164)
[04:05:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:05:19] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[04:06:10] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:06:53] <SnoopJ> +1, I have tripped on that many times when it comes up in here :)
[04:07:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[04:07:38] *** Parts: al_ (~archer@114.5.215.206) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:07:57] *** Joins: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de)
[04:08:12] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[04:08:17] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[04:09:40] <tpr> I think those _nb_ops are somewhat "magic", I cannot do `x <<= 1` in repl here, like shown in https://github.com/python/cpython/blob/8714b6fa27271035dd6dd3514e283f92d669321d/Lib/opcode.py#L203
[04:10:04] *** Joins: farmfrmjakestate (~farmfromj@ganymede.mines.edu)
[04:10:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611) (Remote host closed the connection)
[04:11:00] <tpr> there's a script to generate opcode.h header file, so I think that's the trick: https://github.com/python/cpython/blob/main/Tools/scripts/generate_opcode_h.py
[04:11:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:ccbf:86ce:7ab:edd3)
[04:11:21] <opcode> So many highlights from that filename lol
[04:12:00] *** tpr is now known as [0]
[04:12:04] <[0]> hmm
[04:12:11] <[0]> please don't index-access me ;(
[04:12:17] *** Quits: farmfrmjakestate (~farmfromj@ganymede.mines.edu) (Client Quit)
[04:12:23] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 268 seconds)
[04:12:29] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:12:30] *** [0] is now known as Guest9657
[04:12:39] *** Guest9657 is now known as tpr
[04:12:49] <jinsun> x <<= 1 seems to be possible in 3.10 at least
[04:13:35] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 256 seconds)
[04:13:44] <jinsun> 3.9 too
[04:13:48] <tpr> huh? that results in syntax error on my 3.10.2
[04:14:24] <SnoopJ> really? worked in mine
[04:14:56] *** Joins: farmfrmjakestate (~farmfromj@user/farmfrmjakestate)
[04:14:57] *** Quits: schumaml (~schumaml@ipservice-092-211-203-113.092.211.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:15:21] *** Joins: xkuru (~xkuru@user/xkuru)
[04:15:40] <jinsun> oh it is there even in 2.7 https://docs.python.org/2.7/library/operator.html#operator.__ilshift__
[04:16:14] <tpr> oooooooh, now I see.. I was trying to return that directly and that didn't work..
[04:16:21] <tpr> (as it's an assignment)
[04:16:37] <jinsun> okay yeah it is not an expression
[04:16:49] <tpr> yeah, I'm dumb :(
[04:17:18] *** Joins: schumaml (~schumaml@dslb-188-104-186-207.188.104.pools.vodafone-ip.de)
[04:17:53] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:18:30] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[04:19:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9143-8133-0550-4f7a.res6.spectrum.com) (Quit: jarthur)
[04:19:26] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 250 seconds)
[04:19:36] <SnoopJ> cannot confirm
[04:20:34] <wallsY> hey everyone -- i'm running into what i'm hoping is a silly issue. when i launch a python tool it needs me to be in the directory for the script to work. if i call it using an absolute path and i'm not in the directory it has errors. looks like they are "filenotfounderror" but the files listed are using absolute paths that aren't even in the scripts directory. i'm learning python right now so
[04:20:36] <wallsY> apologies if any of this is explained poorly
[04:22:00] <deltab> wallsY: one option is to change directory within the program; another is to construct the right paths
[04:22:11] <pwillard> ^^^ this
[04:22:16] *** Joins: steveoh (~sj@c-24-11-26-209.hsd1.ut.comcast.net)
[04:22:17] <tpr> wallsY: create a gist of the relevant part of a minimal example, and include the output you are getting
[04:22:20] *** Joins: walterwhip (~www@user/walterwhip)
[04:22:38] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f15a9a5d23a6a02b67bb.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:22:48] <steveoh> hi is there a python command to update the version in a setup.py file?
[04:22:50] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[04:22:51] <tpr> (s)he said that it happens also when using absolute paths to my understanding, so I don't think that's the issue
[04:22:57] <steveoh> similar to npm version
[04:23:11] <steveoh> i'm wanting to update the version in a CI/CD pipeline based on a tag
[04:23:35] <tpr> steveoh: I'd recommend using pyproject.toml with poetry/flit instead, e.g., poetry has `poetry version <version>` that performs the version bump for you
[04:23:46] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[04:23:54] <steveoh> tpr: is there a way to do it without poetry?
[04:24:08] <steveoh> we don't use poetry and it seems silly to add it just for this
[04:24:26] <tpr> but no, there is no such command afaik. the thing with setup.py is that it's just a regular python script, so you could do some `sed` magic to change it as you wish
[04:24:39] <steveoh> yeah that's what i figured
[04:24:44] <pwillard> so calling setup.py directly?
[04:24:51] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[04:24:59] <jinsun> for setuptools there is setuptools_scm https://pypi.org/project/setuptools-scm/
[04:25:08] <steveoh> yeah python setup.py bdist bdist_wheel i think
[04:25:10] *** Joins: thiras (~thiras@user/thiras)
[04:25:10] *** Joins: LuKaRo_ (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[04:25:12] <tpr> just something like `sed "s/version=.*$/version=<newversion>/"`
[04:25:21] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[04:25:22] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:25:40] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:25:54] <jinsun> doesn't give a nice command but does the magic of reading the tag and updating version when the build is run
[04:25:54] <tpr> ohhh, cool! setup.py usage is deprecated tho, but it works as long as it does :)
[04:25:55] <wallsY> thanks for the feedback, i made a pastebin that i hope illustrates what i am running into: https://pastebin.com/VJQZ3UnM
[04:25:56] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Max SendQ exceeded)
[04:26:14] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[04:26:24] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[04:26:32] <wallsY> what is weird is it looks like it's looking for this `proxies.yaml` file in 3 different locations when i'm calling the script outside of the folder it's located in
[04:27:11] *** Joins: dre (~dre@2001:8003:c932:c301:b9de:333:ba99:ae98)
[04:27:15] <tpr> oh, it's not your code? looks like that script just falls back t o some known locations while trying to find that file
[04:28:01] <pwillard> Messing with setup.py directly be like... https://cakedecorist.com/wp-content/uploads/2021/12/overworked-dough.jpg
[04:28:02] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Max SendQ exceeded)
[04:28:24] <wallsY> no, it's a tool i downloaded but i am installing it manually so i didn't know if i screwed something up with prereqs and whatnot
[04:28:30] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[04:30:07] <tpr> wallsY: you can see the code here: https://github.com/laramies/theHarvester/blob/master/theHarvester/lib/core.py#L88
[04:31:00] <tpr> wallsY: it checks those tree locations (/etc/..., /usr/local/etc/..., and the current working directory) for that file. kind of "dumb" that it doesn't offer a way to define the file location manually using a cli option
[04:31:24] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[04:31:36] <wallsY> ok, so can i insert the check for the location it is in first and that should resolve the error?
[04:31:46] <tpr> depending on how you want to use it, you want to create one of those system-wide files, or change the directory to one where you have your proxies.yaml
[04:32:05] <tpr> I mean, you are executing it as a script, or from a script? or what's your end goal here?
[04:32:38] <tpr> in your pastebin you just executed the script itself, i.e., you didn't use some parts of it _inside_ your own script
[04:33:10] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:33:11] *** Joins: Joeee (~Joeee@188.252.198.59)
[04:33:38] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:33:38] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:33:43] *** Quits: rje (~textual@50.35.241.164) (Remote host closed the connection)
[04:33:43] *** Joins: audio (~audio@user/audio)
[04:33:52] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[04:33:53] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[04:34:18] *** Joins: rje (~textual@50.35.241.164)
[04:34:55] <wallsY> yeah i'm not planning on using parts of it in my own scripts yet. but i would like to be able to call that script from other places in the OS. with other tools like this i've symlinked the script into my PATH so i can call it like any other program
[04:35:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:35:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[04:35:38] <tpr> so why not create that file under /etc?
[04:35:42] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[04:35:53] <tpr> or /usr/local/etc, if you prefer that. that'd be the simplest way out here
[04:36:08] <wallsY> when i touched the proxy file into those locations it didn't seem to work anymore -- maybe i'm missing some data in the files?
[04:36:35] *** Quits: Joeee (~Joeee@188.252.198.59) (Client Quit)
[04:36:39] *** Joins: wyclif (~wyclif@user/wyclif)
[04:37:02] *** Quits: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:37:02] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[04:37:10] <wallsY> /usr/local/etc might be a good idea -- i'm pretty new to all of this so i thought putting everything into /opt would prevent me from losing track of things
[04:37:13] <tpr> maybe it wasn't valid yaml anymore?
[04:37:34] <tpr> yeah, alas, some tools are not really built such things in mind :/
[04:37:35] <wallsY> wouldn't be the first time yaml formatting got me haha
[04:37:41] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[04:38:04] <tpr> I'd simply use some yaml linter to see if the file is fine, but it probably gives you an error why it isn't working?
[04:38:20] *** Joins: EGH (~EGH@185.25.195.104)
[04:39:01] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[04:39:19] *** Quits: farmfrmjakestate (~farmfromj@user/farmfrmjakestate) (Quit: Textual IRC Client: www.textualapp.com)
[04:39:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:40:11] <tpr> hmpf, there was some similar osint tool (that's been under dev for a decade or so), but I cannot right now find it
[04:40:19] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[04:40:42] <wallsY> tpr: 100% the yaml
[04:40:46] <wallsY> thank you so much
[04:41:00] <tpr> :)
[04:41:21] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:41:21] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:41:51] <tpr> that's not really a python question, and if you are wanting to learn python I wouldn't start learning by reading its code :P
[04:42:19] *** Joins: SteveR (~SteveR@2001:1900:2100:2807:ed17::20e)
[04:42:33] <wallsY> i saw that there was a proxies.yaml in the directory and sure enough there was some data in it so my touch /etc/theHarvester/proxies.yaml created errors since it needs at least the basic data
[04:42:47] *** Quits: jw_dungeon (~quassel@2601:44:4380:4a10:4836:1d40:3162:25b8) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:42:52] *** Joins: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de)
[04:42:56] <wallsY> yeah i was conflicted on whether to ask in #linux or #python -- thanks for helping anyway
[04:43:47] *** Leonarbro_ is now known as Leonarbro
[04:44:32] *** Joins: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net)
[04:45:12] <twb> Is pathlib.Path('/A').glob('B/C/D/*.zip') less efficient than pathlib.Path('/A/B/C/D').glob('*.zip') ?
[04:45:14] *** Joins: agumonke` (~user@37.169.12.236)
[04:45:37] <tpr> no biggie, you're welcome 👍
[04:45:37] <twb> Or is it smart enough to only walk the B/C/D part of /A, either way/
[04:45:37] *** Quits: agumonke` (~user@37.169.12.236) (Read error: Connection reset by peer)
[04:46:16] *** Joins: Betal (~Betal@user/betal)
[04:46:50] <tpr> twb: I mean, it should be?
[04:46:58] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[04:47:19] <phy1729> twb: Could always timeit
[04:47:34] <twb> That was plan B
[04:47:35] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[04:47:43] <twb> I thought someone here might already had pathlib internals in their brain
[04:47:48] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 240 seconds)
[04:47:49] <tpr> glob is usually used with * or ** as it's argument. mmmm
[04:47:53] *** Joins: agumonke` (~user@88.163.231.79)
[04:48:02] *** Joins: ymwm__ (~yingmanwu@117.26.69.144)
[04:49:30] *** Quits: LuKaRo_ (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[04:50:02] <SnoopJ> twb, if you're worried about performance, measure it. If you're worried about legibility, the second one is substantially more legible to me
[04:50:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:51:11] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[04:51:16] <twb> The actual case is pathlib.Path.home().glob('.config/systemd/user/**/*.timer') versus pathlib.Path.home().glob('.config/systemd/user').glob('**/*.timer')
[04:51:18] *** Quits: schumaml (~schumaml@dslb-188-104-186-207.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:51:26] <twb> Er
[04:51:33] <twb> The actual case is pathlib.Path.home().glob('.config/systemd/user/**/*.timer') versus (pathlib.Path.home()  / '.config/systemd/user').glob('**/*.timer')
[04:51:49] *** Quits: steveoh (~sj@c-24-11-26-209.hsd1.ut.comcast.net) (Quit: leaving)
[04:52:01] <tpr> that globbing will unlikely be the bottleneck in your system, so I'd aim for readability
[04:52:03] <twb> The latter is less clear and may error if the parent doesn't exist, so the former is obviously better IMO
[04:52:15] <tpr> I find the latter much cleaner...
[04:52:23] <twb> But I do not want it to walk the entire tree, because this is happening over NFS, and NFS is very slow at this.
[04:53:09] *** Joins: schumaml (~schumaml@dslb-178-002-183-063.178.002.pools.vodafone-ip.de)
[04:53:28] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[04:53:31] <deltab> you can use a system call trace (strace) to see where it's looking
[04:53:40] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:53:50] <twb> Fair
[04:53:54] <deltab> strae -e file python ...
[04:54:20] <twb> ptrace is actually disabled in prod but I can reproduce this well enough on a local system
[04:55:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[04:55:42] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[04:55:54] <tpr> I'd bet the internal implementation just constructs the path, and globs those wildcarded pieces
[04:56:05] <twb> strace -fe trace=stat python3 -c "import pathlib; list((pathlib.Path.home() / '.config/systemd/user').glob('**/*.timer'))" |& grep -cF "$HOME"  ==> 17
[04:56:07] <SnoopJ> twb, if B/C/D/ is not part of your search term, it should not be part of your glob, in my opinion.
[04:56:18] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[04:56:21] <twb> strace -fe trace=stat python3 -c "import pathlib; list((pathlib.Path.home()).glob('.config/systemd/user''**/*.timer'))" |& grep -cF "$HOME" ==> 13
[04:56:37] <twb> Oops
[04:56:46] <twb> strace -fe trace=stat python3 -c "import pathlib; list((pathlib.Path.home()).glob('.config/systemd/user/''**/*.timer'))" |& grep -cF "$HOME" ==> 20
[04:56:51] <SnoopJ> but I believe you'll get basically the behavior you'd get from scandir() for the non-wildcarded part
[04:56:59] <twb> They're within an order of magnitude
[04:57:14] <twb> So my concern about blowing the nfsstat budget are unfounded
[04:57:24] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 240 seconds)
[04:57:38] <SnoopJ> the merits of measurement :)
[04:58:01] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[04:58:01] <twb> I'm not going to bother to check path.glob('A/B/**/another/long/path/component/set/**/*.zip')
[04:58:02] *** Quits: stockh0lm (~Andreas@p200300d2c708e60071fe47894067b701.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[04:58:06] <twb> Becuase I don't care enough about that case
[04:58:41] <tpr> btw, depending on what you are aiming to do, I think there are python bindings for systemd
[04:59:02] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[04:59:05] <tpr> er. s/I think//
[05:01:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:01:29] <twb> tpr: there are.  This particular thing needs to bypass those because reasons
[05:02:48] *** Quits: schumaml (~schumaml@dslb-178-002-183-063.178.002.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:03:26] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[05:03:46] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[05:04:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:04:57] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:05:27] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:06:39] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[05:07:17] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[05:08:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:08:19] <maxtim> So I'm trying to create a package out of some classes and functions I built. I followed this tutorial https://www.freecodecamp.org/news/build-your-first-python-package/ up to the "PyPi - Here we come" section as I don't want to release this to the greater public until I have tested it a little more thoroughly. I tried `pip install .` from the directory and that worked... Sort of.
[05:08:48] <maxtim> It installed the dist-info, but not the actual package
[05:09:00] *** Quits: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:09:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[05:09:28] <maxtim> Is there a way to "install" my package via pip? or am I looking at this the wrong way?
[05:09:29] <SnoopJ> maxtim, can you share your setup.py on https://bpa.st ?
[05:10:45] <maxtim> https://bpa.st/KYKQ
[05:13:59] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 256 seconds)
[05:14:48] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[05:15:00] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[05:15:17] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[05:15:25] <SnoopJ> maxtim, hmm, nothing amiss there. what does your file structure look like? If you're on Linux, you can share the output of the `tree` command if you have it, `find .` from the same directory as your setup.py if you don't.
[05:15:28] <tpr> if you pip install `build` and run `python -m build`, it will generate the package files for you
[05:15:31] <maxtim> SnoopJ, I added the __init__.py file
[05:15:59] *** Joins: junebug (~junebug@2600:1700:3db0:2540:fe6d:12d2:2acc:ce5f)
[05:16:03] <maxtim> https://bpa.st/UJXA
[05:16:21] <SnoopJ> maxtim, is it working now?
[05:16:22] <tpr> and you can inspect those by opening them with any archive util (like ark) to see the file contents without installing the package
[05:16:28] <SnoopJ> oh, you mean you added it to your paste
[05:16:29] *** Joins: schumaml (~schumaml@dslb-188-104-161-108.188.104.pools.vodafone-ip.de)
[05:16:36] <maxtim> No I just wanted to share that, yeah
[05:16:50] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-1c52-7a09-75d4-5be2.res6.spectrum.com) (Remote host closed the connection)
[05:17:04] <SnoopJ> maxtim, it's probably a problem with your file structure that is making find_packages() come up empty-handed
[05:17:56] <maxtim> https://bpa.st/APMQ
[05:18:00] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 272 seconds)
[05:18:02] <maxtim> file structure
[05:18:15] <SnoopJ> tpr, building here will probably just build an empty package, if it doesn't outright fail
[05:18:19] <tpr> you want to have your package separate from the dir where your setu.py is
[05:18:42] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[05:18:44] <tpr> a common practise is to use something like `src/` or `<name of the package>/` to store your modules
[05:19:09] *** Quits: alienhead (~solas@user/alienhead) (Quit: Konversation terminated!)
[05:19:21] <maxtim> I had seen that a lot tpr, but my assumption was that it was optional
[05:19:24] <tpr> yes, find_packages() fails to find a package as the modules are in the root directory
[05:19:30] <maxtim> ah
[05:19:41] <tpr> or that's my guess at least :)
[05:19:52] <SnoopJ> maxtim, it's not, the directory with an __init__.py in it is what signals "this is a package"
[05:19:54] <maxtim> that does make sense though
[05:20:10] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[05:20:27] <SnoopJ> If you make a folder called radioshowsautomated (or whatever you want this to be importable as) and move your __init__.py and rsa.py there it should do more like what you expected
[05:20:30] <tpr> https://pypi.org/project/rsa/ rsa as a name is taken btw, so you need to reconsider your naming :)
[05:20:30] <maxtim> so SnoopJ that should work as is
[05:20:46] <SnoopJ> maxtim, no
[05:20:56] <SnoopJ> setup.py needs to be *next* to the packages it will find
[05:21:09] *** Joins: LuKaRo (~LuKaRo@p200300dfa712f14b7d1690af90762b47.dip0.t-ipconnect.de)
[05:21:23] <SnoopJ> i.e. your project should be structured as setup.py and then one or more directories that each have an __init__.py in them (i.e. packages) for it to find when you call find_packages()
[05:21:34] <maxtim> tpr, I had thought of that. But I'm not too worried about it right now.
[05:21:45] <maxtim> I see
[05:21:50] <SnoopJ> (it doesn't always have to be *right* next to it, find_packages() lets you point somewhere else with an argument, but if you don't give it a path, it assumes ".")
[05:22:02] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Ping timeout: 240 seconds)
[05:22:13] <maxtim> Oh I see, gotchya
[05:22:28] <maxtim> I'll rearrange and see what it does
[05:22:28] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[05:22:32] <SnoopJ> in cases where devs use src/ as a top-level directory, it's usually spelled `find_packages("src/")` and so on
[05:23:25] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[05:24:53] *** Joins: jackblasted (~quassel@173.239.197.251)
[05:26:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[05:27:21] *** Quits: uxemacs (~timothy@user/uxemacs) (Quit: Konversation terminated!)
[05:29:09] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:29:14] *** Joins: AHemlocksLie (~mikey@2603-8080-090b-0b47-0000-0000-0000-023d.res6.spectrum.com)
[05:30:00] *** Quits: metta (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: metta)
[05:30:31] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[05:30:36] <maxtim> cool. well I'm in a place now. I think I need to fix my __init__.py file. But the install worked, thanks!
[05:30:38] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[05:30:50] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[05:31:17] <SnoopJ> woo :)
[05:31:35] <Guest80> How would you properly see if a string value is in a dictionary? Is this ok? -> if string_a in str(dictionary) ?
[05:31:37] *** Gustavo6046 is now known as Guest8247
[05:31:37] *** Quits: Guest8247 (~Gustavo60@user/gustavo6046) (Killed (tungsten.libera.chat (Nickname regained by services)))
[05:31:37] *** Gustavo6046_ is now known as Gustavo6046
[05:31:46] <SnoopJ> Guest80, `key in thedict`
[05:32:15] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[05:32:18] <Guest80> hmm
[05:32:24] <Guest80> what if it was the value?
[05:33:01] <SnoopJ> https://bpa.st/UA5Q
[05:33:38] <Guest80> wow interesting thank you. I was looking online and i saw a bunch of loops and i figured it had to be simpler than that
[05:33:50] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[05:34:03] *** Quits: schumaml (~schumaml@dslb-188-104-161-108.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:34:41] <tpr> dictionary is a hash table. so if you want to search by value, you need to either iterate over it and check the values while you go, or create a reverse dictionary (if feasible)
[05:34:58] <SnoopJ> Guest80, `key in somedict` is basically doing a loop behind the scenes, although it's got some clever tricks that make it faster than checking *every* key
[05:35:21] <Guest80> amazing
[05:35:32] <tpr> for small dicts it's easy to create a reverse dict using something like `reverse = {v:k for k,v in d.items()}`
[05:35:40] <Guest80> let me try it out and see what happens
[05:35:44] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[05:35:45] *** Joins: schumaml (~schumaml@dslb-178-002-178-064.178.002.pools.vodafone-ip.de)
[05:35:48] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[05:35:54] <SnoopJ> `in` is a nice convenient keyword, and it even matches its meaning in English pretty well :)
[05:35:58] <tpr> SnoopJ: the whole point of hash tables is that you don't do any "looping" in a sense of enumeration behind the scenes
[05:36:18] <SnoopJ> tpr, if you can tell me how to resolve a hash collision without a loop, I'm listening.
[05:36:35] <tpr> or you may do some loops to generate the hash, obviously. but then you just check for the slot that hash is assigned, and that's it
[05:36:45] *** Quits: aod (~a@190-207-87-44.dyn.dsl.cantv.net) (Quit: leaving)
[05:36:58] <tpr> oh, okay. so then you'll need to loop over the elements that had a colliding hash. but that shouldn't happen that often, should it?
[05:37:01] <SnoopJ> that slot may not even contain a value, if someone stored something with the same hash there before and then deleted it
[05:37:20] <SnoopJ> tpr, it's very easy for this to happen, especially if a dict is long-lived and has keys going into/out of it over time.
[05:37:25] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:5a9:1bfd:dfd5:df91)
[05:37:25] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:5a9:1bfd:dfd5:df91) (Changing host)
[05:37:25] *** Joins: skapata (~Skapata@user/skapata)
[05:37:32] <tpr> :-(
[05:37:38] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:37:57] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[05:38:45] <tpr> well, choice of the data structure depends on what sort of usage you are expecting.. it'd be great to read some blog post about how the python impl works there
[05:39:14] <tpr> s/there/behind the scenes/
[05:39:46] *** Joins: frost (~frost@user/frost)
[05:39:53] <SnoopJ> I like these two talks about how dictionaries work under the hood: https://www.youtube.com/watch?v=oMyy4Sm0uBs (old, but good) and https://www.youtube.com/watch?v=p33CVV29OG8 (modern, also good)
[05:40:09] <SnoopJ> I believe Brandon Rhodes has given an updated version of the same talk, but I haven't seen it yet :)
[05:40:49] <tpr> ah, hehe, yes. I suppose I meant it'd be great to reread. that hettinger talk is something I've watched before but it's been a while
[05:41:16] <SnoopJ> might as well just read the impl if you wanna read something :)
[05:41:48] <SnoopJ> I can't recall if Anthony Shaw's book talks about it
[05:42:35] <tpr> that internals book?
[05:42:45] <SnoopJ> anyway, it's not O(1) worst case lookup, it's O(1) lookup *on average*, but worst-case it's O(N)
[05:42:49] <SnoopJ> tpr, yes, CPython Internals
[05:43:07] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[05:43:54] <tpr> I mean, the worst case is that for sure, if each and every entry hits the same slot.. but how often that'd happen for a regular python dev :P
[05:43:58] *** Quits: pythonoob (~thelounge@om126254142243.33.openmobile.ne.jp) (Ping timeout: 272 seconds)
[05:44:13] <SnoopJ> it depends!
[05:44:28] <tpr> yeah, fair enough
[05:44:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:44:36] *** Quits: schumaml (~schumaml@dslb-178-002-178-064.178.002.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:44:40] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:8c7d:ed27:c2db:c5e2)
[05:45:02] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:45:11] <Guest80> So this is my code and it is doing the opposite but what I have is a combined dictionary key value https://dpaste.org/uKMP
[05:46:08] <SnoopJ> tpr, there's a whole PEP talking about the related problem of string/bytes hashing: https://peps.python.org/pep-0456/
[05:46:09] <Guest80> it works if i put str(request.COOKIES)
[05:46:14] *** Joins: schumaml (~schumaml@dslb-188-104-162-082.188.104.pools.vodafone-ip.de)
[05:47:29] <tpr> SnoopJ: yeah, but I doubt this issue is relevant to our guest here :-)
[05:47:33] <SnoopJ> tpr, in particular, I believe that DJBX33A is easier to craft collisions for, and that's not a bad way to construct a DoS attack on a service (i.e. making what they think is O(1) into O(N))
[05:47:49] <SnoopJ> tpr, indeed, I don't think any of the matter is relevant, but since you broached it and I like it...
[05:48:07] *** Joins: parv (~quass@user/parv)
[05:48:10] <Guest80> I will definitely check out those videos and stuff in my spare time ty for those. The discussion is good though!
[05:48:34] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[05:48:54] <SnoopJ> Guest80, can you unpack for us what you mean by "doing the opposite?" I'm not sure what this code is about except that there's a dictionary, the code doesn't say much to me.
[05:48:56] <tpr> that dict one from hettinger is awesome, iirc. but most of the stuff he does is, so.. :)
[05:48:57] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[05:49:14] <Guest80> so youtube is in the dictionary value but it is combined
[05:49:22] *** Joins: Greasebee (~Greasebee@pool-71-190-150-251.nycmny.fios.verizon.net)
[05:49:29] <Guest80> and yet the if statement prints true as if it is not there
[05:49:30] <maxtim> A note about __init__.py file: you need to `from .mymodule import myclass`, which was a mistake my init file had
[05:49:46] <Guest80> i guess it only wants a single youtube value without concatenated characters?
[05:49:49] <tpr> SnoopJ: hash functions are magic to me, but it's indeed interesting
[05:49:58] <SnoopJ> Guest80, `key in somedict` translates to English as "is the key `key` in the dictionary `somedict`?"
[05:50:06] <tpr> Guest80: the `in` works only on dictionary _keys_, not on _values_
[05:50:10] <Guest80> oooh
[05:50:17] <SnoopJ> Guest80, if I understood you right, what you want to check is if the string "Youtube" appears in any of the *values* of this dictionary?
[05:50:22] <Guest80> yes
[05:50:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:50:33] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:51:11] <SnoopJ> Guest80, you can spell that as `any(search_value in val for val in somedict.values())`, for instance.
[05:51:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[05:51:48] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[05:51:51] <Guest80> interesting never saw any() before
[05:51:53] <tpr> if the next step is to extract the value, you may want to parse it out separately
[05:51:53] <SnoopJ> tpr, they're pretty magical, yep. Especially if you start worrying about interesting questions like "yea but how often does that happen?"
[05:52:17] <SnoopJ> Guest80, any() eats an iterable and spits out True if any of the values in the iterable are truthy, False otherwise.
[05:52:30] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Quit: Leaving)
[05:52:31] <Guest80> cool
[05:52:45] *** Quits: SteveR (~SteveR@2001:1900:2100:2807:ed17::20e) (Ping timeout: 256 seconds)
[05:52:59] <SnoopJ> it's another example where Python and English line up fairly nicely
[05:53:22] <Guest80> good point it does
[05:54:07] <tpr> if "Youtube=" in request.COOKIES["cookies_consent"]: print("yay")
[05:54:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:54:27] <Guest80> argument of type 'bool' is not iterable from the any example
[05:54:30] <SnoopJ> oh, right, you should do that ^ if you know exactly which key to look at
[05:54:37] <tpr> but you def will want to extract that value from it, so you'll want to convert that string into a dict
[05:54:44] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[05:55:07] <Guest80> ok i will change to that key then
[05:55:18] <SnoopJ> Guest80, will the string "youtube" always be in the "cookies_consent" field of the dictionary, if it's present?
[05:55:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[05:55:27] <SnoopJ> (or whatever string you're searching for, in general)
[05:55:35] *** Quits: schumaml (~schumaml@dslb-188-104-162-082.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:55:44] <Guest80> yes if cookies accepted/declined. But if neither, it will not
[05:56:47] <SnoopJ> then yes, you should limit your check to that key. sorry about that
[05:57:05] <Guest80> no worries
[05:57:28] *** Joins: schumaml (~schumaml@dslb-094-216-168-249.094.216.pools.vodafone-ip.de)
[05:58:00] <Guest80> wow I think tpr's example worked
[05:58:46] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[05:59:15] <tpr> note that it's not checking if the key is in a dict, but you can use `in` also to check if a substring is inside a string (which that example does)
[05:59:54] <tpr> if "foobar" in "foobarbaz": print("yay") will print a yay
[05:59:54] <twb> there might be a higher-level way to solve a higher-level goal, e.g. "import youtube_dl"
[06:00:08] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[06:00:21] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[06:00:38] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[06:00:44] <Guest80> I am not using youtube_dl. This is for django cookie management
[06:01:05] <Guest80> but it is really like a fundamental python question
[06:01:18] <twb> fair enough
[06:01:23] <twb> I thought it was an X/Y problem
[06:01:38] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:02:03] <SnoopJ> Guest80, does it make sense? First you pull out the value, then you do the is-in test with the result
[06:02:11] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Client Quit)
[06:03:15] <Guest80> yes it makes sense
[06:03:20] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:03:26] <Guest80> but it somehow converts the value from the dictionary to a string to compare?
[06:03:27] <tpr> https://docs.python.org/3/library/stdtypes.html#common-sequence-operations this is btw why it works. not that simple to find out, if you don't know you are looking for that
[06:03:29] *** Joins: fldme (~fldme@178.49.152.42)
[06:04:29] <tpr> a string is a sequence (I suppose), so you can do all those nice operations on them
[06:04:50] <SnoopJ> Guest80, there's no conversion. Your dictionary there eats keys (strings) and spits out values (also strings). When you do `yourdict[key]`, the result is a string, then you test if the search term is in that string
[06:05:00] <SnoopJ> tpr, yes, strings are sequences
[06:05:08] <SnoopJ> (of codepoints, specifically)
[06:05:10] <Guest80> ah makes sense
[06:05:47] <Guest80> i've been to this chat a few times you all mind blow me each time lol
[06:05:47] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:06:08] *** Quits: schumaml (~schumaml@dslb-094-216-168-249.094.216.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[06:06:21] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:06:55] *** Quits: kenwoodfox_ (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[06:07:29] <tpr> we are all learning ^^
[06:07:33] <Guest80> for sure
[06:07:34] <twb> 'Alice' in 'My name is "Alice", FYI.' ==> True
[06:07:46] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[06:08:04] <twb> 'Alice' in {'age': 26, 'message': 'My name is "Alice", FYI.'}['message'] ==> True
[06:08:16] <twb> Guest80: ^ you're doing something like that, AIUI
[06:08:34] <Guest80> yes precisely
[06:08:36] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[06:08:38] *** Joins: schumaml (~schumaml@dslb-178-002-183-045.178.002.pools.vodafone-ip.de)
[06:08:59] <twb> if you were more picky you might do something like
[06:09:29] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:09:32] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[06:09:34] <twb> 'youtube' in cookie_blob_to_dict(request.COOKIES["cookies_consent"]).keys()
[06:10:16] <twb> I'm also assuming "request.COOKIES" is suggested because you don't have a with request.Sesssion() as sess: sess.get('https://example.com'); sess.COOKIES
[06:10:18] <twb> but whatever
[06:10:27] <tpr> now replace cookie_blob_to_dict with a nested dict comprehension :P
[06:10:38] <twb> oh ignore me -- you are the server not the client
[06:10:53] *** Joins: Hackerpcs (~user@user/hackerpcs)
[06:11:07] <Guest80> there is request.session also in django but request.cookies specifically gets the cookies
[06:11:15] <tpr> but looking at that consent cookie, how does that stuff work? the client is just sending all the (popular) sites it has consented to receive cookies or what?
[06:11:28] <twb> yeah sorry I was wrongly thinking this was "python3-requests" library
[06:11:33] <Guest80> https://github.com/bmihelac/django-cookie-consent
[06:11:42] <Guest80> I am fixing issues for this library
[06:11:54] <Guest80> It is free replacement for something paid like onetrust cookiepro
[06:12:35] <Guest80> but i may rewrite something like it on my own idk bc the maintainers are a third party idk if i want to deal with waiting for things
[06:13:00] *** Quits: schumaml (~schumaml@dslb-178-002-183-045.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:13:01] <Guest80> https://stripe.com/cookie-settings
[06:13:07] <Guest80> It is very much like this
[06:13:13] <twb> I guess "just use modern client-side key/value database instead of cookies" isn't an option for django
[06:13:27] <Guest80> but it also has a cookie bar popup option also
[06:13:32] <twb> https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API
[06:14:05] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:14:17] <Guest80> yea i try to use localstorage too but websites like youtube and stripe use cookies :(
[06:14:44] <tpr> twb: well, that'd require one round-trip to figure out what's allowed (or not). storing this stuff cookies reduces that on subsequent visits :)
[06:14:45] <Guest80> like when i embed videos and stuff from youtube they get google's spyware automatically. With this, they can opt in
[06:14:53] *** Joins: schumaml (~schumaml@dslb-188-104-166-161.188.104.pools.vodafone-ip.de)
[06:15:04] <twb> tpr: my point is that EU law ONLY covers cookies
[06:15:25] <twb> tpr: so if you just don't use cookies, you avoid any "if european citizen, show consent form" requirement
[06:15:36] <TML> twb: What?
[06:15:36] <Guest80> yup
[06:15:52] <TML> The GDPR covers way more than cookies
[06:15:59] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[06:16:47] <tpr> twb: it's about PII, if you don't store any of that, there's no need for consent
[06:16:49] <twb> Hrm, it seems you are right
[06:16:50] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:16:53] <twb> https://stackoverflow.com/questions/50619345/gdpr-compliance-does-this-apply-to-javascript-web-storage
[06:17:10] *** Joins: thiras (~thiras@user/thiras)
[06:17:21] <twb> tpr: OK.  I knew that was the *intent* but I didn't realize GDPR actually captured that intent properly.
[06:17:33] <Guest80> yea it makes everything harder
[06:17:46] <SnoopJ> if the law was about a specific mechanism of storage, it would be somewhat trivial to go around it by just coming up with a new one
[06:17:52] <TML> https://gdpr-info.eu/recitals/no-30/
[06:17:56] <twb> SnoopJ: exactly!
[06:18:11] <twb> SnoopJ: for example, in Australia, you are only allowed to record TV shows using VHS tapes, specifically
[06:18:29] <twb> SnoopJ: recording to a hard disk is illegal because hard disks didn't exist at the time the law was written >_>
[06:18:50] <TML> twb: The law enumerated what media you could record to?
[06:19:04] <twb> TML: yep
[06:19:08] <tpr> glad they didn't update that permission to cover personal copies stored on other media ^_^
[06:19:20] <TML> well, that's just straight-up legislative malpractice
[06:19:23] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[06:19:34] <tpr> vhs recordings kinda suck, no dd5.1 and so on
[06:19:43] <tpr> abysmal resolution, too
[06:19:48] <SnoopJ> TML, it's not unheard of, considering the history of media (I know this comes up not-infrequently when it comes to royalties contracts, often expressed in these terms)
[06:19:53] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:20:03] <tpr> yeah, I get that that was probably the intention of it
[06:20:08] <twb> lawmakers making a stupid law is... not unusual
[06:20:12] <SnoopJ> I think people have largely caught on now that we're well into "media formats change rapidly"
[06:20:45] <TML> SnoopJ: Even as far back as the 1980's, most contract lawyers would be smart enough to include the phrase "such as", or other similar qualifiers, to future proof their work
[06:20:48] <tpr> I mean, there's obviously a distinction between a digital (or 1:1 copy) and lossy copy, which some legislations may differentiate with
[06:21:04] <SnoopJ> TML, for some value of "proof"
[06:21:12] *** Quits: schumaml (~schumaml@dslb-188-104-166-161.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[06:21:21] <twb> SnoopJ: another case I know of is that US federal government organizations are legally required to provide a dialup serial line for blind users, even though that is nowadays only used by spammers
[06:21:26] <tpr> but such wordings are more likely chosen deliberately than by accident :)
[06:21:33] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[06:22:02] <SnoopJ> TML, IIRC the corporate entity that walks around wearing the ancient rotting flesh of Atari has escaped obligations to pay some of the original designers of a handful of games because their contracts were written specifically enough to exclude re-releases
[06:22:16] <tpr> although.. fax machines are used to send printed out, signed copies of things, so there's that..
[06:22:32] <SnoopJ> (probably 70s, though, I think I'm remembering this from a GDC talk with one of the 2600 devs)
[06:22:42] <twb> tpr: *google HR* did that to me in the 200x's
[06:22:57] *** Joins: ubert1 (~Thunderbi@p200300ecdf3be919fa34792f1e548220.dip0.t-ipconnect.de)
[06:22:59] <TML> SnoopJ: Well, it's one thing if your corporate attorney INTENTIONALLY leaves things out to "protect the firm" :)
[06:23:03] <twb> "please sign this NDA"  ">emails back gpg signature<" ">massive confusion<"
[06:23:09] *** Joins: schumaml (~schumaml@dslb-178-002-191-252.178.002.pools.vodafone-ip.de)
[06:23:12] <tpr> twb: using deliberate wording for their benefit, or faxing things around? :)
[06:23:20] <TML> It's quite another for a legislature to just...forget to qualify their lists of things
[06:23:22] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[06:23:33] <SnoopJ> TML, well, I'm not saying it's not a big deal...
[06:23:49] *** Quits: ubert (~Thunderbi@p200300ecdf3be98fb257cc52479c2a5c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:23:49] *** ubert1 is now known as ubert
[06:23:59] <SnoopJ> ...just that the carelessness of legislatures is not unknown, especially where technology is concerned
[06:24:30] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 272 seconds)
[06:24:32] * SnoopJ isn't familiar with the law that kicked off this thread of conversation, though
[06:25:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[06:26:00] *** Joins: cyphase (~cyphase@user/cyphase)
[06:26:21] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:27:57] <twb> https://www.legislation.gov.au/Details/C2021C00407  110AA  Copying cinematograph film in different format for private use
[06:28:03] <twb> It's more confusing than last time I looked at it
[06:28:12] *** Joins: audio (~audio@user/audio)
[06:28:12] *** Quits: schumaml (~schumaml@dslb-178-002-191-252.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:28:30] *** Quits: jackblasted (~quassel@173.239.197.251) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:28:34] <Guest80> I am wondering does it really matter if you use if variable == None or if variable is None ?
[06:28:50] <Guest80> And what the heck is a smart_str?
[06:28:51] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[06:29:01] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[06:29:11] <SnoopJ> Guest80, with `None` specifically, no. With other objects, yes. If you aren't absolutely sure you need `is`, use `==`
[06:29:41] <Guest80> ok cool thanks
[06:29:46] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[06:30:03] *** Joins: ice9 (~ice9@user/ice9)
[06:30:26] *** Joins: schumaml (~schumaml@dslb-092-074-011-016.092.074.pools.vodafone-ip.de)
[06:31:24] <twb> Usually you don't care about None-ness specifically, only false-ness
[06:31:34] <twb> So "if x is None" can often be simply "if x"
[06:31:51] <Guest80> or if not x?
[06:31:57] <twb> right sorry
[06:32:02] <SnoopJ> Guest80, smart_str() appears to be a Django feature that turns the input into a `str` (i.e. it decodes the input if the input is bytes)
[06:32:10] <Guest80> no worries i just wanted to be sure it can work both ways
[06:32:47] <SnoopJ> https://docs.djangoproject.com/en/4.0/ref/utils/#django.utils.encoding.smart_str
[06:32:54] <Guest80> ooh that makes sense so it converts a bytes to a string?
[06:33:00] *** [_] is now known as [itchyjunk]
[06:33:14] <Guest80> ty i thought it may have been a cross python/django thing
[06:33:20] <tpr> you care about the Noneness if you are handling some input parameters to see if they match for the None being a default :P
[06:33:43] <twb> or SQL sometimes
[06:33:45] *** Joins: aod (~a@190-207-87-44.dyn.dsl.cantv.net)
[06:33:55] *** Joins: unyu (~pyon@user/pyon)
[06:34:07] <SnoopJ> Guest80, think of it as a 'funnel' that always tries to convert its input to a string
[06:34:21] <SnoopJ> (and if the input is already a string, it just sails right through)
[06:34:48] <tpr> I'm wondering about what were the use cases where I have had the need to use `is` instead of equality comparison besides the none case, and I cannot think of any I had done that myself
[06:35:21] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[06:35:28] <SnoopJ> tpr, it's useful when you need to make your own singleton...which is pretty rare :)
[06:36:06] <SnoopJ> or sometimes when you have a series of mutable objects that might be equal, but you want to be sure which one of those you have
[06:36:33] *** Leonarbro_ is now known as Leonarbro
[06:36:37] <tpr> oh yes, I'm trying to think of a practical use case here
[06:36:40] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:37:18] <Guest80> got it snoopj it makes complete sense since the settings have the cookie name as a bytes object
[06:37:24] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[06:37:47] <twb> SnoopJ: feels like weak typing to me :P
[06:37:55] <SnoopJ> twb, I don't know what that means
[06:38:15] <twb> weak typing is where every data object is a string unless you need it to be something else
[06:38:27] <SnoopJ> I know what weak typing is, I just don't know what your statement means in this context
[06:38:36] *** Quits: schumaml (~schumaml@dslb-092-074-011-016.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:38:38] <twb> it's common in bash and PHP (and tcl?), and insane almost everywhere else
[06:38:40] <SnoopJ> (Python is strongly typed)
[06:38:51] <twb> SnoopJ: I was kvetching about smart_str()
[06:38:54] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:39:12] <tpr> javascript?
[06:39:18] <tpr> if foo === bar
[06:39:18] <SnoopJ> it doesn't seem like an uncommon thing in an ecosystem with that many moving parts where you won't be sure exactly what kind of object you'll have, but you're relatively sure you can get to a str from it
[06:39:30] <SnoopJ> (but I don't write Django)
[06:40:02] <twb> tpr: I don't speak enough js to comment.  I know it *had* a prototype-based object system based on self and slate
[06:40:19] <tpr> https://github.com/satwikkansal/wtfpython (and its javascript equivalent) are good reads
[06:40:42] <SnoopJ> CMake is someting like the limiting case here, it has a type system only if you smear vaseline on your eyes and squint
[06:40:57] *** Joins: schumaml (~schumaml@dslb-188-104-177-041.188.104.pools.vodafone-ip.de)
[06:41:15] <twb> tpr: my biggest wtf is the error reporting for def ᴮᴵᴳᴮᴵᴿᴰ(x): return x
[06:41:45] *** Joins: lord_daemon (~lord_daem@187.36.203.244)
[06:41:46] <SnoopJ> twb, what error?
[06:42:03] <twb> SnoopJ: it's normalized to ascii in error messages
[06:42:08] *** Joins: hams (~hams@user/hams)
[06:42:14] <SnoopJ> oh. yes, NFKC applies
[06:42:22] *** Joins: Masterphi (~Masterphi@user/masterphi)
[06:42:57] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[06:43:02] <SnoopJ> ᴮᴵᴳᴮᴵᴿᴰ and BIGBIRD are the same identifier as far as Python is concerned
[06:43:13] <twb> and you can't say "ℵ₀ = 1"
[06:43:22] *** Joins: cyphase (~cyphase@user/cyphase)
[06:43:27] <SnoopJ> right, Unicode's identifier rules don't allow it
[06:43:45] <twb> er... are you saying Unicode defines what an "idenfitier" is?
[06:43:48] <twb> *identifier
[06:43:53] <SnoopJ> yes, UAX #31
[06:44:02] <SnoopJ> which Python uses in a very lightly modified form
[06:44:05] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:44:09] <TML> twb: Certainly
[06:44:24] <SnoopJ> twb, https://unicode.org/reports/tr31/
[06:44:30] <twb> TIL
[06:44:53] <twb> "Date: 2021-08-26" explains why I hadn't heard of it in 2005 :P
[06:45:17] <SnoopJ> version 1 was published in 2003 :)
[06:45:24] <TML> twb: That's thee date for Revision #35
[06:45:26] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[06:45:28] <TML> s/thee/the/
[06:45:46] *** Quits: fldme (~fldme@178.49.152.42) (Quit: Client closed)
[06:45:48] <twb> Fair
[06:46:05] <SnoopJ> Python's the only language I regularly use that implements it, but C++ is implementing it soon
[06:46:22] *** Joins: on^ (~on@50.232.121.75)
[06:47:46] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Remote host closed the connection)
[06:47:49] * tpr feels overwhelmed
[06:48:14] <tpr> maybe it's (not) worth to read the unicode spec and all the existing rfcs, someday
[06:48:26] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[06:48:44] <tpr> ietf rfcs, not unicode ones (if they even have such)
[06:48:55] <TML> tpr: I don't know about ALL of the RFCs, but there are about 20-30 that it's helpful to be familiar with
[06:49:07] <TML> Unicode calls an RFC a "UAX"
[06:49:17] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[06:49:19] <TML> Unicode Standard Annex
[06:49:46] <TML> (Don't ask me to explain how that acronyms to "UAX")
[06:50:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:50:50] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[06:51:01] <twb> TML: more than 30 but probably there's about 20 that EVERYONE should know
[06:51:26] <twb> I mean, everyone starts with the same 20, and then has another 10 that are industry-specific
[06:51:38] <TML> That's the same thing I was saying
[06:51:52] <TML> "Whatever it is you do, there are probably around 30"
[06:51:59] *** Quits: millido (~millido@84.210.150.128) (Read error: Connection reset by peer)
[06:52:03] <tpr> are we now talking about ietf RFCs, or UAXes?
[06:52:26] <tpr> if the latter, I'm wondering which 20 everyone should know :)
[06:52:32] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b537:d53a:bf09:d625) (Ping timeout: 240 seconds)
[06:53:03] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:53:22] <twb> RFC 2119, RFC 7259, RFC 952, whatever 2822 is now, whatever h3 and TLS are
[06:53:27] <twb> *7258
[06:53:35] *** Quits: lord_daemon (~lord_daem@187.36.203.244) (Read error: Connection reset by peer)
[06:54:23] <twb> Just looking at my cache from this year, I have...  1034 1925 2368 3164 4193 6275 6838 8259 8915 1035 2045 2616 3561 5071 6570 7105 8520 952 1234 2119 2822 3966 5322 6648 7258 8620 1924 2229 3010 3986 5424 6761 7999 8621
[06:54:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:55:43] <tpr> some of those you've read this year are not for everyone :P
[06:56:42] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[06:57:37] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[06:57:46] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:57:52] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[06:58:10] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:58:41] <SnoopJ> tpr, the tl;dr on Unicode's identifier rules is "Unicode came up with good categories collecting codepoints that are allowed in an identifier, and distinguishes between the one that starts an identifier and the ones that 'continue' one"
[06:59:53] <SnoopJ> but since it's Unicode, there are about 65,535 nuances to every rule :)
[07:00:07] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043) (Ping timeout: 268 seconds)
[07:00:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:01:09] <tpr> SnoopJ: yeah, my unicode knowledge is lackluster. something besides "it's a charset" comes from a single blog post that was called something like "things that every developer should know about unicode"
[07:01:20] <twb> I'm pleasantly surprised that Unicode felt that was within their scope
[07:01:23] <SnoopJ> the one Joel Spolsky wrote? it's a pretty good one
[07:01:54] <tpr> SnoopJ: ah, that's it indeed. the name eluded me
[07:02:01] <twb> https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/
[07:02:05] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[07:02:47] <twb> See also https://github.com/xenoterracide/falsehoods
[07:03:03] <tpr> time for a re-read, tbd tomorrow with watching that hettinger dict talk
[07:04:36] <twb> I love how spolsky says "it's not that hard" as if he hasn't had fun with different german orthographies handling the esszet.
[07:04:52] *** Joins: lord_daemon (~u0_a241@187.36.203.244)
[07:05:02] *** Quits: _0x00 (~0x00@user/0x00/x-6246543) (Quit: Leaving)
[07:05:40] *** Quits: schumaml (~schumaml@dslb-188-104-177-041.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[07:05:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:05:52] <tpr> hum hum?
[07:06:42] <tpr> reading the twelve networking truths, and no mention about dns, nor cloudflare/gcp/aws failures ;(
[07:07:37] *** Joins: millido (~millido@84.210.150.128)
[07:08:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[07:08:56] *** Joins: schumaml (~schumaml@dslb-094-216-171-052.094.216.pools.vodafone-ip.de)
[07:09:10] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[07:10:03] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Quit: Konversation terminated!)
[07:10:14] <MiguelX413> how do i typehint a function that will return a tuple of a string and list?
[07:10:49] <tpr> MiguelX413: def foo() -> Tuple[str, list]
[07:10:56] <twb> typing.Tuple- I was too slow
[07:10:59] <MiguelX413> tpr: thank you
[07:11:04] <MiguelX413> twb: lmao
[07:11:43] <tpr> btw, I learned something new just a while ago. you can apparently define tuples of non-specified length containing items of type T using Tuple[T, ...]
[07:12:27] *** Joins: ideopathic (~ideopathi@2600:1702:8b0:a500:9d0e:a8f:31dd:33d1)
[07:12:37] <tpr> def foo() -> Tuple[T, ...]: return (T(1), T(2), T(3)) -- or is ellipsis just a wildcard for "I don't care"?
[07:13:04] <tpr> MiguelX413: btw, instead of using tuples, prefer typing.NamedTuple
[07:13:14] <MiguelX413> tpr: yes i was going to ask about that
[07:13:22] <MiguelX413> its kind of hard for me to wrap my head around though'
[07:13:32] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Quit: WeeChat 3.0)
[07:13:52] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[07:14:03] <MiguelX413> can you give me an example of the typehint with a named tuple?
[07:14:15] <tpr> https://stackoverflow.com/a/50038614 - although it recommends dataclasses from 3.7+, if the data is expected to be immutable I'd just use the namedtuple
[07:14:47] <MiguelX413> tpr: yes its going to be immutable
[07:15:00] <SnoopJ> tpr, neither, the signature `Tuple[T, ...]` means a tuple that contains only T, but of any length
[07:16:09] <MiguelX413> tpr: like https://stackoverflow.com/a/34269877/4335693 ?
[07:16:21] *** Joins: jazzy2 (~jaziz@user/jaziz)
[07:16:29] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:2476:a88:e6fd:962e)
[07:16:46] <tpr> SnoopJ: oh. that's what I wanted to say with the former one :P
[07:17:09] <SnoopJ> ah
[07:17:16] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[07:17:27] <tpr> MiguelX413: no. the first example in the link I gave. just inherit from the NamedTuple
[07:17:49] <tpr> iirc that uses slots, so you'll also save some memory if you have plenty of those
[07:17:58] <SnoopJ> they're just tuples
[07:18:10] <SnoopJ> (with a bunch of stuff piled onto them)
[07:18:12] <MiguelX413> tpr: got it
[07:18:27] <tpr> .. ah, makes obviously sense :PP
[07:19:00] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:19:17] *** Joins: adeliktas2 (~adeliktas@i59F526C9.versanet.de)
[07:19:21] <tpr> I think dataclasses may also support frozen keyword like attrs does, but besides requiring you to import NamedTuple from typing it feels elegant way to store some immutables
[07:19:34] <MiguelX413> i'm not sure if this is worth it for one function
[07:19:35] <MiguelX413> lmao
[07:19:39] <tpr> much nicer than the collections.namedtuple
[07:19:46] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[07:19:56] <SnoopJ> yes, `@dataclass(frozen=True)` is a thing you can do
[07:20:19] *** Quits: Syzygy_ (~Syzygy@178-190-83-4.adsl.highway.telekom.at) (Remote host closed the connection)
[07:20:38] *** Joins: Syzygy_ (~Syzygy@2001:871:265:1cdc:fdb2:43de:8db4:9268)
[07:20:51] <MiguelX413> whats the difference between NamedTuple and namedtuple
[07:20:54] *** Quits: adeliktas (~adeliktas@i59F5F72C.versanet.de) (Ping timeout: 256 seconds)
[07:20:54] *** adeliktas2 is now known as adeliktas
[07:23:02] *** Quits: schumaml (~schumaml@dslb-094-216-171-052.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[07:23:12] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[07:23:20] *** Joins: Blankspace (~Blankspac@user/blankspace)
[07:24:04] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[07:25:10] *** Joins: schumaml (~schumaml@dslb-092-074-001-001.092.074.pools.vodafone-ip.de)
[07:26:05] *** Quits: ideopathic (~ideopathi@2600:1702:8b0:a500:9d0e:a8f:31dd:33d1) (Quit: Textual IRC Client: www.textualapp.com)
[07:26:34] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:29:01] <nz> https://stackoverflow.com/questions/50766461/whats-the-difference-between-namedtuple-and-namedtuple ?
[07:29:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:29:57] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:18] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Quit: WeeChat 3.0)
[07:31:26] *** Quits: lord_daemon (~u0_a241@187.36.203.244) (Read error: Connection reset by peer)
[07:31:38] <MiguelX413> is there a way to take 2 results of a function into 2 arguments without having to create variables?
[07:32:09] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[07:32:12] *** Quits: schumaml (~schumaml@dslb-092-074-001-001.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[07:32:40] <parv> x, y = one(), other() # untested
[07:33:14] <parv> Nope, instead use: x, y = one()
[07:33:35] <sco1> I'm assuming you mean https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists?
[07:33:51] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:55] <sco1> Having examples for the questions you're asking makes it easier for people to understand the answer you're looking for
[07:34:28] *** Joins: schumaml (~schumaml@dslb-092-074-013-043.092.074.pools.vodafone-ip.de)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:33] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:38:47] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[07:38:54] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[07:39:02] *** Quits: schumaml (~schumaml@dslb-092-074-013-043.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[07:40:10] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[07:40:19] <MiguelX413> sco1: undestood, i'll send code segments once im done with the advice i've received so far
[07:40:32] *** Quits: sreve (~quassel@p549d7045.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:40:43] *** Joins: schumaml (~schumaml@dslb-178-002-182-119.178.002.pools.vodafone-ip.de)
[07:41:18] *** Joins: sreve (~quassel@p4ff44e9b.dip0.t-ipconnect.de)
[07:41:26] *** Joins: saroy (~Sandipan@43.252.250.67)
[07:45:42] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[07:47:45] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[07:48:16] *** Joins: Deana (~Deana@smtp.okb2-tmn.ru)
[07:50:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[07:50:58] *** Quits: yaraju_ (~yaraju@user/yaraju) (Quit: Leaving)
[07:51:36] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:52:24] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[07:53:29] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[07:54:37] *** Joins: Guest5584 (~vit@chello085216193138.chello.sk)
[07:55:04] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:55:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:55:57] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 240 seconds)
[07:56:10] *** Joins: Batzy (~quassel@user/batzy)
[07:56:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[07:56:39] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:59:17] *** Quits: pipe_connector (~pipe_conn@65.128.22.78) (Ping timeout: 240 seconds)
[07:59:23] *** Joins: lowden (~shugo@ctrl-c.club)
[07:59:53] <lowden> how can i do something like  'ls *' inside subprocess module
[08:00:24] *** Joins: Blankspace (~Blankspac@user/blankspace)
[08:00:52] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[08:02:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:02:51] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[08:03:13] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[08:03:48] *** Quits: schumaml (~schumaml@dslb-178-002-182-119.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[08:03:51] <phy1729> What do you actually want to do?
[08:05:38] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:05:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:06:03] *** Joins: schumaml (~schumaml@dslb-094-216-175-008.094.216.pools.vodafone-ip.de)
[08:07:37] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:07:58] <lowden> mv *#182* 182.mp4
[08:09:46] <phy1729> I'd use pathlib with glob and rename https://docs.python.org/3.8/library/pathlib.html#pathlib.Path.glob https://docs.python.org/3.8/library/pathlib.html#pathlib.Path.rename
[08:10:17] <twb> lowden: for path in pathlib.Path.cwd().glob('*#182*'): path.rename('182.mp4')
[08:10:27] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[08:10:45] <twb> But if you expect exactly one match you might add a guard for that
[08:11:18] <twb> if len(paths := pathlib.Path.cwd().glob('*#182*')) == 1: paths[0].rename('182.mp4'); else raise RuntimeError('sad sack', paths)
[08:11:53] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[08:12:32] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[08:13:36] *** Quits: schumaml (~schumaml@dslb-094-216-175-008.094.216.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:18:30] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[08:18:39] *** Joins: schumaml (~schumaml@dslb-178-007-202-013.178.007.pools.vodafone-ip.de)
[08:18:58] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:19:37] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[08:19:40] *** Quits: Guest5584 (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[08:19:49] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[08:20:39] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:21:34] *** Joins: han-solo (~hanish@user/han-solo)
[08:22:40] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[08:23:00] *** Joins: kiran (~kiranostr@78.40.148.178)
[08:23:24] *** Joins: goppo (~goppo@user/goppo)
[08:23:51] <goppo> h
[08:23:52] <goppo> hi
[08:24:54] <goppo> i have a question about grequest. is there a way run retrieval of the URLs in parallel but the requests are ensured to be fired sequentially?
[08:25:07] *** Quits: dfrey (~dfrey@172.103.152.101) (Ping timeout: 250 seconds)
[08:25:08] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[08:25:28] <goppo> grequests.map() fires the requests in parallel, but i'm not sure if the calls would be made sequentially
[08:26:29] *** Joins: pipe_connector (~pipe_conn@65.128.22.78)
[08:26:56] *** Quits: pipe_connector (~pipe_conn@65.128.22.78) (Remote host closed the connection)
[08:27:08] *** Joins: asen (~asen@2408:821a:618:28c0:b99d:d408:c433:2245)
[08:27:36] *** Quits: asen (~asen@2408:821a:618:28c0:b99d:d408:c433:2245) (Remote host closed the connection)
[08:31:00] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[08:31:10] *** Quits: schumaml (~schumaml@dslb-178-007-202-013.178.007.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:31:28] *** Joins: s1b1 (~s1b1@user/s1b1)
[08:32:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:32:51] <TML> goppo: Note: You should probably use requests-threads or requests-futures instead.
[08:32:55] *** Joins: schumaml (~schumaml@dslb-188-104-171-184.188.104.pools.vodafone-ip.de)
[08:33:17] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[08:34:12] *** Quits: on^ (~on@50.232.121.75) (Ping timeout: 240 seconds)
[08:34:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[08:34:25] <goppo> TML oh right
[08:35:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[08:37:00] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[08:37:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[08:37:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[08:37:55] *** jazzy2 is now known as jazzy
[08:37:58] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 256 seconds)
[08:38:08] *** Quits: schumaml (~schumaml@dslb-188-104-171-184.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:38:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:38:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[08:38:40] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[08:38:42] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611)
[08:39:08] *** Joins: schumaml (~schumaml@dslb-188-104-162-151.188.104.pools.vodafone-ip.de)
[08:40:21] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[08:40:30] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[08:40:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[08:40:45] *** Joins: kevr (~kevr@user/kevr)
[08:41:10] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[08:41:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:ccbf:86ce:7ab:edd3) (Ping timeout: 240 seconds)
[08:42:32] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:44:05] *** Joins: dfrey (~dfrey@172.103.152.101)
[08:44:36] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[08:44:37] *** Joins: wyclif (~wyclif@user/wyclif)
[08:45:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[08:45:56] *** Joins: ATAD (~ATAD@user/atad)
[08:45:56] *** Quits: sinan (~sinan@mobile-access-6df05d-76.dhcp.inet.fi) (Read error: Connection reset by peer)
[08:47:16] *** Quits: Greasebee (~Greasebee@pool-71-190-150-251.nycmny.fios.verizon.net) (Quit: Client closed)
[08:47:42] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:47:47] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Read error: Connection timed out)
[08:48:54] *** Quits: schumaml (~schumaml@dslb-188-104-162-151.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:49:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[08:49:34] *** Quits: vlado1 (~vlado@181.50.79.237) (Ping timeout: 260 seconds)
[08:50:04] *** Joins: wyclif (~wyclif@user/wyclif)
[08:50:27] *** Joins: schumaml (~schumaml@dslb-188-104-160-079.188.104.pools.vodafone-ip.de)
[08:51:19] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[08:52:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:52:33] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[08:53:40] *** Quits: ckdCreations (~ckdCreati@147.55.130.33) (Read error: Connection reset by peer)
[08:53:59] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[08:55:52] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[08:56:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043)
[08:56:32] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[08:56:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[08:57:57] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[08:58:03] *** Quits: schumaml (~schumaml@dslb-188-104-160-079.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:58:04] *** Quits: emerent (~quassel@p200300cd5743c360ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:59:03] *** Joins: emerent (~quassel@p200300cd5743c375ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:59:43] *** Joins: schumaml (~schumaml@dslb-094-216-173-011.094.216.pools.vodafone-ip.de)
[09:00:25] *** Joins: hexenbane (~hecto@2806:2f0:91a1:418:44a8:2432:765d:960b)
[09:02:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:03:14] *** Quits: hexenbane (~hecto@2806:2f0:91a1:418:44a8:2432:765d:960b) (Client Quit)
[09:03:15] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[09:03:33] *** Joins: hexenbane (~hexenbane@fixed-187-191-36-31.totalplay.net)
[09:05:10] *** Quits: schumaml (~schumaml@dslb-094-216-173-011.094.216.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[09:05:50] *** Joins: sinan (~sinan@85-76-81-181-nat.elisa-mobile.fi)
[09:06:14] *** Joins: crashrep (~crashrep@user/crashrep)
[09:06:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:07:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[09:07:09] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[09:08:23] *** Quits: ubert (~Thunderbi@p200300ecdf3be919fa34792f1e548220.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:08:37] *** Joins: schumaml (~schumaml@dslb-094-216-173-221.094.216.pools.vodafone-ip.de)
[09:09:05] *** Joins: on^ (~on@50.232.121.75)
[09:09:09] *** Joins: alxndr (~alexander@ybti.net)
[09:09:27] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611) (Remote host closed the connection)
[09:09:31] *** Joins: ubert (~Thunderbi@p200300ecdf3be919a5031f04def6f440.dip0.t-ipconnect.de)
[09:11:23] *** Joins: kts (~kts@103.73.237.26)
[09:11:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[09:13:56] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[09:14:05] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[09:14:14] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[09:14:21] *** Joins: CombatVet (~c4@user/combatvet)
[09:14:54] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:9dad:8be5:fda9:272)
[09:15:34] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:16:15] *** Quits: majors (~majors@user/majors) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:17:19] *** Quits: schumaml (~schumaml@dslb-094-216-173-221.094.216.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[09:17:24] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[09:17:30] *** Joins: majors (~majors@user/majors)
[09:17:30] *** Quits: hexenbane (~hexenbane@fixed-187-191-36-31.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[09:17:47] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[09:18:12] *** Quits: kts (~kts@103.73.237.26) (Ping timeout: 256 seconds)
[09:18:12] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Read error: Connection reset by peer)
[09:18:15] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[09:18:46] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[09:18:51] *** Joins: schumaml (~schumaml@dslb-178-007-205-143.178.007.pools.vodafone-ip.de)
[09:20:43] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:8c7d:ed27:c2db:c5e2) (Ping timeout: 268 seconds)
[09:25:02] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[09:25:20] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[09:26:19] *** nortoh_ is now known as nortoh
[09:26:19] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[09:26:19] *** Joins: nortoh (~nortoh@user/nortoh)
[09:26:23] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[09:26:29] *** Joins: redgloboli (~redglobol@user/redgloboli)
[09:26:44] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[09:27:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:fe6d:12d2:2acc:ce5f) (Ping timeout: 240 seconds)
[09:27:08] *** Joins: drvanon (~drvanon@81.89.199.26)
[09:27:56] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:27:56] <drvanon> Tkinter is surprisingly frustrating.
[09:28:46] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[09:28:50] <drvanon> Since, it depends on one thread, I would expect that they would make it very easy to put heavier logic in other threads.
[09:29:14] *** Joins: mcglk (~mcglk@131.191.49.120)
[09:29:20] <drvanon> https://gist.github.com/Drvanon/ba78bce4ec450e7b1cc6593241c1cc64
[09:29:21] <twb> also note that requests is usually only doing HTTP/1.1
[09:29:32] *** Quits: schumaml (~schumaml@dslb-178-007-205-143.178.007.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[09:29:47] <drvanon> When I run this on ubuntu it just dies on me once I press the run button.
[09:29:47] <twb> h2 and h3 have much better options than "spin up several separate connections"
[09:30:05] *** Quits: Mocramis (~mocramis@dalaran.sceen.net) (Quit: WeeChat 2.3)
[09:30:07] *** Joins: dvx (~dvx@5.181.92.64)
[09:31:03] *** Joins: withered1dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[09:31:05] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:8c7d:ed27:c2db:c5e2)
[09:31:05] *** Joins: schumaml (~schumaml@dslb-188-104-187-074.188.104.pools.vodafone-ip.de)
[09:31:33] <twb> Currently I resort to just subprocess.run(['wget2', '-i-'], check=True, input='\n'.join(urls))
[09:31:39] <twb> Although obviously that's just for simple downloads
[09:32:30] *** Quits: daex (~daex@user/daex) (Ping timeout: 260 seconds)
[09:32:34] *** Joins: daniel3 (daniel@user/daniel2)
[09:32:46] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[09:33:08] *** Joins: daex (~daex@user/daex)
[09:33:16] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[09:33:54] *** Quits: daniel2 (daniel@user/daniel2) (Ping timeout: 260 seconds)
[09:34:02] *** Quits: dre (~dre@2001:8003:c932:c301:b9de:333:ba99:ae98) (Ping timeout: 252 seconds)
[09:34:22] *** Joins: audiobirb (~audio@user/audio)
[09:34:45] *** Joins: dre (~dre@2001:8003:c932:c301:b9de:333:ba99:ae98)
[09:35:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 256 seconds)
[09:35:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[09:36:15] *** Parts: lowden (~shugo@ctrl-c.club) (WeeChat 3.0.1)
[09:39:36] *** Joins: djapo (~archangel@user/djapo)
[09:39:44] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[09:39:57] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[09:40:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:42:59] *** Joins: djapo (~archangel@user/djapo)
[09:43:04] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:44:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:46:07] *** Joins: jjasghar4 (~jjasghar@idlerpg/player/jjasghar)
[09:46:57] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:8c7d:ed27:c2db:c5e2) (Ping timeout: 240 seconds)
[09:47:07] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[09:47:48] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Ping timeout: 272 seconds)
[09:47:49] *** jjasghar4 is now known as jjasghar
[09:49:26] *** Joins: devish (~devish@54-240-198-39.amazon.com)
[09:49:46] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:50:21] *** Joins: semeion (~semeion@user/semeion)
[09:53:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:53:04] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[09:53:24] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[09:53:27] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[09:54:40] *** Quits: aod (~a@190-207-87-44.dyn.dsl.cantv.net) (Quit: leaving)
[09:54:55] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:56:23] *** Joins: pycurious (~Adium@user/pycurious)
[09:56:40] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:58:07] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:58:10] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[09:58:10] *** Joins: F0ma (Liudas@shell.xshellz.com)
[09:58:28] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[10:01:06] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[10:02:22] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:02:25] <tpr> drvanon: well, it's kinda hard to guess without knowing how it fails, and I'm sure that example could be simplified further to make it easier to spot the bug
[10:03:11] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[10:03:32] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[10:04:38] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[10:05:58] <drvanon> tpr, I realized I had left a breaking call in the thread. I managed to get it in the end.
[10:06:00] <tpr> is this an interview question on spotting code issues?
[10:06:25] <drvanon> No. Why?
[10:06:37] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 256 seconds)
[10:06:56] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:07:10] *** Joins: bluedust (~bluedust@194.37.96.104)
[10:07:12] <tpr> well, it felt a bit like such, "spot the mistake in this threaded app"
[10:07:32] <drvanon> Hahaha, I will take that as a compliment.
[10:08:29] <tpr> but offloading tasks to other threads without hassle etc. is not really python's forte, I'm afraid
[10:08:49] <drvanon> I am noticing.
[10:09:00] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:09:19] <drvanon> I have avoided it really efficiently for many years now, but it had to come at some point.
[10:09:21] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[10:09:36] *** Joins: the_lanetly_052_ (~the_lanet@194.135.166.251)
[10:09:36] <drvanon> I have considered multiple times to make it a web app.
[10:09:55] <tpr> but how would that solve the problem? :)
[10:10:28] <tpr> outside the fact that if it's a webapp, UI handling is not your concern
[10:10:49] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.251) (Max SendQ exceeded)
[10:10:55] <drvanon> Good point
[10:10:58] <tpr> and that everything is stateless, which may or may not be good depending on what you are going to do.
[10:11:28] <MiguelX413> How do I https://github.com/MiguelX413/IgTgBot/blob/d969f01dbf8e2505a14ad5f2a6f87f35514fbba7/bot.py#L31
[10:11:29] <MiguelX413> this line of code is giving me trouble on Python 3.8 but not 3.9:
[10:11:29] <MiguelX413> TypeError: 'type' object is not subscriptable
[10:11:30] <drvanon> I am getting the impression that I might just have to simply redesign a bit of my business logic.
[10:11:38] <MiguelX413> excuse the "How do I"
[10:12:05] *** Joins: the_lanetly_052_ (~the_lanet@194.135.168.203)
[10:12:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:12:18] <drvanon> I basically ask for user input if information is missing from the input files.
[10:12:43] <han-solo> MiguelX413: i think, in 3.8, that would be `typing.List[...]`
[10:12:48] *** Joins: timrohde (~timrohde@97-118-240-243.hlrn.qwest.net)
[10:12:52] *** Quits: the_lanetly_052_ (~the_lanet@194.135.168.203) (Max SendQ exceeded)
[10:13:09] <MiguelX413> han-solo: got it, so i should change it to that for backwards compatibility?
[10:13:23] <drvanon> Maybe instead of doing that in the process it self, I should do that before hand (look for missing info) and then based on that ask the user input. And _then_ run the main loop with all the information already available.
[10:13:47] <han-solo> MiguelX413: i'm haven't caught up with typing, but i would say yes
[10:13:57] <MiguelX413> han-solo: ill try it rn
[10:14:00] *** Joins: manti7 (~manti7@176.10.104.94)
[10:14:02] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[10:14:06] <han-solo> it would certainly work in 3.9
[10:14:08] <han-solo> so
[10:14:19] <han-solo> `List` that is
[10:14:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:14:34] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.203)
[10:14:54] *** Quits: nomic (~nomic@host86-154-44-94.range86-154.btcentralplus.com) (Quit: Leaving)
[10:15:09] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.203) (Max SendQ exceeded)
[10:15:38] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.251)
[10:15:44] *** Quits: Kawazaki (~Kawazaki@user/Kawazaki) ()
[10:16:05] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Quit: WeeChat 3.0)
[10:16:25] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.251) (Max SendQ exceeded)
[10:16:25] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[10:17:51] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[10:18:42] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:18:56] <MiguelX413> han-solo: https://github.com/MiguelX413/IgTgBot/commit/d969f01dbf8e2505a14ad5f2a6f87f35514fbba7#diff-36f6200cd8353111badb874140eba3af6055f4cc5839fbdeb9ede992620828c1L13 it worked, thank you!
[10:19:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:19:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:19:30] *** Joins: pycurious (~Adium@user/pycurious)
[10:19:45] <ztrawhcse> MiguelX413: https://docs.python.org/3/whatsnew/3.9.html#type-hinting-generics-in-standard-collections
[10:19:57] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[10:20:27] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[10:20:49] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[10:21:06] *** Joins: pycurious (~Adium@user/pycurious)
[10:22:13] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:23:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[10:24:05] *** Quits: drvanon (~drvanon@81.89.199.26) (Quit: Client closed)
[10:25:00] *** Joins: xkuru (~xkuru@user/xkuru)
[10:25:48] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[10:27:04] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[10:28:08] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[10:28:17] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[10:28:44] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:28:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:29:04] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:29:37] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:30:05] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[10:31:35] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[10:32:10] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[10:32:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:32:27] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:32:34] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[10:33:30] *** Joins: CombatVet (~c4@user/combatvet)
[10:34:14] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[10:34:23] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:34:38] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[10:35:58] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[10:36:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:37:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:38:44] *** Joins: semeion (~semeion@user/semeion)
[10:43:30] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:44:17] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:48:52] *** Quits: bluedust (~bluedust@194.37.96.104) (Ping timeout: 256 seconds)
[10:50:09] *** Quits: timrohde (~timrohde@97-118-240-243.hlrn.qwest.net) (Quit: Leaving)
[10:50:21] *** Joins: mrwick (~mrwick@user/mrwick)
[10:50:49] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:51:01] *** Joins: upsala (~zcb@185.213.155.232)
[10:51:43] *** Joins: Payam98 (~Payam@138.106.57.131)
[10:53:26] *** Joins: timrohde (~timrohde@97-118-240-243.hlrn.qwest.net)
[10:53:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:53:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[10:55:42] *** Joins: gusto (~Augustus@109.255.100.54)
[10:56:07] *** Joins: pycurious (~Adium@user/pycurious)
[10:56:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[10:56:50] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[10:56:53] *** xavie is now known as xcombelle
[10:57:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:57:21] *** Joins: badsektor (~badsektor@user/badsektor)
[10:59:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043) (Ping timeout: 240 seconds)
[11:00:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[11:03:00] *** Joins: namkeleser (~namkelese@101.175.104.107)
[11:03:11] <namkeleser> What are the best resources to learn Python?
[11:03:17] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[11:04:34] <han-solo> the ones in the topic are good
[11:04:46] <han-solo> https://j.mp/23X7emF
[11:05:39] <han-solo> "best" may differ with people
[11:05:46] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[11:06:16] <wyre> hi guys, why cannot I use the warning control on building my package, it fails? https://bpa.st/WR5Q
[11:06:31] <han-solo> automate the boring stuff is another good one
[11:07:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:07:32] <wyre> I'm not sure why is that warn_ungrouped_named_tokens_in_collection
[11:08:03] *** Quits: lindsay (~lindsay@user/LindsayZhou) (Quit: WeeChat 3.4)
[11:08:48] <han-solo> wyre: https://github.com/pypa/packaging/issues/170
[11:10:35] *** Joins: lindsay (~lindsay@user/LindsayZhou)
[11:12:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:13:58] *** Joins: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[11:14:47] *** Joins: Blankspace (~Blankspac@user/blankspace)
[11:16:44] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[11:17:17] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:17:20] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Read error: Connection reset by peer)
[11:17:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:17:35] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:18:57] *** Quits: devish (~devish@54-240-198-39.amazon.com) (Quit: Client closed)
[11:19:41] <wyre> han-solo, I'm not importing packaging.requirements explicitly ... so I'm not sure where comes from this warning in my case
[11:19:54] <wyre> but ... making the build in a venv works as expected even with -Werror
[11:20:37] <han-solo> i think, it's a setuptools dependency
[11:21:01] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[11:21:07] <han-solo> yeah, the venv must have a new version of packaging
[11:21:38] <han-solo> `pyparsing` to be exact
[11:22:14] <han-solo> `pip freeze | grep pyparsing` will likely be >= 3.0.5 ?
[11:23:23] <wyre> han-solo, pip freeze doesn't return any output 🤔
[11:23:58] <wyre> but setuptools is at 58.1.0
[11:24:22] <han-solo> inside the venv ? :/
[11:24:33] <wyre> han-solo, yes
[11:24:47] <han-solo> `pip freeze` doesn't return anything or `pip freeze | grep ...` doesn't ?
[11:24:52] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[11:25:52] *** Joins: pycode (~pycode3@2001:b07:5d28:551:8de3:611:31cb:66ba)
[11:26:04] <wyre> han-solo, https://bpa.st/CXEA
[11:26:35] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:26:56] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[11:27:17] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[11:27:35] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[11:27:39] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Ping timeout: 256 seconds)
[11:27:49] *** Joins: masoudd_ (~masoudd@user/masoudd)
[11:28:33] <han-solo> that's weird... :/
[11:29:17] <wyre> han-solo, could you be more specific? 😊 why do you think it's weird?
[11:29:27] <han-solo> well, not weird i guess
[11:29:50] <wyre> I'm guessing that pip freeze doesn't track pip or setuptools
[11:29:57] <wyre> so that's why I have no output
[11:30:02] *** Joins: palasso (~palasso@user/palasso)
[11:30:54] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:14] *** Joins: drvanon (~drvanon@81.89.199.26)
[11:31:15] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:35] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[11:32:21] <jinsun> there is pip list also
[11:32:22] <drvanon> For whoever was interested (this list may be zero): I fixed the inter-thread communication problem! https://gist.github.com/Drvanon/ba78bce4ec450e7b1cc6593241c1cc64
[11:32:30] *** Joins: rendar (~rendar@user/rendar)
[11:32:57] <jinsun> and pip list shows setuptools and pip too
[11:33:15] <drvanon> I am not really happy with the "Task" wording of the class. Does anybody know a better name?
[11:34:16] <han-solo> `pip freeze --all` is required for things to show up that `pip` depends on it seems
[11:34:22] <drvanon> Maybe "Provider" is a better word?
[11:34:46] <Helle> grmbl, why is range a keyword in Python, I hate having to keyword dance variable names
[11:34:56] <wyre> han-solo, sure, with pip freeze --all now I can see pinned versions for pip and setuptools 😉
[11:35:00] <wyre> but not for pyparsing
[11:35:27] *** Joins: Naan (~Naan@user/naan)
[11:35:32] <jinsun> Helle: it is not a keyword, just a builtin funnction, you can shadow it if you want
[11:35:47] <jinsun> but your linting tools may not like it
[11:36:11] <Helle> jinsun: yeah, I know, but treat it as a keyword because linting and syntax highlighting
[11:36:21] <Helle> jinsun: but this is always mildly painful
[11:36:41] <Helle> for some other stuff I've just resorted to latin for keywords, because I am that kind of nerd
[11:36:53] *** Joins: Abrax (~Abrax@user/abrax)
[11:37:13] <jinsun> a common way to avoid it is to just add a underscore suffix, like range_
[11:37:15] *** Quits: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:37:28] <jinsun> then you don't have to think of another name
[11:38:00] *** Joins: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[11:39:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:39:29] *** Joins: kosh (~kosh@user/kosh)
[11:40:02] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[11:40:18] * mrwick usually does a thesaurus search for other names
[11:41:12] *** Quits: masoudd_ (~masoudd@user/masoudd) (Quit: Leaving)
[11:41:28] <Helle> I mean I have used "ordo" for class, "species" works for type (and hell, that works in English) :)
[11:41:38] <jinsun> another common way is to remove vowels, so rng instead of range
[11:41:51] *** Joins: sokan (~sokan@85.73.229.195)
[11:42:01] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[11:42:32] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[11:42:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:43:03] <jinsun> and another way is to add some prefix specific to the job that variable is doing, like price_range or something
[11:43:54] <Helle> jinsun: yeah, but this turned into a very generic function, so it got a bit painful
[11:44:07] <mrwick> also, reassigning the builtin range function to something else at the top of the file, but that's extreme IMO
[11:44:11] <furrykef> So the value returned by some_file.tell() is supposed to be opaque if the file was opened in text mode. I take it this is because it's just a thin wrapper around C's ftell?
[11:44:44] <Helle> mrwick: nah, the syntax highlighting alone would put me off from that
[11:44:53] *** Quits: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:45:17] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[11:45:38] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[11:45:44] *** Joins: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[11:45:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:46:08] *** Joins: chele (~chele@user/chele)
[11:46:26] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:46:31] <han-solo> wyre: maybe they are vendoring packaging or something, i'd have to look furthur
[11:47:21] <wyre> han-solo, they who? 🤔
[11:47:30] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 272 seconds)
[11:47:34] <han-solo> setuptools
[11:48:05] *** Joins: ismdeep (~ismdeep@113.57.152.160)
[11:49:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:49:40] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Quit: WeeChat 3.0)
[11:50:38] <wyre> han-solo, what do you mean by 'vendoring packaging'?
[11:51:11] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 245 seconds)
[11:51:57] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[11:52:05] <jinsun> wyre: in your original error you were not running from venv
[11:52:28] <jinsun> so probably need to fix that
[11:52:29] *** Quits: ismdeep (~ismdeep@113.57.152.160) (Client Quit)
[11:52:50] <wyre> jinsun, who? they? 🤔
[11:52:54] <jinsun> no, you
[11:53:07] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:53:12] <jinsun> the traceback said /usr/lib/python3.10/site-packages/pyparsing
[11:53:22] <jinsun> that is not the venv where you ran pip list
[11:54:01] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:54:09] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[11:54:26] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:54:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:55:24] <jinsun> you also need to fix the setup.py build part, don't run setup.py directly, use python -m build
[11:56:02] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[11:57:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:58:49] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:00:04] *** Joins: jochum (~quassel@user/jochum)
[12:00:27] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[12:01:55] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:02:01] *** Joins: andreasbuhr (~quassel@p548dd8b0.dip0.t-ipconnect.de)
[12:02:27] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[12:02:50] *** Joins: Deknos (~someone@ppp-93-104-183-57.dynamic.mnet-online.de)
[12:03:05] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:03:35] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[12:06:28] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:07:25] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[12:07:31] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[12:08:32] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[12:08:45] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Read error: Connection reset by peer)
[12:08:52] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:09:42] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:10:15] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-237-199.poda.cz) (Quit: Leaving)
[12:10:27] *** Joins: sawk (~quassel@151.81.118.116)
[12:10:56] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[12:12:12] *** Quits: Deknos (~someone@ppp-93-104-183-57.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[12:12:25] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[12:12:33] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[12:13:43] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:13:45] <montpol> how can i make a sine function with an 8bit resolution?
[12:13:52] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[12:14:18] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[12:15:18] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[12:15:56] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-237-199.poda.cz)
[12:16:25] <supakeen> You make a normal sine function and multiply its value by 128, round, and keep the sign.
[12:16:31] <supakeen> Er, 127.
[12:16:34] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[12:17:33] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[12:17:48] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[12:18:13] *** Joins: Iolo (~iolo@user/Iolo)
[12:18:18] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:8a09:d58c:2e60:5ec8)
[12:18:18] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:8a09:d58c:2e60:5ec8) (Client Quit)
[12:18:45] *** Joins: Blankspace (~Blankspac@user/blankspace)
[12:19:32] <montpol> y = np.sin(2*np.pi*freq*t)
[12:20:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 240 seconds)
[12:20:06] <montpol> z = float(255*y)
[12:20:10] <montpol> whoops
[12:20:17] <montpol> z = round(255*y)
[12:20:44] <supakeen> I wouldn't do * 255 since you'd end up with -255 to +255 as values wouldn't you?
[12:20:50] *** Quits: drvanon (~drvanon@81.89.199.26) (Quit: Client closed)
[12:21:32] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: Ping timeout (120 seconds))
[12:21:43] <montpol> z = round(127*y)
[12:21:47] <montpol> supakeen correct
[12:21:51] *** Joins: dav1d (~dav1d@user/dav1d)
[12:22:12] <montpol> i get an error
[12:22:19] <montpol> TypeError: type numpy.ndarray doesn't define __round__ method
[12:22:32] <pycode> hello, should i install black inside the same virtual host or globally ?
[12:22:44] <montpol> got it...used np.round instead
[12:23:02] <Repiphany> montpol: (y*128).astype(np.int8)
[12:23:03] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[12:23:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:23:31] *** Joins: marcello1 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de)
[12:24:10] <montpol> Repiphany i get weird values for this
[12:27:44] <montpol> https://imgur.com/a/MuIdL9z
[12:27:53] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[12:28:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:28:18] <fakenullie> multiply by 127, not 128
[12:28:26] <fakenullie> you get overflow
[12:28:42] <montpol> fakenullie ah nice thanks
[12:28:59] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[12:29:01] *** Joins: shad (~shad@user/shad)
[12:29:23] <azidhaka> Hi everyone, how do i check if a list contains only one and certain element, like: "one" = ["one"] ?
[12:29:58] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:30:08] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[12:30:27] *** Quits: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2) (Quit: You have been kicked for being idle)
[12:30:35] <fakenullie> azidhaka: ["one"] == ["one"]
[12:31:01] <mrwick> "one" in ["one"]
[12:31:12] <mrwick> oh, only one.. sorry
[12:31:21] *** Quits: sinan (~sinan@85-76-81-181-nat.elisa-mobile.fi) (Quit: Leaving.)
[12:31:57] <Masklin__Gurder> if a_list==[certain_element] then ...
[12:32:15] <Repiphany> .astype(np.int8) rounds towards zero though, so I guess that's probably not really what you want
[12:32:20] <azidhaka> both are variables, so: list = ["one"]; var = "one" -> var == list ?
[12:32:34] <Masklin__Gurder> azidhaka: What I wrote
[12:32:35] <fakenullie> azidhaka: [var] == list
[12:32:48] <azidhaka> right, got it now, thanks everyone
[12:32:52] <Repiphany> Except don't overwrite the builtin `list` like that
[12:33:06] <Masklin__Gurder> Never go full overwrite
[12:33:24] *** Quits: Deana (~Deana@smtp.okb2-tmn.ru) (Ping timeout: 240 seconds)
[12:33:28] <azidhaka> yes, yes, that was just for the example
[12:34:11] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[12:34:25] *** Joins: aakashi2001 (~aakashi20@103.61.255.12)
[12:34:25] *** Quits: aakashi2001 (~aakashi20@103.61.255.12) (Changing host)
[12:34:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[12:34:35] <pycode> should i use --extend-exclude=E203 or --ignore=E203
[12:34:36] <pycode> =
[12:34:37] <pycode> ?
[12:34:49] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[12:34:55] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[12:35:22] <jinsun> --extend-ignore
[12:36:26] *** Joins: cosimone (~user@93.55.99.69)
[12:36:31] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Client Quit)
[12:36:50] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[12:36:59] <Payam98> hi dear friends, Can you please tell me if this lines can be simpler : https://bpa.st/JNXA
[12:37:12] <pycode> jinsun, ok, this should be enough to run flake8 and black https://bpa.st/H7LQ
[12:37:14] <pycode> (in vscode)
[12:37:57] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:38:08] <jinsun> yes, I have the same thing in my vscode settings
[12:38:11] *** Joins: eekS (~Skee@user/eeks)
[12:38:40] <pycode> perfect thank you!
[12:39:38] *** Joins: leighbb (~leighbb@user/leighbb)
[12:41:02] *** Joins: ice9 (~ice9@user/ice9)
[12:41:26] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[12:42:39] <pycode> jinsun, a stupid thing....when you have a string that exceed the 88 limit, you leave the string there without writing it on multiple lines ?
[12:42:54] <pycode> i mean something like s = "long text that exceed 88 limit"
[12:43:06] <pycode> or, do you split it ?
[12:43:18] <jinsun> depends on the string, usually I try to split it
[12:43:41] <jinsun> use the implicit string concat feature
[12:43:48] <pycode> jinsun, for example https://bpa.st/JLKQ
[12:43:52] <pycode> "been" exceed the limit
[12:43:57] <pycode> how should i write it ?
[12:44:36] <jinsun> I'd do something like this https://bpa.st/BURQ
[12:44:50] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[12:45:47] *** Joins: zaz\ (~zaz@poneybl.eu)
[12:47:04] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[12:47:07] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:47:17] *** Quits: zaz\ (~zaz@poneybl.eu) (Client Quit)
[12:47:42] <pycode> jinsun, oh! i did not know that i can split a stirng that way!
[12:47:57] *** Quits: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Read error: Connection reset by peer)
[12:47:57] <pycode> i thought something like "text1" \ \n "text 2" etc
[12:48:22] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[12:48:32] <jinsun> you can do without backslashes when you are inside parens
[12:48:43] <pycode> awesome! thanks
[12:48:44] <pycode> :D
[12:49:39] *** Joins: zaz\ (~zaz@poneybl.eu)
[12:49:53] *** Quits: bkhl (~bkhl@user/bkhl) (Read error: Connection reset by peer)
[12:50:09] *** Joins: bkhl (~bkhl@user/bkhl)
[12:50:27] <jinsun> pycode: black will actually remove the backslash if you decide to add it
[12:50:31] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:51:45] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[12:52:49] *** Joins: iomari891 (~iomari891@197.210.77.99)
[12:53:00] *** Quits: rtsn (~nstr@user/rtsn) (Remote host closed the connection)
[12:53:13] *** Joins: rtsn (~nstr@h-98-128-229-174.NA.cust.bahnhof.se)
[12:53:17] *** Joins: ivii (~ivan@user/ivii)
[12:54:21] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Ping timeout: 256 seconds)
[12:54:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:56:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043)
[12:56:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:58:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:58:55] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[12:59:07] <pycode> good!
[12:59:09] *** Joins: JanC (~janc@user/janc)
[13:00:00] *** Joins: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211)
[13:00:57] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Ping timeout: 240 seconds)
[13:00:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[13:01:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:02:50] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[13:03:02] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[13:03:14] *** Parts: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Leaving)
[13:04:07] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[13:05:32] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:07:05] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611)
[13:07:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[13:09:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:9dad:8be5:fda9:272) (Ping timeout: 240 seconds)
[13:11:00] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:12:29] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:25] *** Joins: aakashi2001 (~aakashi20@103.61.255.12)
[13:13:25] *** Quits: aakashi2001 (~aakashi20@103.61.255.12) (Changing host)
[13:13:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:14:27] *** Joins: Deana (~Deana@185.46.198.220)
[13:14:31] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[13:14:59] *** Joins: aakashi2001 (~aakashi20@103.61.255.12)
[13:14:59] *** Quits: aakashi2001 (~aakashi20@103.61.255.12) (Changing host)
[13:14:59] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:14:59] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[13:15:10] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:15:18] <AhmedAmerican> isn't lxml supporting async/await ? https://lxml.de/lxmlhtml.html#parsing-html
[13:15:39] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:16:38] <fakenullie> I doubt it
[13:17:06] <Payam98> is it possible to run several commands in sequence in subprocess.run? like in linux with command1;command2; command3?
[13:17:29] <Payam98> I meant command && command2 &&...
[13:17:37] <vladoski> are descriptors really useful in day to day python programming?
[13:17:57] <fakenullie> Payam98: well, you can run shell via subprocess
[13:18:09] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:18:09] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:18:57] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[13:19:03] <Payam98> vladoski I don't use them. so much. you mean dunder function stuff?
[13:19:06] *** Joins: masoudd (~masoudd@user/masoudd)
[13:19:22] *** Quits: iob (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz) (Ping timeout: 268 seconds)
[13:19:24] <Payam98> fakenullie can you elaburate?
[13:19:32] <vladoski> Payam98 https://docs.python.org/3/howto/descriptor.html
[13:19:54] <fakenullie> Payam98: subprocess.run("command1 && command2 && command3", shell=True)
[13:19:56] <jinsun> vladoski: well methods are descriptors, they are useful, if you mean writing your own then it is usually not needed
[13:20:14] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[13:21:05] <fakenullie> Payam98: or you can just use sequence of subprocess.call calls
[13:21:09] *** Joins: synbiose (~synbiose@a94-132-224-57.cpe.netcabo.pt)
[13:21:16] <fakenullie> It will raise an exception off a command fall
[13:21:19] <fakenullie> Fails
[13:21:28] *** Quits: synbiose (~synbiose@a94-132-224-57.cpe.netcabo.pt) (Client Quit)
[13:21:32] <Payam98> vladoski TLDR
[13:22:54] *** Joins: white2 (~mahengrui@user/mahengrui1)
[13:23:16] *** Quits: dre (~dre@2001:8003:c932:c301:b9de:333:ba99:ae98) (Ping timeout: 250 seconds)
[13:24:06] <jinsun> you can use subprocess.run(..., check=True) instead of .call, to raise exception for non-zero exit code
[13:28:12] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 272 seconds)
[13:32:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[13:32:57] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[13:33:20] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[13:33:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:34:37] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Read error: Connection timed out)
[13:34:57] *** Joins: slav0nic (slav0nic@python.su)
[13:36:21] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[13:36:22] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:36:44] *** Joins: ivii (~ivan@user/ivii)
[13:37:19] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[13:37:33] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[13:37:37] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[13:39:01] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:40:10] *** Quits: Hackerpcs (~user@user/hackerpcs) (Ping timeout: 250 seconds)
[13:40:10] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (Ping timeout: 250 seconds)
[13:40:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[13:40:40] *** Quits: white2 (~mahengrui@user/mahengrui1) (Quit: Leaving)
[13:40:53] *** Joins: ano (~ano@user/ano)
[13:41:16] *** Joins: wyclif (~wyclif@user/wyclif)
[13:41:53] *** Joins: baffodoro (~raffaem@95.74.42.52)
[13:42:04] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[13:42:38] *** Joins: Hackerpcs (~user@user/hackerpcs)
[13:43:17] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[13:44:15] <Payam98> is it advice to have staticmethod starting with def _my_static_function()?
[13:44:18] <Payam98> adviced
[13:44:59] <nedbat> Payam98: starting with what?
[13:45:00] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 240 seconds)
[13:45:09] <Payam98> underscore
[13:45:20] <Payam98> the name of the function
[13:46:17] *** Joins: Tempesta (~Tempesta@user/tempesta)
[13:47:49] <jinsun> if you want it to be internal to the class then start with an underscore prefix
[13:47:51] <nedbat> Payam98: a leading underscore means, don't use this, it's for me.  it's not about whether it's a static method
[13:48:19] <Payam98> nice thanks.
[13:48:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:49:33] *** Joins: wakeup (~wakeup@user/wakeup)
[13:49:53] *** Quits: DK3 (~DK3@user/DK3) (Ping timeout: 256 seconds)
[13:50:27] <wakeup> to assert 2 numbers are in some range, we could use 2 separate asserts, or we could use all(), but is there a syntax like this assert 1 <= x, y <= n, in python?
[13:50:30] <wakeup> I don't think so
[13:50:33] <wakeup> right?
[13:51:05] <fakenullie> 1 <= x <= n and 1 <= y <= n
[13:51:15] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[13:51:16] <wakeup> yea, but that I need to repeat 1 and n twice
[13:51:22] <wakeup> I think all() would be more suitable
[13:51:24] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[13:51:31] <fakenullie> maybe
[13:51:34] <wakeup> but I was wondering if there was like a syntactic sugar for this
[13:51:41] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:51:48] <Repiphany> (1, 1) < (x, y) < (n, n)
[13:51:56] <Repiphany> (not really)
[13:52:10] <fakenullie> no
[13:52:31] <fakenullie> it's too rare of a case to have a syntax sugar
[13:52:41] <fakenullie> all() is quite concise anyway
[13:52:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[13:53:05] <wakeup> I didn't use to use all() or any(), but they are quite useful for assertions
[13:53:16] *** Joins: kosh (~kosh@user/kosh)
[13:53:16] <wakeup> and also for checking the inputs, when they are lists or simialr
[13:53:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:54:51] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[13:55:00] <nedbat> wakeup: separate asserts would be better, because if "assert all(...)" fails, you don't know whether it was x or y that was out of range.
[13:55:24] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:55:25] <wakeup> yea, in case that info is needed, I agree
[13:55:38] <nedbat> when wouldn't you want that info?
[13:56:05] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Client Quit)
[13:56:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[13:56:37] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:57:51] <wakeup> well, assertions shouldn't actually be used to check for the inputs' correctness... we should use exceptions... if you're using assertions for this, it's because you're already assuming that these assertions shouldn't even be raised
[13:58:05] <nedbat> wakeup: i usually use them in tests
[13:58:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[13:58:37] <wakeup> well, yeah, but I mean assertions e.g. at the beginning of functions that you write
[13:58:40] *** Joins: aakashi2001 (~aakashi20@103.61.255.12)
[13:58:40] *** Quits: aakashi2001 (~aakashi20@103.61.255.12) (Changing host)
[13:58:40] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:58:50] <wakeup> like in design by contract style
[13:58:55] <wakeup> I often use the design by contract
[13:59:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[13:59:29] <wakeup> I use assertions to just look for logical errors and thinks that should always be true, like types
[13:59:45] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[13:59:57] <wakeup> if I have the input "a" with type hint "list", a should always be a list, that's the contract
[14:00:01] <wakeup> but in python that might not be the case
[14:00:12] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 240 seconds)
[14:00:16] <wakeup> so sometimes I use an assertion, just to make sure that's the case
[14:00:18] <wakeup> that will break the code
[14:00:25] <wakeup> if a is not a list
[14:00:29] <wakeup> but that's a contract
[14:00:44] *** Joins: ano (~ano@user/ano)
[14:00:46] <wakeup> if python was statically typed I wouldn't need to do this
[14:01:01] <wakeup> I don't know if other python programmers do this or not
[14:01:02] <fakenullie> I think you shouldn't use actual assert statement for that
[14:01:08] <wakeup> but sometimes I think I should do it
[14:01:10] <fakenullie> raise ValueError instead
[14:01:14] <wakeup> I mean, not sometimes
[14:01:19] <wakeup> almost always
[14:01:31] <fakenullie> you can statically type python
[14:01:31] <wakeup> well, it depends
[14:01:47] <fakenullie> but dependent types are not available, so you will still need to check value range
[14:01:49] <wakeup> if if I write an algorithm that is specifically written to deal with say a dictionary
[14:01:55] <wakeup> then I use exceptions
[14:01:57] *** Quits: bboles (~bboles@64.94.212.195) (Quit: ZNC 1.8.2 - https://znc.in)
[14:01:59] <supakeen> the problem is indeed that most invariant checking leads either explicitly or implicitly to exceptions in a language such as python
[14:02:10] <supakeen> so there's a lot less need for the actual assert statement
[14:02:20] <wakeup> I mean compile-time type checking
[14:02:41] <nedbat> wakeup: mypy doesn't take care of that for you?
[14:02:51] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[14:02:53] <wakeup> I started using mypy
[14:03:09] <wakeup> it seems that you need to actually call the function for it to detect certain errors
[14:03:15] <wakeup> but it's useful
[14:03:25] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:2158:8e7a:395f:b8f9)
[14:03:40] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[14:03:45] <wakeup> I don't know when I still need to use assertions in python... mypy might well save me some typing
[14:03:57] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:04:13] *** Quits: meti (~meti@user/meti) (Quit: ZNC - http://znc.in)
[14:04:30] *** Joins: sovenok-hacker (~sovenok-h@91.193.177.82)
[14:04:55] <nedbat> wakeup: i'm not sure what you mean about needing to call the function?
[14:05:30] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[14:05:37] <wakeup> say you define the function f(a: list): ... mypy can only detect errors if you call f with an argument that is not a list, so a runtime
[14:05:46] <wakeup> I think
[14:05:48] <wakeup> I am not sure
[14:05:52] <wakeup> because I haven't used much mypys
[14:05:54] *** Joins: meti (~meti@user/meti)
[14:05:55] <wakeup> I just tried it
[14:06:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:06:36] <nedbat> wakeup: mypy is only a static checker, it doesn't do anything at runtime
[14:06:47] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[14:06:59] *** Joins: bboles (~bboles@64.94.212.195)
[14:07:09] <wakeup> ha, yeah, now I remember... if you define something like a: list = [1, 2, 3], then pass it to f, it's fine
[14:07:24] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 252 seconds)
[14:07:25] <wakeup> what I mean is that you need to have the code there that shows how you're calling f
[14:07:38] <jinsun> use mypy --strict
[14:07:42] *** Joins: matsaman (~matsaman@user/matsaman)
[14:07:46] <wakeup> if you just define f and don't have an example that mypy can use to check the correctness, it can't ensure that
[14:07:54] *** Joins: se-sm-ca (~mottles@user/se-sm-ca)
[14:08:05] <jinsun> then it will complain at the function defnition time that you didn't specify the type of the list
[14:08:10] <Repiphany> What "correctness" is there for a function that isn't called
[14:08:15] <Yhg1s> wakeup: if you're not calling the function wrong, there isn't an error.
[14:08:18] <Repiphany> Anyone can try to call that function with whatever arguments they want
[14:08:51] <jinsun> yeah why would it complain for no reason
[14:08:54] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[14:09:39] <wakeup> yea, that's the problem I would like to avoid. At runtime, I might get errors if a is not a list, and mypy might not be able to check that... if I used, say, C++, I could be sure that what is passed to f at runtime will be a list, and, if not, I will get an error
[14:09:41] <wakeup> I think
[14:10:20] <jinsun> how would you pass a not-list to the function without calling it?
[14:10:30] <jinsun> if you call it mypy will check that
[14:10:44] <Yhg1s> wakeup: so are you saying you *are* calling the function, or not? If you're not calling the function, there isn't any code calling the function *incorrectly* either.
[14:10:55] <wakeup> maybe say that you're writing an API that will be used by someone else
[14:10:58] *** Joins: white2 (~mahengrui@user/mahengrui1)
[14:11:06] <wakeup> in that case, well, you need to test it and maybe write some examples
[14:11:24] <wakeup> mypy might find the possible errors, if you write good tests and examples
[14:11:43] <Yhg1s> wakeup: I'm not sure how this is any different from C+++.
[14:11:45] <wakeup> but if you forget something, maybe you will ship a function that will get a bad input and that will go undetected
[14:11:55] <Yhg1s> wakeup: the error is in the thing that's passing it the input.
[14:12:00] <Yhg1s> wakeup: even in C++.
[14:12:49] <wakeup> in C++, you can be, I think, 100% that whoever uses your function will never be able to pass anything other than what you declared
[14:13:02] <wakeup> *100sure
[14:13:33] <Yhg1s> wakeup: that's very much not true, but still besides the point: mypy checks your code, C++ compiler checks your code. If the caller passes the wrong type, the error will happen when the *caller* is checked by whatever does the checking. That is true for both of them.
[14:13:41] <Yhg1s> wakeup: if you don't check the caller, there is no check.
[14:15:22] <wakeup> yes, but in C++, you don't need to write a test or example to check the type of the parameters... if you just write the types, and the compilers will not even compile if you try to call the function with whatever input that has a different type than what you declared... I guess that for this to be equivalent with mypy, the person that uses your api
[14:15:22] <wakeup> should also use mypy
[14:16:01] <wakeup> so in a way mypy is like a proxy for a compile-time type checking
[14:16:32] <wakeup> anyway, I still need to explore mypy more
[14:16:40] <wakeup> mypy --strict could also be useful
[14:17:05] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[14:17:38] *** Joins: hiroshi_ (~freedom@ge-19-120-112.service.infuturo.it)
[14:17:40] *** Joins: tmm88 (~tmm88@user/tmm88)
[14:18:17] <kosh> wakeup, mypy is EXTREMELY useful for larger projects, in some code I am working on we are going to put it into our CI pipeline after I get the inherited code cleaned up
[14:18:45] <wyre> hi guys, when I use pip-compile in a project which depends on other custom library located at gitlab ... how will pip-compile resolve that custom library dependencies?
[14:18:54] <wyre> from setup.cfg? or from some requirements.txt file?
[14:19:09] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.251)
[14:19:58] <jinsun> wakeup: they can probably send the wrong thing in C++ also because type casting is a thing, the only difference is that type checking is opt-in when you have to use a separate type checker and opt-out when you have to cast the type errors away
[14:20:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:20:59] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[14:22:15] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[14:23:11] <kosh> vscode can also warn of type errors if you use typing consistently
[14:23:40] <kosh> you can send the wrong types in c++ but it requires more work to do it
[14:24:46] *** Quits: sovenok-hacker (~sovenok-h@91.193.177.82) (Ping timeout: 256 seconds)
[14:25:33] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[14:26:26] *** gentooclimax is now known as climax
[14:26:31] <wakeup> there's a version of python that always requires you to write types... cython, right?
[14:26:44] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[14:27:02] *** Joins: NealRame (~a@89.187.163.193)
[14:27:10] <wakeup> here https://en.wikipedia.org/wiki/Cython it seems that you actually declare the types like "int my_var"
[14:28:01] *** Joins: acresearch (~acresearc@user/acresearch)
[14:28:39] <kosh> cython is a way to compile python code, however if you are not very careful with using it your code can end up much slower than using python normally
[14:28:42] <Yhg1s> wakeup: not a version of Python, no. It's a different language, although there is a usefully large intersection with Python.
[14:28:51] <wakeup> yes
[14:29:47] *** Parts: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211) ()
[14:30:44] *** climax is now known as gentooclimax
[14:30:45] <kosh> I worked with some code recently where I ripped out all the cython code, it was making the system about 25% slower and the current design doesn't allow using cython to be efficient
[14:30:46] <patchie> how can i store a datetime value in a dataframe as a normal datetime object, not linked to any dataframe? https://usercontent.irccloud-cdn.com/file/9RB9FdB4/image.png
[14:30:54] <kosh> we might use it again later once stuff is rebuilt
[14:30:58] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[14:31:37] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[14:33:00] <wakeup> kosh did you figure out the cause of this inefficiency of the cython code
[14:33:01] <wakeup> ?
[14:34:33] <wakeup> supposedly, cython is supposed to give C-like performance, wikipedia says
[14:34:57] <wakeup> "supposedly, ... is supposed" is also a bit redundant :P
[14:35:54] <fakenullie> supposedly^2
[14:36:09] <Yhg1s> wakeup: code is complex.
[14:37:26] <patchie> anyone?
[14:37:41] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[14:38:50] *** Joins: zaquest (~notzaques@5.130.79.72)
[14:39:16] *** Joins: vurr (~seymon@85.253.80.185.cable.starman.ee)
[14:40:21] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[14:41:01] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:41:13] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[14:41:27] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[14:42:04] <wakeup> the dark python rises (https://www.tiobe.com/tiobe-index/python/) :P
[14:43:00] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:43:00] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:577:6cc8:313f:dee9) (Ping timeout: 250 seconds)
[14:45:44] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 256 seconds)
[14:49:45] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[14:50:05] *** Quits: hiroshi_ (~freedom@ge-19-120-112.service.infuturo.it) (Quit: hiroshi_)
[14:50:07] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:50:51] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[14:51:01] *** Joins: thiras (~thiras@user/thiras)
[14:51:49] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Client Quit)
[14:51:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:53:54] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:54:20] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[14:54:39] *** Joins: fstd (~fstd@xdsl-78-35-88-2.nc.de)
[14:54:49] *** Quits: fstd_ (~fstd@xdsl-87-79-45-162.nc.de) (Ping timeout: 256 seconds)
[14:55:02] *** Joins: darksun (~darksun@user/darksun)
[14:55:15] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:19a5:18c2:1f3c:54f3)
[14:55:54] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:56:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:56:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[14:56:57] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:58:18] *** Joins: nomic (~nomic@185.217.117.88)
[14:58:46] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[14:59:06] *** Joins: Barones (~Barones@user/Barones)
[14:59:21] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043) (Ping timeout: 256 seconds)
[15:00:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[15:01:39] *** Quits: supakeen_test (~supakeen@2a01:4f9:c010:3f2a:1:1:3:42) (Quit: Reconnecting)
[15:01:51] *** Joins: supakeen_test (~supakeen@2a01:4f9:c010:3f2a:1:1:3:42)
[15:03:01] <jinsun> patchie: use .iat instead of slicing, https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.iat.html
[15:03:58] *** Joins: unyu (~pyon@user/pyon)
[15:04:56] *** Quits: ymwm__ (~yingmanwu@117.26.69.144) (Read error: Connection reset by peer)
[15:05:11] *** Quits: km (znc@user/km) (Quit: ZNC - https://znc.in)
[15:08:16] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 272 seconds)
[15:09:32] *** Quits: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:09:45] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 268 seconds)
[15:10:22] *** Joins: km (znc@user/km)
[15:10:48] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[15:11:55] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[15:12:07] *** Joins: ymwm (~yingmanwu@117.26.69.144)
[15:12:39] *** Quits: masoudd (~masoudd@user/masoudd) (Remote host closed the connection)
[15:12:57] <supakeen> Yhg1s: Great summary of the past few decades.
[15:13:04] *** Joins: masoudd (~masoudd@user/masoudd)
[15:13:20] <Yhg1s> Pretty sure I'm just quoting Ada Lovelace.
[15:13:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[15:14:03] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[15:14:04] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[15:14:16] *** Quits: ymwm (~yingmanwu@117.26.69.144) (Max SendQ exceeded)
[15:14:42] *** Joins: ymwm (~yingmanwu@117.26.69.144)
[15:14:52] *** Joins: RiFo (~RiFo@user/rifo)
[15:15:05] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[15:15:42] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611) (Remote host closed the connection)
[15:16:17] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:6c5c:a23a:8374:3a19)
[15:16:26] *** Quits: pycode (~pycode3@2001:b07:5d28:551:8de3:611:31cb:66ba) (Ping timeout: 260 seconds)
[15:16:57] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:bab8:aeb6:6760:9c84) (Ping timeout: 240 seconds)
[15:17:57] *** test_ is now known as _flood
[15:18:08] *** Joins: Xano (~Xano@host86-158-12-110.range86-158.btcentralplus.com)
[15:18:30] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[15:18:51] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:18:51] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:20:40] *** Quits: l4yer (~l4yer@user/l4yer) (Remote host closed the connection)
[15:21:34] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[15:21:39] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[15:21:41] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[15:22:27] *** Joins: Klinda (~superleag@user/klinda)
[15:22:58] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:23:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:23:51] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:25:32] *** Joins: bahamas (~lucian@84.232.140.52)
[15:26:57] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:27:21] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:28:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:28:42] *** Joins: imakestuff (~imakestuf@197.156.107.143)
[15:28:46] <imakestuff> Im' trying to install https://fastapi-users.github.io/fastapi-users/installation/
[15:28:46] <imakestuff> with the command pip install 'fastapi-users[sqlalchemy2]'
[15:28:46] <imakestuff> but i'm getting an error like
[15:28:51] <imakestuff> WARNING: fastapi-users 0.2.0 does not provide the extra 'sqlalchemy2'
[15:29:00] <imakestuff> and installation fails
[15:29:03] *** Joins: goppo (~goppo@user/goppo)
[15:29:13] <imakestuff> What am I missing?
[15:29:57] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:30:01] *** Quits: km (znc@user/km) (Quit: ZNC - https://znc.in)
[15:30:30] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Ping timeout: 256 seconds)
[15:31:42] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[15:31:46] *** Joins: km (znc@user/km)
[15:32:22] <kosh> ah he left already, the problem with cython is that the way the code was written the cython code compiled to a bunch of pyapi calls so it was constantly calling back into the python vm
[15:33:33] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:33:48] *** Joins: Blankspace (~Blankspac@user/blankspace)
[15:33:58] <kosh> if you have a lot of nested data structures and complex objects cython won't help you
[15:35:58] <jinsun> imakestuff: looks like that extra was added in version 9.2.0 https://github.com/fastapi-users/fastapi-users/releases/tag/v9.2.0
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:11] <jinsun> not sure why pip is trying to install 0.2.0 for you
[15:36:27] <imakestuff> jinsun: it's not just one warning
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:39] <jinsun> try pip install 'fastapi-users[sqlalchemy2]>=9.2'
[15:36:42] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[15:36:43] *** Quits: rando25892 (~atler@user/rando25892) (Read error: Connection reset by peer)
[15:37:01] <imakestuff> it starts from 9.2.5 i think
[15:37:20] <jinsun> also make sure you are using python 3.7+
[15:37:30] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Ping timeout: 268 seconds)
[15:37:41] *** Quits: DXR (~lyrical@77.49.60.101.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[15:37:45] <imakestuff> I'm on 3.9.2
[15:37:55] <imakestuff> i added this to my requirements.txt
[15:38:01] <imakestuff> fastapi-users[sqlalchemy2]
[15:38:11] *** Quits: Blankspace (~Blankspac@user/blankspace) (Client Quit)
[15:38:13] <fakenullie> maybe try pip install --upgrade ?
[15:38:21] <imakestuff> but it worked when i manually tried to install it via pip like this:
[15:38:31] <imakestuff> pip install 'fastapi-users[sqlalchemy2]'
[15:38:43] <imakestuff> Am i required to mention version on requirements file?
[15:38:53] *** Joins: nonominoa (~nonominoa@103.7.82.30)
[15:39:15] *** Joins: vladoski (~foo@93-47-224-202.ip114.fastwebnet.it)
[15:39:22] <fakenullie> I think pip will try to keep existing version if don't specify bounds
[15:39:48] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[15:40:20] *** Quits: vladoski (~foo@93-47-224-202.ip114.fastwebnet.it) (Client Quit)
[15:40:25] <jinsun> something else in the requirements file might be pinning it down, if you specify minimum version then pip should error and tell you the problem requirement
[15:40:36] <imakestuff> I uninstalled it and added to requirements and I got an error
[15:40:40] <imakestuff> let me share you
[15:40:53] <imakestuff> https://dpaste.org/Euka
[15:41:41] <imakestuff> i think my fastapi version is to high
[15:41:44] <nonominoa> dude
[15:41:48] <nonominoa> thats oldschool af
[15:41:50] <imakestuff> *too
[15:43:07] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:43:17] *** Quits: cosimone (~user@93.55.99.69) (Ping timeout: 240 seconds)
[15:44:02] <imakestuff> works with fastapi 0.74.1
[15:44:09] <imakestuff> nonominoa: what's oldschool?
[15:44:22] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[15:44:22] <nonominoa> IRC
[15:44:25] <nonominoa> :D
[15:46:35] *** Quits: nonominoa (~nonominoa@103.7.82.30) (Quit: Client closed)
[15:48:11] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[15:49:01] *** Joins: purple_cthulhu (~rax@2.186.4.32)
[15:49:03] *** Quits: purple_cthulhu (~rax@2.186.4.32) (Client Quit)
[15:49:17] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:49:17] *** Joins: purple_cthulhu (~rax@2.186.4.32)
[15:49:36] *** Joins: mickey (~user@user/mickey)
[15:49:51] *** Joins: RiFo (~RiFo@user/rifo)
[15:55:52] *** Joins: TheCat (~TheCat@user/z-cat)
[15:56:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:57:08] *** Quits: baffodoro (~raffaem@95.74.42.52) (Remote host closed the connection)
[15:57:35] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[15:57:37] *** xavie is now known as xcombelle
[15:58:01] *** Joins: baffodoro (~raffaem@95.74.42.52)
[15:58:39] *** Quits: baffodoro (~raffaem@95.74.42.52) (Remote host closed the connection)
[15:58:46] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Client Quit)
[15:59:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:59:25] *** Joins: baffodoro (~raffaem@95.74.42.52)
[15:59:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:00:09] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[16:00:10] *** Quits: baffodoro (~raffaem@95.74.42.52) (Remote host closed the connection)
[16:00:22] *** Joins: Blankspace (~Blankspac@user/blankspace)
[16:01:07] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:01:15] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[16:01:48] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 252 seconds)
[16:02:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[16:03:12] *** Quits: goppo (~goppo@user/goppo) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:03:40] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[16:04:27] *** Joins: l4yer (~l4yer@user/l4yer)
[16:04:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[16:04:54] *** Joins: thevishy (~Nishant@49.37.242.151)
[16:07:27] *** Quits: Deana (~Deana@185.46.198.220) (Quit: Konversation terminated!)
[16:07:43] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[16:08:43] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[16:09:44] *** Joins: iob (~iob@nat1.prg.suse.com)
[16:10:58] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[16:12:28] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[16:14:46] *** Quits: purple_cthulhu (~rax@2.186.4.32) (Ping timeout: 272 seconds)
[16:15:46] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:17:45] *** Quits: NealRame (~a@89.187.163.193) (Ping timeout: 252 seconds)
[16:18:35] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:21:30] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[16:22:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:23:59] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[16:24:11] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[16:24:53] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[16:25:02] *** Joins: ianliu (~ianliu@177.188.55.120)
[16:25:32] <ianliu> when I issue a urllib.request.urlopen, which HTTP verb it uses by default? The documentation isn't very clear
[16:25:59] <ianliu> is it GET when data==None, and POST when data!=None?
[16:26:15] <supakeen>  The default is 'GET' if data is None or 'POST' otherwise.
[16:26:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:26:22] <supakeen> Fro mits documentation.
[16:26:49] <deniska> ianliu: Also from its documentation: "The Requests package is recommended for a higher-level HTTP client interface."
[16:27:43] *** Joins: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:6016:9f86:5944:eecd)
[16:28:00] <ianliu> thanks!
[16:28:55] <ianliu> I'm not using requests because my applications needs to run without any dependencies, just python's std lib
[16:29:25] *** Joins: purple_cthulhu (~rax@188.214.96.21)
[16:29:39] <han-solo> you can vendor it too
[16:31:01] <ianliu> I'm ok with stdlib. But I'm curious: does requests provides anything more than ergonomics?
[16:31:21] <jinsun> standard library actually comes with requests indirectly
[16:31:34] <ianliu> oh really?
[16:31:40] <apollo13> jinsun: hu? pip is imo not part of the std
[16:32:22] *** Joins: bahamas (~lucian@84.232.140.52)
[16:32:45] <matsaman> ...
[16:34:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:34:03] <han-solo> i am not sure what i need to make urllib.request work with stream, i'd imagine it's easier to work with `requests`, nicer apis
[16:34:29] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:34:46] *** Joins: ymwm_ (~yingmanwu@110.85.121.251)
[16:34:50] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:36:39] *** Quits: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:6016:9f86:5944:eecd) (Remote host closed the connection)
[16:37:18] <matsaman> I'm guessing someone focusing on stdlib stuff already realizes non-std things can be "easier"
[16:37:37] *** Quits: ymwm (~yingmanwu@117.26.69.144) (Ping timeout: 256 seconds)
[16:37:56] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 268 seconds)
[16:38:03] <exarkun> yes, people always make rational, fully informed choices.
[16:38:12] <Luyin> lol
[16:38:19] <Luyin> agreed!
[16:38:29] <ianliu> han-solo: urlopen returns a file like object, isn't this a stream?
[16:38:36] <merijn> hmmm, what's the * do in a declaration like "def foo(*, bar, baz):"?
[16:38:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:38:46] <exarkun> merijn: following arguments are keyword-only
[16:38:51] <han-solo> file upload
[16:39:12] <han-solo> ianliu: i haven't looked much into it, but i assume there is a way, sure
[16:39:14] <ianliu> oh, I see, like multipart upload?
[16:39:28] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[16:39:47] <matsaman> ianliu: there you have it, please be more rational =P /s
[16:40:00] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:40:53] <ianliu> oh well, urllib solves for me now :P I think that's the rational decision!
[16:41:41] <ianliu> even the default behavior of urlopen to issue a GET and POST requests is correct for my use case, so I guess thats a win
[16:42:20] <matsaman> GET as default is pretty ordinary, yeah
[16:42:45] *** Joins: magla (~gelignite@55d4843f.access.ecotel.net)
[16:42:49] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[16:43:16] *** Quits: iomari891 (~iomari891@197.210.77.99) (Quit: WeeChat 3.3)
[16:43:29] *** Joins: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:65ff:d7d2:4ca9:b611)
[16:46:55] *** Joins: bahamas (~lucian@84.232.140.52)
[16:48:11] *** Joins: shad (~shad@user/shad)
[16:48:13] *** Joins: gopar (~gopar@ip70-189-75-162.ok.ok.cox.net)
[16:48:18] *** Quits: ianliu (~ianliu@177.188.55.120) (Quit: WeeChat 3.4)
[16:48:19] *** Joins: bloody (~bloody@user/bloody)
[16:48:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:49:00] *** Joins: vlado1 (~vlado@181.50.79.237)
[16:49:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:50:14] *** Quits: not_not (~not_not@193.178.220.10) (Ping timeout: 272 seconds)
[16:51:41] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[16:51:48] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[16:51:52] <rjwiii> Good morning ... are there other FTP packages besides the baked in ftplib? Are they better?
[16:52:08] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[16:53:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:53:25] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[16:54:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 256 seconds)
[16:54:29] <exarkun> rjwiii: What are you looking for in a "better" library?
[16:56:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:56:09] *** Quits: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:65ff:d7d2:4ca9:b611) (Remote host closed the connection)
[16:56:34] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:56:51] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[16:56:56] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043)
[16:56:58] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[16:57:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[16:57:29] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:58:23] *** Joins: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:8d03:bcce:6911:fabf)
[16:58:24] *** Joins: sudorm (~sudorm@lfbn-orl-1-1117-150.w86-244.abo.wanadoo.fr)
[17:00:03] <sudorm> Hi
[17:00:25] <matsaman> hi sud
[17:00:27] <jinsun> apollo13: ensurepip is stdlib though and comes with pip bundled https://github.com/python/cpython/tree/main/Lib/ensurepip/_bundled
[17:00:50] <sudorm> Can a process #1 start a process #2 with Popen, and pass a reference to process #1's dict D, so that process #2 can access it?
[17:00:50] <apollo13> jinsun: yes but that works very hard to hide the vendored stuff and should certainly not be recommended
[17:00:57] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Client Quit)
[17:01:04] <matsaman> and you still can't just use requests
[17:01:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:01:11] <sudorm> i.e. share memory between processes without having to use sockets / pipe etc
[17:01:18] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:01:56] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:19a5:18c2:1f3c:54f3) (Quit: Konversation terminated!)
[17:02:44] <jinsun> `import pip._vendor.requests as requests` doesn't seem too hard to use
[17:05:48] *** Joins: goppo (~goppo@user/goppo)
[17:06:16] *** Joins: nickodd (~nickodd@user/nickodd)
[17:06:34] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[17:06:51] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:07:42] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:08:57] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 240 seconds)
[17:09:12] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:09:13] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[17:10:44] <apollo13> jinsun: well that is there for now at a query specific version and depending on the system not at all (some systems unvendor etc)
[17:12:12] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[17:12:22] *** Joins: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc)
[17:12:34] <jinsun> worth a try anyway
[17:12:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:12:42] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: Lost terminal)
[17:13:09] <jinsun> I would try that before trying to figure out how to do stuff with urllib.request
[17:13:24] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[17:13:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:14:51] <apollo13> uff
[17:15:24] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:7445)
[17:15:55] *** Quits: vladoski (~foo@2001:b07:add:d406:89a7:d7c6:e8fb:e6bc) (Client Quit)
[17:16:03] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c42a:2dad:bcf1:880f)
[17:16:03] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c42a:2dad:bcf1:880f) (Changing host)
[17:16:03] *** Joins: skapata (~Skapata@user/skapata)
[17:16:39] <jinsun> luckily not a problem for me because we have mirrors of pypi and anaconda.org at work
[17:17:02] *** Quits: F0ma (Liudas@shell.xshellz.com) (Remote host closed the connection)
[17:18:06] *** Quits: supakeen_test (~supakeen@2a01:4f9:c010:3f2a:1:1:3:42) (Quit: Bridge terminating on SIGTERM)
[17:18:20] *** Quits: purple_cthulhu (~rax@188.214.96.21) (Quit: Leaving.)
[17:19:48] <montpol> how does that really work that when i do: y = np.sin(2*np.pi*freq*t) and then z = (y*127).astype(np.int8) that I get what the sine wave will look like with 8 bits?
[17:20:01] *** Joins: supakeen_test (~supakeen@2a01:4f9:c010:3f2a:1:1:3:42)
[17:20:43] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:21:23] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:21:38] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[17:21:54] *** Quits: iob (~iob@nat1.prg.suse.com) (Ping timeout: 272 seconds)
[17:23:05] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[17:24:00] <yates> what are the ""usual mapping methods" spoken of here: https://docs.python.org/3/library/collections.html#collections.OrderedDict ?
[17:24:13] *** Quits: Abrax (~Abrax@user/abrax) (Read error: Connection reset by peer)
[17:24:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:24:28] *** Quits: sudorm (~sudorm@lfbn-orl-1-1117-150.w86-244.abo.wanadoo.fr) (Quit: Leaving)
[17:24:35] *** Joins: Abrax (~Abrax@user/abrax)
[17:25:34] <jinsun> iprobably the methods in collections.abc.Mapping https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes
[17:26:10] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[17:26:25] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Remote host closed the connection)
[17:26:47] *** Joins: bahamas (~lucian@84.232.140.52)
[17:27:08] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[17:28:13] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:29:03] *** Quits: supakeen_test (~supakeen@2a01:4f9:c010:3f2a:1:1:3:42) (Quit: Bridge terminating on SIGTERM)
[17:29:09] <yates> jinsun: thanks - that is probably correct
[17:29:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[17:29:32] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[17:29:45] *** Joins: wakeup (~wakeup@user/wakeup)
[17:31:06] <wakeup> do you guys know an IRC channel where I can ask about headphones, mac and google meet? Maybe a channel about hardware... I bought these Beoplay E8 and I'm trying to use them with google meet... they work, but I hear a small background noise
[17:31:27] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[17:31:28] *** Joins: bluedust (~bluedust@89.238.143.232)
[17:31:37] *** Joins: supakeen_test (~supakeen@python/site-packages/supakeen)
[17:32:12] *** Quits: ymwm_ (~yingmanwu@110.85.121.251) (Ping timeout: 240 seconds)
[17:32:25] *** Joins: jsm (~jmcb@hacksoc/member/jmcb)
[17:32:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:32:39] *** Joins: ymwm_ (~yingmanwu@110.85.121.251)
[17:33:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:33:42] *** Joins: pycode (~pycode3@2001:b07:5d28:551:22e6:45b7:be62:752)
[17:33:48] *** Joins: rando25892 (~homefame@user/rando25892)
[17:34:24] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:34:38] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[17:36:28] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 272 seconds)
[17:36:33] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Ping timeout: 256 seconds)
[17:37:18] *** Quits: jsm (~jmcb@hacksoc/member/jmcb) (Client Quit)
[17:37:36] <rjwiii> exarkun: Frankly, yes, I am looking for a better FTP library ... are there any?
[17:38:21] *** Joins: Throgkt (~Throgkt@user/throgkt)
[17:38:26] *** Joins: pdc (~raffaem@95.74.42.52)
[17:38:28] *** Joins: wakeup (~wakeup@user/wakeup)
[17:40:54] *** Quits: vurr (~seymon@85.253.80.185.cable.starman.ee) (Ping timeout: 272 seconds)
[17:41:37] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[17:43:19] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Client Quit)
[17:46:55] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[17:47:39] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[17:47:40] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[17:48:08] *** Joins: agumonke` (~user@88.163.231.79)
[17:49:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:49:36] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 252 seconds)
[17:50:37] *** Joins: Throgkt (~Throgkt@user/throgkt)
[17:51:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:52:04] *** Parts: agumonke` (~user@88.163.231.79) ()
[17:52:24] *** Quits: thekingofbandit (~thekingof@thunix.net) (Read error: Connection reset by peer)
[17:53:14] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[17:53:23] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[17:54:24] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[17:54:25] <CrtxReavr> rjwiii, actual FTP. . . as in port 21, clear text auth?
[17:54:38] <CrtxReavr> Or generic "FTP" which might be SFTP or FTPS?
[17:54:48] *** Joins: bahamas (~lucian@84.232.140.52)
[17:56:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:56:49] <rjwiii> CrtxReavr: ftplib has a TLS option, which seems to be working ... What I'm really looking for an FTP library that is less quirky than ftplib and supports FTPS. The SSH port (22) is closed on the server.
[17:57:01] *** Joins: thekingofbandit (~thekingof@user/thekingofbandit)
[17:57:04] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[17:57:09] <rjwiii> CrtxReavr: so, SFTP is not going to work ...
[17:57:53] *** Joins: aNickName (~Throgkt@sps03-1-78-220-132-145.fbx.proxad.net)
[17:57:53] *** Quits: aNickName (~Throgkt@sps03-1-78-220-132-145.fbx.proxad.net) (Client Quit)
[17:58:08] <CrtxReavr> SFTP is a function of SSH, yes. .
[17:58:10] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:58:29] *** Joins: unyu (~pyon@user/pyon)
[17:58:55] <rjwiii> CrtxReavr: does FTPS use port 21/
[17:58:57] <rjwiii> ?
[17:59:15] <CrtxReavr> Often, but not always.
[17:59:28] <CrtxReavr> What's so wrong with ftplib?
[18:00:23] *** Quits: Elzington (~Elzington@static-68-235-44-43.cust.tzulo.com) (Quit: Leaving)
[18:00:47] <rjwiii> CrtxReavr: a lot of its methods just dump output to stdout and doesn't store it. it only stores the return code ...
[18:01:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[18:01:32] *** Joins: savolla (~savolla@84.44.28.28)
[18:01:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[18:02:03] <CrtxReavr> I've honestly never used it. . . but this looks pretty straight forward: https://docs.python.org/3/library/ftplib.html
[18:02:22] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:2158:8e7a:395f:b8f9) (Remote host closed the connection)
[18:02:31] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[18:03:04] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[18:03:06] <CrtxReavr> What methods are you finding problematic?
[18:03:54] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Read error: Connection reset by peer)
[18:04:08] <exarkun> rjwiii: Well, I dunno what you will consider to be "better" but Twisted has an FTP library.
[18:04:48] *** Quits: MeanEYE (~Mladen@87.116.177.143) (Remote host closed the connection)
[18:04:55] <rjwiii> CrtxReavr: well, retrlines ... it dumps to stdout and returns the status ...
[18:05:13] <rjwiii> exarkun: I'll check it out ... thanks.
[18:06:23] <savolla> Hi guys is there a way to connect to existing python interpreter and run commands there? I have two python interpreter instances. Trying to send commands to the other one
[18:06:52] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:9842:a336:7e0c:17e8)
[18:06:54] <CrtxReavr> rjwiii, what are you using that method for?  Getting remote directory listings?
[18:07:34] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:07:44] <exarkun> savolla: not built in
[18:07:57] *** Joins: MeanEYE (~Mladen@87.116.162.168)
[18:07:59] <exarkun> savolla: there are many ipc and rpc libraries
[18:08:06] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[18:08:09] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[18:08:37] <savolla> exarkun: thanks! I at least got the keywords now
[18:08:52] <savolla> can you recommend one with nice documentation?
[18:09:56] <exarkun> in the absense of any unusual requirements, I usually use something based on http
[18:10:12] <exarkun> so eg https://klein.readthedocs.io/en/latest/ https://treq.readthedocs.io/en/release-22.1.0/
[18:11:00] *** Quits: subopt (~subopt@2603-8081-2302-459a-792e-5d00-4171-6b33.res6.spectrum.com) (Ping timeout: 240 seconds)
[18:11:10] <rjwiii> CrtxReavr: I was ... I figured out how to use ftp.dir to put a directory listing in a list ...
[18:11:50] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Client Quit)
[18:12:00] <CrtxReavr> ftps.nlst() I take it?
[18:12:10] <rjwiii> CrtxReavr: I may need to issue other commands with retrlines and save the output ... I'm connecting to an FTP server on a mainframe ...
[18:12:38] <rjwiii> CrtxReavr: server doesn't support nlst
[18:12:44] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[18:12:46] <CrtxReavr> ahh
[18:13:23] <CrtxReavr> Mainframe can't support ssh (and sftp)?
[18:14:13] <CrtxReavr> (Which would be odd, since I'm pretty sure SFTP is *OLDER* than FTPS.
[18:14:16] <CrtxReavr> )
[18:15:24] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[18:15:40] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[18:15:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:16:01] <rjwiii> CrtxReavr: Tried to ssh to the mainframe IP ... timed out ...
[18:16:28] *** Joins: Klinda (~superleag@user/klinda)
[18:16:53] <AhmedAmerican> what do you think about that method ? `datetime.fromisoformat('2022-03-10T04:50:16.700Z'[:-1]).strftime('%Y-%m-%d %H:%M:%S')` is there a more efficient way ?
[18:17:34] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:20:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-4da4-5828-7bb7-83bf.res6.spectrum.com)
[18:20:37] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[18:22:12] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[18:22:34] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:22:42] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[18:23:34] <pragmaticenigma> rjwiii: regarding ftplib: you have to provide a callback method as a second parameter. Otherwise the library defaults the output to stdout. It's in the documentation for the library. https://docs.python.org/3/library/ftplib.html
[18:23:38] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:19a5:18c2:1f3c:54f3)
[18:23:55] *** Joins: badsektor (~badsektor@user/badsektor)
[18:24:19] <exarkun> CrtxReavr: There were 2 sftps, the 1st is older than ftps but the 2nd is newer.
[18:24:29] <exarkun> (no one uses the 1st anymore)
[18:24:43] <pragmaticenigma> FTPS and SFTP are not the same thing
[18:24:49] <exarkun> also inconveniently neither ever completed the standards process
[18:24:59] <exarkun> pragmaticenigma: re-read what I wrote?
[18:25:08] <exarkun> ah maybe the plural makes it ambiguous
[18:25:18] <jinsun> AhmedAmerican: `"2022-03-10T04:50:16.700Z".replace("T", " ").split(".", 1)[0]` maybe, it is faster at least
[18:25:19] *** Joins: n0n4m399 (~n0n4m399@223.178.14.250)
[18:25:20] <rjwiii> pradhvan: I saw that and used it with ftp.dir ... did not know it worked with retrlines as well ... Thanks, I will check it out.
[18:25:24] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[18:25:24] <exarkun> There were 2 versions of SFTP, the 1st is older than FTPS but the 2nd is newer.
[18:25:58] <exarkun> And there is no SFTP final RFC, only expired drafts.
[18:26:12] *** Joins: alienhead (~solas@user/alienhead)
[18:26:19] <pragmaticenigma> exarkun: again, SFTP has no relation to FTPS, they are completely different protocols, using similar commands
[18:26:21] <exarkun> (I guess "2" is an undercount, if you consider each draft a version)
[18:26:41] <exarkun> pragmaticenigma: I know that.  My statement is meant to be entirely compatible with that.  I'm not sure where the miscommunication is.
[18:27:08] <pragmaticenigma> You keep refering to there being different versions. They're not versions of each other
[18:27:23] <exarkun> They're not versions of each other, that's true.
[18:27:26] <pragmaticenigma> No
[18:27:31] <exarkun> That doesn't meant there can't be more than one version of SFTP.
[18:27:53] <exarkun> Here are at least 4 versions of SFTP - https://www.sftp.net/specification
[18:28:50] *** Quits: savolla (~savolla@84.44.28.28) (Quit: Client closed)
[18:29:37] <pradhvan> rjwiii: I think you tagged the wrong person about fto.dir. :)
[18:29:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:29:57] *** Quits: eekS (~Skee@user/eeks) ()
[18:30:05] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[18:31:36] <exarkun> (For anyone who is not aware, SFTP is a file transfer protocol that runs as an SSH service; FTPS is basically the FTP protocol run over TLS)
[18:31:38] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Read error: Connection reset by peer)
[18:32:10] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[18:32:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:32:37] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[18:32:52] <pragmaticenigma> (And to pluralize acronyms, you use all capital letters for the acronym, followed by a lower case "s")
[18:33:58] *** Joins: cincoswim (~cincoswim@cm-72-241-113-163.buckeyecom.net)
[18:34:08] <grym> the SFTPs, the marksdown, the htsml...
[18:34:10] <grym> >:)
[18:34:20] <grym> (the email, the email; what, what, the email)
[18:34:32] <pragmaticenigma> I wanna learn me some htsml, that sounds trendy
[18:35:16] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[18:35:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[18:35:53] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:35:59] *** Parts: n0n4m399 (~n0n4m399@223.178.14.250) ()
[18:36:37] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[18:36:39] *** Yugi is now known as Hunterkll
[18:36:47] *** Joins: subopt (~subopt@2603-8081-2302-459a-1029-6603-54f9-d93a.res6.spectrum.com)
[18:36:53] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[18:37:51] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:39:32] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[18:39:43] *** Joins: paul424 (~tom@ip-5-172-236-71.multi.internet.cyfrowypolsat.pl)
[18:40:43] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[18:41:37] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[18:42:31] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[18:43:39] *** Joins: bahamas (~lucian@84.232.140.52)
[18:43:45] *** Joins: zeden (~zeden@user/zeden)
[18:44:33] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[18:45:30] *** Quits: subopt (~subopt@2603-8081-2302-459a-1029-6603-54f9-d93a.res6.spectrum.com) (Ping timeout: 260 seconds)
[18:45:30] *** Quits: ymwm_ (~yingmanwu@110.85.121.251) (Ping timeout: 272 seconds)
[18:45:59] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[18:46:42] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[18:47:03] <zen_coder> how can I install via python directly a certain version of a package via pip?
[18:47:05] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[18:47:19] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[18:47:20] <zen_coder> I found: `pip.main(["install", package_name])`
[18:47:28] <zen_coder> but where do I put the version number?
[18:47:31] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Read error: Connection reset by peer)
[18:47:55] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[18:48:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:49:43] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[18:49:48] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[18:49:49] <grym> zen_coder: `pip install thepackage==the.version.id`
[18:50:10] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[18:50:12] <grym> programmatic use of pip is "here be dragons" territory, though
[18:50:41] <jinsun> pip.main isn't even there in recent versions
[18:50:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e0bb:78f3:394e:a43d)
[18:52:17] <jinsun> you can maybe do `subprocess.run([sys.executable, "-m", "pip", ...])` but I wouldn't bother with that too
[18:52:45] *** Quits: on^ (~on@50.232.121.75) (Remote host closed the connection)
[18:53:18] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[18:53:46] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:53:52] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:54:20] <grym> that's certainly the safest way i'm aware of
[18:54:26] <grym> and that's not saying much :P
[18:55:19] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[18:55:22] <jinsun> the subprocess way is supported apparently https://pip.pypa.io/en/stable/user_guide/#using-pip-from-your-program
[18:55:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:56:09] <pragmaticenigma> wondering if zen_coder is just trying to install it, and thought installing from within a Python interactive terminal was the way to do it
[18:56:12] *** Joins: cruncher (~cruncher@user/cruncher)
[18:56:13] <montpol> how can i make a sine function with a 4bit resolution?
[18:56:15] *** Joins: kts (~kts@103.73.237.233)
[18:56:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:56:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:56:37] <dsc_> zen_coder: https://github.com/sanderfoobar/ircradio/blob/master/ircradio/youtube.py#L133-L139
[18:56:55] <dsc_> just an example, incredibly hacky...
[18:57:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:57:42] <pragmaticenigma> concerning to see that in an application
[18:57:57] <exarkun> montpol: What does "4 bit resolution" mean?
[18:58:15] <dsc_> pragmaticenigma: its a hobby project...
[18:58:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:59:06] <pragmaticenigma> dsc_: cool, is it one that you contribute/manage?
[18:59:13] *** Quits: marcello1 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[18:59:21] <dsc_> yes I made it
[19:00:48] <zen_coder> jinsun: so It is better to start a subprocess then using pip directly?
[19:00:55] <exarkun> dsc_: it might be fun to learn about https://theupdateframework.io/
[19:01:32] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[19:01:34] <pragmaticenigma> dsc_: neat
[19:01:58] *** Joins: revolve_ (~u0_a227@82-132-236-64.dab.02.net)
[19:02:03] <grym> zen_coder: pip's internals are explicitly flagged as "use at your own peril, this is not a public API"
[19:02:12] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[19:02:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:02:14] *** Quits: s98259 (~s98259@ip129.ip-51-195-238.eu) (Changing host)
[19:02:14] *** Joins: s98259 (~s98259@user/helenah)
[19:02:26] <grym> "we will happily break you at any moment and it's your fault not ours"
[19:02:50] <zen_coder> https://pip.pypa.io/en/stable/user_guide/#using-pip-from-your-program okay this says, this is okay to use
[19:03:04] *** s98259 is now known as Helenah
[19:03:30] <grym> zen_coder: that says exactly the opposite.
[19:03:40] <grym> "While it is implemented in Python, and so is available from your Python code via import pip, you must not use pip’s internal APIs in this way."
[19:03:57] <CrtxReavr> Is it not fair to say that python exceptions are classes, therefore they should have capitalized names, not names like "error_perm" or "error_reply"?
[19:04:22] <exarkun> CrtxReavr: yes
[19:04:23] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[19:04:57] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[19:05:07] <SnoopJ> it's a style opinion that is possible to have, sure
[19:05:36] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[19:06:45] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Read error: Connection reset by peer)
[19:06:52] <jinsun> yes built-in exceptions follow that rule and pylint enforces that too by default
[19:07:15] <grym> i would be confused to `raise error_perm('something weng wrong')`
[19:08:11] <grym> zen_coder: "What this means in practice is that everything inside of pip is considered an implementation detail. Even the fact that the import name is pip is subject to change without notice. While we do try not to break things as much as possible, all the internal APIs can change at any time, for any reason. It also means that we generally won’t fix issues that are a result of using pip in an unsupported
[19:08:17] <CrtxReavr> I'm looking at ftplib.delete(), Et al.
[19:08:17] <grym> way."
[19:08:39] <exarkun> CrtxReavr: pep8 readily admits that the stdlib is a mess and too bad probably
[19:08:44] <grym> CrtxReavr: that's a method, not an exception
[19:08:51] *** Quits: KevinX (~KevinX@user/KevinX) (Read error: Connection reset by peer)
[19:09:01] <exarkun> "The naming conventions of Python’s library are a bit of a mess, so we’ll never get this completely consistent"
[19:09:11] <grym> exarkun: "we're old, it happens"
[19:09:13] <montpol> exarkun that the values of the sine wave are saved in 4 bits
[19:09:25] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[19:09:37] *** Joins: KevinX (~KevinX@user/KevinX)
[19:10:03] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 256 seconds)
[19:10:15] <CrtxReavr> grym, "Remove the file named filename from the server. If successful, returns the text of the response, otherwise raises error_perm on permission errors or error_reply on other errors."
[19:10:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[19:10:48] <jinsun> yeah look at datetime, all lowercase classes
[19:10:49] <CrtxReavr> Also: import ftplib ; dir(ftplib.delete)
[19:10:53] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[19:11:27] <grym> CrtxReavr: yeah.  i bet ftplib is real old...
[19:11:40] <jinsun> stdlib follows the foolish consistency is a hobgoblin part well
[19:11:49] <CrtxReavr> I've never used it. . . was just helping someone earlier.
[19:12:04] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Ping timeout: 256 seconds)
[19:12:26] *** Joins: Guest5410 (~Guest54@2620:10d:c092:400::4:7445)
[19:12:41] *** Joins: ovnicraft (~ovnicraft@181.112.32.226)
[19:13:06] <pragmaticenigma> at least they're consistant with a prefix of error_
[19:14:10] <CrtxReavr> Would have been easy (and consisten with standards) to go with PermError & ReplyError.
[19:14:28] *** Joins: Roey (~Roey@user/Roey)
[19:14:34] <exarkun> there was no standard
[19:14:38] <SnoopJ> CrtxReavr, almost assuredly the classes in question predate PEP 8
[19:14:39] <exarkun> ftplib was written in 1996
[19:14:43] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[19:14:54] <SnoopJ> And PEP 8 was published in 2001
[19:15:19] <CrtxReavr> Oh well.
[19:15:20] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:15:21] <exarkun> you might complain that python 3 missed an opportunity to fix it all up
[19:15:32] <exarkun> but ftplib probably gets about as much attention as it deserves
[19:16:08] <grym> CrtxReavr: i see commits in ftplib.py going back to 1992, fwiw
[19:16:37] *** Quits: kts (~kts@103.73.237.233) (Ping timeout: 240 seconds)
[19:16:41] <TML> montpol: Just clamp math.sin() to 4 bit values?
[19:16:58] * CrtxReavr wonders why he was fiddling with Pascal and not Python back then.
[19:17:00] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 240 seconds)
[19:17:02] *** Joins: kts (~kts@103.73.237.153)
[19:17:20] <CrtxReavr> Oh, because CS-105 was Intro to Pascal. . .
[19:17:35] <montpol> TML how?
[19:17:53] <TML> montpol: def clamped_sin(x): return max(min(sin(x), 0), 2**4)
[19:17:56] <SnoopJ> I see 359 matches for "^class [^A-Z_]" in Python files, although not all of them are user-facing code (i.e. that includes tests)
[19:18:14] *** Joins: vurr (~seymon@85.253.80.185.cable.starman.ee)
[19:18:26] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 272 seconds)
[19:18:43] <exarkun> TML: What is the domain of sine?
[19:18:46] <SnoopJ> my favorite among the ones I scrolled through: https://github.com/python/cpython/blob/main/Lib/test/test_reprlib.py#L339
[19:18:58] <exarkun> TML: And what is the range?
[19:19:26] *** Joins: rickybob (~rickybob@35.143.255.39)
[19:20:13] <exarkun> montpol: What should the output of the function be for pi / 4?
[19:20:20] *** Joins: off^ (~off@50.232.121.75)
[19:20:21] <TML> exarkun: mm - well, based on the question, I was assuming that the function was being used in some kind of DAC-like operation, where the effective domain would be [0, 15] for a 4-bit value
[19:20:27] <jinsun> montpol: you already had solution for 8 bit right? just change 127 to 7 there
[19:20:30] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:20:57] <exarkun> Sounds like montpol asked a related question earlier that I didn't see
[19:21:08] <montpol> jinsun yes! but it makes no sense to me
[19:21:16] <TML> exarkun: Well, I just made an assumption - and probably not a very safe one :)
[19:21:24] <TML> I didn't seen any earlier questions either
[19:21:33] <montpol> exarkun no i saw and i asked afterward a related question but no one responded hence me asking this in a new formulated way
[19:21:36] <exarkun> jinsun seems to know something about
[19:21:56] <jinsun> montpol: 127 is 2**(8-1) - 1 and 7 is 2**(4-1)-1
[19:22:09] <montpol> right
[19:23:23] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Quit: Textual IRC Client: www.textualapp.com)
[19:23:24] *** Quits: cincoswim (~cincoswim@cm-72-241-113-163.buckeyecom.net) (Ping timeout: 256 seconds)
[19:23:25] <montpol> Ah wait..so in general, one does: 2^n*value. Then one rounds the value to the next integer, right?
[19:23:39] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 252 seconds)
[19:23:50] <jinsun> you just have to stay within the limits of signed x bit numbers, and 2**(x-1) - 1 gives the upper limit
[19:25:07] <TML> montpol: Well, you do x-1 because of two's complement, and subtract one from that for zero.
[19:26:06] <montpol> TML i dont get it, x-1 then subtract one again?
[19:27:56] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 272 seconds)
[19:28:02] <TML> montpol: Are you familiar with the two's complement system?
[19:28:17] *** Quits: elink (~elink@user/elink) (Quit: Leaving)
[19:28:17] <jinsun> montpol: the first x-1 is in the exponent of 2, to halve it, because only half the numbers are positive, and the second -1 is becuase positive numbers start with 0
[19:28:50] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:9842:a336:7e0c:17e8) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:29:02] <TML> montpol: https://en.wikipedia.org/wiki/Two%27s_complement
[19:29:09] <montpol> a little
[19:29:10] <pragmaticenigma> SnoopJ: That is a rather fun piece of code, someone trying to fuzz properties for overflows?
[19:29:30] <SnoopJ> pragmaticenigma, nothing about it looks like fuzzing or overflow, to me
[19:31:28] <pragmaticenigma> the test is called "a_really_long_package_and_module_name_to_test_repr_truncation" ... (underscores added for readability) looks like an boundry check to me
[19:31:56] <pragmaticenigma> maybe not in the classical sense of checking for overflows
[19:33:00] <SnoopJ> It's checking that repr() does the right thing when the names are long
[19:33:38] <grym> "for surely where thou typest ``foo'' someone someday shall type ``supercalifragilisticexpialidocious''."
[19:34:10] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 256 seconds)
[19:34:25] <pragmaticenigma> I've hit those limits before, but I think it was some home baked GUID generation attempt to obfuscate the code
[19:34:43] <pragmaticenigma> (not written by me, working in someone elses library)
[19:34:54] *** Quits: schumaml (~schumaml@dslb-188-104-187-074.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[19:35:33] *** Quits: ArtfulDodger (~ArtfulDod@147.210.204.164) (Ping timeout: 256 seconds)
[19:36:35] <TML> montpol: Using a small value like 3 bits, you have only 2 bits to represent the value, and one bit to represent whether the number is positive or negative. The first positive number is 000 (or "0"), the last positive number is 011: int("011", 2) == 3. So your possible values are: [-4, -3, -2, -1, 0, 1, 2, 3] - that's the 8 possible values (2^3 is 8) you can store in 3 bits
[19:36:41] *** Joins: schumaml (~schumaml@dslb-178-002-177-202.178.002.pools.vodafone-ip.de)
[19:36:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:36:53] *** Joins: Wh0 (~V@103.249.234.42)
[19:37:47] *** Quits: gopar (~gopar@ip70-189-75-162.ok.ok.cox.net) ()
[19:38:11] <TML> montpol: Because one bit is used to represent positive/negative, you have to subtract that bit from "x" before doing 2^x; and, as jinsun already mentioned, your first positive value is 0, so your max value is one-less-than the result of 2^(x-1)
[19:38:36] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e0bb:78f3:394e:a43d) (Ping timeout: 240 seconds)
[19:38:42] <TML> i.e., "2**(x-1) - 1"
[19:40:02] *** Quits: Socra (~Socra@206.217.216.21) (Read error: Connection reset by peer)
[19:40:04] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[19:41:20] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:41:42] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g_)
[19:41:46] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.251) (Quit: Leaving)
[19:42:20] *** Joins: bahamas (~lucian@86.120.77.115)
[19:42:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:42:44] *** Joins: KevinX (~KevinX@user/KevinX)
[19:43:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:44:00] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[19:44:27] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[19:44:28] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:45:10] *** Joins: Socra (~Socra@206.217.216.21)
[19:46:09] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[19:47:26] *** Joins: humbertowoody (~humbertow@189.144.27.245)
[19:47:27] *** Quits: kts (~kts@103.73.237.153) (Quit: Konversation terminated!)
[19:48:06] *** Joins: alexises (~lameire@51.15.136.90)
[19:49:14] <alexises> hello, I have a quick question where I could not get a simple response. I've written en method that is a generator, so now I would like to make my class iterable
[19:49:20] *** Quits: revolve_ (~u0_a227@82-132-236-64.dab.02.net) (Read error: Connection reset by peer)
[19:49:34] <alexises> but I'm stuck on how to acheave it
[19:49:57] <alexises> I can't find a definitive answer on my best friend google :(
[19:50:17] *** Joins: kts (~kts@103.73.237.153)
[19:51:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[19:51:16] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:51:32] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[19:52:26] <tdsmith> i think that's as simple as def __iter__(self): yield from self.my_generator()
[19:52:34] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:52:41] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Remote host closed the connection)
[19:53:07] *** Joins: gopar (~gopar@ip70-189-75-162.ok.ok.cox.net)
[19:53:32] *** Quits: ovnicraft (~ovnicraft@181.112.32.226) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:53:54] <SnoopJ> alexises, you will want to define __iter__() and __next__() on your class, see this part of the official tutorial: https://docs.python.org/3/tutorial/classes.html#iterators
[19:54:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:54:55] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[19:55:32] <SnoopJ> or maybe just __iter__() if your class is not itself an iterator (like tdsmith's example)
[19:56:38] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[19:57:19] *** Joins: ovnicraft (~ovnicraft@181.112.32.226)
[19:57:46] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[19:58:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:59:31] *** Quits: thevishy (~Nishant@49.37.242.151) (Quit: Leaving)
[19:59:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:59:51] *** Joins: elink (~elink@user/elink)
[20:00:10] *** Joins: mncheck (~mncheck@193.224.205.254)
[20:00:30] *** Quits: Payam98 (~Payam@138.106.57.131) (Quit: Client closed)
[20:00:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:01:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:02:02] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:02:33] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 250 seconds)
[20:02:34] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:02:38] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:02:51] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 245 seconds)
[20:02:56] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:02:59] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:03:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:03:20] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:04:10] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:04:55] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:05:30] *** Joins: julia__ (~quassel@user/julia)
[20:05:42] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[20:06:09] *** Quits: Guest5410 (~Guest54@2620:10d:c092:400::4:7445) (Ping timeout: 256 seconds)
[20:06:09] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:7445) (Ping timeout: 256 seconds)
[20:06:36] *** Quits: julia (~quassel@user/julia) (Ping timeout: 240 seconds)
[20:06:51] *** Joins: junebug (~junebug@2600:1700:3db0:2540:bf5:909d:2368:7b02)
[20:08:59] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[20:09:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:09:58] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[20:10:10] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 250 seconds)
[20:10:42] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[20:11:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:bf5:909d:2368:7b02) (Remote host closed the connection)
[20:11:36] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3499:533f:a41b:9450)
[20:11:43] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[20:11:53] *** Joins: toulene (~toulene@user/toulene)
[20:12:21] *** Joins: s33ker (~s33ker@85.10.35.70)
[20:12:44] <mav`rik> Is there anything equivalent to the HTML output in NYTProf, but to be run over a pstats style output? I know we can use tooling like kcachegrind, runsnakerun, etc, but I was hoping there was something that was (for want of a better word) "publishable" for profiling.
[20:16:50] *** Joins: txtsd (~txtsd@user/txtsd)
[20:16:52] *** Quits: imakestuff (~imakestuf@197.156.107.143) (Remote host closed the connection)
[20:17:18] *** Quits: Xano (~Xano@host86-158-12-110.range86-158.btcentralplus.com) (Read error: Connection reset by peer)
[20:17:20] *** Quits: vurr (~seymon@85.253.80.185.cable.starman.ee) (Ping timeout: 272 seconds)
[20:17:32] *** Joins: Xano (~Xano@2a00:23c4:4204:700:53d2:9d04:ae97:ff0e)
[20:18:22] *** Joins: savolla (~quassel@95.10.239.22)
[20:18:39] *** Quits: rando25892 (~homefame@user/rando25892) (Ping timeout: 252 seconds)
[20:18:39] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 252 seconds)
[20:18:56] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[20:19:14] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 272 seconds)
[20:20:10] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[20:20:26] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[20:20:30] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[20:20:33] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[20:22:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:22:14] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:22:17] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[20:22:53] *** Joins: teut (~teut@103.144.92.163)
[20:23:05] <alexises> ok, so, I was 1/2 tired as fuck and unable to see my mistakes, 1/2 I was not knoleadgable enough
[20:23:56] <alexises> tdsmith: technically your solution is working well and was kind of what I need :) but a simple return self.my_generator() seen to also work
[20:23:59] <teut> https://godbolt.org/z/3zoc45noK
[20:24:18] <teut> how to make it work for a variable?
[20:24:23] <alexises> thanks for your help tdsmith and SnoopJ
[20:24:31] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[20:24:45] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:7445)
[20:24:48] <teut> "#"*i +" "*(n-i)  is I know what I can do
[20:25:02] <bjs> teut: you wanted to use {n} not n ?
[20:25:34] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[20:25:39] *** Joins: ymwm_ (~yingmanwu@110.85.121.251)
[20:25:44] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 256 seconds)
[20:25:45] <teut> https://ibb.co/YZYVVyM
[20:25:54] <teut> I actually need it laterally inverted too
[20:26:17] <alexises> teut: print('#' * i)
[20:26:17] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[20:26:50] <teut> alexises  need it like in the img
[20:26:56] *** Quits: savolla (~quassel@95.10.239.22) (Remote host closed the connection)
[20:26:56] <teut> thanks bjs
[20:27:15] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[20:27:42] <alexises> and for the inversion
[20:27:49] <teut> bjs: you wanted to use {n} not n ?     < was this obvious?
[20:27:53] *** Joins: mcint (mcint@user/mcint)
[20:27:56] <alexises> print('{}{}'.format(' ' * (n-i), '#' * i))
[20:27:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:28:08] <teut> ya that can be done
[20:28:15] <alexises> or if you would like to avoid format
[20:28:27] <teut> https://stackoverflow.com/a/54969247/4213362
[20:28:44] <teut> but this person is also right aligning like this
[20:28:52] <alexises> print(' ' * (n - i) + '#' * i)
[20:29:25] <montpol> TML wow thanks! i just spent some time refreshing on twos comp and your last message was really helpful
[20:29:42] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[20:30:07] <montpol> so when using "3" bits its really using 4 bits
[20:30:09] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[20:30:19] <montpol> but 3 bits are for the values
[20:30:51] *** Joins: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com)
[20:30:57] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:31:04] <pragmaticenigma> montpol: 2 bits are used for the value
[20:31:17] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 240 seconds)
[20:31:23] *** Joins: Barones (~Barones@user/Barones)
[20:31:32] <montpol> no, 3 bits for the values and one for the sign
[20:31:37] <pragmaticenigma> montpol: nope
[20:31:48] *** Quits: pdc (~raffaem@95.74.42.52) (Remote host closed the connection)
[20:32:01] <pragmaticenigma> You only get the lowest 2 bits for the value. the 3rd bit is always zero, the 4th indicates the two's compliment
[20:32:01] <TML> montpol: Correct - in a 4 bit value, one bit is for sign, 3 bits are for the value
[20:32:16] <teut> ya that is good alexises
[20:32:21] <teut> thanks
[20:32:41] <pragmaticenigma> might be missing something
[20:33:04] *** Joins: pdc (~raffaem@95.74.42.52)
[20:33:12] *** Quits: pdc (~raffaem@95.74.42.52) (Remote host closed the connection)
[20:33:44] <montpol> TML so when i want to see what a sine function looks like with four bits, i will need 5 bits. But how then would the function look like? Like this? z = (2^(5-1)-1)*sinx?
[20:33:56] <TML> pragmaticenigma: Yeah, I'm not sure where you were going with that, but whatever it is, it's not related to what montpol is trying to understand :)
[20:34:01] <montpol> and then np.round(z)?
[20:34:13] *** Quits: pycode (~pycode3@2001:b07:5d28:551:22e6:45b7:be62:752) (Ping timeout: 240 seconds)
[20:34:29] <TML> montpol: Well, it depends on whether your sine values are allowed to have negative numbers
[20:34:31] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[20:34:36] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[20:35:07] <TML> montpol: If you're doing something like a DAC (as I first assumed), you might not even want negative numbers to be allowed
[20:35:29] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[20:35:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:36:05] <TML> montpol: If you allow for negative numbers, (2^(4-1)-1)*sinx would be correct - because that's 4 bits, where half the bits represent a negative value
[20:36:11] *** Quits: ymwm_ (~yingmanwu@110.85.121.251) (Remote host closed the connection)
[20:36:15] *** Quits: vlado1 (~vlado@181.50.79.237) (Ping timeout: 252 seconds)
[20:36:15] *** Joins: Barones (~Barones@user/Barones)
[20:36:19] <alexises> teut: no problem, I don't use othen multiplication on string, but it's sometime usefull
[20:36:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:36:28] <teut> yeah
[20:36:31] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[20:36:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:36:55] <montpol> TML yes they will have negative values
[20:37:08] <TML> montpol: Then you want 4, not 5, as the exponent.
[20:37:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:37:30] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[20:37:33] <TML> Or, rather "4-1" as opposed to "5-1"
[20:37:42] <TML> (2^(5-1)-1)*sinx would be 5 bits
[20:37:44] <montpol> TML but then one bit is "gone"
[20:37:49] *** Joins: wac (~wac@user/wac)
[20:37:54] *** Joins: gareppa (~gareppa@user/gareppa)
[20:37:55] <TML> montpol: It's not gone. It indicates positive or negative value.
[20:37:59] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[20:38:08] <montpol> ok makes sense
[20:38:11] <TML> that's part of the bit representation
[20:39:06] *** Joins: Galf (~Galf@2601:196:4901:84f0:6d33:5ee0:9484:fe5b)
[20:39:19] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[20:39:19] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:40:24] <montpol> TML thanks for the help...this was very enlightening. Are you around for the next hour? Another question my pop in my head and would like to ask you...just in case
[20:40:46] *** Quits: kts (~kts@103.73.237.153) (Ping timeout: 245 seconds)
[20:41:14] *** Joins: kts (~kts@103.73.237.220)
[20:41:23] <zen_coder> is this virtual env tool "python3 -m venv ." in every python version available?
[20:41:35] <grym> zen_coder: in all supported versions of python.
[20:41:45] <grym> zen_coder: it was included as of python 3.3
[20:41:48] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:42:01] *** Joins: rickybob (~rickybob@35.143.255.39)
[20:42:10] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[20:42:15] *** Quits: Wh0 (~V@103.249.234.42) (Quit: Leaving)
[20:42:15] <grym> and python 3.7+ is still maintained
[20:42:25] <TML> montpol: I'm usually here, but who can say for sure what will happen in the future? :)
[20:42:29] *** Joins: rje (~textual@65.141.156.170)
[20:42:31] <zen_coder> so I am thinking about setting up a virtual env for all my python modules and then sourceing all them
[20:42:38] <grym> zen_coder: your distro may or may not require you to install additional packages to restore that part of the stdlib to you, though
[20:42:42] <SnoopJ> zen_coder, if you use Debian/Ubuntu, you'll need to install the python3-venv package, but it's usually part of a Python distribution
[20:42:47] <grym> zen_coder: yes, venvs are a great idea
[20:42:48] <montpol> TML :D
[20:42:58] <SnoopJ> (if your distribution is very opinionated about what Python *should* be, that's when you should start worrying)
[20:43:20] <grym> zen_coder: (and it's worth remembering that sourcing is always optional)
[20:43:32] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[20:43:41] <zen_coder> grym: optional?
[20:43:48] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[20:44:41] <grym> zen_coder: you can `python3 -m venv somevenv; source somevenv/bin/activate; pip install requests`, but you can also `python3 -m venv somevenv; somevenv/bin/python -m pip install requests`
[20:44:48] <SnoopJ> zen_coder, you don't need to `source` a venv in order to use it
[20:45:14] <SnoopJ> if you point directly at the `python3` inside of the venv, things will work pretty much as if you had activated the venv
[20:45:31] <grym> zen_coder: the former is something people like as a shell convenience; the latter is always the way to go if you're writing scripts or the like
[20:45:43] <bjs> teut: obvious to whom?
[20:45:44] <grym> (and some folks use it all the time and never source)
[20:45:49] <grym> it'll work the same
[20:46:05] <zen_coder> imagine now following I setup 5 virtual envs, all for every module I want to use, all in different directories. Now I have a script, which will all use this modules. Then I needs to source all of them, right?
[20:46:22] <zen_coder> does this work?
[20:46:24] <SnoopJ> zen_coder, no
[20:46:27] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[20:46:27] *** Quits: elink (~elink@user/elink) (Remote host closed the connection)
[20:46:47] <SnoopJ> you could install all the modules you want to use into a *single* venv and activate that, though.
[20:46:59] *** Quits: Galf (~Galf@2601:196:4901:84f0:6d33:5ee0:9484:fe5b) (Quit: Client closed)
[20:47:02] <grym> ^
[20:47:18] <grym> one venv per "project" or "combined unit of functionality/ program / system"
[20:47:27] <grym> not one per pip-installed module
[20:48:16] *** Joins: habamax (~habamax@user/habamax)
[20:48:44] *** Joins: rsx (~dummy@ppp-188-174-140-207.dynamic.mnet-online.de)
[20:48:55] <zen_coder> so for that I have to use the "global" user environment
[20:48:55] <grym> zen_coder: so i have (at least one) venv per work project, but also a venv for aws-cli, a venv for youtube-dl, etc, which are not projects i'm writing code for, they're tools i'm using in my daily command line useu
[20:49:02] *** Joins: henistein (~henistein@2001:8a0:fc95:1d01:a32a:2ff3:ad47:ef1d)
[20:49:10] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 260 seconds)
[20:49:10] <grym> no
[20:49:15] <pragmaticenigma> TML, I think I was stuck thinking on something from an EE class. didn't mean to instill confusion
[20:49:15] <grym> my user site is empty
[20:49:25] <TML> pragmaticenigma: No worries :)
[20:49:34] <TML> I never had EE, so I couldn't follow your logic LOL
[20:49:35] *** Joins: mncheck (~mncheck@193.224.205.254)
[20:49:47] *** Joins: elink (~elink@user/elink)
[20:49:49] <teut> bjs I meant was it common sense to use  {n} ?
[20:49:58] <jwhisnant> zen_coder: I find pyenv and pyenv local to be helpful when switching between projects and managing python versions. I know some dislike this activation behavior, but its an option.
[20:50:00] <bjs> teut: only if you knew you could
[20:50:20] <pragmaticenigma> TML: Gate logic works much the same, I think there was something with XNOR mixed into an example that popped into my head
[20:50:26] <teut> yep
[20:50:29] <SnoopJ> zen_coder, there is very little that you "have" to do
[20:50:31] <teut> I believed the same
[20:50:40] <montpol> I feel like im doing something wrong with my example code here. Both have so many points and they both look good...i expected them to have worse shapes https://bpa.st/S2TA
[20:50:43] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:51:03] <SnoopJ> the whole point of these tools is that you can build a workflow that works for you, but venvs are a part of a lot of workflows because they're useful
[20:51:25] <montpol> maybe of i reduce the amount of sampling?
[20:51:30] *** Joins: Deneb (~johnch@128.82.159.143.dyn.plus.net)
[20:52:21] *** Quits: s33ker (~s33ker@85.10.35.70) (Quit: Client closed)
[20:52:30] *** Joins: moog_ (~moog@98.97.83.104)
[20:53:06] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[20:53:06] *** Quits: elink (~elink@user/elink) (Remote host closed the connection)
[20:53:18] *** Joins: devish (~devish@54-240-198-39.amazon.com)
[20:54:42] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 272 seconds)
[20:55:20] *** Quits: moog__ (~moog@107.126.53.115) (Ping timeout: 272 seconds)
[20:55:50] <zen_coder> Is the other way arround possible, install the modules without pip and then combining them later in one virtual env?
[20:55:57] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[20:56:23] <exarkun> it is typically not practical
[20:56:39] <exarkun> (but anything's possible)
[20:56:40] <SnoopJ> Does anyone know how I can get the "Private Bytes" size of the running Python process on Windows? I'm talking about the quantity of the same name as shown in VMMap/Performance Monitor. It doesn't seem like psutil distinguishes between heap/image/private
[20:56:59] <grym> zen_coder: generally speaking no
[20:58:17] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[20:58:48] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043) (Ping timeout: 252 seconds)
[20:59:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:59:39] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[20:59:41] *** Quits: ovnicraft (~ovnicraft@181.112.32.226) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:59:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:00:28] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[21:00:37] *** Joins: rickybob2 (~rickybob@35.143.255.39)
[21:01:29] <pragmaticenigma> SnoopJ: have you tried comparing the value against something like SysInternal's Process Explorer?
[21:01:34] *** Joins: moog__ (~moog@98.97.83.104)
[21:02:21] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[21:02:43] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[21:02:48] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[21:02:49] <SnoopJ> pragmaticenigma, what value?
[21:03:01] <SnoopJ> (VMMap is part of SysInternals FWIW)
[21:03:10] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[21:03:15] <pragmaticenigma> ah
[21:03:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:03:53] <SnoopJ> VMMap is showing me the quantity I'm interested in, but I want to be able to query it at runtime (I'm trying to figure out what is creating all the private use allocations I'm seeing)
[21:04:02] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[21:04:18] *** Quits: moog_ (~moog@98.97.83.104) (Ping timeout: 252 seconds)
[21:04:51] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 252 seconds)
[21:04:59] *** Joins: jbox (~jbox@user/jbox)
[21:05:03] <SnoopJ> my current best idea is to install a trace hook and try to figure out when it grows above a threshold, then see what the program was doing at that time in hopes that I can isolate a particular dependency or somesuch...
[21:06:02] *** Quits: rickybob2 (~rickybob@35.143.255.39) (Ping timeout: 240 seconds)
[21:06:13] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:06:26] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[21:06:33] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[21:06:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[21:06:59] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:08:16] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 245 seconds)
[21:10:10] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[21:10:32] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[21:11:11] *** Joins: darksun (~darksun@user/darksun)
[21:12:12] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:12:39] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[21:13:02] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[21:13:36] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[21:13:47] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5b88:704f:7d89:bf85)
[21:14:11] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Remote host closed the connection)
[21:14:31] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Quit: Konversation terminated!)
[21:15:16] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:15:17] *** Quits: saroy (~Sandipan@43.252.250.67) (Ping timeout: 240 seconds)
[21:15:23] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[21:17:04] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:17:52] *** Quits: humbertowoody (~humbertow@189.144.27.245) (Ping timeout: 256 seconds)
[21:18:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:18:41] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[21:18:42] *** Joins: elink (~elink@user/elink)
[21:18:50] *** Quits: elink (~elink@user/elink) (Client Quit)
[21:19:01] *** Quits: baltazar (~baltazar@176-241-40-35.pool.digikabel.hu) (Ping timeout: 256 seconds)
[21:19:15] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[21:19:21] <jwhisnant> SnoopJ: maybe something in here ... https://pypi.org/project/pywin32/ ?
[21:20:00] <SnoopJ> jwhisnant, probably. I'm looking at https://pypi.org/project/wmi/ right now
[21:20:20] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[21:20:35] *** Joins: baltazar (~baltazar@178-164-184-5.pool.digikabel.hu)
[21:20:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[21:21:02] *** Joins: elink (~elink@user/elink)
[21:22:13] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:22:24] *** Quits: pa (~pah@user/pah) (Ping timeout: 256 seconds)
[21:22:41] *** Joins: mncheck (~mncheck@193.224.205.254)
[21:23:40] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[21:24:19] *** Joins: pah (~pah@user/pah)
[21:24:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[21:25:31] *** Joins: iob (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz)
[21:28:29] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:29:06] <teut> SnoopJ ask Mark Hammond
[21:29:46] <teut> He responds if you ask him something on guthub
[21:29:48] <teut> i*
[21:31:15] *** Joins: greknod (~grek@120.88.171.98)
[21:31:16] *** Joins: nomic (~nomic@185.217.117.88)
[21:31:49] <lambda> guthub, the world's largest open-source recipe collection
[21:32:27] <teut> =D
[21:32:37] <teut> we need something like that
[21:32:38] *** Joins: zebrag (~chris@user/zebrag)
[21:32:42] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:33:02] *** Joins: vurr (~seymon@85.253.80.185.cable.starman.ee)
[21:33:03] <teut> do you cook lambda?
[21:33:56] *** Joins: devish9 (~devish@54-240-196-184.amazon.com)
[21:34:30] *** Joins: _janus (~janus@blotter.ld-linux.so)
[21:34:49] *** Joins: dreamon (~dreamon@p57a4c911.dip0.t-ipconnect.de)
[21:35:05] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[21:35:18] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[21:35:21] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[21:35:41] *** Quits: devish (~devish@54-240-198-39.amazon.com) (Ping timeout: 256 seconds)
[21:35:54] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:5cab:7f42:df95:c7eb)
[21:36:24] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5b88:704f:7d89:bf85) (Ping timeout: 250 seconds)
[21:36:27] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:36:45] *** Quits: magla (~gelignite@55d4843f.access.ecotel.net) (Quit: Stay safe!)
[21:36:53] <SnoopJ> teut, I don't think I'm quite to the "bug a dev" stage here, just not very familiar with the Win32 API and talking to it from Python :)
[21:37:19] <teut> you can ask on the mailing list then if you want
[21:37:47] <teut> when I used it I saw the c# docs of win32 api
[21:37:52] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-152.range86-150.btcentralplus.com)
[21:38:16] <teut> most of the stuff was replica and the api could be guessed
[21:38:57] *** Quits: kts (~kts@103.73.237.220) (Ping timeout: 252 seconds)
[21:40:03] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[21:42:29] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:7445) (Ping timeout: 256 seconds)
[21:42:37] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:44:30] *** Quits: andreasbuhr (~quassel@p548dd8b0.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:44:32] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[21:44:50] *** Quits: elink (~elink@user/elink) (Remote host closed the connection)
[21:44:51] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[21:46:14] *** Joins: off^ (~off@50.232.121.75)
[21:46:51] *** Joins: crashrep (~crashrep@user/crashrep)
[21:46:57] *** Joins: lbalhar (~lbalhar@93.185.13.25)
[21:47:01] *** Quits: bluedust (~bluedust@89.238.143.232) (Ping timeout: 256 seconds)
[21:47:12] *** Quits: cruncher (~cruncher@user/cruncher) (Ping timeout: 252 seconds)
[21:47:34] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:47:46] *** Joins: masoudd (~masoudd@user/masoudd)
[21:47:56] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:50:42] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[21:50:56] *** Joins: Barones (~Barones@user/Barones)
[21:51:08] <patchie> jisun: thanks a lot, .iat worked! :D
[21:52:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[21:52:18] *** Joins: savolla (~quassel@95.10.239.22)
[21:52:18] *** Quits: savolla (~quassel@95.10.239.22) (Client Quit)
[21:53:39] *** Joins: gusto (~Augustus@109.255.100.54)
[21:56:15] *** Joins: bart__ (~Xano@178.239.167.171)
[21:57:13] *** Quits: henistein (~henistein@2001:8a0:fc95:1d01:a32a:2ff3:ad47:ef1d) (Ping timeout: 256 seconds)
[21:57:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:58:00] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:58:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:58:41] *** Quits: Xano (~Xano@2a00:23c4:4204:700:53d2:9d04:ae97:ff0e) (Ping timeout: 256 seconds)
[21:58:57] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 240 seconds)
[21:59:15] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[21:59:15] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[21:59:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:00:07] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:a088:8a8f:b0d:82cf)
[22:00:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:00:30] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[22:01:50] *** Joins: upsala (~zcb@185.213.155.232)
[22:02:03] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:5cab:7f42:df95:c7eb) (Ping timeout: 252 seconds)
[22:03:24] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3499:533f:a41b:9450) (Ping timeout: 240 seconds)
[22:03:27] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 256 seconds)
[22:03:36] *** Quits: raym (~raym@user/raym) (Quit: brb)
[22:03:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:03:45] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[22:03:45] *** Quits: paul424 (~tom@ip-5-172-236-71.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[22:04:18] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cadd:4ad0:c16d:dcf0)
[22:06:57] *** Joins: subopt (~subopt@2603-8081-2302-459a-e9bc-8e0f-be74-88e3.res6.spectrum.com)
[22:06:57] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[22:07:24] *** Joins: funhouse (~funhouse@user/funhouse)
[22:07:38] *** Joins: raym (~raym@user/raym)
[22:09:12] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 252 seconds)
[22:09:38] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:10:05] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:a923:3f21:2f27:b1a5)
[22:10:48] <patchie> Is there any advantage to install python from MS store, rather than downloading the installer? Will it update automatically or easier?
[22:11:11] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[22:12:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:13:43] *** Joins: elink (~elink@user/elink)
[22:14:16] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[22:14:32] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:15:21] *** Joins: mncheck (~mncheck@193.224.205.254)
[22:15:42] *** Joins: relink (~elink@user/elink)
[22:17:14] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[22:17:20] *** Joins: mncheckm (~mncheck@193.224.205.254)
[22:18:50] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:19:38] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:20:45] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:e4fc:76d0:ffe:adfb)
[22:21:45] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[22:22:36] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[22:23:42] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[22:23:50] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[22:24:00] *** Quits: bart__ (~Xano@178.239.167.171) (Ping timeout: 272 seconds)
[22:25:29] *** Quits: DerpGusta (~quassel@user/derpgusta) (Read error: Connection reset by peer)
[22:26:07] *** Quits: teut (~teut@103.144.92.163) (Ping timeout: 256 seconds)
[22:27:15] *** Joins: bahamas (~lucian@84.232.140.52)
[22:27:47] *** Joins: DerpGusta (~quassel@user/derpgusta)
[22:28:51] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[22:30:38] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[22:31:19] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:31:43] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:32:20] *** Quits: alienhead (~solas@user/alienhead) (Remote host closed the connection)
[22:32:26] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:32:40] *** Quits: dreamon (~dreamon@p57a4c911.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:33:18] *** Quits: NotThatRPG (~NotThatRP@mail.sift.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:6c5c:a23a:8374:3a19) (Ping timeout: 240 seconds)
[22:34:01] *** Quits: habamax (~habamax@user/habamax) (Quit: WeeChat 3.4)
[22:35:16] *** Joins: teut (~teut@103.144.92.163)
[22:35:30] *** Quits: vurr (~seymon@85.253.80.185.cable.starman.ee) (Ping timeout: 256 seconds)
[22:36:49] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:36:49] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[22:36:53] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[22:37:10] *** Joins: tejr (~tejr@user/tejr)
[22:37:32] *** Joins: bindu (~bindu@user/bindu)
[22:37:34] *** Joins: cyber-hagen (~cyber-hag@public-gprs184636.centertel.pl)
[22:37:34] *** Quits: cyber-hagen (~cyber-hag@public-gprs184636.centertel.pl) (Client Quit)
[22:37:47] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:38:01] *** Quits: KevinX (~KevinX@user/KevinX) (Read error: Connection reset by peer)
[22:38:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cadd:4ad0:c16d:dcf0) (Ping timeout: 240 seconds)
[22:38:48] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[22:39:11] <MiguelX413> May I please have some feedback on this code? https://github.com/MiguelX413/IgTgBot/blob/82090743ad0f64e4856a63e108fd40cc21893476/bot.py
[22:40:12] *** Joins: KevinX (~KevinX@user/KevinX)
[22:40:42] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[22:40:45] <teut> you can use a dict for emojis
[22:41:05] *** Joins: alienhead (~solas@user/alienhead)
[22:41:06] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[22:41:14] <teut> or a dataclass, whatever you prefer
[22:41:31] <MiguelX413> teut: true
[22:41:32] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[22:41:43] <MiguelX413> i'm very happy with how i've reorganized the code
[22:41:58] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:42:28] <teut> https://github.com/MiguelX413/IgTgBot/blob/82090743ad0f64e4856a63e108fd40cc21893476/bot.py#L167
[22:42:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:42:51] <ChrisWarrick> patchie: it might auto-update, and that’s not always a great thing. There are also some (minor) limitations in the Microsoft Store version.
[22:42:52] <teut> this thing should be caption = doSomeThing()
[22:42:54] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[22:43:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:43:46] <MiguelX413> teut: i intend to append to caption
[22:44:08] <patchie> ChrisWarrick: Ah, ok. So then i will continue to do it without ms store then :P hehe. i was just afraid that i was missing out on some functionality
[22:44:13] <teut> I would have used a function for that
[22:44:16] <ChrisWarrick> MiguelX413: perhaps calling len(str.encode) will be faster than what you’re doing in utf16len?
[22:44:25] <teut> I dont know what are you concatenating
[22:44:51] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[22:44:54] <teut> i m just suggesting things from clean coders
[22:45:20] <patchie> ChrisWarrick: Do you use VScode? Do you know if there is any auto update feature or manual update feature there? (i understand that auto update can break some code of course, but i like living on the edge...cutting edge)
[22:45:28] <MiguelX413> is += not the recommended way to add onto a string?
[22:45:30] <ChrisWarrick> patchie: don’t auto-update your python
[22:45:32] <MiguelX413> ChrisWarrick: I can try it
[22:45:45] <SnoopJ> patchie, VSCode's update functionality is pretty decent, if you're asking about the editor itself.
[22:46:01] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[22:46:13] <ChrisWarrick> MiguelX413: I’d also recommend an abstraction over MessageEntity that calls utf16len yourself
[22:46:13] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Excess Flood)
[22:49:00] <patchie> SnoopJ: Yeah, i love it! but i would love even more if i could press a button, and that it could install the last version of python for me as well, and auto install libraries i need when i need them for example.
[22:49:37] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[22:49:51] *** Quits: Speed2u (Speed2u@bnc.speed2u.nu) (Quit: ZNC - https://znc.in)
[22:49:52] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:50:08] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[22:50:27] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[22:50:27] <SnoopJ> patchie, are you familiar with conda? It has functionality that may meet your needs. Not sure about GUI integrations for it, but there may be a VSCode extension for it or somesuch.
[22:50:33] <MiguelX413> ChrisWarrick: the .encode() results in a different result
[22:50:48] *** Joins: slav0nic (slav0nic@python.su)
[22:50:57] <ChrisWarrick> MiguelX413: divide it by two
[22:51:10] <patchie> SnoopJ: Yeah, tested conda some time ago, but i felt like i lost control :P
[22:51:17] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[22:51:22] <MiguelX413> ChrisWarrick: it still yields something else
[22:51:22] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[22:51:32] <SnoopJ> patchie, well, automagic updating is basically "I want my system to be out of control"
[22:51:37] <ChrisWarrick> MiguelX413: that’s strange, in what case is the result different?
[22:51:49] <ChrisWarrick> MiguelX413: (you’re encoding with utf-16, right?)
[22:52:01] <InPhase> SnoopJ: The term "conda hell" gets used a lot where I work, as in the usage example, "I was stuck in conda hell for the past 2 days".
[22:52:04] <patchie> SnoopJ: Good point. maybe i really dont want the automagic if i had it. hehe
[22:52:11] <MiguelX413> ChrisWarrick: .encode('utf16')?
[22:52:17] <ChrisWarrick> yes
[22:52:28] <SnoopJ> InPhase, I never really had a use-case that justified it all that much
[22:52:33] <ChrisWarrick> (or do you need to be precise with 'utf-16le'?)
[22:52:41] *** Joins: dez (uid92154@user/dez)
[22:53:36] *** Joins: Speed2u (~Speed2u@bnc.speed2u.nu)
[22:54:04] <patchie> SnoopJ: btw, do you know a good way to use environments in vscode? 5 years ago i used "virtual env wrapper". But i have only used it on linux machines. But now as i am developing on windows with vscode, i would like to set it up in command mode, but switch between them in GUI mode or similar.
[22:54:24] <patchie> SnoopJ: Maybe there is any good plugins or such that you know about?
[22:54:25] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[22:54:48] <SnoopJ> patchie, the official Python extension is somewhat decent at it, but I don't like my venvs to be managed by my text editor.
[22:55:15] * SnoopJ doesn't use many of the VSCode features that aren't editing text
[22:56:12] <patchie> ah, why not? feel you lose control? :P
[22:56:18] *** Quits: alienhead (~solas@user/alienhead) (Ping timeout: 272 seconds)
[22:56:19] <SnoopJ> they solve problems that I don't have
[22:56:23] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:56:47] <patchie> SnoopJ: Yeah, true. But if it makes life easier while you feel you are still in control, then its great anyways.
[22:56:49] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:24bd:c613:365b:5043)
[22:57:25] <SnoopJ> if you're saying "other people like those tools" then I agree
[22:57:53] <patchie> its like when i got my Tesla. It opens my door when i am close to the door, and when i press the break pedal, it closes the door. It seems like something you never need, but when you have your laptop in a bag, or are shopping, etc.. you always have something in your hands. its just great..
[22:58:10] * SnoopJ bites his tongue
[22:58:30] <patchie> hehe :P
[22:58:46] *** Quits: rsx (~dummy@ppp-188-174-140-207.dynamic.mnet-online.de) (Quit: rsx)
[22:59:03] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Quit: Leaving.)
[22:59:12] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:a088:8a8f:b0d:82cf) (Quit: Textual IRC Client: www.textualapp.com)
[22:59:13] *** Joins: KevinX (~KevinX@user/KevinX)
[23:00:45] *** Joins: RougeR (~rougex250@user/rouger)
[23:00:55] *** Joins: vurr (~seymon@85.253.80.185.cable.starman.ee)
[23:01:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:02:24] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:02:42] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 256 seconds)
[23:02:55] <RougeR> question: should pypi packages pin their requirements or allow some flexibility
[23:03:20] <RougeR> i.e flask~=2.0.0 vs flask==2.0.1
[23:03:29] <supakeen_test> very dependent on the programmer and the package in question
[23:04:03] <ChrisWarrick> RougeR: if you’re a library, == is terrible for your users
[23:04:06] <RougeR> have a look see what you think
[23:04:07] <RougeR> https://github.com/ovh/celery-director/pull/128
[23:04:15] <RougeR> ChrisWarrick, as a user of the package that is what im finding
[23:04:23] <supakeen_test> libraries generally don't pin all that much aside from maybe major version
[23:04:34] <RougeR> I would rather allow some flexibiity within a minor version
[23:04:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:04:50] <ChrisWarrick> RougeR: that doesn’t look like a library to me
[23:04:57] <RougeR> its a package
[23:05:05] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Quit: wisep__)
[23:05:08] <grym> RougeR: everything can be a package
[23:05:15] <RougeR> okay a public pypi package
[23:05:21] <ChrisWarrick> RougeR: still not a library
[23:05:21] <grym> RougeR: everything can be a public pypi package
[23:05:50] <RougeR> module?
[23:05:55] <RougeR> its not a library no
[23:05:55] <grym> that's a file
[23:06:04] <grym> (usually)
[23:06:06] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:06:12] <RougeR> https://github.com/ovh/celery-director
[23:06:14] <ChrisWarrick> RougeR: it’s a final product, in which pinned versions make sense
[23:06:40] <RougeR> https://github.com/pallets/flask/blob/main/setup.py
[23:06:44] <RougeR> flask doesnt?
[23:07:00] <ChrisWarrick> RougeR: ?
[23:07:31] <RougeR> I dont understand why this package differs from something like flask
[23:08:27] <ChrisWarrick> RougeR: flask is a library you extend with your code and which you might integrate with other libraries
[23:08:37] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:08:46] <RougeR> This library is the same?
[23:08:52] <ChrisWarrick> RougeR: this director thing, while you do import it, it’s more of a finished ready-made thing that you merely extend
[23:08:52] <RougeR> Im integrating it with my codebase
[23:10:37] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Quit: ZNC - http://znc.in)
[23:11:05] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[23:12:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[23:14:12] *** Quits: elink (~elink@user/elink) (Ping timeout: 240 seconds)
[23:14:17] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[23:14:17] *** Quits: relink (~elink@user/elink) (Ping timeout: 240 seconds)
[23:14:17] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[23:14:26] <ChrisWarrick> well, they might not support this scenario much
[23:16:09] <RougeR> they definetly do, its very much a framework like flask for building applications
[23:16:28] <RougeR> the whole concept is built to be extendable
[23:17:02] <RougeR> ill probably end up pinning them for this PR and continuing on my fork once i can get approval
[23:18:57] *** Quits: TML (~tml@user/tml) (Ping timeout: 240 seconds)
[23:19:11] *** Joins: dre (~dre@2001:8003:c932:c301:403f:9f61:c28b:c314)
[23:19:42] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[23:19:56] *** Quits: timrohde (~timrohde@97-118-240-243.hlrn.qwest.net) (Remote host closed the connection)
[23:20:10] *** Joins: timrohde (~timrohde@97-118-240-243.hlrn.qwest.net)
[23:20:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[23:20:45] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Remote host closed the connection)
[23:21:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[23:21:22] <MiguelX413> ChrisWarrick: UTF-16-le did the job for me
[23:21:24] <ChrisWarrick> are you integrating it with an entire app? Or just your task definitions?
[23:21:30] <MiguelX413> also, what did you mean by abstraction?
[23:21:35] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[23:21:39] *** Quits: zerok (~zerok@user/zerok) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:21:51] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[23:22:27] *** Joins: zerok (~zerok@user/zerok)
[23:22:51] <ChrisWarrick> MiguelX413: in this case, a function that does the calculations and creates a MessageEntity
[23:22:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:23:24] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[23:23:28] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[23:23:32] <MiguelX413> ChrisWarrick: I see what you mean! that would certainly make the code less repetitive
[23:23:46] <RougeR> ChrisWarrick, an entire application with a lot of additional celery logic
[23:24:01] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[23:24:23] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:24:35] <ChrisWarrick> RougeR: I’d be wary of that
[23:25:08] <ChrisWarrick> RougeR: the project doesn’t seem designed for integrations of this kind
[23:26:33] *** Joins: magla (~gelignite@55d4843f.access.ecotel.net)
[23:27:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:28:06] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[23:28:12] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:29:56] *** Lord_of_Life_ is now known as Lord_of_Life
[23:30:28] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Ping timeout: 256 seconds)
[23:30:36] *** Quits: wac (~wac@user/wac) (Quit: Textual IRC Client: www.textualapp.com)
[23:30:36] *** Joins: crashrep (~crashrep@user/crashrep)
[23:30:46] *** Quits: withered1dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[23:31:02] *** Joins: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:31:09] *** withered_dragon is now known as squirrel_in_the_
[23:31:24] *** squirrel_in_the_ is now known as attic_squirrel
[23:31:33] <RougeR> ChrisWarrick, thats exactly what i thought :)
[23:31:46] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[23:31:56] <RougeR> my manager is trying to force me to use it without forking though...its nigh unworkable
[23:32:18] *** Joins: hams (~hams@user/hams)
[23:32:20] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[23:32:23] *** Joins: jazzy (~jaziz@user/jaziz)
[23:32:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:32:48] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[23:32:53] *** Joins: \mSg (mSg@user/msg/x-0285936)
[23:32:55] <RougeR> im going to pin those deps for now and push a commmit
[23:33:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:33:08] *** Joins: heldwin (~heldwin@user/asmodee)
[23:34:18] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[23:34:27] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[23:34:27] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Read error: Connection reset by peer)
[23:35:05] <ChrisWarrick> managers forcing technical decisions are the worst
[23:35:28] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[23:35:39] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[23:36:06] *** Joins: xkuru (~xkuru@user/xkuru)
[23:36:26] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:36:34] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[23:36:39] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[23:37:24] *** Quits: gopar (~gopar@ip70-189-75-162.ok.ok.cox.net) (Remote host closed the connection)
[23:39:32] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[23:39:55] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[23:40:36] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[23:40:45] *** Joins: gopar (~gopar@ip70-189-75-162.ok.ok.cox.net)
[23:41:47] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Quit: ZNC - https://znc.in)
[23:42:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:43:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:43:43] *** Quits: devish9 (~devish@54-240-196-184.amazon.com) (Quit: Client closed)
[23:44:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:45:26] *** Joins: TML (~tml@user/tml)
[23:45:53] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[23:47:39] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[23:47:39] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[23:48:30] *** Joins: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[23:49:17] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[23:49:30] *** Joins: zmotaj (~zmotaj@86.61.80.191)
[23:49:30] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[23:49:30] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[23:49:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:50:00] <pyeveryt_> hi if you have familiarity with pytorch data loader could you please help me with this https://stackoverflow.com/questions/71430015/accessing-the-filename-as-well-as-prediction-for-each-of-images-inside-the-test ?
[23:53:31] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[23:53:52] <RougeR> ChrisWarrick, yeah its driving me up the wall a bit.
[23:55:27] <RougeR> Dont get me wrong I like the idea of working on open source stuff, but we need to make big changes and move quickly. Its probably only going to work without forking if we are among the project maintainers and actively develope the project in a way which is heavily customizable
[23:57:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.4)
[23:57:55] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:57:55] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[23:59:15] *** Quits: Staunch (~Staunch@150.93.99.34.bc.googleusercontent.com) (Remote host closed the connection)
