[00:07:55] <tokie> Zipheir: yeah, i got that when reading a several page rant he wrote on the computing industry
[00:08:37] <tokie> i was kinda confused on some stuff he wrote on how to construct environments for lambdas and then i realized he didn't implement set! 
[00:09:19] <Zipheir> That does simplify everything.
[00:09:41] <Zipheir> I think Scheme without set! would be a very good thing.
[00:09:57] <sham1> Another neat thing would be linear scheme
[00:10:01] <sham1> I think that exists though
[00:10:28] <Zipheir> Yeah, look for "lively linear lisp".
[00:10:40] <Zipheir> That *only* has linear types, though.
[00:13:42] <dpk> sketch for how to implement variable transformers in Chibi:
[00:14:11] <dpk> in sexp.h, procedures (not macros) get a new flag queried by sexp_variable_transformer_p. there's a convenient char flags entry on procedures already and only two bits of it are used, so it fits nicely there
[00:18:13] <dpk> in analyze in eval.c, in the section if (sexp_idp(x)), call sexp_macrop on the identifier, and if it's true and the macro's procedure has sexp_variable_transformer_p set, reset x to the expansion of the macro (as shown in the previous section of analyze) and goto loop. otherwise call analyze_var_ref as at present (this means macros that haven't explicitly been made variable-transformers will still complain about invalid use of syntax as value)
[00:19:46] <dpk> analyze_set also needs to be changed so that variable transformers can be used in set! expressions, but i think there's currently a Chibi bug there which you'd need to fix
[00:20:24] <dpk> finally, add a new make-variable-transformer opcode which simply takes a procedure as its one argument and returns a copy of it with the variable transformer flag set to 1
[00:20:42] <dpk> right, i've told you how to do it, someone do this for me before i go mad and do it myself
[00:24:14] <dpk> (i have a long train ride tomorrow so i might go mad first)
[00:24:48] <dpk> (also this is easier to test than the string-ref-cache, the reliable benchmarking of which is proving rather tricky)
[00:36:26] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:39:57] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[00:42:09] *** Joins: aeth (~aeth@user/aeth)
[00:56:49] *** Quits: rito_ (~rito_gh@45.112.243.151) (Quit: Leaving)
[00:57:59] <dpk> oh wait, the sexp_variable_transformer_p check would only be in set!. so to get useful error messages from most macros it'd be better to change the existing definitions of er-macro-transformer and [r]sc-macro-transformer to throw errors when the macro is invoked on a non-pair, and maybe introduce versions with starred names to allow writing identifier macros with them
[01:05:26] *** Quits: sdu (~doo@185.44.146.214) (Quit: leaving)
[01:06:07] *** Quits: karlosz (~karlosz@136.56.98.53) (Quit: karlosz)
[01:10:17] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[01:22:45] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:23:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:27:29] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Client Quit)
[01:27:46] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:30:30] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
[01:57:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[02:04:09] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[02:04:27] *** Joins: m455 (~m455@user/m455)
[02:07:41] <amazigh> rudybot: tips: make some noise, a schemer will chime in and tell you got it wrong
[02:08:31] <amazigh> ?!
[02:08:32] <rudybot> amazigh: I did not read seasoned schemer, stay a while, someone else will chime in
[02:08:58] <amazigh> rudybot: I speak too much! That is what you are trying to tell me?!
[02:09:51] <rudybot> amazigh: I'm pretty sure linguists aren't going around telling anyone what proper Swahili is. Linguists have a lot more fun cataloguing existing languages than telling people how to speak. Telling people how to speak their language is like trying to tell the Earth how to properly attract massive bodies.
[02:11:45] <amazigh> rudybot: who needs bodies? When we can have our minds stored eternal in the big cosmos of the cloud?
[02:12:13] <rudybot> amazigh: I've also been plowing through Cosmos, the old Carl Sagan series. Which I managed to miss back when it was new.
[02:12:29] <amazigh> rudybot: we all do rudybot, we all do.
[02:12:33] <rudybot> amazigh: We need to move all fsbot's features into rudybot since he is clearly more webscale
[02:13:00] <amazigh> rudybot: fiy
[02:13:00] <rudybot> amazigh: fiy, pathogen lives along vim-addon-manager and vundle
[02:13:15] <amazigh> rudybot: that is fyi not fiy
[02:13:19] <rudybot> amazigh: fiy, pathogen lives along vim-addon-manager and vundle
[02:13:48] <amazigh> rudybot: do not speak of vim... someone might wake up.
[02:13:51] <rudybot> amazigh: I'll need to wait till americans wake up, they always speak funny :)
[02:13:58] <amazigh> ahah
[02:17:17] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[02:17:37] *** Joins: robin (~robin@user/terpri)
[02:25:28] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[02:25:48] *** Joins: m455 (~m455@user/m455)
[02:27:19] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:27:38] <dpk> step one done. SEE, I'M GOING MAD https://github.com/dpk/chibi-scheme/commit/770b4d367bcff6ca91bedac40007177a4ec7541e
[02:27:49] *** Joins: m455 (~m455@user/m455)
[02:28:35] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:28:57] *** Joins: m455 (~m455@user/m455)
[02:29:27] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:30:25] *** Joins: m455 (~m455@user/m455)
[02:32:31] <dpk> already works with (chibi syntax-case): (define-syntax foo (lambda (stx) (syntax-case stx () ((_ ...) #''operator) (_ #''operand)))) works as expected
[02:33:21] <dpk> all the built-in syntax forms give nonsensical errors about their names not being pairs if you put them in operand position, but i'll fix that
[02:34:14] * leah2 wishes to extend the chibi scheme reader :[
[02:34:23] <dpk> oh, good fucking luck with that, hah
[02:34:26] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:34:34] <dpk> hand-hacked recursive-descent parser … in C
[02:34:39] <leah2> guess i need to replace it completely
[02:35:12] *** Joins: m455 (~m455@user/m455)
[02:37:55] <amazigh> what would a extended reader do?
[02:41:37] <dpk> argh. someone remind me how i completely undo a commit in Git (not revert, which creates a new commit, but actually set the branch to point back to the last commit because i'm an idiot and put the commit on the wrong branch)
[02:42:31] <leah2> amazigh: i want :symbols or #:symbols at least
[02:42:35] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[02:42:42] <elly> dpk: do you also want to reset the state of the files on disk?
[02:42:55] *** Joins: m455 (~m455@user/m455)
[02:43:02] <elly> if no: git reset --mixed; if yes: git reset --hard
[02:43:04] <amazigh> dpk: try git undo
[02:43:08] <dpk> leah2: ah, i was thinking of adding those myself
[02:43:23] <dpk> elly: thanks, the latter worked
[02:43:35] <dpk> (no state on disk had changed, but never mind)
[02:44:10] <leah2> dpk: then i'll just wait, i have enough things to do anyway :3
[02:44:30] <dpk> haha, yes, if you wait long enough, i will eventually add every feature to Chibi
[02:44:50] <dpk> possibly including Larry Wall's * operator
[02:44:54] <amazigh> I am the only (mostly) bragging about my projects, please tell!
[02:44:56] <leah2> ars longæ vita brevis
[02:45:10] <leah2> dpk: for anonymous functions?
[02:46:18] <dpk> leah2: http://groups.google.com/groups?selm=1991Nov7.200504.25280@netlabs.com, paragraph at the bottom
[02:46:35] <leah2> 1991 is too soon :D
[02:46:43] <leah2> aha :D
[02:46:47] <leah2> didnt make it into raku ;)
[02:47:45] <Franciman> Vita brevis, ars longa, occasio praeceps, experimentum periculosum, iudicium difficile
[02:47:49] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[02:48:10] *** Joins: m455 (~m455@user/m455)
[02:48:21] <amazigh> That is a quote of ManDay
[02:48:56] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:49:15] *** Joins: seninha (~seninha@user/seninha)
[02:49:17] *** Joins: m455 (~m455@user/m455)
[02:50:42] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:52:11] *** Joins: m455 (~m455@user/m455)
[02:53:10] *** Quits: m455 (~m455@user/m455) (Client Quit)
[02:53:34] *** Joins: m455 (~m455@user/m455)
[02:57:47] *** Joins: TCZ (~tcz@91.150.178.124)
[03:00:25] <amazigh> s/of/for/
[03:01:51] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[03:06:46] <dpk> leah2: fwiw you should probably opt for #:keywords and not :keywords for R7RS compatibility. :keyword is meant to be read as a symbol according to the RnRS standards, and SRFI 42 (at least, and possibly others) depend on that. (same consideration applies to bare postfix colon, and code actually in the Chibi standard library depends on that)
[03:07:42] <leah2> well i can ignore : ;)
[03:10:44] *** Joins: m455 (~m455@user/m455)
[03:14:43] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[03:15:02] *** Quits: m455 (~m455@user/m455) (Client Quit)
[03:15:20] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[03:31:00] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:35:40] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[03:38:50] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[04:11:23] *** Joins: karlosz (~karlosz@136.56.98.53)
[04:17:18] *** ormaaj is now known as jaamro
[04:30:21] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[04:32:05] *** Joins: aeth (~aeth@user/aeth)
[04:36:29] *** Joins: m455 (~m455@user/m455)
[04:41:15] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 250 seconds)
[04:45:17] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[04:45:35] *** Joins: m455 (~m455@user/m455)
[04:54:27] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[04:55:23] *** Joins: m455 (~m455@user/m455)
[04:55:59] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[04:57:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[04:57:49] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[04:59:56] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[05:07:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[05:24:59] *** Joins: seninha (~seninha@user/seninha)
[05:25:37] *** Quits: rgherdt_ (~rgherdt@ip5f5af447.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[05:26:22] *** Joins: rgherdt_ (~rgherdt@ip5f5af447.dynamic.kabel-deutschland.de)
[05:27:11] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[05:42:32] *** Quits: schulze (~schulze@dynamic-077-000-046-141.77.0.pool.telefonica.de) (Ping timeout: 240 seconds)
[05:48:15] *** Joins: taylan (~taylan@user/taylan)
[05:51:46] *** Quits: taylan (~taylan@user/taylan) (Client Quit)
[05:57:20] *** Joins: taylan (~taylan@user/taylan)
[06:00:27] *** Quits: taylan (~taylan@user/taylan) (Read error: Connection reset by peer)
[06:03:58] *** Joins: taylan (~taylan@user/taylan)
[06:05:03] *** Joins: nalaginrut (~nalaginru@183.11.131.234)
[06:05:43] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[06:06:12] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:16:12] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[06:32:42] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:35:35] *** Quits: nalaginrut (~nalaginru@183.11.131.234) (Ping timeout: 256 seconds)
[06:36:08] *** Joins: nalaginrut (~nalaginru@183.11.131.234)
[06:37:28] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:48:10] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[06:48:27] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:51:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:55:28] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[06:56:04] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 268 seconds)
[07:58:43] *** Joins: klovett (~klovett@107.115.32.130)
[08:01:37] *** Quits: klovett_ (~klovett@107.115.32.130) (Ping timeout: 240 seconds)
[08:08:17] *** jaamro is now known as ormaaj
[08:17:57] *** Quits: DKordic (~DKordic@178-222-18-232.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[08:39:47] <Spawns_Carpeting> has anyone here worked on their own scheme bytecode compiler/interpreter or any other form of scheme?
[08:40:20] <Spawns_Carpeting> i decided to implement the "small" subset of the scheme r7rs spec for my language instead of just doing random stuff
[08:40:54] <Spawns_Carpeting> so I am rewriting it from scratch (again). I am a little confused about how to implementing closures though if anyone has any pointers on that
[08:43:34] <Spawns_Carpeting> really any general information about how the environments work and how captures are implemented 
[08:44:33] *** Joins: notzmv (~zmv@user/notzmv)
[09:08:57] *** Joins: taiju (~taiju@166.140.5.103.wi-fi.wi2.ne.jp)
[09:12:26] *** Quits: jao (~jao@211.68.17.95.dynamic.jazztel.es) (Ping timeout: 260 seconds)
[09:15:04] *** Quits: taiju (~taiju@166.140.5.103.wi-fi.wi2.ne.jp) (Read error: Connection reset by peer)
[09:17:08] *** Joins: taiju (~taiju@166.140.5.103.wi-fi.wi2.ne.jp)
[09:17:30] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[09:18:16] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[09:18:58] *** Quits: taiju (~taiju@166.140.5.103.wi-fi.wi2.ne.jp) (Read error: Connection reset by peer)
[09:19:49] *** Joins: taiju (~taiju@166.140.5.103.wi-fi.wi2.ne.jp)
[09:24:02] *** Quits: taiju (~taiju@166.140.5.103.wi-fi.wi2.ne.jp) (Ping timeout: 240 seconds)
[09:40:51] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[09:41:28] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[09:42:32] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[09:49:49] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:50:46] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[10:04:51] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[10:05:55] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[10:06:14] *** Joins: taiju (~taiju@p236053-ipngn200203fukui.fukui.ocn.ne.jp)
[10:16:44] *** Joins: klovett_ (~klovett@107.115.32.130)
[10:17:58] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[10:19:25] *** Quits: klovett (~klovett@107.115.32.130) (Ping timeout: 256 seconds)
[10:24:31] *** Quits: taiju (~taiju@p236053-ipngn200203fukui.fukui.ocn.ne.jp) (Ping timeout: 256 seconds)
[10:25:42] *** Joins: taiju (~taiju@p236053-ipngn200203fukui.fukui.ocn.ne.jp)
[10:35:00] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:37:39] <lockywolf> Spawns_Carpeting, sicp chapter 4/5?
[10:37:58] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[10:47:10] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[11:02:32] *** Joins: sdu (~doo@185.44.146.214)
[11:13:18] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[11:19:57] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Ping timeout: 240 seconds)
[11:23:11] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[11:26:47] *** Quits: taiju (~taiju@p236053-ipngn200203fukui.fukui.ocn.ne.jp) (Ping timeout: 268 seconds)
[11:27:16] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[11:27:18] *** Joins: taiju (~taiju@p236053-ipngn200203fukui.fukui.ocn.ne.jp)
[11:28:00] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:28:01] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[11:31:57] *** Quits: taiju (~taiju@p236053-ipngn200203fukui.fukui.ocn.ne.jp) (Ping timeout: 256 seconds)
[11:33:57] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Ping timeout: 240 seconds)
[11:37:48] *** Joins: TCZ (~tcz@91.150.178.124)
[11:44:44] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[11:49:35] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[11:50:22] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:50:36] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[11:51:23] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[12:00:49] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[12:01:55] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[12:02:04] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[12:05:32] *** Quits: karlosz (~karlosz@136.56.98.53) (Quit: karlosz)
[12:25:56] *** Joins: TCZ (~tcz@91.150.178.124)
[12:32:05] *** Joins: klovett (~klovett@107.115.32.130)
[12:34:22] *** Parts: TCZ (~tcz@91.150.178.124) ()
[12:34:37] *** Quits: klovett_ (~klovett@107.115.32.130) (Ping timeout: 268 seconds)
[12:42:47] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:00:25] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:12:45] *** Joins: schulze (~schulze@dynamic-077-010-092-254.77.10.pool.telefonica.de)
[13:17:38] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[13:22:55] *** Joins: seninha (~seninha@user/seninha)
[13:23:13] *** Joins: Oshawott (~archenoth@2604:3d09:681:f00:cce1:27eb:b1e6:5092)
[13:26:37] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:38e8:622c:40fd:396f) (Ping timeout: 240 seconds)
[13:32:08] <dpk> and behold, it was even easier than i thought it would be https://github.com/dpk/chibi-scheme/tree/identifier-macros
[13:32:23] <dpk> now i have five hours still to go on this train and no idea what to do with them
[13:32:34] <dpk> well, i need to update the Chibi docs a bit
[13:33:04] <dpk> to reflect þe new additions
[13:34:49] <sham1> I appreciate the use of þe
[13:38:02] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:44:18] <Franciman> Spawns_Carpeting: awesome project
[13:44:34] <Franciman> implementing closure efficiently can be tricky, so don't give up
[13:44:41] <Franciman> it's normal that it seems tricky
[13:47:36] <Franciman> usually the core idea is the following:
[13:47:49] <Franciman> you want to take the captured variables and copy them to the heap
[13:48:11] <Franciman> and pack them with the closure. So you can access them
[13:48:52] <Franciman> now the thing is: you want to optimize this as much as you can
[13:56:18] <amazigh> hello all :)
[14:00:46] <sham1> Hullo
[14:06:49] <dpk> well, i appropriately updated the docs and there are still 4½ hours of train journey to go
[14:07:41] <amazigh> what are identifier macros? Any doc you recommend?
[14:07:44] <sham1> You could always try sleeping in the train
[14:09:13] <dpk> amazigh: https://www.gnu.org/software/guile/manual/html_node/Identifier-Macros.html explains
[14:11:39] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[14:18:31] *** Joins: TCZ (~tcz@91.150.178.124)
[14:19:14] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[14:25:11] <amazigh> tx
[14:25:39] <amazigh> rewriting red and tangerine in terms of r7rs-small is too much work #_#
[14:27:11] <dpk> the SRFI sample implementations will get you most of the way there
[14:28:08] <amazigh> yep, I have those already
[14:28:11] <amazigh> but for some reason I wanted to create "clean" implementations
[14:28:21] <amazigh> as if the existing implementations are not clean
[15:03:16] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[15:04:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:28:15] *** Quits: schulze (~schulze@dynamic-077-010-092-254.77.10.pool.telefonica.de) (Ping timeout: 256 seconds)
[15:29:07] *** Joins: frost (~frost@user/frost)
[15:35:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[15:43:32] <dpk> so, Chibi now has a complete implementation of syntax-case and identifier-syntax (albeit not 100% conformant, mainly bound-identifier=? is wrong in some small number of cases iirc), meaning i think the last holdout is … Chicken
[15:44:51] <dpk> among maintained R7RS implementations
[15:46:13] <dpk> oh, Gauche and Cyclone only have explicit renaming
[15:47:54] <dpk> MIT doesn't have syntax-case, but since it has syntactic closures it should be possible to adapt Chibi's syntax-case implementation
[15:50:43] *** Joins: schulze (~schulze@dynamic-077-001-253-132.77.1.pool.telefonica.de)
[15:53:26] *** Joins: s-liao (~s-liao@101.86.96.21)
[15:56:54] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[16:11:35] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[16:37:46] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:41:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:43:25] <amazigh> great
[16:46:17] <amazigh> do we agree that partition from srfi-1 could be implemented using a tail call?
[16:46:26] <amazigh> Here is the implementation I have a this time: http://ix.io/3K2h
[16:53:20] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:1bfa:dbcd:377e:fbfb)
[16:53:54] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
[17:15:21] *** Quits: jao (~jao@211.68.17.95.dynamic.jazztel.es) (Ping timeout: 245 seconds)
[17:19:40] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[17:34:57] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[17:47:57] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[17:52:12] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[18:01:30] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[18:10:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081)
[18:10:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081) (Changing host)
[18:10:16] *** Joins: skapata (~Skapata@user/skapata)
[18:41:17] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[18:48:54] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[18:49:11] *** Joins: m455 (~m455@user/m455)
[18:55:04] <amazigh> three done
[18:55:06] <amazigh> one to go
[18:55:24] <amazigh> then I will be able to make the faux-texte generator working again
[18:55:46] <amazigh> remains (scheme list)
[19:01:17] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[19:15:21] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:1bfa:dbcd:377e:fbfb) (Ping timeout: 256 seconds)
[19:21:06] *** Joins: mdhughes_ (~mdhughes@user/mdhughes)
[19:24:37] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Ping timeout: 240 seconds)
[19:35:23] *** Quits: sdu (~doo@185.44.146.214) (Quit: leaving)
[19:43:16] *** Joins: thevishy (~Nishant@2405:201:f005:c007:2dcc:1488:1871:6935)
[19:48:20] *** Joins: sdu (~doo@185.44.146.214)
[19:52:42] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[20:03:19] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[20:11:43] <amazigh> FYI gambit is preparing a release...
[20:16:04] *** Joins: Darkcoal (~user@167.86.137.72)
[20:16:22] *** Quits: Darkcoal (~user@167.86.137.72) (Client Quit)
[20:16:39] *** Joins: Darkcoal (~user@167.86.137.72)
[20:25:08] <amazigh> here is the explanation for the grow the stack recurrence: https://git.sr.ht/~amirouche/ruse-scheme-libraries/tree/main/src/srfi/srfi-1/srfi-1.body.scm#L72-84
[20:25:37] <amazigh> tl;dr: it is to avoid the reverse
[20:37:13] *** Quits: Darkcoal (~user@167.86.137.72) (Quit: Darkcoal)
[20:37:27] *** Joins: Darkcoal (~user@167.86.137.72)
[20:37:29] *** Quits: Darkcoal (~user@167.86.137.72) (Client Quit)
[20:37:39] *** Joins: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[20:48:38] <amazigh> faux texte pour la victoire :)
[20:49:21] <Zipheir> PLV!
[20:51:00] <Zipheir> The Great Quux raised a very interesting similar point about recursion in one of his talks.  Specifically, he says "the accumulator has got to go", in essence advocating for recursion over tail-recursion.
[20:51:29] <Zipheir> (Well, at least the "tupling trick" beloved of functional programming.)
[20:51:51] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[20:52:16] <sham1> Recursion over tail recursion? Seems like someone wants to blow up the stack
[20:52:37] <Zipheir> "Don't iterate, recurse!" is one of the main points of https://www.youtube.com/watch?v=dPK6t7echuA
[20:52:56] <sham1> I see that title. Seems like someone had a dig at "don't loop, iterate"
[20:52:59] <Zipheir> Context is important: Steele was talking about massively parallel systems.
[20:54:30] <Zipheir> i.e. where you don't want every partial result being stored in some particular cell of memory, IIUC.
[20:55:32] *** Quits: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 240 seconds)
[20:55:55] <amazigh> where we go there is no stack :o)
[20:56:41] <amazigh> done, scheme list is part of arew now.
[20:56:51] <Zipheir> A popular refrain among people on ##c used to be "there is no stack".
[20:57:02] <amazigh> why?
[20:57:23] <amazigh> stackoverflow hence there is stack
[20:57:31] *** Joins: Darkcoal (~user@167.86.137.72)
[20:57:40] <amazigh> that is seems like fake news to me
[20:58:07] <Zipheir> The C standards say nothing about a stack, but there is a ton of folklore/popular wisdom in C programming about how "the stack" behaves.
[20:58:51] <Zipheir> It's like recursion: contra many explanations, there isn't necessarily a frame stack involved.
[20:59:06] <Zipheir> Er, call stack.
[21:00:52] *** Joins: karlosz (~karlosz@136.56.98.53)
[21:00:55] <edgar-rft> I hope there is no call stuck involved :-)
[21:01:06] <Zipheir> In any case, I don't think that's the best way to think about, once you've grasped recursion.
[21:02:21] <Zipheir> I'm reminded of Hofstader's brief introduction of undelimited continuations in GEB's Little Harmonic Labyrinth.
[21:06:42] <sham1> Even if you have a bunch of activation records in the heap ready to be garbage collected, I'm sorry, that's still a stack. Even if it's all just continuations
[21:08:36] <Zipheir> Sure.
[21:09:42] <Zipheir> I'm just arguing that thinking too closely in terms of a specific implementation can lead to trouble.
[21:09:49] <sham1> Fair enough
[21:10:15] <amazigh> yeah, in this regard, macro look like implementation specifics.
[21:10:37] <amazigh> (unpopular opinion)
[21:10:53] <Zipheir> What macro?
[21:11:03] <amazigh> macros = syntax transformers
[21:11:40] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[21:11:40] <sham1> What about them
[21:11:59] <sham1> What about them is implementation specifics. Well, aside from the fact that some implementations might have more novel macro systems than others
[21:14:17] *** Quits: karlosz (~karlosz@136.56.98.53) (Quit: karlosz)
[21:26:33] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:36:14] *** mdhughes_ is now known as mdhughes
[22:08:20] *** Quits: thevishy (~Nishant@2405:201:f005:c007:2dcc:1488:1871:6935) (Quit: Leaving)
[22:11:44] *** Joins: karlosz (~karlosz@136.56.98.53)
[22:13:51] <amazigh> According to faux-texte "schemers are... of mainly academic interest"
[22:14:03] <amazigh> I truely believe it is sentient program.
[22:16:10] <amazigh> lol
[22:16:56] <amazigh> I back mostly back to the same position from one year or so x')
[22:17:57] <amazigh> except... arew is even more perrrrrrrrfect :)
[22:20:50] <sham1> Well makes sense. Scheme as a language has appeal for academics
[22:21:25] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[22:21:35] <sham1> And academics are often thought about by other academics
[22:21:36] *** Joins: madage (~madage@user/madage)
[22:21:40] <sham1> So it checks out
[22:23:26] <amazigh> :)
[22:23:31] <amazigh> I can rest now.
[22:23:38] <amazigh> 2021 was not wasted.
[22:25:32] <sham1> Just a day and like 3 hours and it'll be 2022 here where I live. It's both exciting and terrifying
[22:36:28] <edgar-rft> amazigh: only common lisp has rest, scheme still usues cdr :-)
[22:38:45] <sham1> Of course, (define rest cdr) and (define first car)
[22:42:21] <Zipheir> And then there are head and tail...
[22:43:50] <jrincayc> I haven't used common lisp in awhile.  What is its equivalent to say cddr?
[22:45:05] <sham1> cddr.
[22:45:22] <sham1> They have both first, second, third, fourth and so on, but they also have the car and cdr compositions
[22:45:44] <jrincayc> Ah, thanks.
[22:49:14] *** Joins: chronicler (~chronicle@2600:1702:be0:2f50:d201:7fa:7c04:17ea)
[22:56:21] *** Joins: livoreno (~livoreno@user/notzmv)
[22:56:28] *** Quits: chronicler (~chronicle@2600:1702:be0:2f50:d201:7fa:7c04:17ea) (Quit: Konversation terminated!)
[22:59:02] <mdhughes> There should be a macro bound to \d+(st|nd|th), that reads that numbered item from a list.
[22:59:25] <mdhughes> (0th '(1 2 3)) => 1, (1st '(1 2 3)) => 2, etc.
[22:59:31] <mdhughes> Isn't that nicer?
[23:00:29] <sham1> 1nd
[23:00:45] <mdhughes> Just has to map to (list-ref ls X)
[23:01:19] <mdhughes> Obviously I can write a more complex regex to match only correct suffixes, but it's fine.
[23:04:31] <amazigh> 1st is not identifier, sorry to kill the idea.
[23:04:54] <amazigh> if you make the reader even more complex aeth will not be happy
[23:05:04] <mdhughes> Is fine in Chez.
[23:07:12] <jrincayc> amazigh, well we could always try to get more peculiar identifiers in r8rs.
[23:08:20] <amazigh> There is the vertical bar trick
[23:09:38] <sham1> |0th| yeah
[23:11:28] <sham1> Although having 1st, 2nd and such for lists would be irritating because at that point either use some kind of a destructuring macro or pick a better data structure for indexed stuff
[23:12:41] <dpk> recursive procedures can be very intuitive to define; bending them to be tail recursive is trickier
[23:13:26] <sham1> And some problems are simply not able to be turned into tail-recursion easily, so no iterative solution either. You have to use stack
[23:14:02] * dpk notes ‘mandatory proper tail calls modulo cons’ for her list of things to do differently if we could design Scheme again from scratch
[23:14:34] <sham1> Oh, so force implementations to truly be "CONS shouldn't cons its arguments" or what
[23:18:30] <wasamasa> http://ix.io/3K6x
[23:19:10] <wasamasa> elisp allows that
[23:19:27] <wasamasa> it has 1+ and 1- after all
[23:21:05] <Zipheir> The further you get from lists, the harder switching between recursion and iteration gets.
[23:22:15] <Zipheir> Vector- or table-like structures aren't inductively defined, hence recursion is hard, and trees often can't be easily iterated over.
[23:22:53] <Zipheir> Er, they can be, sorry, it depends on what you're doing.
[23:28:55] <Zipheir> Oof, I have an arithmetic-heavy library with a function that is working on chibi and broken on CHICKEN.  Very odd.
[23:30:26] <mdhughes> wasamasa: +1, ready for standard.
[23:49:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[23:54:46] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
