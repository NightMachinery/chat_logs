[00:04:06] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:09:01] *** Quits: ano (~ano@user/ano) (Quit: ano)
[00:17:19] *** Joins: ano (~ano@user/ano)
[00:24:30] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr)
[00:39:09] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a)
[00:39:40] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a) (Client Quit)
[00:44:22] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[00:44:29] *** Joins: Techcable (~Techcable@user/Techcable)
[00:52:06] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:59:37] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[00:59:48] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[00:59:56] *** Quits: ubq323 (~ubq323@user/ubq323) (Quit: apioforms incurse)
[01:18:49] *** Quits: magla (~gelignite@d53678fd.access.ecotel.net) (Quit: Stay safe!)
[01:25:58] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:29] *** Quits: fcr (~fran@r186-48-1-0.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[01:42:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[01:44:10] *** Joins: fcr (~fran@r186-48-18-145.dialup.adsl.anteldata.net.uy)
[01:50:35] *** Joins: aead (~aead@pool-108-18-23-143.washdc.fios.verizon.net)
[01:51:01] *** Parts: aead (~aead@pool-108-18-23-143.washdc.fios.verizon.net) ()
[01:52:27] *** Joins: aead (~aead@user/aead)
[01:53:35] *** Quits: aead (~aead@user/aead) (Remote host closed the connection)
[01:54:30] *** Joins: aead (~aead@user/aead)
[02:59:33] <wauterboi> Say I want to be able to match digits with optional `_` separators. Valid input would be `1_000_000`, `1000`, and so on. The only restriction I'd like is that the first and last digit can't be an underscore. What's the best way to approach this given that lpeg is greedy?
[03:00:36] <wauterboi> `local unsigned_integer = digit ^ 1 * digit_or_separator ^ 0 * peg.B(digit)`
[03:00:43] <wauterboi> ^ this is what I'm currently doing
[03:17:56] *** Joins: fling_ (~fling@user/fling)
[03:18:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[03:20:48] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-122.2.247.pool.telefonica.de) (Quit: Leaving)
[03:24:07] *** fling_ is now known as fling
[03:33:21] *** Quits: pizdets_ (~pizdets@183.182.110.214) (Ping timeout: 256 seconds)
[03:34:07] *** Joins: pizdets (~pizdets@183.182.111.79)
[03:58:35] <daddy> I think you'll have to match the case of digit+digit_or_underscore*+digit *or* just a single digit. That might be the easiest way.
[04:01:49] <wauterboi> The thing I have works - I just wanted to make sure I wasn't going overboard with the setup
[04:02:30] <daddy> That's probably fine then
[04:05:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:10:25] *** Quits: bbielsa (sid76145@id-76145.lymington.irccloud.com) (Quit: Updating details, brb)
[04:10:33] *** Joins: brandonb (sid76145@id-76145.lymington.irccloud.com)
[04:45:14] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Quit: Disappeared in a puff of smoke)
[04:46:04] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[04:46:52] *** Joins: steev_ (~steev@de1.hashbang.sh)
[04:47:19] *** Quits: steev_ (~steev@de1.hashbang.sh) (Quit: leaving)
[04:55:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[05:04:01] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[05:07:01] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 245 seconds)
[05:07:20] *** Quits: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr) (Quit: bye)
[05:17:51] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:23:15] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[05:25:24] *** Joins: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp)
[05:30:19] *** Quits: aead (~aead@user/aead) (Ping timeout: 256 seconds)
[05:31:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:32:44] *** Joins: aead (~aead@user/aead)
[05:33:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:34:38] *** Joins: epony (epony@user/epony)
[05:44:35] *** Joins: R2robot (~R2robot@user/r2robot)
[05:53:52] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:43:18] *** Quits: ratchet_freak (~ratchetfr@ptr-82rtos349poudpsbc1v.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[06:51:21] *** Quits: jacky (~jacky@user/jackyalcine) (Ping timeout: 256 seconds)
[07:05:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:07:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:52:39] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[07:53:02] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6)
[08:01:05] *** Quits: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be) (Read error: Connection reset by peer)
[08:16:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[08:22:34] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:42:58] *** Joins: red_ (~red@124.123.180.227)
[09:45:55] *** Joins: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net)
[09:47:51] <ac_slater> hey guys, sorry if this is offtopic. I'm trying to build a LUA library in C. It seems natural to want to make some conversion between a `struct` and a LUA table. Is that what people do? I want to do `x = my_c_func()` where `x` is equiv to `struct foo { int x; float y; }`. 
[09:49:12] <ac_slater> should I be looking at `userdata` 
[09:49:14] <ac_slater> ?
[09:50:07] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:59:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[10:00:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:02:16] <furq> yes and yes but there's nothing like automatic mapping between struct fields and table values 
[10:02:47] <ac_slater> understood
[10:02:48] <furq> you can give the userdata a metatable __newindex function that sets your struct fields and an __index that sets them
[10:02:55] <furq> __index that gets them
[10:03:12] <furq> or have getter/setter functions or whatever
[10:03:13] <ac_slater> very cool
[10:03:30] <ac_slater> outside of the official reference, do you have an examples of this handy?
[10:16:09] *** Quits: _xor (~xor@74.215.232.169) (Quit: WeeChat 3.4)
[10:27:24] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[10:30:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:31:37] *** Quits: red_ (~red@124.123.180.227) (Ping timeout: 240 seconds)
[10:35:28] *** Joins: dvx (~dvx@5.181.92.64)
[10:53:46] *** Joins: Vornotron (~Vornicus@2603-8000-5d07-7ef0-3dee-feba-a3ce-2188.res6.spectrum.com)
[10:56:36] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b054-1bff-9e6a-67ba.res6.spectrum.com) (Ping timeout: 240 seconds)
[10:59:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:01:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:11:27] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[11:19:04] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:19:44] *** Joins: netlynx (~jan@94-226-69-15.access.telenet.be)
[11:24:17] *** Joins: Psyraven_ (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp)
[11:24:25] *** Quits: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp) (Read error: Connection reset by peer)
[11:25:07] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:27:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:36:38] *** Quits: wauterboi (~wauterboi@185.65.135.248) (Ping timeout: 268 seconds)
[11:44:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[11:55:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[11:57:01] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:59:39] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[12:07:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[12:09:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:20:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[12:22:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:51:08] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[13:05:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[13:07:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:25:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[13:27:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:32:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[13:35:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:39:50] *** Joins: _xor (~xor@74.215.232.169)
[13:40:12] *** Quits: fcr (~fran@r186-48-18-145.dialup.adsl.anteldata.net.uy) (Ping timeout: 252 seconds)
[13:40:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[13:41:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:46:08] *** Joins: fcr (~fran@r167-60-42-145.dialup.adsl.anteldata.net.uy)
[13:46:19] *** Quits: _xor (~xor@74.215.232.169) (Quit: brb)
[13:47:48] *** Quits: skapate (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:48:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[13:50:11] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:01:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[14:02:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:14:40] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[14:20:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[14:22:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:25:48] *** Joins: toulene9 (~toulene@user/toulene)
[14:25:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[14:25:49] *** toulene9 is now known as toulene
[14:31:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[14:31:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.224)
[14:54:29] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-165.2.247.pool.telefonica.de)
[14:56:00] *** Quits: w0ng (~w0ng@185.218.127.23) (Ping timeout: 260 seconds)
[14:58:46] *** Joins: BUSY (~BUSY@user/busy)
[14:59:32] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[15:03:33] *** Joins: w0ng (~w0ng@185.218.127.24)
[15:19:53] *** Parts: hsv_ (~unknown@user/hsv) ()
[15:23:26] *** Joins: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp)
[15:24:45] *** Quits: Psyraven_ (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp) (Ping timeout: 256 seconds)
[15:43:33] *** Quits: In0perable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[15:48:41] *** Quits: kelo (~atanyukev@mx7.olek.im) (Quit: leaving)
[15:50:03] *** Joins: kelo (~atanyukev@mx7.olek.im)
[15:52:53] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[16:12:51] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-165.2.247.pool.telefonica.de) (Ping timeout: 250 seconds)
[16:15:02] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-165.2.247.pool.telefonica.de)
[16:26:50] *** Joins: jacky (~jacky@user/jackyalcine)
[16:45:32] *** Joins: reset (~reset@user/reset)
[16:46:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:02:30] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-165.2.247.pool.telefonica.de) (Remote host closed the connection)
[17:13:08] *** Quits: furq (~furq@b23.be) (Remote host closed the connection)
[17:13:27] *** Joins: furq (~furq@b23.be)
[17:15:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[17:20:43] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 260 seconds)
[17:47:06] *** Quits: pizdets (~pizdets@183.182.111.79) (Quit: pizdets)
[17:47:45] *** Joins: pizdets (~pizdets@183.182.111.79)
[17:55:02] *** Joins: vext01 (~edd@hudzen10.theunixzoo.co.uk)
[17:55:20] <vext01> is this the right place to discuss Lua internals?
[17:55:48] <Habbie> i do not know a better place on IRC
[17:55:59] <Habbie> depending on what you want/need, the mailing list may be more suitable
[17:56:08] <Habbie> we're just a random collection of nerds - not anybody from the Lua project
[17:56:12] <Habbie> but feel free to try us :)
[17:57:19] <vext01> okie dokie
[17:57:37] <vext01> i may have a question for you shortly if this lead doesn't work
[18:04:32] <vext01> ok
[18:04:45] <vext01> so i'm experimenting with adding our experimental JIT to lua
[18:05:01] <vext01> for each instruction i need to store a pointer to a jit "location"
[18:05:24] <vext01> i've added that to the function prototype alongside the bytecode pointer
[18:05:39] <vext01> and I free this array of "locations" when the code is freed
[18:06:11] <vext01> but an assertion that checks if (I think) the GC has freed everything, is failing
[18:06:35] <vext01> lua_assert(gettotalbytes(g) == sizeof(LG));
[18:07:05] <vext01> where gettotalbyes is:
[18:07:07] <vext01> #define gettotalbytes(g)    cast(lu_mem, (g)->totalbytes + (g)->GCdebt)
[18:07:22] <vext01> so my first question is: what is "gc debt"
[18:07:48] <vext01> at the point of failure, we have:
[18:07:50] <vext01> otalbytes=24848, gcdebt=-23176, totalbytes+gcdebt=1672, sizeof(LG)=1624
[18:08:23] <vext01> l_mem GCdebt;  /* bytes allocated not yet compensated by the collector */
[18:08:38] <vext01> does this mean, the number of bytes allocated by the GC, but not freed?
[18:08:48] <vext01> "compensated"?
[18:15:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[18:18:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:27:27] <vext01> my mistake may be storing the locations in the GC heap
[18:27:39] <vext01> i don't need to expose this to the user program
[18:36:17] *** Joins: parnikkapore (~parnikkap@user/parnikkapore)
[18:38:25] *** Quits: parnikkapore (~parnikkap@user/parnikkapore) (Client Quit)
[18:58:00] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[19:07:31] <vext01> is there a way to dump a readable bytecode listing of a program?
[19:14:43] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.4.1)
[19:18:51] *** Joins: Elw3 (~Elw3@dynamic-002-247-243-198.2.247.pool.telefonica.de)
[19:21:04] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 272 seconds)
[19:24:20] <MattJ> luac -l -p
[19:29:50] *** Joins: dreamer (~dreamer@user/dreamer)
[19:30:34] *** Quits: magla (~gelignite@55d40a33.access.ecotel.net) (Quit: Stay safe!)
[19:45:37] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[19:51:02] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:ed4a:ec28:5174:c320)
[19:53:35] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[19:53:55] *** Joins: fling (~fling@user/fling)
[19:55:31] <vext01> MattJ: thanks
[19:56:03] <TsT> also: luajit -b -l
[19:56:30] <vext01> i can't seem to find luac
[19:56:42] <vext01> do i have to do something to have it built?
[19:57:10] <TsT> what is your platform/distrib ?
[19:57:30] <TsT> it is usually provided with the lua interpretor it self
[19:57:43] <vext01> hrm
[19:57:51] <vext01> i've just cloned the source code and run make
[19:57:59] <TsT> ok
[19:58:02] <vext01> it spat out `lua`, but not `luac`
[19:58:04] <MattJ> The makefile builds lua and luac
[19:58:17] <J_Darnley> "cloned"?  from where?  lua is a tarball
[19:58:26] <vext01> github mirror -- is that bad?
[19:59:08] <vext01> https://github.com/lua/lua
[19:59:37] <MattJ> Download a release tarball or see https://github.com/lua/luac
[20:00:04] <vext01> is there no official repo i can use?
[20:00:14] <vext01> i'm going to need a fork soon to track my changes anyway
[20:04:55] <vext01> i think that luac github link is stale
[20:05:09] <vext01> as in, the code no longer builds
[20:05:14] <vext01> ok, tarball it is
[20:05:59] <MattJ> tarballs are the official output of the Lua team, the Git repo is just a convenience
[20:06:52] <vext01> how do they coordinate changes among multiple devs without a repo?
[20:06:54] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[20:07:15] <technomancy> https://p.hagelb.org/mystery.gif
[20:07:42] <MattJ> I don't know if it's still the case, but for many years the canonical repo was in rcs (and not public)
[20:08:25] <vext01> odd
[20:08:31] <vext01> i can live with it
[20:08:46] <MattJ> Lua is much older than Git :)
[20:09:06] <vext01> i'm an openbsd dev, so i'm used to old weird stuff
[20:09:13] <vext01> still use cvs on a daily basis :P
[20:09:27] <technomancy> whoa
[20:09:39] <vext01> yeah, but at least the repo is public :P
[20:10:05] <technomancy> out of curiosity does anyone have a ballpark guess about what percent of the code in lua is the VM, vs the compiler, vs the standard library, etc
[20:10:26] <vext01> count the lua files and the C files?
[20:11:22] <technomancy> there's no lua files, and I don't know which C files implement which parts of the system
[20:11:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[20:14:21] <vext01> i see
[20:14:27] <vext01> can you tell i'm new? :P
[20:14:44] <vext01> i'vde never written more lua than hello world in a loop :P
[20:14:50] <MattJ> technomancy, it's not hard to understand, if you're really curious
[20:15:18] <technomancy> MattJ: well, I'd imagine it's easier to understand if you actually know C
[20:15:47] <MattJ> The standard library implementation is in l*lib.c files, and the rest is the VM, parser and supporting stuff (allocator, etc.)
[20:16:15] <MattJ> You don't really need to know C, just filenames :)
[20:16:18] <vext01> the C code is fairly easy to understand
[20:16:56] <technomancy> it's interesting to me that the string library is nearly 2x as big as the table implementation
[20:17:02] <MattJ> ltable.c -> the internal implementation of tables, ltablib.c -> the 'table' standard library
[20:17:15] <MattJ> same for lstring.c and lstrlib.c
[20:17:31] <technomancy> I think of strings as being so basic, but when you're building in a language that only has bytes ... getting strings working is a lot of work.
[20:23:54] <technomancy> is lcode.lua part of the compiler?
[20:24:14] <technomancy> ah yeah, definitely seems to be
[20:24:19] <technomancy> *lcode.c rather
[20:26:34] *** Quits: tuvok (~tuvok@Photography.tuvok.eu) (Ping timeout: 260 seconds)
[20:28:20] <technomancy> https://p.hagelb.org/lua-loc-breakdown.html does that look about right?
[20:30:53] <MattJ> Yep, looks about right
[20:31:07] <vext01> lcode.c is where the parser emits bytecodes
[20:31:37] <vext01> i've been in that file a lot today :)
[20:31:38] <technomancy> surely the parser emits an AST and the compiler's the part that emits bytecodes?
[20:31:48] <vext01> you know what i mean :P
[20:32:06] <vext01> it's the place where bytecodes are conceived
[20:33:36] <technomancy> I guess I assumed the lexer+parser+compiler would be a larger proportion of the total size
[20:34:46] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:36:23] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:38:11] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[20:40:09] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:40:32] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:ed4a:ec28:5174:c320) (Ping timeout: 268 seconds)
[20:40:43] *** Joins: trumae (~trumae@2804:18:863:a2e5:1:0:df2:cd3f)
[20:41:17] *** Quits: Elw3 (~Elw3@dynamic-002-247-243-198.2.247.pool.telefonica.de) (Quit: Leaving)
[20:42:07] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[21:01:39] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:05:39] *** Quits: trumae (~trumae@2804:18:863:a2e5:1:0:df2:cd3f) (Ping timeout: 256 seconds)
[21:06:39] *** Joins: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d)
[21:13:54] *** Quits: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d) (Read error: Connection reset by peer)
[21:14:48] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648)
[21:20:31] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:20:31] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:21:14] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 268 seconds)
[21:32:11] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Read error: Connection reset by peer)
[21:32:49] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:33:53] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[21:36:29] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Client Quit)
[21:38:56] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[21:40:55] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[21:43:13] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Client Quit)
[21:54:35] *** Joins: wauterboi (~wauterboi@185.195.233.148)
[21:54:58] *** Quits: Moosadee (~Moosadee@198.248.38.26) (Ping timeout: 272 seconds)
[21:56:18] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[22:21:19] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1110:204a:e437:3022)
[22:21:19] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1110:204a:e437:3022) (Changing host)
[22:21:19] *** Joins: skapata (~Skapata@user/skapata)
[22:24:07] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr)
[22:24:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:b200:f874:1c07:de06:7cf8)
[22:36:15] *** Joins: ratchet_freak (~ratchetfr@ptr-82rtos349poudpsbc1v.18120a2.ip6.access.telenet.be)
[22:48:45] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[23:01:47] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-120.2.247.pool.telefonica.de)
[23:06:30] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-120.2.247.pool.telefonica.de) (Remote host closed the connection)
[23:06:32] *** Quits: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp) (Ping timeout: 272 seconds)
[23:07:57] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648) (Ping timeout: 240 seconds)
[23:08:22] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Read error: Connection reset by peer)
[23:08:24] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-120.2.247.pool.telefonica.de)
[23:08:40] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[23:09:16] *** Joins: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d)
[23:13:37] *** Quits: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d) (Read error: Connection reset by peer)
[23:14:04] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648)
[23:15:16] <svm_invictvs> What's a quick check for an empty table in Lua?
[23:15:19] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.224) (Ping timeout: 268 seconds)
[23:16:25] <Elw3> next()
[23:16:54] <Habbie> ah, i had arrived at pairs(t)(t) but next(t) is cleaner
[23:17:10] <Habbie> > next == pairs(t)
[23:17:12] <Habbie> true
[23:17:14] <Habbie> of course
[23:18:59] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6) (Quit: Textual IRC Client: www.textualapp.com)
[23:19:06] <svm_invictvs> It's for an integration test, not particularly performance critical but I need it to be reliable
[23:20:49] <Habbie> next() looks reliable to me
[23:21:13] *** Quits: jacky (~jacky@user/jackyalcine) (Quit: Iridium IRC Client)
[23:21:17] <Habbie> When called with the last index, or with nil in an empty table, next returns nil.
[23:21:35] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com)
[23:21:37] <Habbie> https://www.lua.org/manual/5.1/manual.html#pdf-next
[23:21:43] *** Joins: jacky (~jacky@47.202.64.169)
[23:21:43] *** Quits: jacky (~jacky@47.202.64.169) (Changing host)
[23:21:43] *** Joins: jacky (~jacky@user/jackyalcine)
[23:26:25] *** Quits: jacky (~jacky@user/jackyalcine) (Ping timeout: 256 seconds)
[23:30:21] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Ping timeout: 245 seconds)
[23:36:24] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-120.2.247.pool.telefonica.de) (Quit: Leaving)
[23:48:37] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648) (Ping timeout: 268 seconds)
