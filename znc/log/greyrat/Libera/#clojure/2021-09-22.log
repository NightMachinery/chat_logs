[00:03:46] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:08:22] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[00:21:57] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:28:53] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 264 seconds)
[00:34:20] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 252 seconds)
[00:51:39] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[00:54:24] *** Quits: jespada (~jespada@2803:9800:9842:7a62:edd5:5e74:3ec2:1b19) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:56:25] *** Joins: jespada (~jespada@2803:9800:9842:7a62:4d47:2975:7b31:a447)
[01:00:45] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[01:07:53] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 252 seconds)
[04:57:14] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[04:57:39] *** Server sets mode: +nt 
[04:57:54] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:14:17] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[05:40:11] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::fc2b) (Ping timeout: 246 seconds)
[06:51:27] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Quit: iogue)
[07:00:17] *** Joins: yoonkn (~user@175.197.208.79)
[08:17:51] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Read error: Connection reset by peer)
[08:34:09] *** Joins: to-hu (~Thunderbi@p200300e9af0e9c009967f23839aa85a7.dip0.t-ipconnect.de)
[08:42:26] *** Joins: AKEmily (~AlaskanEm@user/alaskanemily)
[08:44:23] *** Quits: Nahra` (~user@static.161.95.99.88.clients.your-server.de) (Ping timeout: 252 seconds)
[08:44:41] *** Joins: Nahra`` (~user@static.161.95.99.88.clients.your-server.de)
[08:44:56] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Ping timeout: 252 seconds)
[08:47:41] *** Quits: hexology (~hexology@user/hexology) (Ping timeout: 252 seconds)
[08:48:19] *** Joins: hexology (~hexology@user/hexology)
[09:16:33] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[09:16:44] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[09:39:06] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[09:42:25] *** Joins: cognemo (~cognemo@cpe-46-164-17-185.dynamic.amis.net)
[09:44:24] <sandra> technomancy: guy hates Java so much he writes Clojure that writes Java: https://ideolalia.com/code/using-clojure-to-generate-java-to-reimplement-clojure.html Into it! I once wrote Chicken to generate Java and XSLT from a DSL
[09:49:58] *** Quits: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru) (Remote host closed the connection)
[09:52:34] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[10:11:25] <Para> All I know about Paul Graham is that Hacker News seems to have a circle jerking fetish around his blog. I've never seen anything worth reading from him, and the aforementioned HN crew has made sure the name is an automatic skip/not interested to me.
[10:22:07] <Myon[m]> <sandra> "technomancy: guy hates Java so..." <- Cool read, what DSL do you speak about?
[10:48:45] *** Joins: wonko (~wjc@62.115.229.50)
[10:49:59] <sandra> Just something I threw together in an afternoon that made it easy to write the sorta boring boilerplate glue Java/XSLT I was hired for. I don't still have it. It used Felix' "honu" egg and looked like CSS (and I used Emacs' CSS mode to write it). It generated controller classes and web views from descriptions of school hierarchy (like course manager or student etc).
[10:49:59] <sandra> Ideally you would instead change your architecture to be more SPOT but I wasn't in a position in the organization where I could do that. 
[11:09:49] *** Quits: AKEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[11:22:42] *** Quits: Nahra`` (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[11:35:37] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:45:16] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:8173:355d:3407:7897) (Ping timeout: 252 seconds)
[12:07:15] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[12:07:15] *** Quits: abraham (~abraham@143.244.185.86) (Quit: Ping timeout (120 seconds))
[12:07:34] *** Joins: abraham (~abraham@143.244.185.86)
[12:08:03] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[12:08:10] *** Joins: flynn1 (~mcbloch@user/flynn)
[12:08:18] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[12:36:27] <maskd> Para: HN was started by Paul Graham
[12:37:56] <wink> well that does not explain the circlejerking per se.
[12:38:30] <wink> HN is old. and I know tons of people who openly admit they don't like his posts and still are on the site because of the content and the other people :P
[12:39:09] <wink> I think the correlation is more that he portrays a certain type of entrepreneur/founder/investor that many on HN aspire to be
[12:41:07] <goodger> that makes them horrible, horrible people
[12:51:49] <maskd> there used to be a lot more PG circlejerking in the earlier days, and a lot more PG-type content
[12:52:39] <Para> My general rule of thumb is that if people talk about other people, it's usually not very important or "sage" or whatever :) But when talking about the topics/issues, that's where the true discussion lies.
[12:53:02] <Para> I have maybe three actual names I might quote, and only one of them is tangentially related to tech.
[12:53:32] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 252 seconds)
[13:01:54] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:04:02] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:04:20] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:04:26] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:04:41] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:05:49] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:06:06] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:08:44] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:08:59] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:11:39] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[13:11:48] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:12:04] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:12:47] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[13:13:15] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:13:34] *** Joins: struchu (~struchu@staticline-31-183-165-213.toya.net.pl)
[13:14:12] *** Quits: struchu (~struchu@staticline-31-183-165-213.toya.net.pl) (Client Quit)
[13:23:12] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (Remote host closed the connection)
[13:25:30] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[13:58:36] <sobel> funny thing about people wh oopenly admit they don't like his posts and still visit because of the content and the people -- the content and the people drove me to visit less
[13:59:50] <sobel> i used to try to filter out the interesting bits and avoid the neo-libertarian gang mindset there but i can just visit #hntop now
[14:00:39] <sobel> and that's how i turned HN to /. for all intents and purposes
[14:01:04] <sobel> there is probably RSS of it but i'm already on IRC :)
[14:01:27] <sobel> and i'm still gonna double-take when i see "PG" and it's not postgresql
[14:01:28] <sandra> Is HN still a thing. I thought lobste.rs
[14:01:50] <sandra> And Fedi and Antenna
[14:02:20] <sobel> also coven.link and echojs.com and bestofjs.com
[14:02:37] <sobel> i might browse >2 aggregators regularly :)
[14:02:56] <sandra> Conclusion: HN is a non-issue
[14:02:56] <wink> sobel: I'm still skimming the news feed and I'd say I'm clicking on 10% of the links and then skimming the comments. my unread is 4800 so.. wouldn't say regular.
[14:03:41] <wink> it's good if I am caught up with lobste.rs and have 5min while waiting for a meeting to start or a compile
[14:04:06] <sobel> wink: downvotes don't make me sad, but i've correlated being on frequently enough to trigger dvs for my social commentary (oh, they hate poor people on HN) with a worse mood
[14:04:25] <sobel> being around bad people makes me feel sad
[14:04:43] <sandra> Skaffar du modem skaffar du problem
[14:04:57] <wink> it's a bit like some subreddits. for some it's only toxic waste and I apparently can skim and ignore everything that could annoy me
[14:05:21] <sobel> sandra: hehe, i got a 300 baud modem when i was 11
[14:06:25] <sobel> wink: it's like a bad subreddit got a following of startup-fanatics...oh wait, that's khaki-wearing libertarians in the first place
[14:06:29] <sandra> And now you've got problems and I don't think we can solve 'em.♥
[14:07:06] <sobel> it's cool, i solved it.
[14:07:08] <sobel> :)
[14:09:44] <sobel> i got turned onto JSON5 yesterday. i had no idea. it's not awful. it's not EDN but it's not awful.
[14:09:54] <sobel> https://json5.org/
[14:12:15] <sobel> backward compatible
[14:13:08] <wink> misread as "turned into" and was about to offer my condolences
[14:14:06] <sobel> still contemplating EDN REST endpoints if i get a clojurescript frontend project going
[14:14:51] <sobel> wink: one needs a stronger language than json5 to serialize me! i recomend DER or bencode
[14:17:01] <Para> Is it one of those "I think maps should be ordered and comments allowed" variants
[14:18:17] <Para> One thing to note about EDN/JSON is that serializing keyword keys between the two may turn out to be quite annoying :)
[14:18:46] <Para> The good ol' `(keyword ":key")` thing will pop up again when doing that.
[14:28:15] <maskd> I wish people would stop saying "X for humans", especially when X can be understood by humans
[14:28:35] <maskd> "Assembly: machine code for humans" gets a pass
[14:29:00] <wink> what they mean is: flawed, imperfect, moody
[14:30:12] *** Quits: igneous (~igneous@user/igneous) (Quit: Lost terminal)
[14:32:04] <sobel> i'll always encourage generous parsers and strict serializers
[14:32:05] <sandra> wink: in the case of JSON5 at least. Making it less suitable as a serialization language.
[14:32:18] <sobel> i tend to favor tolerance of inconsequential noise/mistakes
[14:32:50] <sobel> i might write json5 by hand but it's back-compatible so i would likely continue to render json
[14:34:11] *** Joins: jespada (~jespada@2803:9800:9842:7a62:4d47:2975:7b31:a447)
[14:35:42] <sandra> I am retro. I'm still on SXML. The world moving away from XML to JSON only to then having to reinvent namespaces and schema was a huge wtf. And at world we're on an unholy blend of EDN, JSON, and SQL, and translating between them is 99% of our workday.
[14:36:04] <sandra> At work even
[14:36:19] <sobel> that is my blend :)
[14:36:41] <sandra> JSON just makes zero sense to me. EDN is fine.
[14:37:18] <sobel> JSON makes the same kind of sense as CSV. someone went to a problem space and left without a solution.
[14:37:41] <sobel> ...kinda like how RS-232 was also not a protocol
[14:38:11] <sandra> I like JavaScript but sending JSON over the wire is... We still need to actually parse and vet it, we can't just read/eval it unseen. Which means we coulda used any data format.
[14:39:08] <sobel> there was a time that leaning on JS native read for JSON was economical and smart but we have libraries and tooling now
[14:39:33] <sobel> and we don't fret about an extra kilobyte of library for a feature that pleases a developer
[14:39:49] <sandra> In which case bencode or EBML if we wanna be tight on bytes, and XML (preferably as sexps) if we wanna not start over completely with all internet apis. Which I guess we already did since JSON has been around for a while now.
[14:40:48] <sandra> Asking the client to read from the server I guess does make some amount of sense if we know for sure we don't get mitm'd.
[14:41:00] <sandra> Vice versa is bonkers.
[14:41:19] <sobel> the client has to protect its render thread. derailing that thing ends the GUI.
[14:41:23] <sobel> that's about it
[14:43:02] <sobel> frontend dev amuses me a lot. it's become one of the most challenging environments for the least expected reasons. it's all obvious in hindsight but i did not see that coming.
[14:44:51] <sandra> I wanna get into this stuff: https://hotwired.dev it makes more sense to me. And easier to make accessible for non-js clients hopefully.
[14:45:52] <sobel> oh neat, that's smart. i wonder if that plays with react-server.
[14:46:03] <sobel> or whatever it's called, react-ssr
[14:46:22] <sandra> It was made by the rails guys apparently. I've never used it
[15:05:11] <Para> I know, lets just use GraphQL.
[15:05:25] <Para> oh whoops https://www.dexerto.com/gta/gta-trilogy-leaks-through-nvidia-geforce-now-and-thats-not-all-1652271/
[15:05:50] <Para> NVIDIA had left the GraphQL metadata queries on, someone crawled everything %)
[15:06:28] <Para> The self-recursive introspection query is quite something.
[15:09:39] <sobel> hahahaha
[15:10:02] <sobel> i feel like i should learn those fancy APIs just to be more prepared for such inadvertent disclosures
[15:10:50] <Para> I was recently asked in a technical context what my dream API would be like in regards to features, I answered "Firstly, strong authentication, second, only predefined queries" :)
[15:11:16] <sobel> when i was just starting to crank out resultsets as json, my frontend kid wanted to get into graphql and i just recoiled at having to deal with all that on top of learning react
[15:11:45] <sobel> clients don't need open-ended queries. they need effective APIs.
[15:11:59] * sobel votes with Para
[15:12:25] <Para> I believe in Technical Debt
[15:13:50] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[15:14:15] <maskd> I find graphql to be really nice for building frontends
[15:14:31] <maskd> the backend side is full of potential pitfalls and generally a lack of established best practices
[15:14:43] <sobel> maskd: how does it benefit the frontend?
[15:21:35] <sobel> anyway, Promise.all() ended up resolving the actual issue which was, my frontend guy did not know promises
[15:24:13] <maskd> like if you're in a situation where your backend is mainly a bunch of endpoints that serve exactly what your frontend requires, graphql is very well suited for that
[15:25:17] <Para> fwiw redux doesn't need graphql :)
[15:26:38] <maskd> if you have a backend with a proper REST API that provides everything you need in the frontend then the benefits of graphql are less clear to me. but I haven't worked in a lot of projects where I had that privilege
[15:30:27] *** Joins: atw (~user@154.27.197.101)
[15:35:29] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 264 seconds)
[15:45:42] *** Joins: egli (~user@193-47-178-139-pool.fiber.fcom.ch)
[15:53:35] <matty_matt> maskd: I think Wilker does a good job of explaining the problem in the first part of this presentation: https://www.youtube.com/watch?v=IS3i3DTUnAI
[16:26:22] *** Joins: tj_allemaal (~tj_allema@17-14-122.cgnat.fonira.net)
[16:33:33] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[16:35:03] *** Quits: madscientist` (tpalohei@kapsi.fi) (Ping timeout: 268 seconds)
[16:35:11] *** Joins: madscientist` (tpalohei@kapsi.fi)
[16:38:44] *** Parts: tj_allemaal (~tj_allema@17-14-122.cgnat.fonira.net) ()
[16:49:23] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[16:51:41] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c009967f23839aa85a7.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[16:52:52] <sobel> i'm working to make my backend provide exactly what the frontend needs
[16:53:04] <sobel> (all SQL endpoints, so i consider it very feasible)
[16:54:36] <yeik-the-spik[m]> Has anyone used malli generators as replacement for spec generators when doing property based testing?
[16:54:36] <yeik-the-spik[m]> I am considering migrating to malli from spec, since reitit coercion and spec dont play along that nicely. But I would like to know if someone already has any experience in that front
[16:59:59] <Para> Haven't used that part, but IMHO malli wins by default due to its a lot more clear syntax in the first place.
[17:00:03] <Para> spec is...spec
[17:04:04] <yeik-the-spik[m]> Yes, it looks a lot better. But I have a bunch of property-based tests running on top of spec, and I would like to know whether porting them is a thing I could do. If I need to write a bunch of new tests I will not do it. On the surface it looks like it should be feasible, but maybe someone has some experience with that.
[17:05:35] <yeik-the-spik[m]> Also, just to vent out a little, these malli/spec and manifold/core.async... it is beginning to remind me of Common Lisp level fragmentation. It saddens my heart
[17:06:47] <Para> I wonder if it's politically too volatile of an idea to create a spec-to-malli converter... :)
[17:11:57] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[17:15:44] <yeik-the-spik[m]> I am afraid malli's raison d'être is: specs are to difficult to parse. However I will give your idea some thought, I dont need to migrate right now ;)
[17:15:58] <yeik-the-spik[m]> s/to/too/
[17:25:49] <sandra> Lisp is a programmable programming language. Seeing new takes on basic functionality, like Malli and Promesa, is fine
[17:26:29] <Para> For me I think what matters is that the data models are pretty much the same per context, and then there's several options for that.
[17:26:33] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:58eb:18c2:2e8a:75fa)
[17:26:37] <Para> hiccup is an universal idea, so is ring handlers
[17:30:08] *** Joins: seschwar (~seschwar@user/seschwar)
[17:40:13] *** Joins: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de)
[17:48:25] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[17:49:24] *** Joins: eka (~eka@user/eka)
[17:58:38] <yeik-the-spik[m]> I would claim that the set of fine things and the set of annoying things intercept :)
[18:09:24] *** Joins: eddof13 (~textual@200.52.90.50)
[18:35:48] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:37:50] *** Joins: eddof13 (~textual@200.52.90.50)
[18:48:32] *** Quits: chujev (~chujev@88.103.226.7) (Remote host closed the connection)
[18:53:40] *** Joins: chujev (~chujev@88.103.226.7)
[19:07:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:887d:3c4c:6983:4192)
[19:14:59] <wink> re the HN discussion from earlier.. https://twitter.com/Foone/status/1440697266059153439 poor foone
[19:25:20] *** Joins: wonko (~wjc@62.115.229.50)
[19:27:56] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:28:19] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:41:05] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[19:53:40] *** Quits: Null_A (~null_a@2601:645:8700:2290:887d:3c4c:6983:4192) (Ping timeout: 252 seconds)
[19:53:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781)
[19:56:45] *** Joins: Null_A_ (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781)
[19:58:04] *** Joins: Null_A__ (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781)
[19:58:15] <jeaye> yeik-the-spik[m]: I used spec for about 5 years, at my last job. CLJS on the FE, CLJ on the BE. Lots of shared specs in between, with orchestra for instrumentation. When I switched jobs, I switched to malli and made a new defn-spec macro which is just like orchestra's, but works with malli. It's been lovely.
[19:58:59] <jeaye> The lack of global registry seemed odd at first, but malli feels like a Clojure library. Spec does not.
[19:59:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781) (Ping timeout: 260 seconds)
[20:00:18] <technomancy> global registry as a separate namespace is the worst part of spec
[20:00:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781)
[20:01:06] *** Quits: Null_A_ (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781) (Ping timeout: 260 seconds)
[20:03:26] *** Quits: Null_A__ (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781) (Ping timeout: 260 seconds)
[20:03:57] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[20:06:42] *** Quits: Null_A (~null_a@2601:645:8700:2290:25aa:2fd7:a477:7781) (Ping timeout: 260 seconds)
[20:07:52] <jeaye> If that's the worst part, then having specs not be just data is the second worst part.
[20:08:09] <jeaye> malli tackles both of those and manages to be 10x faster than spec regularly.
[20:08:57] <jeaye> Yes, after 5 years of adding specs, spec's performance impact can be huge.
[20:09:15] <Para> The defaulting to namespaced keys is also a PITA for serialization.
[20:09:51] <Para> Someone sid to me that it's mainly because of Datomic. Which I've never used.
[20:09:58] <jeaye> That was one of my favorite things about spec. Qualified keys should be the default.
[20:10:58] <jeaye> They convey ownership at compile-time and avoid collisions.
[20:11:06] *** Joins: Null_A (~null_a@2600:1010:b0d9:2882:48a4:bec2:eba0:2e41)
[20:16:17] *** Quits: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:25:54] *** Joins: Null_A_ (~null_a@2600:1010:b0d9:2882:943f:60e0:140f:bb0f)
[20:28:08] *** Quits: Null_A (~null_a@2600:1010:b0d9:2882:48a4:bec2:eba0:2e41) (Ping timeout: 246 seconds)
[20:31:22] *** Joins: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e)
[20:34:14] *** Quits: Null_A_ (~null_a@2600:1010:b0d9:2882:943f:60e0:140f:bb0f) (Ping timeout: 260 seconds)
[21:03:21] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[21:13:58] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:22:57] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::6a2)
[21:23:35] *** Joins: eddof13 (~textual@200.52.90.50)
[21:59:29] *** Quits: sailorCa` (~user@p200300f6a70c4a7ddd7933e6ca09b059.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[22:00:50] *** Joins: sailorCa` (~user@p200300f6a70c4acab01db352a4b3e3ef.dip0.t-ipconnect.de)
[22:16:12] <hendursaga> What might be the most Haskell-y lens library for Clojure?
[22:16:48] <technomancy> clojure.core/get-in and clojure.core/update-in
[22:17:32] <technomancy> seriously, my understanding of lenses is that they are a way to achieve the above features in a way that actually works with types
[22:17:44] <hendursaga> oh, I thought you were joking at first
[22:18:10] <technomancy> at least, that's  my understanding from using racket lenses
[22:18:24] <hendursaga> I'm.. not sure Racket lenses are that Haskell-y
[22:18:32] <hendursaga> Haven't tried yet, though
[22:18:56] <technomancy> well, racket structs are very unlike clojure maps
[22:19:18] <technomancy> racket has maps but it really doesn't want you to use them unless the keys literally cannot be known up-front
[22:19:42] <technomancy> (which I think makes it more like Haskell than Clojure when it comes to data structures)
[22:20:12] <hendursaga> and by "actually works with types" you mean Typed Clojure?
[22:20:36] <technomancy> oh, no I have no idea how typed clojure works
[22:20:47] <technomancy> I meant racket
[22:21:11] <hendursaga> Me either, it's on my TO-DO list though
[22:21:33] <technomancy> even non-typed-racket still has types; structs and their accessors are defined at compile-time
[22:22:14] <technomancy> I wrote about racket lenses on my blog https://technomancy.us/185
[22:23:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[22:24:45] <technomancy> so when you use lenses in Haskell, are you more or less accomplishing the same thing as get-in/update-in?
[22:25:42] <selfsymmetric-mu> technomancy: I think so, personally. I've only used them in Haskell.
[22:26:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[22:26:42] <hendursa1> technomancy: I'm no expert in Haskell (yet), I just know that's where the concept of lenses and optics originated, so...
[22:27:31] <selfsymmetric-mu> It's get and update plus the obvious laws: if you get a piece of something then put it back in the same place, no change; if you update a piece of something and then look at that piece, it's what you put in; if you update a piece of something and then update it again, then it's as if you only did the second update.
[22:28:06] <technomancy> selfsymmetric-mu: ehhhhh
[22:28:22] <technomancy> that last one only works if `update` means something different from what it does in clojure
[22:28:43] <jeaye> I have not seen any need for lenses in CLJ. If get-in/assoc-in/update-in don't cut it, then you may need specter. Not lenses.
[22:28:48] <technomancy> (-> [1] (update-in [0] inc))
[22:28:57] <technomancy> vs (-> [1] (update-in [0] inc) (update-in [0] inc))
[22:29:06] <selfsymmetric-mu> technomancy: Oh okay! In that case they have slightly difference semantics.
[22:29:33] <selfsymmetric-mu> You're not allowed to do that with the Haskell Lens API.
[22:29:40] <selfsymmetric-mu> But it's not enforced. 
[22:29:45] <selfsymmetric-mu> Gotta run btw, sorry!
[22:30:05] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[22:30:05] <technomancy> I think that law still holds if you s/update/assoc/
[22:31:02] *** Quits: X-Scale (~ARM@83.223.240.141) (Ping timeout: 252 seconds)
[22:32:05] *** X-Scale` is now known as X-Scale
[22:32:22] *** Joins: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de)
[22:43:03] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:43:27] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:56:09] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[22:56:09] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Read error: Connection reset by peer)
[22:56:30] *** Quits: eka (~eka@user/eka) (Quit: Leaving)
[22:59:03] *** Quits: etiago- (~etiago@19.7.169.217.in-addr.arpa) (Quit: ZNC 1.8.2 - https://znc.in)
[23:00:37] *** Joins: hendursa1 (~weechat@user/hendursaga)
[23:03:48] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[23:07:34] <Para> technomancy: For me lenses are, to simplify, a way to grab a cursor/ref to a specific path in nested data structure and treat it (and its children) as if it was the root.
[23:07:57] <Para> The FP hubbub behind lenses reads like a fever dream but that's what you'll mostly do with them anyways :)
[23:08:39] <Para> So yeah, definitely doable with just update-in/assoc-in.
[23:11:47] <sobel> i could see accidentally overlapping lenses with closures over the update-in path
[23:12:58] <sobel> unless i'm missing something deeper about lenses
[23:13:16] <Para> Well, I don't use lenses either...I did try the funcool/lentes at one point and noticed that actually semantically detaching parts from a nested data structure to make it seem like your manipulating the root and then navigating from said root to other parts is mentally just a mess :)
[23:13:37] <Para> lentes user guide is pretty good in this sense, it explains everything you can do with them https://cljdoc.org/d/funcool/lentes/1.3.3/doc/user-guide
[23:15:33] <Para> Literally the only person I know who uses lenses in any proglang is a guy who's got quite a strong ADD medication. He's in the "does Haskell on Friday evenings with his girlfriend for fun" category of FP enjoyers.
[23:15:59] <sobel> not even #goals but i respect it
[23:15:59] <Para> ...or was it ADHD, I'm very good at mixing those two
[23:16:02] *** Quits: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de) (Quit: to-hu)
[23:16:13] <sobel> they're not that different
[23:16:45] <sobel> i would like to see category theory benefit my code just once tho
[23:17:33] * technomancy hums "Imagine there's no nil... 𝅘𝅥𝅯"
[23:21:42] <Para> So if a language would reject nils religiously, what should it do if on runtime it encourters a nil due to some impossibly unforeseen state?
[23:22:21] <technomancy> I dunno man, could god make a rock so heavy he couldn't lift it?
[23:22:47] <Para> He'd just call it a planet or a red giant or something.
[23:22:57] <Para> "I totally meant to do a star the size of a galaxy"
[23:23:42] <sobel> i've hit this in writing a null-free relational schema
[23:23:44] <sobel> i think
[23:24:06] <sobel> you still have left joins creating nil
[23:24:40] <sobel> so, rejecting nils as data is fine by me. rejecting the condition of nullity is uh...nope.
[23:25:00] <technomancy> yeah, that's what option types are for
[23:25:08] <Para> Hmm. Some kind of insane function zipping where only the parts of the code get executed where input data is non-nil?
[23:31:54] *** Quits: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e) (Remote host closed the connection)
[23:32:20] <maskd> average lenses fan / average update-in enjoyer
[23:33:31] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Read error: Connection reset by peer)
[23:33:54] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[23:38:11] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[23:38:38] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:45] *** Joins: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e)
[23:43:22] *** Joins: eddof13 (~textual@200.52.90.50)
[23:45:53] *** Quits: egli (~user@193-47-178-139-pool.fiber.fcom.ch) (Read error: Connection reset by peer)
[23:48:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e) (Remote host closed the connection)
[23:52:35] *** Joins: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e)
[23:58:25] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
