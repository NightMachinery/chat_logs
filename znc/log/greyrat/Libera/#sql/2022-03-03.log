[00:05:27] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f) (Quit: Client closed)
[00:07:18] *** Quits: Rashad (~textual@2a01:9700:1356:c700:40e4:f44c:4548:bcbb) (Quit: Textual IRC Client: www.textualapp.com)
[00:40:57] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:17:25] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:e06b:7369:9241:49f9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:17] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:45b0:edfc:f5a8:e5cf)
[01:26:27] *** Joins: hseg (~hseg@195.192.226.33)
[01:28:30] <hseg> Hi, using SSMS18.10. _Someone_ improperly factored the tables, and I'm stuck simulating foreign key constraints as check constraints (since actually correcting them requires a schema change)
[01:28:54] <hseg> is this feasible, or should I just fix the broken entries and code defensively?
[01:30:16] <hseg> (mistakes made: keeping a copy of non-foreign key columns (and having them be imperfect copies), no foreign key constraints, allowing nulls on what semantically must not be nullable foreign keys)
[01:30:31] <hseg> (the foreign table gives type information for the record)
[01:34:40] *** Joins: hseg87 (~hseg@195.192.226.33)
[01:34:47] *** Quits: hseg (~hseg@195.192.226.33) (Killed (NickServ (GHOST command used by hseg87)))
[01:34:51] *** hseg87 is now known as hseg
[01:40:25] <Xgc> hseg: Hard to tell without seeing the schema.  Sounds like a mistake (the current structure).  Not sure what you mean by simulation of foreign keys with check constraints.  A check constraint can be used for any of this.
[01:41:17] <hseg> current structure _is_ a mistake, but probably won't get authorization to fix it until next schema update
[01:41:41] <Xgc> hseg: Fixing design mistakes usually requires some cost/benefit analysis.
[01:42:18] <Xgc> hseg: Sure. But I can't comment on the specific mistake without seeing it.
[01:43:07] <Xgc> Hard to imagine how a check constraint would improve any of this.
[01:43:40] <Xgc> Unless you mean a check constraint which restricts the values (like an enum).
[01:44:04] <hseg> check constraint which does the join, checks that the mistakenly duplicated columns are consistent
[01:44:21] <Xgc> Which database allows a join in a check constraint?
[01:44:37] <hseg> don't know if databases allow it, that's why I asked
[01:44:38] <Xgc> Typically, that's not a thing.
[01:45:03] <hseg> ok, thanks
[01:45:15] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[01:45:28] <Xgc> hseg: I misunderstood.  I thought you said you are already using check constraints as a temporary approach, until the schema can be corrected.
[01:45:44] <hseg> will just make sure to add tests in the codebase itself, then
[01:45:59] <hseg> (this bug hunt was triggered by such a test failure, in fact)
[01:46:07] <hseg> had to update 66k records
[01:46:37] <Xgc> For the moment, you'll just need to manually test for mistakes, assuming they can be identified logically.
[01:47:09] <hseg> they can, it's simple field mismatches
[01:47:14] <hseg> thankfully
[02:07:12] <Gizmokid2005> You can fix the data and add some triggers on insert/update to try and enforce some check constraints. It's not the best or most elegant solution but could work in the meantime.
[02:12:34] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:13:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f)
[02:23:38] <hseg> would that allow me to join with the foreign table to check the columns are consistent, though?
[02:23:45] <hseg> don't think so
[02:32:24] <Gizmokid2005> Yes, you can write full on sql inside of a trigger to check data/queries.
[02:37:35] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:45b0:edfc:f5a8:e5cf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:46:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f) (Quit: Client closed)
[02:49:37] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:16:57] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[03:18:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f)
[03:25:49] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:28:40] *** Joins: cytosin (~cytosin@116.87.34.42)
[03:32:42] <cytosin> Hi everyone! Not sure if this is the right channel, but I have a basic question about database design. https://imgur.com/Xo011z8 this was from my school's lecture, but my understanding is that in a many to one relationship, every product entity can only be related to one company. Is the image wrong? Thanks!
[03:36:19] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:39:29] <Xgc> cytosin: Correct.  This is usually represented by a foreign key constraint in the products table which refers to a specific company.
[03:40:07] <Xgc> cytosin: But, the lower diagram suggests something else.
[03:40:50] <Xgc> cytosin: Notice the lower diagram indicates a product can be related to more than one company, and a company can be related to more than one product.\
[03:41:05] <Xgc> cytosin: That's a "many to many" relationship.
[03:41:44] <Xgc> cytosin: That's a pairing of 2 "one to many" relationships.
[03:42:41] <Xgc> cytosin: For this, we have a 3rd entity which links the product table with the companies table.
[03:43:16] <Xgc> cytosin: The contents is a simple pair (product_id, company_id).
[03:44:20] <Xgc> cytosin: Feel free to ask if that's unclear.
[03:44:33] *** Quits: AmR (~AmREiSa@197.42.112.70) (Quit: Konversation terminated!)
[03:48:38] <cytosin> Xgc: Ah I see, so the lecture slide is wrong then, I was confused but turns out I understood correctly. Thanks for clarifying it for a begginer like me! :D
[03:54:31] *** Quits: hseg (~hseg@195.192.226.33) (Quit: Client closed)
[03:55:37] *** Joins: hseg (~hseg@195.192.226.33)
[04:02:03] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f) (Quit: Client closed)
[04:09:11] *** Quits: cytosin (~cytosin@116.87.34.42) (Ping timeout: 256 seconds)
[04:14:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f)
[04:32:12] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[04:35:15] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[04:36:08] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[04:37:59] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[04:50:02] *** Joins: karakedi (~eAC53C340@user/karakedi)
[04:54:37] *** Quits: MrZeus_ (~MrZeus@217.138.254.103) (Ping timeout: 240 seconds)
[05:25:58] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:25dd:c2a6:b3b9:c5f4)
[06:07:47] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f) (Quit: Client closed)
[06:10:27] *** Quits: hseg (~hseg@195.192.226.33) (Quit: Client closed)
[06:16:35] *** Joins: s3a (~s3a@ip216-239-66-174.vif.net)
[06:25:51] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[06:26:13] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[06:59:24] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:25dd:c2a6:b3b9:c5f4) (Ping timeout: 240 seconds)
[07:44:26] *** Joins: irontom (~user@38.81.106.9)
[07:56:55] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[08:03:01] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[08:07:45] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[08:28:41] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:00:50] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:02:57] *** Quits: irontom (~user@38.81.106.9) (Ping timeout: 240 seconds)
[09:05:02] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-0049-7e86-f26e-5ad4.res6.spectrum.com)
[09:31:02] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:803c:58f5:1152:3843)
[09:38:14] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:59:42] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[10:11:13] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:803c:58f5:1152:3843) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:06:11] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[11:07:56] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[11:17:20] *** Joins: palasso (~palasso@user/palasso)
[11:17:51] *** Quits: s3a (~s3a@ip216-239-66-174.vif.net) (Quit: Leaving)
[11:37:22] *** Joins: maret (~maret@195.12.158.102)
[12:13:58] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0049-7e86-f26e-5ad4.res6.spectrum.com) (Quit: Client closed)
[12:30:50] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:31:07] *** Joins: thevishy (~Nishant@2405:201:f005:c007:b514:75a9:41b7:5c1b)
[12:35:00] <maret> Whats the syntax FOR UPDATE when using left join ? I tried SELECT * FROM unnest(array['addres']) addresses2(address) LEFT JOIN addresses  using(address) order by addresses.entity_id for UPDATE; I got an error  FOR UPDATE cannot be applied to the nullable side of an outer join
[12:35:43] <maret> seems like for update isn't supported for outer join ?
[12:42:17] *** Joins: AmR (~AmREiSa@197.42.112.70)
[12:50:57] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[12:52:05] *** Joins: millido (~millido@84.210.150.128)
[12:58:15] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[12:58:35] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:04:28] *** Quits: thevishy (~Nishant@2405:201:f005:c007:b514:75a9:41b7:5c1b) (Quit: Leaving)
[13:10:06] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[13:12:35] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[13:34:31] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Quit: Leaving)
[13:43:38] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[13:44:26] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Remote host closed the connection)
[13:56:05] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[14:07:23] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[14:10:16] *** Joins: cytosin (~cytosin@116.87.34.42)
[14:14:43] *** Parts: mickey8 (~user@user/mickey) ()
[14:21:04] *** Joins: millido (~millido@84.210.150.128)
[14:29:41] *** Quits: cytosin (~cytosin@116.87.34.42) (Ping timeout: 256 seconds)
[14:33:24] *** Joins: ysch_ (~ysch@91.211.93.148)
[14:36:18] *** Quits: ysch (~ysch@91.211.93.148) (Ping timeout: 260 seconds)
[14:36:25] *** ysch_ is now known as ysch
[14:46:03] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[14:54:04] *** Quits: Amadiro (~Amadiro@191.96.180.90) (Quit: Leaving)
[15:07:03] *** Joins: inoas (~ionas@ip-037-201-194-167.um10.pools.vodafone-ip.de)
[15:26:54] <Xgc> maret: That's correct, since FOR UPDATE refers to the entire result, not just some columns in the result.
[15:28:04] <Xgc> maret: There are ways to rewrite the query to allow FOR UPDATE.
[15:42:41] *** Joins: MrZeus_ (~MrZeus@37.120.198.151)
[16:05:55] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[16:12:31] *** Quits: inoas (~ionas@ip-037-201-194-167.um10.pools.vodafone-ip.de) (Quit: Leaving...)
[16:14:09] *** Joins: password (~password@user/password2)
[16:29:12] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[16:32:09] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[16:48:31] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:52:59] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[16:57:03] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:01:04] *** Quits: Xgc (~Xgc@user/xgc) (*.net *.split)
[17:01:04] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:7401:e850:bd68:4c37) (*.net *.split)
[17:01:04] *** Quits: Azrael_- (~aweoi@51.154.62.124) (*.net *.split)
[17:01:04] *** Quits: W (~w@user/w) (*.net *.split)
[17:01:04] *** Quits: auri (~quassel@fsf/member/auri) (*.net *.split)
[17:01:04] *** Quits: dob1 (~dob1@user/dob1) (*.net *.split)
[17:01:04] *** Quits: jmer (sid504721@user/jmer) (*.net *.split)
[17:01:04] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[17:01:04] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[17:01:04] *** Quits: videl (~videl@user/videl) (*.net *.split)
[17:01:04] *** Quits: PocketKnife (~PocketKni@gateway/vpn/pia/pocketknife) (*.net *.split)
[17:02:30] *** Joins: Xgc (~Xgc@user/xgc)
[17:02:30] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:7401:e850:bd68:4c37)
[17:02:30] *** Joins: Azrael_- (~aweoi@51.154.62.124)
[17:02:30] *** Joins: W (~w@user/w)
[17:02:30] *** Joins: auri (~quassel@fsf/member/auri)
[17:02:30] *** Joins: dob1 (~dob1@user/dob1)
[17:02:30] *** Joins: jmer (sid504721@user/jmer)
[17:02:30] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[17:02:30] *** Joins: deepy (deepy@user/deepy)
[17:02:30] *** Joins: videl (~videl@user/videl)
[17:02:30] *** Joins: PocketKnife (~PocketKni@gateway/vpn/pia/pocketknife)
[17:03:16] *** Quits: dob1 (~dob1@user/dob1) (Max SendQ exceeded)
[17:03:16] *** Quits: deepy (deepy@user/deepy) (Max SendQ exceeded)
[17:03:35] *** Joins: dob1 (~dob1@user/dob1)
[17:04:07] *** Joins: deepy (deepy@user/deepy)
[17:04:21] *** Quits: MrZeus_ (~MrZeus@37.120.198.151) (Read error: Connection reset by peer)
[17:04:40] *** Joins: MrZeus_ (~MrZeus@37.120.198.151)
[17:11:43] *** Joins: MrZeus__ (~MrZeus@185.248.85.10)
[17:14:32] *** Quits: MrZeus_ (~MrZeus@37.120.198.151) (Ping timeout: 240 seconds)
[17:34:38] *** Joins: MrZeus_ (~MrZeus@185.195.232.144)
[17:37:32] *** Quits: MrZeus__ (~MrZeus@185.248.85.10) (Ping timeout: 240 seconds)
[17:37:49] *** Quits: password (~password@user/password2) (Ping timeout: 256 seconds)
[17:46:32] *** Joins: password (~password@user/password2)
[18:06:15] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[18:50:13] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[18:50:27] *** Joins: rvalue (~rvalue@user/rvalue)
[19:00:43] *** Joins: AmR| (~AmREiSa@156.199.197.9)
[19:01:35] *** Quits: AmR (~AmREiSa@197.42.112.70) (Ping timeout: 268 seconds)
[19:05:25] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:23:28] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[19:24:40] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:8c10:b1d6:1961:9a70)
[19:28:03] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[19:28:43] *** Joins: MrZeus__ (~MrZeus@185.195.232.144)
[19:30:45] *** Quits: MrZeus_ (~MrZeus@185.195.232.144) (Read error: Connection reset by peer)
[19:30:50] *** Joins: k8yun (~k8yun@user/k8yun)
[19:31:08] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[19:31:42] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[19:43:42] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[19:44:12] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[19:45:44] *** Joins: maret (~maret@195.12.158.102)
[19:47:51] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[19:48:43] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[19:51:56] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[19:52:42] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[19:55:04] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[19:55:42] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[19:58:31] *** Joins: hseg (~hseg@195.192.226.33)
[20:02:49] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[20:03:45] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[20:05:21] *** Quits: hseg (~hseg@195.192.226.33) (Remote host closed the connection)
[20:06:00] *** Joins: hseg (~hseg@195.192.226.33)
[20:06:57] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[20:07:42] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[20:08:59] *** AmR| is now known as AmR
[20:12:57] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:8c10:b1d6:1961:9a70) (Ping timeout: 240 seconds)
[20:17:28] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[20:18:12] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[20:18:30] *** Quits: hseg (~hseg@195.192.226.33) (Remote host closed the connection)
[20:21:30] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[20:22:12] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[20:24:57] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[20:25:42] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[20:27:44] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Client Quit)
[20:36:48] *** Joins: Rashad (~textual@2a01:9700:1a6e:c600:1159:1349:45b0:622b)
[20:39:15] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:42:59] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[20:43:48] *** Joins: rgrinberg (~textual@187.223.63.190)
[20:46:54] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[20:46:56] *** Quits: rgrinberg (~textual@187.223.63.190) (Client Quit)
[20:47:26] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Client Quit)
[20:47:42] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[21:10:42] *** Joins: kristijonas (~kristijon@81-7-103-234.static.zebra.lt)
[21:11:12] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[21:21:33] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:f105:3b0f:86e0:788)
[21:27:01] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:f105:3b0f:86e0:788) (Ping timeout: 240 seconds)
[21:31:19] *** Joins: k8yun (~k8yun@user/k8yun)
[21:44:10] *** Joins: rgrinberg (~textual@187.223.227.166)
[21:50:19] *** Joins: kristijonas_ (~kristijon@m83-179-35-123.cust.tele2.lt)
[21:51:00] *** Joins: k8yun_ (~k8yun@user/k8yun)
[21:52:49] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Ping timeout: 256 seconds)
[21:53:09] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[22:30:27] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:34:59] *** Joins: Toneloc (~Toneloc@193.61.159.40)
[22:39:54] *** Quits: rgrinberg (~textual@187.223.227.166) (Ping timeout: 250 seconds)
[22:42:24] *** Joins: rgrinberg (~textual@2806:101e:7:cba4:20c1:38e1:5832:d41b)
[22:49:47] *** Quits: rgrinberg (~textual@2806:101e:7:cba4:20c1:38e1:5832:d41b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:55:40] *** Joins: rgrinberg (~textual@2806:101e:7:cba4:20c1:38e1:5832:d41b)
[23:18:57] *** Quits: kristijonas_ (~kristijon@m83-179-35-123.cust.tele2.lt) (Ping timeout: 256 seconds)
[23:20:35] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:20:55] *** Joins: kristijonas_ (~kristijon@m83-179-35-123.cust.tele2.lt)
[23:24:42] *** Joins: funhouse (~funhouse@user/funhouse)
[23:25:08] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[23:25:35] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[23:29:26] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:30:49] *** Fauto_ is now known as Fausto
[23:36:16] *** Quits: kristijonas_ (~kristijon@m83-179-35-123.cust.tele2.lt) (Remote host closed the connection)
[23:36:26] *** Joins: kristijonas (~kristijon@m83-179-35-123.cust.tele2.lt)
[23:39:06] *** Quits: rgrinberg (~textual@2806:101e:7:cba4:20c1:38e1:5832:d41b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:47:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[23:55:57] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:56:40] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
