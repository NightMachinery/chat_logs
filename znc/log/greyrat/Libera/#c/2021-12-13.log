[00:03:54] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:30e1:ed5f:a3a0:fd59)
[00:03:59] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:05:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[00:09:15] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:10:29] *** Quits: fcresende (~quassel@vps35015.publiccloud.com.br) (Remote host closed the connection)
[00:10:48] *** Joins: fcresende (~quassel@vps35015.publiccloud.com.br)
[00:11:08] *** Joins: mahmutov (~mahmutov@5.176.57.167)
[00:11:10] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[00:11:38] *** Quits: odoood (~odoood@c-73-184-6-164.hsd1.ga.comcast.net) (Ping timeout: 260 seconds)
[00:12:18] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[00:14:27] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 250 seconds)
[00:15:14] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[00:15:19] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[00:18:07] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 250 seconds)
[00:19:25] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:20:43] *** Joins: CaCode (~CaCode@user/cacode)
[00:21:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:21:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:21:34] *** Joins: wroathe (~wroathe@user/wroathe)
[00:23:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[00:26:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[00:28:38] *** Joins: Macuser (~Macuser@2600:1003:b45b:48a7:7006:ac07:19d9:5e22)
[00:30:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:32:27] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:32:38] *** Quits: deflected (~deflected@user/deflected) (Ping timeout: 260 seconds)
[00:32:49] *** Quits: smartin (~Thunderbi@88.135.18.171) (Remote host closed the connection)
[00:33:07] *** Joins: smartin (~Thunderbi@88.135.18.171)
[00:33:14] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[00:34:45] *** Quits: Macuser (~Macuser@2600:1003:b45b:48a7:7006:ac07:19d9:5e22) (Ping timeout: 252 seconds)
[00:34:47] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[00:35:32] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:38:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:38:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:38:16] *** Joins: wroathe (~wroathe@user/wroathe)
[00:40:08] *** Quits: terminalpusher (~terminalp@2a01:586:1f85:1:5063:4755:1e14:fcec) (Remote host closed the connection)
[00:40:42] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:42:02] *** Quits: Kev_ (~Kev@2a01cb0400149f00b8705de2ce2aa5c3.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:45:50] *** AbleBacon_ is now known as AbleBacon
[00:46:17] *** Quits: mahmutov (~mahmutov@5.176.57.167) (Ping timeout: 250 seconds)
[00:47:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:47:09] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:47:25] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[00:48:10] *** Joins: Torr (~Torr@user/torr)
[00:48:49] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:52:17] *** Joins: constxd (~brad@ta87d.wpa.dal.ca)
[00:52:23] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[00:52:34] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[00:53:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3867-449b-5d1d-345f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:54:13] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:54:48] *** Joins: almaember_ii (~user@188-143-34-27.pool.digikabel.hu)
[00:55:41] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[00:59:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:01:05] *** Joins: jjido (~Denis@90.213.58.125)
[01:02:36] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[01:04:38] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:05:22] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[01:07:24] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:08:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3867-449b-5d1d-345f.res6.spectrum.com)
[01:12:36] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 265 seconds)
[01:13:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[01:13:45] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[01:14:10] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:15:42] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:17:20] *** Quits: magla (~gelignite@55d4a165.access.ecotel.net) (Quit: Stay safe!)
[01:19:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:20:20] *** Quits: nullptr_ (~nullptr@user/nullptr/x-2182142) (Quit: ZNC - http://znc.in)
[01:21:38] *** Joins: nullptr| (~nullptr@user/nullptr/x-2182142)
[01:21:54] *** Joins: humky (~humky@user/humky)
[01:29:35] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:29:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:29:35] *** Joins: wroathe (~wroathe@user/wroathe)
[01:34:22] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 268 seconds)
[01:34:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[01:34:53] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 252 seconds)
[01:35:26] *** Joins: pulsar12 (~pulsar12@95.172.181.187)
[01:37:40] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[01:39:02] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:39:05] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:40:04] <nicode> what does candide run on?
[01:40:24] <nicode> candide what do you run on?
[01:40:29] <candide> n​icode, That is a profoundly insightful question.
[01:40:45] <nicode> candide: who programmed you?
[01:40:45] <candide> LeVar Burton
[01:41:03] <nicode> candide: who's LeVar Burton?
[01:42:01] <pragma-> candide: wolfram who's LeVar Burton?
[01:42:02] <candide> pragma-: Levardis Robert Martyn Burton Jr. (born February 16, 1957) is an American actor, director, and children's television host.
[01:42:07] <pragma-> candide: source
[01:42:07] <candide> My guts can be browsed at https://github.com/pragma-/pbot
[01:42:45] <nicode> candide: language
[01:42:45] <candide> Please apply bad language judiciously and on a case-by-case basis.
[01:43:09] <nicode> candide badlanguage coldfusion
[01:43:28] <nicode> candide what is a bad language?
[01:43:30] <pragma-> ,factinfo language
[01:43:30] <candide> language: Factoid submitted by qi!edk@spy/edk0 for #c on Tue May 3 09:58:18 2016 [5y224d ago], referenced 1 times (last by nicode!~nic@2607:f2c0:92fa:de00:bd06:1f91:f492:e67c on Sun Dec 12 14:12:45 2021 [44s ago])
[01:43:32] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[01:43:36] <candide> n​icode, I don't know.
[01:43:37] <pragma-> congratulations!
[01:43:47] *** Joins: anthk_ (~anthk@92.176.105.30)
[01:44:27] <nicode> congratulations for what?
[01:44:27] <pragma-> first person to trigger that factoid in almost 6 years!
[01:44:51] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[01:45:27] *** Joins: seninha (~seninha@user/seninha)
[01:45:28] <nicode> written in perl, eh.
[01:45:33] <pragma-> you can play around with it by /msging it or joining #pbot
[01:46:43] <nicode> that sounds like a fun thing to do!
[01:47:13] <nicode> Maybe I'll build a bot into my little LAN messenger app
[01:48:34] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[01:48:49] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[01:49:09] <constxd> candide: are you based?
[01:49:16] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[01:49:17] <candide> c​onstxd, I'm not sure, let me check.
[01:49:21] <constxd> cringe
[01:49:25] <pragma-> lol
[01:50:25] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:51:03] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:53:39] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[01:53:43] <pulsar12> im playing with luks and was trying to experiment changing the master keys in RAM while dm block device is active. my expectation was the data to appear different after changing just one bit of the key, but i dont see difference. what i might be missing here?
[01:54:55] <twkm> you don't yet seem to have a c progamming issue.
[01:55:52] <pulsar12> agree. was hoping someone would know here since it is C implementation
[01:56:01] <twkm> but if you are writing some c to do this my guess would be you skipped reading the docs.
[01:58:37] *** Joins: lightningwright (~lightning@user/lightningwright)
[02:00:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:00:51] *** Joins: shivesh (~shivesh@user/shivesh)
[02:04:04] *** Joins: SpikeHeron (~DutchIngr@user/dutch)
[02:10:42] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:10:48] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[02:12:41] *** Joins: pulsar1247 (~pulsar12@31.22.203.65)
[02:12:44] *** Joins: fwg (~fwg@user/fwg)
[02:14:14] *** Quits: pulsar12 (~pulsar12@95.172.181.187) (Ping timeout: 256 seconds)
[02:19:09] *** Quits: pulsar1247 (~pulsar12@31.22.203.65) (Quit: Client closed)
[02:21:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:22:18] *** Quits: Akuli (~Akuli@82-203-161-150.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[02:24:20] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[02:25:29] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[02:25:33] <constxd> kings
[02:25:56] <constxd> what's that freenode service where u can leave mail for people
[02:26:05] <constxd> and does it also exist on this new network
[02:26:16] <constxd> MemoServ?
[02:26:17] <twkm> memoserv
[02:27:16] <constxd> wow its help message could not be any more useless
[02:27:18] <twkm> btw, this isn't freenode, and freenode isn't even really freenode anymore though memoserv doe exist.
[02:27:22] <twkm> does
[02:28:12] <twkm> seems useful.  anyway, for problems with using the network try #help.
[02:28:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:28:54] <constxd> twkm: the only documented command is the HELP command, which you just used. how is that useful?
[02:29:25] <twkm> i see 25 lines of help.
[02:29:41] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Quit: quit)
[02:29:56] <constxd> ah must be because i'm not registered
[02:30:32] <twkm> you can't use freenode if you aren't registered.
[02:31:00] <constxd> based
[02:31:12] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3867-449b-5d1d-345f.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:31:14] <twkm> (since you have to use sasl)
[02:32:04] <twkm> unless they've reversed that decision i guess.  anyway, no c programming detected, try #help instead.
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.164)
[02:34:10] *** Quits: pizdets (~pizdets@183.182.110.248) (Ping timeout: 268 seconds)
[02:34:36] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[02:35:04] *** Joins: KhazAkar (~KhazAkar@178.43.196.230.ipv4.supernova.orange.pl)
[02:35:53] *** Quits: KhazAkar (~KhazAkar@178.43.196.230.ipv4.supernova.orange.pl) (Remote host closed the connection)
[02:45:19] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[02:45:39] *** Quits: constxd (~brad@ta87d.wpa.dal.ca) (Ping timeout: 252 seconds)
[02:46:32] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[02:49:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:49:48] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Quit: bdax)
[02:51:27] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Ping timeout: 268 seconds)
[02:51:57] *** Joins: seninha (~seninha@user/seninha)
[02:52:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:53:54] *** Quits: random-nick (~random-ni@87.116.160.199) (Ping timeout: 268 seconds)
[02:54:31] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 268 seconds)
[02:55:12] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[02:55:31] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[02:55:42] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[02:55:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[02:56:22] *** Quits: alch (~alch@151.36.92.129) (Read error: Connection reset by peer)
[03:00:23] *** Joins: alch (~alch@151.38.41.187)
[03:03:53] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[03:04:09] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:04:23] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:06:37] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:07:00] *** Joins: arinov (~arinov@213.194.126.155)
[03:08:49] *** Quits: Zophirel (~Zophirel@93-35-145-87.ip55.fastwebnet.it) (Quit: Connection closed)
[03:10:34] *** Quits: eletrotupi (eletrotupi@2600:3c02::f03c:92ff:febb:2d7a) (Changing host)
[03:10:34] *** Joins: eletrotupi (eletrotupi@user/eletrotupi)
[03:12:42] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[03:16:27] *** Joins: tetrakist (~tetrakist@ti0029a400-3084.bb.online.no)
[03:19:25] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[03:20:36] *** Quits: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[03:20:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:20:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:20:56] *** Joins: wroathe (~wroathe@user/wroathe)
[03:21:36] *** Joins: ian| (~ian|@cpe-104-228-101-152.stny.res.rr.com)
[03:22:24] <ian|> i used to do OO in C by always returning a pointer to a struct, and using dynamic memory
[03:22:45] *** Joins: constxd (~brad@142.134.38.68)
[03:22:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:52] <ian|> now i realize you can often return a plain struct in the "object_create" function
[03:23:27] <constxd> what is object_create
[03:23:42] <ian|> initializes a struct
[03:24:06] *** Joins: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net)
[03:24:13] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:24:13] *** Joins: jinsun__ (~quassel@user/jinsun)
[03:24:35] <ian|> if you have struct foo { ... }; then you often have either struct foo foo_create(...); or struct foo* foo_create(...);
[03:24:48] *** Joins: Thedarkb1 (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[03:25:00] <constxd> based
[03:25:46] *** Joins: SoF3 (~skius@user/skius)
[03:25:59] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[03:26:14] *** Quits: SoF (~skius@user/skius) (Killed (NickServ (GHOST command used by SoF3)))
[03:26:14] *** SoF3 is now known as SoF
[03:26:51] *** Quits: Thedarkb (~Thedarkb@86-42-4-182-dynamic.agg3.kny.prp-wtd.eircom.net) (Ping timeout: 250 seconds)
[03:27:05] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[03:28:35] *** Joins: dohtem (uid524096@user/dohtem)
[03:28:55] <wroathe> ian|: Or, and hear me out, void foo_create(struct foo *foo); 
[03:29:07] <wroathe> ian|: Let's the caller choose how they want to allocate the object
[03:29:11] <wroathe> Lets*
[03:29:34] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:29:47] <constxd> rather bool foo_init(struct foo *foo, ...);
[03:30:07] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[03:30:10] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:16] <LordofLife> make +UniVersal
[03:30:24] <LordofLife> important 
[03:30:34] <LordofLife> for integration 
[03:30:35] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:45] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 250 seconds)
[03:34:48] *** Quits: fstd (~fstd@xdsl-85-197-54-43.nc.de) (Read error: Connection reset by peer)
[03:35:55] *** Joins: fstd (~fstd@xdsl-85-197-54-43.nc.de)
[03:36:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:37:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:38:35] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[03:41:09] *** Joins: sturmmann (~sturmmann@user/sturmmann)
[03:42:42] *** Quits: Oxfuxxx (~sharky@195.200.221.75) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[03:43:12] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[03:44:14] *** Joins: tejr (~tejr@user/tejr)
[03:46:40] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:47:14] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:47:33] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:48:19] *** Joins: Wulf (~Wulf@user/wulf)
[03:48:45] *** Joins: shailangsa_ (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[03:50:54] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c514:d4dd:e381:3dae)
[03:50:54] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c514:d4dd:e381:3dae) (Changing host)
[03:50:54] *** Joins: skapata (~Skapata@user/skapata)
[03:51:00] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[03:51:56] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:53:12] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[04:01:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[04:01:57] *** Quits: kuoi (~kuoi@109.175.166.61) (Quit: kuoi)
[04:03:12] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[04:04:00] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:04:01] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[04:04:25] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:04:58] *** Quits: tetrakist (~tetrakist@ti0029a400-3084.bb.online.no) (Quit: Leaving)
[04:05:40] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:09:54] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 256 seconds)
[04:11:08] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:12:29] *** Joins: de-facto_ (~de-facto@user/de-facto)
[04:13:45] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[04:16:59] *** de-facto_ is now known as de-facto
[04:17:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:18:02] *** Quits: ian| (~ian|@cpe-104-228-101-152.stny.res.rr.com) (Quit: ian|)
[04:20:46] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:22:22] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:22:54] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:23:40] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[04:24:11] *** Joins: tejr (~tejr@user/tejr)
[04:25:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[04:26:44] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Client Quit)
[04:27:02] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:27:17] *** Joins: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au)
[04:27:43] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[04:30:00] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[04:32:01] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (Ping timeout: 245 seconds)
[04:35:18] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[04:38:22] *** Joins: gco (~gco@2601:647:5a00:223:d007:9dc1:1980:4c84)
[04:40:27] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:40:37] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:42:23] *** Quits: shailangsa_ (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[04:44:49] *** Quits: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[04:46:31] *** Joins: seninha (~seninha@user/seninha)
[04:47:30] *** Joins: fluter- (~fluter@user/fluter)
[04:49:31] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 245 seconds)
[04:50:08] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[04:53:11] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[04:57:42] *** Quits: inomoz (~inomoz@85.26.235.86) (Read error: Connection reset by peer)
[04:58:24] *** Joins: frost (~frost@user/frost)
[04:59:06] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:59:34] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[05:00:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:01:04] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Client Quit)
[05:02:01] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[05:03:44] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:04:13] *** Joins: revilaika (~me@151.144.8.109.rev.sfr.net)
[05:05:51] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[05:06:05] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 252 seconds)
[05:06:12] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[05:11:48] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[05:15:02] *** Quits: revilaika (~me@151.144.8.109.rev.sfr.net) (Quit: Konversation terminated!)
[05:16:27] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:17:50] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:22:19] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:25:51] *** Joins: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au)
[05:30:03] *** Norkle is now known as sickjoke
[05:30:49] *** sickjoke is now known as NOrkle
[05:30:56] *** Joins: BSaboia (~bsaboia@177.51.33.61)
[05:30:57] *** NOrkle is now known as Norkle
[05:31:30] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:32:33] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:855f:9909:bca8:ecc3) (Quit: Quit)
[05:34:06] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 260 seconds)
[05:36:09] *** Quits: nicode (~nic@2607:f2c0:92fa:de00:bd06:1f91:f492:e67c) (Ping timeout: 252 seconds)
[05:41:26] *** Quits: BSaboia (~bsaboia@177.51.33.61) (Quit: This computer has gone to sleep)
[05:41:42] *** Quits: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[05:41:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:42:29] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 250 seconds)
[05:46:42] *** Quits: sturmmann (~sturmmann@user/sturmmann) (Ping timeout: 276 seconds)
[05:49:13] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:50:05] *** Joins: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net)
[05:50:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:51:38] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[05:51:48] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:52:15] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:ad06:9adc:663d:62c0)
[05:53:09] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[05:54:10] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:55:52] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:55:57] *** Quits: relight (~relight@user/relight) (Ping timeout: 252 seconds)
[05:56:24] *** Joins: relight (~relight@user/relight)
[05:58:54] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Ping timeout: 268 seconds)
[05:59:02] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[06:01:21] *** Joins: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net)
[06:02:59] *** Joins: imp (~imp@192-141-191-232.alternativaip.net.br)
[06:05:23] *** Joins: quartz (~quartz@user/quartz)
[06:05:40] *** Joins: haniaF (~haniaF@83.24.213.124.ipv4.supernova.orange.pl)
[06:05:59] *** Quits: haniaF_ (~haniaF@83.24.213.124.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[06:06:09] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:07:04] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[06:11:08] *** Quits: gco (~gco@2601:647:5a00:223:d007:9dc1:1980:4c84) (Quit: ZZZzzz…)
[06:11:24] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[06:13:41] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[06:16:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:17:51] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:19:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:20:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:21:00] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:25:48] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:25:54] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[06:28:25] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 250 seconds)
[06:32:58] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[06:33:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:33:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:33:18] *** Joins: wroathe (~wroathe@user/wroathe)
[06:34:40] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 268 seconds)
[06:36:27] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[06:36:35] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:36:58] *** Joins: tejr (~tejr@user/tejr)
[06:38:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[06:40:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:45:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[06:45:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:45:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:45:56] *** Joins: wroathe (~wroathe@user/wroathe)
[06:51:24] *** Quits: constxd (~brad@142.134.38.68) (Quit: WeeChat 3.0.1)
[06:51:53] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: See Ya Later!)
[06:52:14] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[06:52:34] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:52:39] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:53:15] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:06] *** Joins: Hashida (~DaSH@ro2.flokinet.is)
[06:56:52] *** Quits: alch (~alch@151.38.41.187) (Read error: Connection reset by peer)
[06:58:07] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[06:58:37] *** Quits: Hashida (~DaSH@ro2.flokinet.is) (Client Quit)
[06:58:45] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: See Ya Later!)
[06:59:06] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[07:00:47] *** Joins: alch (~alch@151.36.8.147)
[07:01:02] *** Joins: nostar (~nostar@68.51.221.108)
[07:03:02] *** Quits: retroid_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[07:04:32] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: See Ya Later!)
[07:04:45] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[07:06:08] *** Quits: larry87 (~quassel@c-73-6-107-180.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[07:06:53] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[07:10:30] *** Joins: seninha (~seninha@user/seninha)
[07:10:36] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[07:10:45] *** Joins: ISO-4683-1 (~ISO-4683-@user/isodt)
[07:17:51] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:18:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:20:25] *** Joins: john99 (~vmjua@138.62.221.87.dynamic.jazztel.es)
[07:21:02] *** Quits: john99 (~vmjua@138.62.221.87.dynamic.jazztel.es) (Read error: Connection reset by peer)
[07:21:20] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:22:06] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[07:22:26] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:23:14] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:24:21] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:26:32] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:28ca:c225:1872:f47e)
[07:29:22] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[07:30:00] *** Quits: Luke (~ldm@hacksoc/member) (Quit: o/ 4w 6d 23h 59m 10s)
[07:30:30] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[07:33:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:34:22] *** Joins: deflected (~deflected@user/deflected)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:49] *** Quits: moog (~moog@107.126.53.217) (Remote host closed the connection)
[07:41:34] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[07:42:36] *** Joins: kdc (~kdc@196.211.197.159)
[07:47:38] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:50:38] *** Joins: PortableDave (~portabled@118.210.56.9)
[07:54:36] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:28ca:c225:1872:f47e) (Quit: Leaving)
[07:56:03] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:56:48] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[07:57:43] *** Joins: tejr (~tejr@user/tejr)
[07:58:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[08:00:38] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[08:01:06] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:03:44] *** Joins: CaCode (~CaCode@user/cacode)
[08:05:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:06:35] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:09:59] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Quit: oof.)
[08:10:52] *** Joins: Rounin (~david@84.212.130.215)
[08:12:10] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:12:12] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[08:15:13] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:15:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:15:14] *** Joins: wroathe (~wroathe@user/wroathe)
[08:15:25] *** Joins: malloy (~jimery@116.30.222.36)
[08:20:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[08:20:41] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:22:13] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:28ca:c225:1872:f47e)
[08:23:14] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[08:26:17] *** Quits: rahl (~rahl@102.114.15.234) (Ping timeout: 252 seconds)
[08:27:46] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[08:28:15] *** Joins: rahl (~rahl@102.114.118.218)
[08:28:18] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[08:29:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:32:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:33:31] *** Joins: AmR (~AmREiSa@156.207.199.106)
[08:37:47] *** Joins: inomoz (~inomoz@85.26.235.86)
[08:38:08] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:40:11] *** Joins: doorzan (~doorzan@c-98-35-231-137.hsd1.ca.comcast.net)
[08:41:39] *** Quits: doorzan (~doorzan@c-98-35-231-137.hsd1.ca.comcast.net) (Changing host)
[08:41:39] *** Joins: doorzan (~doorzan@user/doorzan)
[08:42:48] *** Quits: malloy (~jimery@116.30.222.36) (Ping timeout: 250 seconds)
[08:44:44] *** Joins: malloy (~jimery@116.30.222.36)
[08:45:35] *** Joins: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net)
[08:46:22] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:49:09] <katp32> hi, I've got a whole bunch of names, and I want to be able to refer to them with integer constants, and with a human-readable symbol in the source code. my first thought was to just use enums since this is what enums are for, but the issue is that I also need to use a string representation of each name in the code (eg to printf it); I could still do it with enums, by creating an array of strings with indices 
[08:49:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[08:49:14] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[08:49:15] <katp32> matching the enum values, but that's somewhat fragile as it means that if an enum is added/removed at any point the array has to be updated as well. is there perhaps a way to use macros to generate an array and an enum (or just a bunch of macro definitions of integer constants, it doesn't have to be an enum) all in one thing?
[08:50:19] <katp32> (this is assuming that all of the names consist only of letters, all in a single case; no spaces or special characters or anything)
[08:51:15] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[08:52:14] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:52:29] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[08:53:36] <ent58> as long as the relative ordering of values in the enum do not have to be stable, you can just declare an enum starting at 0 and an initialized const static string array that doesn't explicitly assign indicies (starts at 0)
[08:54:26] <ent58> if you're doing anything larger scale, I would suggest loading your strings for your enums in a more systematic fashion
[08:56:21] <ent58> static const char *strings[] = {"enum1", "enum2", .... };
[08:57:27] <ent58> if you have to have the array updated automatically...you might need macro magic
[08:57:56] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:57:58] <ent58> I forget exactly how to macro this but I've done it before
[08:58:28] <dave0> maw
[08:59:27] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[09:02:52] *** Joins: szutt (~szutt@116.37.2.145)
[09:04:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[09:04:08] *** jinsun__ is now known as jinsun
[09:04:39] <smallvil_> how do i go about implementing https://gcc.gnu.org/onlinedocs/gcc-11.2.0/cpp/Self-Referential-Macros.html#Self-Referential-Macros in a recursive macro-expansion function ?
[09:04:52] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[09:07:22] *** Quits: rahl (~rahl@102.114.118.218) (Ping timeout: 260 seconds)
[09:11:10] *** Joins: randomxusr (~randomusr@c-73-242-70-183.hsd1.mn.comcast.net)
[09:11:29] *** Quits: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu) (Quit: ZNC 1.8.2 - https://znc.in)
[09:12:19] *** Joins: Khoyo (~khoyo@user/khoyo)
[09:18:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[09:19:18] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:23:07] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c2a5:ef0e:5ed1:6178) (Ping timeout: 252 seconds)
[09:24:04] *** Joins: zwr (~zwr@2804:d45:b966:fb00:8070:51d:80f2:cc47)
[09:31:01] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[09:35:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[09:37:18] *** Joins: gco (~gco@2601:647:5a00:223:d007:9dc1:1980:4c84)
[09:39:15] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 252 seconds)
[09:39:37] *** Parts: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net) ()
[09:43:56] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:44:16] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[09:45:13] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:47:20] *** Joins: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net)
[09:52:27] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[09:52:48] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:57:51] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[09:58:20] *** Joins: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net)
[10:00:28] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[10:00:50] *** Joins: Akiva (~Akiva@user/Akiva)
[10:00:50] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:30e1:ed5f:a3a0:fd59) (Read error: Connection reset by peer)
[10:02:41] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:02:45] *** Joins: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at)
[10:02:52] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:08:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:08:23] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[10:14:17] *** Quits: randomxusr (~randomusr@c-73-242-70-183.hsd1.mn.comcast.net) (Quit: Leaving)
[10:19:27] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:19:53] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:20:09] *** Joins: tejr (~tejr@user/tejr)
[10:22:11] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Ping timeout: 250 seconds)
[10:25:11] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[10:31:42] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:32:08] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.162)
[10:33:09] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[10:34:34] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:35:47] *** Joins: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[10:38:35] *** Quits: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[10:39:12] *** Joins: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au)
[10:39:30] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[10:41:27] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:42:34] *** Quits: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 260 seconds)
[10:45:49] *** Quits: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[10:46:01] *** Quits: PortableDave (~portabled@118.210.56.9) (Ping timeout: 250 seconds)
[10:49:51] *** Quits: gco (~gco@2601:647:5a00:223:d007:9dc1:1980:4c84) (Quit: ZZZzzz…)
[10:49:55] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[10:50:08] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:50:11] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[10:50:32] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[10:52:42] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[10:53:02] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:56:23] *** Joins: bzng2 (~bzng4@91-115-29-1.adsl.highway.telekom.at)
[10:57:36] *** Quits: anthk_ (~anthk@92.176.105.30) (Read error: Connection reset by peer)
[10:59:36] *** Quits: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at) (Ping timeout: 256 seconds)
[10:59:51] *** Quits: alch (~alch@151.36.8.147) (Ping timeout: 268 seconds)
[11:01:05] *** Joins: alch (~alch@151.38.61.111)
[11:09:16] *** Quits: malloy (~jimery@116.30.222.36) (Ping timeout: 250 seconds)
[11:11:23] *** Joins: malloy (~jimery@116.30.222.36)
[11:16:49] *** Joins: rgrinberg (~textual@187.223.209.106)
[11:18:39] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:23:52] *** Joins: rahl (~rahl@102.114.128.177)
[11:25:14] *** Joins: fwg (~fwg@user/fwg)
[11:26:17] *** Joins: mrig (~AdiIRC@user/mrig)
[11:27:53] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[11:29:38] *** Quits: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[11:31:30] *** Joins: aradesh (~aradesh@user/aradesh)
[11:42:00] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[11:43:58] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:44:14] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:45:55] *** Joins: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net)
[11:47:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[11:48:57] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:50:59] *** Joins: Wulf (~Wulf@user/wulf)
[11:51:10] *** Quits: IsaiahG (~Isaiah6@69.59.80.251) (Ping timeout: 256 seconds)
[11:51:36] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[11:51:56] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[11:52:19] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[11:52:53] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:54:11] *** Joins: stonkey (~stonkey@user/stonkey)
[12:02:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:818e:55b0:ddc9:c071)
[12:02:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:818e:55b0:ddc9:c071) (Changing host)
[12:02:16] *** Joins: skapata (~Skapata@user/skapata)
[12:07:38] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:09:03] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[12:10:41] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:28ca:c225:1872:f47e) (Quit: Leaving)
[12:13:02] *** Joins: random-nick (~random-ni@87.116.160.199)
[12:16:34] *** Joins: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net)
[12:18:46] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[12:20:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[12:21:07] *** Joins: arinov (~arinov@213.194.126.155)
[12:26:05] *** Joins: Klinda (~superleag@user/klinda)
[12:26:15] *** Joins: jjido (~Denis@90.213.58.125)
[12:26:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:31:43] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:34:47] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[12:35:17] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:37:27] *** Quits: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net) (Ping timeout: 252 seconds)
[12:38:25] *** Joins: iomari891 (~iomari891@197.210.71.83)
[12:39:23] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:44:17] *** Joins: logann2019 (~logann201@185.red-88-21-139.staticip.rima-tde.net)
[12:51:36] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:52:40] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:53:37] *** Joins: inlight (~inlight@157.42.193.236)
[12:53:37] *** Quits: inlight (~inlight@157.42.193.236) (Changing host)
[12:53:37] *** Joins: inlight (~inlight@user/inlight)
[12:53:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:55:49] *** Joins: Red_ (~Red@97.109-247-81.customer.lyse.net)
[12:56:50] *** Joins: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr)
[12:58:13] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Ping timeout: 240 seconds)
[13:00:11] *** Quits: mrig (~AdiIRC@user/mrig) (Ping timeout: 252 seconds)
[13:01:39] *** Quits: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net) (Quit: WeeChat 2.7.1)
[13:05:21] *** Quits: iomari891 (~iomari891@197.210.71.83) (Ping timeout: 250 seconds)
[13:08:04] *** Joins: iomari891 (~iomari891@197.210.70.19)
[13:09:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[13:15:22] *** Quits: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr) (Remote host closed the connection)
[13:15:35] *** Joins: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr)
[13:15:38] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:e72a:114:f72:6a3)
[13:16:44] *** Quits: saribro (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[13:21:01] *** Joins: earnestly (~earnest@user/earnestly)
[13:22:58] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[13:24:45] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[13:26:35] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:28:47] *** Quits: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr) (Quit: Going offline, see ya! (www.adiirc.com))
[13:29:14] *** Joins: mrig (~AdiIRC@user/mrig)
[13:29:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[13:31:08] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[13:33:09] *** Joins: plastico (~plastico@neomutt/plastico)
[13:33:17] *** Joins: arinov (~arinov@176.89.29.127)
[13:35:07] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:35:20] *** Joins: gerwand (~gerwand@185.219.140.18)
[13:35:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:39:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:40:23] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:41:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:41:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:42:24] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:44:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[13:45:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:48:51] *** Quits: doorzan (~doorzan@user/doorzan) (Read error: Connection reset by peer)
[13:49:06] *** Joins: doorzan (~doorzan@c-98-35-231-137.hsd1.ca.comcast.net)
[13:56:23] *** Joins: ko (~i.am@user/marlboro)
[13:56:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[13:57:18] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:01:56] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:05:16] *** Joins: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au)
[14:06:32] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 240 seconds)
[14:06:42] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 268 seconds)
[14:07:47] *** Joins: iomari891 (~iomari891@197.210.70.19)
[14:09:09] *** Joins: Hercules (~Hercules@user/hercules)
[14:11:47] *** Quits: Hercules (~Hercules@user/hercules) (Client Quit)
[14:13:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:13:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:14:32] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:15:25] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[14:15:57] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[14:16:24] *** Joins: lleo (~leo@188-206-103-176.mobile.kpn.net)
[14:16:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[14:17:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:17:14] <V-T60> Hi. Why this "Modern C" book says that "Each object or function must have exactly one definition? Do they mean "initialization"?
[14:18:01] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[14:18:21] <supakeen> No, they mean that you shouldn't redefine the same name twice in the same scope.
[14:18:42] <supakeen> But ehh, that sounds more C++ like with 'object'.
[14:18:55] <supakeen> > The One Definition Rule (ODR) is an important rule of the C++ programming language that prescribes that objects and non-inline functions cannot have more than one definition in the entire program and template and types cannot have more than one definition by translation unit. It is defined in the ISO C++ Standard (ISO/IEC 14882) 2003, at section 3.2.
[14:18:57] <supakeen> etc
[14:19:06] <supakeen> not that it isn't a smart thing to do ;)
[14:20:08] <mort> the ODR doesn't apply to objects though
[14:20:54] <mort> but otherwise, the explanation sounds a lot like the ODR..
[14:20:56] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:20:59] <ent58> I think by "object" they mean a standardese object, which are distinct from functions, and yeah...you would either have to override definitions, choose between them, or deny them both, and in general it just doesn't make sense to have two definitions of an object with no distiinguishing
[14:21:22] <ent58> distinguishing* characteristics
[14:22:44] <mort> wait I thought that an "object" is basically a variable, like if you have 'double x' then x is an object
[14:22:47] <mort> is this incorrect?
[14:23:43] <ent58> yes, x would be an "object" but not an Object
[14:23:45] <ent58> if that makes sense
[14:24:01] <mort> it doesn't, what do you mean by "Object" here
[14:24:06] <ent58> err....you asked, so no you are not incorrect
[14:24:26] <ent58> Object as in the english word for a thing
[14:24:30] <mort> oh
[14:24:34] <ent58> as opposed to class Object
[14:24:41] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[14:25:31] <mort> an object is a "region of data storage in the execution environment, the contents of which can represent values"
[14:25:50] <mort> so basically anything with an address that's not a function
[14:26:17] <ent58> yes
[14:26:43] <ent58> but
[14:26:45] <mort> and... I suppose the "Modern C" book is correct? Each object must have exactly one definition... but that's not a surprise, it just means you can't have two local variables with the same name?
[14:27:04] <mort> it really sounds like the book wants to talk about the ODR
[14:27:05] <ent58> or external globals, or statics
[14:27:29] <ent58> it does, but I think that's not in the C standard grammar as a concept like it is in C++
[14:27:45] <mort> probably true
[14:28:10] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (Ping timeout: 265 seconds)
[14:28:23] <mort> afaik the one kind of object you can't have multiple different definitions of is a global variable, like an 'int x' in two TUs
[14:28:57] <mort> or, well, the one kind of object you can't have multiple definitions of which might be a surprise you need to be aware of
[14:28:58] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:e72a:114:f72:6a3) (Quit: Leaving)
[14:29:31] <mort> I would probably choose to say something like, two TUs can't define the same symbol
[14:29:37] <ent58> ^
[14:29:44] <ent58> concise, to the point, easy
[14:29:55] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:30:07] <mort> but possibly pedagogically poor if the concept of a symbol hasn't been introduced yet
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:31:04] <ent58> hmm
[14:32:03] <ent58> I'd lean on that "possibly", there's many a time where I've found it easier to use an abstraction and plow ahead rather than explain it bottom-up
[14:32:14] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[14:32:45] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:55] *** Joins: Klinda (~superleag@user/klinda)
[14:32:59] *** Joins: bsdband31 (~bsdbandit@172.58.189.246)
[14:33:12] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:ccf4:63ad:cad7:4144)
[14:33:22] <mort> but then again, you could say something like "two files can't define global variables or global functions with the same names"
[14:33:27] *** Quits: bsdband31 (~bsdbandit@172.58.189.246) (Client Quit)
[14:34:20] *** Joins: bsdband37 (~bsdbandit@172.58.189.246)
[14:38:42] <dave0> i learned 2 things that is sort of an exception.. one is tentative defintions and the other is having an extern variable with an initializer
[14:39:16] <ent58> I've never done the latter
[14:39:29] <mort> I didn't know you could make an extern variable with an initializer
[14:39:36] <ent58> is that sort of a "if the symbol doesn't exist, define it and it's this?"
[14:39:46] <mort> I knew C++17 or something has inline variables with initializers
[14:39:52] <dave0> i did it by accident and iirc fizzie said it's legit
[14:39:55] <mort> which seems like the same thing
[14:40:00] <ent58> O.o
[14:41:03] <mort> I wish the standard was more searchable
[14:42:27] <mort> is the latex or whatever source for the spec available anywhere?
[14:42:40] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 265 seconds)
[14:42:49] *** Joins: seninha (~seninha@user/seninha)
[14:43:34] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:43:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[14:43:36] *** Joins: iomari891 (~iomari891@102.91.4.225)
[14:45:02] *** Quits: gerwand (~gerwand@185.219.140.18) (Ping timeout: 240 seconds)
[14:45:32] <ent58> ah so godbolt sayeth
[14:45:49] <ent58> "Warning <var> initialized and declared extern"
[14:45:56] <ent58> so it's a convenience thing
[14:46:04] *** Joins: cursey (~cursey@user/cursey)
[14:46:05] <ent58> with pedantic
[14:46:48] <dave0> i'm pretty sure it was fizzie.. someone who has an unusual familiarity with the standard
[14:47:50] <ent58> https://godbolt.org/z/4bcW8dW9W
[14:48:10] *** Joins: anjannath (~anjan@user/anjannath)
[14:49:04] <ent58> I don't know, but it sort of makes sense...C can't "reach" the other definition, which means it could get altered depending on an unspecified order (or clobbered entirely)
[14:49:25] *** Joins: arinov (~arinov@213.194.126.155)
[14:51:06] *** Joins: gerwand (~gerwand@185.219.140.18)
[14:51:22] *** Quits: iomari891 (~iomari891@102.91.4.225) (Ping timeout: 256 seconds)
[14:52:08] *** Joins: iomari891 (~iomari891@197.210.71.83)
[14:55:28] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[14:56:04] *** Quits: alch (~alch@151.38.61.111) (Read error: Connection reset by peer)
[14:57:52] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (Ping timeout: 268 seconds)
[14:58:04] *** Quits: iomari891 (~iomari891@197.210.71.83) (Remote host closed the connection)
[14:59:40] *** Joins: iomari891 (~iomari891@197.210.70.19)
[14:59:50] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[15:00:24] *** Joins: alch (~alch@151.38.18.81)
[15:00:38] *** Quits: bsdband37 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[15:01:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[15:04:38] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:04:46] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:05:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:05:23] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 250 seconds)
[15:05:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:05:53] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:07:47] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 252 seconds)
[15:07:48] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[15:07:50] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[15:09:12] *** Joins: iomari891 (~iomari891@102.91.5.163)
[15:09:20] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[15:14:31] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[15:15:05] <fizzie> ,c11 6.9.2p4
[15:15:07] <candide> http://www.iso-9899.info/n1570.html#6.9.2p4 [External object definitions] EXAMPLE 1 i​nt i1 = 1; // definition, external linkage static i​nt i2 = 2; // definition, internal linkage extern i​nt i3 = 3; // definition, external linkage i​nt i4; // tentative definition, external linkage static i​nt i5; // tentative definition, internal linkage i​nt i1; // valid tentative definition, refers to prev... <truncated; https://0x0.st/-FxN.txt>
[15:15:14] *** Quits: iomari891 (~iomari891@102.91.5.163) (Remote host closed the connection)
[15:15:15] <fizzie> Specifically, `extern int i3 = 3;`
[15:15:52] <fizzie> It's just a regular definition, nothing different in it from the plain `int i1 = 1;`.
[15:16:39] <fizzie> (Definitely not any sort of "if not defined elsewhere, use this" feature.)
[15:17:08] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:17:09] *** Joins: iomari891 (~iomari891@197.210.71.83)
[15:18:34] *** Joins: mrig (~mrig@user/mrig)
[15:19:16] <dave0> fizzie: re: standard.. you make it look easy :-p
[15:21:01] <ent58> So the warning is just for sanity, but it's as if extern wasn't there
[15:21:04] <ent58> got it
[15:21:52] <ent58> fizzie: how do I attain this magic
[15:22:22] <dave0> i swear he must have written the whole thing on his hand
[15:22:26] <dave0> cheat sheet
[15:22:44] <demiurge> have we talked about commons yet
[15:23:27] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[15:23:47] *** Quits: lleo (~leo@188-206-103-176.mobile.kpn.net) (Ping timeout: 250 seconds)
[15:24:15] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[15:26:01] *** Joins: Iarfen (~quassel@181.43.57.66)
[15:26:35] *** Joins: vin (~vin@user/crash)
[15:27:45] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[15:27:49] <vin> Is there a way to tell gcc the header file is cpp? I mean the header has operator overloading but being using by a .c file so I get an error like this error: expected ‘:’, ‘,’, ‘;’, ‘}’ or ‘__attribute__’ before ‘=’ token void operator=(const k_t &rhs){;
[15:28:35] *** Quits: iomari891 (~iomari891@197.210.71.83) (Ping timeout: 265 seconds)
[15:28:45] <sham1> #ifdef __cplusplus #endif around the C++ specific stuff
[15:29:00] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[15:29:33] <demiurge> all you can do is make the header valid c; there's no general way to use a c++ header from a c source file
[15:29:52] <vin> thanks sham1 I will try that
[15:30:06] <vin> demiurge: is ther eoperator overloading in C?
[15:30:06] <sham1> Well I'm assuming that it's more of a file which is supposed to work with C but just has C++ stuff in it for some reason
[15:30:12] <demiurge> vin: no
[15:30:20] *** Joins: iomari891 (~iomari891@197.210.71.83)
[15:30:46] <sham1> Usually I'd just have two separate headers if I needed to do that. Unless it's something very simple like adding extern "C" around the C functions so they're callable from C++
[15:33:23] <vin> so adding a #ifdef __cplusplus #endif around the structs avoid the error but now not visibl by a .c file..
[15:33:56] <vin> I get unkown type error
[15:34:00] <demiurge> you can't make operator overloading visible to a c file
[15:34:05] <vin> ah
[15:34:59] <sham1> You *could* add the preprocessor guards around the function/method declarations but that'll get very odd very quickly
[15:35:11] <sham1> You're probably doing a bad thing
[15:35:13] <demiurge> you can, with often quite considerable difficulty, make C and C++ coexist in the same program and operate on the same data
[15:35:41] <demiurge> but you can't make C respect things like overloaded operators because C just doesn't know that exists
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:33] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3831:16c5:17f3:e631)
[15:37:04] <sham1> In that case I'd just create wrappers either on the C or C++ side, depending on which is the main language and which is the supplemental language within the program
[15:37:46] <sham1> You can do the same things with opaque structs and such in C, and then have the underlying code be C++, wrapping the actual C++ object as needed
[15:37:49] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[15:38:06] <vin> Got it!
[15:38:37] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:39:03] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[15:39:40] <vin> So when I renamed the following file https://github.com/tarickb/the-geek-in-the-corner/blob/master/02_read-write/rdma-common.c to cpp, the constants become out of scope. Example, error: ‘SS_INIT’ was not declared in this scope. Anyway around it?
[15:41:09] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[15:41:21] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[15:42:49] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:43:05] <fizzie> You can give the enum types names (well, tags) and move them out of the struct.
[15:43:46] *** Joins: Burgundy (~yomon@79.115.213.171)
[15:44:12] <fizzie> `enum connection_send_state { SS_INIT, SS_MR_SENT, SS_RDMA_SENT, SS_DONE_SENT }; struct connection { /* ... */ enum connection_send_state send_state; /* ... */ };` and so on.
[15:44:17] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[15:45:05] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[15:45:32] <vin> Ah I see, let me try that. Thanks fizzie 
[15:46:58] *** Joins: inlight (~inlight@157.35.17.204)
[15:46:59] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[15:46:59] *** Joins: inlight (~inlight@user/inlight)
[15:49:32] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[15:50:12] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[15:51:08] *** Joins: pulse (~pulse@user/pulse)
[15:51:51] *** kurahaupo is now known as interestingly
[15:54:08] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[15:55:17] *** interestingly is now known as kurahaupo
[15:55:41] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[15:55:58] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[15:57:28] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[15:58:53] *** Joins: constxd (~brad@192.75.101.164)
[15:59:13] <Seng> when calling malloc to allocate memory for a char array, do I then have to do the "strlen(var) * sizeof(char)" or can I always count on char being one byte?
[15:59:35] <fizzie> `sizeof (char)` is 1 by definition, yes.
[15:59:52] <fizzie> (One byte might have more than 8 bits, though.)
[16:00:34] *** Quits: iomari891 (~iomari891@197.210.71.83) (Remote host closed the connection)
[16:01:32] *** Joins: iomari891 (~iomari891@197.210.70.19)
[16:02:33] <fizzie> For the record, `strlen(var)` isn't enough bytes to hold a copy of the _string_ in `var` (because `strlen` does not count the '\0' at the end), though it is sufficient to hold the string's contents as an array of characters.
[16:04:10] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[16:04:53] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:06:26] <Seng> Thanks, fizzie, just wanted to double check :) 
[16:06:31] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[16:06:47] <Seng> And yes - the null terminating char is a pain to remember when you're new at this! :D
[16:07:39] <Seng> I have gotten confused a few times whether the null byte was there, for example when you declare a string like; `char my_str[] = "hello, world";`
[16:08:00] <Seng> (which *does* come with the null byte)
[16:08:01] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Quit: This computer has gone to sleep)
[16:10:46] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:13:37] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:15:17] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Client Quit)
[16:16:53] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 250 seconds)
[16:17:05] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 250 seconds)
[16:17:31] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[16:17:47] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[16:17:53] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:18:59] *** Joins: iomari891 (~iomari891@197.210.70.206)
[16:19:57] *** Joins: DaftMouse (~daftmouse@179.106.56.213)
[16:21:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:21:24] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[16:21:25] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:21:37] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[16:21:42] *** Joins: Klinda (~superleag@user/klinda)
[16:21:45] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[16:23:53] <NRK[m]> Seng don't take it too seriously. off-by-one is a classic.
[16:24:29] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:25:00] *** Quits: iomari891 (~iomari891@197.210.70.206) (Remote host closed the connection)
[16:25:04] <Seng> I guess a wasted by and an extra \0 never hurts :)
[16:25:20] <Seng> the opposite though....
[16:25:55] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[16:25:59] *** Joins: iomari891 (~iomari891@197.210.70.19)
[16:27:05] <Seng> heeh. I just found an issue with my C# code that I'm porting to C :) The two programs gave different output for the same input. And the C# program was what I made a misake in! (I've been doing C# for a decade).
[16:27:13] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Read error: Connection reset by peer)
[16:27:23] <NRK[m]> without the null-terminator alot of the string.h functions will overrun the buffer
[16:29:56] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:30:45] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[16:30:48] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Read error: Connection timed out)
[16:31:03] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:32:06] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:32:41] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4114:c3a8:f0dd:f3a3) (Ping timeout: 250 seconds)
[16:32:46] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a)
[16:33:31] *** Joins: soul-d (~uknown@user/soul-d)
[16:33:44] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Client Quit)
[16:33:53] <Seng> NRK[m], I've just started doing C (for fun) within the last two weeks, and I've never realized how simple (all things considered) the language is. There's a whole lot of gotchas, no doubt, but the language grammar is not that bad.
[16:35:32] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[16:37:01] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[16:37:31] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:37:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:38:41] * APic grins magically.
[16:39:02] *** Quits: m4ho (~m4ho@p5098be52.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:39:49] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[16:40:30] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:41:25] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a) (Remote host closed the connection)
[16:41:37] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[16:42:22] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a)
[16:43:14] *** Joins: useretail (~useretail@185.132.19.151)
[16:43:56] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[16:44:05] *** Joins: m4ho (~m4ho@81.20.119.6)
[16:45:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[16:46:41] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[16:48:18] <kurahaupo> Seng: by now you've probably realised that declarations should not be read (or understood) left-to-right, but rather by starting with the name being declared, and working parts
[16:48:43] <kurahaupo> *working outwards
[16:51:02] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a) (Ping timeout: 240 seconds)
[16:51:03] <NRK[m]> for anything that gets a bit complicated, C declaration is a mess tbh.
[16:51:58] *** Quits: Iarfen (~quassel@181.43.57.66) (Ping timeout: 268 seconds)
[16:52:11] <NRK[m]> but at the same time, i don't really like this shit `a : int = 5` that some newer languages are doing.
[16:52:12] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[16:52:12] *** Joins: arinov (~arinov@78.187.169.227)
[16:52:58] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[16:53:06] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com)
[16:53:55] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com) (Read error: Connection reset by peer)
[16:54:40] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:ccf4:63ad:cad7:4144) (Quit: Leaving)
[16:54:46] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com)
[16:56:32] <kurahaupo> NRK[m]: Those aren't pretty, but at least they readable left-to-right
[16:56:41] <kurahaupo> eg Go
[16:56:53] *** Joins: kuoi (~kuoi@109.175.166.59)
[16:58:38] *** Joins: chomwitt (~chomwitt@ppp-94-67-201-96.home.otenet.gr)
[16:59:24] <X-Scale> NRK[m]: "The syntax of the declaration for a variable mimics the syntax of expressions in which the variable might appear." --K&Re2 page 94
[17:00:24] *** Joins: seninha (~seninha@user/seninha)
[17:01:41] <kurahaupo> X-Scale: which highlights why prefix * was a poor language design choice
[17:01:57] *** Quits: Alhazred (~Alhazred@86.106.74.46) (Ping timeout: 250 seconds)
[17:03:36] <LordofLife> Ah
[17:03:40] *** Quits: chomwitt (~chomwitt@ppp-94-67-201-96.home.otenet.gr) (Ping timeout: 268 seconds)
[17:03:55] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[17:04:11] <X-Scale> kurahaupo: what do you consider would have been a better choice ?
[17:04:22] <kurahaupo> Around the time that C was created, suffix ^ was common in other languages for denoting pointer dereference. It's not like xor was ever THAT important that it deserved a single byte operator
[17:04:46] <NRK[m]> kurahaupo that just trades one problem for another. in order to make the complicated declarations simpler, they've made the more simple and common declaration worse.
[17:04:54] <kurahaupo> Or they could have extended the use of ->
[17:05:29] *** Quits: arinov (~arinov@78.187.169.227) (Ping timeout: 252 seconds)
[17:05:42] <kurahaupo> NRK[m]: var x ^^[4]^ int ← that should be pretty obvious
[17:06:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:06:17] <X-Scale> for some definition of obvious :)
[17:06:23] <kurahaupo> And it would still mimic the order used in an expression
[17:06:27] <NRK[m]> x_x
[17:06:31] <DarkUranium> The D approach is fine too, IMO. Types are right-to-left, *but they're consistent* (no weird spiral rule)
[17:06:45] <DarkUranium> No: int* arr[4]
[17:06:54] <DarkUranium> Yes: int*[4] arr
[17:07:33] <DarkUranium> AFAIK, some languages (isn't Zig one?) do `[4]int`, too (I don't know Zig, so I omitted the pointer here)
[17:07:48] <kurahaupo> The phrase "spiral rule" is itself misleading. It's not exactlya spiral, it IS exactly the pattern resulting from operator precedence
[17:07:52] <NRK[m]> i think zig stole go syntax
[17:08:04] <DarkUranium> kurahaupo: I know, I was being colloquial. Point is, D does it right-to-left, which is fine IMO.
[17:08:08] <NRK[m]> for declaration
[17:08:30] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[17:08:34] *** Joins: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net)
[17:08:44] <kurahaupo> Yes right to left is also fine, though it's not as good a match for the expression order unless you want to write [index]array
[17:08:45] <DarkUranium> For example, "pointer to array[4] to pointer to associative int=>float array" is: float[int]*[4]*
[17:09:04] *** Joins: Macuser (~Macuser@2600:1003:b448:7e82:d858:f8c5:d5c4:9fe2)
[17:09:39] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:10:03] <hxx> I'm trying to convert a tiny bit of C++ code to C. What is the equivalency of "auto" (from C++11) and "new"?
[17:11:56] <kurahaupo> hxx: not in the standard but gcc has typeof(y) x = y; and malloc it equivalent to new except there's no initialisation
[17:12:00] <Seng> Go uses []byte, which I like since it reads nicely in by head "slice of byte"
[17:12:54] <DarkUranium> <kurahaupo> Yes right to left is also fine, though it's not as good a match for the expression order unless you want to write [index]array
[17:13:19] <DarkUranium> kurahaupo: sure. But I think the value of "mimicking use" is severely overestimated.
[17:13:52] <DarkUranium> Especially since use might drop components. (i.e. not go "all the way" but stop at, say, `arr[3]` instead of `*arr[3]`, to take above `int* arr[4]` example)
[17:14:07] <hxx> kurahaupo, I'm trying to mentally convert this extremely minimalist qt5 example into C. https://zetcode.com/gui/qt5/menusandtoolbars/ Obviously using classes isn't an option.
[17:14:33] <kurahaupo> DarkUranium: On its own it's not particularly helpful, but if both declarations and decisions are left-to-right (or both right-to-left) then that simplifies the mental effort
[17:14:57] <DarkUranium> hxx: Qt is exclusively a C++ library, it doesn't support C in any way, shape or form.
[17:15:01] <kurahaupo> s/decisions/expressions/ # GRR swipe keyboard typo
[17:15:03] <DarkUranium> You'd find have to find (or make) a C wrapper.
[17:15:03] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:15:15] <DarkUranium> (I believe the WxWidgets project *had* one?)
[17:15:25] <DarkUranium> (no wait; PyQt)
[17:15:32] <hxx> How exactly would I make a wrapper for C? Never really done something like that before.
[17:15:59] <DarkUranium> First of all: Qt is *huge*. The amount of man-hours to do that would be enormous.
[17:16:21] <DarkUranium> But generally speaking, by writing (in C++) a bunch of functions that are exported as C functions, and bridge from C to C++.
[17:16:30] <Seng> DarkUranium and kurahaupo; you two are waaaay too passionate about language syntax :D
[17:16:32] <kurahaupo> Define functions that have pure C declarations, but C++ bodies that call the library functions that you want
[17:17:05] <DarkUranium> hxx: this sounds a lot like the xy problem. What are you *trying to do*?
[17:17:07] <kurahaupo> Seng: I just wish English was as well structured
[17:17:14] <hxx> I'm just making a frontend for qtwebengine.
[17:17:17] <hxx> in C
[17:17:27] <hxx> That's it.
[17:17:36] <DarkUranium> Well, you'd need to make that wrapper, first.
[17:18:00] <hxx> I would use webkitgtk, but ports to windows is nonexistent.
[17:19:05] <Seng> kurahaupo, I think German should be a rather striclty defined language with plenty of rules - knock yourself out with that!
[17:20:21] *** Quits: m4ho (~m4ho@81.20.119.6) (Ping timeout: 250 seconds)
[17:20:31] <kurahaupo> The objective isn't to have lots of rules. Quite the opposite, to have as few rules as necessary to make a fully functional language.
[17:21:24] <GyrosGeier> the fewer rules, the more complex it is to use
[17:21:25] *** Joins: m4ho (~m4ho@81.20.119.6)
[17:21:55] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[17:23:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[17:25:02] *** Quits: anjannath (~anjan@user/anjannath) (Ping timeout: 240 seconds)
[17:25:19] <DarkUranium> hxx: Firstly, that'll still be a large project. Though if you don't quite know how to even make a C wrapper, well. That need to be a first step.
[17:25:24] * V-T60 trying to reminisce why multiple declaration of local variables doesn't work
[17:25:27] <DarkUranium> I wouldn't use something as massive as Qt, though.
[17:25:37] <V-T60> Probably should repeat variable modifiers 
[17:26:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:26:32] <DarkUranium> hxx: One more thing, what do you need qtwebengine *itself* for?
[17:27:14] *** Joins: arinov (~arinov@176.89.29.127)
[17:28:20] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 268 seconds)
[17:30:57] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[17:31:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:32:49] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[17:33:08] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[17:33:15] *** Joins: Colt (~Colt@user/colt)
[17:34:01] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[17:34:11] *** Joins: Symbioti1Female (~Symbiotic@user/SymbioticFemale)
[17:34:36] *** Joins: kdc (~kdc@196.211.197.159)
[17:35:26] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[17:35:42] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[17:36:03] *** Joins: jjido (~Denis@90.213.58.125)
[17:36:06] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:36:06] <hxx> DarkUranium, I thought it was self explanatory what I intended to do with qtwebengine. It's chromium embedded into qt. And it's just a frontend, so 95% of the work is done for me.
[17:36:32] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Ping timeout (120 seconds))
[17:36:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:36:46] *** Joins: szutt (~szutt@116.37.2.145)
[17:37:08] <NRK[m]> why not use cpp if you're going to use qt
[17:37:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:37:21] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:37:29] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:37:34] <hxx> Probably for the best I use C++ instead.
[17:37:37] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[17:38:04] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[17:39:23] <NRK[m]> to write the wrapper you have to use cpp anyways, no?
[17:40:18] <hxx> I love C, but it looks like I have no choice but to use C++ or the already established bindings like python.
[17:43:06] *** Joins: Smilex (~ian@D47097B1.rev.sefiber.dk)
[17:43:43] <Smilex> Hey! Does anyone here know how to successfully fork and execve from an application with an active X11 connection?
[17:43:49] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[17:44:34] <clarity> What's unsuccessful about normal fork & execve?
[17:44:43] <clarity> Which error did you get?  From which syscall?
[17:45:21] <Smilex> I'm execve'ing chromium, and it can't create a connection to the X server
[17:45:40] <Smilex> "Unable to open X display"
[17:46:05] <clarity> Environment would be the obvious first thing to check
[17:46:08] <clarity> DISPLAY
[17:46:17] <Smilex> I'm wondering if I'll have to fork before I open a connection to the X server, then halt that fork process, and use it for later forks
[17:46:23] <Smilex> Yeah, I tried setting DISPLAY
[17:46:47] <Smilex> but I'm also pretty sure Xlib knows how to connect without DISPLAY being set
[17:46:59] <clarity> Really?
[17:47:18] <clarity> I've never witnessed that
[17:47:31] <trenka> no, it does not
[17:47:49] <NRK[m]> it just checks for $DISPLAY if u call it with NULL
[17:48:11] <NRK[m]> so if u call it with NULL and $DISPLAY is also not set, it will fail
[17:48:43] *** Quits: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[17:49:00] <Smilex> https://pastebin.com/EWbqjpgr
[17:49:13] <Smilex> Am I not setting $DISPLAY correctly?
[17:50:52] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[17:51:59] *** Joins: Burger (~textual@user/burger)
[17:53:03] <Smilex> hm, I printed it and no it's not being set properly
[17:55:13] *** Quits: gerwand (~gerwand@185.219.140.18) (Quit: gerwand)
[17:55:48] <Smilex> Ok, looks like it is the environment variables. Thanks!
[17:55:49] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[17:56:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:57:14] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[17:57:20] *** Quits: DaftMouse (~daftmouse@179.106.56.213) (Remote host closed the connection)
[17:57:24] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:59:42] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:00:39] *** Joins: anjannath (~anjan@user/anjannath)
[18:01:25] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 240 seconds)
[18:01:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[18:01:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:02:34] *** Joins: superboot (~agentgasm@user/superboot)
[18:03:17] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[18:03:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:03:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:03:50] *** Joins: wroathe (~wroathe@user/wroathe)
[18:04:32] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[18:05:50] *** Joins: moog (~moog@107.77.244.121)
[18:08:37] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 240 seconds)
[18:09:58] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:10:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:11:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:12:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:13:05] <DarkUranium> <hxx> DarkUranium, I thought it was self explanatory what I intended to do with qtwebengine. It's chromium embedded into qt. And it's just a frontend, so 95% of the work is done for me.
[18:13:09] <DarkUranium> Oh, he left.
[18:13:26] *** Joins: nicode (~nic@2607:f2c0:9417:4c00:c788:aed4:9339:c885)
[18:13:49] <DarkUranium> Well, if anyone else is curious w.r.t. what I was going to say: It was that it's not. There are many uses for embedding a browser, and since it's popular to do that just for UI, there are alternative (even browser-like, e.g. Lexbor) options for that.
[18:14:12] <DarkUranium> "I need qtwebengine" can *itself* be an XY problem.
[18:15:25] *** Quits: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[18:15:42] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:15:46] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[18:16:26] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[18:17:20] *** Joins: inlight (~inlight@157.35.17.204)
[18:17:21] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[18:17:21] *** Joins: inlight (~inlight@user/inlight)
[18:18:47] *** Quits: anjannath (~anjan@user/anjannath) (Quit: Zzz)
[18:20:08] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[18:26:47] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[18:26:52] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:27:17] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[18:27:22] *** Quits: m4ho (~m4ho@81.20.119.6) (Ping timeout: 260 seconds)
[18:29:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:29:51] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[18:30:15] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[18:30:54] *** Joins: m4ho (~m4ho@81.20.119.6)
[18:32:05] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[18:32:05] *** Quits: Macuser (~Macuser@2600:1003:b448:7e82:d858:f8c5:d5c4:9fe2) (Ping timeout: 250 seconds)
[18:32:08] *** Quits: bzng2 (~bzng4@91-115-29-1.adsl.highway.telekom.at) (Read error: Connection reset by peer)
[18:33:06] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 268 seconds)
[18:35:22] *** Joins: meator (~meator@user/meator)
[18:38:35] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[18:38:41] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[18:39:44] *** Quits: ntwk (~ntwk@user/ntwk) (Quit: ntwk)
[18:40:26] *** Joins: nuxil (~nuxil@141.195.51.213)
[18:40:30] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 268 seconds)
[18:46:19] *** Quits: doorzan (~doorzan@c-98-35-231-137.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[18:46:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:46:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:46:54] *** Joins: wroathe (~wroathe@user/wroathe)
[18:47:14] *** Joins: arinov (~arinov@31.223.11.114)
[18:48:59] <pragma-> supakeen: "object" is what C calls regions of memory storage that can hold values.
[18:49:11] <supakeen> Thank you pragma- :)
[18:49:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[18:49:57] *** Joins: Klinda (~superleag@user/klinda)
[18:50:24] <pragma-> oh, the channel did say that a few minutes later
[18:50:25] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[18:51:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:53:18] *** Joins: IsaiahG (~Isaiah6@69.59.80.251)
[18:54:00] *** Quits: arinov (~arinov@31.223.11.114) (Ping timeout: 265 seconds)
[18:54:11] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[18:55:36] *** Joins: arinov (~arinov@176.89.29.127)
[18:55:53] *** Quits: alch (~alch@151.38.18.81) (Read error: Connection reset by peer)
[18:58:50] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 265 seconds)
[19:00:19] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[19:00:45] *** Joins: alch (~alch@151.82.76.73)
[19:06:20] *** Joins: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net)
[19:07:33] *** Quits: inomoz (~inomoz@85.26.235.86) (Quit: WeeChat 3.3)
[19:08:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:09:47] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[19:10:16] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[19:11:08] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[19:14:30] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Ping timeout: 260 seconds)
[19:16:56] *** Joins: mimmy_ (~mimmy@37.19.212.190)
[19:17:58] *** Joins: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net)
[19:18:24] <hxztnxt> i have a very old copy of c programming language 1st edition in spanish
[19:18:30] <hxztnxt> what should i do with it?
[19:18:38] <pragma-> burn it
[19:18:59] <hxztnxt> that sound fair
[19:20:15] <hxztnxt> should i put it up on ebay?
[19:20:25] <hxztnxt> does anyone would want one?
[19:21:43] *** Joins: Atque (~Atque@user/atque)
[19:21:51] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[19:22:28] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[19:22:50] *** Joins: cebor (~cebor@user/cebor)
[19:23:08] <constxd> give it to a bright kid
[19:23:11] *** Quits: cebor (~cebor@user/cebor) (Remote host closed the connection)
[19:23:14] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[19:23:35] <constxd> get more latinx in STEM
[19:23:54] *** Joins: cebor (~cebor@user/cebor)
[19:24:29] <hxztnxt> but is the 1st edition relevant today?
[19:24:42] <hohohoroutines> not as a tutorial to c
[19:24:45] <hohohoroutines> otherwise yes
[19:24:56] <pragma-> the 1st edition is not only extremely outdated, it's also rife with errors
[19:25:00] <pragma-> the 2nd edition as well.
[19:25:08] *** Joins: lightningwright (~lightning@user/lightningwright)
[19:25:15] *** Joins: noonien (~noonien@user/noonien)
[19:25:16] <nomagno> Where did I mess up here? https://termbin.com/u7ft
[19:25:19] <pragma-> shame they never made a 3rd.
[19:25:26] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[19:25:27] <nomagno> I'm segfaulting, probably bad use of FPs
[19:25:44] <nomagno> I just don't know where the issue is
[19:25:49] *** Quits: X-Scale (~ARM@83.223.225.184) (Ping timeout: 240 seconds)
[19:25:49] *** X-Scale` is now known as X-Scale
[19:25:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:26:24] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[19:26:29] <hxztnxt> but 2nd is relevant
[19:26:37] <hohohoroutines> nomagno: why are you saving the endreach state in a variable instead of just breaking
[19:27:06] <hohohoroutines> nomagno: that whole function should probably be 2 lines
[19:27:51] <clarity> You're modifying a read-only string
[19:28:39] <hohohoroutines> yeah just replace char * mystr = with char mystr[] = 
[19:29:14] *** Parts: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Leaving)
[19:29:38] <hohohoroutines> and compile with asan, that would have caught this and told you what the problem was. that should be muscle memory at this point when you get a segv
[19:29:43] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[19:29:51] <pragma-> Three step process to figuring out a segfault: 1) use a debugger to detect the exact line the segfault occurs on; 2) examine the values involved; 3) trace the execution backwards to see why the values were wrong.
[19:30:21] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[19:30:57] *** Quits: SpikeHeron (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[19:31:15] <clarity> One-step process to figuring out a segfault: look at the code and spot the mistake
[19:31:19] <hohohoroutines> right, where 1) can be done noninteractively with asan rather than gdb if you live in 2014 or later
[19:31:31] <nomagno> hohohoroutines: I always compile with asan but I did not understand the segfault
[19:31:33] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[19:31:34] <nomagno> or like, the error it threw
[19:31:43] <nomagno> I should have read harder, probably.
[19:31:45] <river> my gdb only lets me go forwards :(
[19:31:49] <hohohoroutines> nomagno: -g ?
[19:32:05] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 250 seconds)
[19:32:12] <shokara> asan = -fsanitize=address ?
[19:32:24] <shokara> or does another flag need to be added?
[19:32:34] <hohohoroutines> yes, but you usually need -g for the warning to make sense
[19:32:51] <nomagno> I do have a shorthand for -fsanitize=address,undefined
[19:32:53] <pragma-> you can get rid of endreach completely.
[19:33:01] <nomagno> could that make some stuff harder to understand?
[19:33:03] <shokara> ah thanks. would it show as a compiler warning?
[19:33:06] <nomagno> if I always compile with those two
[19:33:28] <hohohoroutines> shokara: no, asan is a runtime thing
[19:34:02] *** Joins: Charadon (~Charadon@155.138.164.183)
[19:34:14] <shokara> oh i see it! this is really useful :D
[19:34:27] <nomagno> pragma: You're right, I code thinks up a bit too literally sometimes.
[19:34:49] <pragma-> nomagno: why are you assigning the result of func back into the string?
[19:34:56] <hohohoroutines> you want "-Wall -Wextra -Wshadow -g -fsanitize=address,undefined" when writing new code. at release time, replace with "-Wall -Wextra -Wshadow -Os" or "... -Ofast" according to what is appropriate for the application
[19:35:09] <pragma-> nomagno: char *p = "hello";  p[0] = 'j'; 
[19:35:10] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:35:12] <pragma-> nomagno: what happens here?
[19:35:15] <hohohoroutines> (but also don't wait til release time to test with those flags)
[19:35:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:35:44] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:35:49] <nomagno> pragma-: "hello" gets its first character modified to- AAAAH
[19:36:08] <nomagno> Yes I did indeed bork up with a basic concept.
[19:36:20] <nomagno> "hello" is a const
[19:36:32] <nomagno> as all string literals are
[19:36:33] <pragma-> it's not const.
[19:36:40] <pragma-> but it's undefined to modify them.
[19:36:50] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[19:36:51] <pragma-> some systems allow writeable string literals, the vast majority do not.
[19:37:02] <pragma-> but the type of "hi" is char[3], not const char[3].
[19:37:06] <hohohoroutines> it's only not const for historical reasons, you should assume it acts like const char *
[19:37:20] <pragma-> it's not const at all.
[19:37:30] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:37:50] <hohohoroutines> pragma-: i can't think of any context in which it's ok to make use of the fact that it's not
[19:38:27] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[19:38:51] <nomagno> pragma-: So, this map function should definitely not modify its argument, I just did it as a quick experiment
[19:39:19] <nomagno> However, it could be useful for, in this dumb case, printing character per character and getting the return value. Like a string burner :D
[19:39:19] <pragma-> "strmap" does sound like a function that might modify its argument. the problem is that you're passing a strign literal to it.
[19:39:19] <hohohoroutines> nomagno: but if you make a few character change in main() it's fine
[19:39:41] <nomagno> I did figure out, thanks
[19:39:54] <clarity> I'm glad you did
[19:40:06] <pragma-> nomagno: char *p = "hi"; /* pointer to string literal */   char str[] = "hi"; /* copies string literal into modifiable array */
[19:40:26] <nomagno> I got your point the first time :D
[19:40:33] <pragma-> but did you get my array?
[19:40:39] <clarity> and my tail?
[19:40:51] <pragma-> You can't have tail without getting head first.
[19:40:55] <clarity> :(
[19:41:22] <nomagno> Did you remember to send the array trough fax?
[19:41:25] <nomagno> I haven't receive anything
[19:41:56] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0)
[19:42:16] <pragma-> map functions do tend to modify their arguments
[19:42:47] *** Joins: noonien (~noonien@user/noonien)
[19:43:34] <hohohoroutines> wired: name the function modify() and only use the term map to document what it does
[19:43:38] <nomagno> Function pointers are actually surprisingly usable in a portable way in C
[19:43:53] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Ping timeout: 252 seconds)
[19:43:58] <hohohoroutines> (that was a joke, please don't do that)
[19:44:13] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:45:04] <pragma-> nomagno: personally I would get rid of the endreach boolean and just make the function void strmap(...) { if (!*chararray) { *charray = func(*chararray); ++chararray; } }
[19:45:08] *** Quits: noonien (~noonien@user/noonien) (Client Quit)
[19:45:22] <hohohoroutines> well it needs a loop
[19:45:26] <hohohoroutines> but it can be a one line for loop
[19:45:27] <nomagno> Fairly interesting question: If C allows void pointers, but they can't be dereferenced before casting, why doesn't it allow void data that can't be interacted with before casting?
[19:45:28] *** Joins: noonien (~noonien@user/noonien)
[19:45:29] <pragma-> er
[19:45:33] <pragma-> I mean...
[19:45:38] <pragma-> nomagno: personally I would get rid of the endreach boolean and just make the function void strmap(...) { while (!*chararray) { *charray = func(*chararray); ++chararray; } }
[19:45:51] <hohohoroutines> that's still less readable than a for loop :)
[19:46:06] <nomagno> A for loop is bloat for something like this
[19:46:12] <hohohoroutines> wtf
[19:46:18] <pragma-> actually most languages are abandoned the "unreadable" C-style for loop construct.
[19:46:19] <hohohoroutines> for (char * c = chararray; *c; c++) *c = func(*c);
[19:46:24] <hohohoroutines> how is that bloat
[19:46:28] <pragma-> are abandoning
[19:46:49] <hohohoroutines> smh
[19:46:57] <hohohoroutines> you think your while loop is more readable
[19:48:02] <nomagno> I was joking.
[19:48:21] <pragma-> the endreach variable does make it a bit more noisy 
[19:48:39] <pragma-> and the return statement at the end is redundant
[19:49:36] <nomagno> I did remove that, and that
[19:49:40] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:50:31] <pragma-> Er, while (*chararray) { ... }
[19:50:32] *** Joins: inlight (~inlight@157.35.17.204)
[19:50:32] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[19:50:32] *** Joins: inlight (~inlight@user/inlight)
[19:51:08] * pragma- chatises channel for not catching the negation
[19:51:18] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[19:51:33] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[19:52:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:52:59] <hohohoroutines> any decent compiler should turn all of these into the same instructions, if they're correct, but there's more room for the non-for-loop options to be subtly incorrect
[19:53:11] *** Joins: stonkey (~stonkey@user/stonkey)
[19:54:06] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Quit: -a- Connection Timed Out)
[19:55:15] *** Quits: mimmy_ (~mimmy@37.19.212.190) (Ping timeout: 252 seconds)
[19:55:53] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[19:57:30] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[19:57:34] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 268 seconds)
[19:58:53] *** Quits: APic (~apic@apic.name) (Quit: [TLS] Client upgrade)
[19:59:03] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[19:59:17] *** Joins: APic (apic@apic.name)
[19:59:53] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[20:01:03] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[20:01:28] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Quit: Leaving)
[20:02:38] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[20:02:39] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com) (Ping timeout: 250 seconds)
[20:02:43] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210)
[20:02:56] *** Joins: inlight (~inlight@157.35.17.204)
[20:02:56] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[20:02:56] *** Joins: inlight (~inlight@user/inlight)
[20:08:05] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[20:09:25] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210) (Remote host closed the connection)
[20:09:36] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[20:10:14] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Client Quit)
[20:10:36] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210)
[20:11:13] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[20:11:35] *** Joins: noonien (~noonien@user/noonien)
[20:12:25] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210) (Read error: Connection reset by peer)
[20:13:35] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210)
[20:15:33] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[20:16:41] *** Quits: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) (Client Quit)
[20:17:48] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[20:17:49] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210) (Ping timeout: 250 seconds)
[20:20:34] *** Joins: noonien (~noonien@user/noonien)
[20:21:21] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[20:22:38] *** Joins: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net)
[20:24:48] *** Joins: SpikeHeron (~DutchIngr@user/dutch)
[20:24:50] *** Quits: noonien (~noonien@user/noonien) (Client Quit)
[20:24:58] *** Quits: Thedarkb1 (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad) (Ping timeout: 260 seconds)
[20:25:07] *** Joins: noonien (~noonien@user/noonien)
[20:25:32] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:25:48] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[20:26:34] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:26:40] *** Joins: lleo (~leo@188-206-103-176.mobile.kpn.net)
[20:28:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[20:29:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:29:33] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[20:29:59] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[20:30:14] *** Joins: leo__ (~leo@188-206-103-176.mobile.kpn.net)
[20:30:17] *** Joins: mahmutov (~mahmutov@37.155.43.0)
[20:32:19] *** Quits: lleo (~leo@188-206-103-176.mobile.kpn.net) (Ping timeout: 250 seconds)
[20:33:04] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[20:33:25] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[20:33:53] <ormaaj> It's always seg's fault.
[20:37:35] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:3831:16c5:17f3:e631) (Quit: Quit)
[20:38:04] *** Joins: kdc (~kdc@196.211.197.159)
[20:39:01] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:40:03] *** Joins: sedeki (~textual@user/sedeki)
[20:41:34] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[20:41:36] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[20:42:02] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[20:42:06] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Quit: Leaving)
[20:45:44] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[20:46:18] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[20:48:35] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 250 seconds)
[20:49:18] *** Joins: inlight (~inlight@157.35.17.204)
[20:49:18] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[20:49:18] *** Joins: inlight (~inlight@user/inlight)
[20:52:47] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[20:52:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[20:53:14] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:ad06:9adc:663d:62c0) (Quit: simon323)
[20:54:18] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[20:54:29] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:54:38] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:54:45] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[20:54:54] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:56:30] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:56:44] *** Joins: X-Scale` (~ARM@92.250.97.79)
[20:57:00] *** Joins: Zophirel (~Zophirel@93-35-145-87.ip55.fastwebnet.it)
[20:58:19] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.162) (Ping timeout: 250 seconds)
[20:58:24] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:1b9c:d4d6:c8fb:c24f)
[20:58:26] *** Joins: arinov (~arinov@213.194.126.155)
[20:58:29] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 256 seconds)
[20:58:29] *** X-Scale` is now known as X-Scale
[20:58:33] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:58:36] <Zophirel> hi i'm trying to do some unit testing on my struct but i don't know why i cannot access the value correctly here is the code (https://bpa.st/MDNQ) the output is `FAIL: Expected 10 Was 140734991536972`, `ordered_array_init` malloc the necessary memory space for the struct
[20:58:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[20:59:12] *** Joins: Betal (~Betal@user/betal)
[21:01:21] <trenka> Zophirel: arr -> record[0] is &x, not x
[21:01:46] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[21:03:32] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[21:07:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[21:07:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:09:24] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Remote host closed the connection)
[21:09:39] <Zophirel> trenka so should i derefernce `arr -> record[0]`?
[21:13:27] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[21:15:01] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[21:15:02] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[21:15:13] *** Quits: root_ (~root@dhcp-24-53-243-12.cable.user.start.ca) (Ping timeout: 250 seconds)
[21:15:59] *** Joins: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net)
[21:18:04] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[21:18:07] <hxztnxt> if i want to read multiple files, each using multiple threads, should i mmap all the files in the beginning or mmap one file, feed chunks of that file to the threads, then umap that file and mmap another one
[21:18:51] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[21:20:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:20:06] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:20:06] *** Joins: wroathe (~wroathe@user/wroathe)
[21:20:12] <hxztnxt> in other words, how would i make this example work for multiple files
[21:20:21] <hxztnxt> https://termbin.com/zsu6
[21:20:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[21:25:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:26:15] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[21:29:24] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[21:31:08] *** pflanze_ is now known as pflanze
[21:31:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:31:57] *** Quits: Smilex (~ian@D47097B1.rev.sefiber.dk) (Quit: WeeChat 2.3)
[21:40:36] *** Joins: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net)
[21:41:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[21:42:09] <aesin> ls -ltr
[21:42:30] <aesin> sorry type =\
[21:42:35] <aesin> *typo
[21:47:30] *** Joins: nvmd (~nvmd@user/nvmd)
[21:48:14] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[21:48:21] *** Joins: kuber (~kuber@97-113-156-194.tukw.qwest.net)
[21:49:29] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:50:18] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[21:51:00] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[21:51:28] <hxztnxt> how can i mmap several files?
[21:52:09] <hxztnxt> do i mmap all files at once or should i unmap before mmapping a new file?
[21:53:17] *** Joins: dohtem (uid524096@user/dohtem)
[21:54:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:55:22] *** Quits: nomn (nomn@user/nomn) (Quit: WeeChat 3.2)
[21:57:44] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[21:58:33] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:58:33] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:58:33] *** Joins: wroathe (~wroathe@user/wroathe)
[22:00:34] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[22:00:50] *** Quits: Zophirel (~Zophirel@93-35-145-87.ip55.fastwebnet.it) (Quit: Connection closed)
[22:00:56] <twkm> you need several fd's to map several files, at least initially.
[22:01:04] <trenka> hxztnxt: however you want
[22:03:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:03:54] *** Quits: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[22:05:55] <hxztnxt> so i should mmap say 2 files, then close the fd's?
[22:06:16] <hxztnxt> what if the ram is not enough, am i not risking losing data?
[22:06:38] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:06:43] <hxztnxt> or is it in that case copied back to disk
[22:06:45] <hxztnxt> ?
[22:07:04] <hxztnxt> and then retrieved whenever accessed
[22:07:07] <hxztnxt> ?
[22:07:09] *** Joins: magla (~gelignite@55d43df6.access.ecotel.net)
[22:09:32] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[22:09:54] *** Joins: inlight (~inlight@157.35.17.204)
[22:09:54] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[22:09:54] *** Joins: inlight (~inlight@user/inlight)
[22:11:39] *** Joins: lightningwright (~lightning@user/lightningwright)
[22:16:40] <fizzie> A file-backed mapping is... well, backed by a file. So if the OS wants to flush it back to disk to reclaim some physical RAM, it can.
[22:19:26] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0) (Remote host closed the connection)
[22:19:50] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0)
[22:20:30] <hxztnxt> so should i close the file just after the mmapping was done?
[22:25:47] *** Joins: Kev_ (~Kev@2a01cb0400149f0015da76d049caea4a.ipv6.abo.wanadoo.fr)
[22:27:58] *** Joins: Klinda (~superleag@user/klinda)
[22:28:03] *** Quits: alch (~alch@151.82.76.73) (Ping timeout: 268 seconds)
[22:28:28] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:29:37] *** Joins: alch (~alch@151.34.144.135)
[22:30:15] <twkm> usually, unless you might want to change the mapping.
[22:31:22] <hxztnxt> but what if i run out of ram?
[22:31:26] <hxztnxt> what does it do?
[22:31:54] <hxztnxt> does it return error or does it handle it somehow?
[22:32:17] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:32:30] <twkm> the o/s might evict other things from ram.
[22:33:02] *** Joins: Akuli (~Akuli@82-203-164-199.bb.dnainternet.fi)
[22:33:28] <hxztnxt> what if i have 8ram and mmap a 4gb file and a 5gb file
[22:33:54] <hxztnxt> does it evict the first file?
[22:34:07] <fizzie> Then you won't be able to have both in physical memory simultaneously, but that's kind of the whole point of virtual memory systems.
[22:34:11] <twkm> until you actually begin reading the file it might not fetch any of it.
[22:34:15] <pragma-> be pretty hard to fit anything in only 8 ram.
[22:34:38] <fizzie> 8 whole sheep.
[22:35:12] <twkm> it just seems to all be where you can use it.  how much is actually read into memory is something the o/s juggles.
[22:37:10] <hxztnxt> twkm: if i mmap a file, it gives an address to that file, but that file isnt at ran until i access that address? what if I have closed the fd? how does it access it?
[22:37:31] <fizzie> `mmap` records an additional reference to the file independent of the file descriptor.
[22:37:55] <fizzie> Here's a POSIX quote: "The mmap() function shall add an extra reference to the file associated with the file descriptor fildes which is not removed by a subsequent close() on that file descriptor. This reference shall be removed when there are no more mappings to the file."
[22:38:31] <fizzie> In other words, the mapping refers to a specific file, not to a file descriptor.
[22:38:45] <hxztnxt> genius
[22:38:54] *** Quits: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[22:39:41] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[22:40:33] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:40:59] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 252 seconds)
[22:41:08] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:41:20] <twkm> in that way mmap is a bit like dup, and munmap like close.
[22:43:43] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[22:44:22] *** Joins: pgib (~textual@173.38.117.69)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:20] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[22:45:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:47:08] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:47:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:47:11] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:00] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:50:18] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[22:50:45] * hohohoroutines looked at a mun map once
[22:51:08] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[22:53:34] *** Quits: rcf (rcf@iceland.sdf.org) (Quit: WeeChat 3.2.1)
[22:55:23] *** Joins: rcf (~rcf@beastie.sdf.org)
[22:56:13] *** Joins: rnb (~rnb@static.183.117.21.65.clients.your-server.de)
[22:56:49] *** Parts: rnb (~rnb@static.183.117.21.65.clients.your-server.de) ()
[22:57:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:643a:6fe1:69f2:5213)
[22:58:49] <fizzie> Mun maps and Minmus maps.
[22:58:49] *** Quits: leo__ (~leo@188-206-103-176.mobile.kpn.net) (Quit: beyond time space in laws)
[22:58:59] *** Parts: Ecco (~user@lfbn-idf1-1-725-214.w86-245.abo.wanadoo.fr) ()
[23:00:44] *** Joins: sunsh1ne_warrior (~sunsh1ne_@46.148.141.240)
[23:00:53] *** Joins: Akiva (~Akiva@user/Akiva)
[23:01:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:02:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:05:02] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[23:07:35] *** Quits: rcf (~rcf@beastie.sdf.org) (Quit: WeeChat 3.2.1)
[23:09:07] *** Joins: rcf (~rcf@iceland.sdf.org)
[23:13:41] *** Joins: somlis (~somlis@user/somlis)
[23:14:21] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 252 seconds)
[23:17:09] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Remote host closed the connection)
[23:19:10] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0) (Remote host closed the connection)
[23:19:31] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0)
[23:19:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[23:26:05] *** Quits: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net) (Quit: Client closed)
[23:27:33] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[23:28:11] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:643a:6fe1:69f2:5213) (Quit: Quit)
[23:28:47] *** Joins: monkey_ (~user@181.114.17.106)
[23:29:16] *** Joins: lightningwright (~lightning@user/lightningwright)
[23:30:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:31:25] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[23:31:50] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[23:31:53] <Seng> does anyone have some small projects they want to showcase on Github?
[23:32:15] <Seng> Looking for inspiration on what is a good structure for a program :)
[23:32:24] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:32:34] * pragma- peers at qrpn
[23:32:37] * pragma- nudges hohohoroutines
[23:36:24] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:36:45] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[23:37:36] *** Joins: inlight (~inlight@157.35.17.204)
[23:37:37] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[23:37:37] *** Joins: inlight (~inlight@user/inlight)
[23:37:44] *** Joins: strajder (~strajder@user/strajder)
[23:42:46] <CoderCharmander> Seng: It might be not the best structure ever, but I have written a small program that helps me conjugate Latin nouns
[23:42:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:42:51] <CoderCharmander> https://gitlab.com/CoderCharmander/latrag
[23:43:15] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[23:43:31] <CoderCharmander> Also it has some Hungarian function and variable names so sorry for that
[23:43:42] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[23:44:08] *** Joins: Cyp (~cyp@213.237.85.9)
[23:44:08] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:44:25] *** Joins: seninha (~seninha@user/seninha)
[23:46:01] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[23:49:28] <Seng> CoderCharmander, thanks. I have to login to GitLab, and I don't have an account right now. I have your repo bookmarked for later :)
[23:50:02] <Seng> I'll probably manage with the hungarian variable names :b It's more a question of structure than function.
[23:50:19] <CoderCharmander> Seng: Oh, sorry, I had it set on private, it should work now
[23:53:12] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[23:55:05] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[23:57:12] <Seng> can confirm (y)
[23:59:52] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
