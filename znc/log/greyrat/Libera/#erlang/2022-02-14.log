[00:01:36] *** Quits: jao (~jao@static-68-235-44-54.cust.tzulo.com) (Ping timeout: 272 seconds)
[00:31:16] *** Joins: infinity_fye (~infinityf@102.43.189.218)
[00:31:35] *** Quits: infinityfye (~infinityf@41.36.143.159) (Ping timeout: 256 seconds)
[00:35:51] *** Joins: jao (~jao@68.235.43.108)
[00:38:38] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[00:44:38] *** Quits: blaze (~blaze@user/blaze) (Quit: WeeChat 3.3)
[00:44:40] *** Quits: xek_ (~xek@89-72-114-215.dynamic.chello.pl) (Ping timeout: 272 seconds)
[00:56:58] *** Joins: ExeciN (~ExeciN@user/nicexe)
[00:58:41] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[01:31:06] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[01:32:52] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[01:33:57] *** Quits: yauhsien_ (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[01:36:26] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[01:40:27] *** Joins: yauhsien_ (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[01:43:14] *** Quits: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[01:45:16] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[01:46:37] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933)
[01:48:38] *** Quits: yauhsien_ (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[01:56:37] *** Quits: infinity_fye (~infinityf@102.43.189.218) (Ping timeout: 240 seconds)
[02:32:59] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[02:33:19] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:54:01] *** Quits: Corbit (~Corbit@2001:a61:2bad:2b01:fde8:866d:7929:8ca7) (Quit: WeeChat 3.3)
[02:55:50] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:57:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:01:25] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933)
[03:41:18] *** Quits: okeuday (~okeuday@24-113-18-65.wavecable.com) (Quit: Leaving.)
[03:42:35] *** Joins: okeuday (~okeuday@24-113-18-65.wavecable.com)
[04:10:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:22:26] *** Quits: SrainUser (~Srain@136.32.234.46) (Remote host closed the connection)
[04:34:00] *** Joins: yauhsien (~yauhsien@61-231-32-103.dynamic-ip.hinet.net)
[04:38:20] *** Quits: yauhsien (~yauhsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[05:31:37] *** Quits: jao (~jao@68.235.43.108) (Ping timeout: 240 seconds)
[05:33:50] *** Joins: jao (~jao@static-68-235-44-10.cust.tzulo.com)
[05:44:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:45:31] *** Quits: sezuan (sezuan@iceland.sdf.org) (Remote host closed the connection)
[06:05:20] *** Joins: arpunk (1e898d322c@user/arpunk)
[06:27:42] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 256 seconds)
[06:32:25] *** Joins: jespada (~jespada@90.254.246.194)
[08:31:14] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[08:40:55] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[08:53:42] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[08:56:23] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:10:20] *** Quits: jao (~jao@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 256 seconds)
[09:11:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[09:21:46] *** Quits: kilian (~kilian@2a03:4000:33:556:1812:cff:fefe:9efd) (*.net *.split)
[09:21:46] *** Quits: sasajuric (sid29842@id-29842.ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:21:46] *** Quits: okeuday (~okeuday@24-113-18-65.wavecable.com) (*.net *.split)
[09:21:46] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[09:21:46] *** Quits: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: MononcQc (~ferd@li1968-139.members.linode.com) (*.net *.split)
[09:22:06] *** Joins: kilian (~kilian@2a03:4000:33:556:1812:cff:fefe:9efd)
[09:22:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:22:24] *** Joins: okeuday (~okeuday@24-113-18-65.wavecable.com)
[09:22:24] *** Joins: MononcQc (~ferd@li1968-139.members.linode.com)
[09:22:24] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[09:22:24] *** Joins: danieli (~danieli@user/danieli)
[09:22:38] *** Joins: sasajuric (sid29842@id-29842.ilkley.irccloud.com)
[09:22:42] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[09:28:58] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (*.net *.split)
[09:30:18] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:30:49] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[09:46:57] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[09:48:13] *** Joins: sezuan (~sezuan@iceland.sdf.org)
[09:48:47] *** Joins: infinityfye (~infinityf@102.43.189.218)
[10:38:36] *** Quits: infinityfye (~infinityf@102.43.189.218) (Ping timeout: 252 seconds)
[10:50:21] *** Joins: xek_ (~xek@89-72-114-215.dynamic.chello.pl)
[10:57:16] *** Joins: mexen (uid495612@user/mexen)
[11:35:04] *** Joins: voltone (~voltone@2a02-a453-5486-1-5caa-c7b5-1b23-9d08.fixed6.kpn.net)
[11:50:46] *** Joins: gearnode (~gearnode@2a01cb000ce2c100f22f74fffedefec1.ipv6.abo.wanadoo.fr)
[13:00:46] *** Quits: voltone (~voltone@2a02-a453-5486-1-5caa-c7b5-1b23-9d08.fixed6.kpn.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:10] *** Joins: voltone (~voltone@2a02-a453-5486-1-5caa-c7b5-1b23-9d08.fixed6.kpn.net)
[14:31:52] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:20] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:01:51] *** Joins: infinityfye (~infinityf@156.220.128.49)
[16:30:15] *** Joins: vidbina (~vid@dynamic-077-183-036-041.77.183.pool.telefonica.de)
[16:35:15] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:43:24] *** Joins: jao (~jao@68.235.43.172)
[16:56:36] *** Quits: vidbina (~vid@dynamic-077-183-036-041.77.183.pool.telefonica.de) (Ping timeout: 240 seconds)
[17:09:24] *** Quits: jao (~jao@68.235.43.172) (Ping timeout: 240 seconds)
[17:33:28] *** Joins: jao (~jao@static-68-235-44-10.cust.tzulo.com)
[17:53:24] *** Quits: jao (~jao@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 240 seconds)
[17:55:23] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
[18:00:17] *** Joins: vidbina (~vid@dynamic-077-183-036-041.77.183.pool.telefonica.de)
[18:19:24] *** Quits: jao (~jao@211.68.17.95.dynamic.jazztel.es) (Ping timeout: 240 seconds)
[18:38:21] *** Joins: phaleth (~user@user/phaleth)
[19:01:24] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[19:01:46] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Client Quit)
[19:02:26] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[19:05:06] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Client Quit)
[19:08:15] *** Quits: voltone (~voltone@2a02-a453-5486-1-5caa-c7b5-1b23-9d08.fixed6.kpn.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:13:35] *** Joins: voltone (~voltone@2a02-a453-5486-1-5caa-c7b5-1b23-9d08.fixed6.kpn.net)
[19:24:47] *** Quits: voltone (~voltone@2a02-a453-5486-1-5caa-c7b5-1b23-9d08.fixed6.kpn.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:27:54] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[19:28:31] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[19:38:42] *** Joins: Sqaure (~a@user/square)
[19:54:31] *** Parts: Sqaure (~a@user/square) (Leaving)
[20:22:49] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[20:25:03] *** Joins: Corbit (~Corbit@2001:a61:2bad:2b01:fde8:866d:7929:8ca7)
[21:21:09] *** Quits: Corbit (~Corbit@2001:a61:2bad:2b01:fde8:866d:7929:8ca7) (Ping timeout: 250 seconds)
[21:23:10] <Ankhers> Does Erlang have some kind of structure similar to a bimap? I have a situation where I want to store data in a map like structure, but I also want lookup keys based on values.
[21:32:35] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Read error: Connection reset by peer)
[21:34:27] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[21:41:08] *** Quits: TheCoffeMaker_ (~TheCoffeM@200.126.129.149) (Quit: So long and thanks for all the fish)
[21:42:05] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[21:55:42] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:57:01] *** Parts: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) ()
[21:57:23] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[21:59:47] *** Joins: rgrinberg (~textual@187.194.14.9)
[22:00:27] <yauhsien> Ankhers: you mean bidirectional map like Elixir bimap? the ets module in erlang allow you look up either by key or by value.
[22:17:33] <Ankhers> yauhsien: Is ets efficient when not searching by the primary key? Or does it need to search the entire table?
[22:21:13] <Ankhers> And yes, like the bimap library on hex (at least based on the description). It would be nice to not have to bring in Elixir for this though.
[22:26:31] <okeuday> Ankhers: https://github.com/okeuday/key2value is a way of tracking two separate keys with one value I have used
[22:28:33] <yauhsien> in Elixir, erlang devices like ets and erlang modules like io can be referenced in elixir by using some conventional syntax, quoted with colon, like :ets, :io, ...
[22:31:20] <Ankhers> okeuday: I don't think that is quite the same. That looks like it points 2 keys to the same value. I want key -> value like a traditional map, but I also want value -> key.
[22:32:15] <Ankhers> yauhsien: I'm aware, but I would rather not use an Elixir lib in an Erlang lib.
[22:32:20] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:32:47] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:32:49] <yauhsien> if you consult erlang ets module document, be aware of that an ets table is crashable, such as when you try to query a key absent from the table. devices in erlang like ets and gen-server are fragile because of erlang philosophy. 
[22:34:48] <okeuday> Ankhers: your use would probably have your key as key1, value as key2 and set the value as undefined
[22:35:12] <yauhsien>  ets:select/2 is a flexible query, with some impressive matching syntax.
[22:37:45] <yauhsien> Ankhers: but if you really want keeping just one-to-one relationship between a key and a value, you have to maintain the relationship by yourself if you use ets.
[22:42:13] <yauhsien> Ankhers: there are some documents talking about erlang efficiency factors, like https://erlang.org/documentation/doc-5.5.2/pdf/efficiency_guide-5.5.2.pdf
[22:44:13] <Ankhers> okeuday: It looks like it does not enforce key2 being unique? 
[22:45:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:56:35] <Ankhers> Actually, I guess that isn't bad. I just need to look things up first.
[23:03:38] <okeuday> Ankhers: yes, you have to always do the lookup based on the most unique key because the other key causes an overwrite when it lacks uniqueness, it isn't really a problem that can be avoided while being flexible
[23:07:36] <okeuday> Ankhers: that should only matter if you were using the value data (i.e., the overwrite happens there, so you shouldn't need to be concerned about that), for your case key2 is unique for key2 use, it is like two maps put together
[23:08:15] *** Quits: infinityfye (~infinityf@156.220.128.49) (Ping timeout: 252 seconds)
[23:10:22] *** Joins: Corbit (~Corbit@2001:a61:2bad:2b01:fde8:866d:7929:8ca7)
[23:22:43] *** Quits: rgrinberg (~textual@187.194.14.9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:23:28] *** Joins: infinityfye (~infinityf@156.220.128.49)
[23:23:40] *** Quits: infinityfye (~infinityf@156.220.128.49) (Remote host closed the connection)
[23:41:07] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a085:e890:a5e3:3bdd)
[23:41:09] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a085:e890:a5e3:3bdd) (Client Quit)
[23:47:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:48:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:50:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:50:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:50:59] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[23:51:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:55:47] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:89c:f82b:eb69:d057)
[23:58:42] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:89c:f82b:eb69:d057) (Client Quit)
