[00:04:00] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:05:23] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:13:16] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 258 seconds)
[00:24:59] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 264 seconds)
[00:26:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:27:53] *** Quits: dra (~dra@2a04:4540:6413:be00:61eb:d823:a9de:d0ed) (Quit: Leaving)
[00:29:05] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:29:29] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:31:46] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[00:36:41] *** Quits: makomo_ (~makomo@user/makomo) (Quit: WeeChat 3.2)
[00:37:34] <hayley> Good morning everyone!
[00:37:47] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:38:47] <lotuseater> hello hayley 
[00:39:06] <lotuseater> oh you're awake early, and that on a sunday :)
[00:40:17] <jeko> hello hayley
[00:57:23] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[01:12:25] <hayley> https://www.youtube.com/watch?v=Kxb8AQVcdac
[01:12:25] -ixelp- Making Intelligence with Basic Switch - YouTube
[01:12:54] <lotuseater> by Nintendo‚Ñ¢
[01:31:55] *** Quits: jeko (~user@ool-18e4d9ae.dyn.optonline.net) (Remote host closed the connection)
[01:32:49] *** Joins: jeko (~user@ool-18e4d9ae.dyn.optonline.net)
[01:46:27] <gilberth> I wish there were SETF for C.
[01:48:11] <lotuseater> this would be helpful
[01:49:04] <gilberth> I never got around this, but I considered many times to use s-expressions for C.
[01:53:58] *** Joins: X-Scale (~ARM@31.22.163.11)
[01:54:07] <edgar-rft> what about (setf c 'lisp)
[01:56:12] <gilberth> alias gcc=ccl # or gcc=sbcl, if you wish
[01:59:02] <lotuseater> also funny is when symlinking vim to nano so people who use it are trapped when they open nano next time
[01:59:37] <hayley> I considered many times to use CL.
[02:01:26] <pjb> gilberth: there is: link your C program with libecl.so, and use setf!
[02:02:00] <lotuseater> pjb: oh. hm
[02:02:39] <gilberth> This won't make it possible to define what 'foo(x) = y;" should mean in my C code.
[02:05:27] <pjb> No, but you will be able to do cl_eval(cl_read_from_string("(setf (foo x) y)")); or something like that.
[02:05:47] <pjb> gilberth: foo(x) = y; is possible in C++, with references.
[02:06:39] <gilberth> Can the setf function foo(x) do arbitrary things? And I don't want to use C++.
[02:06:40] <pjb> gilberth: in C, you can only define a macro, eg.  #define foo(x) x->foo
[02:07:09] <gilberth> pjb: Again: This does not allow me to do arbitrary things.
[02:07:30] <pjb> Yes.  Just fucking use Common Lisp!
[02:08:00] <gilberth> Sure, I could have a locative in Lisp speak and say #define foo(x) (*foo_loc(x)) but that won't help.
[02:08:23] <hayley> I would still just simply use CL
[02:08:50] <hayley> https://www.furkantokac.com/rpi3-fast-boot-less-than-2-seconds/
[02:09:41] <gilberth> hayley: Write a good compiler then. Emulate the CADR in 7ns/cycle with interpreting the microcode in CL. Good luck.
[02:13:19] <edgar-rft> gilberth: on a computer you can only do things that computers can do, what is an insignificantly small subset of all arbitrary things
[02:16:54] <hayley> gilberth: Which one of us has 2.7\tau per character?
[02:35:53] <pjb> edgar-rft: you still have to prove that an animal brain is not a computer, or that anything else in the universe is not a computer.
[02:35:59] <pjb> (or simulation in a computer).
[02:37:26] <pjb> edgar-rft: we cannot make physical realizations of a Universal Turing Machines, so what makes you think there exist in the universe something that can do more than a UTM?
[02:38:29] <pjb> (and it's not because we don't have the technology that we cannot make it, it's because it's fundamentally impossible: the universe has a finite number of particles, so we cannot build an infinite tape! and the universe has a finite useful life time, so computation time is bounded, so no UTM).
[02:53:26] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[02:54:35] <lotuseater> hey Qwnavery 
[02:55:55] <Qwnavery> hihi lotuseater 
[02:56:12] <Qwnavery> Finished reading "Copyright Does Not Exist"
[02:56:44] <lotuseater> but I'm about going to sleep
[02:57:09] <Qwnavery> oh of course, It's like 10:30PM there isn't it?
[02:57:18] <pjb> Qwnavery: indeed it's a stupid idea, when you have computer in which the basic operationnal mode is copying.
[02:57:47] <lotuseater> i had some good time copying some simple fonts from the logo of the work company, but much left to do
[02:57:52] <lotuseater> noo
[02:57:56] <lotuseater> 1:30am
[02:58:07] <lotuseater> i'm over time
[02:58:07] <pjb> Qwnavery: furthermore, notice how any copyright dispute can only be resolved by a human judge that will arbitrarily decide whether you have a derived work or not.
[02:58:56] <Qwnavery> pjb: Mhm, it's a document detailing the 1980s and 90s Swedish hacker culture, with references to cyberpunk and cybernetics. Very good read. A copy is hosted on my FTP server http://ftp.lambdaspace.xyz/netrunner/copyright-does-not-exist.pdf
[02:59:19] <Qwnavery> DCMA laws in America are absurdist.
[02:59:49] <Qwnavery> I truly am apologetic to those stifled by the American Copyright and Patent regime.
[03:00:24] <lotuseater> can you again give me the link to the metatheory book on your ftp?
[03:00:28] <Qwnavery> It's also a shame how American copyright laws are hyperextended through international relations.
[03:00:55] <Qwnavery> lotuseater: sure
[03:01:37] <edgar-rft> pjb: I imagine the universe as an infinite piece of duct tape :-)
[03:06:10] <lotuseater> Qwnavery: so?
[03:11:24] <lotuseater> oh sry
[03:15:40] * hayley 's neural network decided to stop working today. Great timing!
[03:16:25] <Qwnavery> hayley: erm your neural network or *your* neural network. If it's the latter, drink some coffee or something.
[03:16:41] <hayley> The former. It's for a statistics assignment.
[03:17:21] <Qwnavery> Very nice. Are you in Uni or something?
[03:17:35] <hayley> Yes.
[03:18:00] <Qwnavery> Damn.
[03:18:15] <Qwnavery> I don't know why, It
[03:18:58] <Qwnavery> 'd just never occured to me. Probably most of the people here would be in some form of education though predefined courses.
[03:22:38] * hayley adds more neurons to one layer and it decides to work again. Sure, why not.
[03:24:19] <hayley> Even if I did find all the RNGs, I bet it's still not going to be reproducible, cause "fuck you, that's why". If it's not the hardware, the way they do parallelism might make it non-deterministic again.
[03:25:28] <hayley> It seems reproducible over 3 attempts on my machine.
[03:39:40] <hayley> https://www.youtube.com/watch?v=52QiqDRC7ak
[03:39:40] -ixelp- Gary Numan - Cold Warning - YouTube
[03:47:42] *** Quits: christophergray (~christoph@190.148.52.44) (Quit: WeeChat 3.3)
[03:55:50] <hayley> "Given the class of real-time systems that Ada is targeting, it is possible that the end-users may die of more than embarrasment if this example is followed."
[04:04:02] <hayley> The problem was that ReLU seemingly doesn't like being the final activation function, and I figured I didn't really need an activation function at the end anyway.
[04:10:29] <hayley> gilberth: https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.111.4448&rep=rep1&type=pdf The quadratic equation goes FUBAR on floating point arithmetic
[04:15:57] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[04:16:26] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[04:19:45] *** Quits: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[04:41:00] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 244 seconds)
[05:20:07] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[05:29:29] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[06:59:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[07:12:35] *** Quits: jeko (~user@ool-18e4d9ae.dyn.optonline.net) (Ping timeout: 260 seconds)
[07:24:54] *** Quits: semz (~none@user/semz) (Ping timeout: 258 seconds)
[07:26:52] *** Quits: vats (~vats@103.158.91.248) (Ping timeout: 252 seconds)
[07:27:10] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:27:56] <dave0> maw
[07:28:16] *** Joins: vats (~vats@42.111.12.141)
[07:28:43] <hayley> Hey dave0
[07:29:04] <dave0> hi hayley, how's it going?
[07:29:15] <hayley> It goes.
[07:30:28] <dave0> i'm having a late lunch
[07:37:30] *** Joins: semz (~none@user/semz)
[07:59:13] * contrapunctus back to their CLIM word processor project
[08:07:13] <contrapunctus> Chapter 4 of the CLIM user guide seems to cover the display of formatted text...now to figure out how to apply them to the relevant stream.
[08:10:45] <hayley> Isn't it something like (with-blablabla (stream some-options) (write-line "Blah" stream))?
[08:19:36] <contrapunctus> hayley: `clim:with-text-style` ? Possibly...on the other hand, maybe it's presentation types I ought to be using ü§îÔ∏è
[08:19:59] <hayley> In the case of a word processor, I don't think you have more semantic meaning than text.
[08:20:06] <hayley> So, nothing to present.
[08:26:16] <contrapunctus> hm...what I had in mind was a semantically-aware word processor - where commands operate on not just text (characters, words, sentences) but also document elements (paragraphs, headings, links, images, etc)
[08:59:13] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[09:09:02] *** Joins: Alfr (~Alfr@user/alfr)
[09:17:26] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[09:17:54] *** Joins: Alfr (~Alfr@user/alfr)
[09:19:46] <hayley> https://www.youtube.com/watch?v=s37cUyTGRUM
[09:19:46] -ixelp- Firth Of Fifth (Remastered 2008) - YouTube
[09:20:03] <hayley> Well, okay. But you still use text styles and formatting when producing presentations. It bottoms out somehow.
[09:21:21] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[09:21:49] *** Joins: Alfr (~Alfr@user/alfr)
[09:52:33] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[10:02:37] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[10:34:47] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[10:59:37] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[11:01:40] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:02:34] *** Joins: kakuhen_ (~kakuhen@user/kakuhen)
[11:02:38] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Read error: Connection reset by peer)
[11:13:39] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Remote host closed the connection)
[11:26:33] *** Quits: kakuhen_ (~kakuhen@user/kakuhen) (Quit: Leaving...)
[11:27:59] *** Quits: vats (~vats@42.111.12.141) (Ping timeout: 264 seconds)
[11:28:21] *** Joins: vats (~vats@42.111.13.197)
[11:35:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:44] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[11:38:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:31] *** Joins: aeth (~aeth@user/aeth)
[11:52:45] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[12:05:00] * hayley uploaded an image: (15KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/XmJUvxUNGbmjQKtGymKskbxp/Screenshot_2021-10-24_19-41-59.png >
[12:06:08] <moon-child> til no-defun-allowed is special
[12:21:54] <amazigh> https://hugokant.bandcamp.com/track/i-dont-want-to-be-an-emperor
[12:21:55] -ixelp- I don't want to be an emperor | Hugo Kant
[12:23:49] * amazigh slap special
[12:23:52] * amazigh slaps special
[12:24:05] *** Quits: vats (~vats@42.111.13.197) (Ping timeout: 260 seconds)
[12:24:22] *** Joins: vats (~vats@103.158.91.248)
[12:25:29] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Remote host closed the connection)
[12:25:44] <hayley> Hm, well, I think TeX does justification a lot better than the web browser...somehow.
[12:26:48] <amazigh> isn't TeX famous for that?
[12:26:56] <hayley> Yes.
[12:27:08] <hayley> But it's only like 40 years old, you think they'd catch up by now.
[12:27:34] <amazigh> the fact that browser developpers complained about the problem of justification helped 'TeX is awesome'
[12:27:47] <amazigh> meme
[12:27:58] <amazigh> I was said TeX was released bug free
[12:28:22] <amazigh> another meme about TeX but possibly also about Knuth
[12:28:28] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[12:29:26] <hayley> Well, you can hyphenate with CSS, but I don't think you hyphenate usu-ally or per-missions. Guess I check a dictionary.
[12:29:53] <hayley> No, both fine.
[12:30:36] <semz> TeX's algorithm is quadratic afaik, so it's not necessarily a great idea to put it into a browser.
[12:30:54] <amazigh> TIL
[12:31:16] <amazigh> many good things are quadratic ;)
[12:31:25] <amazigh> earley parser is more n3 IIRC
[12:31:43] <amazigh> n^3 
[12:32:54] <hayley> I wonder if you could do an approximation which only considers a screenful at a time, which would limit n.
[12:38:03] <moon-child> browsers are famously terrible at justification
[12:38:12] <moon-child> and hyphenation.  I think only firefox does it
[12:38:41] <shka> you would think that given the time and work put into browsers, they would be pretty good
[12:39:08] <shka> though i have no idea where is the work put into firefox nowadays 
[12:40:07] <selwyn> gilberth: use c++ and override =
[12:40:23] <hayley> https://www.youtube.com/watch?v=EAFu1wj2f44
[12:40:23] -ixelp- Telekon - YouTube
[12:40:26] <selwyn> then you have setf, problem solved
[12:40:44] * hayley likes the line "You end on reel one" but can't think of where to use it.
[12:40:46] <shka> selwyn: and replace the thermal paste on your cpu with mayonnaise 
[12:41:11] <hayley> shka: https://www.youtube.com/watch?v=ClfGb1z6w0A
[12:41:11] -ixelp- Can you use mayonnaise as thermal paste? - YouTube
[12:41:48] <shka> well, now i can know this
[12:44:08] <shka> ok, so replacing thermal paste with mayo is still a better idea then using C++
[12:46:21] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[12:47:08] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[12:48:38] <hayley> If you need higher performance, also consider https://www.youtube.com/watch?v=IYTJfLyo_vE
[12:48:38] -ixelp- The vodka cooled PC - YouTube
[12:53:51] <semz> Apparently SUBSEQ is an accessor. I never knew.
[12:54:13] <shka> huh,yeah
[12:54:33] <shka> this is actually useful
[12:57:20] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[13:06:31] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:08:28] * hayley uploaded an image: (116KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ftxXDUQZgQHnOrNwoncmyLPG/eclipse.png >
[13:56:41] <mfiano> Morning
[13:56:58] <hayley> Hey mfiano
[13:58:06] <selwyn> hi
[14:19:34] * hayley uploaded an image: (178KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/bkwxTTFnJxprLEZuFrSTkOJF/53a109c98ae93d4e.jpeg >
[14:29:23] *** Joins: random-nick (~random-ni@87.116.183.63)
[14:32:12] <dave0> http://backreaction.blogspot.com/2021/10/does-captain-kirk-die-when-he-goes.html
[14:32:12] -ixelp- Sabine Hossenfelder: Backreaction: Does Captain Kirk die when he goes through the transporter?
[14:32:29] <selwyn> love sabine
[14:32:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[14:33:10] <hayley> "I can do it" "You can't" "I can" "You can't" "I can" "You can" "I can't"
[14:33:11] <selwyn> ripping the piss out of particle physicists since 2006
[14:33:18] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[14:39:19] <hayley> I wonder if I should consistently use TLA+ish notation wherein you write X' = f(X) /\ Y' = f(Y) to update for my VM specification.
[14:40:04] <hayley> This means that the FORTH notation is a special case of the SECD notation, which is a special case of the conjunction(?) notation.
[14:41:09] <hayley> Also, <- would be reserved for mutation only, which is nicer.
[14:56:01] <hayley> But then, should I be able to write (assuming F was some uncommon register) <S, (F' . E), C, D> -> <S, E, C, D> or should I introduce a temporary so the assignment is explicit?
[14:58:53] <hayley> We still produce an equation for F' after all.
[15:00:17] <selwyn> today i learned that 'heap' and 'stack' are the same word in turkish
[15:00:27] <selwyn> important memory allocation ramifications
[15:03:45] <hayley> Henry Baker was Turkish???
[15:04:20] <selwyn> indeed
[15:04:27] <hayley> Do you have any strong opinions on notation?
[15:04:28] <selwyn> that must be why no return to constantinople yet
[15:05:06] <selwyn> me? notation?
[15:05:34] <hayley> Yes.
[15:05:49] <selwyn> well, i don't have any opinions about this notation yet
[15:07:58] <selwyn> ok, so /\ is conjunction
[15:08:12] <selwyn> hm
[15:08:33] <hayley> SECD looks like old state -> new state
[15:09:13] <hayley> TLA looks like A' = f(A) /\ B' = f(B) /\ ...
[15:10:33] <selwyn> i feel that introducing set theory notation to a situation where you have mutability is risky
[15:10:40] <selwyn> but if these languages have already done it, then idk
[15:10:42] <selwyn> why not
[15:11:09] <hayley> One can desugar from the former to the latter by <a, b, c...> -> <x, y, z> == a' = x /\ b' = y /\ c' = z /\ ...
[15:11:10] <selwyn> if you think about it, nothing in mathematics is mutable
[15:11:52] <hayley> Well, there's no sets, the /\ is first order logic. And I reserve <- for mutation, = just reassigns a register (which could be done with tail recursion easily).
[15:12:08] <selwyn> yeah, sorry, logic notation
[15:12:36] <hayley> Fair point though.
[15:13:02] <selwyn> would like to disclose that (unfortunately) i know very little logic
[15:13:11] <selwyn> would be nice to learn all of that good shit one day
[15:13:32] <hayley> Technically I think you're supposed to model a heap as a map of pointer -> value but that's too hard for me.
[15:13:34] <pjb> semz: yes, subseq is an accessor, but without changing the size. It uses replace.
[15:14:58] <selwyn> unsure how i feel about /\
[15:15:16] <selwyn> i mostly feel that unicode was invented to be used
[15:15:32] <selwyn> tla+ looks really fun
[15:15:37] <hayley> Yes, I use the actual symbol in the documentation, I'm just lazy on irc.
[15:15:48] <selwyn> wiki uses /\ as well?
[15:16:27] <hayley> You write /\ in TLA, but the pretty printer (TLaTeX) prints the right character.
[15:17:33] <selwyn> there is some interesting work being done with lean
[15:17:54] <selwyn> but apparently it is suffering a lot
[15:18:23] <hayley> This is temporal logic, which is kinda different, though IIRC TLC uses a SAT solver for some things.
[15:18:31] <selwyn> they are doing a complete rewrite of the codebase that will introduce breaking changes in one of the main projects that uses it
[15:18:45] <selwyn> it seems that it is yet another casualty of being written in c++
[15:19:05] <hayley> Kinda weird that both ACL2 and TLA+ are used for hardware, and they are both only based on untyped first order logic.
[15:19:40] <selwyn> oh yeah, with lean 4 they are finally going for the bootstrapping thing
[15:19:56] <hayley> Lamport even says that a type system would be a way to bring subtle bugs into model checking, which would be disastrous.
[15:20:26] <selwyn> > We believe the Lean 3 theorem prover‚Äôs success is primarily due to its extensibility capabilities and metaprogramming framework [6]. However, users cannot modify many parts of the system without changing Lean 3 source code written in C++. 
[15:21:24] <selwyn> so instead they are writing a lean to c compiler
[15:21:28] <selwyn> just use lisp lol
[15:21:32] <selwyn> poor guys
[15:23:12] * hayley uploaded an image: (52KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/kQWZApznLVXKMaToQfFtJuUr/img_20210202_151931.jpg >
[15:25:42] <hayley> Actual Christopher Rhodes OC meme
[15:26:26] *** Joins: notzmv (~zmv@user/notzmv)
[15:26:51] <selwyn> the first lisp meme
[15:31:15] <selwyn> https://cdn.discordapp.com/attachments/872369447590035536/901802368646152212/DSC_05471.JPG
[15:33:37] *** Joins: dra (~dra@2a04:4540:6420:a100:5d83:e105:f7e0:ca98)
[15:33:41] <dra> Hello!
[15:33:47] <selwyn> hi
[15:40:42] *** Quits: vats (~vats@103.158.91.248) (Ping timeout: 260 seconds)
[15:51:25] <pjb> hayley: :-)
[15:53:43] *** Joins: vats (~vats@103.158.91.228)
[15:55:47] <semz> pjb: I guess it's a little like dpb vs. (setf ldb)
[16:04:29] *** Quits: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi) (Quit: Leaving)
[16:10:27] *** Quits: vats (~vats@103.158.91.228) (Ping timeout: 258 seconds)
[16:10:53] *** Joins: vats (~vats@42.111.12.66)
[16:18:35] *** Quits: dra (~dra@2a04:4540:6420:a100:5d83:e105:f7e0:ca98) (Ping timeout: 260 seconds)
[16:32:35] <selwyn> https://www.lowtechmagazine.com/2021/10/how-to-build-a-low-tech-solar-panel.html
[16:32:36] -ixelp- How to Build a Low-tech Solar Panel? - LOW-TECH MAGAZINE
[16:36:18] <selwyn> solar panels in 1909!
[16:37:07] <selwyn> this is a really remarkable article
[16:48:10] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[16:50:01] *** Quits: X-Scale (~ARM@31.22.163.11) (Ping timeout: 244 seconds)
[16:50:01] *** X-Scale` is now known as X-Scale
[16:54:52] <dave0> nite all
[16:55:06] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:00:05] *** Joins: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-103E-static.midco.net)
[17:00:55] <edgar-rft> I've heard the sun allegedly already shined even *before* 1909 :-)
[17:03:16] *** Quits: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1038-static.midco.net) (Ping timeout: 252 seconds)
[17:07:12] *** Joins: jeko (~user@ool-18e4d9ae.dyn.optonline.net)
[17:08:07] *** Joins: X-Scale` (~ARM@92.250.96.217)
[17:08:54] *** Quits: vats (~vats@42.111.12.66) (Ping timeout: 260 seconds)
[17:09:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[17:09:34] *** Joins: vats (~vats@42.111.20.236)
[17:09:50] *** X-Scale` is now known as X-Scale
[17:26:19] <mfiano> I'm still re-working my very old Emacs configuration :)
[17:26:45] <mfiano> Does anyone use a vanilla Emacs (not a distribution like Portacle, Doom, etc), in combination with use-package?
[17:30:21] *** Joins: makomo (~makomo@user/makomo)
[17:41:34] <ck_> only (require ..)s in my .emacs
[17:47:06] *** Joins: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-103E-static.midco.net)
[17:49:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:49:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[17:49:44] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-103E-static.midco.net) (Ping timeout: 258 seconds)
[17:52:45] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:59:15] *** Quits: vats (~vats@42.111.20.236) (Ping timeout: 244 seconds)
[18:00:54] *** Joins: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de)
[18:02:45] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[18:08:19] <SAL9000> mfiano: yes, I do
[18:08:25] <jeko> mfiano: I do, yes
[18:08:53] *** Joins: vats (~vats@42.111.20.236)
[18:09:13] <mfiano> Hi. I was too but I found a package that is less magical and boilerplatey, and very extensible.
[18:10:07] <jeko> what package is that?
[18:10:10] <mfiano> https://www.emacswiki.org/emacs/SetupEl#h5o-15
[18:11:44] <mfiano> It's much more concise due to its local macros that are bundled and also user-definable
[18:11:53] <mfiano> example package bundle https://gist.github.com/mfiano/7fe275a5f11733af0785ea2c7aebc1da
[18:11:54] -ixelp- init.el ¬∑ GitHub
[18:12:52] <mfiano> I don't like the magic of use-package deferring loading for a handful of declarations like bind/commands/etc
[18:13:33] <SAL9000> interesting, and I like that it supports straight.el already going by your example
[18:13:44] <mfiano> Well that is a custom macro of mine
[18:13:47] <mfiano> very simple
[18:14:01] <SAL9000> what part is custom? :pkg ?
[18:14:07] <mfiano> https://gist.github.com/mfiano/0cce47605e18d3067c9f54f0492b3613
[18:14:07] -ixelp- init.el ¬∑ GitHub
[18:14:09] <mfiano> yes
[18:14:38] <mfiano> local macros are defined with setup-define and are typically keyword symbols to make indentation nicer
[18:14:46] <SAL9000> ah, and that should allow custom recipes, too :)
[18:14:54] <mfiano> right
[18:14:57] <SAL9000> e.g. (:pkg (beancount :type git :host github :repo "beancount/beancount-mode"))
[18:15:12] <mfiano> The other 2 keywords above are also custom macros of mine
[18:15:58] <mfiano> :hide-mode is for diminish, and ensures it is loaded and removes the need to specify the mode if it can be derived from the current context https://gist.github.com/mfiano/d4341485f0ef27c65fb6b772354f9d1f
[18:15:59] -ixelp- init.el ¬∑ GitHub
[18:16:20] <SAL9000> nice!
[18:17:04] <mfiano> I like it because it removes the magic of use-package deferring and stuff. ever expand use-package? it's hard to understand...it's a mess.
[18:17:18] <mfiano> It's also very concise, especially if you add macros for your common patterns
[18:17:45] <SAL9000> yeah, I mostly ended up (use-package foo :config ...) and ignoring a lot of its other features
[18:18:05] <mfiano> Also the guesswork of :init vs :config
[18:18:24] <SAL9000> huh? :init is before loading :config is after loading... seems simple to me
[18:18:36] <jeko> the use-package docs covers the difference between :init and :config
[18:18:39] <mfiano> Right
[18:18:49] <mfiano> What I'm saying is it is declarative
[18:19:04] <mfiano> :init could come after :config, which reads terrible :)
[18:19:18] <SAL9000> Yeah, I get your point :)
[18:19:33] <mfiano> and some declarations defer any action until it is loaded by a command, binding, etc
[18:20:42] <mfiano> I guess what I really like is the granularity is up to you. You can "setup" multiple packages/features in one block, or split up configuring a single package into multiple forms
[18:20:58] <mfiano> toplevel forms*
[18:23:00] <mfiano> Anyway, cool library, and saves a bit of boilerplate defining hooks and other common idioms, and gives you a lot of freedom. I'm using it now and thought I'd share.
[18:23:56] *** Joins: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi)
[18:39:33] *** Quits: vats (~vats@42.111.20.236) (Ping timeout: 244 seconds)
[18:40:18] *** Joins: vats (~vats@103.158.91.228)
[18:47:23] *** Quits: vats (~vats@103.158.91.228) (Ping timeout: 265 seconds)
[18:49:21] *** Joins: vats (~vats@42.111.21.111)
[18:57:41] *** Quits: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi) (Read error: Connection reset by peer)
[18:59:06] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[19:06:14] *** Quits: vats (~vats@42.111.21.111) (Ping timeout: 265 seconds)
[19:06:48] *** Joins: vats (~vats@103.158.91.228)
[20:05:47] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 264 seconds)
[20:19:38] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:25:10] *** Quits: jeko (~user@ool-18e4d9ae.dyn.optonline.net) (Remote host closed the connection)
[20:25:47] *** Joins: jeko (~user@ool-18e4d9ae.dyn.optonline.net)
[20:27:04] *** Quits: jeko (~user@ool-18e4d9ae.dyn.optonline.net) (Changing host)
[20:27:04] *** Joins: jeko (~user@user/jeko)
[20:32:49] *** Quits: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:37:12] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:ed38:680c:308b:2321) (Ping timeout: 268 seconds)
[20:37:58] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:299b:88e7:728b:a92)
[20:41:27] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 265 seconds)
[20:56:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[21:07:40] *** Joins: dra (~dra@2a04:4540:6420:a100:5d83:e105:f7e0:ca98)
[21:17:05] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[21:31:20] *** Quits: vats (~vats@103.158.91.228) (Quit: Quit)
[21:31:38] *** Joins: vats (~vats@103.158.91.228)
[22:17:50] *** Quits: vats (~vats@103.158.91.228) (Ping timeout: 260 seconds)
[22:18:36] *** Joins: vats (~vats@42.111.20.90)
[22:28:19] *** Quits: vats (~vats@42.111.20.90) (Ping timeout: 252 seconds)
[22:29:25] *** Joins: vats (~vats@103.158.91.228)
[22:36:37] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[23:01:29] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 244 seconds)
[23:06:46] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Quit: Leaving...)
[23:09:37] *** Joins: notzmv (~zmv@user/notzmv)
[23:38:03] *** Joins: pjb (~pjb@user/pjb)
[23:54:17] *** Quits: dra (~dra@2a04:4540:6420:a100:5d83:e105:f7e0:ca98) (Remote host closed the connection)
