[00:08:12] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 240 seconds)
[00:11:21] *** Joins: lavaball (felix@31.204.155.215)
[00:13:48] <Torr> Has the switch statement become a default Gawk feature? This doc mentions it's optional: http://gnu.ist.utl.pt/software/gawk/manual/html_node/Switch-Statement.html#Switch-Statement , but I was having a look at the makefiles and there's nothing parsing the <--enable-switch> flag.
[00:23:35] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[00:25:18] *** Joins: eddof13 (~eddof13@185.153.177.238)
[00:30:35] <Earnest> Torr: https://www.gnu.org/software/gawk/manual/html_node/Switch-Statement.html
[00:32:00] <emanuele6> as far as i can tell, the --enable-switch flag doesn't even exit anymore, so yes
[00:32:48] <Earnest> Their website is old
[00:33:03] <emanuele6> s/exit/exist/
[00:34:20] <Torr> Gotcha, thanks
[00:35:30] *** Joins: seninha (~chatzilla@user/seninha)
[00:49:40] *** Quits: eddof13 (~eddof13@185.153.177.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:10:42] *** Joins: eddof13 (~eddof13@185.153.177.233)
[01:19:04] *** Quits: user51 (~user51@77.126.87.206) (Remote host closed the connection)
[01:53:17] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:10:45] *** Quits: eddof13 (~eddof13@185.153.177.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:02] *** Joins: eddof13 (~eddof13@185.153.177.233)
[02:24:05] *** Quits: eddof13 (~eddof13@185.153.177.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:17] *** Joins: eddof13 (~eddof13@185.153.177.233)
[02:37:26] *** Quits: eddof13 (~eddof13@185.153.177.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:56:45] *** Joins: eddof13 (~eddof13@185.153.177.231)
[03:08:16] *** Quits: eddof13 (~eddof13@185.153.177.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:24:31] *** Joins: eddof13 (~eddof13@185.153.177.240)
[03:34:40] *** Quits: eddof13 (~eddof13@185.153.177.240) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:04:48] *** Joins: eddof13 (~eddof13@185.153.177.231)
[04:14:45] *** Quits: eddof13 (~eddof13@185.153.177.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:26:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f97e:25ad:9b8c:d34e)
[04:37:32] *** Joins: eddof13 (~eddof13@185.153.177.241)
[04:40:38] *** Joins: roarde (~roarde@user/roarde)
[05:08:44] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:19:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f97e:25ad:9b8c:d34e) (Quit: Leaving)
[05:48:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[05:58:50] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[06:04:12] *** Joins: seninha (~chatzilla@user/seninha)
[06:06:22] *** Quits: eddof13 (~eddof13@185.153.177.241) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:46:15] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[06:52:02] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 240 seconds)
[07:53:32] *** Joins: downunder (~downunder@110.151.111.219)
[08:56:11] *** Joins: user51 (~user51@77.126.87.206)
[09:07:18] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[09:08:00] *** Joins: epony (epony@user/epony)
[09:21:40] *** Quits: epony (epony@user/epony) (Remote host closed the connection)
[09:25:13] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:45:57] *** Joins: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr)
[09:51:41] *** Joins: epony (epony@user/epony)
[10:08:06] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:17:41] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[10:22:36] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cfdc:46b6:d3d6:d388) (Ping timeout: 240 seconds)
[10:23:59] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:24:50] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:c731:e273:a007:5879)
[10:26:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[10:32:29] *** Joins: seninha (~chatzilla@user/seninha)
[10:33:07] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:37:24] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[10:40:07] *** Joins: lavaball (felix@31.204.155.215)
[10:40:39] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[10:51:59] *** Joins: bluedust (~bluedust@103.161.144.63)
[11:05:38] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:16:54] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:23:45] *** Joins: timm (~timm@user/timm)
[11:40:41] *** Quits: bluedust (~bluedust@103.161.144.63) (Remote host closed the connection)
[11:44:14] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[11:46:03] *** Quits: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr) (Quit: WeeChat 3.4)
[11:51:48] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[11:55:47] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[12:02:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[12:07:48] *** Quits: timm (~timm@user/timm) (Ping timeout: 240 seconds)
[12:10:41] *** Joins: epony (epony@user/epony)
[12:13:08] *** Quits: [RMS] (~rs@genoce.org) (Ping timeout: 256 seconds)
[12:14:36] *** Joins: timm (~timm@user/timm)
[12:16:08] *** Quits: timm (~timm@user/timm) (Client Quit)
[15:29:39] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[15:47:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[15:53:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:18:27] *** Joins: [R] (~rs@genoce.org)
[16:36:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[16:42:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:16:31] *** Joins: Torr (~Torr@user/torr)
[17:23:36] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:35:12] <Torr> What happens with <getline> when it's used with parenthesis? The docs demonstrate it being used without them, but there's no error when running: awk '{cmd="echo bla";cmd | getline(i); close(cmd);print(i)}'
[17:36:06] <Torr> Is it similar to <print> where a parenthesis are optional?
[17:36:07] <xmb> parenthesis like what, sorry my english
[17:36:42] <Torr> Contrast that command with this: awk '{cmd="echo bla";cmd | getline i ; close(cmd);print(i)}'
[17:36:56] <xmb> this all works fine
[17:37:35] <Torr> where *parenthesis are optional
[17:37:46] <Torr> XP
[17:38:29] <Torr> Why doesn't the 1st command prints "bla" upon pressing <enter>?
[17:39:05] <Patsie> it does
[17:39:31] <Patsie> ohw the first
[17:40:10] <xmb> # gawk '{ $0 | getline r; close( $0 ); print r }' <<<'echo foo
[17:40:11] <xmb> # gawk '{ $0 | getline r; close( $0 ); print r }' <<<'echo foo'
[17:40:14] <shbot> xmb: foo
[17:40:17] <shbot> xmb: Missing terminating quote, bracket or keyword
[17:40:58] <Patsie> # gawk '{ $0 | getline(r); close( $0 ); print r }' <<<'echo foo'
[17:41:00] <shbot> Patsie: no output
[17:41:08] <Patsie> so yeah, the brackets are messing it up
[17:41:41] <xmb> never tried or seen getline(r) heh, or much print(i)
[17:41:45] <Patsie> me neither
[17:41:53] <Patsie> it's a command, not a function
[17:41:58] <Patsie> so no parenthesis
[17:42:06] <Patsie> but I don't know why gawk doesn't crap out over the syntax
[17:42:16] <xmb> why should it ..
[17:42:17] <xmb> :)
[17:42:41] <Torr> # awk '{print "bla"}'
[17:42:48] <shbot> Torr: no output within the time limit
[17:42:59] <yeti> gawk '{ $0 | getline(r); close( $0 ); print }' <<<'echo foo'
[17:43:00] <Patsie> # awk 'BEGIN {print "bla"}'
[17:43:02] <shbot> Patsie: bla
[17:43:14] <yeti> gawk prints it as $0 for me
[17:43:33] <Torr> # awk 'BEGIN {print("bla")}'
[17:43:35] <shbot> Torr: bla
[17:43:40] <xmb> dont getline(r) getline r
[17:43:45] <Torr> :P
[17:44:02] <yeti> dont gawk...  :-P
[17:45:12] <xmb> gawk, the only nearly reasonable awk
[17:45:47] <yeti> found #gawk then
[17:46:09] <Torr> # awk '{cmd="echo bla";cmd | getline(i) ; close(cmd);print(i)}'
[17:46:12] <xmb> maybe, im no irc pro
[17:46:16] <shbot> Torr: no output within the time limit
[17:46:22] <xmb> why u getline()
[17:46:25] <Patsie> should we also start a #mawk channel and an #nawk channel ? :P
[17:46:37] <xmb> we should if we had
[17:46:38] <Torr> Plain <awk> doesn't emit an error either.
[17:46:55] <Patsie> Torr: depends on which awk is your 'plain' awk
[17:47:05] <Patsie> awk -W version
[17:47:26] <yeti> # gawk '{ $0 | getline(r); close( $0 ); print"$0=" $0 }' <<<'echo foo'
[17:47:27] <shbot> yeti: $0=foo
[17:47:39] <Torr> I assume the bot uses a BSD awk when not executed with <gawk>, am I wrong?
[17:47:44] <Torr> # awk --version
[17:47:46] <shbot> Torr: awk version 20210215
[17:47:54] <Patsie> it uses nawk
[17:48:35] <Torr> Hmmmm, didn't know this one.
[17:49:02] <Torr> But it's not <gawk>, so the point still valid.
[17:49:05] <Patsie> but yeah, nawk and gawk seem ok with getline(var); but don't populate var and mawk craps out on the syntax
[17:49:13] <Patsie> so lesson: don't use parenthesis on getline
[17:49:36] <Torr> But why does <print> and <print()> work then?
[17:49:47] <Patsie> because the programmers are stupid
[17:49:48] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[17:50:06] <yeti> print prob,y accepts expressions and (expression) is an expression
[17:50:06] <Patsie> don't use parenthesis on commands (even if they work) only on functions
[17:50:07] <xmb> they never completed
[17:50:10] <xmb> awk is just.. something small
[17:50:14] <xmb> its no dev env or something
[17:50:27] <Patsie> yeti: good point
[17:51:16] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:53:12] <Torr> # awk BEGIN{'{print((((("bla")))))}'}
[17:53:14] <shbot> Torr: bla
[17:53:18] <Torr> # gawk BEGIN{'{print((((("bla")))))}'}
[17:53:20] <shbot> Torr: bla
[17:53:27] <Torr> yeti: Makes sense.
[17:53:38] <xmb> # gawk 'BEGIN { ( print "a" ) ( print "b" ) }'
[17:53:45] <shbot> xmb: gawk: cmd. line:1: BEGIN { ( print "a" ) ( print "b" ) }
[17:53:45] <shbot> xmb: gawk: cmd. line:1:           ^ syntax error
[17:53:45] <shbot> xmb: etc... ( http://ix.io/3Rv2 )
[17:54:31] <xmb> # gawk 'BEGIN { ( y = 1 ) (x = ( a = 2 ) + (a = 4) ) ; print y, x }'
[17:54:33] <shbot> xmb: 1 6
[17:56:06] <yeti> the return value of an assignment is its value
[17:56:20] <xmb> ye
[17:56:31] <yeti> # mawk 'BEGIN{ print ( y = 1 ) (x = ( a = 2 ) + (a = 4) ) }'
[17:56:32] <shbot> yeti: 16
[17:56:40] <Torr> yeti: As in C =D
[17:56:41] <yeti> mixed with sting cat'ening
[18:01:52] <Torr> The switch statement is Gawk only, right?
[18:02:05] <xmb> i think so
[18:04:40] <Torr> Works: http://ix.io/3Rv4
[18:05:08] <xmb> aha 
[18:05:14] <Torr> Doesn't work: http://ix.io/3Rv5
[18:06:24] <Torr> In a statement :P
[18:10:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[18:11:28] *** Joins: Enissay (~Enissay@user/enissay)
[18:15:45] <Patsie> use gawk in your sebang
[18:15:53] <Patsie> this is _not_ posix awk
[18:16:20] <Patsie> doesn't work in mawk of nawk or any other awk, except gawk
[18:16:28] <Torr> Ok
[18:17:25] <Patsie> interesting that your awk is in /bin and not /usr/bin though
[18:17:34] <Torr> # awk 'BEGIN { if ()}'
[18:17:38] <Torr> Ops
[18:17:45] <shbot> Torr: awk: syntax error at source line 1
[18:17:45] <shbot> Torr:  context is
[18:17:45] <shbot> Torr: etc... ( http://ix.io/3Rv6 )
[18:17:57] <Torr> # awk 'BEGIN { if ("bla") {print "bla"}}'
[18:17:59] <shbot> Torr: bla
[18:18:03] <Torr> # awk 'BEGIN { if "bla" {print "bla"}}'
[18:18:10] <shbot> Torr: awk: syntax error at source line 1
[18:18:10] <shbot> Torr:  context is
[18:18:10] <shbot> Torr: etc... ( http://ix.io/3Rv7 )
[18:18:39] <Torr> Yeah... that "only for functions" rule doesn't work.
[18:20:34] <Torr> Patsie: Why would it be in /usr/bin?
[18:23:24] *** Joins: bluedust (~bluedust@103.165.167.61)
[18:25:32] <Patsie> /bin should contain necessary for booting executables and /usr/bin any non-necessary ones
[18:25:57] <yeti> /bin is dead ?
[18:26:11] <yeti> didnt debian decide that a while ago?
[18:26:25] <yeti> I'm not supporting that move...
[18:27:04] <yeti> and I'm still waiting for exitrd... but that's a different topic
[18:27:06] <yeti> :-D
[18:30:12] <tarzeau> yeah they have a package called "usrmerge" that kills dpkg -S queries
[18:31:28] <Torr> Patsie: Yes, and Awk is a system shell. Some core components are written in it, like Sabotage Linux's package manager.
[18:33:24] <Torr> yeti: /bin is certainly not dead.
[18:39:09] <yeti> I'm using debian since even before it had toystory names bit it feels increasingly alien to me...
[18:39:14] <yeti> bUt
[18:39:39] <yeti> some decissions seem to be politics now
[18:39:49] <yeti> :-/
[18:41:12] <Torr> Indeed
[18:42:32] <xmb> why /bin dead its just a symlink
[18:43:26] *** Quits: user51 (~user51@77.126.87.206) (Ping timeout: 272 seconds)
[18:44:09] <yeti> why not have everything in .sys and put every user in /
[18:44:20] <yeti> per user chroots?
[18:44:33] <yeti> with the system bindmounted back
[18:44:51] <yeti> if revolution, lets explore extremes too
[18:44:55] <xmb> cause we use gawk
[18:45:19] <yeti> gnunsinn
[18:45:33] <xmb> its just the bit better
[18:45:43] <yeti> nah
[18:45:47] <yeti> it just is unportable
[18:45:49] <xmb> bit better speed without bindmounts and chroot links
[18:46:02] <xmb> there is one portable side etc, there is not mine
[18:46:10] <xmb> mine is 'i code on debian and i support my stuff on debian'
[18:46:14] <xmb> that is.. portable
[18:46:19] <xmb> to debian only but right oh well
[18:46:38] <yeti> interoperability is what counts
[18:47:10] <yeti> and not everyone is root.  so some are stuck with a classic awk
[18:47:16] <yeti> be nice to them
[18:47:49] <xmb> ur quite right mate
[18:50:36] <yeti> my main wish in awk's case would be -We / -E for all awks
[18:50:49] <yeti> a small change that could make scripting muuuch easier
[18:51:26] <yeti> I'd like ti see much more stuff done in awk
[18:51:42] <xmb> i see none of wanted ever
[18:51:46] <yeti> SH is so 1070 and converges to unreadable^overfeatured
[18:52:00] <xmb> its cause ppl dunno to write it
[18:52:04] <xmb> cause bad docs
[18:52:34] <yeti> awk is far more radable and good enough as glue between called binaries
[18:52:56] <yeti> sh should focus at the UI part...  the commandline
[18:53:05] <yeti> and scripts shoul be readable
[18:53:12] <yeti> SH is not.
[18:53:35] <yeti> it is nice that openwrt's busybox has awk
[18:53:58] <yeti> even if LuCI is not installe (which adds Lua als alternativ to SH)
[18:54:24] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:54:26] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[18:55:08] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Client Quit)
[18:55:30] <Torr> In the man page:
[18:55:36] <Torr> > -e: ... This option allows the easy intermixing of library func‐ tions (used via the -f and --include options) with source code entered on the command line.
[18:56:07] <Torr> I don't get it, how does that differs from <-f>?
[18:56:08] <yeti> -E inb gawk, -We in mawk
[18:56:36] <yeti> it is like "the last -f"
[18:56:44] <yeti> not looking for more such options
[18:57:33] <Torr> So the speedup comes from a single parsing iteration?
[18:57:45] <xmb> # gawk -e 'BEGIN { print "code here" }'
[18:57:47] <shbot> xmb: code here
[18:57:56] <xmb> # gawk -e 'BEGIN { print "code here" }' -e 'BEGIN { print "more code here" }'
[18:57:56] <yeti> who said speedup?
[18:57:58] <shbot> xmb: code here
[18:57:58] <shbot> xmb: more code here
[18:58:05] <xmb> -e is for code, -f et la is for files
[18:59:24] <Torr> yeti: I misread ur comment, nevermind.
[19:00:25] <Torr> xmb: Got it now, thanks.
[19:03:33] <yeti> http://yeti.freeshell.org/tmp/minusWe.html
[19:05:21] <yeti> I really think evera awk fould benefit from such an option and even more if it were the same for all of them
[19:05:41] <yeti> wrapping awk with a sh helper to get the args straight just suxx
[19:18:37] <Earnest> til, nice
[19:18:55] <Earnest> The space issue is just how kernel parses #!
[19:26:28] *** Joins: Everything (~Everythin@37.115.210.35)
[20:08:41] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[20:38:11] *** flooded is now known as _flood
[20:49:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:00:16] <Torr> Earnest: Is it like its boot parameters?
[21:05:46] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[21:09:11] *** Joins: bluedust (~bluedust@103.165.167.61)
[21:13:17] *** Joins: jensen (~jensen@65.78.100.184)
[21:14:14] <jensen> i want to add literal \n to end of every line except the last. Is this the best way to do it that's intuitive? awk 'NR > 1 {printf "%s\\n", prev} {prev=$0} END {sub(/\n$/,"",prev); print prev}' file
[21:16:05] <yitz> You don't need the sub in END since you don't add \\n to it
[21:17:16] <yitz> A "simpler" solution might involve `tac` twice which allows you to operate on the first line instead. Or `ex/ed` if it's a file.
[21:22:18] *** Joins: seninha (~chatzilla@user/seninha)
[21:29:12] <Patsie> jensen: NR > 1 will skip the first line
[21:30:49] <Patsie> 'i { printf("%s\\n", i); i=$0; } END { print i }
[21:33:07] <Patsie> slight correction...
[21:33:13] <Patsie> # awk 'i { printf("%s\\n\n", i) } { i=$0 } END { print i }' <<< $'one\ntwo\nthree'
[21:33:15] <shbot> Patsie: one\n
[21:33:15] <shbot> Patsie: two\n
[21:33:15] <shbot> Patsie: three
[21:34:00] <Patsie> or slightly shorter:
[21:34:02] <Patsie> # awk 'i { print i"\\n" } { i=$0 } END { print i }' <<< $'one\ntwo\nthree'
[21:34:04] <shbot> Patsie: one\n
[21:34:04] <shbot> Patsie: two\n
[21:34:04] <shbot> Patsie: three
[21:38:45] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[21:39:25] <xmb> # <<<$'one\ntwo\nthree' gawk -v RS=\\0\\0 '{ print gensub( "\n", "&&", "g" ) }'
[21:39:28] <shbot> xmb: one
[21:39:29] <shbot> xmb: 
[21:39:29] <shbot> xmb: etc... ( http://ix.io/jMo )
[21:39:44] <xmb> excepts the last i assumed there was none err :)
[21:40:23] <Patsie> he wants a litteral \n, not an extra newline
[21:40:34] <xmb> # <<<$'one\ntwo\nthree' gawk -v RS=\\0\\0 '{ printf "%s", gensub( "\n", "&\\n", "g" ) }'
[21:40:36] <Patsie> "\n" as in two characters
[21:40:40] <shbot> xmb: one
[21:40:41] <shbot> xmb: ntwo
[21:40:41] <shbot> xmb: etc... ( http://ix.io/3Rwh )
[21:40:52] <xmb> hmh i failed
[21:40:56] <xmb> u done good code patsie peace
[21:41:02] <Patsie> better try locally firs t;)
[21:41:13] <xmb> maybe next time..
[21:41:16] <Patsie> hehe
[21:45:31] <jensen> nice
[21:49:26] <Torr> Why does this matches the input: awk '$0 ~ /-b|-bla/{print "y"}' <<< '-b'
[21:49:37] <Torr> But not this: awk '$0 ~ /\<-b\>|\<-bla\>/{print "y"}' <<< '-b'
[21:50:51] <yitz> » awk '$0 ~ /-\<b\>|\<-bla\>/{print "y"}' <<< '-b'
[21:50:51] <yitz> y
[21:51:06] <yitz> - isn't part of a "word"
[21:51:59] <Torr> Thank you
[21:52:43] <Torr> Wait
[21:52:52] <Torr> It matches "--b" too.
[21:53:23] <Torr> And "---------------b"
[21:53:24] <yitz> Yes. Word boundaries and - aren't going to work
[21:54:02] <yitz> What are you trying to match?
[21:54:34] <Torr> Only "-b" or "-bla".
[21:56:02] <yitz> But not...? "----b" contains "-b"
[21:56:13] <yitz> What's allowed or not allowed to proceed it?
[21:56:39] <Torr> Only these two exact strings are allowed, no more and no less.
[21:57:06] <Torr> Think about it like: if (var == "-b" || var == "-bla") {...}
[21:57:18] <yitz> So use == and not ~
[21:57:37] <yitz> $0 == "-b"
[21:57:56] *** Joins: xmb_ (~xmb@178.197.205.190)
[21:57:57] <yitz> Or   /^-b$/
[21:58:41] <xmb_>  /^-(b(ar)?)$/
[21:58:49] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:59:08] *** Quits: xmb (~xmb@178.197.205.231) (Ping timeout: 272 seconds)
[22:03:40] <Torr> It's not necessarily at the line's end or beginning.
[22:04:14] <Torr> yitz: But then it's not a regex.
[22:04:43] <Torr> I'm using this with gawk's switch cases.
[22:06:07] <Torr> Although I'm tempted to use an <if ... else ...> now.
[22:06:24] <xmb_> i cant imagine your probs mate
[22:06:31] <xmb_> maybe paste some code
[22:11:37] <Torr> xmb_: A working example: http://ix.io/3Rwv
[22:12:12] <xmb_> there is, per arg loop
[22:12:16] <xmb_> which means ^ and $ apply
[22:12:34] <xmb_> means /^-(h(elp)?)$/ will match
[22:12:56] <xmb_> but where is your prob now
[22:14:43] <Torr> ^ and $ works indeed.
[22:14:46] <Torr> Thanks
[22:14:49] <xmb_> np
[22:16:24] <xmb_> case "-h": case "--help": code ; break
[22:16:26] <xmb_> i think
[22:16:30] <xmb_> im no pro at switch
[22:19:03] <Torr> Da fuk, it works.
[22:21:10] <xmb_> good mate glad for it
[22:22:59] <Torr> > 		case "-h": case "-h1": case "-h2": case "-h1":
[22:23:04] <Torr> Ops
[22:23:16] *** Joins: seninha (~chatzilla@user/seninha)
[22:23:19] <Torr> > > case "-h": case "-h1": case "-h2": case "-h1":
[22:23:46] <xmb_> yea well heh..
[22:23:47] <Torr> This works. It seems switch parses <case> statements recursively.
[22:23:54] <xmb_> it does
[22:23:56] <xmb_> if u dont break
[22:23:58] <xmb_> it parses down
[22:24:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:29:54] <xmb_> btw some gawk code of me i digged up for a dude: http://ix.io/3Rwz - convert numbers to with-stuffixxes
[22:31:02] *** Joins: user51 (~user51@77.126.87.206)
[22:33:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:33:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:34:49] <Torr> Nice
[22:35:18] <Torr> I saw something similar in Sed once.
[22:36:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[22:37:08] <xmb_> nice
[22:37:08] <Earnest> Torr: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/fs/binfmt_script.c#n34
[22:41:43] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:47:19] *** Joins: seninha (~chatzilla@user/seninha)
[22:54:41] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[23:19:07] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:12] *** Quits: jensen (~jensen@65.78.100.184) (Ping timeout: 272 seconds)
[23:38:32] *** Quits: vinipsmaker (~vinipsmak@187.106.197.220) (Ping timeout: 240 seconds)
[23:45:03] <Torr> Interesting
[23:48:42] <Patsie> # mawk '{ gsub(/^ *| *$/, "", $0); print }' <<<$'one two three\n    one   two     three     '
[23:48:44] <shbot> Patsie: one two three
[23:48:44] <shbot> Patsie: one   two     three
[23:48:54] <Patsie> hmm, seems my mawk is broken
[23:49:12] *** Joins: lavaball (felix@31.204.155.215)
[23:49:42] <Patsie> [patsie@patsie]~>mawk '{ gsub(/^ *| *$/, "", $0); print }' <<<$'one two three\n    one   two     three     '
[23:49:45] <Patsie> onetwothree
[23:49:48] <Patsie> onetwothree
[23:49:53] <Patsie> is strips the spaces inbetween :(
[23:50:15] <Patsie> mawk 1.3.3
[23:50:48] <Patsie> yeah, 1.3.4 seems fixed
[23:50:56] <Patsie> works fine on another box
[23:54:09] <Patsie> xmb_: you might like this one -> http://ix.io/3RwS
