[00:06:13] *** Joins: semeion (~semeion@user/semeion)
[00:08:27] *** Quits: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4) (Ping timeout: 245 seconds)
[00:10:48] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 250 seconds)
[00:15:00] *** Joins: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4)
[00:16:47] *** Quits: madduck (~madduck@user/madduck) (Remote host closed the connection)
[00:27:41] *** Joins: _73` (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[00:28:24] *** Parts: _73` (~user@pool-96-252-123-136.bstnma.fios.verizon.net) ()
[00:29:17] *** Quits: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[00:33:41] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2.1)
[00:37:37] *** Joins: Figworm (FiggyWitIt@user/figworm)
[00:40:14] <veesh> i still need to hook it into plenv so I can just drop-install all my reqs and test my real live code
[00:42:47] *** Quits: magla (~gelignite@55d416bb.access.ecotel.net) (Quit: Stay safe!)
[00:45:07] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[00:48:16] <ether> perlbrew has a build-from-blead option too
[00:48:37] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[00:48:44] *** Joins: monkey_ (~user@190.104.116.134)
[00:55:58] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:56:37] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-MakeMaker-Awesome-0.49 by ETHER https://metacpan.org/release/ETHER/Dist-Zilla-Plugin-MakeMaker-Awesome-0.49
[01:04:27] *** Joins: RandalSchwartz (~Adium@2601:1c0:6200:1082:cc6f:1f0d:7ae0:3390)
[01:04:28] *** Parts: RandalSchwartz (~Adium@2601:1c0:6200:1082:cc6f:1f0d:7ae0:3390) ()
[01:06:03] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2.1)
[01:08:08] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[01:15:32] *** Quits: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4) (Ping timeout: 256 seconds)
[01:21:22] *** Joins: LX1 (~LX1@089144195139.atnat0004.highway.a1.net)
[01:22:44] *** Quits: Su-Shee (~Susanne@p4ffc71ac.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:24:30] *** Joins: Su-Shee (~Susanne@p4ff492f3.dip0.t-ipconnect.de)
[01:27:24] *** Joins: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30)
[01:38:57] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[01:39:28] *** Quits: dbr^ (~dbr@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[01:45:38] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:48:29] *** Joins: defjam (~eb0t@90.194.35.110)
[01:48:43] *** Joins: ZZzz (~ZZzz@77.137.108.51)
[01:50:09] *** Quits: brunoramoslu (~brunoramo@94.252.121.46) (Ping timeout: 250 seconds)
[01:58:00] *** Quits: ZZzz (~ZZzz@77.137.108.51) (Quit: ZZzz)
[02:03:40] *** Joins: brunoramoslu (~brunoramo@94.252.121.120)
[02:11:49] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[02:18:23] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[02:22:39] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[02:24:05] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:27:45] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:37:31] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:45:20] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[02:46:31] *** Parts: asdflkj_sh (asdflkj@bsdforall.org) (WeeChat 3.1)
[02:48:28] *** Joins: YaoNai (~YaoNai@user/yaonai)
[03:02:40] *** Joins: whynot (~whynot@37.73.98.191)
[03:06:51] * GumbyPAN CPAN Upload: FB3-Convert-0.48 by GRIBUSER https://metacpan.org/release/GRIBUSER/FB3-Convert-0.48
[03:15:07] *** Joins: aspic (~shifty~~~@ppp121-44-104-177.syd-gls-har-bras38.tpg.internode.on.net)
[03:22:12] *** Quits: aspic (~shifty~~~@ppp121-44-104-177.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[03:23:04] *** Joins: aspic (~shifty~~~@ppp121-44-115-200.syd-gls-har-bras39.tpg.internode.on.net)
[03:25:50] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[03:27:08] <emanuele6> does perl have an operator like tcl's `{*}$list' or bash's `"${array[@]}"'? an operator that expands the content of an @array to multiple parameters that can be passed to a subroutine
[03:27:59] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[03:29:13] <huf> that's just the array.
[03:29:18] <huf> foo @stuff;
[03:30:12] <emanuele6> ah, i thought that was the way to do it, but i was not able to make it work
[03:30:35] <emanuele6> `foo 'str' @stuff;' is valid, right?
[03:30:45] <LX1> si
[03:30:47] <huf> no, there's a comma missing
[03:30:49] *** Parts: LX1 (~LX1@089144195139.atnat0004.highway.a1.net) (Leaving)
[03:30:53] <emanuele6> ah, right
[03:31:03] <emanuele6> :)
[03:31:10] <emanuele6> silly mistake, thank you huf
[03:32:05] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[03:32:34] *** Quits: pizdets_ (~pizdets@183.182.114.102) (Ping timeout: 250 seconds)
[03:33:52] *** Joins: pizdets (~pizdets@183.182.111.251)
[03:53:31] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[03:54:17] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[03:58:37] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[04:05:32] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 256 seconds)
[04:07:27] *** Quits: hudo (~hudo@62.68.27.70) (Quit: Leaving)
[04:12:04] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[04:12:57] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[04:16:59] * GumbyPAN CPAN Upload: Nasm-X86-20210904 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210904
[04:27:49] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[04:41:14] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[04:42:28] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[04:42:57] <ioxzev1z> How can I match a string containing only a-z, not any other character (e.g. ä, so on)
[04:43:35] <ioxzev1z> So aaä would not match, aaa would, etc
[04:45:06] <xenu> \a[a-z]+\z
[04:46:55] <Grinnz> \A not \a
[04:47:08] <xenu> right
[04:47:12] <Grinnz> \a is a bell :P
[04:48:02] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[04:49:15] <LeoNerd> Or  [[:lower:]] with the /a flag
[04:50:50] <Grinnz> you could also do a negated match against [^a-z], but either will likely be done just as efficiently
[04:55:10] *** Joins: humky (~humky@user/humky)
[05:07:49] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[05:14:06] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[05:32:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:32:38] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Remote host closed the connection)
[05:33:51] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[05:34:05] *** Quits: EGD (~egd@user/egd) ()
[05:37:11] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[05:42:22] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[05:45:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[05:53:59] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[06:07:49] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[06:14:10] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[06:15:22] *** Quits: Su-Shee (~Susanne@p4ff492f3.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:17:19] *** Joins: Su-Shee (~Susanne@p4ff4951b.dip0.t-ipconnect.de)
[06:35:48] <ioxzev1z> Why does if(/([a-z])\1{3,}/) not catch something like aaabaaabac ?
[06:36:22] <Grinnz> that matches a letter immediately followed by 3 or more of the same letter
[06:36:52] *** FinnElija is now known as Guest7529
[06:36:52] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:36:52] *** Quits: Guest7529 (~finn_elij@user/finn-elija/x-0085643) (Killed (calcium.libera.chat (Nickname regained by services)))
[06:36:52] *** finn_elija is now known as FinnElija
[06:37:15] <Grinnz> thus you would need 4 in a row to match
[06:37:26] <ioxzev1z> Ah, my math was off. Thanks
[06:50:05] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 252 seconds)
[06:53:27] *** Quits: whynot (~whynot@37.73.98.191) (Quit: leaving)
[06:59:30] *** Quits: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30) (Ping timeout: 256 seconds)
[07:03:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:03:07] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[07:19:57] <gordonfish> sweval: unpack f => pack f => 3.1 # gotta love floats..
[07:19:59] <perlbot> gordonfish: 3.09999990463257
[07:20:37] <gordonfish> sweval: unpack F => pack F => 3.1
[07:20:38] <perlbot> gordonfish: 3.1
[07:23:53] <gordonfish> sweval: unpack d => pack d => 3.1
[07:23:55] <perlbot> gordonfish: 3.1
[07:24:07] <gordonfish> On a perl built with ld support, that prints 3.10000000000000009
[07:26:13] <gordonfish> I've found that Perl's internal FP (F template in (un)pack) is the most consistent.
[07:44:44] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[07:46:34] *** Joins: krismatrix (~krismatri@38.80.149.51)
[07:48:34] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[07:52:12] *** Quits: Martchus_ (~martchus@2a01:c22:6e48:d900:d250:99ff:fe49:3cce) (Ping timeout: 256 seconds)
[07:52:12] *** Joins: Martchus (~martchus@2a01:c22:7211:5800:d250:99ff:fe49:3cce)
[07:56:22] * GumbyPAN CPAN Upload: Weather-NHC-TropicalCyclone-0.30 by DANX https://metacpan.org/release/DANX/Weather-NHC-TropicalCyclone-0.30
[07:58:53] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[08:01:23] * GumbyPAN CPAN Upload: Weather-NHC-TropicalCyclone-0.31 by DANX https://metacpan.org/release/DANX/Weather-NHC-TropicalCyclone-0.31
[08:01:23] * GumbyPAN CPAN Upload: SDL2-FFI-0.06 by SANKO https://metacpan.org/release/SANKO/SDL2-FFI-0.06
[08:03:08] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[08:05:38] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[08:26:34] *** Joins: Anil (~axa@user/anil)
[08:27:19] *** Parts: Anil (~axa@user/anil) ()
[08:29:31] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2.1)
[08:32:26] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[08:35:42] *** Joins: owen__ (~owen@118.211.115.121)
[08:36:50] *** Joins: gce108 (~gce@user/gce108)
[08:42:25] *** Quits: owen__ (~owen@118.211.115.121) (Quit: Konversation terminated!)
[08:57:50] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[09:06:34] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[09:11:59] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[09:18:10] *** Quits: n0xff (~0xff@gateway/tor-sasl/n0xff) (Remote host closed the connection)
[09:18:34] *** Joins: n0xff (~0xff@gateway/tor-sasl/n0xff)
[09:37:27] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[09:37:50] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[09:39:58] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[09:44:24] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[09:46:53] *** Joins: Pixi (~Pixi@user/pixi)
[09:54:36] *** Joins: R2robot (~R2robot@user/r2robot)
[10:02:13] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[10:14:04] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[10:26:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:31:37] *** Quits: bs338 (~pi@host217-44-163-209.range217-44.btcentralplus.com) (Ping timeout: 248 seconds)
[10:33:37] *** Joins: bs338 (~pi@host217-44-224-228.range217-44.btcentralplus.com)
[10:34:25] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:3177:ae04:5861:103b) (Ping timeout: 252 seconds)
[10:58:22] *** Quits: aspic (~shifty~~~@ppp121-44-115-200.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[10:59:09] *** Joins: aspic (~shifty~~~@ppp121-44-103-101.syd-gls-har-bras38.tpg.internode.on.net)
[11:01:43] * GumbyPAN CPAN Upload: App-Tac_n-0.0.3 by SHLOMIF https://metacpan.org/release/SHLOMIF/App-Tac_n-0.0.3
[11:02:32] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:06:25] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[11:12:30] *** Quits: judabuda (kowbunga@user/judabuda) (Ping timeout: 250 seconds)
[11:17:50] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[11:23:55] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[11:29:44] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[11:31:46] * GumbyPAN CPAN Upload: Statistics-Descriptive-PDL-0.02 by SLAFFAN https://metacpan.org/release/SLAFFAN/Statistics-Descriptive-PDL-0.02
[11:56:49] * GumbyPAN CPAN Upload: Statistics-Descriptive-PDL-0.03 by SLAFFAN https://metacpan.org/release/SLAFFAN/Statistics-Descriptive-PDL-0.03
[11:56:54] *** Joins: EGD (~egd@user/egd)
[11:57:09] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:57:25] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:02:51] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[12:06:04] *** Quits: aspic (~shifty~~~@ppp121-44-103-101.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[12:10:20] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Quit: leaving)
[12:15:23] *** Joins: judabuda (kowbunga@thunderirc.net)
[12:17:37] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[12:21:50] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[12:27:02] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[12:28:20] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[12:29:51] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[12:37:38] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Remote host closed the connection)
[12:51:38] *** Quits: EGD (~egd@user/egd) ()
[12:55:44] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[13:00:55] *** Joins: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr)
[13:03:27] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[13:14:56] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Quit: leaving)
[13:16:55] *** Joins: pj (~pj@ghettoforge/pj)
[13:18:55] *** Quits: judabuda (kowbunga@thunderirc.net) (Changing host)
[13:18:55] *** Joins: judabuda (kowbunga@user/judabuda)
[13:26:32] *** Joins: madduck (~madduck@matilda.madduck.net)
[13:26:32] *** Quits: madduck (~madduck@matilda.madduck.net) (Changing host)
[13:26:32] *** Joins: madduck (~madduck@user/madduck)
[13:37:38] <last1> this is more of a random general programming question as I'm at my wits end, sorry if off-topic, but maybe someone here has some sort of insight
[13:38:33] <last1> I have an app that I can't see the source code, but it interacts with mysql via tcp/ip socket
[13:39:08] <last1> if I insert a value in mysql myself, without the app knowing, when the app runs, the first thing it does is delete the value that I manually inserted
[13:39:41] <last1> now I've ran tcpdump, and I clearly see it doing straight up: delete from table where addressbookid = specific_value_I_inserted
[13:40:14] <last1> but there is no select * from table prior to that - so hence the question, how can the app know what to delete so specifically
[13:40:41] <Grinnz> checks autoincrement on the table maybe?
[13:41:24] <last1> that's not a bad idea, but how can that translate directly into it issuing a delete mentioning the ID I just inserted
[13:41:57] <mst> last1: is that what it's doing immediately on connect or what?
[13:42:51] <mst> also if you have sufficient permissions this might be easier: https://dev.mysql.com/doc/refman/8.0/en/query-log.html
[13:42:52] <Paperbot_> Link title(s): [ MySQL :: MySQL 8.0 Reference Manual :: 5.4.3 The General Query Log ]
[13:42:55] <last1> more or less, I can actually trigger it manually, but there's no other selects or anything. it just seems like black magic or spooky quantum stuff :)
[13:43:24] <last1> yeah, I'll give that a try, didn't want to enable the general query log due to this being production but I'll have no choice I guess
[13:43:56] <last1> oh, and mst, thank you for the other day with that encoding script, it works beautifully but I found some cases where it doesn't
[13:44:33] <last1> apparently some people send emojis in e-mails
[13:44:38] <last1> and those can't be encoded to utf-8
[13:44:40] <last1> "\x{d83c}" does not map to UTF-8 at /usr/local/lib/perl5/site_perl/Email/MIME.pm line 705, <STDIN> line 2538
[13:45:05] <last1> is there an option to skip encoding such symbols in the module ? Or I have to remove them myself
[13:45:53] <mst> last1: emojis can they're just in a weird space, it might be worth trying upgrading Encode.pm
[13:46:30] <shlomif> last1: \p{...} ?
[13:47:28] <mst> last1: also ... do you mean they put emojis in the signature or in the email body, and if the latter what encoding was the email in
[13:47:53] <last1> I already have the latest version: Email::MIME::Encode is up to date (1.949)
[13:49:36] <mst> last1: no
[13:49:38] <mst> last1: I said Encode
[13:49:53] <last1> well, the e-mail is quoted-printable
[13:49:55] <mst> last1: please consider that my advice might actually be what I said :P
[13:50:13] <mst> yeah, I meant what charset is it declaring
[13:51:35] <last1> oops, sorry, I have latest Encode now, 3.12, same issue
[13:51:53] <last1> https://l.perl.bot/p/om4o7o
[13:51:53] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[13:52:01] * GumbyPAN CPAN Upload: Bitcoin-Crypto-1.000_01 by BRTASTIC https://metacpan.org/release/BRTASTIC/Bitcoin-Crypto-1.000_01
[13:52:42] <mst> ok, so the original claims to be utf8
[13:52:49] <mst> hrm
[13:53:20] <last1> yes, but it's weird because I can't find that emoji in the e-mail
[13:53:41] <last1> as html it's encoded as &#xD83C
[13:53:42] <mst> I am now going to suggest something truly horrible ... that will probably work
[13:54:40] <mst> "add an if statement where if the part declares itself to be utf8 ... you go back to the old "blindly jam the signature in there with no encoding related code" approach"
[13:54:58] <mst> that way if the email is utf8-but-malformed you'll garbage-in-garbage-out it
[13:55:06] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:56:43] <last1> lol, ok, one moment
[13:57:21] <mst> I know that's horrible but at some point somebody -is- going to send you bollocks utf8 data and "leaving it no more broken than when it arrived" is probably the best customer-facing outcome
[14:01:58] <last1> check this out
[14:02:03] <last1> go here: https://www.webatic.com/quoted-printable-convertor
[14:02:03] <Paperbot_> Link title(s): [ Encode/Decode Quoted Printable - Webatic ]
[14:02:11] *** Joins: Pali (~pali@user/pali)
[14:02:17] <last1>  and try decoding this: =F0=9F=91=87=F0=9F=91=87
[14:02:24] <last1> that's what it's choking on
[14:02:42] <last1> so the message is formatted properly, utf-8 quoted printable, but when it tries to re-save it as qp utf-8 it can't do it
[14:03:27] <last1> the actual message content is: Just click on th=e link=F0=9F=91=87=F0=9F=91=87 https://...
[14:03:51] *** Joins: Tier (~tier@178.172.192.75)
[14:05:23] <last1> ah but wait, that's not even the one it's stopping on. it apparently handles that one fine
[14:07:45] *** Joins: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de)
[14:08:35] <last1> I think it's this one: Sharon Tracy&#55356;&#56808;&#55356;&#56806;&#55356;&#56808;&#55356;&#56806;&#55356;&#57096;&#55356;&#57096;
[14:08:56] <last1> because it's the symbol that most closely resembles what I see when I lookup: http://www.unicode-symbol.com/u/D83C.html
[14:08:57] <Paperbot_> Link title(s): [ u+D83C copy and paste - Unicode® symbol ]
[14:09:13] <last1> whoever writes e-mails like this should be shot
[14:11:48] <mst> lololololololol
[14:11:55] <mst> we did warn you this was going to be "fun"
[14:16:54] <last1> sure seems so
[14:17:03] <last1> well, this message can trigger the issue constantly: https://l.perl.bot/p/srayn1
[14:17:04] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[14:17:18] <last1> it seems like a valid message to me: could it be a bug with the Perl module ?
[14:21:18] *** Quits: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de) (Quit: leaving)
[14:21:29] <mst> given the number of unicode related regression tests that get run, it seems somewhat unlikely
[14:21:44] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[14:21:52] <mst> what *could* be happening is the text being unescaped and one of though &# things representing something bollocks
[14:21:58] <mst> s/though/those/
[14:23:29] <last1> it's actually all of them, I tried removing them one by one, and the error moves to: "\x{dde8}" does not map to UTF-8
[14:24:29] <last1> but why would it try to map that html symbol to utf8 instead of qp as I'm instructing it first: $part->encoding_set('quoted-printable');
[14:24:49] *** Quits: madduck (~madduck@user/madduck) (Quit: leaving)
[14:26:34] <mst> it ... wouldn't, that's not what I meant at all
[14:28:10] <mst> bear in mind you've got three layers of encoding/escaping going on here, quoted/printable, the character set (utf8 in this case), and HTML escapes
[14:33:20] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:34:05] *** Joins: csrf (~csrf@user/csrf)
[14:34:13] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[14:34:18] <last1> so how could I handle this in my case ? Should I just sanitize the input for some characters that Encode can't process ?
[14:34:46] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[14:36:29] <mst> last1: you still don't know what the actual problem is
[14:37:50] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[14:41:22] *** Joins: Exagone313 (exa@irc.moe)
[14:43:57] *** Joins: haircode1 (~haircode@134.122.105.156)
[14:46:26] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[14:47:00] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 256 seconds)
[14:47:58] <last1> I think the Encode module turns the html escape into the actual symbol and then tries to write it out as UTF-8, which is not possible
[14:48:16] <last1> I think I read you need UTF-16 for that or something
[14:48:26] *** Quits: Exa (exa@irc.moe) (Quit: see ya!)
[14:48:26] *** Quits: haircode (~haircode@134.122.105.156) (Ping timeout: 276 seconds)
[14:48:26] *** Exagone313 is now known as Exa
[14:49:04] <ehuelsmann[m]> last1: the key to solving a problem is verifying your hypothesis. So, I guess your next step is to verify if the Encode module actually does that.
[14:49:35] <ehuelsmann[m]> last1: btw, UTF-8 and UTF-16 share the same capabilities in terms of representing Unicode codepoints.
[14:49:43] <ehuelsmann[m]> they just represent them differently.
[14:50:11] <mst> last1: Encode will not do that
[14:50:26] <ehuelsmann[m]> so UTF-8 and UTF-16 should both be able to present your code points, assuming you have valid ones. ("
[14:50:32] <mst> last1: Encode doesn't know what an html escape is at all
[14:50:42] <ehuelsmann[m]> ("\x{dde8}" is not one of the valid ones)
[14:52:53] <mst> what I'm wondering about is is Mojo::DOM's unescaping is converting the thing into a character, but then -doesn't- re-escape it on save, and since the escape does not represent a valid utf8 character, encoding it fails
[14:53:43] <mst> in which case you have a "fun" problem
[14:55:06] <mst> last1: here's a horrible hack that might help:
[14:55:12] <mst> no warnings 'redefine';
[14:55:28] <mst> local *Mojo::DOM::HTML::xml_escape = \&Mojo::Util::html_escape;
[14:55:49] <mst> at the top of the block that uses Mojo::DOM
[14:59:00] *** Joins: pj (~pj@ghettoforge/pj)
[14:59:01] <last1> let me try that, and something else too
[15:04:28] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[15:04:50] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[15:11:05] *** Andrew is now known as CoHaxPenguino
[15:12:09] * GumbyPAN CPAN Upload: GitHub-Actions-0.0.7 by JMERELO https://metacpan.org/release/JMERELO/GitHub-Actions-0.0.7
[15:13:45] *** CoHaxPenguino is now known as HaxPenguino
[15:16:46] <last1> so I ran a print Dumper($target) right after I do the prepend
[15:17:06] <last1> but before the $part->body_str_set( $dom->to_string );
[15:17:14] <last1> to see what the modification looks like in Mojo
[15:17:30] <last1> and it shows this: Sharon Tracy\x{dde8}\x{d83c}\x{dde6}\x{d83c}\x{dde8}\x{d83c}\x{dde6}\x{d83c}\x{df08}\x{d83c}\x{df08}
[15:18:07] <mst> last1: which is what I said was probably happening, yes, hence my suggestion to try and hijack the escaping
[15:18:33] <mst> basically, Mojo is mistakenly assuming that your HTML only contains valid characters, and therefore doesn't need re-entity-escaping on the way out
[15:20:05] <last1> local *Mojo::DOM::HTML::xml_escape = \&Mojo::Util::html_escape;  <-- did you mean html_unescape here ?
[15:20:22] <mst> no
[15:20:32] <last1> I see no html_escape sub in HTML.pm
[15:20:48] <last1> and I get an error: Undefined subroutine &Mojo::Util::html_escape called at /usr/local/lib/perl5/site_perl/Mojo/DOM/HTML.pm
[15:21:37] <mst> oh, fuck's sake, right, there isn't one in core for that
[15:21:37] <mst> sec
[15:22:04] <mst> use HTML::Entities ();
[15:22:16] <mst> local *Mojo::DOM::HTML::xml_escape = \&HTML::Entities::encode_entities;
[15:22:19] <mst> how about that?
[15:23:59] <last1> that works beautifully, why do you say it's an ugly hack ?
[15:24:40] <mst> ... because we're reaching into the guts of mojo to override something that shouldn't need to be overridden because your email is made out of cat urine and fail? :D
[15:25:23] <last1> well, hang on, that's a valid html character, no ?
[15:25:32] <mst> no
[15:25:53] <ehuelsmann[m]> it's not a valid character (period)
[15:25:53] <mst> entity encoded characters should still be valid characters
[15:26:01] <ehuelsmann[m]> irrespective of html.
[15:26:03] *** Quits: Tier (~tier@178.172.192.75) (Remote host closed the connection)
[15:26:12] <mst> the html is still broken, it's just not the precise sort of broken we first thought
[15:26:54] <last1> well, I saw the warning too: U+D83C is not a valid Unicode code point / character. It belongs to the "High Surrogates" block which goes from 0xD800 to 0xDB7F but is not defined in the Unicode 9.0 database of code points.
[15:27:11] * GumbyPAN CPAN Upload: Statistics-Descriptive-PDL-0.04 by SLAFFAN https://metacpan.org/release/SLAFFAN/Statistics-Descriptive-PDL-0.04
[15:27:19] <last1> I still feel Mojo should deal with these somehow, instead of dying
[15:28:02] <mst> last1: I've already started a discussion with the mojo devs about making it easier to deal with broken documents
[15:28:29] <mst> also, it isn't mojo that's dying
[15:29:16] <mst> mojo is round tripping the html to a valid representation of the same html data - unfortunately, the encode() stage inside Email::MIME is failing because now it's noticing the brokenness, whereas previously the entity encoding hid the broken from the encode9) call
[15:29:21] <mst> *encode() call
[15:29:50] <last1> gotcha
[15:30:10] <last1> in the end it seems all invalid unicode characters are represented as that question mark
[15:30:23] <last1> so some peoeple decided to use that as an actual question mark in e-mails
[15:30:24] <last1> lol
[15:30:25] <mst> for the moment I would suggest adding a comment explaining what crawling horror you're working around
[15:31:11] <last1> ha, ok. I think I have others too waiting in the shadows :))
[15:31:14] <last1> e-mails never fail to surprise
[15:31:33] *** Joins: fwg (~fwg@user/fwg)
[15:31:57] <mst> last1: oh, I'm absolutely sure you do :D
[15:32:42] <mst> you're probably going to want, for production, to wrap the entire thing in an eval or a try/catch, and if your code can't handle something pass the email on unchanged and log something to let you go in later and figure out what sort of new broken you discovered this time
[15:33:18] <last1> that already happens, but it's less than ideal
[15:33:30] <last1> because my goal here is to tag external e-mails with that warning
[15:33:35] <mst> "ideal" is not an option here.
[15:33:43] <mst> only "minimisation of suck"
[15:33:52] <last1> and if a spammer figures out they can insert invalid unicode and no warning gets added
[15:34:04] <last1> it's an even bigger problem because the user doesn't see the warning, assumes it's fine...and oh boy
[15:34:15] <mst> you're going to need levels of fallback here, sure
[15:34:39] <last1> I'm thinking such a level is also modifying the subject, not just the body
[15:34:53] <last1> without MIME, the subject should be easier to tag as [EXTERNAL]
[15:35:04] <mst> the other thing you could do is if you really can't figure out a way to deal with a specific email
[15:35:19] <mst> is replace the entire damn thing with a warning and make the original email an attachment
[15:35:31] <last1> ha, good idea
[15:35:43] <mst> bit of a big hammer, but at some point you've got to admit you've run out of subtle options
[15:36:40] <mst> also note that if spammers start tailoring their emails to your specific system, it wouldn't be that hard to add CSS that makes text inside <body> invisible and then have the actual spam content inside a <div> inside <body> that has more CSS to revert that
[15:37:12] * GumbyPAN CPAN Upload: Statistics-Descriptive-PDL-0.05 by SLAFFAN https://metacpan.org/release/SLAFFAN/Statistics-Descriptive-PDL-0.05
[15:37:14] <last1> ahahaha, that's actually funny on how ingenious it is
[15:37:25] <last1> so then I need to add my warning with my own css 
[15:37:28] <last1> and bulletproof it :)
[15:38:05] <mst> I don't do offensive cybersecurity, but I did once work for an ISP so I don't underestimate the extent to which spammers are bastards :D
[15:39:00] <last1> did you see that latest article on Krebs about hackers now connecting to accounts - before they would just use the SMTP to send out Spam
[15:39:09] <last1> but now they IMAP SEARCH for amazon gift cards, air miles, etc
[15:39:20] <last1> just to loot valuable stuff
[15:39:59] <mst> oh, yeah, that was smart, you're a lot less likely to get noticed doing that since plenty of people probably don't even bother claiming rewards like that and even the ones who do are unlikely to notice when one doesn't arrive
[15:40:38] <last1> yeah, they are getting smarter and bolder
[15:40:42] *** Joins: kensanata (~user@user/kensanata)
[15:41:53] <last1> thank you very much once again, I will let you know if I find more fringe cases, it should be more 'fun'
[15:42:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[15:42:25] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[15:42:51] * bugweiser shuts up about what I would do to spammers if I managed to get my hands on them. And spammers in my local jursdiction I make DAMN shure they get a big heavy fine when I can catch them (spam is prohibited by law where I live). I maintain an exclusive mailaddres for each and every contact so I know who is selling email addesses and who is buying them. 
[15:43:27] <bugweiser> I missed it the other day, how did just regexing for lone surrogates fail as a check for lone surrogates ?
[15:45:23] *** HaxPenguino is now known as CoCoHaxPenguin
[15:46:32] <bugweiser> last1 ^
[15:48:16] <El_Che> mst: I swear I have seen this guy before: https://twitter.com/MarcDavenant/status/1434283584605593604
[15:48:16] <Paperbot_> Davenant 📸 (@MarcDavenant) 12h44m ago: Protester collecting litter along the route of the @ExtinctionR @XRebellionUK march in London today. I saw no litter left after the march had passed by.
[15:54:56] *** Joins: pj (~pj@ghettoforge/pj)
[16:02:02] <shlomif> bugweiser: spammers often harvest email addresses from accounts they cracked
[16:03:14] <perlbot> QzsHI pasted a new file at https://perl.bot/p/xgiigq - 
[16:07:14] <bugweiser> shlomif, our 'national' reunion organisation/website owners once wanted a nice xmas bonus (to buy expensive cars) and sold the email database. With help from people whom (like myself) followed the decades old advice of 'one email address per contact' that was easy to prove :)  Though the damage was done (selling the email database) at least the got biiig fines. YaY !
[16:09:48] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[16:10:29] *** Joins: aspic (~shifty~~~@ppp121-44-118-78.syd-gls-har-bras39.tpg.internode.on.net)
[16:16:42] <shlomif> simcop2387: perlbot reported a spam post
[16:18:43] <shlomif> bugweiser: i see
[16:21:42] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:29:07] *** Quits: aspic (~shifty~~~@ppp121-44-118-78.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[16:29:32] *** Joins: aspic (~shifty~~~@124-171-87-36.dyn.iinet.net.au)
[16:36:18] * GumbyPAN CPAN Upload: Gherkin-21.0.0 by CUKEBOT https://metacpan.org/release/CUKEBOT/Gherkin-21.0.0
[16:48:04] <last1> bugweiser: that's what I was leaning towards to as well initially, but some messages are like 120-170kb in size. regexing each message hoping to catch lone surrogates might prove computationally expensive (?)
[16:50:43] <mst> last1: "use re 're2';" will likely help with that
[16:52:40] <bugweiser> I see. That said, it's a relative simple regex and executes also relatively simple for that reason.  Additionally, given that 'modern' UTF-8 rules mandate 'shortest form' one can even optimise such a check by analysing the utf-8 byte-stream (without actually decoding the utf-8 code-units into unicode codepoints, similar things can be done in utf-16). I guess you'd have to test/profile that.
[16:58:12] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[16:58:13] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:02:21] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[17:11:41] *** CoCoHaxPenguin is now known as \[
[17:12:07] *** \[ is now known as \}
[17:12:25] *** \} is now known as a_
[17:12:28] *** a_ is now known as Andrew
[17:30:32] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[17:39:55] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:47:42] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[17:50:03] *** defjam is now known as eblip
[18:01:57] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Remote host closed the connection)
[18:02:45] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[18:04:46] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[18:04:46] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[18:06:28] * GumbyPAN CPAN Upload: Bitcoin-Crypto-1.000 by BRTASTIC https://metacpan.org/release/BRTASTIC/Bitcoin-Crypto-1.000
[18:32:40] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[18:41:48] *** Joins: monkey_ (~user@190.104.116.134)
[18:48:48] *** Joins: semeion (~semeion@user/semeion)
[18:49:10] *** Quits: dg (~dgl@dg.wtf) (Ping timeout: 240 seconds)
[18:56:34] * GumbyPAN CPAN Upload: Nasm-X86-20210905 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210905
[18:57:52] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[18:59:17] <LeoNerd> I can do `async sub`, and `method`, and now I can do `async method`. Shortly I'll be able to do `after method`, at least on subclasses... What, I wonder, might be the semantics of  `after async method` ?
[18:59:25] <LeoNerd> Should it imply an `await` on the orig first?
[19:03:07] *** Quits: aspic (~shifty~~~@124-171-87-36.dyn.iinet.net.au) (Ping timeout: 260 seconds)
[19:10:39] <ehuelsmann[m]> LeoNerd: hi. It'd be my expectation that the async method would have executed first, if an 'after' method runs, yes. However, I can imagine it being practical just to receive a promise in exceptional cases.
[19:11:10] <ehuelsmann[m]> if we're talking DWIM, I'd say the await is implied, yes.
[19:13:37] * ehuelsmann[m] wonders what other languages did there
[19:21:37] * GumbyPAN CPAN Upload: DateTime-Calendar-Julian-0.105 by WYANT https://metacpan.org/release/WYANT/DateTime-Calendar-Julian-0.105
[19:30:04] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[19:30:24] *** Joins: APic (apic@apic.name)
[19:31:57] *** Joins: thrig (~thrig@70.97.65.251)
[19:43:15] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[19:51:40] <LeoNerd> ehuelsmann[m]: I don't know where to look for other languages that have `async method` and `around method`. I just tweeted the question, shall see if anyone suggests anything
[19:51:44] *** Joins: ritsch_master (~user@91.141.35.198.wireless.dyn.drei.com)
[19:52:53] <thrig> doesn't CLOS have :around
[19:53:46] <LeoNerd> CLOS does, but I don't think they have async/await
[19:54:07] <ehuelsmann[m]> Yes.they don't
[19:54:27] <mst> https://quickref.common-lisp.net/cl-async-await.html is async/await using libuv
[19:54:28] <Paperbot_> Link title(s): [ The cl-async-await Reference Manual ]
[19:54:41] <LeoNerd> Lots of more modern languages have async/await, but no around or other modifiers
[19:55:01] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[19:55:01] <LeoNerd> mst: Oooh :) Shall have a peek
[19:55:35] *** Joins: APic (apic@apic.name)
[19:56:13] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:56:58] <mst> seems to all be function based though, no CLOS integration
[19:57:03] <LeoNerd> Hmmmm
[19:57:28] <LeoNerd> Maybe Perl will have to push the language barriers again and invent new stuff
[19:58:18] <LeoNerd> synchronous methods only need before and after, but I am feeling that async ones may get three
[19:58:39] <mst> so far as I can see, before/after would want to do an implicit await
[19:58:39] <LeoNerd> before, after, aswell - the latter being a ->needs_all race with the orig
[19:58:43] <mst> and around would just be obvious
[19:59:05] <LeoNerd> (note to self: find a better name)
[20:01:55] <LeoNerd> I feel like `around` is a basic OO system ability, and all the others are convenient shortcut wrappers for common tasks
[20:02:23] <mst> yes
[20:02:47] <LeoNerd> aswell async === around async { await Future->needs_all( ORIG(@args), more... ); }
[20:03:00] <mst> yes
[20:03:25] <LeoNerd> with maybe some deeper magic to combine them all in one big needsall rather than a silly linked list of 2-element ones
[20:03:52] <LeoNerd> actually maybe needsall should do that itself
[20:04:19] <LeoNerd> needsall( $f1, needsall( $f2, $f3 ) )  perhaps should expand the inner one
[20:05:24] *** Joins: eb0t (~eb0t@90.204.61.71)
[20:06:26] *** Quits: jess (~jess@libera/staff/jess) ()
[20:06:47] *** Quits: eblip (~eb0t@90.194.35.110) (Ping timeout: 245 seconds)
[20:10:01] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[20:15:12] *** Joins: APic (apic@apic.name)
[20:26:15] <LeoNerd> Ugh, this is annoying. `async method` is possible by combining `async sub` and `method` in a way wherein neither actually has to be aware of the other. But I can't think of a way to implement `async after method` without one blob of code that knows both F-AA and O-P
[20:41:45] * GumbyPAN CPAN Upload: Minion-Backend-MongoDB-1.08 by EBRUNI https://metacpan.org/release/EBRUNI/Minion-Backend-MongoDB-1.08
[20:42:09] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[20:42:27] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[20:52:00] <mst> LeoNerd: doesn't something still have to know what 'method' is?
[20:53:52] *** Joins: monkey_ (~user@190.104.116.134)
[20:55:00] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[20:55:17] *** Joins: APic (apic@apic.name)
[20:58:40] *** Quits: ritsch_master (~user@91.141.35.198.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[21:01:51] <gamo> hello
[21:08:07] *** Quits: a3r0 (~aero@61.100.184.210) (Remote host closed the connection)
[21:08:57] <mst> .o/
[21:11:06] *** Linux77_ is now known as Linux77
[21:13:49] <gamo> I get it  \o/ too
[21:15:09] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[21:16:29] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:21:48] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[21:22:14] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[21:22:54] *** Joins: gast0n (~g4570n@user/gast0n)
[21:26:21] *** Quits: thrig (~thrig@70.97.65.251) (Remote host closed the connection)
[21:26:50] * GumbyPAN CPAN Upload: AHA-0.7 by FANY https://metacpan.org/release/FANY/AHA-0.7
[21:28:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:32:45] *** Joins: RandalSchwartz (~Adium@2601:1c0:6200:1082:e0bf:493:6292:e054)
[21:32:55] *** Parts: RandalSchwartz (~Adium@2601:1c0:6200:1082:e0bf:493:6292:e054) ()
[21:45:27] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[22:08:48] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[22:10:00] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[22:10:24] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:23:19] *** Joins: EGD (~egd@user/egd)
[22:26:52] *** Joins: APic (apic@apic.name)
[22:33:38] *** Joins: monkey_ (~user@190.104.116.134)
[22:36:26] *** Joins: magla (~gelignite@55d40548.access.ecotel.net)
[22:41:10] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 240 seconds)
[22:45:50] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 256 seconds)
[22:53:23] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[23:02:46] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[23:06:08] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:11:17] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:20:05] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[23:23:41] *** Joins: Dexel (~Arco@68.40.3.32)
[23:25:41] *** Joins: APic (apic@apic.name)
[23:27:46] *** Quits: subie (~subie@2601:4c0:4080:bc0:d5c3:ba57:e228:f2f3) (Read error: Connection reset by peer)
[23:28:05] *** Joins: subie (~subie@2601:4c0:4080:bc0:cdf3:ce00:5388:6a4e)
[23:35:54] *** Joins: cptaffe (~connor@2600:1700:f08:1110:c843:5621:bfb6:7631)
[23:37:04] * GumbyPAN CPAN Upload: App-VTide-v0.1.16 by IVANWILLS https://metacpan.org/release/IVANWILLS/App-VTide-v0.1.16
[23:45:00] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[23:45:08] <EvanCarroll> XR always seemed a bit absurd to me.
[23:45:31] <mst> they're kinda deliberately performative in order to get publicity
[23:45:38] <EvanCarroll> Generally, protests that target poor members of the working class seem a bit off.
[23:45:49] <mst> I'm not particularly fond of them, but I can see why they're doing what they're doing
[23:47:03] <EvanCarroll> Well me to, it's mainly a tactical call. But yeah, tactics can actually set things backward.
[23:47:39] <EvanCarroll> It's one thing to shut down a road blocking a port for it's a roll in production, all the better if people are on the clock. It's another thing to tape yourself to habitually tape your members to commuter trains.
[23:47:56] *** Joins: fwg (~fwg@user/fwg)
[23:48:32] <EvanCarroll> PETA does the same kind of stupid silly shit in the USA too.
[23:48:44] <mst> admittedly, doing that in london is going to inconvenience -everybody-
[23:48:46] <EvanCarroll> It's probably only slightly more popular than the GOP at this point.
[23:48:59] <mst> PETA are just assholes
[23:57:48] *** Joins: gareppa (~gareppa@user/gareppa)
[23:59:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
