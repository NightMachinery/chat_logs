[00:07:06] *** Joins: bluedust (~bluedust@103.148.20.45)
[00:10:13] *** Quits: bluedust_ (~bluedust@185.248.85.40) (Ping timeout: 240 seconds)
[00:40:33] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[00:41:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:02:37] *** Joins: sagax (~sagax_nb@user/sagax)
[01:18:59] *** Quits: hid3 (~arnoldas@78.157.71.116) (Ping timeout: 252 seconds)
[01:26:11] *** Joins: kensanata (~user@user/kensanata)
[01:49:47] *** Joins: lavaball (felix@31.204.155.215)
[02:45:01] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[02:59:29] *** Quits: bluedust (~bluedust@103.148.20.45) (Remote host closed the connection)
[03:16:03] *** Joins: hid3 (~arnoldas@78.157.71.116)
[03:27:04] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:58:15] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:58c5:6207:2988:1b06) (Ping timeout: 268 seconds)
[04:47:25] *** Quits: algae (~algernon@170.10.246.117) (Ping timeout: 240 seconds)
[05:17:13] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:19:01] *** Joins: seninha (~seninha@user/seninha)
[05:29:54] *** Joins: algae (~algernon@170.10.246.117)
[05:36:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:42:13] *** Parts: boubou (~boubou@hide.my.ip.upsidehosting.com) ()
[05:47:46] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[05:58:11] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[06:16:25] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ccfa:2f24:22:a481)
[06:17:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ccfa:2f24:22:a481) (Remote host closed the connection)
[06:34:57] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[06:38:57] *** Joins: boubou (~boubou@hide.my.ip.upsidehosting.com)
[07:01:39] *** Quits: boubou (~boubou@hide.my.ip.upsidehosting.com) (Quit: ZNC - http://znc.sourceforge.net)
[07:04:19] *** Joins: boubou (~boubou@hide.my.ip.upsidehosting.com)
[07:20:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[07:41:00] *** Joins: Nobrem (~Nobrem@85.187.219.207)
[07:41:01] <Nobrem> hi
[07:41:10] <Nobrem> I need to re-order subtitles
[07:41:28] <Nobrem> in order to avoid confusion by a lengthy and weird explanation, I rather show it:
[07:41:33] <Nobrem> current file:   https://dpaste.org/yEoa/raw
[07:41:41] <Nobrem> the goal:  https://dpaste.org/MVQM/raw
[07:42:10] <Nobrem> basically I am looking for a command,  that lets me delete everything before the time 00:05:00 
[07:42:25] <Nobrem> and then, all later subtitles must be re-ordered  (the section numbers and the seconds)
[07:42:58] *** Quits: algae (~algernon@170.10.246.117) (Quit: WeeChat 3.4)
[07:49:47] <e36freak> i don't understand the criteria
[07:50:06] <Nobrem> e36freak, oh, hi :)
[07:50:10] <e36freak> your "goal" file doesn't delete everything before 5:00
[07:50:15] <Nobrem> e36freak, it could be that you and me chatted yesterday already
[07:50:19] <Nobrem> the problem is still the same
[07:50:30] <Nobrem> I have timelapse videos here, which are sped up 15x
[07:50:45] <Nobrem> now I want to cut out a part using ffmpeg,  speed it up even more, and burn subtitles into the video
[07:50:58] <Nobrem> the subtitles that I have are meant for a video that starts by 0
[07:51:13] <Nobrem> but now imagine, I cut out a part like  00:05:20  -  00:09:30
[07:51:41] <Nobrem> then we cannot use the same subtitles-file again
[07:51:57] <Nobrem> step 1)  cut out:   00:05:20  -  00:09:30
[07:52:09] <Nobrem> 2)  speed this portion up even more (e.g. 2x)
[07:52:34] <Nobrem> 3) add subtitles fitting for  15x  and again 2x  so  30x speed-up  (2 seconds in the video = 1 min in real life)
[07:52:48] <Nobrem> in order to do so, I must provide ffmpeg a reasonable input of subtitles
[07:52:54] <Nobrem> and I was hoping awk could re-write that 
[07:53:14] <e36freak> i mean, sure. any programming language could
[07:53:25] <e36freak> just a matter of coming up with the right logic to do what you want
[07:53:53] <Nobrem> can you help me think?
[07:53:57] <Nobrem> I am hitting a wall here
[07:54:13] <Nobrem> I tested adding subtitles to the whole video and _then_ speeding it up
[07:54:24] <Nobrem> but that takes too long  (roughly 20+ hour for a 2 hour 4K video)
[07:54:36] <Nobrem> so I want to add the subtitles to ONLY the small area that I will really export
[07:54:50] <e36freak> well you have empty lines between sections right? so then use an empty RS to get each section in a record
[07:55:02] <Nobrem> yes
[07:55:03] <e36freak> parse out the timestamps, convert to seconds if it makes it easier
[07:55:20] <e36freak> do the logic you want to do, whether skipping it or changing the times
[07:55:31] <e36freak> print it again when appropriate with the new stamps
[07:55:46] <Nobrem> sounds about right.
[07:55:54] <Nobrem> I was just hoping there were a simpler solution
[07:56:03] <Nobrem> some magical regexp or so ;)
[07:56:29] <e36freak> how the hell would regex help
[07:56:44] <e36freak> other than maybe as a way to extract the timestamps, but i wouldn't use regex for that
[07:56:50] <Nobrem> e36freak, I don't know, I just know that whenever I had a really complicated problem,  there was an "awk" command that magically solved it
[07:57:34] <e36freak> you'd write the solution in awk just like any other language, probably the same logic. awk's just constructed in a way that can make the parsing much easier
[07:58:23] <Nobrem> I see.
[07:58:25] <Nobrem> thank you e36freak 
[07:58:30] <Nobrem> sorry for bothering
[07:59:51] <e36freak> i mean, no biggy. we're here if you need help with any particular part of it
[08:00:09] <e36freak> fwiw i'd probably just use a newline for FS and split() to extract/parse the timestamps
[08:02:29] <Nobrem> e36freak, can we please chat for a few more moments?
[08:02:42] <Nobrem> e36freak, I feel like I have a solution so close in my brain, but I just can't quite grab it
[08:02:52] <Nobrem> just talking about it could help  (rubber duck debugging)
[08:03:36] <e36freak> talk away
[08:03:40] <Nobrem> thank you so much.
[08:03:52] <Nobrem> So, I explain it to you the same way I have been trying to explain it to myself for the past couple of hours.
[08:04:11] <Nobrem> So, there is a time lapse video... some of them are 15x sped up,  others only 4x sped up.
[08:04:37] <Nobrem> When I add the timestamps to the whole video,  it would help a lot.  Afterwards,  I can speed up boring parts of the video even more,  or slow down interesting parts.
[08:04:51] <Nobrem> As the timestamps will be burned into the video itself,  they will always be correct
[08:05:06] <e36freak> do you have like a text file or something with this information in it?
[08:05:16] <Nobrem> But wait... no, I cannot do that.  Because it takes my computer 20 hours to burn subtitles into a 2 hour long 4K video
[08:05:16] <e36freak> like a timestamp for a certain speed to start, followed by the speed
[08:05:18] <e36freak> or similar
[08:05:24] <Nobrem> no
[08:05:31] <Nobrem> I started coding a shell script for it
[08:05:40] <e36freak> then how do you know (or how would this program know) what speeds happen when
[08:05:47] <Nobrem> but the problem is,  that if I added the subtitles to the whole video,  it would take 20 hours
[08:05:49] <e36freak> it would suck ass to hardcode all of it in the program for each thing
[08:06:02] <Nobrem> I would use a shell script
[08:06:09] <Nobrem> ./script orig_speed  new_speed
[08:06:20] <Nobrem> orig_speed is the speed that the time lapse was recorded in
[08:06:25] <e36freak> so the whole video is changed to be a new speed?
[08:06:29] <Nobrem> new speed is an additional multiplier
[08:06:33] <Nobrem> yes
[08:06:33] <e36freak> or are you changing speeds throughout the output video?
[08:06:34] <e36freak> oh
[08:06:37] <Nobrem> yes.
[08:06:40] <e36freak> that's less of a big deal than i thought
[08:06:43] <Nobrem> I would crop out certain parts
[08:06:46] <e36freak> if it's all one speed modification
[08:06:49] <Nobrem> what?  Less of a big deal?
[08:06:51] <Nobrem> I am dying here
[08:06:54] <tirnanog> didn't sound like one modification to me.
[08:07:21] <Nobrem> let's say, the video is 10 minutes long, recorded at a 15x speed.
[08:07:38] <Nobrem> this means, 4 seconds of video material = 1 minute in real life
[08:07:48] <Nobrem> so, I would add a different minute-text every 4 seconds
[08:07:58] <Nobrem> I already created a shell script for this
[08:08:09] <Nobrem> but, my videos are all more than 2 hours long
[08:08:19] <Nobrem> and adding text to every frame in 4K for 2 hours takes 20 hours
[08:08:28] <Nobrem> so, I would like to tell the program:
[08:08:46] <Nobrem> "cut out minute 2-4  and speed it up 2x  (additionally to the original 30x)  and add timestamps"
[08:08:55] <Nobrem> and that is where I am dying
[08:09:09] <Nobrem> imagine I have a subtitles SRT file
[08:09:14] <Nobrem> 00:04:00
[08:09:18] <Nobrem> and the next is 00:08:00
[08:09:19] <tirnanog> your "before" text shows an inconsistent rate of time though. 4 minutes is "4 Minutes", then it jumps to "1 HOUR" by the 8 minute mark. are you at least going to be operating on a segment of the video that has a consistent rate of time?
[08:09:26] <Nobrem> what if I cut it at 00:06:00 ?
[08:09:54] <Nobrem> tirnanog, that was just a test file for myself
[08:09:56] <tirnanog> or seconds even.
[08:10:06] <Nobrem> tirnanog, to make sure the spacing is correct when it jumps from minute to hour
[08:10:12] <Nobrem> the 4-seconds-gaps will be consistent
[08:10:22] <Nobrem> every 4 seconds starts a new minute
[08:10:27] <Nobrem> but only with a 15x speed
[08:11:47] <e36freak> before you start writing any code you need to be able to clearly and simply state the problem you're trying to solve with concrete goals
[08:12:08] <Nobrem> let me write a text
[08:18:50] <tirnanog> it doesn't even sound like you need to operate on an existing srt file at all. you're generating subtitles (I think?) whose text will convey the passage of time (at unstated intervals) within what may or may not be a single excerpt from an existing video whose playtime has been reduced by some factor (that may or may not be constant) and ... er ... I don't know.
[08:19:08] <Nobrem> e36freak, tirnanog:  https://dpaste.org/Vs4T/raw
[08:19:27] <Nobrem> tirnanog, I hope my text above (see link) explains it well
[08:19:53] <Nobrem> I realize it's a bit offtopic in awk,  but I was hoping for awk to fix it,  but now that I am here, I am just hoping for somebody whose brain works better than mine
[08:20:59] <e36freak> ha, you think my brain works
[08:21:04] <Nobrem> I am struggling with step 4)  and step 6)
[08:21:20] <Nobrem> e36freak, somehow I always feel like everyone on IRC is way more intelligent that I
[08:21:24] <tirnanog> so 2 and 3 could be repeated so as to extract multiple excerpts of the original video.
[08:21:30] <tirnanog> (given that you talk about concatenation later)
[08:21:49] <Nobrem> tirnanog, yes, 2 and 3 will be repeated, just in different speeds
[08:21:58] <tirnanog> now it's finally starting to make some sense.
[08:22:01] <Nobrem> some parts shall remain at the originally 15x of the recording, others will be sped up even more
[08:22:22] <Nobrem> there is a youtube video that has the potential to show what I am doing
[08:22:38] <Nobrem> brb - searching
[08:22:55] <tirnanog> so there is no "before" when it comes to subtitles anyway.
[08:23:13] <tirnanog> this is simply a matter of generation.
[08:23:18] <Nobrem> https://youtu.be/-68EUXvleTE?t=26
[08:23:24] <Nobrem> please look at the left bottom corner of the video
[08:23:33] <Nobrem> there will be "time running"
[08:23:35] <Nobrem> that is what I need
[08:23:55] <tirnanog> generating subtitles. not parsing them. you sure didn't make it sound like it earlier.
[08:24:25] <Nobrem> I was thinking about generating them,  but it's a problem when you start in between 4 seconds spans
[08:24:32] <Nobrem> 4 seconds = 1 minute
[08:24:49] <Nobrem> what if I start requesting a piece that is at 6 seconds?
[08:25:01] <Nobrem> I cannot think of a way to ... I am just .. something is a problem for me here
[08:25:10] <Nobrem> tirnanog, believe it or not, I am a programmer (web)
[08:25:15] <Nobrem> but I am dumb struck here
[08:25:22] <Nobrem> actually, for the past 3 days
[08:26:10] <Nobrem> I could also add text directly to the video without subtitles
[08:26:21] <Nobrem> because the subtitles will get burned into the video anyway
[08:26:30] <Nobrem> they should always be visible inside the video
[08:28:41] <tirnanog> are your video excerpts going to be contiguous? if not, that's where I can see it getting complicated.
[08:28:43] <Nobrem> https://dpaste.org/muko
[08:28:58] <Nobrem> ^ this is how I would generate subtitles directly,  without burning a SRT file into the video
[08:29:36] <Nobrem> tirnanog, yes, if I understand "contiguous" correctly (I just used a dictionary) then yes, they are contiguous
[08:29:53] <Nobrem> you mean like,  the next minute-text starts where the previous one ends?
[08:31:01] <tirnanog> like, could there be a time gap between the -to value of one excerpt and the -ss value of the next.
[08:31:43] <tirnanog> or are you just slicing it up into nice continguous chunks, just for the purpose of accelerating each one at varying rates.
[08:31:45] *** Quits: boubou (~boubou@hide.my.ip.upsidehosting.com) (Killed (ozone (No Spam)))
[08:31:56] <Nobrem> there could definitely be gaps,  but in a different way.
[08:31:58] <Nobrem> let me explain
[08:32:03] <Nobrem> I have 2-3 camera angles
[08:32:26] <Nobrem> now, let's say something interesting happens at minute 12-14,  I might show it from one camera,  and then the same time from an other angle (other camera)
[08:32:35] <Nobrem> all together, I will show the _entire_ video
[08:32:44] <Nobrem> but, the speed will vary.
[08:32:55] <Nobrem> please allow me 2 more minutes to even write something about this.
[08:32:55] <Nobrem> brb
[08:33:04] *** Joins: boubou (~boubou@hide.my.ip.upsidehosting.com)
[08:35:54] <Nobrem> https://dpaste.org/FDSB/raw
[08:36:00] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[08:36:38] <Nobrem> bearing in mind, that video 1, 2 and 3 are already sped up to begin with
[08:37:06] <Nobrem> sometimes,  they even have different speed-up-levels out of the camera  (because a tiny mis-click and such a mistake happens)
[08:37:22] <Nobrem> recently, I recorded one camera with 4x and the other with 15x
[08:37:35] <tirnanog> but you know what they are.
[08:37:39] <Nobrem> yes
[08:37:52] <Nobrem> it only happened once, but it might happen again
[08:38:02] <Nobrem> the camera defaults back to factory settings for whatever reason
[08:40:08] <Nobrem> thank you very much for talking with me
[08:44:19] <tirnanog> well, I more or less get it at this point. this is somewhat beyond the dominion of one-liners and magical regular expressions. however, I'm not going to suggest anything in particular. partly because it's 5am and I'm nodding off. what I would suggest on your part is that you take an actual project into consideration and start thinking of how to express these paramaters in a simple columnar format that
[08:44:21] <tirnanog> could be easily parsed. your "now, use" text isn't that far off what it might look like, verbosity aside.
[08:45:11] <Nobrem> cutting and speeding up really looks like "now, use"
[08:45:12] <tirnanog> because, once you have the inputs concretely defined in manner that lends itself to parsing, it becomes easier to reason with the programming side.
[08:45:19] <Nobrem> the problem are the _right_ timestamps with that offset
[08:45:56] <tirnanog> yes, obviously.
[08:46:24] <Nobrem> I might need to generate a new subtitles-files
[08:46:30] <Nobrem> a new subtitle every second in it
[08:46:40] <Nobrem> many seconds will have the same text
[08:47:27] <Nobrem> and then I must start the subtitles with a different text than 1 minute
[08:47:39] <Nobrem> but it's helly tricky, especially with the jump to "hour"
[08:51:18] <Nobrem> Here, I am really stuck
[08:51:26] <Nobrem> look:
[08:51:34] <Nobrem> 3 seconds to be discarded from the front.
[08:51:42] <Nobrem> I cut out seconds 33-70
[08:52:07] <Nobrem> I start adding a subtitle in the SRT file with 00:00:00  because it's cropped
[08:52:19] <Nobrem> but, the text will read (30/4)=7.5 minutes
[08:52:35] <Nobrem> that can't be so hard, but I am dumb struck here
[08:53:27] <tirnanog> I think it will get easier if you stop thinking about file formats (including SRT) for a moment. you'll have a file where the time ranges are expressed, along with the scaling factor which explains the real rate at which time is passing in the footage. normalise these ranges to, say, milliseconds so that the math becomes a lot easier.
[08:54:23] <Nobrem> ok, thank you!
[08:58:24] <tirnanog> as I say, I'm tired. but ... for example, let's say the first clip is 5 minutes long, but only because you accelerated it by 2x, meaning that 10 minutes of time has passed. you start your counter at 0, and, given the requirement of subtitle timestamps needing to be minutely, the program can know that the text must change every 30000 milliseconds. once your counter exceeds 600000, you're reach 10
[08:58:26] <tirnanog> minutes and it's time to move on to the next row of input, but the counter's position is retained.
[08:59:41] <tirnanog> you collect an array of spans in millis, along with the subtitle text to be shown for them, and worry about the srt conversion at the end (for now).
[09:00:23] <Nobrem> thank you!  I am doing my best!
[09:00:39] <Nobrem> I appreciate the chat,  and I wish you a good night, rest well,  5 AM sounds very late to go to bed :)
[09:00:43] <tirnanog> yeah :(
[09:00:50] <Nobrem> UK ?
[09:01:04] <tirnanog> yes.
[09:01:06] <Nobrem> good english + 2 hours behind me = sounds like UK :)
[09:01:13] <tirnanog> clever guy.
[09:01:16] <Nobrem> heh
[09:01:39] <Nobrem> thank you, tirnanog !
[09:01:49] <Nobrem> sleep well, I am closing the chat, too, so I can focus 100% on the issue at hand
[09:02:00] <Nobrem> thank you again!
[09:02:10] <tirnanog> in any case, if you mull it over on the basis of having normalised your time ranges to millis than think of it in terms of accumulating a counter that takes into account the acceleration factor for each 'row' of input, perhaps it will not seem quite so intractable.
[09:07:30] *** Quits: Nobrem (~Nobrem@85.187.219.207) (Quit: Leaving)
[09:25:57] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[09:27:49] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 240 seconds)
[09:28:32] *** Quits: defjam (~eb0t@90.198.61.46) (Ping timeout: 240 seconds)
[09:30:47] *** Joins: defjam (~eb0t@90.203.120.248)
[09:45:04] <nmz> bloody hell
[09:45:11] <nmz> I wrote a solution to that the other day
[09:45:17] <nmz> shame shame
[09:45:49] <e36freak> lol
[09:49:22] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[09:52:18] <nmz> quite the night owl e36freak 
[09:52:29] <nmz> sleep time for me though, nighto
[10:09:21] *** Joins: user51 (~user51@176.228.148.215)
[10:10:56] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[10:12:36] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[10:27:34] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[10:35:47] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[10:37:04] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[10:58:12] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[10:59:52] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[11:00:31] <Patsie> no sleep for the wicked
[11:14:41] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[12:11:25] *** Joins: lavaball (felix@31.204.155.215)
[13:16:04] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[13:18:24] *** Joins: kensanata (~user@user/kensanata)
[14:13:24] *** Joins: earnestly (~earnest@user/earnestly)
[14:35:42] *** Quits: Bossi (~quassel@p4fc22a7d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:40:22] *** Joins: Bossi (~quassel@p548377de.dip0.t-ipconnect.de)
[14:43:10] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Quit: ZNC 1.8.2 - https://znc.in)
[14:51:47] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[15:08:38] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[15:18:21] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[15:24:57] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[15:39:15] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[15:40:06] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[15:58:57] *** Joins: bluedust (~bluedust@103.161.144.146)
[16:29:04] *** Quits: bluedust (~bluedust@103.161.144.146) (Remote host closed the connection)
[17:03:44] *** Joins: bluedust (~bluedust@103.161.144.146)
[17:14:30] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[17:25:20] *** Quits: bluedust (~bluedust@103.161.144.146) (Remote host closed the connection)
[17:26:42] *** Joins: seninha (~seninha@user/seninha)
[17:31:22] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 256 seconds)
[17:32:13] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:39:15] *** Joins: euandreh (~euandreh@191.181.59.160)
[17:50:37] *** Joins: birkoff (birkoff@user/birkoff)
[17:52:18] *** Joins: adip (~adip@user-188-33-250-10.play-internet.pl)
[17:58:29] *** Joins: bluedust (~bluedust@117.204.150.2)
[18:05:38] *** Joins: lavaball (felix@31.204.155.215)
[18:16:16] <birkoff> hi, I'm trying to describe fields as anything between [ and ] like this: gawk -vFPAT='[^\\[\\]]' -vFS='[\\[\\]]'   yet I get one empty field before each extrapolated field
[18:17:54] <birkoff> i.e. for record:  [ field1][  field2]   it would end up: $1="" $2=" field1"  $3="" $4="  field2"
[18:28:36] <emanuele6> birkoff: if you set FPAT in GNU awk, FS is ignored.
[18:31:20] <birkoff> i've read that in the man page yet it still makes a difference for the output
[18:31:33] <birkoff> if I i.e. remove -vFS...
[18:32:32] <emanuele6> if you want to get everything between [] including [] in a field in gawk it is simply: gawk -v FPAT='\\[[^]]*\\]'
[18:34:21] <emanuele6> or you can use -v FPAT='[^][]+' if you don't care about ignoring text outside of []
[18:35:11] <emanuele6> # gawk -vFPAT='[^][]+' '{for(i=0;i<=NF;++i)printf "$%s: \"%s\"\t", i, $i}' <<< '[ field1][  field2] xd'
[18:35:12] <shbot> emanuele6: $0: "[ field1][  field2] xd"    $1: " field1"   $2: "  field2"  $3: " xd"
[18:35:51] <emanuele6> # gawk -vFPAT='\\[[^]]*\\]' '{for(i=0;i<=NF;++i)printf "$%s: \"%s\"\t", i, $i}' <<< '[ field1][  field2] xd'
[18:35:53] <shbot> emanuele6: $0: "[ field1][  field2] xd"    $1: "[ field1]" $2: "[  field2]"
[18:36:31] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:38:02] <emanuele6> birkoff: you are right, it is the opposite: FPAT gets ignored if FS is set
[18:38:12] <emanuele6> you FPAT is doing nothing if you set both.
[18:38:21] <emanuele6> s/you/your/1
[18:39:56] *** Quits: euandreh (~euandreh@191.181.59.160) (Ping timeout: 256 seconds)
[18:40:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:42:49] <emanuele6> you may also use  FS='^[^[]*\\[|\\][^[]*\\[|\\][^[]*$' in any POSIX awk to get text between [], but, of course, you will always have an extra first and last field set to "" with this method
[18:44:26] <emanuele6> well, not always
[18:48:11] <emanuele6> it won't work correctly if there is are unclosed [ not between [] or unopened ] not between []
[18:59:30] <birkoff> is it necessary to escape [ and ] for their regex usage ?
[19:01:32] *** Parts: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Leaving)
[19:01:48] <emanuele6> what are you talking about?
[19:02:59] <emanuele6> if you are asking if you should use [\\[\\]], no. you should not, that has a completely different meaning from [][].
[19:05:23] <emanuele6> mm, actually i does not have a different meaning
[19:05:57] <emanuele6> i remembered [\\]] matching both ] and \, but that does not seem to be the case in gawk 
[19:06:15] <emanuele6> still using \ in ] is not necessary
[19:06:26] <emanuele6> s/\]/[]/
[19:09:44] <seninha> emanuele6: except for escaping the regexp delimiter / as in /[\/]/, some implementations require it to be escaped, even when between [...]
[19:10:55] <birkoff> this one: -vFPAT='\\[[^]]*\\]'    versus this one: -v FPAT='[^][]+'
[19:11:23] <birkoff> the latter would treat the first and last [,] pair as a regex character-group 
[19:11:25] <birkoff> ?
[19:11:40] <birkoff> emanuele6: ^
[19:13:42] <emanuele6> \\[[^]]*\\] defines a field as '[' <sequence-of-zero-or-more-characters-that-are-not-]> ']'
[19:14:22] <emanuele6> `[^][]+' defines a field as <sequence-of-one-or-more-characters-that-are-neither-[-nor-]>
[19:15:40] <emanuele6> seninha: i wonder if needing to write backslash as \\ in character classes is a difference between ERE and BRE
[19:15:54] <emanuele6> # printf '%s\n' 'hi' 'hello\ world' 'hey' | sed -n '/[\]/p'
[19:15:56] <shbot> emanuele6: hello\ world
[19:16:41] <emanuele6> # printf '%s\n' 'hi' 'hello\ world' 'hey' | awk '/[\]/' |& head -1; printf '%s\n' 'hi' 'hello\ world' 'hey' | awk '/[\\]/' |& head -1
[19:16:43] <shbot> emanuele6: awk: nonterminated character class [\]
[19:16:43] <shbot> emanuele6: hello\ world
[19:17:14] <emanuele6> # printf '%s\n' 'hi' 'hello\ world' 'hey' | awk '$0 ~ "[\\]"' |& head -1; printf '%s\n' 'hi' 'hello\ world' 'hey' | awk '$0 ~ "[\\\\]"' |& head -1
[19:17:15] <shbot> emanuele6: awk: nonterminated character class [\]
[19:17:15] <shbot> emanuele6: hello\ world
[19:17:28] <emanuele6> in sed, you don't need to; in awk you do
[19:17:56] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:f755:55d9:216b:76f6)
[19:19:41] <emanuele6> maybe it's just an awk thing
[19:20:05] <emanuele6> on NetBSD,   grep '[\]'   and    grep -E '[\]'  both work
[19:21:01] <emanuele6> but /[\]/ doesn't work in mawk, gawk and nawk; it has to be /[\\]/ or "[\\\\]"
[19:24:13] <emanuele6> (i was using GNU grep on NetBSD oops)
[19:43:32] *** Quits: bluedust (~bluedust@117.204.150.2) (Remote host closed the connection)
[19:57:35] *** Joins: kensanata (~user@user/kensanata)
[20:18:54] *** Joins: bluedust (~bluedust@117.204.150.2)
[21:07:43] *** Joins: roarde (~roarde@user/roarde)
[21:15:38] *** Quits: bluedust (~bluedust@117.204.150.2) (Remote host closed the connection)
[21:23:52] *** Joins: roarde_ (~roarde@user/roarde)
[21:26:13] *** Quits: roarde (~roarde@user/roarde) (Ping timeout: 240 seconds)
[21:40:12] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:41:56] *** roarde_ is now known as roarde
[21:42:30] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[21:42:54] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[22:30:54] *** Joins: jle (~jle@user/jle)
[22:31:28] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:55:33] <birkoff> the [[^]] bit is quite confusing, why are there \\ just before the first and last brackets?
[22:58:23] <emanuele6> birkoff: it's `\\[' to match a literal '[', then `[^]]*' to match a sequence of characters that are not ']', then `\\]' to match a literal `]' 
[23:09:20] *** Joins: suskin (~suskin@user/suskin)
[23:09:43] *** Parts: suskin (~suskin@user/suskin) ()
[23:34:13] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[23:34:56] <birkoff> the literal escape isn't needed then in the ] after the ^ ?
[23:38:23] <emanuele6> no, [^]] and [^\\]] are exactly the same in awk.
[23:39:09] <birkoff> so are the first and last \\ needed?
[23:39:17] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[23:39:18] <emanuele6> yes.
[23:39:21] *** Joins: vlm (~vlm@user/vlm)
[23:39:46] <birkoff> you just said literal [] and non-literal [] are exactly the same?
[23:40:16] <emanuele6> that is not what i said. 
[23:40:31] <emanuele6> and you can easily see that if you remove \\, it won't work
[23:40:35] <emanuele6> # gawk -vFPAT='\\[[^]]*\\]' '{for(i=0;i<=NF;++i)printf "$%s: \"%s\"\t", i, $i}' <<< '[ field1][  field2] xd'
[23:40:36] <shbot> emanuele6: $0: "[ field1][  field2] xd"    $1: "[ field1]" $2: "[  field2]"
[23:40:42] <emanuele6> # gawk -vFPAT='[[^]]*]' '{for(i=0;i<=NF;++i)printf "$%s: \"%s\"\t", i, $i}' <<< '[ field1][  field2] xd'
[23:40:44] <shbot> emanuele6: $0: "[ field1][  field2] xd"
[23:41:28] <emanuele6> inside character classes, you don't need to escape ], \\ will just be ignored.
[23:42:35] <seninha> ok, I opened a issue on p9p about their awk implementation
[23:42:36] <seninha> https://github.com/9fans/plan9port/issues/537
[23:43:12] <birkoff> only in case it's the first character after [^ or it doesn't matter ? 
[23:43:27] <emanuele6> tias
[23:43:41] <seninha> Maybe that's a bug on their implementation, maybe that's a bug on the language specification which's not clear enough.
[23:43:49] <birkoff> because otherwise how would the character class atom know when it's finished?
[23:44:30] <seninha> # nawk 'BEGIN {s = "/"; sub(/[/]/, "a", s); print s}'
[23:44:36] <shbot> seninha: nawk: extra ] at source line 1
[23:44:36] <shbot> seninha:  context is
[23:44:36] <shbot> seninha: etc... ( http://ix.io/3LFZ )
[23:45:00] <seninha> # gawk 'BEGIN {s = "/"; sub(/[/]/, "a", s); print s}'
[23:45:01] <shbot> seninha: a
[23:45:13] <seninha> hmm
[23:45:41] <emanuele6> birkoff: see https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_03_05
[23:48:00] <emanuele6> seninha: it works for me
[23:48:12] <emanuele6> oh, not in nawk
[23:48:18] <emanuele6> same as shbot
[23:48:46] <emanuele6> maybe nawk uses the system's regcomp() so it is dependant on lib C
[23:49:15] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[23:50:26] <emanuele6> seninha: are you sure you are not trying nawk instead of plan9port awk?
[23:50:42] <emanuele6> the error message looks exactly the same as nawk's
[23:51:13] <seninha> both
[23:51:27] <seninha> well, p9p is based on ota...
[23:52:21] <emanuele6> nevermind it is slightly different http://0x0.st/oiSl.txt
[23:54:26] <emanuele6> nawk is not POSIX compliant in some ways: nawk never allows \n in regexes
[23:54:51] <emanuele6> while POSIX says that \n must always be allowed unless used on $0
[23:55:08] <emanuele6> and \n must be allowed if RS is not set to \n
[23:56:04] <emanuele6> while there code just has:  if (c == '\n') { SYNTAX( "newline in regular expression %.10s...", buf ); ... in the regex parser
[23:57:15] <emanuele6> s/if RS/also when used on $0 if RS/
[23:57:31] <emanuele6> s/there/their/
