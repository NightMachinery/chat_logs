[00:02:22] <nrds> <06Prestige99> hm let's see..
[00:04:42] <nrds> <06Prestige99> Doesn't help that I don't know C that well, but: https://github.com/slembcke/Chipmunk2D/blob/master/include/chipmunk/cpPolyShape.h is the header and https://github.com/avahe-kellenberger/nim-chipmunk/blob/master/src/chipmunk7.nim#L93 is the wrapper for it
[00:05:00] <nrds> <06Prestige99> I've just modified an existing wrapper for chipmunk
[00:07:02] <FromDiscord> <Elegantbeef> I'll check it in a bit
[00:12:46] <Pyautogui> Noob question: When should I use a template versus an inline pragma?
[00:13:47] <Pyautogui> I am trying undertand the nim-bigints library use of the {.inline.} pragma.
[00:14:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 264 seconds)
[00:14:36] <nrds> <06Prestige99> thanks
[00:15:00] <nrds> <06Prestige99> I believe the inline pragma tries to tell the c compiler to inline the code (in c) but using a template inlines the nim code. iirc
[00:15:26] <FromDiscord> <Elegantbeef> Well you generally should default to the inline unless guaranteed inlining is a desired
[00:15:46] <FromDiscord> <Elegantbeef> templates certainly inline, whereas you're at the mercy of the compiler and your settings for the pragma
[00:16:04] <Pyautogui> Thanks. 
[00:59:58] *** Quits: max22- (~maxime@2a01cb0883359800a5cb7947071ee8e1.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:02:37] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[01:11:18] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Quit: Leaving)
[01:42:49] <FromDiscord> <Hamid Bluri> me:â†µ8 hours writing my ideal DSLâ†µ1 hour
[01:43:05] <FromDiscord> <Hamid Bluri> 1 hour actually working on project
[01:43:25] <FromDiscord> <Hamid Bluri> (edit) "DSLâ†µ1 hour" => "DSL"
[01:43:50] <FromDiscord> <Hamid Bluri> i cant even imagine the world without macro ðŸ˜„
[02:13:55] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[02:21:38] <FromDiscord> <f_l_a> Hello everyone  I want to bind  NimVm  to Nim such as binding python with c++ imagine I write basic functions with basic structs and compile with nim to binary and fast so file and use this function in NimVm .anyone can help?
[02:22:36] <FromDiscord> <codic> I want to pass a `ptr cuchar` (as a string) to a C function, from an original nim `string`
[02:22:59] <FromDiscord> <codic> I tried `cast[ptr cuchar](nim_string)` and `cast[ptr cuchar](nim_string.unsafeAddr)` but neither works, what do I do?
[02:23:19] <FromDiscord> <codic> oh it seems I can do .cstring
[02:44:47] *** Joins: audiophile_ (~audiophil@user/audiophile)
[02:50:16] <FromDiscord> <Elegantbeef> Looking at the C and the bindings doesnt give me much reason to think this should cause this
[02:50:31] <FromDiscord> <Elegantbeef> Guess i should say a name like prestige for that above message
[02:53:12] <nrds> <06Prestige99> Hey Elegantbeef - thanks
[02:53:21] <nrds> <06Prestige99> I'm not sure where to go from here... 
[02:53:48] <FromDiscord> <Elegantbeef> Well where is the C struct declared?
[02:55:15] <nrds> <06Prestige99> aha! found it https://github.com/slembcke/Chipmunk2D/blob/master/include/chipmunk/chipmunk_structs.h#L225
[02:55:28] <nrds> <06Prestige99> Perhaps this is the issue, then.
[02:55:55] <nrds> <06Prestige99> Presumably I need to add these members to the wrapper
[02:57:33] <FromDiscord> <Elegantbeef> Yea idk the minimal case of what you're doing ostensibly works https://play.nim-lang.org/#ix=3BXo
[02:59:47] <nrds> <06Prestige99> This was also happening with sdl_gpu, but I couldn't get a super minimal example. So I suspect it has something to do with the wrappers
[03:01:33] <nrds> <06Prestige99> It seems a lot of the definitions in the wrappers don't include properties, e.g. `Shape* = ptr ShapeObj` is the entire definition. But there are like, 12 or so properties on the actual c struct
[03:01:53] <nrds> <06Prestige99> (and PolyShape inherits from Shape)
[03:05:22] <Mister_Magister> Hi, i want to send broadcast packet from one nim app and then respond from second nim app with ip address, i want to use it to discover where is the server at in network. Do you perhaps have some pointers or example?
[03:07:17] <Mister_Magister> i can probably use socket.sendTo to send to broadcast but how do i listen to broadcast?
[03:08:20] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[03:09:16] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/net.html#examples-creating-a-server did you look at?
[03:10:14] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Client Quit)
[03:11:42] <Mister_Magister> yep and nothing about receiving udp broadcast packets :
[03:11:44] <Mister_Magister> :/
[03:12:05] <Mister_Magister> it literally says in the example "you can create a TCP server by calling the bindAddr and listen procedures"
[03:13:08] <Mister_Magister> i imagine i need to do something with this https://nim-lang.org/docs/net.html#recvFrom%2CSocket%2Cstring%2Cint%2Cstring%2CPort%2Cint32
[03:13:16] <FromDiscord> <Elegantbeef> `newSocket` has an optional `protocol` and `sockType`
[03:14:09] <Mister_Magister> true
[03:14:49] <FromDiscord> <Elegantbeef> I dont know much about sockets but if i understand what you're after does `IpProtoUdp` and `SockRaw` not fit the bill?
[03:15:39] <Mister_Magister> i'm trying it as we speak :) thanks
[03:16:44] <Mister_Magister> hmm when using udp "Error: unhandled exception: Operation not supported"
[03:18:47] <Mister_Magister> ah can't call .listen
[03:19:07] <FromDiscord> <Elegantbeef> Yea udp is connectionless afterall
[03:19:17] <FromDiscord> <Elegantbeef> So you just do `recvFrom`
[03:20:03] <Mister_Magister> mhm
[03:20:12] <Mister_Magister> i got something to follow now, thanks!
[03:20:31] <Mister_Magister> i can prably figure it out from here
[03:21:17] <FromDiscord> <Elegantbeef> Yay the blind can lead the blind
[03:21:32] <Mister_Magister> :D
[03:21:37] <Mister_Magister> it's similar to rubberducking
[03:21:54] <Mister_Magister> i just needed something to bite
[04:07:27] *** Quits: audiophile_ (~audiophil@user/audiophile) (Remote host closed the connection)
[04:07:44] *** Joins: audiophile_ (~audiophil@user/audiophile)
[04:08:22] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[04:55:21] <nrds> <06Prestige99> Some of these definitions don't seem to exist.. I wonder if they're all required in a wrapper, anyway.
[04:56:34] <nrds> <06Prestige99> I'm not sure how types are used in C if there's no definition, I grep'd the whole chipmunk2d project
[05:24:06] <nrds> <06Prestige99> Wonder if I need to change how this is wrapped https://github.com/slembcke/Chipmunk2D/blob/master/include/chipmunk/chipmunk_structs.h#L226 not sure about this whole `ptr object of Shape` business is correct: https://github.com/avahe-kellenberger/nim-chipmunk/blob/master/src/chipmunk7.nim#L93
[05:24:32] <nrds> <06Prestige99> in the c def, these structs wrap a "cpShape"
[05:25:06] <nrds> <06Prestige99> (I hate working with c libraries now)
[06:02:29] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:25:08] <FromDiscord> <acek7> why dont programming books have audio books
[09:35:47] <FromDiscord> <Rika> its hard to represent code in audio
[09:56:04] <FromDiscord> <Smarc> Could anyone explain me why nvim is not recognizing the imported module/procedure? The main.nim file is compiling fine, so it has to be some local nvim issue. You can find my .vimrc here: https://gist.github.com/Smarcy/a39bddf17c8dd0dcb2c59bde60fe219e https://media.discordapp.net/attachments/371759389889003532/899181446621700127/Screenshot_20211016_145604.png
[09:57:15] <FromDiscord> <Smarc> Also nvim tells me that "piece_factory" would be an unusedImport
[10:14:27] <FromDiscord> <Rika> reopen
[10:21:13] <FromDiscord> <Smarc> My god, that fixed it .. Thank you first of all. How do I avoid that behaviour?
[10:29:57] <FromDiscord> <Rika> It just happens lol
[10:30:14] <FromDiscord> <Rika> Itâ€™s to do with how nimsuggest works I guess
[11:42:30] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[12:27:17] <FromDiscord> <leorize> you can't, unfortunately. It usually clears up after typing for awhile on the problematic file, but there is no concrete way to fix this other than restarting nimsuggestâ†µ(@Smarc)
[12:35:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[12:46:31] <FromDiscord> <Fancy> In reply to @Gumber "have a good night!": Oh just coincidence then. I saw some engines that utilised data orientated design I think it was Orx and Heaps, but it was a long time ago so I could be wrong. I think you have mentioned Unity and Godot a couple times now, I am guessing that you have used them before.
[12:53:44] <FromDiscord> <Fancy> @Gumber https://discord.com/channels/371759389889003530/706542664643772436/899226028852006914
[12:54:19] <FromDiscord> <Fancy> In reply to @Gumber "have a good night!": https://discord.com/channels/371759389889003530/706542664643772436/899226028852006914
[13:38:48] <FromDiscord> <levovix> how to cast seq to seq of type with different size?â†µfor example seq[byte] to seq[int]
[13:39:20] <FromDiscord> <haxscramper> `cast[seq[int]](<seq[byte>)`
[13:39:36] <FromDiscord> <haxscramper> This is of course unsafe, but assuming you know what you are doing it is the only solution I know of
[13:41:11] <FromDiscord> <levovix> In reply to @haxscramper "`cast[seq[int]](<seq[byte>)`": len will be incorrect
[13:42:40] <FromDiscord> <haxscramper> Then convert things manually, read four bytes into `array[4, byte]` cast to int and append to the sequence
[13:43:11] <FromDiscord> <levovix> ok
[14:05:56] <FromDiscord> <walter248_gitlab (Walter Mulder)> Hi, I have executed "nimble install minwc" for WebSiteCreator, no error messages.  This follows instructions (1a) for Install with Nimble.  But when I type "./minwc" I get a series of messages\:
[14:06:05] <FromDiscord> <walter248_gitlab (Walter Mulder)> sent a long message, see http://ix.io/3BZf
[14:06:49] <FromDiscord> <walter248_gitlab (Walter Mulder)> I imagine nim.cfg must be set up differently... does anyone have information on what is needed?
[14:41:18] *** Joins: rusua (uid124537@id-124537.uxbridge.irccloud.com)
[15:25:32] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:27:26] <FromDiscord> <Fancy> Can someone tell me what I shouldn't use Nim for?
[16:28:18] <FromDiscord> <haxscramper> malware
[16:28:34] <FromDiscord> <Fancy> haha nice
[16:28:38] <FromDiscord> <haxscramper> and on more serious note, I don't think there is something you should not use nim for
[16:28:58] <FromDiscord> <haxscramper> there are of course things that nim is better for, but as far as I'm concerned it is even suitable for hardcore cryptography
[16:29:20] <FromDiscord> <haxscramper> I use it for CLI scripts, compiler development
[16:29:26] <FromDiscord> <Fancy> Seriously I have been looking for ages and I can't find any reason I shouldn't use it
[16:29:36] <FromDiscord> <Fancy> Nice to meet you btw
[16:29:41] <FromDiscord> <haxscramper> There are web frameworks, GUI etc. pretty much whole spectrum
[16:32:24] <FromDiscord> <Fancy> Oh I always wanted to have a look into cryptography.
[16:32:31] <FromDiscord> <Fancy> Ohh
[16:32:40] <FromDiscord> <Fancy> I wanted to ask someone about this..
[16:32:50] <FromDiscord> <Fancy> compiler development
[16:33:26] <FromDiscord> <Fancy> Do you have much friction when doing compiler development in Nim?
[16:33:38] <FromDiscord> <enthus1ast> the nim compiler is build IN nim
[16:33:38] <FromDiscord> <haxscramper> No, not really
[16:33:48] <FromDiscord> <haxscramper> That does not really say much tbh
[16:33:48] <FromDiscord> <Fancy> Ohh so it is
[16:34:08] <FromDiscord> <haxscramper> Yes, but it is a large codebase with some technical debt etc.
[16:34:08] <FromDiscord> <Fancy> I just opened up github and yeah you're right
[16:34:10] <FromDiscord> <Fancy> cool
[16:34:15] <FromDiscord> <haxscramper> More than a decade of nim
[16:34:22] <FromDiscord> <haxscramper> But yes, it is 100% nim
[16:34:42] <FromDiscord> <haxscramper> First converted from pascal
[16:34:48] <FromDiscord> <Fancy> Ahhh
[16:34:55] <FromDiscord> <haxscramper> But usually there is not a lot of friction when developing compilers in nim
[16:34:56] <FromDiscord> <Fancy> Yeah I just watched a talk
[16:35:17] <FromDiscord> <haxscramper> I guess you just need to accept some code patterns like object variants and stuff
[16:35:20] <FromDiscord> <haxscramper> And then it becomes very easy yo do
[16:35:37] <FromDiscord> <haxscramper> there is a lot of stuff https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6
[16:37:44] <FromDiscord> <Fancy> In reply to @haxscramper "But usually there is": This is really good to know because this is something I would like to have a go at in the future. I might have a go at implementing a brainfuck interpreter first from the link on the Nim site.
[16:39:07] <FromDiscord> <Fancy> In reply to @haxscramper "I guess you just": Alright thanks for the tip. I really appreciate it.
[16:39:41] <FromDiscord> <Fancy> Ahh this link is to your project?
[16:40:13] <FromDiscord> <haxscramper> no, most of them are not mine
[16:40:23] <FromDiscord> <haxscramper> actually only htsparse in this list is my project
[16:43:27] <FromDiscord> <Fancy> Don't belittle yourself. ðŸ™‚ It is very impressive. I don't even have anything up on github yet at all. ðŸ™‚
[16:44:47] <FromDiscord> <Fancy> I have one concern about Nim, but I believe it is probably a non issue
[16:46:16] *** Joins: arkurious (~arkurious@user/arkurious)
[16:49:02] <FromDiscord> <Fancy> I created a tiny wrapper for the canvas api yesterday and the javascript file was about 1000 lines
[16:50:27] <FromDiscord> <xflywind> Have you tried `-d:danger` option?
[16:50:27] <FromDiscord> <Fancy> Is there a reason for this?
[16:50:35] <FromDiscord> <Fancy> Me?
[16:50:41] <FromDiscord> <xflywind> yeah
[16:50:46] <FromDiscord> <Fancy> No not yet
[16:50:48] <FromDiscord> <xflywind> `nim js -d:danger`
[16:51:02] <FromDiscord> <Fancy> I have just got into the Nim language
[16:51:05] *** Joins: max22- (~maxime@2a01cb0883359800f686a1c3d46594f3.ipv6.abo.wanadoo.fr)
[16:51:07] <FromDiscord> <Fancy> What does it do?
[16:51:11] <FromDiscord> <xflywind> (edit) "`nim js -d:danger` ... " 03added "or `nim js -d:release`."
[16:52:36] <FromDiscord> <xflywind> `-d:release` remove debug information and reduce the lines of code generated.
[16:52:41] <FromDiscord> <Rika> In reply to @Fancy "Can someone tell me": distributed computing?
[16:53:54] <FromDiscord> <Rika> In reply to @Fancy "I created a tiny": nim compilation artifacts are not meant to be readable
[16:54:07] <FromDiscord> <Rika> they can be though, as flywind sayds
[16:54:09] <FromDiscord> <Rika> (edit) "sayds" => "says"
[16:54:48] <FromDiscord> <Fancy> In reply to @flywind "`-d:release` remove debug information": Ohhhh I would have never known this even existed if you didn't tell me. thank you
[16:55:12] <FromDiscord> <xflywind> no problem
[16:56:13] <FromDiscord> <Rika> In reply to @Rika "distributed computing?": or anything that requires utmost stability, perhaps
[16:56:30] <FromDiscord> <Fancy> In reply to @Rika "distributed computing?": Ahh I read somewhere that elixir was good for distributed computing which I believe discord uses
[16:56:32] <FromDiscord> <Rika> though even then you can use nim for that, youll just have much more work
[16:56:45] <FromDiscord> <haxscramper> isn't status a prime example of such system
[16:56:53] <FromDiscord> <Rika> yes
[16:56:58] <FromDiscord> <Fancy> In reply to @flywind "no problem": I seriously really appreciate the help.
[16:57:02] <FromDiscord> <haxscramper> distributed computing, extreme requirements for stablitiy etc
[16:57:04] <FromDiscord> <Rika> but as i mentioned it's a lot of work needed
[16:57:30] <FromDiscord> <haxscramper> Yes, but the problem itself means there is a lot of wokr
[16:57:30] <FromDiscord> <Rika> i mean i guess you can argue that it's a lot of work in any language
[16:57:57] <FromDiscord> <haxscramper> yes, you said it just as I typed
[16:58:10] <FromDiscord> <haxscramper> ecosystem is weaker for this sort of thing
[16:58:15] <FromDiscord> <Rika> well then i guess the nutshell here is that if you're not up to write a lot of code (or you want a batteries included ecosystem) then yeah
[16:58:19] <FromDiscord> <Rika> nim isnt really well suited
[16:58:26] <FromDiscord> <Rika> god damn it
[16:58:27] <FromDiscord> <haxscramper> you can't just go, pick random library from top of hackernews praise list and go with it
[16:58:35] <FromDiscord> <Rika> yeah
[16:58:41] <FromDiscord> <haxscramper> hivemind
[16:58:42] <FromDiscord> <Rika> we dont even have a praise list do we
[16:59:32] <FromDiscord> <Rika> well thats the gist then, be ready to write serious amounts of code otherwise you'll cry
[16:59:38] <FromDiscord> <Fancy> In reply to @Rika "though even then you": Oh I see. I am not sure if it is something I will be using so should be fine. ðŸ™‚
[17:00:04] <FromDiscord> <enthus1ast> stable distributed system are hard, even more so when the environment is hostile (eg the internet)
[17:00:43] <FromDiscord> <Rika> ~~do yall have books regarding such systems and how to make them btw~
[17:00:44] <FromDiscord> <Rika> (edit) "btw~" => "btw~~"
[17:04:14] <FromDiscord> <Fancy> If I needed to build a distributed system for some reason, couldn't I just use node.js?
[17:04:19] <FromDiscord> <Fancy> Or nah
[17:05:24] <FromDiscord> <Rika> you can use any language
[17:05:29] <FromDiscord> <Fancy> I saw some book on creating distributed systems with node.js
[17:05:31] <FromDiscord> <Rika> its just a matter of how much effort itll take on such language
[17:05:51] <FromDiscord> <Fancy> I was meaning to say would it be more suitable
[17:06:31] <FromDiscord> <dom96> Nim is pretty good for distributed systems
[17:06:57] <FromDiscord> <dom96> we've got a good set of networking libraries which is the primary thing you need
[17:07:13] <FromDiscord> <Fancy> A language like elixir would be more suitable though right?
[17:07:50] <FromDiscord> <Fancy> In reply to @dom96 "we've got a good": Would you be able to send a link to them?
[17:08:00] <FromDiscord> <dom96> Not too familiar with Elixir. Why do you think it would be more suitable?
[17:08:23] <FromDiscord> <Fancy> I think it might of said on their site.
[17:08:28] <FromDiscord> <Fancy> I will go and check
[17:08:29] <FromDiscord> <Rika> elixir is afaik either a compiles-to-erlang or uses erlang vm
[17:08:31] <FromDiscord> <Fancy> one moment
[17:08:36] <FromDiscord> <Rika> and you know erlang
[17:08:38] <FromDiscord> <Rika> i hope
[17:09:19] <FromDiscord> <Fancy> "Elixir is a dynamic, functional language for building scalable and maintainable applications.â†µElixir leverages the Erlang VM, known for running low-latency, distributed, and fault-tolerant systems. Elixir is successfully used in web development, embedded software, data ingestion, and multimedia processing, across a wide range of industries."
[17:09:47] <FromDiscord> <dom96> Yes, I know those buzz words. I think it's important to dig deeper ðŸ™‚
[17:10:09] <FromDiscord> <dom96> A distributed system is already a very overloaded term
[17:10:41] <FromDiscord> <Rika> yeah pretty much just as specific as saying something "utilises the internet" like ???
[17:16:28] <FromDiscord> <retsyo (retsyo)> since I can't receive my password recovery mail from https://forum.nim-lang.org/. Is there any other way to log in?
[17:17:14] <FromDiscord> <xflywind> what's you username?
[17:17:30] *** Quits: max22- (~maxime@2a01cb0883359800f686a1c3d46594f3.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[17:17:40] <FromDiscord> <retsyo (retsyo)> oyster
[17:18:10] <FromDiscord> <xflywind> In reply to @retsyo (retsyo) "oyster": @dom96  ^
[17:18:49] <FromDiscord> <dom96> hm, can't do much other than resend the password recovery email
[17:18:52] <FromDiscord> <dom96> why can't you receive it?
[17:19:38] <FromDiscord> <dom96> I just reset mine and received the email (was in my spam folder though)
[17:20:00] <FromDiscord> <Fancy> In reply to @dom96 "Yes, I know those": Alright I will have a bit more of a look.
[17:21:08] <FromDiscord> <Fancy> In reply to @dom96 "A distributed system is": I have found an article about different kinds of distributed systems, so I will read up on that.
[17:21:55] <FromDiscord> <Fancy> In reply to @Rika "yeah pretty much just": I guess it is pretty broad. haha! sorry haha
[17:22:53] <FromDiscord> <Fancy> @dom96 What is something that you would use another language for over Nim?
[17:26:21] <FromDiscord> <Fancy> I really appreciate your guys feedback a lot as I have only been using this language for a couple of days so far, so having people with more experience to answer my questions really helps clears things up for me. ðŸ™‚
[17:26:59] <FromDiscord> <Fancy> (edit) "clears" => "clear"
[17:28:23] <FromDiscord> <retsyo (retsyo)> sorry, please ignore my above question. I can't recieve any recovery email days(weeks?) ago. But I tried few minutes ago, now I can log in the forum again \:)
[17:28:32] <FromDiscord> <dom96> great ðŸ™‚
[17:28:37] <FromDiscord> <Fancy> I would really like to know what got you guys into the language and what your experiences have been like so far.
[17:29:47] <FromDiscord> <haxscramper> Interop with Cxx is good
[17:29:50] <FromDiscord> <haxscramper> And macros
[17:30:00] <FromDiscord> <haxscramper> Basically this caught my attention at first
[17:30:06] <FromDiscord> <dom96> In reply to @Fancy "<@!132595483838251008> What is something": I would personally try to use Nim for everything. I guess an exception would be where another language has a well established library for what I want to do and I don't have time to implement it in Nim myself (or to even wrap it if it's implemented in C/C++)
[17:30:30] <FromDiscord> <dom96> Example could be Pandas in Python
[17:30:30] <FromDiscord> <haxscramper> There are some rough edges if you get into somewhat advanced stuff though, especially deep into typed macros/generics
[17:30:51] *** Quits: rusua (uid124537@id-124537.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:31:23] <FromDiscord> <dom96> or specialised stuff like backtesting financial algorithms I would grab Python since there is a big ecosystem for that there
[17:32:13] <FromDiscord> <Fancy> In reply to @haxscramper "Interop with Cxx is": From CMake?
[17:33:02] <FromDiscord> <Fancy> In reply to @haxscramper "There are some rough": So in general macros and generics caught your eye, right?
[17:35:39] *** Joins: max22- (~maxime@2a01cb08833598007c60123fcfb40865.ipv6.abo.wanadoo.fr)
[17:36:14] <FromDiscord> <Fancy> In reply to @dom96 "I would personally try": If you feel that way it must be pretty damn flexible. That makes sense it is probably better to just use the tools you already have at your disposal sometimes instead of trying to recreate an entire toolset.
[17:40:29] <FromDiscord> <Fancy> In reply to @dom96 "or specialised stuff like": Definitely. For a financial things in general I have seen a lot of recommendations for using Python, or Java.
[17:50:49] <FromDiscord> <haxscramper> In reply to @Fancy "So in general macros": macros and Cxx interop
[17:51:14] <FromDiscord> <Fancy> Nice
[17:52:03] <FromDiscord> <Fancy> So can you tell me what is so good about the macros in Nim?
[17:54:54] <FromDiscord> <haxscramper> They are procedural, which means you can put arbitrarily complex logic in them, they operate on the syntax level (not like C text substitution preprocessor) so you can create own DSLs when needed
[17:55:25] <FromDiscord> <haxscramper> https://nim-lang.org/blog/2021/03/10/fusion-and-pattern-matching.html for example this is a macro
[17:56:13] <FromDiscord> <haxscramper> And for `typed` macros you can also get access to types, so you can for example accept a type symbol into macro and then iterate over all fields in this symbol
[17:57:26] <FromDiscord> <haxscramper> for example here I pull out type information from tuple type https://stackoverflow.com/a/69462862/6086513
[17:59:28] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/6753#41973 largely talks about nim AST macros are better than other alternatives (it was a discussion about the language comparison with nim, so the response is also A vs B)
[18:01:33] <FromDiscord> <Fancy> In reply to @haxscramper "They are procedural, which": Damn I definitely didn't know that. I just got into it because of the amazing interop with other languages. That is actually really useful for me because as a person who is obsessed with these things in general I can get a lot out of it. Besides that that is wicked cool.
[18:03:40] <FromDiscord> <retsyo (retsyo)> It is a pity that there is no python-pandas-like module (with the ability to reader/writer excel's XLS and XLSX via other packages) for nim, which I often treate in my work. And I think it is impossible to develop such a module for static language.
[18:04:45] <FromDiscord> <Fancy> In reply to @haxscramper "And for `typed` macros": What really? I think I am going to have to look into this a lot more damn that's cool. I can't think of any other language that does this but I could be wrong.
[18:05:42] <FromDiscord> <haxscramper> You mean full excel compute engine features, or just using it as a static data frame?
[18:06:09] <FromDiscord> <haxscramper> i.e. just for dumb static excel generation
[18:09:22] <FromDiscord> <Fancy> In reply to @haxscramper "https://forum.nim-lang.org/t/6753#41973 largely tal": I will give it a read. I am having a bit of a look into the macros right now and I don't know if I have seen anything this fantastic. seriously
[18:12:53] <FromDiscord> <retsyo (retsyo)> read data in excel files(both XLS and XLSX format, because some colleagues always supply XLS) into pandas DataFrame, then I perform the operations(sort/filter/pivot-table/...) in pandas
[18:15:20] <FromDiscord> <Fancy> @haxscramper Hey man I just want to let you know that you sharing your love and knowledge of the language has really motivated me to continue on using it
[18:17:39] <FromDiscord> <Fancy> I can't believe a language like this exists
[18:17:56] <FromDiscord> <retsyo (retsyo)> any step-by-step macros tutorial with more explanation for an amateur programmer? I think it is hard for me to understand official https://nim-lang.org/docs/macros.html
[18:19:17] <FromDiscord> <Fancy> I believe fullstack webdev could be possible with the interop capabilities
[18:21:38] <FromDiscord> <Fancy> In reply to @retsyo (retsyo) "any step-by-step macros tutorial": Maybe it would be helpful to go through some of the basics of Nim, if you haven't already. I don't know your experience, but if it is hard it is probably because there are some gaps in your knowledge.
[18:22:03] <FromDiscord> <Rika> In reply to @Fancy "I believe fullstack webdev": and it is
[18:23:23] <FromDiscord> <Fancy> dayumm
[18:25:33] <FromDiscord> <Fancy> In reply to @Rika "and it is": I am so sold on this language
[18:25:36] <FromDiscord> <Fancy> seriously
[18:26:02] <FromDiscord> <Fancy> I know it is just a tool, but it is an amazing one at that
[18:27:42] <FromDiscord> <haxscramper> https://dev.to/beef331/demystification-of-macros-in-nim-13n8 this one is good I suppose? At this point I don't really remember basic stuff to be honest, so I can't really recommend anything
[18:32:17] <FromDiscord> <Fancy> I saw some people saying they used c++ in parts of their game where performance was critical. I am guessing I could achieve this with nim too right?
[18:38:09] <FromDiscord> <haxscramper> correct
[18:38:22] <FromDiscord> <haxscramper> well, you can write games entirely in nim
[18:38:36] <FromDiscord> <haxscramper> I guess C++ was used only in parts because it is very painful to write in
[18:39:05] <FromDiscord> <haxscramper> was not used for the whole game because it is painful
[18:40:16] <FromDiscord> <Fancy> I think C++ is not too bad if you are only doing simple things, but I have tried to do more complicated things in it and I felt like I was in a special kind of hell haha
[18:40:57] <FromDiscord> <Fancy> In reply to @haxscramper "well, you can write": That is absolutely fantastic
[18:41:57] <FromDiscord> <Fancy> In reply to @haxscramper "well, you can write": I have wanted a language like this for quite some time now. Something that doesn't get in my way and just allows me to do what I want to do.
[18:44:11] <FromDiscord> <Fancy> In reply to @haxscramper "was not used for": C++ in small doses is the only approach that should be taken in my books unless you really know what you are doing. It is just by opinion but I kept on feeling like the language was trying to fight me.
[18:50:09] <FromDiscord> <retsyo (retsyo)> thank you for the macros article. I will try to read it carefully.
[19:15:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:39:45] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[20:39:48] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:42:34] *** Gustavo6046_ is now known as Gustavo6046
[20:51:05] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:51:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:53:50] *** Gustavo6046_ is now known as Gustavo6046
[21:10:48] <Amun-Ra> I have p: ptr cchar, how to write to p[1]?
[21:11:23] <FromDiscord> <haxscramper> u need to cast it to `ptr UncheckedArray[cchar]`
[21:11:30] <FromDiscord> <haxscramper> Nim pointers are never arrays
[21:11:43] <FromDiscord> <haxscramper> `UncheckedArray` has all the necessary operations
[21:12:00] <Amun-Ra> ah, thanks
[21:27:19] <Amun-Ra> what would be the best way of passing chunk of an array to a function (I need to write to the chunk inside it)
[21:28:53] <Amun-Ra> hmm, passing array and start indexâ€¦
[21:29:39] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[21:30:43] *** Joins: xet7 (~xet7@user/xet7)
[21:33:37] <FromDiscord> <ynfle (ynfle)> Is it an unchecked array?
[21:33:58] <FromDiscord> <ynfle (ynfle)> for a seq, seq[start..stop] (FYI it's inclusive)
[21:36:07] *** Quits: max22- (~maxime@2a01cb08833598007c60123fcfb40865.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:41:36] <Amun-Ra> woudn't that seq be immutable?
[21:48:31] *** Joins: max22- (~maxime@2a01cb0883359800952563b5640f70e9.ipv6.abo.wanadoo.fr)
[21:54:44] <Amun-Ra> (I'm writing a small embedded project and I have to operate in gcless world)
[21:55:20] <FromDiscord> <haxscramper> `seq[a..b]` copies a sequence
[21:55:37] <FromDiscord> <haxscramper> your best solution would be to pass seq+ranges to the proc
[22:04:22] <Amun-Ra> or openArray with start offset
[22:14:55] <FromDiscord> <ynfle (ynfle)> Not if it's a `var`
[22:15:03] <FromDiscord> <ynfle (ynfle)> It's mutable then
[22:15:15] <FromDiscord> <ynfle (ynfle)> Do you want a mutable view?
[22:19:29] <Amun-Ra> yes
[22:28:54] <FromDiscord> <exelotl> how efficient are tables in nimscript?
[22:48:39] <FromDiscord> <haxscramper> just as any nimscript object
[22:48:46] <FromDiscord> <haxscramper> there is not table-specific overhead for nimscript
[22:49:23] <FromDiscord> <haxscramper> they use nim implementation from `std/tables.nim`
[22:52:07] <FromDiscord> <exelotl> ah, I was hoping there might be some efficient "soft object" built into nimscript
[22:52:48] <FromDiscord> <exelotl> well really I just need to map strings to ints
[22:58:41] <FromDiscord> <Elegantbeef> Time for CoW strings that are pre hashed ðŸ˜›
