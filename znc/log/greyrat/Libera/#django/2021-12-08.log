[00:03:13] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[00:03:19] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[00:04:33] *** Joins: rje (~rje@65.141.156.170)
[00:05:53] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:09:26] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[00:12:41] *** Quits: Buliarous (~gypsydang@185.207.166.57) (Quit: leaving)
[00:15:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:17:57] *** Joins: fikran (~fikran@user/fikran)
[00:24:32] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[00:24:47] *** Joins: lucascastro (~lucascast@189.90.44.253.jupiter.com.br)
[00:34:43] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[00:40:45] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[00:41:45] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[00:44:47] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[00:47:15] *** Joins: ST47 (~ST47@wikimedia/st47)
[00:47:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:47:46] *** ChanServ sets mode: +v EvilDMP
[00:48:39] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[00:51:48] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Quit: leaving)
[00:52:02] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[00:52:08] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Client Quit)
[00:55:51] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[00:56:18] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[00:56:31] *** Joins: audio (~audio@user/audio)
[01:02:01] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[01:26:28] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:27:31] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:27:32] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[01:39:57] *** Joins: Trieste (~T@user/pilgrim)
[01:49:28] *** Joins: aselman4 (~aselman4@lnsm3-toronto63-142-120-137-176.internet.virginmobile.ca)
[01:51:34] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[01:56:40] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:08:17] *** Joins: orzel (~orzel@2a01:e0a:df:6ba0:d78:5354:4be6:a432)
[02:09:46] <orzel> Hello. I have an object A, whose user field can be a User() instance or None. if I do A.objects.filter(user=None) i an see the relevant userless objects. But this doesn't work, and i dont understand why : A.objects.filter(server__user__in=[None, ])
[02:10:26] <orzel> (my original failing query is actually with several users and None, if that matters)
[02:10:57] <orzel> Is this behaviour expected ? (using uptodate django 3.2) ? How can i do what I want ?
[02:11:52] <orzel> (server__user in the first, working, exemple, oops)
[02:12:52] <nbjoerg> orzel: user__isnull=True
[02:13:48] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[02:15:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:16:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:16:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:20:36] *** Quits: aselman4 (~aselman4@lnsm3-toronto63-142-120-137-176.internet.virginmobile.ca) (Quit: Client closed)
[02:25:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[02:27:01] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:27:20] *** Joins: fikran (~fikran@user/fikran)
[02:51:50] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[02:51:52] <orzel> nbjoerg: i dont get it. it's another way of doing user=None ? How can I do then ? I can't filter on known users AND None ?
[02:52:10] <orzel> i'll need to Q()|Q() ?
[02:54:24] <GinFuyou> yes, probably use OR with Q object if __in = [None, ...] doesn't work
[02:54:37] <GinFuyou> Not sure it could be SQL specifics
[02:55:12] <GinFuyou> __isnull=True is recommended way to check null values (None in python terms)
[02:56:13] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[02:56:47] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:56:50] <nbjoerg> it is recommended because NULL checks are quite special in SQL
[02:57:59] <nbjoerg> and the transformation from __exact=None to IS NULL doesn't apply e.g. to __in
[02:59:03] *** Quits: lucascastro (~lucascast@189.90.44.253.jupiter.com.br) (Remote host closed the connection)
[02:59:25] *** Joins: lucascastro (~lucascast@189.90.44.253.jupiter.com.br)
[03:02:40] <orzel> MM, ok. I already had a hard time catching the bug.
[03:08:36] <BlahBlah> Man. Why is doing stuff with dates never easy in any programming language.
[03:09:30] <nbjoerg> BlahBlah: because dates are complicated
[03:09:45] <nbjoerg> actually, dates are mostly fine. it is timestamps that are the source of nightmares
[03:10:55] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[03:11:50] <BlahBlah> Care to enlighten me how to filter from a model this? matchDate = models.DateField(default=date.today) I've tried matchDate__gt=date.today() - timedelta(7) and also the datetime one. But nothing from the last 7 days is shown.
[03:13:13] <nbjoerg> last 7 or last 6?
[03:13:27] <nbjoerg> (since you are asking for >)
[03:14:20] <nbjoerg> but the filter looks right, except that I would spell it as timedelta(days=7)
[03:14:21] <BlahBlah> Hmm. If today was monday. Then all from monday till all from last teusday?
[03:14:34] <BlahBlah> I also tried that.
[03:15:07] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:15:55] <BlahBlah> return Match.objects.filter(matchDate__gt=date.today() - timedelta(days=7)) is what it is in the end.
[03:15:58] <nbjoerg> I'm certainly using filters like that
[03:16:26] <BlahBlah> Not being able to use comperators threw me for a loop as well. Never seen stuff like that __ part.
[03:17:16] <BlahBlah> return Match.objects.all() does get me everything though.
[03:21:16] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:26:41] <BlahBlah> Hmm. Probably a date format mismatch.
[03:29:39] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 265 seconds)
[03:30:38] *** Joins: cliluw (~cliluw@47.147.73.223)
[03:45:07] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 265 seconds)
[03:48:43] *** Joins: cyphase (~cyphase@user/cyphase)
[03:58:59] *** Joins: rje (~rje@50.35.241.164)
[04:06:29] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[04:07:33] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[04:08:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[04:09:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[04:11:14] *** Joins: cyphase (~cyphase@user/cyphase)
[04:16:16] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[04:16:34] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[04:21:46] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:26:49] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:34:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:36:42] *** Joins: fikran (~fikran@user/fikran)
[04:43:56] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:57:08] <BlahBlah> Is it possible to filter like this? value1-value2 should be smaller then 10% of value 1
[04:57:26] <BlahBlah> But above 0 obviously.
[05:00:01] <GinFuyou> With F expression probably, or with annotations
[05:02:01] *** Joins: TallguyTYO (~TallguyTY@p16110-ipngnfx01marunouchi.tokyo.ocn.ne.jp)
[05:02:24] *** Joins: yanchai (~yanchai@115.147.17.121)
[05:03:35] <FunkyBob> I second what GinFuyou said
[05:04:21] <FunkyBob> annotate(difference=F('field1') / F('field1') - F('field2')).filter(difference__lt=0.10)
[05:04:30] <FunkyBob> with appropriate parens :P
[05:06:27] <BlahBlah> Ah. I thought only stuff like that __ worked.
[05:06:38] <FunkyBob> ?
[05:07:02] <FunkyBob> left and right hand sides of the = are very different beastrs
[05:07:03] <FunkyBob> -r
[05:07:06] <BlahBlah> Thought that all had to be done with __lt and __gt and the others.
[05:07:49] <TallguyTYO> Hello, I'm learning django and DRF. I'm working on Will Vincent's tutorial here https://learndjango.com/tutorials/official-django-rest-framework-tutorial-beginners
[05:08:04] <BinarySavior> is it possible to have a "list of foreign keys"?
[05:08:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:08:22] <FunkyBob> BinarySavior: potentially... what problem do you see this solving?
[05:08:28] <FunkyBob> because it sounds like you want a many-to-many relation
[05:08:47] <TallguyTYO> When adding a relationship to a model I get the commented syntax error from on_delete https://dpaste.org/g6ju
[05:09:16] <BinarySavior> FunkyBob, Model=Walk, foreign key = Dog or dogs, Walk has boolean fields for poop and pee, which exist for each dog on walk
[05:09:26] <FunkyBob> TallguyTYO: which relationship did you add? and can you include the full tracback in another paste, please?
[05:09:29] <TallguyTYO> Django 3.2.10, no need for those args in the official Django docs. I'm confused
[05:11:09] <FunkyBob> BinarySavior: so you have Walk records shared between multiple Dogs
[05:11:18] <FunkyBob> BinarySavior: and a Dog can go on multiple Walks?
[05:12:05] <FunkyBob> TallguyTYO: you've missed a comma before on_delete
[05:12:11] <FunkyBob>     owner = models.ForeignKey('auth.User', related_name='snippets' on_delete=models.CASCADE)
[05:12:13] <BinarySavior> yes, dogs can go on walk together (if that's what you mean by shared) and they can go on multiple walks, yes
[05:13:42] <BinarySavior> would that be many to many relationship?
[05:13:57] <FunkyBob> BinarySavior: it would
[05:14:06] <FunkyBob> BinarySavior: but if you _also_ want to record wee/poo per dog, per walk
[05:14:14] <FunkyBob> you will need an explicit through table
[05:14:18] <TallguyTYO> FunkyBob thank youÂ ;( ;(
[05:14:22] <BinarySavior> yes that's what i want to do
[05:14:28] <FunkyBob> one with (walk, dog, wee, poo)
[05:14:44] <FunkyBob> which can then also be referenced as the through for a ManyToManyField for convenience
[05:15:01] <BinarySavior> okay i will read about this, thank you FunkyBob
[05:17:59] *** Joins: paquin (~paquin@151.61.173.255)
[05:18:13] *** Parts: paquin (~paquin@151.61.173.255) ()
[05:18:37] *** Quits: lucascastro (~lucascast@189.90.44.253.jupiter.com.br) (Ping timeout: 240 seconds)
[05:18:44] *** Joins: gcain (~gcain@158.140.192.203)
[05:20:22] *** Quits: wez (~wyoung@about/web/wez) (Ping timeout: 260 seconds)
[05:20:40] <gcain> FunkyBob: I have a quick question, I want to rewrite one of my analysis engines to have a bunch of models that are ephemeral and only live in either memory or Redis for super fast processing and then exporting of the data to a filestore. I guess my question is, is this idea sane?
[05:21:31] *** Joins: lucascastro (~lucascast@192-140-51-192.static.oncabo.net.br)
[05:21:43] <BinarySavior> funkybob do you think since only two dogs exist in this application it might be better to just have 2 sets of "activity fields" per walk?
[05:22:10] <BinarySavior> or if I want to scale this in the future it might be better to just make the many to many fields
[05:22:34] <gcain> I guess it would work something along the lines of; I spin up a worker with the location of. some data to deserialzier into models. Then I run my analysis process over it using Redis as a results backend, then one done, I serialize the result back to a filestore.
[05:23:00] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:23:06] <FunkyBob> gcain: that's a definitive "maybe"
[05:23:15] <gcain> haha!
[05:23:20] <FunkyBob> BinarySavior: no, I'd still go with the through table
[05:23:25] *** Quits: TallguyTYO (~TallguyTY@p16110-ipngnfx01marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 256 seconds)
[05:23:41] *** Joins: paquin (~paquin@user/paquin)
[05:23:42] <BinarySavior> ok ^.^
[05:23:42] <gcain> Awesome, I'll start freeing up some resources for the rewrite. :D
[05:23:48] <FunkyBob> gcain: I'm not sure how the apps machinery would cope with models appearing and vanishing randomly
[05:24:44] <gcain> Yeh, I was pondering that too. It might need to be a serial process which kind of negates the benefits of concurrency.
[05:26:13] *** Joins: wez (~wyoung@about/web/wez)
[05:26:22] <gcain> I could make the models appear stateful by using Redis to store them temporarily.
[05:27:04] *** Parts: paquin (~paquin@user/paquin) ()
[05:28:23] *** Quits: Xof (~Xof@198-0-193-113-static.hfc.comcastbusiness.net) (Quit: Bye.)
[05:30:01] <BinarySavior> FunkyBob, does this look right? https://bpa.st/FJYQ
[05:30:36] <FunkyBob> BinarySavior: no
[05:30:49] <FunkyBob> the ManyToManyField should relate  to Dog
[05:30:55] <FunkyBob> and have Activity as through=
[05:31:10] <FunkyBob> also, Activity needs ForeignKeys to both Dog and Walk  (ideally marked unique together)
[05:31:35] <FunkyBob> https://docs.djangoproject.com/en/4.0/ref/models/fields/#django.db.models.ManyToManyField.through
[05:32:12] <FunkyBob> there's some example models under through_fields (though you shouldn't need through_fields for your case)
[05:35:11] *** Joins: TallguyTYO (~TallguyTY@p16110-ipngnfx01marunouchi.tokyo.ocn.ne.jp)
[05:39:33] *** Quits: TallguyTYO (~TallguyTY@p16110-ipngnfx01marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[05:41:59] *** Quits: lucascastro (~lucascast@192-140-51-192.static.oncabo.net.br) (Remote host closed the connection)
[05:46:31] <yanchai> FunkyBob: hi bob how can i add message inside my model if condition is false message should display in my admin but my condition is in my model itself
[05:53:29] <FunkyBob> yanchai: you mean using the messages framework?
[06:04:31] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[06:10:22] <yanchai> FunkyBob: yes bob
[06:10:49] <yanchai> FunkyBob: i saw the docs using it inside views and admin how about inside mode?
[06:10:53] <yanchai> FunkyBob: i saw the docs using it inside views and admin how about inside model?
[06:22:12] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[06:24:11] <FunkyBob> yanchai: since it requires a request object, you'd have to pass that into the model
[06:24:32] <FunkyBob> so in essence, you're violating your separation of concerns
[06:26:37] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[06:41:07] *** Quits: gcain (~gcain@158.140.192.203) (Remote host closed the connection)
[06:44:04] <yanchai> FunkyBob: my concern is, i want to makesure that if they create a profile for a user which doesnt belong to will show an error that this user is not for employee or student based on their user_type
[06:44:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:44:34] <yanchai> this is inside admin
[06:46:05] *** Joins: fikran (~fikran@user/fikran)
[06:47:17] <FunkyBob> your management interface shouldn't make it possible to create a profile/user who isn't in your group
[06:47:22] <FunkyBob> but you will abuse admin, so...
[06:56:07] <yanchai> FunkyBob: it doesnt bob. all i want to know is how can i show a message based on my model conditions checking and making sure that before this student profile is saved it checks the user.user_type == 'student' else: show this message
[06:57:19] <yanchai> FunkyBob: StudentProfile inherits the user model and User has a field user_type which contains student or employee
[06:58:03] <yanchai> its like in StudentAdmin(models.Model) in the save method it checks the user relation field user_type to make sure it is a student
[06:58:17] <FunkyBob> if it doesn't make it possible, you've no need for the check or warning. so clearly it makes it possible
[06:59:15] <FunkyBob> subclassing models is rarely clean :/
[06:59:28] <FunkyBob> having user_type ... hmm... going to get messy
[06:59:49] <FunkyBob> if it's not a student, it shouldn't show in t hat list
[07:00:28] <yanchai> i added a user_type field to determine which profile to create
[07:00:53] <yanchai> StudentProfile and EmployeeProfile doesnt have a common field
[07:01:13] <yanchai> so i both inhereted the User model to those profiles instead
[07:01:41] <yanchai> inherited*
[07:03:23] <yanchai> StudentProfile has user_id foreignkey and EmployeeModel has user_id foreignkey too since not all users are students nor employee
[07:03:40] <yanchai> that's why i came up with two profiles
[07:03:48] <FunkyBob> foreign key?  but didn't you say it inherited user?
[07:04:06] <yanchai> sorry not inherited
[07:04:14] <yanchai> i refactored it to this way
[07:04:36] <FunkyBob> i'm lost
[07:04:46] <yanchai> hahaha sorry mate let me rephrase it
[07:05:06] <yanchai> i have 2 models StudentProfile and EmployeeProfile which both has foreign key user_id
[07:05:13] <FunkyBob> not onetoone field?
[07:05:26] <yanchai> yes onetoonefield
[07:05:30] <yanchai> i got used to laravel
[07:05:32] <yanchai> sorry
[07:05:36] <yanchai> so my problem is
[07:05:41] <yanchai> when i go to admin panel
[07:05:50] <yanchai> and tries to create a profile
[07:06:12] <FunkyBob> starting to sound like maybe you want limit_choice_to
[07:06:27] <yanchai> in the userfield, it shows a dropdown which contains all users both students and employees based on their user_type field
[07:06:43] <yanchai> i added a user_type field in user table to determine which profile they belong
[07:06:48] <yanchai> but
[07:06:58] <yanchai> the prob is when i got admin panel and create a profile,
[07:07:00] <FunkyBob> so not inferring it from the related model existing
[07:07:33] <yanchai> lets say studentprofile and on the user field dropdown which shows all users if you select an employee user it creates a student profile
[07:07:59] <yanchai> so what i did is added a condition in my studentprofile model to check the user_type == 'student'
[07:08:10] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Quit: Au revoir â€¦)
[07:08:26] <FunkyBob> 02:44 < FunkyBob> starting to sound like maybe you want limit_choice_to
[07:08:33] <yanchai> oh
[07:08:40] <yanchai> hahaha
[07:08:51] <yanchai> let me check that limit_choice_to
[07:08:53] <yanchai> thanks mate
[07:09:07] <yanchai> amazing! thank you so much love ya!
[07:09:59] *** Joins: jasonbraganza (~jasonbrag@user/jasonbraganza)
[07:16:43] <yanchai> FunkyBob: how bout we inline those profile to user which determines the usertype? is it possible?
[07:17:33] <FunkyBob> somehow you've missed my position on admin... which is to stop pretending it's a management interface for your site
[07:18:39] <FunkyBob> what you're talking about will likely be far simpler to implement in a bespoke management interface for your site
[07:18:53] <FunkyBob> oddly enough, django makes it easy to build web interfaces to implement your business logic
[07:22:13] <yanchai> Funkybob: thanks bob sorry im a newbie here hehehe
[07:23:36] <yanchai> FunkyBob: thanks for the tips Bob love ya! :)
[07:26:56] <yanchai> FunkyBob: there are many challenges i encountered in django which almost made me decide to go back to laravel and yet i didnt lose hope since Bob is here to help so yeah i am almost 60% knowledgable to django and i adapted some of it's principles
[07:28:22] <yanchai> most important reasons i stick in here is the community and security the framework can offer :) just saying how thankful and appreciate all your efforts guys :)
[07:28:52] <yanchai> so yeah thanks a lot and more power to us :)
[07:31:29] <yanchai> not only Bob but everyone here like GinFuyou and some of the pips here :)
[07:38:48] *** Joins: audio (~audio@user/audio)
[07:46:33] <BlahBlah> What are variable's called that are in a model but aren't saved in the database?
[07:46:54] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:57:48] *** Joins: TallguyTYO (~TallguyTY@p16110-ipngnfx01marunouchi.tokyo.ocn.ne.jp)
[08:00:25] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[08:03:20] *** Quits: TallguyTYO (~TallguyTY@p16110-ipngnfx01marunouchi.tokyo.ocn.ne.jp) (Quit: Ping timeout (120 seconds))
[08:15:31] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:21:55] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[08:26:13] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[08:29:01] *** Quits: sreve (~quassel@p54a71b4c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:29:41] *** Joins: sreve (~quassel@p4ff44bcb.dip0.t-ipconnect.de)
[08:43:57] *** Joins: teut (~teut@182.68.68.35)
[08:45:24] <dre> BlahBlah, i *think* you're referring to computed properties
[08:53:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:55:28] *** Joins: fikran (~fikran@user/fikran)
[08:56:50] *** Quits: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:01:24] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 3.0.1)
[09:07:09] <BlahBlah> I already found an answer. But thanks dre!
[09:25:57] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:27:31] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:27:57] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:29:20] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:29:28] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:37:25] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:37:52] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:40:53] *** Joins: dor (~erg@78.11.12.207)
[09:42:18] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Ping timeout: 265 seconds)
[09:50:23] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:52:42] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:53:09] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:57:46] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Ping timeout: 265 seconds)
[10:05:14] *** Joins: mattil (~mattil@87-95-29-147.bb.dnainternet.fi)
[10:08:13] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[10:08:37] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:09:25] *** Quits: mattil (~mattil@87-95-29-147.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[10:16:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[10:22:39] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[10:25:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[10:27:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[10:31:38] *** Joins: sandeepk (~sandeepk@223.130.30.175)
[10:45:08] *** Quits: yanchai (~yanchai@115.147.17.121) (Ping timeout: 265 seconds)
[11:04:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:08:29] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:12:53] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:14:08] *** Joins: leElvyn (~leElvyn@user/leelvyn)
[11:22:06] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[11:22:50] *** Joins: 040AABJYC (~pmb@89-64-79-51.dynamic.chello.pl)
[11:30:04] *** Quits: leElvyn (~leElvyn@user/leelvyn) (Ping timeout: 256 seconds)
[11:40:07] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Remote host closed the connection)
[11:41:03] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:49:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:54:39] *** Joins: leElvyn (~leElvyn@user/leelvyn)
[11:56:35] *** Joins: leElvyn58 (~leElvyn@user/leelvyn)
[11:57:00] *** Parts: leElvyn58 (~leElvyn@user/leelvyn) ()
[11:59:32] *** Quits: leElvyn (~leElvyn@user/leelvyn) (Ping timeout: 256 seconds)
[12:05:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:10:16] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[12:17:02] <serafeim> hello friends
[12:39:04] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: No Ping reply in 180 seconds.)
[12:40:33] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:45:48] *** Joins: xkuru (~xkuru@user/xkuru)
[12:47:54] *** Quits: gitly (~gitly@185.69.145.120) (Ping timeout: 265 seconds)
[12:49:46] *** Joins: gitly (~gitly@148.252.129.13)
[12:55:33] *** Quits: gitly (~gitly@148.252.129.13) (Ping timeout: 252 seconds)
[12:58:28] *** Joins: gitly (~gitly@85.255.235.219)
[13:02:53] *** Quits: dre (~dre@60.229.45.121) (Ping timeout: 265 seconds)
[13:03:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:03:48] *** ChanServ sets mode: +v EvilDMP
[13:18:49] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:20:58] *** Quits: teut (~teut@182.68.68.35) (Quit: Client closed)
[13:26:27] *** Joins: slav0nic (slav0nic@python.su)
[13:30:06] *** Joins: Atque (~Atque@user/atque)
[13:33:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 265 seconds)
[13:48:03] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[13:48:45] *** Joins: Atque (~Atque@user/atque)
[13:57:20] *** Joins: teut (~teut@182.68.68.35)
[14:07:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:08:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:08:52] *** ChanServ sets mode: +v EvilDMP
[14:19:56] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[14:33:53] *** Joins: timkofu (~timkofu@user/timkofu)
[14:33:56] <timkofu> Hi
[14:36:00] *** Joins: yanchai (~yanchai@203.177.194.130)
[14:39:33] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[14:39:36] *** Joins: yanchai (~yanchai@203.177.194.130)
[14:49:25] *** Quits: 040AABJYC (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 240 seconds)
[15:06:57] *** Joins: behelit (~behelit@217.61.224.84)
[15:06:59] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[15:07:18] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:08:11] <behelit> hi! been pulling my hair on this one. have drf set up with token authentication. works great locally. when i deploy with docker compose (gunicorn, nginx) i get "invalid token" after obtaining a token. the token is present in the Authorization header and exists in the database.
[15:08:30] <behelit> have tried all variations of `proxy_*` settings i can think of.
[15:09:18] *** Joins: sandeep (~sandeepk@202.14.122.178)
[15:10:42] *** Joins: thiras (~thiras@user/thiras)
[15:11:25] *** Quits: sandeepk (~sandeepk@223.130.30.175) (Ping timeout: 240 seconds)
[15:13:57] *** Joins: lucascastro (~lucascast@189.90.44.253.jupiter.com.br)
[15:15:13] *** Joins: mbp (~manuel@12.242.218.87.dynamic.jazztel.es)
[15:23:59] <teut> oh ya I think I read it somewhere this happens when some other site sends a request with your csrf token, that gets invalidated
[15:24:05] <teut> behelit
[15:24:51] <teut> maybe you can try searching csrf tokensÂ  etc etc
[15:26:48] *** Joins: lucas_ (~lucascast@189.90.44.253.jupiter.com.br)
[15:27:49] *** Quits: lucascastro (~lucascast@189.90.44.253.jupiter.com.br) (Ping timeout: 240 seconds)
[15:27:53] *** Quits: mbp (~manuel@12.242.218.87.dynamic.jazztel.es) (Quit: Leaving)
[15:28:53] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[15:29:00] *** Joins: dor (~erg@78.11.12.207)
[15:29:11] <behelit> interesting
[15:30:25] <teut> thats what the purpose of csrf tokens are
[15:30:44] <teut> I was trying to understand them but I think I ll need a book to understand them
[15:31:21] <teut> you are using docker so who knows how many sites the request bounces between and reaches to you
[15:33:07] <behelit> i can try to disable csrf and see if that alleviates the problem.
[15:37:57] <teut> ya probably it will work
[15:38:00] <behelit> disabling csrf does indeed work.
[15:38:01] <behelit> thanks!
[15:38:18] <teut> lol
[15:38:31] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:38:36] <teut> nice =D
[15:39:33] <ktosiek[m]> csrf token is not something you send in the Authorization header
[15:40:24] <teut> no you dont
[15:40:54] <teut> its submitted in form submition
[15:41:05] <teut> submission
[15:42:38] <ktosiek[m]> right, or as a header with XHR
[15:44:14] <teut> yes
[15:50:23] <ktosiek[m]> behelit: disabling CSRF tokens is probably not the right fix. I have to go now, but try describing when are you getting those errors (calls from a browser? External client? With/without cookies?)
[16:04:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:06:21] *** Joins: lazzurs8 (~lazzurs@user/lazzurs)
[16:08:58] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Ping timeout: 265 seconds)
[16:10:25] <serafeim> has anybody used the new form rendering features from django 4.0 ?
[16:12:20] *** Quits: lazzurs8 (~lazzurs@user/lazzurs) (Ping timeout: 256 seconds)
[16:16:24] *** Joins: theprophet (~theprophe@85.114.228.184)
[16:17:42] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: nyaa~)
[16:17:54] <theprophet> Guys, i am trying to get a random joke generator api from https://api.chucknorris.io to my django project, which i will display in my django test webserver,, can you give me a link or video where can i learn how to do that?
[16:18:24] <theprophet> documentation or video*
[16:19:00] <theprophet> i am not sure, but i think its called fetch or pull,. and thats what i wanna do.
[16:21:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:23:17] *** Joins: pmb_ (~pmb@89-64-79-51.dynamic.chello.pl)
[16:39:16] <GinFuyou> theprophet, fetch api is not a django concern. If you want to do it on django side, you could use a 'requests' lib
[16:42:45] <theprophet> GinFuyou i want to learn, that, any documentation on that?
[16:43:46] <GinFuyou> Which you want to learn? Or both?
[16:44:55] <theprophet> GinFuyou to be more specific, i wanna learn how to display that random joke generator to my django app test server, so i am guess thats requests
[16:44:59] *** Joins: mjacksonw (~mjacksonw@146.115.135.232)
[16:45:25] <theprophet> i guess*
[16:45:56] <GinFuyou> Both do the trick, but one is client side and doesn't depend on django at all, other one is python way on backend
[16:46:22] <theprophet> i want the python wa on backend
[16:46:28] <GinFuyou> well, also depends on how you want it work...
[16:46:44] <GinFuyou> Ok docs on https://docs.python-requests.org/en/latest/ should be good enough
[16:46:48] <theprophet> this is what i am trying to do
[16:46:50] <theprophet> def home(request):
[16:46:50] <theprophet> Â  Â  response=requests.get('https://api.chucknorris.io/jokes/random').json()
[16:46:51] <theprophet> Â  Â  return render(request, 'sw/home.html', {'response': response})
[16:46:56] <theprophet> looks familiar?
[16:47:40] *** Joins: jmd (~user@de.cellform.com)
[16:47:57] <GinFuyou> more or less, but generally it's about that easy, yes
[16:48:10] <theprophet> so that link you gave me is what i need?
[16:48:14] <theprophet> for this to do?
[16:48:30] <GinFuyou> You already using it
[16:48:43] <theprophet> yea but it does not show up
[16:48:46] <GinFuyou> It might have some more useful examples though
[16:49:05] <theprophet> this chuck norris site is not showing up on django test server
[16:49:08] <theprophet> but the other ones do
[16:49:54] <GinFuyou> Then debug it. Skill to find out what goes wrong is probably most useful one
[16:50:02] <theprophet> ok
[16:50:05] <theprophet> thanks gin
[16:50:09] <GinFuyou> Probably display issue in django
[16:50:19] <GinFuyou> Like in your template, since I don't know it
[16:50:52] *** Quits: yanchai (~yanchai@203.177.194.130) (Ping timeout: 256 seconds)
[16:51:07] <GinFuyou> first you could try printing response and see what's inside
[16:51:09] <theprophet> <strong> Random Jokes About Chuck Norris </strong>
[16:51:09] <theprophet> Â  Â  Â  Â  {% for i in response %}
[16:51:10] <theprophet> Â  Â  Â  Â  {{i.value}}
[16:51:10] <theprophet> Â  Â  Â  Â  {% endfor %}
[16:51:18] <theprophet> thats what i got in template
[16:51:28] <GinFuyou> Don't paste in channgel please!
[16:51:34] <theprophet> okay i wont
[16:51:38] <GinFuyou> -> dpaste.de
[16:52:15] <theprophet> https://dpaste.org/sWZA
[16:52:23] <theprophet> this is template
[16:52:55] <theprophet> this is view https://dpaste.org/Gm07
[16:54:18] <theprophet> but only thing that is displayed on django test server is the text written in html, inside <strong>
[16:54:33] <theprophet> Random Jokes About Chuck Norris <--- this
[16:55:08] <GinFuyou> Ok, this line returns a dict https://dpaste.org/Gm07#L2
[16:55:28] <GinFuyou> have you ever tried iterating (looping) a dict?
[16:56:17] <theprophet> no
[16:56:21] <theprophet> what do you mean
[16:56:30] <theprophet> like change {} this to this ()?
[16:56:47] *** Quits: mjacksonw (~mjacksonw@146.115.135.232) (Quit: Textual IRC Client: www.textualapp.com)
[16:57:18] <theprophet> but the fact is , other api link works
[16:57:20] <theprophet> but this does not
[16:57:25] <theprophet> with same logic
[16:57:30] <GinFuyou> it works, I've checked
[16:57:42] <GinFuyou> You have basic python issues
[16:57:42] <theprophet> hmmm
[16:57:54] <GinFuyou> Let
[16:57:54] <theprophet> maybe im template?
[16:58:02] <GinFuyou> Yes, in template
[16:58:27] <GinFuyou> That's why I'm asking about a dict, do you know what is a dict?
[16:58:28] <theprophet> i know that, python output shows the random jokes
[16:58:36] <theprophet> it works ther yes but
[16:58:42] <theprophet> yes
[16:58:43] <theprophet> i do
[16:59:45] <GinFuyou> So what code "for i in some_dict" will have for each 'i' ?
[17:00:12] <theprophet> it suppose to be "value" no?
[17:00:14] *** Joins: Siecje (~Siecje@216.154.15.3)
[17:00:33] <GinFuyou> no, why?
[17:00:52] <theprophet> then how does it work
[17:01:01] <theprophet> for other api links
[17:01:02] <Siecje> I have a many-to-many field, in the Django admin there is a input to set it, can I search for a model instance by uuid?
[17:01:04] <theprophet> if i am wrong?
[17:01:34] <GinFuyou> dict is collection of key-value pairs
[17:01:40] <theprophet> yes
[17:01:45] <theprophet> key:value
[17:02:00] <GinFuyou> iterating it directly returns keys
[17:02:52] <GinFuyou> in template you'd usually want to iterate both keys and values, "{% for key, value in some_dict.items %}"
[17:03:05] <theprophet> yes
[17:08:24] <GinFuyou> so, have you figured out how to apply it?
[17:08:45] <theprophet> i am trying, but getting errors
[17:10:42] *** Quits: Siecje (~Siecje@216.154.15.3) (Remote host closed the connection)
[17:11:53] <theprophet> damn, i forgot how to iterate over two values in for loop GinFuyou
[17:14:30] <GinFuyou> not sure what you mean by 2 values, I've just made example above how to handle your dict
[17:14:46] <theprophet> nvm, ok i did what you said but , its not showing
[17:14:57] *** Joins: Siecje (~Siecje@216.154.15.3)
[17:15:12] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[17:15:16] <GinFuyou> show the updated template code then
[17:15:41] <theprophet> 1 sec
[17:19:34] *** Joins: lucas__ (~lucascast@192-140-51-192.static.oncabo.net.br)
[17:20:03] <theprophet> GinFuyou https://dpaste.org/D8Hb
[17:20:26] <theprophet> oh no no
[17:20:32] <theprophet> i changed I too
[17:20:35] <theprophet> forgot that
[17:22:07] *** Quits: lucas_ (~lucascast@189.90.44.253.jupiter.com.br) (Ping timeout: 252 seconds)
[17:22:40] <GinFuyou> .value would also have no meaning
[17:23:45] <theprophet> hmm
[17:24:04] <theprophet> this is the joke value here
[17:24:13] <theprophet> "value" : "Chuck Norris uses lemon juice for eye drops"
[17:24:26] <GinFuyou> it's a key in the dict
[17:24:42] <theprophet> yes and joke suppose to be value right?
[17:24:51] <theprophet> and how do i iterate over jokes then?
[17:25:00] <theprophet> if
[17:25:03] <theprophet> .value does not work
[17:25:05] <theprophet> what does?
[17:25:09] <theprophet> i am not getting this :(
[17:25:13] <GinFuyou> you have only one joke now
[17:25:45] <theprophet> but the same thing works in python output
[17:26:01] <theprophet> exactly same, printing the value
[17:26:09] <GinFuyou> No, you are doing something else in python then
[17:26:16] <theprophet> hm
[17:26:54] <GinFuyou> If you only want a joke string, you don't have to use loop
[17:27:10] <GinFuyou> then .value makes sense
[17:27:14] <theprophet> will it also be a random?
[17:27:33] <GinFuyou> random depends on what you request from api I believe
[17:27:55] <theprophet> yes, thats what i wanted to hear
[17:28:03] <theprophet> so i dont need to iterate over this?
[17:28:08] <theprophet> i dont need loop
[17:28:10] <theprophet> ?
[17:28:21] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:28:52] <GinFuyou> Depends on what you want to do. If you want only the joke text, not other data, you don't really need a loop
[17:29:14] <theprophet> yea, all i want is everytime i refresh to get a random joke
[17:29:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:05] <theprophet> how do i do that without iteratation
[17:30:08] <theprophet> and for loop
[17:30:08] <GinFuyou> for one random joke you could just use a {{ response.value }}
[17:30:14] <theprophet> in templates i mena
[17:30:27] <theprophet> i see
[17:30:49] <GinFuyou> but working with dicts is common thing, you better learn that too
[17:31:11] <theprophet> i swear, ive learned so much things, i slowly forget
[17:31:18] <theprophet> i am trying to get a job
[17:31:30] <theprophet> and this is like second sylabus for test
[17:31:44] <theprophet> if i pass the second test i get paid internship
[17:32:10] <theprophet> i would work wit a company called sweeftDigital
[17:32:18] <GinFuyou> e.g. https://dpaste.org/3btS
[17:32:36] <theprophet> yea i already did the
[17:32:37] <GinFuyou> Well, then I suggest doing more learning projects
[17:32:43] <theprophet> {{response.value}} and it works
[17:33:03] <theprophet> thanks gin, bells your heart my man
[17:33:06] <theprophet> bless*
[17:34:03] *** Quits: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28) (Remote host closed the connection)
[17:34:10] <GinFuyou> You can't remember all of the docs and source code but most used things like this you just get used to
[17:34:25] <theprophet> i bet ur right
[17:34:47] <theprophet> its just, so hard to like memorize all this things without forgeting it. plus when ur not doing it on dailyasis
[17:34:56] <theprophet> i need to work and i will be familiar with all of this
[17:35:11] <theprophet> its like, when ur in home and if lights go out, you still now where the doors are
[17:36:14] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Remote host closed the connection)
[17:36:43] *** Joins: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28)
[17:36:49] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[17:37:05] <theprophet> thanks gin, i owe you brother
[17:37:46] *** Joins: pidroid (~pidroid@user/pidroid)
[17:42:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[17:46:16] *** Joins: imakestu_ (~imakestuf@197.156.77.249)
[17:46:25] <imakestu_> Anyone using Turbo( https://turbo.hotwired.dev) with Django?
[17:48:24] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[18:00:59] *** Joins: rje_ (~rje@50.35.241.164)
[18:03:33] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 252 seconds)
[18:04:17] *** Quits: Siecje (~Siecje@216.154.15.3) (Quit: Leaving...)
[18:06:12] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:12:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Quit: Leaving)
[18:13:47] *** Quits: lucas__ (~lucascast@192-140-51-192.static.oncabo.net.br) (Remote host closed the connection)
[18:15:17] *** Joins: lucascastro (~lucascast@192-140-51-192.static.oncabo.net.br)
[18:20:26] *** Quits: lucascastro (~lucascast@192-140-51-192.static.oncabo.net.br) (Ping timeout: 265 seconds)
[18:23:50] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[18:23:57] *** Joins: lucascastro (~lucascast@189.90.44.253.jupiter.com.br)
[18:27:04] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[18:28:19] *** Joins: yanchai (~yanchai@203.177.194.130)
[18:39:31] *** Quits: sandeep (~sandeepk@202.14.122.178) (Remote host closed the connection)
[18:44:01] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[18:44:23] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:47:01] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[18:48:28] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 265 seconds)
[18:52:52] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[18:53:06] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[18:57:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[18:58:21] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[18:58:31] *** Joins: lazzurs8 (~lazzurs@user/lazzurs)
[18:59:46] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:06:05] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:12:56] *** Joins: djapo (~archangel@user/djapo)
[19:13:30] *** Joins: stormy (~stormy@p4fc4d5d3.dip0.t-ipconnect.de)
[19:21:31] *** Quits: imakestu_ (~imakestuf@197.156.77.249) (Remote host closed the connection)
[19:27:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:31:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[19:35:02] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[19:35:41] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[19:45:44] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[19:45:56] *** Joins: dor (~erg@78.11.12.207)
[19:47:48] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[19:48:48] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[19:55:30] *** Quits: stormy (~stormy@p4fc4d5d3.dip0.t-ipconnect.de) (Quit: leaving)
[19:59:22] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[19:59:42] *** Joins: Siecje (~Siecje@216.154.15.3)
[19:59:50] <LuxuryMode> Pretty new to DRF and a bit confused. I want to write a serializer that will allow me to add some specified model objects to the related object set (many-to-many relationship). For example, if I have a publication and want to add an article to it. Would I simply set up the serializer with a field for the `id` of the Publication as well as a list of `id`s of the articles to add and then do the lookup of the Publication
[19:59:50] <LuxuryMode> `Publication.objects.get...` and then do the `add`ing? Is there a less primitive way to do this, e.g. instead of having a serializerIntegerField representing the `Publication` id, declaring it as some model serializer which DRF will automatically deserialize to the model from the supplied `id`?
[20:06:19] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[20:09:00] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[20:16:17] *** Joins: mbp (~mbp@12.242.218.87.dynamic.jazztel.es)
[20:16:53] <Siecje> Anyone know someone in jazzband organisation on GitHub? I'm trying to update to Django 3.2 but need a new release of django-revproxy https://github.com/jazzband/django-revproxy
[20:20:30] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:24:34] *** Quits: mbp (~mbp@12.242.218.87.dynamic.jazztel.es) (Quit: Leaving)
[20:27:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[20:41:34] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 265 seconds)
[20:42:16] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:43:03] *** Joins: Trieste (~T@user/pilgrim)
[20:45:33] *** Joins: SteveR (~SteveR@103.215.168.1)
[20:50:37] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 240 seconds)
[21:07:33] *** Quits: teut (~teut@182.68.68.35) (Quit: Client closed)
[21:20:08] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:26:11] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[21:26:13] *** Quits: rje_ (~rje@50.35.241.164) (Ping timeout: 240 seconds)
[21:26:51] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:28:43] *** Joins: rnm (~Guest87@user/mambang)
[21:37:45] <LuxuryMode> Anyone have experience with `rest_framework_swagger`? Getting an an error about `'SwaggerGenerationError' object does not support item assignment` when trying to access docs in browser and I'm not sure what the issue is :(
[21:38:54] *** Quits: rnm (~Guest87@user/mambang) (Quit: Client closed)
[21:44:58] *** Quits: criswell (~quassel@136.62.184.132) (Ping timeout: 256 seconds)
[21:49:59] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:50:04] *** Joins: rje (~rje@65.141.156.170)
[21:53:30] *** Joins: Trieste (~T@user/pilgrim)
[21:58:16] *** Quits: coldmountain (sid484352@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:59:23] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[22:33:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[22:37:26] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[22:45:36] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:45:40] <twomoon> hello
[22:56:08] *** Joins: whamster (~AdminUser@176.15.241.227)
[23:06:31] <duoi> LuxuryMode you would write a different serializer for the objects you want to render in the m2m relationship and declare it in the parent serializer using the notation `FooSerializer(source="foo")`
[23:14:31] *** Quits: whamster (~AdminUser@176.15.241.227) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:19:49] *** Quits: gitly (~gitly@85.255.235.219) (Ping timeout: 240 seconds)
[23:21:57] *** Joins: gitly (~gitly@85.255.235.219)
[23:22:33] <LuxuryMode> hmm ok, thanks duoi. Do you have examples you could link me to by chance? Are these the docs I should be looking at https://www.django-rest-framework.org/api-guide/relations/?
[23:23:33] <duoi> LuxuryMode https://www.django-rest-framework.org/api-guide/relations/#example
[23:24:45] <LuxuryMode> This is for creating the entities together with the relationships though, no? In my example, I am looking to take an existing Publication (presumably using its id) and add several Articles (which also exist already) to it.
[23:25:31] <duoi> LuxuryMode sorry, perhaps i misread
[23:26:13] <duoi> is your intention to receive a list of IDs and create the relationships? in that case you would declare a ListField and add your programming logic to the serializer's create method
[23:27:09] *** Joins: audio (~audio@user/audio)
[23:29:31] <LuxuryMode> yea, that's right. Ultimately it'd be a POST request that says "hey, given this publication id and this list of ids of articles, add these articles to the publication"
[23:29:38] <LuxuryMode> so yes, I think you have it right
[23:29:53] <LuxuryMode> So it sounds like my original approach is the correct one, at least according to what you're saying
[23:35:02] <duoi> LuxuryMode if you scroll to the next example from what i linked you would see something similar to what you want to do
[23:35:20] <LuxuryMode> Oh great, thanks very much
[23:35:36] <LuxuryMode> the "Writable nested serializers" one?
[23:37:34] *** Joins: wyre_ (~wyre@user/wyre)
[23:37:36] *** Joins: felixx_ (felixx@django/moderator/felixx)
[23:37:36] *** ChanServ sets mode: +v felixx_
[23:37:38] *** Joins: c17r_ (~c17r@c17r.com)
[23:38:53] *** Joins: jochum_ (~quassel@user/jochum)
[23:44:30] *** Quits: c17r (~c17r@c17r.com) (Quit: ZNC 1.8.1 - https://znc.in)
[23:44:30] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[23:44:30] *** Quits: felixx (felixx@django/moderator/felixx) (Remote host closed the connection)
[23:44:30] *** Quits: jochum (~quassel@user/jochum) (Remote host closed the connection)
[23:44:31] *** Quits: malvin (~retlo@172.245.134.89) (Ping timeout: 260 seconds)
[23:44:31] *** felixx_ is now known as felixx
[23:55:06] *** Joins: aselman4 (~aselman4@chipr003-p2.nls.ford.com)
[23:56:26] *** Quits: lucascastro (~lucascast@189.90.44.253.jupiter.com.br) (Ping timeout: 256 seconds)
