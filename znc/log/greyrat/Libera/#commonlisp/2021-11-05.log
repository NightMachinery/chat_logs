[00:00:01] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[00:01:04] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[00:08:12] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 256 seconds)
[00:09:28] *** Joins: kadir (~kadir@95.7.9.203)
[00:10:06] *** Quits: Krystof (~user@81.174.155.115) (Ping timeout: 245 seconds)
[00:11:38] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[00:12:38] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[00:14:31] *** Joins: aeth (~aeth@user/aeth)
[00:17:19] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[00:22:54] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 268 seconds)
[00:28:12] *** Parts: kadir (~kadir@95.7.9.203) (good night)
[00:29:09] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:29:22] *** Joins: gaqwas (~john@dynamic-077-009-126-017.77.9.pool.telefonica.de)
[00:30:19] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[00:31:04] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:49:09] *** Joins: molson (~molson@24-220-198-232-dynamic.midco.net)
[00:49:56] *** Joins: Krystof (~user@81.174.155.115)
[00:50:00] *** Quits: cage (~cage@dynamic-adsl-84-220-237-192.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:54:07] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[00:56:33] *** Quits: thmprover (~user@047-042-215-236.res.spectrum.com) (Quit: For He Was Great of Heart)
[00:58:11] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[01:02:38] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 260 seconds)
[01:02:59] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[01:03:00] *** Quits: Oladon1 (~olad@98.43.81.226) (Quit: Leaving.)
[01:03:45] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca)
[01:05:27] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 256 seconds)
[01:05:54] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[01:06:06] *** Parts: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca) ()
[01:07:03] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[01:07:34] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[01:08:01] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[01:12:22] *** Joins: akoana (~ah@user/akoana)
[01:12:27] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:14:03] <pjb> lisp123_win: something like: https://termbin.com/y8zs but this needs some serious debugging…  heap uses global special variables and we want to put all that in objects. the pastes does that with wrapper macros.  There remain to process correctly the binding of variables saved in the partial lisp images, this may require some patch to heap, perhaps. I can't debug it right now. But the test example let you see how it could
[01:14:03] <pjb> work.
[01:28:06] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 256 seconds)
[01:28:45] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[01:45:16] *** Quits: cosimone (~user@93-44-187-173.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:45:32] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[01:46:01] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[01:47:32] *** Joins: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10)
[01:55:16] *** Joins: rogersm (~rogersm@90.166.177.48)
[01:59:50] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[02:00:21] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[02:02:59] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:06:05] *** Joins: rogersm (~rogersm@90.166.177.48)
[02:09:54] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:10:50] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[02:19:34] *** Joins: rogersm (~rogersm@90.166.177.48)
[02:23:38] *** Quits: gaqwas (~john@dynamic-077-009-126-017.77.9.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:24:18] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 260 seconds)
[02:25:06] *** Quits: Catie (~user@user/catie) (Ping timeout: 245 seconds)
[02:27:34] *** Joins: igemnace (~ian@user/igemnace)
[02:28:44] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:29:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ae5d:7719:e7f1:5947) (Ping timeout: 260 seconds)
[02:30:02] *** Joins: rogersm (~rogersm@90.166.177.48)
[02:30:30] *** Joins: Catie (~user@user/catie)
[02:30:34] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 268 seconds)
[02:31:56] *** Joins: aeth (~aeth@user/aeth)
[02:34:52] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[02:36:09] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[02:44:33] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[03:07:32] *** Joins: Bike (~Bike@71.69.170.70)
[03:07:33] *** ChanServ sets mode: +o Bike
[03:14:21] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 268 seconds)
[03:17:57] *** Joins: s-liao (~s-liao@101.86.103.113)
[03:26:04] *** Joins: dra (~dra@2a04:4540:640c:a500:1c75:7f73:ef20:8c3d)
[03:30:02] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:25ae:baa7:4680:70ca) (Ping timeout: 260 seconds)
[03:40:46] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[03:42:42] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 260 seconds)
[03:43:51] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 245 seconds)
[03:44:07] *** Quits: rgherdt (~rgherdt@ip5f5af428.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[03:46:15] *** Joins: dra_ (~dra@2a04:4540:640c:6700:1c75:7f73:ef20:8c3d)
[03:49:30] *** Quits: dra (~dra@2a04:4540:640c:a500:1c75:7f73:ef20:8c3d) (Ping timeout: 268 seconds)
[03:49:39] *** Joins: etiago (~etiago@user/etiago)
[03:52:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:53:25] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:57:37] *** Joins: s-liao (~s-liao@101.86.103.113)
[03:57:41] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[04:03:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:90d0:563b:3279:f95b)
[04:04:58] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[04:09:42] *** Quits: random-nick (~random-ni@87.116.176.55) (Ping timeout: 260 seconds)
[04:14:12] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[04:15:45] <hexology> does anyone remember a blog post with content to the effect of "lisp macros are so much deeper than i thought", where it demonstrated some funky behavior related to binding a function with `let` inside the macro body before interpolating it into a quasiquote
[04:16:31] <hexology> i remember skimming the post and then not saving it
[04:23:53] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[04:34:25] *** Quits: dra_ (~dra@2a04:4540:640c:6700:1c75:7f73:ef20:8c3d) (Quit: Leaving)
[04:36:57] *** Joins: Bike (~Bike@71.69.170.70)
[04:36:57] *** ChanServ sets mode: +o Bike
[04:38:04] *** Joins: bort (~bort@190.162.168.90)
[04:38:50] *** Parts: bort (~bort@190.162.168.90) ()
[04:44:03] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[04:44:26] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:44:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:46:50] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 268 seconds)
[04:48:03] *** Joins: akoana (~ah@user/akoana)
[04:59:44] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Remote host closed the connection)
[05:00:18] *** Joins: Oladon (~olad@98.43.81.226)
[05:02:44] *** Quits: Psybur (~Psybur@mobile-166-170-30-165.mycingular.net) (Remote host closed the connection)
[05:10:15] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[05:11:18] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 260 seconds)
[05:13:13] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[05:13:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:21:52] <Xach> borodust: how do you feel about changing cl-muth to work with new sbcl?
[05:23:25] *** Joins: igemnace (~ian@user/igemnace)
[05:31:42] *** Joins: s-liao (~s-liao@101.86.103.113)
[05:38:04] *** Joins: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10)
[05:57:11] *** Joins: Devon7 (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[05:59:26] *** Quits: Krystof (~user@81.174.155.115) (Ping timeout: 260 seconds)
[05:59:54] *** Quits: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[06:02:42] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[06:05:02] *** Quits: micro (~micro@user/micro) (Ping timeout: 260 seconds)
[06:05:48] *** Joins: micro (~micro@user/micro)
[06:06:54] *** Quits: Fade (fade@outrider.deepsky.com) (Ping timeout: 260 seconds)
[06:06:56] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[06:07:38] *** Joins: Fade (fade@outrider.deepsky.com)
[06:08:18] *** Quits: energizer (~energizer@user/energizer) (Ping timeout: 260 seconds)
[06:09:39] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[06:12:57] *** Joins: energizer (~energizer@user/energizer)
[06:17:23] *** Quits: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) (Quit: Gateway shutdown)
[06:20:09] *** Parts: akoana (~ah@user/akoana) ()
[06:24:46] *** Joins: s-liao (~s-liao@101.86.103.113)
[06:30:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:30:55] *** Joins: rogersm (~rogersm@90.166.177.48)
[06:36:00] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[06:37:30] *** Joins: lad (~lad@user/lad)
[06:41:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:51:38] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 260 seconds)
[07:07:54] *** Quits: z3t0 (~z3t0@146.71.14.98) (Quit: The Lounge - https://thelounge.chat)
[07:10:41] *** Joins: z3t0 (~z3t0@146.71.14.98)
[07:11:19] *** Quits: z3t0 (~z3t0@146.71.14.98) (Client Quit)
[07:11:37] *** Joins: z3t0 (~z3t0@146.71.14.98)
[07:30:54] <beach> Good morning everyone!
[07:39:30] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[07:43:06] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[07:48:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[07:48:39] *** Joins: pillton (~user@2405:b000:703:2::35:202)
[07:49:26] *** Joins: pillton` (~user@2405:b000:703:2::35:28)
[07:52:28] *** Quits: pillton` (~user@2405:b000:703:2::35:28) (Client Quit)
[07:52:49] *** Joins: semz (~none@user/semz)
[07:52:56] *** Joins: pillton` (~user@2405:b000:703:2::35:28)
[07:53:02] *** Quits: pillton` (~user@2405:b000:703:2::35:28) (Remote host closed the connection)
[07:53:32] *** Quits: pillton (~user@2405:b000:703:2::35:202) (Ping timeout: 260 seconds)
[08:07:20] *** Joins: Jing (~textual@2604:a840:3::10f2)
[08:17:08] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[08:22:41] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[08:23:53] *** Joins: pillton (~user@2405:b000:703:2::35:28)
[08:40:35] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:42:35] <lisp123> pjb: Wow, thanks - that's awesome! I will study / use com.informatimago.common-lisp.heap.heap carefully and report back
[08:53:26] *** Quits: dre (~dre@2001:8003:c932:c301:bb14:f1af:101c:4c88) (Quit: Leaving)
[08:53:57] *** Joins: dre (~dre@2001:8003:c932:c301:c7a0:423f:5a6a:50c7)
[09:02:17] *** Joins: ym (~ym@217.107.106.229)
[09:02:32] *** Joins: guthur (~guthur@149.167.145.129)
[09:03:14] <guthur> I'm trying to auto generate some bindings for Vulkan using cl-autowrap but just get an error return of 1 from (autowrap:c-include "/usr/include/vulkan/vulkan.hpp") any suggestions?
[09:09:56] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[09:11:02] *** Joins: aartaka (~aartaka@5.1.53.225)
[09:20:49] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[09:41:06] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[09:54:12] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[09:56:21] *** Joins: igemnace (~ian@user/igemnace)
[10:08:36] *** Joins: s-liao (~s-liao@101.86.103.113)
[10:09:58] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 268 seconds)
[10:10:34] *** Joins: kadir (~kadir@95.7.9.203)
[10:10:59] *** Joins: aartaka (~aartaka@5.1.53.225)
[10:21:05] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[10:27:07] *** Joins: gaqwas (~john@dynamic-095-118-130-057.95.118.pool.telefonica.de)
[10:28:44] <lisp123> Anybody have a copy of http://www.lisp.org/mop/dictionary.html ? The link is broken
[10:30:47] <lisp123> It may be this http://mop.lisp.se/www.alu.org/mop/dictionary.html , but since I never seen this page before so am not sure
[10:32:22] *** Joins: rogersm (~rogersm@90.166.177.48)
[10:33:42] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[10:33:48] *** Joins: rogersm_ (~rogersm@90.166.177.48)
[10:36:31] <Jing> Hi, out of curiosity, if I install "alexandria" with Quicklisp in CCL in Slime/Sly and then I attach SBCL with Slime/Sly. Would SBCL also has "quicklisp" and "alexandria" or do I need to install again?
[10:37:50] <pillton> Jing: I doubt it. You need to copy the quicklisp bits from ~/.cclrc to ~/.sbclrc.
[10:38:48] <pillton> Jing: You could also create a ~/.generic-lisp-rc that is loaded by ~/.cclrc and ~/.sbclrc. That way all of your lisp environments use the same initialisation.
[10:38:58] *** Quits: rogersm_ (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[10:39:30] <Jing> pillton: Thanks, so in other words, if I do this generic-lisp-rc which is shared by both CCL and SBCL, then packages I installed in CLL can be used by SBCL, and vice versa?
[10:39:56] <pillton> Jing: Yes.
[10:40:46] <Jing> Thank you for the clarification. I thought that one might not need to install everything twice but didn't know how...
[10:41:15] <pillton> Jing: I have (load (merge-pathnames ".generic-lisp-rc" (user-homdir-pathname))) in all of my initialisation files.
[10:41:35] <pillton> Jing: You could also use symbolic links.
[10:41:53] <Jing> pillton: Maybe I will try the first methods
[10:41:55] <Jing> method*
[10:43:41] <pillton> Jing: Quicklisp installs the source of the software in its own special location. The software is shared by all environments which load ~/quicklisp/setup.lisp.
[10:43:56] <pillton> Jing: Compilation of the software is handled by ASDF usually.
[10:44:28] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[10:46:33] <Jing> Yes
[10:47:25] <contrapunctus> Is there a Common Lisp rendering library for OpenStreetMap data?
[10:47:41] *** Joins: rogersm (~rogersm@90.166.177.48)
[10:52:31] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[10:53:08] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[10:56:24] *** Quits: pillton (~user@2405:b000:703:2::35:28) (Quit: ERC (IRC client for Emacs 27.2))
[10:56:35] *** Parts: kadir (~kadir@95.7.9.203) (WeeChat 3.3)
[10:59:11] *** Joins: rogersm (~rogersm@90.166.177.48)
[10:59:55] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 268 seconds)
[11:00:48] *** Joins: amb007 (~a_bakic@38.39.22.93.rev.sfr.net)
[11:03:03] <pjb> contrapunctus: AFAIK, nope.
[11:03:51] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 256 seconds)
[11:04:12] <contrapunctus> I see...I'm thinking of writing a renderer and router 🤔
[11:05:21] <pjb> Jing: you may have a look at http://github.com/informatimago/rc  which has various implementations rc files, and a common.lisp rc file ;-)
[11:05:44] <pjb> pillton: what's this new Generic Lisp ?
[11:05:49] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[11:05:56] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[11:06:08] <Jing> pjb: Thanks, it seems quite helpful
[11:08:37] *** Joins: rgherdt (~rgherdt@ip5f5af1e0.dynamic.kabel-deutschland.de)
[11:10:09] <pjb> Jing: the only thing of course, is that the first time you use a system in the other implementation, it will have to be compiled.
[11:10:41] <Jing> pjb: got it
[11:10:44] <pjb> binaries are put in ~/.cache/common-lisp/$implementation/$systempath
[11:22:45] *** Quits: amb007 (~a_bakic@38.39.22.93.rev.sfr.net) (Ping timeout: 268 seconds)
[11:23:34] *** Joins: amb007 (~a_bakic@31.132.22.93.rev.sfr.net)
[11:27:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[11:28:16] *** Joins: rogersm (~rogersm@90.166.177.48)
[11:29:31] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 268 seconds)
[11:29:36] *** Joins: jealousm` (~user@2804:431:e7c4:3098:2e09:5aa9:4bb0:cca9)
[11:31:23] *** Quits: jealousmonk (~user@2804:431:e7c4:b0f3:d8c8:261b:2f95:4da3) (Ping timeout: 268 seconds)
[11:33:14] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[11:35:11] *** Quits: amb007 (~a_bakic@31.132.22.93.rev.sfr.net) (Ping timeout: 264 seconds)
[11:35:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:35:41] *** Joins: amb007 (~a_bakic@234.37.22.93.rev.sfr.net)
[11:36:15] <contrapunctus> Re: OSM renderer, what kind of graphics library would y'all recommend for this? cl-sdl2?
[11:38:36] <contrapunctus> I'd like for it to be usable in browsers as well as in native applications, such as those made with McCLIM...
[11:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:02] *** Quits: amb007 (~a_bakic@234.37.22.93.rev.sfr.net) (Ping timeout: 260 seconds)
[11:40:17] *** Joins: amb007 (~a_bakic@140.37.22.93.rev.sfr.net)
[11:41:05] <borodust> Xach: i feel obliged
[11:41:14] <borodust> gonna fix today
[11:42:53] <borodust> my lgj game finally works on android, so i guess i can finally breathe out
[11:45:34] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:49:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[11:49:30] *** Quits: amb007 (~a_bakic@140.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:49:59] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:50:10] *** Joins: amb007 (~a_bakic@140.37.22.93.rev.sfr.net)
[11:50:10] *** Quits: amb007 (~a_bakic@140.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:50:24] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:00:09] *** Joins: rogersm (~rogersm@90.166.177.48)
[12:01:36] *** Quits: gaqwas (~john@dynamic-095-118-130-057.95.118.pool.telefonica.de) (Ping timeout: 268 seconds)
[12:04:02] *** Joins: makomo (~makomo@user/makomo)
[12:12:16] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[12:17:16] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[12:22:16] *** Joins: cosimone (~user@93-44-186-19.ip98.fastwebnet.it)
[12:35:16] *** Quits: mrcom_ (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: Leaving)
[12:35:16] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: Leaving)
[12:35:30] *** Joins: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net)
[12:44:11] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 264 seconds)
[12:47:00] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[12:48:23] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 264 seconds)
[12:53:50] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 260 seconds)
[12:54:03] *** Joins: ski (~ski@remote12.chalmers.se)
[12:54:05] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 264 seconds)
[12:54:40] *** Joins: cage (~cage@dynamic-adsl-84-220-237-192.clienti.tiscali.it)
[12:56:13] *** Joins: notzmv (~zmv@user/notzmv)
[12:59:50] *** Quits: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com) (Ping timeout: 260 seconds)
[13:00:41] *** Joins: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com)
[13:03:04] <lisp123> Anybody use 40ants-doc?
[13:03:10] <lisp123> Can't find it on quicklisp..
[13:03:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:06:24] <pjb> what is it? (there are a ton of doc generator systems :-))
[13:07:51] <lisp123> Its yet another doc generator system. I'm only interested because I'm trying to get Edi Weit'z LW Add-Ons to work and having issues. Looks like there is an updated version by 40ants, but its all intermixed with 40ants-doc :(
[13:09:31] <lisp123> (bit frustrated, so I will keep quiet)
[13:16:09] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[13:26:07] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[13:29:22] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[13:30:16] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[13:31:18] <guthur> borodust what are you using to deliver to Android ABCL?
[13:34:36] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[13:36:30] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[13:38:55] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:40:21] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[13:43:22] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:46:01] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[13:48:40] <borodust> guthur: lispworks
[13:50:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:01:13] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[14:01:23] *** Joins: makomo (~makomo@user/makomo)
[14:05:06] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[14:09:06] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[14:12:06] <guthur> interesting, i was not aware LW could target iOS and Android
[14:15:36] <lisp123> ehhhh common-lisp.net hosts projects on gitlab, but its pretty annoying to fork / copy. They should just do it on the public gitlab server / on github :-/
[14:15:37] <pranavats> borodust: I assumed you used ECL, since the docs mention "SBCL, CCL and ECL compatible" as a principle.
[14:18:21] <pranavats> I'd be interested in whether ECL can run it without GC pauses becoming an issue.
[14:19:49] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[14:20:08] <hayley> Boehm GC can run incrementally.
[14:20:46] <hayley> But according to <https://stackoverflow.com/questions/58429255/private-api-call-not-allowed-in-ios-function-exc-server> you can't use it on iOS. Weird.
[14:22:11] *** Quits: Catie (~user@user/catie) (Ping timeout: 245 seconds)
[14:23:39] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[14:24:34] <rotateq> "That are all Boehmian villages for me." :)
[14:26:03] *** Joins: aartaka (~aartaka@5.1.53.225)
[14:26:48] <borodust> what was the bot syntax for leaving a message?)
[14:27:47] *** Joins: rogersm (~rogersm@90.166.177.48)
[14:28:40] <borodust> pranavats: i used ECL for android delivery, but as of now, my usecase is poorly supported by ECL
[14:30:01] <borodust> ECL evaluates load-time stuff every time shared library is loaded, which in my case takes 8-10 minutes on a farily decent device (galaxy s9)
[14:31:27] <borodust> i use many bindings to _huge_ C++ libraries and toplevel is quite big, so only feasable way is image-based delivery
[14:32:30] <borodust> compared, lispworks image takes a couple seconds to load
[14:34:30] <borodust> (same image, on the same device)
[14:34:48] <borodust> s/same image/same codebase/
[14:36:18] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:42:18] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[14:42:33] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[14:44:19] <borodust> pranavats: i commented on your ECL mention, you probably can check it in #commonlisp public logs :D
[14:53:15] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[14:59:57] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:09:14] <borodust> Xach: fixed
[15:09:14] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:09:40] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:10:24] *** Joins: Lycurgus (~juan@98.4.112.204)
[15:11:46] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[15:13:52] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:14:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Client Quit)
[15:14:19] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 256 seconds)
[15:14:54] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:16:31] *** Joins: amb007 (~a_bakic@156.37.22.93.rev.sfr.net)
[15:23:57] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 256 seconds)
[15:28:16] *** Quits: amb007 (~a_bakic@156.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:28:44] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:36:06] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[15:40:38] <lottaquestions> hayley: I asked a question in clschool, would be interested in hearing your opinion
[15:42:06] <hayley> I'm not in #clschool; is there a log?
[15:43:18] <hayley> Or could you repeat the question here please?
[15:43:30] <lottaquestions> I don't know how to find #clschool's log if one exists
[15:43:44] <lottaquestions> OK repeating the question
[15:44:10] <lottaquestions> how would you go about "visualizing" each iteration of a CL loop? For exaple in the file https://github.com/wzrdsappr/trading-core/blob/master/indicators.lisp , I am interested in
[15:44:26] <lottaquestions> seeing each iteration of the loop in the function (defmethod update-indicator ((i donchian-channel) price) on lines 387- 397
[15:45:23] <lottaquestions> Then lisp123: suggested I use a print like this "for high = (progn ( print forms) (if price-bar-p (h p) p))"
[15:45:48] <rotateq> i should join too
[15:45:53] <lottaquestions> We were both wondering if there would be another way, or if this was the only way
[15:46:29] <lottaquestions> rotateq: sure
[15:46:44] <hayley> You could add a DO clause after the FOR clauses.
[15:46:53] <lottaquestions> rotateq: BTW does rotateq mean rotate qubit?
[15:47:28] <lottaquestions> ahh, then do the print in the DO clause.
[15:47:41] <rotateq> nono :) that is what stylewarning_ does, but I'm very interested too. I'll query you shortly
[15:47:48] <hayley> However, you might instead want to log these values in a way that would be more amenable to graphing if you are looking at values which change slowly.
[15:50:18] <pjb> lottaquestions: you can use cl-stepper.
[15:51:19] <lottaquestions> hayley: I like that idea, the graphing would be super useful
[15:51:41] <lottaquestions> pjb: cl-stepper, I've never heard of that, but I am very interested
[15:52:22] <pjb> it's in http://github.com/informatimago/lisp
[15:52:28] <lottaquestions> pjb: Did you mean insterting a (break)?
[15:53:03] <pjb> no, cl-stepper works by shadowing and redefiniting some CL operators.
[15:53:16] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[15:53:26] <pjb> But you'd have to load a loop macro implementation in cl-stepper, instead of using the cl one.
[15:53:35] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:54:33] <pjb> on the other hand, if you have code inside the loop that is compiled with the cl-stepper, then it will be stepped.
[15:56:10] *** Joins: s-liao (~s-liao@101.86.103.113)
[15:56:34] <pjb> lottaquestions: https://termbin.com/x6dc
[15:57:44] <lottaquestions> pjb: I love it! Will try that out
[15:58:27] <pjb> Now, there would be a trivial patch to improve that: when walking a macro, we could macroexpand it and re-interpret it within cl-stepper.
[16:00:14] *** Quits: xsperry (~xs@user/xsperry) ()
[16:06:18] <lisp123> Qn for any LW users out there, is there a way to get both the listener and editor in the same frame?
[16:06:33] <etimmons> lisp123: 40ants-doc is definitely on Quicklisp
[16:07:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[16:07:53] <etimmons> lisp123: re: forking on common-lisp.net are there any annoyances beyond the default project limit being set to 0?
[16:07:56] <lisp123> etimmons: Do you know what the name is? Tried so many combinations :(
[16:09:04] <etimmons> (ql:quickload :40ants-doc) should do it
[16:09:15] <lisp123> etimmons: For forking, I couldn't just press the "fork" button. I had to sign up to the common-lisp.net account and then it blocked me for "SPAM" reasons, I ended up copying the https link and cloning but its just an additional unnecessary step
[16:09:40] <etimmons> It's (relatively) new, IIRC. so if your QL dist is more than a few months old, it may not have it
[16:09:58] <pjb> lisp123: (quick-apropos "40")
[16:10:22] <pjb> quick-apropos is in http://github.com/informatimago/lisp (com.informatimago.tools.quicklisp)
[16:12:07] <lisp123> pjb: Cheers. I got "no value", let me try updating my QL
[16:13:54] <lisp123> etimmons: Thanks, that did it. Learnt something new today
[16:14:15] *** Joins: Lycurgus (~juan@98.4.112.204)
[16:24:16] <pjb> lottaquestions: https://termbin.com/6apn
[16:24:21] <pjb> lottaquestions: I'm pushing it.
[16:27:36] <pjb> lottaquestions: it's pushed. You can fetch the version that does that.
[16:27:58] <pjb> lottaquestions: thanks for the request! :-)
[16:44:38] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[16:57:48] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[16:58:08] <Guest74> contrapunctus: you still around?
[16:59:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[17:00:18] *** Joins: anddam (~anddam@user/anddam)
[17:04:32] <Guest74> ::notify contrapunctus depends on what you mean by 'render'.  OSM has vector data that's ~80gigs, and you'd need a vector library for that.  I've got a library for retrieving tiles rendered from osm data. not published yet, but it's just pngs. So to make a slippy map you just need to be able to load pngs.
[17:04:32] <Colleen> Guest74: Got it. I'll let contrapunctus know as soon as possible.
[17:12:00] <Guest74> ::notify contrapunctus I plan on doing a vector based renderer if I ever find a service that provides the data in smaller than 10gig chunks. Not high on the list so I'd be happy if you make a frontend agnostic backend. Let me know when it's done!
[17:12:00] <Colleen> Guest74: Got it. I'll let contrapunctus know as soon as possible.
[17:13:01] *** jealousm` is now known as jealousmonk
[17:16:07] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c927:fbd7:acc4:9375)
[17:21:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c927:fbd7:acc4:9375) (Quit: Leaving)
[17:22:45] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[17:23:29] *** Quits: X-Scale (~ARM@83.223.227.196) (Ping timeout: 268 seconds)
[17:25:19] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[17:25:46] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Remote host closed the connection)
[17:26:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ab95:d5d6:558a:3a83)
[17:28:28] *** Joins: thmprover (~user@047-042-215-236.res.spectrum.com)
[17:28:49] *** Joins: X-Scale (~ARM@83.223.240.168)
[17:29:11] *** Quits: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[17:32:26] <lottaquestions> pjb: Thanks! Will check it out later. I need to attend to my day job.....
[17:38:49] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[17:38:50] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[17:39:12] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[17:39:35] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[17:41:14] *** Joins: Bike (~Bike@71.69.170.70)
[17:41:14] *** ChanServ sets mode: +o Bike
[17:42:11] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[17:43:24] *** Parts: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) ()
[17:43:38] *** Joins: anddam (~anddam@user/anddam)
[17:47:49] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[17:50:22] *** Joins: pve (~pve@87-93-197-245.bb.dnainternet.fi)
[17:52:18] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[17:53:19] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[17:53:48] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[17:55:30] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[17:55:49] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[17:56:24] *** Joins: aeth (~aeth@user/aeth)
[17:56:38] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[18:02:32] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[18:02:38] *** Joins: vollcheck (~vollcheck@093105011126.gdansk.vectranet.pl)
[18:05:15] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[18:09:42] <Jing> Unrelated to CL, but does anyone who uses Homebrew on Macs ever encountered the problem that it cannot find gcc even if it's installed...
[18:13:19] <pve> Hi, there was talk some weeks back about a different way of exporting symbols ("inverted", I think someone called it). Something where the exported symbols actually came from a different implementation package. An application/library that utilized this technique was also mentioned, but I can't remember what it was and I forgot to make a note.
[18:13:26] <pve> Does this ring a bell to anyone?
[18:14:58] <beach> The description doesn't fit, but otherwise, I have talked about an organization where the interface package contains only exported protocol symbols, and implementation packages :USE the interface package.
[18:15:22] <beach> Like CLIM is organized, where the CLIM package contains only the specified symbols.
[18:15:35] <beach> Is that what you mean?
[18:15:50] <pve> beach: hmm maybe that's it (I'm certain I explained it badly :)
[18:15:53] <beach> It is "inverted" because you can't do that in a typical programming language.
[18:15:57] <pve> let me have a look
[18:16:33] <beach> In a typical language, you don't have the package system, so the same "module" that defines a name is also the "home module" of that name.
[18:16:42] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 260 seconds)
[18:17:31] <beach> So for instance i SICL, there is a COMMON-LISP package, and no code is written with (in-package #:common-lisp) at the beginning.
[18:17:39] *** Joins: aartaka (~aartaka@176.59.203.57)
[18:18:28] <beach> Instead, each module has it's package like (defpackage #:sicl-loop (:use #:common-lisp) ...) and then the LOOP code has (in-package #:sicl-loop) at the beginning of each file.
[18:20:37] <pve> beach: and then at some point the common-lisp package imports "loop" from sicl-loop?
[18:21:34] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[18:21:47] <pve> no, that can't be right
[18:21:49] <beach> Er, what?  The COMMON-LISP package just exports the LOOP symbol which has COMMON-LISP as its home package.  The COMMON-LISP package has no indication of any other packages.
[18:22:36] <beach> (defpackage #:common-lisp (:use) (:export ... #:loop))
[18:23:18] <beach> So in loop.lisp you have (in-package #:sicl-loop) (defmacro loop ...)
[18:23:38] <pve> ah, riight
[18:23:46] <beach> And the LOOP mentioned there is the one accessible from COMMON-LISP.
[18:23:54] <pve> now I get it, I hope
[18:24:29] <beach> This organization is beautiful, because the home package of all interface symbols is the interface package.  In this case COMMON-LISP.
[18:24:37] <pve> I need to save this somewhere, because I'll just forget it again later
[18:25:00] <beach> If you do it the other way around, you will have strange results when you say (symbol-package 'loop) and it is some strange implementation package.
[18:26:07] <pve> beach: thanks for explaining (again)
[18:26:49] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[18:26:53] <beach> Pleasure.
[18:26:57] <beach> Hope it makes sense.
[18:28:06] <pve> It's a little counter-intuitive for me, so it might take a while to internalize :)
[18:28:53] <beach> It is counter-intuitive to anyone who has worked mainly in other languages.  It was to me as well at first.
[18:29:04] <beach> I only learned it when I read the CLIM specification.
[18:29:28] *** Joins: hineios4 (~hineios@a95-93-142-124.cpe.netcabo.pt)
[18:30:40] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Remote host closed the connection)
[18:30:43] <_death> that's a neat idea, beach.. I may try it with a library I'm working on nowadays
[18:30:56] <pve> I've only worked in CL, but never seen this before :)
[18:31:03] * pve hangs head in shame
[18:31:12] <beach> It is indeed a neat idea.  I can't take credit for it, of course.
[18:31:19] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Ping timeout: 268 seconds)
[18:31:20] *** hineios4 is now known as hineios
[18:32:55] <holycow> pve: any chance you could write this down and post it to github or something?
[18:33:06] <holycow> its esoteric enough that i know i won't find it again outside of this chan
[18:33:51] <beach> Someone with ECL or CCL installed could try (remove-duplicates (loop for sym being each external-symbol in '#:common-lisp collect (symbol-package sym)))
[18:34:06] <beach> In SBCL, there is only one package there.
[18:34:45] *** Joins: anddam (~anddam@user/anddam)
[18:35:02] <beach> Maybe MAPCAR would have been simpler.
[18:35:13] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[18:35:22] <jackdaniel> beach: ecl (#<"COMMON-LISP" package>)
[18:35:29] <_death> one thing I'm doubtful about though is :useing the interface package.. maybe instead it's better to explicitly have cl:loop in its definition form.. another issue is seeing which symbols a particular file (or "package", if each file gets its own package) defines
[18:35:33] <beach> jackdaniel: Great!
[18:36:50] <jackdaniel> I don't have ccl on this computer
[18:37:19] <beach> _death: By :USE-ing the interface package, the implementation package has free access to all interface symbols, plus its own, which is quite advantageous.
[18:37:34] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[18:38:40] <beach> _death: Otherwise, you get (cl-special-operators:if (cl-arithmetic:> (cl-sequence-functions:length list) 3) ...)
[18:38:54] <pve> holycow: I'll see if I can find the time, first I need to understand it. Good idea, though.
[18:40:14] <etimmons> beach: ccl (#<Package "COMMON-LISP">)
[18:40:22] <beach> Excellent.
[18:40:33] <beach> The standard doesn't require that as it turns out.
[18:40:41] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[18:41:03] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[18:41:11] <_death> beach: yeah, I can see how that's useful.. but then you need to be careful not to define any other interface symbol.. currently I use #:foo/bar which is a set of symbols, both external interface symbols (a small subset of #:foo) and internal interface symbols
[18:42:06] <beach> Well, I would assume that someone working on an implementation module is aware of all the interface symbols.  If not, you may have a bigger problem.
[18:42:24] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[18:43:48] <_death> beach: well, since I'm using a CLOSy design, I don't have too many external interface symbols, so indeed it may not be such a big issue.. but I don't see why you say it'd be a bigger problem..
[18:44:41] <beach> To have a person working on an implementation module for a system, but being unaware of the interface that system presents?  I think that's a big problem.
[18:44:59] <beach> That person should be put into training first.
[18:45:31] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 268 seconds)
[18:45:36] <_death> such a "module" uses the particular things it cares about, and exports the symbols it needs to.. but otherwise doesn't require a view of the whole external interface
[18:46:23] <beach> Normally, an implementation module would not need to export any symbols.  Unless it defines some internal protocol, of course.
[18:46:58] <beach> If the interface has that many symbols in it, it may need to be split up.
[18:47:29] <_death> yes, in the approach you describe that is true.. but I'm talking about the alternative approach I currently use
[18:47:50] <_death> as I'm comparing the two approaches
[18:47:57] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[18:48:02] <beach> I see.
[18:53:15] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[18:53:47] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 264 seconds)
[18:54:54] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[18:55:38] <_death> I guess :use common-lisp is very handy, because it's a whole language package that exports a lot of symbols that have diverse purposes, and each module uses a variety of them
[18:56:35] <_death> but in more constrained domains, one module uses #:foo/bar and another uses #:foo/baz and neither needs to be aware of #:foo/quux
[18:56:52] <_death> *need
[18:58:50] <_death> with the :use common-lisp approach, you still can't use all the symbols at any point, because some of them may not be defined
[18:59:36] <beach> Why would that be the case?
[19:00:16] *** Quits: Jing (~textual@2604:a840:3::10f2) (Remote host closed the connection)
[19:00:28] <_death> well, in sicl-loop you define the cl:loop macro.. but if it uses member, then member may not use cl:loop
[19:00:57] <beach> I guess you haven't kept up with SICL goals and its bootstrapping technique. :)
[19:01:00] *** Joins: Jing (~textual@2604:a840:3::10f2)
[19:01:50] <beach> In SICL, the LOOP macro in fact uses standard classes and generic functions. And you can bet that CLOS uses LOOP too.
[19:01:56] <_death> beach: I have not.. but isn't sicl a special case that way? most libraries don't bootstrap themselves
[19:02:25] <beach> Sure.  I was just taking the opportunity for self promotion.
[19:02:30] <_death> ;)
[19:02:39] *** Quits: Jing (~textual@2604:a840:3::10f2) (Remote host closed the connection)
[19:03:10] *** Joins: Jing (~textual@125.105.142.242)
[19:08:43] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[19:09:22] <_death> thinking about it some more, not sure it'd mesh well with package-inferred-systems, which is what I currently use.. maybe I'll try it in the future library ;)
[19:10:10] <beach> That sounds right.  And that might be a main reason that I have never been impressed by package-inferred systems.
[19:11:39] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:11:45] <_death> ah, I've found package-inferred-systems very useful in important use cases I have
[19:11:59] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[19:12:06] <beach> I see.
[19:12:34] <_death> and been working with them for years, without many issues
[19:13:01] <beach> That must be because you don't organize your packages the way I do.
[19:13:32] <beach> I mean, the two ways seem incompatible if I understand you right.
[19:15:05] <_death> maybe.. I also don't use package-inferred-systems style in every project, just where I think it may be beneficial.. although sometimes I find that a project would benefit from the style and adapt it
[19:17:33] <Guest74> am I in the minority that hates backslashes in package names?
[19:17:49] <Guest74> and the opinionated complaints of asdf?
[19:18:01] <_death> what's there to hate? these are just internal packages
[19:18:09] <_death> the interface package is #:foo
[19:18:45] <beach> Backslashes?  That would be unusual.
[19:19:35] <beach> Backslash is a single escape character.
[19:19:49] <jackdaniel> beach: package names like "asdf/component"
[19:19:58] <beach> That's not a backslash.
[19:20:12] <_death> depends on which side you look ;)
[19:20:19] <jackdaniel> yes, but I tink that this is what Guest74 refers to (because death mentioned such package names)
[19:20:28] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[19:20:54] <jackdaniel> if not, then indeed a package name like "asdf\\component" would be annoying :)
[19:21:07] <_death> asdf\\\\component
[19:21:33] <beach> jackdaniel: Exactly, and I would hate them just like Guest74 does.
[19:21:46] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[19:22:28] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[19:23:08] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 268 seconds)
[19:23:25] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[19:26:04] *** Joins: Bike (~Bike@71.69.170.70)
[19:26:04] *** ChanServ sets mode: +o Bike
[19:26:46] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[19:27:17] <Guest74> slashing depends on hand dominance.
[19:28:36] *** Joins: anddam (~anddam@user/anddam)
[19:29:19] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 256 seconds)
[19:29:58] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[19:30:23] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[19:31:53] *** Joins: Catie (~user@user/catie)
[19:32:34] *** Joins: BonnieT100 (~Cherrybar@47-223-60-37.tyrmcmtk04.res.dyn.suddenlink.net)
[19:33:08] *** Quits: z3t0 (~z3t0@146.71.14.98) (Quit: The Lounge - https://thelounge.chat)
[19:34:57] *** BonnieT100 is now known as Cherrybark
[19:38:11] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:38:27] *** Quits: vollcheck (~vollcheck@093105011126.gdansk.vectranet.pl) (Quit: Leaving)
[19:41:48] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[19:46:19] *** Quits: aartaka (~aartaka@176.59.203.57) (Ping timeout: 256 seconds)
[19:47:32] *** Parts: Cherrybark (~Cherrybar@47-223-60-37.tyrmcmtk04.res.dyn.suddenlink.net) ()
[19:53:34] *** Joins: domovod (~domovod@176.196.122.197)
[19:58:57] *** Joins: makomo (~makomo@user/makomo)
[20:00:24] <_death> Guest74: re. needless asdf complaints, I just patch them out ;)
[20:01:19] <jackdaniel> Guest74: it is a typographical mark /name/, i.e a proper noun
[20:01:37] <Guest74> I was wondering if there was a less opinionated repo out there somewhere.
[20:01:47] <_death> https://github.com/death/sbcl/commit/804b3f99eaa258fcb03258b5aa5977ba66bd953f
[20:02:04] *** Quits: Devon7 (~devon@pool-108-28-172-103.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[20:03:02] <jackdaniel> re slashes in system names - while indeed annoying and often harmless, it is not that there is no technical reason that asdf complains
[20:03:03] <Guest74> jackdaniel: sure, but it's based on handedness.
[20:03:07] *** Joins: Devon7 (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[20:04:00] <Guest74> there's quite a few areas that right handed people are blind to how right sided a lot of things are.
[20:04:00] <jackdaniel> locate-system takes the system system name, cuts everything /after/ the slash and looks for that-name.asd (instead of parsing all imaginable asd files)
[20:04:41] <jackdaniel> Guest74: I'm left handed but it doesn't irk me in slightest ,)
[20:04:56] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Remote host closed the connection)
[20:05:25] <jackdaniel> scissors on the _other hand_ - they are sometimes quite bothersome
[20:05:27] <Guest74> lol, I guess it depends if you've actively slashed before.
[20:07:16] <Guest74> I wouldn't mind if that package inferred system allowed you to choose a separator.
[20:07:54] <_death> what separator would you choose?
[20:08:00] <Guest74> -
[20:08:07] <_death> the obvious alternative is #\. (slime has some magic for that)
[20:08:20] <lisp123> Guest74: many names use - so it can't be a separator
[20:08:22] <_death> well, #\- would be pretty bad..
[20:08:50] <Guest74> well, if you have a package something-other-something
[20:09:16] <Guest74> you can infer that a #\- after that would infer another package.
[20:09:47] <_death> usually we use #\- when you want to use a term with more than one word.. e.g., simple-foo..
[20:10:18] <lisp123> Guest74: in practice something like that *could* work, but the confusion wouldn't be worth it
[20:10:31] <_death> it's not the way we'd design our hierarchy simple/foo
[20:10:53] <_death> I suppose another alternative would be to allow lists for names
[20:11:05] <Guest74> i'd like #\. for hierarchical packages ... if they existed.
[20:11:17] <_death> (foo bar) is nicer than foo/bar
[20:12:43] <jackdaniel> Guest74: acl (and up to some point ecl) had hierarchical packages
[20:12:44] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[20:12:49] <jackdaniel> but in practice it wasn't very useful
[20:13:12] <jackdaniel> you may check the allegro common lisp documentation to see the specification
[20:13:31] <Guest74> yeah, i've read it in the past.
[20:15:05] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:15:33] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[20:16:20] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:16:27] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:16:31] *** Joins: rogersm (~rogersm@90.166.177.48)
[20:16:31] <Guest74> pretty sure PLNs deal with all my use concerns for now.
[20:17:15] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:17:35] <contrapunctus> Guest74: ahoy. Thanks for the input...I'd read a little in the meantime and realized it depends on what kind of map you're after...there are raster tiles like you mention, vector tiles, 3D rendering, and apparently also ways to do it without tiles. What kind of inputs could a "frontend agnostic backend" accept?
[20:17:35] <Colleen> contrapunctus: Guest74 said 3 hours, 13 minutes ago: depends on what you mean by 'render'.  OSM has vector data that's ~80gigs, and you'd need a vector library for that.  I've got a library for retrieving tiles rendered from osm data. not published yet, but it's just pngs. So to make a slippy map you just need to be able to load pngs.
[20:17:35] <Colleen> contrapunctus: Guest74 said 3 hours, 5 minutes ago: I plan on doing a vector based renderer if I ever find a service that provides the data in smaller than 10gig chunks. Not high on the list so I'd be happy if you make a frontend agnostic backend. Let me know when it's done!
[20:17:44] <Guest74> _death: thanks, I'll add that to my sbcl.
[20:18:57] <_death> if asdf used specific condition types for its warnings, there'd be no need for hard patching
[20:19:32] <_death> but it would also need a repl hook where you could place your handler-bind
[20:19:32] <Guest74> contrapunctus: I think the big issue is what kind of data you have access to.
[20:19:46] <Guest74> a lot of tile-servers are paid access.
[20:20:10] <Guest74> a lot of vector data in small chunks is paid access as well.
[20:21:11] <Guest74> I know I don't have room for almost 100gigs of vector data, hence why I went with tiles.
[20:21:37] <contrapunctus> Ah, I see 🤔
[20:21:39] <_death> (or some ambient *suppress-these-warnings* variable, I guess)
[20:21:49] <Guest74> you can still get overlays on tiles, so as long as you got something that can load pngs and composite them you're good.
[20:22:11] <Guest74> _death: *suppress-opinions* would be nice.
[20:22:34] <_death> in the oppress package
[20:23:44] <Guest74> my tile-server stuff is frontend agnostic.  All it does is retrieve tiles by lat/long or location and store them.  How you choose to display them is up to you.
[20:24:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ab95:d5d6:558a:3a83) (Ping timeout: 268 seconds)
[20:24:26] <Guest74> That way people can write a mcclim slippy tile whatever-they-call-widgets, and I can use it with my own stuff.
[20:25:44] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:25:57] <_death> I wrote some clim code yesterday.. mostly a pleasure.. though I did notice menu-choose didn't want a vector for items (the spec says it should take a sequence)
[20:26:16] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:26:55] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:27:27] <jackdaniel> gadgets
[20:27:35] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:28:41] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:29:07] <jackdaniel> "widget" is a shortened version of the original term "window gadget"
[20:29:50] <_death> ooh, didn't think of that
[20:29:52] <Guest74> you're pulling our legs right?
[20:30:12] <Guest74> widget goes back to manufacturer iirc
[20:30:24] <Guest74> s/manufacturer/manufacturing/
[20:30:25] * jackdaniel is serious
[20:30:41] <edgar-rft> and what stands gadget for? :-)
[20:30:44] <_death> it's an actual english word, but who knows about the etymology in the gui jargon
[20:30:51] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:31:49] <Guest74> I've been pondering if widget is a good name for a collection of integrated ui elements.  But I don't know what else to call them.
[20:32:11] <jackdaniel> http://wiki.gis.com/wiki/index.php/GUI_widget seems to have some etymology reference (after quick skimming of the web now
[20:32:28] <jackdaniel> but the link is broken, so nevermind
[20:32:33] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:33:06] <Guest74> Also been wondering if widgets should have their own event handling. Or an option to have the parent container handle events.
[20:33:17] <Guest74> How does mcclim handle it?
[20:33:55] <jackdaniel> on the lowest level gadgets are implemented as classes that may have a specialization for the function handle-event
[20:34:17] <edgar-rft> Guest74: I would call them gimmicks :-)
[20:35:30] <_death> edgar-rft: graphical widget
[20:35:50] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:36:13] <Guest74> So it's the programmers choice if they wish to handle events themselves?
[20:36:25] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[20:36:55] <jackdaniel> right, if you i.e subclass a push-button you may not touch handle-event at all and operate on protocol defined for the push-button gadget
[20:37:36] <jackdaniel> you may also create a brand new gadget that doesn't use handle-event at all, but then you will need to manipulate it by some other means (because otherwise it will be deaf)
[20:39:36] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:39:48] <jackdaniel> there is also inheritance: gadget is a pane, and a pane is a sheet, the sheet is something that may be vaguely described as an input-sensitive surface
[20:40:26] <Guest74> I guess i have something similar.  events are mainly handled by a top level loop that calls thing like (ui:on-hover element)
[20:40:44] <Guest74> Well, except for that hierarchy.
[20:41:52] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:42:04] <jackdaniel> the fun part about clim spec is that you may ignore all higher level abstraction (up from the panes) and use directly sheets to implement brand new toolkit that has nothing to do with clim
[20:42:34] *** Joins: Bike (~Bike@71.69.170.70)
[20:42:35] *** ChanServ sets mode: +o Bike
[20:42:39] <jackdaniel> because these lower abstractions are derived from silica that was used to abstract away underlying windowing system details (like x11) -  I had somewhere immediate gui example
[20:43:18] <jackdaniel> s/example/toy example/
[20:43:44] <Guest74> I've been trying to decide at what level of abstraction does a surface get coupled with an event-handler.
[20:44:32] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:45:14] <Guest74> Or how far down it should go. like the aforementioned widget.
[20:45:53] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:45:54] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:46:28] <_death> I also used presentation translator testers to have different select-gestured operations associated with presentations, depending on the current tab (clim-tab-layout).. it works, but maybe there's a better way, say associating different command tables with different panes
[20:47:47] *** Joins: Lycurgus (~juan@98.4.112.204)
[20:48:34] <jackdaniel> _death: I have somewhere stashed some wip for frame-panes (i.e you could adopt an application frame as a pane in another application frame)
[20:48:57] <Guest74> hrm, i wonder how common that use case is?
[20:49:01] <jackdaniel> quite handy, because I could host clim-listener and clouseau in the same window
[20:50:48] <jackdaniel> _death: another "trick" would be defining presentations to have the sheet parameter
[20:51:08] *** Quits: guthur (~guthur@149.167.145.129) (Quit: Client closed)
[20:51:22] <Guest74> Right now I have tasks which can have their own bindings. and tabbed layouts can contain any element/surface/window so that's not a problem.
[20:51:53] <Guest74> but I wonder if allowing different bindings for different areas of an element would be useful.
[20:52:00] <_death> jackdaniel: nice.. I also had a case for that.. but it was simpler, so I could just use application-frame inheritance (and also specify command-table inheritance)
[20:52:07] <jackdaniel> Guest74: is there any link to what you are working on?
[20:53:01] <jackdaniel> _death: re sheet parameter, I think that from-type and to-type in translators must be known at compile time, so scratch the idea with the sheet parameter :)
[20:53:06] <Guest74> not right now. It's still a bit of a mess as I'm trying to decide where everything belongs.
[20:53:31] <jackdaniel> that said McCLIM has an extension to blank area where you may specify the target sheet (and region), but to specify a sheet you probably need to evaluate it
[20:53:46] <jackdaniel> Guest74: I see
[20:53:47] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:54:12] <Guest74> Like right now I have surfaces that can do things that surfaces really shouldn't, like being moved or resized.
[20:54:19] <_death> jackdaniel: well, my current code isn't too bad.. it'd be nice if tab pages had symbolic names, rather than working with titles, but these are little things
[20:54:52] <jackdaniel> I don't personally like the tab-layout extension - it pollutes the global command table
[20:56:17] <_death> maybe, I don't have much experience with it
[20:56:18] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:56:29] <jackdaniel> Guest74: try sheet geometry demo in clim-examples ,)
[20:57:07] <lisp123> If I'm okay with crashes in my lisp image crashing the editor, can I start using Climacs or are is there other stuff to be aware of?
[20:58:06] <Guest74> where are the demos located?
[20:58:09] <jackdaniel> lisp123: if this question is directed to me then I won't be of much help - I'm not using it so I can't tell (I've fixed a few low-level issues though)
[20:58:14] <jackdaniel> Guest74: Examples/
[20:58:18] <jackdaniel> the system clim-examples
[20:58:27] <jackdaniel> you may start the dialog with (clim-demo:demodemo)
[20:59:02] <beach> lisp123: Apparently (first) Climacs works, but I am no longer working on it.
[20:59:27] <lisp123> jackdaniel: No worries, thanks. At some point I need to migrate over to McClim / Climacs (a full end to end CL solution)
[21:00:03] <beach> lisp123: But there are other Common Lisp editors, like `lem', Hemlock, etc.
[21:00:04] <jackdaniel> I believe that beach works on a successor Second-Climacs, I'm not sure when it will be ready though
[21:00:27] <lisp123> beach: Thanks, I'll check it out now. But should I be using Second Climacs instead?
[21:00:35] <beach> No, it's not ready.
[21:01:07] <Guest74> So each of those is a sheet?
[21:01:14] <lisp123> Cool, thanks
[21:01:48] <Guest74> I've been thinking of having a canvas that handles the resize/movement stuff for surfaces can be rotated.
[21:02:03] <jackdaniel> Guest74: the "entities" on the right they are sheets, stuff on the left are presentations (not sheets)
[21:02:54] <jackdaniel> basically clim specifies sheets to have a transformation that defines its relation to parent (parent may have another transformation related to its own parent etc)
[21:03:09] <jackdaniel> the most common transformations are identity and translation though
[21:03:40] <Guest74> I haven't really seen a use case for this though.  but maybe I'm not imaginative enough.
[21:03:42] <jackdaniel> this demo is to test the recenti-sh improvements on handling less common cases
[21:03:57] <jackdaniel> regarding the use case  - zooming comes to mind
[21:04:31] <jackdaniel> for rotation - two players on two sides of the tablet with their own interfaces
[21:05:18] <Guest74> hrm, that gives me something to think about.
[21:05:37] <Guest74> do you store some sort of concrete reflection of the current state?
[21:06:03] <jackdaniel> what do you mean?
[21:06:41] <Guest74> do you have put things like pointer movement through a transform matrix?
[21:07:38] <Guest74> or mouse clicks to find out what is below it.
[21:08:35] <Guest74> I think I'm planning on having transforms/rotation etc... handled at the compositor level.
[21:09:48] <jackdaniel> it is done under the hood
[21:10:02] <Guest74> Are the demos requesting a specific size from the wm?  right now I have the right sides being cut off a bit.
[21:10:09] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:11:10] <jackdaniel> I don't remembers, it is certainly possible
[21:11:32] <jackdaniel> by default though I think that size is computed based on the the layout and its contents
[21:11:36] <_death> I think you're using stumpwm, right? I too have such issues with clim and stumpwm (haven't tried clim on another window manager, but I assume they're specific to stumpwm)
[21:13:33] <Guest74> No, I'm using my own wm.  I just don't handle size requests because I want what I want.
[21:14:31] <Guest74> but yeah, it's not resizing right away.  There's quite a delay for it to react to size changes and the need to repaint.
[21:14:57] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:15:08] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[21:16:07] <Guest74> oh, now I see what you mean by right side.  I wasn't seeing that at all before.
[21:16:43] <jackdaniel> heh, sorry that it doesn't work well in your wm
[21:17:20] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:17:44] <Guest74> pretty sure it's the case with any tiling wm.
[21:18:14] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 260 seconds)
[21:19:12] <Guest74> looks like the mcclim demos panel resizes right away, the sheet test only resizes height and only upon interaction.
[21:20:43] <jackdaniel> I've meant that it is a shame that it doesn't work on your configuration, not that your configuration is to blame
[21:21:56] <Guest74> I can check if it's actually making size requests or setting hints if you're interested.
[21:22:26] <Guest74> I've been also wondering if I should move double-buffering to a higher level than my surface protocol.
[21:23:01] <jackdaniel> only in a form of proper issue submissions; I'm multitasking enough atm to forget about it :)
[21:23:31] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:23:54] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:23:56] <semz> Is a DEFTYPE that expands to `(simple-array (unsigned-byte 8) (,length)) guaranteed to be a recognizable subtype of sequence?
[21:24:06] <Bike> yes
[21:24:33] <jackdaniel> (subtype a b) ; nil nil
[21:24:59] <Bike> it doesn't involve and, eql, or, etc., so subtypep isn't allowed to return nil nil
[21:25:35] <jackdaniel> ah, nvm me then. thanks for the correction.
[21:26:11] <pjb> beach: note that IIRC, an implementation can export from CL symbols with different home packages.
[21:26:18] <Guest74> I should probably work on getting my github setup properly.  Need to upload my sane network protocol for people to comment/test
[21:26:38] <pjb> beach: of course, it's nicer in a true native CL implementation if CL symbols have the CL home package.
[21:26:53] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:28:24] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:28:45] <Guest74> lol, my wm doesn't decorate windows so I can't shut down the demos.
[21:29:00] <jackdaniel> Guest74: (clim:destroy-port (clim:find-port))
[21:29:22] <jackdaniel> or if you know frame instances then (frame-exit frame)
[21:29:32] <_death> do you not have a close-window keybinding
[21:29:48] <Guest74> haven't had a use for it yet :)
[21:30:12] <Guest74> C-q has worked on everything so far.
[21:30:42] <jackdaniel> or (frame-execute-command <frame> `(climi::quit))
[21:30:57] <jackdaniel> unless they do not inherit from the global command table
[21:31:34] <jackdaniel> or .. ,)
[21:31:40] <jackdaniel> there are quite a few ways
[21:32:52] <pjb> beach: it's a matter of symetry, since we could have a CL in another Lisp, or another lisp in CL.  The package system imposes a choice.  I guess environments could let us define the names of the objects in more independent ways, but some features would still need to be re-implemented or wrappers. Eg. call-next-method in defmethod would have to be a different symbol (with a different home package) in different lisp packages..
[21:33:37] <jackdaniel> (clim:add-keystroke-to-command-table 'clim:global-command-table '(#\q :control) :command `(climi::com-quit))
[21:33:42] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:33:54] <jackdaniel> (but the last one has an issue that it doesn't work if there is no interactor - I'm fixing this right now
[21:33:57] <jackdaniel> )
[21:35:07] *** Joins: Oladon (~olad@98.43.81.226)
[21:35:55] <pjb> _death: well, :use :common-lisp alsu makes present symbols like rplaca that you never use.  beach would argue for cl:defun and no :use :cl ;-)
[21:36:33] <pjb> _death: perhaps a system should define a language package with only the "language" symbols it uses.
[21:36:37] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:36:43] *** Joins: anddam (~anddam@user/anddam)
[21:37:20] <jackdaniel> shake that tree, shake shake
[21:37:43] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:38:48] <pjb> Guest74: also, you may change the readtable, so that \ is not escaping anymore. In lisp machine lisp, characters are written with #/a not #\a IIRC.  So you could write asdf\component ; let's call that the ms-dos readtable…
[21:39:26] <pjb> and you know that ms-dos used \ by error, it wanted to use / really, but some idiot couldn't write or read correctly…
[21:40:35] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 264 seconds)
[21:41:21] <_death> pjb: I did use rplaca once :) because the fact that it returned the cons was useful
[21:42:29] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 268 seconds)
[21:42:37] <pjb> _death: of course, and it's a function, so you can mapcar it.
[21:42:44] *** Joins: amb007 (~a_bakic@209.150.22.93.rev.sfr.net)
[21:43:50] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:43:59] <pjb> (let ((a-list (copy-tree '((one . 1) (two . 2) (three . 3)))))  (mapcar 'rplaca a-list '(un deux trois))) #| --> ((un . 1) (deux . 2) (trois . 3)) |#
[21:46:12] <_death> this made me think about sublis, and then that assoc has rassoc, but sublis has no rsublis (or keyword argument for that)
[21:46:22] <semz> Bike: lol, now that I reread the spec, it seems clear on this matter. No idea why I got confused. Is this zen?
[21:46:24] <semz> either way thanks
[21:46:32] *** Joins: robin__ (~robin@user/terpri)
[21:46:41] <contrapunctus> _death: time to write cl2021 😏
[21:46:43] <Bike> subtypep is pretty confusing
[21:47:13] <contrapunctus> (Yes, that's a pun on cl21...)
[21:47:25] *** Quits: robin (~robin@user/terpri) (Ping timeout: 268 seconds)
[21:47:29] <_death> soon you can write cl22
[21:48:16] <jackdaniel> cl9001 (because it is over 9000)
[21:48:29] <contrapunctus> cl20021...very ahead of its time. Take that, Paul Graham.
[21:49:27] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[21:50:23] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:50:24] <_death> imagine if they had to design a common lisp today.. it'd have to include ruby, python, clojure, haskell, julia, and all the other languages people claim are lisp today
[21:50:33] <White_Flame> cl19121 would be the proper y2k bug format
[21:52:01] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:52:18] <_death> we could call is rich common lisp, or cl90210
[21:52:51] *** Joins: scymtym (~user@ip6-2001-638-504-20d6-1000-0-0-1.VPN.Dyn.CIT-EC.NET)
[21:53:06] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:53:51] <jackdaniel> The Hickey's Guide to the Galaxy Common Lisp
[21:54:26] <jackdaniel> HG2GCL
[21:54:32] <White_Flame> I'm going to make a GUI lib and call it CLI (Common lisp interactive)
[21:54:33] <_death> cons -> zaphod
[21:54:58] <contrapunctus> rofl
[22:00:45] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[22:01:00] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:90d0:563b:3279:f95b) (Ping timeout: 268 seconds)
[22:01:13] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[22:04:44] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[22:06:13] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[22:06:35] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[22:08:11] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Read error: Connection reset by peer)
[22:13:39] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 256 seconds)
[22:14:02] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:90d0:563b:3279:f95b)
[22:17:36] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[22:20:56] *** Joins: scymtym_ (~user@ip-94-114-248-79.unity-media.net)
[22:21:58] *** Joins: BottomType (~BottomTyp@31.217.246.214)
[22:22:10] *** Quits: scymtym (~user@ip6-2001-638-504-20d6-1000-0-0-1.VPN.Dyn.CIT-EC.NET) (Ping timeout: 260 seconds)
[22:22:49] *** Joins: igemnace (~ian@user/igemnace)
[22:23:49] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 268 seconds)
[22:26:04] *** Joins: LoopMacro (~LoopMacro@c-24-22-157-127.hsd1.wa.comcast.net)
[22:32:21] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 256 seconds)
[22:32:45] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[22:36:22] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[22:36:57] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[22:41:13] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[22:42:27] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[22:42:28] *** Quits: amb007 (~a_bakic@209.150.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[22:42:38] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:42:49] *** Joins: Inline (~Inline@2a02:908:1252:7a80:8056:a659:b191:c249)
[22:47:15] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[22:47:52] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[22:50:34] *** Joins: mmk2410_ (~mmk2410@mmk2410.org)
[22:50:40] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Ping timeout: 260 seconds)
[22:52:43] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (Ping timeout: 265 seconds)
[22:53:22] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[22:55:43] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[22:57:09] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[22:57:21] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[22:59:18] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[23:00:41] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[23:01:54] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 260 seconds)
[23:02:23] *** Quits: BottomType (~BottomTyp@31.217.246.214) (Quit: Client closed)
[23:04:17] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[23:05:32] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:07:05] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:09:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:10:37] *** Quits: ym (~ym@217.107.106.229) (Quit: Leaving)
[23:11:20] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[23:12:58] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:13:43] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:14:19] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:14:43] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:19:53] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:19:55] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[23:20:45] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:21:47] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:26:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[23:27:06] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:31:38] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[23:33:47] *** Joins: random-nick (~random-ni@87.116.176.55)
[23:37:36] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:38:03] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:44:39] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:44:51] *** Quits: robin__ (~robin@user/terpri) (Quit: Leaving)
[23:45:04] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:45:08] *** Joins: robin (~robin@user/terpri)
[23:54:46] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:59:10] <contrapunctus> What do folks here prefer...writing native Lisp libraries, or making bindings?
