[00:01:21] *** Joins: audiophile_ (~audiophil@user/audiophile)
[00:04:59] <audiophile_> For this error when trying newHttpClient.getContent() "Error: unhandled exception: SSL support is not available. Cannot connect over SSL. Compile with -d:ssl to enable. [HttpRequestError]" any idea why I still get the same error on using the -d:ssl flag?
[00:05:13] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[00:05:19] *** audiophile_ is now known as audiophile
[00:06:50] <nrds> <06Prestige99> There's a #nim-aoc challenge on irc, don't know if it's linked to discord or matrix though @audiophile
[00:07:04] <nrds> <06Prestige99> Channel*
[00:10:50] <audiophile> gotcha thanks, will check if it's on libera
[00:13:08] <audiophile> hi, can someone help me figure out what scheme means in this context? http://vpaste.net/XXLIk?bg=dark&nu "No uri scheme supplied"?
[00:14:26] <audiophile> i assume  we dont need to encode the url passed to getContent()?
[00:22:25] <FromDiscord> <Varriount> Are there any Nim libraries for working with SFTP?
[00:23:21] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[00:23:51] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[00:24:55] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 3.0.1)
[00:32:57] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3GUB
[00:35:21] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3GUC
[00:35:58] <FromDiscord> <geekrelief> I think it's the `void const ` that's causing the issue
[00:36:30] <FromDiscord> <geekrelief> try changing that to `const void `
[00:38:19] <FromDiscord> <geekrelief> after putting `const` in front, nimterop gives: `WGPUProcBufferGetConstMappedRange {.importc.} = proc (↵      buffer: WGPUBuffer; offset: uint; size: uint): pointer {.cdecl.}`
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:45:52] <FromDiscord> <Vindaar> In reply to @Cypheriel "I'm so very confused.": using `to`, so `x.to(int)`
[00:46:24] <FromDiscord> <Cypheriel> In reply to @Vindaar "using `to`, so `x.to(int)`": I found out about that later on... but datetime was complaining when I used it
[00:46:50] <FromDiscord> <Cypheriel> I had to do something rather unholy to get rid of the deprecation warning
[00:46:59] <FromDiscord> <Cypheriel> sent a code paste, see https://play.nim-lang.org/#ix=3GUF
[00:50:37] *** Joins: Pyautogui (~Pyautogui@136.228.206.218)
[00:55:34] *** Quits: Pyautogui (~Pyautogui@136.228.206.218) (Quit: Connection closed)
[00:58:19] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:15:26] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[01:24:26] <FromDiscord> <Vindaar> In reply to @Cypheriel "I had to do": what deprecation warning was that?
[01:24:46] <FromDiscord> <zidsal> What in the uniform function call syntax allows the tables proc [] to work? As the proc is defined as↵`[] [A,B](t: table[A,B], key: A): B` ↵↵Surely you must write it along the lines of t.[](key) how is it you can write t.[key] ?
[01:25:03] <FromDiscord> <zidsal> (edit) "t.[key]" => "t[key]"
[01:25:48] <FromDiscord> <Cypheriel> sent a code paste, see https://paste.rs/N0a
[01:26:30] <FromDiscord> <Cypheriel> sent a code paste, see https://play.nim-lang.org/#ix=3GUX
[01:29:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:30:49] <FromDiscord> <Vindaar> ah, so it's from the python side. Then I don't know the most idiomatic way to get around it. ↵From the message though why not just convert the arguments to `float`?
[01:34:18] <audiophile> im awful
[01:35:38] <FromDiscord> <Elegantbeef> Possibly
[01:35:43] *** Joins: audiophile_ (~audiophil@user/audiophile)
[01:35:44] <FromDiscord> <Elegantbeef> What did you do now?
[01:39:29] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 256 seconds)
[01:39:35] *** audiophile_ is now known as audiophile
[01:52:32] <FromDiscord> <Cypheriel> In reply to @Vindaar "ah, so it's from": it'd cause the same error
[01:52:37] <FromDiscord> <Cypheriel> I think...
[01:52:51] <FromDiscord> <Cypheriel> too lazy to test, tbh. as long as it works rn, idec lol
[01:53:11] <FromDiscord> <Cypheriel> by "error", I mean warning
[02:04:55] <FromDiscord> <TryAngle> In reply to @geekrelief "after putting `const` in": hmm at least I don't require that function anyways for now↵may you explain to me what this thing exactly is?↵is it a type for a function?
[02:05:52] <FromDiscord> <geekrelief> In C it's a pointer to function, taking those params and returning a pointer to some constant data.
[02:06:21] <FromDiscord> <geekrelief> size_t is defined as a platform dependent unsigned integer
[02:06:35] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[02:06:57] <FromDiscord> <geekrelief> The weird part is that `const` can be before or after void and still be valid in C.
[02:07:41] <FromDiscord> <geekrelief> Currently, I think futhark would be the only thing that could properly handle it.
[02:07:52] <FromDiscord> <geekrelief> (edit) "it." => "it (automatically)."
[02:09:19] <FromDiscord> <geekrelief> The pragmas are explained in the manual.  But generally, you want to `importc` anything you're wrapping, and add `cdecl` for functions.
[02:12:52] *** Joins: Guest87 (~Guest87@2a02:c7f:f68d:3900:8d3b:4fdc:65f6:95cb)
[02:23:51] <FromDiscord> <TryAngle> ah I see thanks
[02:27:23] <FromDiscord> <TryAngle> is there a way to specify dependencies that are only used for tests?
[02:42:44] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[02:50:36] <FromDiscord> <geekrelief> In reply to @TryAngle "is there a way": what do you mean?
[02:53:36] <FromDiscord> <TryAngle> In reply to @geekrelief "what do you mean?": I want to write a test for a library I'm working on right now. ↵This test should test the interop between this and another library↵but my library should not depend on the other library in general
[02:54:01] <FromDiscord> <TryAngle> is nimble install globally the only solution to this or can this also be definined in the .nimble file?
[03:01:03] <FromDiscord> <geekrelief> In reply to @TryAngle "I want to write": It's not clear to me how you can test your library but not depend on the other library unless you have a stub for it.
[03:02:44] <FromDiscord> <dom96> sent a code paste, see https://play.nim-lang.org/#ix=3GVr
[03:02:46] <FromDiscord> <dom96> (Haven't tested this but might work :))
[03:03:06] <FromDiscord> <Smarc> Hey Guys, you got any tips on how to improve my code and make it less verbose? I think my solution is not that great. https://github.com/Smarcy/nim_chess/blob/master/src/rules.nim#L128 Until L230
[03:04:03] <FromDiscord> <TryAngle> In reply to @dom96 "Test-only deps not supported": I will try that thanks
[03:05:02] <FromDiscord> <geekrelief> In reply to @dom96 "Test-only deps not supported": I do exactly this in my project.
[03:06:02] <FromDiscord> <geekrelief> Well not exactly, but `defined` plus a `.nims` config to switch between dev vs release version.
[03:06:34] <FromDiscord> <geekrelief> In reply to @Smarc "Hey Guys, you got": less verbose usually means templates or macros 🙂
[03:07:13] <FromDiscord> <Smarc> Hm, actually I thought there would be a "native" way of making it more slim. I feel that I just doubled things but don't see how to solve it logically
[03:08:55] <FromDiscord> <geekrelief> just glanced over your code, you're basically changing some numbers between of branch right?
[03:09:24] <FromDiscord> <Smarc> Mosty I guess
[03:09:25] <FromDiscord> <geekrelief> I see the `if` is slightly different
[03:09:38] <FromDiscord> <geekrelief> you should probably use a template
[03:10:08] <FromDiscord> <geekrelief> pass in the `if` condition as a block to the template
[03:10:22] <FromDiscord> <Smarc> Never did work with templates before, could you give me a starting support? :)
[03:10:58] <FromDiscord> <geekrelief> templates are super easy. https://nim-lang.github.io/Nim/manual.html#templates
[03:11:10] <FromDiscord> <geekrelief> just code substitution
[03:12:05] <FromDiscord> <Smarc> I'll have a look into it, thank you
[03:15:11] <FromDiscord> <geekrelief> In reply to @Smarc "I'll have a look": something like this: https://play.nim-lang.org/#ix=3GVv
[03:16:30] <FromDiscord> <geekrelief> then call `chessLogic((6,7), (5, 7)): b.board[7][5]... `
[03:16:47] <FromDiscord> <geekrelief> (edit) "b.board[7][5]... `" => "b.board[7][5].color != None or b.board[7][6].color != None`"
[03:17:09] <FromDiscord> <geekrelief> though I'm not sure you really even need a template
[03:17:21] <FromDiscord> <geekrelief> why not call a proc?
[03:17:55] <FromDiscord> <Smarc> Just thought about that, I think I could just refactor it into a single proc
[03:18:07] <FromDiscord> <Smarc> I just programmed it the way I thought of it, step by step
[03:19:36] <FromDiscord> <geekrelief> For stuff that's really repetitive I created a macro
[03:19:49] <FromDiscord> <geekrelief> https://github.com/geekrelief/genit
[03:26:35] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[03:28:39] *** Joins: Colt (~Colt@user/colt)
[03:34:14] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3GVB
[03:35:45] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3GVD
[03:40:28] <FromDiscord> <TryAngle> hahah
[03:40:33] <FromDiscord> <TryAngle> I made a type
[03:40:56] <FromDiscord> <TryAngle> never mid 😂 ↵(: -> = at end of initializeLog)
[03:41:02] <FromDiscord> <TryAngle> (edit) "mid" => "mind"
[03:47:12] *** Quits: Guest87 (~Guest87@2a02:c7f:f68d:3900:8d3b:4fdc:65f6:95cb) (Quit: Client closed)
[03:50:17] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:34:33] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:40:13] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[04:56:47] <FromDiscord> <Alea> are nimdocs failing to load for anyone else?
[05:02:08] <FromDiscord> <huantian> Is there a way to `.join` the output of a `collect` without setting it to a variable first?
[05:02:36] <FromDiscord> <Elegantbeef> Use `()` to wrap collect then do `.join`
[05:05:00] <FromDiscord> <huantian> ah
[05:07:32] <FromDiscord> <huantian> hmm doesn't seem happy, am I doing this right? https://media.discordapp.net/attachments/371759389889003532/916503451742109696/unknown.png
[05:15:38] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3GWc
[05:15:42] <FromDiscord> <huantian> oh
[05:17:24] <FromDiscord> <huantian> that makes mores sense, thanks
[05:23:43] <FromDiscord> <amadan> In reply to @Alea "are nimdocs failing to": Seems to fail for me also
[05:56:29] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[06:14:14] <FromDiscord> <huantian> If I got an IntSet that I know has one element, what's the best way to get that element?
[06:15:30] <FromDiscord> <Elegantbeef> `pop`
[06:16:05] <FromDiscord> <huantian> that's giving me a `type mismatch: got <IntSet>`
[06:16:24] <FromDiscord> <Elegantbeef> Wait you said intset
[06:16:27] <FromDiscord> <Elegantbeef> I was in sets
[06:17:09] <FromDiscord> <Elegantbeef> Seems the best thing to do is iterate over the thing and emit the first value
[06:18:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3GWv
[06:20:15] <FromDiscord> <huantian> cool cool!↵Just want to double check, if I want to make a .. slice to a HashSet or IntSet, `.toSeq.toIntSet` is the best way to do it?
[06:20:39] <FromDiscord> <Elegantbeef> Uhh a slice of a intset doesnt make much sense
[06:21:00] <FromDiscord> <huantian> something like `(1..10).toSeq.toIntSet`
[06:21:12] <FromDiscord> <Elegantbeef> Oh if you want a intset of a range
[06:21:25] <FromDiscord> <Elegantbeef> If it's a limited range like that you dont need `intSet`
[06:21:34] <FromDiscord> <Elegantbeef> you can just do `var a = {1..10}`
[06:22:34] <FromDiscord> <huantian> oh nice
[06:22:43] <FromDiscord> <Elegantbeef> But yea that's probably the best way to do it if you do have a set with more than 65k range
[06:23:07] <FromDiscord> <Elegantbeef> Nim's builtin set is limited to `high - low  == uint16.high`
[06:24:43] <FromDiscord> <huantian> interesting
[06:25:01] <FromDiscord> <Rika> In reply to @zidsal "What in the uniform": It’s not UFCS, it’s an operator, so it’s special
[06:55:52] <FromDiscord> <Twily> sent a long message, see http://ix.io/3GWG
[06:56:40] <FromDiscord> <Twily> Any ideas why I’m getting this and any way to overcome this? And hack maybe?
[06:57:00] <FromDiscord> <Yardanico> are you using converters by any chance?
[06:57:09] <FromDiscord> <Yardanico> i mean, maybe you have converters or the libraries you use have them
[06:57:16] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3GWH
[06:57:29] <FromDiscord> <Yardanico> beef, won't you need to do `import system/dollars` explicitly?
[06:57:29] <FromDiscord> <Elegantbeef> Converters have a big old bug that they propagate up unexported
[06:57:39] <FromDiscord> <Elegantbeef> probably
[06:58:03] <FromDiscord> <Yardanico> ah nvm you don't need the import apparently
[06:58:27] <FromDiscord> <Twily> Converters?
[06:58:29] <FromDiscord> <Yardanico> yes
[06:58:36] <FromDiscord> <Yardanico> what libraries are you using?
[06:58:48] <FromDiscord> <Yardanico> i mean modules, maybe something like, say, raylib, or sdl2 or something
[06:58:54] <FromDiscord> <Yardanico> they might have some converters that affect your code
[06:59:04] <FromDiscord> <Twily> sent a code paste, see https://play.nim-lang.org/#ix=3GWI
[06:59:13] <FromDiscord> <Twily> types and ipc are internal
[06:59:24] <FromDiscord> <Yardanico> and types and ipc don't import anything else outside of the stdlib?
[06:59:56] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3GWJ
[07:00:32] <FromDiscord> <Twily> sent a code paste, see https://play.nim-lang.org/#ix=3GWK
[07:00:55] <FromDiscord> <Yardanico> oh, is dbus a third-party lib?
[07:01:05] <FromDiscord> <Elegantbeef> https://github.com/zielmicha/nim-dbus/blob/74ec59f1813ae701764426c4ea0f11e092aefbe6/dbus/private/bus.nim#L3
[07:01:07] <FromDiscord> <Twily> Yep, pretty old one
[07:01:08] <FromDiscord> <Yardanico> https://github.com/zielmicha/nim-dbus/blob/master/dbus/private/bus.nim#L3 yeah
[07:01:10] <FromDiscord> <Elegantbeef> There's the bastard
[07:01:13] <FromDiscord> <Yardanico> :DDD
[07:01:33] <FromDiscord> <Yardanico> so @Twily the issue is
[07:01:38] <FromDiscord> <Yardanico> dbus_bool_t is actually just an alias for uint32
[07:01:49] <FromDiscord> <Yardanico> so the converter is actually for implicitly converting uint32 into bool
[07:01:54] <FromDiscord> <Yardanico> in this case
[07:02:07] <FromDiscord> <Elegantbeef> And thanks to that afformentioned bug, it fucks everything up
[07:02:08] <FromDiscord> <Yardanico> and since converters propagate too much it changes your code too
[07:02:27] <FromDiscord> <Twily> I don’t get how bools are related here. I’m purely working with `uint32` and `string`
[07:02:46] <FromDiscord> <Elegantbeef> There is a converter to `bool` which comes up and ruins your day
[07:02:58] <FromDiscord> <Yardanico> ah @beef actually dbus_uint32_t = cuint
[07:03:01] <FromDiscord> <Twily> And why didn’t it break before?
[07:03:01] <FromDiscord> <Yardanico> but cuint is an alias for uint32 anyway
[07:03:10] <FromDiscord> <Yardanico> @Twily because you didn't try to $ a uint32 ?
[07:03:14] <FromDiscord> <Yardanico> when having dbus imported
[07:03:25] <FromDiscord> <Elegantbeef> This is a new bug in 1.6 so that's another reason
[07:03:33] <FromDiscord> <Yardanico> a regression, yeah
[07:03:49] <FromDiscord> <Twily> [Yardanico](https://matrix.to/#/%40Tiberium%3Amatrix.org) nope. I actually did use dollar against this type before. I’m compiling the same. Just updated my NixOS and it got newer Nim compiler version.
[07:03:56] <FromDiscord> <Twily> Previously it used to work.
[07:04:03] <FromDiscord> <Yardanico> yeah, it's a regression in 1.6.
[07:04:06] <FromDiscord> <Yardanico> hopefully it gets fixed in 1.6.2
[07:04:28] <FromDiscord> <Twily> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/916532717385031810): [Yardanico](https://matrix.to/#/%40Tiberium%3Amatrix.org) nope. I actually did use dollar against this type before. I’m compiling the same code. Just updated my NixOS and it got newer Nim compiler version.
[07:04:37] <FromDiscord> <Yardanico> @beef do you remember the issue # ?
[07:06:50] <FromDiscord> <Elegantbeef> Doesnt seem like there is a nim issue comically
[07:06:53] <FromDiscord> <xflywind> https://discord.com/channels/371759389889003530/371759389889003532/908319224739553280
[07:07:18] <FromDiscord> <Yardanico> @beef i remember seeing an issue like that, maybe my imagination...
[07:07:57] <FromDiscord> <Yardanico> https://github.com/nim-lang/Nim/issues/18986
[07:08:39] <FromDiscord> <Yardanico> hmmm
[07:10:06] <FromDiscord> <Twily> So as I understand there was no test before that could get caught this and this regression was released?
[07:15:04] <FromDiscord> <Yardanico> yes
[07:15:13] <FromDiscord> <Yardanico> @beef i'll open an issue anyway
[07:18:41] <FromDiscord> <Twily> [Yardanico](https://matrix.to/#/%40_discord_177365113899057152%3At2bot.io) why would you open a new issue if there is already one?
[07:19:00] <FromDiscord> <Yardanico> because it's about a different thing
[07:19:01] <FromDiscord> <Yardanico> i think
[07:19:46] <FromDiscord> <Twily> To me it looks exactly about the same problem. At least looking at the examples and the error message.
[07:20:18] <FromDiscord> <Yardanico> no, for me it looks different - first of all, in pmunch's code it's all in the same file
[07:20:33] <FromDiscord> <Yardanico> and second of all, in his case it's not a regression since the same code fails all the way back to 1.0
[07:20:38] <FromDiscord> <Yardanico> while your code works on 1.4.8 and older
[07:20:42] <FromDiscord> <Yardanico> https://github.com/nim-lang/Nim/issues/19213
[07:22:40] <FromDiscord> <Yardanico> i'll try to bisect
[07:23:21] <NimEventer> New thread by Icedquinn: Protobuf essentials, see https://forum.nim-lang.org/t/8675
[07:27:14] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 252 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:47:32] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[09:00:57] *** Joins: xet7 (~xet7@user/xet7)
[09:09:36] <FromDiscord> <Cypheriel> Does Nim have anything similar to Python's ``...
[09:09:51] <FromDiscord> <Cypheriel> like... `print([1, 2, 3, 4])` type stuff
[09:31:58] <FromDiscord> <Rika> No not really
[09:32:09] <FromDiscord> <Rika> Var args accepts sequences
[09:32:32] <FromDiscord> <Yardanico> In reply to @Cypheriel "like... `print(*[1, 2, 3,": in this case you can just use `join` from strutils btw
[09:32:41] <FromDiscord> <Yardanico> echo elems.join(", ")
[09:35:25] <FromDiscord> <Cypheriel> hm... but for things like `zip`, I don't think it works as I'd expect
[09:36:41] <FromDiscord> <Rika> Zip only takes two sequences
[09:36:51] <FromDiscord> <Rika> There are no three or four sequence zip procs
[09:37:04] <FromDiscord> <Cypheriel> ah... then that is unlike Python
[09:37:42] <FromDiscord> <Rika> A more flexible zip can be made but I assume that would need to go to macro level
[09:39:00] <tk> https://github.com/void-linux/void-packages/pull/34106 - Voidlinux now shipping nim 1.6.0
[09:40:49] <FromDiscord> <Michal58> I'm trying to learn some arraymancer
[09:41:04] <FromDiscord> <Michal58> how do I compare a Tensor to a scalar?
[09:42:06] <FromDiscord> <Michal58> `array == n` nor `array .== n` does not seem to do it
[09:44:19] <FromDiscord> <Yardanico> try asking in #science too
[09:45:38] <NimEventer> New thread by Jorjun_arch: What is programming?, see https://forum.nim-lang.org/t/8676
[09:49:16] <FromDiscord> <Michal58> Oh, is it `==.`
[10:32:25] *** Joins: mahlon (~mahlon@martini.nu)
[11:41:17] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[11:45:44] <FromDiscord> <hugogranstrom> In reply to @Michal58 "Oh, is it `==.`": Yes in arraymancer all "dot" operators are defined in reverse from what you are used to in other languages. we use `+.` instead of `.+` for example. The reason is that we need to put the actual symbol first to get the right operator precedence
[11:46:09] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[11:58:20] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:27:49] <FromDiscord> <TryAngle> how do I get the pointer of a variable?
[12:28:46] <FromDiscord> <Rika> addr
[12:53:29] <FromDiscord> <TryAngle> In reply to @Rika "addr": thanks
[13:02:26] <FromDiscord> <tbrekalo> are array's stack or heap allocated?
[13:03:59] <FromDiscord> <Elegantbeef> Stack
[13:10:42] *** Quits: tinystoat (~squeek@user/tinystoat) (Remote host closed the connection)
[13:30:17] <FromDiscord> <Yardanico> also, if you can allocate them on the heap, you can by using `ref`
[13:30:29] <FromDiscord> <Yardanico> but then they won't be much different from `seq`
[13:30:37] <FromDiscord> <Yardanico> (edit) "can" => "want to"
[13:32:25] <FromDiscord> <fumamatar> Is there a module like scapy for python, for manipulation of packets or analysis of packets? or do I need to start and write my own?
[13:38:59] <FromDiscord> <leorize> i think there should be libpcap wrappers that you can use
[13:39:09] <FromDiscord> <leorize> nimble.directory is your friend on this one
[14:08:09] *** Joins: xet7 (~xet7@user/xet7)
[14:08:43] <FromDiscord> <firasuke> sent a long message, see http://ix.io/3GYn
[14:09:26] <FromDiscord> <Yardanico> the most "complete" auto-complete that we have is vscode + nim plugin that uses nimsuggest
[14:09:31] <FromDiscord> <Yardanico> there is nimpretty but it still has bugs
[14:10:45] <FromDiscord> <Rika> no, there is not "complete" autocomplete that doesnt use nimsuggest.
[14:10:48] <FromDiscord> <firasuke> In reply to @Yardanico "the most "complete" auto-complete": I found vscodium + the nim plugin to be the better ouf of the bunch
[14:10:50] <FromDiscord> <Rika> (edit) "not" => "no"
[14:11:00] <FromDiscord> <firasuke> what runners are you using?
[14:11:08] <FromDiscord> <Rika> theyre all nimsuggest in the end
[14:11:11] <FromDiscord> <firasuke> also for debugging, is GDB the mainstream way?
[14:11:13] <FromDiscord> <Rika> so it doesnt really matter too much
[14:11:17] <FromDiscord> <Yardanico> In reply to @firasuke "what runners are you": i don't use runners :)
[14:11:18] <FromDiscord> <firasuke> In reply to @Rika "theyre all nimsuggest in": I see
[14:11:27] <FromDiscord> <Rika> runner?
[14:11:28] <FromDiscord> <firasuke> In reply to @Yardanico "i don't use runners": Oh, then do you have for tasks
[14:11:36] <FromDiscord> <Rika> does the terminal count
[14:11:38] <FromDiscord> <Yardanico> i don't really use tasks in vscode
[14:11:47] <FromDiscord> <Yardanico> just the shell
[14:11:51] <FromDiscord> <firasuke> In reply to @Rika "does the terminal count": ya well I can manually run it in a terminal
[14:12:05] <FromDiscord> <Yardanico> In reply to @firasuke "also for debugging, is": yeah, with nim-gdb it's usable
[14:12:08] <FromDiscord> <firasuke> I want something out of the box that does that in vscode
[14:12:17] <FromDiscord> <Rika> dunno, i dont use vscode
[14:12:25] <FromDiscord> <firasuke> what do you use then?
[14:12:49] <FromDiscord> <Rika> neovim
[14:12:59] <FromDiscord> <firasuke> I also don't use vscode, but I heard it has the best support for Nim, so I downloaded it lol
[14:13:26] <FromDiscord> <Rika> id argue its neovim with the best support but that depends on what you want most
[14:13:49] <FromDiscord> <hmmm> I use sublimetext with nimline 😋 the nim tooling is inferior but the editor is better :nim1:
[14:14:05] <FromDiscord> <firasuke> In reply to @Rika "id argue its neovim": What plugins are you using with neovim then
[14:14:17] <FromDiscord> <Rika> nim.nvim or whatever its called
[14:14:18] <FromDiscord> <firasuke> native nvim-lsp, nim-lsp, ale, coc, cmp?
[14:14:30] <FromDiscord> <firasuke> In reply to @Rika "nim.nvim or whatever its": doesn't support autocomplete
[14:14:30] <FromDiscord> <Rika> + compe
[14:14:38] <FromDiscord> <Rika> compe + nim.nvim
[14:14:40] <FromDiscord> <firasuke> In reply to @Rika "+ compe": mhmm
[14:15:51] <FromDiscord> <firasuke> shouldn't you be using cmp since compe is deprecated?
[14:15:59] <FromDiscord> <Rika> compe is deprecated?
[14:16:11] <FromDiscord> <Rika> dude i havent changed my config in a while
[14:16:16] <FromDiscord> <Rika> cmp is alpha innit
[14:16:24] <FromDiscord> <firasuke> probably
[14:16:42] <FromDiscord> <Rika> i will switch once it is stable
[14:16:49] <FromDiscord> <firasuke> anyways thanks for the suggestion
[14:16:59] <FromDiscord> <firasuke> I'll see if I can get nim lsp working
[14:17:24] <FromDiscord> <Rika> i have yet to finish migrating my config to lua i just remembered
[14:17:25] <FromDiscord> <Rika> aaaaah
[14:17:41] <FromDiscord> <firasuke> oh btw which nim.vim are you using? zah or alaviss?
[14:18:15] <FromDiscord> <Yardanico> In reply to @firasuke "doesn't support autocomplete": huh?
[14:18:16] <FromDiscord> <Rika> alaviss
[14:18:19] <FromDiscord> <Rika> is the nvim one
[14:18:19] <FromDiscord> <Yardanico> https://github.com/alaviss/nim.nvim does support autocomplete
[14:18:21] <FromDiscord> <Rika> zah is for nim
[14:18:23] <FromDiscord> <Rika> vim
[14:18:27] <FromDiscord> <Rika> wrong -im word
[14:18:35] <FromDiscord> <firasuke> In reply to @Yardanico "https://github.com/alaviss/nim.nvim does support au": https://github.com/zah/nim.vim
[14:18:41] <FromDiscord> <firasuke> he meant this
[14:18:42] <FromDiscord> <Yardanico> that's for vim and it doesn't, yes
[14:18:46] <FromDiscord> <Yardanico> he meant alaviss one
[14:18:56] <FromDiscord> <Rika> yes
[14:18:58] <FromDiscord> <firasuke> 👍
[14:21:29] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[14:51:32] *** Joins: src (~src@user/src)
[14:53:21] <FromDiscord> <tbrekalo> can I somehow store `<` operator as a function? something as `std::less<>` in c++?
[15:01:40] <FromDiscord> <Slava0135> aren't all operators functions
[15:01:44] <FromDiscord> <Rika> Yes, strop it
[15:01:52] <FromDiscord> <Rika> \`<`
[15:01:54] <FromDiscord> <tbrekalo> please elaborate
[15:02:01] <FromDiscord> <tbrekalo> aha; I'll try now; thanks @Rika
[15:02:09] <FromDiscord> <Slava0135> (edit) "aren't all operators ... functions" 03added "are"
[15:02:21] <FromDiscord> <Rika> Same goes for all other operators
[15:02:32] <FromDiscord> <Rika> Effectively it is an identifier
[15:03:35] *** Joins: tinystoat (~squeek@user/tinystoat)
[15:05:18] <FromDiscord> <tbrekalo> doesn't seem to work
[15:05:40] <FromDiscord> <tbrekalo> i tried something like: `let cmpFn = \`<\``
[15:06:20] <FromDiscord> <Rika> Well I don’t think it can work like that because it can’t disambiguate what function it needs
[15:06:24] <FromDiscord> <Rika> Since it’s overloaded
[15:06:25] <FromDiscord> <Zoom> sent a code paste, see https://play.nim-lang.org/#ix=3GYv
[15:06:29] <FromDiscord> <Rika> Zoom, that is what they meant
[15:06:31] <FromDiscord> <Zoom> Secondly, you need to specify a type of the variable
[15:06:35] <FromDiscord> <Rika> Yes
[15:06:50] <FromDiscord> <Zoom> Because comparison operators are heavily overloaded
[15:07:09] <FromDiscord> <tbrekalo> how do I make specification for the type?
[15:07:19] <FromDiscord> <Zoom> And don't try to `typeof(`\<`)` \:D
[15:07:28] <FromDiscord> <Zoom> https://github.com/nim-lang/Nim/blob/270964c487e5347c61dade25bec903580483dda5/lib/system/comparisons.nim
[15:08:08] <FromDiscord> <Zoom> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/916654399290499072): And don't try to `typeof(\`\<\`)\` \:D
[15:08:19] <FromDiscord> <tbrekalo> aha; figured it out; `let cmpFn: proc(a: int, b: int): bool = '<'`
[15:08:35] <FromDiscord> <Zoom> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/916654399290499072): And don't try to `typeof(`<`)` \:D
[15:08:37] <FromDiscord> <tbrekalo> i can't put ` inside a code block; backslash was an atempt to escape it
[15:09:05] <FromDiscord> <Zoom> Surround in double graves
[15:12:17] <FromDiscord> <tbrekalo> could you send a code snippet for storing ``<`` as an int comparator?
[15:12:26] <FromDiscord> <tbrekalo> having a hard time getting it right; sorry
[15:16:22] <FromDiscord> <Zoom> sent a code paste, see https://play.nim-lang.org/#ix=3GYy
[15:16:33] <FromDiscord> <tbrekalo> thanks
[15:18:54] <FromDiscord> <Zoom> Error messages are helpful as usual. Complaining about `{.procvar.}` which is not even documented. (#12975)
[15:19:40] <FromDiscord> <Rika> Haha how fun
[15:20:01] <FromDiscord> <Rika> Seriously wish I could help with it but I’m still currently very intimidated by the compiler source
[15:23:29] <FromDiscord> <Zoom> What is fun is that my dumb suggestion is actually the solution provided by Ar@q\: https://github.com/nim-lang/Nim/issues/2172#issuecomment-304609785
[15:24:54] <FromDiscord> <Rika> That’s frustrating
[15:29:28] <FromDiscord> <evoalg> @Rika I'm already using alaviss/nim.nvim on neovim, but I decided to give "cmp" a go since it was discussed above ... it's asking me to put in "YOUR_LSP_SERVER" ... what should I put in there for nim?
[15:30:15] <FromDiscord> <Rika> In reply to @evoalg "<@!259277943275126785> I'm already using": You don’t use LSP when you use the plugin
[15:30:49] <FromDiscord> <Rika> I am not at my computer right not but you make a bridge for the plugin to the suggestion hook in the Nim plugin
[15:31:18] <FromDiscord> <Rika> I’ll show you how to do it in compe, not sure if it directly translates to in cmp
[15:32:03] <FromDiscord> <Rika> (edit) "not" => "now"
[15:32:30] <FromDiscord> <evoalg> I'd be happy to try compe ... even tho the webpage says it's deprecated
[15:33:36] <FromDiscord> <Rika> It’s deprecated but I say it was done too early
[15:34:00] <FromDiscord> <Rika> Nonetheless later, when I’m home
[15:34:14] <FromDiscord> <evoalg> thank you!
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:00:54] *** Joins: jjido (~Denis@90.213.58.125)
[16:01:36] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:6cb7:accb:2fb0:2679)
[16:08:56] <FromDiscord> <evoalg> ahh maybe I have to install nimlsp? ... can't do `nimble install nimlsp` as it breaks on my mac
[16:13:41] <FromDiscord> <Rika> You don’t if you’re using Nim.nvim
[16:20:13] <FromDiscord> <evoalg> ok .thx .. going to bed now, nights!
[16:34:49] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[16:40:07] *** Joins: src (~src@user/src)
[16:41:00] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:6cb7:accb:2fb0:2679) (Ping timeout: 256 seconds)
[17:06:02] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:841d:f597:62fd:8362)
[17:12:10] *** Joins: PMunch (~PMunch@user/pmunch)
[17:33:40] <FromDiscord> <Rika> sent a code paste, see https://paste.rs/ywn
[17:39:27] <NimEventer> New thread by Cblake: TinyCC/tcc vs zig cc compile-times/etc., see https://forum.nim-lang.org/t/8677
[17:44:25] <FromDiscord> <Rika> nice writeup about compile times
[17:45:33] <FromDiscord> <Schelz> Hi, im trying to make a window with gui using glfw, opengl and imgui and i keep getting the "could not load cimgui.dll" error message, any resolve for this error ?
[17:53:09] *** Joins: arkurious (~arkurious@user/arkurious)
[18:00:27] <FromDiscord> <firasuke> @PMunch Is it possible to use neovim with nimlsp + coc + alaviss/zah? Or is it not recommended?
[18:05:08] <FromDiscord> <Rika> you dont need alaviss if you have lsp
[18:05:13] <FromDiscord> <Rika> same with vice versa
[18:19:43] <PMunch> I use vim + nimlsp + zah
[18:19:55] <PMunch> So neovim + nimlsp + zah should work just fine
[18:20:01] <PMunch> Not sure what coc is though
[18:25:43] <FromDiscord> <Rika> lsp engine
[18:25:57] <FromDiscord> <Rika> rather autocomplete engine
[18:30:43] <PMunch> Ah right
[18:30:50] <PMunch> I thought neovim had LSP built in?
[18:32:17] <FromDiscord> <Rika> it "does" but its still a plugin
[18:32:37] <FromDiscord> <Rika> and thats not the autocomplete engine afaik, only the interface to lsp servers
[18:32:59] <FromDiscord> <firasuke> In reply to @PMunch "I use vim +": how are you getting autocompletion then? what are you using to run nimlsp from within vim?
[18:34:40] <FromDiscord> <firasuke> ale?
[18:37:43] *** Quits: arkurious (~arkurious@user/arkurious) (Ping timeout: 256 seconds)
[18:41:19] <FromDiscord> <firasuke> also imports aren't being autocompleted? and is there something similar to `rustfmt` for Nim? Or are the indentations supposed to do away with such tools?
[18:41:32] <FromDiscord> <Rika> nimpretty
[18:42:34] <FromDiscord> <Rika> imports being autocompleted? what do you mean
[18:42:40] <FromDiscord> <Rika> nimsuggest does not have such a feature
[18:43:05] <FromDiscord> <firasuke> In reply to @Rika "imports being autocompleted? what": as I'm typing `import st` shouldn't I see a list of suggestions?
[18:43:14] <FromDiscord> <Rika> oh that is what you mean
[18:43:29] <FromDiscord> <Rika> i am unsure about such a feature ever existing
[18:43:32] *** Joins: arkurious (~arkurious@user/arkurious)
[18:43:36] <FromDiscord> <Rika> let me test
[18:43:40] <FromDiscord> <firasuke> ok
[18:44:05] <FromDiscord> <firasuke> also, say I wanted to use `.toLower`, would `nimsuggest` import `unicode` on its own? is there such a thing?
[18:44:33] <FromDiscord> <Rika> yup, no autocomplete for importrs
[18:44:37] <FromDiscord> <Rika> no
[18:44:38] <FromDiscord> <Rika> it wont
[18:44:46] <FromDiscord> <firasuke> I see, good to know
[18:44:51] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:44:58] <FromDiscord> <Rika> tooling is very poor yes
[18:45:04] <FromDiscord> <firasuke> coming from Rust, I thought I'd be expecting such tools
[18:45:11] <FromDiscord> <firasuke> such a shame though, Nim is very decent
[18:45:18] <FromDiscord> <Rika> rust is probably a few magnitudes larger than us
[18:45:29] <FromDiscord> <firasuke> In reply to @Rika "rust is probably a": ya, figured that one out xD
[18:45:50] <FromDiscord> <Rika> i mean i'd say its hard to expect such a thing given the size
[18:45:58] <FromDiscord> <Rika> but it still sucks i guess
[18:46:23] <FromDiscord> <Rika> and its not just size anyway that is blocking such tool development
[18:47:08] <FromDiscord> <firasuke> In reply to @Rika "and its not just": what other factors are contributing to this then?
[18:49:08] <PMunch> I use prabirshestha/vim-lsp
[18:49:16] <FromDiscord> <firasuke> In reply to @PMunch "I use prabirshestha/vim-lsp": Oh
[18:49:25] <FromDiscord> <Rika> the confusing/intimidating codebase of the compiler i guess, and the lack of documentation for internals
[18:50:10] <FromDiscord> <firasuke> I see
[18:52:09] <FromDiscord> <firasuke> neovim + coc + nimlsp aren't that bad though, they need a bit of polish and it'll be a nice experience overall
[18:52:26] <FromDiscord> <firasuke>  https://media.discordapp.net/attachments/371759389889003532/916711049292550184/unknown.png https://media.discordapp.net/attachments/371759389889003532/916711049514852392/unknown.png
[18:53:02] <NimEventer> New Nimble package! paramidib - paramidi with nimib, see https://github.com/pietroppeter/paramidib
[18:55:24] *** Joins: xet7 (~xet7@user/xet7)
[18:55:56] <NimEventer> New thread by Icedquinn: Thriftcore - Apache Thrift primitives, see https://forum.nim-lang.org/t/8678
[19:00:55] <PMunch> New AoC stream is live! https://www.twitch.tv/pmunche
[19:03:10] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[19:03:42] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:20:05] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[20:01:06] <FromDiscord> <claude> what does nimpretty do other than wrap long lines, align arguments in parens/brackets etc and maybe enforce camelcase
[20:01:24] <FromDiscord> <Solitude> breaks working code
[20:05:14] *** Joins: neurocyte0132889 (~neurocyte@IP-213188116193.dynamic.medianet-world.de)
[20:05:14] *** Quits: neurocyte0132889 (~neurocyte@IP-213188116193.dynamic.medianet-world.de) (Changing host)
[20:05:14] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:20:41] <PMunch> Haha :P
[20:35:34] <FromDiscord> <geekrelief> @TryAngle The definition I gave you for `size_t` was technically incorrect.  Instead of `uint` we should use `csize_t` https://nim-lang.github.io/Nim/system.html#csize_t
[20:36:08] <FromDiscord> <TryAngle> In reply to @geekrelief "<@!147447489316913152> The definition I": I see thanks
[20:36:36] <FromDiscord> <bananahead> Any way in the standard library to flatten a seq[seq[int]] to seq[int]? Couldn't find anything in the sequtils docs
[20:37:31] <FromDiscord> <Solitude> In reply to @bananahead "Any way in the": https://nim-lang.org/docs/sequtils.html#concat%2Cvarargs%5Bseq%5BT%5D%5D
[20:38:59] <FromDiscord> <bananahead> @Solitude that's concatenating multiple individual sequences into one. I have a seq i just need to flatten mine.
[20:39:10] <FromDiscord> <Solitude> you can pass seq in place of varargs
[20:39:33] <FromDiscord> <TryAngle> It's sadly not Std but I tried Zero Functional for something similar yesterday and it was a joy to use
[20:39:41] <FromDiscord> <Solitude> !eval import sequtils; echo concat @[@[1, 3], @[2]]
[20:39:45] <NimBot> @[1, 3, 2]
[20:41:01] <PMunch> @TryAngle, no shame in using third party libraries
[20:41:25] <FromDiscord> <bananahead> Amazing. Thank you. Maybe I could write a PR to update the docs to show that usecase.
[20:41:35] <FromDiscord> <TryAngle> In reply to @PMunch "<@147447489316913152>, no shame in": Haha dw, he asked for Std
[20:41:49] <FromDiscord> <geekrelief> @TryAngle hmm system doesn't define something for `ssize_t` like it does for `size_t` to `csize_t`.
[20:42:09] <FromDiscord> <bananahead> Because to me it wasn't obvious....(unless I'm not reading the docs right!)
[20:43:14] <FromDiscord> <TryAngle> In reply to @geekrelief "<@!147447489316913152> hmm system doesn't": Hmm isn't using the normal c types ok in almost all cases? I Googled a bit and came to the conclusion that they're almost equal?
[20:43:17] <FromDiscord> <Solitude> In reply to @bananahead "Because to me it": its in manual, but not very obvious https://nim-lang.org/docs/manual.html#types-varargs
[20:44:15] <FromDiscord> <geekrelief> In reply to @TryAngle "Hmm isn't using the": I think for most use cases using uint would be fine, if you use small values.  But I'd like to be correct and forget about it. 🙂
[20:44:40] <FromDiscord> <TryAngle> True, I agree 😂
[20:44:45] <NimEventer> New post on r/nim by PMunch: Streaming Advent of Code solving, see https://reddit.com/r/nim/comments/r8u75w/streaming_advent_of_code_solving/
[20:45:07] <FromDiscord> <bananahead> @Solitude sure, but the first thing I did was go to sequtils page and control+f for "flatten". So having it next to concat might be useful.
[20:45:26] <FromDiscord> <geekrelief> I'm updating nimterop to use csize_t, but I guess I'll have to live with ssize_t mapping to int unless I want to add a PR to the compiler.
[20:47:19] <FromDiscord> <geekrelief> So when dealing with memory you should use size_t.  I don't know when ssize_t is used
[20:53:05] *** Joins: al1ranger (~al1ranger@182.57.209.236)
[20:56:14] *** Quits: al1ranger (~al1ranger@182.57.209.236) (Client Quit)
[20:57:35] <FromDiscord> <codic> Pixie looks very cool
[20:57:47] <FromDiscord> <codic> I may switch to drawing window titlebars in worm with pixie
[21:05:44] <PMunch> worm?
[21:07:24] *** Joins: jjido (~Denis@90.213.58.125)
[21:24:28] <FromDiscord> <retkid> help
[21:24:31] <FromDiscord> <retkid> i have a quantum list
[21:24:45] <FromDiscord> <retkid> (edit) "list" => "sequence"
[21:24:50] <FromDiscord> <retkid> after being observed it changes
[21:25:12] <FromDiscord> <retkid> once i read from it, even using the same function, the output is different?
[21:26:11] <FromDiscord> <retkid> is this expected behavior for a list for 1 million + items
[21:26:31] <FromDiscord> <retkid> (edit) "list for" => "sequence with"
[21:30:24] <FromDiscord> <codic> does anyone have any examples of using pixie to draw to a X11 window?
[21:30:41] <FromDiscord> <codic> PMunch: my window manager <https://github.com/codic12/worm>
[21:31:52] <FromDiscord> <retkid> oh
[21:32:10] <FromDiscord> <retkid> no its not a quantum list it had something to do with clearing a sequence than doing it again
[21:32:13] <PMunch> Oh cool, when did you release that @codic?
[21:35:47] <FromDiscord> <TryAngle> is worm inspired by bspwm?
[21:37:02] <FromDiscord> <codic> In reply to @TryAngle "is worm inspired by": not really, but some aspects are similar, like `wormc` and `bspc`
[21:37:24] <FromDiscord> <codic> PMunch: a while ago, i was also reading your posts about nimscript in your wm and was thinking of maybe implementing that :P
[21:38:31] <PMunch> Nimscript in my WM is still very theoretical :P
[21:38:39] <PMunch> But yeah, the idea is neat
[21:39:16] <PMunch> I still want to create my own properly working WM
[21:39:29] <PMunch> But I'm struggling with the layouting algorithm..
[21:40:34] <FromDiscord> <codic> I have a floating and tiling layout, for the latter I do simple master-stack tiling: <https://github.com/codic12/worm/blob/main/src/worm.nim#L836>
[21:40:45] <FromDiscord> <codic> That code really needs to be refactored though
[21:41:10] <PMunch> That's the problem
[21:41:20] <PMunch> I have slightly loftier ambitions :P
[21:42:56] <FromDiscord> <dom96> _wonders why he's seeing the style of `int var_name` in more and more code, do people dislike writing `int(var_name)`?_
[21:43:21] <FromDiscord> <codic> If you're asking about my code I'm personally pretty inconsistent
[21:43:27] <FromDiscord> <dom96> lol, I love how Discord just wrapped that in underscores but fails to render in italics
[21:43:44] <FromDiscord> <codic> I should stick to 1 style
[21:43:44] <FromDiscord> <dom96> In reply to @codic "If you're asking about": yours is the second code I've seen it in today
[21:43:51] <FromDiscord> <dom96> another is https://github.com/nim-lang/nimble/pull/963/files
[21:43:58] <PMunch> I tend to do var_name.int :P
[21:44:07] <FromDiscord> <codic> I like `T x` the best personally but it doesn't work in all contexts
[21:44:16] <FromDiscord> <codic> Eg, `cint a - cint b - cint c` vs `a.cint - b.cint - c.cint`
[21:44:25] <FromDiscord> <codic> .T and T() always work
[21:44:32] <FromDiscord> <codic> so I should refactor my code to always use one of them
[21:44:42] <PMunch> Eh, sometimes you have to do ().T which is annoying
[21:45:01] <PMunch> T() truly is the best technical solution
[21:45:07] <PMunch> But I find it's a bit noisy
[21:45:13] <FromDiscord> <codic> In reply to @PMunch "Eh, sometimes you have": oh yeah that is also fair
[21:45:15] <FromDiscord> <codic> In reply to @PMunch "But I find it's": I agree
[21:45:42] <FromDiscord> <codic> Rn my code is just "use whatever works first in the context and forget about it"
[21:45:46] <PMunch> @codic, I want to basically do packing for my algorithm. Keep windows the same size as they request, but create new windows where there's room for them.
[21:46:00] <FromDiscord> <dom96> ideally we'd have a reliable code formatter to correct all these things for us
[21:46:03] <PMunch> Basically trying to automatically do what everyone does when they post pictures of their WMs :P
[21:46:23] <FromDiscord> <codic> Yeah btw nimpretty is sadly pretty garbage
[21:46:31] <PMunch> Kinda like you do here: https://camo.githubusercontent.com/0278b17611985a6efcbb0d45902ff0d53560deae67008dc2dea9b54589e250d0/68747470733a2f2f692e696d6775722e636f6d2f44366a4b6145372e706e67
[21:46:33] <PMunch> But automatic
[21:46:36] <FromDiscord> <codic> It makes my code just not compile
[21:46:46] <FromDiscord> <codic> In reply to @PMunch "<@562086061153583122>, I want to": oh that is interesting
[21:47:07] <FromDiscord> <codic> but like, if you have space on both the left and right sides, where would it go?
[21:47:23] <PMunch> Well there would be some precedence rules
[21:47:39] <PMunch> Basically the problem is quite hard in itself
[21:48:08] <FromDiscord> <codic> For example, I have this Nim enum
[21:48:12] <PMunch> And then you add the constraint that you don't want to move stuff around too much and that you want it to always look pretty and it becomes really hard :P
[21:48:22] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3H0H
[21:48:23] <FromDiscord> <codic> Nimpretty wrecks it
[21:48:31] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3H0I
[21:48:54] <FromDiscord> <dom96> ouch
[21:49:05] <NimEventer> New post on r/nim by IridiumPoint: Is there a way to use a forward declared proc type to avoid having to retype parameters and the return type when declaring actual procedures?, see https://reddit.com/r/nim/comments/r8vj7y/is_there_a_way_to_use_a_forward_declared_proc/
[21:49:11] <FromDiscord> <dom96> just a bug though, don't think it deserves to be called "garbage" 🙂
[21:49:30] <FromDiscord> <dom96> as for me, I think I will sadly always disagree with the style nimpretty enforces
[21:55:50] <FromDiscord> <codic> In reply to @dom96 "just a bug though,": Yeah but it does this on several multi-line occasions
[21:55:56] <FromDiscord> <codic> Not just in this one case
[21:56:06] <FromDiscord> <codic> I should probably report a bug but I'm surprised that no one has noticed
[21:56:13] <FromDiscord> <codic> Or maybe they have and it's already reported
[22:02:57] <FromDiscord> <dom96> I think many just aren't using it
[22:09:47] <FromDiscord> <codic> Yeah at this point I just format code by hand
[22:16:33] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:34:26] <FromDiscord> <retkid> In reply to @dom96 "ideally we'd have a": Ideally we would try and pick the most efficient and best looking algorithm for every problem
[22:34:59] *** Joins: jjido (~Denis@90.213.58.125)
[22:35:02] <FromDiscord> <retkid> I don’t like code prettifiers
[22:35:08] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:841d:f597:62fd:8362) (Remote host closed the connection)
[22:35:29] <FromDiscord> <retkid> I think my code is pretty readable and I don’t like it fucking with my code
[22:48:16] *** Joins: vicfred (~vicfred@user/vicfred)
[22:56:23] <FromDiscord> <whisperdev> I have a question not related to Nim but maybe there are some "indie hackers" here.
[22:57:10] <FromDiscord> <whisperdev> Have anyone of you tried to "scrape data" from Android apps? eg. running the app in the android emulator and then somehow collecting the data from the screen?
[22:59:59] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Quit: The Lounge - https://thelounge.chat)
[23:06:17] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[23:22:45] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[23:25:07] <FromDiscord> <TryAngle> is it not possible to use two different wrappers for the same library at the same time?
[23:26:09] <FromDiscord> <TryAngle> I am using the nimgl library for gltw but it misses some parts I require so I added them in my own library and now I get conflicting errors when compiling
[23:26:46] <FromDiscord> <Solitude> great story, what errors?
[23:28:27] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 252 seconds)
[23:34:55] <FromDiscord> <TryAngle> In reply to @Solitude "great story, what errors?":  https://media.discordapp.net/attachments/371759389889003532/916782136944640030/message.txt
[23:45:47] <FromDiscord> <Solitude> In reply to @TryAngle "": are you importc'ing same functions again?
[23:45:55] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3H1l
[23:46:00] <FromDiscord> <Solitude> im guessing your definitions just have wrong signatures
[23:46:18] <FromDiscord> <Solitude> `N_CDECL(NIM_BOOL, glfwInit)(void);`
[23:46:35] <FromDiscord> <Solitude> glfwInit doesnt return bool, it returns cint
[23:49:00] <FromDiscord> <pyautogui> Noob question: Should procs or templates be used for readability split-ups of ugly mega-functions? A lot of the usages of functions in other languages can be replaced with a template in Nim.
[23:49:11] <FromDiscord> <pyautogui> (edit) "template" => "templates"
[23:49:20] <FromDiscord> <pyautogui> (edit) 04removed "a"
[23:50:19] <FromDiscord> <TryAngle> In reply to @Solitude "`N_CDECL(NIM_BOOL, glfwInit)(void);`": but I'm using glfwInit from nimgl
[23:50:30] <FromDiscord> <TryAngle> those two procs are the only extras I did rn
[23:50:54] <FromDiscord> <TryAngle> and the types I'm using are the wrapped types from nimgl
[23:59:04] <FromDiscord> <huantian> how would one get the first and last values in an OrderedTable?
