[00:08:37] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[00:11:45] *** Quits: waldo323_ (~waldo323@d14-69-96-170.try.wideopenwest.com) (Ping timeout: 256 seconds)
[00:15:10] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[00:15:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:16:57] *** flooded is now known as _flood
[00:18:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:43:25] <roarde> No matter how ancient or obsolete, is there a public-domain awk implementation?
[00:44:28] <earnest> Maybe heriloom?  No idea
[00:44:39] <earnest> I don't think it's pd though now that I think about it
[00:44:43] <earnest> heirloom*
[00:46:40] *** Quits: jess (~jess@libera/staff/jess) ()
[00:49:59] <earnest> roarde: Nope, they're all licensed
[00:58:41] *** Quits: user51 (~user51@176.228.151.30) (Remote host closed the connection)
[01:05:59] <nmz1> copyright lasts until author's death + 95 years
[01:06:04] <nmz1> so no
[01:06:14] <nmz1> ISC is the closest thing to public domain
[01:06:29] <nmz1> public domain also changes by country, your public domain is not mine and vice versa
[01:06:46] <nmz1> the laws on what public domain means also change, so
[01:06:54] <nmz1> you're better off going by a license
[01:25:41] <e36freak> looks like nawk/oawk has a pretty permissive license, MIT-ish
[01:26:03] <e36freak> not sure what the busybox license is
[01:30:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:30:15] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 268 seconds)
[01:32:13] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[01:33:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:40:34] *** Joins: seninha (~seninha@user/seninha)
[01:48:44] <nmz1> gpl
[01:48:52] <nmz1> its why toybox exists
[01:51:15] <earnest> nmz1: Some projects do explicitly mark it as pd, e.g. djb.  Also e.g. https://github.com/leahneukirchen/mblaze/blob/master/COPYING
[01:51:33] <earnest> But all implementations of awk are lucent, cddl or gpl
[01:51:55] <earnest> (probably mit for goawk and such but I didn't look for anything new)
[01:59:43] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 252 seconds)
[02:01:06] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[02:16:25] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:23:47] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[02:56:02] <roarde> pdksh comes to mind. The non-free portions stopped being used a long time ago.
[03:39:24] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[03:42:53] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:43:24] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:48:26] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[04:11:12] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[04:16:33] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[04:25:34] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[04:31:34] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:02:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:14:51] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:17:50] *** Joins: qpls (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[05:17:57] *** Joins: earnest (~earnest@user/earnestly)
[05:18:03] <qpls> I want to read up to a certain character and then terminate my program
[05:18:16] <qpls> I've tried RS='<char>' which works on most awk implemenations
[05:18:22] <qpls> but fails on mawk which does input buffering
[05:18:27] <qpls> is there another way to achieve this?
[05:18:45] <qpls> I don't care if it doesn't involve awk as long as it is POSIX compliant
[05:22:36] <qpls> (aside from using dd as poorman's getchar)
[05:23:49] *** qpls is now known as jk
[05:23:52] *** jk is now known as qpls
[05:24:00] *** qpls is now known as lemnean
[05:24:07] *** lemnean is now known as aetnaeus
[05:32:44] <nmz1> aetnaeus: whats with the nick changes?
[05:33:14] <aetnaeus> nmz1: I have a restless spirit ;)
[05:33:20] <aetnaeus> I didn't have a nick on libera
[05:33:24] <nmz1> ah
[05:33:24] <aetnaeus> so I decided to register one
[05:33:47] <nmz1> mmm hopefully someone else can answer, portability is a B
[05:34:07] <aetnaeus> indeed :(
[05:34:26] <aetnaeus> though not as bad as I anticipated
[05:35:10] <aetnaeus> but then I define 'porability' as 'runs on *bsd, linux,busybox, and macos'
[05:35:42] <nmz1> well, busybox runs everywhere
[05:35:51] <aetnaeus> indeed
[05:36:00] <aetnaeus> I am using it as my gold standard
[05:36:34] <aetnaeus> but I am sure there are some ancient and obscure systems which don't use it or something more modern
[05:36:37] <aetnaeus> which I don't care about
[05:37:22] <e36freak> fucking mawk
[05:38:02] <e36freak> the fact that mawk buffers no matter what RS you give it kinda means there's no way to do it in mawk
[05:38:13] <e36freak> you could try using getline() in a BEGIN block
[05:38:18] <e36freak> that may or may not be better
[05:38:40] <aetnaeus> I tried that, getline seems to use the same codepath
[05:38:45] <e36freak> i figured
[05:39:08] <aetnaeus> there is -Wi which makes input line buffered
[05:39:11] <aetnaeus> but it breaks RS
[05:39:24] <e36freak> does getline() < file make a difference over passing a file as an argument?
[05:39:33] <aetnaeus> no :(
[05:39:35] <e36freak> lame
[05:40:26] <e36freak> and i'm guessing you don't want to write a small utility in another language that you can ship with your thingy
[05:41:52] <aetnaeus> at that point I might as well just rewrite it in C :P
[05:42:03] <e36freak> never a bad move!
[05:42:22] <aetnaeus> having to curl|gcc would probably lose me a fair number of users
[05:42:34] <aetnaeus> s/gcc/cc
[05:43:33] <e36freak> you didn't want those users anyway
[05:43:56] <aetnaeus> hehe
[05:43:58] <nmz1> just fuck mawk and use RS as is
[05:44:04] <nmz1> it sucks anyways
[05:44:10] <aetnaeus> it would break on debian/ubuntu
[05:44:19] <nmz1> if I want speed, I switch to lua
[05:44:20] <aetnaeus> which is probably 80+% of linux users
[05:44:20] <e36freak> no one uses those distros
[05:44:27] <aetnaeus> lol
[05:44:38] <nmz1> I'm on raspbian and they use nawk here
[05:44:42] <nmz1> not mawk
[05:44:48] <e36freak> you could just require non-mawk for those distros
[05:44:55] <e36freak> any power user is gonna have gawk installed anyway
[05:44:56] <aetnaeus> then I will have to wait for raspbian to take over the world
[05:45:02] <nmz1> ah no, its gawk
[05:45:11] <aetnaeus> I am on a mission for POSIX compliance
[05:45:17] <aetnaeus> and I will be damned if I don't achieve it!
[05:45:25] <aetnaeus> dumping terminal state probably won't be in the hot path anyway
[05:45:26] <e36freak> mawk probably isn't POSIX compliant
[05:45:32] <nmz1> hashbang.sh is debian, and uses gawk
[05:45:36] <aetnaeus> so in the end I will probably just use dd or guess the size of the return sequence
[05:45:54] <aetnaeus> e36freak: by POSIX compliant i don't really mean posix compliant
[05:46:00] <aetnaeus> I mean de facto posix compliant :P
[05:46:25] <aetnaeus> nmz1: I don't want to have to if debian; 
[05:46:28] <nmz1> if its linux its gawk, freebsd uses nawk, openbsd uses lok which is its version of nawk, who know what netbsd uses
[05:46:37] <aetnaeus> and osx doesn't ship with gawk
[05:47:02] <e36freak> nor mawk
[05:47:19] <e36freak> just exclude mawk :). nawk is fine
[05:47:21] <aetnaeus> but it's awk is sane
[05:47:24] <aetnaeus> I tested it
[05:47:28] <aetnaeus> s/'//
[05:47:46] <aetnaeus> mostly sane
[05:47:51] <aetnaeus> it doesn't like -v with a space
[06:04:20] <aetnaeus> To give mock its fair due:
[06:04:23] <aetnaeus> https://brenocon.com/blog/2009/09/dont-mawk-awk-the-fastest-and-most-elegant-big-data-munging-language/
[06:04:43] <aetnaeus> I just wish it didn't come at the expense of sane default behaviour
[06:04:46] <aetnaeus> s/mock/mawk
[06:10:48] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Quit: leaving)
[06:11:11] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[06:27:34] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[06:31:01] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[06:57:05] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[07:04:29] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[08:31:01] *** Quits: fford (~fford@p200300c6ff35820060d8bedc1c419ec5.dip0.t-ipconnect.de) (Quit: WeeChat 1.5)
[09:19:14] *** Joins: patanga (~demo@046125250114.public.t-mobile.at)
[09:24:45] *** Quits: patanga (~demo@046125250114.public.t-mobile.at) (Ping timeout: 256 seconds)
[09:31:32] *** Joins: patanga (~demo@213162073096.public.t-mobile.at)
[11:05:37] *** Quits: patanga (~demo@213162073096.public.t-mobile.at) (Ping timeout: 256 seconds)
[11:21:25] *** Joins: user51 (~user51@176.228.151.30)
[11:31:04] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[12:27:03] *** Joins: seninha (~seninha@user/seninha)
[12:36:16] *** Joins: lavaball (felix@31.204.155.215)
[12:39:21] *** Joins: earnest (~earnest@user/earnestly)
[12:51:35] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[13:53:52] *** Joins: patanga (~demo@046125250091.public.t-mobile.at)
[14:05:33] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[14:06:27] *** Quits: patanga (~demo@046125250091.public.t-mobile.at) (Ping timeout: 252 seconds)
[14:08:38] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[14:29:39] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[14:30:04] *** Joins: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[15:06:45] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:22:25] *** Joins: seninha (~seninha@user/seninha)
[15:29:38] *** Joins: lavaball (felix@31.204.155.215)
[15:38:34] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[15:40:45] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[15:41:04] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[15:41:28] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[15:43:12] *** flooded is now known as _flood
[15:47:57] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:40:02] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:42:17] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[16:44:18] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:48:50] *** Joins: m4n_ (~emacs@dynamic-046-114-035-036.46.114.pool.telefonica.de)
[16:50:11] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:52:33] *** Quits: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[17:01:41] *** Joins: concrete-houses (~g@209.6.150.53)
[17:01:52] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:03:56] *** flooded is now known as _flood
[17:15:58] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[17:16:40] <concrete-houses> https://controlc.com/969eaba3 ok where can I learn how to use awk like a master?
[17:19:21] <Patsie> here -> https://github.com/patsie75
[17:19:31] <Patsie> if you understand those, you're a master
[17:20:21] <concrete-houses> I need to grab a line,  capture first field, then start an array adding the secnd and third, and a variable with the third field which will be added to, then if next row same field1, add field 2 n 3 to aray and add to row 2 accumulator variable, then continue N times until new field 1, then set new arary fir field 2 3 and new accumulaor variabel for new field 1 then repeat until end then print out 
[17:20:27] <concrete-houses> colum names with field12 and 2 then sedon field 2 3 and blooew wpritn row with field 1 then the values fof field 2/3, (2nd)field 23 (3rd) field 2/3 and at end the total
[17:20:50] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:21:49] <concrete-houses> https://github.com/patsie75?tab=repositories no web framework? or does she just use werc.cat-v.org?
[17:24:54] <nmz1> no humility from Patsie XD
[17:25:46] <nmz1> concrete-houses: it seems like you already know what to do
[17:29:58] <concrete-houses> in my mind but 0 skill to do it
[17:29:59] <concrete-houses> lol
[17:30:32] <concrete-houses> replace aws gcp adn azure with archlnux and awk
[17:31:08] <concrete-houses> how many cgi/second updates on 128g ram 16 cpu server
[17:31:22] <concrete-houses> adn how much easier to write apps
[17:32:10] <nmz1> the question is, do all countys contain the same licenses?
[17:32:26] <nmz1> are the sales positive for all?
[17:32:28] <concrete-houses> oow
[17:32:40] <concrete-houses> sales are blank 0 or pos int
[17:32:55] <concrete-houses> I thnk countes vary in which licenses
[17:33:05] <nmz1> aw
[17:33:16] <concrete-houses> this is a brutal problem thsinreport guy said hey can you do thin is SQL?
[17:33:42] <concrete-houses> literally need to acumulate stuff in passle of arrays then print em out
[17:33:48] <concrete-houses> I can almsot imagine how in TCL with lists
[17:33:51] <concrete-houses> and vars
[17:34:06] <nmz1> lol, "brutal problem"
[17:34:10] <concrete-houses> tcl is only lang outside bash i am not retard in
[17:34:31] <emanuele6> why don't you use tcl then?
[17:34:47] <concrete-houses> cuz im assmad I dont know awk like a real unix user
[17:35:10] <concrete-houses> I never took time to understand it   i get stuck in trying to ge tin and out of awks world to set things like variables
[17:35:13] <nmz1> then you should learn and do the problem
[17:35:15] <nmz1> its super easy
[17:35:22] <concrete-houses> ya?
[17:35:23] <concrete-houses> ok
[17:35:39] <concrete-houses> where is best way to learn? I have newly isntalled mawk here on archlinux
[17:35:55] <nmz1> man mawk
[17:36:49] <nmz1> Whenever I learn a new language I tend to remake unix utilities in it, these can be helpful https://github.com/Nomarian/Awk-Batteries/tree/master/Commands
[17:37:09] <emanuele6> huh?
[17:37:17] <emanuele6> mawk is not in archlinux's repositories
[17:38:01] <emanuele6> are you sure it is mawk and not gawk? or did you install mawk from source?
[17:38:27] <concrete-houses> I installed mawk from https://github.com/ploxiln/mawk-2
[17:38:53] <concrete-houses> it didn't instal man page but I have oen for gawk
[17:48:24] <nmz1> awk 'BEGIN {getline} {countys[$1]=1;totalsales[$1]+=$3; licenses[$2]=1; county[$1,$2] = $3} END {printf "county\t"; for (c in licenses) printf("%s\t",c); print "total";for (c in countys) {printf("%s\t",c); t=0;for (license in licenses) printf("%s\t",county[c,license]); print totalsales[c]} }'
[17:48:54] <emanuele6> since nmz1 posted his solution here is mine
[17:48:56] <emanuele6> http://0x0.st/-h9m.txt
[17:49:17] <emanuele6> which actually is basically the same thing lol
[17:49:37] <nmz1> XD
[17:49:38] <emanuele6> just to show that it is super easy
[17:49:53] <nmz1> how long did it take you emanuele6, I just finished when I posted it
[17:50:18] <emanuele6> no, it took me ~1minute
[17:50:39] <nmz1> damn, :S
[17:50:43] <nmz1> now I'm super bummed out
[17:50:56] <emanuele6> +2 minutes to realise it wasn't working because i kept writing country instead of county
[17:51:07] <emanuele6> hehe
[17:52:12] <nmz1> Did it really take you 1 minute?
[17:52:20] <nmz1> or did you not notice the time passing by?
[17:53:14] <emanuele6> no, i think took around 3 minutes total
[17:53:33] <emanuele6> but i didn't start doing it immediately, so i had time to think before doing it
[17:55:30] <concrete-houses> holy shit
[17:55:46] <concrete-houses> http://0x0.st/-h9m.txt this one works
[17:55:53] <concrete-houses> the first one let me post what it says
[18:02:14] <concrete-houses> nmz1 you rone does not work should I post what it says
[18:02:46] <Patsie> nmz1: humility is for the weak ;)
[18:03:46] <Patsie> but we already solved concrete-houses' problem yesterday
[18:04:19] <Patsie> he's just asking the same shit in a different day
[18:05:01] <concrete-houses> lol
[18:05:06] <concrete-houses> amatuer huh
[18:05:15] <concrete-houses> so you learned awk from man page?
[18:05:16] <concrete-houses> wow
[18:05:23] <concrete-houses> I haev to learn it so cool
[18:05:58] <concrete-houses> ok should countys be changed to county in nmz1 version?
[18:06:03] <seninha> good morning, I just did today's puzzle. My solution for part 2 is very verbose and not optimal, I'm gonna work on it.
[18:06:06] <seninha> https://github.com/phillbush/aoc/blob/master/2021/day03b
[18:06:09] <concrete-houses> nope still no go
[18:06:36] <Patsie> seninha: spoiler alert! I still have to do part2 of day3 :P
[18:06:48] <seninha> oops
[18:06:50] <Patsie> hehehe
[18:06:52] <Patsie> just kidding :)
[18:06:58] <Patsie> well, not that I still have to do it
[18:07:12] <Patsie> just that work started and people were calling me :P
[18:17:04] <concrete-houses> https://controlc.com/96d5e83f
[18:18:42] <emanuele6> ... :|
[18:19:10] <emanuele6> nmz1: has sent a command line
[18:19:19] <nmz1> :S
[18:19:37] <emanuele6> not a script
[18:19:54] <nmz1> just remove the awk ' and the ending ' from the script
[18:20:16] <emanuele6> # awk 'BEGIN { print "hey" }'
[18:20:16] <shbot> emanuele6: hey
[18:20:32] <emanuele6> # printf 'BEGIN { print "hey" }\n' > file.awk; awk -f file.awk
[18:20:33] <shbot> emanuele6: hey
[18:21:21] <emanuele6> # printf "awk 'BEGIN { print \"hey\" }'\\n" > file.awk; awk 1 file.awk; awk -f file.awk
[18:21:26] <shbot> emanuele6: awk 'BEGIN { print "hey" }'
[18:21:26] <shbot> emanuele6: awk: syntax error at source line 1 source file file.awk
[18:21:27] <shbot> emanuele6: etc... ( http://ix.io/3GSD )
[18:22:28] <emanuele6> you either pass the awk code ( `BEGIN { print "hey" }' ) directly to awk, or put the awk code into a file and run it with `awk -f that_file'
[18:23:08] <emanuele6> if you put an sh command line that calls awk into a file and try to run it with awk, it won't work obviously
[18:23:12] <emanuele6> that is sh code not, awk
[18:23:26] <emanuele6> # printf "awk 'BEGIN { print \"hey\" }'\\n" > file.awk; awk 1 file.awk; sh file.awk
[18:23:27] <shbot> emanuele6: awk 'BEGIN { print "hey" }'
[18:23:27] <shbot> emanuele6: hey
[18:23:38] <emanuele6> running it with sh would work, because it is sh code..
[18:27:27] <concrete-houses> https://controlc.com/084273ce i feel quite dumb
[18:27:29] <concrete-houses> lol
[18:27:44] <concrete-houses> thank you awk mastrixii
[18:27:58] <nmz1> https://en.wikipedia.org/wiki/Shebang_(Unix)
[18:28:13] <nmz1> your editor should've highlighted the code correctly when you removed the ''
[18:28:29] <nmz1> concrete-houses: don't be, its because you're a tcl coder.
[18:28:34] <nmz1> it has damaged your brain
[18:28:37] <nmz1> :)
[18:29:02] <emanuele6> #!/bin/sh
[18:29:03] <emanuele6> # \
[18:29:09] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[18:29:21] <emanuele6> exec tclsh "$0" ${1+"$@"}
[18:29:24] <emanuele6> hehe
[18:30:10] <nmz1> (though I am kidding, tcl really does do some harmful practices, and give way to some bad practices)
[18:30:13] <nmz1> bash is the same
[18:30:34] <nmz1> that was redundant
[18:30:38] <nmz1> :S
[18:30:39] <emanuele6> tcl is not as bad as bash
[18:30:52] <emanuele6> bash is just a mess
[18:30:52] <nmz1> I like it more than bash at least
[18:31:10] <nmz1> ya, bash is just a ball of scotch tape visually
[18:31:16] <nmz1> no coherency at all
[18:31:37] <emanuele6> not just visually, it has many silly things
[18:31:55] <nmz1> perl also, $[
[18:32:22] <emanuele6> like associative arrays subscripts, `test -v' (which is bugged at the moment), ACE in arithmetic contexts, etc
[18:33:13] <emanuele6> the visual aspect is just POSIX sh
[18:33:32] <emanuele6> (for the most part)
[18:33:34] <nmz1> the only problem of awk is that you can shoot yourself with types
[18:33:40] <concrete-houses> so to understand awk I should read the man page..... thinking sequentailly seems to help
[18:33:42] <nmz1> and that its a DSL
[18:33:53] <nmz1> concrete-houses: theres also a book called the awk programming language
[18:33:57] <nmz1> very nice
[18:34:27] <nmz1> but you usually just look at the manpage
[18:35:12] <emanuele6> the POSIX specification for awk may also be a good learning resource
[18:35:43] <emanuele6> https://pubs.opengroup.org/onlinepubs/9699919799/utilities/awk.html
[18:35:55] <nmz1> learnxinyminutes.com as well, however, they tell you to use ; for each statement, don't do that
[18:37:23] <emanuele6> there are also the pages in the /topic
[18:39:38] <seninha> The best way to learn awk is The AWK Programming Language book.
[18:39:51] <emanuele6> i have that book
[18:40:04] <emanuele6> but i have never even begun to read it to be honest
[18:40:04] <seninha> It touches topics like algorithms, and even topological sorting, using awk
[18:40:17] <seninha> I have it too.
[18:41:10] <emanuele6> oh, nevermind i was thinking of another book
[18:41:33] <nmz1> there's only like 3 books on awk
[18:41:36] <nmz1> that take it seriously
[18:41:43] <emanuele6> The AWK Programming Language is by Aho Kernighan and Weinberger
[18:41:45] <emanuele6> wow, cool
[18:42:12] <emanuele6> it must be an actually good book then
[18:43:09] <emanuele6> i have only got "Effective awk Programming: Universal Text Processing and Pattern Matching" which i got for free
[18:43:21] *** Joins: m4n__ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[18:44:17] <emanuele6> i have not read it much, but i think it is mostly gawk specific
[18:46:35] *** Quits: m4n_ (~emacs@dynamic-046-114-035-036.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[18:47:50] <geirha> what would awk be named if it didn't get named after its creators, but instead named after what it does?
[18:52:34] <emanuele6> maybe slex
[18:52:43] <emanuele6> since the syntax is similar to lex
[18:53:23] <emanuele6> somewhat
[18:53:45] <geirha> I'm leaning more against tpl or tml
[18:54:12] <emanuele6> text processing/manipulation language?
[18:54:15] <nmz1> the pattern language?
[18:54:28] <geirha> emanuele6: yes
[18:55:38] <nmz1> tpml
[18:57:34] <emanuele6> tql -- text query language
[18:57:58] <nmz1> tq
[18:58:08] <nmz1> jq doesn't even need to say its a language
[19:20:49] <ttmrichter> SNOBOL4 maybe?
[19:26:17] <emanuele6> i never thought of it, but lex is actually quite similar to awk: https://0x0.st/-hpZ.c
[19:27:17] <emanuele6> except that it is not line/record based, and it does not have field splitting, and only the first rule that matches is run
[19:29:20] <emanuele6> and lex is two years younger than awk according to wikipedia
[19:30:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:50:01] <emanuele6> so slex (stream lex -- similar to sed) could make sense if awk was actually inspired by lex
[20:18:00] <e36freak> https://www.reddit.com/r/adventofcode/comments/r77mkv/these_problems_are_harder_than_i_remembered/
[20:20:49] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[20:57:42] <user51> advent of euler
[21:09:48] <geirha> huh, if you click the year in the upper left, it changes how it displays it
[21:14:44] *** Joins: kensanata (~user@user/kensanata)
[21:15:24] <user51> e36freak: damn, i got trolled.
[21:27:34] <Patsie> finally some time to finish day03 part 2
[21:27:34] <e36freak> user51: didn't recognize collatz?
[21:27:50] <user51> e36freak: took me a few moments
[21:27:57] <Patsie> did you guys thins day 3 was a bit on the steep side after day2?
[21:27:59] <e36freak> Patsie: i misunderstood it at first, you gotta find the most/least common of the new set after removals each time
[21:28:11] <user51> wrote an awk script, ran it through sort, etc
[21:28:16] <e36freak> i wouldn't have if i read it properly the first time :). def took me a lot longer than 1 and 2 though
[21:28:27] <Patsie> same here :(
[21:28:41] <Patsie> e36freak: where's your code?
[21:30:31] <e36freak> http://ix.io/3GTa
[21:30:40] <e36freak> was way uglier at first fwiw, i cleaned it up afterward
[21:32:35] <Patsie> hmm, I should have done the same as you and seninha, just copy the data into two arrays first. now I'm doing difficult stuff to 'save' my data by copying it to temp arrays, so I don't destroy the original set :/
[21:37:23] <Patsie> anyways, time for dinner
[21:37:25] <user51> what's the input?
[21:37:35] <e36freak> shitload of binary numbers
[21:37:45] <user51> wait you need to register or something?
[21:37:58] <Patsie> input is different for each user
[21:38:03] <e36freak> yeah
[21:38:07] <e36freak> so you can't just copy an answer
[21:38:20] <Patsie> no registering is neccesary, use your github account to login
[21:38:25] <nmz1> idgi
[21:38:30] <e36freak> here's mine if you want something to play with http://ix.io/3GTT
[21:38:31] <user51> still need to register to github
[21:38:39] <user51> well, time to hit my old account
[21:38:44] <nmz1> function wreathsearch(n) local t,i = {},1 t[n]=true while n~=1 or t[n]==nil do print(n) if n%2==0 then n=n/2 else n=1+(n*3) end t[n],i=true,i+1 end print(n,i) end -> 1.0     538
[21:38:51] <nmz1> maybe my code is wrong
[21:39:12] <e36freak> probably
[21:39:17] <user51> is that awk?
[21:39:20] <nmz1> lua
[21:39:23] <e36freak> given that it's an unsolved problem
[21:39:35] <nmz1> awk is kinda slow on numerical problems,
[21:39:41] <nmz1> projecteuler taught me that
[21:39:50] <e36freak> Collatz_conjecture
[21:39:52] <e36freak> erm
[21:39:57] <e36freak> https://en.wikipedia.org/wiki/Collatz_conjecture
[21:40:07] <nmz1> so my code must be incorrect
[21:41:02] <nmz1> wreathsearch(543811279069582131200) seems to run 538 times and does end
[21:44:36] <e36freak> heh
[21:44:48] <e36freak> go get your fields medal
[21:57:26] <user51> at this rate i'm going to use the simple wrench solution. no spoilers yet please.
[21:59:36] <nmz1> wait? I have to travel? no thanks
[22:04:43] <aetnaeus> nmz1: I think it is on amazon prime
[22:05:39] <user51> ok, got it
[22:06:12] <user51> http://sprunge.us/dez6MV
[22:07:14] <geirha> that uses a GNUism
[22:07:29] <user51> uh, my soution isn't compete actually
[22:07:55] <user51> it prints the binary numbers, but doesn't calcuate
[22:08:02] <user51> i just piped it to bc
[22:09:23] <yeti> collatz in awk without bignums?
[22:09:24] <aetnaeus> every time someone uses a GNUism RMS sneezes
[22:09:35] <yeti> or am I overlooking something?
[22:10:09] <geirha> the topic is https://adventofcode.com/2021/day/3
[22:12:23] <yeti> 543811279069582131200 gives 537 for me... I'm off by one (in DC)
[22:17:30] <user51> http://sprunge.us/uNU15x
[22:17:31] <user51> with binary -> decimal conversation
[22:17:33] <nmz1> I'm running it on hashbang.sh using luajit and so far I can't a loop or anything that goes over the limit of 1000
[22:18:14] <nmz1> I can't find a collision*
[22:18:26] <nmz1> anyway, time for aoc
[22:20:49] <geirha> I'd change the shebang to gawk
[22:21:21] <yeti> use DC
[22:25:27] <yeti> ok... I dont count the input... only the resulting numbers
[22:26:02] <yeti> input 4 -> 2 -> 1   yields 2 for me
[22:30:53] <user51> wait, i didnt do park 2..
[22:30:56] <user51> crpa
[22:33:40] <yeti> my babel fish need a break...
[22:37:52] <aetnaeus> just like the tower of babel
[22:38:33] <user51> is the english supposed to be difficult?
[22:44:34] <yeti> maybe it's irc slang that sometimes confuses me
[22:45:10] <yeti> or my day was already long... might be tired
[22:59:00] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:06:53] *** Joins: kapu (~kapu@user/egm)
[23:10:11] <kapu> i would like to print FNR at begpat and endpat of a range. //,//{}
[23:11:01] <kapu> is it possible using that form? can I reference FNR of begpat and endpat in the curly braces?
[23:11:16] <nmz1> so would I kapu 
[23:11:18] <nmz1> so would I
[23:11:51] <nmz1> (use variables instead)
[23:11:59] <kapu> feared so
[23:12:59] <nmz1> # seq 10 | awk '/2/,/4/ {print FNR}'
[23:13:00] <shbot> nmz1: no output
[23:13:06] <nmz1> ah, this seq is broken
[23:13:12] <nmz1> why hasn't anyone fixed it yet?
[23:13:53] <nmz1> ; seq 10 | awk '/2/,/4/ {print FNR}'
[23:13:55] <nmz1> 2
[23:13:57] <nmz1> 3
[23:13:59] <nmz1> seems to work kapu 
[23:13:59] <kapu> nmz, i read that as you would get FNR for every line between 2 and 4 inclusive, right?
[23:14:17] <nmz1> unless you mean begpat to be BEGIN {}
[23:14:47] <kapu> thanks nmz 
[23:15:11] <nmz1> it also prints 4
[23:17:29] <emanuele6> nmz1: seq is not a standard tool :D
[23:18:25] <emanuele6> ( you can use bash's `printf '%s\n' {1..10}' to get ten lines 1 to 10 )
[23:19:27] <emanuele6> # seq 1 3
[23:19:28] <shbot> emanuele6: one
[23:19:28] <shbot> emanuele6: two
[23:19:28] <shbot> emanuele6: three
[23:20:14] <nmz1> emanuele6: yes it is
[23:20:21] <emanuele6> no, it is not
[23:21:14] <nmz1> freebsd does have jot, but at this rate, anyone who doesn't have seq is broken IMO
[23:21:38] <emanuele6> shbot has seq, its own version.
[23:21:53] <emanuele6> seq is not standardised
[23:22:01] <nmz1> you know what seq is
[23:22:07] <emanuele6> # seq 123904210412804 123904210412804
[23:22:08] <shbot> emanuele6: one hundred and twenty-three trillion nine hundred and four billion two hundred and ten million four hundred and twelve thousand eight hundred and four
[23:22:58] <emanuele6> nmz1: i know how the seq of freebsd works, yes
[23:23:03] *** Joins: nvmd (~nvmd@user/nvmd)
[23:32:08] <emanuele6> nmz1: https://github.com/phy1729/seq/blob/master/seq.c shbot uses this seq
[23:32:19] <emanuele6> it used to be a bash script https://gitlab.com/geirha/shbot-initramfs/-/blob/3dc031c16cd6b5d2c9544ca8d7260c98ae35aec9/skel/bin/seq
[23:32:54] *** Joins: fford (~fford@p200300c6ff35820060d8bedc1c419ec5.dip0.t-ipconnect.de)
[23:33:19] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[23:34:01] <emanuele6> shbot adds some twists to useless non-standardised tool like which and seq to discourage their use
[23:34:19] <emanuele6> s/ol/&s/
[23:51:51] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
