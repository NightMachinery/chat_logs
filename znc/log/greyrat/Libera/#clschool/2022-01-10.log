[00:07:25] *** Joins: dra (~dra@2a04:4540:6400:2900:f9af:31e3:2a01:bf6b)
[00:12:15] *** Joins: dre (~dre@2001:8003:c932:c301:4049:6b4e:9cfa:ed15)
[00:47:08] *** Quits: rito_ (~rito_gh@45.112.243.149) (Quit: Leaving)
[01:53:23] *** Quits: dra (~dra@2a04:4540:6400:2900:f9af:31e3:2a01:bf6b) (Quit: Leaving)
[01:53:48] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:58:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[02:21:03] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Ping timeout: 256 seconds)
[02:25:17] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[03:25:25] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[03:43:46] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[04:08:11] *** Joins: tanners (~tanners@pool-71-127-59-41.washdc.fios.verizon.net)
[05:05:32] *** Quits: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[05:05:51] *** Joins: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[05:55:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[05:56:22] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[05:59:40] *** Quits: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[06:12:45] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[07:07:09] *** Quits: tanners (~tanners@pool-71-127-59-41.washdc.fios.verizon.net) (Quit: Quit)
[07:14:29] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[07:16:20] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[07:16:42] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[07:30:31] <beach> Good morning everyone! 
[07:31:01] *** Quits: sts-q (~sts-q@212.53.219.162) (Ping timeout: 256 seconds)
[07:34:59] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[07:36:14] *** Joins: sts-q (~sts-q@212.53.219.246)
[08:06:53] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: leaving)
[08:09:17] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:12:00] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:12:15] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:13:44] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:13:58] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:19:59] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: leaving)
[08:20:15] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:22:40] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:22:54] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:26:12] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:28:12] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:28:34] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:43:55] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:09:20] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:15fa:c22e:b1fb:575a)
[09:47:23] *** Joins: beach` (~user@2a01:cb19:150:3400:a173:2cef:ba0f:9b68)
[09:48:28] *** Quits: beach (~user@2a01:cb19:150:3400:e578:7149:acf:a4d9) (Killed (NickServ (GHOST command used by beach`!~user@2a01:cb19:150:3400:a173:2cef:ba0f:9b68)))
[09:48:31] *** beach` is now known as beach
[09:57:49] *** Quits: dre (~dre@2001:8003:c932:c301:4049:6b4e:9cfa:ed15) (Ping timeout: 240 seconds)
[09:58:25] *** Joins: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de)
[10:04:58] *** Joins: Oladon (~olad@98.43.81.226)
[10:16:28] *** Joins: spiaggia (~user@2a01:cb19:150:3400:e98f:f392:7a54:9b4b)
[10:22:36] <vegai> goood morning.
[10:27:52] <spiaggia> Hello vegai.
[10:29:48] <spiaggia> vegai: Are you new here?  I don't recognize your nick.
[10:36:28] *** Quits: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[10:43:06] *** Joins: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[10:45:51] <vegai> yeah, somewhat new
[10:46:35] <spiaggia> Great!  Welcome!  What brings you here?  I mean, to learn Common Lisp obviously, but what is your reason for doing that?
[10:47:46] <spiaggia> I am just nosy.  No need to answer if you don't want to.
[11:00:07] <rotateq> spiaggia: The way you write sounds familiar to me. :)
[11:01:15] <spiaggia> Type "translate spiaggia into English" to Google.
[11:01:33] <rotateq> I like using DeepL now.
[11:01:51] <spiaggia> Use whatever you like.
[11:01:51] <rotateq> but ok, since i don't know the source lang
[11:02:00] <spiaggia> Google detects it.
[11:02:11] <vegai> well, bluntly speaking, I had a relatively stupid question about sly and then just stayed
[11:02:26] <spiaggia> vegai: I see.
[11:03:10] <rotateq> oh vegai sry can't help you with that, I'm a slime user
[11:03:58] <vegai> that was several days ago and it was resolved, no problem :)
[11:04:08] <vegai> wait, is it slime that I use too? :P
[11:04:13] <vegai> well, one of those things anyway
[11:05:02] <vegai> I'm going through Seibel's practical common lisp right now, so I'm staying here for the general vibe and potential other stupid questions I might have
[11:05:15] <vegai> none so far, language-wise this is pretty straight-forward I feel
[11:05:28] <vegai> on chapter #15 currently
[11:05:49] <rotateq> spiaggia: Now I know the answer for sure. :) But for me lotuseater vs. rotateq doesn't translate so well with each other.
[11:06:40] <spiaggia> Indeed, it does not.
[11:06:50] <rotateq> vegai: a great resource we often recommend for the start
[11:08:20] <rotateq> spiaggia: You mentioned yesterday here that GDB isn't also such a great debugging tool and I have no experience with it, can you give one or two points you see why it lacks?
[11:08:45] <rotateq> everything can, nothing has to, as always
[11:09:06] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[11:09:17] <st_iron> good morning
[11:11:28] <spiaggia> rotateq: No, I said the contrary, that even GDB is way better than what we currently have in FLOSS Common Lisp implementations 
[11:11:33] <spiaggia> Hello st_iron.
[11:11:55] <rotateq> Oh sorry, yes, right.
[11:13:36] <spiaggia> What we call a "debugger" is more like a "backtrace inspector".  We can't even set a breakpoint in an already compiled function and evaluate a form that will eventually reach the breakpoint. 
[11:14:37] <rotateq> Yes sometimes I thought when I got into the "debugger" hmm so where does the failure really come from?
[11:14:37] <spiaggia> I think perhaps CMUCL can do it, and it apparently comes with some kind of debugger.  But SBCL has the ability to set breakpoints, but that ability is used only for one of two kinds of tracing 
[11:15:42] <spiaggia> So there is no documented API in SBCL for setting breakpoints.  And even if there were, what happens if you set a breakpoint in a function used by the REPL or the debugger? 
[11:16:21] <spiaggia> Allegro gave a lot of thought to this situation as my paper explains, but the paper suggests a very different solution. 
[11:16:53] <rotateq> I better get more with the condition system first as with many other important things.
[11:17:34] <spiaggia> Sure.
[11:17:39] <rotateq> Yes Franz Inc seems to have put much extra sweat into Allegro and the on-top tools.
[11:18:06] <rotateq> But OK, that's their point for making money with it.
[11:18:27] <spiaggia> So when I hear (or rather see) people say that SLIME is the best program development environment, all languages considered, that tells me how little they use available tools in other languages. 
[11:19:45] <rotateq> Much potential in everything. If I weren't so slow in progressing or small in brain capacity.
[11:20:25] <spiaggia> Welcome to the club.  I compensate by being persistent. 
[11:21:48] <rotateq> But I also like being a turtle metaphorically, for the long run and maybe someday I can achieve something useful.
[11:22:13] <spiaggia> I am sure that could be the case. 
[11:22:21] <spiaggia> Just don't give up.
[11:22:28] <rotateq> Sad that I can't be at ELS in persona this year. Or just online?
[11:22:53] <spiaggia> Yeah, too bad.  Did you go in the past?
[11:23:15] <rotateq> I don't, it's one of the few things I'm maybe not too dumb and bad at. Plus combining with some of the other interests.
[11:23:29] <rotateq> No I never have been.
[11:23:30] <spiaggia> Why can't you go this time?
[11:23:55] <rotateq> Money :D
[11:24:06] <spiaggia> Oh! :(
[11:24:29] <rotateq> I wanted to write heisig and ask how he's doing with the PhD.
[11:25:01] <spiaggia> I think he is doing quite well.  He also contributed some SIMD code to SBCL lately.
[11:25:16] <rotateq> Ah no problem, when someone like can be used by some company any day, then it will get better.
[11:25:31] <rotateq> Yes I don't doubt it, he knows his stuff.
[11:25:42] <spiaggia> He estimates that he will be able to contribute to SICL starting February, which I take to mean he is going to be finished by then.
[11:26:09] <rotateq> Oh sounds good.
[11:26:45] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[11:26:51] <spiaggia> He might be able to stay on for a project for another year or so.  When that is done, I have suggested he apply for a job at EPITA where Didier Verna and Jim Newto both work.
[11:27:09] <rotateq> And what is EPITA?
[11:27:26] <spiaggia> A private engineering school in Paris.
[11:28:15] <spiaggia> Didier is now qualified to lead a research team, so it is one of the few places in the world doing research related to Lisp.
[11:28:21] <rotateq> At some point I thought it could be cool working at Cycorp some day but then I read a bit more and no. But interesting in itself indeed.
[11:28:45] <rotateq> Wow really a thing then.
[11:28:58] <spiaggia> And what is Cycorp? :)
[11:29:57] <rotateq> That's a now over 30 years old company doing some kind of "AI" but with another approach, they built up a huuuge fact database and inference engine, at the core all with CL of course.
[11:30:17] <spiaggia> Sounds great!
[11:31:03] <rotateq> But OK, such companies only want PhD people with high capability, like at Rigetti or one of those functional programming companies I think.
[11:31:32] <spiaggia> I see.
[11:31:51] <rotateq> Yes and they made much progress, also in health care and such. But as I read the infrastructure should need a refresh.
[11:32:59] <rotateq> So like a powerful differential diagnose, putting in symptoms and getting out possible causes.
[11:33:18] <spiaggia> I understand. 
[11:34:06] <rotateq> But as knowledge (in the human sense) is often fuzzy, the approach they take isn't too accurate for some situations and critized.
[11:34:29] <spiaggia> Hmm.
[11:34:41] <rotateq> But please don't let me stop you, I often feel guilty about it.
[11:36:48] <spiaggia> Stop me?
[11:37:34] <rotateq> Yes from doing other things, time is limited. :)
[11:37:56] <spiaggia> Oh, I am prevented from entering my office for another few minutes. 
[11:38:13] <rotateq> Oh noez. So your office in your house?
[11:38:30] <spiaggia> Yeah.  Cleaning in progress.
[11:39:30] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (*.net *.split)
[11:39:30] *** Quits: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (*.net *.split)
[11:39:31] *** Quits: makomo (~makomo@user/makomo) (*.net *.split)
[11:39:31] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[11:39:33] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (*.net *.split)
[11:39:33] *** Quits: nimiux_ (~nimiux@freeshell.de) (*.net *.split)
[11:39:33] *** Quits: bremner (~bremner@notmuch/developer/bremner) (*.net *.split)
[11:39:34] *** Quits: plexi (~orcabot@digital.sanctuary.org) (*.net *.split)
[11:39:34] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (*.net *.split)
[11:39:34] *** Quits: lonjil (~quassel@user/lonjil) (*.net *.split)
[11:39:34] *** Quits: gko (~user@user/gko) (*.net *.split)
[11:39:35] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[11:39:35] *** Quits: sts-q (~sts-q@212.53.219.246) (*.net *.split)
[11:39:35] *** Quits: nexeq (~nexeq@user/nexeq) (*.net *.split)
[11:39:35] *** Quits: aeth (~aeth@user/aeth) (*.net *.split)
[11:39:36] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[11:39:36] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[11:39:37] *** Quits: minion (~minion@common-lisp.net) (*.net *.split)
[11:39:37] *** Quits: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105) (*.net *.split)
[11:39:39] *** Quits: vegai (vegai@kapsi.fi) (*.net *.split)
[11:39:39] *** Quits: mala (~mala@user/malaclyps) (*.net *.split)
[11:39:40] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (*.net *.split)
[11:39:40] *** Quits: Kabriel (~Kabriel@user/kabriel) (*.net *.split)
[11:39:40] *** Quits: dbotton (sid492350@id-492350.lymington.irccloud.com) (*.net *.split)
[11:39:40] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[11:39:41] *** Quits: epony (~epony@user/epony) (*.net *.split)
[11:39:42] *** Quits: empwilli (~empwilli@faui48e.informatik.uni-erlangen.de) (*.net *.split)
[11:39:42] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[11:39:42] *** Quits: antoszka-r (~antoni@rozalia.antoszka.pl) (*.net *.split)
[11:39:42] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[11:39:42] *** Quits: pedro-delfino (sid507296@id-507296.helmsley.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: copec (~copec@schrodbox.unaen.org) (*.net *.split)
[11:39:42] *** Quits: drakonis (drakonis@user/drakonis) (*.net *.split)
[11:39:42] *** Quits: bldr (~bull@185.117.72.168) (*.net *.split)
[11:39:43] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[11:39:43] *** Quits: sepanko (~sepanko@user/sepanko) (*.net *.split)
[11:39:43] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (*.net *.split)
[11:39:43] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[11:39:43] *** Quits: selwyn (~selwyn@user/selwyn) (*.net *.split)
[11:39:44] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[11:39:44] *** Quits: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de) (*.net *.split)
[11:39:44] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (*.net *.split)
[11:39:44] *** Quits: sgithens (sid10659@id-10659.helmsley.irccloud.com) (*.net *.split)
[11:39:45] *** Quits: Schnouki (e7aa4cfb39@user/schnouki) (*.net *.split)
[11:39:45] *** Quits: phoe (~phoe@user/phoe) (*.net *.split)
[11:39:45] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[11:39:45] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[11:39:59] <rotateq> That's the good thing when I'm on my own with cleaning the apartment. ^^
[11:42:09] * spiaggia is again allowed back into his office where he has his desktop computers.
[11:42:13] *** Quits: spiaggia (~user@2a01:cb19:150:3400:e98f:f392:7a54:9b4b) (Quit: ERC (IRC client for Emacs 26.3))
[11:51:57] *** Joins: shka (~herr@109.231.0.226)
[11:51:57] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[11:51:57] *** Joins: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[11:51:57] *** Joins: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105)
[11:51:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:51:57] *** Joins: nexeq (~nexeq@user/nexeq)
[11:51:57] *** Joins: aeth (~aeth@user/aeth)
[11:51:57] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[11:51:57] *** Joins: epony (~epony@user/epony)
[11:51:57] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[11:51:57] *** Joins: sepanko (~sepanko@user/sepanko)
[11:51:57] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[11:51:57] *** Joins: minion (~minion@common-lisp.net)
[11:51:57] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[11:51:57] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:51:57] *** Joins: lonjil (~quassel@user/lonjil)
[11:51:57] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[11:51:57] *** Joins: plexi (~orcabot@digital.sanctuary.org)
[11:51:57] *** Joins: nimiux_ (~nimiux@freeshell.de)
[11:51:57] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[11:51:57] *** Joins: gko (~user@user/gko)
[11:51:57] *** Joins: mala (~mala@user/malaclyps)
[11:51:57] *** Joins: vegai (vegai@kapsi.fi)
[11:51:57] *** Joins: Riviera (Riviera@user/riviera)
[11:51:57] *** Joins: dbotton (sid492350@id-492350.lymington.irccloud.com)
[11:51:57] *** Joins: Kabriel (~Kabriel@user/kabriel)
[11:51:57] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[11:51:57] *** Joins: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de)
[11:51:57] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[11:51:57] *** Joins: selwyn (~selwyn@user/selwyn)
[11:51:57] *** Joins: anddam (~anddam@user/anddam)
[11:51:57] *** Joins: copec (~copec@schrodbox.unaen.org)
[11:51:57] *** Joins: pedro-delfino (sid507296@id-507296.helmsley.irccloud.com)
[11:51:57] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[11:51:57] *** Joins: antoszka-r (~antoni@rozalia.antoszka.pl)
[11:51:57] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[11:51:57] *** Joins: empwilli (~empwilli@faui48e.informatik.uni-erlangen.de)
[11:51:57] *** Joins: drakonis (drakonis@user/drakonis)
[11:51:57] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[11:51:57] *** Joins: bldr (~bull@185.117.72.168)
[11:51:57] *** Joins: jfb4 (~jfb4@178.62.2.68)
[11:51:57] *** Joins: phoe (~phoe@user/phoe)
[11:51:57] *** Joins: Schnouki (e7aa4cfb39@user/schnouki)
[11:51:57] *** Joins: sgithens (sid10659@id-10659.helmsley.irccloud.com)
[11:51:57] *** Joins: ChanServ (ChanServ@services.libera.chat)
[11:51:57] *** molybdenum.libera.chat sets mode: +o ChanServ
[11:52:06] *** Quits: epony (~epony@user/epony) (Max SendQ exceeded)
[11:52:10] *** Joins: epony (~epony@user/epony)
[11:52:39] *** Joins: sts-q (~sts-q@212.53.219.246)
[12:51:52] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:15fa:c22e:b1fb:575a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:11:22] *** Joins: rain3 (~rain3___@2a02:2f09:d405:a600:7f3e:4e48:ca3c:8857)
[13:25:45] *** Joins: treflip (~user@user/treflip)
[13:28:41] *** Joins: random-nick (~random-ni@87.116.181.150)
[13:32:10] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:ede2:45ee:21e7:7941)
[13:56:22] *** Joins: artchad (~user@public-gprs230031.centertel.pl)
[14:32:24] *** Quits: rain3 (~rain3___@2a02:2f09:d405:a600:7f3e:4e48:ca3c:8857) (Remote host closed the connection)
[14:57:42] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[15:24:52] *** Quits: sts-q (~sts-q@212.53.219.246) (Quit:  )
[15:25:23] *** Joins: sts-q (~sts-q@212.53.219.246)
[16:22:45] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[17:23:10] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:30c6:2766:a3ba:f574)
[19:33:54] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:34:04] *** Quits: lisp123 (~lisp123@5.30.23.247) (Read error: Connection reset by peer)
[19:50:25] *** Quits: nexeq (~nexeq@user/nexeq) (Read error: Connection reset by peer)
[19:51:20] *** Joins: nexeq (~nexeq@user/nexeq)
[20:40:34] *** Quits: nexeq (~nexeq@user/nexeq) (Read error: Connection reset by peer)
[20:50:58] *** Joins: Oladon (~olad@98.43.81.226)
[20:52:53] *** Joins: nexeq (~nexeq@user/nexeq)
[21:14:34] *** Joins: makomo (~makomo@user/makomo)
[21:32:22] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:ede2:45ee:21e7:7941) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:38:49] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:41:48] <CodeBitCookie[m]> Hello Everyone!
[21:42:42] <aeth> hi CodeBitCookie[m]
[21:42:44] <CodeBitCookie[m]> I was following a YouTube tutorial on CFFI (https://www.youtube.com/watch?v=A5CnYlG7sc8&t=5842s&ab_channel=Baggers)
[21:43:20] <CodeBitCookie[m]> 1:10:00 He starts to talk more about CFFI
[21:47:27] <CodeBitCookie[m]> The problem I am facing, is that, by the time he reaches a point where he can run `load-image` 1:33:48
[21:49:53] <CodeBitCookie[m]> I get a `The alien function "SOIL_load_image" is undefined.`
[21:49:58] <CodeBitCookie[m]> error
[21:58:35] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[22:03:03] <CodeBitCookie[m]> http://ix.io/3LNi => cffi-play/src/main2.lisp
[22:03:18] <CodeBitCookie[m]> http://ix.io/3LNn => cffi-play/cffi-play.asd
[22:12:27] *** Quits: treflip (~user@user/treflip) (Quit: ERC (IRC client for Emacs 27.2))
[22:13:39] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:34:20] <random-nick> CodeBitCookie[m]: are you on the latest quicklisp dist? I upgraded sbcl and the old version of cffi had problems with it but the cffi version in the latest dist works
[22:34:53] <random-nick> the problems being not being able to call c functions from the REPL with that error you gave
[22:51:04] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[22:57:06] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:14:46] *** Joins: dre (~dre@2001:8003:c932:c301:50d2:4546:b9eb:e49)
[23:32:39] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
