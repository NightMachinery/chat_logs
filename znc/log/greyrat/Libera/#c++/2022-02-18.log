[00:00:42] <AliceMeows> I was under the impression that since template dtor is illegal then requires wouldn't be allowed in this context either and strangely all the compilers I've tested happily compiled it
[00:02:29] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[00:04:52] <PJBoy> yeah constrained dtors are explicitly allowed
[00:05:13] <PJBoy> https://en.cppreference.com/w/cpp/language/destructor
[00:05:31] <PJBoy> they get called "prospective destructors"
[00:05:39] <AliceMeows> Interesting
[00:06:49] *** Joins: llh (~llh@user/llh)
[00:09:18] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:09:49] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[00:12:13] *** Joins: reset (~reset@user/reset)
[00:15:25] <imMute> I never thought about whether dtors can be templated.  now that I do, it makes sense.
[00:15:37] <imMute> but a templated dtor and a dtor in a templated class are different things
[00:18:23] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1aa) (Quit: Leaving)
[00:20:22] *** Tobbi__ is now known as Tobbi
[00:20:37] *** Quits: crankslider (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[00:27:05] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:29:14] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[00:29:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[00:30:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:33:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:34:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:37:49] *** Quits: MatSharrow (~matthew@60.102.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[00:38:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:38:59] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[00:39:26] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:39:48] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 240 seconds)
[00:40:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:41:08] *** Joins: caramel (~caramel@user/caramel)
[00:41:27] *** Quits: proller (~p@2a02:6b8:b081:7212::1:22) (Ping timeout: 252 seconds)
[00:42:41] <GyrosGeier> hmm
[00:43:32] <GyrosGeier> is there a good pattern for a checked cast when converting to a smaller integer type during argument passing?
[00:44:28] <GyrosGeier> like, "store_short_value(get_unsigned_long_long_value());"
[00:44:43] <GyrosGeier> I get a warning that the cast may change the value, which is correct
[00:45:02] *** Joins: netpipe (~netpipe@user/netpipe)
[00:45:28] <GyrosGeier> now I'd like a runtime check that the cast does not change the value, when I don't know the argument type of store_short_value
[00:45:48] <imMute> you'd have to write such a check yourself
[00:47:13] <GyrosGeier> the generic approach would probably be something like template<typename T> struct checked_value { T value; template<typename U> operator U() const { U tmp = static_cast<U>(value); if(tmp != value) throw nullptr; return tmp; } };
[00:48:49] <Alipha> i would create a checked_cast templated function, not create a wrapper class
[00:50:27] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[00:50:40] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:51:28] <imMute> that's what I'd do too.  gets tricky if you "don't know" the argument type for the function you're calling (might be generic code?)
[00:51:52] *** Quits: Tokamak (~Tokamak@172.58.191.81) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:52:37] <GyrosGeier> yes
[00:52:58] <GyrosGeier> that's why I was thinking of a wrapper class with a templated conversion operator
[00:52:59] <PJBoy> I'd write a function template too
[00:53:19] <PJBoy> I'd probably use std::in_range rather than the static_cast + operator==
[00:53:34] <GyrosGeier> std::in_range is good
[00:55:24] <PJBoy> although I can't think of a case where the static_cast + operator== wouldn't work
[00:55:59] <PJBoy> well
[00:57:23] <PJBoy> geordi -w << (static_cast<signed>(x) == x); unsigned x = unsigned(INT_MAX) + 1;
[00:57:24] <geordi> true
[00:57:27] <PJBoy> I guess I can
[00:57:36] *** Joins: proller (~p@2a02:6b8:b081:5::1:20)
[00:57:49] <PJBoy> x doesn't fit in a signed int, but it's equal anyway
[01:02:33] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[01:02:42] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (Read error: Connection reset by peer)
[01:02:51] *** Joins: gendl (sid100083@id-100083.hampstead.irccloud.com)
[01:02:53] *** Joins: pulse (~pulse@user/pulse)
[01:03:24] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[01:04:12] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:04:12] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 240 seconds)
[01:04:36] *** Quits: merpnderp (sid16744@id-16744.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:04:36] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 240 seconds)
[01:05:00] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:05:36] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[01:05:37] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:05:43] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[01:06:08] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[01:06:14] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[01:06:15] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[01:07:30] <Autowired> i co_await
[01:08:23] *** PJBoy is now known as Guest4631
[01:08:23] *** Quits: Guest4631 (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[01:08:27] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:09:18] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:11:21] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a)
[01:16:47] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 250 seconds)
[01:17:21] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[01:21:16] *** Joins: abf (~abf@user/abf)
[01:22:27] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[01:29:03] *** Joins: hashfunc1316 (~user@162.254.115.155)
[01:30:11] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:30:19] *** Quits: hashfunc1316 (~user@162.254.115.155) (Remote host closed the connection)
[01:30:35] *** Joins: hashfunc107 (~user@162.254.115.155)
[01:30:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:31:48] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:33:14] *** Joins: synaps3 (~void@user/synaps3)
[01:34:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[01:35:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:37:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:40:12] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Ping timeout: 240 seconds)
[01:40:48] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Read error: Connection reset by peer)
[01:40:58] *** Joins: Tokamak (~Tokamak@172.58.191.81)
[01:41:12] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[01:41:45] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[01:42:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:46] *** ChanServ sets mode: +v npaperbot
[01:43:57] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[01:48:43] *** Joins: Markow (~Markow@176.122.215.103)
[01:50:57] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[01:52:42] *** Joins: _SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com)
[01:53:58] *** Quits: cosimone (~user@93-47-231-171.ip115.fastwebnet.it) (Quit: stay out of trouble you crazy kids, and don't hop on the NICE BOAT)
[01:54:42] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:55:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[01:58:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:00:08] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:00:37] *** Quits: magla (~gelignite@55d4275f.access.ecotel.net) (Quit: Stay safe!)
[02:02:07] *** Quits: hashfunc107 (~user@162.254.115.155) (Ping timeout: 256 seconds)
[02:02:14] *** Joins: troller (~p@80.240.216.69)
[02:02:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:02:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:02:51] *** Quits: proller (~p@2a02:6b8:b081:5::1:20) (Ping timeout: 252 seconds)
[02:03:24] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[02:04:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:04:41] *** Quits: netpipe (~netpipe@user/netpipe) (Ping timeout: 256 seconds)
[02:06:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:06:36] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[02:06:38] *** Joins: MatSharrow (~matthew@249.99.9.51.dyn.plus.net)
[02:08:36] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 240 seconds)
[02:08:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[02:08:57] *** Quits: MatSharrow (~matthew@249.99.9.51.dyn.plus.net) (Client Quit)
[02:10:54] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:c8c5:50fc:6367:1c36)
[02:11:51] <henistein> lets say I have "0x858898f93629000", and I want to convert it into hex, so I can compare hex values, how can I do that?
[02:12:17] *** Joins: Atque (~Atque@user/atque)
[02:12:26] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[02:13:06] <cbreak> already looks hex to me.
[02:16:35] <PJBoy> yeah
[02:17:18] <PJBoy> maybe base 36
[02:18:21] <henistein> I mean x = "\"0x858898f93629000\"", and I want to convert it into x = 0x858898f93629000
[02:18:44] <Oxyd> You mean you want to parse a number from a string?
[02:18:49] <henistein> yes
[02:19:12] *** Joins: troller (~p@2a02:6b8:b081:19::1:29)
[02:19:28] <cbreak> that number's almost at the limit for even uint64_t :/
[02:20:10] <cbreak> https://en.cppreference.com/w/cpp/string/byte/strtoimax
[02:20:24] <henistein> yeah, maybe it is better to use strings
[02:20:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[02:23:45] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[02:24:38] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:27:00] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[02:27:13] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:31:26] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[02:32:15] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[02:32:29] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[02:32:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[02:33:24] *** Quits: pizdets (~pizdets@183.182.110.81) (Ping timeout: 240 seconds)
[02:33:53] *** Joins: pizdets_ (~pizdets@183.182.110.76)
[02:36:17] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 240 seconds)
[02:36:23] *** Quits: Autowired (~autowired@dslb-094-218-237-093.094.218.pools.vodafone-ip.de) (Quit: Nettalk6 - www.ntalk.de)
[02:36:57] *** Quits: jsbach (~jsbach@2a01:c22:accf:9400:f89c:8bec:657d:22e8) (Ping timeout: 252 seconds)
[02:37:37] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[02:40:06] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[02:41:54] *** Quits: troller (~p@2a02:6b8:b081:19::1:29) (Ping timeout: 252 seconds)
[02:43:44] *** Quits: qazwsxedc (uid540567@id-540567.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:41] *** Quits: Oxyd (~oxyd@user/oxyd) (Ping timeout: 256 seconds)
[02:44:56] *** Quits: xq (~xq@user/xq) (Ping timeout: 245 seconds)
[02:46:45] *** Joins: pulse_ (~pulse@user/pulse)
[02:47:15] *** Quits: tachoknight (~textual@2600:1700:3060:3ee0:f467:fda7:b67f:3b6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:48:22] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[02:49:23] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:49:48] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[02:50:06] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:50:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:51:00] *** Joins: Oxyd (~oxyd@user/oxyd)
[02:52:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:53:42] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:55:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:55:12] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Remote host closed the connection)
[02:56:41] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[03:02:06] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:02:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:02:59] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[03:04:35] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 240 seconds)
[03:05:29] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[03:06:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:08:43] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[03:08:59] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[03:09:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[03:10:14] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[03:11:38] *** Joins: Betal (~Betal@user/betal)
[03:17:29] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:21:35] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:36:21] *** Quits: ville (~ville@user/ville) (Quit: ville)
[03:36:28] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:c8c5:50fc:6367:1c36) (Quit: Client closed)
[03:37:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[03:38:56] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[03:39:17] *** Joins: ville (~ville@user/ville)
[03:39:30] *** Joins: Betal (~Betal@user/betal)
[03:40:04] *** Joins: ferdna (~ferdna@user/ferdna)
[03:47:01] *** Quits: absentia (~absentia@user/absentia) (Quit: WeeChat 3.4)
[03:50:13] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:50:43] *** pulse_ is now known as pulse
[03:54:54] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[03:55:32] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:55:36] *** Quits: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[03:57:07] *** Joins: jplejacq1 (~jplejacq@68.71.169.160)
[03:58:14] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[03:58:34] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[03:59:09] *** Quits: jplejacq (~jplejacq@68.71.169.160) (Ping timeout: 256 seconds)
[03:59:16] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 272 seconds)
[03:59:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[04:03:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:04:28] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:05:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:06:52] *** Joins: fengdaolong (~fengdaolo@171.43.210.93)
[04:07:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:09:47] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:15:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a) (Ping timeout: 252 seconds)
[04:28:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[04:30:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:33:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[04:33:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:41:24] *** Quits: jplejacq1 (~jplejacq@68.71.169.160) (Ping timeout: 240 seconds)
[04:41:53] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:42:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:44:00] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:44:57] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:45:21] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:50:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:56:23] *** Quits: peoliye (~peoliye@205.251.233.176) (Ping timeout: 256 seconds)
[04:57:36] *** Joins: peoliye (~peoliye@54-240-198-33.amazon.com)
[04:58:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[04:58:26] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[04:59:36] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[05:04:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:07:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:09:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:19:53] *** Joins: wolfman2000 (~wolfman20@2600:1700:3211:4140:4585:1c5d:aacf:8266)
[05:20:45] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[05:20:51] *** Quits: wolfman2000 (~wolfman20@2600:1700:3211:4140:4585:1c5d:aacf:8266) (Client Quit)
[05:21:28] *** Joins: wolfman2000 (~wolfman20@2600:1700:3211:4140:4585:1c5d:aacf:8266)
[05:23:55] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc4-git-8b97cae-Pogorze-Karpackie-CUSTOM-KERNEL)
[05:25:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:29:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:40:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:40:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[05:42:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:49] *** ChanServ sets mode: +v npaperbot
[05:54:15] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 240 seconds)
[05:54:48] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[05:57:29] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[06:04:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:06:05] *** Joins: slidercrank (~slidercra@user/slidercrank)
[06:06:34] *** A_Dragon is now known as NotRegistered
[06:06:48] *** NotRegistered is now known as A_Dragon
[06:06:52] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[06:08:28] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:11:23] *** Quits: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca) (Quit: WeeChat 2.8)
[06:16:59] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[06:17:20] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[06:23:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:23:48] *** Quits: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com) (Ping timeout: 240 seconds)
[06:25:55] *** Joins: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com)
[06:31:33] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[06:32:54] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[06:36:10] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[06:40:35] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:41:35] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[06:44:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 272 seconds)
[06:48:35] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 256 seconds)
[06:49:49] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[07:01:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:01:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[07:05:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:07:16] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:08:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:08:34] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[07:10:41] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:12] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:19:58] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[07:20:07] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Client Quit)
[07:21:10] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[07:23:24] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[07:25:28] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[07:26:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:27:07] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:30:50] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-4424-fc06-167e-bc32.res6.spectrum.com) (Read error: Connection reset by peer)
[07:31:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:32:23] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[07:33:05] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[07:43:12] *** Quits: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:46:05] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[07:46:36] *** Quits: sreve (~quassel@p4ff4449e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:47:08] *** Joins: sreve (~quassel@p4ff44eec.dip0.t-ipconnect.de)
[07:48:51] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[07:49:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[07:51:24] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[07:52:26] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4cc1:9458:3703:5bc0:c1be:439a)
[08:00:20] *** Joins: hinata (~hinata@152.57.165.236)
[08:05:00] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[08:05:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:06:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[08:06:16] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 272 seconds)
[08:07:18] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[08:09:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[08:17:47] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[08:19:52] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:21:41] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[08:22:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[08:27:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[08:30:12] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:31:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[08:32:13] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:34:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[08:34:03] *** vinleod is now known as vdamewood
[08:38:37] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4cc1:9458:3703:5bc0:c1be:439a) (Ping timeout: 240 seconds)
[08:38:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:41:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[08:49:01] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:49:43] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4cc1:9458:65e4:1c3d:2d00:cc30)
[08:49:47] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:49:59] *** Quits: Cahaan (~Cahaan@user/cahaan) (Read error: Connection reset by peer)
[08:50:17] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:50:23] *** Joins: Cahaan (~Cahaan@user/cahaan)
[08:51:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:51:03] *** Joins: ed (~ed@115.132.140.246)
[08:51:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:52:18] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:52:43] *** Quits: AmR (~AmREiSa@156.199.14.65) (Quit: Konversation terminated!)
[08:52:46] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.117)
[08:53:38] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.117) (Max SendQ exceeded)
[08:54:07] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:55:19] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:55:53] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:57:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:57:28] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[09:00:44] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[09:05:34] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[09:06:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:10:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:12:00] *** Quits: peoliye (~peoliye@54-240-198-33.amazon.com) (Quit: Client closed)
[09:14:00] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:14:33] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:16:00] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[09:16:38] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[09:16:39] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:18:56] *** Joins: kolexar (~kolexar@user/kolexar)
[09:20:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[09:24:34] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[09:27:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:27:45] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[09:28:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[09:32:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:33:49] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[09:36:02] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[09:36:03] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Read error: Connection reset by peer)
[09:36:28] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[09:38:27] *** Joins: malloy (~jimery@116.30.220.175)
[09:39:08] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[09:39:40] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[09:40:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:41:33] *** Quits: niko3 (~mmk@198-200-74-246.cpe.distributel.net) (Quit: Leaving)
[09:42:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:47] *** ChanServ sets mode: +v npaperbot
[09:44:18] *** Quits: paulo (paulo@user/paulo/x-9032687) (Ping timeout: 252 seconds)
[09:45:33] *** Joins: paulo (paulo@user/paulo/x-9032687)
[09:53:10] *** Joins: Atque (~Atque@user/atque)
[09:53:48] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[09:55:47] *** Joins: malloy (~jimery@116.30.220.175)
[10:02:01] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[10:06:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:07:13] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:10:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:10:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[10:12:06] *** Joins: malloy (~jimery@116.30.220.175)
[10:12:36] *** Quits: deviantfero (~deviantfe@179.51.61.253) (Ping timeout: 240 seconds)
[10:12:41] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[10:14:28] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[10:14:34] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[10:19:41] *** Quits: synaps3 (~void@user/synaps3) (Quit: Leaving)
[10:21:09] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:30c6:5266:d9db:c38f)
[10:25:04] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[10:25:51] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[10:26:37] *** Quits: causative (~halberd@user/causative) (Ping timeout: 240 seconds)
[10:27:10] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[10:28:22] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[10:29:26] *** Joins: malloy (~jimery@116.30.220.175)
[10:32:36] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 240 seconds)
[10:34:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:35:04] *** Joins: Viewday113 (~Viewday@user/viewday)
[10:35:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:35:38] *** Viewday113 is now known as Viewday11
[10:36:02] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:36:54] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[10:40:37] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:42:29] *** Joins: vicfred (~vicfred@user/vicfred)
[10:42:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:43:41] *** Joins: vicfred_ (~vicfred@user/vicfred)
[10:44:01] *** Quits: vicfred_ (~vicfred@user/vicfred) (Remote host closed the connection)
[10:46:52] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[10:47:09] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[10:47:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[10:47:49] *** Joins: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se)
[10:48:12] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:53:00] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:53:40] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[10:53:51] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[10:55:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:55:49] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[10:57:45] *** Joins: andreasbuhr (~quassel@p549dbc15.dip0.t-ipconnect.de)
[11:02:58] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:06:08] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[11:07:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:10:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:13:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[11:13:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[11:18:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:23:38] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[11:24:26] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[11:26:27] *** Joins: BluesBoy (~bboy@user/bluesboy)
[11:28:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:29:47] *** Joins: rcoote (~rcoote@2a02:908:690:a140:b528:b260:6e74:a0c4)
[11:31:18] *** gentooclimax is now known as climax
[11:31:55] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[11:32:27] *** climax is now known as gentooclimax
[11:32:37] *** Joins: jsbach (~jsbach@2a01:c22:349e:1800:2c43:5ba2:d3cf:5429)
[11:33:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:37:17] *** Joins: rendar (~rendar@user/rendar)
[11:38:59] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[11:39:03] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 250 seconds)
[11:39:30] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:39:51] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:40:17] *** Joins: NovumDXW (~NovumDXW@2409:8a28:361c:d160:f997:1e25:38ff:d600)
[11:42:27] *** Joins: Major_Biscuit (~MajorBisc@c-001-017-054.client.tudelft.eduvpn.nl)
[11:42:37] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[11:44:55] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[11:45:03] *** Joins: sord937_ (~sord937@gateway/tor-sasl/sord937)
[11:45:13] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:45:30] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[11:46:40] *** Quits: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Ping timeout: 272 seconds)
[11:49:57] *** Joins: Furai (~Furai@furai.pl)
[11:51:21] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:52:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:52:41] *** Joins: fldme (~fldme@178.49.152.151)
[11:56:02] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[11:56:21] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[11:58:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:58:39] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[11:58:57] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[11:59:13] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[12:02:21] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:02:50] *** Joins: Markow (~Markow@176.122.215.103)
[12:03:46] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[12:04:03] *** Quits: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu) (Quit: leaving)
[12:04:18] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[12:04:39] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:07:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:07:34] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:11:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:12:48] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:13:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:13:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:13:51] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Ping timeout: 256 seconds)
[12:13:51] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[12:14:36] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[12:15:04] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[12:15:33] *** Quits: beagles (~beagles@142.162.188.116) (Ping timeout: 256 seconds)
[12:15:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[12:15:56] *** Joins: beagles (~beagles@142.162.188.116)
[12:19:31] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[12:19:48] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:24:07] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:24:27] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:33:30] *** Quits: ed (~ed@115.132.140.246) (Quit: Konversation terminated!)
[12:33:41] *** Joins: letto2 (~letto@188.26.152.131)
[12:33:48] *** Quits: letto (~letto@188.26.157.245) (Ping timeout: 240 seconds)
[12:38:38] *** Joins: ivii (~ivan@user/ivii)
[12:40:38] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[12:41:05] *** Joins: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[12:43:45] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc4-git-8b97cae-Pogorze-Karpackie-CUSTOM-KERNEL)
[12:48:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[12:49:46] *** Quits: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu) (Quit: leaving)
[12:49:48] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[12:50:01] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[12:54:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:55:19] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[13:01:00] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:03:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:06:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:08:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:10:28] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:11:51] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:13:20] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4cc1:9458:65e4:1c3d:2d00:cc30) (Quit: Leaving)
[13:13:40] *** Joins: Burgundy (~NA@86.121.143.206)
[13:19:16] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:24:46] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:26:08] *** Joins: HrblVd (~HrblVd@athedsl-361286.home.otenet.gr)
[13:27:19] *** Parts: HrblVd (~HrblVd@athedsl-361286.home.otenet.gr) ()
[13:28:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:30:09] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:32:11] *** Joins: theArthurDent (~user@user/theArthurDent)
[13:32:25] *** Quits: arch-angel (~quassel@user/arch-angel) (Remote host closed the connection)
[13:33:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:34:01] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[13:38:00] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[13:38:14] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[13:38:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:39:51] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:40:49] *** Joins: furrymcgee (~devuan@cgn-89-1-211-93.nc.de)
[13:42:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:48] *** ChanServ sets mode: +v npaperbot
[13:43:25] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: scjg (~scjgmatri@2001:470:69fc:105::f5d6) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: wielding (~wielding@user/wielding) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: writeback[m] (~writeback@2001:470:69fc:105::1:6118) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: tenbitcomb[m] (~tenbitcom@2001:470:69fc:105::1:a8da) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: Bridge terminating on SIGTERM)
[13:43:31] *** Quits: DidgyNilsipus[m] (~didgymatr@2001:470:69fc:105::1:c193) (Quit: Bridge terminating on SIGTERM)
[13:44:05] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4cc1:9458:186a:b2fe:a6df:b36f)
[13:44:36] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:46:29] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[13:53:50] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[13:55:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:56:11] *** Joins: scjg (~scjgmatri@2001:470:69fc:105::f5d6)
[13:56:11] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:56:11] *** Joins: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21)
[13:56:11] *** Joins: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482)
[13:56:11] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[13:56:11] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[13:56:11] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[13:56:11] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[13:56:11] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[13:56:11] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[13:56:11] *** Joins: wielding (~wielding@user/wielding)
[13:56:23] *** Joins: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f)
[13:56:23] *** Joins: writeback[m] (~writeback@2001:470:69fc:105::1:6118)
[13:56:23] *** Joins: DidgyNilsipus[m] (~didgymatr@2001:470:69fc:105::1:c193)
[13:56:24] *** Joins: tenbitcomb[m] (~tenbitcom@2001:470:69fc:105::1:a8da)
[13:56:25] *** Joins: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc)
[13:57:33] *** Joins: arch-angel (~quassel@user/arch-angel)
[14:00:06] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[14:01:40] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Read error: Connection reset by peer)
[14:03:56] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[14:06:01] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[14:06:49] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:07:24] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[14:08:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:10:08] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[14:10:50] <AliceMeows> https://godbolt.org/z/4ax4jjvb5 hopefully this will satisfy everyone
[14:11:02] <AliceMeows> It works with that darn inout_ptr too now
[14:12:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:12:57] *** Joins: HvszrStykp (~X@81.171.62.82)
[14:13:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:252f:1c34:e1bf:7de2)
[14:16:01] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:16:52] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:21:00] *** Joins: evangeline (~Eleanor@APN-123-243-233-gprs.simobil.net)
[14:23:33] *** Quits: malloy (~jimery@116.30.220.175) (Quit: WeeChat 3.0)
[14:24:55] *** Joins: proller (~p@2a02:6b8:0:40c:e2ba:e91a:e7a4:474e)
[14:28:38] *** Quits: hinata (~hinata@152.57.165.236) (Quit: Leaving)
[14:30:33] <ville> invest in some new lines. i hear chicks dig em
[14:30:56] <AliceMeows> Sorry, I'm into guys lmao
[14:31:52] <ville> doesn't change the facts
[14:35:03] *** Quits: fengdaolong (~fengdaolo@171.43.210.93) (Quit: WeeChat 2.8)
[14:35:47] *** Joins: Guest3915 (~Guest39@155.190.35.5)
[14:35:56] <AliceMeows> You're probably right though
[14:38:50] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[14:42:06] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 272 seconds)
[14:42:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:43:10] <AliceMeows> Any other complaints about it? can I finally ship it?
[14:43:41] <Guest3915> Hello Cpp comunity
[14:43:45] <Guest3915> Hello Cpp community
[14:43:46] <Guest3915> I would like to change the type of container allocator at compile time
[14:43:46] <Guest3915> for the moment am trying to do that for a vector...
[14:43:47] <Guest3915> am using the following approach https://pastebin.com/Uzz1iRQC
[14:43:47] <Guest3915> if the type is vector, it works.
[14:43:48] <Guest3915> however, when the type is "unsigned char", it throws the following compilation error:
[14:43:48] <Guest3915> https://pasteboard.co/WTfP3iLPIx7p.png
[14:43:49] <Guest3915> 93:140: error: â€˜unsigned charâ€™ is not a class, struct, or union type
[14:43:49] <Guest3915> Â  Â typedef typename std::conditional<is_vector, ara::core::Vector<typename T::value_type, std::allocator<typename T::value_type>>, T>::type type;
[14:43:50] <Guest3915> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ^~~~
[14:43:52] <AliceMeows> Oh god
[14:43:56] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:45:06] *** rwb is now known as rb
[14:45:34] <PJBoy> !testcase
[14:45:35] <nolyc> A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[14:50:00] <Guest3915> Oh I see
[14:50:02] *** Quits: Guest3915 (~Guest39@155.190.35.5) (Quit: Ping timeout (120 seconds))
[14:57:35] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[14:57:47] *** Joins: Guest3981 (~Guest39@155.190.35.5)
[14:59:18] <Guest3981> Here we go https://wandbox.org/permlink/T7Zv7ssaNBcYECBc
[14:59:44] <Guest3981> what i expect normally in case of uint8_t, is that:
[14:59:51] <Guest3981> std::conditional will consider the the definition for its branch "False"
[14:59:58] <Guest3981> but it still somehow interpreting the type of the branch "True"
[15:03:27] *** Joins: Atque (~Atque@user/atque)
[15:04:26] <AliceMeows> Guest3981: templates require the expressions to always be legal
[15:05:36] <Guest3981> yes and it's the case of of uint8_t, since it is not a container
[15:06:06] <Guest3981> otherwise where the teplate looks illegal
[15:06:16] *** Joins: hinata (~hinata@2409:4042:2c17:28ca:ec08:fae2:de0d:5276)
[15:07:02] <AliceMeows> concepts would make it a lot easier
[15:07:27] <Guest3981> yes... however, idont have the right to use c++20
[15:07:38] <AliceMeows> That is going to hurt then
[15:07:49] <Guest3981> yes let it hurt
[15:08:12] <Guest3981> just any suggestion to make it work with c++1x
[15:08:32] <PJBoy> C++17?
[15:08:34] <AliceMeows> It could be done, it just wont be pretty or easy to read
[15:08:45] <PJBoy> it wouldn't be too bad in C++17
[15:09:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:09:14] <Guest3981> i know ... this is how our toolchian is
[15:09:26] <Guest3981> guys... hold one
[15:09:29] <Guest3981> be back in ~90 min
[15:09:33] <Shell> lol
[15:09:57] *** Quits: Guest3981 (~Guest39@155.190.35.5) (Quit: Client closed)
[15:10:12] *** Quits: NovumDXW (~NovumDXW@2409:8a28:361c:d160:f997:1e25:38ff:d600) (Ping timeout: 240 seconds)
[15:10:58] <PJBoy> C++17 https://wandbox.org/permlink/vDzzR1zUgloMhF7v
[15:11:32] <PJBoy> and prior to C++17 you'd make a partial specialisation thing
[15:11:34] <AliceMeows> You're fast, I was going to do it with templates alone
[15:12:17] <PJBoy> :)
[15:12:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[15:12:54] <PJBoy> auto return type + constexpr-if is a great combo
[15:17:00] *** Quits: artok (~azo@mobile-access-b0486a-201.dhcp.inet.fi) (Ping timeout: 240 seconds)
[15:17:27] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:24:27] *** Joins: blacked (~blacked@user/blacked)
[15:25:05] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 256 seconds)
[15:27:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:27:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:31:09] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[15:31:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[15:32:33] *** Joins: NovumDXW (~NovumDXW@2409:8a28:361c:d160:b5c2:c146:3d16:3e5f)
[15:35:56] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[15:39:13] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:41:07] *** Joins: blacked61 (~blacked@user/blacked)
[15:41:46] *** Joins: P_Dumbledore (~Prof_Dumb@2409:4042:4d86:f218:3473:e923:30f0:4ce9)
[15:42:00] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:43:19] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[15:43:51] *** Joins: blacked79 (~blacked@user/blacked)
[15:44:12] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4cc1:9458:186a:b2fe:a6df:b36f) (Ping timeout: 240 seconds)
[15:44:14] *** Parts: jplejacq (~jplejacq@24.224.90.176) (Leaving.)
[15:45:13] *** Quits: blacked (~blacked@user/blacked) (Ping timeout: 256 seconds)
[15:47:08] *** Joins: absentia (~absentia@user/absentia)
[15:47:29] *** Quits: blacked61 (~blacked@user/blacked) (Ping timeout: 256 seconds)
[15:48:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:51:46] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:57:14] *** Joins: blacked (~blacked@user/blacked)
[16:00:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:01:39] *** Quits: blacked79 (~blacked@user/blacked) (Ping timeout: 256 seconds)
[16:07:45] *** Joins: Leone (~Leo@108.175.224.215)
[16:08:15] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[16:09:06] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[16:09:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:12:40] <AliceMeows> https://wandbox.org/permlink/TJfUHFbKXKILAEGo
[16:13:05] <AliceMeows> An hour late but who cares? it works
[16:13:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:17:34] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[16:20:01] *** Joins: epony (epony@user/epony)
[16:22:05] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[16:23:03] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[16:23:03] *** Joins: Sadale (~Sadale@user/sadale)
[16:24:51] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:25:05] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:26:34] *** Joins: blacked8 (~blacked@user/blacked)
[16:30:33] *** Quits: blacked (~blacked@user/blacked) (Ping timeout: 256 seconds)
[16:36:22] *** Joins: Guest3998 (~Guest39@155.190.35.5)
[16:37:06] <Guest3998> Hello Cpp World
[16:37:36] <AliceMeows> Guest3998: https://wandbox.org/permlink/TJfUHFbKXKILAEGo here is your solution
[16:39:13] <AliceMeows> Its compatible with c++11 as well if you need it badly enough
[16:39:42] <Guest3998> Great AliceMeows... let me check it out
[16:39:46] *** Quits: P_Dumbledore (~Prof_Dumb@2409:4042:4d86:f218:3473:e923:30f0:4ce9) (Quit: Leaving)
[16:57:52] *** Quits: hinata (~hinata@2409:4042:2c17:28ca:ec08:fae2:de0d:5276) (Quit: Leaving)
[16:58:10] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:3933:29:5fe1:cb6b) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:59:28] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[17:00:53] *** Joins: frost (~frost@user/frost)
[17:06:15] *** Joins: drbeco (~beco@2804:351c:dd03:4500:a332:d74e:8d17:e625)
[17:06:34] *** Joins: sheb (~sheb@31.223.228.71)
[17:07:18] *** Quits: sheb (~sheb@31.223.228.71) (Remote host closed the connection)
[17:07:25] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 240 seconds)
[17:08:40] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:08:48] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:08:59] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:09:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc)
[17:09:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc) (Changing host)
[17:09:00] *** Joins: skapata (~Skapata@user/skapata)
[17:09:23] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[17:10:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:13:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:14:07] <Guest3998> AliceMeows: thanks a lot for your suggestion...meanwhile I haveÂ  2 comments:
[17:14:55] <Guest3998> 1) why the detail::get_type would work whereas the std::conditional would not
[17:15:32] <AliceMeows> Because the compiler chooses which get_type to use which is why it works
[17:16:44] <Guest3998> then what happened in case of std::condtional?Â  normally the "is_vector" should give hint which typdef to use..
[17:16:47] <Guest3998> right ?
[17:16:57] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:3d23:94e0:3c0f:8df3)
[17:17:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:18:04] <AliceMeows> conditional_t is a single expression
[17:18:27] <AliceMeows> So it must be legal in the context its used, it wont short circuit like concepts do
[17:19:47] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:20:18] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[17:23:34] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[17:23:34] *** Quits: evangeline (~Eleanor@APN-123-243-233-gprs.simobil.net) (Read error: Connection reset by peer)
[17:23:47] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[17:24:05] <Guest3998> I seeÂ (y)
[17:24:59] *** Joins: xkuru (~xkuru@user/xkuru)
[17:25:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:26:48] <Guest3998> now comment 2): I'm trying to generalize for all containers. Means i'm trying to change container's allocator at compile time, whether it is vector, list or map
[17:27:27] <Guest3998> do you have an idea how to do that ? or could your solution be easily expended to cover that ?
[17:29:26] <AliceMeows> It should be
[17:31:09] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:31:44] <Guest3998> in the get_type struct am trying to put:
[17:31:44] <Guest3998> typedef T<typename T::value_type, std::allocator<typename T::value_type>> type;
[17:33:31] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[17:34:19] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[17:35:32] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:36:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[17:38:57] <Guest3998> seems T cannot replace std::vector
[17:40:00] <Guest3998> AliceMeows: do you know how can i act on the the type "T" inside the struct temple
[17:40:15] <AliceMeows> act on the type?
[17:40:21] *** Joins: evangeline (~Eleanor@178.79.105.181)
[17:40:22] <Guest3998> and by act i mean change the allocator type
[17:40:47] <Guest3998> instead of typedef ara::core::Vector<typename T::value_type, std::allocator<typename T::value_type>> type;
[17:40:52] <Guest3998> do something like
[17:41:06] <Guest3998> typedef typeid (T) <typename T::value_type, std::allocator<typename T::value_type>> type;
[17:41:26] <Guest3998> but even typeid doesn't work
[17:41:50] <AliceMeows> typeid cannot be used in that context
[17:42:24] <Guest3998> great... thne how can i refer to T inside the struct template
[17:42:30] *** Quits: blacked8 (~blacked@user/blacked) (Quit: Client closed)
[17:42:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:42:46] <AliceMeows> Just use it as T directly or decltype if you need to extract a type
[17:42:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:48] *** ChanServ sets mode: +v npaperbot
[17:44:35] <Guest3998> AliceMeows: this is what i tried earlier and got this error https://wandbox.org/permlink/JbUaxRV5yOVPZR0u
[17:44:41] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[17:45:10] <PJBoy> well the error makes sense
[17:45:14] <PJBoy> T is indeed not a template
[17:45:47] <Guest3998> but am referring to it as the original type inside the template
[17:45:59] *** Joins: llh (~llh@user/llh)
[17:46:11] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[17:46:27] <PJBoy> and types aren't templates
[17:46:41] <PJBoy> so T<...> where T is a type doesn't mean anything
[17:47:09] <PJBoy> if T where vector<T> then it would be vector<T><...>
[17:47:12] <PJBoy> *were
[17:47:36] <Guest3998> oh I seeÂ (y)
[17:48:41] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 250 seconds)
[17:49:20] <PJBoy> making a template that takes a container and changes its allocator is possible
[17:49:32] <PJBoy> but not so trivial
[17:49:32] <AliceMeows> template template says hello
[17:50:02] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[17:50:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:50:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:50:50] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[17:51:42] *** Joins: blacked (~blacked@user/blacked)
[17:52:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:52:59] *** Joins: teepee (~teepee@openscad/teepee)
[17:54:59] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:56:42] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:57:14] <AliceMeows> https://wandbox.org/permlink/TJfUHFbKXKILAEGo c++11 compatible
[17:57:48] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Ping timeout: 272 seconds)
[17:57:57] *** Joins: deviantfero (~deviantfe@179.51.61.253)
[18:01:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:01:20] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[18:02:41] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[18:06:26] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:09:08] *** Quits: NovumDXW (~NovumDXW@2409:8a28:361c:d160:b5c2:c146:3d16:3e5f) (Read error: Connection reset by peer)
[18:10:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:12:06] *** Quits: Rynn (rynn@gateway/vpn/protonvpn/rynn) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:12:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:13:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:23:36] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:23:46] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[18:24:55] *** Quits: luizfrds (~Luiz@152.250.243.147) (Quit: Leaving)
[18:25:39] <Guest3998> AliceMeows: I think the link you posted looks quite the same as the old one
[18:26:03] <AliceMeows> Except its fully c++11 compatible now
[18:26:10] <AliceMeows> I've replaced void_t
[18:28:25] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[18:28:53] <Guest3998> really.. because i still see std::void_t
[18:29:30] <AliceMeows> Oh oops, wrong link haha
[18:30:07] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:30:49] <AliceMeows> https://wandbox.org/permlink/UltgLt6vue2XTCkA
[18:30:50] <AliceMeows> There
[18:35:52] *** Joins: xq (~xq@user/xq)
[18:37:46] <Guest3998> AliceMeows for both of AliceMeowsr solutions if i compare "is_container" with "get_type" struct i get the following headache:
[18:37:47] <Guest3998> 1) For the "get_type" struct it much straightforward. Based on the Boolean argument, the right specialization is going to be selected
[18:37:47] <Guest3998> 2) However for "is_container" stuct, the second template argument is going to be always "void". So how the compiler is able to select the right specialization?
[18:38:23] <Guest3998> the headache in 2) happens for quite both solution
[18:38:32] <AliceMeows> That is compiler magic
[18:38:55] <AliceMeows> The specialized version of get_type is selected regardless of the void() hack
[18:39:44] <Guest3998> but what about "is_container" struct? how the compiler will select the right spec ?
[18:39:48] *** Joins: ed (~ed@2404:160:181:9993:57fb:98d:9c92:2168)
[18:40:10] *** Joins: NEYi (~NEYi@109.251.216.38)
[18:40:22] <Guest3998> the second argument is always void, whether the type is conteiner or not ?Â =$
[18:41:22] <AliceMeows> Yes the void trick doesn't actually matter in and of itself, its only to guide the compiler to choose the correct version
[18:42:25] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:43:32] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:45:22] <Guest3998> then in case of "is_container" base on what the compiler will select the right version? it is because theÂ  decltype(std::declval<T>().data()),
[18:45:23] <Guest3998> Â  Â  Â  Â  Â decltype(std::declval<T>().size()) will fail in case the type in not a container? if yes, thne what prevent the compiler from failing/reporting error in thing case ?
[18:46:17] <AliceMeows> There is no difference between void_t way and void() with decltype
[18:49:48] <Guest3998> ok good! could make the example generic for all containers ,i mean no only vectors
[18:50:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:50:27] <AliceMeows> I'd assume you could write something like this without concepts but it wont be fun
[18:51:27] *** Parts: blacked (~blacked@user/blacked) ()
[18:51:54] <Guest3998> i don't care any more about fun, from the day i start dealing with c++ templating...
[18:51:57] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:53:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[18:54:24] <AliceMeows> Such is the nature of C++ and its horrible templates which are nothing but pain
[18:54:28] <Alipha> !give Guest3998 sfinae
[18:54:29] <nolyc> Guest3998: Substitution Failure Is Not An Error. See http://en.wikipedia.org/wiki/SFINAE
[18:55:13] *** Joins: Guest5883 (~Guest@host110.181-14-187.telecom.net.ar)
[18:56:44] *** Joins: niko3 (~mmk@198-200-74-246.cpe.distributel.net)
[19:00:36] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[19:02:38] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[19:04:49] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.117)
[19:07:06] *** Quits: rcoote (~rcoote@2a02:908:690:a140:b528:b260:6e74:a0c4) (Quit: Konversation terminated!)
[19:11:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:12:03] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 256 seconds)
[19:13:13] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:6dd8:7cde:f63:8efb)
[19:14:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:19:34] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[19:21:55] *** Joins: pulse (~pulse@user/pulse)
[19:27:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:28:38] <Guest3998> guys, any suggestion to make this: https://wandbox.org/permlink/TJfUHFbKXKILAEGo works for all containers (or at least std::vector+list+map)
[19:28:47] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[19:28:51] <Guest3998> am running out of solutions
[19:29:29] <Guest3998> the main gaol is to be able to edit the type's allocator in case it is vector, list or map
[19:34:43] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a)
[19:34:43] *** Quits: fldme (~fldme@178.49.152.151) (Ping timeout: 256 seconds)
[19:35:53] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:36:57] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:42:44] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[19:43:15] *** Joins: Cienisty (Cienisty@user/cienisty)
[19:43:35] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[19:52:20] *** Quits: unlink2 (~unlink@p200300ebcf12830011a7c6fae7585651.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:53:12] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:55:05] *** Quits: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[19:55:46] *** Joins: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz)
[19:56:47] <Alipha> Guest3998: if you're fine with specifying all the container types you're able to work with, this seems like the simpler solution: https://wandbox.org/permlink/GMNbT5C9Y1JeDQay
[19:58:23] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.117) (Remote host closed the connection)
[20:00:18] <Eelis> Guest3998: to make any of this mean anything, you'd have to start by stating your goals. because if we don't know your goals, we cannot assess the merits of your current "solution"
[20:01:16] *** Joins: teut (~teut@122.161.83.81)
[20:01:16] <Eelis> "to edit the type's allocator" doesn't seem very clear
[20:02:09] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.117)
[20:03:25] <Guest3998> well... i mean to change for example a vector (list or map) at compile time
[20:03:36] <Guest3998> well... i mean to change for example a vector allocator (list or map) at compile time
[20:03:46] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:03:53] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[20:04:40] <Eelis> so given vector<T> (which is vector<T, std::allocator<T>>) you want to make std::vector<T, my_alloc<T>> ?
[20:04:40] <Guest3998> change std::vector<uint8_t, std::allocator<uint8_t>>Â  Â  toÂ  Â std::vector<uint8_t, my::poor::allocator<uint8_t>>
[20:04:52] <Guest3998> exactly
[20:05:00] <Eelis> ok, then what's the deal with "CheckType" what do you want to check?
[20:05:06] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 272 seconds)
[20:05:31] <Eelis> instead, just have a template class that you partially specialize for the containers you care about
[20:05:33] <Alipha> "CheckType" just seems like it's poorly named. should be "ReplacedAllocatorType" or something
[20:05:37] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[20:05:51] <Alipha> Eelis: like my example? :-)
[20:06:10] <Eelis> "is_container" is misguided because there is nothing inherent about containers that lets you change allocators
[20:06:29] <Eelis> changing allocators is something you can only do if you recognize specific known containers
[20:07:34] <Eelis> there *is* such a thing as "allocator-aware container". perhaps that's what you're after?
[20:07:37] <Guest3998> Alipha: Thanks for your post... however, you didn't get what i need
[20:08:08] <Alipha> my initial thought, in order to do it completely generically, was to break apart the T into Cont<Args...> and then iterate through Args, checking to see if it's std::allocator<U>, and replacing it with my_alloc<U>, but that's a lot more work and i didn't feel motivated to do it
[20:08:09] <Eelis> http://eel.is/c++draft/container.alloc.reqmts
[20:08:51] <Eelis> i'm not sure the stdlib has a named concept for allocator-aware containers though
[20:09:52] <Alipha> Guest3998: how so? replace all cases of std::allocator with my::poor::allocator in my code and it'll do what you want.
[20:10:29] <Guest3998> guys ill be back in ~20 min
[20:11:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:13:58] *** Quits: deviantfero (~deviantfe@179.51.61.253) (Ping timeout: 272 seconds)
[20:14:01] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:15:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:15:16] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:15:28] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:15:40] *** Joins: deviantfero (~deviantfe@179.51.61.253)
[20:19:23] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[20:20:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:24:16] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:24:21] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 256 seconds)
[20:24:33] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[20:24:44] *** Quits: beagles (~beagles@142.162.188.116) (Ping timeout: 272 seconds)
[20:24:50] *** Joins: useretail (~useretail@185.132.19.151)
[20:25:25] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[20:30:29] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[20:31:19] *** Joins: the_lanetly_052_ (~the_lanet@194.135.166.105)
[20:33:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.117) (Ping timeout: 256 seconds)
[20:35:12] *** Joins: DeaDSouL[m] (~deadsoulm@2001:470:69fc:105::1:c0de)
[20:37:00] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 240 seconds)
[20:37:59] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[20:40:34] *** Quits: deviantfero (~deviantfe@179.51.61.253) (Ping timeout: 272 seconds)
[20:42:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:44:55] *** Quits: ville (~ville@user/ville) (Quit: ville)
[20:46:23] <Guest3998> Hi Guys, Eelis, Alipha, AliceMeows! My useÂ case is the following:
[20:46:23] <Guest3998> Suppose I have a: <typename T> class Event {.../*some ugly, weird things happen*/...}
[20:46:24] <Guest3998> Inside Event, I should consider the case when T is a container (vector, list map,...). Then, based on some weird conditions, i should decide if i am going to store my container in the heap or in a shared memory.Â In case of shared memory, i should change the container'sÂ allocator from std::allocator to my::poor::allocator.Â Thanks to AliceMeows, i
[20:46:24] <Guest3998> was able to integrateÂ one solution that covers only vector types (see https://wandbox.org/permlink/TJfUHFbKXKILAEGo).Â My next hop, is to generalize the same solution or find a better one that fits for all kind of containers (vectors, lists, maps, etc)
[20:46:56] <Guest3998> Eelis: I hope now the goal is a clear
[20:48:42] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:48:58] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[20:49:15] *** Joins: ville (~ville@user/ville)
[20:53:11] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[20:53:18] *** Quits: proller (~p@2a02:6b8:0:40c:e2ba:e91a:e7a4:474e) (Ping timeout: 250 seconds)
[20:54:28] <Alipha> Guest3998: why don't you think what i gave you does that for std::vector, std::list, and std::map?
[20:54:38] *** Quits: theArthurDent (~user@user/theArthurDent) (Remote host closed the connection)
[20:54:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[20:58:33] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:58:46] <Guest3998> because i don't have clue how to still apply allocator transformation based on your example
[20:58:56] <Guest3998> but one moment
[21:01:54] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:02:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:03:27] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[21:03:29] <Guest3998> this is https://wandbox.org/permlink/gxbkt4uS65IRlwNm
[21:04:22] <Guest3998> the solution for vector types, but with meaningful naming (hope)
[21:04:45] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:04:53] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:05:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[21:05:21] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Read error: Connection reset by peer)
[21:05:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[21:05:58] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:06:20] *** Quits: furrymcgee (~devuan@cgn-89-1-211-93.nc.de) (Quit: leaving)
[21:07:26] *** Quits: Guest3998 (~Guest39@155.190.35.5) (Quit: Client closed)
[21:07:55] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:10:34] <Alipha> if he comes back: https://wandbox.org/permlink/WbYOaPWgwMoIf5sv
[21:12:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:12:55] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:13:11] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-049.89.204.138.pool.telefonica.de)
[21:15:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:15:35] *** Quits: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:16:29] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Remote host closed the connection)
[21:17:33] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:19:00] *** Joins: beagles (~beagles@47.55.222.129)
[21:21:53] *** Joins: AmR (~AmREiSa@156.199.14.65)
[21:26:44] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:27:14] *** Joins: peoliye (~peoliye@205.251.233.52)
[21:41:33] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[21:42:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:48] *** ChanServ sets mode: +v npaperbot
[21:46:22] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:47:43] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 272 seconds)
[21:48:03] *** Joins: Sadale (~Sadale@user/sadale)
[21:48:43] *** Quits: Major_Biscuit (~MajorBisc@c-001-017-054.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[21:53:00] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[21:56:29] *** Joins: deviantfero (~deviantfe@179.51.61.253)
[22:00:44] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[22:01:19] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:04:04] *** Joins: quartz (~quartz@user/quartz)
[22:04:14] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[22:05:42] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:12:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:12:41] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[22:13:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[22:13:54] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[22:16:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:17:34] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[22:18:19] *** Joins: Perry (~perry@coffee-break.at)
[22:23:40] *** Quits: Memory (~user_name@user/memory) (Remote host closed the connection)
[22:24:07] <AliceMeows> Can you reinterpret_cast builtin type to itself? from my understanding it is legal but msvc rejects it
[22:27:06] *** Quits: sord937_ (~sord937@gateway/tor-sasl/sord937) (Quit: sord937_)
[22:30:12] *** Joins: HvszrStykp (~X@81.171.62.82)
[22:30:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[22:30:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[22:32:26] <Alipha> i guess the generic solution was even simpler: https://wandbox.org/permlink/Njht0kCYjDw1P8D1
[22:32:26] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (Read error: Connection reset by peer)
[22:34:15] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[22:36:13] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:39:02] <Alipha>  { int x = reinterpret_cast<int>(3); } // AliceMeows, works fine. Test case?
[22:39:03] <geordi>  
[22:40:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Remote host closed the connection)
[22:41:21] <AliceMeows> https://godbolt.org/z/rzszdq7MM
[22:42:08] <AliceMeows> msvc rejects it while gcc and clang accept it
[22:43:19] *** Joins: linext (~linext@pool-100-1-124-107.nwrknj.fios.verizon.net)
[22:44:12] *** Quits: linext_ (~linext@pool-100-1-124-107.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[22:44:25] <imMute> wow, that MSVC error reminds me of the clang one where it tells you exactly where the missing semicolon is.
[22:45:27] <AliceMeows> Another thing I don't know if its legal or not is this https://godbolt.org/z/avEo48TGG
[22:45:35] <AliceMeows> gcc and clang reject is while msvc accepts it
[22:47:52] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:48:38] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[22:49:19] *** Quits: Guest5883 (~Guest@host110.181-14-187.telecom.net.ar) (Remote host closed the connection)
[22:51:02] *** Quits: linext (~linext@pool-100-1-124-107.nwrknj.fios.verizon.net) (Ping timeout: 272 seconds)
[22:56:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[22:59:23] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:01:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[23:01:43] <Alipha> AliceMeows: seems msvc is incorrect? https://eel.is/c++draft/expr.reinterpret.cast#2
[23:02:14] <AliceMeows> That's what I thought
[23:02:19] *** Joins: Markow (~Markow@176.122.215.103)
[23:02:23] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.105) (Remote host closed the connection)
[23:03:02] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:03:14] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Read error: Connection reset by peer)
[23:03:32] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[23:05:02] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:05:04] <Alipha> oddly it doesn't reject `reinterpret_cast<int*>(new int);`
[23:06:15] *** Joins: teepee (~teepee@openscad/teepee)
[23:08:10] *** Joins: DavidMilestone (~DavidMile@182.64.13.254)
[23:13:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:13:49] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:16:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:21:41] *** Joins: noarb- (~noarb@user/noarb)
[23:21:54] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[23:26:37] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[23:27:34] *** Joins: noarb (~noarb@user/noarb)
[23:28:36] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 240 seconds)
[23:30:54] *** Joins: gareppa (~gareppa@user/gareppa)
[23:32:16] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[23:33:34] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[23:33:53] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[23:34:21] *** Quits: DavidMilestone (~DavidMile@182.64.13.254) (Quit: Client closed)
[23:35:04] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[23:35:07] <AliceMeows> What's the deal with reinterpret_cast inside constexpr function? gcc and clang reject it but msvc does not
[23:35:15] *** Joins: Betal (~Betal@user/betal)
[23:36:51] *** Quits: andreasbuhr (~quassel@p549dbc15.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:37:28] <Alipha> AliceMeows: you can't reinterpret_cast in constexpr
[23:37:36] <AliceMeows> How so?
[23:38:27] <Alipha> well, broadly, constexpr cannot contain UB, and if you're using reinterpret_cast, you're probably doing UB :-)
[23:38:31] <AliceMeows> If the function isn't used in the context where it is required to be evaluated at compile time then it should be legal since constexpr is nothing more than a suggestion to the compiler unlike consteval
[23:39:36] <anyone> or in other words, adding reinterpret_cast to a function marked constexpr could automatically kill the constant evaluation in all callsites
[23:39:52] <Alipha> AliceMeows: why mark the function constexpr then?
[23:40:07] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:40:45] <AliceMeows> No reason, I was just wondering why gcc and clang reject it while msvc did not since the standard does not prohibit the usage of reinterpret_cast inside of a constexpr function
[23:44:24] <anyone> constexpr cannot contain UB  => MSVC has a bug if it allows it
[23:46:05] <anyone> then again, gcc allows "constexpr int f(int x) { return x++ + x++; }", so... whatever (about "constexpr cannot contain UB")
[23:46:17] <AliceMeows> Where does it state in the standard that UB is not allowed inside of constexpr funtion?
[23:47:23] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[23:47:45] <Alipha> AliceMeows: interesting. gcc compiles this specific reinterpret_cast in constexpr: https://godbolt.org/z/nTMxz4fhj
[23:48:13] <Alipha> AliceMeows: the paragraph under here: http://eel.is/c++draft/expr.const#5.30
[23:49:03] <AliceMeows> goto statement?
[23:49:43] <Alipha> AliceMeows: no, what's directly underneath that (there's no link to it): If E satisfies the constraints of a core constant expression, but evaluation of E would evaluate an operation that has undefined behavior as specified in [library] through [thread], or an invocation of the va_Â­start macro ([cstdarg.syn]), it is unspecified whether E is a core constant expression.
[23:50:28] <anyone> #5.8 would actually say undefined quite strongly
[23:50:31] <Alipha> and reinterpret_cast is a "core constant expression": http://eel.is/c++draft/expr.const#5.16
[23:50:52] <Alipha> oh, i missed 5.8
[23:51:10] *** Joins: karakedi (~eAC53C340@user/karakedi)
[23:51:20] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:56:04] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[23:56:05] *** Joins: hashfunc1e68 (~user@162.254.115.155)
[23:56:23] *** Joins: magla (~gelignite@55d44f7e.access.ecotel.net)
[23:57:56] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
