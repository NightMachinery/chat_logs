[00:18:34] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 256 seconds)
[00:25:57] <xq> Net::Async::ZMQ::FFI v.001 http://paste.debian.net/hidden/d693dd31/ http://paste.debian.net/hidden/fbc94036/
[00:25:58] <Paperbot> Link title(s): [ Debian Pastezone ] [ Debian Pastezone ]
[00:26:24] <jaytee80> Interesting...
[00:28:36] <jaytee80> I'm burning in things now (I fixed an additional stack of issue since my hang on exit), but I may take a look at that tomorrow to replace the EV in that one bit of code.
[00:30:17] *** Joins: Vicissitude (~Vicissitu@user/vicissitude)
[00:31:12] <xq> runnable testcase https://l.perl.bot/p/6gb8ry
[00:31:12] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:31:48] * GumbyPAN CPAN Upload: DNS-Unbound-0.25_04 by FELIPE https://metacpan.org/release/FELIPE/DNS-Unbound-0.25_04
[00:33:28] *** Quits: bmeneg (~bmeneg@2804:828:f233:5a4b:7e83:50f:9dc1:719b) (Remote host closed the connection)
[00:34:18] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Ping timeout: 240 seconds)
[00:37:17] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[00:39:17] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:41:49] * GumbyPAN CPAN Upload: Config-AWS-0.09 by JJATRIA https://metacpan.org/release/JJATRIA/Config-AWS-0.09
[00:43:13] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-25-184-147-14-206.dsl.bell.ca)
[00:53:35] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[01:00:22] *** Joins: Trigon (~reuben@73.127.1.41)
[01:01:40] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[01:02:09] *** Joins: woei (~woei@144.248.22.115)
[01:05:27] *** Quits: magla (~gelignite@55d4f84b.access.ecotel.net) (Quit: Stay safe!)
[01:08:54] *** Joins: gce108 (~gce@user/gce108)
[01:13:23] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[01:16:52] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.19 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.19
[01:26:54] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Mongodbv2-1.01 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-Mongodbv2-1.01
[01:29:31] <gordonfish> I may dislike Outlook. I may look upon it as dysmal burning turd. But there is something satisfying in repairing an Outlook 2019 .pst data file using scanpst.exe from an office 2003 install on an older machine on the client's network (since the newer one didn't have that, just some "quick fix" and "online repair" that did exactly squat to stop outlook from crashing on load, even in safemore...)
[01:30:03] <gordonfish> s/safe\Kmore/mode/
[01:32:47] <gordonfish> The lesson being, just 'cause it's old, doesn't mean it's useless. (Especially when a company never updates the file format.)
[01:33:33] <gordonfish> In a couple years that scanpst.exe will be twenty years old. 20. And it can still fix a modern .pst. Kind of mind blowing TBH.
[01:34:09] <zgu> the real lesson is proprietary formats are bad for everyone in all possible cases
[01:34:22] <gordonfish> Agreed
[01:34:39] * gordonfish gently strokes TB
[01:40:49] <gordonfish> Been using thunderbird for wee bit over 15 years now and never once had it break on me. Not once. Hell, even Outlook Express was fairly solid (even if it's quoting was crap.)
[01:42:57] *** Quits: EGD (~egd@user/egd) ()
[01:44:57] <zgu> i'm still on seamonkey but wondering when i'll be forced to switch to FF/TB full time
[01:45:50] *** Quits: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c) (Ping timeout: 256 seconds)
[01:46:41] *** Joins: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c)
[01:46:56] * GumbyPAN CPAN Upload: Text-Tabs+Wrap-2021.0804 by ARISTOTLE https://metacpan.org/release/ARISTOTLE/Text-Tabs+Wrap-2021.0804
[01:53:25] <gordonfish> zgu: Isn't that the same engine though?
[01:53:32] <zgu> yeah
[01:53:32] <gordonfish> I mean it's all mozilla
[01:53:51] <xenu> since firefox dropped xul maintaining seamonkey became difficult
[01:54:26] <zgu> but either the few things missing from it (webrtc is the only major one i know of, and that doesn't explain nearly everything) or simply the useragent not including the substring "firefox" makes an increasingly annoying number of sites just break
[01:54:27] <gordonfish> I wouldn't be surprised if a profile from one was copied to the other, it's mostly work
[01:55:01] <gordonfish> zgu: Good thing user agent strings can be changed by the user
[01:55:33] <zgu> plenty of things for some reason don't even work in "firefox compatible" mode anymore though
[01:55:59] *** Quits: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-25-184-147-14-206.dsl.bell.ca) (Quit: Konversation terminated!)
[01:56:27] <zgu> the weirdest one is one of my banks: if either of the compatibility modes are enabled it says "firefox is not supported. please use a supported browser... such as firefox"
[01:56:39] <zgu> but it does work fine in straight seamonkey mode
[01:56:52] <zgu> but that mode forces google searches into mobile mode now
[01:58:06] <zgu> and i'm well past the point of expecting things to get any better, since even firefox itself has such an insignificantly small market share compared to chrome now
[01:58:19] <gordonfish> Maybe just use a regular FF UA
[01:58:21] <gordonfish> string
[02:00:48] <gordonfish> zgu: I doubt FF's market share is all that small. Most of my clients I always see using it. 90% of one off jobs I see FF front and center. In fact it looks like Chrome's has been slowly shrinking, at least among people who realize that google maintains both a browser and a gi-effing-noumous ad network..
[02:01:27] <zgu> i thought that's what the most aggressive compatibility mode did... hmm, now i can't even get my copy of ff to show me its UA
[02:01:37] <zgu> they must have dumbed down the about dialog at some point
[02:01:50] <zgu> ... and "about:" doesn't even work anymore
[02:01:55] <gordonfish> (And me personally I also could never get used the completely menu-less/super-minimal design of chrome.)
[02:02:12] <zgu> firefox is almost as bad now
[02:02:20] * Grinnz adds podcritic to his planned dzilcritic
[02:02:25] <zgu> at least on windows where the menubar is missing by default
[02:02:31] <revhippie> man... the old canard about "i googled something, and now i'm on ``a list''" ... i googled a bumper sticker i didn't recognize, and it turned out to be some far-right nutto organization.  immediately started getting ads for that kind of thing.
[02:02:49] <LeoNerd> All web browsers are terrible. Still, it's fortunate they remain a rare program that very few people have to actually run on a daily basis, eh?
[02:03:00] * gordonfish is waiting for dzil vs mecha-dzil
[02:03:25] <zgu> "Your browser is being managed by your organization."
[02:03:31] <gordonfish> zgu: Yeah but all you need to do is hit aly
[02:03:32] <gordonfish> alt
[02:03:45] *** Joins: edef (~quassel@user/edef)
[02:04:17] <zgu> that's a weird way to say updates are being handled by my distro package manager
[02:04:30] <gordonfish> And I'll trust UO on Firefox over any ad blocker on chrome any day
[02:04:47] <gordonfish> (even UO is sort of crippled on chrome)
[02:06:05] <zgu> and i don't like the way chrome can't scroll tabs when you have too many open, they just get impossibly small
[02:06:07] <gordonfish> zgu: Yeah it's like system perl; if it came from apt/dnf/yum/pacman/etc, let that handle it. If you want to do it, make a separate install (FF can be downloaded straight from mozilla's pub directory on their site.)
[02:06:49] <gordonfish> (https://ftp.mozilla.org/pub/firefox/releases/)
[02:06:50] <Paperbot> Link title(s): [ Directory Listing: /pub/firefox/releases/ ]
[02:07:02] <zgu> either they don't want me to have more than a dozen tabs (fuck you for telling me what to do) or they haven't figured out how to add that (also fuck you for being incompetent)
[02:07:50] <zgu> i'm just saying it's a completely pointless thing to put right at the top of the preferences page that i can't even hide
[02:07:55] <gordonfish> zgu: Oh yes I've seen chromes with near microscopic tabs on some people's machines, good flippin' grief
[02:08:09] <gordonfish> Like little slivers
[02:08:27] <gordonfish> How the frosted cabbage hell is that supposed to be useful??
[02:10:14] <gordonfish> (For a separate (from system) install on Linux: https://ftp.mozilla.org/pub/firefox/releases/$ver/linux-$arch/$lang/firefox-$ver.tar.bz2 )
[02:10:23] <zgu> even on ff it's borderline useless by default... browser.tabs.tabMinWidth 76
[02:10:23] <zgu> 76??
[02:10:32] <gordonfish> (E.g.: https://ftp.mozilla.org/pub/firefox/releases/89.0/linux-x86_64/en-US/firefox-89.0.tar.bz2 )
[02:10:58] <gordonfish> zgu: At least it's changable in FF
[02:11:18] <zgu> yeah i don't think chrome even implements the scrolling behavior
[02:11:35] <gordonfish> And in FF you can have a drop down list on the side
[02:13:00] <zgu> i wonder if there's a way to make firefox use one close button at the end of the bar like seamonkey does
[02:13:04] <gordonfish> My dad has a hobbit of leaving a metric tung ton of tabs open, like 30-40, so being able to use the drop down to help him locate something really helps.
[02:13:09] <gordonfish> *habbit
[02:13:09] <zgu> too easy to accidentally close tabs normally
[02:13:17] <zgu> but at least increasing tabMinWidth helps with that
[02:15:01] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[02:19:50] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 256 seconds)
[02:24:35] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[02:26:22] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[02:27:41] *** Joins: whynot (~whynot@37.73.33.193)
[02:31:02] *** Joins: Su-Shee_ (~Susanne@p4ffc78ca.dip0.t-ipconnect.de)
[02:31:59] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:33:30] *** Quits: Su-Shee (~Susanne@p4ff49336.dip0.t-ipconnect.de) (Ping timeout: 276 seconds)
[02:36:41] <EvanCarroll> HALLO 413 USERS OF PERL.
[02:36:45] <EvanCarroll> IT IS I, EVAN.
[02:36:46] *** Joins: Ovid_ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[02:37:25] <ether> not, "it is I, Evan, System Lord of the Internets"?
[02:39:19] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: leaving)
[02:39:55] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[02:44:45] * superkuh joins the tok'raku.
[02:46:35] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[02:47:05] <EvanCarroll> ether: EXACTLY.
[02:47:08] <EvanCarroll> You understand me.
[02:48:25] <EvanCarroll> this guy also understands me https://www.youtube.com/watch?t=547&v=9NaI2vlGRws
[02:48:26] <Paperbot> YouTube video linked by EvanCarroll: How I charge 5 Makita batteries at the same time - published by The Salty Paultard
[02:51:13] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 258 seconds)
[02:52:02] * GumbyPAN CPAN Upload: Test2-Harness-1.000065 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000065
[02:57:03] * GumbyPAN CPAN Upload: Group-Git-v0.7.6 by IVANWILLS https://metacpan.org/release/IVANWILLS/Group-Git-v0.7.6
[03:08:55] *** Quits: jaytee80 (~jaytee80@47.190.14.171) (Quit: Client closed)
[03:10:46] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:18:16] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[03:18:34] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[03:22:57] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 268 seconds)
[03:23:32] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[03:25:42] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:26:54] <ash_worksi> is there a perl statement shorter than `date +"%Y%m%d_%H%M%S"`
[03:28:26] <LeoNerd> compact, no... but POSIX::strftime will be much nicer
[03:28:51] <ash_worksi> LeoNerd: thanks :)
[03:29:17] <ash_worksi> also, is there anyone that would let me pick there brain about databases (OT) with a few yes/no questions?
[03:29:26] <ash_worksi> like.... 7-ish
[03:32:32] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:34:54] <gordonfish> superkuh++
[03:39:17] *** Joins: gggp_ (~gggp@60.10.194.46)
[03:42:57] *** Joins: toretto (~0xe3b7@user/toretto)
[03:45:57] *** Quits: P1RATEZ (~piratez@user/p1ratez) (Remote host closed the connection)
[03:48:03] *** Joins: gggp__ (~gggp@60.10.194.46)
[03:51:28] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 272 seconds)
[03:52:33] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 268 seconds)
[03:52:42] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[03:53:57] <ether> ash_worksi: just ask the channel; people who can help will chime in
[03:54:35] <ash_worksi> ether: I have; I tried to boil it down to yes|no, but it was still too annoying apparently :(
[03:55:11] <ether> oh, I guess I missed it
[03:56:24] <ash_worksi> ether: you mean THIS channel?
[03:56:27] <ash_worksi> ether: great!
[03:56:43] <ash_worksi> (1) do you prefix your migrations with a timestamp?
[03:56:44] <ether> well, I missed it if it was on another channel, too :)
[03:57:04] <ether> prefix where? timestamp of what? when the migrat was written?
[03:57:11] <ether> +ion
[03:59:18] <ash_worksi> ether: prefix the filename and when the file was created (afaiui)
[03:59:51] <ash_worksi> (2) was prefixing like that every really necessary? (3) do people still do that?
[03:59:54] *** Quits: Vicissitude (~Vicissitu@user/vicissitude) (Quit: power out again)
[04:00:34] <ash_worksi> (4) do you keep a "schema" file (a file with the database schema... afaiac, that's a dump, but apparently there's a distinction I don't recognize)
[04:00:44] *** Joins: YaoNai (~YaoNai@user/yaonai)
[04:01:05] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:01:52] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[04:02:17] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[04:02:26] <ash_worksi> (5) do you make changes to said "schema" file manually? (6) is it maintained as runnable (like, can you run `psql < schema.sql` on an empty db and it will create an up-to-date schema)? (7) do you then have to be careful where you put changes to this file (as you might not know if some dependency is missing if you put want to put, for example, some user_create() function near the CREATE TABLE user section 
[04:02:32] <ash_worksi> of your file)
[04:02:49] <tm604> 1 no, 2 no, 3 yes, 4 yes, 5 no, 6 yes, 7 no
[04:03:36] <tm604> migrations are often numbered, but I'd recommend doing that based on the order they were _applied_, rather than created
[04:04:55] <ash_worksi> tm604: omg <3
[04:05:16] <ash_worksi> (8) do you rename your migrations?
[04:06:14] *** Joins: gggp_ (~gggp@123.113.189.142)
[04:06:53] <tm604> 8 if numbered then yes, after applying you'd put the appropriate number and merge to the main branch in version control, but this is not a universal practice
[04:07:05] <Grinnz> i have only used the trivially numbered migrations supported by Mojo::Pg::Migrations / Mojo::SQLite::Migrations, which recently started supporting a directory of migrations as well
[04:07:49] <ash_worksi> neat
[04:07:51] <Grinnz> i would love to have work experience with them because that would mean i didn't have to use mysql anymore
[04:07:55] <tm604> right, the numbered approach there works nicely when there's only one person making changes at a time, can get a bit more interesting when there are different changes being merged together and vastly different files with the same names need to be combined
[04:08:12] <Grinnz> mysql doesn't support DDL transactions which makes migrations useless
[04:08:40] <ash_worksi> omg, um um.... my questions are being answered so quickly I don't have time to think of more of them
[04:09:06] <tm604> for some reason Oracle really likes databases without DDL transactions, but that just means they aren't intended for use in production environments
[04:09:10] <ash_worksi> (9) do you keep `--` comments in your schema file?
[04:09:27] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[04:09:30] <tm604> 9 it's automatically generated, so "yes" for `pg_dump`, maybe for other databases
[04:09:34] <ash_worksi> (10) do you use `COMMENT ON` ?
[04:09:39] <tm604> 10 always
[04:09:56] <tm604> no table, column, trigger, function or any other object is allowed to be released without a comment
[04:10:01] <ash_worksi> (11) do you use COMMENT ON the same way you use `--` (redundantly) 
[04:10:14] <tm604> 11 just comment
[04:11:39] <tm604> I'd suggest it's worth looking through the documentation of tools such as sqitch or liquibase for more details on migrations in general
[04:12:01] <ash_worksi> 11 ? I mean, if you COMMENT ON COLUMN user.user_tag WITH 'The purpose of a user tag is....' or however it's written, would you also have `-- Notable Fields:\n user_tag: The purpose ...` ?
[04:12:30] <tm604> No - two reasons: redundant, and it wouldn't be preserved in the resulting schema file anyway
[04:12:49] <ash_worksi> tm604: I am actually getting started with sqitch, but it doesn't look like they use TS prefixes because of the way they expect you to manage stuff in git (I think)
[04:13:41] <tm604> in migrations, `--` comments can be useful to inform reviewers about _why_ changes are there, but I wouldn't count on anyone reading them
[04:14:10] <ash_worksi> (12) I was told reading comments in a schema file is a lot more difficult than reading them as `--`; I don't expect anyone to tell me what other people are thinking, but in your opinion, is that nonsense (or do you just expect to read comments on the DB anyway?)
[04:14:25] <tm604> depending on the database, `--` comments within functions or other objects might be preserved, so the general rule is "if the dump operation would preserve them, include them, otherwise why bother?"
[04:15:39] <ash_worksi> I would guess that the person who does that just modifies the file by hand -- though they did not confirm that (nor did they want to expand on why they maintain it that way)
[04:16:22] <tm604> for 12, difficult or not is in the eye of the beholder
[04:16:31] <ash_worksi> (13) do you keep all your migration files? (14) <if no, do you squash them and keep the last N migrations?
[04:16:36] <ether> 1. no, I use integer numbers for migrations, and this is the order in which they should be run, not when they are created.  4. yes I keep a db/schema.sql file in the repository next to the code, and it is updated at the same time a migration is added. this schema file is used for various code ...
[04:16:41] <ether> ... generation.  5. no, it is generated after applying migrations, see #4.  9. no, because it's machine-generated.
[04:16:43] <tm604> (but if you struggle to read `comment`, you're not going to have much luck with the real SQL parts!)
[04:17:32] <tm604> 13 I don't, version control history does, 14 squash no, there's the schema dump for that, but once there are no longer any systems which need the migrations then they're removed automatically
[04:17:32] <ether> automatic db dumps and code generation - https://github.com/joyent/conch-api/blob/master/Makefile#L45-L57
[04:17:33] <Paperbot> Link title(s): [ conch-api/Makefile at master · joyent/conch-api · GitHub ]
[04:19:20] <tm604> probably obvious, but: good automation for database deployment/reversion is well worth the time to set up and test.
[04:19:25] <ash_worksi> I am realizing I may be using the word `squash` imporperly
[04:19:35] <jercos> compress?
[04:19:58] <tm604> "squash" normally means "combine multiple old entries", which would be a no
[04:20:00] <ash_worksi> s/may/definitely/
[04:21:04] <tm604> as in people do that, but I would advise against it - you lose the atomic benefits of the migrations, and if it's just to clean things up then let version control worry about that
[04:21:29] <tm604> (also, channels such as #postgresql are likely to have better answers for all these)
[04:22:15] <ash_worksi> my question was supposed to be asking (14b) because (if) you keep a dump file, do you get rid of any migrations whose result is already reflected in the dump? and then splitting apart (15) do you keep any historical migrations on disk (in addition to having them committed).... just cuz?
[04:22:44] <tm604> Every applied migration is in the dump - as ether says, you update that as soon as the migration is committed to the database(s).
[04:22:50] <ash_worksi> tm604: I came from there; I think I aggravated the pros too much
[04:23:33] <tm604> The precise timing depends on the deployment, of course - if you have 1k database instances and requirements to distribute updates gradually across a 24-hour cycle, then the dump might happen after the first one is updated, or could be after the last is done
[04:23:50] *** Quits: whynot (~whynot@37.73.33.193) (Quit: leaving)
[04:24:17] <ash_worksi> so, do you just delete and commit the deletion of the file (ie from your local machine)?
[04:24:22] <ash_worksi> (16) ^
[04:24:43] <tm604> It's automatic, but yes
[04:25:09] <tm604> (I don't have time to be deleting things manually, and computers are better at that than I)
[04:25:30] <ash_worksi> (17) so then, the delete is part of a pipeline?
[04:25:42] <ash_worksi> (erm, workflow)
[04:25:52] <ash_worksi> (erm, CD/CI pipeline/workflow)
[04:26:17] <tm604> Pretty much, yes - just the regular scan across all instances to confirm that all database objects are consistent
[04:26:39] <ash_worksi> (18) in which case you commit a file, and then tomorrow when you `git pull`, the file vanishes?
[04:27:15] <tm604> Files vanish all the time, we pay developers more for deleting code than adding it!
[04:27:24] <ash_worksi> (19) and `git log` just shows something like: migration 'add_user_table.sql' applied
[04:27:47] <ash_worksi> tm604: that's an interesting thing, but (18) Y?
[04:28:15] <tm604> 18 yes, 19 something like that, but without the file names - the commit metadata already has those
[04:29:00] <ash_worksi> (20) do you have a lot of identical commit messages in your git history?
[04:29:26] <ash_worksi> (18-) that's magical
[04:29:51] <ether> too many questions
[04:30:05] <tm604> 20 the one-line summary is often repeated, yes
[04:30:17] <ether> I keep the dump up to date with the code that it goes with. that's totally separate from whether it's actually been deployed
[04:32:32] <ash_worksi> thank you tm604 that was immensely helpful
[04:32:36] <ash_worksi> ether: thank you too 
[04:33:15] <ash_worksi> I know that a lot of people what to say, "I mean, you do whatever you want"; but it's very helpful to know what YOU do.
[04:34:28] <ash_worksi> I might go back to #postgersql and ask johto (whose name I only remember because of Pokemon -- I am very bad with names) again if they keep a manual schema file and if they do, why. My *guess* is for comments; but I personally think that's just too hard. 
[04:36:24] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Ping timeout: 256 seconds)
[04:36:27] <ether> I put comments in things that are written by humans, like code
[04:36:35] <ether> or in the migration files themselves perhaps
[04:37:35] <ash_worksi> there was some other reason I thought it's nice to commit `--` comments in migrations, but I don't remember right now. I think it was like, if you have gone in a non-obvious direction for something... like I (at this point, I can say "stupidly") wrote permissions in `DO $$` statements to check for dev vs prod users
[04:37:58] <ash_worksi> I think it would be worth-while to comment on why; even though that's not the comment for the overall migration
[04:38:51] <ash_worksi> i still have to write a migration for a new intermediary role to abstract the environment
[04:39:44] <ash_worksi> oh, I can't believe this. I do have more questions
[04:40:51] <ash_worksi> (21) do you keep migrations for different (but related) databases in separate repos?
[04:40:53] <ether> some of those explanations belong in git comments
[04:41:28] <ash_worksi> (22) do you keep global migrations in their own repo? (like CREATE ROLE)
[04:41:51] <gordonfish> Get comments in git commits
[04:42:01] <ether> separate codebases go in separate repositories. if they deploy separately, keep them separate. but if they always go together, keep them together.
[04:42:25] <ether> 22: see 21.
[04:42:27] <mst> I use App::DH to generate my DDL changes, then if I need user config in files (rather than generating them on the fly) I'll use App::Sqitch for that
[04:43:29] <ash_worksi> hmmmmm
[04:43:37] <mst> but I only keep dump files for backups and for reference and/or bootstrapping a Test::Postgresql58 for tests
[04:44:06] <mst> note, this is my 'if I have complete control of how things work' approach
[04:44:21] <mst> depending on the team I'm working with and whether other apps are using the same database, I'll do things differently
[04:44:25] <ash_worksi> mst: glad to hear it; I welcome all opinions
[04:44:57] <ash_worksi> the line for "if they deploy separately" I am not too sure about
[04:45:13] <mst> also, this is based on my finding DBIx::Class::Candy an easier way to define my database than writing the CREATEs myself - *but* it relies on the fact that as I write those perl modules I'm imagining the CREATEs in my head
[04:45:22] <mst> I'm not avoiding SQL here, merely metaprogramming it to taste
[04:45:50] <ash_worksi> mst: I can appreciate that
[04:46:28] <mst> ash_worksi: some people use DBIx::Class because they'd rather abstract away SQL
[04:46:32] <ash_worksi> (23) do you put CREATE DATABASE in a migration, or just use `createdb` (or similar)
[04:46:54] <ash_worksi> erm s/, or/(24) do you/
[04:47:02] <ether> create database is migration 0001 :)
[04:47:05] <mst> ash_worksi: I believe that the -correct- way to use DBIx::Class is to use it to metaprogram SQL but always be sure of what SQL will actually happen (hence why the DBIx::Class 'generate CREATEs' code always generates a .sql file you can read and edit)
[04:47:46] * mst tends to prefer having the CREATE DATABASE outside of the migration stuff because I want to create the database, create a migration user, set up permissions for it
[04:47:49] <ash_worksi> mst: not the case with the ORM I am familiar with, but I can still appreciate what you're saying
[04:48:10] <mst> and then run the migrations as a user that only works within the database already created
[04:48:25] <ash_worksi> mst: (25) so all global stuff happens outside of your migrations?
[04:48:36] <mst> ash_worksi: DBIx::Class is unusual in that it's more a relational-to-object mapper than an object-to-relational mapper and it was written by people who actually like databases and SQL
[04:48:52] <ash_worksi> mst: that's neat
[04:49:04] <mst> ether will, I think, attest to the ROM thing
[04:49:11] <ash_worksi> ROM?
[04:49:13] <mst> (she's a DBIx::Class power user)
[04:49:17] <ash_worksi> ORM?
[04:49:18] <ether> ash_worksi: you're using an ORM? which one?
[04:49:22] <mst> ash_worksi: relational-to-object mapper
[04:49:30] <ash_worksi> oh
[04:50:09] <mst> ash_worksi: basically, in an ideal world, CREATE DATABASE happens using the postgres superuser, then there's a migration user that can do CREATE/ALTER/DROP for tables, then there's an application user that can do INSERT/SELECT/UPDATE/DELETE
[04:50:22] <ash_worksi> ether: Re ORM, yes, but not for this project and even for other projects, not for migrations --- I hesitate to say, but it's Doctrine
[04:50:29] *** Quits: gggp_ (~gggp@123.113.189.142) (Remote host closed the connection)
[04:50:37] <ether> I agree this this ^^  . usually by the time you have migrations set up, you've already got a database created, and some users and roles etc
[04:50:49] <mst> this is not, honestly, so much a security thing, as it's a "keeping things restricted means that if I do something fucking stupid the blast radius of my mistake is less"
[04:50:56] *** Joins: gggp_ (~gggp@60.10.194.46)
[04:51:03] <ether> PHP eh? we'll try not to judge you
[04:51:30] * mst judges *PHP* but does not judge people who *write* PHP
[04:51:49] <mst> hell, I wrote some fucking awesome code using VB6 once and that's a fucking terrible language
[04:52:02] <ash_worksi> ether: it's okay, I've been flamed hard enough I have a nice healthy burnt after-taste
[04:52:29] *** Quits: gggp_ (~gggp@60.10.194.46) (Remote host closed the connection)
[04:52:38] <ash_worksi> mst: my experience with VB-anything is about 6 lines of an Excel... module?... something
[04:52:40] <mst> ash_worksi: bahahahaha
[04:52:50] <mst> oh, that's VBA which is similar but not quite the same
[04:52:53] *** Joins: gggp_ (~gggp@123.113.189.142)
[04:52:59] <ether> mst: yes, it's closer to pity
[04:53:56] <ash_worksi> mst: all I remember is getting one minor detail of my intention to work properly during my break as a guppy at Walmart after I think about 9 tries running it
[04:54:27] <ash_worksi> though that was 10 years ago now
[04:54:35] <ash_worksi> ¯\_(ツ)_/¯
[04:54:51] <mst> right, back in about 2002 I wrote a VB6 site generator
[04:55:04] *** Quits: gggp_ (~gggp@123.113.189.142) (Remote host closed the connection)
[04:55:14] <ash_worksi> wheee
[04:55:23] *** Joins: gggp_ (~gggp@125.33.82.158)
[04:55:27] <mst> with a WYSIWYG page editor based on templates that relied on an embedded webview and javascript that kept all its state in the URL via GET forms
[04:55:29] <ash_worksi> omg 2006 is 15 years ago :(
[04:55:49] <mst> then the VB6 would extract that URL, parse it, and template generate the pages for ftp upload
[04:55:52] <ash_worksi> time speeds up when you're older
[04:55:54] <mst> fun times ;)
[04:56:28] <mst> ash_worksi: I'm still finding it weird that I've now lived in the same city for ~20 years
[04:56:29] *** Quits: gggp_ (~gggp@125.33.82.158) (Remote host closed the connection)
[04:56:44] <mst> like, that's just over half my life
[04:56:46] <mst> wtf happened
[04:56:55] *** Joins: gggp_ (~gggp@111.63.14.121)
[04:57:19] <ash_worksi> idk, that doesn't seem weird to me :P I know people that want to move every like 5ish years... it just seems like a hassle to me 
[04:57:47] <mst> oh, no, I'm happy not having moved
[04:57:55] <mst> I'm just disturbed by the idea of '20 years'
[04:58:10] <ash_worksi> yeah, that is disturbing
[04:58:11] <mst> I still remember that being 'how long I'd been alive'
[04:58:15] <ash_worksi> I try not to think about the passage of time
[04:58:29] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[04:59:57] <ash_worksi> so, for you folk that keep migration separate, and globals are just things that happen to exist... (26) are globals omitted from commit histroy?
[05:00:00] <ash_worksi> history*
[05:00:14] <ash_worksi> I guess if you commit your dump, it doesn't matter
[05:00:40] <mst> I tend to have a script
[05:00:47] <ash_worksi> mst: for globals?
[05:00:57] <mst> the database name, the usernames, and the passwords, are all things that exist per-deployment
[05:01:04] <mst> so committing those wouldn't make any sense to me
[05:01:30] <ash_worksi> so the script generates your globals from some context you feed it?
[05:01:56] <ash_worksi> do perms work the same way for you?
[05:02:01] <mst> one sec
[05:03:05] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 258 seconds)
[05:06:30] <ash_worksi> tm604: I know I've pestered you quite a bit -- I really do appreciate it, but if you would give me your opinion on globals, I'd appreciate it
[05:09:43] <mst> ash_worksi: something like https://l.perl.bot/p/ga9hvc
[05:09:44] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[05:10:33] <ash_worksi> mst: that's a neat little script
[05:10:55] <ash_worksi> but we have a lot of different roles
[05:11:09] <pragma-> Can't Paperbot ignore titles that contain "paste" or something?
[05:11:29] <mst> pragma-: normally the bot would've reported it and it wouldn't matter, not quite sure what happened
[05:11:35] <ash_worksi> like foo_live_web_user and foo_dev_web_user
[05:11:46] <ash_worksi> there isn't a ton of consistency to the user names
[05:11:52] <pragma-> Well, it reports a lot of other pastebin titles too and it kind of clutters up the chat a little bit.
[05:11:53] <mst> ash_worksi: so, firstly, a separate sqitch config for those is fine
[05:11:53] *** Joins: XV8 (~XV8@2601:5cb:c001:50:df69:766a:bc37:5a0b)
[05:12:01] <mst> I just like my migrations to not be run by the superuser
[05:13:30] <ash_worksi> well, I can take a page from your book and change the permissions for user `sqitch`
[05:13:59] <mst> I mean you could have one sqitch config that handles the superuser bits
[05:14:06] <mst> and then a separate one that handles the per-database bits
[05:14:11] <ash_worksi> mst: such as CREATE DATABASE?
[05:14:16] <mst> exactly
[05:15:55] <mst> like I say, keeping stuff separated is a nice "anti-mst-doing-something-fucking-stupid" technique :D
[05:16:44] <ash_worksi> okay, so, the way it is now is like... everything is separated
[05:17:01] <ash_worksi> and perms are generated on the fly (there are bash scripts for that)
[05:17:34] <ash_worksi> but you're yielded a long list of perms you have to apply manually based on the env you supplied
[05:17:38] <mst> right, that script I sketched was about making perms be generated on the flyt
[05:18:00] <ash_worksi> so you you get a list like `GRANT ... TO foo_dev_web_user;` 
[05:18:16] <ash_worksi> mst: but yours is a bit more.... palatable
[05:18:23] <ash_worksi> (spelling)*
[05:19:00] <mst> heh, yeah
[05:19:30] <ash_worksi> anyway, the important question I am beating around is: do you have, for example `CREATE TABLE ...; GRANT ... TO some_user_you_know_exists_for_whatever_reason;` in a migration?
[05:19:32] <mst> for more complext stuff I'll use Xslate to generate it
[05:20:07] <mst> ash_worksi: I almost always don't in the 'main' migrations, because I want migrations to be about the schema/data structure changes
[05:20:13] <mst> and permissions vary between deployments
[05:20:17] <ash_worksi> (27) ^
[05:20:17] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[05:20:37] <mst> like a test suite deployment of the database, i.e. for t/ files, I don't need to lock down permissions wise noticably unless I'm testing the permissions
[05:22:15] <ash_worksi> so then, (28) do you not test perms? (29) how does global stuff get applied to your prod database(es)?
[05:22:32] <mst> that's why I said "unless"
[05:23:01] <mst> basically permissions get tested as part of the ops side, whereas schema changes get tested as part of the apps side
[05:23:32] <ash_worksi> mst: okay, and you're not responsible for the ops side?
[05:23:45] <ash_worksi> (idc, I just want to know if I can ask you ops qusetions)
[05:24:32] <mst> I usually am, my background is in ops, I accidentally ended up known as a really good developer because I was annoyed that writing the admin UIs for my ops stuff took too long
[05:24:57] <mst> but even if I'm responsible for both I much prefer keeping those parts separate
[05:26:45] <ash_worksi> okay, so as part of the ops side, do you write CREATE DATABASE|ROLE statements into migrations?
[05:27:02] <mst> again, those are part of a separate set of code like I said
[05:27:26] <mst> usually done as idempotent with 'IF NOT EXISTS' and etc.
[05:27:30] <ash_worksi> I get that, but they are maintained in the same way?
[05:28:08] <mst> for permissions I usually have a script that forces the permissions to look like exactly what I want
[05:28:16] <mst> it's a different style of requirement than migrations
[05:28:34] <ash_worksi> starting with sqitch, I have half-way decided to keep deploy scripts not-idempotent and revert scripts idempotent
[05:29:55] <ash_worksi> and I wrote a little script that just does `pg_dump ...; psql < revert; pg_dump ...; diff ...; psql < deploy; psql < revert; pg_dump ...; diff ...;`
[05:36:42] <mst> neat approach
[05:37:15] *** Joins: gggp__ (~gggp@60.10.23.170)
[05:40:26] *** Quits: gggp_ (~gggp@111.63.14.121) (Ping timeout: 256 seconds)
[05:40:59] *** Joins: gast0n (~g4570n@user/gast0n)
[05:42:44] *** Joins: gggp_ (~gggp@111.63.14.121)
[05:42:45] <ash_worksi> I figure, I kind of want things to explode if the same migration is attempted more than once for some reason
[05:44:37] <mst> yep
[05:44:49] <mst> well, I always use something where there's a migration table that records such things
[05:44:52] <mst> so that can't happen
[05:45:46] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 240 seconds)
[05:46:47] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 258 seconds)
[05:46:52] <ash_worksi> mst: right, so then why would a deploy script need to be idempotent?
[05:47:14] <mst> ash_worksi: it's the 'setup perms' scripts I make idempotent
[05:47:40] <mst> since for those my goal is "at the end of this, this deployment has the current correct set of perms"
[05:48:11] <mst> this is, again, why I keep the two separate
[05:48:22] <mst> different goals, different processes, etc.
[05:48:30] <ash_worksi> mst: which makes me believe those scripts / generated ... migrations? are maintained differently than the app-project migrations
[05:48:37] <mst> yes
[05:48:39] *** Joins: Trigon (~reuben@73.127.1.41)
[05:49:04] <mst> the ops ones are generally a script and a config file
[05:49:20] <ash_worksi> well, I seem to not have a really great idea of how you maintain those... but my workflow is relatively small, so I think just throw perms into migrations is... ok? ... idk... red flag for you?
[05:50:12] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[05:50:39] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[05:50:50] *** Joins: woei (~woei@144.248.22.115)
[05:50:57] <mst> if it's working, I'm not going to argue
[05:51:19] <mst> I just like having a script I can run that's "when this script has finished, the permissions on this server are exactly what I wanted"
[05:53:06] <ash_worksi> mst: well, I'd ideally like to separate things... that tends to make me happy, but I have to have a clear path as to what I am going to do before I attempt to do that
[05:53:45] <mst> sure. I'm trying to explain as best I can.
[05:53:55] <ash_worksi> like I said, right now I have obnoxious `DO $$` statements to check which user exists before adding the perm
[05:54:12] <ash_worksi> which is.... sad
[05:54:37] <ash_worksi> but I will be (soon...ly) adding an intermediate user that doesn't care about the environment
[05:55:19] <ash_worksi> ie since i have `foo_live_web_user` and `foo_dev_web_user` I intend to add `foo_web_user` and just make them part of the group
[05:56:05] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:56:11] <mst> on live I tend to have <appuser>_web_user
[05:56:29] <mst> in my dev env I tend to have <myuser>_dev and <myuser>_test
[05:56:38] <mst> the former for running a dev server against, the latter for the test suite
[05:56:48] <ash_worksi> I see
[05:57:10] <mst> roughly, the names might not be exactly that
[05:57:14] <mst> but the principle stands :)
[05:57:47] <ash_worksi> damn it, I use ^U too much
[05:57:56] <ash_worksi> and overwrite my yank
[05:58:26] <ash_worksi> forgetting about `CREATE TABLE` and app-side altogether; what do call the output from your scripts?
[05:58:31] <ash_worksi> migrations still?
[05:58:43] *** Joins: gggp__ (~gggp@123.113.188.9)
[05:58:54] <mst> the real scripts don't -have- output
[05:58:58] <mst> they do $dbh->do
[05:59:55] <ash_worksi> oh I see
[06:00:18] <ash_worksi> so was the script you showed me generated?
[06:00:27] <ash_worksi> (itself a product of generation)
[06:00:37] <mst> I wrote that straight into perlbot to give you an idea of what I do
[06:00:55] <mst> it was purely a way of explaining stuff
[06:01:17] <mst> written from scratch in a couple minutes based on our conversation
[06:01:37] <ash_worksi> mst: I mean; is what you generate approximately that?
[06:01:44] <ash_worksi> sans __DATA__
[06:01:45] *** Quits: Bossi (~quassel@p4fc22c5c.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[06:01:58] <ash_worksi> (which I assume would be fed to the script as a file)
[06:01:58] *** Quits: gggp_ (~gggp@111.63.14.121) (Ping timeout: 256 seconds)
[06:02:10] *** Joins: gggp (~gggp@123.113.189.142)
[06:02:16] <mst> I just said: no, I'd tend to write $dbh calls
[06:04:17] *** Quits: gggp__ (~gggp@123.113.188.9) (Ping timeout: 245 seconds)
[06:04:33] <simcop2387> hmm, wonder if you can put an sqlite database in a __DATA__
[06:06:31] *** Joins: Bossi (~quassel@p5dc597d7.dip0.t-ipconnect.de)
[06:06:38] <ash_worksi> oh I see
[06:07:23] <ash_worksi> I thought you were distinguishing between sql output and script output, but I didn't take your comments literally enough
[06:08:18] <mst> I tend to be -very- literal
[06:08:26] <ash_worksi> mst: so I guess that makes it so you can just manage users through a yaml file if you like
[06:08:43] <mst> ash_worksi: and integrate it into ansible or whatever and etc. yes
[06:08:47] <mst> ash_worksi: that's kinda the idea
[06:09:06] <ash_worksi> mst: does this allow for exceptions?
[06:10:20] <ash_worksi> mst: or conversely is it super explicit? perhaps something like `object_type: [object_name: [perm_type: [role1, role2, role2]]]` ?
[06:10:34] <ash_worksi> role3*
[06:11:55] <mst> ash_worksi: the whole point of it being a small script is you make it whatever you need - and only what you need
[06:12:04] <mst> systems/ops stuff is best -not- generalised
[06:12:13] <mst> and just simple and obvious and clear
[06:13:57] <ash_worksi> mkay; thanks mst --- and lastly is there a general word for this type of action I can research on my own?
[06:15:32] <mst> I dunno, to me it's just basic systems/deployment automation
[06:15:36] <mst> but I'm old
[06:15:54] *** Quits: Manderson (~manderson@66.228.19.117) (Ping timeout: 252 seconds)
[06:15:57] <mst> I argued with the dude who wrote puppet as he was writing it
[06:16:05] <mst> back in like 2001
[06:16:50] <ash_worksi> I see
[06:16:51] <mst> I'm also the person who brought a dude called Adam Holoway into the open source community by throwing commit bits at him ... later he wrote a thing called 'Chef' (you may have heard of it ;)
[06:17:08] <ash_worksi> neat
[06:18:02] *** Quits: pizdets_ (~pizdets@183.182.111.75) (Quit: pizdets)
[06:18:44] *** Joins: pizdets (~pizdets@183.182.111.75)
[06:18:46] <ash_worksi> okay, I am off... I appreciate all the help immensely
[06:18:52] <mst> later mate :D
[06:19:12] <ash_worksi> thank you so much mst tirnanog ether tm604 
[06:19:18] <ash_worksi> bye for now
[06:19:22] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Quit: leaving)
[06:22:54] *** Joins: Su-Shee (~Susanne@p4ff4946e.dip0.t-ipconnect.de)
[06:26:10] *** Quits: Su-Shee_ (~Susanne@p4ffc78ca.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:46:14] *** Joins: gggp_ (~gggp@60.10.194.46)
[06:48:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:48:34] *** FinnElija is now known as Guest7218
[06:48:34] *** Quits: Guest7218 (~finn_elij@user/finn-elija/x-0085643) (Killed (erbium.libera.chat (Nickname regained by services)))
[06:48:34] *** finn_elija is now known as FinnElija
[06:49:39] *** Quits: gggp (~gggp@123.113.189.142) (Ping timeout: 258 seconds)
[06:59:13] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[07:01:32] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 258 seconds)
[07:03:30] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 240 seconds)
[07:04:23] *** gggp_ is now known as gggp
[07:06:19] *** Quits: gryphn (~gryphon@84.17.45.19) (Quit: kthxbye)
[07:32:57] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[07:38:33] *** Joins: Martchus_ (~martchus@2a01:c22:6e9c:4d00:d250:99ff:fe49:3cce)
[07:40:07] *** Quits: Martchus (~martchus@dynamic-095-118-073-054.95.118.pool.telefonica.de) (Ping timeout: 245 seconds)
[08:09:45] <ether> quack.
[08:10:17] <mst> o< o< o< o< o< quaaaack
[08:16:51] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[08:19:53] *** Quits: kolcon (~kolcon@v.kolouch.org) (Read error: No route to host)
[08:20:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:20:44] *** Joins: gggp_ (~gggp@60.10.194.46)
[08:23:30] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[08:26:36] * GumbyPAN CPAN Upload: JSON-Schema-Tiny-0.009 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Tiny-0.009
[08:27:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:27:36] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 272 seconds)
[08:39:42] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[08:46:01] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:47:54] *** Joins: Manderson (~manderson@047-028-019-189.res.spectrum.com)
[08:49:38] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 258 seconds)
[09:01:37] *** Joins: Trigon (~reuben@73.127.1.41)
[09:08:18] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[09:16:27] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:31:45] *** Joins: gggp__ (~gggp@60.10.23.170)
[09:34:14] *** Joins: mattil (~mattil@87-95-0-241.bb.dnainternet.fi)
[09:34:27] *** Quits: mattil (~mattil@87-95-0-241.bb.dnainternet.fi) (Read error: Connection reset by peer)
[09:34:53] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[09:35:00] *** Joins: mattil (~mattil@airio.portalify.com)
[09:44:08] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[09:45:21] *** Joins: mattil (~mattil@dzc6cf9n0jhph4nv288-4.rev.dnainternet.fi)
[09:45:42] *** Joins: gggp_ (~gggp@60.10.23.170)
[09:46:49] *** Quits: mattil (~mattil@dzc6cf9n0jhph4nv288-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:47:23] *** Joins: mattil (~mattil@airio.portalify.com)
[09:49:03] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 258 seconds)
[09:52:06] *** Quits: randir (~randir@95-25-151-74.broadband.corbina.ru) (Remote host closed the connection)
[09:53:01] *** Joins: jayray_ (~jayray@user/jayray)
[09:53:40] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[09:53:54] *** Quits: rbraun (U3wrHtKW@user/rbraun) (Ping timeout: 240 seconds)
[09:54:12] *** Joins: rbraun (VGMVAJuJ@user/rbraun)
[09:54:13] *** Quits: jayray (~jayray@user/jayray) (Read error: Connection reset by peer)
[09:54:27] *** jayray_ is now known as jayray
[09:55:15] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[09:57:25] <shlomif> hi all
[09:57:49] *** Joins: mattil (~mattil@dzc6cf9n0jhph4nv288-4.rev.dnainternet.fi)
[09:58:07] *** Joins: jplesnik (~jplesnik@83.240.60.127)
[09:58:33] *** Joins: scp1 (~scp1@host-78-78-199-175.mobileonline.telia.com)
[09:58:33] *** Quits: scp1 (~scp1@host-78-78-199-175.mobileonline.telia.com) (Changing host)
[09:58:34] *** Joins: scp1 (~scp1@user/japh)
[09:59:33] *** Parts: casaca (~casaca@user/casaca) (ERC (IRC client for Emacs 27.2))
[10:00:29] *** Quits: japh (~scp1@user/japh) (Ping timeout: 258 seconds)
[10:02:39] *** Joins: randir (~randir@93.159.239.42)
[10:03:46] *** Quits: mattil (~mattil@dzc6cf9n0jhph4nv288-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:04:32] *** Joins: mattil (~mattil@airio.portalify.com)
[10:06:24] *** Joins: habamax (~habamax@109.68.184.34)
[10:06:25] *** Quits: habamax (~habamax@109.68.184.34) (Changing host)
[10:06:25] *** Joins: habamax (~habamax@user/habamax)
[10:12:03] *** Joins: horsepatat (~horsepata@212.3.198.230)
[10:13:00] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 256 seconds)
[10:16:47] * GumbyPAN CPAN Upload: App-ansifold-1.0902 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-ansifold-1.0902
[10:19:49] *** Joins: mattil (~mattil@dzc6cf9n0jhph4nv288-4.rev.dnainternet.fi)
[10:20:27] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:20:29] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:20:44] *** Joins: gggp__ (~gggp@123.112.144.149)
[10:21:07] *** Joins: mattil_ (~mattil@airio.portalify.com)
[10:23:56] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 258 seconds)
[10:24:06] <Mandevil> It would be nice if "JSON (relaxed)" was supportd in vscode.
[10:24:17] *** Quits: mattil (~mattil@dzc6cf9n0jhph4nv288-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[10:25:18] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:27:08] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[10:28:27] *** Quits: mattil_ (~mattil@airio.portalify.com) (Ping timeout: 245 seconds)
[10:34:11] *** Joins: cation (cation@user/cation)
[10:44:37] *** Quits: celphi (uid97751@user/celphi) (Quit: Connection closed for inactivity)
[10:46:13] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[10:47:21] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[10:54:46] *** Quits: gggp__ (~gggp@123.112.144.149) (Read error: Connection reset by peer)
[10:58:08] *** Joins: casaca (~casaca@user/casaca)
[10:59:08] <shlomif> Mandevil: it'd be nice if vscode were less wasteful: https://www.shlomifish.org/humour/bits/Atom-Text-Editor-edits-2_000_001-bytes/
[10:59:08] <Paperbot> Link title(s): [ Announcement: The Atom Text Editor has been Able To Edit a 2,000,001 Bytes-Long File - Shlomi Fis... ]
[11:01:14] * shlomif is not sure developing electron apps isactually easier than qt/etc. given html5/css3/js are such a circus
[11:10:04] <xenu> vscode is actually faster than emacs :P
[11:10:43] *** Joins: EGD (~egd@user/egd)
[11:13:24] *** Joins: habamax_ (~habamax@vpn.avast.com)
[11:15:43] <Mandevil> shlomif: vscode work great, even if it's an electron app.
[11:16:22] <shlomif> xenu: it is?
[11:16:27] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 258 seconds)
[11:16:31] <Mandevil> xenu: Actually I think Microsoft wants to move away from electron.
[11:16:55] <xenu> shlomif: it's sloooooooooooooow
[11:17:01] <xenu> (emacs)
[11:17:33] <xenu> it's not surprising, considering that it's basically a vm which runs elisp code
[11:17:38] <xenu> so it's not that different from electron
[11:17:41] <shlomif> Mandevil: i had nothing but grief w vscode , even for typescript
[11:17:47] <Mandevil> https://tomtalks.blog/2021/06/microsoft-teams-2-0-will-use-half-the-memory-dropping-electron-for-edge-webview2/
[11:17:49] <Paperbot> Link title(s): [ Microsoft Teams 2.0 will use half the memory, dropping Electron for Edge Webview2 – Tom Talks ]
[11:18:11] <Mandevil> shlomif: And what the grief is?
[11:22:33] <shlomif> Mandevil: slowness, counterintuitive key shortcuts, info overload...
[11:22:53] * shlomif went back to gvim/neovim
[11:25:14] *** Quits: habamax_ (~habamax@vpn.avast.com) (Changing host)
[11:25:14] *** Joins: habamax_ (~habamax@user/habamax)
[11:25:14] *** habamax_ is now known as habamax
[11:27:39] <Mandevil> shlomif: All of that is highly subjective.
[11:28:22] <Mandevil> For me the multicursor editing was an eye opener.
[11:29:02] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[11:30:41] *** Joins: diskin (~diskin@31.23.210.81)
[11:31:08] <shlomif> Mandevil: fine! blame it on me: «One of the central themes of the book is that users of these tools tend to blame themselves for being unable to use the tools easily, while the fault is in fact in the tools, because they lack usability and are designed badly.» - 
[11:32:18] * shlomif feels like he is the smartest person in this so-called "real world"
[11:32:56] <shlomif> which means i'm in the wrong world. :D
[11:35:24] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[11:35:58] <shlomif> Mandevil: do note that i like typescript, but getting its tooling to work was time consuming. not unlike docbook
[11:38:54] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[11:38:57] *** Joins: GOD (~mad@user/god)
[11:47:32] *** Joins: art1 (~romeyke@p200300ccdf05ce000af07dad06bba3a8.dip0.t-ipconnect.de)
[11:50:52] *** Joins: gggp (~gggp@60.10.194.46)
[11:54:44] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[11:59:26] *** Joins: ufobat (~martin@dynamic-095-118-096-010.95.118.pool.telefonica.de)
[12:01:22] *** Joins: gggp_ (~gggp@60.10.194.46)
[12:04:18] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[12:10:23] *** Joins: gggp__ (~gggp@60.10.194.46)
[12:13:34] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[12:18:53] *** Joins: randir_ (~randir@95-25-151-74.broadband.corbina.ru)
[12:20:37] *** Joins: aman (~aman@user/aman)
[12:21:28] *** Joins: gggp_ (~gggp@60.10.194.46)
[12:21:47] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 245 seconds)
[12:24:18] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[12:24:32] *** Joins: randir (~randir@93.159.239.42)
[12:26:32] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:28:26] *** Quits: randir_ (~randir@95-25-151-74.broadband.corbina.ru) (Ping timeout: 256 seconds)
[12:31:24] *** Joins: gggp__ (~gggp@111.63.14.121)
[12:34:38] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:34:39] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[12:37:46] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 272 seconds)
[12:39:05] *** Joins: Pali (~pali@user/pali)
[12:54:48] *** Joins: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net)
[13:10:15] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:13:39] *** Joins: pizdets_ (~pizdets@183.182.110.218)
[13:14:15] *** Quits: pizdets (~pizdets@183.182.111.75) (Ping timeout: 245 seconds)
[13:15:33] *** Joins: magla (~gelignite@55d4e731.access.ecotel.net)
[13:24:29] *** Quits: Pali (~pali@user/pali) (Ping timeout: 258 seconds)
[13:25:30] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 240 seconds)
[13:26:05] *** scp1 is now known as japh
[13:31:48] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:32:23] *** Joins: mattil (~mattil@airio.portalify.com)
[13:33:12] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:37:08] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 258 seconds)
[13:42:20] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[13:43:23] *** Joins: kensanata (~user@user/kensanata)
[13:55:45] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Remote host closed the connection)
[14:08:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:15:23] *** Quits: EGD (~egd@user/egd) ()
[14:17:00] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 258 seconds)
[14:18:50] *** Joins: gggp_ (~gggp@60.10.23.170)
[14:21:46] *** Quits: gggp__ (~gggp@111.63.14.121) (Ping timeout: 240 seconds)
[14:24:10] *** Quits: dimbag (~dimbag@pppoe-77-75-15-109.ppp.kmv.ru) (Quit: Leaving)
[14:25:54] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 276 seconds)
[14:27:14] * GumbyPAN CPAN Upload: Device-Yeelight-0.13 by JBAIER https://metacpan.org/release/JBAIER/Device-Yeelight-0.13
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:03] *** Joins: csrf (~csrf@user/csrf)
[14:32:20] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:42:55] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[14:46:23] *** Joins: gggp__ (~gggp@114.245.119.213)
[14:47:16] * GumbyPAN CPAN Upload: Astro-SIMBAD-Client-0.045_01 by WYANT https://metacpan.org/release/WYANT/Astro-SIMBAD-Client-0.045_01
[14:48:30] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[14:49:36] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[14:57:37] *** Quits: gggp__ (~gggp@114.245.119.213) (Remote host closed the connection)
[14:58:01] *** Joins: gggp__ (~gggp@60.10.194.46)
[14:58:42] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[15:00:22] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:04:59] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Remote host closed the connection)
[15:10:21] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[15:12:11] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[15:13:28] <ash_worksi> say you have a hashmap; is the best way to replace keys w/ values in a file to loop the hash and for each key, use s/$key/$value/g on the file or should/can you just interpolate the file somehow (like if you the file just contained $hash{key1}, etc)
[15:16:02] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 258 seconds)
[15:20:30] <pragma-> I watched a video of somebody using vscode just an hour ago. I was appalled at all the animations happening every time he typed a new character or moved his cursor. Just pop-up after pop-up obstructive his view of the code. Every time something popped up, he'd pause typing for a second or two. It was very noticeable.
[15:20:47] <pragma-> And there's this weird mini-map view of the code along the right side.
[15:21:04] <pragma-> Do you really need to see the super-zoomed out "shape" of your file?
[15:21:11] <tirnanog> ash_worksi: are the substrings to be replaced discernible in any way, before the point at which they would be looked up in the hash?
[15:21:31] <pragma-> obstructing, rather.
[15:22:34] <ash_worksi> tirnanog: they could be
[15:22:50] <ash_worksi> for example {{$key1}}
[15:23:19] <ash_worksi> or [@color] or whatever... I mean if its just replacement, then I get the idea
[15:23:34] <tirnanog> ash_worksi: then no, that's definitely not the best way.
[15:23:34] <LeoNerd> pragma-: I've never felt I needed that. I can always "feel" the code I've written
[15:23:36] <ash_worksi> but I was wondering if you could just treat the template like you have access to perl variables
[15:23:37] <ilmari> ash_worksi: in that case you can just do $file_contents =~ s/{{(.+?)}}/$hash{$1}/g;
[15:23:57] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:24:07] <ash_worksi> oh neat
[15:24:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:25:32] <ilmari> if you need a fallback for missing keys (and avoid an undef warning), yo ucan do s({{(.+?)}})($hash{$1} // '')ge
[15:26:03] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:26:16] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:26:29] <ilmari> or just use an actual templating engine like https://metacpan.org/pod/Text::Handlebars
[15:26:29] <Paperbot> Link title(s): [ Text::Handlebars - http://handlebarsjs.com/ for Text::Xslate - metacpan.org ]
[15:26:30] <tirnanog> also, the pattern should probably be stricter than .+?, going by the given examples. but yes, basically that.
[15:27:33] <ash_worksi> ilmari: isnt' .+? just .* ?
[15:27:50] <ilmari> no, it's "at least one but as few as possible"
[15:27:51] <tirnanog> no.
[15:28:20] <ash_worksi> ilmari: I see, so it doesnt pick up bar in '{{foo}}bar}}' 
[15:28:35] *** Joins: geli (~gelignite@55d4244c.access.ecotel.net)
[15:29:02] <ilmari> more importantly so that it matched '{{foo}} baz {{bar}}' as two separate tokens, not one with the content "foo}} baz {{bar"
[15:29:09] <ilmari> s/ed/es/
[15:29:31] <ilmari> of course, you could do something more restrictive like {{\w+}}
[15:29:36] <ash_worksi> yes
[15:29:40] <ilmari> oh, and the curlies need escaping
[15:29:55] <ash_worksi> ah
[15:30:31] <Altreus> pragma-: Actually I found that overview quite useful when I briefly used sublime
[15:30:39] <ash_worksi> just the `{` need to be escaped... right?
[15:30:59] <Altreus> Despite my expectations I could generally recognise the approximate shape of functions I was looking for and jump directly to them
[15:31:22] *** Quits: magla (~gelignite@55d4e731.access.ecotel.net) (Ping timeout: 245 seconds)
[15:36:44] *** gggp__ is now known as gggp
[15:37:44] <japh> well. had to see what it might look like in vim... https://i.imgur.com/7UBOQ1X.png
[15:42:32] <shlomif> japh: curious theme
[15:42:58] <shlomif> i mean :colorscheme
[15:45:20] *** Joins: gggp_ (~gggp@111.63.14.121)
[15:45:56] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[15:48:37] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[16:01:25] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:01:26] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[16:01:44] <aman> yeah, interesting colorscheme
[16:02:03] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:02:15] <japh> shlomif, https://github.com/trapd00r/neverland-vim-theme  and  https://github.com/trapd00r/vim-after-syntax-perl
[16:02:16] <Paperbot> Link title(s): [ GitHub - trapd00r/neverland-vim-theme: 256 colors CLI and GUI. It doesn't suck. ] [ GitHub - trapd00r/vim-after-syntax-perl: after/syntax/perl.vim ]
[16:02:32] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:02:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:06:26] <Altreus> japh: how did you achieve this?
[16:06:32] <Altreus> is that terminal vim?
[16:09:35] *** Joins: jaggz (~jaggz@user/jaggz)
[16:12:36] *** Joins: eramirez (~eramirez@49.149.137.68)
[16:17:18] *** Quits: art1 (~romeyke@p200300ccdf05ce000af07dad06bba3a8.dip0.t-ipconnect.de) (Quit: Leaving.)
[16:18:12] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[16:18:13] *** diskin is now known as Guest1915
[16:18:13] *** diskin_ is now known as diskin
[16:20:49] *** Quits: Guest1915 (~diskin@31.23.210.81) (Ping timeout: 258 seconds)
[16:26:13] *** Joins: jellyknight (~gelignite@55d4d9f5.access.ecotel.net)
[16:28:31] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:28:34] *** Quits: geli (~gelignite@55d4244c.access.ecotel.net) (Ping timeout: 240 seconds)
[16:37:52] *** Joins: gggp__ (~gggp@123.113.179.243)
[16:40:58] *** Quits: gggp_ (~gggp@111.63.14.121) (Ping timeout: 240 seconds)
[16:41:10] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 256 seconds)
[16:41:46] *** Quits: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net) (Ping timeout: 240 seconds)
[16:45:23] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[16:49:57] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 250 seconds)
[16:50:56] *** Joins: gggp_ (~gggp@60.10.23.170)
[16:53:06] <LeoNerd> Bah.. pre-Object::Pad code is annoying. All that extra mess about  my $self = shift;  and unpacking args.
[16:53:23] <LeoNerd> I've refactored some code to pull out common blobs of code into some helper methods, and the new code is now -longer- partly because of those lines
[16:54:16] *** Quits: gggp__ (~gggp@123.113.179.243) (Ping timeout: 272 seconds)
[16:55:41] <Altreus> Ahem this is Perl
[16:55:52] <Altreus> Your fancy-pants entitlement is showing
[16:56:01] <Altreus> Around here we dig into our special vars!
[16:57:14] *** Quits: jellyknight (~gelignite@55d4d9f5.access.ecotel.net) (Ping timeout: 258 seconds)
[16:57:36] *** Joins: magla (~gelignite@55d4e9d2.access.ecotel.net)
[17:01:21] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:08:45] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[17:09:26] *** Joins: gggp (~gggp@114.245.119.213)
[17:10:33] *** Joins: deadmarshal (~deadmarsh@95.38.118.162)
[17:24:25] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[17:24:59] *** Joins: LSD (~LSD@2.lsd.systems)
[17:26:44] *** Joins: Adoi (~Adoi@user/adoi)
[17:26:58] <leitz> Can you pass a hash reference to a sub via a sub? I'm getting "Can't use an undefined value as a HASH reference" on   https://github.com/LeamHall/book_collate/blob/custom_words/lib/Book/Collate/Writer/Report.pm#L54
[17:26:59] <Paperbot> Link title(s): [ book_collate/Report.pm at custom_words · LeamHall/book_collate · GitHub ]
[17:27:13] <Botje> of course you can.
[17:27:19] <leitz> but the file is there and various print statements seem to work. Until that line.
[17:27:46] <leitz> Likely I'm missing something simple, but am not sure what.
[17:28:00] <Altreus> you definitely are because this seems like it ought to work
[17:28:01] <Botje> leitz: you have a call to write_fry_stats with only a single argument.
[17:28:08] <Altreus> oh there it is
[17:28:25] <Botje> leitz: use Carp::Always; to get a nice stack trace on errors.
[17:28:52] <leitz> Botje, ah-ha! Forgot that I called the sub twice.
[17:29:08] *** Joins: celphi (uid97751@user/celphi)
[17:30:06] <Altreus> also use Params::ValidationCompiler to abort early
[17:30:13] <Altreus> or, yanno, signatures
[17:30:23] <Altreus> but you're targetting the last millennium so
[17:30:41] <Altreus> (when *was* 5.6 released?)
[17:31:12] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[17:32:09] <genio> 2000
[17:33:31] <Altreus> close then
[17:36:46] <leitz> The 5.6 was added by the module build process, not by me.
[17:36:51] <leitz> Though I don't mind it.
[17:38:14] <Altreus> It doesn't afford you many tools
[17:38:36] <Altreus> plus it means you're using Module::Build :P
[17:39:47] <japh> altreus, printf "\033]710;%s\007" 'xft:fixed:pixelsize=2:antialias=0'
[17:40:08] <leitz> Yup. While I like the idea of CPAN, I prefer to stick with standard library modules or close to it.
[17:40:42] <LeoNerd> OSC 710? WTF is that one?
[17:41:47] <Altreus> leitz: ... why
[17:42:17] <Altreus> I get pissed off because I can't use the latest alternative to something at work
[17:42:29] <Altreus> having to do everything the perly way
[17:42:41] <Altreus> instead of the easy way :P
[17:45:43] <leitz> Altreus:  https://perlmonks.org/?node_id=11134957
[17:45:45] <Paperbot> Link title(s): [ Prefer Pure Perl Core Modules ]
[17:45:46] *** Quits: horsepatat (~horsepata@212.3.198.230) (Ping timeout: 256 seconds)
[17:48:26] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[17:49:28] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[17:49:48] <Altreus> Most of these appear to be reasons to use Carton
[17:50:02] <Altreus> The pure-perl thing is fine but that's not what you said
[17:50:47] <Altreus> also I remain surprised that people still use perlmonks, but I think I am embittered about that place despite it having been years since I used it
[17:51:40] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 258 seconds)
[17:51:51] *** Joins: WinterStar (~IceLight@user/icelight)
[17:55:15] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:56:19] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:58:54] *** Quits: aman (~aman@user/aman) (Quit: aman)
[17:59:10] *** Joins: bmeneg (~bmeneg@2804:828:f233:5a4b:7e83:50f:9dc1:719b)
[18:01:00] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[18:01:36] * GumbyPAN CPAN Upload: Acme-Glue-2021.08 by LEEJO https://metacpan.org/release/LEEJO/Acme-Glue-2021.08
[18:02:52] <LeoNerd> If I run  system( "$^X", "-MSomeModule", ... )  the newly invoked perl will hunt in its preconfigured @INC for SomeModule. Is there a nice way I can inspect my own @INC to see if there's extra things I should tell it, via extra "-I" args?
[18:03:16] <LeoNerd> E.g. if my own process is running via  perl -Mblib ...  then that will have added blib/arch blib/lib into the list, so I want to forward those on
[18:08:16] <Altreus> Nice way? :D
[18:08:34] <Altreus> you want to ask your current perl what its @INC is by default?
[18:09:08] <LeoNerd> I guess in a way, yes. Perhaps compare my current @INC with the default to work out what extra ones to add
[18:10:38] <Altreus> The only way I could come up with was to ask system $^X what @INC is
[18:11:07] *** Joins: geli (~gelignite@55d40e37.access.ecotel.net)
[18:11:16] <LeoNerd> Oh interesting thought. I could just run it once to capture its output and then compare. Hrm
[18:11:33] <Altreus> But you asked for a nice way
[18:11:33] <LeoNerd> ... actually since I'm in full control over the target code, ... screw it, I'll just feed in my entire @INC anyway
[18:11:46] <Altreus> oh yeah I suppose it'll ignore ones it already has
[18:12:22] *** Quits: magla (~gelignite@55d4e9d2.access.ecotel.net) (Ping timeout: 258 seconds)
[18:12:33] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[18:12:49] <Altreus> hopefully you're not approaching any sort of argv limit that way
[18:13:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[18:14:27] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:14:32] <gordonfish> LeoNerd: You could check if $0 matched m{/perl(?:-?5(?:\.\d+){0,2})$} or so, and if it is, check @ARGV for -I args.
[18:15:43] <gordonfish> You'd onky have -I if yoh started the program as perl ...
[18:16:08] <LeoNerd> @ARGV doesn't contain all the args the original perl process saw
[18:16:15] <gordonfish> *only have -I args
[18:16:17] <LeoNerd> also things like BEGIN { push @INC, ... } or whatever
[18:16:28] <gordonfish> ah
[18:16:40] <gordonfish> right
[18:17:40] *** Quits: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com) (Ping timeout: 258 seconds)
[18:18:48] <gordonfish> You coukd liad Config.m and filter out the lib paths from @INC and generate -I args from any remaining elements.
[18:19:00] <LeoNerd> Ooh, does Config give the default list?
[18:19:47] <gordonfish> archlib, privlib, sitelib, sitearch, etc
[18:19:49] <Altreus> I prefer the JFDI version of just sending it all because it's the same executable so it'll have the same set anyway
[18:19:57] <Altreus> or rather a subset
[18:20:31] <Altreus> is there a chance you end up running something else and polluting it with the wrong default paths?
[18:20:43] <LeoNerd> I don't imagine so. Ijust odn't know how to clear the list first
[18:21:04] <LeoNerd> I sortof want to do   perl -E 'BEGIN { @INC = () }' -I(lots of things) -E 'actual code'
[18:21:38] * GumbyPAN CPAN Upload: Quiq-1.193 by FSEITZ https://metacpan.org/release/FSEITZ/Quiq-1.193
[18:23:44] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[18:24:03] <Altreus> -E presumably loads strict and warnings from @INC so you'd already have used @INC by then anyway
[18:24:15] <Altreus> i daresay other things happen too
[18:24:32] <gordonfish> Oh, and any sitelib + inc_version_list versions, if there are any
[18:24:33] <LeoNerd> -E doesn't use strict.pm or warnings.pm
[18:24:46] <Altreus> o rly
[18:24:49] <LeoNerd> -E twiddles the hints bits directly without loading files off disk
[18:25:24] <Altreus> is there a significant difference between   perl -E 'BEGIN { @INC = () }' -I(lots of things)   and   perl-I(lots of things)  ?
[18:25:33] <Altreus> apart from the fact the latter will actually work
[18:25:52] <Altreus> er except for the space I deleted :D
[18:26:00] <Altreus> Good thing we're talking to humans, right? Right?
[18:26:47] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[18:27:12] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[18:27:16] *** Quits: GOD (~mad@user/god) (Quit: flying away from here)
[18:30:34] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[18:30:48] <leitz> Altreus, that does not compute.
[18:30:57] <leitz> Exterminate! Exterminate!
[18:35:27] <LeoNerd> Ah, I have it.  [ $^X, -E '@INC = @ARGV; ...', grep { !ref } @INC ]
[18:35:33] <LeoNerd> Just send the INC list via ARGV ;)
[18:36:55] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[18:37:08] <Altreus> hopefully those refs weren't important
[18:37:17] <LeoNerd> Hopefuly
[18:40:08] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:46:08] <gordonfish> LeoNerd: Nice
[18:47:19] <gordonfish> That should work great as long as the perl being started is the same version as the starter's perl.
[18:47:36] *** Joins: dimbag (~dimbag@ppp-62-76-16-3.ppp.kmv.ru)
[18:47:38] <gordonfish> (Same version and location)
[18:48:20] <LeoNerd> Yeah. Well, as usual with these things, if the perl version itself has been updated then spawn-style code is going to break
[18:48:43] <LeoNerd> But yes, in summary I now have  model => "spawn"  working for IO::Async::Routine, and hence Function..
[18:48:56] <LeoNerd> So now you can run IaFunction code in a new _process_ that isn't just forked from the existing one
[18:57:34] *** Quits: jplesnik (~jplesnik@83.240.60.127) (Quit: Leaving)
[19:01:01] *** Joins: randir (~randir@95-25-151-74.broadband.corbina.ru)
[19:01:52] <LeoNerd> For my next trick: integrate leont's new  threads::csp  ;)
[19:03:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[19:03:31] <Altreus> can $^X end up running something else?
[19:03:43] <Altreus> I suppose if it were updated since the script started
[19:03:59] <Altreus> caveat computator
[19:07:08] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:11:43] * GumbyPAN CPAN Upload: DateTime-TimeZone-Local-Win32-2.05 by DAPINK https://metacpan.org/release/DAPINK/DateTime-TimeZone-Local-Win32-2.05
[19:13:49] <leont> $^X is an absolute path on platforms that support it, but just the executable name on others
[19:16:49] <Altreus> mm, but even the absolute path could be replaced during the runtime of the script
[19:22:06] <Grinnz> yes, you can break lots of things if you really try
[19:23:01] <Altreus> a long-running script might have its perl security-updated underneath it but I doubt that would cause @INC issues :)
[19:23:11] <Altreus> unless it removed '.' for example, but maybe we're past that
[19:24:17] <Grinnz> says the person still on 5.14
[19:24:56] <ehuelsmann[m]> security updates on 5.14? 
[19:24:59] <ehuelsmann[m]> :-p
[19:25:21] <Altreus> I'm not on 5.14
[19:25:22] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[19:25:29] <Altreus> I'm working for a company stuck on 5.14
[19:25:49] <Altreus> My own projects suffer from being updated more often than actually worked on
[19:25:51] <Altreus> :D
[19:26:55] *** Joins: aman (~aman@user/aman)
[19:27:51] *** Joins: zakame (~zakame@user/zakame)
[19:29:34] *** Joins: gryphn (~gryphon@84.17.45.19)
[19:34:32] *** Joins: talexb (~tab@bras-base-toroon0335w-grc-24-174-95-206-118.dsl.bell.ca)
[19:36:16] <talexb> Question: A colleague is insisting I put 'use strict; and use warnings;' into modules I write, but it's my contention that having strict and warnings in the script that uses that module should be enough. Is this a stylistic changed that I'm not aware of?
[19:38:01] <alh> They need to be in every file
[19:38:18] <Altreus> Yeah they're lexical
[19:38:43] <Altreus> in fact the very reason you don't use -w on the command line is that it is *not* lexical
[19:38:52] <gryphn> Lexical to every file, though there are ways to turn them on that don't involve strict/warnings. (i.e. Modern::Perl, Moose, etc.)
[19:39:12] <Altreus> indeed, so you must have that boilerplate or something else that activates it for you, or you don't ge tit
[19:39:15] <Altreus> indeed, so you must have that boilerplate or something else that activates it for you, or you don't get it
[19:39:19] <Altreus> oops, not disord
[19:39:23] <Altreus> grrr
[19:39:32] <talexb> Bouncy keyboard .. :)
[19:39:42] <Altreus> Logically, it would not make sense for the script to be in control of whether your module compiles or not, would it?
[19:39:50] <talexb> Ugh, OK, I hate it when it's something I thought I knew .. 
[19:40:15] <Altreus> You're too familiar a face to be asking questions like that
[19:40:20] <gryphn> To reduce the boilerplate in my projects, I wrote: exact (turns on strict and warnings and a bunch of other stuff)
[19:40:21] <talexb> Altreus, That's it .. I figure if the script turned that stuff on, it was on wherever the compiler went.
[19:40:24] <Altreus> I feel like I've slid into another universe
[19:40:42] *** Joins: thrig (~thrig@65.113.153.50)
[19:40:55] <talexb> :/
[19:41:01] <Altreus> talexb: Ah, but if you test the code with a strictless script then you would not have tested it well
[19:41:11] <Altreus> This is actually quite similar to the "use lib" problem
[19:41:12] *** Joins: Adoi (~Adoi@user/adoi)
[19:41:24] <talexb> OK, thanks for the answers .. I have lived and learned.
[19:41:28] <Altreus> It's really just a matter of encapsulation at the end of the day
[19:41:38] <Altreus> If thing needs feature, thing should demand feature
[19:41:40] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.1 Beta Build (2021/08/05 UTC) 64 Bit)
[19:41:44] <Altreus> keeps it neat
[19:41:54] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:42:16] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:45:00] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[19:51:47] * GumbyPAN CPAN Upload: Mojo-Leds-1.05 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-Leds-1.05
[19:54:12] <gordonfish> LeoNerd: Awesome
[19:56:47] * GumbyPAN CPAN Upload: CallBackery-0.38.16 by OETIKER https://metacpan.org/release/OETIKER/CallBackery-0.38.16
[19:58:26] *** Joins: jaytee80 (~jaytee80@47.190.14.171)
[19:59:42] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[20:01:48] * GumbyPAN CPAN Upload: CallBackery-0.38.17 by OETIKER https://metacpan.org/release/OETIKER/CallBackery-0.38.17
[20:02:03] *** Joins: akaWolf (~akaWolf@akawolf.org)
[20:20:48] *** Quits: ufobat (~martin@dynamic-095-118-096-010.95.118.pool.telefonica.de) (Ping timeout: 276 seconds)
[20:22:54] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[20:23:07] *** Joins: woei (~woei@144.248.22.115)
[20:32:00] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:44:05] *** Joins: mattil (~mattil@87-92-27-109.bb.dnainternet.fi)
[20:45:11] *** Quits: aman (~aman@user/aman) (Quit: aman)
[20:48:48] *** Quits: mattil (~mattil@87-92-27-109.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[21:06:55] * GumbyPAN CPAN Upload: Data-Tersify-1.002 by SKINGTON https://metacpan.org/release/SKINGTON/Data-Tersify-1.002
[21:08:21] <simcop2387> weirdest hard drives ever.  ai surveilence optimized hdds, https://www.amazon.com/Seagate-Skyhawk-Surveillance-Hard-Drive/dp/B085RH2FR7/
[21:08:23] <Paperbot> Link title(s): [ Amazon.com: Seagate Skyhawk AI 10TB Video Internal Hard Drive HDD – 3.5 Inch SATA 6Gb/s 256MB Cac... ]
[21:09:05] <thrig> the term "AI" was invented to get money...
[21:11:56] * GumbyPAN CPAN Upload: Data-Tersify-1.003 by SKINGTON https://metacpan.org/release/SKINGTON/Data-Tersify-1.003
[21:16:14] <genio> shlomif: Can you close that issue, please? We don't have permissions to the GitHub org right now.
[21:16:56] * GumbyPAN CPAN Upload: Data-Tersify-Plugin-DBIx-Class-1.003 by SKINGTON https://metacpan.org/release/SKINGTON/Data-Tersify-Plugin-DBIx-Class-1.003
[21:18:57] <shlomif> genio: done
[21:19:25] <genio> Thank you!
[21:20:30] <shlomif> thrig: https://en.wikipedia.org/wiki/AI_winter
[21:20:31] <Paperbot> Link title(s): [ AI winter - Wikipedia ]
[21:28:52] *** Joins: ufobat (~martin@dynamic-095-118-096-010.95.118.pool.telefonica.de)
[21:32:51] *** Joins: bit4bit_ (~bit4bit@181.49.102.14)
[21:34:47] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[21:35:53] *** Joins: Pali (~pali@user/pali)
[21:40:22] *** Joins: mattil (~mattilinn@87-92-27-109.bb.dnainternet.fi)
[21:42:44] <gordonfish> Argh, even after all these years, I still manage to get bit by the windows/cmd.exe/batch crazyness where in "" strings on the command like, a % is a %, but in a batch file, it needs to be %% to get an actual % sign. So guess what happens when one copies a bit from a batch file to test on the command line that has some (s)printf statements...
[21:44:31] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[21:45:15] <gordonfish> s/command\K like/ line/
[21:46:36] <ash_m> mst are people who run your globals script to set up their environment supposed to make changes to it if they need to add a user or permissions? Or should they never have to do that?
[21:46:59] * GumbyPAN CPAN Upload: Mojo-Leds-1.06 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-Leds-1.06
[21:48:49] <gordonfish> ash_m: I don't know what global script this is, but in most general cases I've seen, users can have their own local global/overrides if need me. Sort of like how things like git configs work.
[21:49:30] *** Quits: schelcj (~schelcj@096-035-119-047.res.spectrum.com) (Ping timeout: 240 seconds)
[21:49:33] <ash_m> gordonfish I'm actually talking about migrations
[21:49:38] <ash_m> :P
[21:49:46] <gordonfish> What sort of migrations?
[21:49:56] <ash_m> Postgres
[21:50:54] *** Quits: Bluewind (~Bluewind@user/bluewind) (Ping timeout: 252 seconds)
[21:51:37] <thrig> european or african postgres?
[21:51:56] <ash_m> mst keeps their permissions separate from their migrations
[21:52:29] <ash_m> thrig EU, I suppose
[21:53:04] <gordonfish> mysqlxit is always good
[21:57:54] * ash_m prays mst will come back
[22:00:22] <gordonfish> You may need to make an offering at the altar
[22:00:36] <thrig> altair is pretty far from here though
[22:04:33] *** Joins: EGD (~egd@user/egd)
[22:04:44] *** Joins: Bluewind (~Bluewind@user/bluewind)
[22:07:06] *** Joins: Masklin (~joel@89-233-200-127.cust.bredband2.com)
[22:08:30] *** Quits: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com) (Ping timeout: 252 seconds)
[22:13:54] *** Quits: gggp (~gggp@114.245.119.213) (Ping timeout: 276 seconds)
[22:19:50] *** Joins: gast0n (~g4570n@user/gast0n)
[22:20:00] *** Quits: deadmarshal (~deadmarsh@95.38.118.162) (Ping timeout: 258 seconds)
[22:27:04] * GumbyPAN CPAN Upload: Mojo-DOM-Role-Restrict-0.01 by LNATION https://metacpan.org/release/LNATION/Mojo-DOM-Role-Restrict-0.01
[22:31:46] *** Quits: ufobat (~martin@dynamic-095-118-096-010.95.118.pool.telefonica.de) (Ping timeout: 240 seconds)
[22:32:42] *** Joins: Dreadnaught (Kulrak@n122-109-33-182.rdl1.qld.optusnet.com.au)
[22:35:20] *** Quits: Kulrak (Kulrak@n122-109-226-190.rdl2.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[22:41:28] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[22:45:30] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:49:27] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 258 seconds)
[22:56:13] *** Quits: XV8 (~XV8@2601:5cb:c001:50:df69:766a:bc37:5a0b) (Remote host closed the connection)
[23:02:07] * GumbyPAN CPAN Upload: Bot-IRC-1.37 by GRYPHON https://metacpan.org/release/GRYPHON/Bot-IRC-1.37
[23:15:38] *** Joins: mattil_ (~mattil@87-92-27-109.bb.dnainternet.fi)
[23:20:07] *** Quits: mattil_ (~mattil@87-92-27-109.bb.dnainternet.fi) (Ping timeout: 245 seconds)
[23:24:35] <genio> awesome side benefit from going to France next week... I'm not allowed to work from outside of the US. I won't have access to anything work related. YAY
[23:27:28] *** Quits: dimbag (~dimbag@ppp-62-76-16-3.ppp.kmv.ru) (Quit: Leaving)
[23:28:07] <Mandevil> genio: Because security?
[23:28:46] <genio> yep. government things
[23:36:02] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:39:32] *** Quits: furrymcgee (~devuan@31.179.186.66) (Client Quit)
[23:39:39] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:47:38] *** Joins: schelcj (~schelcj@096-035-119-047.res.spectrum.com)
[23:55:36] <simcop2387> genio: nope, just means that you won't be allowed to board the flight for security reasons
[23:59:34] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
