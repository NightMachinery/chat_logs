[00:00:46] *** Joins: rawtaz (~rawtaz@user/rawtaz)
[00:00:49] <rawtaz> hi again
[00:00:53] <dodo> CSWookie: why do you want to do that?
[00:01:01] <rawtaz> im having a problem starting a container. im getting this error: ERROR: for gitea_gitea_1  Cannot start service gitea: network 512cd90a0057466f9029f0f2240b29049209f5069351da9d5db5cc939053118f not found
[00:01:28] <rawtaz> but there is no such network if i `docker network ls`. where could gitea possibly get that from? is there some stale info i can prune for that container?
[00:01:41] <rawtaz> im using docker-compose to run the thing btw.
[00:02:05] <dodo> rawtaz: sounds like the network the container is using was deleted.. i'd try and prune the container..
[00:02:18] <CSWookie> dodo I want to run ansible inside a docker container, and one of the target hosts is the local host.
[00:02:41] <rawtaz> dodo: you were exactly right :)
[00:02:59] * rawtaz silently wonders what network that was that went missing
[00:03:29] <rawtaz> dodo: also i imagene that you are "The Dodo" on youtube <3
[00:03:33] <rawtaz> imagine*
[00:03:42] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[00:03:47] <dodo> CSWookie: mmmh... dunno.. you'd probably have to set up the network specifically to allow this
[00:04:43] <dodo> CSWookie: it sounds weird to me tbh :)
[00:05:26] *** Joins: rpthms (~rpthms@user/rpthms)
[00:06:32] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 240 seconds)
[00:07:34] *** thegodsq- is now known as thegodsquirrel
[00:08:23] *** Quits: Mach` (~Mach@86.121.208.210) (Ping timeout: 246 seconds)
[00:08:30] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:08:54] *** Quits: CSWookie (~CSWookie@144.202.134.98) (Ping timeout: 256 seconds)
[00:12:30] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[00:15:16] *** Quits: jgrim66 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Quit: Buh bye!)
[00:18:38] *** Joins: jgrim666 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[00:19:32] <rawtaz> i have a problem.. i have a traefik container in a compose solution, which creates a network named proxy, and in another compose solution i have a gitea container that uses that external proxy network. i can up and down the gitea compose just fine, but if i up it after having downed and uped the traefik compose, which changes the id of that proxy network, the gitea container fails to start because it's not finding a network that old id.
[00:20:08] <rawtaz> i dont get why the gitea container would try to use that old network id instead of just looking up the current proxy network that's been created after i restarted traefik, and use that instead
[00:20:33] *** Joins: CSWookie (~CSWookie@2601:804:8680:90:60c3:1c0f:dd9f:c8f4)
[00:23:03] *** pizzaiolo is now known as pizza
[00:30:07] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[00:30:41] *** Joins: monowire (~mono@gateway/tor-sasl/monowire)
[00:32:02] <SomeDamnBody> I'm having trouble connecting hosts using docker. I read up on swarm and networking overlays. I can get ping to work, but when I run my application on port 9999, it can't connect
[00:32:24] *** Joins: nickdiazswag209 (~bjpenn_@13.110.54.41)
[00:32:51] <tabakhase> rawtaz downing traefik shouldnt even work...
[00:33:06] <tabakhase> it should yell about cant remove network while it still has members or so
[00:34:04] *** Quits: monowire (~mono@gateway/tor-sasl/monowire) (Client Quit)
[00:34:20] <tabakhase> a 3rd compose and make it external on both may do it :P - smells still kinda wrong tho...
[00:35:00] <rawtaz> tabakhase: it does if i have the gitea compose up yes. thats not a problem. the problem is that if i do this: up traefik, up gitea, down gitea, up gitea, down gitea - then that works. but if i after that do this: down traefik, up traefik (the proxy network gets a new ID), up gitea - then gitea complains it cant find the network the old id that proxy had.
[00:35:53] <rawtaz> i dont why the literal hell the gitea one would try to find the old proxy id instead of just looking for a network named "proxy" and use that. i specified that it should use the NAME "proxy", not an ID, in the gitea compose file.
[00:37:31] <tabakhase> CSWookie "the gateway IP" is your host (newer docker versions even provide some docker-host.internal DNS or so) -- but for configmgmt or such just hopping namespaces may be simpler given its kinda privilidged anyhow... think: `docker run --privileged --pid=host -it alpine:3.8 nsenter -t 1 -m -u -n -i sh`
[00:38:32] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 268 seconds)
[00:38:43] <rawtaz> ok, i found a way to reproduce it, that is both trigger and not trigger it. it has something to do with having specified two networks in the traefik compose file it seems..
[00:38:46] * rawtaz digs further
[00:38:47] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 264 seconds)
[00:39:12] <tabakhase> rawtaz as said, the "but if i after that do this: down traefik" step should already fail...
[00:39:42] *** Quits: CSWookie (~CSWookie@2601:804:8680:90:60c3:1c0f:dd9f:c8f4) (Quit: Client closed)
[00:40:41] *** Joins: bouncy (~ben@user/benoit)
[00:41:18] <tabakhase> and if gittea is down at this point there shouldnt be an issue anywhere either..
[00:41:31] <rawtaz> tabakhase: i understand what you are saying, but i am not uping and downing them in the sequence you think. i never down traefik while gitea is up.
[00:42:32] <rawtaz> let me rephrase the issue: i can up and down and up and down gitea all i want as long as traefik is up. but if i then down gitea and down+up traefik (ie restarts it), gitea fails to up.
[00:42:43] <tabakhase> maybe drop your compose files on a paste to see whats going on there... - im kinda undecided on if youre trying something wrong, or just explaining it in a way i dont understand :P
[00:42:46] <rawtaz> and that is because for some reason it tries to use the OLD id of the external network that traefik creates
[00:43:05] <rawtaz> yeah. i found a way to trigger/reproduce it now, will try to make a smaller case first
[00:43:13] *** Joins: brandonkal (~brandonka@user/brandonkal)
[00:43:31] <tabakhase> and do you actually down - or just stop it :/
[00:43:44] <rawtaz> i docker-compose up and docker-compose down
[00:44:02] <rawtaz> and addition; if when that problem happens i prune the gitea container, i can then up gitea just fine.
[00:44:27] <rawtaz> it just doesnt like it when i have restarted traefik (down+up)
[00:44:29] <tabakhase> there is nothing to prune....
[00:44:35] <rawtaz> the container is to prune.
[00:44:38] <tabakhase> your first down should rip it out already
[00:44:43] <tabakhase> not saying its not a compose bug :P just things dont rly fit together yet :D
[00:44:56] <rawtaz> why would docker-compose down delete a container?
[00:45:05] <rawtaz> it stops the continaer, yes, but doesnt delete it
[00:45:37] <tabakhase> sure it does, thats its whole job - "docker container stop && docker container rm" == docker-compose down
[00:45:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:45:53] <tabakhase> and -v adds a "docker volume delete" to that
[00:46:12] <rawtaz> well, all i can say on that part is that if i run docker container prune, i can up gitea again. so there's something fscked up going on.
[00:46:49] <rawtaz> ill see what i can find anyway, im gonna try isolating this more :)
[00:48:35] <tabakhase> check what compose actually prints and its exitcode... sound a bit as if youre left with something that it tries to revive instead of doing as it should... - cause not only should the "down" remove it, but also does the "up" verify exactly this name-network-id translation to still be correct and would recreate the container if there needs to be...
[00:48:40] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:717e:8cbe:b21c:a5fa) ()
[00:48:48] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[00:49:08] <tabakhase> maybe also doublecheck what versions youre running - for docker as well as the docker-compose binary....
[00:49:27] <rawtaz> ok
[00:49:30] <rawtaz> thanks
[00:50:13] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 256 seconds)
[00:50:37] *** Parts: strk (~strk@user/strk) (WeeChat 3.0.1)
[00:51:08] <rawtaz> just putting it out there: https://kopy.io/C43Tq
[00:53:11] <tabakhase> compose 1.25.0 from 2019-11-18 - so certainly a good place to start by refreshing this :P
[00:54:28] <tabakhase> if by the looks you have a pip variant installed? delete that and just drop the binary in /usr/local/bin or whatever :P
[00:55:24] <rawtaz> its a freshly installed debian bullseye with the official docker repos installed
[00:55:37] <rawtaz> ill see if i can find out if docker was installed from that or not
[00:55:47] <rawtaz> perhaps it got this from the debian repos for some reason
[00:56:02] <rawtaz> do you mean pip variant of docker-compose?
[00:56:11] <tabakhase> ye compose is NOT in the "docker repos"
[00:57:54] <rawtaz> hm so https://github.com/docker/compose/ is in Go now.. was that changed with version 2?
[00:59:05] <rawtaz> -d
[00:59:24] *** Joins: bouncy (~ben@user/benoit)
[01:00:49] <rawtaz> i have noticed that docker says it now has compose as a command , but every time i tried that compose it wasnt behaving the same so i never got to use it for real
[01:01:47] <tabakhase> ye its a shitshow... *looks at 'docker stack'*
[01:02:16] *** Joins: oo (~Guest8@user/oo)
[01:02:18] <oo> is hub.docker.com down?
[01:02:19] <rawtaz> hm even in debian testing the version of docker-compose is 1.27.something
[01:03:05] *** Quits: lithium (~lithium@user/lithium) (Quit: Textual IRC Client: www.textualapp.com)
[01:03:14] <ikke> oo: works for me
[01:03:20] <rawtaz> i was just about to say the same
[01:03:35] <oo> rawtaz: It's down for you too?
[01:03:42] <doc> Using multistage builds with both buildkit enabled and/or buildx installed I have in my Dockerfile "RUN --mount=type=cache apt ..." or "... pip install ..." with appropriate directories for both apt cache and pip cache and see little to no difference. Is there anything else I might be missing?
[01:03:43] <rawtaz> no, sorry, it's up
[01:04:02] <oo> Extremely weird, like my IP has temporarily been blackholed
[01:04:24] <rawtaz> perhaps you pulled to much :>
[01:04:42] <oo> Nah, definitely not that
[01:07:47] *** Quits: oo (~Guest8@user/oo) (Quit: Client closed)
[01:09:56] *** Joins: denningsrogue0 (~denningsr@206.214.235.175)
[01:10:20] *** Quits: denningsrogue (~denningsr@206.214.235.175) (Ping timeout: 246 seconds)
[01:10:20] *** denningsrogue0 is now known as denningsrogue
[01:16:32] <rawtaz> tabakhase: you were right, it does remove containers too.
[01:18:20] *** Quits: LtHummus (~lthummus@97.126.106.255) (Ping timeout: 244 seconds)
[01:22:28] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 244 seconds)
[01:22:32] <rawtaz> and i noticed that if you press Ctrl+c when having done docker-compose up without -d then it only stops the containers, doenst remove them
[01:25:47] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[01:26:29] *** Joins: LtHummus (~lthummus@97-126-116-82.tukw.qwest.net)
[01:28:26] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 245 seconds)
[01:29:02] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 240 seconds)
[01:29:15] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[01:31:07] *** Joins: bouncy (~ben@user/benoit)
[01:31:21] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 245 seconds)
[01:33:02] *** Joins: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com)
[01:33:24] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[01:33:49] *** Joins: jazzy (~jaziz@user/jaziz)
[01:34:15] *** Quits: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com) (Client Quit)
[01:35:05] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[01:36:02] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[01:39:42] *** Quits: brandonkal (~brandonka@user/brandonkal) (Ping timeout: 260 seconds)
[01:44:03] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 256 seconds)
[01:44:16] *** Joins: kevinnn (~kevinnn@2600:8802:370b:7100::be93)
[01:44:41] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:47:11] *** Joins: bouncy (~ben@user/benoit)
[01:50:36] *** Joins: nrg (~NRG@user/nrg)
[01:55:20] *** Joins: Atque (~Atque@user/atque)
[01:57:52] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:58:28] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:58:32] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 240 seconds)
[01:59:45] *** Joins: emerent_ (~quassel@p200300cd57485556ba27ebfffed28a59.dip0.t-ipconnect.de)
[01:59:45] *** Quits: emerent (~quassel@p200300cd574855efba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (erbium.libera.chat (Nickname regained by services)))
[01:59:45] *** emerent_ is now known as emerent
[01:59:53] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:01:12] <rawtaz> uhm. so, which of these two syntaxes is it a good idea to use? https://docs.docker.com/compose/compose-file/compose-file-v3/#labels-2
[02:01:37] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[02:01:38] <rawtaz> i know that for environment ive read that theres a benefit to using the first type of syntax there
[02:04:15] *** Quits: BenjiProd (~BenjiProd@user/benjiprod) (Remote host closed the connection)
[02:05:48] *** Quits: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr) (Quit: Lost terminal)
[02:11:54] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:12:16] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:16:55] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[02:17:34] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[02:18:21] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:18:24] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:22:03] *** Quits: bouncy (~ben@user/benoit) (Quit: WeeChat 2.8)
[02:22:06] <arkanoid> question. Why if I do "docker run -i -t continuumio/miniconda3 /bin/bash" /etc/debian_version is 10.10 (buster), but https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/debian/Dockerfile says it should be bullseye?
[02:22:35] *** Quits: nickdiazswag209 (~bjpenn_@13.110.54.41) (Ping timeout: 256 seconds)
[02:27:43] <rawtaz> arkanoid: if you do `docker pull continuumio/miniconda3` what does it say?
[02:28:03] <tabakhase> arkanoid outdated image either on the hub, a different tag, or your local cache?
[02:28:40] <tabakhase> maybe your looking for :master ? https://hub.docker.com/r/continuumio/miniconda3/tags
[02:28:53] *** Joins: bouncy (~ben@user/benoit)
[02:29:26] <rawtaz> tabakhase: can you tell me what's wrong with the hub.docker.com folks in that they dont link to the corresponding github repository?
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:32] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:23] <tabakhase> rawtaz not rly, have nothing published on the hub...
[02:31:46] <rawtaz> ok
[02:32:09] <tabakhase> maybe its payware, or locks the readme, or integrates stupidly with ci or so...
[02:32:36] <arkanoid> tabakhase: you're right, :master did the right thing
[02:32:45] <arkanoid> quite confused between :latest and :master
[02:33:09] <rawtaz> its just labels
[02:33:17] <rawtaz> i rarely see :master. but :latest is extremely common
[02:33:30] <arkanoid> how do I tell which git checkout is :tag in hub?
[02:34:02] <tabakhase> you dont ;-)
[02:34:42] <arkanoid> :|
[02:34:52] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:35:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[02:35:08] <arkanoid> isn't this extremely dangerous for reproducibility?
[02:35:10] <tabakhase> in some cases you can - https://docs.docker.com/docker-hub/builds/ - but anything else, who knows whatever the author pushed to the hub as what :shrugs:
[02:36:03] *** Joins: PanickedKernel (~PanickedK@user/panickedkernel)
[02:40:09] *** Quits: LtHummus (~lthummus@97-126-116-82.tukw.qwest.net) (Ping timeout: 256 seconds)
[02:45:33] *** Quits: kevinnn (~kevinnn@2600:8802:370b:7100::be93) (Quit: Client closed)
[02:49:23] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:52:54] *** Joins: nickdiazswag209 (~bjpenn_@98.45.203.239)
[02:59:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:03:26] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:03:51] *** Joins: pycurious (~Adium@user/pycurious)
[03:07:33] *** Joins: denningsrogue1 (~denningsr@206.214.235.175)
[03:08:05] <rawtaz> so, im setting root's shell to nologin. i wonder if there's any security point in also setting their home to /nonexistent.. can you think of any?
[03:08:57] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[03:09:37] *** Quits: denningsrogue (~denningsr@206.214.235.175) (Ping timeout: 256 seconds)
[03:09:37] *** denningsrogue1 is now known as denningsrogue
[03:14:44] *** Quits: tex (~super@user/dix) (Ping timeout: 250 seconds)
[03:18:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:27:37] *** Joins: nickjj_ (~nickjj@user/nickjj)
[03:31:12] *** Quits: nickjj (~nickjj@user/nickjj) (Ping timeout: 268 seconds)
[03:37:02] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 240 seconds)
[03:38:14] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[03:38:47] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:39:08] *** Joins: bouncy (~ben@user/benoit)
[03:43:20] *** Joins: pycurious (~Adium@user/pycurious)
[03:50:14] <rawtaz> im looking for a docker compose equivalent of docker's --security-opt=no-new-privileges, but the security_opt setting in compose files seems to talk about something else? https://docs.docker.com/compose/compose-file/compose-file-v3/#security_opt
[03:50:54] <rawtaz> am i misunderstanding it entirely, can i specify e.g. security-opt=no-new-privileges in there or something?
[03:50:59] *** Joins: nickdiaz1wag209 (~bjpenn_@98.45.203.239)
[03:51:02] *** Quits: nickdiazswag209 (~bjpenn_@98.45.203.239) (Read error: Connection reset by peer)
[03:51:17] <rawtaz> the description "Override the default labeling scheme for each container" seems completely off, i dont get what it has to do with security options
[03:53:46] <rdrg109> [Q] Newbie here. Suppose I change the content of the .env file when my container is stopped. Should I run "docker-compose up -d" or "docker-compose start" for the changes to .env to be applied?
[03:55:58] <rawtaz> i dont think it should matter, but why not just try it? you can  docker-compose exec <servicename> sh  into it and see what the environment looks like
[04:02:50] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:04:53] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[04:05:19] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:06:41] *** Joins: pycurious (~Adium@user/pycurious)
[04:09:27] <rawtaz> fricken amazing. --read-only isnt even documented in https://docs.docker.com/engine/reference/run/
[04:09:50] <rawtaz> the docker documentation is amongst the worst on the entire planet..
[04:13:32] *** Quits: emerent (~quassel@p200300cd57485556ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:14:28] <rdrg109> rawtaz: Thanks for the help! :) I experimented a bit and found out that when "docker-compose up -d" is executed, the environment variables are defined again. This didn't happen when using "docker-compose start"
[04:14:41] <rawtaz> yeah
[04:14:47] *** Joins: emerent (~quassel@p5b265b66.dip0.t-ipconnect.de)
[04:14:51] <rawtaz> in general, unless you know a reason to use start and stop, always use up and down
[04:15:10] <rawtaz> with up and down, your containers are created and also removed after theyre shut down
[04:18:35] *** Joins: dansan (~daniel@75.81.148.51)
[04:19:28] *** emerent is now known as Guest999
[04:19:28] *** Joins: emerent_ (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:19:28] *** Quits: Guest999 (~quassel@p5b265b66.dip0.t-ipconnect.de) (Killed (osmium.libera.chat (Nickname regained by services)))
[04:19:28] *** emerent_ is now known as emerent
[04:21:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:26:41] *** Joins: pycurious (~Adium@user/pycurious)
[04:30:58] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[04:32:01] *** Joins: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9)
[04:32:53] *** nickjj_ is now known as nickjj
[04:33:22] <nickjj> rawtaz, did you google around for wanting to run a read-only container?
[04:34:16] *** Quits: nickdiaz1wag209 (~bjpenn_@98.45.203.239) (Ping timeout: 245 seconds)
[04:34:23] *** Quits: trevors_ (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 246 seconds)
[04:36:08] *** Quits: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9) (Ping timeout: 246 seconds)
[04:36:53] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[04:37:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:39:10] <rawtaz> yeah. im using read_only: true in my composer file
[04:39:32] <rawtaz> i was just complaining because it's pathethic that the documentation is so bad
[04:39:52] <rawtaz> (not just on this specific point :)
[04:41:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:47:02] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 240 seconds)
[04:51:44] <rawtaz> question: i added    cap_drop:\n  - ALL    to my compose file for this container, the cap_drop being on the same level as e.g. the image directive, and i also see CapDrop having ALL in it when i inspect the running container. despite this, the software in the container (traefik) happily binds to port 443. how come?
[04:52:12] <rawtaz> i thought that since i havent added NET_BIND_SERVICE it wouldnt be able to bind to a <1024 port
[05:01:47] <rawtaz> it just doesnt seem to have any effect. hmm
[05:06:56] *** Joins: LtHummus (~lthummus@97-126-101-182.tukw.qwest.net)
[05:12:21] <rawtaz> am i doing something wrong here with the cap_drop?  https://kopy.io/MJ9z6  i think ive specified it exactly as the documentation states, https://docs.docker.com/compose/compose-file/compose-file-v3/#cap_add-cap_drop
[05:13:07] <rawtaz> it just isnt taking effect, at the software running as unprivileged user in the container can still bind to port 443, which i beleive it shouldnt be able to (perhaps im wrong)
[05:15:46] *** Joins: pycurious (~Adium@user/pycurious)
[05:29:40] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:46] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:33:19] <ash_worksi> in compose, what does `volumes: [/path]` mean without a ':' ?
[05:33:43] <ash_worksi> is it mounted to an arbitrary named volume?
[05:34:38] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:35:37] <rawtaz> ash_worksi: the documentation says "Just specify a path and let the Engine create a volume"
[05:35:53] <rawtaz> see first example under the "Short syntax" heading at https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes
[05:36:09] <rawtaz> so it creates a volume. it doesnt do a bind mount
[05:36:53] <ash_worksi> rawtaz: thanks
[05:36:58] <rawtaz> yw
[05:42:59] <rawtaz> regarding my capabilities problem; if i change the ALL to ALLFOO, then when i docker-compose up i get an error saying "Cannot create container for service traefik: invalid CapDrop: unknown capability: "CAP_ALLFOO"", so it definitely does read the setting.
[05:43:13] <rawtaz> but how in earth is it then possible that traefil can still bind to port 443 and 80
[05:43:20] <rawtaz> traefik*
[05:45:24] *** Joins: C0nundrum (~C0nundrum@68.204.87.132)
[05:45:34] <C0nundrum> Hello
[05:45:38] <C0nundrum> why would i get
[05:46:11] <C0nundrum> I hate all these stupid artificial requirements that randomly break things..
[05:46:22] <C0nundrum> "unable to prepare context: unable to get relative Dockerfile path: Rel: can't make F:\WebProjects\javascript-playground\services\main\image\redis.Dockerfile
[05:46:56] <rawtaz> what command or waht are you running `?
[05:46:57] <C0nundrum> I don't understand . My working path is : F:\WebProjects\javascript-playground
[05:47:04] <rawtaz> are you using docker compose?
[05:47:11] <C0nundrum> yes, sadly
[05:47:24] <rawtaz> so your compose file is in that folder?
[05:48:00] <C0nundrum> I'm running docker-compose -f services/main/docker-compose.yaml build
[05:49:00] <rawtaz> so the compose file is in F:\WebProjects\javascript-playground\services\main\image\ ?
[05:50:27] <C0nundrum> The compose file is at : F:\WebProjects\javascript-playground\services\main\docker-compose.yaml
[05:50:55] <C0nundrum> THis is this build config:     context: $PWD/services/main/files/redis;   dockerfile: $PWD/services/main/image/redis.Dockerfile
[05:51:28] <C0nundrum> Like man, why even touch stuff like this.,.
[05:51:45] <rawtaz> can you pastebin the build part of your compose file please?
[05:51:57] <rawtaz> even though you pasted most of it there
[05:52:09] <rawtaz> kopy.io is a simple site for it
[05:54:23] *** Joins: pycurious (~Adium@user/pycurious)
[05:54:54] <rawtaz> please hurry :)
[05:55:04] *** Quits: nickjj (~nickjj@user/nickjj) (Read error: Connection reset by peer)
[05:56:59] <rawtaz> im not sure why you have the context set to a files/redis/ folder when the image is in an image/ folder
[05:57:27] <C0nundrum> https://gist.github.com/dragonpiper/7078d9145a40d1c05ca18c2468d5a1f6
[05:57:41] <rawtaz> thanks
[05:58:50] <rawtaz> is there any speicifc reason you have the Dockerfile in the image/ folder instead of in the files/redis folder?
[05:59:31] <rawtaz> also, in the Dockerfile, cna you show one of the COPY commands?
[05:59:43] <C0nundrum> Tell me what you want me to change to make it work and we will see what happens
[06:00:02] <rawtaz> yea, please tell me that COPY command from the Dockerfile
[06:00:53] <C0nundrum> I updated the gist. Please refresh
[06:01:39] <rawtaz> so the redis.conf file is in the F:\WebProjects\javascript-playground\services\main\files\redis path, correct?
[06:02:38] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:45] <C0nundrum> yes but what does that have to do with the error docker is thoughing ?
[06:04:19] <rawtaz> a lot for understanding/verifying my mental image of what you have there
[06:05:07] <rawtaz> ok so here is my suggestion:
[06:05:09] <rawtaz> move the redis.Dockerfile to this folder:  F:\WebProjects\javascript-playground\services\main\files\redis
[06:05:12] <rawtaz> change in compose file:  context: ./files/redis
[06:05:15] <rawtaz> change in compose file:  dockerfile: redis.Dockerfile
[06:05:23] <rawtaz> and let's see if that works. if we're lucky..
[06:05:47] <C0nundrum> https://i.imgur.com/8wLoqXn.png
[06:06:30] <C0nundrum> unable to prepare context: unable to get relative Dockerfile path: Rel: can't make F:\WebProjects\javascript-playground\services\main\image\redis.Dockerfile
[06:06:30] <C0nundrum>  relative to \\?\F:\WebProjects\javascript-playground\services\main\files\redis
[06:07:25] <rawtaz> did you make the exact three changes i wrote above?
[06:09:02] <C0nundrum> sigh....
[06:09:08] <C0nundrum> like why, why was this needed
[06:09:25] <C0nundrum> I update because the service is unstable and i get even more unstability
[06:09:52] <C0nundrum> ANyway, Thanks rawtaz
[06:10:24] <rawtaz> im not sure i follow. did my suggestions work or not? if not, did you make the exact changes i suggested?
[06:10:57] <rawtaz> it looks to me like the error message is the same, hence im wondering about the changes made
[06:13:13] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[06:13:57] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:16:21] <rawtaz> C0nundrum: as an alternative, if what i wrote earlier didnt work, you can reverse that and try this instead (with the Dockerfile in the same place as you had it before we started talking, i.e. NOT moved):
[06:16:25] <rawtaz> change in compose file:  context: ./files/redis
[06:16:28] <rawtaz> change in compose file:  dockerfile: ./image/redis.Dockerfile
[06:17:02] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[06:22:46] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[06:23:26] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 260 seconds)
[06:26:41] *** Quits: PanickedKernel (~PanickedK@user/panickedkernel) (Quit: Leaving)
[06:26:48] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[06:33:14] <rawtaz> oooooooooookay. about my capabilities problem, i installed capsh in the image and am running that, and i get this: https://kopy.io/KsLhX
[06:34:10] <rawtaz> actually make that https://kopy.io/KgY9i instead
[06:35:09] <rawtaz> note how all capabilities are inactive (! before their name), in particular the !cap_net_bind_service . how in the living hell is it possible that traefik can still happily bind to port 80 and 443, and it also responds on it from the outside world?
[06:35:13] <rawtaz> this makes no sense :(
[06:44:31] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:45:33] <C0nundrum> Yea it worked. They changed symantics
[06:45:44] <rawtaz> what worked?
[06:45:51] <C0nundrum> Moving the dockerfile to the same directory
[06:45:55] <rawtaz> ok
[06:46:04] <C0nundrum> smh. i guess i have to follow there design pattern
[06:46:12] <rawtaz> unfortunately .<
[06:46:25] <rawtaz> and it's not always that easy to figure out what that is given the quality of the docs
[06:46:36] <C0nundrum> Sigh well i'm happy microsoft finnaly got software right with vscode
[06:46:44] <rawtaz> always something!
[06:47:00] <C0nundrum> make something have the community expand and only insure stability. STop breaking and touching foundational things without good reason
[06:47:26] <C0nundrum> I see why people move to kubernetes
[06:47:54] <rawtaz> its not like it's easier than this lol
[06:47:58] <rawtaz> a loooot more complex
[06:48:04] <C0nundrum> Its not about easier, its about stability.
[06:48:05] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[06:48:17] <C0nundrum> I have to waste hours of my time for a problem that someone dumped in my lap
[06:48:38] <rawtaz> well, if someone dumped some kubernetes thing your lap you would have had to spend days
[06:49:27] <C0nundrum> Yea which is why i took the pain of compose and swarm but it's becoming overwelimg
[06:49:32] <rawtaz> unless you know kubernetes of course :)
[06:49:37] <C0nundrum> especially with swarm not even being able to ensure it's own stability
[06:49:46] <C0nundrum> Its about that time
[06:50:12] <rawtaz> you can always look into Nomad from hashicorp if you want something that is a middleground
[06:50:35] <C0nundrum> Yea, i researched a bunch of stuff before. Gotta kinda organize my thoughts on them back in to a file or something
[06:50:44] <C0nundrum> I don't think i checked that one out yet
[06:51:15] <C0nundrum> ALso in terms of time.
[06:51:39] <C0nundrum> I'm wasting more time correcting for the instability of the software. I might as well put that time into better software
[06:51:59] <C0nundrum> I'm messed days at work dealing with the algorithm getting confused on where stuff are and what's corrupted
[06:52:13] <C0nundrum> Especially if hardware introduces instabiliity
[06:53:02] <C0nundrum> Kinda hate that i invested so much time it. It's not going in the direction i thought it would
[06:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 240 seconds)
[06:53:22] <C0nundrum> It should just be a stable community product and there focus should be on making it stable and improving the enterprise product
[06:53:33] <C0nundrum> but meh 
[06:53:51] <rawtaz> i dont know what instability you are talking about so i cant comment. i never had problems with docker or docker-compose, but i dont run it on a large scale. and i never used swarm
[06:54:11] <C0nundrum> with swarm services can get into inconsistant states.
[06:54:22] <C0nundrum> Thers random crap that happens where i have to reinit the swarm
[06:54:44] <C0nundrum> could be from disk issues or some other hardware issues but it should definitly be automatically recoverable..
[06:54:53] <C0nundrum> Just over it now :/
[06:55:02] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[06:55:19] <C0nundrum> THeres also not even enough debug tools to compensate for when the algorithm gets confused. Thats fustrating as well
[06:55:49] <rawtaz> you should probably spend your time finding something that is less frustrating, and start using that instead
[06:57:43] * rawtaz &
[07:00:27] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[07:01:19] <C0nundrum> Yea, gonna start a kubs guide sometime soon
[07:01:25] <C0nundrum> my whole infurstructure is down from this :/
[07:01:38] <C0nundrum> Just personal home stuff no not really that important but yea
[07:01:44] <C0nundrum> so not*
[07:05:55] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:27:27] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[07:29:14] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[07:30:28] *** Quits: SmokenatorZ6 (~Smokenato@189.78.241.111) (Ping timeout: 268 seconds)
[07:30:45] *** Joins: INeedAHandle (~INeedAHan@user/ineedahandle)
[07:31:03] *** Joins: SmokenatorZ6 (~Smokenato@189.78.241.111)
[07:33:53] *** Quits: INeedAHandle (~INeedAHan@user/ineedahandle) (Client Quit)
[07:40:25] *** Quits: SmokenatorZ6 (~Smokenato@189.78.241.111) (Quit: Ping timeout (120 seconds))
[07:41:49] *** Joins: kevinnn (~kevinnn@2600:8802:370b:7100::be93)
[07:44:34] *** Joins: SmokenatorZ6 (~Smokenato@189.78.241.111)
[07:54:20] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[07:54:51] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[07:56:29] *** Quits: Czernobog (~Czernobog@user/czernobog) (Ping timeout: 264 seconds)
[08:05:04] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[08:09:43] *** Joins: rpthms (~rpthms@user/rpthms)
[08:13:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:21:00] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:352c:a29a:eb2b:5c0b) (Quit: So as you can see from this flowchSQUIRREL!!)
[08:25:13] *** Joins: nickdiazswag209 (~bjpenn_@76.21.124.16)
[08:28:00] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[08:28:39] *** Joins: mcpac82 (~textual@p5dc1c677.dip0.t-ipconnect.de)
[08:28:41] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[08:30:01] *** Quits: emerent (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:31:45] *** Joins: emerent (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:44:54] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[08:46:19] *** Joins: rpthms (~rpthms@user/rpthms)
[08:46:40] <cliluw> Any way to dump out the file system of a Docker image? I know about `docker image save`, but I want all the layers combined.
[08:48:51] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[08:49:54] *** Quits: dabbill (~dabbill@174.31.232.66) (Ping timeout: 260 seconds)
[08:50:08] *** Joins: dabbill_ (~dabbill@174.31.86.75)
[08:50:54] *** dabbill_ is now known as dabbill
[09:00:41] *** Joins: Czernobog (~Czernobog@user/czernobog)
[09:04:51] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[09:09:03] <SomeDamnBody> I'm having trouble connecting hosts using docker. I read up on swarm and networking overlays. I can get ping to work, but when I run my application on port 9999, it can't connect
[09:15:09] *** Quits: mcpac82 (~textual@p5dc1c677.dip0.t-ipconnect.de) (Quit: mcpac82)
[09:21:35] *** Joins: mcpac82 (~textual@212.25.0.228)
[09:22:59] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:23:30] *** Quits: mcpac82 (~textual@212.25.0.228) (Client Quit)
[09:23:52] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.40)
[09:26:50] *** Quits: nickdiazswag209 (~bjpenn_@76.21.124.16) (Ping timeout: 260 seconds)
[09:33:32] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[09:35:16] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[09:56:54] *** Quits: andycooper (uid246432@id-246432.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:18:24] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Quit: Bye)
[10:19:53] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[10:21:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:21:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:24:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:26:45] *** Joins: lachesis_ (~lachesis@user/lachesis)
[10:27:45] *** Quits: lachesis (~lachesis@user/lachesis) (Ping timeout: 268 seconds)
[10:27:45] *** lachesis_ is now known as lachesis
[10:28:40] *** Joins: tex (~super@user/dix)
[10:29:47] *** Quits: dabbill (~dabbill@174.31.86.75) (Ping timeout: 250 seconds)
[10:30:33] *** Joins: dabbill (~dabbill@174.31.78.17)
[10:39:10] *** Quits: yjftsjthsd3 (~yjftsjths@162.127.123.34.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:40:45] *** Joins: mcpac82 (~textual@212.25.0.228)
[10:43:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:43:37] *** Joins: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch)
[10:44:54] *** Joins: gooble_gobble (~gooble_go@c-76-16-103-215.hsd1.il.comcast.net)
[10:56:18] *** Joins: yjftsjthsd3 (~yjftsjths@162.127.123.34.bc.googleusercontent.com)
[11:05:58] *** Joins: dabbill_ (~dabbill@174.31.83.59)
[11:06:02] *** Quits: dabbill (~dabbill@174.31.78.17) (Ping timeout: 240 seconds)
[11:06:39] *** dabbill_ is now known as dabbill
[11:12:15] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2917:5181:686:9972:daad:8a70) (Ping timeout: 250 seconds)
[11:13:14] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[11:14:37] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[11:15:30] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.3)
[11:17:36] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Remote host closed the connection)
[11:19:59] *** Joins: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9)
[11:20:17] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[11:21:23] *** Joins: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net)
[11:23:53] *** Joins: factor6 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[11:25:02] *** Joins: mach`` (~Mach@86.121.208.210)
[11:25:56] *** Quits: OPK (~OPK@user/opk) (Remote host closed the connection)
[11:26:44] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Remote host closed the connection)
[11:27:06] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[11:27:25] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[11:27:26] *** factor6 is now known as factor
[11:28:02] *** Quits: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9) (Ping timeout: 240 seconds)
[11:31:47] *** Joins: lithium (~lithium@user/lithium)
[11:37:53] *** Parts: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net) ()
[11:41:53] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:42:16] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:43:29] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Ping timeout: 246 seconds)
[11:45:54] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 260 seconds)
[11:48:19] *** Joins: vlm (~vlm@user/vlm)
[11:49:03] *** Joins: OPK (~OPK@user/opk)
[11:50:16] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7564-321e-ff0d-0ba0.res6.spectrum.com) (Quit: jarthur)
[11:50:58] *** Joins: carl- (~carl-@185.103.188.130)
[11:54:49] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[11:56:12] *** Joins: vidbina (~vid@dynamic-078-055-127-162.78.55.pool.telefonica.de)
[11:57:41] *** Joins: Bebef (sbreit@phobos.bebef.de)
[11:59:52] *** Joins: monoxane9 (~monoxane@user/monoxane)
[12:02:25] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 268 seconds)
[12:02:25] *** monoxane9 is now known as monoxane
[12:08:59] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[12:09:48] *** Quits: vidbina (~vid@dynamic-078-055-127-162.78.55.pool.telefonica.de) (Ping timeout: 268 seconds)
[12:11:28] *** Joins: incognito (~relativit@user/incognito)
[12:11:57] *** Joins: nickdiazswag209 (~bjpenn_@76.21.124.16)
[12:14:02] *** Quits: nickdiaz1wag209 (~bjpenn_@13.110.54.40) (Ping timeout: 240 seconds)
[12:24:18] *** Joins: Bardon (~Bardon@user/Bardon)
[12:25:48] *** Joins: mei3 (~mei@user/mei)
[12:30:09] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[12:30:20] *** Joins: TomyWork (~TomyLobo@p200300e80f06af00dd385946eb281878.dip0.t-ipconnect.de)
[12:31:11] *** Joins: mcpac82 (~textual@212.25.0.228)
[12:40:47] *** Quits: incognito (~relativit@user/incognito) (Remote host closed the connection)
[12:43:35] *** Joins: BenjiProd (~BenjiProd@user/benjiprod)
[13:02:26] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 260 seconds)
[13:03:29] *** Quits: dabbill (~dabbill@174.31.83.59) (Ping timeout: 256 seconds)
[13:03:59] *** Joins: dabbill (~dabbill@174.31.73.91)
[13:12:26] <ExeciN> Hi people. I'm using docker on mac and I spun up a postgres container with a bind mount of "/tmp/postgres-data:/var/lib/postgresql/data"
[13:13:20] <ExeciN> I stopped the container and I now want to remove this data but there is no /tmp/postgres-data yet when I spin up the container the data persist
[13:13:22] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2917:5181:74ba:f6d9:7f16:558f)
[13:13:40] <ExeciN> I made sure I didn't have any other service running on the same port
[13:25:56] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[13:30:40] <dunc> Can I "reset" a docker-compose.yml field back to its default value if using multiple files with --file?
[13:31:22] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[13:31:35] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[13:31:57] * dunc For instance: passing `--file f1.yml --file f2.yml`, and having the `build` clause which is set in f1 unset in f2 (both have an image)
[13:32:00] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[13:33:00] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[13:36:45] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 268 seconds)
[13:38:19] *** Joins: drozdziak1 (~drozdziak@vps-520f86fd.vps.ovh.net)
[13:38:44] <drozdziak1> Is it possible to define a global ARG for all targets in a multi-stage Dockerfile?
[13:38:56] <drozdziak1> (without repeating the ARG statement)
[13:41:46] *** Joins: Celelibi (celelibi@user/celelibi)
[13:58:05] <ExeciN> so yeah, I don't know where the data comes from
[14:02:42] *** Joins: dlam (~dlam@dlam.me)
[14:03:02] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 240 seconds)
[14:11:48] *** Joins: bouncy (~ben@user/benoit)
[14:12:14] <dunc> Alternatively: How can I "unset" build in a docker-compose.override.yml file?
[14:12:36] <ikke> dunc: I don't think that's possible
[14:17:20] <dunc> ikke: that seems... mad?
[14:18:21] *** Joins: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de)
[14:21:34] *** Joins: oskie (usel@user/oskie)
[14:21:53] *** Quits: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:22:32] <oskie> did anyone consider the fact that "third party" components (packages, libraries, binaries, ...) used inside docker images need to be upgraded regularly as well? doesn't this mean that you have to rebuild your images regularly, and recreate containers too?
[14:23:11] <ikke> yes
[14:24:46] <dodo> yes
[14:25:20] *** Joins: denningsrogue4 (~denningsr@206.214.235.175)
[14:26:39] <oskie> if so, did anyone write down best practices? are there any tools to assist in this? etc etc
[14:26:59] *** Joins: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr)
[14:27:15] *** Quits: denningsrogue (~denningsr@206.214.235.175) (Ping timeout: 250 seconds)
[14:27:16] *** denningsrogue4 is now known as denningsrogue
[14:28:04] <oskie> how do i know that some popular image on docker hub is updated regularly? for example a database like cassandra or mongodb
[14:28:25] <oskie> (updated even if the version of the database component itself remains the same)
[14:29:26] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:32:14] <Tas-sos> Hello Docker community o/
[14:32:44] <Tas-sos> I have a docker-composer file that create a container from a Dockerfile
[14:33:00] <ikke> oskie: if you look at the tags, it shows when it was last updated
[14:33:02] <dodo> oskie: depends on your toolchain
[14:33:16] <Tas-sos> Can I put a specific configurataion file before the build of Dockerfile ?
[14:33:19] <ikke> oskie: postgres:latest last pushed 14 days ago
[14:33:51] <Tas-sos> something like pre steps before CMD command of Dockerfile 
[14:34:18] <ikke> Tas-sos: usually you use an entry point for that
[14:35:07] <Tas-sos> ikke: Hm.. what do you mean ?
[14:35:37] <Tas-sos> I've this docker-composer file : https://github.com/grnet/agora-sp/blob/devel/docker-compose.yml#L28-L48
[14:35:47] <Tas-sos> which calls this Dockerfile : 
[14:35:47] <Tas-sos> https://github.com/grnet/agora-sp/blob/devel/agora/Dockerfile#L12
[14:36:19] <Tas-sos> and I want to add a new configuration file in line 12 for example
[14:37:13] <Tas-sos> for now I have create an another one Dockerfile exactly the same with previus but with only one more cp command
[14:37:33] <ikke> Tas-sos: you can mount a specific config file over the existing file
[14:37:38] <Tas-sos> that why I'm wondering if I put this configuration file from docker-composer file directly..
[14:37:50] <Tas-sos> with volume ?
[14:37:56] <ikke> https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes
[14:38:02] <ikke> yes
[14:38:11] *** Joins: denningsrogue3 (~denningsr@206.214.225.175)
[14:39:37] <Tas-sos> I put this : 
[14:39:38] <Tas-sos> - ./agora/docker/deployment-gitlab-ci.conf /etc/agora/deployment.conf
[14:39:45] <Tas-sos> but it doesn't work.. :/
[14:39:58] *** Quits: denningsrogue (~denningsr@206.214.235.175) (Ping timeout: 260 seconds)
[14:39:58] *** denningsrogue3 is now known as denningsrogue
[14:40:02] <ikke> You needto use a : instead of space
[14:41:47] <Tas-sos> Oh!..
[14:41:52] <Tas-sos> Let's try
[14:42:32] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[14:46:20] <Tas-sos> ikke: Oh!! Yes!! :-D
[14:46:35] <Tas-sos> Now works!! It's my wrong!! about the `:` and space!
[14:46:39] <Tas-sos> Oh my god! 
[14:46:42] <Tas-sos> Thanks a lot!! :-))
[14:49:02] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[14:58:48] *** Joins: nickjj (~nickjj@user/nickjj)
[15:10:01] *** Joins: vidbina (~vid@business-90-187-115-153.pool2.vodafone-ip.de)
[15:10:18] *** Quits: rMdes (~rmdes@my.armada.digital) (Quit: The Lounge - https://thelounge.github.io)
[15:12:57] *** Joins: Atque (~Atque@user/atque)
[15:14:45] *** Joins: sbef (~sbef@host-80-183-48-173.business.telecomitalia.it)
[15:14:50] <sbef> Hello guys
[15:16:39] *** Quits: vidbina (~vid@business-90-187-115-153.pool2.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:17:06] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:21:31] *** Quits: kevinnn (~kevinnn@2600:8802:370b:7100::be93) (Quit: Client closed)
[15:26:05] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 246 seconds)
[15:28:24] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: leaving)
[15:29:46] *** Quits: sbef (~sbef@host-80-183-48-173.business.telecomitalia.it) (Quit: Client closed)
[15:34:44] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[15:35:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:38:33] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[15:55:01] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[15:57:51] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[15:57:52] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[15:59:23] *** Joins: masber (~masber@vpn-49.cscs.ch)
[16:09:03] *** Joins: vidbina (~vid@dynamic-078-055-127-162.78.55.pool.telefonica.de)
[16:13:25] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:16:41] *** Joins: pycurious (~Adium@user/pycurious)
[16:19:26] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:19:58] *** Joins: Atque (~Atque@user/atque)
[16:29:25] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 268 seconds)
[16:33:05] *** Quits: _var (~kdy@kiana.kdy.ch) (Quit: Fly Away~)
[16:36:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:37:11] *** Joins: _var (~kdy@kiana.kdy.ch)
[16:47:02] *** Quits: vidbina (~vid@dynamic-078-055-127-162.78.55.pool.telefonica.de) (Ping timeout: 240 seconds)
[16:50:03] *** Joins: bouncy (~ben@user/benoit)
[16:52:36] *** Joins: WhyNotHugo (bc7d0f0b52@chat.sr.ht)
[16:52:57] <WhyNotHugo> Can I get any feedback on this PR? https://github.com/docker/docker-credential-helpers/pull/207
[16:58:44] *** Joins: pycurious (~Adium@user/pycurious)
[16:59:03] *** Joins: yogg (~Guest64@cm70-202.liwest.at)
[16:59:07] <yogg> Hi
[16:59:40] <yogg> Is there a way to recreate the firewall rules of docker without restarting the docker service?
[17:00:19] <yogg> Or what ist the best solution if I have a custom firewall (iptables or nftables) and have some docker services running?
[17:00:50] <yogg> My current problem is, if I restart my firewall the docker rules are lost
[17:12:42] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[17:13:48] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[17:26:54] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[17:27:00] *** Joins: brooks79 (~bswinnert@23.157.160.131)
[17:28:41] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:35:11] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[17:35:32] *** Quits: masber (~masber@vpn-49.cscs.ch) (Ping timeout: 256 seconds)
[17:36:00] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[17:37:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:48:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:48:07] *** justCity is now known as justache
[17:50:05] *** Joins: minimal (~minimal@user/minimal)
[17:51:14] <rawtaz> C0nundrum: in fairness, all i did to figure out your problem there was to read this section, which explains how the context and dockerfile settings relate to each other: https://docs.docker.com/compose/compose-file/compose-file-v3/#build
[17:51:23] <rawtaz> so perhaps it's not just the software that's to blame here.
[17:51:31] <rawtaz> it took me like five minutes to figure out..
[17:51:57] <rawtaz> just saying, since honestly you are complaing *a lot* about how this software or whatever is causing you problem and bringing your infra down. for something that i solved in five minutes.
[17:52:14] <rawtaz> too much whining is just too much.
[17:57:41] *** Quits: tex (~super@user/dix) (Remote host closed the connection)
[17:59:21] *** Joins: tex (~super@user/dix)
[18:01:39] *** Quits: tex (~super@user/dix) (Remote host closed the connection)
[18:03:10] *** Joins: tex (~super@user/dix)
[18:04:04] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:05:24] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[18:05:32] *** Quits: tex (~super@user/dix) (Remote host closed the connection)
[18:07:06] *** Joins: tex (~super@user/dix)
[18:11:51] *** Quits: mcpac82 (~textual@212.25.0.228) (Read error: Connection reset by peer)
[18:12:17] *** Joins: andycooper (uid246432@id-246432.helmsley.irccloud.com)
[18:14:34] *** Joins: Windy (~windy@user/windy)
[18:14:48] <Windy> how can i determine which container an overlay volume is related to?
[18:15:37] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[18:15:51] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:16:04] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:17:26] *** Quits: tex (~super@user/dix) (Remote host closed the connection)
[18:18:43] <rawtaz> Windy: i dont know but maybe using docker inspect?
[18:18:50] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[18:18:55] *** Joins: tex (~super@user/dix)
[18:20:03] <Windy> hmm... will that show the path on the host filesystem for any overlay2 volumes i wonder?
[18:20:49] <rawtaz> try it? it should show you a lot of technical information
[18:21:12] <rawtaz> i dont know if it includes which container has the volume. perhaps that's something you need to get by inspecting the container instead of the volume. i'd suggest trying both ways
[18:23:30] *** Joins: emerent_ (~quassel@p200300cd572fe8a8ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:23:30] *** emerent is now known as Guest9840
[18:23:30] *** Quits: Guest9840 (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (iridium.libera.chat (Nickname regained by services)))
[18:23:30] *** emerent_ is now known as emerent
[18:23:48] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[18:24:07] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:24:13] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:27:16] *** Quits: Flash (~Flash@user/flash) (Read error: Connection reset by peer)
[18:32:21] <Windy> ok, unrelated question.  if i'm looking at the image layers in docker hub, how do i go back to the source image?  for instance https://hub.docker.com/layers/sonatype/nexus3/3.28.1/images/sha256-e788154207df95a86287fc8ecae1a5f789e74d0124f2dbda846fc4c769603bdb?context=explore  how can i see what layers 1 and 2 contain?
[18:32:21] *** Joins: Flash (~Flash@user/flash)
[18:33:40] *** Joins: martums (~martums@user/martums)
[18:34:15] *** Quits: emerent (~quassel@p200300cd572fe8a8ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:34:38] *** Joins: emerent (~quassel@p200300cd57303249ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:36:21] <Windy> maybe just going to github to find the Dockerfile is the answer
[18:37:56] *** Joins: i64 (i64@gateway/vpn/protonvpn/i64)
[18:38:13] <Windy> hmm, but then how do i associate a particular docker hub tag with a repo version at github :-S
[18:41:03] <SomeDamnBody> I'm having trouble connecting hosts using docker. I read up on swarm and networking overlays. I can get ping to work, but when I run my application on port 9999, it can't connect
[18:41:10] <SomeDamnBody> Can anybody help me please?
[18:45:32] *** Quits: emerent (~quassel@p200300cd57303249ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:46:19] *** Joins: emerent (~quassel@p200300cd57307093ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:49:32] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 240 seconds)
[18:52:29] <programmerq> Windy▸ it depends on the repo. for that image, theres https://github.com/sonatype/docker-nexus3 and that has a Jenkinsfile that appears to handle the build and push. The 'docker build' command in there doesn't specify an alternate Dockerfile name, so the Dockerfile in the repo is likely the one involved.
[18:52:52] <programmerq> SomeDamnBody▸ did you publish that port? How are you trying to access it?
[18:56:33] <Windy> programmerq: yeah, turns out their tagging has the image versions, so i was able to track back to the commit i was concerned with.  still seems like a lot of unknowns.  especially if the Dockerfile pulls in other unversioned files from the web!  
[18:57:11] <programmerq> yup, it's up to the image author to make those decisions to get repeatable builds wherever possible.
[18:57:31] <programmerq> not all image authors follow all the best practices, unfortunately.
[18:58:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[19:04:35] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 264 seconds)
[19:05:43] *** Joins: masber (~masber@vpn-45.cscs.ch)
[19:06:04] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[19:12:28] <SomeDamnBody> programmerq, Yes I did, in the service
[19:12:44] <SomeDamnBody> Basically, in the swarm I have a service that I want that is a broker
[19:13:31] <SomeDamnBody> But I have a worker from another host that I joined to the swarm. I want to run a container on that host that can connect to the broker in the swarm of the other host. So I created an overlay network
[19:13:45] <SomeDamnBody> And I joined it to the container when I run on the worker host.
[19:14:15] <SomeDamnBody> I can ping the other host, but I also note that I can ping many addresses that I probably shouldn't be able to.
[19:14:27] <dunc> I just added profiles to my services - which looks to be a great feature - except now using `docker-compose --profile debug up` It says "Attaching to", and nothing starts?!
[19:14:31] <SomeDamnBody> *ping the other host => ping the service from the worker.
[19:14:44] <programmerq> SomeDamnBody▸ share the commands you ran and what you did in a gist. share the commands you are running to do the testing and the corresponding output. if you have a compose file, share that. share the error messages. show it all.
[19:15:01] <programmerq> gist.github.com or another paste service is fine. gist is nice because you can edit the same gist in place and also add multiple files to the same gist
[19:16:00] <programmerq> dunc if you run 'docker-compose up' with no '-d' then it'll attach to your container and show any logs it prints. if the container doesn't print anything, you'll just get a blocking terminal with no output. verify from another terminal that it's running 'docker-compose ps' or 'docker ps'
[19:16:57] <dunc> programmerq: nothing else running. I'm using the .env file and have this in it:
[19:17:01] * dunc `COMPOSE_PROFILES=dev docker-compose up`
[19:17:23] <programmerq> "nothing else running" -- how did you check?
[19:17:43] <dunc> programmerq: `docker ps`, `docker-compose ps`
[19:18:06] <programmerq> try doing docker ps -a to get a better picture.
[19:18:20] <programmerq> dunc: share your compose file and the output of 'docker ps -a' in a gist
[19:18:21] <dunc> programmerq: Nothing
[19:18:29] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 246 seconds)
[19:18:38] <dunc> https://www.irccloud.com/pastebin/O6ddKGJd/
[19:20:50] <dunc> https://www.irccloud.com/pastebin/EXOjftyU/
[19:21:37] *** Joins: vidbina (~vid@dynamic-078-055-127-162.78.55.pool.telefonica.de)
[19:21:40] <dunc> https://www.irccloud.com/pastebin/it6KaAPs/
[19:21:54] <SomeDamnBody> programmerq, Ok, let me put that together.
[19:22:03] <dunc> I've elided some stuff in the config, but it definitely passes the parser
[19:22:21] <dunc> And pre-profiles addition it works perfectly
[19:22:49] <dunc> I find this very weird:
[19:22:52] * dunc `COMPOSE_PROFILES=dev docker-compose up`
[19:22:58] <dunc> Like, I can see what it's doing sort of
[19:23:23] <dunc> The only thing that relies on the profiles is the up command, so I guess it's replacing it's own up command with this
[19:23:39] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[19:23:41] <dunc> But... you'd think that you would just supply the `COMPOSE_PROFILES=dev` and not the actual command also
[19:23:44] <dunc> In the env var
[19:24:05] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[19:24:32] <dunc> This is according to the docs: https://docs.docker.com/compose/profiles/#enabling-profiles
[19:26:14] <dunc> Errrrr, ok
[19:26:21] <dunc> Doing it how you'd expect it to works... works
[19:26:45] <dunc> I think that there's a display bug in the docs 🤦‍♂️
[19:27:47] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Remote host closed the connection)
[19:27:48] <dunc> https://usercontent.irccloud-cdn.com/file/qn7OgA3z/docs-fail
[19:32:12] <programmerq> oh in that example, that's showing how you'd set the env var in an interactive bash shell
[19:32:20] <programmerq> FOO=BAR <command>
[19:32:53] <SomeDamnBody> programmerq, Actually, the two sets of commands are only 8 to 10 lines
[19:32:58] <programmerq> an env_file should be only the key and values
[19:33:37] <programmerq> SomeDamnBody▸ anything over 2 is worth using a paste service.
[19:35:06] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:35:45] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[19:36:17] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[19:36:21] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:39:36] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:40:13] <SomeDamnBody> programmerq, manager: https://pastebin.com/62tBELwV, worker: https://pastebin.com/Rgjt0T1w
[19:41:06] <programmerq> show, don't tell. "#failure happens on the connect, but it shsould go through." this doesn't show me what the error is.
[19:41:17] *** Quits: i64 (i64@gateway/vpn/protonvpn/i64) (Ping timeout: 256 seconds)
[19:41:41] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[19:41:42] <programmerq> include the commands and all the output
[19:41:42] <dunc> programmerq: urgh, god, of course it is, the $ is on the left
[19:41:45] <DX099> hi all
[19:41:53] <DX099> I've met with a weird issue
[19:41:53] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[19:41:59] <programmerq> 'docker network inspect primarynet' -- you didn't include any output here.
[19:42:32] <DX099> the "debezium/zookeeper" works fine on Docker 20.10
[19:42:55] <DX099> but crashes on 19.x with error: "Error: Could not find or load main class org.apache.zookeeper.server.quorum.QuorumPeerMain
[19:42:55] <DX099> Caused by: java.lang.ClassNotFoundException: org.apache.zookeeper.server.quorum.QuorumPeerMain"
[19:43:06] <DX099> the very same image, no alteration
[19:43:51] <DX099> I though maybe it was because upstream built using Docker 20.10
[19:43:52] <programmerq> DX099▸ same image. did you verify it's the same digest? Are you specifying any bind mounts? env vars?
[19:44:19] <DX099> so I rebuilt using the sources on 19.x but observed the very same behaviour
[19:44:33] <DX099> > Are you specifying any bind mounts? env vars?
[19:44:33] <DX099> Nope nothing
[19:44:35] <SomeDamnBody> programmerq, ok, let me paste that error
[19:44:45] <DX099> I did at first
[19:44:48] <programmerq> DX099▸ as in, you took the Dockerfile and changed the FROM line ?
[19:44:54] <SomeDamnBody> programmerq, error: https://pastebin.com/WdrDykue
[19:45:08] <SomeDamnBody> at <addr> server is not reachable
[19:45:28] <DX099> programmerq:  no I rebuilt using : https://github.com/debezium/docker-images
[19:45:54] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:46:06] <DX099> and tried to run it using both:
[19:46:07] <DX099> https://hub.docker.com/r/debezium/zookeeper
[19:46:17] <DX099> ports & volumes
[19:46:18] <Windy> does 'docker prune' remove unused layers from the docker/overlay2/ directory?
[19:46:19] <DX099> and without
[19:46:32] <programmerq> DX099▸ that just looks like a project that would call docker build for you.
[19:46:32] <DX099> this doesn't alter the behavior
[19:47:07] <DX099> yes, but it's still the way upstream build their images
[19:47:09] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:47:28] <DX099> why would I want to change that part?
[19:47:31] <programmerq> DX099▸ I'm still not following-- are you running an image that you built or one that they built?
[19:47:39] <DX099> both
[19:47:50] <DX099> the image that they built runs on 20 but not on 19
[19:47:56] <DX099> with the same CLI args
[19:48:09] <DX099> the image I built using their source runs on 20 but not on 19
[19:48:10] <programmerq> what is the exact command you are running on both?
[19:48:14] <programmerq> the docker run command
[19:48:35] <DX099> `docker run -it --name zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 debezium/zookeeper`
[19:48:38] <DX099> at first
[19:48:40] <DX099> and then
[19:48:55] <DX099> `docker run -it --name zookeeper debezium/zookeeper`
[19:49:41] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:50:56] <programmerq> what docker install method are you using on both of these environments? what os/distro?
[19:51:26] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[19:52:11] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 245 seconds)
[19:55:01] <DX099> CentOS7
[19:55:19] <DX099> copy/paste of 
[19:55:20] <DX099> https://docs.docker.com/engine/install/centos/
[20:03:25] <SomeDamnBody> programmerq, docker network inspect primarynet: https://pastebin.com/wLQhiVSi
[20:03:43] <DX099> hmm I'm not sure anymore... bisecting
[20:03:47] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:04:35] *** Quits: Flash (~Flash@user/flash) (Read error: Connection reset by peer)
[20:05:44] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[20:07:56] *** Joins: Flash (~Flash@user/flash)
[20:12:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[20:12:14] *** Quits: Flash (~Flash@user/flash) (Ping timeout: 260 seconds)
[20:13:03] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:15:32] <rawtaz> i seriously need help with this: https://kopy.io/E3x3F
[20:16:24] <DX099> programmerq:  it's containerd.io
[20:16:36] <programmerq> DX099▸ I fired up a centos machine, installed docker using those instructions but specified the latest 19.03: sudo yum install docker-ce-19.03.9-3.el7 docker-ce-cli-19.03.9-3.el7 containerd.io
[20:17:08] <programmerq> That image appears to run when I run it like this: sudo docker run -it --name zookeeper debezium/zookeeper:latest@sha256:09ae98c37feaca801ab5492dfd3c91f7728ba53b5928b3d3aac3e07a77bc9c15
[20:17:14] *** Quits: bytestream (~bytestrea@user/bytestream) (Remote host closed the connection)
[20:17:18] <DX099> programmerq:  yes that's what I did also, manually specified 
[20:17:40] <programmerq> did you downgrade from a newer version of docker to that version?
[20:17:44] <DX099> containerd.io versions < 1.4.3-3.2.el7 have the bug
[20:17:50] <programmerq> ah, interesting.
[20:18:28] <DX099> > did you downgrade from a newer version of docker to that version?
[20:18:28] <DX099>  No I installed directly the older one
[20:18:39] *** Joins: luva (~luva@37.120.197.53)
[20:18:47] <SomeDamnBody> programmerq, one thing I notice about the networks ingress and primarynet are that there appears to be a unique ip for each overlay network and host
[20:18:47] <DX099> but I was also specifying containerd.io version 1.2.10
[20:18:47] <programmerq> since I have a fresh install, my containerd.io version is 1.4.11-3.1.el7
[20:19:02] <SomeDamnBody> programmerq, do you see anything that stands out to you yet?
[20:19:02] <DX099> since that's what the original failing env had
[20:19:45] <DX099> I thought it was a less dep hence why I focused on Docker but as I just realised, as long as you have a good version of containerd.io, all Docker versions will run that container correctly
[20:19:56] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:20:07] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[20:20:16] <programmerq> SomeDamnBody▸ it looks good to me. unfortunately your python library had some ambiguity in the error message. you previously mentioned you tried doing ping and such but I didn't see that in your pastes either. Basically, double check that you have the requisite ports open between these hosts for overlay network communication-- there are several ports needed between the vxlan and gossip stuff that
[20:20:17] <programmerq> swarm does.
[20:20:55] <SomeDamnBody> How do I double check that?
[20:20:55] <programmerq> also, try hitting the container ip using a variety of tools-- ping, curl, etc. You can establish whether overlay networking is working at all using a simple image like nginx:alpine
[20:21:09] <programmerq> SomeDamnBody▸ it depends on what these hosts are and what firewalls you are using.
[20:21:15] <SomeDamnBody> docker network ls returns:
[20:21:16] <SomeDamnBody> ID             NAME       MODE         REPLICAS   IMAGE                       PORTS
[20:21:16] <SomeDamnBody> kwtuf68jczzj   malamute   replicated   1/1        zeromqorg/malamute:latest   *:9999->9999/tcp, *:30001->9999/tcp
[20:21:51] <SomeDamnBody> programmerq, I can see that ping can touch each of the ips mentioned in the network inspect on each host
[20:21:54] <programmerq> just because a port is published does not guarantee that the container(s) are actually listening.
[20:22:13] <SomeDamnBody> programmerq, well, there is a program running that is bound to that port
[20:22:29] *** Joins: Flash (~Flash@user/flash)
[20:22:35] <programmerq> SomeDamnBody inside the container? is it listening on the container's 127.0.0.1?
[20:22:49] <programmerq> it should be listening on 0.0.0.0:9999 and not 127.0.0.1:9999
[20:23:35] <SomeDamnBody> It is listening on 0.0.0.0
[20:23:37] <DX099> programmerq:  yes, try:
[20:23:38] <DX099> `sudo systemctl stop docker`
[20:23:38] <DX099> `sudo yum downgrade containerd.io-1.3.9`
[20:23:44] <DX099> `sudo systemctl start docker`
[20:23:57] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:e84b:db76:d6be:10f0)
[20:24:06] <SomeDamnBody> programmerq, I did the service publish-add call for the port to be mapped
[20:24:20] <SomeDamnBody> Is there any port mapping that needs to be done between the overlays of primarynet and ingress
[20:24:25] <programmerq> yes, but again-- the publish does *not* guarantee that anything inside the container is doing what it should.
[20:24:50] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.38)
[20:24:53] <programmerq> also, the publish only matters for ingress to the host, and doesn't have any bearing on container-to-container communication.
[20:27:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:27:45] *** Quits: nickdiazswag209 (~bjpenn_@76.21.124.16) (Ping timeout: 256 seconds)
[20:28:11] <DX099> SomeDamnBody:  it seems as if you're launching all those commands from inside the container
[20:29:43] *** Quits: yogg (~Guest64@cm70-202.liwest.at) (Quit: Client closed)
[20:29:47] <SomeDamnBody> DX099, which commands?
[20:30:07] <SomeDamnBody> The pastebin gives a note on which ones were run inside which container or host
[20:34:31] <DX099> I see the #/$ now
[20:36:12] <DX099> nonetheless SomeDamnBody  what's the result of "sysctl net.ipv4.ip_unprivileged_port_start" ?
[20:36:25] <DX099> in your container?
[20:37:31] <SomeDamnBody> net.ipv4.ip_unprivileged_port_start = 0
[20:37:34] <SomeDamnBody> DX099, 
[20:37:46] <programmerq> DX099▸ yup, downgrading containerd triggers the issue for me too.
[20:38:02] <programmerq> I'm killing that VM now. glad you got it sorted!
[20:38:18] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Ping timeout: 260 seconds)
[20:39:28] <DX099> thanks a lot for taking so much time to investigate
[20:39:47] <DX099> even though I'm not sure what issue exactly it triggers in containerd
[20:39:53] <DX099> mush have been fixed among https://github.com/containerd/containerd/releases/tag/v1.4.0
[20:39:55] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Ping timeout: 250 seconds)
[20:40:53] <rawtaz> wait what. in my container that im having problems with an unpriv process being ablet o bind to a low-numbered port (443) i now see that net.ipv4.ip_unprivileged_port_start is set to 0 instead of the usual 1024. what sets that in a plain alpine container? is it a general docker thing?
[20:40:57] <DX099> SomeDamnBody:  `docker run --rm -it --sysctl net.ipv4.ip_unprivileged_port_start=1024 --drop-cap ALL [...]` ?
[20:41:26] <ikke> rawtaz: those are kernel settings and are set on the host
[20:41:40] <SomeDamnBody> DX099, that doesn't seem to have a image name
[20:41:44] <SomeDamnBody> Do I insert mine?
[20:41:47] <rawtaz> ikke: on the same host it's set to 1024
[20:42:01] <rawtaz> ikke: this is the container im talking about, as you can see it's super basic: https://kopy.io/E3x3F
[20:42:32] <programmerq> rawtaz▸ it's a docker thing to allow anything in the container to listen to any port: docker run --rm -it alpine sysctl net.ipv4.ip_unprivileged_port_start
[20:42:39] <programmerq> nothing in the image does it specifically, docker just sets it that way.
[20:42:48] <programmerq> the output of that on my system is 0
[20:43:03] *** Joins: irrgit_ (~irrgit@192.241.175.183)
[20:43:04] <rawtaz> so it's a general docker thing. i suppose it's configurable somewhere.
[20:43:17] <programmerq> rawtaz what problem is it that you're trying to solve?
[20:43:18] <rawtaz> this must be the answer to why the f**k my process can bind to that port even though i dropped ALL caps
[20:43:50] <rawtaz> programmerq: as you can see in https://kopy.io/E3x3F i drop all capabilities, yet the process in the container can bind to a low-numbered port, which i wasnt expecting. but net.ipv4.ip_unprivileged_port_start fiddled with by docker probably explains it
[20:44:06] <rawtaz> i would never have thought docker did that, the thought didnt cross my mind.
[20:44:16] <programmerq> rawtaz▸ yes, that is a description of how docker does stuff, but why is that a problem?
[20:44:32] <DX099> SomeDamnBody:  yes, complete the rest of the command with the relevant command
[20:44:43] <DX099> you should just be able to "nc -lp 443"
[20:44:47] <rawtaz> read on SO: "since docker 20.03.0 the default sysctl net.ipv4.ip_unprivileged_port_start for containers is set to 0"
[20:44:57] <DX099> it should exit immediately with denial
[20:45:31] <rawtaz> programmerq: it is/was a problem because i dropped all caps, and thereby expected the process to NOT be able to bind to that port, yet it was. that means my cap limitations did not seem to work, which is obviously a big issue when youre trying to tighten things down.
[20:45:52] <programmerq> why is it a requirement for your process to fail to do something?
[20:46:00] <ikke> rawtaz: afaik, capabilities just add to things a process can do, not remove things
[20:46:12] <SomeDamnBody> programmerq, ok, in a container, I checked to make sure that the service process does start correctly
[20:46:14] <SomeDamnBody> And it does
[20:46:15] <rawtaz> programmerq: now that i know about it, i will verify that changing net.ipv4.ip_unprivileged_port_start to 1024 makes th eprocess unable to bind, and if that is the case then i am sleeping well again over the capability restrictions i applied working :)
[20:46:26] <programmerq> ikke▸ that is true, and that's why dropping the capabilities should prevent it from doing things.
[20:46:29] <rawtaz> ikke: if you --cap-drop=all all caps are disabled, then you can enable the ones you want
[20:46:41] <programmerq> docker drops most caps out of the box
[20:47:00] <programmerq> rawtaz were you using the unprivileged port bind as a way to test for CAP_SYS_ADMIN?
[20:47:07] <SomeDamnBody> DX099, docker says: unknown flag: --drop-cap
[20:47:09] <rawtaz> programmerq: i dont see what you dont get lol :D i want to verify that dropping all capabilities actually has the expected effect of not letting processes bind to ports that it needs the now dropped capabilities to do, right?
[20:47:27] <rawtaz> programmerq: yes, exactly. but it was a privileged bind, port 443. i expected it to be privileged and requiring the capability.
[20:47:58] <rawtaz> programmerq: not CAP_SYS_ADMIN specifically, iw as expecting to have to give it the net_bind_service cap to let it bind to port 443.
[20:48:19] <programmerq> rawtaz got it-- yeah that only tests for one thing and isn't a good test for capability dropping. normally I'd say just skip testing inside the containers for capabilities and leave that up to concerns outside the container.
[20:48:35] <rawtaz> programmerq: simply put: i disabled all capabilities, but the process could still do something that i expected required capabilities. that wasnt in line with me knowing that my security measured having taken effect :)
[20:49:05] <rawtaz> programmerq: i will audit them too, but that isnt a reason to not to do the most basic tests to see that the capdrop took place at all i think
[20:50:05] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:50:06] <DX099> SomeDamnBody:  sorry `--cap-drop ALL` probably, confused with Podman
[20:50:12] <rawtaz> so any idea why docker decided to do this? i mean, there's the net_bind_service cap, why not have users use that instead of modifying a common sysctl to an uncommon value?
[20:50:41] <rawtaz> DX099: if youre talking about the docker CLI, it's --cap-drop=all
[20:51:09] <SomeDamnBody> DX099, it now says docker: invalid reference format
[20:51:22] <SomeDamnBody> command I turned it into: docker run --rm -it --sysctl net.ipv4.ip_unprivileged_port_start=1024 --cap-drop ALL [...] zeromqorg/malamute /bin/bash
[20:52:24] <DX099> remove the "[...]"
[20:52:28] <DX099> it's an ellipsis
[20:52:34] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:52:45] <DX099> means to omit text that is not necessary for the purpose at hand
[20:52:59] <SomeDamnBody> DX099, oh, um, should I do this for the service?
[20:53:16] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[20:53:48] <DX099> I'm not sure how it translate into swarm options but you can at least try with just "docker run" to see if it corrects the behaviour
[20:54:34] <DX099> ps: this still leaves unprivilege ports available for binding
[20:54:44] <DX099> and the host can still there contact containers on those port provided something is listening
[20:54:51] <DX099> *therefore
[20:55:16] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[20:55:48] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Client Quit)
[20:57:35] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:57:47] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:58:33] <rawtaz> wouldnt the most secure option be to set net.ipv4.ip_unprivileged_port_start to e.g. 65535 or whatever to disable unpriv binding entirely, and then use setcap in the image to specifically give that one binary one wants to listen on e.g. 443 the net_bind_service capability - an attacker would then have to modify that binary's content to replace it with something bad and at the same time not lose the capability.
[21:00:09] <DX099> which threat model are you defending against here?
[21:00:10] <ikke> just listening on a port in docker does not do a lot
[21:00:14] <ikke> in a container*
[21:00:34] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:00:39] <ikke> without the port being exposed, no one can reach it from outside
[21:00:46] <DX099> an attacker scanning / pivoting from the host or other containers?
[21:01:09] <rawtaz> ikke: not, but considering the port *is* exposed, obviously it would be nice to prevent an attacker from starting to listen on that port with their own binary. just making it hard for them :)
[21:01:12] <DX099> because them discovering you on port 443 or 8443 won't change much
[21:01:40] <DX099> rawtaz:  why expose the port if you're not planning on a service to listen on it on the first place?
[21:01:52] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:02:03] <rawtaz> DX099: im talking about an attacker that is inside the container. would be a shame to let them bind to ports themselves. if one can give that capability to one single binary that they cannot modify, presumably that would make it hard for them to start listening on that port?
[21:02:17] <rawtaz> DX099: of course i am planning on having a service there. i dont know what youre thinking here.
[21:02:48] <ikke> rawtaz: generally if they stop the process that is listening on a port (usually the main process in a container), the container stops
[21:02:55] <rawtaz> DX099: there *is* a service on that port. if an attacker manages to get inside the container through that service, it would be good if they couldnt replace the listening process with one of their own, e.g. by preventing anything but this inmodified single binary to listen to ports
[21:03:06] <rawtaz> ikke: that is a fair point
[21:03:10] <DX099> rawtaz:  is it a daemon? because if it dies, the container should just shut down, rather than allowing another binary to replace it
[21:03:35] <rawtaz> yeah. im just trying to think of corner cases, and what i was asking about here is just one single line in the docker image. i mean setting the cap on that single binary.
[21:03:45] <programmerq> rawtaz the idea of containers is to toss a process into its own little sandbox so it doesn't really matter if it tries to listen on 1020 or 1025-- that network namespace belongs only to that container. making it so every container can't listen at all seems backwards and counterproductive. If something listens in a container, only other containers on the same network can connect to it.
[21:03:53] <rawtaz> so i figured "why not". worst case it doesnt help, best case it makes life more difficult for an attacker :)
[21:04:14] <rawtaz> programmerq: i never said no container should be able to listen. what did you get that from?
[21:04:24] <programmerq> so in the scenario where an attacker gains access to a container, I don't really see any sort of true pivot to escalate access by listening on port 1000 as opposed to 1025 ...
[21:04:48] <programmerq> "wouldnt the most secure option be to set net.ipv4.ip_unprivileged_port_start to e.g. 65535 or whatever to disable unpriv binding entirely"
[21:04:49] <ikke> programmerq: rawtaz proposal was to block listening at all, unless given the capability to a process
[21:04:51] <DX099> if you run "docker run --it -p 443:443 my_service.bin", if the attacker shuts down "my_service.bin", then the entire container should die with it
[21:04:57] <DX099> I get your edge case thinking
[21:05:01] <ikke> s/process/binary
[21:05:37] <rawtaz> im not talking about that. i am talking about "why is there a point to letting *any* process that an attacker manages to start in a container (mind you, an attacker can probably start new processes by exploiting a vuln in an existing process) to listen on a port, instead of letting just one specific binary do so?"
[21:05:37] <DX099> worse then, 'cause if they can inject your process, you were dead long ago
[21:05:45] <rawtaz> programmerq: ^
[21:06:08] <rawtaz> programmerq: yeah that was in order to prevent everything in that specific container to listen, except the binary that you then give the capability to listen.
[21:06:17] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 246 seconds)
[21:06:17] <ikke> rawtaz: what about python processes
[21:06:31] <ikke> You would need to give the capability to the python interpreter
[21:06:34] <ikke> defeating the purpose
[21:06:37] <programmerq> rawtaz by that logic, why let an attacker even run a process in the first place?
[21:06:43] <rawtaz> DX099: i agree, that is true. but if the attacker exploits that my_service.bin, cant it then fire up new processes or even replace the current one?
[21:07:16] <programmerq> set the container to read only and make every file ugo-x 
[21:07:27] <rawtaz> programmerq: what makes you thikn i am letting an attacker run a process? i am doing what i can to prevent that, as is everyone else, but we cannot control that fully. thats why we take extra precautions.
[21:07:41] <DX099> rawtaz: much better to let the "legit" process run and create shadow routes/handshakes
[21:08:01] <rawtaz> ikke: yeah, in that case it's of limited use. in this case im talkinga bout a regular Go binary
[21:08:11] <programmerq> rawtaz why not just make all your users unplug and bury their computers in the ground? That extra precaution would prevent attacks.
[21:08:28] <DX099> I for one salute your extra precaution
[21:08:45] <SomeDamnBody> DX099, do you think that this would work if I used two containers and not a container talking to a swarm instance?
[21:09:00] <DX099> I'm not just sure everything is going to react nicely if you set 65536 in that kernel param
[21:09:03] <SomeDamnBody> Two containers each on different hosts
[21:09:14] <rawtaz> programmerq: i dont get the point of that question. we both know that's not an option. are you thinking that im overdoing it? even though my suggestion was about one single line in the docker image, and at worst it wouldnt have any effect, at best making an attackers life even more difficult? in other words, why are you questioning my attempts to just go that extra mile?
[21:09:49] <programmerq> I'm all for extra precaution, but unless you can make a case for an actual attack vector, I don't think it's worth making regular usecases more difficult and counterintuitive. listening on a port in a container doesn't really give an attacker an opportunity to pivot.
[21:09:59] <DX099> SomeDamnBody:  the swarm service should offer all if not almost all the same options as the regular Docker CLI
[21:09:59] <rawtaz> programmerq: i suppose that you simply think what you wrote above is good enough, and i dont quesiton that. it's probalby is :) im just trying to take it one step further as the cost would be so minimal, and also it's a learning process :L)
[21:10:12] <rawtaz> programmerq: ok i hear you
[21:10:44] <programmerq> so yeah, it seems like you're getting carried away with wondering why the defaults aren't x y or z when they'd be extremely disruptive to core use cases.
[21:10:45] <DX099> it's just an orchestration layer after all
[21:10:51] <rawtaz> DX099: in this case the binary (traefik) seems to run just fine with every cap disabled, so it doesnt seem to be a problem :)
[21:11:33] <SomeDamnBody> DX099, can I have a single swarm with multiple different container commands?
[21:11:35] <DX099> rawtaz:  depends on your conf / LB but yeah, since if can bind to what it wants, Traefik shouldn't need anything too fancy
[21:11:54] <SomeDamnBody> Like, instead of running a container under and overlay that the swarm service container is on, have multiple services within the service under the overlay
[21:12:04] <DX099> SomeDamnBody:  you want different services if the use cases differ
[21:12:27] <rawtaz> programmerq: i dont really agree with that. the reason i was surprised by docker setting unpriv ports to minimum 0 is that no other fucking system does it, so what the heck? especially considering that there already are TWO other ways for a sysadmin to run containers without docker having to set that to 0. in other words, there was no problem to solve by making that change. if anyone needed it set to 0 they could do that already. it's a silly default to have
[21:13:06] <rawtaz> programmerq: if there was an actual problem that they solved, fine. but there wasnt. everyone could already listen on unpriv ports by setting caps or that sysctl themselves. its not a problem
[21:13:24] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[21:13:26] <DX099> SomeDamnBody:  I usually try my damndest not to mix random joe_container and jack_swarm_service
[21:13:27] <rawtaz> DX099: may i ask what you meant by "create shadow routes/handshakes" :O
[21:13:39] <rawtaz> you mean like honeypots? :3
[21:13:45] <DX099> it's one mode or the other but you shouldn't mix them unless you have specific needs
[21:13:52] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:14:01] *** Joins: CombatVet (~c4@user/combatvet)
[21:14:35] <rawtaz> programmerq: anyway, its not that we disagree in general. i just am on the side of "why let someone (an attacker) do X if there's no need for it", thats all. and in this case it was one line in the Dockerfile to do it.
[21:14:35] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 250 seconds)
[21:14:37] <programmerq> rawtaz▸ it's because the point of the container is to put a single process into its own sandbox. Best practice is to run that containerized process as a uid other than 0, but people don't do that because it introduces artificial limitations (like privileged ports) that make it easier for folks to just go "oh, I'll just run this as uid0"
[21:14:40] <DX099> and ofc, for production loads, I'd advocate for Swarm service and reach for max "cloud-readiness"/scalability for my services
[21:14:44] <rawtaz> or well, two given docker's default setting :)
[21:15:05] <programmerq> rawtaz▸ you can't put sysctl stuff into the dockerfile-- that's a container run option.
[21:15:08] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[21:15:26] <rawtaz> programmerq: yeah, im with you on that. but that is a *people* problem, and changing a highly established and conventional setting value to fix people's dtupidity and ignorance, that is not the way to go about security..
[21:15:50] <rawtaz> programmerq: yes, of course. it'd be one line in Dockerfile and one argument or setting in whatever runs it
[21:16:00] <programmerq> the concept of privileged/unprivileged ports is kind of irrelevant given the fact that this is happening in a network namespace dedicated to the container.
[21:16:12] <programmerq> privileged/unprivileged ports predates network namespaces in the linux kernel.
[21:16:39] <DX099> rawtaz:  No. I inject your process. I look in its heap for the network code. I rewrite it and "enrich" it. 
[21:16:39] <DX099> Now I can yourlegitapp.com/my_precious/crypto_lock and that will work
[21:16:55] <rawtaz> programmerq: i understand what you mean. but its not about the port numbers, my suggestion was about not letting anything but one static and fixed binary bind to that port. so if for some reason an attacker manages to run their own binary in the system, they would not be able to bind to a port. 
[21:16:59] <programmerq> since the network namespace effectively makes it so a container can't listen on any port in the host network namespace, it's a higher level of protection.
[21:17:19] <DX099> or I can make it so that if an HTTP requests starts with a certain bytestream, I trigger a special behaviour
[21:17:26] <rawtaz> programmerq: yes. nothing wrong with multiple layers though.
[21:17:26] *** Quits: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch) ()
[21:17:31] <programmerq> rawtaz and if you want to restrict things to only one binary, you can go with my suggestion and have literally only one binary in the image and run the container in read-only mode.
[21:17:37] *** Quits: mach`` (~Mach@86.121.208.210) (Ping timeout: 256 seconds)
[21:17:50] <programmerq> rawtaz two layers that don't improve upon eachother are just unnecessary complexity.
[21:18:25] <programmerq> again, I'm talking about defaults-- you're welcome to opt into this extra stuff on your own.
[21:18:46] <rawtaz> programmerq: yeah. as long as theres literally no way for an attacker to replace that process or start another one that listens on the port the original one listened on, without the container dying, then that is probably fine.
[21:19:23] <programmerq> if that process is the pid1 in the container, then if they kill it, the container is restarted. the read only filesystem wouldn't let them change the binary.
[21:19:33] <ikke> rawtaz: if you talk about go binaries, if you make it fully statick, you can make it the only thing in the image
[21:19:35] <rawtaz> programmerq: that rationale im not sure about. waht if you have ONE door, and there's a vulnerability in that door, then an attacker gets access. if you instead had TWO doors, and theres no vuln at the same time in the second one, how did this not improve your security?
[21:19:47] <rawtaz> ikke: yeah, thats the case with e.g. traefik
[21:20:06] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[21:20:08] <DoofusCanadensis> like the vulnerabilities exposed in busybox this week?
[21:20:16] <rawtaz> programmerq: yep i hear you. and i am running it read-only. your ug-x is a good idea though!
[21:20:20] <SomeDamnBody> DX099, well, I need multiple different containers to communicate across the hosts.
[21:20:30] <ikke> DoofusCanadensis: reference?
[21:20:42] <SomeDamnBody> DX099, is there a preferred way to put them in the same swarm, or to make two swarms communicate?
[21:21:09] <DoofusCanadensis> ikke: https://thehackernews.com/2021/11/14-new-security-flaws-found-in-busybox.html
[21:21:20] <programmerq> rawtaz if those doors actually have enough differences to make a difference, then sure. I'm not convinced that the network namespaces *and* no port binding really get you two doors in that analogy.
[21:21:20] <rawtaz> programmerq: regarding layers, it's not like "secure" places have one layer of defence, they have multiple and this is in part because they must expect failures in the layers at some point.
[21:21:36] <rawtaz> programmerq: okay, that is a fair opinion/thought indeed :)
[21:21:42] <rawtaz> fully with you on difference being a factor
[21:21:59] <rawtaz> programmerq: thanks a lot for your input
[21:22:02] <rawtaz> DX099: you too!
[21:22:07] <programmerq> 👍
[21:22:10] <rawtaz> ikke: same time and place tonight? ;3
[21:23:02] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:23:43] <rawtaz> oh man, there are so many java jobs available its insane. i get a bunch of job ads every day about it
[21:23:51] <rawtaz> anyone want work? know java and move to sweden :)
[21:24:14] *** Joins: incognito (~relativit@user/incognito)
[21:24:18] <DX099> rawtaz:  cheers
[21:24:59] <rawtaz> DX099: you'd be a douche if you rewrote my network code. i'd never forgive that :(
[21:25:07] <rawtaz> if only attackers thought about the emotional harm they can do.
[21:25:28] <ikke> DX099: oh, apparently they were already fixed in 1.34.0
[21:26:06] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:26:38] <DX099> rawtaz:  shhh don't worry, you won't even notice. I'll even optimize some parts. I need the latency to be top notch for my bitcoin mining after all
[21:27:10] <rawtaz> :D
[21:28:02] <DX099> SomeDamnBody:  why two swarms? and yes, everything is possible but you need to think about isolation/security, maintenance, coherence & stuff
[21:28:16] <SomeDamnBody> Oh, I can have one swarm and have two services within it
[21:28:34] <DX099> yep
[21:28:36] <SomeDamnBody> Can I have a service be interactive? Run /bin/bash in it?
[21:28:49] <DX099> wouldn't be much interest in it otherwise 😬
[21:28:57] <SomeDamnBody> DX099, I didn't know I could do that.
[21:29:14] <SomeDamnBody> Ok, so... how do I make sure that the replications get put on the workers?
[21:29:29] <DX099> SomeDamnBody: it's really the point of Swarm: treat your app as a scalable workload of identical instances
[21:30:06] <SomeDamnBody> So that the replications on the workers are on different hosts?
[21:30:15] *** Joins: s17 (~nobody@user/s17)
[21:30:31] <DX099> https://docs.docker.com/engine/swarm/how-swarm-mode-works/services/
[21:30:38] <DX099> take your time and go through this page
[21:31:09] <DX099> SomeDamnBody:  depends on what you configured but essentially, yes, that's the goal
[21:31:53] <DX099> spread the load through multiple docker nodes in a Swarm setup, and thus enable fault tolerance and high availability (ofc Swarm just by itself won't accomplish that)
[21:32:32] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[21:35:19] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:36:28] <masber> is it possible to change the entrypoint of a running container and restart it so it can run with the new settings??
[21:36:55] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:37:06] <DX099> sure, make your changes and save it in a new image
[21:40:50] <DX099> > docker run   -it --name test  alpine:latest touch hello_world
[21:40:50] <DX099> docker commit test my_alpine:v1 
[21:40:50] <DX099> docker run   -it --name my_test  my_alpine:v1 ls -l hello_world
[21:43:58] *** Joins: bouncy (~ben@user/benoit)
[21:47:00] <rawtaz> i must be really stupid. i fail to find a single command in this alpine container that works when i have not dropped all caps, and that doesnt work when i have dropped all caps. i tried chown, kill (own and others' process), ping. they all behave the same. can someone tell me a command that would work/not work depending on --cap-drop=all ?
[21:47:18] <rawtaz> i just want to verify that the dropping of capabilities has any actual effect
[21:47:29] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:48:36] *** Quits: tetsumaki (~unknown@ns331908.ip-5-135-162.eu) (Quit: oY)
[21:50:12] <notevil> try strace, that needs SYS_PTRACE
[21:50:29] <rawtaz> trying, thanks
[21:50:45] <DX099> chown is also a good candidate
[21:51:07] *** Joins: pycurious (~Adium@user/pycurious)
[21:51:49] <rawtaz> gotta install strace, alpine doesnt come with it lol
[21:52:04] *** Joins: jazzy2 (~jaziz@user/jaziz)
[21:52:05] <rawtaz> DX099: chwon <someotheruser> file, would that work?
[21:52:15] <rawtaz> or must i try it with a different group that i am a member of?
[21:52:39] <DX099> if you're running non-root, you could try with a file you own
[21:53:08] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[21:53:30] <rawtaz> setting it to the same ownership as it has already you mean
[21:53:39] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:54:49] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:54:53] <rawtaz> notevil: i can successfully `strace nc -lp 44`, it sits there and waits on accept() after some initial startup. and this is when the sys_ptrace is disabled. all caps are disabled.
[21:54:56] <DX099> try changing something the current user owns to a different user
[21:55:05] <rawtaz> err wait, let me make sure i tested the right container there...
[21:55:09] <DX099> if you're root like with alpine
[21:55:38] <DX099> try chown guest <file/dir>
[21:55:49] <DX099> or chown nobody <file/dir>
[21:56:38] <rawtaz> notevil: yeah, i tested the right one. i can strace just fine even with !cap_sys_ptrace
[21:57:22] <rawtaz> DX099: do you think that root wouldnt be allowed to chown either, when that cap is off?
[21:57:26] <ikke> If I run a container with --cap-drop=all, I cannot even chown as root (adduser test fails to chown /home/test)
[21:57:26] <rawtaz> ill try it
[21:57:38] <ikke> rawtaz: it does not work for me
[21:57:43] <rawtaz> ikke: thanks for trying. can you tell me exactly what command you ran?
[21:57:46] <ikke> chown: /home/test/: Operation not permitted
[21:57:49] <ikke> adduser -D test
[21:57:57] <ikke> chown test: /home/test
[21:58:08] <ikke> docker run -it --rm --cap-drop=all alpine
[21:58:08] <rawtaz> ok
[21:58:13] <rawtaz> trying that now
[21:58:35] <DX099> rawtaz:  that's the point of CAPS, not to care who you are, if the cap isn't there, it isn't
[21:59:02] <rawtaz> DX099: i agree completely
[21:59:26] <ikke> rawtaz: I think you are able to strace your own processes
[21:59:40] <ikke> without the capability
[22:00:05] <ikke> strace apk update works for me
[22:00:08] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:00:25] <rawtaz> ikke: your manual testing there was the same here on my end. now ill try that in the other container where i couldnt make out a difference
[22:02:46] *** Joins: tetsumaki (~unknown@ns331908.ip-5-135-162.eu)
[22:03:45] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:05:33] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:06:15] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:08:36] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[22:08:39] *** Joins: INeedAHandle (~INeedAHan@user/ineedahandle)
[22:08:40] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:09:43] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[22:10:02] <DX099> ikke: 
[22:10:02] <DX099> >/ # strace touch
[22:10:02] <DX099> strace: test_ptrace_get_syscall_info: PTRACE_TRACEME: Operation not permitted
[22:10:02] <DX099> working as intended here
[22:10:17] *** Quits: vidbina (~vid@dynamic-078-055-127-162.78.55.pool.telefonica.de) (Ping timeout: 264 seconds)
[22:10:42] <ikke> DX099: might depend on the host?
[22:11:15] <rawtaz> i can run strace touch as root successfully.
[22:11:33] <rawtaz> in the alpine container which has all caps dropped.
[22:11:50] <rawtaz> its like they dont apply at all
[22:12:02] <rawtaz> err arent dropped at all. but capsh says they are
[22:12:29] <rawtaz> DX099: is it an alpine:3.14.2 container?
[22:12:58] <DX099> I'm on latest
[22:13:11] <DX099> >  # cat /etc/os-release 
[22:13:11] <DX099> NAME="Alpine Linux"
[22:13:11] <DX099> ID=alpine
[22:13:11] <DX099> VERSION_ID=3.14.2
[22:13:16] <DX099> s///
[22:13:27] <DX099>  * > # cat /etc/os-release
[22:13:27] <DX099> >NAME="Alpine Linux"
[22:13:27] <DX099> >ID=alpine
[22:13:27] <DX099> >VERSION_ID=3.14.2
[22:13:54] <rawtaz> ok. 
[22:14:02] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:14:07] <rawtaz> same here
[22:14:18] <ikke> If the kernel allows it, removing the capability does not matter
[22:14:22] <rawtaz> can you pastebin your capsh --print ?
[22:15:26] <DX099> ikke:  yeah but Docker namespaces part of the kernel
[22:16:03] <DX099> I don't have capsh in alpine and don't know which packages it belongs too
[22:16:11] <rawtaz> its apk add libcap
[22:16:25] <rawtaz> i get if you dont want to fiddle with it :)
[22:16:27] <DX099> also, I tested on Podman / ArchLinux + Centos 7 / Docker
[22:16:40] *** Joins: jonifen_ (~jonifen@user/jonifen)
[22:17:44] <DX099> https://www.toptal.com/developers/hastebin/ecibucicoz.yaml
[22:17:47] *** Quits: jonifen (~jonifen@user/jonifen) (Ping timeout: 264 seconds)
[22:18:47] <DX099> podman/arch
[22:18:51] <ikke> I can run strace on archlinux with --cap-drop=all
[22:18:57] <rawtaz> same as mine here
[22:19:01] <DX099> https://www.toptal.com/developers/hastebin/yoyihuzaxa.yaml < CentOS7/Docker
[22:19:04] <rawtaz> this is so weird
[22:19:55] <ikke> Current IAB is missing from my capsh output
[22:19:59] <rawtaz> could it be something funky with alpine having busybox? i cant imaigne how, it's just the shell and tools. how could they affect what they're allowed to do by the kernel. not liekly
[22:20:18] <rawtaz> ikke: hm what does your output look like, mind pasting?
[22:20:36] <rawtaz> i always have that current IAB, but all the caps are prefixed with ! indicating not active (or am i wrong on that :O)
[22:20:39] <ikke> https://tpaste.us/Zj7l
[22:21:25] <rawtaz> thanks. since your Current line is empty it should mean you dont have any caps
[22:21:28] <rawtaz> (active)
[22:24:02] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:26:26] *** Joins: pycurious (~Adium@user/pycurious)
[22:26:59] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:27:26] *** Quits: Snuupy (~Snuupy@user/snuupy) (Quit: Ping timeout (120 seconds))
[22:27:33] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[22:27:44] <Ether_Man> I just have to ask... Is there any special reason why the official mysql image is amd64 only and neither arm or arm64 is included, despite being fairly common platforms to run mysql on these days with raspi and all
[22:27:52] *** Joins: Snuupy (~Snuupy@user/snuupy)
[22:29:10] <ikke> https://github.com/docker-library/mysql/issues/318
[22:29:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[22:31:05] *** Joins: justache (~justache@user/justache)
[22:31:23] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[22:31:41] <DX099> Oracle being Oracle
[22:31:46] <DX099> would be enough of a reason
[22:32:06] <DX099> Unless you have specific needs, I think it's safe to swap for MariaDB
[22:32:28] <DX099> or even PGSQL if you can
[22:32:31] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:32:49] <Ether_Man> But Oracle does have arm versions of it. Oracle's own mysql-server image even has an arm version there. But docker's library version still isn't
[22:33:31] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[22:33:47] <DX099> yep, Oracle stuff alright, loose you in an array of non-sensical features/version schemes
[22:33:49] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[22:33:54] <rawtaz> theres really no point using mysql when there's mariadb and you for some reason dont want to use postgresql instead
[22:34:23] <Ether_Man> https://www.mysql.com/support/supportedplatforms/database.html ARM64 is supported in 8.0 for Oracle Linux, RHEL7 and CentOS7, as well as MacOS 11
[22:35:40] <Ether_Man> Apart from there being semantical differences that some apps rely on... It's easy to say "just switch over" to a developer because the differences are small... To end users though, that's not really helpful in any way.
[22:38:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[22:39:13] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 256 seconds)
[22:41:40] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:42:40] *** Quits: masber (~masber@vpn-45.cscs.ch) (Ping timeout: 256 seconds)
[22:45:05] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-7cfd-7535-6a92-0681.res6.spectrum.com)
[22:47:13] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:17] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:48:36] *** Joins: jpic (~jpic@82.142.10.150)
[22:49:43] <jpic> hi all, i'm trying to upgrade automated code I have to install latest docker-compose, it used pip. Now I've started migrating to the new way curl internet > /usr/local/lib/docker/cli-plugins/docker-compose
[22:50:30] <jpic> but I'm wondering: can I drop my old code using pip completely? how long have docker releases themselves been compatible with cli-plugins?
[22:50:43] *** Joins: _sean (~xsean@203.86.202.187)
[22:51:03] <rawtaz> jpic: did your code use/call `docker-compose` or what did it actually do?
[22:51:12] <jpic> that I'v taken care of already
[22:51:19] <rawtaz> you can replace the pip version of docker-compose with the new version of docker-compose just fine AFAIK
[22:51:43] <tabakhase> pretty sure i havent used pip-compose in like over 4 years
[22:51:44] <jpic> and call that binary directly instead of going through docker<space>compose?
[22:52:40] <jpic> ok, so the recommended way is to download the binary anywhere and call it directly? no need to put it in /usr/local/lib/docker/cli-plugins/docker-compose and go through docker<space>compose?
[22:52:59] <rawtaz> jpic: the python based docker-compose is what the new Go-based docker-compose replaces. but that isnt the exact same thing as the `docker compose` subcommand
[22:53:05] <rawtaz> i would use docker-compose, the new one
[22:53:23] <rawtaz> perhaps if you do what you just wrote it does the same thing
[22:53:45] <rawtaz> its just that every time i tried `docker compose` instead of the docker-compose one, it wasnt fully compatible. but that might have changed now.
[22:53:56] <rawtaz> try it. you cant go wrong. if it doesnt work, youll just use the binary directly.
[22:54:01] <rawtaz> its not like anything breaks :)
[22:54:03] <jpic> I just use a few basic commands, namely pull, build, up and logs, I'm just looking to change the automation code for whatever will be more future compatible
[22:54:08] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:54:10] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:54:19] <rawtaz> the future is probalby going towards `docker compose` 
[22:54:26] <jpic> automation code to get the latest version i mean
[22:54:35] <rawtaz> so if that works for oyu and runs the new docker-compose binary then that sounds good
[22:56:17] <jpic> you mean that `docker compose` is not the same as `docker-compose`? and it's not just a matter of version?
[22:57:18] <rawtaz> i cant say for sure. it's just my previous observations when trying to use `docker compose` instead of docker-compose was that the former wasnt working equally well as the latter. but that might be because the former wasnt as mature as it is now. so i think my experience isnt something to base your decision on.
[22:57:52] <rawtaz> but that things are moving towards having the compose command be part of docker is pretty clear i think. and the compose binary you want to use is of course the new Go-based one. do combine those and you should be fine
[22:58:22] <jpic> i'm so confused by the docs, it says to download the binary in /usr/local/lib/docker/cli-plugins and *then* use `docker compose`
[22:58:27] <jpic> https://docs.docker.com/compose/cli-command/#install-on-linux
[22:58:51] <rawtaz> isnt that because `docker` looks in that directory and if it sees a docker-foo it supports foo as a subcommand, i.e. `docker foo`?
[22:58:57] <rawtaz> as in, that it execute whatever you put there
[22:59:16] <rawtaz> i dont know that this IS the case, but it would make very much sense
[22:59:25] <jpic> even for security?
[22:59:35] <cliluw> Any way to dump out the file system of a Docker image? I know about `docker image save`, but I want all the layers combined.
[22:59:43] <rawtaz> how is it different from installing the binary somewhere else? i dont get it :)
[22:59:55] <jpic> me neither
[23:00:04] <rawtaz> cliluw: docker export i guess?
[23:00:25] <cliluw> rawtaz: Doesn't that only work on containers, not on images?
[23:00:31] <jpic> maybe the documentation tells to do that and projects to remove the part where we curl > .../docker-compose ?
[23:00:38] <rawtaz> jpic: but if you do it that way and it works that way then even if they later embed compose in the docker binary directly youll have the same command, so seems like the way to go
[23:00:53] <jpic> right, thanks for the heads up!
[23:00:54] <rawtaz> cliluw: `docker help` says "export      Export a container's filesystem as a tar archive"
[23:01:06] <jpic> and thanks tabakhase for the heads up about the 4 years BC
[23:01:11] <rawtaz> cliluw: duh sorry, youre talking image...
[23:01:13] <rawtaz> hm
[23:01:44] <tabakhase> cliluw there are a few "only works on containers" like commands - "docker cp" has the same issue - common to run the thing with a sleep and unsetting entrypoint or such... not nice, but doable
[23:02:04] <rawtaz> cliluw: docker save?
[23:02:33] <cliluw> rawtaz: That's just a shorthand version of the "docker image save" command that I mentioned.
[23:03:09] <cliluw> tabakhase, rawtaz: Thanks for your help. Sounds like Docker doesn't have this functionality. :-(
[23:03:57] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[23:04:54] <tabakhase> cliluw well, ya cant access a onion-filesystem without assembling it, so it makes perfect sense to now work directly :P
[23:05:16] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[23:05:16] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:05:17] <rawtaz> cliluw: ok sorry :/
[23:05:29] <rawtaz> cliluw: i'd probably just start a container based on the image and copy it all off there
[23:05:32] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:05:49] <rawtaz> but it depends on what your use case is, how you need to use the stuff
[23:06:05] <tabakhase> irl you can prob hack together some bashfunction to create a dummy, do the thing, and rm it in a few keystrokes
[23:08:01] <rawtaz> can someone take a look at my capabilities minimal reproduction test here and see if i made any mistakes? https://kopy.io/bxWVa - it doesnt seem that caps make any difference, which i expect them to.
[23:09:28] <minimal> rawtaz: one of me is enough :-)
[23:09:36] <rawtaz> i can however see a difference when i do the same thing but with the root user - it can touch the file to create it, but it cannot use chmod, when i drop all caps.
[23:09:44] <rawtaz> minimal: <3
[23:10:02] <rawtaz> so it appears that the capabilities drop only affects root, not a regular user.
[23:10:59] <rawtaz> which is interesting, because `man capabilities` clearly says that capabilities are a mechanism for *unprivileged* users. but here im seeing the opposite of that
[23:11:09] <rawtaz> err unprivileged processes.
[23:12:40] * rawtaz is updating the paste to show this
[23:16:18] <rawtaz> updated paste: https://kopy.io/ZRlVi
[23:16:55] <rawtaz> i dont see how this makes sense. ok if theres some kernel or host setting affecting this. but other than that, what.
[23:19:43] *** Joins: AsenMx (~AsenMx@user/asenmx)
[23:20:13] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[23:20:22] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:26:56] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:27:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:28:40] <ikke> With docker-compose, I have 2 containers sharing the same volume. Container A is based on an existing image, and the path where it's mounted is owned by root. Container B is built locally from a Dockerfile, and mounts it on a directory owned by a user (that exists in both containers). The service for container A has a depends_on for the service for container B, but when I do doccker compose up -d,
[23:28:41] <ikke> it seems that the directory ends up being owned by root, and so container B cannot write to it.
[23:29:24] <ikke> But when I run docker compose run --rm B (which runs an entrypoint which tries to write the files), it succeeds
[23:29:36] <ikke> (after the first container is already running
[23:29:58] <ikke> If I manually start service B before A, it also works
[23:30:06] <ikke> Any idea what's going on?
[23:30:44] <ikke> docker-compose file: https://tpaste.us/dPyL
[23:32:29] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[23:38:01] *** Quits: jpic (~jpic@82.142.10.150) (Ping timeout: 250 seconds)
[23:39:48] <rawtaz> which container is A and which is B ?
[23:39:57] *** Joins: jpic (~jpic@82.142.20.182)
[23:40:45] <ikke> A is web, B is builder
[23:40:58] <ikke> The volume is site
[23:42:03] <ikke> If I just run `docker-compose up -d`, I get file permission errors from the builder trying to rsync files to /site
[23:42:28] <ikke> if I then run docker-compose run --rm builder, which does the exact same thing, it works
[23:42:58] <ikke> If I remove everything, and run docker-compose up -d builder and then docker-compose up -d web, then it works as well
[23:43:03] *** Joins: mach`` (~Mach@2a02:2f09:d105:f200:ad22:8e6a:5f19:5beb)
[23:43:30] *** Joins: mei3 (~mei@user/mei)
[23:43:54] <rawtaz> so theres like a race condition for the ownership of that directory
[23:44:40] <rawtaz> in one case it works because in the unpriv container the files are seen as the unpriv user, and in the other container they are seen as that user but the container doesnt give a shit because it runs as root
[23:44:58] <rawtaz> in the other case it doesnt work because the unpriv container sees the files as root and thereby cant access them properly
[23:45:01] <rawtaz> right?
[23:47:15] <ikke> in both containers, the process is run as darkhttpd
[23:48:11] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:48:22] <ikke> If multiple services mount a non-existing named volume, how is determined which containers files get copied to the volume?
[23:55:25] *** Joins: jushur (~human@user/jushur)
[23:57:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:59:24] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
