[00:01:04] <shangxiao> lol
[00:01:10] *** Joins: Axy (~Axy@user/axy)
[00:01:13] <PyT001> grym: Challenge here is  canny threshold contours  all gives outlines
[00:04:38] <grym> PyT001: what about a greyscale binary mask
[00:05:56] <PyT001> grym: have done that  img_gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
[00:05:56] <PyT001> ret, thresh = cv.threshold(img_gray, 0, 255, cv.THRESH_BINARY_INV + cv.THRESH_OTSU)
[00:06:37] *** Joins: Voxel (~Voxel@ip178-67-155-188.onego.ru)
[00:08:33] *** Joins: Samian (~Sami@2620:10d:c091:480::1:7de4)
[00:09:00] <Samian> Does anyone know what the stuff before python does in: numactl --physcpubind=0-27 -m 0 python dlrm_s_pytorch.py
[00:09:06] *** Quits: Batzy (~Batzy@user/batzy) (Quit: lata)
[00:09:12] <Samian> I don't understand the point of it
[00:09:41] <Samian> oh it just limits the number of processors to use?
[00:10:38] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[00:11:00] <mefistofeles> Samian: I'd guess it is binding some processors to it, yes
[00:11:21] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 248 seconds)
[00:11:21] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[00:11:46] <mefistofeles> Samian: https://linux.die.net/man/8/numactl easy web search btw
[00:12:00] *** Joins: Batzy (~Batzy@user/batzy)
[00:13:18] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[00:13:32] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[00:14:07] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:15:31] *** Joins: kenoba (~kenoba@user/kenoba)
[00:17:01] *** Quits: kenoba (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[00:17:58] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[00:20:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:21:41] <PyT001> grym: https://imgur.com/a/62KmzYe
[00:25:21] <Samian> mefistofeles  I had read that. I was just confirming
[00:26:15] *** Joins: linguist (~brunildz@170.84.56.192)
[00:26:36] *** Quits: Batzy (~Batzy@user/batzy) (Quit: lata)
[00:27:42] *** Joins: Batzy (~Batzy@user/batzy)
[00:28:19] *** Quits: vladoski (~vladoski@178.138.192.59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:59] *** Joins: vladoski (~vladoski@178.138.192.59)
[00:35:47] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:36:59] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[00:37:52] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:38:03] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[00:38:22] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:38:36] <PyT001> grym: This is a good example https://imgur.com/a/dfZbrto , if i want to redraw , i should follow the curves , if followed the curves say outer one it gives different shapes , inside one gives different shapes, hope i have explained it
[00:39:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:40:49] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[00:41:03] <grym> PyT001: i think you would want to mask/binarize that to get a "fat" curve, and then use erosion to narrow that curve down to the center-line
[00:41:33] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) (Quit: Client closed)
[00:42:23] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[00:42:39] *** Quits: vladoski (~vladoski@178.138.192.59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:43:11] *** Joins: vladoski (~vladoski@178.138.194.59)
[00:44:05] *** Quits: Batzy (~Batzy@user/batzy) (Quit: lata)
[00:44:17] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) (Client Quit)
[00:45:09] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Quit: Haxxa flies away.)
[00:45:14] *** Joins: Batzy (~Batzy@user/batzy)
[00:46:21] *** Quits: Batzy (~Batzy@user/batzy) (Client Quit)
[00:46:51] <Xavierdarkness>  
[00:46:53] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[00:46:59] *** Parts: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) ()
[00:47:20] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:47:30] *** Joins: Batzy (~Batzy@user/batzy)
[00:48:03] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[00:49:09] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[00:49:11] *** Parts: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) ()
[00:49:17] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[00:49:19] *** Parts: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) ()
[00:49:32] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[00:49:34] *** Parts: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) ()
[00:49:41] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[00:50:23] <PyT001> grym:Sorry i got connection issue , can you please say about the last post
[00:50:50] <PyT001> grym: Kindly repost the last message
[00:51:28] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[00:51:35] *** Joins: qlixed (~qlixed@181.44.129.13)
[00:52:18] <grym> PyT001: i think you would want to mask/binarize that to get a "fat" curve, and then use erosion to narrow that curve down to the center-line
[00:52:39] *** Quits: Voxel (~Voxel@ip178-67-155-188.onego.ru) (Quit: Client closed)
[00:52:46] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[00:52:49] <grym> PyT001: or possibly "skeletonize", i forget which verbs openCV uses to describe that process
[00:53:26] <ApostleInTriumph> Hello. I've a list with src name and another with dst names. How do I change names of files from src to dst, given they're in 1-1
[00:53:27] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:63c3:3f71:b0b6:2dfa) (Ping timeout: 240 seconds)
[00:53:55] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:54:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:54:43] *** Quits: Batzy (~Batzy@user/batzy) (Quit: lata)
[00:54:46] <brelod> ApostleInTriumph: src, dst = dst, src
[00:55:12] <ApostleInTriumph> brelod they're file names
[00:55:29] <grym> ApostleInTriumph: paste a sample?
[00:55:49] *** Joins: Batzy (~Batzy@user/batzy)
[00:56:10] <ApostleInTriumph> src followed by dst as set https://bpa.st/7H6A'
[00:56:18] <ApostleInTriumph> https://bpa.st/7H6A ^
[00:56:46] <ApostleInTriumph> src are files present in /path/. dst is how i want each of those file names to be changed
[00:56:55] <PyT001> grym: i think it erode  bitwise_or i think , let me try
[00:57:07] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:57:45] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 248 seconds)
[00:57:47] *** Quits: pro_z (~pro_z@37.214.45.81) (Ping timeout: 240 seconds)
[00:58:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:59:29] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:59:51] <grym> ApostleInTriumph: something like https://bpa.st/Z57A
[00:59:56] <grym> obviously try that on dummy stuff first
[01:00:11] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:00:14] <grym> https://docs.python.org/3/library/pathlib.html#pathlib.Path.rename
[01:00:36] <ApostleInTriumph> grym great! I had shutils.move but that didn't work. i wonder why..
[01:02:48] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[01:02:51] <Akuli> sets aren't ordered, you might want to use lists instead if you want to rename first file name from one set to first file name from another set
[01:03:17] <grym> oh yes, certainly sorted() on those sets
[01:03:30] <grym> but you said you had lists at first
[01:03:55] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[01:04:59] *** Parts: akk (~akk@174-28-98-206.albq.qwest.net) (+++)
[01:05:01] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[01:05:37] *** Joins: pacbard (~pacbard@user/pacbard)
[01:07:08] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:09:14] *** Joins: pragmatic_enigma (~pragmatic@user/pragmaticenigma)
[01:09:59] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[01:10:04] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[01:11:20] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[01:11:28] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 268 seconds)
[01:12:27] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Ping timeout: 240 seconds)
[01:13:27] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[01:14:18] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: leaving)
[01:15:49] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[01:17:40] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 252 seconds)
[01:18:42] *** Quits: vladoski (~vladoski@178.138.194.59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:21:28] *** Quits: pragmatic_enigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[01:23:14] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[01:23:34] *** Joins: aphysically (~aphysical@user/aphysically)
[01:23:41] *** Joins: vladoski (~vladoski@178.138.192.59)
[01:24:03] <mozgalom> Hi all! Out of pure enthusiasm and curiosity, I'm trying to poinpoint a memory leak in a Flask app which was not written by me and which I know almost nothing about. But there is one function which poked me in the eye, using concurrent.futures.ThreadPoolExecutor() which I'm not familiar with at all. Relevant piece of code (can provide more if needed) which I'm suspicious about looks like this: https://bpa.st/MY4A
[01:24:32] <mozgalom> I took a look at concurrent.futures docs a little bit and noticed in the ThreadPoolExecutor Example (https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example) and a different approach in handling threads and tried to change my code into: https://bpa.st/32VQ which I believe should do the same thing in the end, but I didn't notice any smaller memory footprint.
[01:24:47] <mozgalom> My questions here are, given that I'm really unexperienced with async Python – is my first example using a correct way to handle threads in the first place and is it possible to tell if such piece of code could really be a potential memory leak?
[01:25:53] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[01:26:30] <aphysically> -X dev may show resource warning in some select cases if you don't clean up properly
[01:27:16] <aphysically> I don't know if that even applies to any threading cases though
[01:27:47] *** Quits: linguist (~brunildz@170.84.56.192) (Ping timeout: 240 seconds)
[01:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:30:51] <mozgalom> Hm, let me see how would I pass that to Flask app
[01:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:32:09] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:32:31] *** Joins: pacbard (~pacbard@user/pacbard)
[01:32:51] *** Quits: cedric (~cedric@2a01:cb11:867:c200:4a2:7f3f:a87b:38f8) (Quit: Konversation terminated!)
[01:34:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:36:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:36:06] <mozgalom> I tried to run "python -X dev -m flask run" but can't see anything more than usual profiler outputs... Can you tell at which point it should show that resource warning maybe?
[01:36:12] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[01:36:33] *** Joins: doc|work (~doc@user/doc)
[01:37:01] *** Joins: Xano (~Xano@2a00:23c4:4200:a00:af3f:b031:9a3d:a6fe)
[01:37:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[01:37:08] *** Joins: fikran (~fikran@user/fikran)
[01:37:28] *** Quits: gitly (~gitly@148.252.132.121) (Ping timeout: 252 seconds)
[01:37:45] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 248 seconds)
[01:38:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[01:38:50] *** Quits: wender (~Wender@189.37.69.26) (Remote host closed the connection)
[01:39:33] <Akuli> mozgalom, can you first explain why it would be a memory leak?
[01:39:33] *** Joins: gitly (~gitly@85.255.237.213)
[01:39:55] <Akuli> what object do you expect to not get garbage-collected correctly?
[01:40:26] *** Joins: nomic (~nomic@185.217.117.169)
[01:41:03] <mozgalom> Akuli The application really has a memory leak, I'm just trying to pinpoint where is it, honestly, just because I'm bored a bit =) But I know that people usually make mistakes with async approach so I tried to check here if the piece of code in question could be potentially a culprit...
[01:41:06] <Xano> I've got a small PyQt application that needs to perform a long-running task heavy on I/O, so that's gone into a thread of its own. Now this task needs to log its progress, but it's the main thread (with the Qt GUI) that displays these logs to the user. I'm stuck on how to communicate these logs to the main thread, without blocking the GUI itself.
[01:41:16] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:41:35] <Akuli> mozgalom, in the first version that doesn't use globals(), i don't see anything leaky
[01:41:53] *** Joins: emika4 (~emika@83.136.182.141)
[01:41:59] <Akuli> it uses local variables which get garbage-collected by the reference counting, as long as there are no cyclic references, and it uses "with" to properly shut down the executor
[01:42:07] *** Quits: emika (~emika@185.207.249.30) (Ping timeout: 240 seconds)
[01:42:07] *** emika4 is now known as emika
[01:42:21] <mozgalom> Akuli So that is completely valid approach to handle threads? No need to use as_completed() like in the example in docs?
[01:42:23] <hexology> who knows what's in the "rest of the function" though
[01:42:34] *** sharperguy__ is now known as sharperguy
[01:43:52] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:44:00] *** Joins: computeiro (~Wender@189.37.69.26)
[01:44:44] *** Joins: linguist (~brunildz@170.84.56.192)
[01:45:26] <mozgalom> hexology There's a db query or two and constructing a dict with values based on vars from "results_futures" and similar but I don't see any problems there so far, neither my profiler shows anything suspicious there.
[01:45:57] *** Joins: matsaman (~matsaman@user/matsaman)
[01:46:09] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[01:46:26] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[01:46:29] *** Joins: Vornotron (~Vornicus@2603-8000-5d07-7ef0-514d-3b06-3b0d-5d8f.res6.spectrum.com)
[01:47:42] <mozgalom> I'm not completely sure that this Flask endpoint/function is the problem, my conclusion came from looking at which endpoints are used the most...
[01:48:25] <mozgalom> Coincidentally or not, the only endpoint which is using async stuff is used more than 90% requests.
[01:49:02] *** Quits: hyper_dave (~hyper_dav@197.156.107.98) (Quit: WeeChat 3.2)
[01:49:37] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-514d-3b06-3b0d-5d8f.res6.spectrum.com) (Ping timeout: 250 seconds)
[01:49:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[01:49:54] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:49:56] <mozgalom> Don't have too much experience with profiling either tbh, especially profiling Flask app with lots of endpoints defined
[01:50:27] <Akuli> if nothing else works, you could write a script that makes the same request many times, and see if the memory usage grows
[01:50:32] <hexology> mozgalom: so how do you know there's even a memory leak? memory usage on the host is climbing over time?
[01:51:11] <mozgalom> Akuli that's what I'm doing at the moment... Tried both of my examples for an hour long, but yea, didn't see much different results in mem usage...
[01:51:13] <hexology> Xano: can you put the messages into a queue, and have the main thread pull items off the queue? that sounds like something that Qt would include
[01:51:35] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:51:37] <mozgalom> hexology Grafana charts from production environment are telling us that...
[01:51:54] *** Quits: sazawal (~sazawal@182.64.58.123) (Quit: Leaving)
[01:51:55] *** Joins: diamondbond (~diamondbo@175.157.84.92)
[01:52:03] <hexology> so your prod environment has memory usage slowly growing, but you can't reproduce in dev. fun!
[01:52:19] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:52:19] <mozgalom> Right? =)))
[01:52:42] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:53:12] <mozgalom> Keep in mind that I'm not familiar with profiling, handling async in Pyton or the app itself, which makes it even more fun
[01:53:56] <hexology> are you storing/caching database query results somewhere? maybe there's a long lived user session with an endlessly growing cache of data
[01:54:00] <Akuli> are you sure that the python process is what eats up memory? look at "ps aux" or some such
[01:54:14] *** Quits: diamondbond (~diamondbo@175.157.84.92) (Client Quit)
[01:54:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:55:00] <mozgalom> hexology No caching at all as far as I can tell
[01:55:07] *** Quits: linguist (~brunildz@170.84.56.192) (Ping timeout: 240 seconds)
[01:55:15] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[01:55:43] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[01:55:54] <mozgalom> Akuli Devs apparently inspected it a bit and it was gunicorn workers who were filling up mem
[01:55:56] *** Joins: linguist (~brunildz@170.84.56.192)
[01:56:33] *** Joins: hyper_dave (~hyper_dav@197.156.107.98)
[01:58:07] <hexology> https://stackoverflow.com/q/60296742/2954547 you're not running gunicorn in prod with --reload, right?
[01:58:42] <Akuli> would be nice to actually see the process list from "ps aux" or similar
[01:58:48] <mozgalom> I don't think so but will have to verify that, thanks for pointing it out
[01:58:49] <hexology> also it might just be the OS gradually building up filesystem caches etc. in memory
[01:59:14] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:59:20] <hexology> unless you're actually swapping or processes are being oom-killed maybe it's just linux (i assume) trying to use all available ram
[02:00:51] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[02:01:22] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:01:38] <foo> Is there another library similar to attr that allows me to do something.this = "ha" ... mainly for testing / dummy code here
[02:02:02] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[02:02:29] <stealth_> foo, dataclasses
[02:02:35] <stealth_> foo, its in stdlib
[02:02:44] <foo> stealth_: thank you
[02:04:05] <hodapp> I am using xarray in a growing project and feel like I've stumbled into an anti-pattern in which the names of dataarrays are hard-coded sort of ad-hoc - but trying to centralize them looks even uglier, since a lot of common calls take the names as keyword args, not directly as strings
[02:04:17] <kieto> is there a channel to ask for pandas-specific questions?
[02:05:44] <hodapp> so e.g. a dataarray foo sometimes appears via string "foo", but also appears as .assign(foo=...), .sel(foo=...) which is sort of a liability
[02:05:57] <hodapp> kieto: enough people here know Pandas you can probably just ask
[02:06:32] <kieto> hodapp: thanks :)
[02:06:47] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[02:07:03] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[02:07:35] <hodapp> I guess .sel(**{MODEL.FOO: ...}) isn't *that* much worse than .sel(foo=...) but... meh
[02:07:57] <hodapp> I am curious what pattern people follow in larger projects that use xarray and want to keep some kind of consistent schema
[02:08:39] <mozgalom> hexology Just confirmed that we don't run it with --reload flag in prod =) Akuli, just tried to inspect one of the Docker containers running this app and this is the output of "ps aux": https://bpa.st/RKJQ
[02:08:44] <grym> hodapp: i know, we can serialise the names to yaml and dump 'em in the config next to the path to the twelve prototxts...
[02:08:52] <grym> hodapp: (i don't have a serious answer for you, unfortunately)
[02:09:15] <Akuli> the workers give so much useful debugging info in "ps aux" :D
[02:09:15] * hodapp dumps compost bin down grym's shirt
[02:09:29] <grym> that sure is the design philosophy, alright
[02:09:38] <Akuli> i really don't know what i would do, i have never actually ran or debugged or written a python backend for a website
[02:10:10] <hodapp> one thing I thought of is to pick very distinctive names so that, at a minimum, grep is guaranteed to find them all with a minimum of false positives
[02:10:30] <hodapp> e.g. XY_foo where XY is just some prefix that accompanies a bunch of related things
[02:10:34] <grym> that's the thing i dislike about stringly types
[02:10:47] <grym> it's a shame enums are so unwield
[02:10:49] <grym> y
[02:11:13] <hodapp> and I get that they're restricted by what NetCDF actually supports here
[02:11:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:12:58] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[02:14:45] *** Quits: Barones (~Barones@2804:48dc:8500:0:d14e:a4cd:a71a:dece) (Quit: Leaving)
[02:14:46] *** Quits: rendar (~rendar@user/rendar) (Quit: linux = fucking OS.)
[02:15:15] <hodapp> https://github.com/pydata/xarray/issues/2292 oh, I'm not the only one to have complained
[02:16:42] * foo investigates options on how to run a query on a postgres database and import into sqlalchemy
[02:16:52] <kieto> Okay, so pandas question: I have a csv file with things I purchased, classified by type of item (e.g. pharmacy, supermarket, tech, etc) and date of purchase. I've run `df.groupby([pd.Grouper(freq="M"), df.columns[0]])sum().dropna()` to group them by month and type of purchase, but the indexes I get are dates of the end of each month: 2019-01-31, 2019-02-28, etc. How can I reformat that index to only show year
[02:16:54] <kieto> and moth, not day?
[02:16:55] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[02:17:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:17:26] <kieto> *month
[02:18:38] *** Quits: vladoski (~vladoski@178.138.192.59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:44] <kieto> (it's a multiindex, btw
[02:18:47] <kieto> )*
[02:18:57] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[02:19:44] <mozgalom> Found some promising Flask profiler https://github.com/muatik/flask-profiler, going to check it out and hope to pinpoint the issue eventually... Thanks for all the help and tips ;)
[02:22:05] *** Joins: vladoski (~vladoski@178.138.194.59)
[02:22:52] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[02:22:56] <mozgalom> Oh! "But Flask also has a built-in in werkzeug's profiler." Interesting
[02:23:35] <kieto> nvm, I think I got it: just add `.index.levels[0].strftime("%Y-%m")` :)
[02:23:42] *** Quits: vladoski (~vladoski@178.138.194.59) (Client Quit)
[02:23:45] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:28:39] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[02:29:00] *** Joins: regedit (~regedit@ool-457874e2.dyn.optonline.net)
[02:30:29] <rwbrambler> Hi, I'm trying to run pip install -r requirements.txt, Most of my requirements are in C:\Program Files\... but some are not.  Some are in my C:\users\...appdata\roaming... How to I make sure I'm updating everything that is in C:\Program Files?
[02:31:51] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:34:33] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[02:34:34] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[02:35:40] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:37:32] *** Quits: Akuli (~Akuli@82-203-167-7.bb.dnainternet.fi) (Quit: Leaving)
[02:39:40] *** Quits: linguist (~brunildz@170.84.56.192) (Ping timeout: 240 seconds)
[02:39:40] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[02:41:11] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[02:42:48] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:43:30] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19) (Read error: Connection reset by peer)
[02:43:47] *** Quits: Narrat (~omnius@p200300df5f2bccfe06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:44:05] *** Joins: p-i- (~Ohmu@2403:6200:8870:9971:3e:e22e:c0c:8b2e)
[02:45:33] *** Quits: MrC (Ben@mrbenc.net) (Remote host closed the connection)
[02:46:23] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[02:47:48] *** Quits: brelod (~me@90.251.226.93) (Quit: leaving)
[02:48:38] <aphysically> I should learn to use a queue re: threading
[02:49:27] <aphysically> right now in my long I/O tasks I just process them with regex and update shared threadsafe variable with info, and it's fast enough that it doesn't really matter despite ffmpeg spamming info every frame
[02:50:12] <rwbrambler> Hi, I need to make sure that when I run pip install -r requirements.txt that it installs/updates everything in c:\program files.  Not my user directory.  It is showing that I have a mix of some in program files and some in my user directory.  How do I make sure everything is updated in the global program files space?
[02:50:13] <aphysically> since it's on its own thread I'm not sharing stdout so there's no chance it will deadlock anyway
[02:51:07] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) (Ping timeout: 246 seconds)
[02:51:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[02:51:31] *** Joins: MrC (Ben@mrbenc.net)
[02:51:52] *** Quits: hyper_dave (~hyper_dav@197.156.107.98) (Quit: WeeChat 3.2)
[02:52:03] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[02:52:33] *** Quits: Samian (~Sami@2620:10d:c091:480::1:7de4) (Quit: Textual IRC Client: www.textualapp.com)
[02:52:38] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[02:53:03] *** Joins: Samian (~Sami@2620:10d:c091:480::1:7de4)
[02:53:23] <jinsun> rwbrambler: it is a bad idea to install globally like that, better to use a venv
[02:54:40] <jinsun> rwbrambler: installing to Program Files will need running command prompt as administrator probably
[02:54:46] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (Client Quit)
[02:56:21] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 250 seconds)
[02:56:28] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:56:32] *** Joins: Narrat (~omnius@p200300df5f2bccd306ea56fffe2e7cdc.dip0.t-ipconnect.de)
[02:56:37] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[02:57:28] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[03:02:18] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[03:02:43] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:03:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[03:03:57] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:05:20] *** Quits: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:05:33] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:08:03] <rwbrambler> Well, this is a one-use server not made for user space or any other environments and has a production twin... I uninstalled the packages that were in user space, then just reinstalled and now there all in global space...
[03:08:44] <rwbrambler> Yea I must have run some of these without the admin interface.  Thanks
[03:09:35] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[03:11:10] *** Joins: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net)
[03:11:19] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[03:11:37] *** Joins: mjsir911 (~bnc@user/mjsir911)
[03:14:10] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 240 seconds)
[03:14:36] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:14:59] *** Joins: dcaro (~dcaro@user/dcaro)
[03:15:49] *** Joins: thiras (~thiras@user/thiras)
[03:16:55] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:500a:11d:f00b:179b)
[03:18:01] *** Quits: melba (~melba@user/melba) (Ping timeout: 248 seconds)
[03:18:34] *** Joins: cutotopo (~cutotopo@151.95.85.46)
[03:19:10] *** Quits: doc|work (~doc@user/doc) (Ping timeout: 240 seconds)
[03:20:30] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[03:20:53] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[03:21:27] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[03:22:21] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:22:35] *** rmm2 is now known as rmm
[03:23:24] *** Quits: Narrat (~omnius@p200300df5f2bccd306ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:23:25] *** Joins: nomic (~nomic@185.217.117.169)
[03:24:47] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[03:27:48] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[03:27:58] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:28:19] *** Joins: c10l (~c10l@89.34.167.207)
[03:30:43] *** Quits: Samian (~Sami@2620:10d:c091:480::1:7de4) (Quit: Textual IRC Client: www.textualapp.com)
[03:30:53] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:31:46] *** Joins: Voxel (~Voxel@ip178-67-155-188.onego.ru)
[03:31:51] *** Parts: Voxel (~Voxel@ip178-67-155-188.onego.ru) ()
[03:34:03] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:34:57] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:35:44] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[03:35:44] *** Quits: ulif (~nick@user/ulif) (Remote host closed the connection)
[03:36:39] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[03:37:23] *** Joins: linguist (~brunildz@170.84.56.192)
[03:38:23] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8)
[03:40:45] *** Joins: ulif (~nick@user/ulif)
[03:40:54] *** Joins: nergar (~Nergar@177.225.152.16)
[03:41:18] *** ldm is now known as Luke
[03:43:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[03:43:09] *** Quits: Xano (~Xano@2a00:23c4:4200:a00:af3f:b031:9a3d:a6fe) (Ping timeout: 250 seconds)
[03:44:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:45:31] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[03:46:22] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:46:30] *** Joins: fikran (~fikran@user/fikran)
[03:46:32] *** Joins: martums (~martums@user/martums)
[03:46:42] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[03:47:41] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[03:48:20] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:48:46] <aphysically> how do black users feel about docstring line length
[03:48:55] <aphysically> I know stdlib rec the docstrings have shorter length
[03:49:10] <aphysically> right now I was formatting my docstrings to 80 and letting Black do the rest
[03:50:31] <aphysically> I guess I can limit it to 72
[03:50:39] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[03:51:40] *** Joins: martums (~martums@user/martums)
[03:52:10] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[03:53:13] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:54:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:54:32] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[03:55:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:55:15] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:57:55] <sybariten> hey hey
[03:58:17] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:58:19] <FunkyBob> morning, sybariten
[03:59:04] <sybariten> i asked about this last night, but didnt quite understand how i can solve it. Imagine i have a function that returns a dictionary, something like    student_score = {'Ritika': 5, 'Sam': 7, 'John': 10, 'Aadi': 8}   . Now, i want to print that dictionary but with a sentence to go before it. Can i somehow get it into an f string, without making use of this thing called prettyprint?
[03:59:50] <KirkMcDonald> sybariten: print(f"A sentence: {student_score}")
[03:59:52] <sybariten> imagine that the function is called studentScores() and it returns that dict , and i would like to print "the student scores are as follows: " {some nice loop/print of that dict}
[04:00:26] <sybariten> KirkMcDonald: okay but i would like to avoid having it all on one row, hence the question
[04:00:28] <KirkMcDonald> If you want to format it in some other way than str(student_score) will do it, then you'll have to do that seprately.
[04:00:45] <KirkMcDonald> separately*
[04:01:13] <KirkMcDonald> Why do you want to avoid pprint?
[04:01:13] <sybariten> aha aha. Maybe on a line before the print thing...
[04:01:31] <sybariten> KirkMcDonald: school exercise and i believe we are not supposed to make use of external modules here
[04:02:22] <KirkMcDonald> Then I would verify both which format the exercise expects output to use, and which things you are and are not allowed to import.
[04:02:49] <KirkMcDonald> If you can't import things and it expects the output in some nontrivial format, then that would seem like part of the exercise.
[04:09:00] <sybariten> Yeah i can agree it would seem like that
[04:10:08] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[04:13:15] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[04:13:21] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:13:34] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[04:14:16] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[04:15:11] *** Joins: c10l (~c10l@89.34.167.207)
[04:15:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:15:53] <sybariten> what is essentially the difference between doing these two?  https://bpa.st/G6MQ
[04:16:42] <Repiphany> % string formatting isn't very nice
[04:16:44] <KirkMcDonald> The latter will add a space before the colon.
[04:17:01] <KirkMcDonald> You could also just: print(f"{k}: {v}")
[04:17:14] *** Joins: Wulf (~Wulf@user/wulf)
[04:17:16] *** Quits: Elzington_ (~Elzington@68.235.43.14) (Ping timeout: 250 seconds)
[04:17:31] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[04:17:58] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[04:18:04] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[04:18:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 244 seconds)
[04:18:51] <sybariten> KirkMcDonald: alrite alrite, but one of them is using the list i get back from .items(), and the other is just using, the.... items?
[04:19:04] <sybariten> both iterables maybe?
[04:19:40] <Repiphany> If you're using the values, it's redundant to only iterate over the keys and the use the values via dict[key]
[04:19:44] <KirkMcDonald> Iterating over a dict gives you its keys.
[04:20:05] <KirkMcDonald> `for k in d:` and `for k in d.keys():` do essentially the same thing.
[04:20:21] *** Quits: devcpu (~rusty@108.162.160.184) (Quit: leaving)
[04:21:21] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:22:35] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[04:23:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:23:30] <sybariten> Repiphany: could you explain that again but rephrased please  :)
[04:24:58] <Repiphany> It's clearer and more explicit to do `for k, v in dict.items(): ...` than `for k in dict: ...dict[k]...`
[04:25:15] <sybariten> Repiphany: gotcha
[04:25:17] <sybariten> thanks guys
[04:25:21] <FunkyBob> KirkMcDonald: does "for k in d:" also use a view like .keys() yields?
[04:25:27] *** Joins: jess (~jess@libera/staff/jess)
[04:25:35] <KirkMcDonald> No, it will not construct a view.
[04:25:48] <FunkyBob> interesting
[04:26:04] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8)
[04:26:15] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- Connection Timed Out)
[04:26:44] <KirkMcDonald> But note that iter({}) and iter({}.keys()) will both construct the same type of iterator.
[04:27:12] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:27:15] <KirkMcDonald> Which suggests that `for k in d.keys():` will discard the view immediately.
[04:29:12] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[04:33:44] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 268 seconds)
[04:34:17] <sybariten> So ...  i'm obviously on the wrong track here somehow, cause the list comprehension thing in square brackets, will cause a print of none none none none  https://bpa.st/IETA    And also, i get the students scores printed _before_ the sentence i defined to come first. But am i on to something or do i need to rethink this
[04:35:02] <KirkMcDonald> sybariten: print() is a function which prints a value and returns None.
[04:36:17] <sybariten> aha
[04:36:27] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[04:37:20] <sybariten> so you mean the print i have inside the [] is causing the None for each dict item
[04:37:28] *** Joins: farmfrmjakestate (~farmfromj@user/farmfrmjakestate)
[04:37:44] <KirkMcDonald> Yes.
[04:38:25] <sybariten> basically i wouldnt want a "print" there, i would prefer to _return_ each value, cause i already have a print in the beginning of the f string clause ?
[04:38:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[04:38:48] <KirkMcDonald> That seems likely.
[04:38:59] <Repiphany> You could use something like `'\n'.join(f'{key}: {value}' for key, value in student_scores)` to get scores on new lines without having to print each one
[04:39:05] *** Joins: arinov (~arinov@213.194.126.155)
[04:39:07] *** Quits: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:39:12] *** Joins: pyfisch3 (~pyfisch@user/pyfisch)
[04:39:13] <Repiphany> student_scores.items()
[04:39:18] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Read error: Connection reset by peer)
[04:39:27] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 240 seconds)
[04:39:27] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 240 seconds)
[04:39:27] *** Quits: doko (~doko@2a02:8106:1a:7600:af01:3465:290:51db) (Ping timeout: 240 seconds)
[04:39:27] *** pyfisch3 is now known as pyfisch
[04:39:39] <KirkMcDonald> Or just use a for loop.
[04:40:27] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[04:40:28] <sybariten> yeah but... i'm only used to using return in function definitions. What would the for loop _do_ , actually ?  And isn't it a for loop that i already have there?
[04:40:43] *** Joins: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de)
[04:40:47] <KirkMcDonald> I mean a for statement, as opposed to a list comprehension.
[04:40:51] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[04:41:03] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[04:41:18] *** Joins: pycurious (~Adium@user/pycurious)
[04:41:19] <KirkMcDonald> for k, v in student_scores.items(): print(f"{k}: {v}
[04:41:21] <KirkMcDonald> ")
[04:41:22] <sybariten> okay...    but i cant cram that in to the {} of an f string can i?
[04:41:46] <KirkMcDonald> No. But then, that isn't how I'd want to solve it.
[04:41:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:42:03] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[04:42:42] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:42:50] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[04:43:01] *** Joins: c10l (~c10l@89.34.167.207)
[04:43:29] <sybariten> aha
[04:43:51] *** Joins: jamer05_ (~jamer05@user/jamer05)
[04:44:02] <jamer05_> Hi
[04:44:04] <sybariten> i just wanted it to be a bit compact, i guess
[04:44:13] *** Joins: psyca (~psyca@c-24-4-167-60.hsd1.ca.comcast.net)
[04:44:25] <jamer05_> Are you guys active here?
[04:45:33] <Repiphany> print("Scores\n" + '\n'.join(f'{k}: {v}' for k, v in scores))
[04:45:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:45:50] <Repiphany> keep dropping .items() for some reason
[04:45:52] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[04:46:13] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:46:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[04:46:49] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:47:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:48:43] *** Joins: y1n (~y1n@84-115-65-56.wifi.dynamic.surfer.at)
[04:48:47] <dale> Is there something like typing.Tuple[str, int, bool] but it doesn't have to be a tuple, just anything I can unpack?
[04:49:03] <sybariten> alrite, i did like this!   newLine="\n" ; print(f"your students are {newLine}{newLine.join(f'{key}: {value}' for key, value in student_score.items())}")
[04:49:31] <sybariten> jamer05_: i'm definitely active because i seem to not be learning much
[04:50:09] *** Quits: jaggz (~jaggz@user/jaggz) (Read error: Connection reset by peer)
[04:50:19] <sybariten> Repiphany: is my last suggestion overly complicated compared to your last one ?
[04:50:31] *** Quits: jamer05_ (~jamer05@user/jamer05) (Ping timeout: 252 seconds)
[04:53:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:02:10] *** Quits: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:06:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[05:07:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:07:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:08:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:09:02] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[05:10:31] <sybariten> So in a menu script i have, i first define a variable. Then there is a main function definition direclty aftger that. The main function only contains a while loop, to wait for the users different menu choices. In one of the choices i try to set this beforementioned variable to something else...  i then run into     UnboundLocalError: local variable 'myFile' referenced before assignment    . What
[05:10:32] <sybariten> exactlyu is it i'm not allowed to do here?
[05:11:08] *** Joins: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[05:12:30] *** Quits: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[05:12:40] <sybariten> essentially there is some clash with the scope of variable shere
[05:12:56] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[05:13:17] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 250 seconds)
[05:13:30] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[05:15:40] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[05:16:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[05:17:11] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[05:20:17] *** pan is now known as pankid
[05:20:25] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[05:21:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[05:23:25] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[05:24:11] <nedbat> sybariten: it's easier to help if you pastebin the code
[05:24:23] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:24:40] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[05:26:05] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:27:11] <mkbloke> sybariten: it sounds like you need to use 'global myFile' in main() if you are assigning to myFile inside main(), but defining myFile outside of main().
[05:28:39] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:259c:2413:d1f1:9fbc)
[05:29:07] *** Quits: y1n (~y1n@84-115-65-56.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[05:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:59] <grym> mkbloke: or pass it as an argument
[05:33:03] <grym> (which i'd prefer)
[05:33:25] <sybariten> mkbloke: yeah... i thought i tried that, but ran into an error. Let me try again and i'll paste the code. Gryms suggestion sounds interesting too
[05:34:26] *** Joins: vlm (~vlm@user/vlm)
[05:34:33] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 248 seconds)
[05:37:56] *** Joins: srhm (~srhm@user/srhm)
[05:38:25] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-c17a-6f80-b4b6-4b45.res6.spectrum.com) (Ping timeout: 250 seconds)
[05:39:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[05:39:44] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:39:59] <sybariten> So, it's basically this i'm trying to do  https://bpa.st/7WUA    everything else here works, using myFile as argument for external functions etc... but it's the thing under change that obviously doesnt work
[05:40:38] <sybariten> I tried doing global myFile  under the elif choice but that was not the right way i suppose
[05:41:32] <Repiphany> In line 20, you're assigning myFile locally to the main function but line 19 also refers to a local variable because of the assignment in line 20
[05:41:32] <KirkMcDonald> You'd want to put `global myFile` at the top of the function.
[05:41:59] <grym> (and then feel a little sad)
[05:42:23] *** Joins: y1n (~y1n@84-115-64-74.wifi.dynamic.surfer.at)
[05:42:24] <grym> sybariten: why do you declare myFile at the module level at all
[05:42:47] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:43:02] <grym> sybariten: e.g., what's wrong with https://bpa.st/CRIQ
[05:43:33] <sybariten> grym: uuuuhhhhhh
[05:44:01] <sybariten> you know, that's a _very_ good question
[05:44:37] <sybariten> i'd still be able to change the variable somehow using a function in an external module?   maybe usingf a return value ?
[05:44:37] <grym> sybariten: well, until you know better, scope closer not further away :)
[05:44:39] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[05:45:02] <grym> or perhaps i should say "until forced to do otherwise" instead of know better
[05:45:07] <sybariten> i don't know why the heck i put it outside of the def actually
[05:45:39] <sybariten> but pretending i needed to do that....  where exactly would the global that Kirk mentions, go ?
[05:46:03] <sybariten> between nine and ten?
[05:46:13] <grym> probably right before you try to assign to it
[05:46:45] <grym> in the vanishingly rare situations where i need to use `global` it's usually written the line before i reassign the name
[05:47:43] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[05:48:07] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:48:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[05:48:32] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[05:50:04] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:51:45] *** Joins: khrbt (~znc@user/khrbt)
[05:53:02] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5ca1:3400:38ea:c559:6156:d054)
[05:53:24] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[05:53:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:53:44] <sybariten> hm, interesting, i think that's the first time i hear the term vanishingly used like that, in english
[05:54:03] *** Joins: srhm (~srhm@user/srhm)
[05:55:45] *** Quits: sharperguy (~sharpergu@2001:16b8:5c0f:8400:6798:7974:85fd:8d84) (Ping timeout: 250 seconds)
[05:55:53] *** Joins: fikran (~fikran@user/fikran)
[05:56:50] <grym> i suspect if i `rg --type py "^\bglobal\b"` my code i'd get maybe two hits out of many many lines of code
[05:57:37] <grym> hah. one!  and it's in cpython's unittests
[05:58:14] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8)
[05:58:43] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[05:59:26] *** Joins: thiras (~thiras@user/thiras)
[05:59:36] *** Joins: srhm (~srhm@user/srhm)
[05:59:39] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:00:25] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[06:00:49] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:01:10] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:01:33] *** Quits: Vooch (~iovoo@096-038-011-034.biz.spectrum.com) (Read error: Connection reset by peer)
[06:01:38] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8) (Read error: Connection reset by peer)
[06:01:47] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 240 seconds)
[06:01:49] *** Quits: y1n (~y1n@84-115-64-74.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[06:05:17] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[06:05:38] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:05:49] *** Quits: nergar (~Nergar@177.225.152.16) (Read error: Connection reset by peer)
[06:07:37] *** Quits: emika (~emika@83.136.182.141) (Ping timeout: 248 seconds)
[06:08:04] *** Joins: emika (~emika@83.136.182.94)
[06:09:45] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:10:30] *** Joins: srhm (~srhm@user/srhm)
[06:11:08] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Quit: -a- Connection Timed Out)
[06:11:28] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[06:14:58] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:15:11] *** Joins: y1n (~y1n@84-115-64-237.wifi.dynamic.surfer.at)
[06:15:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-81dc-4f45-3881-6bd3.res6.spectrum.com)
[06:15:27] *** Joins: srhm (~srhm@user/srhm)
[06:17:30] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[06:18:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:19:42] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:20:12] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:20:27] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:20:27] *** brabrax_ is now known as brabrax
[06:20:46] *** Quits: ente_ (~ente@p200300dc5f14f500b681f952e085d8f4.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:20:49] *** Joins: srhm (~srhm@user/srhm)
[06:21:40] <Metalsutton> https://i.imgur.com/8TwDFmn.png
[06:22:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:22:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:22:50] *** Joins: ente_ (~ente@p200300dc5f0e7900bda5e81a81626884.dip0.t-ipconnect.de)
[06:25:39] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:26:19] *** Joins: srhm (~srhm@user/srhm)
[06:28:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:30:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[06:30:58] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:31:25] *** Joins: srhm (~srhm@user/srhm)
[06:32:07] *** Quits: y1n (~y1n@84-115-64-237.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[06:32:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:34:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:36:13] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:36:42] *** Joins: srhm (~srhm@user/srhm)
[06:37:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:38:33] *** Joins: betelgeuse2 (~betelgeus@94-225-47-8.access.telenet.be)
[06:38:40] *** Quits: xx (~xx@user/xx) (Quit: xx)
[06:38:48] *** Joins: jazzy2 (~jaziz@2600:380:874b:fa95:2c89:c0e7:973c:7ad)
[06:41:24] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:41:51] *** Joins: srhm (~srhm@user/srhm)
[06:42:13] *** Joins: Vooch (~iovoo@096-038-011-034.biz.spectrum.com)
[06:42:33] *** Quits: jazzy (~jaziz@2600:380:874b:fa95:c80:3993:216c:c86e) (Ping timeout: 250 seconds)
[06:44:14] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Quit: imp)
[06:44:30] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[06:44:30] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Remote host closed the connection)
[06:44:49] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[06:45:31] *** Joins: y1n (~y1n@84-115-64-154.wifi.dynamic.surfer.at)
[06:45:56] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (Remote host closed the connection)
[06:45:56] *** Quits: supbo (~kenan@li227-215.members.linode.com) (Quit: Lost terminal)
[06:45:57] *** Quits: Superstars111 (~jared@li227-215.members.linode.com) (Read error: Connection reset by peer)
[06:47:11] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:47:23] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[06:48:30] *** Quits: p-i- (~Ohmu@2403:6200:8870:9971:3e:e22e:c0c:8b2e) (Ping timeout: 250 seconds)
[06:48:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 250 seconds)
[06:48:39] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:49:01] *** Joins: voidcat (~voidcat@user/voidcat)
[06:50:45] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:50:45] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[06:50:59] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[06:52:03] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:53:06] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:57:05] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Remote host closed the connection)
[06:58:09] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Ping timeout: 250 seconds)
[07:03:21] *** Quits: CoderCop (~CoderCop@134.209.34.45) (Changing host)
[07:03:21] *** Joins: CoderCop (~CoderCop@user/codercop)
[07:04:32] *** Quits: y1n (~y1n@84-115-64-154.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[07:06:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[07:07:16] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:09:46] *** Joins: jaggz (~jaggz@user/jaggz)
[07:09:49] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:13:31] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[07:14:02] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:14:28] *** Joins: srhm (~srhm@user/srhm)
[07:14:54] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-81dc-4f45-3881-6bd3.res6.spectrum.com) (Quit: jarthur)
[07:15:40] *** Quits: Shikadi (~Shikadi@136-27-89-236.cab.webpass.net) (Ping timeout: 240 seconds)
[07:17:31] *** Joins: y1n (~y1n@84-115-65-128.wifi.dynamic.surfer.at)
[07:18:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:18:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[07:19:40] *** Quits: psyca (~psyca@c-24-4-167-60.hsd1.ca.comcast.net) (Quit: Client closed)
[07:19:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-81dc-4f45-3881-6bd3.res6.spectrum.com)
[07:20:47] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:21:50] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[07:22:07] *** Joins: nomic (~nomic@185.217.117.169)
[07:22:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:22:12] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:23:21] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 248 seconds)
[07:24:59] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:25:20] *** Joins: Elzington (~Elzington@68.235.43.38)
[07:25:25] *** Joins: srhm (~srhm@user/srhm)
[07:26:48] *** Joins: eyepeetee (~aa@user/eyepeetee)
[07:27:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:27:49] <eyepeetee> hi, if i receive as input params variables in the form of kwargs, is there a way i can store those all as class variables without having to explicitly type out each one?
[07:29:14] *** Joins: muhblockchain (~muhblockc@user/muhblockchain)
[07:29:28] <eyepeetee> input params to a class initialization**
[07:29:50] <muhblockchain> how to  pip3 install foo bar   (as non-root)  on computer without internet?  debian.  how to prepare needed files on another debian (with internet) and bring them over?
[07:29:51] <eyepeetee> but it doesn't matter - for functions as well i am wondering if it's possible
[07:30:52] <eyepeetee> muhblockchain: try this: https://izziswift.com/installing-python-packages-from-local-file-system-folder-to-virtualenv-with-pip/
[07:31:07] *** Quits: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com) (Ping timeout: 240 seconds)
[07:32:44] <eyepeetee> my question basically boils down to this... how can i avoid doing this so tediously: https://pastebin.com/zkVXe5XN ?
[07:35:36] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:37:35] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[07:37:46] *** Quits: CoderCop (~CoderCop@user/codercop) (Quit: WeeChat 3.0.1)
[07:38:46] *** Joins: CoderCop (~CoderCop@user/codercop)
[07:39:46] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[07:39:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:40:29] <Repiphany> eyepeetee: `for k, v in **kwargs.items(): setattr(self, k, v)`
[07:40:30] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[07:40:38] <Repiphany> oops, -**
[07:41:02] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[07:41:48] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[07:42:12] *** Joins: ezio (~ezio@user/ezio)
[07:42:33] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 248 seconds)
[07:42:47] *** Quits: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[07:43:05] <ezio> from secret import MSG
[07:43:06] <ezio> ImportError: cannot import name 'MSG' from 'secret'ImportError: cannot import name 'MSG' from 'secret'
[07:43:39] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[07:43:45] <ezio> I'm trying to run someone else's py script and I don't have much python knowledge, but I know just about every other language :)
[07:45:07] <ezio> I'm guessing there's some sub library it's trying to import that probably no longer exists?
[07:45:27] <ezio> or just a function
[07:45:48] <stealth_> ezio, `from .secret import MSG`
[07:45:54] <ezio> tried that
[07:46:08] <stealth_> ezio, you know there is a module `secret` in stdlib https://docs.python.org/3/library/secrets.html
[07:46:19] <ezio> ImportError: attempted relative import with no known parent package
[07:46:33] <stealth_> ezio, you need to create an empty `__init__.py` file
[07:46:57] <ezio> just touch __init__.py?
[07:47:20] <stealth_> ezio, did you name the file `secret.py` ?
[07:47:34] <ezio> no.  chall.pyh
[07:47:37] <ezio> -h
[07:48:24] <stealth_> ezio, then why call `from secret` ?
[07:48:51] <ezio> I don't know.  I can show you the script.  It's a htb challenge
[07:49:14] <stealth_> ezio, https://bpa.st/+python
[07:49:44] <ezio> https://bpa.st/V4GA
[07:51:23] <stealth_> ezio, the problem is `from .secret import MSG` it should either be `secret.py` file or a external package in which cause you would use `from secret import MSG`
[07:52:06] <ezio> I ran pip3 install secrets
[07:52:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[07:52:31] <ezio> maybe it wasn't updated in my shell environment?
[07:53:29] <ezio> ImportError: cannot import name 'MSG' from 'secret' (/usr/local/lib/python3.9/dist-packages/secret/__init__.py)
[07:53:53] <stealth_> ezio, with the "s" at the end?
[07:54:24] <ezio> Nope. Sorry.  just secret
[07:54:37] *** Joins: jab416171 (~jab416171@c-174-52-49-199.hsd1.ut.comcast.net)
[07:54:45] <stealth_> ezio, so you installed https://pypi.org/project/secret/#description
[07:55:22] <jaggz> why's my signal never get called?  I put this in a separate settings.py that I import into my main py https://paste.debian.net/hidden/6c557418/
[07:55:44] <ezio> stealth_, hmm probably not the right thing
[07:55:53] <jaggz> upon changing term size I'd have expected to get that "SIGGY POP" printed out, and then it exit, but neither happens
[07:56:01] <stealth_> ezio, yep :)
[07:58:29] <jaggz> oh, I have more py that sets sigwinch
[07:58:41] <jaggz> i guess it's one per process :}
[07:59:09] <jaggz> any cool way to chain functions?
[07:59:57] <stealth_> jaggz, you thinking LINK ?
[08:01:12] <stealth_> jaggz, don't think python has such things, unless whatever you are using already supports it.
[08:03:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:04:11] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:04:23] <jaggz> stealth_, not sure what link is
[08:04:27] *** Quits: y1n (~y1n@84-115-65-128.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[08:05:01] <stealth_> jaggz, https://man7.org/linux/man-pages/man2/link.2.html
[08:05:17] *** Joins: fikran (~fikran@user/fikran)
[08:05:31] <jaggz> stealth_, wut. what's linking files have to do with chaining functions?
[08:05:37] <stealth_> nm that's the wrong one
[08:05:52] <jaggz> no, I basically need to make some silly signal.signal() wrapper
[08:06:08] <jaggz> where it keeps a dict of signals requested to be caught by the program
[08:06:08] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[08:06:22] <jaggz> and in that dict it keeps lists .append()'ed to of signal handlers
[08:06:38] *** Joins: c10l (~c10l@89.34.167.207)
[08:06:58] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[08:07:32] <stealth_> jaggz, suppose you could just implement it.
[08:08:12] *** Joins: c10l (~c10l@89.34.167.207)
[08:08:16] *** Joins: srhm (~srhm@user/srhm)
[08:08:47] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[08:09:55] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[08:13:35] *** Quits: farmfrmjakestate (~farmfromj@user/farmfrmjakestate) (Quit: Textual IRC Client: www.textualapp.com)
[08:17:24] <jaggz> I guess I cain't. I guess I won't. That's how I know my life is out of love, foo!
[08:17:25] *** Joins: y1n (~y1n@84-115-65-210.wifi.dynamic.surfer.at)
[08:17:39] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[08:19:18] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[08:22:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:23:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[08:23:34] <stealth_> jaggz, not sure what you are trying to do, there might already be a solution/project out there that does what you want!
[08:23:44] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[08:25:15] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:28:27] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 240 seconds)
[08:30:54] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-81dc-4f45-3881-6bd3.res6.spectrum.com) (Quit: jarthur)
[08:31:10] <jaggz> that's what i was hoping for
[08:31:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[08:31:33] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:38a0:1320:dc1a:6a93)
[08:32:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:32:11] *** Joins: Atque (~Atque@user/atque)
[08:33:16] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[08:33:32] *** Quits: BillyZane2 (~BillyZane@185.216.74.25) (Remote host closed the connection)
[08:34:01] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[08:34:06] *** Joins: BillyZane2 (~BillyZane@185.216.74.25)
[08:34:34] *** Joins: srhm (~srhm@user/srhm)
[08:35:23] *** Joins: riz (~BillyZane@91.196.220.174)
[08:35:27] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:500a:11d:f00b:179b) (Quit: Leaving)
[08:35:28] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 268 seconds)
[08:35:38] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[08:35:44] *** Joins: Milos (~Milos@user/milos)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:01] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[08:36:07] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 240 seconds)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:09] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[08:38:27] *** Quits: BillyZane2 (~BillyZane@185.216.74.25) (Ping timeout: 240 seconds)
[08:38:57] *** Joins: HarryGuerrilla (~harryguer@2001:470:69fc:105::e24d)
[08:39:52] *** Quits: linguist (~brunildz@170.84.56.192) (Ping timeout: 252 seconds)
[08:42:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:43:38] *** Joins: binary01 (~binary01@192.110.171.216)
[08:44:09] *** Joins: nirix (uid48447@id-48447.tinside.irccloud.com)
[08:44:40] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:46:56] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:48:05] *** Joins: ByteHackr (~sanroy@43.252.250.83)
[08:50:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:52:09] *** Joins: mei (~mei@user/mei)
[08:52:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:53:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:53:27] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[08:53:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:53:30] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[08:54:07] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[08:56:55] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net) (Quit: zzzz)
[08:57:17] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[08:57:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:57:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:57:35] <aphysically> I guess things like this prefix dictionary are good candidates for an ALLCAPS global https://bpa.st/2XNQ
[08:58:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:59:27] <stealth_> aphysically, also you should re compile outside of function as those needs to be done once then you can call them over and over, this way you are not building compile on every call!
[08:59:41] *** Joins: cloudbender12 (~cloudbend@user/cloudbender)
[08:59:51] <stealth_> re might case it but still good to do those outside of functions
[09:01:47] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 240 seconds)
[09:01:59] *** Quits: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35) (Quit: System Rebooting..)
[09:02:55] *** Joins: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35)
[09:04:37] *** Quits: y1n (~y1n@84-115-65-210.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[09:05:26] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[09:05:56] *** Joins: srhm (~srhm@user/srhm)
[09:08:46] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Remote host closed the connection)
[09:11:25] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:11:54] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:15:37] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 252 seconds)
[09:16:26] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:16:38] *** Joins: y1n (~y1n@84-115-65-14.wifi.dynamic.surfer.at)
[09:16:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:18:46] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[09:19:32] *** Quits: binary01 (~binary01@192.110.171.216) (Quit: Leaving)
[09:19:41] <aphysically> re stores a cache that I assume it checks for compiles too
[09:19:59] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[09:20:42] <aphysically> it's mostly compiled only so it's on a separate line, but I guess I could compile outside too..I'll probably keep it in and move the prefixes out since there's at least one other ffmpeg translation function I could use them in
[09:20:57] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:21:01] *** Joins: binary01 (~binary01@192.110.171.216)
[09:21:56] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[09:23:01] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-81dc-4f45-3881-6bd3.res6.spectrum.com)
[09:23:02] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[09:23:19] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[09:23:28] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:23:47] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[09:24:27] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[09:25:03] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:26:38] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[09:26:38] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[09:26:38] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (*.net *.split)
[09:26:38] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (*.net *.split)
[09:26:38] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (*.net *.split)
[09:26:38] *** Quits: penguino (~mrpenguin@user/mrpenguin) (*.net *.split)
[09:26:38] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (*.net *.split)
[09:26:38] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[09:26:38] *** Quits: CombatVet (~c4@user/combatvet) (*.net *.split)
[09:26:38] *** Quits: hendursaga (~weechat@user/hendursaga) (*.net *.split)
[09:26:38] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:26:38] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (*.net *.split)
[09:26:38] *** Quits: ano (~weechat@user/ano) (*.net *.split)
[09:26:38] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (*.net *.split)
[09:26:38] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (*.net *.split)
[09:26:38] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[09:26:38] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (*.net *.split)
[09:26:38] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (*.net *.split)
[09:26:38] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[09:26:38] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (*.net *.split)
[09:27:10] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[09:27:45] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[09:28:29] *** Joins: Donno (~Donno@59-102-99-226.tpgi.com.au)
[09:29:31] *** Quits: sandb0y (pirate@user/sandb0y) (Quit: WeeChat 3.2)
[09:29:57] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[09:30:04] *** Quits: emerent (~quassel@p5b265d23.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[09:31:40] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[09:31:58] *** Joins: emerent (~quassel@p200300cd5701a187ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:33:13] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[09:34:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:34:26] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:34:33] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[09:34:34] *** Joins: CombatVet (~c4@user/combatvet)
[09:35:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:36:01] *** Joins: mickey (~user@user/mickey)
[09:36:46] *** Joins: spithash (~spithash@user/spithash)
[09:36:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:36:55] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:37:18] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[09:37:24] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:37:25] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[09:37:27] *** Joins: ano (~weechat@user/ano)
[09:37:32] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[09:37:33] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[09:37:35] *** Joins: hendursaga (~weechat@user/hendursaga)
[09:37:39] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:37:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:40:15] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:40:25] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 248 seconds)
[09:44:15] *** Joins: melba (~melba@user/melba)
[09:44:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:45:30] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- Connection Timed Out)
[09:45:52] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[09:46:24] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: Lost terminal)
[09:46:40] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 240 seconds)
[09:46:46] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[09:47:02] *** Quits: y1n (~y1n@84-115-65-14.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[09:48:02] *** Joins: djapo (~archangel@user/djapo)
[09:48:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:48:52] *** Joins: aphysically (~aphysical@user/aphysically)
[09:49:16] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[09:52:16] <stealth_> weird, python `socket.getsockname()` does not return anything for `AF_UNIX`?
[09:52:41] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[09:54:34] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:55:47] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[09:56:23] <stealth_> if anyone on linux feel like trying it out https://bpa.st/MBTQ
[09:58:21] *** Joins: desophos (~desophos@2601:249:1680:a570:dc82:b6a1:9d59:9d35)
[09:58:27] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[09:58:36] <Wulf> stealth_: why would the sockname be anything?
[09:58:52] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[09:59:36] <stealth_> wulf "Return the socket’s own address."
[09:59:47] <Wulf> stealth_: and why would it have an address?
[10:00:17] <stealth_> Wulf, so should it or not? why i am asking here
[10:00:20] <Wulf> "A stream socket that has not been bound to a pathname using bind(2) has no  name."
[10:00:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:02:02] <stealth_> Wulf, ok, so its returning NUL
[10:03:10] <Wulf> NUL? no
[10:03:56] <stealth_> NULL
[10:04:07] <Wulf> whatever. Still no.
[10:05:01] <Wulf> well, getsockname got a return value of 0, meaning "success".
[10:05:23] <stealth_> yes, so clearly its not an error. so NULL in this case or '' for python
[10:05:34] *** Joins: aphysically (~aphysical@user/aphysically)
[10:05:43] <Wulf> https://bpa.st/QHAQ
[10:05:47] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[10:06:35] <stealth_> Wulf, ya
[10:06:47] <Wulf> stealth_: getsockname sets the third argument to 2, which is the address family and nothing else. Means the pathname is empty. Pathnames in unix socket names are not null terminated.
[10:07:56] <stealth_> Wulf, you are still getting 108 \x00 that's what i mean with NULL
[10:09:04] <Wulf> stealth_: does the linux kernel really set those bytes to 0?
[10:10:13] <stealth_> Wulf, i dono, you set it in the `struct socket_un sun_path` so it could be cffi filling in the blanks
[10:11:28] <Wulf> stealth_: the kernel sets the length of the address structure. That's how the application knows the length of the pathname. Null padding is not required and must not be depended on.
[10:12:45] *** Joins: manti7 (~manti7@176.10.104.94)
[10:12:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:13:09] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 250 seconds)
[10:13:27] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[10:13:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[10:14:06] <stealth_> Wulf, https://man7.org/linux/man-pages/man7/unix.7.html `pathname:` it mentions +1 for null-terminated pathname
[10:14:45] *** Joins: fikran (~fikran@user/fikran)
[10:15:20] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[10:16:07] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[10:17:04] <stealth_> that manual sure is vague
[10:18:27] *** Joins: ubert (~Thunderbi@77.119.215.189.wireless.dyn.drei.com)
[10:19:33] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[10:19:47] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[10:21:35] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:21:57] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[10:22:09] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[10:22:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:24:19] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:24:28] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[10:24:50] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:25:28] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[10:26:53] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[10:27:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:28:13] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[10:29:03] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[10:30:24] <desophos> hi, i'm trying to restructure the data in a list of lists of lists. it's kind of hard to describe so i've created an example here: https://bpa.st/MCMQ i know numpy would help, but i'd rather not add that dependency just for this. i would appreciate any help or suggestions, thank you!
[10:31:08] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Quit: Leaving)
[10:32:32] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[10:33:07] *** Quits: emika (~emika@83.136.182.94) (Ping timeout: 240 seconds)
[10:34:09] *** Joins: emika (~emika@185.207.249.134)
[10:34:21] *** Quits: mh_le (~Mads@user/mh-le/x-4465771) (Remote host closed the connection)
[10:34:59] *** Joins: deathtop (~death@user/death916)
[10:35:42] *** Joins: habamax (~maksim.ki@user/habamax)
[10:36:07] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[10:37:02] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[10:39:28] *** Joins: upsala (~zcb@185.213.155.160)
[10:40:15] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:40:23] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[10:40:36] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[10:41:04] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[10:41:34] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:45:06] <ephemer0l> Hey, all. I'm trying to run a program and am getting 'UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe0 in position 0: unexpected end of data' Is there a env variable I can set so it runs? My locale is set as en_US.utf8
[10:46:19] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:52] *** Joins: seednode (~seednode@user/seednode)
[10:46:54] <stealth_> ephemer0l, whatever you are trying to decode might not be utf8? try `.decode('latin-')`
[10:47:43] *** Quits: hexology (~hexology@user/hexology) (Ping timeout: 258 seconds)
[10:47:47] <ephemer0l> stealth_ is that something I can set as a switch while running the program?
[10:47:49] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[10:47:56] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[10:48:36] <raek> ephemer0l: where are you reading the string from? a file? stdin? a socket?
[10:48:37] <stealth_> ephemer0l, i am not even sure what it is you are doing, normally utf8 is better
[10:48:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:49] *** Quits: deathtop (~death@user/death916) (Quit: WeeChat 3.2)
[10:49:55] <raek> ephemer0l: for file like objects you open yourself, you can usually add an "encoding" keyword argument to the open call. stdin/stdout/stderr are a bit different because they are already open when the program starts
[10:50:15] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[10:50:42] <ephemer0l> stealth_ that did it :-D it was .decode()
[10:51:37] <stealth_> ephemer0l, that is same as `.decode('utf8')`
[10:51:52] <ephemer0l> stealth_ but setting it to latin worked
[10:52:02] *** Quits: habamax (~maksim.ki@user/habamax) (Ping timeout: 250 seconds)
[10:52:18] <ephemer0l> This is 'chirp' I'm trying to work with https://github.com/mpoletiek/py3-CHIRP
[10:52:21] *** Abrax is now known as info
[10:52:34] *** info is now known as Abrax
[10:52:36] *** Abrax is now known as info
[10:52:58] *** Quits: info (~Abrax@user/abrax) (Quit: Leaving)
[10:53:13] *** Joins: Abrax (~Abrax@user/abrax)
[10:54:36] <stealth_> ephemer0l, use the default `.decode()` # utf8
[10:56:01] <stealth_> ephemer0l, its mentioned it many place https://github.com/mpoletiek/py3-CHIRP/blob/1e8bf921df8e6d92731717925f2c03bf4c05a3ac/chirp/elib_intl.py#L449 so would stick with that
[10:57:12] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Quit: Leaving)
[10:57:22] <jinsun> the default is actually annoying and maybe even dangerous, I thought it was utf8 for a long time, but on windows it is cp1252, so better to explicity say utf8 or whatever else you want
[10:58:21] *** Abrax is now known as Our69IsDue2The42
[10:58:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:58:35] <stealth_> jinsun, we talking about `.decode()` its utf8 in python3
[10:59:11] *** Our69IsDue2The42 is now known as Our69IsDueTo420
[10:59:48] *** Our69IsDueTo420 is now known as Abrax
[11:00:34] *** Joins: gusto (~Augustus@109.255.100.54)
[11:01:08] <jinsun> stealth_: ah yes, it is open() that is annoying
[11:02:33] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Quit: Peng timeout)
[11:02:42] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[11:03:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 248 seconds)
[11:04:12] <jinsun> desophos: maybe `[tuple(tuple(x[i] for x in item) for item in zip(xs, ys, zs)) for i in range(2)]`, and you can change the hardcoded 2 to len(xs[0]) to make it more general I guess
[11:04:20] *** Joins: KombuchaKip (~kip@192.252.230.5)
[11:06:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:07:16] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 252 seconds)
[11:07:19] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[11:08:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[11:08:42] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[11:08:50] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[11:08:56] <desophos> oh interesting, thank you jinsun!
[11:09:35] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: Leaving)
[11:09:56] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[11:10:45] *** Joins: rendar (~rendar@user/rendar)
[11:10:59] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:12:08] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[11:12:31] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[11:12:48] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:13:42] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 250 seconds)
[11:15:04] *** Joins: sharperguy__ (~sharpergu@89.244.123.53)
[11:15:39] <stealth_> desophos, how are you getting that data?
[11:16:59] <jinsun> desophos: but it is a triple for loop written in a single line, so don't expect much performance, with too much data it might be worth it to install numpy anyway
[11:17:07] <desophos> stealth_, it's in separate fields of a json file with each field looking like xs, ys, zs in my example
[11:17:15] *** Joins: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de)
[11:17:25] <desophos> oh yeah, this isn't performance critical
[11:17:43] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5ca1:3400:38ea:c559:6156:d054) (Ping timeout: 250 seconds)
[11:17:52] <stealth_> desophos, hmm i see, o, ok... i was going to say https://docs.python.org/3/library/stdtypes.html#memoryview.cast might be worth looking into
[11:19:10] *** Quits: cloudbender12 (~cloudbend@user/cloudbender) (Ping timeout: 240 seconds)
[11:20:09] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[11:20:40] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[11:22:29] *** Quits: jazzy2 (~jaziz@2600:380:874b:fa95:2c89:c0e7:973c:7ad) (Ping timeout: 250 seconds)
[11:23:54] *** Joins: palasso (~palasso@user/palasso)
[11:25:07] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:31:52] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[11:32:36] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[11:33:31] *** Quits: ubert (~Thunderbi@77.119.215.189.wireless.dyn.drei.com) (Remote host closed the connection)
[11:35:31] *** Joins: ubert (~Thunderbi@77.119.215.189.wireless.dyn.drei.com)
[11:36:14] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 250 seconds)
[11:37:04] *** Joins: kosh (~kosh@user/kosh)
[11:37:13] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 250 seconds)
[11:37:38] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:39:05] <desophos> actually, it's a quadruple nested loop lol, because i use a listcomp to get the (xs, ys, zs) from the file. is there a `zip.from_iterable` so i don't have to do zip(*(...))? just so it doesn't look so egregious
[11:39:21] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Read error: Connection reset by peer)
[11:41:23] <stealth_> desophos, there is https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable not sure if thats what you want
[11:41:45] <desophos> no, but that was where i got the .from_iterable idea
[11:42:12] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:42:13] <stealth_> desophos, there is also `zip_longest` there
[11:42:50] *** Joins: binary01 (~binary01@192.110.171.216)
[11:43:02] <desophos> yeah, that's just different zip behavior
[11:43:17] <desophos> i looked in itertools and builtins
[11:43:57] <desophos> i'll just write my own zip_from_iterable
[11:44:31] <stealth_> desophos, you could also extract it like https://bpa.st/ZF6A then reorder it however you want?
[11:45:08] *** Joins: brelod (~me@90.251.226.93)
[11:45:18] <stealth_> desophos, there is also `grouper` under Recipes you can use to group
[11:45:29] *** Joins: frost (~frost@59.71.240.119)
[11:46:07] *** davor_ is now known as davor
[11:46:53] *** Joins: eyepeetee (~aa@user/eyepeetee)
[11:46:57] <eyepeetee> Repiphany: thanks so much
[11:46:58] <eyepeetee> that helps me so much
[11:48:24] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:48:47] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:53:11] <desophos> yeah, zip_from_iterable is probably not in the stdlib because it's just one line :P def zip_from_iterable(iterables): return zip(*iterables)
[11:54:15] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:54:53] *** Joins: iflema (~ian@user/iflema)
[11:56:46] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[11:57:07] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 240 seconds)
[11:58:20] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[11:58:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:59:24] <stealth_> desophos, you should provide input/output you want and maybe someone will help you out
[11:59:42] <desophos> i did, and jinsun already helped
[12:00:04] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:00:04] <stealth_> desophos, then whats the problem?
[12:00:13] <desophos> no problem! have a good evening :)
[12:08:56] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:12:27] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 240 seconds)
[12:13:07] *** Joins: Axy (~Axy@user/axy)
[12:14:16] *** Joins: acidsys (~LSD@2.lsd.systems)
[12:15:06] <acidsys> hi I am very confident this documentation https://ipwhois.readthedocs.io/en/latest/README.html included an example on redis caching for ip whois lookups, however I fail to find it again. does someone possible remember about it and/or could point me in the right direction?
[12:15:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:17:40] *** Quits: betelgeuse2 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[12:17:41] *** Joins: wender (~Wender@189.37.67.196)
[12:18:31] <stealth_> acidsys, there is a search, have you tried looking up those keywords?
[12:19:03] *** Quits: ano (~weechat@user/ano) (Quit: ano)
[12:19:10] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[12:19:23] *** Joins: ano (~weechat@user/ano)
[12:20:00] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:20:30] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[12:20:47] <acidsys> stealth_: no shit
[12:20:59] *** Quits: computeiro (~Wender@189.37.69.26) (Ping timeout: 250 seconds)
[12:22:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[12:23:01] *** Quits: ano (~weechat@user/ano) (Client Quit)
[12:23:05] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 248 seconds)
[12:23:48] *** Quits: nirix (uid48447@id-48447.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:24:06] *** Joins: fikran (~fikran@user/fikran)
[12:25:24] *** Joins: ano (~weechat@user/ano)
[12:27:01] *** Quits: ano (~weechat@user/ano) (Client Quit)
[12:28:06] *** Joins: ano (~ano@user/ano)
[12:28:27] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[12:29:05] *** Joins: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de)
[12:30:34] *** Quits: ano (~ano@user/ano) (Client Quit)
[12:31:02] *** Joins: HaJo (~hajo@2a01:c23:8dd0:a00:821f:2ff:feef:dabf)
[12:31:03] *** Joins: betuxy (~ole@158.181.77.59)
[12:31:44] *** Quits: ubert (~Thunderbi@77.119.215.189.wireless.dyn.drei.com) (Quit: ubert)
[12:31:58] *** Joins: ubert (~Thunderbi@77.119.215.189.wireless.dyn.drei.com)
[12:33:19] *** Joins: sri19 (uid477846@id-477846.charlton.irccloud.com)
[12:33:31] <HaJo> Hi, i want to draw a box of variable width. print(f'|{line:^58}|') works well, but if i replace the static 58 with a variable, it fails. -> print(f'|{line:^minwidth}|')
[12:33:46] *** Joins: gamara (~Guest19@66-203-186-167.ded.execulink.com)
[12:33:57] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:33:57] <gamara> why is it so hard to import from a parent directory
[12:34:01] <HaJo> Do you see a possibility?
[12:35:22] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:53] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[12:36:37] <stealth_> HaJo, `val = 58; print(f'|{line:^{val}}|')`
[12:37:20] <HaJo> stealth_: Thank you, so easy...
[12:37:49] <HaJo> ...took me hours yesterday.
[12:37:51] <stealth_> gamara, you can use relative import `from ..parent import something` notice the two ".."
[12:37:59] <gamara> I tried
[12:38:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:38:58] <gamara> ImportError: attempted relative import with no known parent package
[12:39:01] <gamara> is what i get
[12:39:25] <stealth_> gamara, then parent needs to be package as well, so its missing `__init__.py` file
[12:39:37] <gamara> it isn't
[12:39:48] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:40:01] <gamara> all folders in the project contain that file
[12:40:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[12:40:40] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[12:40:43] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:40:53] <gamara> maybe i need to read up on __init__.py
[12:41:50] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[12:42:02] <gamara> or can I leave it blank
[12:42:09] <stealth_> gamara, depends how you are running it! `python3 -m package.module`
[12:42:16] <stealth_> gamara, `__init__.py` can be empty file
[12:42:32] <DnzAtWrk> how can I make a python program wait for close until I press a key, while allowing some events to run in the background
[12:42:36] <stealth_> it just denotes that its a package
[12:42:51] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[12:44:19] <stealth_> DnzAtWrk, depends how your event manager is
[12:44:32] <DnzAtWrk> I assume it's in the same thread
[12:44:37] <DnzAtWrk> I just register a new frame callback
[12:44:51] <gamara> this is my project setup https://imgur.com/hkZP0S6
[12:45:02] <gamara> fails on line 7
[12:45:09] <gamara> cant find file
[12:45:20] <gamara> all __init__.py is empty
[12:45:47] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: You have been idle for 30+ days)
[12:46:45] <stealth_> gamara, for test it should be `from lib.api_lib import something`
[12:46:57] *** Joins: ppang (~ppang@user/ppang)
[12:47:23] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:47:48] <stealth_> gamara, i don't really use unit test, normally with pytest, you don't need `test/__init__.py` file and it already includes your project folder
[12:47:54] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[12:48:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:48:51] *** Joins: doko (~doko@2a02:8106:1a:7600:6f3d:557c:584b:716d)
[12:49:05] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:49:07] <gamara> I changed it but still says ModuleNotFoundError: No module named 'rsu_server'
[12:49:30] <DnzAtWrk> do you prefer ' or "
[12:49:33] <DnzAtWrk> why or why not
[12:49:38] *** Quits: hays (~rootveget@fsf/member/hays) (Remote host closed the connection)
[12:49:40] <jinsun> gamara: remove the .. from those imports, just run your tests from the top level folder (pytest will find your tests even if you run from the top level folder), don't run file directly with python, use pytest
[12:49:40] *** Quits: anorthall (~anorthall@user/anorthall) (Quit: Goodbye!)
[12:50:00] <gamara> _0neyeah fine
[12:50:16] <gamara> oh use pytest ok let me try
[12:50:46] *** Joins: hays (rootvegeta@fsf/member/hays)
[12:51:12] <DnzAtWrk> uff
[12:51:18] <DnzAtWrk> should I do a time.sleep in a while loop
[12:51:25] <DnzAtWrk> and somehow check that a key is pressed in another way
[12:51:29] <DnzAtWrk> input seems to block execution
[12:51:33] <stealth_> DnzAtWrk, you got code?
[12:51:44] <DnzAtWrk> that's all there is to it
[12:51:48] <DnzAtWrk> input stops execution of callback
[12:51:50] <DnzAtWrk> time.sleep does not
[12:52:10] *** Parts: melba (~melba@user/melba) (Two pure functions walk into a bar. Nothing happens.)
[12:52:10] <DnzAtWrk> I want to allow the program to run until a key is pressed
[12:53:07] *** Joins: lastshell (~lastshell@user/lastshell)
[12:53:20] <stealth_> DnzAtWrk, on key press exit out of the loop? its hard to tell without looking at code or knowing what you are using
[12:53:30] <Kabouik> Although websites tend to find ways to limit it to reduce their bandwidth, web scraping is legal, right? Sorry I'm asking here because I think it's often done with python and BeautifulSoup
[12:53:38] <jinsun> DnzAtWrk: I prefer to just let black decide for me, which means "" is preferred, https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#strings
[12:53:42] <DnzAtWrk> there is no code
[12:53:54] <DnzAtWrk> as I said, input('press any key') prevents the event from being called
[12:54:00] <DnzAtWrk> time.sleep(10000000) does not
[12:54:07] <DnzAtWrk> the event itself doesn't matter
[12:54:11] <DnzAtWrk> it clearly runs on the main thread
[12:56:26] <DnzAtWrk> oh wait, I commented out the register event
[12:56:30] <DnzAtWrk> let's see
[12:56:44] <DnzAtWrk> yeah it works with input too
[12:56:45] <DnzAtWrk> nevermind
[12:56:52] <gamara> ok got it working thank you for the help
[12:57:08] *** Joins: ano (~ano@user/ano)
[12:58:25] <dreamer> hmz, since we moved our python packages to gitlab instead of our self-hosted pypi apparently pip now installs our temporary versions with `+<commit-hash>` as if they're "real" versions. and it just picks a random version
[12:58:56] <dreamer> so, what we do for development is to create packages with `<old-version>+<commit-hash>` that you can install for testing
[12:59:25] *** Joins: Atque (~Atque@user/atque)
[12:59:28] <dreamer> however if you now install a package with `==<old-version>` it will grab whatever random package it finds, including the extra appendage
[12:59:38] <dreamer> our old pypi did not behave this way. how to work around this?
[13:01:16] *** Joins: anorthall (~anorthall@user/anorthall)
[13:01:43] <stealth_> DnzAtWrk, https://bpa.st/XPVQ if you press enter it will break out or after 10 tries
[13:02:50] *** Joins: spinoza (~Zarathust@gateway/tor-sasl/spinoza)
[13:03:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:03:46] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:35d2:366b:fb03:59ee)
[13:04:30] <jinsun> dreamer: development releases should be x.y.z.devN+<commit-hash>, see https://www.python.org/dev/peps/pep-0440/#developmental-releases
[13:04:57] <dreamer> jinsun: hmm, this is new to me. thnx
[13:05:32] *** Quits: spinoza (~Zarathust@gateway/tor-sasl/spinoza) (Client Quit)
[13:06:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:06:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[13:06:17] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:06:20] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[13:06:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:07:01] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:07:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:09:31] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[13:09:41] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:09:53] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:10:13] <dreamer> the `N` isn't necessarily needed here I guess?
[13:10:28] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[13:11:07] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 240 seconds)
[13:12:12] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[13:12:23] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[13:12:27] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[13:13:06] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[13:13:11] <jinsun> N is supposed to be some +ve integer, not sure if you can skip that, just keep .dev0 if you can't decide the number
[13:14:32] *** Joins: xx (~xx@user/xx)
[13:14:41] *** Joins: dcaro (~dcaro@user/dcaro)
[13:15:25] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[13:17:31] *** Joins: lethu (~lethu@user/lethu)
[13:18:38] *** Quits: dre (~dre@2001:8003:c932:c301:f2dc:20c8:e2c8:6a40) (Quit: Leaving)
[13:19:09] *** Quits: W1seguy (W1seguy@d51a480b1.access.telenet.be) (Remote host closed the connection)
[13:21:32] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:21:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:21:40] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 240 seconds)
[13:22:58] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:23:16] *** Joins: dcaro (~dcaro@user/dcaro)
[13:23:28] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[13:25:49] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:27:12] *** Joins: y1n (~y1n@84-115-64-33.wifi.dynamic.surfer.at)
[13:27:33] *** Joins: Meteorhead (~Meteorhea@165.225.205.44)
[13:28:10] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[13:30:12] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[13:34:32] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 250 seconds)
[13:36:53] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:38:37] *** Joins: Vonter (~Vonter@user/vonter)
[13:39:05] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:40:57] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[13:41:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:44:30] *** Quits: regedit (~regedit@ool-457874e2.dyn.optonline.net) (Quit: Client closed)
[13:46:49] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 248 seconds)
[13:49:18] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[13:49:55] *** Joins: darksun (~darksun@user/darksun)
[13:49:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[13:52:14] *** Joins: gggp (~textual@60.10.194.43)
[13:52:53] *** Quits: gggp (~textual@60.10.194.43) (Client Quit)
[13:53:24] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:57:33] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[13:57:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:00:15] *** Joins: molquark (~molquark@120.231.15.58)
[14:00:27] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[14:00:54] *** Joins: desophos_ (~desophos@c-24-14-63-128.hsd1.il.comcast.net)
[14:01:05] *** Quits: desophos (~desophos@2601:249:1680:a570:dc82:b6a1:9d59:9d35) (Ping timeout: 250 seconds)
[14:02:10] *** Joins: jazzy (~jaziz@2600:380:842b:9c51:c88b:6426:3ff5:7404)
[14:02:12] *** Parts: molquark (~molquark@120.231.15.58) (WeeChat 2.7.1)
[14:02:45] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:03:51] *** Joins: stig124 (~stig124@70.98.147.77.rev.sfr.net)
[14:04:52] *** Quits: stig124 (~stig124@70.98.147.77.rev.sfr.net) (Client Quit)
[14:08:55] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:10:54] *** Joins: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl)
[14:11:03] *** Quits: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl) (Client Quit)
[14:11:53] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 248 seconds)
[14:12:07] *** Joins: rsx (~dummy@ppp-188-174-156-255.dynamic.mnet-online.de)
[14:13:39] *** Quits: y1n (~y1n@84-115-64-33.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[14:15:31] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:16:28] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[14:17:52] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:18:20] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:25:42] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[14:26:46] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[14:27:35] *** Joins: y1n (~y1n@84-115-64-33.wifi.dynamic.surfer.at)
[14:30:06] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[14:31:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:31:27] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[14:33:02] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[14:33:20] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:33:28] *** Joins: fikran (~fikran@user/fikran)
[14:33:54] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[14:35:10] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:35:12] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Max SendQ exceeded)
[14:35:39] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:35:41] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Max SendQ exceeded)
[14:36:09] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:36:11] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Max SendQ exceeded)
[14:36:27] *** Joins: ice9 (~ice9@user/ice9)
[14:36:38] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:36:47] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 240 seconds)
[14:37:29] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 248 seconds)
[14:39:01] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:40:23] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[14:44:40] *** Quits: gravy (~gravy@61-68-224-80.tpgi.com.au) (Quit: Leaving)
[14:45:57] *** Quits: ByteHackr (~sanroy@43.252.250.83) (Remote host closed the connection)
[14:47:10] *** Quits: flyback (~flyback@2601:540:8201:1e60:811e:c168:2877:ba60) (Ping timeout: 240 seconds)
[14:48:38] *** Joins: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com)
[14:48:45] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 250 seconds)
[14:50:55] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[14:51:34] <CapnKernel> Hi.  (disclaimer: I don't know much about pip and packages).
[14:51:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[14:51:43] <CapnKernel> I'm using coverage 5.5 and finding a problem that's been fixed in 6.0b1.  https://github.com/nedbat/coveragepy/issues/1150
[14:51:57] <CapnKernel> But when I run pip install coverage, I get coverage 5.5.  Is there an easy way to install coverage 6.0b1 in my venv?
[14:52:07] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[14:52:15] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[14:52:25] <nedbat> CapnKernel: pip install coverage==6.0b1
[14:52:30] <nedbat> or:  pip install --pre coverage
[14:52:32] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[14:52:36] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Max SendQ exceeded)
[14:53:04] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[14:53:17] <CapnKernel> nedbat: Thank you so much!
[14:53:47] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:54:27] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[14:54:54] *** Joins: mrwick (~mrwick@user/mrwick)
[14:56:15] <CapnKernel> nedbat: We were talking about where stdout goes, and you said " i have similar questions, though with passenger instead of nginx".  Do you still have questions?
[14:56:34] *** Joins: white_shadow (~brey@117.222.236.56)
[14:57:10] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 240 seconds)
[14:57:26] <nedbat> CapnKernel: this is one of those things that bothers me when my site is failing, and then I forget about it when it's not. :)
[14:57:41] <nedbat> CapnKernel: "why don't you fix that hole in the roof?" "I can't, it's raining out"
[14:59:06] *** Joins: larkfisherman (~pasko@217.75.204.126)
[14:59:24] <CapnKernel> nedbat: This is for you.  https://www.youtube.com/watch?v=AbSehcT19u0
[14:59:24] <DnzAtWrk> is it possible to paste functions with blank lines into the python terminal and not have it break?
[14:59:40] *** Quits: emika (~emika@185.207.249.134) (Ping timeout: 240 seconds)
[14:59:42] *** Joins: flyback (~flyback@2601:540:8201:1e60:149e:edea:ab35:5e06)
[15:00:00] *** Joins: emika (~emika@83.136.182.163)
[15:01:02] <jinsun> use ipython
[15:01:49] <larkfisherman> Anyone familiar with pyav here? I need to convert h264 videostream into JPEG frames (as fast as possible) and I can't figure out how to actually convert av.VideoFrame (yuvj420p) to jpeg...
[15:02:07] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[15:02:09] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[15:03:30] <lxer> you can probably find it in the ffmpeg docs
[15:05:02] <CapnKernel> nedbat: May I ask you a coverage question? (Ie, is the right forum, and are you willing?)
[15:05:04] <nedbat> CapnKernel: believe me, i know: https://twitter.com/nedbat/status/1415275058747121670
[15:05:07] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[15:05:08] <nedbat> CapnKernel: sure
[15:05:52] <Kingsy> curious, if I want to pass a callback function into another function, can I declare the callback programatically in some temp way? I don't really want to define it as a def in the class. it'll never be used anywhere else.
[15:06:12] *** Quits: desophos_ (~desophos@c-24-14-63-128.hsd1.il.comcast.net) (Quit: Leaving)
[15:06:15] <deniska> Kingsy: you can use lambda syntax
[15:06:50] <nedbat> Kingsy: or use a def within your larger function
[15:07:07] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[15:07:26] <Kingsy> deniska: what was lamda syntax looks like? Any examples of it being used with a callback?
[15:08:00] <lambda> sorted(list_of_tuples, key=lambda x: x[0])
[15:08:12] *** Joins: p-i- (~Ohmu@2403:6200:8870:1489:c41:4abe:809e:d85)
[15:08:25] <CapnKernel> nedbat: My silence is because I'm getting all my ducktypings lined up
[15:08:37] <Kingsy> perhaps I cant do that. the fuinction I want to pass as the callback has 5 lines with some condictional logic etc.
[15:09:04] <p-i-> CapnKernel: It's good to get your ducktypings in a row
[15:09:33] <lambda> Kingsy: lambda bodies are only a single expression, so you can't have multiple statements. what you can do is have a regular function (def) that creates a function object and returns it
[15:09:48] <CapnKernel> When I turn on django_coverage_plugin, coverage also gives me coverage on the htmlcov dir (as well as of my .py files and template .html files)
[15:10:04] <CapnKernel> nedbat: ^
[15:10:25] <lambda> Kingsy: aka `sorted(some_iterable, key=create_keyfunc(options, that, influence, the, func))`
[15:10:46] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[15:11:17] *** Quits: white_shadow (~brey@117.222.236.56) (Ping timeout: 250 seconds)
[15:11:19] *** Joins: cheater (~Username@user/cheater)
[15:11:26] <nedbat> CapnKernel: i hadn't heard of the htmlcov directory being included.  you could try adding omit=htmlcov to your .coveragerc.
[15:11:29] *** Quits: lericson (~toxik@user/lericson) (Remote host closed the connection)
[15:11:52] *** Joins: white_shadow (~brey@117.222.236.56)
[15:13:06] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[15:13:27] *** Quits: y1n (~y1n@84-115-64-33.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[15:16:45] <nedbat> Kingsy: you can put a def within another def
[15:18:26] <CapnKernel> nedbat: Perhaps I haven't nailed the syntax, but htmlcov is still being included.  And in successive runs, the rabbit hole gets deeper and deeper.  Currently nested three levels deep.  https://imgur.com/t4DJX9V
[15:18:52] *** Joins: white_snack (~white_sha@117.222.236.56)
[15:19:49] <nedbat> CapnKernel: can you link to your repo with the latest changes?
[15:20:56] *** Quits: white_shadow (~brey@117.222.236.56) (Changing host)
[15:20:56] *** Joins: white_shadow (~brey@user/white-shadow/x-1132694)
[15:20:56] *** Quits: white_snack (~white_sha@117.222.236.56) (Changing host)
[15:20:56] *** Joins: white_snack (~white_sha@user/white-shadow/x-1132694)
[15:21:26] *** Quits: white_shadow (~brey@user/white-shadow/x-1132694) (Quit: Leaving)
[15:21:26] *** Quits: white_snack (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[15:21:34] <CapnKernel> I'm running coverage thus: coverage run --source . -a ./manage.py test --keepdb -v 3
[15:21:46] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[15:22:12] <CapnKernel> Might --source . be overriding omit = "htmlcov" in my .coveragerc?
[15:23:09] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[15:25:54] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[15:25:56] *** Quits: jasper_ (~user@styria.daemonized.org) (Quit: jasper_)
[15:26:10] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 240 seconds)
[15:26:11] <CapnKernel> nedbat: My code isn't in a public repo.
[15:26:34] <nedbat> CapnKernel: i have to be afk for a few hours.  adding debug=trace might provide some clues
[15:26:37] <p-i-> What's a super-fast way to get a string from a C++ or Python process to another Python process on the same box?
[15:26:51] *** Joins: RougeR (~rougex250@user/rouger)
[15:26:58] *** Quits: RougeR (~rougex250@user/rouger) (Client Quit)
[15:27:00] <CapnKernel> p-i-: unix domain socket?
[15:27:15] <p-i-> macos/linux
[15:27:26] <p-i-> Just use a local websocket?
[15:27:32] *** Joins: y1n (~y1n@84-115-65-22.wifi.dynamic.surfer.at)
[15:27:38] <p-i-> I don't know how websockets work internally... do they poll?
[15:27:51] *** Joins: plastico (~plastico@neomutt/plastico)
[15:28:55] <CapnKernel> p-i-: unix domain sockets are faster than TCP sockets.  https://pymotw.com/2/socket/uds.html
[15:29:12] *** Joins: jasper_ (~user@styria.daemonized.org)
[15:29:21] <p-i-> CapnKernel: Wonderful@
[15:29:22] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 250 seconds)
[15:29:27] <hodapp> about the only benefit of a local websocket is that it will work exactly the same when it needs to be non-local and pass through HTTP
[15:29:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[15:31:04] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:31:12] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[15:31:22] <p-i-> So a UNIX socket stores itself as a node on the filesystem. So I don't have to worry about port conflicts...
[15:31:26] *** Joins: mickey (~user@user/mickey)
[15:32:21] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[15:32:47] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:32:49] <p-i-> .revc(N) seems to require knowing the number of bytes that are being sent.
[15:32:54] <p-i-> Is there a way around this?
[15:32:58] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:33:48] <grawity> p-i-: for a stream-based socket, keep calling recv(bufsize) until it finally returns an empty buffer
[15:34:18] <p-i-> grawity: ok, so if I ensure my packetsize is < 1024 I can just use 1024.
[15:34:25] <grawity> stream sockets do not have a packet size
[15:34:44] <deniska> p-i-: calling recv(1024) can give you up to 1024 bytes
[15:34:56] <grawity> the sender can write 4096, you receive 4 x 1024
[15:35:11] <deniska> p-i-: .send() on one side doesn't correspond to .recv() on another side in a general case
[15:35:29] <p-i-> This is gona be much more lightweight way of leveraging multiple CPU cores than thrashing with multiprocessing
[15:36:33] *** Joins: m4r35n357 (~m4r35n357@host-92-13-130-45.as13285.net)
[15:39:44] *** Joins: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr)
[15:39:47] *** Quits: larkfisherman (~pasko@217.75.204.126) (Quit: Konversation terminated!)
[15:40:07] *** Quits: y1n (~y1n@84-115-65-22.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[15:44:13] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[15:45:54] *** Joins: zaquest (~notzaques@5.128.210.178)
[15:46:05] *** Joins: Dotz0cat_ (~Dotz0cat@h53.242.19.98.static.ip.windstream.net)
[15:46:16] *** Quits: Dotz0cat (~Dotz0cat@h171.71.29.71.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[15:46:51] *** Dotz0cat_ is now known as Dotz0cat
[15:47:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:48:08] *** Joins: Appli001 (~Thunderbi@176-161-23-89.abo.bbox.fr)
[15:48:40] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.1 Beta Build (2021/08/25 UTC) 64 Bit)
[15:48:58] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:48:59] *** Quits: Appli001 (~Thunderbi@176-161-23-89.abo.bbox.fr) (Client Quit)
[15:49:40] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[15:52:01] *** Quits: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr) (Ping timeout: 250 seconds)
[15:52:11] <p-i-> So for the socket host, I can do: sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM); sock.bind("/tmp/socket_test.s")
[15:52:15] <p-i-> But how to attach to this socket?
[15:53:47] *** Joins: y1n (~y1n@84-115-64-115.wifi.dynamic.surfer.at)
[15:54:27] <grawity> sock.connect() as usual
[15:54:35] <p-i-> gottit
[15:55:11] <CapnKernel> nedbat: This is for later...
[15:55:24] <CapnKernel> The omit seems to match htmlcov ok (see line 12): https://dpaste.org/xLnj
[15:55:45] <p-i-> 0.5ms ... not bad
[15:55:47] <CapnKernel> I deleted a few thousand lines from that
[15:56:42] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:57:01] <grawity> if you need something even faster (and of course more complex), I guess shared memory ringbuffer is the next step
[15:57:22] *** Joins: besnn (~besnn@user/besnn)
[15:58:02] <CapnKernel> nedbat: But in the listing before I deleted the lines, the only mention of htmlcov is on line 12, and all the mentions of \.html in the listing were of my .html template files (ie, there's never a line that says "now I'm going to go off and snarf up the htmlcov dir)
[15:58:12] *** Joins: white_snack (~white_sha@user/white-shadow/x-1132694)
[15:58:25] <CapnKernel> p-i-: Rude question: How fast do you need fast to be?
[15:58:54] <Kingsy> can someone think of a more concise way of writing this logic -> https://bpa.st/GDEA <- I am basically just looking to make relative links absolute. parsed_widget is beautifulsoup
[15:59:03] <p-i-> CapnKernel: Bottleneck is elsewhere, so ~1ms is fine
[16:00:02] <CapnKernel> UDS will work for you just fine.  There are examples in the web page I linked to.
[16:00:05] <Kingsy> I think my logic should catch href="/...." and href="...."
[16:00:09] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 248 seconds)
[16:01:12] <CapnKernel> p-i-: If the sender is a child of the receiver, or receiver is a child of the sender, then you can also use socketpair()
[16:01:33] *** Quits: portalrat (~portalrat@user/portalrat) (Read error: Connection reset by peer)
[16:01:42] *** Joins: portalrat (~portalrat@user/portalrat)
[16:02:45] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Quit: imp)
[16:05:13] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:05:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:07:43] <marduk> Kingsy: the a.get('href')/a['href'] being called multiple times, you can likely assign it to a variable inside your loop so you only need to call it once (per iteration).
[16:09:16] *** Joins: legola (~legola@46.235.100.27)
[16:10:52] <marduk> Kingsy: personally i'd  use something like yarl for the url munging. https://github.com/aio-libs/yarl/
[16:11:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:14:28] <Kingsy> marduk: hmm couild you show an example?
[16:14:36] *** Joins: Samian (~Sami@2620:10d:c091:480::1:7de4)
[16:14:50] <rud0lf> am i right thinking that (all integers) A / B * C is better to write as A * C / B ?
[16:15:04] <rud0lf> or will you get accurate result as first example too?
[16:15:35] <rud0lf> i mean mostly B = 100 and C = 15  for 15% for example
[16:15:58] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Quit: rwbrambler)
[16:19:22] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[16:20:29] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[16:20:43] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:20:47] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[16:21:52] *** Quits: white_snack (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[16:24:03] *** Quits: dcaro (~dcaro@user/dcaro) (Remote host closed the connection)
[16:24:22] *** Joins: dcaro (~dcaro@user/dcaro)
[16:24:39] <marduk> Kingsy: untested: https://bpa.st/2FGQ
[16:25:00] <marduk> actually there are some indentation errors
[16:27:02] <nubonix> hi there, looking for some asyncio help. So ive got lets say 2 servers, and i want to check if they are online. For each server that is online, i need to execute a list of async coros, however, im not really sure how to do so. Here is what i've got at the moment https://bpa.st/TISA   https://bpa.st/TISA#1L164 is where the main function starts
[16:29:08] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[16:29:41] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:31:23] *** m4td3v is now known as matdev
[16:33:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:25] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (Quit: leaving)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:43] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[16:38:48] *** Joins: cth (~Cthulchu@193.194.107.250)
[16:41:18] *** Quits: y1n (~y1n@84-115-64-115.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[16:41:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[16:41:47] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[16:42:29] *** Joins: _Mocramis (~mocramis@dalaran.sceen.net)
[16:43:43] *** Joins: fikran (~fikran@user/fikran)
[16:43:48] <_Mocramis> In xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace.
[16:44:21] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:45:45] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 250 seconds)
[16:47:11] *** Quits: cutotopo (~cutotopo@151.95.85.46) (Quit: cutotopo)
[16:47:37] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 248 seconds)
[16:47:40] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[16:48:27] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:48:37] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[16:50:07] *** Joins: cutotopo (~cutotopo@151.95.85.46)
[16:50:39] *** Quits: cutotopo (~cutotopo@151.95.85.46) (Remote host closed the connection)
[16:54:01] *** Joins: y1n (~y1n@84-115-65-96.wifi.dynamic.surfer.at)
[16:54:59] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:55:01] *** Joins: ambv_ (~ambv@c138-224.icpnet.pl)
[16:55:16] *** Joins: kenoba (~kenoba@user/kenoba)
[16:56:05] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[16:56:28] *** Joins: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp)
[16:56:30] *** Quits: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp) (Max SendQ exceeded)
[16:56:35] *** Joins: kenoba (~kenoba@user/kenoba)
[16:56:46] *** Joins: cth (~Cthulchu@193.194.107.250)
[16:56:57] *** Joins: ogis_ (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[16:57:00] *** Quits: ogis_ (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Max SendQ exceeded)
[16:57:04] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[16:57:27] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[16:57:32] *** Joins: kenoba (~kenoba@user/kenoba)
[16:57:34] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Max SendQ exceeded)
[16:58:06] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[16:58:07] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Max SendQ exceeded)
[16:58:10] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:58:19] *** Quits: drew (~drew@user/drew) (Ping timeout: 250 seconds)
[16:58:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:58:35] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[16:58:43] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 252 seconds)
[16:59:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:59:02] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[16:59:49] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[17:01:11] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:02:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:03:09] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:03:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[17:04:10] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[17:05:04] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[17:05:29] *** Joins: diamondbond (~diamondbo@175.157.119.87)
[17:07:50] *** Joins: ogis (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp)
[17:08:08] *** Quits: ogis (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[17:08:34] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[17:08:52] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[17:10:17] *** Joins: besnn (~besnn@user/besnn)
[17:10:22] *** Quits: kenoba (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[17:11:10] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 240 seconds)
[17:11:11] *** Joins: Shikadi (~Shikadi@136.27.89.236)
[17:11:29] *** Joins: burakcank (~burakcank@server-176.53.15.201.as42926.net)
[17:12:20] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[17:12:22] *** Joins: kenoba (~kenoba@user/kenoba)
[17:12:26] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:13:39] <p-i-> rud0lf: I always prefer a * b / c for readability
[17:13:49] *** Joins: mdk (~mdk@python/psf/mdk)
[17:14:15] <burakcank> hi guys, I have been trying to reach to an API. curl is working as follows -> curl -k -d '{"userName":"username", "password": "password"}' -H "Content-Type: application/json" https:<myurl>
[17:14:18] <p-i-> Minimizes leaning on precedence knowledge
[17:14:29] <burakcank> but whatever I do, requests module can't reach to the same endpoint
[17:14:46] <burakcank> it gives me proxy error
[17:15:02] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:15:04] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[17:15:53] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 248 seconds)
[17:16:01] <burakcank> can someone tell me what might be the problem here ? I literally tried everything I can find, requests.post('url', params=params, proxies=proxies, headers=headers, verify=False)
[17:16:43] *** Quits: mdk (~mdk@python/psf/mdk) (Client Quit)
[17:17:02] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Read error: Connection reset by peer)
[17:17:04] *** Joins: mdk (~mdk@python/psf/mdk)
[17:19:46] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:20:03] <p-i-> burakcank: Have you tested with a test URL to check _that_ goes through?
[17:20:24] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[17:20:32] <p-i-> And are you sure it's a POST?
[17:21:17] <burakcank> The current position I am in right now -> https://www.codepile.net/pile/986nMN8j
[17:21:33] *** Joins: thiras (~thiras@user/thiras)
[17:21:56] <burakcank> p-i-: yeah I am sure, I even tried with postman, at first it didn't work too, then I needed to enable proxy authentication and gave it my username and password.
[17:22:03] <burakcank> Then it worked
[17:22:53] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:24:41] *** Quits: mdk (~mdk@python/psf/mdk) (Quit: WeeChat 3.2)
[17:25:02] *** Joins: mdk (~mdk@python/psf/mdk)
[17:25:03] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[17:25:16] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[17:25:18] *** Quits: mdk (~mdk@python/psf/mdk) (Client Quit)
[17:25:35] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed)
[17:25:39] *** Joins: mdk (~mdk@python/psf/mdk)
[17:30:13] *** Quits: kenoba (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[17:30:49] <burakcank> How does curl follow proxy automatically and requests seems like failing ?
[17:30:50] *** Joins: kenoba (~kenoba@user/kenoba)
[17:32:24] *** Joins: moldorcoder7 (~moldorcod@77.47.48.24)
[17:34:54] *** Joins: linguist (~brunodOut@170.84.56.192)
[17:36:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[17:36:51] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:37:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:38:10] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Ping timeout: 240 seconds)
[17:38:19] *** Quits: betuxy (~ole@158.181.77.59) (Ping timeout: 252 seconds)
[17:39:07] *** Joins: heco (~redrum@user/redrum88)
[17:39:31] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[17:41:07] *** Quits: y1n (~y1n@84-115-65-96.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[17:41:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[17:41:58] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:43:39] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:43:52] *** Joins: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp)
[17:43:57] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Read error: Connection reset by peer)
[17:44:12] *** Quits: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[17:44:38] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[17:44:43] *** Joins: binary01 (~binary01@192.110.171.216)
[17:47:07] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[17:47:41] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[17:48:31] *** Joins: dcaro_ (~dcaro@user/dcaro)
[17:48:35] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 250 seconds)
[17:49:17] *** dcaro_ is now known as dcaro
[17:50:23] *** Joins: zenloading (~zenloadin@user/zenloading)
[17:50:34] <p-i-> burakcank: I had some trouble with proxies. What does your proxies look like?
[17:50:53] <burakcank> proxy.company.com:8080
[17:50:59] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[17:51:03] <p-i-> It's a dict, right? {'https://', 'http://1.2.3.4:567}
[17:51:09] <p-i-> yeah but the thing you pass into requests
[17:51:27] <burakcank> yeah you can see from the code snippet above
[17:51:33] <p-i-> Solution for me was to make the value http not https
[17:51:38] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:51:49] <burakcank> both are included in the dict
[17:52:29] <deniska> p-i-: with a , instead of : it's a set
[17:53:08] <p-i-> you have @proxy, I take it you replace that with the ip
[17:53:11] *** Joins: y1n (~y1n@84-115-65-96.wifi.dynamic.surfer.at)
[17:54:10] <burakcank> I am using the address under windows proxy settings, which points to "http://proxy.company.com:8080"
[17:54:42] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[17:54:56] <p-i-> And you can get the request working thru the proxy to a test URL?
[17:54:57] <burakcank> not directly the IP address
[17:54:58] *** Quits: diamondbond (~diamondbo@175.157.119.87) (Quit: Leaving)
[17:55:01] *** Joins: michaelis (~michaelis@193.183.209.17)
[17:55:13] <p-i-> like https://httpbin.org/ip
[17:55:19] *** Parts: michaelis (~michaelis@193.183.209.17) ()
[17:55:49] <p-i-> First check I'd do is to verify if it's the proxy part that's at fault
[17:56:13] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:56:38] <p-i-> Your target URL might have blocked your proxy provider's IP range... you haven't included a response JSON in your paste
[17:56:43] <burakcank> p-i-: I think it also fails the the https://httpbin.org/ip too.
[17:57:13] <p-i-> Well I've DEF. got proxies working on that IP
[17:57:30] <burakcank> so that comes down to not being able to use requests.get with my proxy
[17:57:51] <p-i-> Does it work without the proxy?
[17:58:09] <p-i-> Divide & conquer...
[17:58:16] *** Joins: rapha (~jrs@user/rapha)
[17:58:23] <rapha> hi all
[17:58:27] *** Quits: Dotz0cat (~Dotz0cat@h53.242.19.98.static.ip.windstream.net) (Ping timeout: 240 seconds)
[17:58:55] <burakcank> How should I try that ? I have always been behind proxy due to company network.
[17:59:21] <p-i-> Can you spin up a remote linux box
[17:59:37] <p-i-> Maybe your company's firewall is blocking it
[17:59:44] *** Quits: TML (~tml@user/tml) (Ping timeout: 258 seconds)
[17:59:54] <burakcank> but I can reach it via curl ?
[18:00:02] <p-i-> hmm yeah good point
[18:00:37] <p-i-> Can you use your mobile internet to check without proxy?
[18:01:11] <burakcank> Probably not, my phone is not connected to network
[18:01:16] <rapha> i have a python script that reads a serial port and does some filtering. and now i'd like to know how many lines per second am i getting. how do you do something like that?
[18:02:40] *** Quits: ambv_ (~ambv@c138-224.icpnet.pl) (Quit: Bye)
[18:03:27] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[18:04:07] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[18:04:16] <rapha> (like, counting how many lines come through for 10 seconds and then dividing that by 10 would be good enough)
[18:04:42] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[18:05:46] *** Joins: legola (~legola@46.235.100.27)
[18:06:09] <p-i-> rapha: N+=1; if time() > tlast+10: print(N); tlast,N = time(),0
[18:06:51] <p-i-> rapha: N+=1; if time() > tlast+1: print(N); tlast+=1; N=0  # better
[18:07:01] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:07:37] *** Joins: Bardon_ (~Bardon@user/Bardon)
[18:07:48] <rapha> hmm ... by time() you mean time.time(), p-i-? that doesn't seem to output seconds.
[18:09:16] <Yhg1s> time.time() returns seconds, yes.
[18:09:20] <p-i-> rapha: You can use ipython to play with it
[18:09:23] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 250 seconds)
[18:09:26] <rapha> ah, you have to send it through int()
[18:09:45] <Yhg1s> you don't have to send it through int(). It's always seconds. It's just not always *whole* seconds.
[18:10:01] <rapha> oh ok
[18:10:03] <rapha> that makes sense
[18:10:08] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 250 seconds)
[18:10:51] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:11:15] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:12:29] <p-i-> can I use websockets without async?
[18:12:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:12:41] <p-i-> I'm spawning a thread, so a blocking recv is fine
[18:13:05] <graingert[m]> p-i-: You can use trio.from_thread
[18:13:34] <p-i-> graingert[m]: I'm writing sync code now, as my async code is performing slow
[18:13:58] <Omega037> So there was a post on HN today about why attrs+cattrs is better than pydantic
[18:14:07] <Omega037> I've never used pydantic or attrs
[18:14:16] <Omega037> What is the focus on these libraries?
[18:14:23] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[18:14:24] <p-i-> I need the fastest websocket packet delivery I can get
[18:14:28] <Omega037> I've used attrs for simple data classes
[18:15:23] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[18:15:28] *** Joins: r0x57 (~scsi@78-63-38-194.static.zebra.lt)
[18:15:41] <lxer> p-i-: zeromq
[18:16:39] <Yhg1s> Omega037: their focus is getting rid of boilerplate.
[18:17:02] <Omega037> What boilerplate in particular
[18:17:34] <grym> attrs+{cattrs, desert} and pydantic  scratch slightly different itches.
[18:17:34] <Omega037> I know attrs helps with some of the boilerplate around init and setting up member variables
[18:17:37] <grym> at least for me
[18:17:52] <Yhg1s> Omega037: they can get rid of quite a lot of it. They basically generate __init__ methods, validation functions, conversion functions, __slots__, properties, descriptors, serialisation functions, all based on type hints.
[18:17:54] <Omega037> I guess my question really is, is it worth learning/playing around with cattrs/pydantic
[18:18:03] <grym> because of fastAPI, i find myself wanting pydantic when i want to enforce an API boundary
[18:18:10] <grym> and attrs when i want a packet of my own data
[18:18:21] <Omega037> See, I rarely use these methods to store/transfer data
[18:18:26] <p-i-> lxer: I can't see a path thru with 0mq
[18:18:35] <grym> yeah, you live in df/arrow/...
[18:18:45] <Omega037> Most of my programs are self contained: input_file -> analytics processing -> output_file
[18:18:46] <grym> i live in "someone has POSTed me something, and i sure hope it's right!"
[18:19:07] <Omega037> Where input and output are generally always just CSV, *maybe* JSON if needed
[18:19:09] <grym> Omega037: well, in your case, "someone has given me the path to a file, i sure hope it's right!"
[18:19:25] <Omega037> grym so the validation is the value?
[18:19:47] <Omega037> I usually have the validation be on the data pipelining end
[18:19:54] <Omega037> i.e., validate on write
[18:19:56] <grym> Omega037: pydantic's main feature i use is validation, yes.  and a simpler serialization story of complex types
[18:20:09] <grym> Omega037: sounds like a great way to burn lots of compute for no reason
[18:20:21] <grym> you're looking for GO, are you checking GI ?
[18:20:33] <Omega037> GO? GI?
[18:20:36] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:21:35] *** Quits: moldorcoder7 (~moldorcod@77.47.48.24) (Ping timeout: 250 seconds)
[18:21:35] <Omega037> Usually this is some workflow where there "node" X produces an input file for many downstream jobs, albeit the "workflow" is often just controlled by a script
[18:22:23] <osxtra> Was doing some string formatting.  Anyone know why center justification is 'center' instead of 'cjust' ?
[18:22:26] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[18:22:27] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[18:22:39] <grym> Omega037: "garbage out", and "garbage in"
[18:23:12] <Omega037> Yeah, when you are running a bunch of analyses on said input file, it makes more sense to check on write
[18:23:41] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:38a0:1320:dc1a:6a93) (Ping timeout: 250 seconds)
[18:23:52] <Omega037> But again, since I usually control all of my pipes, it is maybe not that important
[18:23:54] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:24:37] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[18:26:54] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (Quit: .)
[18:27:14] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:16] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:18] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:26] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:27] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[18:27:28] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:30] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:32] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:39] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:41] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:43] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:45] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:47] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:54] <_Mocramis> Hello, in an xml.etree.ElementTree, is there a way to unregister a namespace ? I do not like the fact that my function may have a global impact because it registers a namespace :s
[18:27:55] <p-i-> _Mocramis: What are you doing?
[18:27:56] <cdown> Good lord.
[18:28:10] <_Mocramis> Oo
[18:28:12] <_Mocramis> sorry
[18:28:14] <cdown> remind me who's got oper in here
[18:28:20] <_Mocramis> was scolled up
[18:28:25] *** Joins: hexology (~hexology@user/hexology)
[18:28:28] <_Mocramis> locked up
[18:28:33] <p-i-> cdown: looks like a mistake
[18:28:36] <_Mocramis> though it didn't work
[18:28:40] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[18:28:48] <The-Compiler> cdown: /msg chanserv flags #python, but no need :)
[18:29:04] <cdown> The-Compiler: oh yes, thanks.
[18:29:06] *** Joins: legola (~legola@46.235.100.27)
[18:29:17] <_Mocramis> needs to configure weechat to cut scrolling when i post
[18:29:21] <_Mocramis> really sorry
[18:29:34] <The-Compiler> no worries
[18:29:45] <The-Compiler> no idea about your question though
[18:30:01] *** Joins: lethu (~lethu@user/lethu)
[18:30:12] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:30:56] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[18:31:08] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[18:31:10] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[18:31:22] *** Joins: gggp (~textual@60.10.23.160)
[18:32:50] *** Joins: rany (~rany@user/rany)
[18:33:04] <_Mocramis> The-Compiler: Well thanks for reading it. Again sorry for the noise, trying to find a way to prevent it from happening again.
[18:33:06] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[18:33:19] *** Quits: pabed1 (~Thunderbi@89.37.15.34) (Ping timeout: 252 seconds)
[18:33:51] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[18:34:24] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 250 seconds)
[18:35:00] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[18:35:45] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[18:36:14] *** Quits: reset (~reset@user/reset) (Quit: reset)
[18:37:46] *** Joins: heco (~redrum@user/redrum88)
[18:37:50] <Samian> say I have a list of tuples. I want each tuple to be arguments of a function and the output to be [func(tuple[0]), func(tuple[1]), func(tuple[2])]
[18:37:55] <Samian> how'd you do that?
[18:37:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[18:38:16] <grym> results = [func(x) for x in mylistoftuples]
[18:38:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:38:19] <Samian> so far, I have this: [Torch.gather(v_W, 0, s_i) for v_W, s_i in zip(v_W_l, lS_i)]
[18:38:29] <xheimlich> in an expression like "result = A if cond else B". Consider the situation where A is not defined if cond is false. Does this "short circuit"?
[18:38:30] <p-i-> Samian: map(func, tuple)?
[18:38:39] <Samian> aha
[18:38:45] <grym> p-i-: prefer the comprehension
[18:38:51] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:38:56] <grym> unless you desparately need it to be lazy, i suppose...
[18:38:59] <Samian> map(Torch.gather, list(zip(v_W_l, lS_i)))
[18:39:00] <Repiphany> (x if cond else y) is never undefined
[18:39:17] <Samian> list(map(Torch.gather, list(zip(v_W_l, lS_i))))
[18:39:22] <Samian> interesting
[18:39:39] <Samian> list(map(Torch.gather, list(zip(v_W_l, lS_i))))   does the same as  [Torch.gather(v_W, 0, s_i) for v_W, s_i in zip(v_W_l, lS_i)]
[18:39:58] <Repiphany> It doesn't unpack the tuple
[18:40:23] <Samian> which doesn't?
[18:40:27] <p-i-> Right, so you need to unpack to execute the items in the map...
[18:40:30] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[18:40:33] <grym> results = [func(*x) for x in mylistoftuples]  if you need unpacking, then
[18:40:36] <Repiphany> map
[18:40:51] <Samian> so you're saying using map is slower?
[18:40:54] <Repiphany> But you're adding a 0 in your argument, you could put that in the zip somehow instead
[18:41:01] <p-i-> *map(f, tup) might work?
[18:41:13] *** Quits: y1n (~y1n@84-115-65-96.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[18:41:45] <p-i-> But it's not zen-of-python, even if it _does_
[18:42:01] <Samian> Is my comprehension fine?
[18:42:32] <Repiphany> [Torch.gather(*args) for args in zip(v_W_l, itertools.repeat(0), lS_i)]
[18:43:12] <Samian> Repiphany  you prefer that over   [Torch.gather(v_W, 0, s_i) for v_W, s_i in zip(v_W_l, lS_i)] ??
[18:44:01] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[18:44:11] <Repiphany> The variable names are just as meaningless to me either way
[18:44:37] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[18:46:18] <Repiphany> Oh, you can map(Torch.gather, v_W_l, itertools.repeat(0), lS_i)
[18:46:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[18:47:48] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[18:48:19] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[18:49:32] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[18:50:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[18:52:29] *** Quits: burakcank (~burakcank@server-176.53.15.201.as42926.net) (Quit: Connection closed)
[18:53:07] *** Joins: fikran (~fikran@user/fikran)
[18:53:20] *** Joins: y1n (~y1n@84-115-65-40.wifi.dynamic.surfer.at)
[18:54:09] <Samian> cool that looks the most elegant
[18:54:33] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 248 seconds)
[18:55:24] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:56:07] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:56:36] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[18:57:49] *** Joins: Vonter (~Vonter@user/vonter)
[18:58:34] *** Joins: shangxiao (~davids@124.182.71.141)
[18:58:35] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[18:59:04] *** Quits: gildarts (16abab341f@user/gildarts) (Remote host closed the connection)
[18:59:12] *** Joins: gildarts (16abab341f@user/gildarts)
[19:02:11] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:02:40] *** Parts: ezio (~ezio@user/ezio) (Leaving)
[19:04:28] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:04:36] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:04:44] <lxer> I have about hundred fixtures that I want to use with pytest, and there is the @fixtures decorator for that, but is there a easier way? (now I have to write a function for loading each file). is there a way to just define a folder so it can automatically look for the fixtures there?
[19:06:04] <The-Compiler> lxer: you mean you have a package with multiple files, all of which are declaring some fixtures?
[19:06:26] <lxer> my fixtures are all just json files
[19:06:30] <The-Compiler> huh
[19:07:01] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 250 seconds)
[19:07:14] <mdk> lxer: you mean like this: https://github.com/JulienPalard/mdorrst/blob/main/tests/test_mdorrst.py ?
[19:07:28] <mdk> (those are not fixtures I know, just trying)
[19:08:02] <mdk> (look at line 16)
[19:08:30] <rapha> p-i-: thx, got something working now! https://gist.github.com/sixtyfive/11a56925d1511458560eac93b46fe1ce
[19:09:17] <The-Compiler> lxer: I'm not sure I follow. You have a folder full of json files with some data, and every one of those should be its own fixture, but you don't want to write a fixture function for every file?
[19:09:23] *** Joins: daoudr_ (~daoudr@212.102.37.207)
[19:09:26] <lxer> mdk yes. that is also a way to do it.
[19:09:37] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:dc18:1e0:bf16:b702) (Ping timeout: 250 seconds)
[19:10:02] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[19:10:21] *** Joins: Vonter (~Vonter@user/vonter)
[19:11:09] <lxer> The-Compiler: yes, I'm lazy ;)
[19:11:39] *** Joins: Elzington_ (~Elzington@68.235.43.109)
[19:11:57] *** Quits: Donno (~Donno@59-102-99-226.tpgi.com.au) (Quit: Leaving)
[19:12:06] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:35d2:366b:fb03:59ee) (Ping timeout: 250 seconds)
[19:12:26] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[19:12:54] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:13:09] <The-Compiler> lxer: you could have a single fixture and a marker to pass the json filename to it: https://docs.pytest.org/en/6.2.x/fixture.html#using-markers-to-pass-data-to-fixtures
[19:13:41] *** Quits: gamara (~Guest19@66-203-186-167.ded.execulink.com) (Quit: Client closed)
[19:14:23] *** Quits: Elzington (~Elzington@68.235.43.38) (Ping timeout: 250 seconds)
[19:16:47] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[19:17:54] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:d073:8b5b:cf40:6020)
[19:18:04] *** Joins: et_ (~et@user/et)
[19:18:10] *** Joins: heco (~redrum@user/redrum88)
[19:18:34] <Gurkenglas> Is there a decorator that'll turn a function with yield expressions into a function that returns a list?
[19:18:57] *** Joins: brunodOut (~brunodOut@170.84.56.192)
[19:18:58] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[19:18:58] *** et_ is now known as et
[19:19:09] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (Quit: .)
[19:19:35] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[19:19:35] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[19:19:55] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[19:20:36] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:21:00] <p-i-> rapha: I've put some comments
[19:22:32] *** r0x57 is now known as lex
[19:22:35] *** lex is now known as lexx
[19:22:56] *** Quits: linguist (~brunodOut@170.84.56.192) (Ping timeout: 250 seconds)
[19:23:56] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[19:23:58] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Quit: leaving)
[19:25:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[19:25:13] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:25:37] *** Joins: kosh (~kosh@user/kosh)
[19:25:57] <mdk> Gurkenglas: you can do it (like https://wyz.fr/3V-1R) but why?
[19:26:02] *** Joins: emika7 (~emika@185.207.249.251)
[19:26:02] *** Joins: dfx (~dfx@217.146.83.141)
[19:26:05] *** Quits: emika (~emika@83.136.182.163) (Ping timeout: 250 seconds)
[19:26:05] *** emika7 is now known as emika
[19:26:17] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[19:26:33] *** Joins: binary01 (~binary01@192.110.171.216)
[19:26:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:27:29] <rapha> oh?
[19:27:31] <rapha> cool!
[19:27:31] <Gurkenglas> mdk, because that's better than doing [] = results; for(i in range(10)) f(i); g(i); results.append(h(i)); return results
[19:27:56] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:29:16] *** Joins: drew (~drew@user/drew)
[19:29:52] <rapha> oh right, python has those colons after if and so on
[19:29:58] *** Quits: ubert (~Thunderbi@77.119.215.189.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[19:29:58] <rapha> so you don't need as many parentheses
[19:30:51] <nedbat> Gurkenglas: but the decorator simply does this:   return list(f())
[19:31:04] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:31:40] <mdk> yep, I'm not sure to understand why it would be usefull
[19:31:46] *** Joins: FatDarrell (~textual@68.91.156.229)
[19:32:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:32:23] *** Joins: nomic (~nomic@185.217.117.169)
[19:33:28] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (K-Lined)
[19:33:46] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[19:34:02] *** Joins: djapo (~archangel@user/djapo)
[19:34:50] *** Joins: zebrag (~chris@user/zebrag)
[19:35:50] *** Joins: blingrang (~blingrang@user/blingrang)
[19:36:41] *** Joins: ganchan (~thomas_w@user/ganchan)
[19:38:10] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[19:38:56] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[19:38:57] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[19:40:32] *** Joins: pro_z (~pro_z@37.214.45.81)
[19:41:07] *** Quits: y1n (~y1n@84-115-65-40.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[19:41:08] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (Quit: Client closed)
[19:41:10] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Quit: Leaving)
[19:42:01] *** Joins: blingrang_ (~blingrang@user/blingrang)
[19:42:07] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[19:42:16] *** Joins: gggp (~textual@60.10.194.43)
[19:42:51] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[19:44:54] *** Joins: nomic (~nomic@185.217.117.169)
[19:45:28] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[19:45:38] <jmft2> In my unit test I want to check whether a function got called or not. Is this the best way of doing it? func = Mock(side_effect=func)
[19:45:42] *** Joins: mw216 (~mwilson@207.89.33.235)
[19:45:43] *** Joins: binary01 (~binary01@192.110.171.216)
[19:45:56] <Gurkenglas> nedbat, the user of f shouldnt need to worry about whether f uses the yield sugar
[19:46:27] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[19:46:33] <jmft2> then func.assert_called()
[19:46:47] *** Quits: daoudr_ (~daoudr@212.102.37.207) (Ping timeout: 240 seconds)
[19:46:53] *** Joins: zeden (~zeden@user/zeden)
[19:47:03] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:48:05] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Quit: Falcon|)
[19:48:55] *** Joins: cellofellow (~user@166.70.50.58)
[19:49:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:1489:c41:4abe:809e:d85) (Ping timeout: 240 seconds)
[19:49:13] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[19:50:17] *** Parts: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (ERC (IRC client for Emacs 28.0.50))
[19:50:52] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 252 seconds)
[19:52:57] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[19:53:55] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[19:54:32] *** Joins: y1n (~y1n@84-115-64-11.wifi.dynamic.surfer.at)
[19:56:20] *** Joins: cellofellow (~user@166.70.50.58)
[19:56:58] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[19:57:38] *** Joins: SuperLag (~akulbe@user/superlag)
[19:57:47] <Kabouik> I would like to use both bash and Python in a single script, without temporarily writing the commands of either language into a separate file. This is what I would like to run: https://git.teknik.io/matf/worldevents/raw/branch/master/show
[19:57:55] <Kabouik> How should I modify it to do so?
[19:58:34] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:58:49] <grym> polyglot code is ... tricky
[20:00:18] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:00:41] *** Joins: Roey (~Roey@user/Roey)
[20:01:27] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[20:01:44] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[20:01:59] <Kabouik> I suppose this would be the way (https://gist.github.com/welbornprod/ccbf43393ecd610032f4) but I can't figure out how to edit my script to make it work that way
[20:02:03] *** Joins: Vonter (~Vonter@user/vonter)
[20:02:07] <Kabouik> I'm not a programmer, let alone a Python programmer
[20:02:18] *** Joins: p-i- (~Ohmu@2403:6200:8870:1489:e88d:b1ec:21e8:a19c)
[20:03:53] *** Quits: brunodOut (~brunodOut@170.84.56.192) (Ping timeout: 248 seconds)
[20:03:53] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[20:04:18] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[20:05:19] *** Joins: Guest26 (~textual@165.117.223.195)
[20:06:23] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[20:06:49] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[20:07:10] *** Quits: aeon_flux (~textual@d-216-189-175-197.fl.cpe.atlanticbb.net) (Ping timeout: 240 seconds)
[20:08:44] *** Joins: cbasah (~cbasah@202.185.46.114)
[20:08:46] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[20:09:11] *** Quits: cbasah (~cbasah@202.185.46.114) (Client Quit)
[20:10:07] *** Quits: Guest26 (~textual@165.117.223.195) (Ping timeout: 252 seconds)
[20:10:09] <grym> right, piping text to python is about the only thing you can do i think
[20:10:18] <grym> which is that <<EOL ... END stuff
[20:11:39] *** Joins: cth (~Cthulchu@193.194.107.250)
[20:12:19] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[20:12:37] *** Joins: aeon_flux (~textual@d-216-189-175-197.fl.cpe.atlanticbb.net)
[20:15:29] *** Joins: flyingchef (~cbasah@202.185.46.114)
[20:17:21] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:17:45] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 248 seconds)
[20:18:16] *** Joins: mago (~mago@93.176.175.73)
[20:19:17] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:20:12] *** Quits: flyingchef (~cbasah@202.185.46.114) (Quit: WeeChat 3.2)
[20:21:15] *** Joins: paruh (~paruh@92.60.39.18)
[20:21:33] *** Quits: jazzy (~jaziz@2600:380:842b:9c51:c88b:6426:3ff5:7404) (Ping timeout: 250 seconds)
[20:23:40] *** Joins: cul8r (~cul8r@2601:8c3:4280:ae00::1a9f)
[20:23:43] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[20:24:36] *** Joins: digilink (~digilink@user/digilink)
[20:25:34] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:28:29] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[20:28:59] *** Joins: hyperknot (~hyperknot@2a02:3033:400:cc76:c5fe:1ac3:cd7b:c24)
[20:29:12] *** Joins: LiftLeft (~LiftLeft@172.98.80.23)
[20:29:27] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:29:46] *** Quits: p-i- (~Ohmu@2403:6200:8870:1489:e88d:b1ec:21e8:a19c) (Remote host closed the connection)
[20:30:19] *** Joins: p-i- (~Ohmu@2403:6200:8870:1489:78f6:6880:badc:454d)
[20:30:32] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[20:30:43] <hyperknot> Hi, when using the standard Python compiler, would I gain anything by inlining functions like def clamp(x, minimum, maximum):
[20:30:43] <hyperknot>     return max(minimum, min(x, maximum))
[20:30:48] <The-Compiler> Gurkenglas, nedbat: hey, I've never thought of that, and kinda like the idea actually. I've had a couple of utility methods where I always need a sequence, but yield made it easier to implement.
[20:30:53] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:08] <grym> hyperknot: 'inlining'?
[20:31:23] <hyperknot> I mean does it recognise that this function is called many times and optimise it?
[20:31:38] <grym> optimise in what way
[20:31:45] <hyperknot> https://en.wikipedia.org/wiki/Inline_expansion
[20:31:54] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[20:31:57] <grym> no idea.
[20:32:01] <hyperknot> In C/C++ this is a thing, I don't know if it is happening in Python
[20:32:05] <grym> other people here know, though
[20:32:23] <hyperknot> I mean does it make sense to manually copy the body of such short functions into where I use them?
[20:32:25] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:32:29] <grym> no
[20:32:57] <grym> to me, anyway, that smells of microoptimization at the cost of read/maintainabiliyt
[20:33:03] <grym> and i would not choose to do that
[20:33:04] <bjs> hyperknot: Python doesn't inline functions
[20:33:25] <p-i-> I sometimes put functions inside functions for logical scoping
[20:33:40] <grym> p-i-: improves your test coverage for free too ^_^
[20:33:42] <hyperknot> I'm only interested in performance. This function runs like 1 million times in a few seconds
[20:33:46] <grym> (in the bad way)
[20:33:48] *** Joins: ParseError (~Parse_Err@lfbn-idf3-1-802-234.w90-3.abo.wanadoo.fr)
[20:34:07] <bjs> hyperknot: the reason compilers inline things is for performance yeah,  and Python is no exception: function calls add up
[20:34:08] <grym> hyperknot: if you're computing clamp that much, i'd look at numpy's clip and vectorise
[20:34:09] <p-i-> And using of variables without requiring passing/currying
[20:34:32] <p-i-> hyperknot: maybe pastebin something
[20:34:40] <bjs> hyperknot: inlining just 1 function is unlikely to have a big effect except in specific circumstances
[20:34:53] <bjs> but certainly is a thing you can do when appropriate
[20:35:04] <bjs> (can manually do I mean,  since as I say Python won't do it for you)
[20:35:31] <p-i-> numba can crunch some problems that don't yield nicely to numpy
[20:35:41] <p-i-> JIT-compile python functions to LLVM
[20:36:18] <p-i-> But it's amazing what you can do with numpy if you can only figure out how!
[20:36:29] <grym> all you need is einsum, right :D
[20:37:51] <hyperknot> my data structure is very much non numpy. I'm processing geometry coordinates in a GeoJSON.
[20:37:54] *** Quits: y1n (~y1n@84-115-64-11.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[20:38:55] <grym> hyperknot: but, that's a dataframe, right?
[20:39:08] <grym> https://geopandas.org/docs/user_guide/io.html#reading-spatial-data
[20:39:13] <grym> so it's a ndarray already
[20:39:53] *** Quits: SuperLag (~akulbe@user/superlag) (Remote host closed the connection)
[20:41:01] *** Joins: SuperLag (~akulbe@user/superlag)
[20:41:35] <nedbat> has anyone ever run across a Python code sample meant to be used as a code-review exercise, so it has intentional problems?
[20:41:44] *** Joins: binary01 (~binary01@192.110.171.216)
[20:42:21] <grym> nedbat: no, but now i kind of want to
[20:42:26] <p-i-> nedbat: that would probably make a profitable website concept
[20:42:54] <bjs> nedbat: is this for interviewing or something
[20:43:12] <nedbat> bjs: yes, though my enthusiasm for it is waning.
[20:43:20] <p-i-> There's https://cppquiz.org/quiz/question/190 for C++
[20:43:33] <bjs> nedbat: waning because of the difficulty in finding the examples or because you don't believe in the technique?
[20:43:36] <p-i-> Which exposes the true awefulness of C++ perfectly
[20:44:13] <nedbat> bjs: because I said I would write an example, which is difficult, but also anticipating the exercise itself, i'm not sure it will be as productive as we had hoped.
[20:44:22] <p-i-> nedbat: maybe you could scrape https://codereview.stackexchange.com/
[20:44:40] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:44:46] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[20:45:21] *** Joins: Axy (~Axy@user/axy)
[20:45:25] <p-i-> https://codereview.stackexchange.com/questions/tagged/python
[20:45:25] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:45:26] *** Joins: Barones (~Barones@2804:48dc:8500:0:d14e:a4cd:a71a:dece)
[20:45:36] *** Joins: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com)
[20:45:48] <ammar2> yeah, I was gonna say codereview has some great examples of beginner snippets that can be polished up
[20:45:50] *** Joins: mickey (~user@user/mickey)
[20:45:55] <p-i-> https://codereview.stackexchange.com/questions/tagged/python?tab=Votes <-- sorted by upvotes
[20:46:03] <bjs> nedbat: Unless the person understands the whole system it'd be an exercise in reviewing style and patterns.  At least for something like C you can actually test knowledge of language (e.g. seeing UB)
[20:46:41] <nedbat> bjs: it wouldn't be real code from our system, it would be something self-contained and domain-neutral-ish
[20:46:48] <bjs> nedbat: you had that kindling page,  maybe take one of those and make a bad implementation and ask how they'd improve it
[20:46:49] <grym> you could do something with the common gotchas and a bad test that looks like it passes
[20:47:06] <grym> mutable default arg but construct a test so it looks right (but isn't)
[20:47:09] <bjs> nedbat: yeah I was writing a comment about taking one of your own PRs but I then wrote out why it'd not a good idea
[20:47:16] <bjs> and forgot to include the original part of the message
[20:47:50] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:48:13] <ammar2> actually this one has some good gotchas https://codereview.stackexchange.com/questions/118538/how-clean-is-my-snow
[20:48:19] <OliverUK> Hello.  Can someone confirm if I am correct or talking rubbish haha.  I don't think itertools can order product results by length because it would have to load all results into memory first and that's not what it was designed to work
[20:48:41] <ammar2> well, one good gotcha
[20:49:04] <OliverUK> I haven't been able to find how to order my results that way without loading them into a list and losing the efficiency of itertools
[20:49:09] <nedbat> OliverUK: how do product results differ in length?
[20:49:50] <bjs> nedbat: a little text game, the markdown->html and maybe a random fake unix utility might not be too hard to write (esp one that is not very good and has areas to pull up on review) and are fairly self-contained.  I've never seen collections of such code outside of just generic StackOverflow questions :P
[20:49:57] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:51:17] *** Joins: y1n (~y1n@84-115-64-59.wifi.dynamic.surfer.at)
[20:52:11] <nedbat> bjs: those are good ideas.  ammar2: codereview.stackexchange will probably have lots of possibilities.  thanks.
[20:52:13] <OliverUK> nedbat: https://bpa.st/UWDQ Hopefully this clears it up
[20:52:27] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:52:40] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[20:53:07] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[20:53:27] <ammar2> OliverUK: yeah, so no length based ordering there
[20:53:34] <ammar2> you'd like them to be ordered by length?
[20:53:38] <p-i-> OliverUK: How can you order them without storing them? Unless you're dropping them into a linked list or sommat...
[20:53:39] <OliverUK> Thought not
[20:53:44] <OliverUK> ammar2: Yeah
[20:53:54] <nedbat> OliverUK: if you sort a and b by decreasing length, you'd have an approximation
[20:53:59] <OliverUK> p-i-: Thats what I said haha
[20:54:01] <bjs> nedbat: of course they were good ideas, they were your ideas https://nedbatchelder.com/text/kindling.html :)
[20:54:04] <ammar2> I mean product just takes the first element of the first collection, productizes it with the second collection, then the second from the first collection and so on
[20:54:25] <ammar2> got beat by nedbat but yeah, you can just sort the arguments
[20:54:29] <nedbat> bjs: i had started on a madlibs, but it's hard to do it "wrong" :)
[20:54:44] <OliverUK> Yep, thanks all, thought it wasn't possible without storing in a list
[20:54:54] <p-i-> OliverUK: well if it's just length, why not sort a and b by increasing length
[20:55:06] <p-i-> then you can know in advance the product lengths
[20:56:14] <bjs> nedbat: "wrong" can mean many things, especially for code review purposes: style, documentation, lack of testing or missing cases, tests over-use of mocks, bad data structure choice, common bugs/pitfalls
[20:56:23] <p-i-> it's a tradeoff between succinct/performance
[20:56:24] <nedbat> bjs: i know :(
[20:56:48] <nedbat> OliverUK: this is an interesting problem.  can you tell us more about the actual data, and why you want it in decreasing length order?
[20:57:46] <p-i-> if a has elements of length 1 2 5 and b has elements of length 2 3, then a+b you can calculate all elements of target length 3, then target length 4, etc...
[20:57:59] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:08] <p-i-> but code is gona be relatively gnarly
[20:58:23] <OliverUK> nedbat: Sure, I have a need to generate some combinations of words.  Based on the length they will get distributed to different teams, kind of anyway, not 100% sure on how I am gonna approach this problem yet haha
[20:58:39] <jaggz> signal chaining! https://paste.debian.net/1209170/
[20:58:40] *** Joins: computeiro (~Wender@191.55.47.142)
[20:59:41] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 250 seconds)
[20:59:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:59:59] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[21:00:07] *** Quits: wender (~Wender@189.37.67.196) (Ping timeout: 250 seconds)
[21:00:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:03:04] *** Joins: fikran (~fikran@user/fikran)
[21:03:17] <jaggz> https://paste.debian.net/1209173/
[21:03:39] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:04:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[21:04:19] <jaggz> test code which adds two handlers for sigwinch
[21:04:49] <jaggz> while I allow removal of signals, I don't currently handle resetting handlers (like to sigdfl or sigign)
[21:05:22] <p-i-> OliverUK: aa = [[]] * max(map(len, a)); for _ in a: aa[len(_)].append(a), same for bb = ...  Then you could have a double for-loop: for tot_length in range(len(aa)+len(bb)): for j in range(tot_length): i=tot_length-j; for r in itertools.product(aa[i], bb[j]): print(r[0] + r[1])
[21:05:27] *** Quits: hyperknot (~hyperknot@2a02:3033:400:cc76:c5fe:1ac3:cd7b:c24) (Ping timeout: 240 seconds)
[21:07:27] *** Quits: y1n (~y1n@84-115-64-59.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[21:07:38] <p-i-> You're always doing hard stuff jaggz :p
[21:07:46] *** Joins: hyperknot (~hyperknot@2a02:3033:404:e94d:81b8:6ed9:ec92:3495)
[21:07:48] *** Quits: mw216 (~mwilson@207.89.33.235) (Ping timeout: 250 seconds)
[21:07:50] *** Quits: hyperknot (~hyperknot@2a02:3033:404:e94d:81b8:6ed9:ec92:3495) (Client Quit)
[21:09:39] *** Joins: Naan (~naan@user/naan)
[21:10:27] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 240 seconds)
[21:13:29] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[21:14:27] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[21:15:26] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[21:16:07] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[21:16:07] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[21:17:28] *** Quits: rsx (~dummy@ppp-188-174-156-255.dynamic.mnet-online.de) (Quit: rsx)
[21:17:32] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[21:18:02] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[21:18:12] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[21:18:35] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:19:13] *** Quits: binary01 (~binary01@192.110.171.216) (Quit: Leaving)
[21:20:15] *** Quits: Meteorhead (~Meteorhea@165.225.205.44) (Quit: Client closed)
[21:21:21] *** Joins: Narrat (~omnius@p200300df5f01471506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:22:53] *** Joins: Betal (~Betal@user/betal)
[21:23:34] *** Quits: mago (~mago@93.176.175.73) (Quit: Client closed)
[21:24:05] *** Joins: y1n (~y1n@84-115-64-25.wifi.dynamic.surfer.at)
[21:24:29] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[21:25:38] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:26:12] <no_gravity> In the output of "python3 -m profile" I see 0.4s tottime in 93 calls spent in a function that only sets 4 variables. How can that take 0.4s?
[21:26:31] *** vodkra_ is now known as vodkra
[21:28:01] <no_gravity> It sets those variables by calling other functions like "x=f(...)" but the execution time of those functions should not be counted towards tottime, right?
[21:28:45] <bjs> no_gravity: what does the actual function look like?
[21:28:52] <bjs> s/look like/what is it/
[21:29:15] *** Joins: fdan (~fdan@192.146.154.3)
[21:29:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:29:37] <jaggz> p-i-, I am. leaves no room for complex coding!
[21:30:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:13] <no_gravity> bjs: https://pastebin.com/raw/igxVJUPj
[21:31:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:31:48] <p-i-> Does anyone have a lead on super-speedy local-machine OCR? Images are really simple, small, and standard fonts, but pytesseract is still giving ~0.4s.
[21:32:56] *** Joins: friddo (~friddo@94.147.158.188)
[21:33:03] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 250 seconds)
[21:34:49] *** Joins: FatDarrell (~textual@68.91.156.229)
[21:36:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:36:39] *** Parts: friddo (~friddo@94.147.158.188) ()
[21:37:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:38:21] <bjs> no_gravity: hmm seems like it really isn't doing much just from that snippet
[21:39:11] *** Quits: ganchan (~thomas_w@user/ganchan) (Read error: Connection reset by peer)
[21:39:15] <no_gravity> bjs: Yeah, strange.
[21:39:28] <bjs> no_gravity: what did profile actually say?
[21:40:32] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[21:40:46] <no_gravity> bjs: https://pastebin.com/raw/de33TRKL
[21:40:56] *** Joins: linguist (~brunodOut@170.84.56.192)
[21:41:09] <hodapp> p-i-: good luck. I've been on the phone trying to get the license price of an engine like ABBYY and mostly been laughed at
[21:41:14] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:596:1858:3d2d:8f70)
[21:41:59] <hodapp> you might be better off figuring out how to tune Tesseract
[21:42:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:42:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:42:36] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[21:42:58] <p-i-> I lost a day on Google Cloud with their Vision API, which turns out to have a latency of 2+ seconds.
[21:42:58] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:43:07] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[21:43:11] *** Joins: brunodOut (~brunodOut@170.84.56.192)
[21:43:32] <p-i-> kinda surprised I can't find something, as OCR is the hello world of ML
[21:43:46] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:44:33] *** Parts: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (WeeChat 3.0.1)
[21:44:37] <hodapp> p-i-: errr, not really, OCR is among the harder problems
[21:44:55] <grym> p-i-: it super isn't
[21:45:00] <no_gravity> bjs: The size of _state['value'] can be quite big. Its a string that could be some 100k in size in some of the 93 calls. Can that somehow be expensive?
[21:45:01] <grym> MNIST is a special case
[21:45:10] <hodapp> not that you'd ever know this by reading blog posts written by dunces
[21:45:12] <hodapp> but I digress
[21:45:19] <grym> not-MNIST is descending into madness in rapid succession
[21:45:37] <grym> (we ship some OCR things to clients, sorry, it's extremely closed source, but it's nontrivial)
[21:45:40] <p-i-> My problem is easier than MNIST. I can chunk the image into characters fine with numpy.
[21:45:54] <hodapp> that's... still probably not really easier than MNIST
[21:46:19] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:46:47] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[21:47:28] *** Quits: linguist (~brunodOut@170.84.56.192) (Ping timeout: 252 seconds)
[21:47:40] *** brunodOut is now known as linguist
[21:47:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:47:56] <hodapp> the open-source ML models are kind of meh too, though I had okay luck with Kraken
[21:48:02] *** Joins: edocod (~edocod@user/edocod)
[21:48:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:48:07] <hodapp> but I am pretty sure Tesseract still ended up faster on the same image
[21:48:59] <edocod> Hello! I have upgraded my Debian box and this apparently broke all the virtual envs i had on my machine. Recreating them works but of course i'd like to not have to reinstall all the dependencies
[21:48:59] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[21:49:06] *** Joins: sandb0y (pirate@user/sandb0y)
[21:49:46] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:50:13] <edocod> Whenever i try running any python code that needs modules, any module throws "ModuleNotFoundError: No module named ..."
[21:50:35] <grym> edocod: you'll need to remake all your venvs
[21:50:43] <edocod> Oh, really?
[21:50:55] <grym> in general yes, if the base interpreter changes
[21:51:07] <edocod> I see
[21:51:14] <grym> you could possibly reinstall your older python ...
[21:51:19] <grym> alongside a newer one.
[21:51:21] <ExeciN> Hi people. I'm having a bit of a trouble installing a module with pip. https://bpa.st/PNDA
[21:51:27] <grym> but debian being what it is, that sounds a little sketch
[21:51:30] <edocod> Nah, i'll just make the venvs then
[21:51:44] <bjs> no_gravity: well it'd be expensive for lxml presumably,  but probably not for the function itself
[21:51:46] <edocod> I thought it was something on the line of "ah yes you just need to run this command and it fixes"
[21:51:55] <ExeciN> even though I supply the version to install it can only find "0.0.0" if I understand the error correctly
[21:52:12] <ExeciN> what am I doing wrong?
[21:52:26] <no_gravity> bjs: Yes. Strange.
[21:53:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:53:29] <no_gravity> bjs: I thought maybe is "x" is big then "x=''" is expensive because of garbage collection. But is it expensive to GC a long string? I would think not.
[21:53:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:53:53] <nedbat> no_gravity: the size of the string doesn't matter
[21:54:09] <no_gravity> nedbat: Yeah, I would think so.
[21:54:09] <nedbat> no_gravity: isn't it the lxml functions you are calling that make it slow?
[21:54:23] <no_gravity> nedbat: But those should go towards cumtime, not totttime, right?
[21:54:32] <grym> ExeciN: possibly nothing wrong, but i can't repro because i don't have GMP installed
[21:54:39] <nedbat> no_gravity: i don't know what happens when they are C functions
[21:54:58] <p-i-> [np.mean(im[:,:,0]), np.mean(im[:,:,1]), np.mean(im[:,:,2])]  # gotta be a better way... np.mean(im, axis=2) is fail tho'
[21:55:19] <no_gravity> nedbat: Hmm...
[21:55:31] <nedbat> ExeciN: what version of Python are you using?
[21:55:50] <ExeciN> nedbat: 3.8.10
[21:55:53] <bjs> nedbat: no_gravity: C functions are probably okay,  the `elems[0]` is the one that stands out. if `elems` is a type that comes from some C then maybe the call gets squished into tottime
[21:55:59] <nedbat> ExeciN: hmm, i don't know.
[21:56:41] <no_gravity> bjs: Whicih call gets squished into tottime?
[21:56:59] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:58:43] <bjs> no_gravity: e.g. `elems[0]` and `not elems`
[21:58:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:58:50] <OliverUK> Hello, how might I add to a list rather than printing in this format please?  for r in itertools.product(a, b): print r[0] + r[1]
[21:58:51] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:719a:db9:6521:9338) (Quit: Textual IRC Client: www.textualapp.com)
[21:59:19] <jean-luc> you mean add to a dictionary?
[21:59:32] <jean-luc> r[0] key and r[1] value?
[21:59:46] <ExeciN> is there something that I could check? could the problem be with the hosted packages on files.pythonhosted.org / pypi.org/simple ?
[21:59:46] <no_gravity> bjs: Ah. But that could only be the case if elems is not a normal list, right?
[21:59:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:00:22] <bjs> no_gravity: list is one example of a type implemented in C
[22:01:01] *** Quits: dcaro (~dcaro@user/dcaro) (Remote host closed the connection)
[22:01:02] <OliverUK> Erm, probably so rather than ('aa','bb'), ('aa','cc') etc it would be ('aabb','aacc','aadd','aaee')
[22:01:05] <OliverUK> If that makes sense
[22:01:14] *** Joins: dcaro (~dcaro@user/dcaro)
[22:01:20] <no_gravity> bjs: Ok, but it is not slow to look up the 0th element in a list, is it?
[22:03:40] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[22:03:40] *** Joins: ShorTie (~ShorTie@171.sub-72-105-245.myvzw.com)
[22:03:40] <bjs> no_gravity: presumably not
[22:04:48] <bjs> no_gravity: do all the other functions appear in the profile output?  Is there one missing?
[22:05:33] <OliverUK> jean-luc: Looking at it I think I still want a list
[22:05:37] <no_gravity> bjs: CSSSelector(), sel(), fromstring() and sanitize_element()? Let me check ...
[22:05:40] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 240 seconds)
[22:06:33] <OliverUK> Sorry if I am not using the correct language for python things, I am not very good at python, I'm new
[22:06:48] *** Quits: edocod (~edocod@user/edocod) (Quit: Leaving)
[22:07:05] <bjs> OliverUK: you can make a list `the_list = []` before the loop, then just `the_list.append(r[0]); the_list.append(r[1])` then after the loop you'll have a big list with all the things in order
[22:07:20] <jean-luc> oh i see OliverUK
[22:08:02] <OliverUK> bjs: Ah, seemed to me there would be a more 'pythony' way to do this
[22:08:24] <jean-luc> OliverUK: mylist.append(r[0]+r[1])
[22:08:45] <bjs> OliverUK: well the first step is always trying to get the non-pythony way that does what you want
[22:08:46] <OliverUK> bjs: I think I want something like ...... okay jean-luc just put what I was going to write as I was putting it haha
[22:09:08] <jean-luc> yep from your sample output thats what you want
[22:09:15] <OliverUK> jean-luc: Thanks
[22:09:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:09:45] <no_gravity> bjs: Actually, only one of them shows up (sanitize_element). None of the lxml functions show up.
[22:10:07] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[22:10:11] <OliverUK> I suppose I thought that if there was one command to print in the format I wanted there would be something like:
[22:10:13] <OliverUK> list = itertools.product(a, b)***fancy thing here***
[22:10:28] <OliverUK> Rather than create an empty list and iterate over each result like that
[22:10:35] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:10:42] <bjs> OliverUK: do you have an actual concrete a, b and output list?
[22:10:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:11:32] <OliverUK> bjs: Okay, so the answer provided by John on this site: https://stackoverflow.com/questions/1953194/permutations-of-two-lists-in-python
[22:11:47] <no_gravity> bjs: A bunch of other functions that seem to be part of lxml show up, but not the 3 functions I call.
[22:11:50] <OliverUK> Rather than what is printed I would like adding to a list
[22:12:20] <bjs> OliverUK: okay but so far every comment from you has slightly changed what I thought you wanted ;)
[22:12:31] <OliverUK> Sorry
[22:12:40] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[22:13:54] <bjs> OliverUK: okay well `the_list = [r[0] + r[1] for r in itertools.product(a, b)]`
[22:13:57] <OliverUK> bjs: So in the example from John Feminella I would have a list that had ('foox','fooy','fooz','foow','barx','bary' etc etc
[22:14:14] <hexology> `[f"{e1}{e2}" for e1, e2 in itertools.product(list1, list2)]`
[22:14:17] <OliverUK> bjs: That is the Pythony way I was thinking of
[22:14:30] <bjs> OliverUK: this is exactly the same as "creating an empty list and iterating over the result", it just uses 1 line rather than 3
[22:14:44] <OliverUK> Which is what I was thinking of
[22:15:00] <OliverUK> I just didn't know how because I lack the knowledge
[22:15:03] <OliverUK> Thank you
[22:15:28] <bjs> OliverUK: it's easier if you come with the explicitly append and loop rather than make us guess our way to it :P
[22:16:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:16:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:17:29] <bjs> OliverUK: the name for the `[... for ... in ...]` syntax is "list comprehension" by the way,  if you want to find out more
[22:17:34] <bjs> that is the google-able phrase
[22:17:36] *** Quits: HaJo (~hajo@2a01:c23:8dd0:a00:821f:2ff:feef:dabf) (Quit: Leaving)
[22:18:03] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:1043:b2e8:9541:4e4b)
[22:19:36] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[22:19:36] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:19:53] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 248 seconds)
[22:20:35] *** Joins: LabMonkey (~LabMonkey@2602:306:cf62:e270:7d4c:22a:fae1:5b66)
[22:20:41] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:20:50] *** Joins: fdan (~fdan@192.146.154.3)
[22:22:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:22:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:22:26] *** Parts: akk (~akk@174-28-98-206.albq.qwest.net) (+++)
[22:22:53] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[22:24:17] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[22:25:01] *** Quits: dhill (dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[22:26:26] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:28:05] *** Quits: y1n (~y1n@84-115-64-25.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[22:28:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:28:30] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:28:36] *** Joins: node1 (~node1@user/node1)
[22:30:17] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[22:31:26] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 250 seconds)
[22:32:26] *** dcaro is now known as dcaro_away
[22:33:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:33:31] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[22:33:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:35:04] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[22:35:23] *** Joins: Pixi_ (~Pixi@user/pixi)
[22:35:38] *** Joins: dbristow (~dbristow@user/dbristow)
[22:37:00] *** HankHill is now known as Church
[22:37:09] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Read error: Connection reset by peer)
[22:38:37] *** Quits: Pixi__ (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[22:38:37] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:38:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:39:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:39:36] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[22:40:27] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[22:40:29] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[22:41:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:41:57] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:42:35] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[22:44:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:44:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:45:46] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 252 seconds)
[22:46:54] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:47:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:47:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:49:02] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[22:50:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:50:33] *** Joins: sazawal (~sazawal@182.64.58.123)
[22:50:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:52:23] <pyeverything> hi
[22:53:27] <nedbat> everything is here!
[22:54:25] <grym> You can do anything at ZomboCom. Anything at all. The only limit is yourself.
[22:54:48] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:54:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[22:55:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:56:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:57:06] <OliverUK> bjs: Thank you for this, I have heard of list comprehensions in the training vids I have been watching so I *should* have known this
[22:57:34] <OliverUK> bjs: I have since changed my code and I am using generators to try and speed up my code
[22:57:58] <OliverUK> I don't think you ca select a random sample from a generator though so I may have to switch back to a list
[22:58:43] <Staunch> grym: the unattainable is attainable! At ZomboCom.
[22:58:46] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[22:59:15] *** Joins: devcpu (~rusty@207.61.176.35)
[22:59:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[23:01:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:01:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:01:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:02:07] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[23:02:13] <PJBoy> I'm sure this is a FAQ, but what's our preferred py -> exe tool?
[23:02:41] <grym> PJBoy: pyinstaller is ~the only game in town, but aiui it's got its fair share of warts
[23:02:42] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[23:03:20] <PJBoy> thanks :)
[23:05:31] *** Joins: friddo (~friddo@94.147.158.188)
[23:06:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:07:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:07:56] <gloin> Hopefully my intent here should be obvious, but how do I make this work? print(split("%", subs.address))
[23:08:15] <gloin> like I want to split the output of subs.address prior to the % char
[23:08:15] <grym> gloin: remind me what splitting on % is meant to do?
[23:08:19] <grym> oh, ok.
[23:08:40] <grym> print(subs.address.partition('%')[0]), maybe
[23:08:44] <pyeverything> I am not sure why despite installing the remote extension for ssh in vscode last week and getting it to work, i cannot get it to work this week https://imgur.com/a/G5yZLjo (I can see at the bottom left it says "disconnected") really appreciate any help
[23:09:10] <gloin> % is the separator in this case, for some reason psutil outputs "ipv6_address + %ethN" which requires cleanup
[23:09:23] <grym> gloin: partition is always safe to index into, since it unambiguously returns (before, the-split, after) every time
[23:09:45] <gloin> grym: what I'm getting from the above call is "name 'split' is not defined"
[23:09:50] <grym> yes, it's not
[23:09:55] <grym> it's a method on str, not a function
[23:10:07] <gloin> right, so back to my original question :)
[23:10:09] <grym> "foo".split('%'), not split(foo, '%')
[23:10:17] <gloin> ah
[23:10:25] <grym> and i would refine that by saying you probably want "foo".partition('%')
[23:10:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[23:11:54] <gloin> eh, I don't care about the % and everything after it except that I want to strip it from my output
[23:12:16] * gloin tried split vs partition and the result was one more list item
[23:12:30] <grym> gloin: https://bpa.st/UXXA  perhaps this is clearer
[23:12:30] *** Joins: fikran (~fikran@user/fikran)
[23:12:33] <gloin> useful to know but in this case I just want allthat[0]
[23:12:37] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:12:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:12:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:13:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:13:20] <grym> i like fixed-length return values :)
[23:13:41] <p-i-> Suppose I have a numpy array 0 0 0 1 1 1 1 0 0 1 1 1. Is there any way I get 3 4 2 3 from it without looping over all values?
[23:13:54] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[23:14:20] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[23:15:32] <gloin> Thanks grym. The good news here is that an IPv6 address will never contain a % nor a string like "eth0" so I'm pretty safe in ignoring that. Which is good - v6 addresses are weird enough as it is. Unsure whether it's harder to regex ipv6 addr or the UK dialplan
[23:15:35] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[23:15:55] *** Joins: noarb (~noarb@user/noarb)
[23:16:05] <grym> gloin: https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Address :)
[23:17:55] <The-Compiler> p-i-: You'll need to iterate over it one way or another, I suppose you mean without iterating manually?
[23:18:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[23:18:18] *** Joins: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com)
[23:18:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:18:23] <The-Compiler> p-i-: I'm not very familiar with numpy, but for a list a possible solution would be [len(list(v)) for k, v in itertools.groupby(v)]
[23:18:26] *** Quits: dfx (~dfx@217.146.83.141) (Quit: Leaving)
[23:18:34] <The-Compiler> (whoops, I used v twice accidentally)
[23:19:17] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[23:19:24] <jean-luc> good luck figuring out where
[23:19:56] *** Leonarbro_ is now known as Leonarbro
[23:20:33] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[23:20:41] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 248 seconds)
[23:20:44] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[23:21:01] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:3442:770f:b7a8:5931) (Read error: Connection reset by peer)
[23:21:24] *** Joins: noarb (~noarb@user/noarb)
[23:23:07] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:eda0:63af:8279:f703)
[23:23:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:23:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:26:30] *** Quits: bertieb (~bertieb@217.155.39.147) (Read error: Connection reset by peer)
[23:26:34] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:27:04] *** Joins: fdan (~fdan@192.146.154.3)
[23:29:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:29:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:31:19] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-81dc-4f45-3881-6bd3.res6.spectrum.com) (Quit: jarthur)
[23:32:11] *** Joins: wender (~Wender@189.37.67.196)
[23:32:50] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[23:34:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:34:49] *** Quits: computeiro (~Wender@191.55.47.142) (Ping timeout: 250 seconds)
[23:34:50] *** Joins: nomic (~nomic@185.217.117.169)
[23:35:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:35:34] *** Quits: cellofellow (~user@166.70.50.58) (Ping timeout: 250 seconds)
[23:36:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:37:25] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:38:37] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[23:38:45] *** Joins: junktext (~junktext@109.201.152.163)
[23:39:39] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[23:39:53] *** Joins: Milos (~Milos@user/milos)
[23:41:47] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[23:41:58] <p-i-> The-Compiler: Nice!
[23:42:07] *** Quits: pro_z (~pro_z@37.214.45.81) (Ping timeout: 240 seconds)
[23:42:58] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 252 seconds)
[23:44:04] *** Quits: aeon_flux (~textual@d-216-189-175-197.fl.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[23:45:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:46:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:47:10] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:1043:b2e8:9541:4e4b) (Ping timeout: 240 seconds)
[23:47:18] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:48:10] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[23:48:37] *** Joins: brunodOut (~brunodOut@170.84.57.174)
[23:48:51] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:49:10] *** Quits: linguist (~brunodOut@170.84.56.192) (Ping timeout: 240 seconds)
[23:49:46] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:49:47] *** Joins: linguist (~brunodOut@170.84.57.174)
[23:51:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:52:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:52:13] *** Joins: emika8 (~emika@83.136.182.26)
[23:52:33] *** Joins: amblina (uid514860@id-514860.charlton.irccloud.com)
[23:52:34] <p-i-> a =  np.array([0,0,0,1,1,1,1,1,0,0,0,0,1,1]); [list(v) for k, v in itertools.groupby(a)] gives [[0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0], [1, 1]]
[23:52:41] *** Quits: emika (~emika@185.207.249.251) (Ping timeout: 248 seconds)
[23:52:41] *** Quits: brunodOut (~brunodOut@170.84.57.174) (Read error: Connection reset by peer)
[23:52:41] *** emika8 is now known as emika
[23:53:19] <p-i-> Now I need to isolate the longest list that contains the most zeros, and get the absolute index of the first element
[23:54:33] <OliverUK> Can someone please say if there is a way of getting a random sample of results from a generator.  Converting it all to a list is killing my computer haha
[23:56:05] <p-i-> OliverUK: sounds like you need to be using numpy
[23:57:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:57:10] <OliverUK> p-i-: Will that allow me to pick a random sample from a generator?
[23:57:41] <p-i-> You want to generate a random number of samples before picking one?
[23:57:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:57:58] <p-i-> A generator yields one value at a time.
[23:58:17] <p-i-> It GENERATES the values dynamically
[23:58:22] <p-i-> That's why it's called a generator
[23:59:16] <p-i-> L = [gen() for i in range(1000)]
[23:59:37] *** Quits: ParseError (~Parse_Err@lfbn-idf3-1-802-234.w90-3.abo.wanadoo.fr) (Read error: Connection reset by peer)
[23:59:48] *** Joins: pycurious (~Adium@user/pycurious)
