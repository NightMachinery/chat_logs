[00:02:42] *** Joins: jfuller (~jimfuller@ip-85-160-35-215.eurotel.cz)
[00:16:42] *** Quits: Kruppt (~Kruppt@50.111.24.186) (Quit: Leaving)
[00:23:27] <Piru> b4gder: broken links (raw etc) at https://curl.se/libcurl/c/multi-poll.html
[00:23:42] <b4gder> I'll fix
[00:24:44] <b4gder> ah its an old example
[00:25:04] <b4gder> how did you land there?
[00:25:08] *** b4gder is now known as bagder
[00:29:57] <Piru> google
[00:30:56] <Piru> keywords were imaginative: curl multi poll
[00:34:11] <bagder> hehe
[00:41:44] *** Ekho- is now known as Ekho
[00:46:24] *** Quits: cliluw (~cliluw@47.147.73.223) (Quit: Leaving)
[00:56:21] <Piru> darn. I'm missing socketpair
[00:56:39] <Piru> well one of the libc's have it.. the more posixy one
[00:57:23] <Piru> new webkit uses curl_multi_wake .. and as usual doesn't check for any errors
[00:57:57] <Piru>     wakeUp();
[00:57:59] <Piru> etc
[00:58:17] <Piru> and then it has:
[00:58:18] <Piru> CURLMcode CurlMultiHandle::wakeUp()
[00:58:18] <Piru> { return curl_multi_wakeup(m_multiHandle);
[00:58:19] <Piru> }
[00:58:20] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:58:26] <Piru> (oh mind the botched paste)
[00:59:00] <Piru> so sure there's a function there but it only always returns error. which is ignored. browser is stuck :>
[00:59:54] *** Quits: spare (~qz77flzo6@user/spareproject) (Remote host closed the connection)
[01:00:42] <Piru> bagder: is socketpair() used by anything else critical?
[01:02:36] <Piru> lets see what windows does there...
[01:02:46] <Piru> the socketpair impl there
[01:03:13] <Piru> ah manual two sockets
[01:03:26] <Piru> that ought to work for us
[01:03:37] <Piru> so lets enable that and see if it works
[01:04:03] <Piru> I'll need to adjust it a bit though
[01:05:23] *** Quits: jfuller (~jimfuller@ip-85-160-35-215.eurotel.cz) (Ping timeout: 256 seconds)
[01:13:25] <bagder> its the wakeup function that needs it, so if you don't use that you don't need socketpair
[01:15:29] <Piru> well others do use it
[01:15:32] <Piru> webkit does
[01:15:33] *** Joins: spare (~qz77flzo6@user/spareproject)
[01:15:52] <Piru> so I need to do something about it. also spotted curl_multi_poll extra_fds which is troublesome
[01:16:03] <Piru> I assume you can pass any fds via that?
[01:16:27] <Piru> that spells trouble for systems where sockets and real file fds are separate
[01:16:58] <Piru> it'll just fail silently which is somewhat troublesome
[01:17:20] <bagder> yes, you can pass any fds - they're passed on to poll() or select()
[01:17:30] <Piru> well I'll have to make it error out if extra_nfds is nonzero
[01:18:11] <Piru> there is no way to support that wit the non-posixy libc infortunately
[01:18:16] <Piru> lets hope webkit doesn't use that
[01:18:28] *** Quits: spare (~qz77flzo6@user/spareproject) (Remote host closed the connection)
[01:18:35] <Piru> return curl_multi_poll(m_multiHandle, const_cast<curl_waitfd*>(extraFds.data()), extraFds.size(), timeoutMS, &numFds);
[01:18:38] <Piru> ooof
[01:19:15] <Piru> but lets see if they actually use that extraFds in real world
[01:21:36] <Piru> phew. m_curlMultiHandle->poll({ }, selectTimeoutMS);
[01:41:27] *** Quits: fbegyn (~fbegyn@user/fbegyn) (Quit: WeeChat 3.3)
[01:41:59] *** Joins: fbegyn (~fbegyn@user/fbegyn)
[01:42:40] *** Joins: rgrinberg (~textual@187.223.209.255)
[02:09:05] *** Quits: magla (~gelignite@55d48ba2.access.ecotel.net) (Quit: Stay safe!)
[02:22:59] *** Joins: z_lehinsun_ (~lehinsun@188.244.142.69)
[02:23:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:25:51] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Ping timeout: 256 seconds)
[02:29:09] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:34:32] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:4d36:beb1:772c:20e) (Quit: Konversation terminated!)
[02:35:02] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 240 seconds)
[02:42:36] *** Joins: rgrinberg (~textual@187.223.209.255)
[02:47:47] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:03:15] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[04:03:03] *** blinky43 is now known as blinky42
[04:03:43] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[04:03:52] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[04:03:52] *** Joins: blinky42 (~quassel@user/blinky42)
[04:15:11] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:36:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:39:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:43:32] *** Joins: icing (~stefan@user/icing)
[04:44:42] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[04:47:51] *** Quits: icing (~stefan@user/icing) (Ping timeout: 245 seconds)
[04:51:31] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:54:27] *** Joins: sakhd__ (~lehinsun@188.113.178.220)
[04:56:50] *** Quits: z_lehinsun_ (~lehinsun@188.244.142.69) (Ping timeout: 250 seconds)
[05:27:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:33:57] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:36:15] *** Quits: {4144} (~{4144}@46.56.70.224) (Ping timeout: 256 seconds)
[05:48:59] *** Joins: rgrinberg (~textual@187.223.209.255)
[05:49:36] *** Joins: {4144} (~{4144}@46.56.69.241)
[06:21:01] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[06:36:44] *** Joins: keypusher (keypusher@user/keypusher)
[06:43:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[06:43:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:47:35] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[06:49:23] *** Joins: rgrinberg (~textual@187.223.209.255)
[07:36:04] *** Quits: tap73 (~tap73@185.236.203.99) (Quit: WeeChat 3.3)
[07:40:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:57:40] *** Joins: jfuller (~jimfuller@ip-85-160-1-129.eurotel.cz)
[08:06:14] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:28:44] *** Quits: jfuller (~jimfuller@ip-85-160-1-129.eurotel.cz) (Ping timeout: 250 seconds)
[08:50:14] *** Joins: jfuller (~jimfuller@2.100.broadband6.iol.cz)
[08:54:39] *** Joins: tap73 (~tap73@185.236.203.99)
[09:25:11] *** Quits: rnsanchez (~rnsanchez@179.233.249.52) (Ping timeout: 256 seconds)
[09:37:01] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[09:38:04] *** Joins: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe)
[09:38:18] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[09:39:18] *** Joins: rgrinberg (~textual@187.223.209.255)
[09:40:40] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[09:47:12] *** Joins: spare (~f4j5g2otj@user/spareproject)
[10:03:14] *** Quits: GodEater (~godeater@user/godeater) (Remote host closed the connection)
[10:04:33] *** Joins: GodEater (~godeater@user/godeater)
[10:28:30] *** Joins: kdudka (kdudka@nat-pool-brq-t.redhat.com)
[10:31:18] *** Quits: spare (~f4j5g2otj@user/spareproject) (Remote host closed the connection)
[10:31:30] *** Joins: spare (~f4j5g2otj@user/spareproject)
[10:33:04] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[10:33:22] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[10:44:23] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:46:10] *** Joins: icing (~stefan@user/icing)
[10:50:17] *** Quits: icing (~stefan@user/icing) (Ping timeout: 240 seconds)
[10:58:14] *** Joins: rgrinberg (~textual@187.223.209.255)
[11:13:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6) (Ping timeout: 240 seconds)
[11:14:01] *** Quits: sam_ (~sam@gentoo/developer/sam) (Read error: Connection reset by peer)
[11:16:24] *** Quits: gslin (~gslin@114-34-121-114.hinet-ip.hinet.net) (Ping timeout: 256 seconds)
[11:16:49] *** Joins: gslin (~gslin@114-34-121-114.hinet-ip.hinet.net)
[11:22:24] *** Joins: icing (~stefan@2001:16b8:f358:9f00:943d:b91b:3207:2ba5)
[11:22:24] *** Quits: icing (~stefan@2001:16b8:f358:9f00:943d:b91b:3207:2ba5) (Changing host)
[11:22:24] *** Joins: icing (~stefan@user/icing)
[11:25:12] *** Joins: sam_ (~sam@gentoo/developer/sam)
[11:28:28] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:34:08] *** Quits: rgrinberg (~textual@187.223.209.255) (Remote host closed the connection)
[11:35:51] *** Joins: rgrinberg (~textual@187.223.209.255)
[11:45:51] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[12:00:34] <bagder> it is interesting to ask people on twitter about curl features vs asking people on the curl-users mailing list
[12:01:31] <bagder> clearly different audiences
[12:01:37] <jfuller> it is ;)
[12:02:18] * jfuller worries I might be seen as a lurker ;)
[12:02:44] <bagder> I think soon 50 people on twitter have told me curl should make "doing json easier", while when I've asked about it on the mailing list the mere thought of it was pretty much shot down...
[12:02:51] *** Joins: Vonter (~Vonter@user/vonter)
[12:03:49] <jfuller> keeping libcurl focused on libcurl things is good ... curl tool however has more freedom
[12:04:25] <jfuller> same dangers of expansion of scope ... but if the ppl want to work with json ... I am not going to argue with them
[12:04:45] <bagder> there's always that risk yes
[12:15:56] *** Joins: dege (~dege@user/dege)
[12:19:00] <kushal> bagder, twitter is much more hipster :p
[12:20:03] <bagder> also more casual users
[12:20:10] <bagder> of curl I mean
[12:20:22] <bagder> you have to be fairly "into" it to subscribe to curl-users in the first place
[12:20:40] <bagder> and mailing lists is a tech the kids don't even know what it is...
[12:20:49] <kushal> bagder, that reminds me, I should join 
[12:20:56] <bagder> hehe
[12:21:41] <kushal> bagder, also in our summer training, we trying to teach about communication before tools/coding etc https://summertraining.readthedocs.io/en/latest/commguidelines.html 
[12:22:04] <kushal> specially about *plain text emails*, not doing top posting etc.
[12:22:06] <dege> yay, received a curl yubikey this morning
[12:22:13] <bagder> nice!
[12:23:21] <bagder> so maybe linux foundation isn't completely useless =)
[12:24:26] <kushal> What is a "Curl Yubikey"?
[12:24:48] <bagder> OpenSSF donated some to curl maintainters
[12:25:06] <bagder> maintainters is a fun typo actually... =)
[12:26:15] <dege> an accurate typo
[12:26:21] <bagder> #8093
[12:26:22] -curelbot- [GitHub] Issue #8093: Would curl like some free MFA tokens? Please tell us by 2021-12-20 and preferably sooner! (https://github.com/curl/curl/issues/8093)
[12:28:50] <kushal> bagder, ah, nice :)
[12:31:01] *** Joins: kdudka_ (kdudka@nat-pool-brq-t.redhat.com)
[12:33:34] *** Quits: kdudka (kdudka@nat-pool-brq-t.redhat.com) (Ping timeout: 250 seconds)
[12:35:07] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:44:02] <bagder> if firefox is unstable for you, try disabling http3 in about:config
[12:44:28] <zelest> about:config -> network.http.http3.enabled=false
[13:08:46] <bagder> #8272 => the latest hackerone report converted into a regular PR
[13:08:49] -curelbot- [GitHub] PR #8272: formdata: avoid size_t => long typecast overflows (https://github.com/curl/curl/pull/8272)
[13:12:09] *** Quits: spare (~f4j5g2otj@user/spareproject) (Remote host closed the connection)
[13:12:30] <ajak> no security impact, i guess?
[13:13:27] <bagder> correct, discussed at length really
[13:13:49] <bagder> (in the not yet disclosed report)
[13:14:51] <ajak> yeah, tried to look so that's why i asked :)
[13:15:15] <bagder> it affects the deprecated API curl_formadd()'s buffer option
[13:15:27] <bagder> but if you do as the docs say, there is no security impact
[13:15:38] <bagder> if you go beyond that, and use win64, there's a tiny tiny risk
[13:17:27] *** Joins: p-i- (~Ohmu@mx-ll-183.89.31-199.dynamic.3bb.co.th)
[13:20:02] <bagder> the docs say "pass in the buffer size as a long"
[13:20:13] <bagder> if you pass in -1 there, things go wrong
[13:20:29] <bagder> but I claim that's not a buffer size anymore...
[13:33:51] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk) (Quit: Leaving)
[13:39:36] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-3d8b-1f80-ab8f-9df3.ip6.gigabit.dk)
[13:48:11] *** Joins: uid_max (~samw@host81-159-60-189.range81-159.btcentralplus.com)
[13:58:44] *** Joins: spare (~f4j5g2otj@user/spareproject)
[14:03:33] <kushal> strange, I never received the mail from the curl users list subscription request.
[14:41:30] *** Joins: gryffus (~gryffus@81.19.2.214)
[14:42:07] *** Quits: dege (~dege@user/dege) (Ping timeout: 256 seconds)
[14:44:15] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[14:46:08] <bagder> kushal: checked spam folder etc?
[14:57:49] <kushal> ooo, stupid me.
[14:57:57] <kushal> bagder, landed in spam :(
[14:58:43] <bagder> there's a dangerous haxx there in the name!
[14:59:23] <Piru> haxxing still are we?
[15:00:32] <jfuller> bagder: u know this already that haxx, curl etc domains have no DMARC
[15:00:47] <bagder> yes
[15:00:57] <cmeister2> @bagder: got a response from the internal people. I have to circle back a little on it, their response is strange
[15:02:23] <jfuller> bagder: I've lost the thread on DMARC ... what it is and if it means anything these days
[15:04:10] <cmeister2> I don't think curl has had any RCEs in the recent future has it?
[15:04:31] <Piru> theoretical one
[15:04:41] <Piru> but I would have had to have very fine heap control
[15:05:09] <Piru> very dependant on the environment and application using libcurl, too
[15:05:46] <Piru> but I had control of use-after-free buffer that was deferenced for function ptr
[15:05:52] <bagder> there's been no buffer overflow since Sep 2019
[15:06:06] <bagder> at right, there was that UAF
[15:06:23] <Piru> so you would have had to a) bypass ASLR with infoleak b) be able to massage the heap buffer precisely
[15:07:40] <Piru> I had a poc where I disabled ASLR and had app doing precisely the "wrong" things and then had constructed allocations in specific way
[15:07:58] <Piru> it did result in code exec. but this is totally artificial setup
[15:09:06] *** Joins: magla (~gelignite@55d43516.access.ecotel.net)
[15:09:47] <Piru> so technically kind of yes, in practice no
[15:11:15] <Piru> uaf with heap is far more difficult to pull off vs good-old stack buffer overflow with control of the return address
[15:15:02] <Piru> even stack buffer overlfow is hard these days due to the mitigations in modern platforms. however, libcurl being used in all kind of embedded systems without those makes it far more juicy target. this is why it's really good that so much emphasis is put on the quality and security of libcurl
[15:15:10] <Piru> overflow*
[15:36:52] *** Quits: p-i- (~Ohmu@mx-ll-183.89.31-199.dynamic.3bb.co.th) (Ping timeout: 250 seconds)
[15:40:51] <bagder> Mozilla says the Firefox issue is "fixed" and a restart is all it takes...
[15:40:59] <bagder> I'm puzzled by that
[15:41:08] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[15:41:14] <bagder> the bug is said to be an infinite loop in the http3 code
[15:41:36] <bagder> that doesn't get fixed with a restart, at least my bugs rarely are fixed like that =)
[15:45:32] <bagder> time to look at cert verification for h3 in curl+quiche
[15:45:42] <bagder> they've added an API for me now
[15:45:51] <icing> very nice of them
[15:46:09] *** Joins: geli (~gelignite@55d43fe5.access.ecotel.net)
[15:46:32] <icing> quiche.is_cert_ok_for_curl()
[15:46:58] <bagder> I should have asked for that!
[15:47:35] <bagder> quiche_conn_peer_cert() is much more boring
[15:48:04] <icing> hard to pronounce as well, if you are not Welsh.
[15:48:12] <Piru> bagder: maybe they mean restart after installing the latest update? ;)
[15:48:29] <bagder> Piru: the bug isn't fixed yet =)
[15:48:34] *** Quits: magla (~gelignite@55d43516.access.ecotel.net) (Ping timeout: 250 seconds)
[15:48:42] <bagder> at least not mentioned so in the bug
[15:48:46] *** Joins: jellyknight (~gelignite@55d4319d.access.ecotel.net)
[15:48:47] <icing> one of the future restarts will fix it
[15:48:55] <bagder> "keep restarting"
[15:49:09] <icing> there is no absolute time in the universe
[15:49:10] <Piru> heh
[15:49:24] <Piru> forward looking statement
[15:49:33] <bagder> hm or is it fixed
[15:49:46] <icing> who can say with h3? =)
[15:50:46] <Piru> schrödinbug
[15:51:18] <Piru> both fixed and unfixed and you can't know for sure which.
[15:51:29] <bagder> it seems it *is* fixed
[15:51:39] *** Quits: geli (~gelignite@55d43fe5.access.ecotel.net) (Ping timeout: 256 seconds)
[15:51:53] <bagder> and a restart updates it, apparently. not for me on debian though
[15:51:54] *** Joins: magla (~gelignite@55d4b5f5.access.ecotel.net)
[15:52:14] <Piru> you're using unsupported platform
[15:52:24] <bagder> my fault clearly
[15:52:38] <Piru> oh sorry, heisenbug even
[15:53:11] <Piru> schrödinbug is "a bug that manifests itself in running software after a programmer notices that the code should never have worked in the first place."
[15:53:29] <Piru> we've all been there though
[15:53:39] <bagder> absolutely
[15:53:59] <icing> modern cpus have instruction types such as "branch if programmers not looking"
[15:54:04] <bagder> I recall even having broken Firefox pretty badly at least once =)
[15:54:05] *** Quits: jellyknight (~gelignite@55d4319d.access.ecotel.net) (Ping timeout: 256 seconds)
[15:54:26] <bagder> makes your pulse race a little
[15:57:24] *** Quits: icing (~stefan@user/icing) (Quit: Leaving...)
[16:03:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:08:15] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[16:08:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:09:05] <bagder> https://www.openssl.org/docs/man3.0/man3/i2d_X509_fp.html
[16:09:08] <bagder> that man page...
[16:09:21] <bagder> and then in the end it doesn't even say which include file I also need to include
[16:10:29] *** Joins: Vonter (~Vonter@user/vonter)
[16:12:57] <sam_> is openssl one of those pizza places in movies
[16:13:07] <sam_> where you're not actually supposed to order anything because it's a front for the mob
[16:14:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:15:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:16:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:17:59] <bagder> ok, I could add a check for the name in the cert
[16:18:10] <bagder> verifying that it is also signed by a trusted CA turned harder
[16:20:26] *** Joins: Vonter (~Vonter@user/vonter)
[16:22:02] <bagder> except perhaps for the minor detail that valgrind went crazy on it
[16:22:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:27:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:29:23] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:34:19] <Piru> pinning are we?
[16:34:45] * Piru probably missed some earlier discussion
[16:35:14] <bagder> nah, its mostly that the quiche guys haven't really though through how this should be done
[16:35:29] <bagder> "what, you need to verify the cert?"
[16:35:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:35:38] *** Quits: spare (~f4j5g2otj@user/spareproject) (Remote host closed the connection)
[16:35:41] <Piru> ah just the normal verify stuff I guess
[16:35:49] <Piru> yes
[16:36:00] <bagder> yeah, but they don't expose the ssl stuff for me to enable the peer verification
[16:36:10] <Piru> this is a highly complex and error prone thing btw. way way way too fragile imho
[16:36:12] <bagder> nor to set the CA bundle
[16:36:28] <Piru> oh .. darn
[16:36:35] <Piru> things will get hairy then
[16:36:55] <bagder> yes, or I need to convince them to provide a better way 
[16:38:00] <Piru> so basically there is no context of any king.. just "you do the right thing here" ?
[16:38:04] <Piru> kind*
[16:38:24] <bagder> they've hidden boringssl very good from the api, yes
[16:39:11] <Piru> not very optimal heh
[16:39:17] <bagder> nopes
[16:39:44] <Piru> "just grab your own context and do the things needed!"
[16:39:44] <bagder> https://github.com/cloudflare/quiche/issues/1127 
[16:39:45] -curelbot- [GitHub] Issue #1127: quiche_conn_peer_cert returns pointer to freed data? (https://github.com/cloudflare/quiche/issues/1127)
[16:41:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:42:37] <cmeister2> @bagder: ossfuzz 43515 actually does look like a leak. some issue with mqtt sendleftovers i expect
[16:42:52] <bagder> I spotted your comment, thanks
[16:43:06] <cmeister2> np. I know ossfuzz has been super flaky :(
[16:43:25] <cmeister2> thought I'd do the due diligence :)
[16:44:33] <cmeister2> (btw it wasn't a slight at you, I literally only just thought to check that report)
[16:45:00] <bagder> that was good, I took it for granted it was yet another crazy one
[16:47:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:49:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:55:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:01:29] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:07:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:09:32] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:13:56] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[17:15:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:20:24] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:23:31] *** Joins: zv (~me@zv.io)
[17:26:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:26:51] <Piru> bagder: I think I spotted a bug in curl_multi_poll
[17:28:31] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:33:54] <Piru> bagder: curl_multi_poll() is said to be interruptable with curl_multi_wakeup(). it won't be if there are no fds to select: in this case it calls Curl_wait_ms() that is not interruptable. I think the correct way would be to perform the poll etc it does atm, even for nfds == 0. then it would be interruptable as expected
[17:34:24] <Piru> or did I miss something...
[17:35:00] <Piru> wait I think I possibly have. ok, nfds is always nonzero for !USE_WINSOCK when ENABLE_WAKEUP
[17:35:14] <Piru> disregard :)
[17:36:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:38:03] *** Quits: dch_ (sid1310@tinside.irccloud.com) ()
[17:38:23] *** Joins: dch (sid1310@couchdb/committer/dch)
[17:38:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:45:40] *** Joins: spare (~f4j5g2otj@user/spareproject)
[17:55:11] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:01:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:05:01] *** Joins: Vonter (~Vonter@user/vonter)
[18:05:51] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:09:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[18:13:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:16:14] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:17:14] *** Joins: Vonter (~Vonter@user/vonter)
[18:21:14] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[18:22:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:28:55] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:31:43] <_val_> Hi all. So when using a browser like firefox and going to https://status.somedomain.tld/?apikey=xxxxxx  I am able to show the status of a few services which I am monitoring. When using curl.. It is showing me no error but does not show the data. For example, the browser shows Status: OK in green.. but this data is nowere when using curl. 
[18:32:23] <bagder> _val_: redirect? javascript?
[18:32:32] <bagder> or even plain images
[18:33:39] <_val_> bagder: Yes, javascript 
[18:33:46] <_val_> At least that's what I see in the source
[18:35:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:38:00] <_val_> bagder: the final idea is to dump this in json and parse the status of a few services
[18:38:25] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:39:36] <bagder> if there's a lot of logic in javascript it can be tricky
[18:40:15] <_val_> Using `Inspect Elements` functionality within the browser, I am able to make the output to json
[18:44:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:45:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[18:45:30] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[18:50:37] *** Quits: gryffus (~gryffus@81.19.2.214) (Remote host closed the connection)
[18:51:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:51:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:52:59] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:54:32] *** Joins: kdudka__ (kdudka@nat-pool-brq-t.redhat.com)
[18:55:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:57:07] *** Quits: kdudka_ (kdudka@nat-pool-brq-t.redhat.com) (Ping timeout: 256 seconds)
[18:58:46] *** Joins: rgrinberg (~textual@187.223.209.255)
[18:59:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:01:37] *** Quits: rgrinberg (~textual@187.223.209.255) (Remote host closed the connection)
[19:03:11] *** Joins: rgrinberg (~textual@187.223.209.255)
[19:08:46] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 250 seconds)
[19:09:45] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[19:11:01] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[19:13:46] <Piru> cool. got it working, recent webkit running ok
[19:15:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:15:59] <bagder> \o/
[19:16:24] <_val_> bagder: I read something about phantomJS but hmm that is too much for me to handle
[19:17:16] <bagder> _val_: often you can figure out what what the javascript does and then do just that "manually"
[19:17:33] <bagder> but "often" is not "always" ...
[19:21:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[19:23:33] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:26:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:27:01] <_val_> Hmm.. I am not so verse in javascript :/
[19:28:18] <bagder> sometimes use the network inspection tool in the browser shows it doing sub requests that get the data you want
[19:28:24] <bagder> use of
[19:30:11] *** Quits: obiiz (~obiwatrix@2001:470:69fc:105::1:25c0) (Quit: You have been kicked for being idle)
[19:31:44] <bagder> "Spelling of network.http.http3.priorization is incorrect" awesome Firefox bug =)
[19:33:28] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 250 seconds)
[19:35:48] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:36:37] *** Quits: jfuller (~jimfuller@2.100.broadband6.iol.cz) (Ping timeout: 256 seconds)
[19:46:06] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:53:10] *** Joins: sayan (uid15285@dgplug/sayan)
[20:01:06] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[20:01:52] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[20:02:37] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[20:04:32] *** Joins: Vonter (~Vonter@user/vonter)
[20:08:27] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:09:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[20:14:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[20:19:28] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:32:30] *** Quits: kdudka__ (kdudka@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:48:02] *** Quits: spare (~f4j5g2otj@user/spareproject) (Remote host closed the connection)
[20:49:37] *** Joins: spare (~f4j5g2otj@user/spareproject)
[20:51:44] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 252 seconds)
[20:56:14] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:58:48] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:13] *** Quits: uid_max (~samw@host81-159-60-189.range81-159.btcentralplus.com) (Ping timeout: 256 seconds)
[21:15:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[21:20:24] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[21:23:56] *** Quits: spare (~f4j5g2otj@user/spareproject) (Remote host closed the connection)
[21:24:05] *** Joins: spare (~f4j5g2otj@user/spareproject)
[21:29:20] *** Joins: marlinc (~marlinc@user/marlinc)
[21:29:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[21:35:43] *** Quits: marlinc (~marlinc@user/marlinc) (Read error: Connection reset by peer)
[21:39:26] *** Joins: marlinc (~marlinc@user/marlinc)
[21:39:34] *** Quits: marlinc (~marlinc@user/marlinc) (Read error: Connection reset by peer)
[21:39:57] *** Joins: marlinc (~marlinc@user/marlinc)
[21:40:42] *** Quits: marlinc (~marlinc@user/marlinc) (Read error: Connection reset by peer)
[21:44:20] *** Joins: marlinc (~marlinc@user/marlinc)
[21:56:55] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[22:06:53] *** Joins: greyltc__ (~greyltc@user/greyltc)
[22:09:02] <greyltc__> Hi. The `-G,--get` option does this great thing where it forms all my --data things into query parameters and appends them to the URL with a ?
[22:09:59] <greyltc__> I would like to use that feature while doing a POST. Some of the github API needs this sort of thing
[22:11:08] <greyltc__> Is that possible? Why should the Query syntax features be limited to GET?
[22:11:54] <greyltc__> here's an API example i'm talking about: https://docs.github.com/en/rest/reference/releases#upload-a-release-asset
[22:12:40] <greyltc__> That needs a POST request with a Query-type URL
[22:23:33] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[22:25:31] <Piru> so just form the url yourself.
[22:25:36] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[22:25:54] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[22:27:37] <Piru> also, that API request does not have any GET parameters.
[22:28:50] <greyltc__> i could form it myself, but I was hoping to take advantage of --data-urlencode
[22:29:05] <Piru> it doesn't have any GET parameters
[22:29:07] <Piru> what's the point?
[22:29:26] <greyltc__> it's a POST
[22:29:30] <Piru> I think you're confusing URL path and parameters here
[22:30:09] <greyltc__> but curl's --get option forms the URL the way the API needs
[22:30:40] <Piru> no it doesn't
[22:31:16] <greyltc__> it really does!
[22:31:49] <Piru> so show me. how do you get the path in that POST request with -G .. lets assume it'd be a GET with that path
[22:32:08] <greyltc__> https://man.archlinux.org/man/curl.1#G,
[22:32:26] <greyltc__> "The data will be appended to the URL with a '?' separator."
[22:32:45] <greyltc__> There's no other curl option that does this.
[22:32:58] <Piru> so where is that ? -separator in trat API example?
[22:33:10] <greyltc__> yeah, the api docs are crap
[22:33:19] <Piru> no they're fine
[22:33:45] <greyltc__> they're labeled as "query" in the "in" column of the table
[22:33:59] <greyltc__> they confused you ;-)
[22:34:02] <Piru> ok fine.
[22:34:18] <Piru> fair enough. there could be an option for that
[22:34:30] <greyltc__> It would be helpful!
[22:35:29] <Piru> should be easy to add I guess, so PR away :)
[22:36:06] <Piru> there are issues though
[22:36:36] <greyltc__> the api needs something like this --> POST /repos/greyltc/docker-archlinux/releases/57045129/assets?name=docker-archlinux-x86_64.tar.xz&label=some_words
[22:36:44] <Piru> it would need to somehow diffrentiate between what is URL parameter and what is a POST parameter
[22:36:59] <greyltc__> yeah, that's right
[22:37:23] <Piru> so it couldn't be a single option like -G at least
[22:37:52] <Piru> but yes. I was confused, you were not. sorry :)
[22:37:57] <greyltc__> maybe like a `-Q,--query` option, you'd pass it once to turn it on, and then you optionally can pass it again to turn it off
[22:38:17] <greyltc__> and any --data things in between et collected into the url
[22:38:27] <greyltc__> no prob! :-)
[22:39:14] <Piru> it could work, I think curl option parser is flexible enough
[22:40:56] *** Quits: lazyreader (~lazyreade@user/lazyreader) (Read error: Connection reset by peer)
[22:42:01] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 245 seconds)
[22:42:25] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[22:42:35] <Piru> but I see the problem, you'd need to separately url encode those parameters
[22:42:47] <greyltc__> exactly
[22:46:15] <greyltc__> i'm looking through curl's code to see where `-G,--get` does this URL manipulation
[22:46:37] <greyltc__> are you familiar enough wit it to know exactly where to look?
[22:48:04] <Piru> https://github.com/curl/curl/blob/b6acbdeb6375c9552fd4b04d5ab38422ed25fbaf/src/tool_getparam.c#L290
[22:49:38] <Piru> it's rather complicated arg parser
[22:49:57] *** Joins: gryffus (~gryffus@150.254.broadband2.iol.cz)
[22:50:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[22:51:03] *** Joins: gryffus_ (~gryffus@150.254.broadband2.iol.cz)
[22:51:03] *** Quits: gryffus (~gryffus@150.254.broadband2.iol.cz) (Read error: Connection reset by peer)
[22:52:15] <Piru> far from the typical getopt or getopt_long you often see, but here's that a good thing. because if it was just getopt kind of thing it wouldn't allow adding on/off option that changes behaviour of other options on the fly. I'm not sure how receptive people are to options like this though. maybe they'll chime in once they're back
[22:56:35] <Piru> there might be some objections for it on the basis that it could be odd to have similar option to -G that behaves slightly different.
[23:01:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:03:15] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[23:03:33] *** Joins: xse (~xse@user/xse)
[23:04:08] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[23:04:25] *** Joins: xse (~xse@user/xse)
[23:09:55] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:11:24] <greyltc__> i would strip the url modification stuff out of -G and move it into this new option that can add the query parameters to the URL for any request type, not just GET
[23:11:41] <greyltc__> but that's not a backwards compatible change
[23:11:48] <greyltc__> so I assume it's a no-go
[23:13:31] <Piru> I would believe so, any change to commandline options need some care
[23:14:46] <Piru> changes to currently existing options could break ton of infrastructure etc
[23:22:20] *** Joins: kdudka (~kdudka@11.198.broadband2.iol.cz)
[23:24:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:31:57] *** Quits: kdudka (~kdudka@11.198.broadband2.iol.cz) (Remote host closed the connection)
[23:33:28] *** Joins: kdudka (~kdudka@11.198.broadband2.iol.cz)
[23:35:21] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[23:41:21] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:43:19] *** Quits: spare (~f4j5g2otj@user/spareproject) (Remote host closed the connection)
[23:49:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:50:46] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:55:54] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:59:06] *** Joins: yitz (~yitz@exercism/yitz)
[23:59:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
