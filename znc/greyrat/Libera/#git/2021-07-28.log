[00:06:49] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:10:31] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:10:39] *** Joins: skapata (~Skapata@user/skapata)
[00:11:18] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:13:27] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:18:45] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:19:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:19:23] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:19:47] *** Joins: tejr (~tejr@user/tejr)
[00:25:32] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[00:25:45] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[00:26:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:27:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:33:22] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:34:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[00:35:17] *** Gustavo6046_ is now known as Gustavo6046
[00:38:06] *** Joins: Samian (~Sami@163.114.130.4)
[00:39:33] *** Quits: atharvaraykar (~Thunderbi@user/atharvaraykar) (Ping timeout: 250 seconds)
[00:40:33] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[00:40:58] *** Joins: rahl- (~rahl@102.114.88.46)
[00:43:57] *** Quits: rahl (~rahl@102.114.94.84) (Ping timeout: 265 seconds)
[00:49:58] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (Read error: Connection reset by peer)
[00:50:17] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[00:50:49] *** Quits: Guest966 (~Guest9@43.242.116.41) (Quit: Connection closed)
[00:51:38] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[00:52:33] *** Quits: CommunistWolf (~gulag@user/communistwolf) (Ping timeout: 250 seconds)
[00:52:37] *** Joins: corelax_ (~corelax@pl37038.ag2525.nttpc.ne.jp)
[00:53:09] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Ping timeout: 268 seconds)
[00:53:09] *** Quits: corelax (~corelax@pl37038.ag2525.nttpc.ne.jp) (Ping timeout: 268 seconds)
[00:55:40] *** Joins: CommunistWolf (~gulag@user/communistwolf)
[00:55:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[00:57:02] *** Joins: nuala2 (~nuala@user/nuala)
[00:57:12] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 245 seconds)
[00:58:11] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[00:59:08] *** Quits: ThorMojito (~Adium@166.62.248.233) (Quit: Leaving.)
[01:01:35] *** Quits: nuala2 (~nuala@user/nuala) (Ping timeout: 258 seconds)
[01:11:21] *** Joins: christall (~christall@24.235.88.243)
[01:12:59] *** Quits: kobaz_ (~kobaz@cpe-74-67-47-183.nycap.res.rr.com) (Ping timeout: 252 seconds)
[01:16:24] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:16:33] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:18:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[01:19:12] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:20:55] *** Joins: Raguile (~Raguile@user/raguile)
[01:31:22] *** Joins: Guest98 (~Guest98@88-115-235-153.elisa-laajakaista.fi)
[01:42:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:44:14] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[01:47:09] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[01:50:16] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:a:13dd:7c09:9436)
[01:53:20] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[01:53:43] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[01:54:46] *** Joins: durham_ (~durham@2620:10d:c091:480::1:972c)
[01:55:36] *** Joins: durham__ (~durham@2620:10d:c091:480::1:972c)
[01:55:37] *** Quits: durham_ (~durham@2620:10d:c091:480::1:972c) (Read error: Connection reset by peer)
[01:55:42] *** Quits: durham (~durham@2620:10d:c091:480::1:972c) (Ping timeout: 256 seconds)
[01:58:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[01:59:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:00:11] <osse> AbleBacon: you will have to create a new commit to revert it and push that
[02:00:23] <AbleBacon> that's what i ended up doing. thanks
[02:00:49] <osse> it is possible to do that without physically touching the submodule, but it's a bit of a hassle
[02:00:53] <osse> at least the method I know
[02:02:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[02:02:43] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:03:06] *** Quits: Guest98 (~Guest98@88-115-235-153.elisa-laajakaista.fi) (Quit: Client closed)
[02:03:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[02:06:43] *** Joins: Trieste (T@user/pilgrim)
[02:08:47] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[02:09:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:09:56] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:10:38] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:12:16] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[02:12:49] *** Joins: Trieste (T@user/pilgrim)
[02:14:48] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 272 seconds)
[02:16:37] *** Joins: eqw (~eqw@31.134.178.99)
[02:20:38] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[02:21:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:21:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:22:08] *** Joins: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net)
[02:23:02] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[02:23:46] *** Joins: christall (~christall@24.235.88.243)
[02:25:48] *** Quits: gas51627 (uid91066@id-91066.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[02:26:08] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 255 seconds)
[02:28:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[02:29:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:29:14] *** Joins: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642)
[02:33:12] *** Joins: nuala2 (~nuala@user/nuala)
[02:37:00] *** Joins: gast0n (~g4570n@user/gast0n)
[02:37:29] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:37:55] *** Joins: clf59 (~clf59@user/clf59)
[02:37:59] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 268 seconds)
[02:45:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:46:58] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:47:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[02:49:44] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[02:50:04] *** Quits: clf59 (~clf59@user/clf59) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:50:14] *** Joins: christall (~christall@24.235.88.243)
[02:52:39] *** Joins: clf59 (~clf59@user/clf59)
[02:54:10] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[02:55:00] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 276 seconds)
[02:56:48] <AbleBacon> i think a "stash" might be appropriate in that case as well ðŸ¤”
[02:57:02] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[02:59:49] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[03:03:05] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:04:15] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:05:27] *** Joins: christall (~christall@24.235.88.243)
[03:05:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[03:06:06] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:07:19] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:07:39] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[03:08:54] *** Joins: christall (~christall@24.235.88.243)
[03:11:01] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[03:11:41] *** Joins: christall (~christall@24.235.88.243)
[03:11:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[03:12:04] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:20:21] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[03:21:12] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[03:27:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[03:28:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[03:28:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:28:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:29:00] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:30:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:30:50] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[03:32:12] *** dermato_ is now known as dermato
[03:33:50] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[03:37:09] *** Quits: dermato (~dermatobr@154.21.114.128) (Quit: WeeChat 3.1)
[03:38:21] *** Joins: dermato (~dermatobr@154.21.114.128)
[03:40:19] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[03:40:31] *** Joins: tolot (~tolot@dynamic-093-133-129-254.93.133.pool.telefonica.de)
[03:49:59] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[03:50:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[03:53:21] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[03:54:31] *** Joins: nrg (~NRG@user/nrg)
[03:54:33] *** Joins: milosz_ (~milosz@user/milosz)
[03:55:28] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[03:58:18] *** Quits: milosz (~milosz@user/milosz) (Ping timeout: 258 seconds)
[03:59:03] *** Quits: nrg (~NRG@user/nrg) (Client Quit)
[04:04:13] *** Joins: nrg (~NRG@user/nrg)
[04:06:04] *** Joins: christall (~christall@24.235.88.243)
[04:13:39] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 276 seconds)
[04:26:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:26:34] *** Joins: hubble (~hubble@pool-71-120-25-37.washdc.fios.verizon.net)
[04:30:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:30:32] *** Joins: igemnace (~ian@user/igemnace)
[04:30:34] *** Joins: hubble63 (~hubble@69.160.255.199)
[04:31:07] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:33:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[04:34:07] *** Quits: hubble (~hubble@pool-71-120-25-37.washdc.fios.verizon.net) (Ping timeout: 246 seconds)
[04:35:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[04:36:07] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:36:45] *** Joins: jimklimov (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz)
[04:36:56] *** Quits: pizdets_ (~pizdets@183.182.110.214) (Ping timeout: 252 seconds)
[04:36:59] *** Quits: christall (~christall@24.235.88.243) ()
[04:37:37] *** Quits: hubble63 (~hubble@69.160.255.199) (Ping timeout: 246 seconds)
[04:40:18] *** Quits: jimklimov1 (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[04:44:54] *** Quits: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net) (Read error: No route to host)
[04:45:14] *** Joins: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net)
[04:47:39] *** Joins: hbautista (~hbautista@187.171.120.24)
[04:56:27] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[04:57:07] *** Joins: ferdna (~ferdna@user/ferdna)
[05:01:45] *** Joins: pizdets (~pizdets@183.182.115.135)
[05:02:22] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:02:35] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:05:01] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:09:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:15:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:16:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:26:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:28:05] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[05:32:37] *** Quits: fructose (~fructose@user/fructose) (Ping timeout: 245 seconds)
[05:33:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[05:34:51] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:38:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:41:31] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[05:43:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[05:47:33] *** Quits: rahl- (~rahl@102.114.88.46) (Ping timeout: 252 seconds)
[05:49:09] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[05:49:10] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[05:51:08] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[05:53:00] *** Joins: Raguile (~Raguile@user/raguile)
[05:57:18] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[06:01:53] *** Joins: igemnace (~ian@user/igemnace)
[06:02:33] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[06:03:16] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[06:03:17] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:05:15] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:09:24] *** Joins: gast0n (~g4570n@user/gast0n)
[06:13:13] *** Quits: hposca (~hposca@node-1w7jr9phoke2t9sajlv8zcl7c.ipv6.telus.net) (Remote host closed the connection)
[06:13:31] *** Joins: hposca (~hposca@node-1w7jr9phoke2t3ov4z0ok1wpo.ipv6.telus.net)
[06:14:57] *** Quits: hbautista (~hbautista@187.171.120.24) (Remote host closed the connection)
[06:22:13] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:26:07] *** Quits: hposca (~hposca@node-1w7jr9phoke2t3ov4z0ok1wpo.ipv6.telus.net) (Remote host closed the connection)
[06:27:35] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[06:28:17] *** Joins: hubble (~hubble@69.160.255.136)
[06:31:54] *** Joins: bongobrown (~omary@cpe-76-185-215-2.satx.res.rr.com)
[06:32:22] *** Joins: hbautista (~hbautista@2806:10a6:e:3539::2)
[06:32:36] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:34:45] *** Joins: hbautista_ (~hbautista@187.171.102.76)
[06:36:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 276 seconds)
[06:37:03] *** Quits: Samian (~Sami@163.114.130.4) (Ping timeout: 252 seconds)
[06:37:19] *** Quits: hubble (~hubble@69.160.255.136) (Ping timeout: 246 seconds)
[06:37:52] *** Quits: hbautista (~hbautista@2806:10a6:e:3539::2) (Ping timeout: 268 seconds)
[06:40:53] *** Joins: tolot_ (~tolot@dynamic-093-132-038-055.93.132.pool.telefonica.de)
[06:40:57] *** Joins: lechner (~lechner@debian/lechner)
[06:42:40] <lechner> Hi do "git clone" etc. sometimes suppress the usual output in scripting environments?
[06:43:01] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[06:43:02] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[06:43:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:44:39] *** Quits: tolot (~tolot@dynamic-093-133-129-254.93.133.pool.telefonica.de) (Ping timeout: 268 seconds)
[06:55:59] *** Joins: Samian (~Sami@2620:10d:c091:480::1:a1c)
[06:59:14] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 258 seconds)
[06:59:55] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:59:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (mercury.libera.chat (Nickname regained by services)))
[06:59:55] *** finn_elija is now known as FinnElija
[07:01:02] *** Joins: jiffe (~jiffe@mail.nsab.us)
[07:14:13] *** Joins: vicfred (~vicfred@user/vicfred)
[07:14:50] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[07:16:39] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 252 seconds)
[07:22:40] *** Quits: thiago (~thiago@2601:1c0:4501:635c:a497:34ac:84c:cb98) (Ping timeout: 256 seconds)
[07:29:30] *** Quits: Samian (~Sami@2620:10d:c091:480::1:a1c) (Ping timeout: 240 seconds)
[07:39:16] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:49:24] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[07:52:23] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:54:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[08:02:40] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:02:40] *** __jmcantrell__ is now known as jmcantrell
[08:08:08] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[08:08:11] *** Quits: tang^ (~DoofusCan@2604:3d09:47c:f970:bd9a:83d:2d57:dee4) (Quit: So long, suckers)
[08:09:05] *** Joins: apauli (~apauli@dynamic-077-003-243-092.77.3.pool.telefonica.de)
[08:12:11] *** Quits: PaMeDa (~apauli@dynamic-077-006-163-024.77.6.pool.telefonica.de) (Ping timeout: 255 seconds)
[08:13:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[08:18:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:22:15] *** Quits: dermato (~dermatobr@154.21.114.128) (Quit: WeeChat 3.1)
[08:23:16] *** Joins: saroy (~sanroy@45.249.73.214)
[08:24:01] *** Quits: saroy (~sanroy@45.249.73.214) (Client Quit)
[08:24:17] *** Quits: bket (~bket@84-85-227-212.fixed.kpn.net) (Remote host closed the connection)
[08:24:31] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[08:25:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[08:27:23] *** Joins: saroy (~sanroy@45.249.73.214)
[08:27:46] *** Joins: bket (~bket@84-85-227-212.fixed.kpn.net)
[08:30:36] *** Joins: tejr (~tejr@user/tejr)
[08:35:36] *** Joins: gnoo (~gnoo@user/gnoo)
[08:37:38] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:45:02] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[08:46:53] <tirnanog> lechner: if stderr is not directed to a tty, for example.
[08:50:40] *** Joins: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt)
[08:52:22] *** Quits: tejr (~tejr@user/tejr) (Quit: Network faffing)
[08:53:37] *** Joins: tejr (~tejr@user/tejr)
[08:54:55] *** Quits: haltux (~haltux@a89-154-181-47.cpe.netcabo.pt) (Client Quit)
[09:00:56] <lechner> tirnanog: thanks!
[09:02:16] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[09:05:49] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[09:07:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:11:54] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[09:13:27] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:13:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[09:24:34] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[09:24:49] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[09:25:30] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[09:26:40] *** Joins: arcatech_ (~arcatech@user/arcatech)
[09:27:22] *** Quits: arcatech_ (~arcatech@user/arcatech) (Client Quit)
[09:29:54] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 272 seconds)
[09:31:01] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:cdbf:9a8b:f3b2:f7fe)
[09:31:01] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:cdbf:9a8b:f3b2:f7fe) (Changing host)
[09:31:01] *** Joins: skapata (~Skapata@user/skapata)
[09:32:49] *** Joins: thiago (~thiago@2601:1c0:4501:635c:a497:34ac:84c:cb98)
[09:36:03] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 276 seconds)
[09:44:11] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) ()
[09:46:51] *** Quits: thiago (~thiago@2601:1c0:4501:635c:a497:34ac:84c:cb98) (Ping timeout: 250 seconds)
[09:52:45] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:55:18] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[09:55:50] *** Joins: gas51627 (uid91066@id-91066.brockwell.irccloud.com)
[10:02:06] *** corelax_ is now known as corelax
[10:05:18] *** Joins: adlternative (~adl@117.32.216.71)
[10:19:13] *** LSD is now known as acidsys
[10:19:40] *** Joins: guy_frm_yogaland (~gourab@117.228.75.49)
[10:26:51] *** vinleod is now known as vdamewood
[10:30:48] *** Joins: palasso (~palasso@user/palasso)
[10:35:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:36:45] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 244 seconds)
[10:37:44] *** Quits: guy_frm_yogaland (~gourab@117.228.75.49) (Ping timeout: 258 seconds)
[10:39:44] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:43:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:48:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[10:49:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:57:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:57:52] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:01:26] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:01:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[11:04:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[11:08:51] *** Joins: randomuser (~randomuse@user/randomuser)
[11:11:37] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[11:20:55] *** Quits: hbautista_ (~hbautista@187.171.102.76) (Ping timeout: 268 seconds)
[11:22:20] *** Joins: atharvaraykar (~Thunderbi@user/atharvaraykar)
[11:23:13] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:27:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:29:13] *** Quits: randomuser (~randomuse@user/randomuser) (Remote host closed the connection)
[11:30:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[11:31:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:31:28] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[11:32:52] *** Joins: theoceaniscool (~theoceani@119.12.233.178)
[11:32:54] *** Joins: Ogronios (~Ogronios@2a01:e0a:9c9:2c00:fe5b:2e63:e71:efa)
[11:33:06] *** Joins: randomuser (~randomuse@user/randomuser)
[11:35:09] *** Joins: guy_frm_yogaland (~gourab@117.228.54.213)
[11:38:52] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:18] *** Parts: Ogronios (~Ogronios@2a01:e0a:9c9:2c00:fe5b:2e63:e71:efa) (Leaving)
[11:41:30] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:50:23] *** Quits: atharvaraykar (~Thunderbi@user/atharvaraykar) (Remote host closed the connection)
[11:50:32] *** Quits: theoceaniscool (~theoceani@119.12.233.178) (Ping timeout: 245 seconds)
[11:50:42] *** Joins: atharvaraykar (~Thunderbi@user/atharvaraykar)
[11:51:39] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[11:54:00] <cvmn> how to ignore a tracked file?  just putting it in .gitignore doesn't seem to work i guess.
[11:55:06] <osse> cvmn: there is no wa
[11:55:21] <osse> y
[11:56:29] <osse> !sparse_checkout
[11:56:29] <gitinfo> Sparse checkout can be used to restrict which files/folders are updated with all checkout and status operations. It cannot change the tree the checkout is rooted from. One common use case is locally keeping Git from updating some of the files tracked in your repository. See the "Sparse Checkout" section in man git-read-tree (https://gitirc.eu/git-read-tree.html).
[11:57:07] <osse> !assume_unchanged
[11:57:07] <gitinfo> git update-index --assume-unchanged is sometimes suggested for keeping yourself from committing changes to a file, but it's actually a promise to Git that the file is identical to the committed version, to reduce unnecessary disk reads. Not only will Git feel free to discard the flag, it will also happily overwrite your changes whenever a checkout/merge/rebase/... updates it.
[11:57:38] <cvmn> osse: there is no ay?
[11:57:49] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[11:57:56] <oxymoron93> yup no wy
[11:58:03] <cvmn> osse: i want to make it untracked and ignored in the future.  but currently it's tracked.
[11:58:05] <oxymoron93> I just had to do it
[11:58:12] <osse> cvmn: ohhh, use git rm for that
[11:58:22] <cvmn> --cache too?
[11:58:32] <osse> sounds like you want that, yes
[11:58:36] <osse> --cached, that is
[11:59:09] <cvmn> then, as i git commit, git tells me to commit that i've deleted a file.  my concern is: if someone git pulls, he will get his file deleted.
[11:59:35] <osse> ep
[11:59:39] <osse> goddammit
[11:59:41] <osse> YYYYYep
[11:59:52] <osse> My keyboard is acting up
[11:59:58] <j416> cvmn: luckily he has Git, so he can easily get it back
[12:00:19] <j416> cvmn: git checkout <commit> -- <file>
[12:00:22] <cvmn> is it common to track .gitignore?
[12:00:26] <j416> yes
[12:01:17] <j416> although, if that file is in some way important, I'm not sure I'd ignore it in the first place
[12:01:55] <cvmn> it's a file that keeps getting updated by git submmodules foreach ...
[12:02:12] <j416> git updates the file?
[12:03:06] <cvmn> i have no idea what i did.  this is my 1st git submodule use.
[12:03:25] <cvmn> .vim/pack/plugins/start/vimtex/*
[12:03:33] <j416> sounds like it'd be a good idea to figure that out
[12:03:36] <j416> :D
[12:03:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:03:41] *** Joins: theoceaniscool (~theoceani@119.12.233.178)
[12:03:47] <cvmn> every time i update the submodule, .vim/pack/plugins/start/vimtex keeps getting updated.
[12:04:31] <osse> is that file inside the submodule?
[12:04:40] <cvmn> yes
[12:04:51] <cvmn> [submodule ".vim/pack/plugins/start/vimtex"]
[12:05:08] <osse> that *is* the submodule
[12:05:27] <cvmn> so?
[12:05:35] *** Quits: gas51627 (uid91066@id-91066.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[12:05:44] <osse> seems like you just have misunderstood submodules. When a submodule is updated, that needs to be recorded as a commit in the outer repo
[12:05:47] <j416> so if you update it, it's not strane that it'll change
[12:05:54] <j416> ep
[12:05:55] <j416> strange*
[12:06:39] <cvmn> a bit clumsy.  no?
[12:06:58] <osse> for your use, perhaps
[12:07:07] <cvmn> what should i do?
[12:07:23] <osse> git add .vim/pack/plugins/start/vimtex && git commit -m 'Update vimtex to the newest version'
[12:08:12] <j416> the alternative would be to have no way to match the submodule to your parent project, meaning two people (recursively) fetching the same parent project might end up with different code
[12:08:24] <cvmn> but when i git pull on main git folder, what use do i have to see that in the git log?  after all i think i'll need to git submodule foreach git pull master origin anyway to actually get them updated.  no?
[12:08:46] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[12:09:11] <cvmn> i wonder if i should abandon submodules, and just git pull manually.
[12:09:21] <j416> it's just like if you modified any other file, there's a change that you need to commit
[12:09:28] <osse> if someone else updates a submodule and you pull that down, git status will tell you that the submodule is out of date and you should 'git submodule update'
[12:09:29] <j416> except this is an submodule
[12:10:38] <osse> 'git submodule update' is sometimes put in a hook so it happens automatically
[12:11:13] <osse> your foreach thing will update the submodules to the latest version available in the source repo, not the version that that the outer repo says they should be
[12:12:24] *** Joins: vysn (~vysn@user/vysn)
[12:13:17] <osse> And commits that change the recorded version of submodules appear in git log like any other commit
[12:15:29] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 250 seconds)
[12:18:53] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 268 seconds)
[12:21:37] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:22:40] *** Quits: daddy (~ryan@hashbang/bdfl) (Read error: Connection reset by peer)
[12:24:40] *** Joins: daddy (~ryan@hashbang/bdfl)
[12:29:20] *** Quits: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net) (Remote host closed the connection)
[12:29:36] *** Quits: atharvaraykar (~Thunderbi@user/atharvaraykar) (Ping timeout: 276 seconds)
[12:38:35] *** Quits: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289) (Ping timeout: 255 seconds)
[12:40:06] *** Joins: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289)
[12:41:15] *** Joins: jimklimov1 (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz)
[12:45:05] *** Quits: jimklimov (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[12:49:46] *** Joins: keypushe- (keypusher@user/keypusher)
[12:49:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[12:52:01] *** Joins: atharvaraykar (~Thunderbi@user/atharvaraykar)
[12:52:46] *** keypushe- is now known as keypusher
[12:53:08] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[12:53:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[12:54:58] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[12:56:31] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:57:31] *** Joins: Vonter (~Vonter@user/vonter)
[12:58:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[12:59:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:01:14] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:03:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:03:43] *** Joins: natrys (~natrys@user/natrys)
[13:04:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:07:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[13:09:25] <rfuentess> geez
[13:10:02] <rfuentess> someone on my team forced a git rebase over the master branch (Disabling first the protection against that). And now I need to find the previous commit  to fix its chaos
[13:10:31] <rfuentess> and I was on holidays, so my local copies are very out-dated
[13:11:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[13:15:20] <cbreak> rfuentess: do you have access to the reflog on the server?
[13:15:28] <cbreak> or the local repo of the perpetrator?
[13:16:26] <rfuentess> cbreak: yeah. I was thinking on trying to request a remote access to the perpetrator's local copy to fix it with reflog
[13:17:04] <cbreak> even git push output should contain this
[13:17:40] <cbreak> (it prints which hashes it replaces with which others)
[13:17:41] <rfuentess> for now, I'm exploring the remote  repo where we do the merges. To see if the latest merge's HEAD  it is safe to use
[13:18:03] <Marmotte> rfuentess: you don't need to access his local copy directly, he can push the old commits hashes to your centralized remote
[13:18:19] <Marmotte> he can find these hashes using git reflog
[13:20:11] <rfuentess> I still can't understand why someone will say "this thing I want to do is safe, even if I need to remove many locks"
[13:20:36] <rfuentess> an accidental rebase over an unprotected branch ?  Sure. Not problem,. I did it many times on the past
[13:21:10] <osse> "git rebase over the master branch" sounds like it's not the master itself that is modified
[13:23:51] <rfuentess> osse: the perpetrator wanted to remove a commit that was merged too soon. So, he dropped it, and then forced a push into master (no idea why was not just reverted).
[13:24:22] <rfuentess> Again, I'm not against that type of mistakes. I did it too on the past. I'm just annoyed that he had to remove a lock  for be able to do it
[13:28:10] *** Joins: amirgon (~amirgon@89-138-188-61.bb.netvision.net.il)
[13:28:41] *** Quits: saroy (~sanroy@45.249.73.214) (Quit: Leaving)
[13:29:31] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[13:30:13] <j416> rfuentess: just an idea: if the rewrite was done on purpose, simply accept the new state of that branch?
[13:30:23] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[13:30:32] *** Quits: guy_frm_yogaland (~gourab@117.228.54.213) (Ping timeout: 245 seconds)
[13:32:21] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[13:33:25] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[13:33:33] *** Joins: saroy (~sanroy@45.249.73.214)
[13:34:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:34:48] <rfuentess> j416: Yes. It is an alternative. On this case that "on purpose" means "I was too lazy to do a vile git revert and to warning everyone else about the imminent rebase"
[13:35:13] <rfuentess> so, we got our current   branches with new features on chaos due that
[13:38:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:41:44] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[13:42:30] <j416> rfuentess: easily fixable with more rebases :D
[13:44:50] <rfuentess> j416: hehehe yes it is :P
[13:45:54] <j416> (I'm sure you know about rebase --onto, useful in this scenario)
[13:45:57] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 245 seconds)
[13:47:45] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:51:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:53:30] <rfuentess> j416: probably I need to re-read it
[13:55:50] *** Joins: rahl (~rahl@102.114.88.46)
[13:56:15] *** Quits: i7c (~i7c@user/i7c) (Quit: nicht mein nivea)
[13:56:30] <j416> rfuentess: tl;dr, if you know that in A <- B <- C <- D you don't care about A and B (which were rewritten in the rebase of master) and your branch only adds C and D, you can from your branch git rebase --onto newB B
[13:56:57] <j416> rfuentess: that'd effectively reset to newB and apply C and D on that.
[13:57:22] *** Joins: i7c (~i7c@user/i7c)
[13:59:16] <j416> rfuentess: (where a regular rebase might instead end up with a conflict trying to apply the new master on top of the old master, i.e. A' <- B' <- A <- B <- C <- D)
[13:59:58] *** Joins: igemnace (~ian@user/igemnace)
[14:00:10] <j416> rfuentess: er, old master on top of the new master. but the example is correct.
[14:05:30] *** Quits: igemnace (~ian@user/igemnace) (Read error: Connection reset by peer)
[14:05:50] <rfuentess> j416: basically for other contributors this may  still giving them a easy time with a `git pull origin master` ?
[14:06:31] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[14:07:20] <j416> rfuentess: pull is fetch + merge (unless configured otherwise), so they don't want that.
[14:08:01] <j416> at best you'd end up with duplicate commits
[14:08:36] <cbreak> git pull --rebase is much nicer
[14:08:41] *** Joins: adl_ (~adl@117.32.216.79)
[14:08:58] *** Quits: adlternative (~adl@117.32.216.71) (Ping timeout: 256 seconds)
[14:09:05] <j416> if rebase is tricky for them, you can always tell them to reset their master to upstream and restart their branch, cherry-picking their old commits.
[14:09:34] <cbreak> manual rebasing ;)
[14:09:50] <j416> nod
[14:10:40] <j416> they'll need to do the reset _anyway_ to get a correct local master
[14:10:52] <j416> unless pull --rebase happens to sort that out for them
[14:11:36] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 265 seconds)
[14:12:03] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[14:12:25] <j416> (if indeed you go ahead with the new master and give up rewriting it back to the old one, in case I suppose select few will have to do the reset dance still, since they may have reset to the new master :D)
[14:20:16] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[14:20:58] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[14:22:04] *** Joins: igemnace (~ian@user/igemnace)
[14:22:08] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:25:03] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[14:25:24] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 256 seconds)
[14:27:58] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:29:14] *** Joins: pulse (~pulse@user/pulse)
[14:29:50] *** Joins: keypusher (keypusher@user/keypusher)
[14:32:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[14:32:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:37:38] *** Joins: Ulli[m] (~chrismat_@2001:470:69fc:105::c837)
[14:40:19] *** Quits: jmft2 (~JMFT@82.3.54.26) (Killed (NickServ (GHOST command used by jmft236!~jmft2@81.149.115.87.dyn.plus.net)))
[14:40:42] *** Joins: jmft2_ (~JMFT@82.3.54.26)
[14:44:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[14:44:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:51:17] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[14:51:30] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:52:23] *** Joins: keypusher (keypusher@user/keypusher)
[15:07:20] *** Quits: Kamilion (~kvirc@user/kamilion) (Ping timeout: 256 seconds)
[15:11:12] *** Joins: sysh (~sysh@212.237.182.120)
[15:14:59] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[15:29:54] *** Quits: yuckey2d (~yuckey2d@66.115.145.202) (Ping timeout: 265 seconds)
[15:32:32] *** Joins: Kamilion (~kvirc@user/kamilion)
[15:33:32] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[15:35:41] *** Quits: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289) (Ping timeout: 250 seconds)
[15:37:33] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[15:38:40] *** Joins: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289)
[15:39:20] *** Joins: keypusher (keypusher@user/keypusher)
[15:42:37] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[15:43:40] *** Quits: thetourist108 (~thetouris@2001:470:69fc:105::3112) (Quit: You have been idle for 30+ days)
[15:43:41] *** Quits: crysisanon[m] (~crysisano@2001:470:69fc:105::1687) (Quit: You have been idle for 30+ days)
[15:50:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c0e3:915b:3a88:eee5)
[15:50:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c0e3:915b:3a88:eee5) (Changing host)
[15:50:46] *** Joins: skapata (~Skapata@user/skapata)
[16:01:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[16:01:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:08:18] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[16:11:08] *** Joins: shabius_ (~shabius@2a0e:1c80:2:1022::1003)
[16:11:28] *** Quits: dviola (~diego@user/dviola) (Ping timeout: 265 seconds)
[16:13:12] *** Joins: dviola (~diego@187.39.20.53)
[16:13:15] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[16:13:15] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[16:13:49] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[16:13:54] *** Quits: shabius (~shabius@46.188.40.202) (Ping timeout: 240 seconds)
[16:14:06] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[16:14:21] <lpapp> hi, I am confused, I have a bad and a good commit, but git says: Some good revs are not ancestors of the bad rev.
[16:14:24] <lpapp> git bisect cannot work properly in this case.
[16:14:27] <lpapp> Maybe you mistook good and bad revs?
[16:14:49] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[16:16:57] <lpapp> how to reconcile this?
[16:17:57] <osse> are you min the middle of a bisect and you have answered good or bad a few times?
[16:18:06] <lpapp> just starting off.
[16:18:16] *** Joins: computeiro (~Wender@189.37.69.205)
[16:18:37] <lpapp> we got two builds on gitlab where one is not good, the other is. Trying to see where we introduced the regression
[16:18:46] <lpapp> I tracked down the commits on gitlab that those builds belong to
[16:18:59] <lpapp> and I would like to start bisecting the builds as there were multiple commits between those two builds.
[16:19:05] <osse> it seems git bisect is complaining that the good and bad commits are intermixed
[16:20:04] <lpapp> what does it mean intermixed in this case?
[16:20:24] <osse> that there cannot be one single commit where all commits before it are good and all commits after it are bad
[16:20:28] <lpapp> in the git log output, interestingly, it seems that the good commit is ahead in time
[16:20:31] <lpapp> of the bad
[16:20:32] <lpapp> this is odd
[16:21:03] <lpapp> maybe, the builds were done in a different chronological order than the commits?
[16:22:14] <osse> I'm in no position to know that :p
[16:22:24] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Ping timeout: 244 seconds)
[16:24:41] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[16:25:00] <lpapp> Thanks.
[16:25:24] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[16:29:10] <osse> seems like you have to sort the builds by the commit they were built from, not the build date, and start from there
[16:31:01] <lpapp> osse: yeah, I do not know how to do that ...
[16:31:54] <osse> you know the precise commit each build is based on right?
[16:32:20] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[16:32:38] <lpapp> yeah
[16:32:43] <lpapp> osse: but they are not bisectable!
[16:32:45] <lpapp> apparently.
[16:33:18] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr)
[16:33:22] <ikke> lpapp: So you got a regression which was fixed later?
[16:33:35] <ikke> and you want to bisect what commit introduced it?
[16:33:49] <osse> lpapp: they won't be if they are in the wrong order
[16:33:58] <ikke> Note that the terms good and bad can be confusing
[16:34:27] <lpapp> bug is still in their in main HEAD
[16:34:31] <lpapp> the whole situation is confusing...
[16:34:37] <ikke> The git bisect assumes that something started good, and then turned bad (so bad follows after good)
[16:34:44] <ikke> but git bisect also allows you to redefined terms
[16:34:50] <lpapp> maybe I could go git bisect bad HEAD and git bisect good X
[16:34:51] <lpapp> ?
[16:34:57] <lpapp> it will be a lot more work, but...
[16:35:05] <osse> that's how you're supposed to do it
[16:35:14] <osse> and preferable an X as recent as possible
[16:35:28] <lpapp> ok, thanks, it will be a lot more work than anticipated
[16:35:41] <lpapp> as I thought the QA's work to localise it to two consecutive builds could help.
[16:35:42] <osse> now i'm confused. what have you been doing until now?
[16:35:45] <lpapp> but not in this case then.
[16:36:59] <ikke> This is a bisect script I created the other day: https://tpaste.us/WE7B
[16:37:22] <ikke> I could do git bisect run ./bisect-run.sh, and I could just let it run
[16:37:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:48:15] *** Joins: Lucgri (~Lucgri@host-87-6-188-55.retail.telecomitalia.it)
[16:48:31] *** Parts: Lucgri (~Lucgri@host-87-6-188-55.retail.telecomitalia.it) ()
[16:49:07] <osse> ikke: what's the point of calling git bisect terms --term-* in the script?
[16:49:12] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[16:49:16] <lpapp> for me, the tricky thing is that one build takes me 15-20 minutes
[16:49:26] <lpapp> and then manual fiddling and testing to see if it is good or bad
[16:49:32] <lpapp> so, I was hoping to reuse the QA research.
[16:49:36] <lpapp> who localised it to builds.
[16:49:37] <ikke> osse: visual output of what the bisect script is doing
[16:49:46] <osse> ikke: ah ok
[16:49:47] <ikke> osse: while using the terms that you defined with git bisect start
[16:49:51] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:07] <osse> lpapp: have QA identified some good and some bad builds?
[16:50:57] <lpapp> yes
[16:51:00] <lpapp> build numbers
[16:51:03] <lpapp> they do not do source code
[16:51:28] <osse> can you use the build numbers to find the commits?
[16:51:55] <lpapp> yes, but it is not the way git bisect expects it.
[16:51:59] <lpapp> So, yeah, not sure what is going on :D
[16:52:11] <lpapp> HEAD is broken, so bad
[16:52:19] <lpapp> and the fact that there was one commit good gives some hope
[16:52:23] *** Quits: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642) (Ping timeout: 255 seconds)
[16:52:30] <osse> find out if all the good builds are older than all the bad
[16:52:45] <ikke> Ehsy hr
[16:52:47] <ikke> ugh
[16:52:53] <osse> if that's true, then you know the problem is between the last good and the first bad build. so you can bisect just that
[16:53:11] <ikke> What helped me visualizing it is using tig and look at the 'row' number of each commit
[16:55:32] *** Joins: lgc (~lgc@user/lgc)
[16:56:02] <osse> and by "older" I do not mean when the build was done, but the age of the commit it was built from
[17:02:42] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (Ping timeout: 265 seconds)
[17:04:07] *** Parts: mra90 (~Martin@192.198.151.54) (Leaving)
[17:06:01] <lpapp> older is newer :-P I know and appreciate that it is not ideal.
[17:06:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[17:07:17] <ikke> newer than?
[17:09:04] <osse> pen and paper helps in these kinds of situations
[17:11:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[17:11:42] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:18:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[17:19:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:21:08] <lpapp> when you are in a git bisect mode
[17:21:29] <lpapp> I just say git bisect bad or good without hash, yeah?
[17:21:44] <lpapp> since the commit is implicit :)
[17:21:58] <osse> to mark the current commit either good or bad, yes
[17:32:43] *** Quits: computeiro (~Wender@189.37.69.205) (Quit: Leaving)
[17:35:04] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[17:35:17] *** Joins: irrgit (~irrgit@192.241.175.183)
[17:37:44] <lpapp> damn, broken build during git bisect
[17:37:47] <lpapp> that is a bit of a pain...
[17:38:00] <osse> git bisect skip
[17:38:10] <ikke> return exit code 125 (or git bisect skip)
[17:39:04] <lpapp> thanks
[17:39:10] <lpapp> what does skip do?
[17:39:25] <lpapp> does it apply some offset?
[17:39:52] <osse> I think it just moves to an adjacent commit
[17:44:36] *** Joins: hazmi35 (~Hazmi35@36.74.44.15)
[17:45:02] *** Quits: hazmi35 (~Hazmi35@36.74.44.15) (Client Quit)
[17:46:06] *** Joins: jpe__ (~sharpergu@2001:16b8:5c50:5100:fd1a:812c:6af0:a515)
[17:46:43] <lpapp> which one, before?
[17:47:38] <osse> I don't know
[17:47:45] <ikke> "Instead of choosing a nearby commit by yourself, you can ask Git to do it for you by issuing the command"
[17:48:01] <ikke> I don't think it's definited which it will pick
[17:48:36] *** Quits: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 252 seconds)
[17:51:56] <lpapp> thanks, someone suggested us earlier that there is a faster algorithm than git bisect (logn), is it true?
[17:52:02] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[17:53:00] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr)
[17:53:26] <ikke> Isn't bisect log(n)?
[17:53:31] <bremner> yes
[17:53:38] <bremner> hard to beat that in general
[17:53:41] <ikke> Yeah
[17:54:14] <ikke> Not sure how you can do this faster than log(n)
[17:54:59] <bremner> you can apply heuristics, which might work better for some scenarios. I don't know of such implemented for git.
[17:55:19] <ikke> Never heard of anything
[17:55:52] <ikke> You can use --first-parent to skip merged in branches
[17:55:52] <bremner> also, if you have so many commits to bisect that log(n) is more than 30, you might be doomed.
[17:56:13] <ikke> Depends on how fast you can test :)
[17:56:24] <osse> you can filter based on path too
[17:56:43] <ikke> Oh yeah, I forgot that
[17:57:23] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[17:57:25] <osse> i tried looking through bisect-helper.c and I have no clue what happens when you skip a commit
[17:57:35] <osse> i'd expect it to just checkout the parent commit or something
[17:57:50] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:57:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[17:57:57] <osse> but the code is hard to follow
[17:58:19] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:58:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 255 seconds)
[17:58:37] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:59:34] *** Joins: BUSY (~BUSY@user/busy)
[18:03:20] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[18:04:26] <lpapp> bremner: It does not have to be more than 30 to speed up things
[18:04:37] <lpapp> for me, even 5->4 would be great because an attempt is 20-30 minutes.
[18:07:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:08:10] *** Joins: r1ch (~r1ch@user/r1ch)
[18:09:46] *** Joins: arcatech (~arcatech@user/arcatech)
[18:09:51] <bremner> narrow the range of commits, I guess.
[18:12:17] <lpapp> well, even if I could, it would still be an extra 20-30 mins between 4->3 :)
[18:12:56] <lpapp> logn is not bad if you get instant feedback, I guess people start thinking something faster when one step is long.
[18:13:11] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[18:13:26] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[18:14:46] *** Joins: Jck_true3 (~jcktrue@188.228.89.240)
[18:15:08] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Read error: Connection reset by peer)
[18:15:08] *** Jck_true3 is now known as Jck_true
[18:17:07] <lpapp> https://cs.stackexchange.com/a/140235
[18:17:10] <lpapp> golden-section-search?
[18:18:44] *** Joins: darkbit (~db@152.32.99.67)
[18:19:02] <bremner> pretty theoretical / hypothical?
[18:20:25] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 258 seconds)
[18:21:23] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[18:22:07] <lpapp> it is possible :)
[18:22:18] <lpapp> but when you have to spend 30 mins waiting on one step, you reconsider your life :P
[18:23:14] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:23:48] <ikke> lpapp: do you have an automated way to verify if the bug is present or not?
[18:24:31] *** Joins: arcatech (~arcatech@user/arcatech)
[18:26:32] <lpapp> nope, manual testing :P
[18:26:35] <lpapp> :(
[18:27:26] *** Joins: randomuser (~randomuse@user/randomuser)
[18:32:00] *** Joins: nyah (~nyah@90.221.186.180)
[18:35:47] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:35:51] *** Joins: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691)
[18:35:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:38:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:40:12] *** Quits: dviola (~diego@187.39.20.53) (Changing host)
[18:40:12] *** Joins: dviola (~diego@user/dviola)
[18:44:46] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:45:41] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 252 seconds)
[18:49:20] *** Joins: hubble (~hubble@69.160.252.197)
[18:49:55] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[18:49:58] *** Quits: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net) (Remote host closed the connection)
[18:50:58] *** Quits: r1ch (~r1ch@user/r1ch) (Read error: Connection reset by peer)
[18:51:28] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:53:46] *** Quits: adl_ (~adl@117.32.216.79) (Ping timeout: 258 seconds)
[18:55:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:56:25] *** Joins: thiago (~thiago@2601:1c0:4501:635c:a497:34ac:84c:cb98)
[18:58:42] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 265 seconds)
[19:02:51] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 276 seconds)
[19:04:27] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[19:12:56] *** Quits: atharvaraykar (~Thunderbi@user/atharvaraykar) (Ping timeout: 258 seconds)
[19:14:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:16:48] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:18:56] *** Quits: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691) (Ping timeout: 256 seconds)
[19:23:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:24:07] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:24:48] *** Joins: arcatech (~arcatech@user/arcatech)
[19:25:41] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[19:27:06] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Client Quit)
[19:27:47] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c0e3:915b:3a88:eee5)
[19:27:47] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c0e3:915b:3a88:eee5) (Changing host)
[19:27:47] *** Joins: skapata (~Skapata@user/skapata)
[19:28:16] *** Joins: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d)
[19:28:34] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[19:30:02] *** Joins: fef (~thedawn@user/thedawn)
[19:38:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[19:38:44] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:41:26] *** Joins: hubble75 (~hubble@69.160.252.246)
[19:42:29] *** Joins: _sysh (~sysh@212.237.182.120)
[19:43:46] *** Quits: hubble (~hubble@69.160.252.197) (Ping timeout: 246 seconds)
[19:43:46] *** Quits: sysh (~sysh@212.237.182.120) (Ping timeout: 240 seconds)
[19:43:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:45:49] *** Joins: Guest924 (~Guest9@43.241.144.38)
[19:47:31] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[19:47:34] *** Joins: ferdna (~ferdna@user/ferdna)
[19:48:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[19:52:43] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[19:53:20] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:53:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:01:54] *** Quits: madewokherd` (~urk@65-128-171-161.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[20:03:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[20:05:28] *** Quits: hubble75 (~hubble@69.160.252.246) (Ping timeout: 246 seconds)
[20:06:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[20:15:46] *** Joins: furrymcgee (~devuan@31.179.186.66)
[20:16:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[20:16:44] *** Joins: ThorMojito (~Adium@166.62.248.233)
[20:18:04] *** Joins: fnurkla (~fnurkla@h-98-128-211-79.A357.priv.bahnhof.se)
[20:19:25] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[20:23:29] *** Quits: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d) (Remote host closed the connection)
[20:24:14] *** Joins: atharvaraykar (~Thunderbi@user/atharvaraykar)
[20:24:44] *** Quits: Guest924 (~Guest9@43.241.144.38) (Ping timeout: 265 seconds)
[20:27:17] *** jpe__ is now known as sharperguy
[20:27:21] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 276 seconds)
[20:27:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[20:28:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:7921:180d:4519:92d1)
[20:30:04] *** Joins: durham (~durham@2620:10d:c091:480::1:972c)
[20:30:04] *** Quits: durham__ (~durham@2620:10d:c091:480::1:972c) (Read error: Connection reset by peer)
[20:32:05] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:33:30] *** Quits: bulletsquid (~bulletsqu@user/bulletsquid) (Ping timeout: 240 seconds)
[20:33:30] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 240 seconds)
[20:33:54] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[20:34:12] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 258 seconds)
[20:34:17] *** Quits: stark (~deepcursi@165.227.127.54) (Ping timeout: 245 seconds)
[20:34:18] *** Quits: energizer (~energizer@user/energizer) (Ping timeout: 252 seconds)
[20:34:24] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Ping timeout: 265 seconds)
[20:34:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:09] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 276 seconds)
[20:36:28] *** Joins: dskullz (~dskull@user/dskull)
[20:37:31] *** Joins: reset (~reset@user/reset)
[20:38:05] *** dskullz is now known as dskull
[20:39:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:40:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[20:41:20] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:42:39] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:43:30] *** Joins: bulletsquid (~bulletsqu@user/bulletsquid)
[20:43:36] *** Joins: energizer (~energizer@user/energizer)
[20:43:37] *** Joins: tkazi (~tkazi@user/tkazi)
[20:43:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[20:44:55] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Quit: LIBERTÃ‰!!!!!!!!!!!!!!!!!!! (y chelas))
[20:45:12] *** Joins: jiffe (~jiffe@mail.nsab.us)
[20:45:33] *** Joins: bkhl (~bkhl@user/bkhl)
[20:45:43] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[20:47:07] *** Joins: stark (~deepcursi@165.227.127.54)
[20:47:29] *** Joins: orbyt (~textual@172.92.4.78)
[20:47:29] *** Joins: Betal (~Beta@user/betal)
[20:47:33] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:59:44] *** Joins: durham_ (~durham@2620:10d:c091:480::1:972c)
[20:59:44] *** Quits: durham (~durham@2620:10d:c091:480::1:972c) (Read error: Connection reset by peer)
[21:04:42] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[21:06:32] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[21:07:47] <sangy> silly question, because I don't know how to verify this. Does git grep grep on changed files that are either staged or unstaged for the next commit?
[21:08:24] <ikke> "Look for specified patterns in the tracked files in the work tree, blobs registered in the index file, or blobs in given tree objects"
[21:08:54] <ikke> The default is 'tracked files in the work tree'
[21:10:44] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:11:24] *** Joins: fef (~thedawn@user/thedawn)
[21:14:21] *** Quits: _sysh (~sysh@212.237.182.120) (Remote host closed the connection)
[21:17:46] <lpapp> wow
[21:18:00] <lpapp> git switch new-branch;git switch prev-branch
[21:18:05] <lpapp> I rerun the build
[21:18:10] <lpapp> and I get a lot of build steps with cmake
[21:18:27] <lpapp> is it a git thing that cmake is based on touching times and git touches files when switching branches, or something?
[21:18:51] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[21:19:17] <lpapp> same thing for git reset --hard HEAD~20 and git pull --rebase
[21:19:26] <lpapp> surely, the source and build artefacts do not change content?
[21:19:41] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[21:19:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:20:09] *** Joins: randomuser (~randomuse@user/randomuser)
[21:20:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[21:21:37] <imMute> lpapp: I believe git sets the timestamps on the files to the commit date, so that might be whats causing cmake to rebuild
[21:21:39] *** Joins: humanface (~humanface@20014C4E1C542F009880DA0B227EC187.dsl.pool.telekom.hu)
[21:21:58] <ikke> no, git does not proactively set mtimes
[21:22:10] <osse> no, git just modifies the files it has to, and leaves the others alone
[21:22:50] <imMute> osse: it touches mtime for the files it modifies though, right?
[21:23:09] <lpapp> then why would I get a rebuild?
[21:23:25] <osse> imMute: I assume it opens the file for writing, writes and closes the bog standard way
[21:23:32] <ikke> maybe git has to write a file that is affecting a lot of other build arrtifacts
[21:23:32] <lpapp> git switch new-branch && git switch old-branch should do the same as if I had not run those two commands, surely?
[21:23:42] <ikke> no
[21:23:47] <lpapp> starting from old-branch
[21:23:48] <imMute> osse: I would assume that touches the mtime then...
[21:23:49] <ikke> git does not restore mtimes
[21:23:53] <osse> imMute: yep
[21:24:03] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[21:24:04] <lpapp> this is really bad
[21:24:10] <lpapp> it is causing me days of extra work
[21:24:11] <ikke> so the files have a newer timestamp than they were before
[21:24:15] <osse> imMute: the thing you're thinking of is probably git-archive
[21:24:16] <lpapp> is there a way to turn off this nonsense?
[21:24:25] <ikke> there is nothing to turn off
[21:24:33] <imMute> lpapp: touching mtimes when modifying a file is *not* something you want to turn off
[21:24:34] <lpapp> well, in worst case git :)
[21:24:37] <ikke> it requires something active to get the behavior you want
[21:24:51] <ikke> There is a script that sets mtimes of files the the commit timestamp
[21:24:58] <imMute> lpapp: cmake *relies* on the mtime changing when the file gets changed.
[21:25:06] <lpapp> I hope you can see how this is really painful
[21:25:08] <lpapp> in a big codebase.
[21:25:15] <lpapp> when you try to git bisect
[21:25:22] <lpapp> since it will change mtimes like anything for each step
[21:25:26] <lpapp> causing really long builds.
[21:25:34] <imMute> it changes the mtimes on the files that changed.  which would need rebuilding anyway...
[21:25:38] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[21:25:45] <imMute> so if it takes a long time to build, that's because there's a  lot that actually needs rebuilding
[21:25:51] <ikke> ^
[21:25:55] <lpapp> I do not agree
[21:25:59] <ikke> why not
[21:26:09] <lpapp> git switch new-branch && git switch old-branch should rebuild 0 files.
[21:26:19] <lpapp> running this chain of commands
[21:26:20] <ikke> git does not promise to restore mtimes
[21:26:21] <imMute> that's a corner case that most people don't care about.
[21:26:30] <lpapp> it is quite unreasonable this to generate a 20 mins rebuild for me if I am honest :)
[21:26:43] <lpapp> it is not a corner case
[21:26:50] <ikke> lpapp: usa a build tool that looks at file contents rather than file metadata
[21:26:50] <rewt> why do you switch to a different branch and then back before the build?
[21:26:56] <mackerman> Keep checked out a work tree dedicated to this branch.
[21:26:59] <lpapp> you could perhaps argue that this is a cmake issue rather than git
[21:26:59] <imMute> why are you switching to a branch just to switch back?  that's a corner case if I ever saw one.
[21:27:07] <lpapp> but the fact that modifying times cause huge rebuilds
[21:27:09] <lpapp> is really bad
[21:27:14] <osse> I ones worked on a codebase that had the current commit as a commandline define (ie. g++ -DCOMMIT=abcd). The problem with that is that *every compiler invocation* changed, so *every* file had to be rebuilt
[21:27:21] <imMute> no it's not.  it's *fundamental* to how cmake works.
[21:27:25] <lpapp> I actually often have to switch branches to check something out
[21:27:27] <lpapp> some code there
[21:27:30] <lpapp> and then come back
[21:27:36] <rewt> you could use another worktree
[21:27:37] <osse> also not fun: g++ -DBUILDTIME=foo with second time resolytion
[21:27:38] <lpapp> this is by no means corner case in my workflow
[21:27:40] <imMute> lpapp: use multiple work trees or clones
[21:27:44] <lpapp> it is a standard usual case.
[21:27:48] <lpapp> nooooo
[21:27:54] <lpapp> that would be silly.
[21:27:55] <imMute> lpapp: why not?
[21:28:02] <lpapp> because this is what branches were meant for.
[21:28:05] <imMute> I used to have dozens of work trees for the last project I worked on
[21:28:06] <lpapp> to avoid multiple clones
[21:28:07] <osse> long builds are painful
[21:28:10] <osse> but reading
[21:28:10] <lpapp> I guess I could go back to the 90s
[21:28:12] <osse> stuff like
[21:28:14] <lpapp> but rather not.
[21:28:14] <osse> this is even
[21:28:16] <osse> worse
[21:28:20] <rewt> multiple worktrees do NOT need multiple clones
[21:28:51] <osse> lpapp: git diff --stat old-branch new-branch. how many files are changed?
[21:28:54] *** Joins: pulse (~pulse@user/pulse)
[21:29:05] <osse> and is one of them global.h that is included everywhere?
[21:29:08] <lpapp> osse: zero content if I switch back
[21:29:14] <lpapp> are you saying it is a cmake issue?
[21:29:16] <osse> no
[21:29:38] <osse> well, maybe
[21:29:46] <rewt> `git diff --stat old-branch new-branch` should have the same result regardless of which branch you're on
[21:29:53] <osse> maybe there are some unneeded dependencies (such as the things I described above)
[21:30:00] <lpapp> I am not interested in the diff between the two branches
[21:30:07] <osse> but I am
[21:30:11] <osse> I am trying to help
[21:30:11] <rewt> but that's what he asked about
[21:31:25] *** Quits: roadie (~user@2a02:8108:ec0:1427:a1b8:4630:407:2c9d) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[21:31:46] *** Quits: Anthaas (~Anthaas@user/anthaas) (Quit: Client closed)
[21:32:33] <osse> excessive rebuilding is often caused by hyperactive defines, generated headers and stuff like that
[21:33:12] <osse> but in any case, cmake relies (only) on modification times, there is no way to make git not do that, and git cannot read your mind and know that you're gonna switch back immediately after
[21:33:24] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[21:33:36] <lpapp> that is why I said it may be a cmake issue
[21:33:49] <lpapp> not sure if it is reasonable for cmake to rely on modification time rather than content.
[21:33:54] <lpapp> without configurability.
[21:34:05] <lpapp> (or for any buildsystem for that matter)
[21:34:16] <imMute> lpapp: quite a few build systems rely on mtime.  it's quite reasonable given the tradeoffs.
[21:34:18] <mackerman> Linus did not like this idea years ago. If the files didn't change, neither would the work tree. Also, caching compile outputs.    Re: Git checkout preserve timestamp?   https://markmail.org/message/b45lyln5eig6tp4x
[21:34:25] <lpapp> but sounds like branches are not as useful then as I thought :)
[21:34:35] <lpapp> if worktrees are more like the branch concept I have in mind.
[21:34:37] <imMute> branches are used for something else entirely.
[21:34:41] <osse> yes I think it can be a cmake issue as well
[21:35:00] <osse> (as in CMakeLists.txt being badly written)
[21:35:01] <lpapp> imMute: whose tradeoff? I do not think you can say it is the best solution for everyone.
[21:35:03] <imMute> if you need to look at multiple versions of the repo at a time, use multiple work trees (or constantly switch between them and deal with the consequences)
[21:35:19] <imMute> lpapp: checking mtime is way cheaper than any content-based system you come up with.
[21:35:31] <osse> there's a buildsystem (SCons) that uses the md5 instead of timestamp. But it's slow as hell for that reason
[21:35:36] <lpapp> imMute: is hashing really that hard?
[21:35:43] <imMute> lpapp: hard? no.  fast? also no.
[21:35:58] <osse> it will use a lot of time to figure out what to do, and that gets annoying when the answer is that there's nothing to do
[21:36:01] <lpapp> so hashing is slower than rebuilding?
[21:36:02] <lpapp> Odd
[21:36:04] <imMute> lpapp: hashing a file is orders of magnitude more work than checking the mtime
[21:36:11] <lpapp> hashing a file versus rebuilding
[21:36:15] <imMute> I didn't say anything about rebuilding.
[21:36:20] <lpapp> I am
[21:36:23] <osse> Fucking hell man
[21:36:25] <bremner> lpapp: ccache is there for you
[21:36:27] <lpapp> because the alternative is rebuilding.
[21:36:34] <osse> you're twisting our words like it's a kitchen cloth
[21:36:44] <imMute> and yeah, it would really suck to have to wait for cmake to hash every file just to tell you there's nothing to do
[21:36:56] <imMute> lpapp: no, the alternative is mtime checking.
[21:37:07] <lpapp> mtime is causing huge pain for me at the moment
[21:37:11] <rewt> lpapp, it has to figure out IF it has to rebuild first
[21:37:26] <rewt> it does that via mtime; hashing is way slower
[21:37:37] <imMute> lpapp: we gave you a solution.
[21:37:44] <lpapp> rewt: yes, but if not (my case), it will be cheaper if hashing is faster than compiling anyway.
[21:37:51] <osse> also, maybe it's not even the mtime
[21:38:16] <imMute> lpapp: so get a build system that is able to work with file hashes rather than mtime?
[21:38:24] <lpapp> imMute: yes!
[21:38:30] <lpapp> configurably
[21:38:33] <lpapp> it could help at times.
[21:38:44] <lpapp> I do not debate that mtime is useful most of the times
[21:38:52] <bremner> as I said, look at ccache if you are waiting on compiles
[21:38:52] <lpapp> but there are rare times, like mine now, when perhaps it is not...
[21:38:54] <imMute> you certainly sounded like it a few minutes aggo.
[21:39:05] <bremner> it is exactly hash based rebuilds
[21:39:17] *** Quits: nickmass (~nickmass@nickmass.com) (Remote host closed the connection)
[21:39:22] <osse> https://scons.org/
[21:39:23] <bremner> assuming C or C++, otherwise, dunno.
[21:39:31] <osse> "Reliable detection of build changes using MD5 signatures; optional, configurable support for traditional timestamps."
[21:39:47] <imMute> there we go.  NEXT!
[21:39:56] *** Joins: nickmass (~nickmass@nickmass.com)
[21:40:04] <lpapp> bremner: yes, used ccache earlier, thanks, that sounds like the right thing that I would need.
[21:44:20] *** Joins: Guest9 (~Guest9@43.241.144.38)
[21:45:17] <lpapp> osse:  10 files changed, 167 insertions(+), 506 deletions(-)
[21:45:51] <lpapp> 2075 cmake build setsps
[21:46:05] <lpapp> steps, about 20-30 mins to get it through on a modern macbook pro.
[21:46:33] <ikke> lpapp: https://stackoverflow.com/questions/2179722/checking-out-old-file-with-original-create-modified-timestamps
[21:46:49] <ikke> There are a number of tools mentioned there
[21:47:20] <lpapp> thanks, this is helpful!
[21:47:27] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:47:31] <osse> lpapp: how many build steps are there in a clean build?
[21:47:37] <lpapp> 5000
[21:47:56] <ikke> lpapp: note that this probably won't help you during bisect
[21:48:02] <osse> then my guess is that stuff is working as intended
[21:48:08] <lpapp> no, for bisect, I need ccache
[21:48:19] <lpapp> or maybe not even that, but like an optimised header system
[21:48:36] <osse> you could also touch -d yesterday **/*.cpp
[21:49:09] <lpapp> yeah, I guess that is what the automated tools do.
[21:49:19] <lpapp> by the use of git commands to get the files, etc.
[21:49:26] <ikke> osse: don't you prevent anything from bein rebuilt, then?
[21:49:33] <lpapp> where yesterday == oldmtime
[21:49:41] <ikke> yes, that's what those tools do
[21:49:58] <osse> ikke: sometimes I think like i drug dealer: "Hey, I just people what they want"
[21:50:03] <osse> *like a
[21:50:10] <osse> *give people
[21:50:12] <osse> jesus
[21:50:16] <ikke> :D
[21:50:22] <lpapp> too many enters :P
[21:50:24] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:50:25] *** Joins: TomyWork (~TomyLobo@p200300e80f133c003cd1713e5d023bbb.dip0.t-ipconnect.de)
[21:50:48] <ikke> too many typos
[21:50:54] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 272 seconds)
[21:50:56] <osse> About 40 % rebuilding sounds well withing normalcy, depending on which files are changed.
[21:51:33] * osse checks if normalcy is a word.
[21:51:36] <lpapp> yeah, I guess in a big project, git bisect speedup is only possible by a well-designed header system
[21:51:55] <lpapp> to avoid rebuilding everything and the kitchen sink.
[21:52:00] <ikke> lpapp: I think that restoring mtimes might even break the build
[21:52:12] <ikke> if it does not build artifacts where the source is older then the artifact
[21:52:17] <lpapp> yeah, but it would be useful to jump between branches
[21:52:20] <lpapp> to check out things.
[21:52:24] <ikke> if you checkout an old commit, it would prevent those files from being rebuilt
[21:52:32] <lpapp> unless worktrees are the preferred workflow for that sort of thing.
[21:52:43] <ikke> That's one of the primary usecases
[21:52:47] <ikke> for worktrees
[21:53:55] *** Quits: filePeter (~filePeter@user/filepeter) (Quit: leaving)
[21:54:15] <lpapp> Is this a relatively new feature? Never heard of it.
[21:54:26] <lpapp> Although, I have not tried to learn new git features the last 7-10 years.
[21:54:30] <ikke> 1 or 2 years old or so
[21:54:35] <ikke> maybe older
[21:54:40] *** Joins: randomuser (~randomuse@user/randomuser)
[21:54:47] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:54:51] <lpapp> ah, that explains why I am not accustomed with it yet, thanks!
[21:55:04] <osse> 2015
[21:55:50] <osse> I think it had a rough beginning, though. Now it's pretty neat.
[21:56:03] <ikke> lol, 6 years old
[21:57:20] <lpapp> if you guys all use it, I guess I should learn about it
[21:57:24] <lpapp> because it must be useful then
[21:57:51] <ikke> I rarely use it, but I do not work on C/C++ codebases
[21:58:27] <lpapp> I thought you work on git
[21:58:51] <ikke> I provided a couple of patches
[21:58:59] <ikke> but nothing more
[21:59:00] <jast> when ikke needs to make changes to git, he does it telepathically
[21:59:17] <osse> An alternative (if you truly just want to look around) is to make a dump of the files somewhere using e.g. git archive.   I use several worktrees at work. the git-worktree command itself isn't that often I use :P
[21:59:40] <lpapp> what about a second clone for browsing?
[22:00:01] <osse> My repo at work has the fabulous name "cpp". At work I do  git worktree add ../cpp-blah new-branch and away I go
[22:00:03] <ikke> if you clone the repo using the filepath, then the 2nd clone would be cery cheap
[22:00:04] <ikke> very*
[22:00:18] <jast> you can do that but it makes sense to clone locally, otherwise you have to re-download everything and the DB space is taken up twice
[22:00:32] <jast> if it's something you do often, probably git-worktree is easier
[22:01:00] <lpapp> I see, thanks.
[22:01:24] <jast> personally for quick one-off browsing I use tig
[22:01:35] <osse> A second clone is more distinct. With worktress you can 'git fetch' in one worktree, and origin/master will be up to date in the other.
[22:01:35] <ikke> the only 'downside' is that you can only have one worktree per branch
[22:01:36] <lpapp> as I can see, it will also expire
[22:01:41] <lpapp> so, it will not stray around
[22:01:47] <lpapp> I guess that is an advatange compared to clones.
[22:02:41] <ikke> That only applies when you remove the directory manually
[22:02:52] <ikke> git will not expire worktrees that extill exist on disk
[22:03:38] <osse> luckily 'git worktree list' exists
[22:03:50] <lpapp> oh, yes, I misread it.
[22:04:27] <lpapp> Is worktree also the preferred choice for build for different architectures?
[22:04:38] <lpapp> or is that normally done with one clone and multiple build directories?
[22:04:48] <jast> personally I'd try to do it with different build dirs
[22:05:02] <jast> I don't want builds cluttering up my source tree anyway
[22:06:04] <osse> worktrees make sense for different versions of the codebase to co-exist. presumably you want to build the same codecase for the different architectures
[22:06:39] <ikke> for which worktrees are not suitable
[22:07:57] <furrymcgee> I am using worktree into build environment
[22:09:05] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[22:10:00] <lpapp> furrymcgee: how do you mean?
[22:10:02] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:10:12] <furrymcgee> kindof chroot
[22:11:31] <lpapp> ?
[22:11:35] <lpapp> chroot?
[22:12:09] <lpapp> I guess worktree does not duplicate the source files?
[22:12:28] <lpapp> I should try, shouldn't I
[22:13:02] <osse> do it
[22:13:03] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[22:13:08] <furrymcgee> it does not duplicate the .git dir
[22:13:36] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[22:13:37] <osse> git worktree add ../new-dir other-branch
[22:13:46] <osse> (whether you want to ../ is up to you of course)
[22:13:57] *** Joins: rsx (~dummy@ppp-188-174-153-141.dynamic.mnet-online.de)
[22:14:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:14:57] <furrymcgee> whats the use case? you have lots of changes but dont want to build them?
[22:15:21] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:15:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:15:52] <jast> the use case generally speaking is you want to work on more than one branch at a time
[22:16:29] <jast> personally I've never needed to, branch switching has always been enough for me
[22:16:52] <lpapp> yeah, it should be enough unless it causes costly rebuilds.
[22:17:04] <j416> I use a secondary worktree from time to time to have a notes branch checked out where I keep some notes and todo list and similar. I find it handy.
[22:17:44] <furrymcgee> I think a switch should be minimal and not differ too much
[22:18:37] <imMute> furrymcgee: it changes the mtime on the files changed which causes them to rebuild.  even if you switch back to the original branch before doing the build.  that's lpapp's concern.
[22:19:06] <lpapp> yeah
[22:19:12] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[22:19:26] <lpapp> I have to work against the main branch and a long-lived feature branch
[22:19:30] <lpapp> and there is a big diversion
[22:20:23] <ikke> Then I would use a worktree for one of them
[22:20:29] *** Parts: dminuoso (~dminuoso@user/dminuoso) (WeeChat 3.1)
[22:20:44] *** Joins: hubble99 (~hubble@69.160.255.185)
[22:21:02] <lpapp> yeah, for that, I have used two clones
[22:21:04] <j416> or both. b adum.
[22:21:12] <lpapp> but I will reconsider that now in favor of worktrees.
[22:21:45] *** Joins: guest29348769876 (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de)
[22:22:03] <furrymcgee> commit the global config.h to both branches
[22:23:49] *** Quits: guest29348769876 (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de) (Client Quit)
[22:24:00] *** Joins: guest29348769876 (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de)
[22:25:01] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:912d:2cfe:e641:8268)
[22:25:22] *** Quits: TomyWork (~TomyLobo@p200300e80f133c003cd1713e5d023bbb.dip0.t-ipconnect.de) (Quit: Leaving)
[22:25:28] *** rsx is now known as Guest9710
[22:25:34] *** Quits: Guest9710 (~dummy@ppp-188-174-153-141.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[22:25:37] *** Quits: guest29348769876 (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de) (Remote host closed the connection)
[22:25:48] *** Joins: guest29348769876 (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de)
[22:26:29] *** Quits: guest29348769876 (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de) (Remote host closed the connection)
[22:26:37] *** Joins: rsx (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de)
[22:26:54] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 258 seconds)
[22:29:55] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:29:58] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[22:31:25] *** Quits: hubble99 (~hubble@69.160.255.185) (Ping timeout: 246 seconds)
[22:44:44] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 272 seconds)
[22:46:53] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[22:47:12] *** Joins: zebrag (~chris@user/zebrag)
[22:48:10] *** Quits: rsx (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de) (Quit: rsx)
[22:53:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:56:48] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[23:01:09] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:02:31] *** Joins: hbautista (~hbautista@187.171.91.115)
[23:03:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:75b6:5415:a6a4:79d2)
[23:03:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:04:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:05:01] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[23:05:33] *** Joins: SuperLag (~akulbe@user/superlag)
[23:05:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 268 seconds)
[23:05:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[23:06:16] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 272 seconds)
[23:06:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[23:06:34] *** Joins: eqw (~eqw@31.134.178.99)
[23:08:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:08:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:12:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:13:06] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[23:13:37] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:13:47] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[23:14:30] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[23:14:49] *** Joins: justache (~justache@user/justache)
[23:17:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:18:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:19:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:19:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:19:55] *** Quits: saroy (~sanroy@45.249.73.214) (Quit: Leaving)
[23:24:52] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:25:25] *** Quits: jimklimov1 (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[23:25:51] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:26:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:27:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:29:49] *** Joins: gast0n (~g4570n@user/gast0n)
[23:30:00] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 276 seconds)
[23:30:09] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[23:30:32] *** Quits: mhi (~mhinz@user/mhi) (Quit: mhi)
[23:31:03] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[23:31:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:32:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:33:49] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[23:34:39] *** Joins: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133)
[23:37:18] *** Quits: sharperguy (~sharpergu@2001:16b8:5c50:5100:fd1a:812c:6af0:a515) (Ping timeout: 272 seconds)
[23:37:52] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:39:56] *** Joins: janemba (~janemba@94.204.254.193)
[23:40:00] <janemba> hi
[23:40:46] *** Joins: goldfish (~goldfish@user/goldfish)
[23:42:29] <janemba> I copied a git folder in my git repo but I forgot to delete the '*.git' related stuff before commit/add. Now, when I "git add -A" the files into the copied folders are not added. How can I do it ?
[23:42:34] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:45:52] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[23:46:19] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:46:25] <imMute> delete the extra .git folder and try again?
[23:46:52] <imMute> I guess you committed the other repo as a submodule, you'll probably have to undo that.
[23:46:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:47:03] <ikke> git rm --cached <path>
[23:48:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:48:10] <janemba> thx !!!
[23:48:19] <janemba> rm --cached works
[23:49:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[23:49:33] *** Quits: roadie (~user@2a02:8108:ec0:1427:75b6:5415:a6a4:79d2) (Ping timeout: 268 seconds)
[23:49:41] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[23:51:42] *** Quits: humanface (~humanface@20014C4E1C542F009880DA0B227EC187.dsl.pool.telekom.hu) (Quit: Client closed)
[23:51:45] *** Joins: pulse (~pulse@user/pulse)
[23:55:05] <sangy> ikke: thanks! sorry it took me this long to get back to you :)
[23:56:10] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:57:00] *** Joins: lastgitget (~lastgitge@gw.vfc.com)
[23:58:10] *** Joins: fling (~fling@user/fling)
[23:58:31] <lastgitget> Hi all - I've been asked to do some research on git commits in the last few months.  I was able to get the number of commits by contributer using "git shortlog -s -n --all -e --after=04/01/2021 --merges --branches=develop" -- but I was wondering if anyone can help me write a command which nets me the last commit date per developer.
[23:58:54] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 258 seconds)
