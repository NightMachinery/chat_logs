[00:02:30] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:02:31] *** Quits: plantman2 (~plantman@2601:405:4680:1b0::2) (Quit: Leaving)
[00:03:38] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:03:46] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[00:04:26] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[00:06:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[00:07:42] *** Quits: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[00:15:56] *** Joins: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com)
[00:18:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[00:21:16] *** Joins: rvalue (~rvalue@user/rvalue)
[00:28:04] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[00:34:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:39:29] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[00:46:58] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:56:09] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[01:06:16] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[01:07:17] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[01:08:45] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe) (Read error: Connection reset by peer)
[01:09:01] *** Joins: rgrinberg (~textual@200.5.63.76)
[01:13:25] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[01:14:08] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:21:25] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[01:25:06] <paulf> What makes calls to ios_base::width() thread safe?
[01:25:11] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[01:29:02] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[01:29:11] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:34:20] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[01:34:21] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:37:03] <RandomReader> nothing? as far as I know there's no thread safety guarantee for it
[01:37:08] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:38:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:38:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:38:49] *** ChanServ sets mode: +v npaperbot
[01:40:18] <paulf> in that case is there something earlier in a call to cerr or cout that makes them thread safe?
[01:41:19] <RandomReader> the standard iostream objects (like cout and cerr) have a specific guarantee of safety: https://eel.is/c++draft/iostream.objects#overview-7
[01:41:46] <paulf> Helgrind and DRD (the Valgrind thread hazard detection tools) complain about ios_base::width() calls
[01:41:54] <RandomReader> but that only applies when they remain synchronized to the C stdio base (which is the default) and only applies to the formatted and unformatted functions
[01:42:00] <RandomReader> ios_base::width is not one of those things
[01:42:03] <paulf> And I'm trying to fix them
[01:42:30] <RandomReader> I don't know what you mean by "fix" here
[01:42:39] <RandomReader> if you're trying to dig around a specific implementation, talk to the maintainers?
[01:42:52] <RandomReader> if you're asking whether it's supposed to be thread-safe, the answer as far as I know is "no"
[01:42:58] <paulf> Trying to fix DRD and Helgrind
[01:43:33] <RandomReader> that still seems buried in implementation details, not standard C++
[01:44:54] <paulf> Indeed, but I see the same with libc++ on FreeBSD and libstdc++ on Linux
[01:45:14] <RandomReader> I'm still not getting the underlying premise here
[01:45:33] <RandomReader> are you saying that they say a call to ios_base::width is unsafe? and you believe that's a false flag?
[01:46:51] <paulf> I think that this is a false positive, and the the iostreams are using some non-pthread mutex to ensure thread-safety
[01:46:56] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:47:07] <RandomReader> why do you think it's a false positive?
[01:47:14] <RandomReader> (aka why do you think it's supposed to be thread safe?)
[01:47:42] <paulf> for a start tsan never complains
[01:48:06] <RandomReader> ok, then we're back to 100% implementation details, and nothing to do with the C++ standard
[01:48:52] <RandomReader> it's certainly possible everyone involved could be making it thread-safe, as long as it behaves the way it's supposed to that'd be fine
[01:48:54] <paulf> and I've always believed that formatted io (C and C++) has been thread safe since the year dot
[01:49:13] <RandomReader> but as far as I know there's no guarantee of thread safety here by the C++ standard
[01:50:35] <RandomReader> neither standard even understood threads until about a decade ago :P
[01:50:46] <paulf> the green para in your link mandates no data race (though no guarantee on the order of output)
[01:51:03] <RandomReader> but specifically for the formatted and unformatted i/o functions, nothing more
[01:51:13] <RandomReader> ios_base::width is a manipulator, not one of those things
[01:51:48] <RandomReader> (the implication when you get through all the abstraction layers is that it gets its thread safety from the underlying buffer, which is synchronized to the underlying C stdio streams, which make that guarantee themselves)
[01:52:37] <RandomReader> (hence all the qualifiers: do an operation that doesn't involve the buffer, or turn off that synchronization, then no guarantee)
[01:52:50] <paulf> yes but width() is being called somewhere within the cerr/cout calls so if cerr/cout are safe then so will be width
[01:53:18] <RandomReader> that'd be an implementation choice, not a requirement
[01:53:54] <RandomReader> as in, as far as I'm aware nothing requires it to call width() internally
[01:53:59] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:54:51] <RandomReader> that might well be the simplest way to get the info, and so making it thread safe might well be the obvious option .. just not a requirement and so not necessarily true everywhere
[01:55:22] <RandomReader> also possible I'm missing something, the iostream spec is ridiculously nuanced
[01:56:14] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:31] *** Joins: rgrinberg (~textual@200.5.63.76)
[02:06:37] <paulf> gah all I see is the sentry that according to cppreference does stuff like checking the stram state
[02:08:09] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[02:09:10] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[02:11:23] *** Quits: AmR (~AmREiSa@102.47.62.197) (Ping timeout: 268 seconds)
[02:12:44] *** Joins: Betal (~Betal@user/betal)
[02:17:44] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:17:56] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[02:23:59] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Remote host closed the connection)
[02:26:25] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:29:21] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:30:39] *** Joins: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net)
[02:30:50] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:30:57] *** Quits: magla (~gelignite@55d49b41.access.ecotel.net) (Quit: Stay safe!)
[02:31:17] *** Joins: rgrinberg (~textual@200.5.63.76)
[02:32:09] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:34:02] *** Joins: pizdets (~pizdets@183.182.110.66)
[02:34:15] *** Quits: pizdets_ (~pizdets@183.182.110.72) (Ping timeout: 250 seconds)
[02:35:27] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[02:36:11] *** Quits: essial (~essial@8.9.230.82) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:37:43] *** Joins: lovelace (~Elspeth@2.24.23.175)
[02:41:37] *** Quits: hightower3 (~hightower@213.147.110.20) (Ping timeout: 250 seconds)
[02:44:51] *** Joins: Atque (~Atque@user/atque)
[02:47:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:50:22] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[02:53:19] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e8e4:f373:6fd4:6d38) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:56:36] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 245 seconds)
[02:56:44] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[02:58:40] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[02:58:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:23] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[03:00:18] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:02:01] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 245 seconds)
[03:02:14] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:03:16] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Remote host closed the connection)
[03:05:27] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:05:38] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[03:06:09] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[03:07:38] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[03:08:15] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:08:44] *** Quits: proller (~p@2a02:6b8:b081:1216::1:22) (Ping timeout: 268 seconds)
[03:09:19] *** Joins: proller (~p@80.240.216.69)
[03:10:41] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[03:12:33] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[03:12:52] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[03:13:08] *** Quits: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com) (Remote host closed the connection)
[03:13:14] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:13:31] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 256 seconds)
[03:15:55] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Remote host closed the connection)
[03:16:14] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[03:21:02] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[03:22:58] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:24:07] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:26:12] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[03:26:15] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[03:26:39] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:27:36] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:28:41] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:29:29] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:29:42] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[03:31:45] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:32:01] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 245 seconds)
[03:32:52] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[03:34:31] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 245 seconds)
[03:35:24] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:41:18] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[03:51:01] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[03:51:43] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:52:48] *** Quits: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net) (Quit: WeeChat 2.8)
[03:53:08] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 268 seconds)
[03:57:09] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[03:57:25] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[03:59:41] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[04:01:15] *** Joins: chenqisu1 (~03cia7d@183.217.200.156)
[04:06:57] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:07:21] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[04:12:26] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 245 seconds)
[04:14:12] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[04:18:59] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[04:19:31] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[04:24:55] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[04:27:45] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[04:33:30] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[04:33:32] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c9c2:550b:b5da:5a2a) (Quit: Konversation terminated!)
[04:36:39] *** Joins: ferdna (~ferdna@user/ferdna)
[04:38:40] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[04:39:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:43:08] *** Joins: rgrinberg (~textual@200.5.63.76)
[04:43:51] *** Joins: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net)
[04:47:02] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[04:51:32] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[04:54:53] *** Joins: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca)
[04:57:04] *** Quits: chozorho (~chozorho@2601:146:300:c30::183) (Quit: WeeChat 3.0)
[05:00:56] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:04:38] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 256 seconds)
[05:05:16] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[05:06:11] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 245 seconds)
[05:08:35] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[05:13:41] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 245 seconds)
[05:14:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[05:14:33] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:15:27] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:15:31] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[05:16:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[05:17:03] *** Joins: skapate (~Skapata@2804:14c:87b0:a6f9:a978:3601:cbb2:ebf5)
[05:17:03] *** Quits: skapate (~Skapata@2804:14c:87b0:a6f9:a978:3601:cbb2:ebf5) (Changing host)
[05:17:03] *** Joins: skapate (~Skapata@user/skapata)
[05:17:32] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[05:18:23] *** fluter- is now known as fluter
[05:19:44] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 260 seconds)
[05:20:12] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[05:21:01] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[05:23:59] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[05:28:42] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 268 seconds)
[05:30:29] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:30:50] *** Joins: nicholaus04 (~nicholaus@172.58.22.198)
[05:31:25] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[05:34:48] *** Joins: hightower3 (~hightower@213.147.110.20)
[05:38:09] *** Joins: chozorho (~chozorho@2601:146:300:c30:9a57:4402:e6ce:9b99)
[05:38:35] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[05:38:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:38:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:38:49] *** ChanServ sets mode: +v npaperbot
[05:40:22] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[05:43:07] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[05:45:44] *** Joins: xiongxin (~Thunderbi@119.123.103.170)
[05:47:12] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[05:47:50] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 268 seconds)
[05:48:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:57:47] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[05:58:04] *** Joins: rvalue (~rvalue@user/rvalue)
[06:00:32] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[06:02:31] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[06:05:21] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600cdfbd43a4196f4ad.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[06:10:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:11:27] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:15:25] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[06:16:32] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[06:21:58] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[06:23:50] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[06:25:15] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:26:04] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 268 seconds)
[06:27:30] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[06:28:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:29:22] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[06:32:25] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[06:33:13] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Changing host)
[06:33:13] *** Joins: Flannel (~flannel@user/flannel)
[06:34:44] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[06:36:30] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:37:27] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[06:38:33] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[06:42:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[06:44:20] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[06:52:15] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[06:58:30] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[07:00:11] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:05:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:06:28] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[07:07:47] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:08:01] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:08:08] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[07:15:43] *** Joins: gargus (~user@114.198.29.250)
[07:18:19] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[07:19:06] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[07:22:14] *** Joins: rgrinberg (~textual@200.5.63.76)
[07:22:17] *** Joins: jkaye (~jkaye@2601:281:8300:7530:ee04:303f:9e4f:aa70)
[07:24:01] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 268 seconds)
[07:24:40] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[07:26:43] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Read error: Connection reset by peer)
[07:27:03] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[07:27:04] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Ping timeout: 265 seconds)
[07:28:01] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[07:29:41] *** Joins: llh (~llh@user/llh)
[07:29:56] *** Quits: rahl (~rahl@102.114.182.116) (Ping timeout: 245 seconds)
[07:30:32] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[07:32:08] *** Joins: rahl (~rahl@102.114.191.128)
[07:32:37] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[07:34:48] *** Joins: thad_the_man_2 (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[07:42:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[07:44:25] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[07:46:31] *** Joins: Enitin (~Enitin@82.102.22.84)
[07:47:06] *** Quits: thad_the_man_2 (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Quit: Leaving)
[07:49:26] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[07:50:16] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 265 seconds)
[07:50:28] *** Quits: jkaye (~jkaye@2601:281:8300:7530:ee04:303f:9e4f:aa70) (Ping timeout: 260 seconds)
[07:53:37] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 268 seconds)
[07:55:35] *** Joins: rvalue (~rvalue@user/rvalue)
[08:08:03] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[08:13:10] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[08:16:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:16:38] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:17:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:18:28] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[08:21:50] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[08:45:59] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[08:55:15] *** Joins: NiD27 (~nid27@49.205.148.17)
[08:58:15] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:02:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[09:02:41] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:03:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[09:03:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:05:30] *** Joins: reumeth (~reumeth@user/reumeth)
[09:06:42] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[09:07:07] *** Joins: pulse (~pulse@user/pulse)
[09:12:40] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:32:03] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:38:43] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:38:50] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:38:50] *** ChanServ sets mode: +v npaperbot
[09:45:20] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:683d:c166:e848:5a1f) (Quit: ZNC 1.8.2 - https://znc.in)
[09:45:33] *** Joins: Albright (~Albright@149.28.13.173)
[09:50:11] *** Joins: nostart (~nostar@45.14.195.105)
[09:52:47] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 250 seconds)
[09:56:04] *** Quits: nostart (~nostar@45.14.195.105) (Quit: Leaving)
[10:01:08] *** Quits: chenqisu1 (~03cia7d@183.217.200.156) (Ping timeout: 260 seconds)
[10:01:27] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:04:01] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[10:08:08] *** Joins: llh (~llh@user/llh)
[10:15:47] *** Joins: chenqisu1 (~03cia7d@183.217.200.156)
[10:19:17] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:19:37] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 265 seconds)
[10:20:18] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[10:21:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:26:47] *** Joins: nostar (~nostar@45.14.195.105)
[10:28:50] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[10:45:58] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:50:41] *** Joins: Atque (~Atque@user/atque)
[10:51:25] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[10:57:08] *** Quits: rahl (~rahl@102.114.191.128) (Ping timeout: 260 seconds)
[10:58:38] *** Joins: rahl (~rahl@102.114.20.36)
[10:59:02] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.243) (Ping timeout: 240 seconds)
[11:00:05] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.78)
[11:04:33] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[11:05:21] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[11:08:34] *** Joins: Sadale (~Sadale@user/sadale)
[11:20:14] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[11:20:30] *** Joins: Sadale (~Sadale@user/sadale)
[11:23:11] *** Joins: chenbin (~user@183.208.58.148)
[11:26:02] *** Parts: chenbin (~user@183.208.58.148) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[11:31:20] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:55] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:31:56] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[11:34:31] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[11:35:57] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:37:50] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[11:47:55] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[11:53:16] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[11:53:59] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[11:54:02] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 240 seconds)
[11:55:07] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[12:00:21] *** Joins: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com)
[12:04:05] *** Quits: chenqisu1 (~03cia7d@183.217.200.156) (Ping timeout: 250 seconds)
[12:04:32] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:07:20] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:14:27] *** Joins: Atque (~Atque@user/atque)
[12:15:38] *** Joins: robod34 (Username@79.113.195.239)
[12:16:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:24:02] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:25:24] *** Quits: NiD27 (~nid27@49.205.148.17) (Quit: Leaving)
[12:34:03] *** Quits: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[12:34:59] *** Joins: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com)
[12:35:32] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[12:37:00] *** Quits: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com) (Client Quit)
[12:37:28] *** Joins: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com)
[12:37:36] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:40:46] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[12:44:21] *** Quits: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[12:44:24] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[12:44:48] *** Joins: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com)
[12:51:23] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Remote host closed the connection)
[12:52:58] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[12:55:09] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[13:01:02] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[13:03:18] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[13:08:06] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[13:09:12] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[13:10:22] *** Quits: montpol (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[13:11:12] *** Joins: bindu (~bindu@user/bindu)
[13:12:00] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 265 seconds)
[13:16:19] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[13:17:02] *** Joins: junon (~junon@user/junon)
[13:18:13] <junon> Is there a way to bring into scope all enum constants via e.g. a `using` statement?
[13:18:34] *** Joins: pulse (~pulse@user/pulse)
[13:19:29] <junon> e.g. enum class Foo { A,B,C; } int main() { using Foo::*; Foo v = A;
[13:19:36] <junon> something like that.
[13:21:14] *** Joins: millido (~millido@84.210.150.128)
[13:23:01] <RandomReader> https://en.cppreference.com/w/cpp/language/enum#Using-enum-declaration
[13:23:59] <junon> Ah it's a c++20 feature |
[13:24:45] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b80b:4e57:8e38:df5a)
[13:26:03] <junon> Clang 13 still reports "expected unqualified-id" though. Is this not implemented yet?
[13:26:13] *** Joins: montpol (montpol@fine.mouses.xyz)
[13:26:59] <junon> Hmm clang 13 should have it.
[13:30:20] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:31:21] <junon> Anyway thanks RandomReader, that's what I needed.
[13:31:30] *** Parts: junon (~junon@user/junon) ()
[13:31:35] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.78) (Remote host closed the connection)
[13:32:24] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.78)
[13:34:01] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[13:35:08] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:36:21] *** Joins: Viewday112 (~Viewday@user/viewday)
[13:37:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:37:47] *** Viewday112 is now known as Viewday11
[13:38:43] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:38:50] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:38:50] *** ChanServ sets mode: +v npaperbot
[13:39:32] *** Quits: rahl (~rahl@102.114.20.36) (Ping timeout: 240 seconds)
[13:39:36] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:40:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:43:18] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:43:37] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[13:45:07] *** Joins: jailop_ (~jailop@ool-944bb915.dyn.optonline.net)
[13:46:12] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:48:33] *** Joins: rendar (~rendar@user/rendar)
[13:49:02] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:51:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[13:56:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:05:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:08:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:08:25] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:08:41] *** Joins: Brainium (~brainium@user/brainium)
[14:10:29] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[14:10:50] *** Joins: plastico (~plastico@neomutt/plastico)
[14:11:20] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:15:19] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b80b:4e57:8e38:df5a) (Ping timeout: 265 seconds)
[14:16:32] *** Joins: furrymcgee (~devuan@cgn-89-1-209-86.nc.de)
[14:18:02] *** Joins: AmR (~AmREiSa@102.47.62.197)
[14:19:32] *** Quits: chozorho (~chozorho@2601:146:300:c30:9a57:4402:e6ce:9b99) (Ping timeout: 240 seconds)
[14:19:33] *** Joins: magla (~gelignite@55d4f645.access.ecotel.net)
[14:19:37] *** Joins: evangeline (~Eleanor@178.79.105.181)
[14:22:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[14:23:10] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:25:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[14:31:27] *** Joins: riv (river@tilde.team/user/river)
[14:31:31] <riv> can I use == to compare two structs?
[14:31:37] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[14:31:46] *** Joins: proller (~p@80.240.216.69)
[14:31:51] <riv> I know there can be padding in structs and I was worried if that was uninitialized
[14:31:57] *** Joins: slidercrank (~slidercra@user/slidercrank)
[14:32:25] <leduyquang753> There is no operator== for structs.
[14:32:37] <leduyquang753> In other words you will need to write your own operator==.
[14:32:41] <riv> oh ill have to make my own compare function that checks each field
[14:35:54] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[14:38:25] <riv> and if I do struct foo x; in my class, will it be initialized with zero values?
[14:38:31] <riv> or do I have to set each field to 0
[14:43:04] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:44:32] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[14:44:42] <Raziel> riv, you can make sure they're initialized by giving them a default value in the struct def
[14:45:06] <Raziel> struc foo {int x = 0;} etc
[14:45:06] <riv> oh nice! and if I don't do that, does it take 0 or will it be uninitialized memory?
[14:45:10] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[14:45:17] *** Quits: Brainium (~brainium@user/brainium) (Ping timeout: 265 seconds)
[14:45:49] <Raziel> if you don't do that, it can be uninitialized
[14:46:20] <Raziel> usually depends on the compiler and settings
[14:46:22] <riv> thanks a lot
[14:46:35] <Raziel> not something you wanna rely on, for sure :p
[14:46:45] <riv> yeah im always worried about it
[14:47:09] *** Joins: rajkosto (~rajkosto@93-86-146-248.dynamic.isp.telekom.rs)
[14:51:44] <Raziel> riv, also, the fact that you need to write your own == operator isn't quite right
[14:51:46] <Raziel> you can default it
[14:51:59] <Raziel> since C++20 anyway :p
[14:52:07] <riv> oh that's useful
[14:52:15] <Raziel> https://en.cppreference.com/w/cpp/language/default_comparisons
[14:53:13] *** Quits: maxxe (~maxxe@user/maxxe) (Quit: off. bbl.)
[14:59:13] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[15:01:12] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[15:04:17] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[15:04:43] <montpol> Can one change the values of an array when it's already defined like this: https://bpa.st/3T2Q
[15:05:32] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[15:05:33] <montpol> or since its on the stack, there is no way of changing it since it all info has to be defined by compile time
[15:05:50] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[15:06:08] <Raziel> montpol, where it is doesn't matter. it's not const so you can modify the values just fine.
[15:06:40] <montpol> Raziel but its on the stack, so we cannot alter it right?
[15:07:04] <montpol> ah ok i get my misunderstanding. as long as the change is also on compile time, it is ok
[15:07:32] <montpol> but for example for vectors, its content are stored on the heap, so things can be changed there during runtim
[15:07:35] <montpol> is that correct?
[15:07:38] <Raziel> errr.
[15:08:07] <Raziel> for one, I don't believe there's any guarantee of the data of an std::array to be on the stack or heap specifically
[15:08:11] <Raziel> same for vector, really.
[15:08:42] <montpol> hm ok...i was surprised by this code. Not really sure what they want to imply then.
[15:09:13] <Raziel> https://wandbox.org/permlink/7yAR9Y8YiFgoY9ce
[15:09:20] <Raziel> see, no issues v:
[15:09:44] <Raziel> and if you think it's cause of compile time... change it to rand() or such instead of 50
[15:10:12] <ville> Raziel: array is an aggregate by specification, so seems difficult for its storage to not be on "stack". if we presume terms stack and heap mean memory "locations"
[15:10:33] <Raziel> ville, right, that's fair. and we know vector is gonna be on heap most of the time because it needs to be dynamically sized and re-sized
[15:10:51] <ville> Raziel: that would be upto the allocator you pass in
[15:11:36] *** Quits: martiert1work (~martiert@173.38.220.60) (Ping timeout: 245 seconds)
[15:11:42] *** Quits: hightower3 (~hightower@213.147.110.20) (Remote host closed the connection)
[15:12:00] *** Joins: hightower3 (~hightower@213.147.110.20)
[15:12:04] *** Quits: martiert_work (~martiert@173.38.220.60) (Ping timeout: 268 seconds)
[15:12:08] <Raziel> yeah. but the default one, in most implementations, work like that, no?
[15:12:13] <Raziel> works* even
[15:12:59] <montpol> i guess in general: array= size is known at compile time; vector = size is not known at compile time
[15:13:04] <Raziel> either way, I'm not sure where the idea of stack memory not being modifiable
[15:13:08] <Raziel> comes from
[15:13:26] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[15:14:41] *** Quits: hightower3 (~hightower@213.147.110.20) (Client Quit)
[15:14:49] *** Joins: hightower3 (~hightower@213.147.110.20)
[15:15:13] *** hightower3 is now known as hightower2
[15:15:17] *** Quits: hightower2 (~hightower@213.147.110.20) (Remote host closed the connection)
[15:15:33] *** Joins: hightower2 (~hightower@213.147.110.20)
[15:16:18] <ville> perhaps the persons were mixing changing the size vs a dynamically allocated array
[15:16:19] <Raziel> montpol, yeah, that's generally how you'd pick whether you use one or the other
[15:17:07] <ville> montpol: max size specifically. you can always pretend you have a smaller array in a bigger array
[15:17:22] <Raziel> ville, maybe, although "change the values" is pretty specific :p
[15:17:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:18:08] <ville> montpol: although once your max size gets big enough you might have concerns about your thread's stack running out, so you might opt to choose dynamic allocation then as well
[15:18:48] <Raziel> if you start seeing "warning: function exceeds max stack size" then yes, you might wanna move some stuff to the heap. lol
[15:19:04] <ville> montpol: that is you know your working set will need 2GB of memory. you'll likely wish to allocate that dynamically
[15:20:07] <montpol> ville ok good to know thanks
[15:20:36] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[15:20:41] <montpol> Raziel thanks as well!
[15:21:57] <Raziel> montpol, if you want, it might clear up some confusion if you stick my example into godbolt or such, so you can see what the asm looks like
[15:21:58] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[15:22:27] <Raziel> and why there's no issue modifying those (and how it does indeed happen on runtime)
[15:22:50] <montpol> ok will dow
[15:23:09] *** Joins: grayn (~Thunderbi@124.188.209.195)
[15:23:43] *** Parts: grayn (~Thunderbi@124.188.209.195) ()
[15:24:02] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[15:26:13] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[15:26:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[15:26:49] <montpol> https://wandbox.org/permlink/7yAR9Y8YiFgoY9ce
[15:27:20] <montpol> how does int_ptr[2] give the same value as  *(int_ptr + 2)?
[15:27:32] <montpol> i would expect int_ptr[2] to give the address
[15:27:39] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[15:27:57] <montpol> it's not even dereferenced
[15:28:47] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:30:27] <RandomReader> you need to run and share in wandbox to get a new link, you just posted the old one
[15:30:43] <RandomReader> but for what I'm guessing you're asking, here's a question in response: what would be the point of a [subscript] operator if it was identical to an addition+ operator?
[15:31:51] *** Joins: bobb_ (~bobb_@dslb-092-074-251-151.092.074.pools.vodafone-ip.de)
[15:31:58] <montpol> https://wandbox.org/permlink/reia5rsJ49k1nxMr
[15:32:02] <montpol> i ran it but didnt share
[15:32:12] <RandomReader> ah
[15:33:01] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 256 seconds)
[15:33:08] *** Quits: jailop_ (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 265 seconds)
[15:35:28] <RandomReader> pointers aren't very special, they're just objects like any other, they support specific operators to get specific results .. + adjusts the location value, * gets the object at the location, [] does both
[15:36:11] <RandomReader> a bare array is a contiguous sequence of objects, so a pointer to one of them can serve as an "iterator", allowing you to get to others in the sequence
[15:36:23] <montpol> hm ok so it has to do with the [] operator, it deferences it
[15:36:29] <montpol> i find that odd
[15:36:32] <RandomReader> this gets used often enough that it was decided to have [subscript] be a useful operator on its own
[15:36:45] <Raziel> basically arr[2] is just equivalent to *(arr + 2), for most intents and purposes.
[15:37:02] <montpol> so then int_ptr+2; would just get the address of the 3rd value
[15:37:21] <Raziel> yes, because they're contiguous addresses
[15:37:30] <Raziel> and then * dereferences that and gets you the value at that address
[15:37:38] <montpol> ok thank you. just ran it and it was so :)
[15:37:51] <RandomReader> !basics]
[15:37:52] <nolyc> RandomReader: Error: "basics]" is not a valid command.
[15:37:54] <RandomReader> !basics
[15:37:55] <nolyc> Books, references, tutorials, for all levels of learning: https://isocpp.org/get-started ; https://isocpp.org/faq ; https://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; https://cppreference.com/
[15:38:08] <RandomReader> for learning in general, strongly recommend some structured material, such as the books in the stackoverflow link
[15:38:27] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 265 seconds)
[15:38:32] <RandomReader> unlike a lot of modern, purpose-built languages, C++ has a lot of conceptual details that are not obvious from code
[15:38:51] <RandomReader> meaning it's incredibly difficult to learn (at least correctly) by example .. so explanations help, and most of the good ones seem to be in book form
[15:39:09] <RandomReader> the other links may help too
[15:39:56] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 245 seconds)
[15:39:58] <Raziel> well, examples that are specifically designed to showcase such details can help, but yeah. most natural code isn't exactly gonna comment "//this is actually equivalent to ptr+n" every time it does some arr[n]
[15:39:59] <Raziel> :p
[15:40:16] <Raziel> arr+n, whatever
[15:40:21] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:40:34] <RandomReader> it's also not going to tell you what to search for to find out wtf     [n]{ return 1; }   means
[15:40:36] *** Joins: meicceli (meicceli@kapsi.fi)
[15:40:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9a7:b79a:8640:c125)
[15:41:01] <RandomReader> (that's the other problem with learning C++, all the syntax is contextual!)
[15:41:09] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[15:43:40] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:45:31] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[15:46:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[15:50:40] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:51:58] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[15:55:24] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:55:41] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[15:56:46] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[15:59:26] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:00:24] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600f5a106cb491fef46.ipv6.abo.wanadoo.fr)
[16:02:33] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[16:13:43] *** Joins: RoKenn (~RoKenn@2001:a61:34f1:ae01:d017:9559:5c8b:c349)
[16:13:43] *** Quits: RoKenn (~RoKenn@2001:a61:34f1:ae01:d017:9559:5c8b:c349) (Changing host)
[16:13:43] *** Joins: RoKenn (~RoKenn@user/rokenn)
[16:15:56] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[16:16:39] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[16:18:17] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:20:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:21:48] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[16:23:15] *** Quits: Spirit532 (~Spirit532@mm-71-247-122-178.mgts.dynamic.pppoe.byfly.by) (Read error: Connection reset by peer)
[16:23:37] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:24:54] *** Joins: Spirit532 (~Spirit532@178.127.124.22)
[16:25:46] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[16:27:18] *** Quits: rajkosto (~rajkosto@93-86-146-248.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[16:33:01] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[16:33:34] *** Joins: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[16:38:01] *** Joins: Burgundy (~yomon@79.115.213.171)
[16:42:43] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[16:46:36] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 245 seconds)
[16:47:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:48:03] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:48:57] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[16:49:38] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[16:52:08] *** Joins: martiert_work (~martiert@173.38.220.37)
[16:54:27] *** Quits: useretail_ (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[16:59:38] *** Joins: neure (~TimoSuora@dzpyxm8yyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[17:07:01] *** Quits: geeknix (~pi@2001:e68:5432:a8eb:1412:d7e8:3be:6abd) (Ping timeout: 245 seconds)
[17:15:01] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 256 seconds)
[17:18:20] *** Joins: chenqisu1 (~03cia7d@183.217.200.156)
[17:19:06] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[17:20:29] *** Joins: geeknix (~pi@2001:e68:5432:abd2:b9e4:e37d:3d09:4004)
[17:23:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:24:22] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[17:26:21] *** Quits: chenqisu1 (~03cia7d@183.217.200.156) (Ping timeout: 256 seconds)
[17:26:34] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 260 seconds)
[17:27:31] *** Quits: neure (~TimoSuora@dzpyxm8yyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[17:27:57] *** Joins: chenqisu1 (~03cia7d@183.217.200.156)
[17:28:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:29:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:29:31] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Ping timeout: 245 seconds)
[17:30:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:31:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:32:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[17:33:10] *** Quits: chenqisu1 (~03cia7d@183.217.200.156) (Ping timeout: 265 seconds)
[17:34:47] *** Quits: gargus (~user@114.198.29.250) (Quit: Leaving)
[17:36:27] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[17:37:21] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 265 seconds)
[17:38:03] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[17:38:07] *** Joins: meicceli (meicceli@kapsi.fi)
[17:38:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[17:38:44] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:38:51] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:38:51] *** ChanServ sets mode: +v npaperbot
[17:39:30] *** Joins: luizfrds (~Luiz@152.250.243.147)
[17:39:33] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:40:00] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[17:43:16] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:44:36] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 265 seconds)
[17:45:33] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com) (Remote host closed the connection)
[17:49:35] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[17:49:56] *** Quits: mgot (~mgot@vps-35cddd71.vps.ovh.net) (Quit: Goodbye)
[17:50:18] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[17:51:51] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[17:52:49] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:53:05] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:53:39] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:54:25] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:56:53] *** Joins: jailop_ (~jailop@ool-944bb915.dyn.optonline.net)
[17:57:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[17:58:36] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:59:02] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[18:03:27] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 265 seconds)
[18:03:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[18:09:03] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[18:09:12] *** Joins: Dreg- (~Dreg@fr33project.org)
[18:10:18] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[18:18:54] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.78)
[18:19:03] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.78) (Ping timeout: 256 seconds)
[18:22:36] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:25:55] *** Joins: great_taste (~great_tas@190.32.235.20)
[18:26:18] *** Joins: rajkohaxor (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[18:28:54] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.78) (Read error: Connection reset by peer)
[18:29:02] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.78)
[18:29:04] *** Quits: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[18:30:10] *** Joins: bitrot (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[18:30:25] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:30:41] *** Joins: millido (~millido@84.210.150.128)
[18:33:13] *** Quits: rajkohaxor (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[18:35:15] *** Joins: jkaye (~jkaye@2601:281:8300:7530:9397:8874:2ff1:8d72)
[18:35:37] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[18:43:07] *** Joins: Hercules (~Hercules@user/hercules)
[18:45:22] *** Joins: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[18:47:57] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[18:48:37] *** Joins: hightower2 (~hightower@213.147.110.20)
[18:49:05] *** Quits: bitrot (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[18:53:26] *** Joins: ThatLinuxGuy (~Srain@1.146.130.72)
[18:53:40] *** Quits: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[18:54:43] *** Joins: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[18:55:14] *** Quits: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[18:57:04] *** Joins: rahl (~rahl@102.114.121.175)
[19:01:38] *** Joins: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[19:07:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:21b5:6102:9e2a:a3f9)
[19:07:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:21b5:6102:9e2a:a3f9) (Changing host)
[19:07:13] *** Joins: skapata (~Skapata@user/skapata)
[19:07:50] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[19:07:53] *** Joins: neure (~TimoSuora@dzpyxm8yyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[19:09:06] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[19:10:55] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[19:11:27] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[19:14:30] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 265 seconds)
[19:14:32] *** Joins: rgrinberg (~textual@201.191.195.226)
[19:16:01] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[19:17:04] *** Quits: rgrinberg (~textual@201.191.195.226) (Read error: Connection reset by peer)
[19:19:40] *** Quits: xiongxin (~Thunderbi@119.123.103.170) (Quit: xiongxin)
[19:21:10] *** Quits: ThatLinuxGuy (~Srain@1.146.130.72) (Read error: Connection reset by peer)
[19:22:12] *** Quits: jailop_ (~jailop@ool-944bb915.dyn.optonline.net) (Quit: leaving)
[19:22:19] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[19:25:04] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[19:25:20] *** Joins: Sadale (~Sadale@user/sadale)
[19:25:23] *** Quits: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[19:26:00] *** Joins: T`aZ_ (~TaZ@user/taz/x-9470768)
[19:26:09] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 268 seconds)
[19:31:24] *** Quits: neure (~TimoSuora@dzpyxm8yyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[19:31:36] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[19:33:17] *** Quits: T`aZ_ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[19:33:28] *** Joins: elkalamar (~elkalamar@81.203.68.150.dyn.user.ono.com)
[19:36:03] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[19:36:43] *** Joins: ThatLinuxGuy (~Srain@1.146.144.213)
[19:37:29] *** Joins: elkalamar_ (~elkalamar@81.203.68.150.dyn.user.ono.com)
[19:39:34] *** Quits: elkalamar (~elkalamar@81.203.68.150.dyn.user.ono.com) (Ping timeout: 256 seconds)
[19:39:53] *** Joins: essial (~essial@8.9.230.82)
[19:42:23] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:44:28] *** Joins: Viewday11 (~Viewday@user/viewday)
[19:44:42] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[19:44:42] *** Quits: ckdCreations (~ckdCreati@147.55.130.36) (Read error: Connection reset by peer)
[19:45:58] *** Joins: Sadale (~Sadale@user/sadale)
[19:46:08] *** Quits: magla (~gelignite@55d4f645.access.ecotel.net) (Quit: Stay safe!)
[19:46:38] *** Joins: magla (~gelignite@55d4f645.access.ecotel.net)
[19:48:35] *** Quits: elkalamar_ (~elkalamar@81.203.68.150.dyn.user.ono.com) (Ping timeout: 256 seconds)
[19:49:46] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[19:50:02] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[19:52:00] *** Joins: rgrinberg (~textual@201.191.195.226)
[19:53:43] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[20:00:06] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:00:54] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 265 seconds)
[20:01:02] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[20:02:41] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[20:04:46] *** Quits: rgrinberg (~textual@201.191.195.226) (Ping timeout: 260 seconds)
[20:05:57] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[20:07:28] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Ping timeout: 268 seconds)
[20:09:35] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[20:10:05] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[20:16:06] *** Quits: ThatLinuxGuy (~Srain@1.146.144.213) (Remote host closed the connection)
[20:17:05] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[20:19:58] *** Joins: masterbuilder (~user@user/masterbuilder)
[20:25:33] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 265 seconds)
[20:26:08] *** Joins: jokoon (~eio@2a01:e0a:542:e160:5954:6030:7d05:4d2e)
[20:27:42] *** Quits: furrymcgee (~devuan@cgn-89-1-209-86.nc.de) (Quit: leaving)
[20:28:14] *** Quits: nostar (~nostar@45.14.195.105) (Quit: Leaving)
[20:33:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:34:46] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:37:06] *** Joins: fassl (~fassl@2a02:8388:1987:9380:9040:a616:9640:3e9d)
[20:37:25] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[20:38:01] *** Quits: jkaye (~jkaye@2601:281:8300:7530:9397:8874:2ff1:8d72) (Ping timeout: 250 seconds)
[20:39:31] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[20:41:20] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:45:51] *** Joins: sheb (~sheb@31.223.228.71)
[20:50:00] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Ping timeout: 268 seconds)
[20:50:22] *** Joins: reumeth (~reumeth@user/reumeth)
[20:51:14] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[20:51:23] *** Joins: terminalpusher (~terminalp@2a01:586:2941:1:aeef:4407:c895:665b)
[20:54:17] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:55:41] *** Joins: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs)
[20:56:26] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:57:08] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 265 seconds)
[20:58:20] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:06:56] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[21:07:32] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[21:09:21] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:11:33] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[21:14:00] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:16:09] *** Joins: chozorho (~chozorho@2601:146:300:c30::17a1)
[21:18:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:18:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:20:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:31:38] *** Joins: Burgundy (~yomon@79.115.213.171)
[21:32:34] *** Joins: Betal (~Betal@user/betal)
[21:34:24] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1)
[21:38:44] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:38:51] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:38:51] *** ChanServ sets mode: +v npaperbot
[21:40:23] *** Joins: jailop (~jailop@172.58.225.101)
[21:42:35] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.78) (Ping timeout: 250 seconds)
[21:43:29] *** Quits: jokoon (~eio@2a01:e0a:542:e160:5954:6030:7d05:4d2e) (Quit: Leaving)
[21:47:01] *** Quits: jailop (~jailop@172.58.225.101) (Ping timeout: 245 seconds)
[21:54:03] *** Joins: jailop (~jailop@172.58.225.101)
[22:01:15] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[22:04:34] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[22:07:58] *** Quits: jailop (~jailop@172.58.225.101) (Ping timeout: 260 seconds)
[22:11:55] *** Joins: Telvana (~capo@user/telvana)
[22:23:10] *** Joins: Inline (~Inline@aftr-37-201-240-2.unity-media.net)
[22:23:53] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[22:24:59] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[22:25:46] *** Quits: rahl (~rahl@102.114.121.175) (Ping timeout: 245 seconds)
[22:25:48] *** Quits: rajkosto (~rajkosto@91-150-115-184.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[22:27:40] *** Joins: rahl (~rahl@102.114.10.241)
[22:27:51] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[22:28:06] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[22:31:12] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[22:40:43] *** Joins: xkuru (~xkuru@user/xkuru)
[22:46:24] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[22:52:24] *** Joins: julien (~julien@17.128.136.88.rev.sfr.net)
[23:01:14] *** Quits: julien (~julien@17.128.136.88.rev.sfr.net) (Quit: Leaving)
[23:01:21] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[23:01:24] <CarloWood> I need more access control :/.
[23:02:29] <RandomReader> how so?
[23:04:20] *** Joins: stefanos82 (~stefanos8@93-18-225.netrun.cytanet.com.cy)
[23:04:28] <CarloWood> Right now I have a base class B that has private members (nobody can get free access), and bunch of member functions.  I want to divide those member functions into two groups, lets say group X and group Y.  Then certain derived classes should get access to group X and others to group Y.
[23:05:53] <CarloWood> For example, the inheritance tree is:   P-->Q-->X-->Z<--Y<--S<--B  where Y gets access to B::y() and X gets access to B::x().
[23:06:14] *** Quits: stefanos82 (~stefanos8@93-18-225.netrun.cytanet.com.cy) (Client Quit)
[23:06:21] <RandomReader> that sounds more like "certain classes", without the derived part
[23:06:24] <CarloWood> The latter can't be done without using virtual inheritance of B, which I don't want :P.. but I can use static casts.
[23:07:04] <RandomReader> you could use tags in the overloads, and control access to those tags separately
[23:07:15] <CarloWood> It would be easy solvable if I could add a 'friend' for certain members, but not all of them.
[23:08:44] <RandomReader> here's one example of tags: https://awesomekling.github.io/Serenity-C++-patterns-The-Badge/
[23:13:24] <CarloWood> That's pretty cool
[23:16:33] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[23:16:35] <RandomReader> actually I think that would compose pretty well with protected functions, if you wanted to enforce "derived" in the Y case
[23:16:46] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[23:16:57] <RandomReader> doesn't do anything about X, but from the description the inheritance part doesn't seem critical anyway
[23:17:02] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[23:18:00] <CarloWood> Now if only that won't put anything extra on the stack - the size of Badge not being 0 and all.  Not that I can't use it if it does, but when it doesn't that this has no drawbacks at all.
[23:18:56] <RandomReader> if you can arrange for the optimizer to get enough info, it should skip just fine .. whether that's by having the functions be visible and "inline", or using LTO or something, can probably get there
[23:19:15] <RandomReader> I haven't used it enough to analyze how well that works, but in theory...
[23:20:45] *** Joins: Betal (~Betal@user/betal)
[23:30:26] *** Joins: Brainium (~brainium@user/brainium)
[23:39:50] *** Joins: rgrinberg (~textual@200.5.63.76)
[23:43:14] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[23:48:16] *** Joins: aapole (~aapole@87-95-60-41.bb.dnainternet.fi)
[23:51:15] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:53:31] <SuperNintendoSUX> quick question about built in things for sets (and algorithms): does the stdlib have a function to tell me that a bigger set contains a subset?
[23:54:53] <anyone> any container, or specifically a std::set?
[23:55:19] <anyone> https://en.cppreference.com/w/cpp/algorithm/includes
[23:56:21] *** Joins: x_kuru (~xkuru@user/xkuru)
[23:56:33] <SuperNintendoSUX> this work for sorted ranges. nice
[23:56:41] <SuperNintendoSUX> but if I had two std::sets ?
[23:57:15] *** Quits: AmR (~AmREiSa@102.47.62.197) (Ping timeout: 265 seconds)
[23:57:15] *** Joins: seninha (~seninha@user/seninha)
[23:58:13] *** Quits: aapole (~aapole@87-95-60-41.bb.dnainternet.fi) (Ping timeout: 265 seconds)
[23:59:06] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 245 seconds)
