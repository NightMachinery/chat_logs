[00:04:10] *** Quits: terminalpusher (~terminalp@2a01:586:968a:1:cebf:9757:2259:bf12) (Remote host closed the connection)
[00:04:18] <ifreund> hmm, not sure how I managed to only partially update the langref for the s/c_void/anyopaque/g change
[00:07:44] *** Joins: notzmv (~zmv@user/notzmv)
[00:10:38] *** Quits: moog (~moog@107.126.53.224) (Ping timeout: 260 seconds)
[00:22:00] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[00:24:00] *** Joins: moog (~moog@107.126.53.157)
[00:36:49] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[00:38:17] *** Joins: amk (~amk@109.255.169.126)
[00:42:13] <andrewrk> ifreund, it's possible I merged an earlier docs PR after your changes
[00:42:25] <andrewrk> essentially an unnoticed merge conflict
[00:42:55] <ifreund> ah, that could be
[00:44:50] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[00:44:59] *** Joins: LanceThepants (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[00:47:03] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Read error: Connection reset by peer)
[00:47:43] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[00:49:33] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[00:49:56] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[00:57:59] *** Quits: Guest3089 (~anon@iskon3223.duo.carnet.hr) (Ping timeout: 256 seconds)
[01:19:35] *** Quits: frett27 (~frett27@2a01:e0a:58a:6c00:7dff:7f53:c6e5:539) (Ping timeout: 252 seconds)
[01:24:55] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:38:47] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[01:51:27] *** Quits: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa07) (Remote host closed the connection)
[01:52:43] *** Joins: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa07)
[02:14:23] *** Joins: cyplo (2df7beb64c@2604:bf00:561:2000::28d)
[02:20:41] <perro> I see zig on hn sometimes, which it is the best place for lang discussion
[02:20:57] <perro> https://news.ycombinator.com/item?id=29654460
[02:21:17] <perro> just a reminder that yc regularly funds enethical peole
[02:21:37] <perro> don't know they deserve traffic
[02:22:24] <perro> unethical*
[02:24:01] <andrewrk> there's a lot of unethical stuff going on in the world, but here in #zig on libera.chat is a cozy place to focus on technical topics and ignore everything going on outside
[02:24:53] <perro> agreed
[02:24:57] <perro> I see you there oaften andy
[02:28:44] <oats> it is advisable to avoid the orange place
[02:29:05] <perro> trust me, I would
[02:29:14] <perro> that's kind of why I even said it, though it's off topic
[02:29:43] <perro> it's cool to see useful discussion happen there, but ugh
[02:29:50] <oats> mhm
[02:31:11] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:31:35] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[02:34:12] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:37:02] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:37:48] *** Joins: anon (~anon@iskon3116.duo.carnet.hr)
[02:38:01] *** anon is now known as Guest5927
[02:39:24] <powerofzero> In stage1, I am very confused as to why `ir_llvm_value` doesn't handle runtime (ConstValSpecialRuntime) values. It seems like it should, given how it is used for all of the arguments in the `ir_render_*` series of functions. Can someone shed light on this?
[02:48:37] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 240 seconds)
[02:54:32] <andrewrk> powerofzero, runtime values are generated by processing the IR instruction
[02:54:55] <andrewrk> there's a main loop in codegen.cpp iterating over all the IR instructions and saving the LLVMValueRefs
[02:55:07] <andrewrk> each IR instruction references other ones that have already been processed and had their value saved
[02:55:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:57:59] <powerofzero> That makes sense. Thanks.
[03:01:27] *** Quits: Guest5927 (~anon@iskon3116.duo.carnet.hr) (Quit: Guest5927)
[03:07:28] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Remote host closed the connection)
[03:42:43] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.3)
[03:44:00] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:45:21] <yrashk> just to double-check, there is no way to simply check a frame if the function has already returned? I am doing some accounting to track that, but wondering if I missed anything?
[04:01:05] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[04:13:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:13:57] *** Quits: frmdstryr (~jrm@172.58.206.168) (Ping timeout: 240 seconds)
[04:15:00] *** Joins: frmdstryr (~jrm@172.58.206.168)
[04:25:26] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:33:44] *** Quits: mrlemke (~quassel@208.74.105.200) (Quit: Bye.)
[04:56:03] <ifreund> yrashk: nope, not currently
[04:56:20] <yrashk> ifreund: it's alright, I think I figured out my way through all of this :)
[04:56:29] <ifreund> please note that Zig's async language features are very much at a proof of concept stage
[04:56:44] <ifreund> they will certainly see more evolution/polish before 1.0
[04:56:59] <ifreund> the basic ideas certainly seeem solid though :)
[04:57:35] <yrashk> I am aware of the risks (although I am trying to hide from my fear of the uncertainty)
[04:59:02] <ifreund> it's certainly fun to explore what already exists in Zig here, though I wouldn't personally use it in production yet
[04:59:51] <yrashk> well, the project I am starting in Zig isn't going to be production-ready for a while. it's exploratory in nature.
[05:00:14] <yrashk> (I've been told to avoid using Zig for it for all kinds of reasons, but I am too tempted)
[05:02:34] <yrashk> while at it, here's my first prototype of a Generator (I know it's still pretty ugly) https://paraexec.com/file?name=src/common/generator.zig&ci=tip
[05:10:44] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[05:11:16] *** Joins: Colt (~Colt@user/colt)
[05:11:24] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[05:12:52] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Read error: Connection reset by peer)
[05:13:51] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[05:28:17] *** Quits: frmdstryr (~jrm@172.58.206.168) (Ping timeout: 240 seconds)
[05:53:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:00:15] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:48] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[06:06:08] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Client Quit)
[06:06:31] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:06:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:23:20] *** Quits: thaumavorio (~thaumavor@thaumavor.io) (Quit: ZNC 1.8.2 - https://znc.in)
[06:36:51] *** Joins: rgrinberg (~textual@187.223.23.238)
[06:46:03] <andrewrk> yrashk, a couple important notes: 1. adding generators to the language is still on the table and 2. if you implement generators using async functions, it creates a footgun for people using evented I/O
[06:46:21] <yrashk> andrewrk: what kind of footguns?
[06:46:54] *** Joins: tiehuis (~tiehuis@user/tiehuis)
[06:47:01] <andrewrk> an async function that is using async for I/O would be suspended waiting for I/O and then calling generator.next() or whatever would make it resume for the wrong reason
[06:47:26] <yrashk> I think I've dealt with this in my generator implementation (to the best of my limited ability)
[06:47:29] <andrewrk> consider that you might want a generator that does async stuff
[06:47:41] <andrewrk> oh interesting, I'll take a look
[06:47:41] <yrashk> my generators do use evented I/O (like reading a file)
[06:48:14] <yrashk> mind you, I likely have a tons of bugs in the implementation, but it worked *so far* I definitely had to work on making it work with async i/o (it didn't initially)
[06:51:16] <yrashk> happy to chat about it if this topic is of interest
[06:51:36] *** Joins: jfsantos (~jfsantos@d75-157-112-193.bchsia.telus.net)
[06:57:31] <andrewrk> I'll definitely be interested to chat about this at some point, but right now my head is full of other compiler internals details and I don't have much room for async stuff yet
[06:57:35] <andrewrk> will get there though
[06:57:58] <jfsantos> Anyone doing any kind of real time audio stuff in Zig? I'm having a hard time finding libraries besides the libsoundio (which is a C library) examples in the docs
[07:00:04] <yrashk> andrewrk: sounds good; I am also working on isolating two compiler bug cases: one SIGSEGV and one assertion failure in IR something-something
[07:00:53] <andrewrk> if it's a stage1 bug there's a good chance we already have a report filed for it
[07:01:32] <andrewrk> I've been focusing on trying to completely replace that codebase rather than improve it
[07:01:41] <yrashk> makes sense
[07:01:53] <andrewrk> which, normally, I would say is a poor strategic decision, but hey, we want to self-host the compiler anyway :)
[07:05:37] *** Quits: lovekr08 (~lovekr08@195.213.139.6) (Ping timeout: 240 seconds)
[07:10:27] *** Quits: jfsantos (~jfsantos@d75-157-112-193.bchsia.telus.net) (Quit: Client closed)
[07:14:03] *** Joins: thaumavorio (~thaumavor@thaumavor.io)
[07:33:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:41:37] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:55:15] *** Quits: moog (~moog@107.126.53.157) (Remote host closed the connection)
[08:26:17] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[08:35:57] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 240 seconds)
[08:52:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:56:03] <dcx> Is it possible to represent a C va_list in zig?
[08:56:29] <dcx> I'm trying to translate a C struct
[08:58:11] <dcx> I'm looking at this specifically https://github.com/openbsd/src/blob/master/lib/libc/gen/auth_subr.c#L113
[09:08:26] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:08:57] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[09:10:40] <semarie> dcx: you might consider it a pointer on opaque structure
[09:11:07] <semarie> technically, it is a struct which depend on the architecture target
[09:13:28] *** Joins: xd1le (~xd1le@user/xd1le)
[09:13:41] <semarie> if you want to know the internal details, you could refer to https://github.com/openbsd/src/blob/master/gnu/llvm/clang/include/clang/Basic/TargetInfo.h#L265
[09:15:46] <semarie> dcx: but the struct itself is internal to libc. why do you need to access struct content ? from userland perspective it is an opaque struct
[09:17:32] <dcx> semarie: I'll use an opaque structure then, you can still add struct methods to those right?
[09:17:41] <semarie> yes
[09:18:19] <dcx> Also yes it's part of the libc, but it gets passed to userland programs that are authenticating so I thought I'd try to translate it properly if I could
[09:18:57] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[09:19:19] <semarie> no program using bsd_auth are using internal of the struct. bsd_auth.h provides all functions you need to properly use it
[09:20:56] <dcx> That's true, it was mostly for my own curiosity 
[09:21:19] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[09:22:46] <semarie> no problem with curiosity :). but if you use it in real program, you should not use the internals. else internal change in libc might break your program expectations, and auth_bsd is used for security (so it might ends badly)
[09:26:24] <dcx> semarie: Oh I just realized you reviewed my PR for adding BSD auth constants haha
[09:27:35] <dcx> For something like this, would there be any benefit to writing the BSD Auth function stubs and adding them to std.c.openbsd as opposed to including them with the C header?
[09:27:51] <semarie> dcx: I am openbsd core developer too. so I take care of openbsd things :)
[09:28:59] <semarie> dcx: bbl. I will reply you a bit later
[09:30:23] <dcx> semarie: cool!
[09:30:31] <dcx> semarie: Okay, I'll be here
[09:44:50] *** Joins: notzmv (~zmv@user/notzmv)
[10:46:14] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 260 seconds)
[10:46:41] *** Joins: Colt (~Colt@user/colt)
[10:51:09] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:54:22] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[11:56:00] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[12:17:55] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:20:09] *** Quits: isolier3987 (~isolier@67-5-96-120.spok.qwest.net) (Remote host closed the connection)
[12:20:28] *** Joins: isolier3987 (~isolier@67-5-96-120.spok.qwest.net)
[12:25:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[12:38:46] <marler8997_> jfsantos: I've done a little audio stuff here: https://github.com/marler8997/audio  Still porting it from D to Zig
[12:51:49] *** Quits: nki (~nki@adsl-89-217-141-227.adslplus.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[12:54:22] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[12:54:57] *** Joins: cursey (~cursey@user/cursey)
[13:02:48] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:25:25] <semarie> dcx: I am unsure that bsd_auth would be interesting inside std (I think there is too few customers for that). but having a proper zig interface is fine, specially if you intent to use it. so it is middle term between std-integration and use-only-c-import
[13:35:33] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[13:36:37] *** Joins: nki (~nki@adsl-89-217-141-227.adslplus.ch)
[13:52:43] <tiehuis> has anyone happened to look into lowering of f128 and f16 in the c backend? seems a bit of a pain point due to limited platform support for these as specified by c. this is a small overview of the some of situation for f128 https://cpufun.substack.com/p/portable-support-for-128b-floats
[13:56:56] <tiehuis> i figure you could either provide a software implementation, just keep it as a compile error if the target doesn't support it or fallback to a type with less precision, although I imagine this would require storing the type as a full IEEE-754 f128 representation and using the fallback only during computation, to ensure the bit-representation remained consistent
[14:17:31] <andrewrk> hi tiehuis! long time no see :)
[14:17:45] <andrewrk> unfortunately I am right about to go to bed
[14:18:45] <tiehuis> yeah its been a while, no problem i'm away for a few days anyway so will just read the logs when im back
[14:21:07] <tiehuis> could also use libquadmath as a dependency, although may not want that dependency in target code
[14:38:55] *** Joins: neceve (~quassel@2.26.93.228)
[14:50:43] *** Joins: breavyn (~breavyn@user/breavyn)
[14:51:37] *** Quits: breavyn_ (~breavyn@user/breavyn) (Ping timeout: 240 seconds)
[14:55:36] *** Quits: tiehuis (~tiehuis@user/tiehuis) (Remote host closed the connection)
[14:56:08] *** Joins: earnestly (~earnest@user/earnestly)
[14:56:34] *** Joins: pkap (~pkap@193.32.127.226)
[15:01:18] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:07:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:23:32] *** Joins: Guest83 (~Guest83@2a01cb088a691b00f5352a1a75250715.ipv6.abo.wanadoo.fr)
[15:23:50] *** Quits: Guest83 (~Guest83@2a01cb088a691b00f5352a1a75250715.ipv6.abo.wanadoo.fr) (Client Quit)
[15:39:54] * bw twiddles thumbs waiting for zig 0.9 to land in nixos
[15:59:40] *** Joins: scj (~scj@m90-129-218-50.cust.tele2.se)
[16:05:53] *** Joins: terminalpusher (~terminalp@2a01:586:154d:1:a5a1:266f:8ccc:8c57)
[16:06:04] <terminalpusher> When I have `"{s: <5}"` as a format string, what is a good way to accept a runtime value as the padding width?
[16:06:19] <terminalpusher> found the solution
[16:06:20] <luuk> terminalpusher: Just answered you on Discord ;)
[16:06:23] *** Quits: terminalpusher (~terminalp@2a01:586:154d:1:a5a1:266f:8ccc:8c57) (Remote host closed the connection)
[16:21:02] *** Joins: frmdstryr (~jrm@172.58.206.137)
[16:24:54] *** Joins: terminalpusher (~terminalp@2a01:586:154d:1:a5a1:266f:8ccc:8c57)
[16:24:59] *** Parts: terminalpusher (~terminalp@2a01:586:154d:1:a5a1:266f:8ccc:8c57) ()
[16:41:19] *** Joins: lovekr08 (~lovekr08@195.213.139.6)
[16:44:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:49:08] <bw> wow, somehow treesitter and/or zls is hanging my neovim when i try to open a zig file
[17:08:10] *** Joins: nyah (~nyah@94.6.71.219)
[17:10:22] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[17:11:24] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:19:47] <gpanders> bw: there was a recent bump in the treesitter version that caused issues for the Zig parser (I'm not sure why), see https://github.com/nvim-treesitter/nvim-treesitter/issues/2049
[17:20:06] <bw> i figured it out, i needed to update my nvim plugins
[17:28:41] *** Quits: Piraty (~irc@user/piraty) (Quit: -)
[17:32:22] *** Joins: Piraty (~irc@user/piraty)
[17:37:32] *** Joins: moog (~moog@107.126.53.157)
[17:38:45] <bw> does `resume` use stack space?
[17:50:27] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[17:51:13] *** Joins: arkurious (~arkurious@user/arkurious)
[17:54:37] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[18:00:20] <Franciman> is there any talk/article speaking about why prefer zig over C++
[18:00:26] <Franciman> in particular cases?
[18:01:23] *** Quits: pkap (~pkap@193.32.127.226) (Quit: Client closed)
[18:10:37] *** Joins: frett27 (~frett27@2a01:cb14:45a:ac00:66e6:5cdf:907f:3e61)
[18:12:46] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:12:51] *** Joins: Tekk (~tekk@94.198.42.201)
[18:17:22] <motiejus> Road to zig 1.0 explained it well IMO. It's from 2019, albeit all points still stand
[18:18:50] <Franciman> thanks
[18:26:12] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Quit: Leaving)
[18:26:21] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:30:04] <Franciman> ready to try this zig 9.0!
[18:30:07] <Franciman> 0.9 xd
[18:32:16] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[18:33:00] <Franciman> congrats ifreund for your entrance in the zig core team
[18:47:22] *** Quits: outfox (~outfox@user/outfox) (Ping timeout: 260 seconds)
[18:48:19] *** Joins: outfox (~outfox@213.144.147.16)
[18:48:19] *** Quits: outfox (~outfox@213.144.147.16) (Changing host)
[18:48:19] *** Joins: outfox (~outfox@user/outfox)
[18:54:56] *** Quits: isolier3987 (~isolier@67-5-96-120.spok.qwest.net) (Quit: Ping timeout (120 seconds))
[18:55:14] *** Joins: isolier3987 (~isolier@67-5-96-120.spok.qwest.net)
[18:57:37] *** Quits: frett27 (~frett27@2a01:cb14:45a:ac00:66e6:5cdf:907f:3e61) (Ping timeout: 240 seconds)
[18:58:01] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:06:30] *** Joins: xackus (~xackus@185.15.0.3)
[19:20:09] *** Joins: frett27 (~frett27@2a01:cb14:45a:ac00:264f:f1c3:5b67:8d66)
[19:22:37] <Franciman> does anybody wish we switched to full snake_case or full camelCase?
[19:22:46] <Franciman> this mix makes me nervous lol
[19:25:09] <luuk> Personally I'd like to see a switch to snake_case for functions as I think it improves readability.
[19:25:41] <Franciman> +1 luuk 
[19:26:10] <Franciman> CamelCase for type names is fine for me
[19:26:21] <yrashk> I agree!
[19:36:49] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[19:48:27] <bw> Can anyframe be the type in a @atomic operation?
[19:48:32] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:53:02] *** Quits: frett27 (~frett27@2a01:cb14:45a:ac00:264f:f1c3:5b67:8d66) (Ping timeout: 268 seconds)
[19:58:29] *** Joins: frett27 (~frett27@2a01:cb14:45a:ac00:fb8:236:2f80:6953)
[20:15:51] *** Quits: frett27 (~frett27@2a01:cb14:45a:ac00:fb8:236:2f80:6953) (Ping timeout: 268 seconds)
[20:34:11] *** Joins: frett27 (~frett27@2a01:cb14:45a:ac00:dfad:9f25:de6b:ac13)
[20:41:52] *** Joins: notzmv (~zmv@user/notzmv)
[20:43:51] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:04:35] <bw> Is there an existing pattern for making trait-like things in zig?
[21:15:36] <Franciman> bw: i think Allocator
[21:17:32] <bw> Allocator is an example, yeah
[21:32:17] *** Quits: isolier3987 (~isolier@67-5-96-120.spok.qwest.net) (Ping timeout: 240 seconds)
[21:33:55] *** Joins: isolier3987 (~isolier@174.31.22.17)
[21:37:26] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:39:15] *** Joins: skipwich (~skipwich@user/skipwich)
[21:48:57] *** Quits: trainsley69 (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 240 seconds)
[21:52:24] <Franciman> I still haven't understood when I can use ptrToStruct.field
[21:52:31] <Franciman> and when I have to use ptrToSTruct.*.field
[21:57:38] <ikskuh> "[*c]T" and "**T" requires the second one
[21:57:51] <ikskuh> a simple "*T" can be accessed via .field directly
[22:02:36] *** Quits: viric (~viric@static-74-45-229-77.ipcom.comunitel.net) (Quit: reinicio)
[22:05:21] <Franciman> rip
[22:05:23] <Franciman> thanks
[22:16:15] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[22:19:38] <ikskuh> why rip?
[22:20:01] <Franciman> i will never remember it xd
[22:21:11] <ikskuh> just don't use C pointers
[22:21:13] <ikskuh> :D
[22:21:16] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:25:48] <bw> Does @frameSize take an argument? The docs don’t say it does, but I’m not sure how it’s supposed to be used with no argument.
[22:38:20] *** Quits: frett27 (~frett27@2a01:cb14:45a:ac00:dfad:9f25:de6b:ac13) (Ping timeout: 252 seconds)
[22:43:58] <ifreund> bw: indeed it does
[22:47:33] <ifreund> docs should say `@frameSize(func: anytype) usize`
[23:14:34] *** Joins: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b)
[23:17:35] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 256 seconds)
[23:28:45] *** Joins: frett27 (~frett27@2a01:cb14:45a:ac00:12ee:22c:ec7d:1508)
[23:30:12] <bw> Can zig emit an error if a defer is statically known to never run?
[23:30:51] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[23:30:52] <bw> Like if you defer something and then call a noreturn function.
[23:30:55] *** Joins: rgrinberg (~textual@187.223.144.204)
[23:32:47] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[23:34:50] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[23:35:40] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 268 seconds)
[23:40:35] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[23:45:26] <andrewrk> bw, `resume` effectively lowers to a function call
[23:45:48] *** Quits: _wilsonk (~wilsonk@S0106001b11030a94.cg.shawcable.net) (Read error: Connection reset by peer)
[23:46:03] <bw> Interesting
[23:46:21] *** Joins: wilsonk (~wilsonk@S0106001b11030a94.cg.shawcable.net)
[23:46:52] <bw> But does it still use the stack space provided to the original async call?
[23:47:23] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 268 seconds)
[23:48:47] <ikskuh> kinda, but not really
[23:49:05] <ikskuh> variables that are used over suspends are stored in the frame and not on the stack
[23:53:31] <andrewrk> there's basically 2 stacks: the real one that has all the locals that are not referenced across suspend points, and the stack of async frames with locals that are referenced across suspend points
[23:56:18] <earnestly> (Reminds me of Gnat's dual stack design)
[23:56:39] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[23:56:51] *** Quits: chexum_ (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 276 seconds)
[23:58:31] <yrashk> I am currently relying on passing pointers to values on the stack (or, in the frame, rather) during suspension. Works so far!
[23:59:02] *** Joins: rgrinberg (~textual@187.223.250.159)
[23:59:35] <yrashk> (using generator functions: https://paraexec.com/file?ci=tip&name=src/wasm/vec.zig&ln=40)
