[00:00:03] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[00:00:41] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[00:00:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:01:53] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:02:22] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[00:02:57] <Yhg1s> neilthereildeil: pip is for whatever version of Python pip is using.
[00:03:09] <Yhg1s> neilthereildeil: you can use an old version of pip with Python 2. (Don't use Python 2.)
[00:04:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:05:05] *** Joins: wyclif (~wyclif@user/wyclif)
[00:06:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:07:23] *** Parts: mh_le (~Mads@user/mh-le/x-4465771) ()
[00:07:53] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 252 seconds)
[00:08:10] *** Quits: Linux77 (~Linux7_7@187-126-71-30.user3p.veloxzone.com.br) (Ping timeout: 265 seconds)
[00:08:11] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8497:10b2:be7:69f5)
[00:08:12] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:8497:10b2:be7:69f5) (Client Quit)
[00:10:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:10:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1c17:3734:ae15:a712) (Ping timeout: 256 seconds)
[00:10:36] *** Joins: wyclif (~wyclif@user/wyclif)
[00:10:55] <braxas> are there official images for poetry?
[00:10:56] *** Quits: vm (~vm@user/ansible) (Ping timeout: 256 seconds)
[00:11:05] <braxas> or well, semi official, or high quality ones
[00:12:27] *** Joins: Linux77 (~Linux7_7@186.233.182.243)
[00:14:09] *** Quits: Narrat (~omnius@p200300df5f1a789406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:14:36] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[00:14:44] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[00:14:56] *** Quits: ham5urg_ (~ham5urg@2a04:4540:680c:d300:e26b:d97e:616b:9560) (Ping timeout: 265 seconds)
[00:15:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:15:53] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[00:16:06] *** Joins: wyclif (~wyclif@user/wyclif)
[00:17:07] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[00:18:24] *** Joins: raxor2k (~raxor2k@78.158.232.147)
[00:18:49] <raxor2k> any help on this one? im getting the error: Could not find a version that matches typing-extensions>=3.10.0.0,>=3.7.4.3,~=3.7.4 (from -r requirements.in (line 53))    when trying to generate hashes
[00:19:44] <braxas> what is on that line from requirements.in?
[00:19:53] *** Quits: Balzy (~Balzy@host-95-244-149-246.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[00:20:11] <raxor2k> what do you mean
[00:20:14] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[00:20:14] <braxas> the issue is: ~=3.7.4
[00:20:14] <raxor2k> ?
[00:20:23] *** Joins: stevea (~stevea@user/stevea)
[00:20:25] <braxas> (from -r requirements.in (line 53)) < what is on that line
[00:20:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:21:04] <raxor2k> braxas: zope.event ?
[00:21:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:21:15] <raxor2k> the file is that i postedo n the paste
[00:21:16] <braxas> can you share the whole file
[00:21:20] <raxor2k> i have
[00:21:32] <braxas> where is the link
[00:21:35] <braxas> I don't see it
[00:21:36] *** Joins: wyclif (~wyclif@user/wyclif)
[00:21:41] <raxor2k> oh sorry
[00:21:47] <raxor2k> here: https://bpa.st/34HQ
[00:21:49] <raxor2k> file 2
[00:21:57] *** Joins: Balzy (~Balzy@host-87-17-16-102.retail.telecomitalia.it)
[00:22:10] <braxas> okay yes, well that explains it
[00:22:14] <braxas> tensorflow is the problem
[00:22:37] <raxor2k> well oke.. if i remove the others and just keep tensorflow + some others than it works fine
[00:22:40] <braxas> ~=3.7.4 -> 3.7.*, this is not going to work with >=3.10.0.0
[00:23:05] <braxas> are you just running pip install on it?
[00:23:24] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:23:42] <raxor2k> braxas: no, im trying to deploy with docker. but before that, i generate hashes using "pip-compile --generate-hashes"
[00:23:56] <braxas> okay, that is what I was wondering
[00:23:57] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[00:24:52] <raxor2k> but when i try with only these lines, it works perfectly: https://bpa.st/67NQ
[00:25:04] <raxor2k> but not with all of them ? makes no sense
[00:25:35] <braxas> well it does make sense: black wants typing-extentions that is newer than what tensorflow is okay with
[00:25:58] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2.1)
[00:26:01] <raxor2k> so if i remove "black" .. then it may work ?
[00:26:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:27:07] *** Joins: wyclif (~wyclif@user/wyclif)
[00:27:11] *** Quits: p-i- (~Ohmu@mx-ll-223.206.69-118.dynamic.3bb.co.th) (Ping timeout: 245 seconds)
[00:27:14] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[00:27:30] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 265 seconds)
[00:27:36] <bjs> raxor2k: ~=3.7.4 means 3.7.x where x >= 4.  Black requires >=3.10.0
[00:27:41] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[00:27:47] <bjs> which is incompatible with 3.7.x that tensorflow required
[00:27:48] *** Joins: djapo (~archangel@user/djapo)
[00:28:10] <raxor2k> makes no sense
[00:28:25] <bjs> raxor2k: which part makes no sense?
[00:28:29] <braxas> It makes sense
[00:28:34] <braxas> raxor2k: yes if you remove black it will work
[00:29:01] <raxor2k> or maybe find a older version of black?
[00:29:13] <raxor2k> to be fair i dont know what that is and why i have it ..
[00:29:18] <braxas> and go slap tensorflow
[00:29:31] <bjs> raxor2k: it's a bit weird you're installing black if you don't know what it is
[00:29:39] <bjs> it's not a library
[00:29:47] <raxor2k> braxas: what do you mean by slap ?
[00:29:48] <bjs> it's a code formatting tool
[00:30:02] <raxor2k> bjs: ok, then i dont need it
[00:30:06] <braxas> raxor2k: I dunno why they have ~=3.7.4
[00:30:13] <bjs> raxor2k: braxas is suggesting that tensorflow is being too pedantic about the version of typing-extensions it needs,  but maybe tensorflow really does need exactly those versions idk
[00:30:20] <bjs> only accepting 3.7.x where x>=4
[00:30:24] <bjs> is very restrictive
[00:31:26] <grym> tensorflow tends to be reliably weird, fwiw
[00:31:45] <raxor2k> thanks for the help guys, it worked!
[00:31:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:31:51] <raxor2k> tensorflow is weird yes
[00:32:01] <raxor2k> but it seems that tensorflow is the "new shit" in terms for AI world
[00:32:11] <raxor2k> and everyone uses it
[00:32:34] <braxas> an alternative would be to do something really hacky like:
[00:32:35] <braxas> { pip-compile --generate-hashes --output-file - - < <(grep -v black requirements.in); pip-compile --generate-hashes --output-file - - <<<"black"; } > requirements.txt
[00:32:37] *** Joins: wyclif (~wyclif@user/wyclif)
[00:32:46] <grym> raxor2k: not really
[00:32:47] <ChrisWarrick> or just install black in a different, black-specific venv
[00:33:03] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[00:33:26] <braxas> yes, but bjs  is right, if you don't know why you have black, don't install it
[00:33:35] <grym> tensorflow was the first library to have a large financial backing and achieve marketshare, but the new hotness kid is pytorch
[00:33:35] <raxor2k> i dont need black tool at all as i keep coding locally(have it there) and i just upload code remote to server and run with docker
[00:34:07] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:34:12] <raxor2k> grym: pytorch is also hot nowadays. But this is like choosing between iphone 13 and samsung s22, its about taste
[00:34:16] <ChrisWarrick> raxor2k: that’s not what black is for really
[00:34:38] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[00:34:41] *** Joins: ali1234 (~al@user/ali1234)
[00:34:43] <raxor2k> Chriswarrick: from what i understood from google, black just formats the code and makes it prettier
[00:34:55] <ChrisWarrick> raxor2k: yes, that’s what it is
[00:35:00] <bjs> raxor2k: yes that is pretty much exactly what black does, you don't need it if you don't want to do that
[00:35:03] *** Joins: Samian (~Sami@user/samian)
[00:35:03] *** Joins: p-i- (~Ohmu@223.206.71.80)
[00:35:05] <ChrisWarrick> raxor2k: it has nothing to do with coding locally or remotely or stuff
[00:35:16] <bjs> also you don't have to install it in the same venv/alongside tensorflow even if you *did* want it
[00:35:31] <bjs> so the contradictory requirements are mostly irrelevant then, and is a good reason why venvs exist
[00:35:41] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[00:35:54] <bjs> s/contradictory/conflicting/
[00:36:05] <raxor2k> bjs: pytorch or tensorflow, what do you suggest
[00:36:11] <raxor2k> and do you also do AI ?
[00:36:22] <bjs> raxor2k: I have no opinion because no I do not do any AI things
[00:36:30] <raxor2k> why?
[00:36:48] <bjs> raxor2k: because the world is huge and it can't be that everyone does everything
[00:36:50] <bjs> :P
[00:37:14] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[00:37:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:37:46] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:38:04] <grym> bjs: (thank goodness)
[00:38:06] <raxor2k> one would think that an experienced programmer like you do some AI stuff out there
[00:38:07] *** Joins: wyclif (~wyclif@user/wyclif)
[00:38:27] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:38:44] <grym> raxor2k: do you expect that the architect who designs museums is going to be super interested in shipbuilding?
[00:38:56] <grym> (and good at it?)
[00:39:08] <bjs> raxor2k: hmm,  it's not so surprising to me;  the world of software is so huge and diverse there are probably *many* areas I've never touched
[00:39:12] <bjs> and possibly never will
[00:40:13] *** Joins: emf (~emf@2620:10d:c090:400::5:92d0)
[00:40:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:40:24] <energizer> perhaps the real reason is you did undergrad before the ai hypetrain
[00:40:30] <raxor2k> sorry for giving you compliments then
[00:41:08] <bjs> energizer: maybe someone born in 10 or 20  years time it'll be unavoidable
[00:41:09] <bjs> idk
[00:41:10] <grym> energizer: (or in a totally unrelated field)
[00:41:22] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Read error: Connection reset by peer)
[00:41:45] <grym> i distinctly remember taking optimization and learning about simulated annealing and being *extremely* cheesed off that there were no guarantees of optimality like, at all
[00:42:08] <energizer> bjs i would guess most cs grads take *some* class in ml nowadays, no?
[00:42:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:42:42] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:42:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[00:43:39] *** Joins: wyclif (~wyclif@user/wyclif)
[00:44:07] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: WeeChat 3.2.1)
[00:44:07] *** Joins: nwe (~nwe@sigwait.se)
[00:44:42] *** Joins: pwnd_sfw7 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:45:04] *** Quits: MikZyth (~MikZyth@188.65.242.83) (Quit: WeeChat 3.3)
[00:45:08] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:45:21] <bjs> energizer: I guess?  idk
[00:45:37] <bjs> energizer: I am a hardcore programming language/theory guy, and have never really paid attention to the AI people :P
[00:45:42] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[00:45:54] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[00:45:56] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 245 seconds)
[00:45:56] *** pwnd_sfw7 is now known as pwnd_sfw
[00:46:22] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[00:46:50] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:47:04] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[00:47:14] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[00:47:18] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:47:37] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[00:48:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:48:03] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:48:13] <nwe> hello I trying to learn python3, and my script is working  (almost) I have write a class, and import it, inside my def lookup(): (in Class) I return details.city how can I fetch that value from my function foo (inside test-ip.py) ?
[00:48:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:49:11] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:21] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:49:23] <bjs> nwe: can you share the code you're talking about? It'll be easier to follow if we can see it too
[00:49:27] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:49:36] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[00:49:40] <bjs> nwe: something like https://bpa.st/+python can let you create links to pastebins of the files.
[00:49:43] *** Quits: raxor2k (~raxor2k@78.158.232.147) ()
[00:50:05] *** Joins: fikran (~fikran@user/fikran)
[00:50:07] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[00:50:27] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[00:50:50] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 268 seconds)
[00:51:26] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:52:04] *** Quits: Akuli (~Akuli@82-203-166-24.bb.dnainternet.fi) (Quit: Leaving)
[00:53:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:53:54] *** Quits: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:04] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:54:42] *** Joins: wyclif (~wyclif@user/wyclif)
[00:54:44] <nwe> bjs: forgot to paste the link :)
[00:54:51] <nwe> bjs: sorry https://dpaste.org/ymuC
[00:55:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:55:41] <bjs> nwe: you can print(IP.lookup()) to call the lookup method on the IP object
[00:55:49] <bjs> inside foo()
[00:58:04] <nwe> bjs: it was excatly that I wanted :D so if I adding more  details.country etc I *guessing now* I need to loop over print(IP.lookup()) it and slipt it to some varibles?
[00:58:16] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[00:58:26] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[00:59:01] <bjs> nwe: if you want to return multiple things you can `return details.country, details.city, details.ip` and whatever else and then you can go `country, city, ip = IP.lookup()` to get them all back
[00:59:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:59:39] <bjs> nwe: you can also just `return details` and then the other side can go `details = IP.lookup(); print(details.city)` etc
[01:00:12] *** Joins: wyclif (~wyclif@user/wyclif)
[01:01:47] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:b90a:237:2bd8:2e2) (Read error: Connection reset by peer)
[01:02:07] <nwe> hmm okey, I guess best practies is the latest solution?
[01:02:34] <bjs> nwe: well,  best practice is whatever is best for your situation.  Returning another object like `details` that has all the stuff you want on it is probably the best way yeah
[01:05:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:05:28] *** Joins: sandb0y (~pirate@user/sandb0y)
[01:05:42] *** Joins: wyclif (~wyclif@user/wyclif)
[01:08:03] *** Quits: AutomatedTester (uid395371@selenium/developer/AutomatedTester) (Quit: Connection closed for inactivity)
[01:08:10] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:b4dc:3bf:e70e:8e25) (Quit: CodePoint)
[01:08:39] *** Joins: akk (~akk@75.161.146.115)
[01:08:45] <nwe> bjs: okey, I will try it out, and see how it work =)
[01:09:24] *** Joins: jazzy (~jaziz@2600:380:4618:e5c2:2d2b:db9a:adf6:4421)
[01:10:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:11:13] *** Joins: wyclif (~wyclif@user/wyclif)
[01:12:07] <nwe> bjs: thanks for the help :)
[01:14:18] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[01:14:39] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:15:34] *** Quits: int3l (~int3l@78-83-126-36.spectrumnet.bg) (Quit: WeeChat 3.3)
[01:16:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:16:43] *** Joins: wyclif (~wyclif@user/wyclif)
[01:18:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:19:37] <nwe> s
[01:20:58] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 260 seconds)
[01:21:26] *** Joins: dre (~dre@2001:8003:c932:c301:c3b5:3d4:768d:4c71)
[01:22:00] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:23:01] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:23:08] *** Quits: flyback (~flyback@2601:540:8201:1e60:1d56:68fc:5bc4:158a) (Quit: Leaving)
[01:25:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:25:04] *** Joins: flyback (~flyback@2601:540:8201:1e60:25f0:86e0:2201:1375)
[01:27:24] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:28:42] *** Joins: mcint (mcint@user/mcint)
[01:30:06] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[01:30:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:30:58] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:30:59] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d80f-6fe9-a798-c762.res6.spectrum.com) (Read error: Connection reset by peer)
[01:31:10] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz…)
[01:31:18] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:31:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1c17:3734:ae15:a712)
[01:31:42] *** Joins: wyclif (~wyclif@user/wyclif)
[01:31:52] *** Joins: yaalon (~yaalon@2600:1700:50c0:bf0:5132:9043:71d:1e16)
[01:32:11] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[01:32:38] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[01:32:53] *** Quits: grooverman (~grooverma@179.99.120.247) (Read error: Connection reset by peer)
[01:33:22] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[01:33:23] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[01:33:34] *** Joins: grooverman (~grooverma@179.99.120.247)
[01:33:36] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[01:33:42] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[01:33:52] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Remote host closed the connection)
[01:33:57] *** Quits: luva (~luva@178.239.173.200) (Quit: Ping timeout (120 seconds))
[01:34:05] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Quit: Ping timeout (120 seconds))
[01:34:05] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:34:07] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[01:34:08] *** Quits: djhankb (~djhankb@208.113.164.68) (Quit: Ping timeout (120 seconds))
[01:34:08] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: Ping timeout (120 seconds))
[01:34:08] *** Quits: koziad (~koz@user/koziad/x-1285628) (Quit: Ping timeout (120 seconds))
[01:34:13] *** Quits: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Read error: Connection reset by peer)
[01:34:22] *** Joins: luva (~luva@178.239.173.200)
[01:34:24] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[01:34:35] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[01:34:36] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:bc7f:57d0:18d0:b07a)
[01:34:38] *** Joins: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de)
[01:34:52] *** Quits: xavierdarkness (~xavierdar@user/xavierdarkness) (Quit: ZNC - http://znc.in)
[01:34:53] *** Quits: effprime_ (~effprime@user/effprime) (Remote host closed the connection)
[01:35:07] *** Quits: njt (~njt@zaph.org) (Quit: bye)
[01:35:07] *** Quits: d3fn (~n0b0dy@user/defn) (Quit: ZNC 1.8.2 - https://znc.in)
[01:35:08] *** Quits: az (az@user/azz) (Remote host closed the connection)
[01:35:08] *** Quits: Raichvent (~Raichvent@193.123.33.210) (Remote host closed the connection)
[01:35:08] *** Quits: nawcom (~nawcom@bulldadachat.com) (Quit: bye)
[01:35:08] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Remote host closed the connection)
[01:35:08] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[01:35:08] *** Quits: rwb (~augh@theguntretort.com) (Remote host closed the connection)
[01:35:08] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[01:35:08] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[01:35:08] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-174-201.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[01:35:09] *** Quits: sirn (~sirn@user/sirn) (Quit: ZNC 1.8.2 - https://znc.in)
[01:35:09] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:35:14] *** Joins: effprime (~effprime@user/effprime)
[01:35:16] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[01:35:25] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-174-201.dsl.scarlet.be)
[01:35:26] *** Joins: njt (~njt@zaph.org)
[01:35:26] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[01:35:27] *** Joins: dskull (~dskull@user/dskull)
[01:35:28] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[01:35:29] *** Joins: sirn (~sirn@user/sirn)
[01:35:30] *** Quits: percY- (~percY@138.68.239.19) (Remote host closed the connection)
[01:35:33] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[01:35:35] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Remote host closed the connection)
[01:35:35] *** Joins: remedan (~remedan@balak.me)
[01:35:37] *** Quits: pankid (~quassel@pankid.club) (Quit: No Ping reply in 180 seconds.)
[01:35:39] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[01:35:51] *** Joins: rwb (~augh@theguntretort.com)
[01:35:56] *** Joins: defn (~n0b0dy@user/defn)
[01:36:25] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[01:36:26] *** Joins: xavierdarkness (~xavierdar@user/xavierdarkness)
[01:36:37] *** Joins: waxfire (~waxfire@65.119.2.240)
[01:36:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:36:37] *** Quits: Roey (~Roey@user/Roey) (Ping timeout: 265 seconds)
[01:36:41] *** Quits: remexre (~nathan@user/remexre) (Ping timeout: 246 seconds)
[01:36:41] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 246 seconds)
[01:36:41] *** Quits: grym (~grym@user/grym) (Ping timeout: 246 seconds)
[01:36:46] *** Joins: pankid (~quassel@pankid.club)
[01:36:51] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[01:36:52] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:36:57] *** Quits: emptynine (tkk@cybertron.redlight.li) (Ping timeout: 250 seconds)
[01:36:57] *** Quits: d1b (~db@user/d1b) (Ping timeout: 250 seconds)
[01:37:06] *** Quits: FluffyMask (~masque@user/fluffymask) (Ping timeout: 265 seconds)
[01:37:10] *** Joins: percY- (~percY@138.68.239.19)
[01:37:10] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[01:37:16] *** Joins: Roey (~Roey@user/Roey)
[01:37:17] *** Quits: TML (~tml@user/tml) (Ping timeout: 264 seconds)
[01:37:27] *** Joins: califax (~califax@user/califx)
[01:37:31] *** Joins: grym (~grym@user/grym)
[01:37:32] *** Joins: remexre (~nathan@user/remexre)
[01:37:34] *** Joins: finsternis (~X@23.226.237.192)
[01:37:35] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[01:37:40] *** Joins: TML (~tml@user/tml)
[01:37:50] *** Joins: emptynine (tkk@cybertron.redlight.li)
[01:37:58] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 252 seconds)
[01:38:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[01:38:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:40:11] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[01:40:29] *** Quits: pycode (~pycode@2001:b07:5d28:551:574:b265:6d34:fd4f) (Ping timeout: 265 seconds)
[01:42:44] *** Joins: wyclif (~wyclif@user/wyclif)
[01:43:48] *** Joins: s1b1 (~s1b1@user/s1b1)
[01:46:39] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[01:46:48] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:47:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:47:44] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 265 seconds)
[01:48:01] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[01:48:14] *** Joins: wyclif (~wyclif@user/wyclif)
[01:48:17] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:49:15] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:49:37] *** Quits: grooverman (~grooverma@179.99.120.247) (Read error: Connection reset by peer)
[01:50:23] *** Quits: alguien (~alguien@user/alguien) (Quit: Leaving)
[01:50:51] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[01:51:04] *** Joins: John__ (~johnau@202.172.127.116)
[01:51:28] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:53:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:53:19] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:53:45] *** Joins: wyclif (~wyclif@user/wyclif)
[01:53:51] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 245 seconds)
[01:54:00] *** Joins: grooverman (~grooverma@177.95.12.14)
[01:54:10] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[01:54:16] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[01:56:01] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:bc7f:57d0:18d0:b07a) (Read error: Connection reset by peer)
[01:56:35] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[01:56:39] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[01:58:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:58:48] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[01:59:15] *** Joins: wyclif (~wyclif@user/wyclif)
[01:59:33] *** Quits: The_Loko (~The_Loko@79.116.4.121) (Quit: Leaving)
[02:00:17] *** Quits: Samian (~Sami@user/samian) (Read error: Connection reset by peer)
[02:01:53] *** Quits: yaalon (~yaalon@2600:1700:50c0:bf0:5132:9043:71d:1e16) (Remote host closed the connection)
[02:02:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:03:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[02:04:16] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 245 seconds)
[02:04:45] *** Joins: wyclif (~wyclif@user/wyclif)
[02:04:47] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:04:58] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:16fd:7b14:dc8d:ba37) (Ping timeout: 252 seconds)
[02:05:27] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:06:41] *** Quits: gitly (~gitly@185.69.145.221) (Ping timeout: 252 seconds)
[02:07:32] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[02:07:32] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:08:25] *** Joins: ham5urg (~ham5urg@2a04:4540:680c:d300:542c:9aeb:a902:55a3)
[02:08:33] *** Joins: gitly (~gitly@85.255.237.63)
[02:09:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:09:47] *** Joins: wyclif (~wyclif@user/wyclif)
[02:10:21] *** Quits: tbcr (~tbcr@user/tbcr) (Killed (NickServ (GHOST command used by tbcr_!~tbcr@107.13.189.161)))
[02:10:27] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[02:10:47] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:11:31] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[02:11:46] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 245 seconds)
[02:12:21] *** Joins: Fieldy (~no@user/fieldy)
[02:13:27] *** Joins: cjb (~cjb@user/cjb)
[02:13:46] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[02:14:25] *** Joins: Betal (~Betal@user/betal)
[02:15:53] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:17:13] *** Quits: imakestuff (~imakestuf@197.156.107.70) (Remote host closed the connection)
[02:18:51] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 245 seconds)
[02:22:18] *** Joins: Elodin (~weechat@user/elodin)
[02:25:35] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[02:27:10] *** Quits: Linux77 (~Linux7_7@186.233.182.243) (Quit: Leaving)
[02:27:17] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[02:27:52] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:28:51] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[02:29:34] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[02:31:26] *** Joins: Samian (~Sami@user/samian)
[02:31:46] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Ping timeout: 245 seconds)
[02:31:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:33:42] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Client Quit)
[02:34:35] <Samian> Anyone know how to set a start-profiling point in scalene?
[02:34:46] <Samian> I want it to bypass profiling the startup cast
[02:34:52] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[02:37:38] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Read error: Connection reset by peer)
[02:37:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:38:01] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[02:38:35] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 252 seconds)
[02:39:08] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 252 seconds)
[02:39:16] *** Quits: luva (~luva@178.239.173.200) (Ping timeout: 245 seconds)
[02:39:41] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:40:39] *** Joins: luva (~luva@178.239.173.200)
[02:40:40] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[02:41:07] *** Joins: belphegor666 (~satan@user/belphegor666)
[02:41:14] *** Joins: de-facto (~de-facto@user/de-facto)
[02:42:30] *** Joins: ham5urg_ (~ham5urg@31.29.55.101.dynamic-pppoe.dt.ipv4.wtnet.de)
[02:42:46] *** Quits: ham5urg_ (~ham5urg@31.29.55.101.dynamic-pppoe.dt.ipv4.wtnet.de) (Client Quit)
[02:44:31] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[02:44:41] *** Quits: ham5urg (~ham5urg@2a04:4540:680c:d300:542c:9aeb:a902:55a3) (Ping timeout: 245 seconds)
[02:45:49] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[02:46:10] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[02:47:56] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:49:34] *** Joins: Wulf (~Wulf@user/wulf)
[02:50:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[02:50:59] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:51:01] *** Joins: djapo (~archangel@user/djapo)
[02:51:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:51:40] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[02:51:46] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:55:47] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:56:08] *** Quits: lyr (~lyr@user/lyr) (Quit: Ping timeout (120 seconds))
[02:56:17] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:56:21] *** Joins: lyr (~lyr@user/lyr)
[02:56:43] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Read error: Connection reset by peer)
[02:56:44] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[02:56:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:56:57] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:57:03] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[02:57:04] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[02:57:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[02:57:12] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (Ping timeout: 265 seconds)
[02:57:19] *** Joins: redgloboli (~redglobol@user/redgloboli)
[02:57:27] *** Quits: oprypin (~irc@pryp.in) (Remote host closed the connection)
[02:57:41] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:57:47] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:57:47] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: No Ping reply in 180 seconds.)
[02:58:36] *** Joins: oprypin (~irc@pryp.in)
[02:59:05] *** Joins: kcrk (~kcrk@user/kcrk)
[02:59:25] *** Joins: fikran (~fikran@user/fikran)
[03:00:14] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:c469:b5a1:22cf:db57)
[03:00:57] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 268 seconds)
[03:01:20] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[03:01:23] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Ping timeout: 246 seconds)
[03:01:23] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Ping timeout: 246 seconds)
[03:01:23] *** Quits: allegary (~allegary@apache/committer/gjm) (Ping timeout: 246 seconds)
[03:01:27] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 250 seconds)
[03:01:44] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 246 seconds)
[03:01:44] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Ping timeout: 246 seconds)
[03:01:53] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 250 seconds)
[03:01:53] *** Quits: Mikaela- (~mikaela-@Feneas/Mikaela-) (Ping timeout: 264 seconds)
[03:01:54] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 264 seconds)
[03:02:05] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Ping timeout: 246 seconds)
[03:02:05] *** Quits: Vipulk (~vipulk@user/vipulk) (Ping timeout: 246 seconds)
[03:02:12] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 268 seconds)
[03:02:12] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Ping timeout: 268 seconds)
[03:02:12] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Ping timeout: 268 seconds)
[03:02:18] *** Quits: jwon (~jwon@user/jwon) (Ping timeout: 250 seconds)
[03:02:18] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Ping timeout: 250 seconds)
[03:02:19] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 250 seconds)
[03:02:29] *** Quits: aeva[m] (~aeva@2001:470:69fc:105::e2d9) (Ping timeout: 264 seconds)
[03:02:29] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Ping timeout: 264 seconds)
[03:03:00] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[03:03:48] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[03:04:54] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2.1)
[03:05:17] *** Joins: allegary (~allegary@apache/committer/gjm)
[03:06:41] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[03:07:00] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:09:27] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[03:10:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[03:11:46] *** Quits: realies (~realies@user/realies) (Quit: ~)
[03:12:30] *** Joins: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com)
[03:12:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2.1)
[03:12:47] *** Joins: realies (~realies@user/realies)
[03:13:07] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[03:13:26] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-544b-b972-a6f4-ec7d.res6.spectrum.com) (Ping timeout: 245 seconds)
[03:13:27] *** Joins: Plyht (uid433484@user/plyht)
[03:14:13] *** Quits: gitly (~gitly@85.255.237.63) (Ping timeout: 252 seconds)
[03:14:19] <Plyht> !
[03:14:53] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[03:15:55] *** Joins: gitly (~gitly@148.252.132.144)
[03:20:31] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[03:22:04] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[03:23:01] *** Quits: gitly (~gitly@148.252.132.144) (Ping timeout: 245 seconds)
[03:25:14] *** Joins: gitly (~gitly@85.255.235.97)
[03:26:29] *** Joins: Mikaela- (~mikaela-@Feneas/Mikaela-)
[03:27:23] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[03:27:54] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[03:28:23] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-49f9-d8e9-21a2-a096.res6.spectrum.com)
[03:29:04] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[03:29:12] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[03:30:00] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Read error: Connection reset by peer)
[03:31:10] *** Joins: jwon (~jwon@user/jwon)
[03:32:28] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[03:33:02] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[03:33:04] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[03:33:11] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[03:34:06] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[03:34:26] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[03:34:28] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[03:34:53] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[03:36:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1c17:3734:ae15:a712) (Quit: Ping timeout (120 seconds))
[03:37:02] *** Joins: Vipulk (~vipulk@user/vipulk)
[03:37:03] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[03:37:06] *** Joins: aeva[m] (~aeva@2001:470:69fc:105::e2d9)
[03:37:16] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[03:37:42] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[03:37:43] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[03:38:19] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[03:39:27] *** Joins: KeiraT (~k@lulzsec.co.uk)
[03:40:48] *** Joins: sydbarret (~anton@static-186-121-195-63.acelerate.net)
[03:42:00] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:42:11] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Ping timeout: 245 seconds)
[03:42:24] <SnoopJ> I'm pretty sure the answer is "no" but is there any way I can handle an extension module that likes to call std::abort() indiscriminately? I've tried a signal handler for SIGABRT but that's too late in the game I guess.
[03:42:26] *** Joins: vimart (~vimart@85.255.237.146)
[03:43:29] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[03:44:18] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-49f9-d8e9-21a2-a096.res6.spectrum.com) (Quit: jarthur)
[03:45:35] *** Joins: newpy (~newpy@206.168.231.90)
[03:46:46] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[03:47:21] <energizer> SnoopJ: i might just patch it so it doesnt do that
[03:47:44] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[03:48:01] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:34f:9af9:3664:df68) (Read error: Connection reset by peer)
[03:48:42] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Client Quit)
[03:48:44] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[03:49:18] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[03:50:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[03:51:54] *** Quits: voidcat (~voidcat@user/voidcat) (Quit: nyaa~)
[03:51:59] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Read error: Connection reset by peer)
[03:53:04] *** Joins: voidcat (~voidcat@user/voidcat)
[03:53:35] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[03:54:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[03:55:31] *** Joins: cliluw (~cliluw@47.147.80.149)
[03:58:22] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[03:58:58] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[03:59:14] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[03:59:17] *** Joins: srhm (~srhm@user/srhm)
[03:59:22] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[04:00:05] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[04:00:22] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[04:03:16] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[04:03:56] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[04:03:56] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:04:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:04:28] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:04:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:07:04] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:29f8:c08:f592:7635) (Ping timeout: 252 seconds)
[04:07:35] *** John__ is now known as johnau
[04:08:26] *** Joins: jonthesnow (~xizhendu@240e:404:8511:23ec:dadc::30c0)
[04:08:49] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[04:09:03] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[04:09:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[04:09:55] *** Quits: Samian (~Sami@user/samian) (Remote host closed the connection)
[04:10:26] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 252 seconds)
[04:10:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:c469:b5a1:22cf:db57) (Read error: Connection reset by peer)
[04:11:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:12:23] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[04:12:41] *** Joins: shangxiao (~davids@124.187.230.212)
[04:15:51] *** Quits: subopt (~subopt@2603-8081-2302-459a-5423-ed59-3c4f-3049.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:15:52] <SnoopJ> energizer, upstream is a $work product so I might see if I can get away with `#ifdef SWIG` to make the macro responsible for this a little less impolite, but I figured I'd see if anybody knew a neat trick I didn't think of
[04:15:59] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:91aa:310b:7fb9:8c56)
[04:16:49] *** Joins: fdkdn (~fdkdn@178.49.152.151)
[04:16:50] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:17:08] *** Joins: Samian (~Sami@user/samian)
[04:17:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[04:17:48] *** Parts: Plyht (uid433484@user/plyht) ()
[04:17:55] <fdkdn> where can I download pyhton header and the improt library?
[04:18:13] <fdkdn> version 3.8.7
[04:18:19] <Samian> SnoopJ  you weren't talking to me when you said the answer is "no" were you?
[04:18:48] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[04:18:54] <Samian> I'm trying to figure out how to get Scalene to start and stop profiling at specified points in the code.
[04:19:00] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[04:19:16] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 245 seconds)
[04:20:16] <SnoopJ> Samian, no, I was asking a question of my own
[04:20:32] <Samian> ooo now it makes ense
[04:20:34] *** Joins: drew` (~drew@user/drew)
[04:20:35] <Samian> *sense
[04:20:49] <deltab> fdkdn: you can download the whole source code, or your OS may have a python-dev package
[04:21:26] *** Joins: nbao (~nbao@187.20.181.193)
[04:21:46] <fdkdn> I don't see the python3.lib file in the repository
[04:22:19] *** Parts: sydbarret (~anton@static-186-121-195-63.acelerate.net) (Closing Window)
[04:23:20] *** Joins: sp0fp12 (~LENOVO@user/sp0fp12)
[04:23:25] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[04:24:02] <deltab> you would have to compile that, I think
[04:24:16] *** Joins: Linux77 (~Linux7_7@186.233.182.243)
[04:24:37] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:24:40] *** Quits: luva (~luva@178.239.173.200) (Ping timeout: 252 seconds)
[04:25:26] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:91aa:310b:7fb9:8c56) (Read error: Connection reset by peer)
[04:25:39] <deltab> or install a libpython package
[04:26:16] *** Quits: flokuehn (~flokuehn@i577bc614.versanet.de) (Ping timeout: 252 seconds)
[04:26:22] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-49f9-d8e9-21a2-a096.res6.spectrum.com)
[04:26:53] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:27:17] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:27:18] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:28:09] *** Joins: flokuehn (~flokuehn@mue-88-130-54-040.dsl.tropolys.de)
[04:28:50] <deltab> SnoopJ: cppreference says "Causes abnormal program termination unless SIGABRT is being caught by a signal handler passed to std::signal and the handler does not return."
[04:29:04] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:29:17] <deltab> doesn't seem to be any other built-in way of blocking it
[04:29:39] *** Joins: elkclone (~elkclone@user/elkclone)
[04:29:50] <SnoopJ> deltab, right, and said handler (as the OS sees it) will be in the runtime, so I think I'm out of luck trying to do it without changes to the lib
[04:30:11] <SnoopJ> (short of something truly pathological like encapsulating the lib)
[04:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:58] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[04:31:20] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[04:32:59] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[04:34:48] *** Joins: vlm (~vlm@user/vlm)
[04:35:25] *** Joins: luva (~luva@5.180.62.228)
[04:36:14] <deltab> SnoopJ: maybe you can do something with the linker to override the function; but yeah, I think it should really be changed in the source
[04:37:35] <SnoopJ> the pragmatic solution for the work in front of me at the moment is to just check the relevant assertion on the Python side *before* calling into the library
[04:37:53] * deltab nods
[04:38:24] <SnoopJ> but hopefully it won't be an uphill battle to convince the guy whose approval it will require that "crash as fast and hard as possible" is not the best thing to do in the use-case of bindings
[04:38:44] <deltab> is it checking for a contract violation?
[04:39:12] <SnoopJ> it's a general-use ACME_ASSERT macro, but yea it's generally for bringing the sky down if the user tries to color outside the lines
[04:40:57] <gry> hi! how do i implement this in python with scipy or something? https://i.ibb.co/g4HxTVC/f.png i have n(nu) and k(nu) in a variable for some range of nu from nu1 to nu2. i dont have any idea of frequency range for variable 'a'. i presume nu_a is created by fft, not by me. i would greatly appreciate any hints and examples, please
[04:42:43] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[04:42:44] <Samian> woohoo I found the answer SnoopJ . "turning profiling on and off via scalene_profiler.start() and scalene_profiler.stop()" https://github.com/plasma-umass/scalene
[04:43:18] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[04:43:32] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Ping timeout: 265 seconds)
[04:44:59] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[04:45:14] *** Joins: yaalon (~yaalon@cpe-67-11-147-100.satx.res.rr.com)
[04:45:25] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[04:48:38] *** Quits: emf (~emf@2620:10d:c090:400::5:92d0) (Ping timeout: 260 seconds)
[04:48:44] *** Joins: Fiji (~Fiji@user/fiji)
[04:49:16] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[04:53:00] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[04:54:27] *** Quits: notepad (~notepad@129.159.46.243) (Ping timeout: 240 seconds)
[04:55:13] *** Joins: califax- (~califax@user/califx)
[04:56:49] *** Joins: notepad (~notepad@129.159.46.243)
[04:57:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:57:57] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:58:06] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[04:58:07] *** califax- is now known as califax
[04:58:28] *** Quits: fdkdn (~fdkdn@178.49.152.151) (Quit: Client closed)
[04:58:51] *** Quits: johnau (~johnau@202.172.127.116) (Ping timeout: 245 seconds)
[04:59:22] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[04:59:22] *** brabrax_ is now known as brabrax
[05:00:06] *** Joins: johnau (~johnau@107.181.155.24)
[05:00:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:04:11] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[05:04:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[05:06:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[05:07:04] <gry> hi
[05:07:08] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-49f9-d8e9-21a2-a096.res6.spectrum.com) (Quit: jarthur)
[05:07:22] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:07:23] *** Joins: Ben10 (~Ben10@37.120.130.26)
[05:07:23] <gry> i've tried searching the scipy/numpy docs but they dont have anything similar to the example image i shared above
[05:07:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:07:31] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[05:07:40] <gry> if there's a hint or perhaps a better place to ask, i'd be interested
[05:07:52] <SnoopJ> gry, it's not clear from your question what it is you want to implement.
[05:08:45] *** Joins: fikran (~fikran@user/fikran)
[05:09:35] <gry> from the image?
[05:10:04] <gry> they say that previous calculations came up with two solutions for the unknowns, k and n
[05:10:13] <gry> and while k is accurate, n is not
[05:10:27] <gry> so they suggest that doing these fft operations will help to improve the accuracy for 'n'
[05:10:28] <SnoopJ> and you say that you have k, n already, so I am unsure what it is you intend to compute from these expressions.
[05:10:50] <gry> it's a benchmark problem; the k matches the expected solution, but the n doesn't
[05:11:07] <gry> that's what these two expressions are supposed to resolve
[05:12:15] <gry> and i'd be happy to give it a try, if only i knew how to do that
[05:14:06] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:03] *** Joins: humberto1 (~humbertow@fixed-189-203-2-241.totalplay.net)
[05:17:30] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-49f9-d8e9-21a2-a096.res6.spectrum.com)
[05:19:51] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:20:08] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:9cfc:63a2:655d:320f)
[05:21:21] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 245 seconds)
[05:23:10] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:29:58] *** Joins: djapo (~archangel@user/djapo)
[05:30:00] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[05:30:36] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[05:30:50] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:9992:5c1a:c62:b27f)
[05:31:10] *** Joins: setfire (~setfire@63.225.226.46)
[05:31:29] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:32:34] *** Joins: zeden (~zeden@user/zeden)
[05:33:29] *** Quits: flokuehn (~flokuehn@mue-88-130-54-040.dsl.tropolys.de) (Ping timeout: 252 seconds)
[05:34:08] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[05:36:11] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:36:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[05:36:44] *** Joins: randomaccessvemu (~randomacc@2405:201:2007:8217:4ad9:23f4:90ee:7ce6)
[05:38:58] *** Quits: Ivii (~Ivyy@2001:a61:1329:3e01:a333:5e71:7d2d:495a) (Remote host closed the connection)
[05:40:19] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:41:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:41:26] *** Joins: dab21 (dab21@pistis.amyanddavid.net)
[05:42:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:42:34] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[05:42:40] *** Quits: johnau (~johnau@107.181.155.24) (Read error: Connection reset by peer)
[05:43:02] *** Joins: John__ (~johnau@202.172.127.116)
[05:43:20] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[05:44:41] *** Quits: randomaccessvemu (~randomacc@2405:201:2007:8217:4ad9:23f4:90ee:7ce6) (Ping timeout: 245 seconds)
[05:45:10] *** Parts: setfire (~setfire@63.225.226.46) ()
[05:45:28] *** Quits: humberto1 (~humbertow@fixed-189-203-2-241.totalplay.net) (Ping timeout: 252 seconds)
[05:47:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[05:47:40] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 252 seconds)
[05:49:11] *** Joins: setfire (~setfire@63.225.226.46)
[05:49:52] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[05:51:25] *** Quits: brachamh (~brachamh@user/brachamh) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:51:40] *** Quits: setfire (~setfire@63.225.226.46) (Quit: leaving)
[05:53:47] *** Joins: brachamh (~brachamh@user/brachamh)
[05:54:17] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:55:59] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:56:02] *** Joins: setfire (~setfire@63.225.226.46)
[05:59:27] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[05:59:46] *** Quits: sp0fp12 (~LENOVO@user/sp0fp12) (Quit: WeeChat 3.3)
[06:00:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[06:09:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[06:10:27] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:10:44] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[06:10:57] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:13:55] *** Joins: frost (~frost@59.71.244.36)
[06:16:11] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:27:14] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:28:32] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:29:34] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[06:32:02] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[06:32:30] *** Joins: thewrath007 (~mikea_mqt@pool-173-64-92-193.bltmmd.fios.verizon.net)
[06:32:37] *** Quits: thewrath007 (~mikea_mqt@pool-173-64-92-193.bltmmd.fios.verizon.net) (Client Quit)
[06:35:56] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[06:39:22] *** Quits: vimart (~vimart@85.255.237.146) (Ping timeout: 252 seconds)
[06:40:36] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[06:42:56] *** Quits: dld (~davidlowr@2601:197:600:1210:9df:744b:194c:a7af) (Ping timeout: 246 seconds)
[06:44:03] *** Joins: dld (~davidlowr@2601:197:600:1210:b589:86d2:35c3:a95e)
[06:44:05] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:44:39] *** Joins: langAt (uid520190@user/langat)
[06:45:31] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 245 seconds)
[06:46:02] *** Joins: nomic (~nomic@185.192.69.180)
[06:47:49] *** Joins: lethu (~lethu@user/lethu)
[06:48:46] *** Quits: emerent (~quassel@p200300cd57485592ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:49:02] *** Joins: emerent (~quassel@p200300cd574855d6ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:49:34] *** Joins: Myst (~Myst@user/myst)
[06:50:31] *** Quits: Myst (~Myst@user/myst) (Client Quit)
[06:53:49] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[06:55:19] *** Joins: flokuehn (~flokuehn@i5E86B39D.versanet.de)
[06:56:39] *** Joins: sbrown (~shawn@66.44.16.44)
[06:56:57] *** Quits: Ben10 (~Ben10@37.120.130.26) (Quit: Client closed)
[06:58:01] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Ping timeout: 245 seconds)
[06:59:00] *** Joins: node1 (~node1@user/node1)
[07:01:20] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:b453:9856:447e:e0a7)
[07:02:23] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[07:03:26] *** Quits: gitly (~gitly@85.255.235.97) (Ping timeout: 245 seconds)
[07:03:56] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:04:10] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:04:35] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[07:05:34] *** Joins: gitly (~gitly@148.252.129.26)
[07:06:05] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 264 seconds)
[07:06:29] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[07:06:49] *** Joins: nomic (~nomic@185.192.69.180)
[07:08:39] *** Quits: WhiteKarura (~WhiteKaru@user/whitekarura) (Quit: Client closed)
[07:09:06] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:10:04] *** Joins: az (az@user/azz)
[07:12:54] *** Quits: langAt (uid520190@user/langat) ()
[07:13:17] *** Quits: yaalon (~yaalon@cpe-67-11-147-100.satx.res.rr.com) (Remote host closed the connection)
[07:13:53] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[07:14:36] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:14:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[07:14:56] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:15:02] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:16:08] *** Quits: sbrown (~shawn@66.44.16.44) (Quit: Leaving)
[07:16:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:16:20] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[07:18:06] *** Joins: fikran (~fikran@user/fikran)
[07:18:12] *** Quits: node1 (~node1@user/node1) (Ping timeout: 265 seconds)
[07:19:36] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:20:12] *** Joins: nergar (~Nergar@177.225.157.49)
[07:20:13] *** Joins: Samian (~Sami@user/samian)
[07:21:03] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[07:21:16] *** Joins: etbcf (~etbcf@2001:8a0:7b3a:dd01:4958:49e3:a56e:b0bc)
[07:25:21] *** Joins: langAt (uid520190@user/langat)
[07:26:24] *** Joins: sbrown (~sbrown@66.44.16.44)
[07:27:45] *** Parts: sbrown (~sbrown@66.44.16.44) ()
[07:30:55] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Remote host closed the connection)
[07:32:55] *** Joins: Myst (~Myst@user/myst)
[07:33:19] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[07:33:51] *** Quits: John__ (~johnau@202.172.127.116) (Ping timeout: 245 seconds)
[07:34:35] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[07:35:09] *** Joins: John__ (~johnau@202.172.127.116)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:20] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:38:38] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:38:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:38:51] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Ping timeout: 245 seconds)
[07:38:53] *** Quits: LiftLeft (~LiftLeft@66.115.145.213) (Ping timeout: 252 seconds)
[07:40:31] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[07:40:53] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[07:41:00] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:42:11] *** Quits: nbao (~nbao@187.20.181.193) (Quit: leaving)
[07:44:35] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Ping timeout (120 seconds))
[07:47:47] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:47:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:48:26] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 245 seconds)
[07:50:38] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 260 seconds)
[07:50:56] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[07:51:45] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[07:51:45] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[07:52:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[07:52:48] *** A_Dragon is now known as smol_dragon
[07:53:37] *** Joins: aeyxa (~aeyxa@ip72-197-177-216.sd.sd.cox.net)
[07:59:12] *** Quits: aeyxa (~aeyxa@ip72-197-177-216.sd.sd.cox.net) (Quit: Client closed)
[08:02:58] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[08:03:51] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[08:04:59] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:08:22] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[08:09:31] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Client Quit)
[08:11:23] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[08:12:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[08:14:08] *** Joins: jsnd (~jsdn@ip68-4-206-65.oc.oc.cox.net)
[08:15:15] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[08:19:41] *** jeho2 is now known as jeho
[08:20:29] *** Quits: arijit (~arijit@59.144.137.162) (Quit: Leaving)
[08:20:47] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d)
[08:21:24] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[08:21:59] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:22:20] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[08:24:45] *** Joins: kib (~kib@user/kib)
[08:24:58] *** Quits: frost (~frost@59.71.244.36) (Ping timeout: 252 seconds)
[08:26:27] *** Quits: p-i- (~Ohmu@223.206.71.80) (Remote host closed the connection)
[08:26:40] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Ping timeout: 252 seconds)
[08:27:02] *** Joins: p-i- (~Ohmu@mx-ll-223.206.71-80.dynamic.3bb.co.th)
[08:27:34] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: WeeChat 3.2.1)
[08:28:19] *** Quits: bfortified (~bfortifie@172.83.243.94) (Ping timeout: 252 seconds)
[08:29:28] *** Joins: stranac (~stranac@195.29.239.126)
[08:30:11] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:44] *** Joins: c10l (~c10l@user/c10l)
[08:32:08] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[08:35:35] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[08:36:01] *** Quits: etbcf (~etbcf@2001:8a0:7b3a:dd01:4958:49e3:a56e:b0bc) (Ping timeout: 252 seconds)
[08:37:10] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[08:37:29] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[08:37:54] *** defjam is now known as clouding
[08:39:04] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[08:40:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[08:40:43] *** Quits: WhiteKarura (~WhiteKaru@user/whitekarura) (Client Quit)
[08:44:23] *** clouding is now known as defjam
[08:45:26] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Ping timeout: 252 seconds)
[08:45:41] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Ping timeout: 265 seconds)
[08:50:14] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:51:31] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d) (Read error: Connection reset by peer)
[08:51:49] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[08:51:52] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d)
[08:54:47] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[08:57:34] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:02:24] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[09:06:51] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[09:07:11] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:08:48] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[09:13:26] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Ping timeout: 245 seconds)
[09:13:34] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[09:13:50] *** Joins: hifi (hifi@m.vi.fi)
[09:17:11] *** Quits: kib (~kib@user/kib) (Ping timeout: 245 seconds)
[09:18:04] *** Joins: kib (~kib@user/kib)
[09:22:04] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:9cfc:63a2:655d:320f) (Remote host closed the connection)
[09:22:27] *** Joins: carl- (~carl-@185.103.188.130)
[09:22:28] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:9cfc:63a2:655d:320f)
[09:22:57] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:b309:b571:6ed:bc43)
[09:25:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:26:21] *** Quits: kib (~kib@user/kib) (Ping timeout: 245 seconds)
[09:27:26] *** Joins: fikran (~fikran@user/fikran)
[09:30:45] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:9cfc:63a2:655d:320f) (Read error: Connection reset by peer)
[09:32:38] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:32:49] *** Joins: pluri (~pluri@user/pluri)
[09:33:18] *** Joins: kib (~kib@user/kib)
[09:33:51] <pluri> "apt-get -y install python3-venv" says it's already installed. but when doing "python3 -m venv venv", it says "The virtual environment was not created successfully because ensurepip is not
[09:33:51] <pluri> available.  On Debian/Ubuntu systems, you need to install the python3-venv
[09:33:51] <pluri> package using the following command."
[09:34:05] <pluri> sorry for the line breaks
[09:34:19] <pluri> any idea what's going on? this is a fresh ubuntu 16.04 install
[09:34:40] <pluri> how can this fail?
[09:35:10] <pluri> idk how people can use *nix and not go mad
[09:36:11] <pluri> when something as basic as installing python and starting a virtual env on a fresh instance fails. srry for the rant
[09:37:24] <pluri> "python3-venv is already the newest version (3.5.1-3)."
[09:37:30] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d) (Ping timeout: 260 seconds)
[09:37:47] *** Quits: cjb (~cjb@user/cjb) ()
[09:38:07] *** Joins: ubert (~Thunderbi@77.119.219.178.wireless.dyn.drei.com)
[09:38:14] <jinsun> the nicer way to install python for development is to ditch the os python and use pyenv
[09:39:00] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:39:27] <shangxiao> pluri: what's the error? that pip is not available?
[09:39:53] <pluri> shangxiao apparently something called "ensurepip"  isn't available. idk what that is
[09:40:04] <pluri> the suggestion is to apt-get install python3-env, but that confirm it's already installed
[09:40:16] <jinsun> I think you have to install python3-pip also
[09:40:25] <Yhg1s> pluri: what does 'which python3' say?
[09:40:42] <pluri> "/usr/bin/python3"
[09:40:56] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[09:41:04] <shangxiao> pluri: this looks related: https://askubuntu.com/questions/879437/ensurepip-is-disabled-in-debian-ubuntu-for-the-system-python
[09:42:10] <shangxiao> looks a bit old but the suggestion was to use --without-pip
[09:42:26] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[09:42:50] <pluri> that's a bit disturbing, i obviously would need pip
[09:43:39] *** Quits: nergar (~Nergar@177.225.157.49) (Quit: Leaving)
[09:43:39] <pluri> perhaps i should downgrade to ubuntu 14.10
[09:43:59] <pluri> or would 18.04 be better? do you know which version is likely to not have this bug?
[09:44:29] <Yhg1s> don't downgrade to a 7 year old distribution, no.
[09:44:52] <Widdershins> hahaha
[09:45:00] <Widdershins> in no circumstance should you downgrade to 14.10
[09:45:31] <pluri> I'll go with 18.04 and cross my fingers then
[09:45:43] <Widdershins> pluri: i think we're getting wildly sidetracked here. what are you trying to do? just create a virtualenv?
[09:46:01] <Widdershins> pluri: what do you get when you run `which virtualenv`
[09:46:04] <pluri> yeah, i'm trying to move my app from local to a vps
[09:46:15] <shangxiao> What was wrong with installing pip? 🤔
[09:46:22] <pluri> i've already upgraded to 18.04, let me see if the error happens again
[09:46:39] <Widdershins> if you just set up a brand new VPS you should have it on 20.04 before you start messing around
[09:46:50] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:01] <pluri> unfortunately the hosting i'm using doesn't seem to offer 20.04
[09:47:10] *** Joins: kosh (~kosh@user/kosh)
[09:47:10] <Widdershins> that doesn't matter, you can do a release upgrade
[09:47:31] *** Joins: seednode (~seednode@user/seednode)
[09:47:32] <Widdershins> `do-release-upgrade -c`
[09:47:49] <Widdershins> or i should say, `do-release-upgrade --check`
[09:48:02] <Widdershins> single letter flags bad
[09:48:52] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0)
[09:50:13] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[09:50:46] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:52:09] <pluri> "Package python3-venv is not available, but is referred to by another package. This may mean that the package is missing, has been obsoleted, or is only available from another source"
[09:52:17] <pluri> this is hilarious
[09:52:23] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:53:34] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0) (Ping timeout: 252 seconds)
[09:53:52] <pluri> ah sorry. it's because i didn't do "apt-get update"
[09:54:10] <Widdershins> pluri: "python3-virtualenv" not "python3-venv"
[09:54:16] *** drew` is now known as drew
[09:55:16] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:55:24] <pluri> i'm *nix illiterate :) it's like a disability tbh
[09:56:46] *** Joins: gusto (~Augustus@109.255.100.54)
[09:57:05] <pluri> ok looks like i was victorious and got venv to work on 18.04
[09:58:09] <Widdershins> pluri: i still recommend upgrading to 20.04. just because they don't have an image for that version is a non-reason
[09:58:21] <Widdershins> you have literally no reason why you should be dependent on it
[09:58:31] <p-i-> I've bumped into an obstacle writing code to wrap a C-lib: https://bpa.st/K37A
[09:58:35] <Widdershins> nor does it take very long
[09:58:42] <pluri> Widdershins it worked after i updated the apt repositories tho!
[09:59:17] <pluri> i'm honestly afraid something else will break if i update. if i run into any more errors i'll consider it, i've saved the command you suggested :)
[09:59:21] <p-i-> I can invoke `tdjson.somefunction()` but I can't `f = tdjson.get(somefunction); f()`
[09:59:37] <p-i-> Is there any way around this?
[10:01:16] <p-i-> pluri: Setting up .venvs has caused me so much grief over the years. I've tried all sorts of flowery solutions (poetry is beautiful, but only goes so far)
[10:01:41] <pluri> they're supposed to make life easier tho hahaha
[10:01:59] <Widdershins> pluri: why would it break after you update
[10:02:07] <Widdershins> pluri: you don't even have anything running yet. what would go wrong
[10:02:14] <Widdershins> what is the worst case? it takes like 5 minutes to image another vm
[10:02:23] <Widdershins> you are saving yourself trouble down the line
[10:02:31] <p-i-> pluri: Here's a chunk from my setup.sh (aimed at ubuntu 20.04): sudo apt install software-properties-common -y ; sudo add-apt-repository ppa:deadsnakes/ppa -y ; sudo apt install python3.9 python3.9-venv -y ; python3.9 -m venv .venv ; . .venv/bin/activate ; pip install --upgrade pip ;
[10:03:16] <pluri> Widdershins well the same reason 16.04 turned out to have a bug that made it impossible to use pip in a virtual env?.. i think it's reasonable to "not fix if it isn't broken", because it might make it worse
[10:03:33] <p-i-> `python3.9 -m venv .venv` ensures that I'm now using python3.9's pip.
[10:03:40] <Widdershins> pluri: pip worked just fine in virtualenvs in 16.04 if you used the right virtualenv command
[10:04:05] <Widdershins> pluri: i've expressed to you exactly which packages and commands provide working copies of this stuff. it's really pretty easy
[10:04:12] <pluri> earlier someone linked the bug
[10:04:21] *** Joins: rendar (~rendar@user/rendar)
[10:04:35] <Widdershins> and newer versions of the OS have fewer bugs. 20.04 has been in production for over a year now
[10:04:40] <pluri> it was this bug: https://askubuntu.com/questions/879437/ensurepip-is-disabled-in-debian-ubuntu-for-the-system-python
[10:04:54] <pluri> "newer versions of the OS have fewer bugs" this is not necessarily true imo
[10:05:20] <p-i-> I got overambitious and tried 21.x and my builds broke, so I'm just holding at 20.04 for now. If it aint broke don't fix it...
[10:05:37] <Widdershins> this bug is from 2014 pluri
[10:05:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:06:54] <pluri> I know, but because you said pip worked just fine in 16.04, i pointed out how in my case, it didn't, because of that particular bug
[10:07:37] <p-i-> Yhg1s: Are you around by any chance? I remember you were able to help when I was writing a C++/Python interop some years back, and I'm a bit stuck on a similar issue.
[10:08:00] <Yhg1s> p-i-: just ask the channel.
[10:08:06] <Yhg1s> pluri: that's not a bug, that's a vague description of a problme.
[10:08:17] <p-i-> Yhg1s: I did, I think it got lost in the noise
[10:08:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:08:35] *** Joins: manti7 (~manti7@176.10.104.94)
[10:08:53] <Yhg1s> p-i-: oh, ctypes. Well, don't use ctypes, really.
[10:09:09] <Yhg1s> p-i-: the library you're wrapping doesn't have a 'get' function.
[10:09:37] <p-i-> Do you see any option to tidy it up?
[10:09:47] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[10:09:55] <Yhg1s> p-i-: tidy what up? you didn't post any of the relevant code.
[10:12:06] *** Joins: zaz\ (~zaz@poneybl.eu)
[10:13:45] <jinsun> wouldn't getattr work here?
[10:13:54] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[10:14:06] <Yhg1s> jinsun: I have no idea what you're suggesting, sorry.
[10:14:24] <p-i-> https://bpa.st/TLVQ <-- tidier paste
[10:14:29] <p-i-> jinsun: Thanks I'll try it
[10:14:44] <jinsun> instead of tdjson.get(f_),  getattr(tdjson, f_)
[10:14:58] <Widdershins> should paste this as markdown next time instead of python
[10:15:04] <Yhg1s> if that's what they're actually looking to do, perhaps. It's not clear to me that it is.
[10:15:11] <Widdershins> or use comments instead of ```
[10:15:36] <Yhg1s> p-i-: no, 'get' is not a standard method in any shape or form.
[10:15:41] <p-i-> jinsun: __getattr__ right?
[10:15:45] <Yhg1s> p-i-: no.
[10:15:53] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[10:16:02] <Widdershins> not all python objects have `get`. that's not a standard api
[10:16:08] <Widdershins> not even __get__ is a standard api
[10:16:10] <Yhg1s> jinsun: if you actually want to get the attribute named f_, getattr() is the builtin function to use.
[10:16:18] <Yhg1s> eh, p-i- ^
[10:16:20] <Yhg1s> jinsun: sorry.
[10:16:31] <Yhg1s> (also, don't use the silly trailing underscore convention in Python. it's pointless.)
[10:16:37] *** Quits: ubert (~Thunderbi@77.119.219.178.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[10:16:40] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[10:16:47] <p-i-> AttributeError: /usr/local/lib/libtdjson.so: undefined symbol: getattr
[10:16:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:17:12] <jinsun> what is the trailing underscore convention for?
[10:17:24] <Yhg1s> p-i-: no, not obj.getattr()
[10:17:30] <Yhg1s> p-i-: getattr(). It's a builtin function.
[10:17:35] <p-i-> ohhhhh
[10:17:37] <p-i-> gotcha
[10:17:43] *** Joins: pycode (~pycode@2001:b07:5d28:551:64a3:44dc:3f5d:e810)
[10:18:37] *** Joins: rolo (~rolo@mail.inhaus12.eu)
[10:18:55] <Yhg1s> jinsun: it's a convention to distinguish data members of classes.
[10:19:18] <Yhg1s> (because you're supposed to use accessors instead)
[10:19:20] <p-i-> Yesss I'm in! Thankyou jinsun Yhg1s (and sorry for pinging you)
[10:20:12] <Widdershins> is `get` a standard api in javascript or something i don't remember
[10:20:26] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:21:23] <BrenBarn> I think there's some new JS thing that has "get"
[10:21:57] <p-i-> Yhg1s: "Well, don't use ctypes, really" ... what did you mean by this?
[10:22:07] *** Quits: gitly (~gitly@148.252.129.26) (Ping timeout: 252 seconds)
[10:22:24] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0)
[10:22:47] <Yhg1s> p-i-: I'm not sure what part is unclear. Don't use ctypes. It's not a good thing to use.
[10:23:52] <p-i-> But what to do instead? Just use native Python constructs? So `int` instead of `c_int` and `bytes` instead of `c_char_p` etc
[10:23:56] *** Joins: gitly (~gitly@148.252.132.144)
[10:24:55] <Yhg1s> p-i-: that's not what you use ctypes for. You use ctypes to wrap C libraries. It doesn't do a good job at doing that. Use cffi instead, or Cython, or pybind11, or manually written extension modules.
[10:25:41] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[10:26:06] <p-i-> 👍
[10:26:19] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[10:26:21] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 265 seconds)
[10:26:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0) (Ping timeout: 245 seconds)
[10:27:31] *** Quits: rolo (~rolo@mail.inhaus12.eu) (Quit: WeeChat 3.3)
[10:28:07] *** Joins: chele (~chele@user/chele)
[10:28:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[10:29:30] *** Joins: wyclif (~wyclif@user/wyclif)
[10:29:59] <pluri> why is pip failing with this error? "ERROR: No matching distribution found for setuptools==52.0.0"
[10:30:29] <pluri> apparently I have setuptools 39.0.1 already installed
[10:31:01] <Widdershins> are you... trying to install in the system python
[10:31:02] <Yhg1s> pluri: what version of pip, and for what version of Python?
[10:31:33] <pluri> python3.6, pip21.2.4 in a virtual env
[10:31:59] <pluri> should i try to do it in the system python instead?
[10:32:07] <Yhg1s> no.
[10:32:58] <Yhg1s> pluri: what does 'which pip' say, and 'pip install setuptools'?
[10:33:18] <Widdershins> your virtualenv tool should already provide setuptools
[10:33:29] <pluri> which pip is root/app/venv/bin/pip
[10:33:53] <pluri> pip install setuptools says: `Requirement already satisfied: setuptools in ./venv/lib/python3.6/site-packages (39.0.1)`
[10:33:56] <Widdershins> you're running your app as root?
[10:34:17] <Widdershins> that's a separate problem
[10:34:19] <pluri> there is no app running yet
[10:34:30] <Widdershins> "requirement already satisfied" is not really an error
[10:34:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:34:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Remote host closed the connection)
[10:34:44] <Yhg1s> pluri: and 'pip install --upgrade setuptools'?
[10:35:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:35:06] <pluri> `Successfully installed setuptools-58.1.0`
[10:35:07] <pluri> nice :)
[10:35:31] <Yhg1s> That's still not 52.0.0, though. I don't know why you couldn't install 52.0.0.
[10:35:49] <Widdershins> why would you install 52 exactly
[10:36:19] <pluri> i'm doing a `pip install -r requirements.txt`
[10:36:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:36:33] <pluri> and yeah it's still failing with the same rror
[10:36:39] <pluri> it wants version 52 specifically
[10:36:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[10:36:53] <Yhg1s> what is 'it'?
[10:37:05] <pluri> something in the requirements.txt, I imagine
[10:37:22] <Widdershins> it's probably from a pip freeze from a while ago
[10:37:27] *** Joins: wyclif (~wyclif@user/wyclif)
[10:37:27] <pluri> oh there is actually setuptools 52.0 in the requirements list
[10:37:39] <pluri> it's from today actually
[10:37:40] <Widdershins> not a very useful requirements.txt if it's freezing the version of setuptools, which is not really an app requirement
[10:37:58] <pluri> I generated it with `pip list --format=freeze`
[10:38:03] <Yhg1s> pluri: what requirements.txt? Where did you get it? why is it pinning setuptools?
[10:38:31] <pluri> I built the app on OS X in pycharm using an anaconda virtual environment. I'm trying to transfer it to a vps on ubuntu
[10:38:51] <Widdershins> you clearly installed the setuptools a while ago
[10:39:13] <pluri> should I remove it entirely from requirements.txt?
[10:39:48] <Yhg1s> yes, just delete the requirement.
[10:39:56] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:41:06] <Widdershins> you probably shouldn't have a frozen requirements.txt at this stage of development
[10:42:12] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[10:42:15] <pluri> how come?
[10:42:15] <shangxiao> to freeze… or not to freeze…
[10:42:49] <Widdershins> pluri: the exact situation you're in: you've frozen a whole bunch of packages you don't need at outdated versions
[10:42:54] <shangxiao> I think what's more important is that you just list your high level requirements instead of piping everything from pip freeze into your requirements.txt
[10:43:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:43:15] <Widdershins> you should manually freeze the versions of the dependencies you actually need, usually preferably in setup.py
[10:43:15] <pluri> should i manually extract the high level packages from the import statements?
[10:43:23] <pluri> and then try to install them with pip
[10:43:26] <Widdershins> is this your app that you've made or what
[10:43:31] <pluri> yeah
[10:43:57] <Widdershins> so you know what packages it depends on, right?
[10:44:19] <pluri> yeah, from the import statements i wrote
[10:44:27] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[10:44:57] *** Joins: slav0nic (slav0nic@python.su)
[10:45:23] *** Joins: fdan (~fdan@103.215.168.1)
[10:46:08] <shangxiao> pretty much every time you found yourself doing a `pip install x` you can add that to your requirements or setup.py
[10:46:30] <shangxiao> pip install -r requirements just automates that
[10:46:42] <pluri> why does it break tho?
[10:46:58] <Widdershins> because you froze every package available, including the ones that are installed in the virtualenv by default
[10:47:09] <Widdershins> instead of actually just writing down the things you really depend on specifically
[10:47:13] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[10:47:42] <pluri> so it's a good idea to check all the import statements manually and identify the things i need to install?
[10:48:00] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[10:48:23] <pluri> it's just so many of them
[10:48:33] <Widdershins> this is the sort of thing you should typically know about. requirements.txt is there to make your job easier, and make it easier for other people to set up your project, not for you to confuse the fuck out of yourself and make it unusable
[10:48:51] <shangxiao> surely there weren't that many things you installed?
[10:49:03] <shangxiao> probably ~1/2 a dozen or so?
[10:49:04] <pluri> ok i'll try to do it manually
[10:49:08] *** Joins: coraxx (~coraxx@mail.8-pm.com)
[10:49:16] <shangxiao> how big is your app??
[10:49:21] <Widdershins> well pip freeze puts all transient dependencies in the file
[10:49:32] <Widdershins> which can be a lot
[10:49:48] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[10:49:49] <Widdershins> which is why it's important to actually keep track of this stuff
[10:50:13] <shangxiao> additionally it places unnecessary frozen requirements on those transient dependencies which could be problematic in itself
[10:50:27] <shangxiao> (aside from trying to install setuptools :) )
[10:50:28] <pluri> i'm just surprised that the requirements didn't translate well across OS'es
[10:51:16] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[10:51:26] <shangxiao> *shrug* some things have system-level dependencies
[10:51:28] <Repiphany> Were you using conda and pip
[10:51:39] <pluri> yes
[10:51:46] <pluri> i mean it's an anaconda virtualenv
[10:51:55] <pluri> in which i originally built the app
[10:52:03] <Repiphany> conda as in the anaconda package manager
[10:52:13] <pluri> anyway i'm done installing the dependencies manually, it didn't take that long
[10:52:23] *** Joins: eson123 (~eson123@118.69.128.37)
[10:52:28] <pluri> no, I used pip because some packages weren't in the conda repositories
[10:52:43] <shangxiao> just fyi, conda-forge exists
[10:52:51] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:52:55] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 252 seconds)
[10:53:09] <shangxiao> … not to confuse you further but for the future xD
[10:53:24] <eson123> is there anyway i can extract all of the files from requesting the index of a website, like what <script> javascript scripts does my index.html make requests to to retrieve and so with the .css, .png, .jpg, ... just like most browsers do in their devtools
[10:54:25] *** dcaro_away is now known as dcaro
[10:54:35] <shangxiao> eson123: the first and last part of that question seem unrelated.
[10:54:57] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[10:54:59] <eson123> shangxiao: how ? browsers do the same with what i am asking tho
[10:55:31] *** Quits: jazzy (~jaziz@2600:380:4618:e5c2:2d2b:db9a:adf6:4421) (Ping timeout: 245 seconds)
[10:55:38] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[10:55:51] <eson123> like in firefox, going to google.com and check the Debugger section, you will see an entire hierarchy of all of the files that the site requests
[10:56:44] <eson123> "> www.google.com", click the ">" and it will list out everything it requested in a form of a directory tree, i am trying to do so but instead of displaying it through GUI and within memory, i am saving stuffs back to my disk in a similar manner
[10:56:51] <shangxiao> eson123: so specifically you mean parse an index.html and get all the resources (and not list all files in a directory)
[10:57:08] <eson123> oh yea, i should have put it that way :P
[10:57:09] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[10:57:13] <shangxiao> i ask because the "index of a website" can mean different things
[10:57:30] <eson123> yea i think i was trying to do what u said, my english was a bit broken there
[10:57:42] <eson123> and by index i actually mean the main/front page which is usually index.somethig
[10:57:59] <shangxiao> but not specifically an index.html…
[10:58:24] <eson123> yea sure, not if it's through web framework but anyway, do you have any idea on how to solve my problem ?
[10:58:26] <eson123> i would appreciate it
[10:58:39] <eson123> i can try "requests" module, but that doesn't seem to parse
[10:58:56] <jinsun> you want seleium probably
[10:59:16] <jinsun> with requests you have to manually parse the html and make all those requests in a loop
[10:59:41] <jinsun> and if there is some javascript that is also making requests, you will be out of luck with requests
[11:00:00] <shangxiao> don't forget css
[11:00:01] <shangxiao> ;)
[11:00:10] <shangxiao> css has resource links too
[11:00:21] <jinsun> ugh, selenium, not seleium
[11:00:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:00:52] <shangxiao> pretty much what jnsun said, you need a proper html client to get the full resource list
[11:01:33] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:01:47] <eson123> yea i did think of selenium, but not sure how could i access its devtools
[11:02:04] <eson123> or maybe i don't need to
[11:03:17] <eson123> well for now i think i need  to, not sure if anyone else has any other simpler idea
[11:04:00] <jinsun> what would you need the devtools for?
[11:04:24] <eson123> to access the resources hierarchy inside the Debugger section of my webdriver
[11:05:22] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[11:05:47] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:06:15] *** Joins: seednode (~seednode@user/seednode)
[11:07:06] <jinsun> there should be some programmatic way to get that, function or some class attribute for that probably, will have to look at the docs
[11:09:11] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[11:09:54] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[11:09:56] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[11:09:57] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[11:10:18] *** Joins: nrg (~NRG@user/nrg)
[11:11:16] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[11:12:00] *** Joins: brelod (~me@90.244.150.142)
[11:13:00] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[11:13:02] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0)
[11:15:14] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:17:22] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0) (Ping timeout: 260 seconds)
[11:17:47] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 252 seconds)
[11:19:23] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[11:20:28] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[11:21:19] *** Joins: kib (~kib@user/kib)
[11:22:29] *** Joins: ub (~Thunderbi@77.119.219.178.wireless.dyn.drei.com)
[11:22:36] *** Joins: d3fn (~n0b0dy@user/defn)
[11:23:52] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 265 seconds)
[11:24:49] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[11:24:50] *** Joins: jmft2 (~jmft2@213.31.248.255)
[11:26:50] <p-i-> pluri: Rather than installing from requirements, I've created a .sh script that updates system python, launches a .venv and `pip install`s everything I need into it. It's MUCH cleaner and I don't see a downside.
[11:27:20] <p-i-> I can set up a fresh box and run the script in a couple of minutes.
[11:27:50] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:28:04] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:28:23] <pluri> yeah i was following miguel's flask tutorial and he suggested using requirements. it's targeted at newbies, so i imagined it would make life easier. but in the end i just pip install'ed each imported package manually
[11:29:02] <p-i-> yeah, if you put that into a bash script, you don't have to remember what packages you installed ;)
[11:29:28] <fluter> hi
[11:29:29] <pluri> you still have to add the packages to the bash script
[11:29:37] <fluter> is the file class a builtin type?
[11:29:45] <fluter> why is there no documentation for file?
[11:29:52] <p-i-> Like.. in my code I see `import websocket` and I have no idea which package it came from, unless I was thoughtful enough to have left a comment
[11:30:09] <fluter> https://docs.python.org/3/library/functions.html#open links to the glossory of file object
[11:30:13] <p-i-> But I see `pip install websocket-client` in my .sh and ... easy
[11:30:15] <fluter> but no doc for file ?
[11:30:38] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[11:30:42] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[11:31:06] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[11:31:52] *** Joins: node1 (~node1@user/node1)
[11:31:55] <p-i-> pluri: Locking requirements makes sure that an update to one package won't break everything. But IMO that comes late in the build cycle, when you have something ready for production/deployment
[11:32:10] <pluri> well i'm trying to deploy
[11:32:22] <jinsun> fluter: if you scroll below, there is a paragraph starting with "The type of file object returned by the open() function depends on the mode. ..."
[11:32:41] <jinsun> fluter: there are links to the classes in that paragraph
[11:32:57] <fluter> ah sorry my bad eyes
[11:33:06] <fluter> so file is not a concret type in python
[11:33:13] <fluter> it's an alieas of kind
[11:33:36] *** Quits: daoudr_ (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Quit: Leaving)
[11:33:44] *** Quits: ub (~Thunderbi@77.119.219.178.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[11:34:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:34:47] <p-i-> pluri: why not get everything running on an up-to-date ubuntu dist, and then worry about future-proofing it?
[11:34:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:34:55] *** Joins: arinov (~arinov@213.194.126.155)
[11:35:10] <pluri> p-i- i developed it on mac os
[11:35:22] <jinsun> fluter: yeah a file-like object is just something that behaves like a thing returned by open, it is kinda like a protocol
[11:35:28] *** Joins: rsx (~dummy@ppp-188-174-140-209.dynamic.mnet-online.de)
[11:35:28] <pluri> the problem was transferring the requirements to ubuntu i guess
[11:35:39] <p-i-> Sounds like you're deploying to a 16.x box which is questionable... do you have a good reason not to be using something more up to date?
[11:35:40] *** Joins: Auron (~Auron956@user/auron)
[11:35:42] <fluter> jinsun: got it , thanks man
[11:36:07] <pluri> i was using 18.
[11:36:46] *** Joins: fikran (~fikran@user/fikran)
[11:36:47] <pluri> those are the only versions offered by my vps provider
[11:37:24] <p-i-> pluri: Might I recommend switching your VPS provider... I've found Vultr to be fantastic.
[11:37:51] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[11:37:55] <p-i-> And AWS to be a pain in the ass.
[11:37:58] <pluri> i really don't think using ubuntu 18 should be such a catastrophe for a small flask app lol
[11:39:01] <summonner> I use 18, currently testing 21. the 19 and 20 had transition problems with python scripts, so I rolled back those. The only downsides is having to recompile apps which are using newer LIBC libraries. Otherwise, they're still fine I think
[11:39:37] <eson123> also another question, is there anyhow i can pass one variables to all of my sub-modules ? by sub-modules i mean all of the py scripts inside a directory and that directory has an __init__.py, i have two variables inside __init__.py and i wanna pass to all of the sub modules before my main script import the directory as a package
[11:39:53] *** Joins: frost (~frost@59.71.244.36)
[11:40:12] *** Quits: frost (~frost@59.71.244.36) (Client Quit)
[11:40:16] <Yhg1s> eson123: No. Also, you can't import anything in the package before importing the package.
[11:40:40] <Yhg1s> eson123: the usual way is to put those variables in a module in the package, and import that module everywhere you need those variables.
[11:41:14] <summonner> smells like a State pattern
[11:41:36] <eson123> Yhg1s: I see
[11:41:41] <eson123> if that is the only case then fine then
[11:41:47] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[11:41:47] *** Joins: Antioch (~Antioch@185.253.163.21)
[11:41:59] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:42:04] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:42:23] *** Quits: Antioch (~Antioch@185.253.163.21) (Client Quit)
[11:44:00] *** Joins: Antioch (~Antioch@185.253.163.21)
[11:47:11] *** Quits: waveform (~quassel@waveform.plus.com) (Read error: Connection reset by peer)
[11:47:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[11:48:01] *** Joins: frost (~frost@59.71.244.36)
[11:48:02] *** Joins: Deknos (~someone@user/menace)
[11:48:27] *** Joins: audio (~audio@2603-8081-1800-1546-e21b-18c3-0151-f03c.res6.spectrum.com)
[11:48:56] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[11:49:10] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[11:49:16] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:49:25] <pr100> I have a fastapi web service, which I'm deploying to google cloud run. The fastapi docs recommend gunicorn with a uvicorn worker for production deployment; but I'm not sure that you really gain anything by managing worker processes in an environment where the individual containers scale out as requests increase. Any thoughts?
[11:50:34] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[11:53:09] *** Joins: holgersson (~quassel@user/holgersson)
[11:55:35] *** Quits: Antioch (~Antioch@185.253.163.21) (Quit: The Lounge - https://thelounge.chat)
[11:56:12] *** Quits: jsnd (~jsdn@ip68-4-206-65.oc.oc.cox.net) (Remote host closed the connection)
[11:56:21] *** Joins: Antioch (~Antioch@h175-177-044-119.catv02.itscom.jp)
[11:56:22] *** Joins: kib_ (~kib@user/kib)
[11:56:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:56:44] *** Quits: Antioch (~Antioch@h175-177-044-119.catv02.itscom.jp) (Client Quit)
[11:57:10] <audio> anyone use xlwings before?
[11:57:24] <rendar> https://bpa.st/3FVA -- how is this possible? shouldn't `_` represent a placeholder?
[11:58:58] *** Quits: kib (~kib@user/kib) (Ping timeout: 252 seconds)
[11:59:27] *** Joins: shad (~shad@user/shad)
[12:01:18] *** Joins: vorlket (~vorlket@1.156.42.89)
[12:03:27] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:03:34] <The-Compiler> rendar: there is nothing magic about _, it being a placeholder is just convention
[12:03:34] <vorlket> Hi. I have a DAG G. How do I delete any leaf node W from F as long as W does not belong to union of sets X, Y, Z, until no more nodes can be deleted?
[12:03:58] *** Joins: Antioch (~Antioch@84.252.93.12)
[12:04:03] <vorlket> from G*
[12:04:16] <The-Compiler> rendar: I don't understand what you're doing there, right now you're trying to assign ((1,2), _) to c
[12:04:26] <The-Compiler> rendar: did you mean   c, _ = a   perhaps?
[12:04:45] *** Quits: Antioch (~Antioch@84.252.93.12) (Client Quit)
[12:05:02] *** Joins: enoch (~enoch@user/enochthechronoco)
[12:05:03] <rendar> yes, sorry
[12:05:05] <rendar> my mistake
[12:05:30] *** Joins: waveform (~quassel@waveform.plus.com)
[12:05:33] *** Joins: plastico (~plastico@neomutt/plastico)
[12:06:00] *** Joins: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt)
[12:08:22] <m_tadeu> hi....is there a keyword that refers to the class name? something like "class SomeVeryLongClassName: ...", then "if hasattr(somekeyword, 'my_prop')"?
[12:08:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:09:10] <summonner> m_tadeu, wouldn't you prefer to use isinstance(obj, type)?
[12:09:31] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[12:09:52] *** Joins: iflema (~ian@user/iflema)
[12:09:56] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:10:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:10:24] <m_tadeu> summonner: that's only an example of what I want...if there's some keyword that refers to the current class
[12:11:18] <The-Compiler> m_tadeu: it depends a bit in what context you need it - can you elaborate?
[12:11:46] *** Quits: jonthesnow (~xizhendu@240e:404:8511:23ec:dadc::30c0) (Ping timeout: 245 seconds)
[12:12:49] <m_tadeu> The-Compiler: that is a good example...I do have some long names in my classes and then the code uses "hasattr"...a smaller keyword would make the code more readable
[12:12:51] <nyuszika7h> is there any way for argparse.parse_known_args() to not treat '-vq' as v='q' but rather an unknown argument 'vq'? but '-v q' (with space) should be treated as v='q'
[12:13:39] <The-Compiler> m_tadeu: why not just hasattr(self, 'my_prop') then? But ideally your attributes should be initialized in __init__ (or at class scope if they're class attributes) anyways
[12:14:36] <m_tadeu> The-Compiler: nice....but these are static methods
[12:14:54] <m_tadeu> so ,no  self
[12:15:16] <The-Compiler> m_tadeu: make them class methods instead and use the first argument (often named cls)?
[12:17:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:17:48] *** Joins: Antioch (~Antioch@146.70.38.51)
[12:18:25] <m_tadeu> The-Compiler: that worked out beautifully....thanks a bunch
[12:18:26] *** Quits: Antioch (~Antioch@146.70.38.51) (Client Quit)
[12:19:00] <pr100> m_tadeu - what are you trying to achieve? https://bpa.st/IBLA show how you can find the name of a class from an instance
[12:19:41] <m_tadeu> nyuszika7h: I think that only works with "--vq"...single "-" is for single char params
[12:19:51] *** Joins: frost63 (~frost@59.71.244.36)
[12:19:54] <m_tadeu> pr100: cleaner code only
[12:20:19] *** Joins: eem (~eem@user/eem)
[12:20:36] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:20:39] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:20:44] <pr100> cleaner than what?>
[12:21:03] <nyuszika7h> -vq with single - works fine normally except when there's a conflict with -v
[12:22:13] *** Quits: frost (~frost@59.71.244.36) (Ping timeout: 265 seconds)
[12:22:23] *** Quits: brookesy66 (~will@202.168.59.59) (Quit: WeeChat 3.2.1)
[12:22:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:22:56] *** Quits: frost63 (~frost@59.71.244.36) (Client Quit)
[12:22:57] <m_tadeu> pr100: I have quite long names and that bloats the code...the solution that The-Compiler proposed works grat
[12:23:35] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:24:16] *** Quits: dld (~davidlowr@2601:197:600:1210:b589:86d2:35c3:a95e) (Ping timeout: 252 seconds)
[12:24:32] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[12:24:34] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[12:24:48] *** Joins: vimart (~vimart@85.255.237.151)
[12:24:58] *** Quits: Ergo^ (~ergo@91.238.59.144) (Quit: WeeChat 2.8)
[12:25:02] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[12:25:08] *** Joins: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:25:13] *** Joins: dfdf (~dfdf@178.49.152.42)
[12:25:35] <dfdf> is there a function in python to compare software wersions?
[12:25:59] <Lartza> Software versions?
[12:26:13] *** kib_ is now known as kib
[12:26:14] <Lartza> You mean just literal version numbers that you have?
[12:26:16] <nyuszika7h> actually, I think subparsers may solve my issue
[12:26:36] <nyuszika7h> because currently I have multiple files adding arguments
[12:26:54] *** Joins: dld (~davidlowr@2601:197:600:1210:b589:86d2:35c3:a95e)
[12:27:01] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:27:03] <dfdf> yes, like "1.11"
[12:27:16] <nyuszika7h> the main code selects which one to call, and then the imported module calls parser.parse_args(args=rest) to handle args not yet handled by the main code
[12:27:17] <The-Compiler> dfdf: Depends on how those version numbers are structured and how you want to compare them. For strictly numerical ones, this might suffice:   tuple(int(c) for c in '12.3.45'.split('.'))
[12:27:47] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[12:28:16] <The-Compiler> dfdf: if they are Python package versions (PEP 440): https://packaging.pypa.io/en/latest/version.html
[12:28:26] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[12:28:35] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[12:28:55] *** Parts: WhiteKarura (~WhiteKaru@user/whitekarura) ()
[12:29:00] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:29:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:30:19] <dfdf> ModuleNotFoundError: No module named 'packaging'
[12:31:00] <The-Compiler> dfdf: it's not in the standard library
[12:33:08] *** Quits: _0x5fc33 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Ping timeout: 252 seconds)
[12:33:34] *** Joins: oz4ga (~tim@93.90.4.233)
[12:35:45] *** Quits: vimart (~vimart@85.255.237.151) (Ping timeout: 265 seconds)
[12:36:08] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[12:36:56] <p-i-> https://bpa.st/UUGA <-- is this a decent patten for a static constructor?
[12:38:30] <The-Compiler> p-i-: this probably should be a @staticmethod, right now I think that'll raise
[12:38:58] <The-Compiler> p-i-: or just do them directly at class level perhaps
[12:39:10] <The-Compiler> p-i-: though I'm not sure if they really need to be done there, rather than in __init__?
[12:39:35] *** mozgalom_ is now known as bomb-on
[12:41:52] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Ping timeout: 252 seconds)
[12:41:53] *** Joins: vimart (~vimart@85.255.237.151)
[12:42:13] *** Quits: enoch (~enoch@user/enochthechronoco) (Quit: Igloo IRC: https://iglooirc.com)
[12:42:33] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:43:04] <p-i-> thanks!
[12:44:34] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[12:44:41] <p-i-> If I want to add a class method programmatically, is `Foo['new_method'] = f` correct?
[12:44:45] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[12:45:12] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[12:45:52] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[12:46:16] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[12:47:24] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[12:47:39] <p-i->  setattr(C, 'foo', lambda x: print(x+1))  # this works
[12:48:12] <The-Compiler> p-i-: no need for setattr if your name is a constant string
[12:48:23] <The-Compiler> p-i-: C.foo = f
[12:48:27] <p-i-> yeah it isn't though
[12:48:37] <The-Compiler> then setattr, yeah
[12:50:19] *** fdan is now known as qwerty
[12:51:31] *** Quits: qwerty (~fdan@103.215.168.1) (Quit: Client closed)
[12:51:55] <fluter> hi, is there a good way to do str.removeprefix in python3.8?
[12:52:58] <The-Compiler> fluter: The PEP has the equivalent code: https://www.python.org/dev/peps/pep-0616/#specification
[12:53:18] <fluter> ah
[12:53:21] <fluter> ok
[12:57:37] <p-i-> Suppose I wish to `@wrap def f(foo:int) -> dict: ...` ... is there any way for the decorator to pick up the type-hint?
[12:57:41] *** Joins: legola (~legola@37.19.108.179)
[12:58:32] <The-Compiler> p-i-: define "pick up the type-hint"
[12:58:35] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:58:59] <p-i-> type_hint = ... (want dict)
[12:59:49] <p-i-> I need to perform a conversion that depends on the specified type-hint
[13:00:44] <The-Compiler> p-i-: you get the function object and can call e.g. https://docs.python.org/3/library/typing.html#typing.get_type_hints on it
[13:01:11] *** Joins: ShArkZ (sharkz@user/sharkz)
[13:01:14] *** Parts: ShArkZ (sharkz@user/sharkz) ()
[13:01:20] <p-i-> Awesome!
[13:01:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:02:58] *** Joins: arinov (~arinov@77.67.137.174)
[13:03:01] *** Joins: wyclif (~wyclif@user/wyclif)
[13:03:26] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 245 seconds)
[13:03:48] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:3074:39fa:6bc4:aab8)
[13:04:12] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:04:23] *** Joins: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net)
[13:07:12] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[13:07:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:07:50] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[13:07:53] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[13:08:04] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:08:31] *** Joins: wyclif (~wyclif@user/wyclif)
[13:09:57] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:10:56] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 245 seconds)
[13:10:57] *** Joins: Ivii (~Ivyy@2001:a61:1329:3e01:b766:317a:3dfc:7cd)
[13:13:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:13:42] <gitesh> if input is 7 how can I make 7 for loops on the fly?
[13:14:01] *** Joins: wyclif (~wyclif@user/wyclif)
[13:14:05] <leduyquang753> You make another for loop that runs that for loop 7 times.
[13:14:07] <gitesh> if input is 7 i get 7 lists of integers and i want to make all permutations
[13:14:33] *** Joins: paul424 (~chatzilla@pfn101.internetdsl.tpnet.pl)
[13:14:34] <gitesh> leduyquang753: oh that sounds good
[13:14:58] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:15:07] *** Joins: vladoski (~vladoski@2001:b07:add:d406:cecd:6b2f:ce56:996f)
[13:17:22] <gitesh> input is user based
[13:17:41] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[13:18:22] <gitesh> leduyquang753: I'm trying to solve this problem - https://www.hackerrank.com/challenges/maximize-it/problem
[13:18:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:18:53] <gitesh> how can I have that many for loops as per the user input
[13:19:09] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:19:32] *** Joins: wyclif (~wyclif@user/wyclif)
[13:20:13] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[13:22:19] <paul424> does slicing create deep or shallow copy ? like this : mlist = [1,2,3,4,5,6] ; mlist2 = mlist[3:5]
[13:22:25] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:22:26] <paul424> what exactly is happening here ?
[13:22:45] *** Joins: upsala (~zcb@185.213.155.160)
[13:22:59] <nedbat> paul424: it's a shallow copy
[13:23:10] <paul424> I see that mlist2[1] = 22 doesn't change anything
[13:23:24] <nedbat> paul424: it changes mlist2 :)  but not mlist
[13:23:26] <paul424> nedbat: yeah , thanks, nedbat as usual very helpful :)
[13:23:49] *** Joins: raxor2k (~raxor2k@78.158.232.147)
[13:24:17] <paul424> I 'm just thinking how to use that this is shallow copy
[13:24:24] <gitesh> how can I make number of for loops on the fly?
[13:24:26] <paul424> should I put list inside a list and then modify it
[13:24:30] <raxor2k> i mean.. i never understood the different between "from dependencies import *"  or "from a_api.AI_folder_with_code.dependencies import *" etc
[13:24:37] <raxor2k> anyone has a link where i can read about this ?
[13:24:40] *** Quits: vimart (~vimart@85.255.237.151) (Quit: WeeChat 2.8)
[13:25:01] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[13:25:20] <shad> Hi, i need to write a status page for some running systemd services. Any idea what library is the most suited for that job ?
[13:25:45] <shad> I don't want to Popen("systemctl"), i want to use python bindings directly
[13:26:12] <shad> I found Pystemd, anyone used it, is it good enough or is there a more well known lib for that job ?
[13:26:32] *** Joins: Barones (~Barones@earth.ps5.com.br)
[13:26:41] <leduyquang753> gitesh Again another for loop.
[13:27:59] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:28:04] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[13:29:52] <The-Compiler> shad: I've never used pystemd, but it looks great to me
[13:30:10] <gitesh> leduyquang753: I'm not able to think
[13:30:36] <gitesh> leduyquang753: https://bpa.st/SKLQ
[13:30:36] <The-Compiler> gitesh: How would you do it a fixed number of times? Start with that.
[13:30:46] <gitesh> The-Compiler: i did it
[13:31:12] <gitesh> The-Compiler: fixed number of times is easy to implement in list comprehension
[13:31:31] <gitesh> but how would i do it when i don't know how many for loops i want
[13:31:51] <shangxiao> is this homework or something? :P
[13:32:07] <gitesh> shangxiao: yes it is challenge
[13:32:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:32:23] <shangxiao> ah
[13:33:21] *** Quits: Ivii (~Ivyy@2001:a61:1329:3e01:b766:317a:3dfc:7cd) (Remote host closed the connection)
[13:33:22] <UnnamedBeer> I've joined late, what you should this do?
[13:33:34] *** Joins: Ivii (~Ivyy@2001:a61:1329:3e01:9a7e:c76a:1eb0:fb28)
[13:33:42] <shangxiao> they want to run a for loop n times
[13:34:19] <Repiphany> They want you to use itertools
[13:34:24] <UnnamedBeer> but surely something else
[13:34:30] <shangxiao> xD
[13:35:06] <gitesh> Repiphany: oh i see
[13:36:33] <Repiphany> Actually, it
[13:36:40] <gitesh> then it's possible may be because i need to look in itertool module
[13:37:15] *** LordKalma_ is now known as LordKalma
[13:37:42] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[13:38:18] <Repiphany> itertools is just the lazy brute-force way to do it
[13:38:29] *** Joins: piscvau (~odile@aclermont-ferrand-157-1-38-142.w90-42.abo.wanadoo.fr)
[13:38:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:38:42] *** Joins: rolandog[m] (~rolandogm@2001:470:69fc:105::972f)
[13:38:46] <Swayze> ./topic < Repiphany> itertools is just the lazy brute-force way to do it
[13:38:53] <Swayze> legendary
[13:39:12] *** Joins: wyclif (~wyclif@user/wyclif)
[13:40:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[13:43:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[13:44:05] *** Quits: legola (~legola@37.19.108.179) (Ping timeout: 252 seconds)
[13:44:20] <paul424> Don't you think that shallow copying of slices might introduces some misunderstanding , for example here the behaviour of sharing the objects depends of how deeply in the structure we want to modfiy : https://bpa.st/HO5A
[13:44:51] <nedbat> paul424: absolutely there could be a misunderstanding.  but deep copy could also be a misunderstanding, and expensive.
[13:45:04] <paul424> yeap :\
[13:45:29] <paul424> Did you ever prototype something in python and then rewrote it to c++ ?
[13:45:31] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[13:45:40] <paul424> anyone :) ?
[13:46:06] *** Joins: fikran (~fikran@user/fikran)
[13:48:04] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:48:58] *** Quits: vladoski (~vladoski@2001:b07:add:d406:cecd:6b2f:ce56:996f) (Ping timeout: 252 seconds)
[13:49:27] <piscvau> I am getting mad at trying to pass sql commands using mysqlclient . I get mixed up with quotes. It is here https://bpa.st/OU4Q
[13:51:03] <shangxiao> piscvau: those heredoc quotes aren't necessary
[13:51:39] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:51:56] *** Joins: kosh (~kosh@user/kosh)
[13:52:22] <varaindemian> how can I transform this to match something like `www.example.com/*` -> `    stream_size = int(re.match(rb'.*\/Length ([0-9]+)\/.*', contents[STREAM_OFFSET:]).group(1))`
[13:53:50] <shangxiao> piscvau: so the error you're getting is because you're trying to quote a database name with the process that you quote values
[13:54:16] <nedbat> piscvau: can you print out the sql commands before you execute them?
[13:54:32] *** Quits: arinov (~arinov@77.67.137.174) (Ping timeout: 252 seconds)
[13:55:51] <shangxiao> nedbat: it's in the error message, the "dbname" is quoted with "'" … I can't speak for mysql but at least in pg you need different quotes for table names, column names, etc
[13:56:14] <nedbat> shangxiao: i don't see why it would have those quotes, and i don't trust the quoting in the error message
[13:56:41] <shangxiao> nedbat: it's because piscvau is passing the dbname as a param in the execute() call ;)
[13:56:59] <nedbat> shangxiao: ah, you are right
[13:57:07] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[13:57:08] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[13:57:19] <piscvau> yes I did check and the database name is double quoted as it appears in the error message.
[13:57:43] *** Joins: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr)
[13:57:58] <shangxiao> i'm just reading the mysqldb docs to see how you're supposed to quote the dbname
[13:58:15] *** Joins: frost (~frost@59.71.244.36)
[13:58:16] <shangxiao> but in any case i doubt it'll be passed as a param in execute()
[13:59:43] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[14:00:21] *** Joins: Myst3 (~Myst@user/myst)
[14:01:02] <shangxiao> ahhh mysql uses backticks ``
[14:01:08] <varaindemian> anyone?
[14:01:21] <varaindemian> is it already doing what I want?
[14:02:08] <nedbat> piscvau: cursor.execute will quote the data, but database names shouldn't be quoted
[14:02:14] *** Quits: Myst (~Myst@user/myst) (Ping timeout: 252 seconds)
[14:02:14] *** Myst3 is now known as Myst
[14:02:36] <piscvau> ok how can I unquote it in python
[14:03:53] <nedbat> piscvau: you can't. instead you'd have to build the sql yourself, and be very careful about untrusted data
[14:04:14] <shangxiao> a cursory google suggests that you need to manually put the backticks in your sql… and don't quote me (pardon the pun) use the escape() function to escape the table name properly
[14:04:46] <shangxiao> i haven't tested this theory :)
[14:05:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:06:17] *** Joins: wyclif (~wyclif@user/wyclif)
[14:06:43] <shangxiao> varaindemian: what did you want to know?
[14:07:03] <varaindemian> shangxiao: how can I transform this to match something like `www.example.com/*` -> `    stream_size = int(re.match(rb'.*\/Length ([0-9]+)\/.*', contents[STREAM_OFFSET:]).group(1))
[14:07:33] <shangxiao> varaindemian: yeah i saw that but i don't understand what you're asking xD
[14:08:13] <varaindemian> shangxiao: how can I make that regex to match my case?
[14:08:21] <shangxiao> oh
[14:08:27] <varaindemian> my case includes `/`
[14:09:20] <shangxiao> why do you have the `b` prefix? :o
[14:10:35] <shangxiao> anyhoo that regex is trying to match something with "Length xxxx" in it… your URL doesn't have that
[14:11:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:11:09] <jinsun> why use regex for this instead of just str.startswith
[14:11:16] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:8126:9ac6:18bc:223)
[14:11:46] *** Joins: wyclif (~wyclif@user/wyclif)
[14:11:52] <jinsun> and then slice
[14:11:55] <shangxiao> yeah i'm a little confused… seems like you're trying to fit a square object in a round hole
[14:12:59] <hexnewbie> Hey, there was a good reason when we had to do that!
[14:13:43] *** dcaro is now known as dcaro_lunch
[14:15:15] *** Quits: Myst (~Myst@user/myst) (Quit: Ping timeout (120 seconds))
[14:15:21] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:9992:5c1a:c62:b27f) (Quit: Textual IRC Client: www.textualapp.com)
[14:15:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:15:28] <hexnewbie> Incidentally, the jumble of Python and Bash scripts that I wrote to convert Mako templates (round hole) to Python 3 using 2to3 (square peg) looks quite like the contraption they built on Apollo 13
[14:15:37] *** Joins: Myst (~Myst@user/myst)
[14:16:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:16:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:17:06] <shangxiao> :)
[14:17:14] *** Joins: wyclif (~wyclif@user/wyclif)
[14:17:32] <Wulf> When I want to set an attribute in the current module, should I use globals()["attr"] = "value" or something else?
[14:18:02] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:8126:9ac6:18bc:223) (Quit: Konversation terminated!)
[14:18:04] <The-Compiler> Wulf: global attr; attr = "value"
[14:18:24] <Wulf> The-Compiler: "attr" is dynamic, could be something else.
[14:18:38] <The-Compiler> then... I guess
[14:18:44] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 252 seconds)
[14:21:07] <shangxiao> globals().update(...) ?
[14:21:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:22:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:22:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:22:34] *** Quits: raxor2k (~raxor2k@78.158.232.147) (Ping timeout: 265 seconds)
[14:22:36] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 245 seconds)
[14:22:44] *** Joins: wyclif (~wyclif@user/wyclif)
[14:23:33] *** Joins: devish (~devish@52.95.75.7)
[14:24:50] <devish> How to call a python script from another, https://stackoverflow.com/questions/3781851/run-a-python-script-from-another-python-script-passing-in-arguments#:~:text=If%20you%20want%20to%20call,going%20through%20the%20operating%20system.
[14:25:54] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[14:26:17] <devish> I looked into it, but in my case I was calling as Mods.py -m "p1". So I can import script Mods.py but how do it call with argument like -m "p1" ...
[14:26:34] *** Quits: amosbird (~amosbird@13.75.119.182) (Ping timeout: 265 seconds)
[14:27:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:27:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:28:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:28:15] *** Joins: wyclif (~wyclif@user/wyclif)
[14:28:51] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:29:11] *** Joins: fdan (~fdan@192.146.154.3)
[14:29:19] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[14:29:20] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 265 seconds)
[14:29:44] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[14:29:51] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:29:55] <ApostleInTriumph> Hello. how do I save dict(dict) as json
[14:30:16] <nyuszika7h> json.dumps(mydict) ?
[14:30:39] <ApostleInTriumph> I get : TypeError: unhashable type: 'dict'
[14:31:18] <nyuszika7h> are you trying to use a dict as a *key* in another dict?
[14:31:47] <jmiehe> is there any documentation how to turn a setup.py into a setup.cfg? does it even make sense?
[14:32:07] <ApostleInTriumph> nyuszika7h no, keys are int
[14:32:11] <ApostleInTriumph> values are dict
[14:32:17] <jmiehe> also, should I prefer data_files or package_data? data_files just seem more verbose
[14:32:26] <shangxiao> ApostleInTriumph: the error suggests otherwise xD
[14:32:28] <Wulf> jmiehe: I use poetry for my newer projects, i.e. no setup.cfg either.
[14:32:50] <ApostleInTriumph> okay, weird, figured what went wrong. I did {1:{mydict}, 2:{mydict2}...}
[14:33:00] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[14:33:35] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:33:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:34:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:36:26] *** Quits: paul424 (~chatzilla@pfn101.internetdsl.tpnet.pl) (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
[14:37:26] *** Quits: kib (~kib@user/kib) (Ping timeout: 252 seconds)
[14:38:31] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 265 seconds)
[14:39:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:39:38] *** Quits: devish (~devish@52.95.75.7) (Ping timeout: 256 seconds)
[14:40:10] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[14:40:11] <jmiehe> Wulf: can I "pip install" a poetry project?
[14:40:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:40:19] <Wulf> jmiehe: yes
[14:40:33] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[14:40:40] *** Quits: pycode (~pycode@2001:b07:5d28:551:64a3:44dc:3f5d:e810) (Ping timeout: 252 seconds)
[14:41:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[14:43:50] <bjs> z\
[14:43:51] <bjs> Oops
[14:43:57] <bjs> ApostleInTriumph: what is "weird"
[14:44:22] *** Joins: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net)
[14:44:37] <ApostleInTriumph> bjs that when value = mydict it works and when it's {mydict} it doesn't
[14:45:25] <bjs> ApostleInTriumph: yeah, {a,b,c} is a set
[14:45:29] <bjs> you can't have dictionaries in a set
[14:45:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:45:35] <bjs> this isn't anything to do with json :)
[14:46:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:18] <ApostleInTriumph> bjs exactly
[14:46:23] <ApostleInTriumph> but the error was "TypeError: unhashable type: 'dict'"
[14:46:28] <bjs> ApostleInTriumph: you can't have dicts as keys in other dicts either
[14:46:31] <ApostleInTriumph> shoudln't it be TypeError: unhashable type: 'set' ?
[14:46:35] <bjs> ApostleInTriumph: no...
[14:46:50] <bjs> ApostleInTriumph: like if you try `{[1,2,3]: 42}` you will get "unhashable: list"
[14:47:01] <bjs> it's the list (or in your example, the dict) that was attempted to be hashed
[14:47:36] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[14:47:50] <ApostleInTriumph> I see no problem with that, but I find the error where value is a set confusing
[14:47:55] <ApostleInTriumph> when*
[14:48:23] <bjs> ApostleInTriumph: the problem is that sets and dicts hash their keys,  if you try make a set or dict with a key that is unhashable you will get an error saying that the key was unhashable
[14:48:25] <bjs> that is what happened here.
[14:48:57] <ApostleInTriumph> ah
[14:49:16] <ApostleInTriumph> that makes sense now
[14:49:25] <ApostleInTriumph> so a set(dict) can never exist?
[14:49:42] <bjs> ApostleInTriumph: perhaps the error message could be clearer,  but in general types don't know *why* or *what* is hashing them so it's a little hard to include in the error messages
[14:49:45] <bjs> ApostleInTriumph: yep
[14:49:58] *** Quits: piscvau (~odile@aclermont-ferrand-157-1-38-142.w90-42.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[14:50:01] <bjs> yep (they cannot exist) *
[14:50:59] <ApostleInTriumph> bjs I agree.
[14:51:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:51:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:01] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:b309:b571:6ed:bc43) (Ping timeout: 245 seconds)
[14:54:07] *** Joins: bewees (~bewees@user/bewees)
[14:54:10] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:1a5b:75ca:5cd8:ebeb)
[14:56:03] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[14:57:23] *** Joins: minip (~minip@user/minip)
[14:57:27] *** Joins: Vonter (~Vonter@user/vonter)
[14:57:33] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[14:58:36] *** Joins: arinov (~arinov@77.67.137.174)
[14:59:07] *** Joins: kosh (~kosh@user/kosh)
[15:00:54] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 260 seconds)
[15:02:04] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Quit: WeeChat 3.2.1)
[15:03:54] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[15:04:42] <jmiehe> Wulf: Okay, poetry is actually super smooth, it just magically works with my package data. However, how can I access those from within python?
[15:04:43] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:05:18] <jmiehe> Is it correct to just parse __file__?
[15:05:48] *** Joins: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk)
[15:06:42] <nedbat> jmiehe: i think you want this: https://docs.python.org/3/library/importlib.html#module-importlib.resources
[15:07:26] *** Quits: audio (~audio@2603-8081-1800-1546-e21b-18c3-0151-f03c.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:07:32] <Masklin_Gurder> What is faster?       foo='bar' ; print(foo)             or              print('bar')
[15:07:34] *** Quits: oldguy (~oldguy@user/oldguy) (Ping timeout: 252 seconds)
[15:08:02] <Masklin_Gurder> Does it cost to use in-place literals like 'bar' in print commands?
[15:08:14] <nedbat> Masklin_Gurder: it doesn't matter. use the one that reads better
[15:08:20] <pseudonymous> Hi. When I run poetry build on a project with some extension modules too, I notice that I get a `dist` folder containing the wheel and sdist packages, but the modules are also available in `dist/lib.<os>-<arch>-<py major version>.<py minor version>` -- to run pytest I need to add this dist/lib.... path to PYTHONPATH.. Can I ask programmatically to get the path where the compiled modules are placed ?
[15:08:31] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:08:49] <bjs> Masklin_Gurder: no it doesn't cost, you're using a literal in both cases.  If there's a difference in speed at all, it'll be really hard to measure.
[15:09:04] <dfdf> I replaced "while len(x)" with "while tmp" and my script became 40ms faster
[15:09:25] <nedbat> dfdf: that seems unlikely....
[15:09:29] *** Joins: oldguy (~oldguy@user/oldguy)
[15:09:38] <dfdf> it is too much to expect some automatic optimization in 2021?
[15:09:43] *** Quits: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr) (Quit: leaving)
[15:09:56] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:09:59] <nedbat> dfdf: what type was x?
[15:10:08] *** Joins: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr)
[15:10:15] <nedbat> dfdf: "automatic optimization": python doesn't know as much about your code as you do.
[15:10:26] <Masklin_Gurder> nedbat: bjs: OK thanks! :)
[15:10:47] *** Joins: shad (~shad@user/shad)
[15:10:58] <nedbat> dfdf: and btw, you can get a lot of automatic speed improvement: run your program with PyPy
[15:11:38] <hexnewbie> dfdf: You need to time it with timeit.Timer quite a few times to make sure there's a difference. Also, function calls do have a cost, but this one ought to be marginal, unless the loop body is really really really small, this ought to be 40 ms out of like 4000 ms.
[15:11:39] <bjs> PyPy's JIT is very likely to be able to optimize away the len() call in that if it was hot
[15:11:54] <bjs> but obviously, only if for a type whose len() doesn't do anything interesting :)
[15:12:04] <nedbat> it might be that dfdf wasn't looking for help
[15:13:07] <dfdf> nedbat bytestring
[15:13:08] <bjs> I thought dfdf was replying to my "hard to measure" comment :P
[15:13:26] *** Quits: eem (~eem@user/eem) (Ping timeout: 245 seconds)
[15:13:43] <nedbat> dfdf: are you sure that was the only change to you made to your program? I don't think that would speed things up.  bytestrings store their length.
[15:13:54] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:14:20] <hexnewbie> I do have a habit of trying to avoid function calls, even when it does not make sense. I was almost annoyed earlier that I can't do bytes(b'abc', 'utf-8') to avoid having to use isinstance(b'abc', str) to conditionally encode it.
[15:14:38] <dfdf> function calls are very expensive in python
[15:14:46] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:14:54] <dfdf> i should try to inline some and see if that helps
[15:15:05] <nedbat> dfdf: the 40ms improvement: what percentage of the runtime was that? How many times is the loop executed?
[15:15:45] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2.1)
[15:16:09] *** Joins: digilink (~digilink@user/digilink)
[15:16:10] *** Joins: Naan (~Naan@user/naan)
[15:16:42] <dfdf> about 100,000
[15:16:42] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:16:51] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:16:59] <nedbat> dfdf: and what is the total runtime of the program?
[15:17:13] <dfdf> 1030ms
[15:17:19] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[15:17:52] <hexnewbie> https://bpa.st/OYSQ The function call to len(x) has a cost, but that tends to be diminished with each thing you do in the body of the statement
[15:17:59] *** Quits: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[15:18:20] *** Joins: xiongxin (~quassel@113.116.33.5)
[15:18:25] <dfdf> indeed let's inline some functions and see what'll happen
[15:19:56] <nedbat> dfdf: you must not be changing the length of the bytestring often, for tmp to be a savings, right?
[15:20:02] *** Joins: kosh (~kosh@user/kosh)
[15:20:27] <nedbat> dfdf: if you link us to the code, we might have other ideas for optimizations
[15:21:29] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[15:21:42] *** Joins: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net)
[15:22:24] <dfdf> o_O I eliminated a single function call and got 100ms
[15:23:44] <kosh> also profile the code
[15:25:38] <jinsun> by ms you mean microseconds or milliseconds?
[15:25:54] <bjs> dfdf: presumably you mean a single function call that happened many times :P
[15:27:35] <dfdf> 1/1000s
[15:28:47] <dfdf> that's interesting: pypy made 1 function 1.5 times faster, 2nd stayed the same, and 3rd became 6 times faster; but the end result is just meager 100ms
[15:31:05] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:12] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:31:15] <nedbat> dfdf: pypy won't help much if the total run is short
[15:33:54] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[15:34:31] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[15:35:33] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:35:53] *** Joins: dulanic (~dulanic@47.187.144.163)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:20] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:36:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:01] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[15:38:26] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[15:39:08] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:39:37] *** Joins: ShinyCyril (~ShinyCyri@2607:fb90:a08f:64b8:348f:b886:4cad:ccb1)
[15:40:04] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[15:40:28] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[15:40:33] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[15:40:45] *** Quits: vorlket (~vorlket@1.156.42.89) (Quit: Leaving)
[15:41:36] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:41:49] *** Joins: eem (~eem@user/eem)
[15:42:40] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:e17e:b275:238c:d106)
[15:44:04] *** Joins: dez (uid92154@user/dez)
[15:44:21] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[15:44:42] *** Joins: dulanic (~dulanic@47.187.144.163)
[15:46:25] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:48:06] *** dcaro_lunch is now known as dcaro
[15:48:18] *** Joins: Pandadub (~Barones@177.132.237.5)
[15:48:31] *** Joins: legola (~legola@46.235.100.217)
[15:49:07] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:49:15] *** Joins: bankin (~user@user/bankin)
[15:49:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:49:55] *** Joins: shad (~shad@user/shad)
[15:50:31] *** Quits: Barones (~Barones@earth.ps5.com.br) (Ping timeout: 245 seconds)
[15:52:19] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[15:52:47] *** Quits: legola (~legola@46.235.100.217) (Ping timeout: 252 seconds)
[15:53:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[15:55:27] *** Joins: fikran (~fikran@user/fikran)
[15:55:37] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[15:59:54] *** Joins: pyfisch0 (~pyfisch@user/pyfisch)
[16:00:56] *** Quits: ShinyCyril (~ShinyCyri@2607:fb90:a08f:64b8:348f:b886:4cad:ccb1) (Quit: ShinyCyril)
[16:01:26] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 250 seconds)
[16:01:27] *** pyfisch0 is now known as pyfisch
[16:03:01] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[16:04:28] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[16:04:51] *** Joins: LiftLeft (~LiftLeft@172.83.47.108)
[16:09:11] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:09:58] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:12:09] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[16:12:35] *** Quits: bankin (~user@user/bankin) (Quit: WeeChat 2.8)
[16:14:07] *** Joins: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04)
[16:15:07] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[16:16:06] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Remote host closed the connection)
[16:16:53] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:17:17] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:17:24] *** Joins: pycode (~pycode@2001:b07:5d28:551:91f4:f133:a20d:5f41)
[16:17:37] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:20:30] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[16:20:31] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:26:18] *** Joins: fofoni (~fofoni@user/fofoni)
[16:28:03] *** Quits: bambams (~bambams@user/bambams) (Quit: When I reach infinity the game is over and I exit to the host.)
[16:28:56] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[16:29:01] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[16:30:00] *** Joins: bambams (~bambams@user/bambams)
[16:30:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[16:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:32:49] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 252 seconds)
[16:32:49] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:33:08] <gitesh> anyone wanna help me with using itertools?
[16:33:46] *** Quits: bambams (~bambams@user/bambams) (Client Quit)
[16:33:46] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:33:59] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[16:35:41] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[16:36:33] <bjs> gitesh: only if you tell us what you need help with :)
[16:36:35] <gitesh> I want all combinations of unknown number of lists of integers
[16:36:57] <bjs> gitesh: okay
[16:37:29] <gitesh> if i had know number of lists in advance i could do list comprehension
[16:37:48] <bjs> gitesh: maybe you want itertools.product
[16:37:57] <gitesh> ok let me check
[16:38:22] <gitesh> yeah that sounds neat
[16:39:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[16:42:11] *** Quits: Pandadub (~Barones@177.132.237.5) (Remote host closed the connection)
[16:42:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:42:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:43:23] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[16:45:20] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[16:45:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[16:46:15] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:46:17] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:51:13] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2.1)
[16:52:15] *** Joins: rapier (~marcos@170.233.159.1)
[16:52:53] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 265 seconds)
[16:53:41] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[16:54:29] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:57:03] <rapier> guys, please, i need a tip. I have many csv with data of people, i'd like to merge this data one file... i don't have a clue about what I could do
[16:57:36] <ldlework> rapier: read it all in, massage it together, write it all out
[16:58:13] *** Joins: Meteorhead (~Meteorhea@165.225.205.20)
[16:58:38] <rapier> i tried to read it all and put in dictionary, but it didn't go well
[16:59:10] *** Quits: arinov (~arinov@77.67.137.174) (Ping timeout: 265 seconds)
[16:59:38] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:00:30] *** Parts: setfire (~setfire@63.225.226.46) ()
[17:02:52] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[17:02:57] <phy1729> Do the different CSVs have info on different people or different bits of info about the same people?
[17:03:50] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:04:32] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:04:58] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[17:06:28] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[17:07:52] <nyuszika7h> what does this error mean? I'm not even using nargs anywhere
[17:07:53] <nyuszika7h> TypeError: parse_intermixed_args: positional arg with nargs=A...
[17:08:40] <lxwulf> hey guys maybe im really dumb but my question is how can make a template from a json (file or jinja2 depends what is easier) and change two values but this should go further as i have a list of values the content of list are ipaddress and port i have 35 of them as example so i whant 35 json output in my new json file with the changed addresses and ports i hope this makes sense and is not to overkill to ask thats my situation --> https://bpa.st/OWBQ it only
[17:08:40] <lxwulf> change the last adress
[17:08:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[17:08:55] <bjs> nyuszika7h: what gave you that error?
[17:09:08] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[17:09:18] <bjs> nyuszika7h: libraries can just raise their own errors so it might be hard to debug without knowing what created it
[17:09:20] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:09:47] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[17:10:14] <CrtxReavr> lxwulf, json (IMO) is a great format to store "data at rest" as a file.
[17:10:38] <lericson> the asyncio event loop, will it schedule other tasks if a task goes into C code that releases the GIL?
[17:10:45] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[17:10:46] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[17:10:52] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Client Quit)
[17:10:54] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:11:10] <lxwulf> CrtxReavr, sorry what exactly do you mean? =$
[17:11:15] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:11:28] <CrtxReavr> YOu can load it it's easy to load as ``json_dict = json.loads(open('file.json').read())`` and manipulate inside python.
[17:12:11] <bjs> lericson: the asyncio event loop is just some Python code running in a single thread,  the GIL only affects threads
[17:12:12] <rapier> phy1729, the info is the same people
[17:12:18] <lericson> https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor is perhaps what i want
[17:12:40] <bjs> so if a task blocks (regardless of holding the GIL) it'll block the whole event loop,  maybe what you want is another thread that does the C call
[17:12:54] <rapier> i have e-mail field that is common for every csv file
[17:13:10] <bjs> lericson: also see asyncio.to_thread (or asyncio.run_in_executor) to run in a thread
[17:13:46] <phy1729> rapier: sounds like you can find a key unique to each person, have a dictionary with the key being the email and the value being either a dict or NamedTuple or whatever, loop over the csv and update the relevant data entry with what you learn from that line
[17:13:50] <lericson> bjs: interesting
[17:13:58] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:14:02] <lericson> bjs: but i would like a thread pool on this occasion
[17:14:21] <rapier> yeah
[17:14:30] <gitesh> anybody tell me what's wrong with this code https://bpa.st/2RTA  ?
[17:14:43] <bjs> lericson: yes,  see run_in_executor (and to_thread).  each asyncio event loop has a thread pool associated with it
[17:14:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[17:14:44] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[17:14:44] <bjs> to run things in
[17:15:11] <bjs> gitesh: what makes you say something is wrong?  What is it supposed to do? What does it do instead?
[17:15:37] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[17:15:57] <lericson> bjs: yes, run_in_executor with concurrent.futures.ThreadPoolExecutor was my thinking
[17:16:21] <lericson> oh the default one /is/ a threadpoolexecutro
[17:17:03] *** Joins: Elodin (~weechat@user/elodin)
[17:17:35] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:17:38] *** Joins: VaniaPy (~VaniaPy@adsl-28.176.58.195.tellas.gr)
[17:18:38] <VaniaPy> Hi,i have a flask app with 2 directories,and i need to import a function from a py file to another,but i'm getting ModuleNotFoundError (i added __init__.py already)
[17:20:17] <CrtxReavr> The directories need to be in sys.path() to be importable.
[17:20:35] <lxwulf> CrtxReavr, yes i think i already accomplished that but i want to manipulate this for every address save it in a new json file and i stuck there... =(
[17:21:09] <CrtxReavr> lxwulf, do you have a dict that looks like the data you want to write to a json file?
[17:21:15] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[17:21:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:22:37] <CrtxReavr> Or are you still in the manipulation phase?
[17:24:21] *** Joins: MikZyth (~MikZyth@188.65.242.60)
[17:24:41] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:e17e:b275:238c:d106) (Ping timeout: 245 seconds)
[17:24:55] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Ping timeout: 265 seconds)
[17:26:17] <grym> VaniaPy: is your package properly installed?
[17:26:33] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[17:26:48] <VaniaPy> grym what do you mean? it's not a package,just a local directory
[17:27:26] <grym> VaniaPy: imports in uninstalled code tend to be fiddly.  you'll want to python -m thatdirectory ... or, ideally, just install it
[17:27:51] <nedbat> gitesh: you don't need "for i in range(len(each)):"  just use `for val in each:`
[17:29:05] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:29:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Quit: Leaving)
[17:29:50] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:30:00] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[17:30:34] <lericson> what if you could await *tasks
[17:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:30:42] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:34] *** Quits: dulanic (~dulanic@47.187.144.163) (Client Quit)
[17:31:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:31:50] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:c115:6e13:6a0a:2e74)
[17:31:51] <lericson> there we go, all 12 cores pegged out
[17:31:57] <bjs> lericson: what would you get from being able to do that?
[17:32:08] <lericson> synonymous to await asyncio.gather(*tasks)
[17:32:17] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:32:31] <lericson> is there a good way to see how much time is spent waiting for the GIL?
[17:32:32] <bjs> lericson: why gather and not a trio-like nursery instead
[17:32:52] <lericson> pegging out the cpu is fine and all but you don't really know if that's useful work
[17:32:59] <VaniaPy> grym i don';t think that i can install it
[17:33:42] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[17:33:43] <grym> VaniaPy: certainly you can
[17:33:58] * CrtxReavr cringes.
[17:34:16] <lericson> can you iterate over tasks in the order that they finish
[17:34:20] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[17:34:33] <CrtxReavr> "Installing" non-package-managed things to package-managed locations is cringey.
[17:34:39] <VaniaPy> grym whichi command?
[17:34:55] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:34:59] *** Joins: grooverman (~grooverma@177.102.119.40)
[17:35:04] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[17:35:17] <grym> VaniaPy: yourflaskvenv/bin/pip install, usually
[17:35:43] <CrtxReavr> Not a popular opinion in Python circles, but I think it's preferable to judiciously add to sys.path as required.
[17:36:11] <VaniaPy> grym ERROR: No matching distribution found for ml
[17:36:13] <bjs> it's not popular because of the unpredictable and hard to decipher bugs it can create
[17:36:20] <lericson> ah asyncio.as_completed()
[17:36:28] <bjs> but lots of tools do it behind the scenes so it's not "dangerous" perse
[17:36:34] <bjs> lericson: see also asyncio.wait()
[17:36:39] <lericson> seen also
[17:36:46] <bjs> okay good :)
[17:37:13] <lericson> curiously my python just exited in the middle of execution...
[17:37:52] <grym> VaniaPy: you do need a setup.py/cfg/pyproject.toml, as well.
[17:37:55] <bjs> lericson: did you call sys.exit() :P
[17:38:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[17:38:12] <lericson> something seems to have done something similar
[17:38:43] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[17:38:52] *** Quits: pycode (~pycode@2001:b07:5d28:551:91f4:f133:a20d:5f41) (Ping timeout: 252 seconds)
[17:38:54] <CrtxReavr> "something seems to have done something
[17:38:57] <CrtxReavr> "
[17:39:06] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Ping timeout: 260 seconds)
[17:39:35] <Wooble> oom killer?
[17:39:39] <lericson> Threads:    83
[17:39:41] <lericson> no Wooble
[17:39:59] <lericson> exit code 1
[17:40:35] <CrtxReavr> That's an error-indicating exit.
[17:40:39] <CrtxReavr> What OS?
[17:40:46] <lericson> oh i see
[17:40:50] <lericson> python's main thread crashed long ago
[17:41:02] <lericson> just didn't see because of line noise from the 83 threads lol
[17:41:38] <lxer> I have a @dataclass; how can I change the dictionary representation that I get back from asdict() ?
[17:41:49] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[17:41:58] *** Quits: bomb-on (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[17:42:01] <bjs> lxer: change how?
[17:42:34] <CrtxReavr> dict comprehensions are a thing, which can be quite useful or re-organizing dicts.
[17:42:47] <CrtxReavr> for re-organizing
[17:43:16] <lxer> bjs: change some names of the keys
[17:44:03] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:44:22] *** Joins: akk (~akk@75.161.146.115)
[17:44:25] <jinsun> you can use dataclasses.Field
[17:44:38] <bjs> lxer: dataclasses doesn't have any way to make a field that has a different name in the asdict as it does to the Python attribute;  you could write some code that got the dict then updated the names more manually
[17:44:59] <bjs> lxer: if you have some more uniform way of transforming the names then asdict takes a dict_factory function that might be useful
[17:45:53] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:45:58] <gitesh> I have a code here --> https://bpa.st/XSVQ   I wanna know what is the point of [1:] here in this code?
[17:46:27] <gitesh> what is the point of that exclusion?
[17:47:33] *** Quits: dfdf (~dfdf@178.49.152.42) (Quit: Client closed)
[17:47:34] <bjs> gitesh: x[1:] is everything except the first
[17:48:06] <CrtxReavr> slicing may be an inefficient way to do that.
[17:48:30] *** Joins: PamiPetteri (leet@user/pamipetteri)
[17:48:41] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[17:48:48] <CrtxReavr> Depending on what x[0] is, the ..strip() method might be better.
[17:48:57] <CrtxReavr> whoops
[17:49:02] <CrtxReavr> Depending on what x[0] is, the .lstrip() method might be better.
[17:50:26] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3d27-f9b8-30f5-ae89.res6.spectrum.com)
[17:51:07] <lericson> is there a way to make a function call awaitable, like async def call(f, *a, **k): return f(*a, **k)
[17:52:02] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:52:39] <bjs> lericson: well, you can write that function yeah
[17:54:30] <shantaram> how do i make percent formatting fail silently?
[17:54:33] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[17:54:51] <shantaram> i mean the "not all arguments converted during formatting
[17:54:54] <shantaram> "
[17:55:00] <lericson> catch it and do something else, shantaram?
[17:55:15] <shantaram> oh, i can just catch it and the string will be valid?
[17:55:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:55:18] <lericson> no
[17:55:30] <lericson> the rules of the universe still apply
[17:55:33] <bjs> lericson: but why would you want to do this?  In general an `async def` is more awkward to use than a normal one
[17:55:51] <lericson> bjs: mocking the concurrent running so i can see if something fails
[17:55:55] *** Joins: shad (~shad@user/shad)
[17:56:01] *** Joins: fdan (~fdan@192.146.154.3)
[17:56:56] <bjs> lericson: if you're planning on there being concurrency in your mocks I really recommend having an await in there, even if it's just an `await asyncio.sleep(0)`
[17:57:05] *** vdamewood is now known as vinleod
[17:57:09] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[17:57:19] <fdan> hi there a very silly question
[17:57:19] <fdan> https://dpaste.org/YhNH
[17:57:25] <lericson> no i just want to run the same code but sequentially
[17:57:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[17:57:28] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:57:32] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:57:34] <lericson> it seems to work okay
[17:57:41] <lericson> probably would have worked with max_workers=1 also
[17:57:51] <fdan> since t and tt are local to the scope of the if block, how can i add it?
[17:57:55] <lericson> though i suspect harder to debug because more complicated machinery
[17:58:12] <bjs> fdan: like `the_dictionary[some_key] = tt`
[17:58:39] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[17:58:40] <bjs> fdan: if doesn't have a scope,  but you can just do the assignment inside the if
[18:00:19] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[18:00:44] *** Quits: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04) (Remote host closed the connection)
[18:01:34] <fdan> thanks
[18:02:06] *** Joins: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04)
[18:02:22] *** Parts: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk) (Leaving)
[18:02:37] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:02:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:03:05] <fdan> need some more help https://github.com/codehangar/python-log-parse-example/blob/master/test_log.log
[18:03:06] <fdan> https://dpaste.org/qivv
[18:04:46] *** Joins: fikran (~fikran@user/fikran)
[18:05:31] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[18:06:18] *** Joins: paul424 (~tom@apn-77-114-179-69.dynamic.gprs.plus.pl)
[18:06:53] <paul424> For a course I want to teach, is there some IDE which would easily show off what student has typed so far via LAN ?
[18:07:13] *** Joins: iomari891 (~iomari891@102.91.4.149)
[18:07:15] <paul424> OR how would you solve that : to monitor the students work ...
[18:09:25] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[18:09:44] <paul424> hmm there is this IDE : what do you think  ? https://www.codetogether.com/
[18:09:53] <Togra> bAcK iN my dAy someone would just walk around and look at screens, but there might be an easier way
[18:10:33] <lxwulf> i have a template json file and the string you see in my link https://bpa.st/OWBQ
[18:11:37] <lxwulf> CrtxReavr, updated version https://bpa.st/6Q2A
[18:12:10] *** Joins: pycode (~pycode@2001:b07:5d28:551:b002:3643:329c:49d4)
[18:12:56] <lxwulf> CrtxReavr, at the end i wanna have that structure but for every address in my list and the start and end markers from json "[" and "]" and the beginning and end of the file it is one big json file do you get what i mean =$
[18:13:16] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[18:13:39] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[18:13:52] <LuxuryMode> Kind of agree that it would be nice to have a `none` just as we have `all` and `any` https://mail.python.org/pipermail/python-ideas/2012-April/014774.html Thoughts?
[18:14:35] <fdan> lxwulf i joined late, can you share me what you want
[18:15:28] <bjs> LuxuryMode: isn't `none(x)` just `not any(x)` ?
[18:15:31] <SnoopJ> LuxuryMode, easy enough to roll your own `def none(iterable): return not any(iterable)` although I would definitely not use this name (lest someone think it looks for None or something)
[18:15:41] *** Joins: subopt (~subopt@2603-8081-2302-459a-5423-ed59-3c4f-3049.res6.spectrum.com)
[18:16:08] * SnoopJ would prefer to just write `not any(...)` since it minimizes the amount of English idiom involved
[18:16:52] <LuxuryMode> right, fair enough. Thanks
[18:17:05] <CrtxReavr> lxwulf, the outter structure of json can be an array (python list identified by []s).
[18:17:20] <SnoopJ> and from the standpoint of the runtime, fewer responsibilities is good ;)
[18:17:40] <lericson> or `all(not ...)`
[18:17:46] <lericson> d e m o r g a n
[18:17:59] *** Quits: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[18:18:12] <lxwulf> fdan, sure no problem --> i wanna generate json structure like the template you see in the link at the end i have a ip adress list i wanna go trough this list and insert the ipadress and the port i accomplished the splitting and also modify the json but not like i wanna have at the end i wanna have a big json file with every entry of "proxy" for every ipaddress i have in my list and of course with the right port i hope you get what i meant ^^
[18:18:12] <lxwulf> https://bpa.st/6Q2A
[18:18:53] <LuxuryMode> he true lericson ∃x: ¬x == ¬(∀x: x)
[18:19:13] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:20:16] <paul424> Togra, yeah time to walk with the zeitgeist
[18:20:52] <Togra> depending on your class I assume that's probably a pain in the ass to do :< but someone else may have a better solution that does what you need
[18:21:06] <lxwulf> fdan, my script got the manipulation of one "proxy" structure but it put in only the last ipadress from the list... also i dont get output of several structures instead only one...
[18:21:10] <rendar> if i have `my_coro = f()` and i pass my_coro around, then finally i want to run it, but an exception occurs, should i await that coroutine? otherwise i'll get the message coroutine never awaited...
[18:21:19] <SnoopJ> lericson, tiny bit more work to invert it, but yea, about the same thing
[18:21:43] <bjs> rendar: what do you mean "but an exception occurs"
[18:21:45] <SnoopJ> I think I just like having the inversion decoupled from the 'kernel' of the predicate.
[18:21:56] *** Joins: node1 (~node1@user/node1)
[18:22:04] <lericson> SnoopJ: depends on the predicate i guess
[18:22:09] *** Joins: Croves (~Croves@2804:14c:578b:9102:81f8:ac2a:2a7c:c43f)
[18:22:13] <lericson> sometimes you get a nice not not elimination
[18:22:22] <SnoopJ> yea, there are definitely cases where `all(not ...)` might be preferable
[18:22:25] <bjs> rendar: I mean if you create the coro and then decide you don't want to run it, that's okay
[18:22:27] <paul424> Togra, donno what do I need , it 's the first time I teach anything to anybody
[18:22:36] <bjs> rendar: (if a bit ... weird?)
[18:22:51] <rendar> bjs, consider wait_for(my_coro, hello=23) <- here an exception affecting the function that should await for the coroutine blocks the execution of wait_for() itself!
[18:22:57] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:22:58] <rendar> so it won't never await that coroutine...
[18:23:05] <bjs> rendar: most of the asyncio.* functions have been deprecating passing coros directly to them because it gets confusing
[18:23:10] <Togra> I'm not sure, I've only ever learned and not taught
[18:23:33] *** Joins: Tireos (~Tireos@91.223.118.131)
[18:23:39] <bjs> rendar: I mean that kind of thing is just a bug in your program,  you *do* want to actually run the coro
[18:23:55] *** Joins: sturm_ (~sturm@mediagoblin/maintainer/bsturmfels)
[18:23:58] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[18:24:34] <rendar> bjs, yes, what about i want to run a coro but something (yes, also a bug or a typo) prevents me to run it? how to i "clean" the coro?
[18:24:41] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 245 seconds)
[18:24:56] <bjs> rendar: nothing here has "prevented" you from running the coro
[18:25:35] <rendar> yes, let me show you:
[18:25:57] <rendar> https://bpa.st/3XSQ
[18:26:06] <sturm_> hi, if I'm following along with the python packaging tutorial and putting code into an "src" directory, is there an easy way to run the tests?
[18:26:10] <LuxuryMode> is `next` the best way to find first element matching a condition and returning it (or else a default) or is there another way? e.g. `next((x for x in xs if x > 5), None)`
[18:26:11] <bjs> rendar: like if you want to run the coroutine, then you can just do so.  If the bug is bad enough that the program should exit with an error report then the warning about a coroutine not being awaiited is barely even on the radar
[18:26:18] *** Joins: luna-is-here (~quassel@ip-95-223-59-100.hsi16.unitymediagroup.de)
[18:26:27] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[18:26:46] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[18:26:52] <bjs> rendar: if you `wait_for(my_coro, hello=42)` and it fails the coro wasn't affected by this and if you want the program to recover and run the coro, then you can do so
[18:27:10] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[18:28:06] *** Joins: magla (~gelignite@55d431b0.access.ecotel.net)
[18:28:07] <lericson> so i generate tasks = [taskfunc(input_data[i]) for i in range(len(input_data))], and then i `for task in asyncio.as_completed(tasks): … = await task` -- but now i want to know which `i` is finished! how do i do that in a convenient way?
[18:29:30] <lericson> you might say "let taskfunc() return its i", but then if an exception is raised, you won't know which `i` it was for
[18:29:50] <lericson> you can also not do tasks.index(task), because as_completed may wrap your task in another task (this happens)
[18:29:58] *** Quits: paul424 (~tom@apn-77-114-179-69.dynamic.gprs.plus.pl) (Quit: Leaving)
[18:30:00] <rendar> bjs, ok
[18:30:05] *** Quits: Tireos (~Tireos@91.223.118.131) (Quit: Leaving)
[18:30:19] <bjs> lericson: well it takes your coroutines and wraps them in a Task
[18:30:38] <lericson> it does other stuff as well i'm fairly sure
[18:30:52] <lericson> taskfunc returns a task
[18:31:01] *** Quits: luna-is-here (~quassel@ip-95-223-59-100.hsi16.unitymediagroup.de) (Read error: Connection reset by peer)
[18:31:01] <bjs> lericson: the problem is that the thing it returns is not one of the awaitables you gave it
[18:31:05] <bjs> lericson: for as_completed
[18:31:17] *** Joins: luna-is-here (~quassel@ip-95-223-59-100.hsi16.unitymediagroup.de)
[18:31:24] <bjs> when you `await` it you get back the result not the awaitable
[18:31:31] <lericson> i suppose
[18:31:40] <bjs> and obviously before you await you don't know which awaitable will complete first
[18:31:41] <lericson> the problem is data association
[18:32:28] <rendar> if i pass a coroutine to asyncio.create_task() it will create a task, but what about if i pass a task? it will return the task itself, i'm passing - right?
[18:32:31] <bjs> lericson: if you really need to know, even in the case of an exception, you can make the tasks manually and use wait
[18:32:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:32:51] <bjs> rendar: passing and returning aren't the same operation so I'm not sure what you're asking
[18:33:04] <bjs> rendar: a Task is just a Python object, and asyncio is just some Python code there is no magic here
[18:33:11] <rendar> sorry i mean
[18:33:16] <SnoopJ> LuxuryMode, that's what next() is for, yep. Sometimes it might make sense to write a generator function, though
[18:33:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:33:28] *** Quits: luna-is-here (~quassel@ip-95-223-59-100.hsi16.unitymediagroup.de) (Client Quit)
[18:33:42] <LuxuryMode> When might it make sense? Does it make for my simple example case?
[18:33:46] <LuxuryMode> (I assume not...)
[18:33:49] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[18:33:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[18:33:57] <rendar> `result = await asyncio.create_task(coro)` <- this will create a new task,   `result = await asyncio.create_task(task)` <- this will just await the task, without creating a new one, right?
[18:34:13] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:34:50] <bjs> rendar: you can't even write that code
[18:34:53] <bjs> so I'm not sure what the question is
[18:35:01] <rendar> what?
[18:35:17] <bjs> rendar: `asyncio.create_task(some_task)` just doesn't wokr
[18:35:24] <bjs> so i'm confused what the question is
[18:35:24] *** Quits: VaniaPy (~VaniaPy@adsl-28.176.58.195.tellas.gr) (Quit: Connection closed)
[18:35:29] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[18:35:29] <rendar> uhm, well
[18:35:33] <LuxuryMode> SnoopJ: Also, using `next` in this way is definitely more Pythonic than writing a loop and checking a conditional and returning the matching item early and then after the loop returning None, right?
[18:35:36] <rendar> let me to take a step back
[18:35:39] <SnoopJ> LuxuryMode, well, you'd probably still use next() with a generator function anyway. It's mostly something I do when my predicate is complicated, e.g. `next(things(), DEFAULT)` where `things()` is a generator function that can contain a complicated predicate (which I don't care about right there)
[18:35:54] <bjs> rendar: if you try write that, asyncio will just give an error because create_task accepts coroutines not tasks
[18:36:06] <LuxuryMode> Oh, I see. Thanks SnoopJ
[18:36:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[18:36:33] <rendar> asyncio.gather() accepts both coros and tasks.. now: i have a 'coro' variable in my code, it can be a coroutine or a task, or even a future, how can i await its result with asyncio, in a clean way, just like if i'm using gather() but only for 1 and not multiple awaitables...
[18:36:59] <SnoopJ> LuxuryMode, it depends a little on what "pythonic" means to you. Both are valid approaches, this is more or less what next() does, after all. I find next(...) very legible, it is very close to the English sentence I would say to describe it
[18:37:04] <lericson> i feel like this answers all the questions bjs https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
[18:37:08] <lericson> i'll just not use the asyncio stuff
[18:37:27] <SnoopJ> but with a loop, I either have to read the loop, or stuff it inside a function with a nice name (and what could be as nice as next()? 😅)
[18:37:41] <bjs> rendar: if it's a coroutine or a task or a future you can `await` it to run it and wait for it to finish.
[18:37:55] <LuxuryMode> Right, SnoopJ In this case it feels like it isn't just a cute way to reduce LOC, but actually is more legible and there's less cognitive overload than there is when you have to read through a primitive loop
[18:37:57] *** Joins: PickleRick (~William@188.31.49.21.threembb.co.uk)
[18:38:02] <bjs> rendar: so `result = await coro` will be what you want? I think? it's still not very clear
[18:38:26] <bjs> the only caveat will be that if it really is a coroutine you cannot await it multiple times
[18:38:28] <rendar> yes, i think `result = await coro` is the basic thing i wanna do
[18:38:43] <bjs> rendar: okay but "want to do" implies you can't for some reason?
[18:38:49] *** Joins: vm (~vm@user/ansible)
[18:39:04] <rendar> no no, i can
[18:39:07] <bjs> ah okay
[18:39:09] <bjs> rendar: then do that :)
[18:39:29] <rendar> i was just wondering if asyncio would have a function to mimic `result=await coro`
[18:39:44] <rendar> but.. if i can do that syntax, it shouldn't provide one, after all
[18:42:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[18:43:41] <Wulf> Is there a function to turn strings like "FOO_BAR_BAZ" into "FooBarBaz"?
[18:44:22] <CrtxReavr> Not one, but a couple string methods could do it.
[18:44:55] <bjs> like  "".join(c.title() for c in "FOO_BAR_BAZ".split("_"))
[18:45:05] <bjs> but maybe made a little more readable and in a nice function with explanation :)
[18:45:23] <Wulf> bjs: oh, didn't know about str.title; thanks!
[18:46:29] <CrtxReavr> bjs, generator comprehension - I like it.  >=]
[18:48:19] *** Joins: lastshell (~lastshell@user/lastshell)
[18:48:24] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[18:49:21] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:905f:966d:c414:96d4)
[18:50:26] *** vinleod is now known as vdamewood
[18:50:29] *** Joins: int3l (~int3l@78-83-113-66.spectrumnet.bg)
[18:51:40] *** Joins: gouldsam (~gouldsam@161.97.232.5)
[18:52:02] *** Joins: NatalieTheTiny (uid247415@id-247415.helmsley.irccloud.com)
[18:52:03] <pr100> 'Foo_Bar_Baz'.title().replace('_', '')
[18:52:50] <Wulf> pr100: perfect. Thanks.
[18:52:51] <pr100> err - uppercase the string :)  FOO_BAR_BAZ'.title().replace('_', '')
[18:53:21] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:53:24] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:54:43] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[18:56:06] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:905f:966d:c414:96d4) (Ping timeout: 260 seconds)
[18:56:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:57:19] <NatalieTheTiny> For typehinting, is there a way to do circular type references without having to wrap some of the type references in strings? I would have thought the "from future" would have allowed this.
[18:57:24] <NatalieTheTiny> https://bpa.st/FBDQ
[18:57:36] <NatalieTheTiny> I've written up some examples of what I'm referring to.
[18:58:06] *** Joins: Guest921 (~Guest92@176.228.201.237)
[18:58:13] <jinsun> the future import works for annotations
[18:58:27] <Wulf> NatalieTheTiny: yep, those aren't annotations
[18:58:32] <Guest921> HI, I'm looking for the easiest way to create a treemap that will include images and text in each cell, anyone familiar with such? Thanks!
[18:58:34] <jinsun> you are assigning the types to the variables
[18:58:47] <NatalieTheTiny> Yes, making type aliases.
[18:58:47] *** Quits: gouldsam (~gouldsam@161.97.232.5) (Remote host closed the connection)
[18:58:52] <Guest921> Saw many articles about one example using 'squarify' pkg, but it's very basic one
[18:59:00] <NatalieTheTiny> Is there a better way of doing that, then?
[18:59:15] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[18:59:16] <jinsun> ya it doen't help with type aliases, because those are evaluated at runtime
[19:00:02] <NatalieTheTiny> Ah, I thought they wouldn't be, considering they're only used for annotations.
[19:01:23] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[19:01:47] <p-i-> What's the preferred way to paste 5 lines here? Pastebin or dump?
[19:01:50] <jinsun> well python will have to differentiate between type alias and normal assignment for that to work
[19:02:15] <NatalieTheTiny> And I assume there's no way to explicitly do that?
[19:02:17] <jinsun> p-i-: bpaste, dump only for 3 lines
[19:02:42] <p-i-> https://bpa.st/VIHA <-- what am I doing wrong here?
[19:02:51] <p-i-> I'm trying for a static constructor
[19:02:55] <bjs> NatalieTheTiny: you can `if typing.TYPE_CHECKING: <do the imports>`
[19:03:09] <bjs> p-i-: you're trying to call foo() from *inside* the class body
[19:03:12] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[19:03:13] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[19:03:15] <bjs> i.e. before the class even exists yet
[19:03:22] <NatalieTheTiny> Ah, okay. So, I could do that around my type alias block. I'll give it a shot.
[19:03:31] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[19:03:34] <p-i-> Can I even achieve static ctor then?
[19:03:46] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[19:03:53] <bjs> p-i-: I'm not sure what you mean, you can have a static constructor (usually one would use @classmethod for this) but you can't call it until *after* the class is created
[19:04:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:04:29] <bjs> p-i-: try after the class, `C.foo()` it will work
[19:04:55] <p-i-> I'm trying to find a good pattern for a class that one-time-executes some setup bobbins
[19:05:14] <Swayze> you can use C.foo() call inside the class as well
[19:05:17] <Swayze> that should work ..
[19:05:22] <Swayze> not just foo()
[19:05:31] <bjs> Swayze: no you cannot go `C.foo()` inside the class body like that
[19:05:33] <bjs> the class does not exist yet.
[19:05:36] <p-i-> Swayze: I tried that, fails
[19:05:43] <bjs> so even if you *could* call foo,  you can't actually construct any instances
[19:05:58] <p-i-> I could always `class C: did_init=False; def __init__(self): if not C.did_init: C.one_time_init()`
[19:06:06] <p-i-> Is that the best I can do?
[19:06:15] *** Joins: junktext (~junktext@77.247.181.217)
[19:06:17] <bjs> p-i-: you can just call C.foo() *after* the `class` statement
[19:06:27] <bjs> let the class finish being created *then* try call it.
[19:06:56] <Swayze> he wants his static class to be able to call a method inside itself
[19:07:03] <Swayze> https://stackoverflow.com/questions/41921255/staticmethod-object-is-not-callable
[19:07:15] <Swayze> the answer here says to qualify with the class name
[19:07:15] <p-i-> bjs: I guess... if it were automatic I'd feel it neater
[19:07:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:07:28] <Swayze> inside the class
[19:07:34] <bjs> p-i-: it can't be automatic, because again, the class *does not exist* until you reach the end of the `class` statement
[19:07:38] <bjs> Swayze: again you cannot do that in the class body.
[19:08:15] <bjs> as see above, the class does not exist until you reach the end of the body.  Obviously inside methods it's a different story, but having a check inside a method is exactly what p-i- is trying to avoid (it sounds like)
[19:08:46] <p-i-> I'm just trying to shoot for 'pythonic'
[19:08:57] <bjs> p-i-: what is this one-time setup going to do?
[19:09:02] <p-i-> Maybe C.one_time_init() would be decent
[19:09:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[19:09:13] <bjs> and does it need to happen when the class is created or when the first instance is created?
[19:09:44] <p-i-> It's a wrapper around a C-lib https://bpa.st/322Q (yes it is currently revolting I know)
[19:09:54] <p-i-> But everything in the class is stateless
[19:10:30] *** Quits: Croves (~Croves@2804:14c:578b:9102:81f8:ac2a:2a7c:c43f) (Ping timeout: 256 seconds)
[19:10:30] <bjs> p-i-: my first suggestion to reduce revoltingness is that setattr with a literal string is a bit weird isn't it?
[19:10:33] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:10:39] <bjs> just TDWrapper.td_execute = td_execute
[19:10:51] *** Quits: Meteorhead (~Meteorhea@165.225.205.20) (Quit: Client closed)
[19:11:14] <p-i-> I'm being longwinded because I suspect there's a clever way I can use a decorator to get rid of the duplications
[19:11:30] <p-i-> There's quite a few of these methods to wrap
[19:12:12] <bjs> p-i-: the actual "methods" there all seem like they could just be normal methods (also they are all missing `self`)
[19:12:39] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 250 seconds)
[19:12:49] <p-i-> hm TDWrapper.foo would actually allow my linter to pick up on the methods
[19:13:01] <p-i-> I might be overthinking this one
[19:14:31] <bjs> p-i-: what is the point of the class?
[19:14:45] <bjs>  will you actually have multiple instances?
[19:14:50] <p-i-> nope
[19:15:07] <bjs> p-i-: then why not just ditch the class entirely
[19:15:21] <p-i-> point: response_dict = TDWrapper.td_execute(mydict)
[19:15:50] <p-i-> And internally it switches mydict to a bytes, invokes the C-lib-func, switches the response-bytes back to a dict
[19:15:53] <bjs> p-i-: but you could have a td_wrapper.py and then it's just `from td_wrapper import td_execute` then `point: ... = td_execute(...)`
[19:16:09] <bjs> I think the class and init and setattrs might just be a distraction
[19:16:15] <p-i-> oh yeah, no need for a class
[19:16:17] <bjs> for what could just be a file with some functions
[19:16:50] <p-i-> I remember a 'don't overuse classes' discussion here a while back
[19:16:52] <NatalieTheTiny> Is there a way to annotate a list that contains a fixed number of specific elements? Something like `x: list[int, int, int]` meaning a list that contains exactly 3 ints. I know you can do `x: tuple[int, int, int]` and `x: list[int]` but neither of those entirely describe the type being returned.
[19:17:04] <bjs> p-i-: I mean it's not about overusing classes it's just about the fact you're *not* really using the class at all
[19:17:07] <bjs> it's just... there
[19:17:14] <bjs> I mean maybe it's pretty but it's not doing anything to help :P
[19:17:25] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Remote host closed the connection)
[19:17:36] <p-i-> I suppose I'm encapsulating a bunch of cruft I wouldn't want anyone importing the file to see
[19:17:42] *** Joins: khrbt (~znc@user/khrbt)
[19:17:53] *** Quits: Guest921 (~Guest92@176.228.201.237) (Quit: Client closed)
[19:18:05] *** Joins: kosh (~kosh@user/kosh)
[19:18:29] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:18:37] <bjs> p-i-: I mean classicly you'd just name it with an underscore, and then people importing it will know to ignore those ones
[19:18:47] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[19:19:05] <bjs> p-i-: e.g. you'd get something like (totally untested obviously, beware copy/paste errors) https://bpa.st/H6BA
[19:19:42] *** Quits: xiongxin (~quassel@113.116.33.5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:19:50] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:19:53] *** Joins: Guest9213 (~Guest92@176.228.201.237)
[19:21:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:21:12] <Swayze> you work with Touch Desiner @ p-i- ?
[19:21:24] <Swayze> Designer*
[19:21:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:21:35] <p-i-> I never heard of it
[19:21:47] <Swayze> ok
[19:21:50] <Swayze> nvm then no bigyg
[19:22:13] <Swayze> bjs code looks great xd
[19:22:35] <p-i-> yeah it's a big W over mine
[19:22:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:23:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:23:27] <p-i-> I'm wondering if I can go one step further and use decorator + type-hints to do the conversions
[19:23:58] <bjs> p-i-: you probably can
[19:24:18] <p-i-> https://bpa.st/TNQA <-- something along these lines ... not seeing it clearly yet
[19:26:34] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[19:27:20] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:27:27] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[19:27:34] *** Quits: sturm_ (~sturm@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[19:27:45] *** Joins: mickey (~user@user/mickey)
[19:27:46] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[19:28:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[19:29:01] *** Joins: justache (~justache@user/justache)
[19:29:19] <bjs> p-i-: that, or possibly something that understood the Python annotations
[19:29:27] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[19:29:34] <SnoopJ> LuxuryMode, right, I don't really care about *how* something gets done as much as I care *what* is being done, when I'm reading code. And since next() is the implementer's problem, I don't really have to sanity-check it.
[19:29:58] *** Quits: Guest9213 (~Guest92@176.228.201.237) (Quit: Client closed)
[19:30:11] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:816a:8ef2:27c7:6b9)
[19:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[19:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:31:57] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[19:32:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:32:36] *** Quits: vm (~vm@user/ansible) (Ping timeout: 256 seconds)
[19:34:13] *** Joins: Meteorhead (~Meteorhea@165.225.205.20)
[19:34:41] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:816a:8ef2:27c7:6b9) (Ping timeout: 245 seconds)
[19:37:52] *** Quits: tf (~tf@user/tf) (Quit: tf)
[19:38:25] *** Joins: tf (~tf@user/tf)
[19:38:33] <braxas> Pydantic is really great, like really really great
[19:38:55] <braxas> Can't imagine how I would ever live without it now, just found SecretStr
[19:39:25] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[19:40:08] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:943f:1af5:86eb:a6cf)
[19:42:13] *** dcaro is now known as dcaro_away
[19:42:41] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Ping timeout: 252 seconds)
[19:43:00] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[19:45:55] *** Quits: Jefren (~Jefren@70.35.67.53) (Ping timeout: 265 seconds)
[19:46:21] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[19:46:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:49:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:49:15] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:49:35] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:49:44] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:50:17] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[19:50:26] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[19:51:05] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 264 seconds)
[19:51:33] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[19:52:35] *** Joins: laerling (~lsf@static.235.77.203.116.clients.your-server.de)
[19:52:55] *** Joins: nergar (~Nergar@177.225.129.223)
[19:53:23] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[19:54:08] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:54:45] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[19:55:10] *** Quits: Meteorhead (~Meteorhea@165.225.205.20) (Quit: Client closed)
[19:57:19] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[19:58:11] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:58:21] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[19:58:49] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:59:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[19:59:16] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:01:54] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[20:02:12] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:02:50] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[20:02:56] <p-i-> https://bpa.st/NFFQ <-- Does this even look sane? I think it's close to functional... not quite sure about the final 3 lines.
[20:03:15] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[20:03:23] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 246 seconds)
[20:03:55] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[20:04:47] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:53] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:04:56] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[20:05:04] *** Joins: bambams (~bambams@user/bambams)
[20:05:24] <p-i-> I'm using a decorator over an empty function simply to get the function-name / args / return-type. I'm then converting the args, invoking the function in the C-lib with that name & converting the (C)return-type back to Python-land.
[20:05:35] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[20:06:25] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:06:27] <p-i-> Am I reinventing some wheels here?
[20:06:57] *** Joins: P1ro (~quassel@user/p1ro)
[20:07:58] <jinsun> why not just a function instead of decorator, take the type hints also as arguments
[20:07:59] *** Joins: Jefren (~Jefren@70.35.66.133)
[20:08:29] *** Joins: joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:5472:b8f:9f13:742a)
[20:08:32] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:08:42] <p-i-> jinsun: This way it automatically exposes the function symbols to a consumer of the file.
[20:08:54] <p-i-> oh I see
[20:09:09] <p-i-> td_execute = convert(...)
[20:09:26] <p-i-> I guess I'd have to pass 'td_execute' again in the params.
[20:09:30] <p-i-> So it saves that.
[20:09:31] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[20:09:54] *** Joins: jazzy (~jaziz@2600:380:4618:e5c2:19a1:5296:f678:d178)
[20:10:02] *** Joins: Narrat (~omnius@p200300df5f13e70206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:10:08] *** Joins: RougeR (~rougex250@user/rouger)
[20:11:11] <p-i-> It looks a bit misleading with the `pass` empty function body, but I think I'd find it an acceptable internal convention.
[20:11:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[20:12:16] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[20:12:16] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[20:12:51] <jinsun> ya maybe this way is fine too, this kinda looks like type stub for a c extension, except that it is actually the function
[20:13:15] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:13:51] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[20:14:07] *** Joins: fikran (~fikran@user/fikran)
[20:14:21] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:14:36] *** Joins: zebrag (~chris@user/zebrag)
[20:15:34] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:15:35] *** Joins: x4rchimedes (~archimed3@host-92-26-25-144.as13285.net)
[20:15:59] *** Quits: shad (~shad@user/shad) (Ping timeout: 246 seconds)
[20:16:20] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 268 seconds)
[20:16:42] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[20:17:03] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:17:44] *** Quits: Madda (~Madda@227.249.9.51.dyn.plus.net) (Remote host closed the connection)
[20:19:04] *** Joins: P1ro (~quassel@user/p1ro)
[20:19:35] <bjs> p-i-: the args *cant* be called "return" :)
[20:20:06] <bjs> p-i-: anyway, what's all the convert_python_arg_to_C for?
[20:20:16] <p-i-> if anyone calls their arg 'return', they deserve their traceback
[20:20:21] <p-i-> I'm leaving it in :p
[20:20:29] <bjs> p-i-: the traceback will come long before your code runs
[20:20:31] <bjs> it's not valid syntax
[20:20:39] <bjs> `def f(return: int):` etc
[20:20:43] <p-i-> The C-lib returns a Json packet encoded as bytes
[20:21:15] <bjs> p-i-: why do  you like nesting so much?  these convert_python_arg_to_C and convert_C_arg_to_python functions
[20:21:19] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[20:21:24] <bjs> p-i-: and why f_ not just f ?
[20:21:35] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[20:22:18] <bjs> make it `def _wrap(f, ...)` then make it be `td_func = getattr(td_json, ...)` the trailing underscores are a little weird to a Python programmer
[20:22:25] <p-i-> oh yeah, I'll fix that. f_ should be python_func and f should be c_func
[20:22:33] <bjs> p-i-: even better :P
[20:23:51] *** Quits: P1ro (~quassel@user/p1ro) (Read error: Connection reset by peer)
[20:24:36] *** Joins: P1ro (~quassel@user/p1ro)
[20:24:38] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[20:24:51] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[20:25:44] <p-i-> https://bpa.st/KPLQ ... looks less clusterfuck once I start to throw a few more methods in
[20:26:34] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[20:26:52] <bjs> p-i-: I think I prefer @_wrap([c_char_p], c_char_p) and @_wrap([], c_char_int)  it's a bit clearer what's going on I think
[20:26:55] <bjs> given you can't use ->
[20:27:18] *** Quits: Narrat (~omnius@p200300df5f13e70206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:27:28] <p-i-> yeah I was wondering about how to resolve that asymmetry
[20:27:31] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Client Quit)
[20:27:38] <bjs> p-i-: if none of these functions have a body, you might be able to simplify and throw away the defs entirely
[20:27:44] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[20:27:47] *** Joins: Narrat (~omnius@p200300df5f13e70206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:27:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:27:51] <bjs> p-i-: `td_execute = _wrap("td_execute", [...], ...)`
[20:28:01] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:29:28] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[20:30:03] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[20:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[20:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:31:38] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[20:31:54] <p-i-> interesting. I could even `td_execute = _wrap(name='td_execute', args=[packet=(dict,c_char_p)], return=(dict,c_char_p))`
[20:32:10] <bjs> p-i-: the `def` has some advantages though that I like (esp. for IDEs)
[20:32:17] <bjs> so I'm not sure :)
[20:32:19] *** Joins: ano (~ano@user/ano)
[20:32:33] *** Joins: node1 (~node1@user/node1)
[20:32:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:32:40] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[20:32:53] <p-i-> btw re: scoping the helpers... I like to keep functions within the minimal scope in which they are required.
[20:32:58] <p-i-> It seems logical to me.
[20:33:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:33:53] <p-i-> I wouldn't nest them further into wrapper as that would impact performance I think
[20:33:54] *** Joins: emf_ (~emf@2620:10d:c090:400::5:49ef)
[20:35:03] <p-i-> I'll keep the def I think, as it saves duplicating the function name & saves an opportunity for mistyping
[20:35:10] *** Joins: akaWolf (~akaWolf@akawolf.org)
[20:38:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[20:39:35] *** Joins: koolazer (~koo@user/koolazer)
[20:39:40] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[20:40:44] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:40:55] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[20:41:23] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Client Quit)
[20:41:25] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:41:37] *** Quits: Jefren (~Jefren@70.35.66.133) (Ping timeout: 268 seconds)
[20:43:06] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 250 seconds)
[20:43:21] *** Joins: Jefren (~Jefren@70.35.66.133)
[20:45:02] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[20:45:07] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[20:45:44] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 246 seconds)
[20:46:59] *** Joins: mike18 (~geri@216.200.232.252)
[20:47:06] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:47:17] <mike18> hi how would a regex look like for the following? https://ideone.com/theRwb
[20:47:26] <mike18> to match all lines which look like this
[20:47:41] <mike18> timestamp some text
[20:47:57] <mike18> and multiple lines of those
[20:49:03] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[20:49:44] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[20:50:49] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[20:51:00] <grym> mike18: https://regex101.com/r/UcelSE/1
[20:51:39] *** Joins: P1ro (~quassel@user/p1ro)
[20:51:48] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[20:51:54] <shantaram> grym: heyyy we came up with basically the same thing
[20:52:34] <shantaram> mine was regexr.com/66g79
[20:52:53] <shantaram> put them in groups in case mike18 wants to extract them
[20:53:04] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[20:53:08] <grym> usually a nice touch yeah
[20:53:40] <mike18> shantaram: hm ok
[20:53:43] <mike18> grym: thx
[20:55:20] *** Joins: masta_ (~oyster@user/masta/x-2645138)
[20:55:58] *** Joins: mcint (mcint@user/mcint)
[20:56:53] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:56:57] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:57:55] <p-i-> humm it's not working. @_wrap(c_char_p, c_char_p) def td_execute(bla)    def _wrap(py_func, *CTypes):  I was hoping that py_func would be that td_execute function, and CTypes woould be a list with 2 items in it.
[20:58:25] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 265 seconds)
[20:58:26] <p-i-> But if I print them out, py_func is the first c_char_p and CTypes is a list containing the second c_char_p
[20:58:26] *** masta_ is now known as masta``
[20:58:28] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[20:58:35] <p-i-> What am I doing wrong?
[20:58:50] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[20:58:58] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[21:00:05] <p-i-> https://bpa.st/KPLQ
[21:00:58] <bjs> p-i-: your decorator is setup wrong. a decorator is *always* a function that accepts exactly 1 argument
[21:01:17] *** jmiehe1 is now known as jmiehe
[21:01:20] <bjs> p-i-: you don't want py_func to be part of the _wrap() arguments, but for _wrap(*ctypes) to *return* a function that accepts 1 argument (py_func)
[21:01:38] <bjs> p-i-: so `def deco(f): def wrapper(*args, **kwargs);` then `return deco`
[21:01:41] <bjs> or something
[21:02:31] <aphysically> I actually just wrote my first decorator https://bpa.st/CQOA
[21:02:55] <aphysically> oops forgot the typevar https://bpa.st/VZ5Q
[21:03:16] <Staunch> nice!
[21:03:52] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[21:04:01] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Client Quit)
[21:04:39] <p-i-> bjs: Confused. I feel sure I've seen the pattern of @deco(some_args) def f(...), no?
[21:04:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:05:10] *** Quits: langAt (uid520190@user/langat) ()
[21:05:24] <bjs> p-i-: yes
[21:05:29] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[21:05:40] <p-i-> Not sure how to salvage this
[21:05:45] <bjs> p-i-: do what I said
[21:05:52] <phy1729> p-i-: deco(some_args)   is slightly mislabeled, the function deco there returns a decorator. It itself is a decorator generator I suppose
[21:06:10] <bjs> p-i-: `def wrap(*CTypes):` then have `def deco(f): def wrapper...` then have wrap `return deco`
[21:06:14] <Staunch> p-i-: if you write a decorator that accepts arguments, then the outer function will accept arbitrary arguments and return a function that accepts a single argument (the callable it's wrapping)
[21:06:35] *** Joins: darksun (~darksun@user/darksun)
[21:07:03] <bjs> p-i-: `@deco(some_args) def f`  is doing `deco(some_args)(f)`  i.e. it's calling the thing "deco" returned with the argument f.  As phy1729 says, "deco" is probably a bad name here as it's not really the decorator (more a decorator factory :P)
[21:07:11] *** Quits: x4rchimedes (~archimed3@host-92-26-25-144.as13285.net) (Ping timeout: 245 seconds)
[21:07:44] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a)
[21:07:44] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f1d6:3fa4:c64e:456a) (Client Quit)
[21:07:52] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[21:08:01] <p-i-> brain..critical..overload
[21:08:07] <p-i-> ok I'll work through it :)
[21:09:09] *** Joins: jpic (~jpic@cust-east-parth2-46-193-105-98.wb.wifirst.net)
[21:09:28] *** Quits: baltazar (~baltazar@84-236-99-193.pool.digikabel.hu) (Quit: leaving)
[21:10:01] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[21:10:17] <bjs> p-i-: https://bpa.st/GAHA
[21:11:21] <aphysically> I learned about the new ParamSpec in 3.10 in the process of trying to type it :)
[21:11:44] *** Joins: baltazar (~baltazar@84-236-99-193.pool.digikabel.hu)
[21:12:56] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[21:12:57] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:14:25] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[21:14:38] *** Quits: Narrat (~omnius@p200300df5f13e70206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:14:48] <aphysically> I still need to learn asyncio...right now I've just always used threading
[21:14:53] *** Joins: Narrat (~omnius@p200300df5f13e70206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:15:08] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[21:15:23] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[21:15:37] <aphysically> I'm not sure I understand a convincing example where asyncio is easier yet
[21:15:51] *** Quits: rsx (~dummy@ppp-188-174-140-209.dynamic.mnet-online.de) (Quit: rsx)
[21:15:57] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[21:16:08] *** Joins: langAt (uid520190@user/langat)
[21:16:13] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[21:16:20] <bjs> aphysically: hmm,  I find it makes most concurrent things easier to get right
[21:16:58] <aphysically> maybe my problem is I just don't have a good enough understanding of asyncio yet
[21:17:09] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[21:17:17] <bjs> e.g. even just incrementing some shared counter you can go `self.whatever += 1` or something whereas you can't with threads
[21:17:45] *** Joins: DmanT (~dmant@2a02:908:416:a6e1:8777:a39f:3f17:b754)
[21:17:46] <DmanT> hi all
[21:18:03] *** Joins: YoungChiefBTW (~youngchie@user/youngchiefbtw)
[21:18:23] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[21:18:28] <DmanT> i make a mysql connection.. when i print the selected data.. the output is => ('value'), not value.... how i remove the (' and ') ?
[21:18:30] <bjs> aphysically: It's basically very similar to threads except you write `async def`s and then you `await` things;  and instead of threads where you can be pre-empted at any time execution between async defs only switches when you reach an `await`.  It looks like threads a lot,  but one of the nice things is that a library like asyncio or trio can manage all the concurrency and exceptions and things
[21:18:36] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[21:20:21] <aphysically> it occurred to me yesterday you can use iterators and coroutines like threading in cases where the GIL isn't released anyway and then you're just the one in control of when the switching happens
[21:20:23] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:20:36] <aphysically> s/iterators/generators
[21:20:38] *** Joins: Madda (~Madda@227.249.9.51.dyn.plus.net)
[21:20:51] <aphysically> but this is I/O stuff where I want real async anyway
[21:21:11] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com)
[21:21:15] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-19cf-2196-fe54-fcfa.res6.spectrum.com) (Remote host closed the connection)
[21:21:40] *** Quits: bewees (~bewees@user/bewees) (Remote host closed the connection)
[21:22:56] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:23:13] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 252 seconds)
[21:23:26] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:24:13] <aphysically> right now I have at least one isolated class that I think is a good candidate for handling with asyncio, I just gotta figure it out
[21:24:22] *** Joins: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a)
[21:24:23] <ChrisWarrick> DmanT: this is a tuple of results — even if your statement returns one column, you still get tuples. You want something like results[0]
[21:24:48] <aphysically> https://github.com/GBeauregard/pyffstream/blob/f5f17e976c9b968751e0b8618e21b7e01d0ac7fe/src/pyffstream/ffmpeg.py#L774
[21:24:50] <aphysically> this one
[21:24:51] <bjs> aphysically: usually the GIL doesn't affect things that can be described as "I/O"
[21:24:55] *** Quits: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a) (Client Quit)
[21:25:05] <aphysically> right
[21:25:27] <DmanT> ChrisWarrick, yes. right.. thank
[21:25:31] <bjs> aphysically: so if you have I/O threads or asyncio or whatever it doesn't make a difference
[21:25:32] *** Joins: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a)
[21:25:49] <bjs> it's all "real" async
[21:25:54] <aphysically> in this class I'm using threading where I'm just reading from a socket and readline()'ing the pipe of a subprocess
[21:25:56] *** Quits: emf_ (~emf@2620:10d:c090:400::5:49ef) (Ping timeout: 245 seconds)
[21:26:06] <aphysically> so I think it's a strong candidate for asyncio
[21:26:30] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[21:26:32] <bjs> aphysically: I guess, those are all things asyncio should be able to do well
[21:26:43] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:26:59] *** Quits: Elzington (~Elzington@66.63.167.167) (Quit: Leaving)
[21:27:02] *** Quits: pycode (~pycode@2001:b07:5d28:551:b002:3643:329c:49d4) (Ping timeout: 246 seconds)
[21:27:49] *** Joins: jmft2 (~jmft2@213.31.248.255)
[21:28:12] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[21:28:32] *** Joins: paul424 (~tom@ip-31-0-121-173.multi.internet.cyfrowypolsat.pl)
[21:29:53] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[21:31:24] *** Joins: MikZyth_ (~MikZyth@188.65.242.19)
[21:31:31] *** Quits: NatalieTheTiny (uid247415@id-247415.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:32:08] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[21:32:41] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[21:32:56] *** Quits: MikZyth (~MikZyth@188.65.242.60) (Ping timeout: 250 seconds)
[21:33:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:33:24] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:33:46] *** Joins: KeiraT (~k@lulzsec.co.uk)
[21:35:20] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[21:35:29] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:35:34] *** Joins: hanaan (~naan@user/naan)
[21:35:41] *** Joins: Akuli (~Akuli@82-203-161-82.bb.dnainternet.fi)
[21:36:44] *** Quits: MikZyth_ (~MikZyth@188.65.242.19) (Ping timeout: 265 seconds)
[21:37:32] <paul424> I'm thinking what could be introduced before variables on course for teenager. Manipulation with numbers .... but what task to give when nothing is introduced ?
[21:38:37] *** Quits: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04) (Remote host closed the connection)
[21:38:44] *** Joins: MikZyth_ (~MikZyth@188.65.243.2)
[21:38:48] *** Joins: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04)
[21:39:09] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[21:39:09] *** Quits: Jefren (~Jefren@70.35.66.133) (Ping timeout: 265 seconds)
[21:39:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[21:39:53] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[21:40:33] <bjs> paul424: use python as a calculator to do some calculations is pretty much the only thing if all they've learned is some arithmetic
[21:40:41] *** Joins: tortal (~tortal@user/tortal)
[21:40:41] *** Joins: Jefren (~Jefren@208.104.190.51)
[21:40:44] <tortal> l
[21:40:46] <grym> variables are pretty foundational
[21:40:58] <phy1729> calculate triangle numbers by hand and then you can introduce loops?
[21:40:59] <jinsun> don't give tasks till variables are introduced maybe (and cover variables soon)
[21:41:07] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[21:41:10] <neilthereildeil> hey all
[21:41:22] <neilthereildeil> can someone please help me install venv and pip with python 2.7?
[21:41:40] <paul424> grym, phy1729 jinsun ok thanks for a tip
[21:41:49] <tortal> neilthereildeil, have you read the guide_
[21:41:51] <bjs> neilthereildeil: you don't have pip installed?
[21:42:02] <neilthereildeil> i have it installed
[21:42:05] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[21:42:11] <bjs> neilthereildeil: okay... then why do you need help installing it
[21:42:14] <neilthereildeil> but pip --version shows: pip 20.3.4 from /usr/lib/python3/dist-packages/pip (python 3.9)
[21:42:19] <neilthereildeil> it should be 2.7
[21:42:23] <neilthereildeil> im not in a venv right now
[21:42:26] <neilthereildeil> this is just in bash
[21:42:30] <bjs> neilthereildeil: don't run pip directly.  What does `python2 -m pip --version` say?
[21:42:36] <tortal> pip should not be 2.7, maybe you meant python
[21:42:53] <bjs> tortal: neilthereildeil literally copied the output of pip there...
[21:42:53] <neilthereildeil>  /usr/bin/python2: No module named pip
[21:42:56] <Wooble> neilthereildeil: you may also have a pip2 or pip2.7
[21:42:57] *** Joins: StickyIcky (~StickyIck@187.211.36.68)
[21:43:05] <bjs> neilthereildeil: okay,  how did you install python2? did you install python2 yourself?
[21:43:10] <neilthereildeil> yea
[21:43:11] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:3074:39fa:6bc4:aab8) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:43:12] <neilthereildeil> in debian
[21:43:20] <bjs> neilthereildeil: like with apt?
[21:43:23] <bjs> you installed it?
[21:43:24] <neilthereildeil> ya
[21:43:25] <tortal> do you want 2.7 to be default
[21:43:35] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:43:36] <bjs> neilthereildeil: is there not a python2-virtualenv package you can install?
[21:43:49] <bjs> or some similarly named debian package
[21:43:52] <neilthereildeil> lemme try
[21:44:00] <StickyIcky> Hey everyone, I'm not sure if I understand python3 properties correctly. If I set a @property, then only a @property.getter, I should *not* be able to set that property, right?
[21:44:04] <tortal> probably  python-virtualenv would be the name
[21:44:13] *** Quits: Jefren (~Jefren@208.104.190.51) (Client Quit)
[21:44:25] <neilthereildeil> no package with that name found
[21:44:27] <bjs> yes it might be called python-virtualenv or just virtualenv
[21:44:40] <bjs> neilthereildeil: you'll have to use your nose to try find it :P
[21:44:43] <neilthereildeil> i already have the vitualenv package installed
[21:44:45] *** Joins: Jefren (~Jefren@208.104.190.51)
[21:44:57] <neilthereildeil> but nothing speciifc to python2
[21:45:12] <bjs> neilthereildeil: oh okay, and what does virtualenv --version say?
[21:45:12] <tortal> oh yeah.. just use virtualenv to create python2 env with right pip ?
[21:45:43] <bjs> neilthereildeil: (and have you tried `python2 -m virtualenv` yet?)
[21:45:45] <tortal> virtualenv can create borth 2 and 3 envs..
[21:45:51] <neilthereildeil> virtualenv 20.4.0+ds from /usr/lib/python3/dist-packages/virtualenv/__init__.py
[21:46:05] <neilthereildeil> tortal: ohh ok then i need to tell veirualenv to create a python2 env
[21:46:10] <tortal> yeah
[21:46:11] <neilthereildeil> how can i do that?
[21:46:14] <tortal> some flag
[21:46:22] <Wooble> (and hilariously, the python3 virtualenv in debian for years would create py2 venvs by default)
[21:46:24] *** Quits: MikZyth_ (~MikZyth@188.65.243.2) (Ping timeout: 265 seconds)
[21:46:51] <jinsun> StickyIcky: just @property not @property.getter
[21:46:53] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 265 seconds)
[21:46:57] <tortal> py envs. what is crazy is that it creates py3 envs by default today
[21:47:06] <neilthereildeil> theres a "--python" option
[21:47:22] <neilthereildeil> but shouldnt python binary be used from inside the venv, not in a system directory?
[21:47:43] *** Quits: aeadio (~aead@user/aead) (Ping timeout: 265 seconds)
[21:47:51] <StickyIcky> @jinsun I want the property to not be settable. So then, if I set @property.getter but not @property.setter, will it let me set the property?
[21:47:53] <bjs> neilthereildeil: virtualenv has to *get* the python binary from somewhere
[21:48:01] <tortal> neilthereildeil: when using a specific env. yes
[21:48:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[21:48:25] <tortal> just run the activate-script to bind commands to point to the correct binary
[21:48:42] <tortal> in a new env you can find it in ./bin/
[21:49:12] *** Joins: wyclif (~wyclif@user/wyclif)
[21:49:35] <tortal> virtualenv -p /usr/bin/python2.7 myenv
[21:49:41] <tortal> if the binary is there
[21:49:41] <bjs> neilthereildeil: try `virtualenv --python $(which python2) venv`
[21:49:53] <neilthereildeil> gotit thanks
[21:49:53] <tortal> oh. bjs version is bestest
[21:50:13] <bjs> neilthereildeil: then you should be able to run venv/bin/python venv/bin/pip etc,  although maybe you'd be better finding a version of the libraries that work in python3 :P
[21:50:17] <bjs> python2 is a bit odd and cruft now
[21:50:41] <tortal> python* is not odd
[21:50:42] <jinsun> StickyIcky: there is no @property.getter or @property.setter, there is @property and @x.setter (if your propery name is x), and yes if you don't define the setter you won't be able to assign to it
[21:50:42] <neilthereildeil> cool, that worked. thanks so much!
[21:50:46] <tortal> python3 is odd..
[21:50:58] <neilthereildeil> unfortunately so much infrastructure is built in py2
[21:51:24] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Read error: Connection reset by peer)
[21:51:37] *** Joins: acresearch (~acresearc@user/acresearch)
[21:51:43] <bjs> Wooble: the whole 2/3 transition was a mess
[21:51:44] <tortal> nothing unfortunate with that. what is unfortunate is the create a new language and name it as a successor of a completely different langyage
[21:51:45] <bjs> I'm glad to forget it
[21:51:49] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:51:55] <acresearch> people, if i have a conda enviroment, can i install a library into it using pip?
[21:52:06] <bjs> tortal: it clearly has a different name,  this one has a 3 in it
[21:52:07] <bjs> :D
[21:53:08] <SnoopJ> acresearch, yes, if you use the environment's pip (which you will probably be doing if you activate the environment first)
[21:53:18] *** Joins: reset (~reset@user/reset)
[21:53:36] <grym> python3 might be odd, but both python2 and python3 are prime!
[21:53:44] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 250 seconds)
[21:53:45] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[21:53:46] <acresearch> SnoopJ: so just conda activate ENV  then pip install ...  ?
[21:53:56] *** Quits: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04) (Remote host closed the connection)
[21:54:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:54:28] <neilthereildeil> hmm im trynna do "pip install m2crypto==0.24.0"
[21:54:32] <neilthereildeil> but im getting errors
[21:54:33] <jinsun> acresearch: install pip into the environment also (though maybe conda does that automatically nowadays)
[21:54:36] *** Joins: impermanence (~impermane@73.94.243.213)
[21:54:44] *** Joins: wyclif (~wyclif@user/wyclif)
[21:54:45] <acresearch> jinsun: let me try
[21:54:52] <p-i->     convert_C_arg_to_python = lambda c_arg, PyType: b2j(c_arg) if PyType is dict else None if PyType is None else PyType(c_arg)
[21:54:52] <p-i-> TypeError: NoneType takes no arguments
[21:54:56] <neilthereildeil>  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1
[21:55:00] <neilthereildeil> i installed gcc
[21:55:07] <grym> neilthereildeil: paste the tracebabck
[21:55:20] <p-i-> What's the fix here? I tried `if PyType is NoneType` but my linter says no such thing as NoneType
[21:55:22] <mike18> hi what lib to use to convert 00:20:46.99 20 min 46 sec 99 ms into seconds or minutes?
[21:56:04] <p-i-> mike18: I'd say arrow for anything time-related
[21:56:05] *** Quits: tortal (~tortal@user/tortal) (Ping timeout: 246 seconds)
[21:56:25] <StickyIcky> @jinsun Thank you! That's what I meant. Would you happen to know why that would not work in python 3? I'm setting only the getter, yet when I call the property and use .append() on it, it sets the value to the property. Here's the code: https://bpa.st/TYDQ
[21:56:36] <Wooble> p-i-: could use type(None) to get a reference to NoneType
[21:57:02] <mike18> p-i-: pendulum lib?
[21:57:04] *** Joins: somlis (~somlis@user/somlis)
[21:57:23] *** Joins: tortal (~tortal@user/tortal)
[21:57:29] <tortal> got booted
[21:57:29] <SnoopJ> acresearch, that should be all that's necessary, yes. I usually invoke pip as `python3 -m pip` to avoid the case where `pip` and `python3` point to different interpreters (see: https://snarky.ca/why-you-should-use-python-m-pip/)
[21:57:44] <p-i-> mike18: Haven't heard of that, LMK if it's tasty (but arrow has been perfect for me)
[21:57:50] <p-i-> Thanks Wooble!
[21:58:27] <neilthereildeil> looks like C compiler errors
[21:58:28] <tortal> i hate needing to prefix with python3 -m all the time. it sucks so hard. and it is all because they HAD to use the name name "python"...
[21:58:34] *** Joins: MikZyth_ (~MikZyth@188.65.243.3)
[21:58:57] <Wooble> p-i-: (it's somewhat unusual to *want* a reference to NoneType, which is why it's not a builtin, but in your odd case... maybe you do.)
[21:59:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:59:18] <neilthereildeil> heres the errors im getting installing M2Crypto: https://paste.debian.net/1213609/
[21:59:19] <Wooble> neilthereildeil: you're likely missing dependencies.
[21:59:33] *** Quits: MikZyth_ (~MikZyth@188.65.243.3) (Client Quit)
[21:59:51] <p-i-> bjs: It flies! https://bpa.st/JLSQ Cannot thank you enough for pulling me through it!
[21:59:58] <bjs> tortal: you shouldn't actually need to use -m except when things go wrong just to be sure
[22:00:15] <bjs> tortal: I use pyenv for all my python versions anyway and i have lots of concurrently installed versions
[22:00:23] <p-i-> I will offer it back to the public domain in TDLib Issue Tracker in case it's useful to someone
[22:00:29] *** Joins: wyclif (~wyclif@user/wyclif)
[22:00:50] <bjs> p-i-: btw that assert is a little strange, not only is it the only line with a semicolon (for no reason!) what is it even asserting? :P
[22:01:02] <jinsun> StickyIcky: you are still trying to define .getter, don't do that (surprised that it even works), the @property function itself is the getter
[22:01:33] <p-i-> bjs: I wanted it to fall over if it can't find the lib
[22:02:24] <acresearch> SnoopJ: ok let me try
[22:03:20] <bjs> p-i-: maybe you want `if tdjson_path is None: raise FileNotFoundError("Could not find the tdjson library")` instead of the assert
[22:03:23] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[22:03:28] <bjs> asserts can be disabled, and won't give a very ... readable error :)
[22:03:54] <neilthereildeil> how can i get m2crypto to install?
[22:04:21] *** Joins: nomic (~nomic@185.192.69.207)
[22:04:48] <p-i-> bjs: but then I'd have to consider converting my entire codebase from a hackjob into a respectable unit of software engineering... it's a slippery slope
[22:05:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[22:05:29] <mike18> p-i-: arrow is a lib?
[22:05:50] <tortal> it will never happen*. Technical debts are impossible to ever get even
[22:06:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:06:02] <p-i-> mike18: https://arrow.readthedocs.io/en/latest/
[22:06:05] *** Joins: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au)
[22:06:07] <mike18> p-i-: Pendulum is only for datetimes made easy
[22:06:56] <p-i-> mike18: IME arrow is to DateTime(&friends) what Trio is to asyncio
[22:06:57] <mike18> didnt see how to read duration string and parse
[22:07:51] *** Joins: StickyIcky2 (~StickyIck@ec2-34-201-88-49.compute-1.amazonaws.com)
[22:08:00] <ravindUwU> Hello! I'm using a multiprocessing.Queue[Any]() but Python 3.9.7 raises an error that reads "TypeError: 'method' object is not subscriptable" at runtime.
[22:08:05] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[22:08:11] <ravindUwU> Any idea why?
[22:08:57] <tortal> it is impossible without proper generics to avoid introspection when one wants to create a new type that implements an already existing type (such as datetime=) with already useful functions that takes it as argument
[22:09:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:09:36] <tortal> as well as returns an instnace of the implemented type... e.g. datetime
[22:09:42] <bjs> ravindUwU: because you can't go multiprocessing.Queue[...] ?
[22:09:51] <p-i-> mike18: I just guessed it would have it. You could always set an arbitrary YYYY/MM/DD and diff the time since 00:00:00
[22:10:08] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[22:10:15] <mike18> my string is in duration without date
[22:10:22] <mike18> hh:mm:ss:ms
[22:10:53] *** Quits: StickyIcky (~StickyIck@187.211.36.68) (Ping timeout: 264 seconds)
[22:11:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:11:18] <tortal> i love optional typing... like.. do the typing 99% of the time until you need some ninja duck move
[22:11:29] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 264 seconds)
[22:11:31] *** Joins: wyclif (~wyclif@user/wyclif)
[22:12:05] <tortal> the compiler could optimize whatever is typed
[22:12:18] <p-i-> mike18: you could hack something: h,m,s,ms = thing.split([':','.']; ms + 1000*(s + 60*(m + 60*h))) or something
[22:12:25] <tortal> does it do it tho ? is th GC smarter in python3 optional typing
[22:12:40] <ravindUwU> bjs, oh wow yeah looks like it; thanks
[22:12:47] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: Leaving)
[22:12:48] <bjs> tortal: the standard Python you download doesn't really do any optimizations at all
[22:12:48] <ChrisWarrick> tortal: no, typing doesn’t affect anything at runtime
[22:12:48] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[22:12:52] <mike18> p-i-: and give that to pendulum to calc total sec?
[22:12:57] *** Joins: etbcf (~etbcf@2001:8a0:7b3a:dd01:bdd4:9438:2653:2c6e)
[22:13:09] *** Joins: arinov (~arinov@31.142.40.252)
[22:13:58] *** Joins: kib (~kib@user/kib)
[22:14:08] <StickyIcky2> @jinsun thanks!
[22:14:15] <p-i-> mike18: https://stackoverflow.com/questions/6402812/how-to-convert-an-hmmss-time-string-to-seconds-in-python first google hit if it helps
[22:14:35] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[22:14:38] <neilthereildeil> pip says " Check the logs for full command output."
[22:14:42] <neilthereildeil> where can i find the logs?
[22:14:52] <mike18> p-i-: yeah - just try to avoid using datetime.timedelta directly :)
[22:15:16] <p-i-> I avoid using datetime entirely. I been burned too many times.
[22:15:38] <p-i-> I had to maintain a cheat-sheet of all the operations.
[22:15:43] <Wooble> time is an illusion. datetime, doubly so.
[22:15:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:16:47] <p-i-> datetime.utcnow() is the only time there is
[22:16:52] *** Quits: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au) (Quit: KTHXBAI)
[22:17:02] <Wooble> p-i-: nooooo. it's naive!
[22:17:02] *** Joins: wyclif (~wyclif@user/wyclif)
[22:17:08] <bjs> p-i-: no don't use that
[22:17:13] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:17:18] <bjs> utcnow is (confusingly) not in utc
[22:17:19] <p-i-> :]
[22:17:22] <p-i-> I know
[22:17:37] <p-i-> That's why I've been hammering datetime to stop mike18 from considering it
[22:17:38] <bjs> p-i-: people lurk here and might read it seriously :p
[22:17:54] <mike18> p-i-: the link said use datetime
[22:18:09] <p-i-> & I knew it would trigger y'all :p
[22:18:40] <bjs> p-i-: it's not triggering, if you say something that is incorrect/bad python in #python you're going to get corrected
[22:18:44] <p-i-> The link contained a variety of proposed solutions. It is your job to discern!
[22:18:55] <bjs> even if you knew when you said it :P
[22:18:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[22:19:22] <StickyIcky2> @jinsun, I've modified my code so it only defines @property, however it still does not raise an error when trying to do an append. Do you know why this might be?
[22:19:30] <StickyIcky2> https://bpa.st/LUFA
[22:19:46] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[22:19:47] <bjs> StickyIcky2: why would it raise an error?
[22:20:10] <StickyIcky2> because @property makes a value read-only, according to the docs: https://docs.python.org/3/library/functions.html#property
[22:20:30] <bjs> StickyIcky2: yes, you can't `msgListHandler.message_list = ...`
[22:20:48] <bjs> but you're not writing to message_list you're mutating the object it returned,  which is fine
[22:21:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[22:21:34] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 252 seconds)
[22:21:53] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:22:02] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[22:22:05] <StickyIcky2> But then python shold not change the msgListHandler.message_list, only the returned object, or am I wrong?
[22:22:09] <jinsun> StickyIcky2: @propertly doesn't make it immutable, just prevents assigning to it, like obj.x = value (ifi you don't define setter)
[22:22:27] <StickyIcky2> Alright, I think I get it now
[22:22:29] *** Joins: aphysically (~aphysical@user/aphysically)
[22:22:30] <StickyIcky2> Thanks <3
[22:22:46] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:23:08] *** Joins: waynew (~wayne@user/waynew)
[22:23:27] *** Joins: fikran (~fikran@user/fikran)
[22:23:31] *** Joins: yaalon (~yaalon@2600:100c:b043:b2ec:3572:2a9a:6b2e:a53)
[22:24:40] *** Joins: emf (~emf@163.114.132.6)
[22:24:42] <p-i-> bjs: I knew it would get pounced upon. It's a little like putting `rm -rf /` into #linux. My lead dev once put `rm -rf $foo/` in a .sh and $foo wasn't set. It munched half the CEO's fs before he pulled the plug. Luckily it deleted alphabetically so he just lost half of his /Applications folder.
[22:26:34] *** Joins: farmfrmjakestate (~farmfromj@user/farmfrmjakestate)
[22:27:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:27:15] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:588:33b7:952:7ce8)
[22:28:03] *** Joins: wyclif (~wyclif@user/wyclif)
[22:30:25] *** Parts: etbcf (~etbcf@2001:8a0:7b3a:dd01:bdd4:9438:2653:2c6e) (WeeChat 2.8)
[22:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:30:42] <mike18>  h,m,s,ms = thing.split([':','.']; ms + 1000*(s + 60*(m + 60*h))) .. whats the ; ?
[22:30:56] <Togra> you can delimit statements with semicolons rather than carriage returns
[22:30:58] <mike18> thats for sec i gues
[22:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:06] <Togra> it's a bit.. odd, but I've seen other people do it
[22:31:21] <Togra> oh actually I don't know why that's there
[22:31:25] <Togra> should it be a comma? maybe?
[22:31:31] <Togra> does it run fine?
[22:32:12] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:32:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:33:18] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[22:33:34] *** Joins: wyclif (~wyclif@user/wyclif)
[22:33:43] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:33:51] <jinsun> probably not, seems like just a missing closing paranthesis at the end of split
[22:34:00] <mike18> how to fix that for python? h,m,s,ms = duration.split([':','.'])
[22:34:13] *** Quits: nomic (~nomic@185.192.69.207) (Quit: Leaving)
[22:35:21] <Wooble> mike18: I don't think that was intended as actual usable code, especially since they go on to multiply strings by numbers.
[22:35:42] *** Quits: kib (~kib@user/kib) (Ping timeout: 265 seconds)
[22:36:00] <mike18> Wooble: i guess i need 2 commands to split that
[22:36:25] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:37:45] <Wooble> mike18: can use re.split to make the separator a regex
[22:38:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:38:43] <stewie925> hi guys, I have an issue with the replace statement  - here is my short code.   https://bpa.st/XJDQ
[22:39:04] *** Joins: wyclif (~wyclif@user/wyclif)
[22:39:10] <jinsun> mike18: yeah `h,m,s,ms = re.split(r"\.|:", "hh:mm:ss.ms")`
[22:39:36] <stewie925> when I ran it in interactive python it works fine, but it doesn't give the expected result when executing it  as a python script
[22:39:41] *** Joins: kib (~kib@user/kib)
[22:39:53] <p-i-> yeah, I was not wanting to spoonfeed, moreover give an idea
[22:39:55] <Wooble> stewie925: lines 10 and 11 do nothing because you overwrite the value of reversed_bin32
[22:40:09] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:40:20] <p-i-> mike18: Get in the habit of using ipython (or an .ipynb if you're in VSCode) to test stuff out.
[22:41:01] <stewie925> Wooble: oh crap
[22:41:06] <mike18> h,m,s,ms = re.split(r"\.|:", duration); it = pendulum.duration(hours=int(h), minutes=int(m), seconds=int(s), microseconds=int(ms)); print(it.total_seconds())
[22:41:10] <stewie925> thanks! LET ME TRY again
[22:41:11] <mike18> p-i-:
[22:41:13] <stewie925> sorry for the caps
[22:41:26] *** Quits: emf (~emf@163.114.132.6) (Ping timeout: 252 seconds)
[22:41:30] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[22:42:08] *** Quits: magla (~gelignite@55d431b0.access.ecotel.net) (Quit: Stay safe!)
[22:42:11] <stewie925> Wooble - thanks!
[22:42:32] *** Joins: mei (~mei@user/mei)
[22:42:35] *** Quits: yaalon (~yaalon@2600:100c:b043:b2ec:3572:2a9a:6b2e:a53) (Remote host closed the connection)
[22:43:22] <p-i-> mike18: Did you not like the look of the most upvoted (and accepted) answer in the link?
[22:43:24] <Wooble> stewie925: BTW line 7 is pointless, bin32 is already a string.
[22:43:32] <p-i-> Looks pretty clean to me
[22:43:36] *** Joins: spithash (~spithash@user/spithash)
[22:43:41] <mike18> p-i-: let me see
[22:43:45] <p-i-> If you want milliseconds you can split on '.' first
[22:43:47] <mike18> no datetime?
[22:43:50] *** Joins: emf (~emf@2620:10d:c090:400::5:9ff)
[22:43:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:43:55] <mike18> i want sec, or min
[22:43:59] <mike18> depending what i plot
[22:44:34] *** Joins: wyclif (~wyclif@user/wyclif)
[22:46:01] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[22:46:52] <jiffe> all of a sudden my pip installs are giving me 'INFO: pip is looking at multiple versions of asyncio to determine which version is compatible with other requirements. This could take a while.' ... did something change ?
[22:47:50] <ammar2> yeah, they added a dependency resolver
[22:47:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:48:11] <ammar2> https://pip.pypa.io/en/latest/user_guide/#changes-to-the-pip-dependency-resolver-in-20-3-2020
[22:48:14] <p-i-> mike18: HHMMSS, ms = '01:02:03.456789'.split('.') ; h, m, s = map(int, HHMMSS.split(':')) ; total_seconds = 3600*h + 60*m + s + float('0.'+ms)
[22:48:16] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f)
[22:48:22] <p-i-> plenty of ways to skin this cat
[22:48:28] <mike18> yeah
[22:48:57] <trashbird> use a spoon
[22:49:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:50:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:50:45] <jinsun> mike18: also `t = datetime.datetime.strptime("00:01:02.03", "%H:%M:%S.%f") - datetime.datetime.strptime("", ""); print(t.total_seconds())`
[22:51:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:51:55] *** Joins: Adoi (~Adoi@user/adoi)
[22:51:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:52:04] <p-i-> +1
[22:52:35] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[22:52:53] *** Quits: paul424 (~tom@ip-31-0-121-173.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[22:53:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 260 seconds)
[22:53:15] *** Joins: Betal (~Betal@user/betal)
[22:54:04] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 265 seconds)
[22:54:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[22:55:13] *** Joins: grooverman (~grooverma@179.99.120.247)
[22:55:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:588:33b7:952:7ce8) (Ping timeout: 256 seconds)
[22:55:35] *** Joins: wyclif (~wyclif@user/wyclif)
[22:56:16] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[22:57:45] *** Joins: redrum88 (~redrum88@user/redrum88)
[22:57:57] *** Joins: hardwire (sid415742@id-415742.uxbridge.irccloud.com)
[22:58:46] *** Quits: emf (~emf@2620:10d:c090:400::5:9ff) (Ping timeout: 260 seconds)
[22:59:32] <hardwire> I feel like I'm doing this wrong.. but I want to create an intermediate ABC and this is a fairly simple approach: https://gist.github.com/whardier/5c7272d2295b3914ee503e5bfc073bdf  -  I think I'm struggling to understand where metaclass comes in and why.  I'm wanting to subclass a libraries class, add abstract methods, and then create implementations on top of it.
[22:59:33] <ornxka> why python doesnt close my socket when i call close()??
[23:00:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:01:06] *** Joins: wyclif (~wyclif@user/wyclif)
[23:02:14] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[23:02:26] *** Joins: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net)
[23:03:09] *** Quits: defjam (~eb0t@90.196.142.47) (Quit: WeeChat 3.0)
[23:03:17] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[23:03:58] *** Quits: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net) (Read error: Connection reset by peer)
[23:03:59] <newdimension> Anyone know how I can associate a poetry venv with a project?
[23:04:46] <Wulf> ornxka: it should. Perhaps you're confused about something.
[23:05:10] *** Quits: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a) (Remote host closed the connection)
[23:05:38] <SnoopJ> newdimension, associate how?
[23:05:46] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:05:58] *** Joins: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a)
[23:05:58] *** Quits: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a) (Remote host closed the connection)
[23:06:08] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[23:06:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:06:36] *** Joins: wyclif (~wyclif@user/wyclif)
[23:06:46] *** Joins: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a)
[23:06:46] *** Joins: cutotopo (~cutotopo@151.49.208.192)
[23:08:03] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[23:08:44] <p-i-> ornxka: Maybe another process also has a handle on the open socket? I don't know if sockets reference-count, but I know there's a REUSE_ADDR option.
[23:08:49] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[23:09:03] <jiffe> is there a way to disable this new dependency resolver?  pip install is taking forever now
[23:09:27] <newdimension> SnoopJ: I tried to install a package and poetry created a new env. I had renamed the folder so that could be a factor but it seems to me that poetry no longer associates my project with my initial venv
[23:09:37] *** Quits: tortal (~tortal@user/tortal) (Ping timeout: 268 seconds)
[23:10:00] <p-i-> newdimension: That sounds like confused language. How are you running your program? From IDE or CLI?
[23:10:19] <p-i-> If CLI, check `which python` and ensure your poetry .venv Python is running.
[23:10:32] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[23:10:46] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:10:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:10:55] <ornxka> ahh it might be REUSE_ADDR yeah
[23:10:57] <p-i-> If IDE, again check which .venv it's using. In VSCode it's on the bottom bar on the left.
[23:10:59] <SnoopJ> newdimension, if you have an existing venv that you want poetry to use, you can do `poetry env use /path/to/your/python3`, but it's usually best to let poetry do what it wants.
[23:11:05] <ornxka> im calling close() on a different thread than the one thats listening
[23:11:10] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[23:11:28] <ornxka> and had the expectation that the listening thread would uh stop listening after its socket gets close() called on it
[23:11:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:11:29] <SnoopJ> newdimension, renaming the folder will definitely break poetry's understanding, and you shouldn't ever do this with venvs anyway, they are very much not designed to be moved.
[23:11:56] <newdimension> p-i-: I run the program via pycharm and I have it configured to use the correct python. When I go to the folder and run "poetry add foo" it created a new venv
[23:12:06] *** Joins: wyclif (~wyclif@user/wyclif)
[23:12:06] *** Joins: emf (~emf@163.114.132.6)
[23:12:32] <newdimension> SnoopJ: I renamed the src folder not poetry's venv. I expected to find a config file linking the project with the poetry venv somewhere. How else does it know which one to run?
[23:13:07] <jiffe> using --use-deprecated=legacy-resolver seems to work
[23:14:22] <p-i-> newdimension: unless you're doing #!/path/to/my/python at the top of your main.py I don't see how a project knows which python to associate with. Poetry isn't concerned with your code. It's concerned with it's own deps-file and the .venv it generates from that file.
[23:14:41] *** Joins: matsaman (~matsaman@user/matsaman)
[23:14:49] <p-i-> Whether or not your code makes use of that .venv is nothing to do with poetry AFAIU.
[23:15:29] <SnoopJ> p-i-, that isn't correct, poetry uses pyproject.toml at the very least, and I would guess it keeps track of where the pyproject.toml lives to work out what venv to use.
[23:15:38] <SnoopJ> newdimension, ^ I would guess this is how it works, but it is just a guess.
[23:15:57] *** Quits: farmfrmjakestate (~farmfromj@user/farmfrmjakestate) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:16:09] <SnoopJ> is it such a big deal to recreate the venv? the packages you installed previously are very possibly cached on your machine anyhow
[23:16:34] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:16:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:17:08] <newdimension> SnoopJ: It's not a big deal, I'm trying to understand how it works because so far I miss the simplicity of virtualenv
[23:17:38] *** Joins: wyclif (~wyclif@user/wyclif)
[23:18:30] <p-i-> yes I remember now `poetry run ...`
[23:19:02] <p-i-> newdimension: You can get poetry to install the .venv in your project folder. That can help keep track of what's going on.
[23:19:03] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:19:32] *** Joins: Samian (~Sami@user/samian)
[23:20:15] <Samian> There's a lot of inline-cpp python packages I see from a quick google. Any in particular anyone here recommends?
[23:20:43] <p-i-> And poetry stores it's state in plain-text so you can always inspect & see what it's up to.
[23:21:09] <p-i-> `poetry env info`, `poetry env info --path`, etc https://python-poetry.org/docs/managing-environments/
[23:21:25] <SnoopJ> p-i-, do you know where the state that associates a venv with a particular project lives? That's what they are asking for.
[23:22:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[23:22:35] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 265 seconds)
[23:23:01] <ammar2> Samian: I would recommend cffi
[23:23:07] *** Joins: wyclif (~wyclif@user/wyclif)
[23:23:19] <ammar2> https://cffi.readthedocs.io/en/latest/overview.html#main-mode-of-usage
[23:23:45] *** Joins: qlixed (~qlixed@152.170.36.244)
[23:24:45] *** Joins: kostkon (~androirc@2a02:587:a104:3da6:185b:b019:5370:b96e)
[23:27:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[23:28:38] *** Joins: wyclif (~wyclif@user/wyclif)
[23:29:04] *** Joins: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net)
[23:30:16] <p-i-> I thought that poetry doesn't make any association. & simply maintains .venvs and lets you switch them out. And when you `poetry run foo.py` it runs it with the currently selected .venv.
[23:30:21] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.2.1)
[23:30:38] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[23:31:04] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Read error: Connection reset by peer)
[23:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:20] <SnoopJ> p-i-, it does keep an association. That's part of why the `env` subcommand exists, so you can inspect or update that association.
[23:31:27] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[23:33:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[23:34:07] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[23:34:09] *** Joins: wyclif (~wyclif@user/wyclif)
[23:34:20] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:35:07] <p-i-> I suspect my poetry is bodgered. I've got a handful of .venvs in ~/Library/Caches/pypoetry/virtualenvs on my mac and an envs.toml but it's empty.
[23:35:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:35:51] <SnoopJ> newdimension, oh, it looks like `poetry.utils.env.EnvManager.generate_env_name()` is deterministic, so it only has to keep track of the virtualenvs.path (where all the virtualenvs it knows about live, by default ~/.cache/pypoetry/virtualenvs), and it works out which one of those to use based on information it gets from the CWD
[23:36:26] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[23:37:07] <SnoopJ> https://github.com/python-poetry/poetry/blob/master/poetry/utils/env.py#L1071-L1078
[23:37:31] <newdimension> oh I see. So folder rename definitely throws it off
[23:37:35] <newdimension> Thank you for finding this!
[23:37:53] <SnoopJ> yep, that will change the hash of the CWD and therefore the place it looks for the venv
[23:38:05] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[23:38:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:38:33] <SnoopJ> doing `poetry env use` should resolve the problem if you really wanted to re-use the env, but probably just re-create it anyway :)
[23:38:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:39:02] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:39:06] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[23:39:39] *** Joins: wyclif (~wyclif@user/wyclif)
[23:40:26] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[23:40:41] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:40:46] <p-i-> I had to reluctantly let go of poetry as it couldn't integrate custom builds on packages. Nice tech tho'. `poetry show --tree` mmmm
[23:41:03] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:41:05] <p-i-> newdimension: `poetry config settings.virtualenvs.in-project true` if you want the .venv in your project root
[23:41:13] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Client Quit)
[23:41:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:43:31] <mat001> hmm. didn't know you can assign a boolean expression to a variable like: a = b == c
[23:43:49] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:43:54] <grym> mat001: begging for the ol' optical misparse, there
[23:44:02] <mat001> (the result of the expresison)
[23:44:18] <mat001> grys: what? :-)
[23:44:26] <mat001> grym: ^^
[23:44:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:44:41] *** Quits: dangrenier83 (~pi@user/dangrenier83) (Ping timeout: 252 seconds)
[23:44:45] <grym> it's valid, it's just confusing
[23:44:48] <Wooble> mat001: you can assign any expression to a variable.
[23:44:55] <grym> a = (b == c) is less confusing
[23:45:07] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:09] *** Joins: wyclif (~wyclif@user/wyclif)
[23:45:23] <mat001> grym: yeah. I'm converting a line of code from Swift and Js to Python and both Swift and Js use this expression. I tried in Py and it surprisingly works. But is it Pythonic?
[23:45:23] <grym> you can also a==b==c
[23:45:39] <grym> mat001: i would add defensive parens in any language
[23:45:45] <mat001> gotcha
[23:46:07] *** Quits: greedom (~greedom@2001:16b8:2e37:5d00:5c7b:cf5f:5ee:b44a) (Remote host closed the connection)
[23:46:23] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[23:47:29] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 264 seconds)
[23:47:36] *** Joins: elena_re (~elena@31.173.82.95)
[23:47:39] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[23:47:44] <arinov> elena_re: hi
[23:47:54] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[23:47:55] <p-i-> You can also a = b = c ;)
[23:47:55] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:48:28] <p-i-> and a = b:=c etc etc
[23:49:23] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:49:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:50:16] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:50:40] *** Joins: wyclif (~wyclif@user/wyclif)
[23:51:03] <SnoopJ> mat001, I would also add parentheses to that expression, although it might be a little more clear with more meaningful names
[23:51:08] *** Joins: Samian (~Sami@user/samian)
[23:52:10] *** Quits: RougeR (~rougex250@user/rouger) (Ping timeout: 268 seconds)
[23:52:35] <matsaman> more meaningful than letters? =D
[23:53:29] <Samian> ammar2  I remember trying cffi around 2 years ago. I h8ed it lol..  I'm trying this out: https://github.com/Lnk2past/copperhead
[23:55:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:56:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:58:02] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[23:59:04] *** Joins: fofoni_ (~fofoni@user/fofoni)
[23:59:54] <SnoopJ> note that the library itself is telling you it's not recommended for production use
