[00:03:56] *** Joins: netsensei (~netsensei@dD576E6B4.access.telenet.be)
[00:15:11] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100a) (Quit: ZNC 1.8.2 - https://znc.in)
[00:20:06] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[00:22:57] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[00:25:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:27:35] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Client Quit)
[00:28:07] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[00:28:22] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Client Quit)
[00:28:52] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[00:29:40] *** Joins: Ergo^ (~ergo@91.238.59.144)
[00:29:57] *** Joins: independent56 (~independe@163.172.90.118)
[00:30:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:32:59] *** Quits: zwr (~zwr@2804:d45:b966:fb00:9de4:f51d:3233:734a) (Remote host closed the connection)
[00:34:47] *** Joins: pi1 (~pi@177.223.162.41)
[00:35:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:35:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:35:30] *** Joins: wroathe (~wroathe@user/wroathe)
[00:35:40] *** Quits: netsensei (~netsensei@dD576E6B4.access.telenet.be) (Ping timeout: 268 seconds)
[00:36:13] *** whaley is now known as porksoda
[00:37:32] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[00:38:26] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Read error: Connection reset by peer)
[00:40:49] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:5dd3:9b92:6096:9f9e)
[00:41:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:43:14] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Quit: Leaving)
[00:43:45] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[00:49:33] *** Joins: k0ta (~k0ta@103.108.94.37)
[00:50:50] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:51:16] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[01:12:17] *** Joins: independent_ (~independe@163.172.90.118)
[01:12:28] *** Quits: independent56 (~independe@163.172.90.118) (Read error: Connection reset by peer)
[01:15:32] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[01:18:13] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 268 seconds)
[01:22:49] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[01:28:19] *** Quits: uu (~ride@user/daveed) (Ping timeout: 252 seconds)
[01:29:01] *** Quits: pi1 (~pi@177.223.162.41) (Ping timeout: 252 seconds)
[01:33:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:34:09] *** Quits: independent_ (~independe@163.172.90.118) (Ping timeout: 265 seconds)
[01:35:33] *** Joins: fikran (~fikran@user/fikran)
[01:48:13] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:51:53] *** Joins: Steeve (~steve@user/steeve)
[01:54:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[01:54:49] *** Quits: dalan623 (~dalan@14-201-78-173.static.tpgi.com.au) (Quit: dalan623)
[01:55:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[01:55:31] *** Parts: bmojsej[m]1 (~bmojsejmi@2001:470:69fc:105::f812) ()
[01:55:34] *** Quits: gun1x (~gunix@cyberghost-baratiei.mediasat.ro) (Quit: WeeChat 3.2)
[01:55:45] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[02:06:02] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[02:07:34] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[02:14:12] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:15:22] *** Joins: LoRez (~lorez@user/lorez)
[02:16:51] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[02:22:04] <LoRez> I'm trying to make use of https://github.com/adamwalach/go-openvpn in go 1.17 (as a complete go-noob), and running into some issues I assume are caused from it being an old code base.   What should I be doing to update it?  I can't seem to google up a "bringing your old golang code into 2021" doc
[02:23:33] <b0nn> What issues are you experiencing?
[02:23:36] <b0nn> Modules?
[02:24:12] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[02:24:25] <b0nn> You can fork it and add a go.mod into your repo (and use a replace directive in go.mod to use yours not theirs)
[02:24:37] <LoRez> trying to build something pointing at it gives me a 'no required module provides package github.com/Sirupsen/logrus' which is one of its deps.
[02:24:51] <b0nn> Other than that, Go is /supposed/ to be backward compatible
[02:25:09] <b0nn> Oh, they renamed that because of the Titlecase
[02:25:13] <b0nn> much drama
[02:25:49] <b0nn> I'm not sure of the correct fix, but it's a matter of using lowercase in the package name
[02:27:05] <LoRez> yeah, that seems to have gotten me further.  silly titlecase.  what's funner is that it doesn't matter on my mac's filesystem
[02:27:37] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[02:28:17] <LoRez> should I be version controlling go.sum?
[02:29:10] <b0nn> go.sum shows what version of the libs that your build was using
[02:29:30] <b0nn> There's some debate on whether to version control it or not
[02:29:31] <Sam> LoRez: yes
[02:31:13] <Sam> It is also a security mechanism that ensures deps have not been tampered with. I haven't heard any reason why you shouldn't commit it since very early on and the Go team says to commit it, if there's still debate that's news to me.
[02:33:23] <b0nn> I may be out of the loop - I had thought it was merely a documentation artifact, in that it's not actually used in the build process
[02:33:48] <b0nn> But, you're right in that it can be used to determine when a bug from an upstream lib was introduced
[02:35:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[02:36:01] *** Quits: avoozl (~avoozl@escaflowne.hro.nl) (Ping timeout: 265 seconds)
[02:37:46] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[02:38:44] <dg> if you're dealing with open source code the sumdb now will have checksums that still provide the tamper evidence without you checking in go.sum
[02:39:15] <dg> but really you want to check it in and not think about it
[02:40:00] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:42:48] <Sam> b0nn: it's used when downloading deps, pre-build time
[02:43:30] <b0nn> hmm, that suggests that deps are pinned to what's in go.sum
[02:43:53] *** Joins: pi1 (~pi@177.223.162.41)
[02:44:27] <Sam> no, they're pinned based on go.mod, you can have multiple versions in go.sum and if those versions have to be downloaded it will be used to verify them
[02:45:10] *** Quits: yelnah (~felix@14-200-16-147.tpgi.com.au) (Ping timeout: 268 seconds)
[02:45:16] <Tv_> go.sum is TOFU security, attacker can't change what has already been seen
[02:45:28] <Tv_> it performs no other role in the module management, everything else is go.mod
[02:46:26] <dg> https://go.googlesource.com/proposal/+/master/design/25530-sumdb.md has a nice overview in the background section
[02:46:50] *** Joins: yelnah (~felix@193-119-68-78.tpgi.com.au)
[02:50:58] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[02:52:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[02:54:35] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[03:02:48] *** Joins: moto (~moto@user/moto)
[03:04:52] *** Joins: klil (~klil@213.246.26.188)
[03:07:38] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:08:19] *** Quits: klil (~klil@213.246.26.188) (Quit: Leaving)
[03:08:36] *** Joins: wroathe (~wroathe@c-73-24-27-54.hsd1.mn.comcast.net)
[03:08:36] *** Quits: wroathe (~wroathe@c-73-24-27-54.hsd1.mn.comcast.net) (Changing host)
[03:08:36] *** Joins: wroathe (~wroathe@user/wroathe)
[03:10:14] *** Quits: kulak (~kulak@user/kulak) (Ping timeout: 268 seconds)
[03:10:43] *** dfch is now known as yandere_dfch
[03:14:05] *** yandere_dfch is now known as dfch
[03:16:03] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2.1)
[03:16:37] *** Quits: pi1 (~pi@177.223.162.41) (Ping timeout: 268 seconds)
[03:24:36] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:26:10] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 252 seconds)
[03:33:03] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Remote host closed the connection)
[03:34:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:36:22] *** Joins: marlinc (~marlinc@user/marlinc)
[03:36:31] *** Joins: sgc (~sgc@gateway/tor-sasl/sgc)
[03:40:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[03:42:46] *** Joins: wroathe (~wroathe@user/wroathe)
[03:43:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:44:55] *** Joins: fikran (~fikran@user/fikran)
[03:45:34] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[03:47:02] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[03:49:00] *** Joins: jpw (~jpw@user/jpw)
[03:53:30] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[03:54:00] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:54:42] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[03:55:09] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[03:56:58] *** Joins: kulak (~kulak@user/kulak)
[03:57:04] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[04:02:36] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[04:11:57] *** Quits: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Killed (copper.libera.chat (Nickname regained by services)))
[04:12:06] *** Joins: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net)
[04:13:09] *** Quits: sgc (~sgc@gateway/tor-sasl/sgc) (Quit: sgc)
[04:23:54] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[04:25:16] *** Joins: jkl (~jkl@user/jkl)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:10] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 240 seconds)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:50:15] *** Joins: moto (~moto@user/moto)
[04:52:23] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[04:56:13] *** Quits: moto (~moto@user/moto) (Ping timeout: 252 seconds)
[05:08:17] *** Joins: pi1 (~pi@177.223.162.41)
[05:09:59] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1001)
[05:18:00] *** Joins: moto (~moto@user/moto)
[05:23:08] *** Joins: avoozl (~avoozl@escaflowne.hro.nl)
[05:36:16] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:5dd3:9b92:6096:9f9e) (Read error: Connection reset by peer)
[05:37:35] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:d0fe:1d93:83fe:3997)
[05:43:03] *** Joins: frost (~frost@59.71.242.61)
[05:46:31] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:46:45] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:52:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:54:25] *** Joins: fikran (~fikran@user/fikran)
[05:54:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[05:54:55] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:55:16] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[05:55:32] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:57:51] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[05:59:44] *** Joins: neurocyte4 (~neurocyte@IP-185189140114.dynamic.medianet-world.de)
[05:59:44] *** Quits: neurocyte4 (~neurocyte@IP-185189140114.dynamic.medianet-world.de) (Changing host)
[05:59:44] *** Joins: neurocyte4 (~neurocyte@user/neurocyte)
[06:00:47] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[06:01:16] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 268 seconds)
[06:01:53] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[06:01:53] *** neurocyte4 is now known as neurocyte
[06:06:46] *** Joins: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com)
[06:09:46] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1001) (Ping timeout: 260 seconds)
[06:11:44] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:16:59] *** Quits: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:18:50] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[06:20:20] *** Joins: gggp (~textual@60.10.23.160)
[06:21:06] *** Joins: k0ta (~k0ta@103.108.94.37)
[06:25:48] *** Quits: iluxa (~iliaf@user/iluxa) (Ping timeout: 260 seconds)
[06:26:14] *** Joins: iliaf (~iliaf@user/iluxa)
[06:29:08] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:29:39] *** Joins: popey2 (~popey@ubuntu/member/popey)
[06:29:54] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:24] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:30:49] *** Quits: popey (~popey@ubuntu/member/popey) (Ping timeout: 252 seconds)
[06:30:49] *** popey2 is now known as popey
[06:31:24] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Ping timeout: 265 seconds)
[06:32:30] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[06:41:56] *** Joins: gggp (~textual@60.10.194.43)
[06:43:12] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[06:52:39] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:55:06] *** Joins: ranu (~ranu@2804:14c:6583:6e67::b5ac)
[07:07:10] *** Quits: KekSi (~KekSi@dynamic-077-012-086-043.77.12.pool.telefonica.de) (Ping timeout: 260 seconds)
[07:09:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[07:11:13] *** Joins: KekSi (~KekSi@dynamic-077-012-148-087.77.12.pool.telefonica.de)
[07:11:37] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[07:27:19] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:32:08] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:38:35] *** Joins: gggp (~textual@111.63.14.118)
[07:43:38] *** Quits: gggp (~textual@111.63.14.118) (Ping timeout: 268 seconds)
[07:53:01] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[07:54:23] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[07:55:21] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[07:58:44] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:59:02] *** Quits: _\_ (~o@user/ding) (Quit: ___)
[07:59:44] *** Joins: _\_ (~o@user/ding)
[08:00:15] *** Quits: _\_ (~o@user/ding) (Remote host closed the connection)
[08:00:50] *** Joins: _\_ (~o@user/ding)
[08:01:00] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:01:50] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:02:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[08:03:54] *** Joins: fikran (~fikran@user/fikran)
[08:06:36] *** Quits: _\_ (~o@user/ding) (Quit: ___)
[08:07:11] *** Joins: _\_ (~o@user/ding)
[08:11:45] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[08:13:51] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[08:16:52] *** Joins: fdan (~fdan@192.146.154.3)
[08:18:45] *** Joins: gggp (~textual@60.10.194.42)
[08:23:01] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[08:34:10] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[08:39:59] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[08:42:32] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:43:18] *** Joins: karstensrage (~karstensr@user/karstensrage)
[08:43:23] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:43:41] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[08:45:42] *** Quits: LiftLeft (~LiftLeft@172.98.80.53) (Ping timeout: 268 seconds)
[08:49:31] *** Parts: karstensrage (~karstensr@user/karstensrage) (Leaving)
[08:52:56] *** Joins: Atque (~Atque@user/atque)
[08:56:17] *** Joins: erikh (~erikh@client-67-58-230-177.consolidated.net)
[08:56:41] <erikh> hello. Does anyone have a good recommendation for parser generators that aren't golang yacc or antlr?
[08:57:34] <erikh> ideally something straightforward enough that, after initial authoring, can be maintained by someone who doesn't know parser generators.
[08:58:23] <b0nn> The interpreter book writes a parerser, tokeniser, etc from scratch, maybe give that the once over?
[08:58:31] <b0nn> parser*
[08:59:05] <b0nn> But, AIUI Yacc is so ubiquitous because it's making things a LOT easier
[08:59:54] *** Joins: gggp (~textual@111.63.44.4)
[09:00:04] <seebs> Having written parsers directly and used YACC, I actually prefer just writing them in most cases. Yacc is a pain to reason about and can be a nightmare to debug.
[09:00:37] <seebs> I had a calculator-like thing in it once, which I believe worked at some point, but then a few years later I went to look at it and discovered that it couldn't compile at all due to conflicts and I couldn't figure out what they were or how to fix them.
[09:00:49] <seebs> Admittedly, that was a long time ago, but honestly it just wasn't really all that rewarding.
[09:01:06] <seebs> I sort of dislike pigeon/peg, having used it at all.
[09:05:54] <erikh> seebs: sorry, catching up now
[09:06:38] <erikh> yeah, I've done my fair share too w/ yacc in the way back; I agree with you
[09:06:55] <erikh> a hand parser is hard to port and we really want that semi-portability if possible
[09:07:02] *** Quits: gggp (~textual@111.63.44.4) (Ping timeout: 265 seconds)
[09:07:05] <erikh> and antlr is a lot of java
[09:07:26] *** ninjin- is now known as ninjin
[09:07:52] <erikh> (nothing against java other than its bloated packaging mechanics)
[09:07:53] <seebs> ... port?
[09:08:01] <erikh> it's for a firewall ruleset
[09:08:09] <erikh> that may require multiple interpreters for it
[09:08:16] <seebs> ohhh, i see. yeah, that could make it harder. hmm.
[09:08:41] <erikh> I have a hand parser for it in javascript (long story here)
[09:08:51] <seebs> although actually... i'm gonna say that's a stronger argument for hand-coding, just because i would have even LESS confidence in porting problems related to a parser generator that's targeting multiple platforms or languages.
[09:08:52] <erikh> which is fine and dandy but now we need a golang version
[09:09:01] <erikh> and a rust or C++ version is almost definitely down the pipe
[09:09:36] <b0nn> zig!
[09:09:41] <seebs> i gotta say, if i were doing a firewall rule thing, and someone told me i absolutely had to have more than one parser for it, i would probably react with violence
[09:09:55] <seebs> multiple parsers = multiple interpretations with subtly different bug behaviors
[09:10:05] <erikh> that's ... why we want the parser generator
[09:10:17] <seebs> this is why the fuzziness of javascript results in serious attacks where one thing interprets data differently from another
[09:10:31] <seebs> the generated parsers will have at least the same problems and possibly worse problems
[09:10:38] <seebs> and also will be code that's completely impenetrable to human readers
[09:11:04] <seebs> i've done enough "oops updated the parser generator, now i have two thousand lines of diffs that are self-evidently wrong but actually fix a crucial security hole" to be wary
[09:11:35] <seebs> like, i feel at this point like maybe you should two-phase it: a *parser* which translates to a Much Much Simpler Thing, and then read *those* in multiple languages.
[09:11:42] <erikh> I don't need an education on parsers
[09:12:24] <erikh> That's what I literally did for docker build :)
[09:12:26] <seebs> 'k. anyway, there's nothing i've ever seen for parser generators that i would confidently expect to be robustly compatible across target languages. maybe something's out there, but i haven't seen it.
[09:12:43] <erikh> it boils down to a lisp
[09:12:52] <seebs> that is the usual idiom yeah
[09:13:03] <erikh> yeah I did that with a hand parser in 2013
[09:13:07] <erikh> most of my yacc is way older
[09:13:17] <erikh> anyway, thanks for the help.
[09:13:37] <seebs> good luck, and if you end up with cool war stories, be sure to blog about them so everyone else can learn from them too. :)
[09:13:51] <erikh> just read the docker source I guess?
[09:14:12] *** Parts: wroathe (~wroathe@user/wroathe) ()
[09:14:40] <erikh> I don't know what buildkit does, but a lot of it started against the 1.3 parser I wrote
[09:15:19] <erikh> anyway, parser generators are the right tool for this case for what we need; if someone has a non-yacc, non-antlr recommendation they like and have used, I'd really love to hear about it. Just a link will do.
[09:19:18] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:19:37] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[09:22:06] *** Joins: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[09:25:43] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:25:50] *** Quits: pjs (~pjs@user/pjs) (Read error: Connection reset by peer)
[09:31:05] *** Joins: pjs (~pjs@user/pjs)
[09:32:09] *** Joins: fef (~thedawn@user/thedawn)
[09:32:35] *** Joins: gggp (~textual@114.245.105.139)
[09:33:49] *** Quits: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4) (Quit: WeeChat 3.2)
[09:41:23] *** Joins: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4)
[09:43:44] *** Quits: Compy_ (~compy@user/compy) (Quit: Going offline, see ya! (www.adiirc.com))
[09:51:52] *** Joins: shka (~herr@109.231.62.239)
[09:52:55] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[10:00:19] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[10:00:55] *** Joins: normen (~normen@p200300d7173dc900604093148f82996e.dip0.t-ipconnect.de)
[10:02:18] *** Quits: gggp (~textual@114.245.105.139) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:09:13] *** Quits: normen (~normen@p200300d7173dc900604093148f82996e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:11:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:13:15] *** Joins: fikran (~fikran@user/fikran)
[10:15:59] *** Joins: gettogeek (~user@c-67-171-188-88.hsd1.or.comcast.net)
[10:16:24] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[10:16:36] *** Quits: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4) (Remote host closed the connection)
[10:16:57] *** Quits: gettogeek (~user@c-67-171-188-88.hsd1.or.comcast.net) (Remote host closed the connection)
[10:19:25] *** Parts: erikh (~erikh@client-67-58-230-177.consolidated.net) (WeeChat 3.0.1)
[10:20:52] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[10:20:57] *** Joins: gggp (~textual@111.63.14.118)
[10:24:01] *** Joins: Rockpods (~Rockpods@234.sub-174-255-0.myvzw.com)
[10:26:47] *** Quits: gggp (~textual@111.63.14.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:29:09] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:30:19] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[10:33:05] *** Joins: gggp (~textual@111.63.44.4)
[10:35:53] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[10:40:03] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[10:40:08] *** Joins: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de)
[10:40:19] *** Quits: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[10:43:04] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:44:06] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[10:49:14] *** Quits: marlinc (~marlinc@user/marlinc) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[10:50:03] *** Joins: normen (~normen@p200300d7173dc900604093148f82996e.dip0.t-ipconnect.de)
[10:51:28] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:57:40] *** Joins: marlinc (~marlinc@user/marlinc)
[11:00:04] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[11:04:30] *** Quits: gggp (~textual@111.63.44.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:13:31] *** Quits: Rockpods (~Rockpods@234.sub-174-255-0.myvzw.com) (Remote host closed the connection)
[11:13:59] *** Joins: Rockpods (~Rockpods@234.sub-174-255-0.myvzw.com)
[11:13:59] *** Quits: Rockpods (~Rockpods@234.sub-174-255-0.myvzw.com) (Read error: Connection reset by peer)
[11:18:08] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[11:19:28] *** Quits: normen (~normen@p200300d7173dc900604093148f82996e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:28:15] *** Joins: gggp (~textual@111.63.14.118)
[11:28:21] *** Quits: gggp (~textual@111.63.14.118) (Client Quit)
[11:29:36] *** Joins: mrig (~mrig@user/mrig)
[11:29:52] *** Joins: fdan (~fdan@192.146.154.3)
[11:32:40] *** Joins: netsensei (~netsensei@dD576E6B4.access.telenet.be)
[11:54:44] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[11:54:57] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[11:57:19] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[12:06:14] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[12:09:15] *** Quits: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de) (Ping timeout: 265 seconds)
[12:10:42] *** Joins: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de)
[12:13:25] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[12:20:05] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[12:20:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:22:37] *** Joins: fikran (~fikran@user/fikran)
[12:23:50] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[12:26:08] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:26:30] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[12:34:40] *** Quits: acohn (acohn@wikipedia/alex-cohn) (Quit: TTFN)
[12:44:21] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:51:29] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[13:03:19] *** Joins: fdan (~fdan@192.146.154.3)
[13:04:37] *** Quits: pi1 (~pi@177.223.162.41) (Ping timeout: 252 seconds)
[13:05:32] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[13:05:40] *** Joins: ziofork5 (~ziofork@fr.worn.eu)
[13:06:20] *** Quits: yelnah (~felix@193-119-68-78.tpgi.com.au) (Quit: ZNC 1.8.2 - https://znc.in)
[13:06:33] *** Joins: yelnah (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7)
[13:06:54] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[13:07:23] *** Joins: monoxane3 (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[13:07:55] *** Quits: ziofork (~ziofork@fr.worn.eu) (Ping timeout: 252 seconds)
[13:07:55] *** ziofork5 is now known as ziofork
[13:09:03] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[13:09:14] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Ping timeout: 268 seconds)
[13:09:14] *** monoxane3 is now known as monoxane
[13:11:41] *** Joins: gggp (~textual@111.63.14.118)
[13:14:19] *** Quits: gggp (~textual@111.63.14.118) (Client Quit)
[13:17:26] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:20:23] *** Quits: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de) (Read error: Connection reset by peer)
[13:20:35] *** Joins: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de)
[13:28:38] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[13:35:26] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 260 seconds)
[13:39:06] *** Quits: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de) (Read error: Connection reset by peer)
[13:39:22] *** Joins: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de)
[13:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[13:55:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:00:50] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Ping timeout: 252 seconds)
[14:05:56] *** Joins: k0ta (~k0ta@103.108.94.37)
[14:07:11] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[14:10:48] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[14:11:40] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:18:27] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[14:20:25] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[14:20:44] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[14:23:49] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[14:28:02] *** Quits: Shimmy (~Shimmy@user/shimmy) (Quit: The Lounge - https://thelounge.chat)
[14:30:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[14:32:00] *** Joins: fikran (~fikran@user/fikran)
[14:35:58] *** Joins: pi1 (~pi@177.223.162.41)
[14:39:55] *** Joins: gggp (~textual@111.63.44.4)
[14:40:03] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[14:43:24] *** Quits: pi1 (~pi@177.223.162.41) (Quit: WeeChat 2.8)
[14:43:28] *** Quits: gggp (~textual@111.63.44.4) (Client Quit)
[14:43:48] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:b171:e915:3b5e:e085)
[15:01:41] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[15:02:07] *** Joins: thing (~thing@user/thing)
[15:02:44] *** Quits: ranu (~ranu@2804:14c:6583:6e67::b5ac) (Quit: Ping timeout (120 seconds))
[15:07:11] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[15:14:25] *** Quits: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de) (Ping timeout: 252 seconds)
[15:14:51] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 265 seconds)
[15:17:04] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:27:03] *** Joins: cskr (~cskr@49.207.218.133)
[15:28:06] *** Quits: k0ta (~k0ta@103.108.94.37) (Quit: leaving)
[15:28:12] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[15:28:19] *** Joins: k0ta (~k0ta@103.108.94.37)
[15:28:50] <Ginja> hm. why is there a whitespace difference between gofmt of `"field": map[x]y{ \n "some": "key", \n }` and `"field": map[x]y{ \n /* a comment */ \n }`?
[15:29:11] <Ginja> https://play.golang.org/p/2sYPNI6ooWy
[15:29:32] *** Quits: binkers (~binkers@user/binkers) (Quit: ZNC - https://znc.in)
[15:30:19] *** Joins: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de)
[15:32:11] <b0nn> oh, cool
[15:38:51] *** Ginja is now known as GinjaNinja32
[15:39:57] *** Joins: Everything (~Everythin@37.115.210.35)
[15:41:47] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[15:42:19] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[15:48:07] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[15:51:16] *** Joins: binkers (~binkers@user/binkers)
[15:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[15:54:54] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 268 seconds)
[15:55:11] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[15:59:29] *** Parts: basado[m] (~basadomid@2001:470:69fc:105::f752) ()
[16:02:05] *** Joins: mrig (~mrig@user/mrig)
[16:02:49] *** Quits: cskr (~cskr@49.207.218.133) (Ping timeout: 252 seconds)
[16:03:12] *** Joins: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net)
[16:04:23] *** Joins: cskr (~cskr@49.207.218.133)
[16:04:50] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[16:05:45] <gggpkm> could I add cpp repo as dependency in go.mod ?
[16:08:16] <bookworm> no
[16:11:04] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[16:13:03] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[16:13:22] *** Joins: thing (~thing@user/thing)
[16:13:28] *** Joins: X-Scale` (~ARM@92.250.99.192)
[16:16:29] *** Quits: X-Scale (~ARM@46.50.0.45) (Ping timeout: 268 seconds)
[16:16:29] *** X-Scale` is now known as X-Scale
[16:17:44] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:19:16] *** Quits: cskr (~cskr@49.207.218.133) (Quit: Leaving)
[16:20:15] *** Joins: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[16:23:45] *** porksoda is now known as whaley
[16:24:37] *** Quits: nekron (~nekron@noordsee.de) (Remote host closed the connection)
[16:25:21] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[16:25:56] *** Joins: nekron (~nekron@noordsee.de)
[16:27:43] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[16:27:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:36:41] *** Joins: Torr (~Torr@user/torr)
[16:38:11] *** Joins: src (~src@user/src)
[16:39:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:40:08] *** Quits: shtirlic (~shtirlic@95-55-26-114.dynamic.avangarddsl.ru) (Remote host closed the connection)
[16:41:22] *** Joins: fikran (~fikran@user/fikran)
[17:00:27] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2.1)
[17:04:11] *** Joins: holgersson (~quassel@user/holgersson)
[17:06:17] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:10:54] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:19:53] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:9408:c68e:7830:f1de) (Read error: Connection reset by peer)
[17:20:30] *** Quits: martin_ (nobody@188.113.85.137) (Ping timeout: 250 seconds)
[17:21:57] <bloony> can I turn of test cash for a _test file?
[17:24:13] <sztanpet> why, if the test cache is "invalid" meaning it didnt clear even after modifying the test, thats a bug
[17:24:36] <sztanpet> if it isnt, it just makes your life easier, if you dont want any caching theres always GOCACHE=off
[17:25:40] <sztanpet> theres also -count=1 for the tests you dont want caching for
[17:27:41] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[17:30:18] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Quit: dalan6236)
[17:30:51] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[17:31:22] *** Quits: kaleido (~adam@user/kaleido) (Ping timeout: 245 seconds)
[17:34:33] *** Joins: kaleido (~adam@havokworks.io)
[17:34:33] *** Quits: kaleido (~adam@havokworks.io) (Changing host)
[17:34:33] *** Joins: kaleido (~adam@user/kaleido)
[17:44:04] *** Joins: johsj (~johsj@proxy01.se.axis.com)
[17:45:17] *** Quits: hikhvar796073809 (~thelounge@x4db4697e.dyn.telefonica.de) (Ping timeout: 268 seconds)
[17:45:49] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:24aa:212:ed47:a149)
[17:46:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5d47:2931:8f39:a796)
[17:51:32] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:52:21] *** Joins: shtirlic (~shtirlic@95-55-26-114.dynamic.avangarddsl.ru)
[17:54:22] *** Joins: badmap (~badmap@user/badmap)
[17:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:54:43] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[17:54:46] <bloony> ah right.. well.. I don't think the caching is a problem for my issue..
[17:55:16] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[17:56:05] <badmap> Is it idiomatic to encapsulate a struct and provide a New() constructor to enforce existence of each struct field upon creation?
[17:56:25] <Sam> yes, it's a common pattern
[17:57:49] <badmap> Sam: thanks - I've just come back to Go from Rust, recalling what is idiomatic in Go vs what I'm carrying over from Rust is a challenge at the moment :)
[17:58:13] <bloony> when running 'go test -v $(go list ./...)' and go list returns multiple locations with _test files.. will they be executed in paralell?
[17:58:33] <Sam> oh yah, I do that all the time when I switch between Go and Rust projects :)
[17:59:31] *** Joins: cskr (~cskr@49.207.218.133)
[18:04:24] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:b171:e915:3b5e:e085) (Ping timeout: 268 seconds)
[18:04:28] *** Quits: thing (~thing@user/thing) (Quit: thing)
[18:05:19] *** Joins: thing (~thing@user/thing)
[18:12:35] *** Joins: martin_ (nobody@188.113.85.137)
[18:16:01] <badmap> Sam: my biggest problem is my fingers incessantly adding semi-colons to the end of each line, though!
[18:17:47] <nitrix> You should be able to type them in Go as well and have gofmt remove them for you.
[18:18:43] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5d47:2931:8f39:a796) (Ping timeout: 252 seconds)
[18:21:17] <nitrix> Grammatically the language allows for them; lines not ending with braces, a comma or semicolon are treated as if they had a semicolon.
[18:21:43] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100a)
[18:32:40] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[18:33:29] <huf> is there some way to break a long expression to multiple lines between the operators, but so the operators go on the beginning of the lines?
[18:33:35] <huf> some way to stop it from inserting that ;
[18:34:00] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:35:53] <nitrix> You're supposed to be able to break lines after a comma, opening (, { or [, also binary operators.
[18:36:23] <nitrix> Yep. https://play.golang.org/p/FYTg99Ez5fs
[18:36:40] <huf> sure, but i meant the other way
[18:36:52] <huf> with +1 being on the second line
[18:37:21] <huf> ah, looks like nope
[18:37:25] <nitrix> No, the operator has to be on the first line, that's how the parser knows that there's continuity.
[18:37:57] <nitrix> Otherwise it'd look like x := 42 on its own and require lookahead of the next line.
[18:38:24] <huf> yeah, or you'd have to actually have ;
[18:38:32] <huf> or some terrible \ hackery
[18:38:49] <huf> that's go in a different trouserleg of time
[18:39:32] <nitrix> Yeah, or some accumulator strategy, retroactively patching stuff and deferring the processing of the bodies later on. Probably doesn't play too nice with error reporting and all.
[18:39:44] <huf> no, that sounds terrible :D
[18:41:25] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:48:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:50:45] *** Joins: fikran (~fikran@user/fikran)
[18:54:37] *** Quits: johsj (~johsj@proxy01.se.axis.com) (Quit: Client closed)
[18:58:22] *** Quits: frost (~frost@59.71.242.61) (Ping timeout: 260 seconds)
[19:02:05] *** Joins: rockorager (root@2600:3c03::f03c:92ff:feed:820d)
[19:04:26] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 265 seconds)
[19:05:06] *** Joins: mrig (~mrig@user/mrig)
[19:08:18] *** Quits: cskr (~cskr@49.207.218.133) (Ping timeout: 265 seconds)
[19:14:57] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:175:66c9:2f1e:b09e)
[19:18:13] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:d0fe:1d93:83fe:3997) (Ping timeout: 252 seconds)
[19:19:22] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 260 seconds)
[19:19:46] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[19:21:07] *** Joins: mrig (~mrig@user/mrig)
[19:32:51] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:34:26] *** Quits: src (~src@user/src) (Ping timeout: 268 seconds)
[19:37:24] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[19:39:26] *** Joins: Atque (~Atque@user/atque)
[19:50:50] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Quit: mikoto-chan)
[19:53:43] *** Joins: cskr (~cskr@49.207.218.133)
[19:55:18] *** Quits: netsensei (~netsensei@dD576E6B4.access.telenet.be) (Ping timeout: 260 seconds)
[19:56:53] *** Joins: Shimmy (~Shimmy@user/shimmy)
[19:56:55] *** Joins: LiftLeft (~LiftLeft@172.98.92.110)
[19:59:04] *** Quits: Shimmy (~Shimmy@user/shimmy) (Client Quit)
[19:59:39] *** Joins: Shimmy (~Shimmy@user/shimmy)
[20:10:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:18:55] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Quit: Leaving.)
[20:21:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[20:23:26] *** Joins: justache (~justache@user/justache)
[20:24:36] *** Quits: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[20:29:43] *** Joins: fdan (~fdan@192.146.154.3)
[20:31:21] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[20:32:56] *** Joins: Atque (~Atque@user/atque)
[20:33:52] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Read error: Connection reset by peer)
[20:35:24] *** Quits: tardisx_ (~tardisx@2400:8902::f03c:91ff:fe89:d107) (Quit: ciao)
[20:35:29] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 268 seconds)
[20:35:57] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[20:36:40] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:41:03] *** Joins: rockyh (~rockyh@user/rockyh)
[20:43:45] *** Joins: INeedAHandle (~INeedAHan@192.111.134.213)
[20:53:47] *** Joins: void09 (~void@revinin5minute.com)
[20:55:07] *** Joins: najatac (~najatac@d14-69-231-247.try.wideopenwest.com)
[20:58:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:58:29] *** Joins: kydd (~kydd@212.237.178.212)
[21:00:07] *** Joins: fikran (~fikran@user/fikran)
[21:01:01] <kydd> Hi! I come from Python, and I am trying to learn Go. If I have 2 arrays, what would be the most Go-like way to remove the latter from the former? eg `['a','a','b','c','c'] - ['a','b','c','c'] = ['a']`?
[21:01:51] <kydd> I realize Go is a very different beast than Python, but I cannot figure out how to do this cleanly and in few lines of code :/
[21:02:36] <OMGOMG> kydd: bit of an ambiguous question. is ['a','a','b','c','c'] - ['a','c'] = ['a', 'b', 'c']?
[21:03:12] <OMGOMG> what if you subtract ['c', 'a']?
[21:03:27] <kydd> OMGOMG: Yes.
[21:04:05] <kydd> OMGOMG: If you subtract ['a','a','b','c','c'] - ['c', 'a'] = ['a', 'b', 'c']
[21:04:22] <ikke> TypeError: unsupported operand type(s) for -: 'list' and 'list'
[21:04:32] <ikke> kydd: do you mean sets?
[21:04:48] <OMGOMG> obviously they're not sets
[21:04:56] <kydd> ikke: Not really, because I want to have an element multiple times in the array
[21:05:15] *** Quits: thing (~thing@user/thing) (Quit: thing)
[21:05:43] *** Joins: thing (~thing@user/thing)
[21:05:44] <ikke> right, but you cannot do that with lists in python either
[21:06:16] <kydd> ikke: I know. I was trying to use pseudo-code to demonstrate what I wanted. Sorry if it is confusing
[21:07:17] <siXy> kydd: The problem is that it's under-specified. If you do [a, b, c, a, b] - [a, b] do you end up with [a, b, c] or [c] or [c, b, a] ?
[21:08:52] <kydd> siXy: I for each element in the second list, I only want to remove a single element in the former. The sorting doesn't matter. In your scenario, both [a, b, c] and [c, b, a] would be correct
[21:09:37] <siXy> well, having two possible correct but different outcomes is why go doesn't have any built-in way of doing this.
[21:09:47] *** Quits: badmap (~badmap@user/badmap) (Quit: leaving)
[21:09:53] <siXy> You'll have to write your own - loop through slice A and remove elements if they match slice B.
[21:11:11] <since_> https://github.com/golang/go/wiki/SliceTricks
[21:11:16] <seebs> I mean, if I were doing that, I'd probably do it with maps, and do a map[key]int, add to it for items in first list, subtract for items in second list, dump back to list when done.
[21:12:45] <kydd> seebs: Yeah, that sounds good. The performance should also be better using a map I imagine
[21:13:35] <since_> depends
[21:13:48] <siXy> kydd: One important thing you need to unlearn is that loops over slices in go are *fast*. Trying to avoid looping over things is one of the most common serious mistakes python programmers make in Go.
[21:14:19] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:15:08] <since_> performance is always better if you think about how you are doing it instead of sloppily doing it the convenient high level python way
[21:15:51] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[21:16:06] <kydd> I see. But regardless, isn't it nested looping over 2 arrays?
[21:16:07] *** Joins: thing (~thing@user/thing)
[21:16:24] <since_> yup, in small cases (e.g. 1000 items) looping over a slice _can_ be faster than a map
[21:16:34] <since_> depends on what you are doing
[21:16:45] *** Joins: pi1 (~pi@177.223.162.41)
[21:17:35] <siXy> kydd: Yes, and? Again, loops are fast in Go (and C, etc). Unless you're talking really huge slices, it's unlikely to be an issue.
[21:17:54] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[21:19:13] *** Quits: cskr (~cskr@49.207.218.133) (Ping timeout: 252 seconds)
[21:22:07] *** Joins: cskr (~cskr@49.207.218.133)
[21:23:19] <kydd> Right
[21:24:18] <kydd> Thanks for the answers, siXy and since_ :)
[21:30:44] *** Joins: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4)
[21:30:50] *** Joins: edrocks (~Ed@user/edrocks)
[21:34:20] <A_Dragon> Ive used maps as lazy sets quite often
[21:34:23] <A_Dragon> it works very well
[21:34:48] <A_Dragon> https://github.com/A-UNDERSCORE-D/aoc2015/blob/main/util/set/set.go generic set
[21:35:16] <A_Dragon> https://github.com/A-UNDERSCORE-D/aoc2015/blob/main/util/set/string.go string set; set type generation: https://github.com/A-UNDERSCORE-D/aoc2015/blob/main/util/set/generateSetImpl/generate.go
[21:38:27] <seebs> if the lists are large, sorting them and then using a single-pass-up deletion algorithm will likely be faster, but "large" can be variable there.
[21:43:11] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[21:44:20] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:51:06] *** Joins: netsensei (~netsensei@dD576E6B4.access.telenet.be)
[21:51:20] *** Quits: j0be_ (~j0be@user/j0be) (Ping timeout: 250 seconds)
[21:52:04] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[21:52:10] *** Quits: cskr (~cskr@49.207.218.133) (Ping timeout: 268 seconds)
[21:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[21:54:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:57:06] *** Quits: arahael (~arahael@203.221.121.242) (Ping timeout: 268 seconds)
[22:05:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:07:10] *** Joins: j0be (~j0be@user/j0be)
[22:10:04] *** Joins: arahael (~arahael@118.211.178.62)
[22:10:17] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Quit: Goodbye~)
[22:26:28] *** Quits: shtirlic (~shtirlic@95-55-26-114.dynamic.avangarddsl.ru) (Ping timeout: 265 seconds)
[22:28:54] *** Quits: egy (egy@tilde.team) (Quit: ZNC 1.8.1 - https://znc.in)
[22:32:14] *** Joins: egy (egy@tilde.team)
[22:33:40] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[22:42:03] *** Joins: Atque (~Atque@user/atque)
[22:46:17] *** Quits: netsensei (~netsensei@dD576E6B4.access.telenet.be) (Ping timeout: 265 seconds)
[22:55:38] *** Joins: canurabus (~canurabus@ip-24-156-182-35.user.start.ca)
[23:00:45] *** Joins: src (~src@user/src)
[23:01:22] <canurabus> Hi all. I'm trying to get visual studio code setup with golang support but having some trouble. I don't have any go experience. When I open up a folder in my GOPATH with source files, I see the error "go list failed to return CompiledGoFiles...try building at the command line". If I run `go list` in the same directory in a shell I get "go: cannot find main module, .. to create a module...". This project doesn't use go 'modules'
[23:01:22] <canurabus> afaict. I think a GOPATH is set and there are some makefiles that call go build. Does anyone know how to resolve the VScode error (or what it means?) I just want some basic code completion support
[23:02:19] <ikke> canurabus: what version of go are you using? nowadays it's not really necessary anymore to have your projects in GOPATH
[23:03:31] *** Joins: shtirlic (~shtirlic@95-55-26-114.dynamic.avangarddsl.ru)
[23:03:40] <canurabus> go 1.17. I don't really understand the whole GOPATH thing, seems like there is some history (you needed GOPATH before but now you can use go modules?)
[23:04:05] *** Joins: locrian9_ (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[23:04:38] <canurabus> The project I have been given is a repo with a 'go' directory. There's a 'src' dir in there as well, and the build procedure looks like it sets GOPATH to $repo/src before running go build. I also do not see any 'go.mod' files so I don't think modules are being used
[23:06:15] <lofiguy> You need to locate file with main() if you want to run project
[23:06:16] *** Joins: pepee (~user@user/pepee)
[23:06:35] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 265 seconds)
[23:07:16] <lofiguy> for example if you create the new project in /go/src/github.com/canurabus/test/ - in the root of this dir you should have file with main() method
[23:07:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:07:29] <lofiguy> try creating something like this for testing
[23:07:43] <lofiguy> and inside file define package main
[23:07:59] <lofiguy> define func main() {}
[23:08:02] <canurabus> there are dozens of targets in the project, so many files with main() in them. I mean maybe this is the wrong forum, but I basically just want VS Code to be able to open up the $repo/go/src dir and give me code completion. It looks like VSCode tries to run `go list` but that fails
[23:08:28] <lofiguy> and after that type
[23:08:34] <lofiguy> $ go run file.go
[23:08:39] <lofiguy> And give us output
[23:09:33] *** Joins: fikran (~fikran@user/fikran)
[23:09:49] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:12:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:12:36] <canurabus> no output
[23:12:43] <canurabus> (no errors either)
[23:12:51] <lofiguy> great - no errors
[23:13:06] <lofiguy> so now go to the root of project you want to compile
[23:13:34] *** Quits: locrian9_ (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[23:13:51] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:14:05] <lofiguy> And if you type
[23:14:16] <lofiguy> $ go build .
[23:14:37] <lofiguy> and if the project doesn't contain go.mod you should get similar output
[23:14:39] <lofiguy> go: go.mod file not found in current directory or any parent directory; see 'go help modules'
[23:14:57] <canurabus> Yeah I see that error
[23:15:01] <lofiguy> Great
[23:15:04] <lofiguy> so type now
[23:15:08] <lofiguy> $ go mod init
[23:15:28] <lofiguy> You should get
[23:15:51] <lofiguy> go: creating new go.mod: module (...)
[23:15:59] <lofiguy> after that type
[23:16:03] <lofiguy> $ go build .
[23:16:06] <canurabus> I dont think Im supposed to be using modules in this project
[23:16:33] <lofiguy> Open source project? Any chance to URL?
[23:16:37] <canurabus> like I mentioned earlier, it uses makefiles that build multiple targets by initially setting GOPATH and then calling 'go build'
[23:16:53] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:16:53] <canurabus> No unfortunately its not open source, just a project I was 'given'
[23:17:01] <lofiguy> So maybe was designed for very old go version?
[23:17:13] <canurabus> And I'm just trying to set up a developer env but not making much progress
[23:17:15] <lofiguy> No instructions inside for build?
[23:17:30] <canurabus> Yeah could be, like I said I don't really know what the deal with GOPATH and go modules are
[23:17:33] <canurabus> nope
[23:18:05] <ikke> canurabus: go modules replaced the need for GOPATH
[23:18:09] *** Quits: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de) (Quit: The Lounge - https://thelounge.chat)
[23:18:16] <ikke> in the sense that your projects need to live there
[23:18:26] <lofiguy> Just try with go mod first
[23:18:33] <ikke> If your project uses go modules, you can ignore GOPATH
[23:18:38] <lofiguy> If crash - we'll see some output ;)
[23:18:46] <ikke> (go.{mod,sum} should be present)
[23:19:19] <lofiguy> https://go.dev/blog/migrating-to-go-modules
[23:19:23] *** Joins: oxphi (~jonny@71-146-114-111.lightspeed.rcsntx.sbcglobal.net)
[23:19:57] <oxphi> ..test?
[23:21:22] *** Joins: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de)
[23:21:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:21:35] *** Joins: califax (~califax@user/califx)
[23:22:35] <oxphi> I'm hoping to be able to have a go project outside of $GOPATH, but I can't get github go modules to work unless the project is in the GOPATH/src/ directory... is there a way to reconfigure that?
[23:23:11] <ikke> oxphi: does the project have a go.{mod,sum} file?
[23:30:27] *** Joins: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de)
[23:30:38] *** Quits: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de) (Changing host)
[23:30:38] *** Joins: menace (~someone@user/menace)
[23:30:56] <canurabus> Is there a way to disable go modules in 1.17? Does the GO111MODULES env var still get read?
[23:31:19] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[23:31:21] <ikke> yes
[23:31:57] <oxphi> ikke: my project does have a go.mod, I did go mod init, it did not solve the problem
[23:32:08] <oxphi> the other project also has a go.mod file
[23:32:16] <oxphi> (the one I'm trying to use)
[23:32:35] <ikke> Ok, and how are you trying to use it?
[23:34:49] <oxphi> ikke: I am adding a import line like "github.com/project/module" and then doing "go get <github.com/project/module>" and it gives errors
[23:35:46] <ikke> oxphi: is the project available at github.com/project/module?
[23:35:51] <ikke> And is it public?
[23:36:05] <oxphi> ikke: yes, specifically it is github.com/btcsuite/btcd
[23:36:06] <Sam> What are the errors?
[23:36:18] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 276 seconds)
[23:37:08] *** Joins: ninjin (~ninjin@user/ninjin)
[23:39:38] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[23:39:51] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[23:44:09] <oxphi> Sam: well, I can't seem to reproduce them now, and it is working outside of the GOPATH, so I'm not entirely sure now........
[23:44:37] <oxphi> okay my second question, where are modules gotten via "go get" installed locally? in the GOPATH ?
[23:44:53] *** Quits: pi1 (~pi@177.223.162.41) (Read error: Connection reset by peer)
[23:46:13] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[23:47:10] <fizzie> From go 1.15 onwards, you can relocate the module cache with the GOMODCACHE environment variable, but the default is GOPATH[0]/pkg/mod, where GOPATH[0] refers to the first directory in GOPATH.
[23:47:23] <lofiguy> %GO/okg/mod - here
[23:47:32] <lofiguy> */pkg/mod/
[23:51:23] *** Joins: Atque (~Atque@user/atque)
[23:54:44] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[23:54:57] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
