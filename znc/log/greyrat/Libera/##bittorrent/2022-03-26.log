[05:35:04] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[07:06:29] *** Joins: phc (~phc@user/phc)
[07:14:15] *** Quits: phc (~phc@user/phc) (Read error: Connection reset by peer)
[07:19:12] *** Joins: phc (~phc@user/phc)
[07:33:01] *** Quits: phc (~phc@user/phc) (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
[12:56:05] *** Quits: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[13:01:24] *** Joins: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net)
[16:08:11] *** Quits: The_8472 (~nobody@p200300def72d8f008302f5baed250c94.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[16:12:44] *** Joins: The_8472 (~nobody@p200300def7461c00a1ab346f78857a52.dip0.t-ipconnect.de)
[19:37:10] <TheSHADOW> I don't know that you could usefully produce a good vs malicious payload with the same SHA1 such that the good payload would pass scrutiny.. <- the attack you'd use would be to create a metadata with the same hash, SHA1 is weaker if you don't restrict the size, so you can add filler inside the metadata to match the hash.
[19:38:06] <TheSHADOW> It'd be completely swapping the torrent contents with something malicious, either subtly so or something more vicious.
[19:38:53] <TheSHADOW> This would only work with torrents spread via magnet.
[20:37:11] <The_8472> or you could attack a piece. let's say you have an .exe file, then you could swap out some prepared code segment with NOP fillers with one containing malicious code as long as you don't change alignment
[21:01:23] <TheSHADOW> Attacking a piece is much more difficult, because the data is of fixed length.
[21:38:42] <TheSHADOW> Mmm.
[21:39:07] <TheSHADOW> The problem is it'd be a rather ineffective attack in most circumstances.
[21:41:02] <TheSHADOW> Your goal would be to affect a large number of peers.  For a newly instated, popular torrent, it would already have ramped up with a lot of peers with the correct info and data.  A peer that downloaded a different info would wind up connecting to legit peers and downloading data that didn't fit its info.
[21:42:32] <TheSHADOW> I guess the prime target would be torrents that had more than a handful of peers but no seeds.  You'd have the time to grab the infohash and calculate an info that would match it, then distribute it.
[21:43:58] <TheSHADOW> Having a copy of the info would help you in generating your malicious version though, because of the way the attacks work and the way infos work.
[21:44:26] <TheSHADOW> And if the torrent was seedless grabbing a copy of that info might not be possible.
[21:45:59] <TheSHADOW> You could potentially attack a torrent that was just starting up, grabbing a copy of the info and then DoSing the seeds off the net until you'd had a chance to distribute your version; but if one other peer had also grabbed the info it would then distribute it to most, if not all, of the other peers.
[23:01:31] *** Quits: user_ (~a5y17lte1@user/a5y17lte123) (Remote host closed the connection)
[23:01:49] *** Joins: user_ (~a5y17lte1@user/a5y17lte123)
[23:32:58] <The_8472> Collision attacks only work if you control the creation anyway. So it's mostly against certification/trust-based models.
[23:33:13] <The_8472> otherwise you could spread malicious content directly
[23:50:17] *** Quits: T_X (~T_X@diktynna.open-mesh.org) (Read error: Connection reset by peer)
[23:50:46] *** Joins: T_X (~T_X@diktynna.open-mesh.org)
