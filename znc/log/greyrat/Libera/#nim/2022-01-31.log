[00:03:23] <FromDiscord> <Markz> Hello, I see two Nim extensions for VSCode.  Which one should I use?
[00:03:56] <FromDiscord> <Arizu> How can I have file Inter Process Communication?
[00:06:40] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:08:52] <FromDiscord> <Elegantbeef> @Markz\: nimsaem's is the best
[00:09:03] <FromDiscord> <Markz> In reply to @Elegantbeef "<@264065313316798474>\: nimsaem's is the": Thank you.
[00:09:11] <FromDiscord> <Elegantbeef> [rishavs (Rishav Sharan)](https://matrix.to/#/@rishavs-58046952d73408ce4f2ebf0c:gitter.im)\: do `chr("hello", 'h')`
[00:09:14] *** Quits: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4) (Quit: No Ping reply in 180 seconds.)
[00:09:23] <FromDiscord> <Elegantbeef> [Arizu](https://matrix.to/#/@nizoneko:snug.moe)\: memfiles, sockets both exist
[00:10:29] *** Joins: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4)
[00:11:51] <FromDiscord> <rishavs (Rishav Sharan)> Still getting the errorâ†µhttps://play.nim-lang.org/#ix=3O4s
[00:11:52] <FromDiscord> <Elegantbeef> Oh i'm blind
[00:11:52] <FromDiscord> <Elegantbeef> It's `Option[string]` not `Option(string)`
[00:14:28] *** Quits: pro (~pro@user/pro) (Quit: pro)
[00:17:32] <FromDiscord> <rishavs (Rishav Sharan)> damn it! me and my stupid mistakes \>.\>â†µThanks @elegantbeef\:matrix.org  for catching that
[00:18:12] <FromDiscord> <Elegantbeef> No problem
[01:01:37] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:16:42] <FromDiscord> <Waldecir Santos> is there a way to run unitests with a "failfast" option so the test stops on the first error ?
[01:27:18] <FromDiscord> <Elegantbeef> Pmunch you about?
[01:30:02] <FromDiscord> <Elegantbeef> Or i suppose if anyone is around that knows how to get kate to do error reporting
[01:33:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[01:55:25] <FromDiscord> <ynfle> In reply to @Waldecir Santos "is there a way": https://nim-lang.org/docs/unittest.html#abortOnError See docs on this `var`
[01:57:02] <FromDiscord> <Waldecir Santos> Awesome thank you
[02:00:37] <FromDiscord> <treeform> In reply to @creikey "does anybody happen to": It does not flip images, 0,0 is top left. Its very easy to flip though just call flip: https://nimdocs.com/treeform/pixie/pixie/images.html#flipVertical%2CImage
[02:00:59] <FromDiscord> <treeform> In reply to @Isofruit "The tooling obviously isn't": thank you for using jsony!
[02:01:44] <FromDiscord> <Phil> In reply to @treeform "thank you for using": You're welcome, but how come the message?
[02:02:37] <FromDiscord> <Phil> (edit) "welcome," => "welcome (or rather: Thank you for making the lib!),"
[02:03:12] <FromDiscord> <Phil> Oh! As a sidenote though, a question! I stumbled into a scenario where I wasn't sure how to solve it with jsony
[02:03:33] <FromDiscord> <treeform> do you have a small test case for that?
[02:04:04] <FromDiscord> <Phil> Not quite, I'm not sure how to make that understandable without providing context of the usecase
[02:05:28] <FromDiscord> <treeform> I messaged you because I did search for my lib names and your msg came up, so I replied.
[02:06:04] <FromDiscord> <treeform> In reply to @creikey "why are the functions": What functions name you don't like?
[02:07:24] <FromDiscord> <treeform> In reply to @Isofruit "Oh! As a sidenote": All most all jsony solution require a parseHook of some sort.
[02:07:44] <FromDiscord> <Waldecir Santos> How in nim can I override the object constructor when using OOP ?
[02:09:05] <FromDiscord> <Elegantbeef> You dont override the object constructor you make your own constructor
[02:09:10] <FromDiscord> <Phil> sent a long message, see http://ix.io/3O4O
[02:09:45] <FromDiscord> <ynfle> In reply to @Waldecir Santos "How in nim can": There are no constructors. You can define an `init` or `new` proc (depeneding on ref vs. regular object) or `initMyTypeName` or `newMyTypeName`. depending on your fancy
[02:09:45] <FromDiscord> <Phil> (edit) "http://ix.io/3O4O" => "http://ix.io/3O4P"
[02:10:04] <FromDiscord> <Elegantbeef> I mean there is `Type()` that's a constructor
[02:10:09] <FromDiscord> <Phil> Wait, as I typed it out the answer hit me in the face
[02:11:41] <FromDiscord> <Phil> I keep forgetting nim has type aliasing
[02:11:47] <FromDiscord> <Waldecir Santos> In reply to @ynfle "There are no constructors.": Got it thank you.
[02:12:17] <FromDiscord> <ynfle> In reply to @Elegantbeef "I mean there is": You're right. No overridable constructors. I don't get to define them
[02:12:53] <FromDiscord> <Elegantbeef> If you're a lazy sod like me you may enjoy https://github.com/beef331/constructor
[02:13:08] <FromDiscord> <Phil> +1 for constructor
[02:13:23] <FromDiscord> <Phil> I'm using it myself in nimstoryfont, saves me so many lines of code
[02:13:45] <FromDiscord> <Phil> Every time I thought I found a bug it turns out I only found my own lies
[02:14:17] <FromDiscord> <Phil> ~~Meaning I had no proper understanding on when it generates initObject proc and when newObject proc~~
[02:17:26] <FromDiscord> <Phil> It became pretty much one of those things I auto-include nowadays the second I smell an object becoming part of my project
[02:28:04] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3O4U
[02:28:35] <FromDiscord> <ynfle> (edit) "https://play.nim-lang.org/#ix=3O4U" => "https://play.nim-lang.org/#ix=3O4V"
[02:28:41] <FromDiscord> <ynfle> (edit) "https://play.nim-lang.org/#ix=3O4V" => "https://play.nim-lang.org/#ix=3O4W"
[02:32:26] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:43:27] <FromDiscord> <keks> sent a code paste, see https://play.nim-lang.org/#ix=3O53
[02:43:39] <FromDiscord> <keks> (edit) 
[02:43:39] <FromDiscord> <creikey> In reply to @treeform "It does not flip": I thought they were being flipped because I had accidentally swapped the `top` and `bottom` parameters of the ortho projection, so everything was being flipped
[02:44:58] <FromDiscord> <Elegantbeef> you need `proc initVec[N: static int, T](a: array[N, T]): Vector[N, T] =`â†µ(@keks)
[02:45:38] <FromDiscord> <creikey> In reply to @treeform "What functions name you": I just have never heard the term reactor before, apparently it's standard though
[02:45:49] <FromDiscord> <creikey> (edit) "In reply to @treeform "What functions name you": I just have never heard the term reactor before, ... apparently" 03added "like in `newReactor`,"
[02:46:58] <FromDiscord> <keks> In reply to @Elegantbeef "you need `proc initVec[N:": Ohhh! Thank you, I wouldn't have guessed it myself for sure.
[02:49:29] <FromDiscord> <Elegantbeef> That's why they keep me around, i have a good understanding of what causes issues ðŸ˜›
[02:49:54] <FromDiscord> <treeform> In reply to @Isofruit "A lot of it": you can put json nodes into your objects see docs: https://github.com/treeform/jsony#full-support-for-json-in-json
[02:50:07] <FromDiscord> <treeform> "Sometimes your json objects could contain arbitrary json structures, maybe event user defined."
[02:51:10] <FromDiscord> <treeform> In reply to @creikey "I just have never": Yeah its pretty common even has its own Wikipedia page: https://en.wikipedia.org/wiki/Reactor_pattern
[02:52:57] <FromDiscord> <creikey> In reply to @treeform "Yeah its pretty common": yeah makes sense as a term then
[03:01:07] <NimEventer> New thread by Xigoi: Nim's autoformatter situation, see https://forum.nim-lang.org/t/8855
[03:14:19] <FromDiscord> <keks> In reply to @Elegantbeef "That's why they keep": I'm feeling slightly scared of "those" who are keeping you here ðŸ˜„
[03:22:11] <FromDiscord> <Elegantbeef> Lol
[03:35:36] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:36:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:55:38] <FromDiscord> <geekrelief> In reply to @ynfle "Why is the signature": If the signature for echo was `varargs[string, ``$``]` then it would only accept strings as parameters. But `varargs[typed]` means it'll match any type.
[03:57:39] <FromDiscord> <ynfle> In reply to @geekrelief "If the signature for": No. `$` converts to string
[03:58:17] <FromDiscord> <geekrelief> This is weird.  I'm passing `nil` to a macro taking `varargs[untyped]` and testing it with `.isNil` returns true. https://play.nim-lang.org/#ix=3O5h But if I set the arg type to `untyped`, `.isNil` is false.
[03:58:29] <FromDiscord> <geekrelief> In reply to @ynfle "No. `$` converts to": right
[03:59:01] <FromDiscord> <geekrelief> If the type is not a string it gets converted with `$`
[04:07:20] <FromDiscord> <geekrelief> nvm, I guess I'm mistaken seems like `echo` takes `varargs[typed, ``$``]` as a special case. https://nim-lang.github.io/Nim/manual.html#types-varargs `varargs[typed] is treated specially: It matches a variable list of arguments of arbitrary type but always constructs an implicit array. This is required so that the builtin echo proc does what is expected:`
[04:08:06] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3O5n
[04:10:48] <FromDiscord> <ynfle> In reply to @geekrelief "If the type is": Ya
[04:11:04] <FromDiscord> <ynfle> Right
[04:29:06] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[04:29:36] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[04:34:59] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Quit: bye)
[04:36:42] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[04:48:06] <FromDiscord> <ajusa> My Nim compile times are getting kind of slow (5-10 seconds), any ideas as to what I can do to speed it up? tcc doesn't compile this code in my case
[04:48:56] <FromDiscord> <Elegantbeef> Fewer macros
[04:49:02] <FromDiscord> <Elegantbeef> Got the code hosted somewhere?
[04:49:28] <FromDiscord> <Patitotective> In reply to @Elegantbeef "Fewer macros": But macros do not affect compiled binary speed, right?
[04:49:41] <FromDiscord> <Elegantbeef> They are compile time only so of course not
[04:49:59] <FromDiscord> <Elegantbeef> They can actually increase runtime as they can do things more optimized than one would want to write by hand
[04:50:19] <FromDiscord> <Elegantbeef> But the macro would have to emit the optimized logic of course ðŸ˜›
[04:50:45] <FromDiscord> <ajusa> In reply to @Elegantbeef "Got the code hosted": Nope, it's just a small Jester app. I'll assume the Jester macros are the cause lol, I've seen others complain
[04:50:48] <FromDiscord> <evoalg> so increase the runtime speed (or reduce runtime time) right?
[04:51:28] <FromDiscord> <evoalg> "They can actually increase runtime"
[04:51:32] <FromDiscord> <Elegantbeef> Well you can make macros that allow you to abstract low level optimizations to appear like you'd normally write
[04:51:39] <FromDiscord> <Elegantbeef> increase runtime speed\
[04:51:51] <FromDiscord> <ajusa> guess I'll wait for incremental compilation. I think the status guys have it worse, they've got builds that take minutes
[04:51:54] <FromDiscord> <Elegantbeef> An example of that is https://github.com/liquidev/datarray
[04:52:30] <FromDiscord> <Elegantbeef> Well a 10% compile speedup can be found by commenting out two checks in Nim if you  want a bit faster
[04:52:58] <FromDiscord> <Elegantbeef> Also you can build a danger compiler with lto
[04:53:05] <FromDiscord> <Elegantbeef> You can get a bit faster than stock Nim
[04:53:45] <FromDiscord> <ajusa> Apparently gc orc compiler is faster too, but it didn't work last I checjed
[04:53:50] <FromDiscord> <ajusa> (edit) "checjed" => "checked"
[04:54:02] <FromDiscord> <Elegantbeef> Build a compiler with danger LTO and comment out https://github.com/nim-lang/Nim/blob/devel/compiler/vmgen.nim#L2057-L2062
[04:54:06] <FromDiscord> <Elegantbeef> You can get a few seconds chopped off
[04:54:27] <FromDiscord> <Elegantbeef> I know with CPS tests with just commenting out those two string checks i got a 10% speed boost
[04:54:37] <FromDiscord> <Elegantbeef> In the case of macro heavy code that'll make you go faster
[04:54:58] <FromDiscord> <Elegantbeef> Yes your compiler wont be able to use marshal at compile time, but find me a person that uses marshal and i'll show you a madman
[04:55:27] <FromDiscord> <Elegantbeef> That 10% speed boost was from like 11 seconds down to 9 seconds
[04:55:41] <FromDiscord> <ajusa> Fair enough lol. I'm also using includes and templates pretty heavily, would that add a ton to compile time?
[04:55:57] <FromDiscord> <Elegantbeef> Templates are cheap, includes will add
[04:56:08] <FromDiscord> <Elegantbeef> templates are not VM based, they're just replace AST
[04:56:50] <FromDiscord> <ajusa> It's probably the includes then, Jester's extend macro just copies the code so the imports it has in a different file aren't copied over. I replaced my imports with includes to get around that but now I have slow compiles
[04:57:33] <FromDiscord> <Elegantbeef> Includes causes resemming of all the included code
[04:57:46] <FromDiscord> <Elegantbeef> Atleast i think it does
[04:58:03] <FromDiscord> <Elegantbeef> `export` exists
[04:58:17] <FromDiscord> <ajusa> In reply to @Elegantbeef "`export` exists": Well uh
[04:58:23] <FromDiscord> <ajusa> I forgot
[04:58:41] <FromDiscord> <Elegantbeef> If you're including imports it's not too bad
[04:58:50] <FromDiscord> <Elegantbeef> But using include a lot is just ugly
[04:58:59] <FromDiscord> <ajusa> Nah I'm including entire files filled with macros
[04:59:06] <FromDiscord> <ajusa> (edit) "Nah I'm including entire files filled with ... macros" 03added "Jester"
[04:59:10] <FromDiscord> <Elegantbeef> Then yea knock it off
[04:59:48] <FromDiscord> <ajusa> In my defense I thought includes were cheap and templates were expensive. I learned something new today, thanks mr beef
[05:07:19] <FromDiscord> <exelotl> In reply to @Elegantbeef "Build a compiler with": ooh I'll have to try this
[05:07:57] <FromDiscord> <exelotl> (do replies show in matrix?)
[05:12:27] <FromDiscord> <Rika> Kinda afaik
[05:14:06] <FromDiscord> <huantian> this is what it looks like on element https://media.discordapp.net/attachments/371759389889003532/937523601270259782/unknown.png
[05:21:24] <FromDiscord> <Elegantbeef> Depending on what you're doing you might not get much speed increase from commenting out the marshal stuffâ†µ(@exelotl)
[05:30:50] *** Joins: vicfred (~vicfred@user/vicfred)
[05:48:34] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[06:06:10] *** Quits: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4) (Quit: I'm out!)
[06:06:18] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:06:24] *** Quits: rienske (~rie@185.254.75.31) (Ping timeout: 256 seconds)
[06:08:03] *** Joins: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4)
[06:09:43] *** Joins: rienske (~rie@185.254.75.31)
[06:11:51] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[06:36:33] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:18:58] <FromDiscord> <ynfle> How do I run testament for one file? `./koch tests filepath` doesn't work
[07:20:24] <FromDiscord> <ynfle> If the current devel is failing the CI, how am I supposed to know if I broke anything?
[07:20:35] <FromDiscord> <ynfle> In reply to @ynfle "How do I run": Beef, do you know?
[07:23:40] <FromDiscord> <Elegantbeef> Comically i do not
[07:27:02] <FromDiscord> <ynfle> It's `./koch tests run filepath`
[07:28:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:45:55] *** Quits: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4) (Quit: I'm out!)
[07:47:55] *** Joins: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4)
[07:53:26] <FromDiscord> <ynfle> It's frustrating when the CI is failing
[07:53:47] <FromDiscord> <ynfle> (edit) "It's frustrating when the CI is failing ... " 03added "before a PR. It's hard to know if the PR breaks anything"
[07:53:54] *** Quits: cyraxjoe (~joe@2806:109f:13:81b1:201:2eff:fe80:7df4) (Ping timeout: 250 seconds)
[07:54:35] *** Joins: cyraxjoe (~joe@2806:109f:13:8703:201:2eff:fe80:7df4)
[07:55:14] <FromDiscord> <Elegantbeef> You generally can look at the logs to see
[07:55:34] <FromDiscord> <Elegantbeef> this could be caused by your changes
[07:56:40] <FromDiscord> <ynfle> Seems similar logs to the previous commit
[07:56:48] <FromDiscord> <ynfle> Anyway
[07:56:49] <FromDiscord> <ynfle> GN
[07:56:55] <FromDiscord> <Elegantbeef> Then possibly just CI issue
[08:37:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:12:05] *** Quits: jkl1337 (~jkl@user/jkl) (Quit: Gone.)
[09:13:28] *** Joins: jkl (~jkl@user/jkl)
[09:57:50] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Ping timeout: 250 seconds)
[10:17:52] *** Joins: PMunch (~PMunch@user/pmunch)
[10:18:54] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Read error: Connection reset by peer)
[10:20:37] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[10:20:59] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[10:55:49] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Quit: bye)
[10:57:46] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[11:07:26] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Quit: bye)
[11:10:17] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[11:12:39] <FromDiscord> <Bung> why this does
[11:13:02] <FromDiscord> <Bung> not have japanese channel, I see a lot japanese developers use nim
[11:40:56] <PMunch> Like a japanese chat room?
[11:46:11] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Ping timeout: 256 seconds)
[11:46:57] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[11:55:49] <FromDiscord> <Rika> They have their own discord
[11:55:55] <FromDiscord> <Rika> Server I mean
[11:58:42] <FromDiscord> <Bung> in Language-specific
[11:59:45] <FromDiscord> <Rika> Yes I know what you mean
[12:04:13] *** Quits: mjsir911 (~bnc@user/mjsir911) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Ping timeout: 268 seconds)
[12:04:43] *** Joins: mjsir911 (~bnc@user/mjsir911)
[12:05:27] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: Yardanico (~quassel@user/yardanico) (Ping timeout: 268 seconds)
[12:05:34] *** Joins: Yardanico (~quassel@user/yardanico)
[12:06:04] *** Quits: crem1 (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Ping timeout: 268 seconds)
[12:06:20] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[12:07:38] *** Joins: crem1 (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[12:09:22] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[12:16:53] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[12:17:20] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[12:27:25] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[12:37:05] <FromDiscord> <Bung> does github has bug ? diff in pr , I see base master is not new version master
[12:49:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:55:23] <FromDiscord> <Goel> Does Nim have any implementation of a Vector2-SIMD in any of the official Modules?
[13:02:31] <PMunch> You can look into nimsimd, or arraymancer. I don't think there's any such modules in the standard library
[13:03:10] <FromDiscord> <Elegantbeef> Thre isnt anything simd in the stdlib
[13:04:10] <FromDiscord> <Elegantbeef> https://github.com/GaryM-exkage/slam if you just want vectors
[13:09:59] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[13:11:17] <FromDiscord> <Rika> Is this the one we helped name I forget
[13:11:55] <FromDiscord> <Elegantbeef> Yea
[13:14:06] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[13:17:25] <PMunch> Hmm, all webcams are so crap, I'm seriously considering to start using my old (or new) phone instead..
[13:17:39] <FromDiscord> <Rika> Well thatâ€™s one option
[13:17:46] <FromDiscord> <Rika> Getting the output reliably is difficult
[13:17:58] <PMunch> Eh, DroidCam works fine
[13:18:01] <FromDiscord> <Elegantbeef> droidcam is easy
[13:18:12] <FromDiscord> <Rika> Iâ€™m not an Android user so I donâ€™t relate xd
[13:18:49] <FromDiscord> <Rika> Well I mean I am
[13:18:55] <FromDiscord> <Rika> But I donâ€™t daily drive it anymore
[13:19:10] <FromDiscord> <Elegantbeef> Pmunch do you know if the kate text editor supports errors over LSP?
[13:19:22] <FromDiscord> <Elegantbeef> I'm still waiting for a response from the KDE matrix apparently no one knows
[13:19:38] <PMunch> I have no idea
[13:20:28] <FromDiscord> <Rika> Do you use Kate?
[13:20:34] <FromDiscord> <Elegantbeef> Trying it out now
[13:20:44] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[13:20:48] <FromDiscord> <Rika> Itâ€™s okay
[13:20:54] <PMunch> What kind of errors are you thinking of?
[13:22:10] <FromDiscord> <Elegantbeef> Error reporting of any variety
[13:23:12] <FromDiscord> <Elegantbeef> With LSP and the new update it's surprisngly good
[13:23:34] <PMunch> The new update?
[13:23:35] <FromDiscord> <Elegantbeef> But minor issues like tab being accept suggestion and not having any idea if what i'm writing is going to compiler
[13:23:50] <FromDiscord> <Rika> > tab being accept â†µCursed
[13:23:53] <FromDiscord> <Elegantbeef> Yea kate got some major updates recently
[13:24:05] <FromDiscord> <Elegantbeef> Tell me about it go to indent and it just accepts
[13:24:09] <FromDiscord> <Elegantbeef> I've never liked it
[13:24:49] <FromDiscord> <Elegantbeef> Dont know if i missed a setting but can disable that either
[13:24:54] <FromDiscord> <creikey> In reply to @Elegantbeef "Yea kate got some": vscode lagging makes me sad if kate can do what it can that would be great
[13:25:05] <FromDiscord> <Elegantbeef> So some finicky things but otherwise a good experience
[13:25:17] <FromDiscord> <Elegantbeef> Well try out kate
[13:25:32] <FromDiscord> <creikey> I'm assuming the nim support is over lsp
[13:25:39] <FromDiscord> <Elegantbeef> Yeaa
[13:25:48] <FromDiscord> <creikey> I just need ctrl + click to go to something and then renaming symbols is useful
[13:26:00] <FromDiscord> <Elegantbeef> No clue about the renaming symbols
[13:26:06] <FromDiscord> <Elegantbeef> Dont know if the LSP supports that
[13:26:09] <FromDiscord> <creikey> aw dang
[13:26:16] <FromDiscord> <creikey> I could honestly probably just use a riced out neovim
[13:26:20] <FromDiscord> <Elegantbeef> I know kate does but dont know about nimlsp
[13:26:31] <FromDiscord> <creikey> so annoying to maintain those configs though
[13:27:11] <FromDiscord> <creikey> I guess there's also sublime text editor
[13:27:14] <FromDiscord> <Waldecir Santos> How do you guys run tests within vscode, do we have any test explorer integration ?
[13:27:22] <FromDiscord> <Elegantbeef> `nimble test`
[13:28:25] <FromDiscord> <creikey> if only clion had nim support
[13:28:43] <FromDiscord> <Elegantbeef> Jetbrains has a nim addon
[13:29:13] <FromDiscord> <creikey> oh wow
[13:29:32] <FromDiscord> <creikey> it feels like nim is very unpopular but then stuff like this exists
[13:30:17] <FromDiscord> <Rika> It is not very good, the add on
[13:30:27] <FromDiscord> <Waldecir Santos> In reply to @Elegantbeef "`nimble test`": But no vscode integration right ? also I'm studying with https://exercism.org so they don't have nimble, any advice ?
[13:30:33] <FromDiscord> <Elegantbeef> Yea they're not using nimsuggest or the lsp an doing it all from start
[13:30:50] <FromDiscord> <creikey> Oh there is that other text editor that replicates the vscode api
[13:30:51] <FromDiscord> <Elegantbeef> i dont get why tests need intergration with an editor
[13:30:56] <FromDiscord> <creikey> really why is vscode lagging for me
[13:31:01] <FromDiscord> <Elegantbeef> Just run the code and ensure you get expcted values
[13:31:04] <FromDiscord> <creikey> like half the time when I type it lags by 1-2 seconds
[13:31:04] <FromDiscord> <Bung> rename is defined in lsp
[13:31:15] <FromDiscord> <Elegantbeef> Well it doesnt work with kate
[13:31:34] <FromDiscord> <Phil> Huh, my main gripe with vscode is that sometimes the intellisense just randomly takes >10 seconds to throw suggestions out
[13:31:44] <FromDiscord> <Rika> In reply to @creikey "Oh there is that": Which, onivim?
[13:31:55] <FromDiscord> <creikey> In reply to @Rika "Which, onivim?": yeah I think that's what I'm thinking of
[13:31:55] <FromDiscord> <Phil> (edit) "out" => "outâ†µThat sometimes being 75% of the time"
[13:31:57] <FromDiscord> <Elegantbeef> Onivim2 is the one i know of
[13:32:04] <FromDiscord> <creikey> I looked into that project it seems very strange
[13:32:09] <FromDiscord> <creikey> weird programming language
[13:32:13] <FromDiscord> <creikey> all new ui etc
[13:32:14] <FromDiscord> <Waldecir Santos> In reply to @Elegantbeef "i dont get why": It dosen't it's just to make it "easier", that's all.
[13:32:18] <FromDiscord> <Rika> Really would have liked it more if it based off of neovim than vim
[13:32:23] <FromDiscord> <creikey> when I tried to compile their languages compiler it took 10 minutes on my machine then failed
[13:32:31] <FromDiscord> <Elegantbeef> Hit f6 waldecir
[13:32:37] <FromDiscord> <Elegantbeef> Or is it f5 to run current filee
[13:32:40] <FromDiscord> <Elegantbeef> Dont recall atm
[13:32:47] <FromDiscord> <Bung> the lsp slow because it need compile whole module and its dependencies to graph I think
[13:32:57] <FromDiscord> <creikey> In reply to @Bung "the lsp slow because": I was talking about onivim 2
[13:33:06] <FromDiscord> <Waldecir Santos> In reply to @Elegantbeef "Hit f6 waldecir": F6 is the key, but it dosen't run the tests just the file
[13:33:21] <FromDiscord> <creikey> well really like
[13:33:23] <FromDiscord> <Elegantbeef> Wait what are you testing?
[13:33:24] <FromDiscord> <creikey> how hard would it be
[13:33:26] <FromDiscord> <creikey> to make a really awesome nim ide
[13:33:28] <FromDiscord> <Waldecir Santos> But I can probably create a task for that
[13:33:29] <FromDiscord> <creikey> in nim
[13:33:48] <FromDiscord> <Waldecir Santos> In reply to @Elegantbeef "Wait what are you": I'm studying nim at the moment, so this
[13:33:50] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/937649363633713202/unknown.png
[13:34:11] <FromDiscord> <Bung> I dont know how  the IC progress is going
[13:34:25] <FromDiscord> <creikey> In reply to @Waldecir Santos "I'm studying nim at": for vscode I just have ctrl+shift+b run `build.bat` in the project root then put whatever I want to do in ther
[13:34:27] <FromDiscord> <creikey> (edit) "ther" => "there"
[13:34:30] <FromDiscord> <creikey> nice no brain configuration
[13:34:42] <FromDiscord> <Elegantbeef> I mean running the file on the right will test it
[13:35:31] <FromDiscord> <Elegantbeef> Eh i'm weird generally so disregard me
[13:35:38] <FromDiscord> <Waldecir Santos> true but I'll need to switch to that file, but I can probably use @creikey solution or just create a new keybind
[13:36:19] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3O7a
[13:37:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[13:37:55] <FromDiscord> <Waldecir Santos> Thank you @creikey I'll try that.
[13:46:14] <FromDiscord> <tandy> im iterating over a `Table[string, object]` using `pairs`, how can i do something different for the last iteration?
[13:47:05] <FromDiscord> <Elegantbeef> store the key then do something at the last iteration
[13:47:10] <FromDiscord> <Elegantbeef> after the last\
[13:47:18] <FromDiscord> <tandy> truu
[13:48:15] <FromDiscord> <tandy> but how will i know when ive reached the last iteration
[13:48:45] <FromDiscord> <Rika> I suddenly have a compulsion to write a Nim formatter that doesnâ€™t use Nim pretty itself
[13:48:56] <FromDiscord> <Elegantbeef> You just always store the key
[13:49:05] <FromDiscord> <Elegantbeef> Then after the iterating you do custom logic
[13:49:24] <FromDiscord> <Elegantbeef> Alternatively you do `keys.toSeq` then iterate over that and
[13:49:36] <FromDiscord> <Michal MarÅ¡Ã¡lek> typedesc arguments in macros are converted to NimNodes, right? Is there a way to acess the type itself? Something like static typedesc?
[13:49:56] <FromDiscord> <Elegantbeef> `myTypeDesc[^1]`.getType\`
[13:49:59] <FromDiscord> <tandy> oh you mean for every item?
[13:50:05] <FromDiscord> <Elegantbeef> Yes
[13:50:33] <FromDiscord> <Elegantbeef> you can also use `len`
[13:51:21] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3O7f
[13:51:33] <FromDiscord> <tandy> i think this will probably be the best way
[13:51:42] <FromDiscord> <Elegantbeef> I think you can also use \`std/enumerate
[13:52:11] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3O7g
[13:52:27] <FromDiscord> <Elegantbeef> Dont recall if it works for mutable variables
[13:52:44] <FromDiscord> <Elegantbeef> Actually it's not mutable what am i on about
[13:53:50] <FromDiscord> <tandy> this is nice
[13:54:01] <FromDiscord> <tandy> thanks beefboss
[13:54:15] <FromDiscord> <tandy> join nimskull chat \:)â†µ(@Rika)
[14:05:36] <Amun-Ra> btw, I didn't know you can reuse argument variable name in function, as in: proc doo(bar: int): var bar = bar
[14:05:50] <FromDiscord> <Elegantbeef> Ah shadowing is lovely
[14:06:42] <FromDiscord> <Michal MarÅ¡Ã¡lek> In reply to @Elegantbeef "`myTypeDesc[^1]`.getType\`": I don't understand. Seems like gettype returns a NimNode?
[14:07:26] <FromDiscord> <Elegantbeef> It does
[14:07:36] <FromDiscord> <Rika> In reply to @tandy "join nimskull chat \:)": Iâ€™ve been meaning to
[14:07:55] <FromDiscord> <Elegantbeef> You want the type passed into a macro statically?
[14:07:59] <FromDiscord> <Rika> Iâ€™ll join in a bit perhaps
[14:08:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[14:09:24] <FromDiscord> <Elegantbeef> Depending on waht you're doing but yes
[14:09:24] <FromDiscord> <evoalg> I read somewhere that this is idiomatic for Nimâ†µ(<@709044657232936960_=41mun-=52a=5b=49=52=43=5d>)
[14:09:39] <FromDiscord> <Elegantbeef> Though i think it should emit a hint
[14:11:49] <FromDiscord> <Michal MarÅ¡Ã¡lek> In reply to @Elegantbeef "You want the type": yes
[14:12:40] <FromDiscord> <Elegantbeef> I dont think you can do that without a template that emits the macro in that way
[14:14:07] <FromDiscord> <Michal MarÅ¡Ã¡lek> What does that mean?
[14:16:46] <FromDiscord> <tandy> worth reading this i thinkâ†µhttps://github.com/nim-works/nimskull/discussions/113â†µ(@Rika)
[14:16:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3O7o
[14:17:08] <FromDiscord> <Michal MarÅ¡Ã¡lek> I thought I could shift the type into a generic param but ig macros cant be generic?
[14:17:48] <FromDiscord> <Elegantbeef> Indeed doesnt make sense
[14:19:30] <FromDiscord> <Michal MarÅ¡Ã¡lek> sent a code paste, see https://play.nim-lang.org/#ix=3O7p
[14:20:58] <FromDiscord> <evoalg> gosh even `for i, x, y in enumerate mytable:` works
[14:28:38] <FromDiscord> <Michal MarÅ¡Ã¡lek> sent a code paste, see https://play.nim-lang.org/#ix=3O7u
[14:29:42] <FromDiscord> <Rika> In reply to @tandy "worth reading this i": Thatâ€™s a lot already done
[14:38:53] <FromDiscord> <haxscramper> to be more specific it requires https://github.com/nim-works/nimskull/discussions/139, but that is blocked by the VM using AST for it's operation, so the code is really messy all over the place
[14:40:00] <FromDiscord> <haxscramper> right now there is simply not enough information to make formatter useful
[14:40:29] <FromDiscord> <bestman 8> would nim be a good option for deploying ml models for desktop apps
[14:41:29] <PMunch> @bestman_8, I'd say so. It's a systems programming language with great performance so should work well for that
[14:41:37] <PMunch> What kind of deployment are you thinking?
[14:42:36] <FromDiscord> <bestman 8> mostly just making a model with python and importing and running it in nim (the other option is rust and i dont really like rust)
[14:43:58] <PMunch> Are you making it in Python for the library support?
[14:44:01] <FromDiscord> <bestman 8> i just want to know what would be a good way to deploy ml models for desktop
[14:44:30] <FromDiscord> <bestman 8> In reply to @PMunch "Are you making it": yes but it will be converted to .onnx (that is a standard and seems to be the only option for desktop)
[14:46:31] <PMunch> That should work fine then
[14:47:04] <PMunch> You could probably use this to load ONNX and run it in Nim: https://github.com/YesDrX/onnxruntime-nim
[14:49:47] <FromDiscord> <bestman 8> will that also have cuda support
[14:50:00] <PMunch> That seems to be a pretty low-level wrapper for the Onnxruntime written in C++, so not the prettiest Nim code to use it. But it should be easy enough to make it a bit prettier with some Nim templates
[14:50:57] <PMunch> Should do, yes, it is based on this: https://github.com/microsoft/onnxruntime
[14:51:28] <PMunch> And when I say based on I mean that it is literally running that for the actual ONNX stuff
[14:51:48] <FromDiscord> <bestman 8> that is pretty nice it seems like a great option
[14:52:38] <FromDiscord> <bestman 8> i wont have to write c or rust code and dont have to include python so it would be a good option (only issue is amd gpu's but webgl should work for that)
[14:53:48] <FromDiscord> <Phil> Is there a way to log messages in a package and have that respect the log level of the application its compiled into?
[14:54:24] <PMunch> @Phil, depends on how the log level is specified, and how messages are logged
[14:54:31] <FromDiscord> <Phil> E.g. I have my connection pooling package. I want to have it log how many connections are in the pool at various times on the debug log level. I do not care to see those when running normally
[14:55:01] <FromDiscord> <Phil> In reply to @PMunch "<@180601887916163073>, depends on how": Log level is specified in the logger call:â†µ`logger.log(lvlDebug, "AFTER RECYCLE - Number of connections in pool: " & $pool.connections.len() )`
[14:55:03] <PMunch> I mean the bare-minimum thing is to do "when defined(debug)"
[14:55:21] <PMunch> Oh right, so you use the logging library?
[14:55:30] <FromDiscord> <Phil> Yeah, I thought that was the standard
[14:55:35] <PMunch> This thing? https://nim-lang.org/docs/logging.html
[14:55:41] <FromDiscord> <Phil> Yep
[14:55:47] <PMunch> Well, it's in the standard library
[14:55:50] <FromDiscord> <Phil> the logger you see in there is a global logger
[14:56:01] <FromDiscord> <deeuu> Hey,â†µIs it correct that `channels` should not be used when spawning tasks using `std/threadpool`? From [the docs](https://nim-lang.org/docs/channels_builtin.html#Channel) â†µ> Note: Channels are designed for the Thread type. They are unstable when used with spawnâ†µI'm confused because NimInAction (p.178) shows an example of this, and I've seen channels and threadpool used together elsewhere, e.g. [morelogging](https://github.com/Federico
[14:56:02] <FromDiscord> <Phil> `var logger = newConsoleLogger()`â†µI call that at the start of the module
[14:56:03] <PMunch> Honestly most people seem to just echo out messages
[14:56:31] <PMunch> I mean the obvious way is to take in a logger object on initialisation
[14:56:35] <FromDiscord> <Phil> ~~I refuse! I want to do my logging cleanly!~~
[14:56:53] <FromDiscord> <Phil> Hmmm
[14:56:54] <PMunch> Haha, I mean it's a good idea to use a logger :)
[14:57:07] <PMunch> I think status has their own logger as well, which is really nice
[14:57:13] <FromDiscord> <Phil> I don't want to bother users of my library though
[14:57:33] <PMunch> https://github.com/status-im/nim-chronicles
[14:58:09] <PMunch> Ah right, so you add global handlers
[14:58:31] <NimEventer> New thread by Drkameleon: Variable compile-time import paths, see https://forum.nim-lang.org/t/8856
[14:59:10] <FromDiscord> <Phil> In reply to @PMunch "Ah right, so you": I'm not sure I follow on that one
[14:59:16] <PMunch> So I guess replace all the `logger.log` statements with just `log` and add a `when isMainModule: addHandler(newConsoleLogger())`
[14:59:19] <PMunch> Or something like that
[15:00:27] <PMunch> So if you're not the main module, assume that a logger was added as a handler by the main module and use that
[15:00:49] <FromDiscord> <Phil> Ohhhh that's what that does? Look in the main module for a logger object of some sorts?
[15:01:39] <FromDiscord> <Phil> I think I need to read up a bit on what handlers mean in nim
[15:02:22] <FromDiscord> <Phil> Ohhhhh
[15:02:28] <FromDiscord> <Phil> addHandler builds something like a global logger context
[15:02:37] <FromDiscord> <Phil> And if you call log it just calls all the loggers that you added via "addHandler"
[15:04:22] <PMunch> Yu
[15:04:26] <PMunch> Yup*
[15:05:22] <FromDiscord> <Phil> Yeeeee that's the way I should've done it in the beginning. I just wrapped up a month-long log4j upgrade and that got my brain all primed that it worked similarly in nim
[15:05:51] <FromDiscord> <Phil> I know more about logging than I ever wanted to know
[15:06:01] <PMunch> Handlers aren't a Nim concept, it's just what the logging module calls them. The logger module just have a global variable with log handlers
[15:06:01] <FromDiscord> <Phil> (edit) "I know more about logging ... than" 03added "now"
[15:06:30] <PMunch> Oh yikes, sorry to hear you got hit by the log4j train :P
[15:07:04] <PMunch> Curiously the global variable is thread-local, so you can configure different threads to have different loggers
[15:07:23] <PMunch> Probably just from the pre-ARC days though
[15:07:46] <FromDiscord> <Phil> is "mapped diagnostic context" something that is a general logging context?
[15:07:50] <FromDiscord> <Phil> (edit) "context?" => "concept?"
[15:07:57] <FromDiscord> <tandy> this sounds cool, what are you going to make?
[15:07:58] <FromDiscord> <tandy> this sounds cool, what are you going to makeâ†µ(@bestman 8)
[15:08:10] <FromDiscord> <Phil> The idea that you give every thread a custom hashmap solely for logging that you fill with thread-specific data
[15:08:17] <FromDiscord> <Phil> (edit) "The idea that you give every thread a custom hashmap solely for logging that you fill with thread-specific data ... " 03added "and can access in log-calls"
[15:09:00] <PMunch> @deeuu, I'm not 100% sure to be honest. I think it might confuse the parallel statement since it does rewriting, but just straight spawn calls should be safe (I think)
[15:09:32] <FromDiscord> <bestman 8> In reply to @tandy "this sounds cool, what": i just want to know how to deploy for desktop and at the end i would like something that could run the ml models on images
[15:09:43] <PMunch> Not 100% sure, but it's probably fine. This is getting a rewrite for ARC/ORC anyways, so everything is a bit muddy at the moment
[15:09:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[15:10:20] <PMunch> @Phil, "mapped diagnostic context"?
[15:11:01] <FromDiscord> <bestman 8> the current ways to deploy ml models on desktop would be to rewrite most of the model in a lower level language or to use the .onnx model with c or rust
[15:11:09] <FromDiscord> <Phil> It's what log4j calls its custom hashmaps that they associate with every thread. You put stuff in there like a thread's name, what task it was currently on (you have to remember to update that if you make use of this) etc. etc.
[15:11:48] <FromDiscord> <bestman 8> (edit) "rust" => "rustâ†µnot that people actually deploy to desktop and when they do they use js"
[15:11:49] <FromDiscord> <Phil> It's... a weird concept. I don't think I've yet seen a proper usecase where that actually helped, you're message just made me wonder whether nims logging has sth like that
[15:11:58] <FromDiscord> <Phil> (edit) "you're" => "your"
[15:12:07] <PMunch> Aha, yes I've seen similar things
[15:12:29] <FromDiscord> <Phil> So far I've only seen it abused
[15:12:41] <PMunch> Chronicles has something similar, and C# also does something similar
[15:12:46] <PMunch> Or .NET I guess
[15:13:06] <FromDiscord> <Phil> Like putting the name of the server you're currently on in a THREAD SPECIFIC hashmap instead of, yknow, putting that into a layout for log messages or sth
[15:13:48] <FromDiscord> <Tanguy> You can probably do something like that with this https://github.com/status-im/nim-chronicles#publiclogscope
[15:14:20] <FromDiscord> <Tanguy> With getServerId being something that returns your thread specific variables
[15:15:58] <FromDiscord> <tandy> cool, i was more wondering what your desktop app is going to doâ†µ(@bestman 8)
[15:17:36] <FromDiscord> <bestman 8> In reply to @tandy "cool, i was more": probably simple things for images like style gan things, image segmentation for selection and upscaling
[15:18:31] <FromDiscord> <bestman 8> i'm planning on only using models that are pretty memory efficient so my poor gpu can train them
[15:21:44] <FromDiscord> <Phil> Ohhh what log4j calls appenders, nim std logging calls ConsoleLogger/FileLogger etc.
[15:22:38] <FromDiscord> <tandy> sounds cool, send me the repo when you have it goingâ†µ(@bestman 8)
[15:23:01] <FromDiscord> <tandy> i wanna have a spleeter impl in nim
[15:24:39] <FromDiscord> <bestman 8> In reply to @tandy "sounds cool, send me": if it ever happens
[15:24:49] <FromDiscord> <bestman 8> (edit) "In reply to @tandy "sounds cool, send me": if it ever happens ... " 03added "and i still remember this"
[15:26:38] <FromDiscord> <tandy> lol
[15:27:16] <FromDiscord> <Phil> In reply to @Tanguy "You can probably do": Hmmm this does tempt me, I might include nim-chronicles in my main project. I'd not want to include it in a super tiny package of merely 200 lines of code though, does it somewhat integrate with the std logging lib?
[15:27:37] <FromDiscord> <Phil> (edit) "though," => "though (my tinypool package for sqlite connection pooling),"
[15:28:00] <FromDiscord> <Phil> I'm mostly contemplating on how it'd interact if I had the package use stdlib and my main project (which makes use of the package) use nim-chronicles
[15:33:26] <FromDiscord> <Phil> ... okay, dumb question, but I would like to update my package
[15:33:34] <FromDiscord> <Phil> Do I just do nimble publish again?
[15:35:22] <FromDiscord> <Rika> no
[15:35:44] <FromDiscord> <Rika> you commit a version bump on the .nimble file then tag that commit with a version number
[15:36:42] <FromDiscord> <dom96> Or just commit. You donâ€™t need to tag after every commit ðŸ™‚
[15:37:06] <FromDiscord> <dom96> Although Nimble will always install the latest tagged version implicitly
[15:38:53] <PMunch> @Phil, I guess you could implement a log handler which logged the message via chronicles if you wanted. But I'm not sure if anything like that is officially supported in chronicles
[15:50:17] <FromDiscord> <Phil> In reply to @Rika "you commit a version": Thanks (to you as well @dom96 )!â†µFinally made the package's log messages respect the global log level
[15:53:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[16:29:38] <FromDiscord> <Goel> Is there any difference between `type()` and `typeof()`? Is one deprecated and one not or something similar?
[16:30:30] <FromDiscord> <Rika> yes
[16:30:36] <FromDiscord> <Rika> type is deprecated afaik
[17:13:45] <FromDiscord> <demotomohiro> IIRC, type was deprecated because "type" is harder to google than "typeof".
[17:14:54] <FromDiscord> <Rika> also got confusing when type != type != type; typeof/typedesc/type
[17:16:12] <FromDiscord> <Phil> type is deprecated? huh
[17:23:21] <PMunch> @Phil, for getting the type of a variable
[17:23:42] <PMunch> You should still use types :P 
[17:24:42] <FromDiscord> <demotomohiro> !eval echo 1.typeof
[17:24:44] <NimBot> int
[17:27:09] <FromDiscord> <Rika> hm i do actually wonder why int isnt an alias determined by when statements
[17:30:57] <PMunch> Instead of being a magic?
[17:33:24] <FromDiscord> <Phil> In reply to @PMunch "You should still use": Watch me make an entire medium sized web application without any types whatsoever!
[17:33:52] <FromDiscord> <Phil> (edit) "whatsoever!" => "whatsoever outside of Hashmaps!"
[17:34:04] <PMunch> *shudders*
[17:34:28] <FromDiscord> <Rika> watch me make a program with nothing other than strings and pointers
[17:34:36] <FromDiscord> <Rika> and strings as pointers
[17:35:59] <FromDiscord> <Phil> So TIL Rika is very competitive
[17:37:27] <FromDiscord> <Rika> oh watch me make a program with nothing but pointers
[17:37:40] <FromDiscord> <Phil> Easy there Satan
[17:42:25] <FromDiscord> <ynfle> PMunch, can you look at this run? `nimlsp` is failing the CI https://github.com/ynfle/Nim-1/runs/5005825672?check_suite_focus=true. Is it a nimlsp issue?
[17:43:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:44:17] *** Joins: rockcavera (~rc@192.12.114.193)
[17:44:17] *** Quits: rockcavera (~rc@192.12.114.193) (Changing host)
[17:44:17] *** Joins: rockcavera (~rc@user/rockcavera)
[17:46:26] <PMunch> Ah yes, that is a nimlsp issue
[17:46:31] <PMunch> That test is outdated
[17:50:10] <FromDiscord> <yumi> how can I improve https://github.com/redplane?
[17:50:22] <FromDiscord> <yumi> (edit) "https://github.com/redplane?" => "https://github.com/egor4ka/redplane?"
[17:50:38] <FromDiscord> <yumi> (edit) "https://github.com/egor4ka/redplane?" => "https://github.com/egor4ka/redplane ?"
[17:52:13] <PMunch> @yumi, replace it with Pakku?
[17:52:23] <FromDiscord> <yumi> uh
[17:52:29] <FromDiscord> <yumi> thats my own project
[17:52:34] <FromDiscord> <yumi> i made it for fun
[17:52:36] <PMunch> Oh, sorry
[17:52:45] <FromDiscord> <yumi> yeah pakku is nice
[17:52:50] <FromDiscord> <mratsim> Pakku is unmaintained
[17:52:55] <PMunch> No it's not
[17:53:00] <FromDiscord> <mratsim> I switched to paru/Rust Â¯\_(ãƒ„)_/Â¯
[17:53:09] <FromDiscord> <yumi> i use yay
[17:53:13] <PMunch> It got forked and is actively maintained here: https://github.com/zqqw/pakku
[17:53:21] <PMunch> Last commit 4 days ago
[17:53:26] <FromDiscord> <yumi> because pakku wouldn't compile on my arch arm chroot
[17:53:37] <FromDiscord> <mratsim> oh
[17:53:43] <FromDiscord> <yumi> but yeah how can I improve my project?
[17:53:46] <FromDiscord> <xx_ns> fyi, the lead yay developer created and moved on to paru
[17:54:06] <FromDiscord> <ynfle> In reply to @PMunch "That test is outdated": Does something need to be changed in the nim CI?
[17:54:09] <FromDiscord> <yumi> paru doesn't let me get further than reading the pkgbuild
[17:54:12] <PMunch> @yumi, do you mean improve the code, or improve the project?
[17:54:20] <FromDiscord> <yumi> improve the code
[17:54:28] <FromDiscord> <yumi> im quite new to nim
[17:54:29] <FromDiscord> <xx_ns> In reply to @yumi "paru doesn't let me": what do you mean?
[17:54:41] <FromDiscord> <xx_ns> you know you have to quit the pager, right? `less` does that with the key `q`
[17:54:41] <PMunch> @ynfle, probably not, that test just got broken by https://github.com/PMunch/nimlsp/pull/109, I've asked @Bung to fix it
[17:54:45] <FromDiscord> <mratsim> you need to say "yes" in paru
[17:55:04] <FromDiscord> <yumi> In reply to @xx_ns "you know you have": tried it, it just exits
[17:55:08] <FromDiscord> <yumi> i just use yay
[17:55:19] <PMunch> One thing the CI could do is only pull in the latest tagged version of packages, so you get the same behaviour of a Nimble install and not a bunch of development branches
[17:56:20] <FromDiscord> <yumi> but still, how can I improve my project?
[17:56:31] <PMunch> @yumi, you don't have to initialise your variables like that
[17:56:36] <PMunch> You can just define their type
[17:56:49] <FromDiscord> <yumi> like var1: string?
[17:56:52] <PMunch> Yup
[17:56:57] <FromDiscord> <yumi> ill do that ig
[17:57:01] <PMunch> And allPkgs: seq[string]
[17:57:11] <PMunch> I mean it's mostly just a preference thing
[17:57:11] <FromDiscord> <yumi> not newseq?
[17:57:43] <PMunch> newSeq is typically used to initialise a sequence to a given length
[17:57:47] <FromDiscord> <yumi> oh
[17:57:48] <FromDiscord> <yumi> okay
[17:57:57] <FromDiscord> <yumi> lemme do that real quick...
[17:58:05] <PMunch> You should also add newlines between your procs
[17:58:13] <PMunch> And why do they all return 0?
[17:58:29] <FromDiscord> <Goel> sent a code paste, see https://play.nim-lang.org/#ix=3O8D
[17:58:38] <PMunch> 0 is the default, so you don't really need to return it explicitly, but why do they even have a return type if they always just return 0?
[17:59:00] <PMunch> That way you wouldn't have to discard all those zeros either
[17:59:31] <FromDiscord> <yumi> how do i make a proc without a return type?
[17:59:40] <PMunch> @Goel, {.error.} is a compile-time thing
[17:59:58] <FromDiscord> <yumi> In reply to @PMunch "You should also add": okay
[17:59:58] <PMunch> If it exists in code that will be compiled it throws a compilation error
[18:00:17] <PMunch> @Goel, what you want to do is throw an exception
[18:01:10] <FromDiscord> <yumi> In reply to @yumi "how do i make": nim basics never said anything about that lol
[18:01:24] <FromDiscord> <Goel> Yeah i suppose i was doing it the wrong way, i'll for "Thow an exception". Or even better if there is a single keyword that i can use in that case.â†µ(In Zig that would be `else: unreacheable;` to trigger the compiler warning only IN CASE it evaluates that line)
[18:01:33] <PMunch> {.error.} is used to do things like `when not defined(linux): {.error: "This module only supports linux".}`
[18:01:58] <PMunch> @yumi, you just omit the `: int` part of the signature
[18:02:02] <FromDiscord> <yumi> oh
[18:02:11] <FromDiscord> <yumi> and i wont have to return?
[18:02:16] <PMunch> Correct
[18:02:17] <FromDiscord> <yumi> ok thnks
[18:02:24] <PMunch> You technically never _have_ to return in Nim
[18:02:29] <FromDiscord> <yumi> oh
[18:02:29] <FromDiscord> <yumi> ok
[18:02:34] <FromDiscord> <yumi> thanks a lot
[18:02:48] <PMunch> Because by default a procedure will return the default value of a type at the end
[18:03:01] <FromDiscord> <yumi> also how do i make readline(stdin) not start on a newline?
[18:03:12] <PMunch> So `proc test(): int = discard` will return 0 and `proc test(): string = discard` will return an empty string
[18:03:29] <FromDiscord> <yumi> oh ok
[18:03:58] <PMunch> @Goel, I mean you could create a template called `unreachable`..
[18:04:12] <PMunch> But if it is truly unreachable you can just put a discard in there
[18:04:19] <PMunch> Or a `quit 1`
[18:04:37] <FromDiscord> <ynfle> In reply to @Goel "Yeah i suppose i": You can do `error("Some error message")`
[18:04:59] <FromDiscord> <ynfle> The `{.error.}` means if this part compiles throw an error
[18:05:00] <PMunch> @yumi, do you mean like `readChar`?
[18:05:14] <FromDiscord> <yumi> yeah
[18:05:23] <FromDiscord> <yumi> for the y/n thing
[18:05:38] <PMunch> @yumi, yeah you can use https://nim-lang.org/docs/io.html#readChar%2CFile
[18:05:46] <FromDiscord> <yumi> ok thanks
[18:07:04] <PMunch> And by the way, in `pacmanInstall` you return 1 when it succeeds, or 0 (as the default value), when it doesn't
[18:07:25] <PMunch> This is really just a bool, so you could change the return type to bool and `return true` instead.
[18:08:44] <PMunch> @yumi, instead of `commandLineParams().len` you can use `paramCount()`
[18:09:05] <FromDiscord> <yumi> oh wait yeah
[18:09:07] <FromDiscord> <yumi> thanks
[18:09:27] <FromDiscord> <yumi> damn you guys really are helpful
[18:09:31] <PMunch> This is a syntax error (missing paren) not sure how that would even compile: https://github.com/egor4ka/redplane/blob/main/redplane.nim#L60
[18:09:52] <PMunch> I mean things like `yesToAll` could also be a boolean
[18:09:54] <FromDiscord> <Goel> @ynfle But that won't tell me which line code triggered it
[18:10:15] <FromDiscord> <yumi> In reply to @PMunch "This is a syntax": didnt even compile
[18:10:24] <FromDiscord> <yumi> im editing it currently
[18:10:33] <PMunch> And then you could just do `if yesToAll:` instead of comparing it to `"yes"` or `true`
[18:11:07] <FromDiscord> <yumi> yeah
[18:11:09] <FromDiscord> <yumi> thanks
[18:11:55] <PMunch> Apart from that it looks pretty good code-wise
[18:13:01] <PMunch> @narimiran, maybe mention that procs don't need to have a return type in Nim basics? ^
[18:13:43] <FromDiscord> <narimiran> In reply to @PMunch "<@719992187890434069>, maybe mention that": as in: when they return void?
[18:15:06] <FromDiscord> <narimiran> In reply to @yumi "nim basics never said": oh, now i see what is the mention about ðŸ™‚ @yumi, please open an issue in nimbasics repo if you want; i can add this in some future version of the book
[18:15:07] <FromDiscord> <ynfle> In reply to @Goel "<@!767093711112241162> But that won't": It should. Does it not?
[18:15:26] <PMunch> It seems like @yumi followed Nim basics and ended up writing code like this: https://github.com/egor4ka/redplane/blob/main/redplane.nim because they didn't understand that you didn't have to return something
[18:15:26] <FromDiscord> <ynfle> PMunch, tests fixed https://github.com/PMunch/nimlsp/pull/116
[18:16:03] <FromDiscord> <yumi> dont mind the broken commit i was editing it on github and wanted to save it to download and continue editing
[18:17:03] <FromDiscord> <narimiran> wait, we have the example without a return type!! ðŸ˜„
[18:17:28] <FromDiscord> <narimiran> look at the second and third example here: https://narimiran.github.io/nim-basics/#_declaring_a_procedure
[18:17:34] <FromDiscord> <yumi> oh
[18:17:38] <FromDiscord> <yumi> i didnt notice that
[18:17:43] <FromDiscord> <narimiran> "The echoLanguageRating procedure just echoes the given name, it doesnâ€™t return anything, so the return type is not declared"
[18:17:57] <FromDiscord> <yumi> very nice guide though
[18:18:01] <FromDiscord> <yumi> nim is my first lang
[18:18:14] <FromDiscord> <narimiran> In reply to @yumi "very nice guide though": thanks! i'm really glad to hear that ðŸ™‚
[18:18:38] <FromDiscord> <yumi> don't know what i would do without it
[18:19:02] <FromDiscord> <yumi> can't get away from nim now ðŸ˜„
[18:19:24] <FromDiscord> <narimiran> In reply to @yumi "nim is my first": then you are exactly who is this guide aimed for ðŸ™‚ if you have any complaints and/or ideas how to improve it to make it easier for first-timers, please let me know
[18:19:37] <FromDiscord> <yumi> okay
[18:20:06] <FromDiscord> <yumi> how about a little section on how to parse command line parameters?
[18:20:55] <FromDiscord> <yumi> i was using commandLineParams().contains because the first result for flag parsing was a stackoverflow question
[18:21:14] <FromDiscord> <yumi> but then it turned out parseOpt existed
[18:21:46] <PMunch> @ynfle, thanks a lot for the PR :)
[18:22:57] <FromDiscord> <narimiran> In reply to @yumi "how about a little": i've added an issue (https://github.com/narimiran/nim-basics/issues/21) so i don't forget about it, but i can't promise you when it will be published
[18:23:05] <FromDiscord> <yumi> okay
[18:23:06] <FromDiscord> <yumi> thanks
[18:24:45] <FromDiscord> <ynfle> In reply to @PMunch "<@757977788056600719>, thanks a lot": Pleasure. Copied most of the code from the Original PR and osproc. Never used async, especially with streams. Happy To help.
[18:25:03] <FromDiscord> <ynfle> I hate failing CIs. I'm 1/2 OCD about them
[18:27:55] <FromDiscord> <ynfle> I was suprised when `zippy` wasn't made by @treeform
[18:28:39] <PMunch> Huh, I just assumed it was :P
[18:29:23] <FromDiscord> <ynfle> In reply to @PMunch "Huh, I just assumed": Lol. it's made by guzba
[18:29:35] <FromDiscord> <ynfle> Off to fix the other failing CI
[18:31:29] <FromDiscord> <yumi> btw is it fine to space out the of statements in case?
[18:33:42] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/manual.html#statements-and-expressions-case-statement
[18:34:30] <FromDiscord> <demotomohiro> There is example code that indent of branch.
[18:37:18] <PMunch> @yumi, space out?
[18:37:30] <FromDiscord> <yumi> yeah
[18:37:42] <PMunch> What do you mean by space out?
[18:38:10] <FromDiscord> <yumi> sent a code paste, see https://play.nim-lang.org/#ix=3O96
[18:38:16] <FromDiscord> <yumi> like this
[18:38:17] <FromDiscord> <yumi> (edit) "https://play.nim-lang.org/#ix=3O96" => "https://paste.rs/JLy"
[18:38:38] *** Joins: arkurious (~arkurious@user/arkurious)
[18:40:19] <FromDiscord> <demotomohiro> You dont want to put space between `of` and the expression?
[18:40:25] <FromDiscord> <yumi> no
[18:40:38] <FromDiscord> <yumi> look at the gap between the first of and second of
[18:40:42] <FromDiscord> <yumi> like this
[18:40:48] <FromDiscord> <yumi> just wondering
[18:41:44] <FromDiscord> <Rika> its ok
[18:41:47] <FromDiscord> <Rika> it will work
[18:41:50] <FromDiscord> <yumi> ok
[18:41:52] <FromDiscord> <yumi> cool
[18:42:00] <FromDiscord> <yumi> just wondering, not actually gonna do it
[18:47:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[19:12:13] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[19:14:11] <FromDiscord> <Michal MarÅ¡Ã¡lek> Can my proc pretend it's free of side effects similar to how debugEcho does it?
[19:17:46] <PMunch> Yes
[19:18:15] <PMunch> {.cast(gcsafe).}
[19:18:31] <PMunch> That will make the compiler think your code is gc safe
[19:20:16] <FromDiscord> <yumi> what is gc?
[19:20:46] <FromDiscord> <yumi> nevermind
[19:20:55] <FromDiscord> <yumi> garbage collection
[19:26:17] <FromDiscord> <konsumlamm> that's for `gcsafe`, for side effects there is `{.cast(noSideEffect).}`
[19:27:53] <FromDiscord> <Michal MarÅ¡Ã¡lek> Error: 'cast' pragma only allowed in a statement context
[19:27:57] <FromDiscord> <Michal MarÅ¡Ã¡lek> where do i put it?
[19:28:25] <FromDiscord> <Rika> {.cast(...).}
[19:28:26] <FromDiscord> <Rika> ?
[19:28:28] <FromDiscord> <konsumlamm> you use it like `block`, i.e. by putting `:` after it and indenting the rest
[19:28:42] <FromDiscord> <Rika> oh i didnt read enough
[19:28:42] <FromDiscord> <Rika> xd
[19:28:52] <FromDiscord> <Michal MarÅ¡Ã¡lek> ah
[19:32:32] <FromDiscord> <Michal MarÅ¡Ã¡lek> I must be stupid but it doesn't seem to change anything
[19:35:10] <FromDiscord> <Michal MarÅ¡Ã¡lek> ok, i got It
[19:35:25] <FromDiscord> <Michal MarÅ¡Ã¡lek> one must put it inside the procedure not outside
[19:35:35] <FromDiscord> <Michal MarÅ¡Ã¡lek> thanks
[20:14:36] <FromDiscord> <apahl> sent a long message, see https://paste.rs/7pT
[20:17:24] <PMunch> @apahl, values is declared in the global scope, so it's a global variable and probably will be treated differently
[20:17:54] <PMunch> https://play.nim-lang.org/#ix=3Oap
[20:18:06] <PMunch> Simply wrapping it in a main procedure makes the hint disappear
[20:19:02] <FromDiscord> <apahl> Nice!! Thanks a lot, that's it.
[20:28:05] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[20:39:45] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[20:44:22] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[20:57:49] *** Joins: sagax (~sagax_nb@user/sagax)
[21:09:17] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[21:19:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:24:07] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[21:24:11] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[21:25:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:29:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[21:50:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[22:10:33] <FromDiscord> <ajusa> Has anyone used jnim here? Any examples of interop other than the provided tests?
[22:10:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:21:22] <FromDiscord> <Shiba> so how can i get the clock ticks thing in a nim program
[22:21:27] <FromDiscord> <Shiba> (edit) "program" => "program?"
[22:29:26] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3ObE
[22:29:46] <FromDiscord> <krisppurg> Any reasons to why this is happening despite linking it to the correct path
[22:29:56] <FromDiscord> <krisppurg> (edit) "path" => "path?"
[23:13:43] <Amun-Ra> krisppurg: --passC:path â†’ --passC:-Ipath
[23:14:56] <FromDiscord> <Phil> Wait a minute, you can use `db.exec(sql"BEGIN")` to effectively get a write-lock to the database up until the point you execute `db.exec(sql"COMMIT")`?
[23:15:03] <FromDiscord> <Phil> Fuck yeah
[23:15:28] <Amun-Ra> welcome to the world of transactions
[23:15:42] <FromDiscord> <Phil> I was desperately looking for some kind of "beginTransaction" proc
[23:15:54] <Amun-Ra> ah
[23:16:30] <FromDiscord> <Phil> My heart went to my trousers when I didn't find it and realized I really need some kind of write lock for when I add search data to an fts5 table after I add an entry to a table
[23:16:58] <FromDiscord> <Phil> (edit) "My heart went to my trousers when I didn't find it and realized I really need some kind of write lock for when I add search data to an fts5 table after I add an entry to a ... table" 03added "normal"
[23:17:01] <Amun-Ra> I've never used nim and db together - sometimes db engines have autocommit set to true
[23:17:38] <Amun-Ra> and that can be surprising
[23:17:44] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Oc5
[23:18:05] <FromDiscord> <Phil> My comment was me letting out a sigh of relief at having found a way to do this
[23:18:12] <Amun-Ra> mhm
[23:18:18] <FromDiscord> <Phil> And now on to making myself a template `withTransaction`
[23:18:45] <FromDiscord> <Phil> Actually
[23:18:46] <FromDiscord> <Phil> Hmmm
[23:19:17] <FromDiscord> <Phil> I have a tiny package whose focus is around being a connection pool for an sqlite database
[23:20:16] <FromDiscord> <Phil> It already has a helper proc `withDbConn` that gives you a connection and recycles it immediately once you leave the code block.â†µIn a very similar fashion I could do a `withDbTransaction`... but that kind of feels like it's beyond of what the scope of the package should be
[23:20:18] <FromDiscord> <Phil> hmmm
[23:22:25] <FromDiscord> <Waldecir Santos> I've been using https://exercism.org/dashboard to learn nim, do you guys suggest any other idea to pratice and learn more about nim ?
[23:22:39] <FromDiscord> <Waldecir Santos> (edit) "https://exercism.org/dashboard to" => "https://exercism.org/"
[23:23:01] <FromDiscord> <Phil> Do you have a project lying around that you'd be willing to re-implement?
[23:23:42] <FromDiscord> <Phil> I'd recommend implementing a project any day over exercism & co, it forces you very quickly to learn a fair amount about the language
[23:23:53] <FromDiscord> <Waldecir Santos> not really my only idea was to implement a "django-like" framework on nim, but that is for a future project, not something to learn I think.
[23:23:54] <FromDiscord> <Phil> (edit) "I'd recommend implementing a project ... any" 03added "that you care about"
[23:24:19] <Amun-Ra> or rewrite one of your projects in nim
[23:24:23] <Amun-Ra> to*
[23:24:51] <FromDiscord> <Phil> I have decided, withDbTransaction shall become a database utility proc and not go into the connection pool package
[23:24:54] <FromDiscord> <krisppurg> Now its a different error but it's similar https://media.discordapp.net/attachments/371759389889003532/937798113496813608/message.txt
[23:25:49] <Amun-Ra> empty page
[23:26:03] <FromDiscord> <krisppurg> ?
[23:26:43] <Amun-Ra> krisppurg: I see no contents of message.txt
[23:27:02] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3Oca
[23:27:59] *** Joins: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21)
[23:28:09] <Amun-Ra> that should be -I as in capital i and not lowercase l
[23:28:36] <FromDiscord> <krisppurg> bruh
[23:28:51] <FromDiscord> <krisppurg> didnt notice that
[23:28:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:30:44] <FromDiscord> <krisppurg> still same eror
[23:30:46] <FromDiscord> <krisppurg> (edit) "eror" => "error"
[23:31:45] <Amun-Ra> what directory is opus directory in?
[23:31:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[23:32:05] <FromDiscord> <Phil> Does `raise` in the except block of a `try-except` construct just reraise the caught exception?
[23:32:24] <FromDiscord> <Phil> (edit) "Does ... `raise`" 03added "a blank "
[23:32:25] <Amun-Ra> Phil: like in python? good question
[23:32:41] <FromDiscord> <krisppurg> wait nvm its working now
[23:32:43] <FromDiscord> <krisppurg> pog
[23:32:56] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Oce
[23:33:40] <FromDiscord> <Phil> If it works that way: Good! I'd like to catch an exception, just "rollback" the transaction and then reraise it because I merely want to do a rollback and close the transaction
[23:33:55] <FromDiscord> <Phil> (edit) "transaction" => "transaction, not actually deal with the exception"
[23:34:05] <Amun-Ra> Phil: finally>/
[23:34:08] <Amun-Ra> ?
[23:34:21] <FromDiscord> <Phil> Finally would also act if the transaction succeeds
[23:34:26] <FromDiscord> <Phil> I don't wanna rollback if it works
[23:34:28] <FromDiscord> <Phil> Only if it doesn't
[23:35:12] <FromDiscord> <krisppurg> sent a long message, see http://ix.io/3Ocf
[23:35:51] <FromDiscord> <krisppurg> (edit) "http://ix.io/3Ocf" => "http://ix.io/3Ocg"
[23:36:49] <Amun-Ra> Phil: seems to be working https://play.nim-lang.org/#ix=3Ocj
[23:37:09] <FromDiscord> <Phil> In reply to @Amun-Ra "<@180601887916163073>: seems to be": Sweet! Thanks a lot!
[23:38:55] *** Joins: vicfred (~vicfred@user/vicfred)
[23:39:38] <Amun-Ra> krisppurg: it should work if the file exists C:\Users\KrispPurg\Desktop\Projects\Programming\nim-lang\discord_bots\dimscord\include\opus\opus_defines.h
[23:40:16] <Amun-Ra> tho I'm not much of a windows user
[23:42:20] *** Joins: tiorock (~rc@192.12.114.193)
[23:42:20] *** Quits: tiorock (~rc@192.12.114.193) (Changing host)
[23:42:20] *** Joins: tiorock (~rc@user/rockcavera)
[23:42:20] *** rockcavera is now known as Guest3833
[23:42:20] *** tiorock is now known as rockcavera
[23:43:10] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:45:59] *** Quits: Guest3833 (~rc@user/rockcavera) (Ping timeout: 268 seconds)
