[00:00:35] *** Quits: jao (~jao@87.249.134.38) (Remote host closed the connection)
[00:02:24] <geekosaur> the price of generalizing when you don't need to, whether by polymorphism or some other degree of generalization, is performance and often error messages
[00:03:01] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[00:03:11] <geekosaur> the price of not doing so is possibly finding yourself writing the same function multiple times for different types, which is when you refactor it to a polymorphic function
[00:03:37] <justsomeguy> pareto-optimal-d: What are some points of discussion that you would want to find in a paper like that?
[00:06:10] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[00:06:53] *** Quits: errst (~errst@user/errst) (Quit: Lost terminal)
[00:08:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5)
[00:11:48] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9) (Remote host closed the connection)
[00:12:05] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:12:32] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9)
[00:12:49] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[00:14:32] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:18a5:3f32:4426:9917)
[00:14:40] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[00:17:21] *** Quits: td_ (~td@muedsl-82-207-238-084.citykom.de) (Ping timeout: 256 seconds)
[00:19:59] *** Joins: td_ (~td@muedsl-82-207-238-084.citykom.de)
[00:20:03] *** Joins: Midjak (~Midjak@82.66.147.146)
[00:21:57] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[00:22:11] <catern> I was thinking about how to batch memory allocations of big heterogeneous box-and-pointer data structures (e.g. big ADTs, syntax trees), rather than doing lots of tiny variously-sized allocations one at a time; it occurs to me that maybe lazy evaluation could support this, where you scan a computation-to-be-performed and do all the allocation required for it up-front instead of as-you-go... has there been any work like that?
[00:22:15] *** Joins: pavonia (~user@user/siracusa)
[00:22:47] *** Joins: komikat (~komikat@183.82.154.239)
[00:23:11] <geekosaur> actually laziness pulls in the opposite direction since you may never need to allocate some of it
[00:24:56] <geekosaur> and your memory allocation strategy plays into this as well, because for example the bump-pointer allocator used by ghc's nursery gives you most of this "for free" without having to analyze the structure you'reallocating
[00:24:57] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9) (Remote host closed the connection)
[00:25:11] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9)
[00:26:00] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:26:12] *** Quits: td_ (~td@muedsl-82-207-238-084.citykom.de) (Ping timeout: 240 seconds)
[00:27:09] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9) (Remote host closed the connection)
[00:27:26] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 272 seconds)
[00:27:32] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9)
[00:28:14] *** Joins: td_ (~td@muedsl-82-207-238-084.citykom.de)
[00:28:56] *** Quits: jespada (~jespada@85.255.233.175) (Read error: Connection reset by peer)
[00:36:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5) (Ping timeout: 240 seconds)
[00:36:41] *** Quits: tomku (~tomku@user/tomku) (Quit: Lost terminal)
[00:39:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:39:15] *** Joins: nf (~n@monade.li)
[00:43:05] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:18a5:3f32:4426:9917) (Remote host closed the connection)
[00:46:37] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:52:58] *** Quits: Simacore (~Simacore@2a01cb0583e8cd00701abf51557d62ad.ipv6.abo.wanadoo.fr) (Quit: Client closed)
[00:53:06] *** Joins: cynomys (~cynomys@user/cynomys)
[00:56:30] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[00:58:14] *** Joins: tomku (~tomku@user/tomku)
[00:58:20] *** Quits: jkaye (~jkaye@2601:281:8300:7530:7f9b:646a:41fc:cd06) (Remote host closed the connection)
[00:58:42] *** Joins: jkaye (~jkaye@2601:281:8300:7530:7f9b:646a:41fc:cd06)
[01:00:37] *** Quits: tomku (~tomku@user/tomku) (Client Quit)
[01:01:00] *** Quits: td_ (~td@muedsl-82-207-238-084.citykom.de) (Ping timeout: 272 seconds)
[01:02:14] *** Joins: td_ (~td@muedsl-82-207-238-084.citykom.de)
[01:03:38] *** Joins: tomku (~tomku@user/tomku)
[01:05:56] <geekosaur> in fact allocating it all up front might end up larger than a nursery block, which means invoking the large block allocator which is more expensive. and requires that the whole structure be strict, as I suggested above
[01:07:06] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[01:07:13] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[01:08:15] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:11:29] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:12:02] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:18a5:3f32:4426:9917)
[01:14:34] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[01:16:35] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.254) (Ping timeout: 256 seconds)
[01:19:32] *** Joins: soulomoon (~soulomoon@103.156.242.29)
[01:25:05] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[01:25:55] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:26:26] <pareto-optimal-d> justsomeguy: Basically the costs of not being polymorphic enough in real-world code I guess.
[01:26:46] *** Quits: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot)
[01:27:35] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[01:28:05] <pareto-optimal-d> <geekosaur> "the price of not doing so is..." <- I was more interested in how often implementation errors arise and starting out polymorphically would have prevented them. The trivial example being "swap :: (a,b) -> (b,a)" versus "swapInt :: (Int,Int) -> (Int,Int)".
[01:28:05] <pareto-optimal-d> So I'm looking for more complicated versions of that and whether that type of parametricity being neglected can "cascade" I guess.
[01:28:22] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 260 seconds)
[01:28:25] <geekosaur> you end up duplicating some effort. but you may want to do that for performance reasons, even if you do make it polymorphic (again see SPECIALISE)
[01:29:35] <geekosaur> I think those kinds of situations are relatively rare. there might be some research into it, but it's far more common that excessive polymorphism costs performance
[01:30:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[01:32:19] <pareto-optimal-d> My motivation is that in a large and pretty monomorphic codebase I keep seeing patterns where being monomorphic pushes you into a very suboptimal direction and increases complexity quite a bit. In many of those cases being more polymorphic would have helped or specifying properties about groups of codes with a typeclass perhaps.
[01:32:19] <pareto-optimal-d> I thought/might still think those cases are relatively rare, but it's annoying me enough I want some more concrete proof :)
[01:32:36] *** Joins: Pickchea (~private@user/pickchea)
[01:32:42] *** Quits: michalz (~michalz@185.246.204.75) (Remote host closed the connection)
[01:32:59] <geekosaur> typeclass polymorphism is a different thing from parametric polymorphism
[01:33:49] *** Joins: michalz (~michalz@185.246.204.93)
[01:34:05] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:34:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:34:26] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:37:17] <pareto-optimal-d> Yes, for sure. Quite difference reasons for them potentially lowering complexity. But... and I don't even know if this makes sense... it made me wonder about typeclass polymorphism of all monomorphic functions versus typeclass polymorphism of polymorphic functions too and if there's any difference.
[01:37:17] <pareto-optimal-d> Of course it's EOD friday and my brain is kinda done so that might be nonsense :)
[01:37:21] <geekosaur> and notably, any time you think you have grounds to make a new typeclass, you should consider whether a record of functions would be a better solution
[01:41:23] <pareto-optimal-d> Ah, I've been writing in my Zettlekasten all day about that one too. 
[01:41:23] <pareto-optimal-d> I don't have enough evidence to support that one position or the other on type-classes yet.
[01:41:23] <pareto-optimal-d> The best counter-argument I found is "usually doing natural transformation type things that record of functions would allow is an anti-pattern" or something along those lines.
[01:41:23] <pareto-optimal-d> I need to personally tryout records of functions more to get a feel for them though since that's a consideration as well.
[01:43:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5)
[01:44:46] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[01:47:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5) (Ping timeout: 240 seconds)
[01:52:47] *** Quits: Pickchea (~private@user/pickchea) (Remote host closed the connection)
[01:53:29] *** Joins: Pickchea (~private@user/pickchea)
[01:55:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:56:32] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[02:00:18] *** Quits: Hash (~Hash@hashsecurity.org) (K-Lined)
[02:00:41] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:02:02] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:02:11] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 256 seconds)
[02:05:26] <monochrom> catern: In GHC-generated code, each tiny allocation is a fairly cheap "if heap_top+n < limit then heap_top += n else call GC" so there is already a batch allocation behind these micro allocations.
[02:06:17] <monochrom> To be sure, I forgot whether it's "+ and <" or "- and >" but you get the point either way. :)
[02:06:41] <catern> geekosaur: hm I see, fair, fair
[02:06:50] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:07:04] <monochrom> And yeah laziness means that premature allocation is unwise.
[02:07:27] <monochrom> Well, premature micro allocation.
[02:10:18] *** Joins: emad (~emad@102.45.236.212)
[02:11:51] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:16:46] *** Joins: acidjnk (~acidjnk@p200300d0c723f8082c8a6c2f22489a41.dip0.t-ipconnect.de)
[02:17:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[02:18:44] *** Joins: komikat (~komikat@183.82.154.239)
[02:23:09] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 256 seconds)
[02:23:31] *** Joins: zebrag (~chris@user/zebrag)
[02:25:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[02:26:46] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[02:32:36] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[02:33:02] *** Joins: alp (~alp@user/alp)
[02:33:06] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9) (Remote host closed the connection)
[02:34:24] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:36:19] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:45:10] *** Quits: fendor (~fendor@91.141.48.142.wireless.dyn.drei.com) (Remote host closed the connection)
[02:45:59] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[02:46:33] *** Joins: dvdrw (~dvdrw@user/dvdrw)
[02:47:15] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 256 seconds)
[02:50:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5)
[02:50:15] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[02:51:49] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[02:53:43] *** Joins: cheater (~Username@user/cheater)
[02:57:32] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:03:32] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[03:03:48] *** Joins: thyriaen (~thyriaen@dynamic-078-054-025-201.78.54.pool.telefonica.de)
[03:04:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:04:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:04:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:04:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:04:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:05:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:05:18] *** Quits: michalz (~michalz@185.246.204.93) (Remote host closed the connection)
[03:05:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:16:25] *** Joins: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net)
[03:17:24] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:18:50] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[03:21:15] *** Quits: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[03:21:24] *** Quits: jkaye (~jkaye@2601:281:8300:7530:7f9b:646a:41fc:cd06) (Ping timeout: 240 seconds)
[03:22:03] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[03:23:15] *** Quits: soulomoon (~soulomoon@103.156.242.29) (Quit: Client closed)
[03:24:55] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[03:25:13] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[03:26:53] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[03:27:11] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[03:31:01] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[03:33:23] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[03:37:01] *** Quits: acidjnk (~acidjnk@p200300d0c723f8082c8a6c2f22489a41.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[03:38:46] *** Quits: dvdrw (~dvdrw@user/dvdrw) (Quit: leaving)
[03:38:55] *** Joins: cronjob[m] (~cronjobma@2001:470:69fc:105::74e7)
[03:45:43] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Quit: Konversation terminated!)
[03:46:32] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.4)
[03:46:33] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:46:45] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:47:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5) (Remote host closed the connection)
[03:47:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5)
[03:49:25] *** Quits: Null_A (~null_a@2601:645:8700:2290:d551:3b83:119f:82c5) (Read error: Connection reset by peer)
[03:49:40] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[03:51:35] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[03:52:04] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Client Quit)
[03:53:38] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[03:53:56] *** Joins: Null_A (~null_a@2601:645:8700:2290:f908:18aa:857e:feef)
[03:55:34] *** Joins: deadmarshal (~deadmarsh@95.38.117.81)
[03:56:39] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:57:10] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:59:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:00:14] *** Quits: deadmarshal (~deadmarsh@95.38.117.81) (Ping timeout: 272 seconds)
[04:01:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:f908:18aa:857e:feef) (Remote host closed the connection)
[04:04:31] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[04:05:14] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[04:06:12] *** Quits: polezaivsani` (~polezaivs@orangeshoelaces.net) (Ping timeout: 240 seconds)
[04:07:27] *** Parts: ravella (~ravella@user/ryanavella) ()
[04:10:34] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:d5ee:1d14:9bcb:60b5) (Quit: bye)
[04:11:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:f908:18aa:857e:feef)
[04:12:26] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:3c41:61f1:c406:ca35)
[04:13:29] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Ping timeout: 252 seconds)
[04:20:27] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:3c41:61f1:c406:ca35) (Quit: bye)
[04:21:02] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:3c41:61f1:c406:ca35)
[04:23:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:f908:18aa:857e:feef) (Ping timeout: 240 seconds)
[04:25:15] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[04:26:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:29:42] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[04:30:43] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[04:31:13] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[04:32:23] *** Quits: cosimone` (~user@93-34-132-33.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[04:32:31] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:33:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[04:34:17] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:34:35] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:3c41:61f1:c406:ca35) (Remote host closed the connection)
[04:35:16] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::8c21)
[04:36:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[04:39:07] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[04:39:09] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:39:26] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[04:40:51] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:41:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[04:43:07] *** Quits: nehsou^ (~nehsou@50-202-219-146-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[04:43:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[04:44:08] *** Joins: Everything (~Everythin@37.115.210.35)
[04:45:49] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[04:46:04] *** Quits: emad (~emad@102.45.236.212) (Quit: Leaving)
[04:46:06] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[04:46:57] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:49:54] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[04:50:11] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[04:50:15] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[04:50:55] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[04:50:59] *** Joins: Midjak (~Midjak@82.66.147.146)
[04:53:52] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[04:54:09] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[04:55:12] *** Quits: Midjak (~Midjak@82.66.147.146) (Client Quit)
[04:55:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:55:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:55:41] *** Joins: wroathe (~wroathe@user/wroathe)
[04:57:50] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[04:58:08] *** Joins: haskellnoob (~haskellno@181.122.131.227)
[04:58:30] *** Quits: haskellnoob (~haskellno@181.122.131.227) (Remote host closed the connection)
[05:10:21] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[05:18:59] *** Joins: alx741 (~alx741@157.100.197.240)
[05:20:17] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:22:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:24:50] *** Quits: alp (~alp@user/alp) (Ping timeout: 250 seconds)
[05:28:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:28:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:28:02] *** Joins: wroathe (~wroathe@user/wroathe)
[05:29:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 256 seconds)
[05:32:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:33:33] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[05:37:12] *** Joins: alx741 (~alx741@157.100.197.240)
[05:39:57] *** Quits: Taneb (~Taneb@2001:41c8:51:10d:aaaa:0:aaaa:0) (Ping timeout: 240 seconds)
[05:40:10] *** Joins: Taneb (~Taneb@runciman.hacksoc.org)
[05:41:01] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:41:07] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:45:45] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[05:54:41] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:57:34] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[05:58:47] *** Joins: alx741 (~alx741@157.100.197.240)
[06:02:12] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:08:37] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:09:35] *** Joins: justAstache (~justache@user/justache)
[06:13:53] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[06:15:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[06:20:11] *** Joins: alx741 (~alx741@181.199.42.143)
[06:20:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[06:21:10] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[06:22:28] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[06:22:28] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[06:22:39] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[06:22:57] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::8c21) (Ping timeout: 240 seconds)
[06:26:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[06:30:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:31:32] *** Quits: xff0x (~xff0x@2001:1a81:5223:6600:a3c2:39de:9e6e:87f3) (Ping timeout: 240 seconds)
[06:33:35] *** Joins: xff0x (~xff0x@2001:1a81:525a:f300:26c6:1f7b:9957:1c71)
[06:39:35] *** Joins: alx741 (~alx741@157.100.197.240)
[06:43:42] *** Joins: off^ (~off@50-202-219-146-static.hfc.comcastbusiness.net)
[06:43:42] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:46:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[06:47:46] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:50:37] *** Quits: shailangsa (~shailangs@host109-152-9-189.range109-152.btcentralplus.com) (Ping timeout: 256 seconds)
[06:50:54] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:52:04] *** Joins: notzmv (~zmv@user/notzmv)
[06:53:11] *** Quits: td_ (~td@muedsl-82-207-238-084.citykom.de) (Ping timeout: 256 seconds)
[06:54:27] *** Joins: nerdypepper (~nerdypepp@user/nerdypepper)
[06:55:06] *** Joins: td_ (~td@94.134.91.30)
[06:58:02] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:18a5:3f32:4426:9917) (Remote host closed the connection)
[07:00:55] *** Joins: alx741 (~alx741@181.199.42.143)
[07:05:14] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[07:07:26] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:18a5:3f32:4426:9917)
[07:22:19] *** Joins: alx741 (~alx741@181.199.42.143)
[07:22:58] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[07:23:14] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:23:59] *** Joins: thyriaen_ (~thyriaen@dynamic-089-012-029-109.89.12.pool.telefonica.de)
[07:24:45] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[07:26:12] *** Quits: thyriaen (~thyriaen@dynamic-078-054-025-201.78.54.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:32:02] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:32:19] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:35:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:35:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:35:15] *** Joins: wroathe (~wroathe@user/wroathe)
[07:37:10] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[07:41:39] *** Joins: alx741 (~alx741@181.199.42.143)
[07:46:11] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[07:50:52] *** Joins: Techcable (~Techcable@168.235.93.147)
[07:54:12] *** Joins: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com)
[08:03:03] *** Joins: alx741 (~alx741@157.100.197.240)
[08:03:29] *** Joins: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net)
[08:10:10] *** Quits: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:13:18] *** Joins: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net)
[08:13:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:14:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[08:16:30] *** Quits: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:18:50] *** Joins: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net)
[08:19:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[08:23:15] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[08:23:33] *** Quits: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:25:13] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:30:21] *** Joins: alx741 (~alx741@181.199.42.143)
[08:40:18] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[08:47:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[08:49:26] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[08:51:42] *** Joins: mbuf (~Shakthi@117.96.199.11)
[08:55:00] *** Joins: komikat (~komikat@183.82.154.239)
[08:57:39] *** Joins: alx741 (~alx741@181.199.42.143)
[08:57:54] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[09:00:21] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 245 seconds)
[09:02:11] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[09:07:57] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[09:08:34] *** Joins: texasmynsted (~texasmyns@99.96.221.112)
[09:08:37] *** Joins: komikat (~komikat@183.82.154.239)
[09:08:59] <texasmynsted> is there a _better_ way to print haskell source code from the command line than enscript?
[09:11:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:17:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:17:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:17:03] *** Joins: wroathe (~wroathe@user/wroathe)
[09:17:59] *** Quits: thyriaen_ (~thyriaen@dynamic-089-012-029-109.89.12.pool.telefonica.de) (Quit: Leaving)
[09:19:03] *** Joins: alx741 (~alx741@157.100.197.240)
[09:21:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[09:22:55] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[09:23:03] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[09:23:18] *** Joins: raym (~raym@user/raym)
[09:25:53] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[09:27:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:27:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:27:29] *** Joins: wroathe (~wroathe@user/wroathe)
[09:30:54] *** Joins: deadmarshal (~deadmarsh@95.38.117.81)
[09:31:24] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[09:32:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:36:37] *** Quits: analognoise (~analognoi@45.83.89.205) (Quit: Leaving)
[09:36:47] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[09:37:36] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[09:37:50] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[09:41:55] *** Joins: coot (~coot@213.134.190.95)
[09:42:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:43:08] *** Quits: emf (~emf@2620:10d:c090:400::5:7b2f) (Quit: emf)
[09:44:01] *** Quits: coot (~coot@213.134.190.95) (Remote host closed the connection)
[09:44:32] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[09:47:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[09:47:13] <texasmynsted> hm. source-highlight helps a bit
[09:47:59] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:48:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[09:49:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:49:32] *** Joins: alx741 (~alx741@181.199.42.143)
[09:53:19] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[09:53:24] *** Quits: phma (phma@2001:5b0:215a:e178:614c:eec1:3e13:9455) (Read error: Connection reset by peer)
[09:54:01] *** Joins: alx741 (~alx741@157.100.197.240)
[09:57:05] *** Joins: phma (~phma@host-67-44-208-8.hnremote.net)
[09:57:16] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[09:58:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:58:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[10:00:36] *** Quits: raym (~raym@user/raym) (Ping timeout: 272 seconds)
[10:01:59] *** Joins: raym (~raym@user/raym)
[10:02:18] *** Joins: bahamas (~lucian@84.232.140.52)
[10:07:20] *** Quits: tomku (~tomku@user/tomku) (Quit: Lost terminal)
[10:08:41] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:5bf7:7723:bd1c:6732) (Ping timeout: 245 seconds)
[10:14:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[10:15:05] *** Joins: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net)
[10:15:42] *** Joins: alx741 (~alx741@157.100.197.240)
[10:17:11] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[10:18:35] *** Joins: shryke_ (~shryke@91.103.43.254)
[10:18:35] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:19:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[10:21:27] *** Quits: shryke (~shryke@91.103.43.254) (Ping timeout: 252 seconds)
[10:23:24] *** Joins: tomku (~tomku@user/tomku)
[10:30:03] *** Joins: k8yun (~k8yun@user/k8yun)
[10:31:26] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[10:36:25] *** Joins: alx741 (~alx741@157.100.197.240)
[10:41:08] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:41:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[10:42:50] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:46:07] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[10:48:55] <sm> texasmynsted: random suggestion: wrap it in ```haskell  ... ``` in obsidian.md and print from there ?
[10:51:33] *** Joins: bahamas (~lucian@84.232.140.52)
[10:56:20] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[10:57:25] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[10:57:43] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:58:54] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[10:58:57] *** Joins: alx741 (~alx741@157.100.197.240)
[11:00:20] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[11:01:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:18a5:3f32:4426:9917) (Remote host closed the connection)
[11:02:13] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[11:03:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:05:10] *** Joins: Erutuon (~Erutuon@user/erutuon)
[11:07:55] *** Joins: bahamas (~lucian@84.232.140.52)
[11:12:43] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[11:15:58] *** Quits: yauhsien_ (~yauhsien@61-231-21-135.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[11:17:49] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[11:18:25] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:19:53] *** Joins: alx741 (~alx741@181.199.42.143)
[11:22:46] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:f10f:3b24:c2c7:662e) (Quit: Leaving)
[11:23:13] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[11:25:14] *** Quits: xff0x (~xff0x@2001:1a81:525a:f300:26c6:1f7b:9957:1c71) (Ping timeout: 252 seconds)
[11:26:46] *** Joins: xff0x (~xff0x@2001:1a81:526f:1100:914:bfff:f86c:b7c0)
[11:28:17] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[11:28:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:28:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:28:17] *** Joins: wroathe (~wroathe@user/wroathe)
[11:29:07] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:14c2:362b:4032:a582)
[11:32:44] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:fc98:bb5f:7d17:fcbd) (Ping timeout: 250 seconds)
[11:33:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[11:38:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[11:40:09] *** Joins: alx741 (~alx741@181.199.42.143)
[11:44:14] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[11:44:52] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[11:45:37] *** Joins: alx741 (~alx741@157.100.197.240)
[11:47:03] *** Joins: alp (~alp@user/alp)
[11:48:18] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:53:00] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[11:56:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[11:58:30] *** Joins: komikat (~komikat@183.82.154.239)
[12:00:08] *** Joins: acidjnk (~acidjnk@p200300d0c723f8082c8a6c2f22489a41.dip0.t-ipconnect.de)
[12:00:56] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[12:01:10] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[12:02:00] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[12:03:19] *** Joins: komikat (~komikat@183.82.154.239)
[12:04:42] *** Joins: alx741 (~alx741@157.100.197.240)
[12:06:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Ping timeout: 240 seconds)
[12:07:13] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[12:10:37] *** Joins: Erutuon (~Erutuon@user/erutuon)
[12:10:45] *** Joins: kuribas (~user@ptr-25vy0i8e4r37e819m2o.18120a2.ip6.access.telenet.be)
[12:11:29] <kuribas> https://techcrunch.com/2022/02/22/graphql-developer-platform-hasura-raises-100m-series-c/?guccounter=1&guce_referrer=aHR0cHM6Ly93d3cucmVkZGl0LmNvbS8&guce_referrer_sig=AQAAAAZl5rjSZK7JJWe4m9x0GhIn3QLbhvCZWQaLRi2pA7DxePPmh8GQddYs-G3M5WmP7YiV2YuDNTZsTfe8i1lFEAm-hv1gaCnV1mGZU2887bAEa8fdsoH1tKXcID372g_yWj-rLgV2clVCGxz2WZ_NIrFC4Ktigzqu3xhCOdt68den
[12:11:34] <kuribas> Why am I not convinced this is a good thing?
[12:11:57] <kuribas> “The enterprise developer is just absolutely bogged down with complexity,” 
[12:12:23] <kuribas> 'They’re like, ‘man, I have like a thousand models in this legacy data system. I have a bunch of new stuff that is ML/AI enriched in this new system. I have these legacy APIs. And all I really want to do is modernize my application screen so that somebody can see their billing history.’
[12:12:46] <kuribas> So how does using the database as an interface reduce that complexity?
[12:13:08] <kuribas> It just sounds like a good on paper, but terrible in practice thing.
[12:13:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:14:14] <[exa]> kuribas: they apparently do not have a database at all right now
[12:14:34] <kuribas> [exa]: well no, the customer has one right?
[12:15:09] <[exa]> "legacy data system" kinda avoids referring to anything sensible
[12:15:44] <kuribas> I mean, I am happy for them to be successful, but I just feel this is another bad solution thrown on the market.
[12:16:12] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[12:16:42] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[12:16:49] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:18:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[12:19:39] <[exa]> nah, people love graph databases
[12:24:07] <Hecate> (in theory)
[12:25:23] <Hecate> I'm not the target audience for Hasura, so I also don't care much about it
[12:27:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[12:27:55] <kuribas> [exa]: Hasura isn't a graph database.
[12:28:14] <kuribas> [exa]: It just creates a graphql interface to any database, AFAIK.
[12:28:59] <kuribas> graphql is a query language, but more directed towards end users than developers.
[12:29:38] <kuribas> It's like rest, but allows you to batch queries, and return custom tree structures.
[12:29:48] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[12:30:06] *** Quits: JoseC[m] (~jmcardonm@2001:470:69fc:105::1:7539) (Quit: You have been kicked for being idle)
[12:30:11] <kuribas> IMO that's where the impedance mismatch is.  A SQL database isn't meant for end-users, it's for developers.
[12:30:26] *** Joins: JoseC[m] (~jmcardonm@2001:470:69fc:105::1:7539)
[12:30:50] <kuribas> So you end up having to bridge this mismatch in the DB, instead of in a proper programming language.
[12:31:19] <kuribas> But apparently, this is what people want.   Maybe it appeals to people who only know SQL?
[12:31:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[12:33:50] *** Joins: alx741 (~alx741@181.199.42.143)
[12:35:27] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:35:33] *** Joins: cfricke (~cfricke@user/cfricke)
[12:36:03] <[exa]> kuribas: "looks like a graph", yeah, that's the magick
[12:38:28] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[12:39:38] <[exa]> the problem there is that you get data where applying the "usual" relational normal forms is not practical (spawns too many tables, query size esplodes, etc), and at the same time you don't know what the data access is going to look like because that's the concern of user choice or topic of research
[12:40:17] <[exa]> having a graph-ish frontend at that point just pays off
[12:40:48] <[exa]> (btw check out the yuge semantic databases in RDF)
[12:41:43] *** Quits: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot)
[12:44:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[12:47:29] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[12:49:39] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: reconnecting)
[12:49:53] <kuribas> [exa]: I am not debating that having a graph-ish frentend is a good thing :)
[12:49:54] *** Joins: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net)
[12:49:54] *** Quits: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net) (Changing host)
[12:49:54] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[12:50:07] <kuribas> I just don't think SQL is the best way to create interfaces.
[12:50:21] *** Joins: bahamas (~lucian@84.232.140.52)
[12:51:19] <kuribas> [exa]: btw, the query size can still explode, since the backend needs to generate the queries.
[12:51:34] <kuribas> In that's way worse with automated tools than with a custom solution.
[12:52:26] <kuribas> I've been actually working on this problem for our APIs, and I can tell with certainly that no automated tool would work for that.
[12:53:12] <kuribas> At best, you'ld need to create views and stored procedures to make something appealing.
[12:53:57] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Client Quit)
[12:54:11] *** Joins: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net)
[12:54:11] *** Quits: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net) (Changing host)
[12:54:11] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[12:54:56] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 245 seconds)
[12:55:13] *** Joins: alx741 (~alx741@181.199.42.143)
[12:55:22] *** Joins: bahamas (~lucian@188.24.153.252)
[12:58:13] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[13:02:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 260 seconds)
[13:04:36] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[13:04:53] *** Joins: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net)
[13:04:53] *** Quits: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net) (Changing host)
[13:04:53] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[13:12:36] <[exa]> kuribas: re SQL, do you have a better sufficiently proliferated API for storage backends of structured data?
[13:13:30] <[exa]> anyway yeah it's not optimal by far... otoh I've been around development of one sparql frontend to sql and sql was actually the least problematic part :D
[13:15:29] *** Joins: alx741 (~alx741@157.100.197.240)
[13:15:58] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[13:17:34] *** Quits: bahamas (~lucian@188.24.153.252) (Ping timeout: 272 seconds)
[13:19:05] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:19:19] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[13:19:57] <InternetCitizen> is it safe to be on Stack Nightly?
[13:22:12] <InternetCitizen> also, why is that somehow GHC 9.2.1 > GHC 9.0.2 ?
[13:22:39] <InternetCitizen> the first was released on 29 October 2021, but the second 25 December 2021
[13:22:52] *** Joins: bahamas (~lucian@84.232.140.52)
[13:26:56] *** Joins: burnsidesLlama (~burnsides@rrcs-24-43-239-146.west.biz.rr.com)
[13:29:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:29:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:29:03] *** Joins: wroathe (~wroathe@user/wroathe)
[13:29:34] <kuribas> [exa]: no, I think SQL is great as API for developers.
[13:30:04] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[13:31:23] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:33:02] *** Quits: acidjnk (~acidjnk@p200300d0c723f8082c8a6c2f22489a41.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:34:02] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:34:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[13:35:30] *** Joins: alx741 (~alx741@181.199.42.143)
[13:39:17] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[13:39:59] *** Joins: alx741 (~alx741@157.100.197.240)
[13:41:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[13:43:32] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:56:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[13:59:12] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9)
[14:00:05] *** Joins: alx741 (~alx741@157.100.197.240)
[14:02:26] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:2c18:b650:f4c7:9238)
[14:04:02] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[14:04:02] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:06:00] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[14:06:16] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:08:12] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Ping timeout: 240 seconds)
[14:10:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[14:13:11] *** Quits: burnsidesLlama (~burnsides@rrcs-24-43-239-146.west.biz.rr.com) (Read error: Connection reset by peer)
[14:13:16] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[14:13:42] *** Joins: burnsidesLlama (~burnsides@rrcs-24-43-239-146.west.biz.rr.com)
[14:19:44] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[14:21:13] *** Joins: alx741 (~alx741@181.199.42.143)
[14:22:10] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[14:24:02] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[14:24:42] *** Joins: alx741 (~alx741@157.100.197.240)
[14:25:07] *** Quits: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com) (Remote host closed the connection)
[14:25:22] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 260 seconds)
[14:26:22] *** Joins: mmhat (~mmh@55d4cbdc.access.ecotel.net)
[14:26:28] <geekosaur> InternetCitizen, it's a long story. 8.10.7 is also involved. everyone hopes this mess won't happen again
[14:26:47] <geekosaur> although they're now thinking of formalizing part of it into LTS releases with 8.10 as the first
[14:27:47] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:27:51] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[14:31:32] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9) (Remote host closed the connection)
[14:31:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[14:32:58] *** Joins: bahamas (~lucian@84.232.140.52)
[14:33:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:37:24] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[14:38:04] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[14:46:17] *** Joins: alx741 (~alx741@157.100.197.240)
[14:49:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:49:30] *** Joins: __monty__ (~toonn@user/toonn)
[14:49:46] *** Joins: alx741 (~alx741@181.199.42.143)
[14:51:50] <InternetCitizen> geekosaur: any recommended reading? I'm genuinly curious now
[14:52:06] <InternetCitizen> reminds me of when ghc deleted your files on Windows
[14:52:30] <geekosaur> I don't think there's a writeup of the whole thing.
[14:52:30] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[14:53:00] <geekosaur> 8.10.4 was current when 9.0.1 was released with linear types as its main feature
[14:54:08] <geekosaur> apple released the M1 with its own odd not-quite-ARM ABI, so 8.10.5 was released with support via LLVM. this was buggy so we ended up with 8.10.7 by the time it all shook down
[14:54:34] <geekosaur> then came 9.2.1 with a number of new features, but native (not via LLVM) M1 support was one of them. this turned out to also be buggy
[14:55:00] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 240 seconds)
[14:55:06] <geekosaur> so 9.0.2 has been releasedfixing the various bugs in 9.0.1, while they worked on the sign extension bugs in 9.2.1
[14:55:13] <geekosaur> we're still waiting on 9.2.2
[14:55:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[14:55:34] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:55:54] <InternetCitizen> and I suppose all the work on 9.2.2 is about fixing M1 support?
[14:56:54] <geekosaur> noit all of it, there's some work on the new WinIO manager as well
[14:57:38] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[14:57:41] *** Joins: rtsn (~nstr@user/rtsn)
[14:58:57] <geekosaur> (background on that is the ghc runtime's I/O manager has always been a half-assed emulation of unix on windows, which has caused a number of problems. a new I/O manager was introduced in 9.2.1 (I think) which has native Windows support insteadof the Unix emulation.)
[14:58:58] *** Quits: burnsidesLlama (~burnsides@rrcs-24-43-239-146.west.biz.rr.com) (Read error: Connection reset by peer)
[14:59:20] <maerwald[m]> I wish all of this was backported to 8.10
[15:00:06] <maerwald[m]> I have zero interest in the new language features of 9.x, but in the improved platform support
[15:03:31] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[15:05:00] *** Joins: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com)
[15:09:02] *** Joins: alx741 (~alx741@181.199.42.143)
[15:12:27] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[15:14:51] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[15:15:18] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:15:31] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9)
[15:16:07] *** Joins: zaquest (~notzaques@5.130.79.72)
[15:16:48] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[15:20:56] *** Joins: Ariakenom (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se)
[15:22:09] *** Joins: cynomys (~cynomys@user/cynomys)
[15:23:27] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[15:24:48] *** Joins: michalz (~michalz@185.246.204.65)
[15:26:00] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:e530:c2a8:6798:30a9) (Remote host closed the connection)
[15:27:00] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 240 seconds)
[15:27:15] <geekosaur> you may get your wish. did you see the discussion about moving to an LTS model?
[15:29:17] *** Joins: alx741 (~alx741@157.100.197.240)
[15:30:33] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:31:01] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[15:31:26] <geekosaur> https://mail.haskell.org/pipermail/ghc-devs/2022-February/020583.html ff.
[15:31:43] *** Joins: bahamas (~lucian@84.232.140.52)
[15:32:34] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:38:02] <Hecate> oh hey that's me
[15:39:13] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[15:39:41] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:a81a:aef8:4653:fe6c)
[15:42:32] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[15:43:36] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[15:46:00] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[15:46:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[15:47:05] <jkaye[m]> Would it really be good to encourage users to stay a major version behind? Honest question. I understand LTS for bugs/regressions, but would it make sense to spend GHC dev time on backporting platform support to older versiond?
[15:48:11] <Hecate> well, what *
[15:48:12] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[15:48:19] <geekosaur> there's already an uncomfortable tension between the folks who want bleeding edge features and the ones who would like to not have to chase a rapidly moving target
[15:48:20] <Hecate> *is* an older version, in the end
[15:48:47] <Hecate> at present time, 8.10.7 is the only reasonable version for companies because of the ecosystem support
[15:48:47] <geekosaur> there's at least two discussions of that on the haskell discourse right now
[15:48:51] <maerwald[m]> jkaye: I don't know. But if I had more time or more knowledge about GHC, I'd do it myself. 
[15:48:53] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[15:49:39] <Hecate> jkaye[m]: one cannot retire the 8.10 series until *a whole lot* of packages suddenly support 9.0/9.2
[15:49:58] <maerwald[m]> Right now, stability i, especially in terms of GHC, is something that only happens occasionally 
[15:50:05] <maerwald[m]> That's not good enough imo
[15:50:23] <jkaye[m]> Hmm, that makes sense. I guess I didn't realize how much work was required to support 9.x
[15:50:31] <maerwald[m]> 8.6.5 was a very popular release for example 
[15:50:35] <Hecate> maerwald[m]: I would even say "accidentally"
[15:50:38] <maerwald[m]> 8.10.7 seems to be too
[15:50:40] *** Joins: alx741 (~alx741@181.199.42.143)
[15:50:53] <Hecate> the current GHC dev team doesn't view stability as part of their responsibilities
[15:51:04] <jkaye[m]> What I'm really thinking of is the Python diaspora, which should be avoided at almost any cost imo
[15:51:05] <Hecate> you have to come from the outside and ask for it 
[15:51:30] <Hecate> jkaye[m]: I don't understand the parallel
[15:51:58] <jkaye[m]> Well, replace Haskell with python and 9.x with 3 and the statement is really similar 
[15:52:13] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[15:52:30] <jkaye[m]> "One cannot retire the 2 series until a lot of packages support 3" is essentially exactly what happened over there 
[15:52:30] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[15:52:53] <maerwald[m]> 9.x is mostly moving towards barely finished language features 
[15:53:00] <jkaye[m]> I do not think the current situation is anything close to that, to be clear. Just drawing a parallel
[15:53:08] *** Joins: alx741 (~alx741@157.100.197.240)
[15:55:57] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:59:09] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[16:02:19] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[16:02:51] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[16:05:07] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:05:59] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[16:06:13] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[16:10:15] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Ping timeout: 250 seconds)
[16:11:53] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[16:12:26] *** Joins: komikat (~komikat@183.82.154.239)
[16:13:11] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[16:13:40] *** Joins: alx741 (~alx741@181.199.42.143)
[16:14:41] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[16:16:03] <mason0> hi. in one module a lot of constraints that are repeated throughout my code. is there a way to clean that up? something like MyConstraints = (Eq a, Show a, ...)
[16:16:07] <mason0> +I have
[16:16:41] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[16:16:54] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 260 seconds)
[16:16:54] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[16:17:14] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[16:19:00] *** Quits: xff0x (~xff0x@2001:1a81:526f:1100:914:bfff:f86c:b7c0) (Ping timeout: 240 seconds)
[16:19:12] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[16:19:56] *** Joins: xff0x (~xff0x@2001:1a81:526f:1100:2a8a:98e3:7598:70a0)
[16:23:19] *** Joins: komikat (~komikat@183.82.154.239)
[16:23:22] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[16:25:00] <geekosaur> you can make a type alias for them. it may require ConstraintKinds extension
[16:25:18] <geekosaur> type C a = (Eq a, Show a, ...)
[16:25:19] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[16:26:08] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[16:26:39] <geekosaur> (make sure the 'a' is still a parameter or you will get surprising results, because it would be implicitly `forall`-ed
[16:26:40] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[16:26:43] <geekosaur> )
[16:28:05] <mason0> that worked nicely
[16:28:07] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[16:28:12] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 272 seconds)
[16:29:30] *** Joins: komikat (~komikat@183.82.154.239)
[16:29:43] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[16:29:55] *** Joins: komikat (~komikat@183.82.154.239)
[16:33:54] *** Joins: alx741 (~alx741@181.199.42.143)
[16:37:44] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[16:38:23] *** Joins: alx741 (~alx741@157.100.197.240)
[16:41:41] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[16:42:31] *** Joins: fef (~thedawn@user/thedawn)
[16:42:51] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:43:41] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[16:46:00] <mason0> I am trying to do something a bit questionable .. unsafePerformIO some structure that is assigned to top-level variable, to check if some properties are true (if they are, my program should quit). I thought unsafePerformIO alone would be enough, but exiting is still delayed until that structure is evaluated. do I need to use deepseq?
[16:46:36] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[16:46:47] <c_wraith> that won't help either.
[16:46:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[16:47:01] <c_wraith> top-level values aren't evaluated until demanded.
[16:47:10] <c_wraith> nothing you can do will change that.
[16:47:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:47:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:47:25] *** Joins: wroathe (~wroathe@user/wroathe)
[16:47:33] <mason0> deepseq in main should do it, no?
[16:48:16] <c_wraith> if you're going to do that, no need to unsafePerformIO anything
[16:48:26] <c_wraith> just do the work in main
[16:48:35] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[16:48:52] <mason0> then I have to pass that top-level variable to all the functions that work with it.. I guess it would work, but it would require a lot of code change, plus more clutter
[16:49:22] <c_wraith> in an important sense, that's more honest
[16:49:55] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[16:50:06] <c_wraith> If you depend on something that is the result of executing an IO value at run time, it's a lot more honest to make it a parameter
[16:50:52] <c_wraith> If it seems like clutter, it's probably time to look into arranging things to reduce the clutter
[16:50:53] <mason0> I am only using IO to force evaluation. the code itself is pure
[16:51:07] <c_wraith> then why is unsafePerformIO involved at all?
[16:51:31] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[16:51:56] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[16:52:04] <mason0> yeah right I don't need it. I thought that would force evaluation at top level, but it doesn't. I still need to deepseq that variable in main, so I guess that is less questionable
[16:52:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:53:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:54:04] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[16:54:57] *** Quits: mbuf (~Shakthi@117.96.199.11) (Read error: Connection reset by peer)
[16:55:40] *** Joins: mbuf (~Shakthi@117.96.199.11)
[17:01:19] <mason0> ok, I made this way too complex trying to make it work automatically. I can just do exitIfPropertyTrue topLevelVar in main. and I guess it needs to be IO, to ensure exception crashes the program right there?
[17:02:11] <geekosaur> don't even need an exception (unless that's how it reports anyway), just exitFailure
[17:02:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[17:03:42] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[17:04:39] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[17:06:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[17:08:30] *** Joins: alx741 (~alx741@157.100.197.240)
[17:09:01] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[17:11:54] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:12:30] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:12:42] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:13:32] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:13:45] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:16:16] <mason0> geekosaur, is that preferred way to quit with a failure over throwing exception?
[17:16:24] <geekosaur> yes
[17:16:50] <geekosaur> exceptions should be, well, exceptional. and exceptions can be caught
[17:17:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[17:17:32] <geekosaur> you can also use it constructively, returning specific exit codes for specific failure modes
[17:18:40] <geekosaur> although you'll have to go beyond exitFailure for that (iirc exitFailure is always exit code 1): https://downloads.haskell.org/ghc/8.10.7/docs/html/libraries/base-4.14.3.0/System-Exit.html#v:exitWith
[17:21:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Read error: Connection reset by peer)
[17:21:38] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:21:46] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:22:46] *** Joins: Giovanni (~Giovanni@216.73.161.200)
[17:24:31] *** Joins: cheater (~Username@user/cheater)
[17:25:07] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:25:16] <maerwald[m]> https://hackage.haskell.org/package/base-4.16.0.0/docs/System-Exit.html#v:exitWith
[17:25:17] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:27:19] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[17:27:40] *** Joins: kenran (~kenran@200116b82b2bf100d77c1a62a38a1f9a.dip.versatel-1u1.de)
[17:28:49] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[17:30:07] *** Joins: alx741 (~alx741@181.199.42.143)
[17:30:56] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[17:32:34] *** Joins: Guest33_ (~textual@c-107-4-204-12.hsd1.mn.comcast.net)
[17:32:46] *** Joins: wroathe (~wroathe@user/wroathe)
[17:32:58] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[17:33:36] *** Joins: alx741 (~alx741@181.199.42.143)
[17:33:53] *** Quits: Giovanni (~Giovanni@216.73.161.200) (Ping timeout: 250 seconds)
[17:34:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[17:34:58] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[17:35:56] *** Quits: Guest33_ (~textual@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[17:35:57] *** Joins: alp (~alp@user/alp)
[17:36:16] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[17:36:47] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[17:39:14] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:39:53] *** Joins: v0rpun1 (~pvorp@82.102.19.132)
[17:40:22] *** Quits: komikat (~komikat@183.82.154.239) (Read error: Connection reset by peer)
[17:40:49] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:2c18:b650:f4c7:9238) (Ping timeout: 250 seconds)
[17:41:35] *** Joins: komikat (~komikat@183.82.154.239)
[17:41:37] *** Joins: Vajb (~Vajb@2001:999:600:5133:28cb:83bf:5ecf:4314)
[17:42:04] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[17:42:04] *** Quits: Vajb (~Vajb@2001:999:600:5133:28cb:83bf:5ecf:4314) (Read error: Connection reset by peer)
[17:42:15] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:47:51] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[17:48:21] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[17:49:19] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:e9a5:f571:83b1:71ed)
[17:49:55] *** Quits: v0rpun1 (~pvorp@82.102.19.132) (Ping timeout: 272 seconds)
[17:49:56] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[17:51:38] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[17:54:00] *** Joins: alx741 (~alx741@157.100.197.240)
[17:54:00] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[17:54:16] *** Joins: hololeap_ (~hololeap@user/hololeap)
[17:54:37] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[17:58:04] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[18:01:22] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[18:06:31] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:06:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[18:08:23] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:09:00] *** Joins: coot (~coot@213.134.190.95)
[18:10:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:10:45] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[18:12:02] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:12:46] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[18:14:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:15:44] *** Joins: Vajb (~Vajb@2001:999:600:5133:28cb:83bf:5ecf:4314)
[18:15:59] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[18:16:05] *** Joins: bahamas (~lucian@84.232.140.52)
[18:18:01] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[18:18:58] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[18:19:17] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[18:20:33] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[18:20:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:20:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:20:51] *** Joins: wroathe (~wroathe@user/wroathe)
[18:20:55] *** Quits: michalz (~michalz@185.246.204.65) (Remote host closed the connection)
[18:21:24] *** Joins: machinedgod (~machinedg@24.105.81.50)
[18:21:31] *** Joins: michalz (~michalz@185.246.204.75)
[18:22:33] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[18:25:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:26:33] *** Joins: alx741 (~alx741@157.100.197.240)
[18:28:10] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[18:29:05] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[18:29:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:29:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:29:43] *** Joins: wroathe (~wroathe@user/wroathe)
[18:29:53] *** Joins: bahamas (~lucian@84.232.140.52)
[18:30:38] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[18:32:01] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[18:33:59] *** Quits: michalz (~michalz@185.246.204.75) (Remote host closed the connection)
[18:34:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:35:17] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[18:35:51] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[18:36:25] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:37:09] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[18:39:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[18:43:51] *** Joins: Topsi (~Tobias@dyndsl-037-138-065-181.ewe-ip-backbone.de)
[18:46:04] *** Quits: komikat (~komikat@183.82.154.239) (Read error: Connection reset by peer)
[18:46:08] *** Joins: fendor (~fendor@178.165.185.73.wireless.dyn.drei.com)
[18:47:11] *** Joins: komikat (~komikat@183.82.154.239)
[18:47:45] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[18:50:46] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Ping timeout: 245 seconds)
[18:50:52] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[18:51:59] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[18:52:43] *** Joins: alx741 (~alx741@157.100.197.240)
[18:55:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[19:00:08] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:01:53] *** Joins: alfonsox (~quassel@103.87.57.4)
[19:08:11] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[19:11:11] *** Quits: xff0x (~xff0x@2001:1a81:526f:1100:2a8a:98e3:7598:70a0) (Ping timeout: 245 seconds)
[19:12:12] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Ping timeout: 240 seconds)
[19:12:27] *** Joins: bahamas (~lucian@84.232.140.52)
[19:13:08] *** Joins: xff0x (~xff0x@2001:1a81:5275:9000:6fcf:72fa:90c9:3b0d)
[19:17:08] *** Joins: alx741 (~alx741@157.100.197.240)
[19:19:19] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:25:35] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[19:27:11] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:29:17] *** Joins: dvdrw (~dvdrw@user/dvdrw)
[19:30:09] *** Quits: finalti[m] (~finaltima@2001:470:69fc:105::d909) (Quit: You have been kicked for being idle)
[19:30:09] *** Quits: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07) (Quit: You have been kicked for being idle)
[19:30:10] *** Quits: tripa[m] (~tripamatr@2001:470:69fc:105::1:4f7e) (Quit: You have been kicked for being idle)
[19:30:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[19:33:52] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[19:36:24] *** Joins: alx741 (~alx741@157.100.197.240)
[19:36:29] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[19:36:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[19:37:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:39:59] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[19:39:59] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:44:16] <pareto-optimal-d> Do GHC plugins annotate source they generate in anyway so that you know they were generated by the plugin?
[19:44:23] <pareto-optimal-d>  * Do GHC plugins annotate source they generate in any way so that you know they were generated by the plugin?
[19:45:29] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[19:46:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:46:50] <geekosaur> plugins only operate on the AST, not source. (even "source" plugins, confusingly) I think the only annotation they provide is any written by the plugin author; however in the absence of such it means they won't have the source annotations everything else does
[19:52:21] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 256 seconds)
[19:53:37] *** Joins: tomku (~tomku@user/tomku)
[19:53:45] *** Quits: mmhat (~mmh@55d4cbdc.access.ecotel.net) (Ping timeout: 256 seconds)
[19:56:09] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[19:56:39] *** Joins: alx741 (~alx741@157.100.197.240)
[20:02:26] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:06:16] *** Joins: mmhat (~mmh@55d4cbdc.access.ecotel.net)
[20:06:24] *** Joins: bahamas (~lucian@84.232.140.52)
[20:08:38] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:e7a0:e139:e720:60eb)
[20:10:01] *** Quits: mbuf (~Shakthi@117.96.199.11) (Quit: Leaving)
[20:10:11] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[20:10:32] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[20:13:35] *** Joins: dimsuz (~dimsuz@185.17.128.68)
[20:16:42] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:17:46] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[20:18:22] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[20:18:23] <dimsuz> Hi. Maybe a bit weird question. I have `data MyType = MyType Int (Maybe Text) Int` and there's a situation when I construct it from 3 maybe's and I want `Maybe MyType`, but in this one situation I want to construct it only if middle maybe is a Just. I'm eager to write something like `MyType <$> maybe1 <*> maybe2 <*> maybe3`, but somehow this should
[20:18:24] <dimsuz> succeed only if maybe2 is a Just. I can do this with "do" notation in a Maybe monad, but maybe there's something more elegant?)
[20:18:29] *** Joins: bahamas (~lucian@84.232.140.52)
[20:18:57] *** Joins: alx741 (~alx741@157.100.197.240)
[20:20:10] <dimsuz> (to be clear, I know that <$> <*> stuff as I've written above wouldn't work), I just wanted to show my intention of "something" like this
[20:20:16] <kaol> fmap Just . maybe2
[20:20:46] <geekosaur> that doesn't sound right
[20:21:38] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:23:01] <monochrom> > (,,,) <$> Just 0 <*> Nothing <*> Just 1
[20:23:02] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[20:23:03] <lambdabot>  error:
[20:23:03] <lambdabot>      • No instance for (Typeable d0)
[20:23:03] <lambdabot>          arising from a use of ‘show_M30908252279909100758’
[20:24:29] <monochrom> Ah, too many commas.
[20:24:34] <monochrom> > (,,) <$> Just 0 <*> Nothing <*> Just 1
[20:24:36] <lambdabot>  Nothing
[20:24:41] <monochrom> works.
[20:26:22] <joel135> > (,,) <$> Just 0 <*> Just 9 <*> Just 1
[20:26:24] <lambdabot>  Just (0,9,1)
[20:26:24] <dimsuz> To explain a bit: I have a record type with 3 fields. Let's say they're all maybe's. Then there's *optional* user input of 3 values. some maybe missing (Nothing). Then I want to construct this value only when user has entered 3 values. I.e. I want `Just (MyType (Just 0) (Just "foo") (Just 5))`. if at least one is missing I want Nothing (hehe)
[20:27:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:27:42] <monochrom> Oops I misread.
[20:29:17] <kaol> > (\a b c -> (,,) <$> a <*> (Just <$> b) <*> c)  (Just 3) (Just 2) (Just 1)
[20:29:19] <monochrom> The "fmap Just" idea is right.  MyType <$> maybe1 <*> fmap Just maybe2 <*> maybe3
[20:29:19] <lambdabot>  Just (3,Just 2,1)
[20:29:30] *** Joins: bahamas (~lucian@84.232.140.52)
[20:31:36] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[20:32:14] *** Joins: merijn (~merijn@c-001-002-004.client.esciencecenter.eduvpn.nl)
[20:32:45] *** Quits: ccntrq (~Thunderbi@2a01:e34:eccb:b060:e7a0:e139:e720:60eb) (Quit: ccntrq)
[20:33:04] <sm> HN thread on error handling: https://news.ycombinator.com/item?id=30477630
[20:33:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:33:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:33:41] *** Joins: wroathe (~wroathe@user/wroathe)
[20:34:38] <dimsuz> ooohhh. thank you all, time to parse answers, read post and understand :)
[20:34:39] *** Quits: caubert (~caubert@136.244.111.235) (Quit: WeeChat 3.4)
[20:34:52] *** Joins: caubert (~caubert@136.244.111.235)
[20:35:23] *** Quits: caubert (~caubert@136.244.111.235) (Client Quit)
[20:35:51] *** Joins: caubert (~caubert@136.244.111.235)
[20:37:51] <sm> hi dimsuz that post wasn't meant for your q (but might be a good read anyway)
[20:38:04] *** Joins: alx741 (~alx741@157.100.197.240)
[20:38:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:38:32] <kaol> https://github.com/KSF-Media/affresco/blob/master/apps/mosaico/src/Cache.purs#L140-L143 PureScript, not Haskell, but anyway. Never had a problem I couldn't solve by adding one more fmap.
[20:40:55] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:43:04] <dimsuz> sm hah, I will, because the error handling was a stumbling block for me after I've grasped monads/applicatives and started writing a simple-ish Yesod backend. I googled a bit and found *so many* opinions and all this sync/async/either/bracket/masked/EitherT/ExceptT etc made my head spin. To this day I'm not sure how to handle errors in Haskell, I
[20:43:05] <dimsuz> wish there was some modern go-to standard. at least good enough for novices/intermedate language users.
[20:44:03] *** Joins: xkuru (~xkuru@user/xkuru)
[20:49:12] <sm> I haven't read the article yet. Michael Snoyman's blog posts are illuminating
[20:52:09] *** Joins: wroathe (~wroathe@user/wroathe)
[20:53:22] *** Quits: kuribas (~user@ptr-25vy0i8e4r37e819m2o.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[20:56:25] <dimsuz> is there some common way to perform an IO action on a value only if Maybe is a Just. I can do "maybe (pure ()) doIOStuff maybeValue" but it's a bit tedious to write
[20:56:36] *** Joins: Midjak (~Midjak@82.66.147.146)
[20:56:37] <lyxia> traverse_
[20:57:25] <dimsuz> ah, right! or forM_. Now I remembered I asked similar question here. thanks!
[20:58:19] *** Joins: AlexZenon_2 (~alzenon@94.233.240.108)
[20:58:24] <kaol> Or foldMap
[20:58:33] *** Joins: alx741 (~alx741@157.100.197.240)
[20:59:13] *** Quits: AlexZenon (~alzenon@94.233.240.108) (Ping timeout: 256 seconds)
[21:00:11] <sm> these very practical monastic combinators somehow don't surface enough in the docs/learning curve. They are always a puzzle at first
[21:00:38] <sm> er, monadic. :) My phone really wants to call them monastic.
[21:00:53] <kaol> It's not wrong. :-P
[21:01:05] <sm> sequence is another one
[21:02:21] <dimsuz> yeah. I guess  that's why I abuse (hope not) chats. After many years of writing in other languages it's so nice to experience these "clicks" after asking potentially dumb questions in some new area.
[21:02:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:04:21] <sm> you can also use fmap, or just dosomething <$> maybevalue 
[21:04:50] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[21:05:43] *** Quits: merijn (~merijn@c-001-002-004.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:10:10] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[21:10:24] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[21:11:19] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[21:11:25] *** AlexZenon_2 is now known as AlexZenon
[21:11:59] <dimsuz> I remember that I can use <$>, but that would be too verbose in this situation (IO function call with many params + sequenced print), so I went with forM_ in this case
[21:14:33] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Ping timeout: 256 seconds)
[21:18:03] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[21:19:00] *** dpratt__ is now known as dpratt
[21:20:10] *** Joins: alx741 (~alx741@157.100.197.240)
[21:21:14] *** Joins: RamaSidri (~jh@KH42117.karlshof.wh.tu-darmstadt.de)
[21:22:14] *** Parts: RamaSidri (~jh@KH42117.karlshof.wh.tu-darmstadt.de) (Konversation terminated!)
[21:22:15] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:24:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[21:25:41] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:26:56] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[21:26:58] <byorgey> dimsuz: not abusing chats at all =)
[21:27:50] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[21:27:51] <byorgey> monastic combinators are the ones where you have to think hard in a quiet place by yourself for several days before you can understand them
[21:28:40] <texasmynsted> sm: Great idea using obsidian. I did not think of that.
[21:34:02] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[21:35:30] *** Joins: bahamas (~lucian@84.232.140.52)
[21:35:45] *** Quits: nek0 (~nek0@nek0.eu) (Quit: The Lounge - https://thelounge.chat)
[21:37:01] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:14c2:362b:4032:a582) (Ping timeout: 240 seconds)
[21:37:26] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[21:40:53] *** Joins: alx741 (~alx741@157.100.197.240)
[21:41:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:4d3e:ae3:d6a0:1183)
[21:43:38] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:46:08] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 272 seconds)
[21:47:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:47:20] *** Joins: nek0 (~nek0@nek0.eu)
[21:47:58] <sm> texasmynsted: let us know how it works
[21:49:48] *** Quits: Midjak (~Midjak@82.66.147.146) (Ping timeout: 240 seconds)
[21:50:29] *** Quits: dimsuz (~dimsuz@185.17.128.68) (Ping timeout: 256 seconds)
[21:50:35] *** Joins: Midjak (~Midjak@82.66.147.146)
[21:53:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:53:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:53:20] *** Joins: wroathe (~wroathe@user/wroathe)
[21:53:50] *** Quits: xff0x (~xff0x@2001:1a81:5275:9000:6fcf:72fa:90c9:3b0d) (Ping timeout: 260 seconds)
[21:54:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[21:55:22] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[21:57:05] *** Quits: unyu (~pyon@user/pyon) (Quit: Reboot.)
[21:58:27] *** Quits: alfonsox (~quassel@103.87.57.4) (Remote host closed the connection)
[21:59:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[22:00:02] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-a068-f96d-6ad8-5504.res6.spectrum.com) (Remote host closed the connection)
[22:00:13] *** Joins: alx741 (~alx741@157.100.197.240)
[22:01:40] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[22:01:46] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[22:02:04] *** Joins: zebrag (~chris@user/zebrag)
[22:03:04] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[22:06:13] *** Joins: unyu (~pyon@user/pyon)
[22:06:17] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[22:13:16] <monochrom> Haha yesterday's xkcd implies that monads are cool math but not about anything you will ever see or touch, since "return" is written "µ" in math texts. So yeah, monastric combinators. :)
[22:13:27] *** Joins: alp (~alp@user/alp)
[22:14:07] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:16:36] <int-e> monochrom: it could just be a measure
[22:17:20] <int-e> (which I suspect is closer to Randall's education)
[22:18:12] <geekosaur> yeh,I immediately thought "micro"
[22:18:46] <monochrom> :(
[22:19:00] <int-e> oh that would be even simpler, alluding to microscopes maybe
[22:19:27] *** Quits: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[22:19:35] <int-e> If the Greek alphabet was made for math, it would have way more letters. :)
[22:21:16] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[22:21:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[22:22:13] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[22:24:30] *** Joins: xff0x (~xff0x@2001:1a81:5275:9000:6fcf:72fa:90c9:3b0d)
[22:24:35] *** Joins: alx741 (~alx741@157.100.197.240)
[22:25:37] <Unicorn_Princess> PSA: setting 4-space indents on spacemacs is as easy as writing, in dotspacemacs/layers, (haskell variables: lsp-haskell-formatting-provider "fourmolu")
[22:26:04] <Unicorn_Princess> (and also setting every haskell-indentation- variable to 4, also in :variables)
[22:26:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[22:27:00] <Unicorn_Princess> (also i don't recall installing neither ormolu or fourmolu, maybe spacemacs installed them as part of the layer? who knows, glhf)
[22:27:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[22:28:46] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[22:30:09] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[22:34:17] *** Joins: econo (uid147250@user/econo)
[22:40:17] *** Joins: Erutuon (~Erutuon@user/erutuon)
[22:40:52] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[22:41:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Read error: Connection reset by peer)
[22:41:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[22:43:41] *** Joins: alx741 (~alx741@157.100.197.240)
[22:45:55] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[22:46:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[22:48:21] *** Quits: Vajb (~Vajb@2001:999:600:5133:28cb:83bf:5ecf:4314) (Read error: Connection reset by peer)
[22:49:14] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[22:49:36] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[22:49:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[22:54:07] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 3.3)
[22:57:31] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[23:02:23] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[23:02:48] *** Joins: alx741 (~alx741@157.100.197.240)
[23:03:45] *** Joins: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net)
[23:05:31] *** Joins: yauhsie__ (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[23:06:30] *** Quits: yauhsien (~Yau-Hsien@61-231-21-135.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[23:06:31] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:06:57] *** Quits: yauhsie__ (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Remote host closed the connection)
[23:06:59] *** Quits: deadmarshal (~deadmarsh@95.38.117.81) (Ping timeout: 256 seconds)
[23:07:56] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[23:10:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:12:12] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[23:12:45] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[23:13:07] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[23:16:55] <maerwald> how do I import (.) qualified? xD
[23:17:07] <maerwald> `f P.. g` doesn't work
[23:17:16] <geekosaur> it should
[23:17:23] <maerwald> parse error
[23:17:24] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[23:17:35] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Remote host closed the connection)
[23:17:54] <geekosaur> % :t Control.Category..
[23:17:55] <yahb> geekosaur: ; <interactive>:1:1: error: parse error on input `Control.Category..'
[23:18:13] <maerwald> gg
[23:18:13] <geekosaur> % :t (Control.Category..)
[23:18:13] <yahb> geekosaur: forall {k} {cat :: k -> k -> *} {b :: k} {c :: k} {a :: k}. Category cat => cat b c -> cat a b -> cat a c
[23:18:19] <geekosaur> derp
[23:18:56] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:19:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:19:54] *** Joins: ghost4096 (pranshukha@envs.net)
[23:20:26] <xerox> if you hide Prelude ((.)) then using (M..) works, in my lil test
[23:21:11] <xerox> actually no, hiding is not neded, import qualified M ((.)) and (M..) does work in the little test
[23:21:37] *** Lord_of_Life_ is now known as Lord_of_Life
[23:22:51] <geekosaur> right, worked here too
[23:22:52] <maerwald> but not infix
[23:22:58] <geekosaur> preparing paste
[23:22:58] <maerwald> P.$ works infix P.. not
[23:23:03] *** Joins: alx741 (~alx741@157.100.197.240)
[23:24:34] <geekosaur> https://paste.tomsmeding.com/9kdrHxX6
[23:25:12] <xerox> like this? https://pastebin.com/raw/5PbXSa4q
[23:25:13] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[23:25:42] <maerwald> that's odd
[23:26:12] *** Quits: Topsi (~Tobias@dyndsl-037-138-065-181.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[23:26:25] <maerwald> is this a bug?
[23:26:26] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:31:15] <monochrom> No, it's in Haskell 2010.
[23:36:06] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[23:36:41] *** Quits: bendo (~bendo@ip5f5bebbb.dynamic.kabel-deutschland.de) (Quit: leaving)
[23:36:42] *** Joins: komikat (~komikat@183.82.154.239)
[23:36:45] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:37:19] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[23:38:02] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[23:41:00] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 240 seconds)
[23:41:29] <hololeap_> is there a way, using cabal v1, to point to another package that has been built and is sitting in a dist/ directory? I tried --package-db=${path}/dist/package.conf.inplace
[23:41:34] *** hololeap_ is now known as hololeap
[23:42:01] <hololeap> the libHS*.so and libHS*.a files are there in ${path}/dist/build
[23:43:19] *** Joins: alx741 (~alx741@157.100.197.240)
[23:43:25] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[23:44:40] <geekosaur> the package.conf.inplace isnot a package db, it's a configuration ready to be registered in a package db
[23:45:03] *** Joins: komikat (~komikat@183.82.154.239)
[23:45:31] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[23:46:34] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:47:59] <hololeap> I just need to temporarily tell ghc/cabal that this particular package is available in a different location
[23:48:49] <hpc> with cabal v1, wouldn't you just cabal install that other package from a file and then it's just there?
[23:48:52] <geekosaur> you have to build a new package db including that package and put it at the top of the package db stack with --package-db
[23:49:16] <geekosaur> otherwise what hpc said
[23:49:40] <geekosaur> cabal v1 is not real smart and defers most stuff to ghc, which is also not real smart about this
[23:49:47] <sclv> why can’t you use v2?
[23:49:49] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[23:50:07] <ski> shouldn't that be "join", not "return" ?
[23:50:16] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 272 seconds)
[23:51:14] *** Joins: komikat (~komikat@183.82.154.239)
[23:51:41] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[23:51:42] *** Quits: lechner (~lechner@debian/lechner) (Remote host closed the connection)
[23:53:02] <hololeap> I'm trying to package streamly for gentoo, which runs v1 in a sandbox. streamly bundles tests as another cabal file in a subdir which has `build-depends: streamly`. I would rather run the tests within the same build rather than create another `streamly-tests` package for gentoo
[23:53:26] *** Joins: lechner (~lechner@debian/lechner)
[23:53:45] <romesrf> how can I use -ddump-simpl with cabal? I can't get any output
[23:53:57] <romesrf> I've added it to ghc-options
[23:53:59] <hololeap> so I will try out geekosaur's idea
[23:54:01] <sclv> gotcha. in this case i would just not bundle the tests
[23:54:21] <sclv> but that idea should work
[23:54:22] <geekosaur> cabal forces -ddump-to-file, so somewhere in dist-newstyle will be a foo.dump-simpl
[23:54:30] <geekosaur> romesrf, ^
[23:54:37] <romesrf> geekosaur: let me check
[23:54:39] <geekosaur> (so does stack)
[23:55:24] *** Quits: komikat (~komikat@183.82.154.239) (Ping timeout: 240 seconds)
[23:55:30] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[23:55:46] <romesrf> find dist-newstyle -name "*dump*" -- still nothing
[23:55:59] <romesrf> geekosaur: where should ghc-options be in the cabal hierarchy
[23:56:13] <romesrf> perhaps I'm specifying -ddump-simpl in the wrong place
[23:56:34] *** Joins: komikat (~komikat@183.82.154.239)
[23:56:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[23:56:55] <geekosaur> it should be in the cabal file, in the stanza for the appropriate library or executable
[23:57:44] <geekosaur> it won't do anything useful in cabal.project unless the appropriate package gets rebuilt, and even then I thinkit needs to be inside a `package whatever` stanza
[23:58:02] <romesrf> right. well, I'm stuck
[23:58:26] <geekosaur> also if you simply dropped it in without forcing a rebuilt, it may not take effect. use 0fforce-rebuild or clean the project in that case
[23:58:35] <romesrf> okay!
[23:58:36] <geekosaur> -fforce-rebuild
[23:58:38] <romesrf> thank you
[23:59:48] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[23:59:55] <hololeap> geekosaur: how would I go about generating a new package db and adding this package in dist/ to it? I just tried `ghc-pkg -f foo init` but it gave me "ghc-pkg: command-line syntax error"
