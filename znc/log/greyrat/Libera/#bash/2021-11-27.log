[00:01:19] *** Joins: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066)
[00:01:46] *** Quits: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066) (Client Quit)
[00:05:06] *** Joins: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066)
[00:07:07] *** Quits: furrymcgee (~devuan@cgn-89-1-209-86.nc.de) (Quit: leaving)
[00:10:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[00:11:06] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.3)
[00:11:15] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 265 seconds)
[00:12:32] *** Joins: Atque (~Atque@user/atque)
[00:13:49] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450)
[00:14:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:17:20] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450) (Remote host closed the connection)
[00:17:32] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450)
[00:21:32] *** Joins: node1 (~node1@user/node1)
[00:23:58] *** Joins: seninha (~seninha@user/seninha)
[00:24:02] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[00:24:58] *** Joins: lavaball (felix@31.204.155.215)
[00:26:15] *** Quits: brettgilio (~brettgili@x-node.gq) (Ping timeout: 250 seconds)
[00:27:51] *** Quits: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net) (Ping timeout: 268 seconds)
[00:28:19] *** Quits: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[00:28:45] *** Joins: zaden_ (~maddx@73.92.207.228)
[00:33:46] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:34:02] *** Quits: bud (~bud@user/bud) (Ping timeout: 240 seconds)
[00:34:36] *** Joins: superboot (~agentgasm@user/superboot)
[00:34:39] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450) (Remote host closed the connection)
[00:34:58] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450)
[00:36:49] *** Joins: xx (~xx@user/xx)
[00:39:38] *** Joins: arinov (~arinov@213.194.126.155)
[00:40:01] *** Joins: geli (~gelignite@55d411d7.access.ecotel.net)
[00:40:07] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Read error: Connection reset by peer)
[00:41:08] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[00:42:54] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[00:44:33] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[00:44:58] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450) (Read error: Connection reset by peer)
[00:45:04] *** Joins: N4buc0- (~N4buc0@187.112.170.220)
[00:46:11] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 245 seconds)
[00:46:11] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[00:47:26] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[00:49:21] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:41] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[00:49:49] *** Joins: bud (~bud@user/bud)
[00:50:56] *** Joins: rgrinberg (~textual@201.198.177.243)
[00:51:16] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:52:09] *** Quits: rgrinberg (~textual@201.198.177.243) (Client Quit)
[00:55:24] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[01:00:06] *** Joins: han-solo (~han-solo@user/han-solo)
[01:01:10] *** Quits: N4buc0- (~N4buc0@187.112.170.220) (Quit: Leaving)
[01:02:56] *** Joins: sazawal_ (~sazawal@122.161.84.237)
[01:04:32] *** Quits: sazawal (~sazawal@122.161.81.235) (Ping timeout: 240 seconds)
[01:04:57] *** Joins: akoana (~ah@user/akoana)
[01:05:33] *** Joins: eruditehermit_ (~eruditehe@50.226.189.210)
[01:05:36] *** sazawal_ is now known as sazawal
[01:06:18] <eruditehermit_> hey, I have an array variable. I want to transform it into an array with each element preceeded by an element with it's index number. Is there a one liner to do this avoiding looping?
[01:06:25] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[01:07:12] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[01:07:39] <e36freak> you want to insert new elements between each current element? no
[01:08:00] <e36freak> you have to loop, and that's an expensive operation becaues you'll have to shift everything after each time, unless you want to create a second new array as you go
[01:08:04] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 260 seconds)
[01:08:11] <e36freak> still gonna involve looping to create a new array though
[01:09:10] <e36freak> even if there were an operation to do it, said operation would just be bash looping over the elements instead of you doing it yourself
[01:09:30] *** Quits: jcbjoe2021_ (sid520195@user/jcbjoe2021) ()
[01:09:42] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[01:10:12] <eruditehermit_> e36freak, for(i in $var) printf i" "$var[i]" "
[01:10:13] *** Quits: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 265 seconds)
[01:10:27] *** Parts: karstensrage (~karstensr@user/karstensrage) (Leaving)
[01:10:46] *** Quits: joshisanonymous (~joshisano@2601:246:200:7080:50ab:42:3ddb:a066) (Ping timeout: 245 seconds)
[01:11:40] <phy1729> Are you in awk or something?
[01:11:54] <greycat> that threw me at first too... yes, it looks like awk
[01:12:17] <eruditehermit_> ah yes that was taken from awk
[01:12:28] <greycat> #awk might be better suited to this
[01:13:09] <eruditehermit_> ah I need to translate it to bash
[01:13:24] <eruditehermit_> but I figured the parens are not necessary
[01:13:27] <greycat> if you really are doing it in bash (and simply using awk as "pseudocode" to demonstrate what you think bash ought to be able to do), I will reiterate that you *need* a loop for this.
[01:13:32] <greycat> Loops Are Not Evil.
[01:14:18] <greycat> # in=(input array here); out=(); for i in "${!in[@]}"; do out+=("$i" "${in[i]}"); done; declare -p out
[01:14:19] <shbot> greycat: declare -a out=([0]="0" [1]="input" [2]="1" [3]="array" [4]="2" [5]="here")
[01:14:26] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:14:43] <phy1729> If you need to do something to each element of a list, a loop is mandatory. Either you write it, or some map like API does the loop internally, or the processor has some SIMD like commands, but looping happens somewhere.
[01:15:40] <greycat> if you want some sort of language primitive that maps elements of a list to new elements in a new list, bash is not the right language for you
[01:18:28] <e36freak> also not valid awk in the example
[01:18:38] <e36freak> makes it extra fun
[01:20:11] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[01:20:23] <greycat> even Tcl's [lmap] doesn't look suitable for this, because it has no intrinsic knowledge of the "position" of each element within the input list, as it's busy list-mapping each element.  You're better off with a simple foreach loop plus a counter variable.
[01:21:12] <greycat> or else a C-style [for] loop, supplying the counter variable that way, and then [lindex] in the loop body
[01:21:17] *** Joins: rgrinberg (~textual@201.198.177.243)
[01:23:36] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[01:24:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:75c5:c6ed:c91:17fe) (Read error: Connection reset by peer)
[01:28:28] <eruditehermit_> thanks so much @greycat, @e36freak, @phy1729 for the responses. I think the example you gave me got me going. Much appreciated
[01:28:50] <eruditehermit_> As a little context, I'm trying to pass this variable to a dialog menu
[01:28:59] <eruditehermit_> it requires an index to elements of an array
[01:29:01] <greycat> !faq dialog
[01:29:01] <greybot> https://mywiki.wooledge.org/BashFAQ/040 -- How do I use dialog to get input from the user?
[01:29:11] <greycat> That was actually my guess.
[01:29:54] <eruditehermit_> very annoying that they don't just take an array
[01:30:26] <e36freak> how would dialog get the array? it's an external program
[01:30:31] <e36freak> all it knows is it has a list of arguments
[01:30:40] <e36freak> it could take the list and number them itself though
[01:31:35] *** Joins: sinaowolabi (~SinaOwola@160.152.99.213)
[01:33:58] <eruditehermit_> e36freak, yeah that would have been nice
[01:34:10] <eruditehermit_> in any case it's ok
[01:34:45] <eruditehermit_> I was trying to build a simple TUI but I think not using dialog and having tab completion might be easier as there are many choices
[01:35:04] <eruditehermit_> turns out it doesn't all fit nicely into dialog window and it requires scrolling for options
[01:35:29] <eruditehermit_> might have to explore tput and make something custom
[01:35:46] <eruditehermit_> or write it in c with ncurses
[01:38:27] *** Joins: downunder (~downunder@110.151.116.229)
[01:43:10] *** Joins: timj (~timj@user/timj)
[01:48:12] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[01:48:17] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[01:50:30] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[01:50:36] *** Joins: sublim20 (~sublim20@user/sublim20)
[01:50:55] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[01:52:34] *** Quits: eruditehermit_ (~eruditehe@50.226.189.210) (Quit: Leaving)
[01:53:27] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.27)
[01:56:01] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:03:29] *** Quits: ionface (~ionface@user/ionface) (Remote host closed the connection)
[02:06:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:08:17] *** Quits: zaden_ (~maddx@73.92.207.228) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[02:08:33] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[02:08:43] *** Joins: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[02:09:24] *** Joins: namkeleser (~namkelese@101.175.102.188)
[02:10:26] *** Joins: ionface (~ionface@user/ionface)
[02:11:40] *** Joins: chuck_ (~chuck@181.191.143.126)
[02:14:40] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:14:52] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:17:04] *** Joins: MercilessDeth (~brad@136.49.59.177)
[02:18:24] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:19:07] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[02:20:32] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[02:24:02] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 240 seconds)
[02:29:19] *** Quits: sazawal (~sazawal@122.161.84.237) (Quit: Leaving)
[02:29:30] *** Quits: chuck_ (~chuck@181.191.143.126) (Quit: leaving)
[02:30:44] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[02:31:18] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Client Quit)
[02:32:00] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[02:32:23] *** Joins: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr)
[02:38:21] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:38:32] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 240 seconds)
[02:39:22] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[02:39:53] *** Joins: rcernin (~rcernin@124.190.139.235)
[02:40:48] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:40:57] *** Quits: dj (~dj@162.223.44.49) (Remote host closed the connection)
[02:49:30] *** Quits: Libero (~Libero@77.49.77.131.dsl.dyn.forthnet.gr) (Quit: Leaving)
[02:50:06] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.36) (Quit: Leaving)
[02:50:25] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:53:19] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:55:01] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[02:55:27] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.27) (Read error: Connection reset by peer)
[02:56:06] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[02:56:32] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:56:55] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[02:59:00] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.27)
[02:59:14] *** Joins: namkeleser (~namkelese@101.175.102.188)
[03:02:38] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[03:04:04] *** Joins: docmax_ (~docmax@dynamic-077-006-103-229.77.6.pool.telefonica.de)
[03:06:07] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[03:06:21] *** Quits: docmax__ (~docmax@dynamic-077-006-012-253.77.6.pool.telefonica.de) (Ping timeout: 250 seconds)
[03:07:39] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:19:16] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[03:19:59] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[03:20:37] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:44] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[03:21:46] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[03:24:01] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[03:31:43] *** Joins: hygo (~user@2804:431:c7d5:cae:9907:f6ed:d723:35c4)
[03:33:34] <kurahaupo> xx: The mere fact that you wonder if the Dunning Kruger effect applies to yourself means you can be confident that it does not
[03:34:06] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[03:34:59] <xx> kurahaupo: that sounds like some reverse psychology stuff
[03:35:18] * xx knows nothing about psychology, whether forward or reverse
[03:39:28] <kurahaupo> xx: Dunning Kruger isn't just delusional over confidence, it's delusional superiority as well
[03:41:36] <kurahaupo> eg the driver who is angry that everyone else toots at them when they're obviously the best driver
[03:42:24] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[03:42:35] <xx> toot toot
[03:44:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[03:48:24] *** Joins: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net)
[03:50:04] *** Joins: arinov (~arinov@213.194.126.155)
[03:51:06] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:52:02] *** Joins: gschanuel2 (~gschanuel@user/gschanuel)
[03:52:58] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[03:54:02] *** Quits: bitchin (sid516755@tinside.irccloud.com) (Ping timeout: 240 seconds)
[03:54:32] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:55:02] *** Quits: nem (sid113421@user/nem) (Ping timeout: 240 seconds)
[03:55:15] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[03:55:31] *** Quits: wangledorf (sid505185@ilkley.irccloud.com) (Ping timeout: 265 seconds)
[03:55:32] *** Quits: Manouchehri (sid384576@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:55:32] *** Quits: dunc (sid16@uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[03:56:32] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 240 seconds)
[03:56:57] *** Joins: nem (sid113421@user/nem)
[03:57:01] *** Joins: hubvu (sid495858@user/hubvu)
[03:57:14] *** Joins: bitchin (sid516755@user/bitchin)
[03:58:01] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[03:58:02] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[03:58:13] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:58:30] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:59:43] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[04:00:33] *** Quits: mymind (~mymind@23.82.138.83) (Quit: WeeChat 3.3)
[04:00:43] <Enissay> `for f in /dir/*.csv; do time mv $f /new/dir/temp/; done;` Any elegant way to exit the loop after N iteration ?
[04:00:51] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[04:00:59] <Enissay> So to basically get the first N files
[04:02:51] *** Quits: shush (sid21719@tinside.irccloud.com) (Ping timeout: 245 seconds)
[04:02:51] *** Quits: Hamled (sid129388@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[04:03:16] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (Ping timeout: 245 seconds)
[04:03:21] *** Joins: Hamled (sid129388@id-129388.uxbridge.irccloud.com)
[04:03:34] *** Joins: rgrinberg (~textual@201.198.177.243)
[04:04:23] <e36freak> quote "$f", first of all
[04:04:29] <e36freak> second, just use a counter variable and break
[04:04:57] <kurahaupo> ((--limit>=0))||break
[04:05:13] *** Joins: shush (sid21719@id-21719.tinside.irccloud.com)
[04:05:14] <e36freak> c=0; for f in /dir/*csv; do time mv "$f" /new/dir/temp/; ((++c == N)) && break; done
[04:05:17] <e36freak> or count down, sure
[04:05:32] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 268 seconds)
[04:07:16] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[04:07:38] <kurahaupo> ff=( /dir/*.csv ) ; ff=( "${ff[@]:0:N}" ) ; for f in "${ff[@]}" ; do time mv -- "$f" /other$f" ; done
[04:07:40] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[04:08:26] <e36freak> could just do for f in "${ff[@]:0:N}"; do
[04:08:31] <e36freak> lots of options!
[04:08:59] <kurahaupo> yep
[04:09:23] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:10:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[04:10:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80::7)
[04:16:56] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:19:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[04:21:04] *** Quits: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[04:21:19] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:22:13] *** Quits: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net) (Quit: Client closed)
[04:24:28] *** Parts: hygo (~user@2804:431:c7d5:cae:9907:f6ed:d723:35c4) (ERC (IRC client for Emacs 27.2))
[04:24:45] *** Joins: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net)
[04:26:40] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:26:53] <Enissay> Thanks guys <3
[04:29:50] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[04:30:31] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[04:30:49] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[04:31:52] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:32:44] *** Quits: lonewulf1 (~lonewulf@user/lonewulf) (Quit: leaving)
[04:34:07] *** Joins: namkeleser (~namkelese@101.175.102.188)
[04:39:31] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[04:40:28] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 265 seconds)
[04:45:00] *** Quits: barjac (~quassel@94.196.120.106.threembb.co.uk) (Ping timeout: 268 seconds)
[04:45:19] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:45:26] *** Joins: barjac (~quassel@94.197.170.57.threembb.co.uk)
[04:49:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:50:04] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:51:11] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:52:03] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:53:11] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:53:12] *** Joins: pj (~pj@ghettoforge/pj)
[04:54:04] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:55:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:56:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:56:22] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:57:08] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:58:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:58:03] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:59:09] *** Joins: acegalla- (~Ace@71-33-215-114.hlrn.qwest.net)
[04:59:19] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[05:00:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:01:27] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:01:42] *** Quits: acegallagher (~Ace@71-33-192-49.hlrn.qwest.net) (Ping timeout: 260 seconds)
[05:02:21] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:03:58] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:04:53] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:06:41] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[05:07:34] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:07:49] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[05:09:19] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:10:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:10:16] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Remote host closed the connection)
[05:10:48] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[05:11:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:12:43] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:13:54] *** Joins: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca)
[05:14:24] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:14:28] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[05:15:18] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:16:48] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:16:57] *** Joins: xizhendu__ (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9)
[05:17:17] *** Parts: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca) ()
[05:17:42] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:19:12] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:19:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:19:59] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[05:20:00] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[05:20:00] *** Joins: wuseman (~wuseman@user/wuseman)
[05:20:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:21:33] *** Quits: sublim20 (~sublim20@user/sublim20) (Read error: Connection reset by peer)
[05:22:03] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:22:32] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:22:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:23:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:24:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:24:47] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:25:42] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:27:32] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:27:59] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:27] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:28:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:29:11] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:30:13] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:30:27] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:33] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (Quit: leaving)
[05:31:09] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:32:57] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:33:03] *** Joins: namkeleser (~namkelese@101.175.102.188)
[05:33:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:33:52] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:34:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:35:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:36:34] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:37:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[05:38:19] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:38:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:38:52] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[05:39:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:39:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:39:29] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:28] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:42:22] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:43:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:44:16] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:45:12] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:47:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:48:09] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:48:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:49:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:50:11] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[05:50:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[05:50:30] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[05:51:10] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:51:16] *** Quits: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net) (Quit: Client closed)
[05:51:56] *** Parts: pystardust (~pystardus@45.32.119.11) ()
[05:52:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:53:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:53:57] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:54:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:55:51] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:55:56] *** Joins: zebrag (~chris@user/zebrag)
[05:56:05] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[05:56:48] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[05:58:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:59:36] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[06:00:43] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Read error: Connection reset by peer)
[06:01:10] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[06:01:30] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:02:25] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[06:03:09] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:03:27] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[06:03:52] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[06:04:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:05:03] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[06:05:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[06:07:50] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[06:07:50] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[06:07:50] *** Joins: wuseman (~wuseman@user/wuseman)
[06:09:58] *** Joins: kill (~killown@user/killown)
[06:12:06] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[06:12:10] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[06:12:41] *** Joins: jellyknight (~gelignite@55d49b41.access.ecotel.net)
[06:13:15] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[06:13:42] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:13:52] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[06:13:53] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[06:13:53] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[06:14:31] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 245 seconds)
[06:15:41] *** Quits: geli (~gelignite@55d411d7.access.ecotel.net) (Ping timeout: 265 seconds)
[06:17:06] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[06:19:33] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:27:26] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[06:27:51] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[06:28:26] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[06:33:02] *** Joins: mrap (~igloo@cm110-236.madisontelco.com)
[06:33:03] *** Quits: mrap (~igloo@cm110-236.madisontelco.com) (Max SendQ exceeded)
[06:33:19] *** Joins: mrap (~igloo@cm110-236.madisontelco.com)
[06:33:21] *** Quits: mrap (~igloo@cm110-236.madisontelco.com) (Max SendQ exceeded)
[06:35:13] *** Joins: mrap (~igloo@cm110-236.madisontelco.com)
[06:35:15] *** Quits: mrap (~igloo@cm110-236.madisontelco.com) (Max SendQ exceeded)
[06:35:31] *** Joins: mrap (~igloo@cm110-236.madisontelco.com)
[06:35:33] *** Quits: mrap (~igloo@cm110-236.madisontelco.com) (Max SendQ exceeded)
[06:35:52] *** Joins: mrap (~igloo@cm110-236.madisontelco.com)
[06:35:52] *** Quits: mrap (~igloo@cm110-236.madisontelco.com) (Client Quit)
[06:37:45] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:38:06] *** Joins: et_ (~et@user/et)
[06:39:10] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[06:39:10] *** et_ is now known as et
[06:44:13] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:44:22] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:44:46] *** Joins: rgrinberg (~textual@201.198.177.243)
[06:45:43] *** Joins: ferdna (~ferdna@user/ferdna)
[06:47:50] *** Quits: jellyknight (~gelignite@55d49b41.access.ecotel.net) (Quit: Stay safe!)
[06:48:39] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:49:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:54:29] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[06:55:32] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[06:56:02] *** Joins: timj (~timj@user/timj)
[07:00:53] *** Joins: roadie` (~user@pd956924f.dip0.t-ipconnect.de)
[07:03:23] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:11:22] *** Quits: jos1 (~jos3@dyndsl-091-096-041-234.ewe-ip-backbone.de) (Ping timeout: 260 seconds)
[07:13:37] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:14:51] *** Quits: timj (~timj@user/timj) (Ping timeout: 268 seconds)
[07:18:53] *** Joins: sublim20 (~sublim20@user/sublim20)
[07:19:37] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[07:24:15] *** Joins: jos1 (~jos3@dyndsl-091-248-049-113.ewe-ip-backbone.de)
[07:30:46] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[07:30:56] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:31:09] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:31:36] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 245 seconds)
[07:32:51] *** tar_xvf_ is now known as tar_xvf
[07:33:40] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[07:33:41] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[07:33:58] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 268 seconds)
[07:35:09] *** Joins: roger (~rogerx@h240.185.190.173.dynamic.ip.windstream.net)
[07:35:34] *** Joins: moviuro (~moviuro@car.popho.be)
[07:35:43] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:38:54] *** Quits: moviuro_ (~moviuro@znc.popho.be) (Ping timeout: 268 seconds)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:02] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:39] <CarlFK> if (vcgencmd otp_dump | grep 17:3020000a ) then; echo NetBoot!; fi
[07:40:40] <CarlFK> -bash: !: event not found
[07:40:48] <CarlFK> what?  help help...
[07:41:15] <tomreyn> NetBoot\!
[07:41:19] *** Quits: Dotz0cat (~Dotz0cat@h236.193.186.173.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[07:41:21] <Blondie101010> the "!" has a special meaning
[07:41:31] <larryv> !!
[07:41:31] <greybot> event not found -- These errors only happen in *interactive* shells when you run commands with ! in them with history expansion enabled. Run set +o histexpand (set +H) to disable it, and put it in your ~/.bashrc to disable it in future shell sessions, too. Regardless, it won't affect scripts.
[07:41:55] <CarlFK> ah right, like sudo !!
[07:42:27] *** Joins: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net)
[07:42:36] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 268 seconds)
[07:42:42] <CarlFK> move the ; to the right place and all is well.
[07:42:46] <CarlFK> thank you!
[07:43:03] <Blondie101010> better yet, escape it
[07:43:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:43:19] <Blondie101010> or quote it, whatever is more convenient
[07:43:50] <larryv> or, if you're just running stuff in an interactive session, remove it altogether?
[07:43:58] <larryv> surely you're not that excited.
[07:44:05] <CarlFK> lol
[07:44:06] *** Quits: roadie` (~user@pd956924f.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[07:44:13] <Blondie101010> this happens by accident (without thinking)
[07:44:21] <larryv> NETBOOOOOOOOT
[07:44:24] <Blondie101010> you put a ! and it messes up your command
[07:44:48] <CarlFK> tail of bashrc, where I may have just accidentally modified a raspberry pi to netboot, and you can't set it back.  ever!!!
[07:45:57] <Blondie101010> CarlFK:  I doubt that "can't set it back.  ever!!!", but this would belong on a pi support channel
[07:49:18] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:49:48] <CarlFK> they already know ;)
[07:50:15] *** Quits: roger (~rogerx@h240.185.190.173.dynamic.ip.windstream.net) (Quit: leaving)
[07:50:58] <larryv> btw the parentheses around your if condition aren't necessary
[07:52:05] <CarlFK> thanks
[07:53:32] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.27) (Ping timeout: 240 seconds)
[07:54:20] *** Quits: sinaowolabi (~SinaOwola@160.152.99.213) (Ping timeout: 268 seconds)
[07:56:33] *** Joins: sinaowolabi (~SinaOwola@160.152.99.213)
[07:56:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[07:56:47] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[07:56:48] *** betelgeuse9 is now known as betelgeuse
[07:58:38] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:59:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:00:50] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:02:07] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:02:20] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[08:02:36] *** Joins: vishal (~vishal@fedora/vishal)
[08:05:43] <Blondie101010> I almost never use "if" anymore
[08:06:13] <e36freak> why
[08:06:25] <Blondie101010> [[ some check ]] && successReaction || failureReaction
[08:06:31] <e36freak> that's... much worse
[08:06:37] <Blondie101010> nope
[08:06:37] <e36freak> !&&||
[08:06:38] <greybot> foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[08:06:56] <Blondie101010> no
[08:06:57] <e36freak> not to mention much less clear to read
[08:06:59] <Blondie101010> that is false
[08:07:02] <e36freak> what do you mean no
[08:07:20] <e36freak> # true && false || echo wot
[08:07:21] <shbot> e36freak: wot
[08:07:23] <Blondie101010> baz will only happen when foo is false
[08:07:36] <e36freak> not true
[08:07:37] <larryv> lmfao
[08:08:12] <Blondie101010> e36freak:  you're correct, but I don't do such cases
[08:08:21] <Blondie101010> if I did, I'd use if
[08:08:34] <e36freak> what do you mean you "don't do such cases"
[08:08:58] <e36freak> that's true for ANYTHING between && and ||
[08:09:36] <Blondie101010> ok one good example: [[ -f $file ]] && doWork $file || echo "there was a problem with $file"
[08:09:37] <e36freak> and that's not even getting into how it makes your code worse to read for no benefit
[08:09:44] <Blondie101010> tell me how that can be wrong
[08:09:49] <e36freak> right, and if doWork goes wrong then you also run the echo
[08:09:54] <e36freak> that may or may not be intended
[08:09:58] <Blondie101010> it is
[08:10:10] <e36freak> it's also not clear if it's intended or not
[08:10:15] <Blondie101010> otherwise you need a mess of parentheses
[08:10:32] <e36freak> what mess
[08:10:48] <Blondie101010> but for operations, this syntax is the simplest
[08:10:58] <e36freak> it's less clear. therefore objectively worse
[08:11:02] <Blondie101010> can't spend half a day to do a job
[08:11:13] <e36freak> it takes you half a day to type a few extra keys?
[08:11:26] <Blondie101010> no, to make it ideal!
[08:12:00] <Blondie101010> it's not needed when all that counts is running it now
[08:12:16] <e36freak> it matters when someone else has to fix it
[08:12:31] <Blondie101010> maybe we don't work in similar environments
[08:13:26] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:14:04] <e36freak> so you're not writing anything that's going to persist for any amount of time and may need to be debugged, fixed, or changed by someone else?
[08:14:54] <e36freak> or even yourself in a year when you forgot what you were thinking?
[08:15:35] <e36freak> readability and clarity of intent are very important in any environment
[08:18:22] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:18:57] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[08:21:02] <Blondie101010> the more it persists, the better it gets, if applicable
[08:21:26] <Blondie101010> but there's a whole lot of one offs
[08:22:07] <e36freak> good habits are good habits. also definitely not something to encourage in anyone trying to learn
[08:22:35] <Blondie101010> hmmmmmmmm that's relative, and a matter of opinion
[08:22:56] <emanuele6> saying that &&|| does the same thing as if-then-else-fi is just wrong
[08:23:23] <Blondie101010> I'm not saying that..  I only said I often use that and knowingly
[08:24:14] <emanuele6> that doesn't sound like you said before, but fine.
[08:24:46] <Blondie101010> I did give a wrong answer
[08:24:58] <emanuele6> if you use &&|| knowing it probably would have been something that if-then-else-fi would not have been able to do cleanly
[08:25:11] <emanuele6> they do things that are quite different
[08:25:14] *** Joins: RandomGuy21 (~RandomGuy@202.140.54.212)
[08:25:15] <Blondie101010> 'baz will only happen when foo is false' was wrong
[08:27:01] <Blondie101010> when all you want to do is:  while true; do [[ -f $file ]] && echo "the file is there" || "the file is not there"; done # I don't see why you'd complicate it
[08:27:24] <Blondie101010> missed a sleep
[08:27:28] <emanuele6> that is wrong
[08:27:45] <Blondie101010> how?
[08:28:31] <emanuele6> well ignoring that that while true; do ...done seems weird and there is a missing echo
[08:28:45] <Blondie101010> yep missed an echo
[08:28:51] <emanuele6> > [[ -f $file ]] && echo "the file is there" || echo "the file is not there"
[08:28:54] <emanuele6> just that
[08:29:06] <Blondie101010> that's perfectly fine to me
[08:29:07] <emanuele6> if the first echo fails, the second echo will run
[08:29:14] <Blondie101010> sure
[08:29:16] <emanuele6> yes
[08:29:18] <Blondie101010> that does not happen
[08:29:19] <emanuele6> is that right?
[08:29:22] <Blondie101010> yes
[08:29:38] <emanuele6> "the file is not there" because stdout happens to not be writable?
[08:29:56] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[08:30:06] <emanuele6> that is just wrong, i don't get how you could think otherwise
[08:30:22] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[08:30:41] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:31:32] *** Quits: sinaowolabi (~SinaOwola@160.152.99.213) (Ping timeout: 240 seconds)
[08:33:56] <Blondie101010> don't you like: for i in a b c; do [[ $i = 'a' ]] && echo "${i^^}" || echo "$i"; done
[08:34:34] <emanuele6> no, but not just because of &&||
[08:34:45] <Blondie101010> too bad :
[08:37:39] <hejux> how do i redirect error code '9' to /dev/null
[08:37:51] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 245 seconds)
[08:37:55] <Blondie101010> what do you mean by that?
[08:38:05] <Blondie101010> IO is what gets redirected
[08:38:08] <hejux> 1 is stdout, 2 is stderr
[08:38:20] <Blondie101010> yes
[08:38:28] <tar_xvf> i think you have the std outs and error codes confused
[08:38:31] <hejux> but dig returns 9
[08:38:33] <Blondie101010> the same rules apply to any file descriptor
[08:38:44] <Blondie101010> what do you mean?
[08:38:52] <tar_xvf> error code gets returned by the command, and is 0=success, error = 1, 2, etc.
[08:38:54] <Blondie101010> that doesn't sound like a fd
[08:38:57] <e36freak> hejux: exit status is not a thing that gets redirected. what are you trying to do?
[08:39:06] <tar_xvf> completely different than if you write 1> to pipe standard out or 2> to pipe standard error
[08:39:39] <hejux> dig : could not get address for ns1.google.com, failure
[08:39:54] <hejux> this message is not a '2' for dig
[08:40:15] <Blondie101010> where is the "2" in that message?
[08:40:18] <tar_xvf> no, you have them confused still
[08:40:19] <e36freak> dig is printing that message to stderr
[08:40:24] <e36freak> it then returns 9
[08:40:25] <tar_xvf> yes, stderr is 2>
[08:40:27] <e36freak> two separate things
[08:40:35] <e36freak> or exits 9, rather
[08:40:37] <tar_xvf> so if you type 2> /dev/null that message would go away
[08:40:38] <Blondie101010> the text is not the fd
[08:40:58] <tar_xvf> the error code is what you get if you type #? on the next command
[08:40:59] <Blondie101010> not sure what's the case as the error shown doesn't contain a number
[08:41:04] <Blondie101010> $?
[08:41:16] <tar_xvf> Blondie101010: yes, my mistake
[08:41:30] <Blondie101010> (yeah obvious)
[08:41:40] *** Quits: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[08:41:45] <tar_xvf> if you echo $? it shows you the exit code from the previous comman
[08:41:45] <tar_xvf> d
[08:42:26] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:42:48] <Blondie101010> but I've never seen dig return anything other than 0
[08:42:58] <Blondie101010> so they're probably referring to the message
[08:43:25] *** Quits: RandomGuy21 (~RandomGuy@202.140.54.212) (Quit: Quit)
[08:45:17] *** Joins: sinaowolabi (~SinaOwola@41.58.246.212)
[08:45:18] <Blondie101010> echo "this is an error" >&2|grep error     # versus:   (echo "this is an error" >&2)2>&1|grep error
[08:45:28] *** Joins: XV8 (~XV8@199.192.138.251)
[08:45:41] <e36freak> Dig return codes are:
[08:45:43] <e36freak> 0: Everything went well, including things like NXDOMAIN 1: Usage error 8: Couldn't open batch file 9: No reply from server 10: Internal error
[08:46:27] <emanuele6> if the dns is down, it will fail
[08:46:53] *** Joins: roger_ (~chatzilla@h240.185.190.173.dynamic.ip.windstream.net)
[08:47:03] <Blondie101010> maybe
[08:47:14] <Blondie101010> but it certainly returns 0 when you give it junk
[08:47:43] <emanuele6> nothing is junk (as long as it does not start with -) for most dig implementation
[08:47:49] <Blondie101010> and dig doesn't usually fail because of a misconfiguration or network connection
[08:47:52] <Blondie101010> it reports errors
[08:48:09] *** Quits: roger_ (~chatzilla@h240.185.190.173.dynamic.ip.windstream.net) (Client Quit)
[08:48:24] <Blondie101010> oh I got a 1
[08:48:24] <emanuele6> if it is able to connect to the dns and the dns can tell it is not valid, it will exit 0 and report failure; but if the dns is down, it will fail
[08:48:51] <Blondie101010> still unlikely the problem
[08:49:29] *** Quits: XV8 (~XV8@199.192.138.251) (Client Quit)
[08:49:30] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:49:37] *** Joins: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com)
[08:49:45] <Blondie101010> hejux:  how do you see that number 9?
[08:50:02] <Blondie101010> please show us
[08:50:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[08:51:06] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:52:10] <Blondie101010> dang that's it
[08:52:26] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 245 seconds)
[08:53:31] <Blondie101010> dig a google.com @12.34.56.78 || echo $?
[08:53:44] <Blondie101010> that's a 9
[08:54:18] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:59:15] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[08:59:57] *** Quits: joerg (~saturn@user/joerg) (Ping timeout: 250 seconds)
[09:01:03] *** Joins: joerg (~saturn@user/joerg)
[09:03:08] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[09:03:56] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[09:04:43] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 250 seconds)
[09:04:46] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:04:57] *** Joins: fluter (~fluter@user/fluter)
[09:05:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:06:22] <b0o> I want to do something like `jq '.foo = "bar"' /foo/bar.json | tee /foo/bar.json' but the `tee` command runs immediately and truncates /foo/bar.json before jq can read it. I know plenty of ways around this **but I'd like to avoid temporary files, variables, and accomplish it with single shell pipeline**.
[09:07:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:07:59] <larryv> !pf 13 > b0o
[09:07:59] <greybot> b0o: https://mywiki.wooledge.org/BashPitfalls#pf13 -- Don't do this! -- cat file | sed s/foo/bar/ > file
[09:08:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:09:34] <b0o> I believe sponge is what I was looking for, thanks
[09:10:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[09:11:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:13:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:13:36] *** Joins: led_belly (~led_belly@5.180.62.139)
[09:14:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:14:02] <Blondie101010> b0o:  something doesn't add up...  please provide a complete test casse
[09:14:04] <Blondie101010> *case
[09:14:34] <Blondie101010> ohhhhh
[09:14:38] <Blondie101010> nope
[09:15:13] <b0o> sponge got it working, here's my command if you're curious:
[09:15:18] <b0o> jq --argjson debug_url "$(curl http://localhost:9229/json/list | jq -r ".[0].devtoolsFrontendUrl | @json")" ".session.startup_urls = [ \$debug_url ]" "$XDG_CONFIG_HOME/chromium-node-inspect/Default/Preferences" | sponge "$XDG_CONFIG_HOME/chromium-node-inspect/Default/Preferences"
[09:16:54] <Blondie101010> `sponge` does not solve problem with `tee`, it just doesn't duplicate the output
[09:17:27] <Blondie101010> ahhh
[09:17:34] <b0o> I actually was just using tee for the side effect of writing the file
[09:17:34] <Blondie101010> I hadn't noticed the same filename
[09:17:55] <Blondie101010> yeah that can't work...  the truncation happens *before* the commands are run
[09:17:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:18:02] <b0o> yep
[09:18:56] <b0o> I was aware of the problem and vaguely remembered something like sponge existed, but forgot what it was
[09:19:32] <b0o> I could've solved it another way but I like learning new unix utils whenever possible
[09:19:39] <Blondie101010> not sure if there's any benefit compared to > $file
[09:19:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:20:02] <b0o> > $file has the same issue, it truncates the file before the original command can read it
[09:20:19] <b0o> I'm basically trying to do an in-place modification of a json file
[09:20:24] <b0o> like sed -i
[09:20:34] <Blondie101010> I get your problem by your solution
[09:20:43] <Blondie101010> but the first approach does not make sense
[09:21:00] <b0o> I was using tee so I could see the output while writing the command mostly
[09:21:07] <b0o> something I do often
[09:21:12] <b0o> it had not benefit over >
[09:21:17] <b0o> other than writing to stdout
[09:21:18] <Blondie101010> sure
[09:21:55] <b0o> I could've simplified my original question though to make it more clear
[09:22:12] <b0o> jq '.foo = "bar"' foo.json > foo.json
[09:22:51] <Blondie101010> yeah but your logic was to output to your input...  that can never work
[09:23:04] <b0o> still not following you
[09:23:18] *** Joins: m4n (~emacs@95.91.209.255)
[09:23:35] <Blondie101010> you wanted the written `tee` output to be read back by jq?
[09:23:40] <b0o> no
[09:24:02] <b0o> I was using tee to just write stdin to the file, and to the terminal for me to view the output
[09:24:03] <Blondie101010> that command can't work
[09:24:15] <Blondie101010> the shell opens the file descriptors before running the command
[09:24:23] <e36freak> sponge should work just fine
[09:24:29] <b0o> I am aware Blondie101010
[09:24:59] <Blondie101010> there are ways to do it, but that would not be advisable
[09:25:03] *** Quits: m4n_ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[09:25:25] <b0o> i knew what the issue was in the first place, I was trying to figure out the name of the sponge command
[09:25:37] <b0o> anyway the issue is solved lol
[09:25:56] <sunyibo> how would I delete all directories in a directory, except for directories a, b and c?
[09:26:34] <Blondie101010> sunyibo:  one relatively difficult way would be a negative regex with find
[09:27:24] <Blondie101010> otherwise you could list all file names recursively with find and call a script that does the selection and removal
[09:28:11] <e36freak> you could also possibly use an extended glob
[09:28:16] <Blondie101010> your version of find MAY include -prune
[09:28:35] <e36freak> echo rm -r !(a|b|c)/
[09:28:43] <e36freak> with extglob
[09:28:56] <Blondie101010> almost appealing, but scary
[09:29:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[09:29:11] <e36freak> -prune is also POSIX, it should absolutely be part of find
[09:29:16] <e36freak> scary how?
[09:29:40] <Blondie101010> in the "unusual" sense
[09:29:56] <Blondie101010> I'd have to test it out
[09:29:56] <e36freak> i guess if you don't know extglobs
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:02] <e36freak> !extglob
[09:30:03] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[09:30:28] <Blondie101010> yeah but it's the recursive aspect I'm having trouble with
[09:30:37] <Blondie101010> I'll have to test it
[09:30:56] <sunyibo> https://bpa.st/FELA computer says no
[09:31:00] <e36freak> it's not recursive
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:24] <e36freak> sunyibo: the echo is there to tell you what it's going to run
[09:31:30] <e36freak> if you actually want to run the rm, remove the echo
[09:31:56] <sunyibo> computer says yes ;-)
[09:31:58] <sunyibo> thanks
[09:31:58] <Blondie101010> if not recursive, it doesn't fit my interpretation of the problem description
[09:32:22] <emanuele6> note that you probably want to use   rm -r ./!(a|b|c)/   or   rm -r -- !(a|b|c)/
[09:32:27] <Blondie101010> sunyibo:  do you want to recursively avoid those names?
[09:32:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:32:48] <sunyibo> I don't understand the question
[09:33:11] <sunyibo> emanuele6: why?
[09:33:17] <Blondie101010> if you have a sub directory called 'a', should it be excluded as well?
[09:33:23] <emanuele6> !-- > sunyibo
[09:33:24] <greybot> sunyibo: The special option -- means "end of options" to every POSIX command except echo and test, and to many other commands. E.g. «mv -- *.png /somedir» (in case one of the filenames begins with "-"). See <http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02> and <http://wiki.bash-hackers.org/dict/terms/end_of_options>
[09:34:00] <sunyibo> Blondie101010: yes, I don't want it to go into subdirectories
[09:34:05] <emanuele6> if there is a directory named for example "-r", `rm -r !(a|b|c)/ would not remove it
[09:34:12] <Blondie101010> sunyibo:  not clean enough :S
[09:34:56] <emanuele6> # mkdir -- a b c junk -r; >> file1; ls -p; rm -r !(a|b|c)/; ls -p
[09:35:02] <shbot> emanuele6: -r/  a/  b/  c/  file1  junk/
[09:35:02] <shbot> emanuele6: bash: rm: -/: invalid option
[09:35:02] <shbot> emanuele6: etc... ( http://ix.io/3Ges )
[09:35:05] <e36freak> yeah, that's fair
[09:35:14] <emanuele6> # mkdir -- a b c junk -r; >> file1; ls -p; rm -r ./!(a|b|c)/; ls -p
[09:35:15] <shbot> emanuele6: -r/  a/  b/  c/  file1  junk/
[09:35:15] <shbot> emanuele6: a/  b/  c/  file1
[09:35:24] <emanuele6> # mkdir -- a b c junk -r; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -p
[09:35:25] <shbot> emanuele6: -r/  a/  b/  c/  file1  junk/
[09:35:25] <shbot> emanuele6: a/  b/  c/  file1
[09:36:06] <sunyibo> I lost you guys
[09:36:17] <Blondie101010> sunyibo:  if you have a path like: cd /path/to/cwd/a/something else and your CWD is /path/to/cwd, do you want a directory called /path/to/cw/o/z/a to be avoided?
[09:37:02] <sunyibo> yes
[09:37:04] <Blondie101010> ugh 2 mistakees: if you have a path like: cd /path/to/cwd/something else and your CWD is /path/to/cwd, do you want a directory called /path/to/cwd/o/z/a to be avoided?
[09:37:10] <Blondie101010> then their solution won't work
[09:37:53] <e36freak> Blondie101010: it would be avoided anyway
[09:38:06] <e36freak> they're only worried about top level directories, and that's all the glob addresses
[09:38:18] <Blondie101010> it seems not
[09:38:29] <Blondie101010> which is why I insisted on clarifying it
[09:39:00] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:39:12] <e36freak> # mkdir -p a b c d d/a d/b e; rm -r -- !(a|b|c); ls */
[09:39:18] <shbot> e36freak: a/:
[09:39:18] <shbot> e36freak:
[09:39:18] <shbot> e36freak: etc... ( http://ix.io/3Gew )
[09:39:42] <Blondie101010> good example
[09:39:59] <Blondie101010> sunyibo: please look at it and validate whether that's what you want or not
[09:39:59] <e36freak> sunyibo: you would want d/a to remain?
[09:40:41] <e36freak> original problem set had nothing to do with any subdirectories
[09:41:06] <Blondie101010> I suspected it did
[09:41:14] <Blondie101010> it was worth clarifying
[09:41:43] <emanuele6> sunyibo: let me use 2>/dev/null to hide the "invalid option" error and make it more clear
[09:41:59] <emanuele6> # mkdir -- a b c junk -r; >> file1; ls -p; rm -r !(a|b|c)/ 2>/dev/null; ls -p
[09:42:00] <shbot> emanuele6: -r/  a/  b/  c/  file1  junk/
[09:42:00] <shbot> emanuele6: -r/  a/  b/  c/  file1  junk/
[09:42:11] <emanuele6> # mkdir -- a b c junk -r; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -p
[09:42:12] <shbot> emanuele6: -r/  a/  b/  c/  file1  junk/
[09:42:12] <shbot> emanuele6: a/  b/  c/  file1
[09:43:16] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[09:43:26] <emanuele6> if you don't use -- or don't prepend `./' to the glob, rm will receive an argument named `-dirname/' and interpret each letter as an argument
[09:43:38] <Blondie101010> # mkdir -- a b c junk other/a/z -r; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -p
[09:43:44] <shbot> Blondie101010: bash: mkdir: cannot create directory `other/a/z': No such file or directory
[09:43:44] <shbot> Blondie101010: -r/  a/  b/  c/  file1  junk/
[09:43:44] <shbot> Blondie101010: etc... ( http://ix.io/3GeA )
[09:44:09] <Blondie101010> # (mkdir -- a b c junk other/a/z -r; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -p) 2> /dev/null
[09:44:10] <shbot> Blondie101010: -r/  a/  b/  c/  file1  junk/
[09:44:10] <shbot> Blondie101010: a/  b/  c/  file1
[09:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:44:26] <Blondie101010> that deleted other/a/z
[09:44:33] <emanuele6> in that case, it received -r/ so it interpreted -r (which simply gets ignored because you already passed it, but that would make -r be skipped) and -/ which makes the rm command fail
[09:45:03] <emanuele6> Blondie101010: why did you expect something else?
[09:45:23] <Blondie101010> no, I want to be sure suuny is well aware
[09:45:27] *** Joins: han-solo (~han-solo@user/han-solo)
[09:45:31] <emanuele6> also you didn't even create other/a/z.
[09:45:40] <emanuele6> so of course it didn't
[09:45:59] <Blondie101010> missed -p
[09:46:03] <e36freak> turning a very simple question into a much more complicated one
[09:46:06] <Blondie101010> # (mkdir -p -- a b c junk other/a/z -r; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -p) 2> /dev/null
[09:46:07] <shbot> Blondie101010: -r/  a/  b/  c/  file1  junk/  other/
[09:46:07] <shbot> Blondie101010: a/  b/  c/  file1
[09:46:15] <Blondie101010> still the same point
[09:46:36] <emanuele6> no, now you have a point, before you did not.
[09:46:47] <Blondie101010> ok :)
[09:46:47] <emanuele6> but still it is irrelevant and just noise
[09:47:09] <emanuele6> i was describing why -- and ./ is needed because the user asked me
[09:47:20] <emanuele6> s/and/or/
[09:47:56] <sunyibo> I have a git annex. I had syncing issues. I tried to merge fix, which populated my annex with a bunch of junk folders. I wanted to get rid of the junk folders while preserving my data folders.
[09:48:29] <Blondie101010> if you don't care of about junk/a then their command works
[09:48:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[09:48:52] <sunyibo> I don't care about junk/a
[09:48:59] <Blondie101010> ok
[09:49:02] <sunyibo> I would care about a/junk
[09:49:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:49:23] <emanuele6> sunyibo: did you understand the -- or ./ should be used part?
[09:49:34] <sunyibo> nope
[09:49:53] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; echo rm -r !(a|b|c)/; ls -p
[09:49:58] <e36freak> sunyibo: if you had a directory named -foo, rm would treat that as arguments and cause problems
[09:49:59] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:49:59] <shbot> emanuele6: rm -r -/ junk/
[09:49:59] <shbot> emanuele6: and so forth... (but now the pastebin is sick of me)
[09:50:17] <e36freak> sunyibo: ./ or -- tells rm that everything is filenames, and will not let it treat anything as an argument
[09:50:22] <e36freak> it's good practice to use all the time
[09:50:50] <emanuele6> here you have a directory named -, so it expands -/, rm thinks / is the name of an option, but it is not so it fails
[09:50:58] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; rm -r !(a|b|c)/ 2>/dev/null; ls -p
[09:50:59] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:50:59] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:51:04] <emanuele6> and no file gets deleted
[09:51:19] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; echo rm -r ./!(a|b|c)/
[09:51:20] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:51:20] <shbot> emanuele6: rm -r ./-/ ./junk/
[09:51:44] <emanuele6> if you prepend ./, no argument will ever start with - so you will not have this problem
[09:52:01] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; echo rm -r -- !(a|b|c)/
[09:52:02] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:52:02] <shbot> emanuele6: rm -r -- -/ junk/
[09:52:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:45] <emanuele6> and alternative is to pass -- to rm and that makes rm interpret everything after -- as a regular argument instead of an option
[09:52:59] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -l
[09:53:04] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:53:04] <shbot> emanuele6: total 0
[09:53:05] <shbot> emanuele6: etc... ( http://ix.io/3GeH )
[09:53:11] <emanuele6> oops
[09:53:15] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; rm -r -- !(a|b|c)/; ls -p
[09:53:16] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:53:16] <shbot> emanuele6: a/  b/  c/  file1
[09:53:20] <emanuele6> # mkdir -- a b c junk -; >> file1; ls -p; rm -r ./!(a|b|c)/; ls -p
[09:53:20] <shbot> emanuele6: -/  a/  b/  c/  file1  junk/
[09:53:21] <shbot> emanuele6: a/  b/  c/  file1
[09:53:45] <emanuele6> so with ./ or -- or both the rm will work for any directory content
[09:54:07] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[09:54:10] <sunyibo> https://paste.gnugen.ch/paste/5sZB this was the directory. I wanted to keep the directories with "human" names
[09:54:29] <emanuele6> as opposed to  `rm -r !(a|b|c)/' that will fail, or omit some directories or something unexpected depending on the rm implementation
[09:54:30] <sunyibo> I ended up doing it manually and accidentally deleted all my books
[09:54:42] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:55:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[09:55:45] <sunyibo> I used e36freak's initial suggestion on the last bunch of directories and it worked, apparently
[09:55:56] <Blondie101010> sunyibo:  I'd double check it with `ls ???` but I think you could just `rm -rf ???`
[09:55:59] <e36freak> should have, yeah
[09:56:10] <e36freak> just doing 3-letter dirs may have worked as well
[09:56:16] <e36freak> or 3 character, whatever
[09:56:33] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[09:56:40] <emanuele6> Blondie101010: you definitely don't want `rm -rf ???' to delete directories
[09:56:42] <Blondie101010> classic wildcards
[09:56:46] *** Joins: Milos (~Milos@user/milos)
[09:56:59] *** Joins: vlm (~vlm@user/vlm)
[09:57:03] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Remote host closed the connection)
[09:57:13] <emanuele6> ???/ would be more ideal also -f is generally a bad idea
[09:57:37] <Blondie101010> ok I agree with the /, but do you have an example of a problem?
[09:58:25] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:58:26] <emanuele6> it deletes files with 3 characters long names not just directories
[09:58:41] <Blondie101010> yeah but I looked at the listing
[09:59:07] <sunyibo> thanks to all of you
[10:03:13] *** Quits: sinaowolabi (~SinaOwola@41.58.246.212) (Ping timeout: 268 seconds)
[10:13:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[10:13:44] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[10:15:48] *** Joins: neocron (~NeoCron@p200300c4cf3f7e00320b69bf1a44e74d.dip0.t-ipconnect.de)
[10:18:37] *** Quits: Doraemon (~NeoCron@p200300c4cf1c0a00df145b32079df496.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:23:51] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:34:51] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:36:49] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[10:40:22] *** Joins: carl-- (~carl-@185.103.188.130)
[10:42:39] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[10:45:17] <hejux> Blondie101010:  dig +short +timeout=1 @12.34.56.78 o-o.myaddr.l.google.com TXT 2>/dev/null
[10:45:24] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:45:25] <hejux> try this
[10:46:40] <Blondie101010> why? that came from *my* example
[10:46:46] <Blondie101010> I know what it does
[10:47:52] <Blondie101010> the confusion was around what you were observing which was not clarified
[10:48:04] <Blondie101010> you don't redirect return values
[10:48:50] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 268 seconds)
[10:48:54] <Blondie101010> but if you want to output it, you could: dig +short +timeout=1 @12.34.56.78 o-o.myaddr.l.google.com TXT 2>/dev/null || echo $? > outputfile
[10:49:14] <hejux> i know but this message is a error and code is 9 and it should go to stderr
[10:50:15] <hejux> i don't like dig showing this message after 2>/dev/null
[10:50:26] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[10:50:27] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[10:50:27] *** Joins: wuseman (~wuseman@user/wuseman)
[10:51:34] <Blondie101010> no, return codes are not output
[10:51:43] <Blondie101010> not unless you output them like my example
[10:52:30] <Blondie101010> the fact that you dislike it doesn't change how it works which is similar to all programming languages on that aspect
[10:52:58] *** Joins: Jong (~Jong@2620:10d:c090:400::5:31eb)
[10:53:26] <Blondie101010> output is not a return value and vice-versa
[10:55:57] <hejux> Blondie101010: yes, i get your point.
[10:56:11] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[10:56:14] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 268 seconds)
[10:58:07] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[10:58:46] <hejux> Blondie101010: and it is a dig problem, it consider the error 9 to be a stdout
[10:59:02] *** Joins: rendar (~rendar@user/rendar)
[10:59:07] <hejux> * the content of error 9
[10:59:09] <Blondie101010> you can't miss the error unless you hide it
[10:59:34] <Blondie101010> it shows it distinctively
[11:00:14] <Blondie101010> but that does not matter...  if you want to check the return value, you check it
[11:00:26] <Blondie101010> and in most cases you should
[11:00:38] <hejux> so, in my script i have var=$(dig ...) ; if [[ -n $var ]] ; then ... else ... fi
[11:00:46] <Blondie101010> but programs will normally output errors
[11:00:48] <hejux> this will fail.
[11:01:52] <Blondie101010> # var=$(false); echo $?
[11:01:53] <shbot> Blondie101010: 1
[11:02:21] <Blondie101010> so you could just use a variable like:
[11:02:25] <hejux> not fail, but i mean, dig failed the 'if then else fi', because dig always print something... no matter what error
[11:03:11] <Blondie101010> # var=$(false); ret=$?; if [[ $ret -eq 0 ]] && [[ -n $var ]]; then ... else ... fi
[11:03:17] <shbot> Blondie101010: Missing terminating quote, bracket or keyword
[11:03:20] <hejux> no matter dig error or dig success
[11:03:36] <Blondie101010> what's the question?
[11:04:04] <Blondie101010> # var=$(false); ret=$?; if [[ $ret -eq 0 ]] && [[ -n $var ]]; then echo yes; else echo no; fi;
[11:04:05] <shbot> Blondie101010: no
[11:04:11] <hejux> question is : hide dig error out put entirely
[11:04:31] <Blondie101010> dig ... > /dev/null 2>&1
[11:05:12] *** Quits: xx (~xx@user/xx) (Ping timeout: 265 seconds)
[11:05:16] <hejux> &>/dev/null will make my var empty
[11:05:20] <hejux> :(
[11:05:28] <Blondie101010> yes, that's what you asked
[11:05:34] <Blondie101010> ask what you want
[11:05:45] <hejux> question is : hide dig error out put entirely
[11:05:56] <Blondie101010> you probably want: 2> /dev/null
[11:06:02] <hejux> ERROR OUTPUT ENTIRELY
[11:06:15] <Blondie101010> no, if you hide the dig output it won't go in your $var
[11:06:18] <Blondie101010> yes
[11:06:23] <Blondie101010> that's what I just gave you
[11:07:02] <Blondie101010> but $var won't be interesting if $? is not 0
[11:07:09] <hejux> i figure out a solution
[11:07:19] <Blondie101010> I jut gave it to you
[11:08:16] <hejux> and the solution is to grep the $var for valid ip address
[11:08:54] <Blondie101010> var=$(dig +short +timeout=1 @12.34.56.78 o-o.myaddr.l.google.com TXT 2>/dev/null); ret=$?; if [[ $ret -eq 0 ]] && [[ -n $var ]]; then echo "good output: $var"; else echo "no good output"; fi
[11:08:58] <hejux> var=$(dig ... 2>/dev/null) ; if grep -qE "valid ip regex" $var ; then ...
[11:09:28] <hejux> Blondie101010: then $var is trash when dig failed
[11:09:32] <Blondie101010> yes
[11:09:47] <Blondie101010> what do you want from it?
[11:10:06] <hejux> i want $var to be an ip addr or empty
[11:10:26] <hejux> not some trash like : could not connect to server
[11:10:31] <Blondie101010> ok it can be emptied
[11:11:11] <Blondie101010> but you have to show you're making an effort to participate or learn, because so far it took hours to get a confirmation of what you were doing
[11:11:15] <hejux> var=$(dig ... 2>/dev/null) ; if grep -qE "valid ip regex" $var ; then ...  // THIS IS FINAL
[11:11:59] <Blondie101010> you're not paying attention at all
[11:12:10] <Blondie101010> I just gave you the solution...  there is nothing to grep
[11:12:35] <hejux> what solution ?
[11:12:51] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[11:12:58] <hejux> i need to use $var for the next codes
[11:13:20] <hejux> it is not a simple  if xxx then true else  fail  fi
[11:13:48] <han-solo> consider $var as empty on the esle, or set the var="" on else ?
[11:14:00] <Blondie101010> geees I'll do it for you this once but you MUST show me your whole code
[11:14:12] <Blondie101010> I want to see everything and I'll just fix it for you
[11:14:36] <hejux> this is all DUE TO DIG OUTPUT GARBAGE TO STDOUT EVEN IT FAILS TO CONNECT TO A SERVER
[11:15:23] <Blondie101010> not everyone is suited to learn programming or scripting, maybe you have other skills
[11:16:41] <hejux> Blondie101010: here is the thing: var=$(dig .. 2>/dev/null) , if dig success, $var is an ip address, if dig fail with error 9, $var is "could not connect to the server, bala bala"
[11:16:52] <Blondie101010> I know
[11:17:00] <Blondie101010> I gave you the solution already
[11:17:05] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[11:17:06] <Blondie101010> show me your code if you really want help
[11:18:57] <hejux> but with the help of grep : if ! grep -E "valid ip regex" $var ; then var="" ; fi
[11:19:03] <hejux> this is the solution
[11:19:05] <hejux> :)
[11:19:54] <hejux> so, now, if $var is ip , then $var is $var, if $var is garbage returned by dig, $var is empty
[11:20:35] <hejux> Blondie101010: this is the soltuon :)
[11:20:46] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[11:21:48] <Blondie101010> please remind me to never try to help you again
[11:21:54] *** Joins: sazawal (~sazawal@122.161.84.237)
[11:22:35] <hejux> Blondie101010: i can't show my code , because this is no code yet. all i want is , dig ok, var=ip , dig fail, var=""
[11:23:01] <Blondie101010> the problems in your head were just in your head
[11:23:40] <Blondie101010> sure assigning var="" was a solution to the undisclosed and probably uneeded assignment
[11:23:44] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:23:55] <hejux> my need is simple, var is ip or empty
[11:24:07] <Blondie101010> you have an if block
[11:24:20] <hejux> that is all, i will use this var in the following codes which i am tring to code
[11:25:00] <Blondie101010> execution should stop there if it fails...  and if inside a loop, it should *continue*
[11:25:32] <Blondie101010> there's no need to process ""
[11:25:36] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:26:04] *** Joins: while (~while@65.186.57.105)
[11:26:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:26:47] <Blondie101010> but your error 9 pointed towards a problem on your system or a test on nameservers, and not about scripting
[11:27:07] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:27:22] <while> when executing a variable in a bash shell by having the variable name on a line by itself (e.g. $cmdinvar), if the variable contains multiple commands (such as if it came from user-supplied web application input) will more then one bash shell command execute?
[11:27:44] <Blondie101010> please show an example
[11:28:17] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[11:29:54] <while> https://pastebin.com/FMBwNL4e
[11:29:54] <pasteban> Paste is available without ads on https://pastebin.com/raw/FMBwNL4e
[11:30:19] <Blondie101010> # variable="command arg1 arg2"; function testParms { echo "there are $# parameters"; }; testParms $variable
[11:30:19] <shbot> Blondie101010: there are 3 parameters
[11:30:40] <Blondie101010> (1 is $0)
[11:31:24] <Blondie101010> so yes, running $variable would include its parameters
[11:31:56] <Blondie101010> be sure that's what you want as it involves many potential security vulnerabilities
[11:32:18] <hejux> tempvar="" ; if tempvar=(dig ... 2>/dev/null) ; then useful_var=$tempvar ; else useful_var=$tempvar ; fi // Blondie101010 , another solution
[11:32:45] <Blondie101010> hejux:  no, that is not useful
[11:32:57] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[11:33:11] <Blondie101010> unless your only purpose is to test a DNS server, in which case it's not relevant to the output
[11:33:12] <hejux> why not?
[11:33:14] <Blondie101010> so not good
[11:33:41] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[11:33:52] <hejux> tempvar="" ; if tempvar=(dig ... 2>/dev/null) ; then useful_var=$tempvar ; else useful_var="" ; fi //
[11:34:00] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:34:20] <hejux> oh no
[11:34:26] <hejux> this is not right
[11:34:52] <hejux> oh yes, this is right.
[11:35:01] <hejux> this is the way
[11:35:04] <hejux> no need grep
[11:35:05] *** Quits: xizhendu__ (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9) (Ping timeout: 250 seconds)
[11:35:29] <Blondie101010> if what you want is to test the DNS server, you just: server=12.34.56.78; dig +short a google.com @$server > /dev/null 2>&1; if [[ $? -eq 0 ]]; then echo "$server works; else echo "server failed to respond"; fi
[11:35:51] <Blondie101010> so it all depends on what you're looking for
[11:36:23] <hejux> i'm getting a ip addr from a server ... not just testing the server connection issue.
[11:36:31] <Blondie101010> I know
[11:36:32] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[11:36:36] <Blondie101010> that is exactly my point
[11:36:46] <Blondie101010> all you care is about what it outputs
[11:36:55] <Blondie101010> so if it outputs nothing useful, you move on
[11:37:37] <hejux> test the server, and then to get an ip and you have to dig again?
[11:37:48] <Blondie101010> what are you testing?
[11:37:58] <Blondie101010> you said you were grepping for an IP
[11:38:20] <hejux> yes, your code does not get an ip, it just test the server
[11:38:34] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:39:05] <hejux> this is the one works for me and the simplist one
[11:39:06] <Blondie101010> var=$(dig +short +timeout=1 @12.34.56.78 o-o.myaddr.l.google.com TXT 2>/dev/null); ret=$?; if [[ $ret -eq 0 ]] && grep -qP "regex" $var; fi
[11:39:07] <hejux> tempvar="" ; if tempvar=(dig ... 2>/dev/null) ; then useful_var=$tempvar ; else useful_var="" ; fi
[11:39:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:39:34] <Blondie101010> var=$(dig +short +timeout=1 @12.34.56.78 o-o.myaddr.l.google.com TXT 2>/dev/null); ret=$?; if [[ $ret -eq 0 ]] && grep -qP "regex"; then $var; fi
[11:39:40] <Blondie101010> gees
[11:39:58] <Blondie101010> var=$(dig +short +timeout=1 @12.34.56.78 o-o.myaddr.l.google.com TXT 2>/dev/null); ret=$?; if [[ $ret -eq 0 ]] && grep -qP "regex" $var; then doYourProcessing; fi
[11:40:11] <hejux> grep was my idea, but i don't need grep any more, with the 'tempvar' solution
[11:40:29] <Blondie101010> you can do regex conditions in bash you know
[11:41:01] <hejux> yes i know, try regex valid ipv4 address in bash :P
[11:41:07] <hejux> not gonna make it
[11:41:37] <hejux> Blondie101010: did you look at my tempvar solution? did you really look at it?
[11:42:16] <Blondie101010> yes and it tells me that you refuse to pay attention and to learn
[11:42:26] <Blondie101010> I told you what to do, move on!
[11:42:40] *** Joins: gschanuel26 (~gschanuel@user/gschanuel)
[11:42:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:42:47] <hejux> with the tempvar solution, i don't need grep, and i can get my useful_var to an ip or just "" , no garbage
[11:43:20] <Blondie101010> # for i in a b c; do if [[ $i == 'b' ]]; then continue; fi; doyourProcessing; done
[11:43:21] <shbot> Blondie101010: bash: doyourProcessing: command not found
[11:43:21] <shbot> Blondie101010: bash: doyourProcessing: command not found
[11:43:22] <hejux> and that is what i was looking for
[11:43:38] <Blondie101010> # for i in a b c; do if [[ $i == 'b' ]]; then continue; fi; echo $i; done
[11:43:39] <shbot> Blondie101010: a
[11:43:39] <shbot> Blondie101010: c
[11:43:40] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:43:51] <Blondie101010> you don't need to do anything else with b, you don't want it
[11:43:54] <hejux> use break plz
[11:44:01] <Blondie101010> not the same at all
[11:44:05] <Blondie101010> break stops the loop
[11:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:44:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[11:45:04] <hejux> what are we talking about
[11:45:09] <hejux> man,
[11:45:39] <while> I know, I feel like this channel is getting... bashed. HA
[11:45:51] * Blondie101010 nods
[11:46:11] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Ping timeout: 268 seconds)
[11:46:12] *** gschanuel26 is now known as gschanuel2
[11:46:26] <hejux> i still don't see your solution that help to assign 'valid ip' or 'nothing' to a VAR from dig
[11:46:42] <Blondie101010> why do you need to keep a bad output
[11:46:54] <Blondie101010> you can keep other things in other variables you know
[11:46:57] <hejux> show me your final code :)
[11:47:07] <Blondie101010> you refused to show a single line
[11:47:23] <Blondie101010> I'm not sure what your intended goal is
[11:47:32] <Blondie101010> you want to grep for IPs in dig results
[11:47:48] <Blondie101010> that could be a monitoring script I suppose
[11:48:22] <hejux> my intention: if dig returns ip , assign that ip to VAR, if dig returns garbage or nothing, set VAR=""
[11:48:38] <Blondie101010> what do you do with var after?
[11:48:48] <Blondie101010> especially when it's empty?????
[11:48:53] <Blondie101010> continue
[11:49:12] <Blondie101010> or report the problem
[11:49:24] <Blondie101010> monitoring found that your IP is missing from the DNS output
[11:49:42] <Blondie101010> echo failure; exit 2
[11:50:07] <Blondie101010> that's what a nagios monitoring script would look like
[11:50:19] <hejux> that is still in my head. few things : 1. i need that ip to update my DDNS 2. i need that ip to get a SSL certification
[11:50:34] <Blondie101010> yes, so why do you need "" if it's empty?
[11:50:49] <Blondie101010> you don't... you either want to alert about the problem, or skip it
[11:50:54] <Blondie101010> or both
[11:51:09] <Blondie101010> but nothing useful to do with that empty string
[11:51:31] <while> I think hejux is trying to say that the reason, is an engineering secret
[11:51:42] <hejux> ok, put empty aside, how about getting a valid ip?
[11:51:54] <Blondie101010> show some code
[11:52:04] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[11:52:31] <hejux> any way, this is the code
[11:52:40] <hejux> tempvar="" ; if tempvar=(dig ... 2>/dev/null) ; then useful_var=$tempvar ; else useful_var="" ; fi
[11:53:14] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[11:53:21] <Blondie101010> that does absolutely nothing more than: if tempvar=(dig ... 2>/dev/null); then doSomething; fi
[11:53:36] <hejux> are you kidding
[11:53:36] <Blondie101010> the useful_var is empty, so not useful
[11:53:47] <Blondie101010> no show a case where it matters, if it does
[11:54:09] <Blondie101010> that is getting ridiculous, just because you don't want to write a 4 line script
[11:54:53] <hejux> i see your point , the doSomething is fine. but i many need to use the useful_var in another function :)
[11:55:02] <hejux> *may
[11:55:10] <Blondie101010> show code that you think would be affected
[11:55:35] <Blondie101010> I don't care if it takes you years to realize there is none, but I obviously can't force it in your head
[11:55:39] <hejux> show my top classified secret codes?  :P
[11:56:05] <Blondie101010> can't you make a simple demonstration?
[11:56:13] <Blondie101010> what would the "" be useful for?
[11:56:33] *** Quits: dermoth (~dermoth@dsl-150-248.b2b2c.ca) (Ping timeout: 250 seconds)
[11:56:35] <hejux> ok
[11:56:37] <Blondie101010> but I think I may understand your (false) concern
[11:56:48] <hejux> tempvar="" ; if tempvar=(dig ... 2>/dev/null) ; then useful_var=$tempvar ; fi  // SIMPLER
[11:57:19] <Blondie101010> that is sensible, but use quotes
[11:57:28] <Blondie101010> useful_var="$tempvar"
[11:57:38] <hejux> yes sir
[11:58:19] <han-solo> `tempvar="" ; if tempvar=(dig ... 2>/dev/null) ; then useful_var=$tempvar ; fi  // SIMPLER` # are you going to use `useful_var` or `tempvar` ?
[11:58:20] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Quit: Leaving...)
[11:58:32] <han-solo> just more confusing i'd say
[11:58:42] <Blondie101010> oh I missed that
[11:58:53] <hejux> useful_var is what i needed
[11:59:17] <Blondie101010> hejux: do your processing in the if block where you have valid data to work with, that's it
[11:59:34] <Blondie101010> if your concern is organization, use functions
[12:00:00] <hejux> another question
[12:00:40] <hejux> local tempvar='something' ; useful_var="$tempvar" // will useful_var also be local?
[12:00:50] <Blondie101010> no
[12:01:21] <hejux> ok, then all is well
[12:01:46] <hejux> continue my happy coding
[12:02:19] <Blondie101010> # tempvar='secret'; function testFunc() { local tempvar='something' ; useful_var="$tempvar"; }; testFunc; echo "$tempvar"
[12:02:20] <shbot> Blondie101010: secret
[12:02:29] <Blondie101010> oops
[12:02:52] <Blondie101010> # useful_var='secret'; function testFunc() { local tempvar='something' ; useful_var="$tempvar"; }; testFunc; echo "$useful_var"
[12:02:53] <shbot> Blondie101010: something
[12:03:30] <Blondie101010> so useful_var is not local
[12:05:13] <hejux> oh there is another problem
[12:08:02] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:08:08] *** Joins: node1 (~node1@user/node1)
[12:09:42] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[12:09:50] *** Joins: dermoth (~dermoth@dsl-10-148-34.b2b2c.ca)
[12:10:21] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Ping timeout: 245 seconds)
[12:10:51] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[12:10:58] *** Joins: yeirr (~yeirr@user/yeirr)
[12:11:02] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[12:11:32] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[12:13:19] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 268 seconds)
[12:13:47] *** Joins: rcernin (~rcernin@124.190.139.235)
[12:15:29] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[12:19:07] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[12:21:48] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Remote host closed the connection)
[12:22:13] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:22:32] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[12:25:43] *** Joins: millido (~millido@84.210.150.128)
[12:27:32] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[12:30:18] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[12:34:48] *** Joins: fluter- (~fluter@user/fluter)
[12:37:34] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 260 seconds)
[12:37:50] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:38:33] <aidalgol> Is there some way to check whether the mtime of a file is less than an hour from now?
[12:39:24] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:41:06] <Blondie101010> in the future?
[12:42:36] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[12:43:26] <Blondie101010> stat -c %Z $filename # gives you the number of seconds since Epoch, and date +%s
[12:43:26] <Blondie101010> 1638004338 gives you the current offset from Epoch, after that it's grade 5 Math
[12:43:41] <Blondie101010> maybe grade 7
[12:43:48] <Blondie101010> because of the big numbers
[12:44:01] <Blondie101010> woops
[12:44:07] <Blondie101010> made a mistake in my copy
[12:44:45] <Blondie101010> ignore the 1638004338
[12:46:30] <aidalgol> Awesome, thanks!
[12:46:49] <Blondie101010> np
[12:48:07] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[12:49:35] <hejux> Blondie101010: bash king
[12:55:30] *** Quits: skreech (skreech@user/skreech) (Quit: skreech)
[12:56:06] *** Joins: skreech (skreech@user/skreech)
[12:56:35] *** Joins: Afroboy (~afroboy@105.109.192.27)
[12:57:55] <aidalgol> What is "last data modification"?
[13:01:43] <aidalgol> Oh, it sounds like %Z is ctime, and %Y is mtime.
[13:01:53] *** Joins: lavaball (felix@31.204.155.215)
[13:02:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:02:55] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[13:04:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:06:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[13:08:50] *** Quits: Afroboy (~afroboy@105.109.192.27) (Ping timeout: 268 seconds)
[13:13:45] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[13:15:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:15:58] *** Joins: Atque (~Atque@user/atque)
[13:20:32] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[13:21:17] *** Joins: Afroboy (~afroboy@105.109.192.27)
[13:21:53] *** Joins: node1 (~node1@user/node1)
[13:30:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:30:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:31:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:32:01] <tirnanog> aidalgol: as you already seem to be using gnu, note that it's also possible to (ab)use find to this end: find /path/to/file -type f ! -newermt '+1 hour' -printf '\n' | read && echo "mtime is less than an hour hence"
[13:32:05] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[13:33:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:33:43] *** Lord_of_Life_ is now known as Lord_of_Life
[13:34:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:34:51] <tirnanog> add -maxdepth 0 as the initial predicate to make it resilient to being given the wrong pathname (e.g. directory pathnames).
[13:35:00] <pj> if you touch a file with a timestamp of an hour from now then you can use -nt or -ot to compare to that file.
[13:35:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:35:39] <pj> that way you don't have to use stat or find.
[13:36:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:36:21] <tirnanog> which would just be a non-standard use of touch and require arithemetic anyway. the novelty of the find method is that it does all the math itself (and no intermediate files).
[13:36:27] <tirnanog> but yeah, that works.
[13:37:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:38:14] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[13:38:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:38:51] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:39:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:40:21] *** Joins: WinterStar (~IceLight@user/icelight)
[13:40:25] *** Joins: earnest (~earnest@user/earnestly)
[13:40:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:42:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:43:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:44:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:45:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:45:22] <tirnanog> # type touch
[13:45:22] <shbot> tirnanog: touch is /bin/touch
[13:46:35] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:46:55] <tirnanog> # printf -v epoch '%(%s)T' -1; printf -v time '%(%FT%T)T\n' $((epoch + 3600)); touch -d "$time" file; ls --full-time file
[13:46:56] <shbot> tirnanog: -rw-r--r-- 1 root root 0 2021-11-27 11:16:55.000000000 +0000 file
[13:47:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:47:36] <tirnanog> ok. that's a standard use of touch, at least.
[13:48:30] <emanuele6> you can use EPOCHSECONDS
[13:48:38] <tirnanog> good point.
[13:48:42] <tirnanog> since ... 5.0, was it?
[13:48:53] <emanuele6> 4# declare -p EPOCHSECONDS
[13:48:53] <shbot> emanuele6: bash: declare: EPOCHSECONDS: not found
[13:48:55] <tirnanog> that'll cut out a step.
[13:48:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:49:06] <emanuele6> yes, since bash5
[13:49:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:50:49] <emanuele6> also i believe you can pass a time in seconds since epoch using @
[13:51:04] <tirnanog> also, ignore the \n there. left that in accidentally.
[13:51:15] <emanuele6> so something like this: touch -d "$(( EPOCHSECONDS + 3600 ))" file
[13:51:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:51:34] <emanuele6> # touch -d "$(( EPOCHSECONDS + 3600 ))" file; ls
[13:51:35] <shbot> emanuele6: touch: invalid date format '1638012094'
[13:51:36] <emanuele6> oops
[13:51:39] <emanuele6> # touch -d "@$(( EPOCHSECONDS + 3600 ))" file; ls
[13:51:40] <shbot> emanuele6: file
[13:51:43] <emanuele6> # touch -d "@$(( EPOCHSECONDS + 3600 ))" file; ls -l
[13:51:44] <shbot> emanuele6: total 0
[13:51:44] <shbot> emanuele6: -rw-r--r-- 1 root root 0 Nov 27  2021 file
[13:52:00] <emanuele6> # touch -d "@$(( EPOCHSECONDS + 3600 ))" file; ls --full-time
[13:52:01] <shbot> emanuele6: total 0
[13:52:01] <shbot> emanuele6: -rw-r--r-- 1 root root 0 2021-11-27 11:22:00.000000000 +0000 file
[13:52:11] <emanuele6> hehe
[13:52:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:52:48] <tirnanog> @ is non-standard.
[13:52:51] <tirnanog> for touch -d.
[13:52:54] <emanuele6> oh
[13:52:55] <tirnanog> so I'd probably go half-way.
[13:53:08] *** Joins: arinov (~arinov@31.142.46.132)
[13:53:12] <tirnanog> using EPOCHSECONDS, it's not bad.
[13:53:16] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[13:53:30] <emanuele6> but isn't -d also non-standard?
[13:53:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:53:40] <emanuele6> oh, it is not nevermind
[13:53:42] <tirnanog> no, I don't think so.
[13:53:44] <emanuele6> https://pubs.opengroup.org/onlinepubs/9699919799/utilities/touch.html
[13:53:50] <tirnanog> it's just picky with the format.
[13:53:50] <emanuele6> it is standard, you are correct
[13:54:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:54:24] <tirnanog> could be better, but it turns out not bad as a bash + portable use of an external utility solution.
[13:54:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:54:51] <geirha> interesting that bsd touch doesn't implement -d
[13:55:31] <geirha> probably just too new addition
[13:55:46] <tirnanog> I think the contemporary BSDs have it.
[13:55:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:56:04] <tirnanog> otherwise, yeah.
[13:56:07] <emanuele6> yes, i just checked openbsd and freebsd and they have it
[13:56:14] <emanuele6> i also thought they did not have it
[13:56:20] <geirha> ok, just macos lagging being then
[13:56:50] <tirnanog> damn it, Apple!
[13:56:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:58:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:58:25] <tirnanog> could use -t in that case then, I suppose.
[13:58:29] <tirnanog> and format accordingly.
[13:59:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[13:59:59] <geirha> touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
[14:00:37] <tirnanog> -t is also supposed to be portable, so I suppose that wins for now.
[14:00:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:00:44] <geirha> so %(%Y%m%d%H%M.%S)T
[14:00:51] <tirnanog> very good.
[14:01:29] *** Quits: docmax_ (~docmax@dynamic-077-006-103-229.77.6.pool.telefonica.de) (Remote host closed the connection)
[14:01:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:01:50] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[14:03:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:03:42] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[14:04:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:04:11] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:05:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:06:22] <Patsie> for those interested: Bad Apple!! in awk-videoplayer -> https://youtu.be/I8AwZDdk8oQ
[14:06:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:07:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:08:32] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:08:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:09:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:10:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:10:20] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:11:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:11:43] <geirha> that's amazingly smooth
[14:12:42] <Patsie> thanks, nice 30fps
[14:12:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:13:10] *** ChanServ sets mode: +o geirha
[14:13:13] *** geirha sets mode: +b-o betelgeu*!*betelgeus@*$##fix_your_connection geirha
[14:13:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:14:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:14:29] <Patsie> had to invest some time to make some functionality to get a stable, synced fps
[14:14:35] <Patsie> but it mostly works now
[14:15:02] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:17:19] *** Quits: while (~while@65.186.57.105) (Remote host closed the connection)
[14:18:16] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:19:32] <earnest> geirha: timezone specific
[14:20:28] <earnest> -d allows for Z to indicate UTC, otherwise TZ=UTC or so might be necessary
[14:20:37] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[14:20:46] <earnest> Also BSD lags behind many posix 2008 requirements
[14:21:02] <earnest> Such as not being able to use cp -L without -R
[14:21:23] *** Joins: keypusher (keypusher@user/keypusher)
[14:21:42] <tirnanog> hmm. not the champions of correctness that one might hope for.
[14:22:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:23:13] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:23:14] <tirnanog> Patsie: what's the format of the video?
[14:23:23] <Patsie> mp4
[14:23:36] <Patsie> could see that in the start and end of the video
[14:23:51] * tirnanog puts on glasses
[14:24:36] <tirnanog> and rgb24. I see. impressive.
[14:25:24] *** Quits: Afroboy (~afroboy@105.109.192.27) (Remote host closed the connection)
[14:25:34] <Patsie> yeah, ffmpeg does the heavy lifting of converting it from any format (mp4, x264 in this case, into raw and in this case rgb24 byte data
[14:25:58] <Patsie> gawk does the rest of barsing the binary uncompressed raw data
[14:26:10] <Patsie> parsing*
[14:26:11] <tirnanog> even so.
[14:26:56] <Patsie> awk-videoplayer can handle rgb24, rgb565, rgb8, yuv422 and some other formats too
[14:29:22] *** Quits: arinov (~arinov@31.142.46.132) (Read error: Connection reset by peer)
[14:29:25] <Patsie> but thanks
[14:30:06] *** Quits: kyr_ (~kyr@167.71.50.12) (Quit: Lost terminal)
[14:30:16] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[14:30:25] *** Joins: kyr (~kyr@167.71.50.12)
[14:30:57] <pj> touch -t is portable.  I would use this: touch -t "$(printf '%(%Y%m%d%M.%S)T' "$(( $(printf '%(%s)T' -1) + 3600 ))")" filename
[14:31:14] <pj> AFAIK -d isn't POSIX
[14:31:39] <tirnanog> it is. but, also the earlier discussion.
[14:31:59] <pj> okay, well my touch(1p) doesn't shwo -d
[14:32:01] <pj> *show
[14:33:04] *** Joins: arinov (~arinov@213.194.126.155)
[14:33:35] <pj> I would probably also preface that with: TZ=UTC
[14:33:51] <pj> but yeah
[14:36:41] <tirnanog> the format is a bit off there (see geirha's example). I agree though. this seems like the best all-round approach.
[14:37:31] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 250 seconds)
[14:38:44] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[14:42:32] *** Joins: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net)
[14:42:48] *** Joins: sandb0y (~pirate@user/sandb0y)
[14:43:11] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Ping timeout: 268 seconds)
[14:43:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe)
[14:48:17] *** Joins: roadie (~user@2a02:8108:ec0:1427:3495:abf3:213e:1ef0)
[14:50:30] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[14:50:39] *** Quits: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[14:51:44] *** Joins: kebo (~kebo@240e:368:9d16:c600:8c53:6ff:fea8:f042)
[14:54:47] *** Quits: kebo (~kebo@240e:368:9d16:c600:8c53:6ff:fea8:f042) (Quit: Client closed)
[14:59:39] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:00:48] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[15:05:07] *** Joins: furrymcgee (~devuan@cgn-89-1-209-86.nc.de)
[15:08:19] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[15:13:00] *** Joins: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net)
[15:13:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:14:07] *** Joins: namkeleser (~namkelese@101.175.102.188)
[15:15:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:15:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[15:16:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:33:38] *** Joins: annomy (~annomy@103.38.199.108)
[15:33:41] <annomy> linux
[15:40:37] <emanuele6> hp-ux
[15:44:29] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:46:38] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[15:49:34] <hejux> i know `file` could display binary info about arch, but is there a tool that displaty only e.g. 'x86_64'  'aarch64'?
[15:50:29] <hejux> sorry, wrong channel
[15:53:21] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:53:45] *** Quits: mrhands (~mrhands@user/mrhands) (Ping timeout: 265 seconds)
[15:54:42] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[15:55:32] *** Joins: mrhands (~mrhands@user/mrhands)
[15:57:50] *** Joins: mhmd (~mhmd@37.48.90.208)
[16:00:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:01:44] *** Joins: timj (~timj@user/timj)
[16:02:25] <Blondie101010> hejux:  sorry that's wrong...  file shows information about the file/entity, not the OS... you're looking for uname
[16:03:45] <tirnanog> which can include the ELF arch.
[16:04:21] <tirnanog> not that I'd use file for that, but I'm guessing that's the use case.
[16:04:37] <Blondie101010> it does show file information as precisely as listed in the magic file
[16:05:13] <Blondie101010> it also recognizes many executable formats that don't natively run on Linux
[16:05:16] <tirnanog> yes. which can include the arch for ELF binaries.
[16:05:38] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[16:05:56] *** Joins: sgn (~sgn@user/sgn)
[16:08:20] *** Joins: igemnace (~ian@user/igemnace)
[16:08:23] <tirnanog> I know it was conceded as being off-topic already but I'd suggest using scanelf from pax-utils if it's an option.
[16:09:28] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:10:01] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[16:10:37] *** Quits: annomy (~annomy@103.38.199.108) (Quit: WeeChat 3.3)
[16:11:23] *** Quits: jos1 (~jos3@dyndsl-091-248-049-113.ewe-ip-backbone.de) (Remote host closed the connection)
[16:12:43] <Blondie101010> file /bin/find|cut -d',' -f2|tr -d ' '
[16:13:01] <Blondie101010> # file /bin/find|cut -d',' -f2|tr -d ' '
[16:13:02] <shbot> Blondie101010: x86-64
[16:13:20] *** Joins: tobybl (~tobybl@213.31.134.21)
[16:14:03] <tirnanog> e.g. scanelf -BF '%a %F'. control over the format and no output for files that are not ELFs.
[16:19:57] <hejux> Blondie101010: sys_arch=$(uname -m) ; file -b -e elf some.bin | grep -q x86-64 && bin_arch="x86_64" || bin_arch="" ; if [[ $sys_arch != $bin_arch ]] ; then echo "wrong binary arch" ; fi
[16:20:24] <hejux> figured that out :)
[16:21:48] <hejux> # sys_arch=$(uname -m) ; file -b -e elf /bin/find | grep -q x86-64 && bin_arch="x86_64" || bin_arch="" ; if [[ $sys_arch != $bin_arch ]] ; then echo "wrong binary arch" ; fi
[16:21:49] <shbot> hejux: no output
[16:22:11] <hejux> # sys_arch=$(uname -m) ; file -b -e elf /bin/find | grep -q x86-64 && bin_arch="x86_64" || bin_arch="" ; if [[ $sys_arch != $bin_arch ]] ; then echo "wrong binary arch" ; else echo "good to go" ; fi
[16:22:12] <shbot> hejux: good to go
[16:22:15] <hejux> :)
[16:22:53] *** Quits: downunder (~downunder@110.151.116.229) (Quit: WeeChat 3.3)
[16:23:05] *** Joins: cdown_ (~cdown@89.32.122.5)
[16:25:46] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[16:25:55] *** cdown_ is now known as cdown
[16:26:00] <Blondie101010> hejux:  I do notice some improvement, keep going
[16:26:37] *** Joins: yeirr (~yeirr@user/yeirr)
[16:26:50] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[16:28:04] <hejux> Blondie101010: yes sir.
[16:29:14] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:29:24] <Blondie101010> you have two "conditions" that could be combined
[16:29:24] *** Joins: sinaowolabi (~SinaOwola@41.58.50.111)
[16:30:12] *** Joins: paws_ (uid89121@id-89121.lymington.irccloud.com)
[16:30:14] <hejux> like how?
[16:30:36] <DPA> The best way to find out if something will run, is to just run it. I can run aarch64 binaries in my x86_64 linux pc and vice versa. The keyword to that is user emulation.
[16:30:38] <tirnanog> the above code boils down to: if [[ $sys_arch != x86_64 ]] || ! file ... | grep -q x86-64; then echo "wrong"; else echo "good"; fi. which is, perhaps, ab it odd. if you're not going to support any other sys_arch than x86_64, it might make more sense to bail out and say so up front, rather than attribute it to the state of the binary in the error.
[16:31:23] * Blondie101010 nods
[16:32:37] <Blondie101010> extracting the value from the string instead of checking manually assigning it would be preferable
[16:32:48] <Blondie101010> but for one-shots I'd consider that fine
[16:33:29] <hejux> tirnanog: like qemu-user-bin?
[16:33:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[16:33:52] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.27)
[16:34:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:34:16] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[16:34:37] <hejux> Blondie101010: tired of echo  | cut  | tr | sed | awk
[16:34:40] <tirnanog> I just mean that your sample is written almost in a way as if it purports to want to handle any case other than where sys_arch is x86_64 meaningfully. but if you reduce it to what it's actually doing (my sample behaves in the same way), it clearly doesn't want to.
[16:35:00] <tirnanog> at least, not yet.
[16:35:19] <tirnanog> that said, it will hit the error handling path regardless, and maybe that's good enough for what you're doing.
[16:36:20] *** Quits: mindhunter (mindhunter@triton.blinkenshell.org) (Changing host)
[16:36:20] *** Joins: mindhunter (mindhunter@user/mindhunter)
[16:36:31] <tirnanog> let me put it another way. if sys_arch != x86_64, yet the elf being checked is, in fact, a match for whatever the value of sys_arch is, then your code will say "wrong binary arch" anyway.
[16:36:41] *** Joins: bud (~bud@user/bud)
[16:36:43] <tirnanog> that's the part that might be considered weird.
[16:36:49] <Blondie101010> hejux:  you could alternatively learn the bash string operations
[16:37:04] <tirnanog> the reality is that you only support x86_64 as a sys_arch, otherwise the remaining tests are rendered void.
[16:37:06] <Blondie101010> but cut remains useful in many cases
[16:37:07] *** Joins: jos1 (~jos3@dyndsl-091-248-049-113.ewe-ip-backbone.de)
[16:37:10] <tirnanog> (as shown, anyway)
[16:37:34] <hejux> bash string operation : x86_64 to x86-64?  that must be hard
[16:37:54] <Blondie101010> why not just tr?
[16:38:03] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:07] <Blondie101010> avoiding the most suitable tool is not great
[16:38:16] <hejux> tirnanog: x86_64 is just an exmaple, i could make a function to check also aarch64 with some args : $1 $2 ...
[16:38:22] <tirnanog> ok.
[16:39:17] <hejux> Blondie101010: first, if the command of `file` output changes in the future for any reason, your cut and tr will fail
[16:39:30] <Blondie101010> # arch=x86_64; echo "${arch/_/-}"
[16:39:31] <shbot> Blondie101010: x86-64
[16:39:44] <Blondie101010> hejux:  so will yours
[16:39:54] <Blondie101010> that's unreasonable :)
[16:40:08] <hejux> cool find and repl :)
[16:40:12] <tirnanog> well, that's why I suggested scanelf.
[16:40:16] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[16:40:17] <tirnanog> it does the one thing well.
[16:40:20] *** Quits: sinaowolabi (~SinaOwola@41.58.50.111) (Ping timeout: 268 seconds)
[16:40:29] <Blondie101010> never used it but your point was good
[16:41:25] <tirnanog> is the general requirement just to match the ELF to the host machine type, irrespective of what the machine type is?
[16:41:52] <hejux> tirnanog: external command? not come from default installation
[16:42:02] <tirnanog> I didn't say it was a standard utility.
[16:42:02] *** Quits: joerg (~saturn@user/joerg) (Read error: Connection reset by peer)
[16:42:06] <tirnanog> that's why I said "if it is an option".
[16:42:29] <tirnanog> file isn't a standard utility either.
[16:42:47] <tirnanog> if we're using the strict definition of standard, mind.
[16:42:58] <hejux> it is from coreutils
[16:43:05] <Blondie101010> file is installed on all Linux distros as far as I know
[16:43:18] <Blondie101010> it is a core utility
[16:43:19] <emanuele6> there are many file
[16:43:25] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:43:52] <emanuele6> Blondie101010: it is not a core utility (as in coreutils), usually it comes as a stand-alone package
[16:44:07] <tirnanog> oh, it is standard. dunno about the output format though, which was my original point.
[16:44:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:44:20] <tirnanog> anyway, that wasn't what I was asking, hejux.
[16:44:45] <hejux> /usr/bin/file is owned by file 5.41-1
[16:44:58] <hejux> `pacman -Qo file` says that
[16:45:17] <Blondie101010> was it installed by default?
[16:45:27] <hejux> pacman -Qii file
[16:45:43] <Blondie101010> I'm on CentOS 7 so mine is version 5.11
[16:45:50] <hejux> Required By     : base  util-linux
[16:45:56] <hejux> yes, base is a default install
[16:46:01] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[16:46:23] *** Joins: joerg (~saturn@user/joerg)
[16:47:04] <hejux> CentOS 7? EOL right?
[16:47:18] <emanuele6> the point is that the output is not standardised and since file(1) is a POSIX tool there are many implementation, and since it is not a GNU coreutil, you cannot expect to have that specific version of file on a GNU/Linux system
[16:47:23] <tirnanog> there are also situations in which file could conceivably print something that contains "x86-64", or whatever other substring you are intending to match, even if not referring to an ELF.
[16:47:41] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[16:47:58] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:47:59] <tirnanog> I understand that it might be good enough for your use case but still.
[16:48:20] <emanuele6> (at least outputs that contain x86 are not part of the standard)
[16:48:25] <tirnanog> right.
[16:48:33] <hejux> tirnanog: right, good point
[16:48:44] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Read error: Connection reset by peer)
[16:48:58] *** Quits: m4n (~emacs@95.91.209.255) (Remote host closed the connection)
[16:49:02] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[16:49:03] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 250 seconds)
[16:50:07] <hejux> usr/bin/dumpelf usr/bin/lddtree usr/bin/pspax usr/bin/scanelf usr/bin/scanmacho usr/bin/symtree
[16:50:38] <hejux> pacman -Fl pax-utils | grep 'usr/bin/'
[16:51:05] <Blondie101010> and it relies on a text file (magic)
[16:51:36] <Blondie101010> hejux:  so you could relatively easily mess it up yourself if you want to experiment
[16:51:49] *** Joins: Grems (~grems@194.19.73.77)
[16:52:03] <hejux>  pax-utils : Depends On      : bash  libcap  libcap.so=2-64  libseccomp  python  python-pyelftools
[16:52:12] <hejux> oh my god
[16:52:45] <hejux> Blondie101010: i am good at pacman .
[16:52:56] <Blondie101010> hmm ok
[16:53:05] <hejux> at least 10 years on pacman .
[16:53:09] <Blondie101010> I'm good at watching youtube
[16:53:09] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:53:27] <Blondie101010> about the same skill level
[16:53:53] * Grems still hasn't finished a single Pacman-level
[16:54:14] <Blondie101010> yeah that darmn game...  I almost love hating it
[16:54:31] *** Joins: sinaowolabi (~SinaOwola@105.112.180.201)
[16:54:48] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[16:54:55] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 260 seconds)
[16:55:29] <Grems> Why is `while` coupled with `do`? `do` seems superfluous to me
[16:55:54] <emanuele6> # help while | head -1
[16:55:55] <shbot> emanuele6: while: while COMMANDS; do COMMANDS; done
[16:56:09] <emanuele6> notice that it says COMMANDS, not COMMAND.
[16:56:11] <tirnanog> consider how would you end the command list.
[16:56:22] <Grems> With `done`, no?
[16:56:33] <tirnanog> no.
[16:56:37] <Grems> Why not?
[16:56:39] <tirnanog> COMMANDS. that command list.
[16:56:49] <tirnanog> if you take out do, you're going to need something else.
[16:56:59] <Blondie101010> Grems:  also to show where that part ends
[16:57:21] <tirnanog> the command list that follows while, not the command list that is executed for each iteration.
[16:57:37] <tirnanog> the parser needs to know where the first ends, not just the second.
[16:57:58] <Grems> Linguistically, `do` and `done` go together, but wouldn't the first semicolon after `while` be enough to act as a closing paren/opening curly brace?
[16:58:03] *** Joins: rtypo (~alex@user/rtypo)
[16:58:11] <tirnanog> no.
[16:58:13] <OMGOMG> < emanuele6> notice that it says COMMANDS, not COMMAND.
[16:58:18] <tirnanog> because it's "COMMANDS", not "COMMAND".
[16:58:24] <emanuele6> Grems: you can have a command list between while and do.
[16:58:38] <tirnanog> hejux: maybe something along the lines of: declare -A map=([EM_X86_64]=x86_64); read -r elf_arch _ < <(scanelf -BF %a /bin/bash); sys_arch=$(uname -m); if [[ $sys_arch == "${map[$elf_arch]}" ]]; then echo "matches"; fi
[16:58:44] <emanuele6> while cmd1; cmd2; cmd3; do :; done
[16:58:46] <tirnanog> for something generalised.
[16:58:48] <Grems> Ah, and there could be a semicolon in that command-list?
[16:58:57] <Grems> Got it. Thank y'all. :)
[16:59:08] <emanuele6> for example that is like a `do { cmd1(); cmd2(); } while (cmd3());' in C
[16:59:09] <tirnanog> "A list is a sequence of one or more pipelines separated by one of the operators ;, &, &&, or ||, and optionally terminated by one of ;, &, or <newline>."
[16:59:14] <tirnanog> so yes.
[16:59:43] <Grems> [x] Learn something today
[17:00:04] <tirnanog> of course, it's a bit too late to change it now. but if one did, you'd have to come up with an alternative.
[17:00:20] <tirnanog> there's nothing that would make it obviously better that springs to mind.
[17:00:39] <hejux> tirnanog: ass array is also a good idea, yeah, i'll put everying in a function and test a binanry and modify  a systemd service ExecStart= on condition
[17:01:48] <hejux> emanuele6: while { cmd ; cmd ; ... ; } ; do
[17:02:16] <emanuele6> what?
[17:02:51] <Blondie101010> hejux: have you used other languages before?  that syntax is not "normal"
[17:03:17] <hejux> wait, if you while multiple cmds, which exit code is in effective ?
[17:03:18] <tirnanog> it's fine, just superflous.
[17:03:37] <Blondie101010> parentheses would be more suitable if they didn't already have a better use in sh
[17:03:37] <emanuele6> hejux: the one of the last command
[17:03:41] <tirnanog> the last one. as usual. the use of while has no bearing on that.
[17:03:45] <emanuele6> s/command/pipeline/
[17:04:10] <emanuele6> well, "command" is more appropriate actually nevermind
[17:04:35] <tirnanog> # while true; false; do echo "never"; done
[17:04:35] <shbot> tirnanog: no output
[17:05:25] <emanuele6> hejux: that is why i said `while cmd1; cmd2; cmd3; do :; done' is like a `do {cmd1();cmd2();} while(cmd3())' loop in other languages
[17:05:55] <hejux> so `if cmd | cut | tr | sed | awk | grep ; then echo yes ; fi ` , will output 'yes' as long as grep returns 0?
[17:06:09] <Blondie101010> yes
[17:06:50] <emanuele6> you always run cmd1 and cmd2 first, then you run cmd3 and check its exit status, if it is successful you run a no-op `:' and then run cmd1, cmd2, cmd3 again until cmd3 fails
[17:07:06] <hejux> unless we have `set pipfail` ?
[17:07:08] *** Joins: tex (~super@user/dix)
[17:07:14] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[17:07:21] <hejux> pipefail
[17:08:21] <tirnanog> pipefail would influence the behaviour, yes.
[17:09:27] <hejux> this is a good lession, today i did  if dig ... | tr -d \" ; then ... and dig failed but then got run
[17:09:31] <Blondie101010> I strongly suggest against changing typical options like that
[17:10:08] *** Joins: polve (~polve@twcitalia/polve)
[17:10:16] <hejux> so later moved that `tr -d \"` out of `if dig`
[17:10:22] <hejux> and worked as expected
[17:10:56] <Blondie101010> I avoid \ whenever possible
[17:11:04] <emanuele6> why?
[17:11:30] <Blondie101010> that's my opinion but I find it's harder to maintain/ easier to mess up
[17:11:36] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 245 seconds)
[17:11:39] <Blondie101010> '"'
[17:11:50] <emanuele6> &&|| is hard to maintain and easy to mess up :)
[17:11:55] <hejux> # echo hello_word | tr -d \" ; echo $?
[17:11:56] <shbot> hejux: hello_word
[17:11:56] <shbot> hejux: 0
[17:11:57] <Blondie101010> :)
[17:12:07] <hejux> see, that tr returns 0 all the time
[17:12:09] <hejux> fuck sake
[17:12:14] <tirnanog> why are the double quotes being removed anyway, out of curiosity?
[17:12:45] <hejux> # echo hello_word | cut -d \" -f1 ; echo $?
[17:12:46] <shbot> hejux: hello_word
[17:12:46] <shbot> hejux:
[17:12:46] <shbot> hejux: 0
[17:12:55] <hejux> lol cut, also returns 0
[17:13:05] <Blondie101010> hejux:  you can install bash on your computer
[17:13:13] <emanuele6> hejux: why should it not?
[17:13:42] <hejux> if tr has found nothing to tr , it should return non 0
[17:13:55] <Blondie101010> no, that's not a failure
[17:13:56] <tirnanog> the designers didn't agree.
[17:13:56] <emanuele6> no, that is not what it should do.
[17:14:19] <Blondie101010> a failure would cause it not to do what it is intended to
[17:14:30] <hejux> well, i will be careful when using `if cmd | cut | tr  ; then `, this is not right
[17:14:34] <Blondie101010> in this case it is intended to do nothing with that string
[17:14:38] <tirnanog> no, it's not. that's why I asked why it was being done.
[17:14:41] <tirnanog> for dig, it seems odd.
[17:14:42] <emanuele6> why would you ever use that?
[17:15:03] <Blondie101010> hejux: indeed, that's wrong
[17:15:05] <emanuele6> unless you want to check write errors for tr, it makes no sense
[17:15:32] <tirnanog> besides. you can check PIPESTATUS[0] in bash.
[17:15:38] <Blondie101010> you already know how to use variables, so use them intelligently
[17:15:48] *** Joins: seninha (~seninha@user/seninha)
[17:16:42] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[17:16:54] <Blondie101010> note that variables are not costy
[17:17:03] <hejux> Blondie101010: yes, so i changed it to  `if VAR=$(dig ....) ; then NEWVAR=$(tr -d \" <<<$VAR) ; fi
[17:17:32] <emanuele6> why not just NEWVAR=${VAR//\"} ?
[17:17:40] <tirnanog> newvar=${var//\"}
[17:17:42] <tirnanog> oops.
[17:17:51] <emanuele6> well, yes also !varcaps
[17:17:56] <emanuele6> !varcaps
[17:17:56] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[17:18:42] <tirnanog> I didn't notice that I was beaten to it but yeah.
[17:18:54] <hejux> emanuele6: you mean ${VAR/\"/}?
[17:19:09] <emanuele6> no.
[17:19:37] <hejux> # var='"1000"' ; echo ${var//\"}
[17:19:38] <shbot> hejux: 1000
[17:19:46] <hejux> # var='"1000"' ; echo ${var/\"/}
[17:19:47] <shbot> hejux: 1000"
[17:19:54] <hejux> oh.. right,
[17:19:54] <tirnanog> (we know)
[17:20:24] <emanuele6> the final / can be omited
[17:20:38] <hejux> / removed everyting
[17:20:49] <hejux> // removes everything
[17:21:11] <emanuele6> and a second / before the pattern after the first / means to apply the replacement on all matches
[17:21:23] <hejux> yeah, got that now
[17:21:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80::7) (Quit: Leaving)
[17:22:20] *** Joins: magla (~gelignite@55d49b41.access.ecotel.net)
[17:22:55] <hejux> bash is amazing
[17:24:37] <hejux> tirnanog: why are the double quotes being removed anyway, out of curiosity ? // try this dig +short @ns1.google.com -t txt o-o.myaddr.l.google.com
[17:25:29] <tirnanog> I see.
[17:26:00] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[17:28:27] *** Joins: keypusher (keypusher@user/keypusher)
[17:29:11] <Blondie101010> how about: echo `eval echo $(dig +short @ns1.google.com -t txt o-o.myaddr.l.google.com)`  # :)
[17:29:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Remote host closed the connection)
[17:30:10] *** Quits: totenkoph (~scythe@user/totenkoph) (Quit: totenkoph)
[17:30:13] <emanuele6> requires a subshell and a temporary environment
[17:30:18] <tirnanog> what could possibly go wrong.
[17:30:47] <Blondie101010> but yeah, was not suggesting that
[17:30:56] <emanuele6> also you can't check the exit status of `dig' with that
[17:31:18] <hejux> # var='1000' ; echo ${var//\"}
[17:31:19] <shbot> hejux: 1000
[17:31:30] <Blondie101010> you did that earlier, scroll up
[17:33:21] <Blondie101010> # if address=$(dig +short @ns1.google.com -t txt o-o.myaddr.l.google.com) && grep -q "yourRegex" $address; then echo "do something good with $address now"; else echo "error"; fi
[17:33:22] <shbot> Blondie101010: bash: dig: command not found
[17:33:22] <shbot> Blondie101010: error
[17:33:47] <hejux> no grep. sorry.
[17:34:05] <emanuele6> Blondie101010: that is not how grep works
[17:34:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:34:17] <hejux> if dig_data=$(dig +short +nocmd +tries=2 +timeout=3 o-o.myaddr.l.google.com txt @ns1.google.com 2>/dev/null) ; then ipaddr="${dig_data//\"}" ; fi
[17:34:19] <Blondie101010> emanuele6:  what????
[17:34:22] <hejux> that is my code noe
[17:34:25] <hejux> now
[17:34:26] <Blondie101010> right
[17:34:29] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[17:34:49] <emanuele6> grep -q "yourRegex" $address
[17:35:20] <emanuele6> address will be wordsplitted and pathname expanded and the resulting words will be used as filenames or as injected options by grep
[17:35:34] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[17:35:35] <hejux> emanuele6: my above code works pretty well.
[17:35:40] <Blondie101010> # if address=$(echo '"66.130.27.8"') && echo "$address" |grep -q "yourRegex" ; then echo "do something good with $address now"; else echo "error"; fi
[17:35:41] <shbot> Blondie101010: error
[17:35:53] <Blondie101010> I should go to bed :)
[17:36:48] *** Joins: node1 (~node1@user/node1)
[17:36:59] *** Quits: node1 (~node1@user/node1) (Client Quit)
[17:37:04] *** Joins: node161 (~node1@user/node1)
[17:37:16] <emanuele6> going to bed at 3pm doesn't sound like a good idea :)
[17:37:17] <Blondie101010> oh but it's good
[17:37:23] <Blondie101010> 9 AM here :)
[17:38:39] <hejux> somewhere near by Co.
[17:38:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:38:49] <hejux> colorado
[17:38:54] <Blondie101010> Quebec
[17:39:05] <hejux> opps
[17:39:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:39:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[17:39:46] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:40:39] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[17:40:50] <Blondie101010> hejux:  you should copy that last line I did and only replace the output fake with the dig command 2>/dev/null
[17:41:33] <Blondie101010> hmmm with tr
[17:42:13] <hejux> mine is shorter and works pretty well.
[17:42:27] <hejux> what does your code do?
[17:42:44] <Blondie101010> # if address=$(echo '"66.130.27.8"' 2>dev/null) && echo "${address//\"}" |grep -q "yourRegex" ; then echo "do something good with $address now"; else echo "error"; fi
[17:42:45] <shbot> Blondie101010: bash: dev/null: No such file or directory
[17:42:45] <shbot> Blondie101010: error
[17:42:57] <Blondie101010> I'll stop but you get the jist
[17:43:03] *** Joins: gnoo (gnoo@user/gnoo)
[17:43:11] <Blondie101010> it does what you wanted
[17:43:28] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Ping timeout: 260 seconds)
[17:43:37] <hejux> #if dig_data=$(echo '"1.2.3.4"') ; then ipaddr="${dig_data//\"}" ; echo $ipaddr ; fi
[17:43:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:43:51] <emanuele6> really no point in using grep-q there
[17:44:00] <hejux> # if dig_data=$(echo '"1.2.3.4"') ; then ipaddr="${dig_data//\"}" ; echo $ipaddr ; fi
[17:44:01] <shbot> hejux: 1.2.3.4
[17:44:07] <hejux> works pretty well
[17:44:08] <Blondie101010> you don't have your grep
[17:44:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:44:15] <hejux> # if dig_data=$(echo '"garbage"') ; then ipaddr="${dig_data//\"}" ; echo $ipaddr ; fi
[17:44:16] <shbot> hejux: garbage
[17:44:25] *** Joins: noord (~noord@user/noord)
[17:44:27] <Blondie101010> and if you keep it split, it will require a second condition
[17:44:43] <hejux> # if dig_data=$(false) ; then ipaddr="${dig_data//\"}" ; echo $ipaddr ; fi
[17:44:44] <shbot> hejux: no output
[17:45:01] <hejux> :)
[17:45:41] <Blondie101010> hejux:  can you now tell me what that script is meant to check?  is it to monitor your DNS servers?
[17:45:56] <hejux> update DDNS
[17:46:00] *** Joins: gsadgasdgsadgdas (~gsadgasdg@cm-93-156-40-214.telecable.es)
[17:46:18] <Blondie101010> ughhh why do you need to do that
[17:46:19] *** Quits: gsadgasdgsadgdas (~gsadgasdg@cm-93-156-40-214.telecable.es) (Client Quit)
[17:46:28] <hejux> i'll then curl -d xxx -d xxx -d $ipaddr $url
[17:46:32] <Blondie101010> just call your dyndns service at fixed interval
[17:46:36] <Blondie101010> like EVERYONE else
[17:46:46] *** Joins: tobybl (~tobybl@213.31.134.21)
[17:46:47] <hejux> i write my own ddns daemon
[17:46:49] *** Joins: gsadgasdgsadgdas (~gsadgasdg@cm-93-156-40-214.telecable.es)
[17:46:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[17:46:58] <Blondie101010> why?  to do it poorly?
[17:47:06] <hejux> why do i need dyndns if i can use bash and cron?
[17:47:25] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[17:47:28] <Blondie101010> not related
[17:47:29] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[17:47:33] *** Quits: gsadgasdgsadgdas (~gsadgasdg@cm-93-156-40-214.telecable.es) (Client Quit)
[17:47:51] <Blondie101010> dyndns is a way to dynamically update/ensure you have a valid A record
[17:48:07] <Blondie101010> all you have to do is do the HTTP request
[17:48:18] <hejux> well, my domain name is registered on CloudFlaire
[17:48:20] <hejux> well, my domain name is registered on CloudFlair
[17:48:28] <Blondie101010> doesn't matter
[17:48:30] <hejux> Flare
[17:48:53] *** Joins: GoodCrossing (~GoodCross@cm-93-156-40-214.telecable.es)
[17:49:00] *** Parts: GoodCrossing (~GoodCross@cm-93-156-40-214.telecable.es) ()
[17:49:05] <Blondie101010> why avoid the HTTP request you should simply do?  do they charge per update
[17:49:14] <hejux> what do you mean doesn't matter?
[17:49:38] <hejux> can dyndns update CF domain A record?
[17:49:41] <Blondie101010> all that matters is that you have dyndns, so you call the service periodically and that's it!!!
[17:49:57] <Blondie101010> I thought you said you did
[17:50:07] <Blondie101010> is everything only in your head
[17:50:58] <Blondie101010> but yes they support it: https://www.cloudflare.com/en-ca/learning/dns/glossary/dynamic-dns/
[17:51:34] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[17:57:26] *** Quits: ted-ious (tedious@bitcoinshell.mooo.com) (Ping timeout: 245 seconds)
[17:57:39] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[17:58:25] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:58:39] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:58:53] *** Joins: yeirr (~yeirr@user/yeirr)
[17:59:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:01:59] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:03:39] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[18:03:41] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[18:04:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:11:21] *** Quits: roadie (~user@2a02:8108:ec0:1427:3495:abf3:213e:1ef0) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[18:13:26] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[18:14:32] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[18:15:23] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 264 seconds)
[18:18:53] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[18:19:32] *** Quits: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[18:26:50] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:28:16] *** Joins: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de)
[18:30:21] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[18:31:02] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:34:35] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:35:34] *** Joins: superboot (~agentgasm@user/superboot)
[18:35:58] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 260 seconds)
[18:38:05] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[18:40:10] *** Joins: ntwk (~ntwk@user/ntwk)
[18:43:53] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[18:47:20] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:47:48] *** Joins: anddam (~anddam@user/anddam)
[18:49:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[18:49:30] <anddam> aaand solved
[18:49:42] <anddam> by reading what I already asked on this very chan, so thanks folks
[18:51:48] <joshbaptiste> how can I always parse subdir three?  one/two/three/four...
[18:55:25] <emanuele6> joshbaptiste: assuming the input will always have at least three parts?
[18:56:17] <emanuele6> # path=one/two/three/four/five/six x=${path#*/*/} x=${x%%/*}; declare -p path x
[18:56:18] <shbot> emanuele6: declare -- path="one/two/three/four/five/six"
[18:56:18] <shbot> emanuele6: declare -- x="three"
[18:56:34] <emanuele6> # path=one/two x=${path#*/*/} x=${x%%/*}; declare -p path x
[18:56:35] <shbot> emanuele6: declare -- path="one/two"
[18:56:35] <shbot> emanuele6: declare -- x="one"
[18:56:39] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[18:57:16] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:57:43] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[18:58:20] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[18:59:22] <joshbaptiste> emanuele6: input can only grow longer past "three" ...
[18:59:27] <joshbaptiste> emanuele6: ah nice
[18:59:30] <emanuele6> if you can't make that assumption, you could use BASH_REMATCH:  if [[ ! $ptah
[18:59:33] <emanuele6> oops
[19:00:15] *** Joins: rgrinberg (~textual@201.198.177.243)
[19:00:47] <emanuele6> if [[ ! $path =~ ^[^/]+/[^/+]/([^/]+).*$ ]]; then die 'invalid path; must contain three parts'; fi; x=${BASH_REMATCH[1]}
[19:00:53] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:11] <emanuele6> well, .*$ is redundant
[19:01:24] <joshbaptiste> emanuele6: gotcha
[19:02:46] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[19:04:06] <emanuele6> also ^[^/]+ is redundant i think
[19:04:13] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[19:04:30] <emanuele6> i believe you can get away with just using /[^/]+/([^/]+)
[19:04:42] <emanuele6> but ^[^/] helps with readability
[19:05:35] <emanuele6> but if you can assume path will always contain three /,  x=${path#*/*/} x=${x%%/*}  is the way to go
[19:07:20] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[19:07:37] <joshbaptiste> ah that works ... great thx
[19:08:59] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:10:27] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[19:12:24] *** phogg` is now known as phogg
[19:12:36] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (Changing host)
[19:12:36] *** Joins: phogg (~phogg@user/phogg)
[19:13:42] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:14:25] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 250 seconds)
[19:16:37] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[19:27:08] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[19:27:44] *** Quits: node161 (~node1@user/node1) (Ping timeout: 256 seconds)
[19:29:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:29:20] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[19:31:03] *** Quits: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com) (Remote host closed the connection)
[19:35:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:36:55] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[19:37:48] *** Joins: gschanuel2 (~gschanuel@user/gschanuel)
[19:37:52] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[19:39:04] *** Joins: seninha (~seninha@user/seninha)
[19:39:05] *** Joins: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com)
[19:42:30] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:48:11] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[19:50:08] *** Joins: killown (~killown@user/killown)
[19:50:27] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Remote host closed the connection)
[19:52:26] *** Quits: kill (~killown@user/killown) (Ping timeout: 245 seconds)
[19:53:31] *** Joins: sublim20 (~sublim20@user/sublim20)
[19:55:40] *** Quits: rya (~ry@47.23.188.138) (Changing host)
[19:55:40] *** Joins: rya (~ry@user/rya)
[19:56:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 245 seconds)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:25] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:12:17] *** Joins: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net)
[20:14:54] *** Quits: sinaowolabi (~SinaOwola@105.112.180.201) (Read error: Connection reset by peer)
[20:15:10] *** Joins: tobybl (~tobybl@213.31.134.21)
[20:15:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[20:17:41] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[20:18:49] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:21:01] <sublim20> quick question, is it possible to both prepend and append to an array
[20:22:06] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[20:22:20] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[20:22:24] <tirnanog> in general, to prepend, you would need to redefine the array. arr=(foo "${arr[@]}" baz).
[20:23:01] <tirnanog> otherwise, it would require vacant indexes to exist.
[20:24:47] <tirnanog> on the other hand, to directly append is a simple matter of arr+=(...)
[20:25:36] <sublim20> hmmm
[20:25:38] <sublim20> thanks
[20:26:40] <tirnanog> if you don't like that, you have the option of maintaining a sparse array and keeping track of where things are. but the index can never be negative in bash.
[20:34:25] *** Joins: roadie (~user@2a02:8108:ec0:1427:3495:abf3:213e:1ef0)
[20:37:36] *** Joins: angkat (~angkat@2a02:587:1203:3ac:127b:44ff:fe42:43b1)
[20:38:29] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Ping timeout: 250 seconds)
[20:38:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:38:56] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:40:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:41:20] *** Joins: Milos (~Milos@user/milos)
[20:41:57] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[20:42:10] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.27) (Read error: Connection reset by peer)
[20:44:04] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2.1)
[20:45:00] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[20:46:29] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[20:48:32] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:48:41] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 245 seconds)
[20:49:41] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[20:50:31] *** Joins: polve (~polve@twcitalia/polve)
[20:50:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:51:16] *** Joins: xx (~xx@user/xx)
[20:51:33] *** Joins: H3dn1ng (~H3dn1ng@2-248-149-85-no172.tbcn.telia.com)
[20:52:26] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:53:14] *** fjmorazan_ is now known as fjmorazan
[20:54:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:57:23] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:59:42] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:04:29] *** Quits: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2) (Ping timeout: 250 seconds)
[21:07:19] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:27] *** Joins: han-solo (~han-solo@user/han-solo)
[21:12:31] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[21:13:44] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[21:14:02] *** Joins: arinov (~arinov@77.67.129.200)
[21:18:07] *** Quits: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2) (Ping timeout: 260 seconds)
[21:22:11] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:23:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:94bc:db7b:d520:1a5)
[21:23:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:94bc:db7b:d520:1a5) (Changing host)
[21:23:17] *** Joins: skapata (~Skapata@user/skapata)
[21:23:22] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:27:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:27:53] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[21:30:28] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[21:31:24] *** Quits: roadie (~user@2a02:8108:ec0:1427:3495:abf3:213e:1ef0) (Ping timeout: 268 seconds)
[21:36:23] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:39:59] *** Quits: Thominus (~Thominus@user/thominus) (Quit: Thominus)
[21:41:58] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[21:43:33] *** Quits: dreinull (~dreinull@static.50.114.119.168.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[21:46:14] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[21:47:01] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 245 seconds)
[21:47:03] *** Joins: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[21:50:27] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[21:50:34] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[21:53:01] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[21:53:32] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[21:54:37] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[21:55:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:58:06] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[21:59:42] *** Quits: paws_ (uid89121@id-89121.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:03:22] <phy1729> !faq tail grep
[22:03:22] <greybot> phy1729: No matches found at https://mywiki.wooledge.org/BashFAQ
[22:03:40] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[22:04:28] <phy1729> (faq 9)
[22:08:28] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[22:11:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Quit: Leaving)
[22:12:19] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[22:13:32] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[22:14:33] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:18:19] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:18:59] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:20:39] *** Joins: darkxploit (~jay@c-71-234-202-146.hsd1.ct.comcast.net)
[22:23:49] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe) (Read error: Connection reset by peer)
[22:27:00] *** Joins: roadie (~user@2a02:8108:ec0:1427:c19b:bac9:4677:80bb)
[22:27:40] *** Quits: furrymcgee (~devuan@cgn-89-1-209-86.nc.de) (Quit: leaving)
[22:28:09] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe)
[22:30:32] *** Joins: ntwk (~ntwk@user/ntwk)
[22:30:45] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[22:31:37] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:37:32] *** Quits: roadie (~user@2a02:8108:ec0:1427:c19b:bac9:4677:80bb) (Ping timeout: 240 seconds)
[22:38:30] *** Joins: roadie (~user@2a02:8108:ec0:1427:c19b:bac9:4677:80bb)
[22:38:30] *** Quits: arinov (~arinov@77.67.129.200) (Quit: WeeChat 3.3)
[22:40:28] *** Quits: darkxploit (~jay@c-71-234-202-146.hsd1.ct.comcast.net) (Ping timeout: 268 seconds)
[22:42:35] *** Quits: roadie (~user@2a02:8108:ec0:1427:c19b:bac9:4677:80bb) (Client Quit)
[22:44:11] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Ping timeout: 268 seconds)
[22:47:05] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:47:10] *** Joins: extern (~archer@213.137.65.201)
[22:51:04] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[22:56:19] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[22:57:50] *** Joins: Hackerpcs (~user@user/hackerpcs)
[23:00:16] *** Quits: torresjrjr (~torresjrj@user/torresjrjr) (Remote host closed the connection)
[23:01:05] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[23:01:25] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[23:07:23] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[23:09:48] *** Joins: gabriele (~gabriele@user/gabriele)
[23:09:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[23:19:16] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:20:44] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:21:45] *** Joins: Everything (~Everythin@37.115.210.35)
[23:24:32] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:25:14] *** Joins: lavaball (felix@31.204.155.215)
[23:26:13] *** Joins: dark0 (~dark0@pop.92-184-100-238.mobile.abo.orange.fr)
[23:26:20] <dark0> A
[23:26:20] <dark0> a
[23:26:21] <dark0> a
[23:26:21] <dark0> a
[23:26:22] <dark0> a
[23:26:22] <dark0> a
[23:26:23] <dark0> a
[23:26:23] <dark0> dmd
[23:26:24] <dark0> d
[23:26:24] <dark0> d
[23:26:25] <dark0> d
[23:26:25] <dark0> a
[23:26:26] <dark0> a
[23:26:26] <dark0> aa
[23:26:27] <dark0> a
[23:26:28] <dark0> a
[23:26:28] <dark0> a
[23:26:29] <dark0> a
[23:26:29] <dark0> a
[23:26:30] <dark0> a
[23:26:43] <dark0> !ops
[23:26:43] <greybot> lhunath TheBonsai heiner koala_man greycat twkm geirha \amethyst dualbus Riviera osse izabera pragma- falconindy yitz
[23:26:57] <dark0> Idiots
[23:26:59] <dark0> a
[23:27:00] <dark0> a
[23:27:00] <dark0> aa
[23:27:01] <dark0> a
[23:27:01] <dark0> a
[23:27:02] <dark0> a
[23:27:03] <dark0> w
[23:27:03] <dark0> a
[23:27:04] <dark0> a
[23:27:04] <xx> /kick dark0
[23:27:04] <dark0> a
[23:27:05] <dark0> a
[23:27:05] <dark0> a
[23:27:06] <dark0> A
[23:27:07] <dark0> a
[23:27:09] *** Parts: dark0 (~dark0@pop.92-184-100-238.mobile.abo.orange.fr) ()
[23:27:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:27:43] *** Joins: dark0 (~dark0@pop.92-184-100-238.mobile.abo.orange.fr)
[23:27:46] <dark0> Xx
[23:27:51] <dark0> A
[23:27:51] <dark0> a
[23:27:52] <dark0> a
[23:27:54] <dark0> a
[23:27:55] <dark0> a
[23:27:55] <dark0> a
[23:27:56] <dark0> a
[23:27:56] <dark0> aa
[23:27:57] <dark0> a
[23:27:57] <dark0> a
[23:27:58] <dark0> a
[23:27:59] <dark0> a
[23:27:59] <dark0> a
[23:28:00] <dark0> a
[23:28:01] <dark0> Idiots
[23:28:03] <dark0> !ops
[23:28:03] <greybot> lhunath TheBonsai heiner koala_man greycat twkm geirha \amethyst dualbus Riviera osse izabera pragma- falconindy yitz
[23:28:06] <dark0> idiots
[23:28:06] <dark0> a
[23:28:07] <dark0> a
[23:28:07] <dark0> a
[23:28:08] <dark0> a
[23:28:08] <dark0> a
[23:28:09] <dark0> a
[23:28:10] <dark0> a
[23:28:10] *** Parts: dark0 (~dark0@pop.92-184-100-238.mobile.abo.orange.fr) ()
[23:28:48] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 260 seconds)
[23:30:12] *** Joins: sinaowolabi (~SinaOwola@41.58.60.82)
[23:30:48] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:32:27] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[23:33:04] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:33:48] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (Quit: leaving)
[23:33:54] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[23:36:01] *** Joins: john1__ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:36:11] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 245 seconds)
[23:36:12] *** Quits: john1__ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:36:35] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 268 seconds)
[23:36:57] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:37:19] *** Parts: angkat (~angkat@2a02:587:1203:3ac:127b:44ff:fe42:43b1) (exit)
[23:38:06] <yitz> ...
[23:38:16] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[23:38:44] *** ChanServ sets mode: +o yitz
[23:39:09] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:39:26] *** yitz sets mode: +b-o *!*dark0@* yitz
[23:39:58] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[23:40:51] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:40:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[23:41:21] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:41:36] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[23:43:26] *** Joins: goldfish (~goldfish@user/goldfish)
[23:45:10] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[23:50:40] *** Joins: rtgg (~rtgg@p5791f0bc.dip0.t-ipconnect.de)
[23:51:13] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[23:51:47] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[23:52:24] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[23:55:37] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[23:58:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
