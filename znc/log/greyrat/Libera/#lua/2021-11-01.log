[00:02:34] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[00:06:00] *** Joins: rgrinberg (~textual@190.113.111.74)
[00:13:05] *** Joins: zlg (~zlg@user/zlg)
[00:38:47] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Ping timeout: 264 seconds)
[00:45:34] *** Quits: angryguy (~Elw3@dynamic-002-247-242-033.2.247.pool.telefonica.de) (Quit: Leaving)
[01:09:18] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:49:50] <ano> is there a lib/module with stat(2)/major(3) implementation? can get st_dev with gio.FileInfo but major(3) (to get major devid from devid) behaviour based on /usr/include/bits/sysmacros.h bitwise operations kinda hard to understand/implement also not sure about portability
[02:01:40] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ecf7:1521:506c:53cc)
[02:15:44] *** Quits: netlynx (~jan@94-226-69-15.access.telenet.be) (Quit: Leaving)
[02:33:16] *** Quits: pizdets (~pizdets@183.182.115.247) (Ping timeout: 250 seconds)
[02:34:03] *** Joins: pizdets (~pizdets@183.182.111.19)
[02:37:00] *** Joins: rgrinberg (~textual@190.113.111.74)
[02:40:21] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[02:44:22] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[02:44:35] <sudoforge> what is the recommended method for checking the existence of a command line program?
[02:46:18] <sudoforge> e.g. in shell scripting i'd do a conditional check with something like `command -v foo >/dev/null 2>&1`
[03:00:10] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[04:03:23] *** Quits: fcr (~fran@r167-60-30-163.dialup.adsl.anteldata.net.uy) (Ping timeout: 264 seconds)
[04:08:00] *** Joins: fcr (~fran@r167-60-5-112.dialup.adsl.anteldata.net.uy)
[04:31:10] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 260 seconds)
[04:33:44] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:27:06] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[05:32:43] *** Quits: busybusybusy (~BUSY@user/busy) (Read error: Connection reset by peer)
[05:35:54] *** Joins: rgrinberg (~textual@190.113.111.74)
[05:38:11] *** Quits: ArRay (~ArRay_@user/array/x-1947090) (Remote host closed the connection)
[05:38:47] *** Joins: ArRay (~ArRay_@user/array/x-1947090)
[05:45:20] *** Parts: strast1 (~Steve@c-64-246-115-105.amplex.net) ()
[05:54:02] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[06:11:15] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:31] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[06:12:03] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[06:12:34] *** Joins: kiril (~kiril@85.91.153.163)
[06:12:50] *** Joins: jwoe324 (~jwoe324@2001:470:69fc:105::1:1a67)
[06:15:23] *** Quits: ratchetfreak_ (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be) (Ping timeout: 264 seconds)
[06:26:26] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 260 seconds)
[06:28:45] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Read error: Connection reset by peer)
[06:34:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:56:48] *** Quits: tertu (~tertu@user/tertu) (Quit: so long...)
[06:57:06] *** Joins: tertu (~tertu@user/tertu)
[07:11:04] *** Quits: w0ng (~w0ng@185.218.127.39) (Quit: w0ng)
[07:33:57] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32) (Quit: Leaving)
[07:39:05] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 260 seconds)
[07:39:24] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[07:41:56] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[07:43:49] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[07:44:14] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[07:47:39] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[08:24:26] *** Joins: Overkill (~overkill9@69-165-200-34.cable.teksavvy.com)
[08:59:49] <RhodiumToad> ano: what do you want the major number for? it's entirely non-portable
[09:00:58] <RhodiumToad> sudoforge: the recommended method is not to check; why do you want to?
[09:02:24] <sudoforge> RhodiumToad: to conditionally do something...
[09:02:31] <sudoforge> like what every conditional is for?
[09:03:16] <RhodiumToad> yes, but why? what happens if the program appears or disappears just after you checked it?
[09:04:21] <sudoforge> i'm wanting to conditionally set values for certain options in my neovim configuration if a program exists and startuptime.
[09:04:36] <sudoforge> at* not and
[09:06:37] *** Joins: uzi_ (~uzi@161.9.200.42)
[09:06:51] <RhodiumToad> hm, then I don't know any better way than either using os.execute to do that test, or doing a $PATH search yourself using luaposix or luafilesystem functions
[09:11:47] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:16:38] *** Joins: w0ng (~w0ng@185.218.127.39)
[09:21:00] *** ghoulguy is now known as glguy
[09:24:12] *** Quits: jan6 (jan6@tilde.team/user/jan6) (*.net *.split)
[09:24:12] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:24:12] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[09:24:12] *** Quits: andreyorst (~andreyors@2.92.124.83) (*.net *.split)
[09:24:12] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (*.net *.split)
[09:24:27] *** Joins: Soni (~quassel@autistic.space)
[09:24:43] *** Joins: jan6 (jan6@tilde.team)
[09:24:49] *** Joins: andreyorst (~andreyors@2.92.124.83)
[09:25:57] *** Joins: hexology (~hexology@user/hexology)
[09:26:34] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[09:32:50] *** Quits: kakolainen[m] (~kakolaine@2001:470:69fc:105::34f9) (*.net *.split)
[09:32:50] *** Quits: Armen (~Armen@armen138.com) (*.net *.split)
[09:32:50] *** Quits: g5pw (~g5pw@mittelab/sudo/g5pw) (*.net *.split)
[09:32:50] *** Quits: RhodiumToad (~andrew@lungold.riddles.org.uk) (*.net *.split)
[09:32:50] *** Quits: desolator (~desolator@140.238.242.25) (*.net *.split)
[09:33:33] *** Joins: desolator (~desolator@140.238.242.25)
[09:33:36] *** Joins: RhodiumToad (~andrew@lungold.riddles.org.uk)
[09:33:42] *** Joins: Armen (~Armen@armen138.com)
[09:33:58] *** Quits: RhodiumToad (~andrew@lungold.riddles.org.uk) (Client Quit)
[09:34:05] *** Joins: g5pw (~g5pw@mittelab/sudo/g5pw)
[09:34:40] *** Joins: RhodiumToad (~andrew@lungold.riddles.org.uk)
[09:35:34] <RhodiumToad> test
[09:39:26] *** Joins: kakolainen[m] (~kakolaine@2001:470:69fc:105::34f9)
[09:52:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:22:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:42:11] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 245 seconds)
[10:46:43] *** Joins: uzi__ (~uzi@161.9.200.42)
[10:46:55] *** Quits: uzi_ (~uzi@161.9.200.42) (Remote host closed the connection)
[10:50:30] *** Quits: uzi__ (~uzi@161.9.200.42) (Read error: Connection reset by peer)
[10:50:41] *** Joins: uzi__ (~uzi@161.9.200.42)
[11:09:30] *** Quits: uzi__ (~uzi@161.9.200.42) (Ping timeout: 268 seconds)
[11:10:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:20:06] *** Joins: magla (~gelignite@55d4d950.access.ecotel.net)
[11:28:29] *** Joins: avih (~quassel@23.94.231.119)
[11:32:03] *** Quits: avih (~quassel@23.94.231.119) (Client Quit)
[11:35:33] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:59:48] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[12:08:34] *** Joins: uzi_ (~uzi@161.9.200.42)
[12:17:21] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Remote host closed the connection)
[12:29:36] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:30:05] *** Joins: ano (~ano@user/ano)
[12:53:02] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:c9c9:9450:c028:8dd0) (Quit: ZNC 1.8.2 - https://znc.in)
[12:53:14] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:1b5c:1bd6:918c:5122)
[13:32:41] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[13:32:48] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[13:35:24] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-140.2.247.pool.telefonica.de)
[13:38:06] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 260 seconds)
[13:47:23] *** Joins: cursey (~cursey@user/cursey)
[13:51:43] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[13:55:39] *** Joins: MattJ (~MattJ@95.217.50.17)
[13:58:02] *** Joins: avih (~quassel@23.94.231.119)
[14:01:01] *** Joins: avih_ (~quassel@23.94.231.119)
[14:04:35] *** Quits: avih_ (~quassel@23.94.231.119) (Client Quit)
[14:04:38] *** Quits: avih (~quassel@23.94.231.119) (Ping timeout: 268 seconds)
[14:07:35] *** Quits: yalb (xsbot@user/mniip/bot/yalb) (Ping timeout: 264 seconds)
[14:13:30] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 260 seconds)
[14:14:49] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 633 seconds)
[14:16:22] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:17:57] *** Joins: avih (~quassel@23.94.231.119)
[14:21:41] *** Joins: yalb (xsbot@user/mniip/bot/yalb)
[14:21:53] *** Joins: mniip (mniip@libera/staff/mniip)
[14:22:27] *** Joins: avih_ (~quassel@23.94.231.119)
[14:26:01] *** Quits: avih_ (~quassel@23.94.231.119) (Client Quit)
[14:26:13] *** Quits: avih (~quassel@23.94.231.119) (Ping timeout: 268 seconds)
[14:37:55] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:40:13] *** Joins: kydd (~kydd@212.237.178.212)
[14:43:02] <kydd> Hi! I want to replace a word in a string, but only sometimes with a eg 50% probability. How would I do this in Lua?
[14:43:54] <rjek> kydd: Look at math.random()
[14:47:00] <kydd> I have considered that in combination with `string.gsub("a", s, math.random())`, but that will always take the first occurences :S
[14:48:15] <rjek> You can pass a function to string.gsub which will be called with the match and use its return value as a substituion.  Pass a function that returns the replacement 50% of the time and returns the original the other 50%
[14:48:52] <rjek> Remember that you'll want to seed the random number generator otherwise it will return the same stream of numbers every time
[14:50:19] <MattJ> string.gsub("foo bar", "%a+", function (word) if math.random()<=0.5 then return "cat"; end return word; end)
[14:50:50] <kydd> rjek: Aha! I did not know gsub could take a function in the replacement. Thats clever and useful!
[14:51:25] <kydd> MattJ: That looks exactly like something I need. Thanks
[14:55:17] <kydd> THis approach works wonders! THanks rjek, MattJ!
[14:56:05] <rjek> np!
[14:58:07] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[15:00:37] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-140.2.247.pool.telefonica.de) (Remote host closed the connection)
[15:02:49] *** Joins: ratchetfreak_ (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be)
[15:09:48] *** Quits: jan6 (jan6@tilde.team) (Quit: WeeChat 3.3)
[15:09:57] *** Joins: jan6 (jan6@tilde.team/user/jan6)
[15:17:05] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi)
[15:22:40] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:35:20] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[15:42:02] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:05:47] *** Quits: fcr (~fran@r167-60-5-112.dialup.adsl.anteldata.net.uy) (Ping timeout: 264 seconds)
[16:09:12] <RhodiumToad> should technically be < 0.5
[16:11:12] *** Joins: fcr (~fran@r167-56-60-86.dialup.adsl.anteldata.net.uy)
[16:15:57] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[16:31:55] *** Quits: kydd (~kydd@212.237.178.212) (Quit: Lost terminal)
[16:33:52] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[16:35:00] *** Joins: hs0ucy_ (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[16:43:38] *** Quits: fjmorazan_ (~quassel@user/fjmorazan) (Quit: fjmorazan_)
[16:44:13] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[16:49:47] *** Quits: hs0ucy_ (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Quit: leaving)
[16:50:25] *** Joins: reset (~reset@user/reset)
[16:53:21] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[16:53:38] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[17:03:41] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:04:39] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:12:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:28:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[17:31:59] *** Joins: ano (~ano@user/ano)
[17:48:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-541a-d54d-99fb-72fd.res6.spectrum.com)
[18:07:49] *** Joins: mikess (~sam@user/mikess)
[18:17:47] *** Joins: rgrinberg (~textual@190.113.111.74)
[18:24:10] *** Joins: netlynx (~jan@94-226-69-15.access.telenet.be)
[18:25:34] *** Quits: Rena (~rena@dhcp-108-168-18-202.cable.user.start.ca) (Ping timeout: 260 seconds)
[18:26:18] *** Joins: Rena (~rena@dhcp-108-168-18-202.cable.user.start.ca)
[19:08:56] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[19:13:52] *** Quits: mikess (~sam@user/mikess) (Quit: leaving)
[19:18:25] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:35:10] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 268 seconds)
[19:38:36] *** Joins: Elw3 (~Elw3@x59cc997c.dyn.telefonica.de)
[19:57:22] *** Joins: angryguy (~Elw3@x59cc9b6e.dyn.telefonica.de)
[19:57:22] *** Quits: Elw3 (~Elw3@x59cc997c.dyn.telefonica.de) (Ping timeout: 268 seconds)
[20:09:02] *** Quits: angryguy (~Elw3@x59cc9b6e.dyn.telefonica.de) (Quit: Leaving)
[20:10:00] *** Joins: Elw3 (~Elw3@dynamic-002-247-243-238.2.247.pool.telefonica.de)
[20:21:25] *** Quits: uzi_ (~uzi@161.9.200.42) (Ping timeout: 268 seconds)
[20:40:28] *** Joins: Yorlik_ (~Yorlik___@ip6-2a03-7500-0513-4800-8159-22fd-0795-fc5a.dyn.netcomnetz.de)
[20:40:40] *** Yorlik_ is now known as Yorlik
[20:43:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:64b5:fc80:8eb8:cf03)
[20:43:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:64b5:fc80:8eb8:cf03) (Changing host)
[20:43:46] *** Joins: skapata (~Skapata@user/skapata)
[21:10:28] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[21:32:52] *** Joins: stefanos82 (~stefanos8@62-169-104.netrun.cytanet.com.cy)
[21:43:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:45:17] *** Quits: stefanos82 (~stefanos8@62-169-104.netrun.cytanet.com.cy) (Quit: Leaving)
[21:51:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[21:52:47] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[22:09:37] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[22:11:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:25:22] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Quit: Leaving)
[22:34:14] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:36:41] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[23:02:34] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[23:15:54] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:18:59] *** Server sets mode: +ntz 
[23:23:21] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-0513-4800-8159-22fd-0795-fc5a.dyn.netcomnetz.de) (Ping timeout: 268 seconds)
[23:28:23] *** Quits: Elw3 (~Elw3@dynamic-002-247-243-238.2.247.pool.telefonica.de) (Quit: Leaving)
[23:29:18] *** Joins: Elw3 (~Elw3@x59cc9920.dyn.telefonica.de)
[23:33:48] *** Joins: rgrinberg (~textual@190.113.111.74)
