[00:02:29] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[00:06:29] *** Joins: mahlon (~mahlon@martini.nu)
[00:08:25] *** Joins: TCZ (~tcz@91.150.178.124)
[00:34:37] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:34:49] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[01:30:45] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[01:47:06] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[02:01:38] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[02:02:03] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[02:11:01] *** Joins: markong (~kvirc@213.146.188.203)
[02:20:11] *** Joins: TCZ (~tcz@91.150.178.124)
[02:41:34] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-e428-cc41-f578-ae14.res6.spectrum.com) (Read error: Connection reset by peer)
[02:42:12] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-943f-b78d-3dab-f571.res6.spectrum.com)
[02:54:08] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 272 seconds)
[03:02:14] *** Quits: bsliger (~bsliger@ip68-97-47-19.ok.ok.cox.net) (Quit: Unexpected signal 11)
[03:06:55] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:13:32] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[03:15:09] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:15:21] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:27:58] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[03:31:12] *** Joins: reset (~reset@user/reset)
[03:35:26] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[03:36:06] *** Joins: goepsilongo_ (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[03:36:57] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-943f-b78d-3dab-f571.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:39:48] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 240 seconds)
[04:05:37] *** Quits: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[04:24:15] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:25:53] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[04:34:50] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 272 seconds)
[05:12:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:14:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:37:42] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[05:38:45] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[05:43:54] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[05:46:57] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[05:48:13] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:56:57] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:59:39] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:00:05] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:01:19] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:02:14] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:06:49] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:08:16] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:09:57] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:11:14] *** Joins: justAstache (~justache@user/justache)
[06:18:56] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:19:21] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:36:58] *** Joins: bluedust (~bluedust@103.148.21.74)
[07:09:33] *** Joins: hanzo (uid532183@user/hanzo)
[07:23:01] *** Joins: blacked (~blacked@user/blacked)
[07:23:05] <blacked> is ruby dead?
[07:28:10] *** Quits: bluedust (~bluedust@103.148.21.74) (Remote host closed the connection)
[07:28:46] *** Joins: bluedust (~bluedust@103.148.21.74)
[07:54:52] <newton> it's still in active development and still powers some larger platforms
[08:05:24] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[08:15:44] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[08:18:52] <blacked> newton should i learn nodejs, go or ruby?
[08:20:14] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[08:21:09] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[08:22:30] <sam113101> blacked: ruby
[08:22:50] <blacked> tell me can i get job after learning ruby :/
[08:22:57] <leftylink> either there is some force, entity, or motivation that is driving this "should", in which case a correct answer to this question requires that you tell us about this force, entity, or motivation, or there is none of these things, in which case the question is unanswerable and you should learn all of them.
[08:26:37] <blacked> yes i've already learnt django, nodejs, :(
[08:26:43] <blacked> and made some projects
[08:26:52] <leftylink> a job. all right, that's a good motivation. in this case, it doesn't matter what language you learn. once you learn one language, you can learn whatever other language is needed for the job
[08:27:16] *** Quits: RedNifre (~RedNifre@dslb-002-206-121-030.002.206.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:27:18] <leftylink> but you may very reasonably say "but I can only spend so much time on a particular language and I would like to hit the ground running in my next job"
[08:27:22] <leftylink> that is totally fair to say
[08:27:40] <leftylink> in that case, one would need to have an idea of what company, to know what language they are using
[08:38:37] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[08:40:05] *** Joins: RedNifre (~RedNifre@dslb-002-206-109-194.002.206.pools.vodafone-ip.de)
[08:50:42] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:13:34] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[09:37:00] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[09:37:04] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[09:41:38] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[10:01:04] *** Joins: blacked (~blacked@user/blacked)
[10:06:32] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[10:13:57] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[10:25:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[10:28:37] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 240 seconds)
[10:29:07] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[10:34:06] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 245 seconds)
[10:48:59] *** Quits: rhe (~rhe@labyrinth.rhe.jp) (Ping timeout: 256 seconds)
[10:50:24] *** Joins: rhe (~rhe@labyrinth.rhe.jp)
[11:04:37] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:06:09] *** Joins: mahlon (~mahlon@martini.nu)
[11:23:24] <ox1eef> ruby is not dead, and unlike say python and JS - it is not over saturated either. I see a lot of people on twitter see programming as big bucks, and run to the trending languages like JS/Python - where the demand is high but so is the supply. having said that, my advice is to follow the language you love most, and that will usually lead to a job.
[11:25:15] <ox1eef> https://weworkremotely.com and search for 'ruby' - that should give you an idea about what's out there.
[11:37:52] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[11:39:23] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[11:41:25] *** Joins: ZAJDAN (~ZAJDAN@195.122.199.179)
[11:45:32] *** Joins: Rounin (~david@84.212.130.215)
[11:51:53] *** Quits: blacked (~blacked@user/blacked) (Ping timeout: 256 seconds)
[12:00:00] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[12:03:15] *** Joins: goldfish (~goldfish@user/goldfish)
[12:04:11] *** Joins: hololeap (~hololeap@user/hololeap)
[12:08:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[12:15:38] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[12:45:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:50:33] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5)
[12:54:55] *** Quits: aeris (~aeris@user/aeris) (Ping timeout: 240 seconds)
[12:55:28] *** Joins: aeris (~aeris@user/aeris)
[13:12:59] *** Joins: royo25 (~supergeek@user/royo25)
[13:30:26] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:36:58] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[13:37:17] *** Joins: aeris (~aeris@user/aeris)
[13:40:17] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[13:41:12] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[13:45:34] *** Joins: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au)
[14:13:48] *** Quits: ZAJDAN (~ZAJDAN@195.122.199.179) (Ping timeout: 240 seconds)
[14:22:26] *** Joins: blacked (~blacked@user/blacked)
[14:24:23] *** Parts: blacked (~blacked@user/blacked) ()
[14:27:13] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-694e-debf-2286-ef0f.res6.spectrum.com)
[14:29:48] *** Quits: goepsilongo_ (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 240 seconds)
[14:47:59] *** Quits: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au) (Remote host closed the connection)
[14:50:14] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5) (Ping timeout: 268 seconds)
[14:57:17] *** Joins: ZAJDAN (~ZAJDAN@195.122.199.179)
[15:09:07] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5)
[15:12:29] *** Joins: markong (~kvirc@213.146.188.203)
[15:27:13] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5) (Remote host closed the connection)
[15:27:39] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5)
[15:31:44] *** Joins: shiru (shiru@gateway/vpn/protonvpn/shiru)
[15:38:34] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[15:42:49] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[15:43:03] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[15:43:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:56:51] *** Joins: fef (~thedawn@user/thedawn)
[16:08:27] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:11:40] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[16:18:34] *** Joins: TCZ (~tcz@91.150.178.124)
[16:25:48] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-694e-debf-2286-ef0f.res6.spectrum.com) (Ping timeout: 240 seconds)
[16:27:51] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-84bf-264a-925c-29aa.res6.spectrum.com)
[16:28:25] *** Quits: shiru (shiru@gateway/vpn/protonvpn/shiru) (Quit: leaving)
[16:43:35] <libsys> hello people... I guess here I could find people using sequel
[16:45:06] <libsys> About sequel, do you know guys how can I extend the Model.first method?
[16:45:42] <libsys> changing it directly results in weird behavior... Model.[] and Model.find doesn't seem to catch my changes
[16:46:13] <libsys> no... .find catches it, [] doesnt
[16:52:14] <ox1eef> extend it how? what are you trying to do?
[16:52:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[16:52:57] <libsys> class Product < Sequel::Model; def self.first(*args, &block)
[16:53:58] <libsys> I'm trying to mix a dataset with other attributes (not in database), and it behaves weird
[16:54:14] <libsys> I guess I'll need to adapt myself to the codebase of sequel first
[16:55:50] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:55:57] <ox1eef> have you tried modifying the behavior in your method, then calling super() ?
[16:57:03] <libsys> yup, looks like I found my error, if I need help I'll be back
[16:57:05] <ox1eef> another option, and probably cleaner, is to implement your own class method not conflicting with Sequel
[17:05:48] <adam12> ^ I'd probably do that.
[17:10:54] <libsys> You're probably right... my problem is that my `Model.first` implementation doesn't get called when I do Model['id'] 
[17:11:10] <libsys> but it does when I do `Model[id: 'id']`
[17:11:23] <libsys> isn't that weird stuff?
[17:11:25] <libsys> xd
[17:15:21] *** Joins: some14u (~textual@109.143.126.38)
[17:17:32] *** Quits: some14u (~textual@109.143.126.38) (Client Quit)
[17:19:22] <ox1eef> not sure about that part - i plan to use sequel, but still haven't found the time.
[17:21:38] <adam12> libsys: It's probably calling with_pk
[17:21:41] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[17:22:00] <adam12> libsys: What problem are you solving? Maybe there's a better approach.
[17:23:23] *** Joins: some14u (~textual@109.143.126.38)
[17:24:22] <libsys> I have a model with dynamic data that comes from a database and fixed data that comes from an array
[17:25:49] <libsys> I need the model to show as a unity, incluiding data from both sources
[17:26:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:28:21] <ox1eef> why don't you put the fixed data in the database?
[17:29:41] <libsys> convenience... It's easier for me to work with the data in plain code
[17:31:49] <ox1eef> it sounds quite diffilcult to do what you want to do, and you could avoid that diffilculity with all the data in the database.
[17:33:12] <libsys> it's not really difficult, but I get that sequel is not designed with my use case in mind
[17:33:22] <ox1eef> right
[17:33:32] <ox1eef> it basically doesn't work.
[17:34:07] <adam12> ox1eef: Can you use after_initialize for this?
[17:34:35] <libsys> that seems an interesting approach
[17:34:44] <ox1eef> conceptually it boggles my mind a bit, what happens when you query the database, how do you query the in-memory data as well?
[17:35:12] <libsys> you dont, static data are attr_reader attributes only
[17:35:19] <adam12> Alternatively, make a delegator that does the manipulation for you.
[17:36:11] <ox1eef> adam12: not sure. i probably would have never got this far because i'd throw the data into the database to avoid these diffilculties. 
[17:38:17] <adam12> ox1eef: Almost need a sequel-yaml adapter or something.
[17:38:36] <adam12> I know PHP has one for Eloquent.
[17:38:48] <ox1eef> how does that work?
[17:39:43] <libsys> probably https://rom-rb.org would be a much better approach for something like this
[17:39:52] <adam12> https://github.com/calebporzio/sushi
[17:40:02] <adam12> libsys: Likely, since it doesn't care where data is from really.
[17:40:12] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:40:23] *** Quits: some14u (~textual@109.143.126.38) (Read error: Connection reset by peer)
[17:40:24] <libsys> but learning the whole stuff and dealing with less support made me choose sequel
[17:40:51] <adam12> Same reason why I use Sequel on every project. I think ROM would allow better structuring for larger apps but I've been using Sequel so long :P
[17:42:14] <ox1eef> adam12: sounds interesting - as i understood this particular case, the source is *both* the database and an in-memory array, even harder i think.
[17:43:00] <adam12> ox1eef: Sequel can join across multiple databases. I could maybe see it working. MemoryDB = Sequel.memory_db; class MyMemoryModel < Sequel(MemoryDB[:some_array]); or something.
[17:43:09] <ox1eef> nice
[17:43:38] <ox1eef> i have a project in mind for Sequel, hopefully i get it off the ground soon.
[17:45:46] *** Joins: some14u (~textual@109.143.126.38)
[17:47:08] *** Quits: ua__ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 272 seconds)
[17:48:15] *** Quits: some14u (~textual@109.143.126.38) (Client Quit)
[17:49:40] *** Joins: ua__ (~ua@public-gprs219536.centertel.pl)
[17:49:51] *** Joins: some14u (~textual@109.143.126.38)
[17:49:57] *** Joins: crankharder (~crankhard@pool-72-81-227-45.bltmmd.fios.verizon.net)
[17:51:27] <libsys> noice... after_initialize is exactly what I needed
[17:51:30] <libsys> :)
[17:51:57] <libsys> it's even better of my approach because it doesn't affect any behavior of Sequel 
[17:52:12] <libsys> and even works with .all
[17:52:23] *** Quits: some14u (~textual@109.143.126.38) (Client Quit)
[17:52:38] <libsys> s/of/than
[17:54:15] <adam12> libsys: cool
[18:01:06] <ox1eef> very good
[18:01:15] <ox1eef> can you share the code?
[18:03:48] <libsys> https://freedombox.hacktivista.org/bepasty/tyT2yuhw/+inline
[18:06:02] <ox1eef> ok i think i kinda get it, you have a product - some of it in the database, and other parts in PRODUCTS ?
[18:06:15] <libsys> yup
[18:06:23] <ox1eef> cool
[18:07:15] <libsys> I'm kind of experimenting with all this too, hehe... I've created an hybrid static/dynamic web framework
[18:07:38] <ox1eef> it is actually different to what i originally imagined.
[18:07:52] <ox1eef> i thought PRODUCTS was a row in itself, not part of a row existing in the DB.
[18:08:22] <ox1eef> an array of rows rather
[18:09:38] <ox1eef> that's cool - more rails rivals the better.
[18:10:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:16:02] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[18:16:34] *** Joins: aeris (~aeris@user/aeris)
[18:35:10] *** Quits: dorian (~dorian@doriantaylor.com) (Remote host closed the connection)
[18:37:12] *** Joins: dorian (~dorian@doriantaylor.com)
[18:37:58] <libsys> leanweb.hacktivista.org if you're interested... during the week I'll release version 0.2.. though it's already on the git repo
[18:47:23] *** Joins: bluedust_ (~bluedust@103.148.21.74)
[18:50:05] *** Quits: bluedust (~bluedust@103.148.21.74) (Ping timeout: 256 seconds)
[19:16:47] *** Quits: FetidToot (~FetidToot@user/fetidtoot) (Quit: The Lounge - https://thelounge.chat)
[19:17:28] *** Joins: FetidToot (~FetidToot@user/fetidtoot)
[19:17:51] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[19:18:29] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:26:59] *** Quits: bluedust_ (~bluedust@103.148.21.74) (Remote host closed the connection)
[19:27:20] *** Joins: bluedust (~bluedust@103.148.21.74)
[19:30:36] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 240 seconds)
[19:32:16] *** Quits: bluedust (~bluedust@103.148.21.74) (Remote host closed the connection)
[19:33:35] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:39:15] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[19:42:08] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[19:59:14] *** Joins: bluedust (~bluedust@103.148.21.74)
[20:07:06] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[20:11:52] *** Joins: justAstache (~justache@user/justache)
[20:28:40] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[20:34:47] *** Joins: bluedust_ (~bluedust@185.248.85.23)
[20:36:06] <mooff> ooh. try IRB.send(:easter_egg) :)
[20:37:00] *** Joins: bluedus__ (~bluedust@103.148.21.74)
[20:37:27] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[20:37:59] *** Quits: bluedust (~bluedust@103.148.21.74) (Read error: Connection reset by peer)
[20:38:05] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[20:40:19] *** Quits: bluedust_ (~bluedust@185.248.85.23) (Ping timeout: 256 seconds)
[20:40:50] *** Quits: ZAJDAN (~ZAJDAN@195.122.199.179) (Ping timeout: 260 seconds)
[20:40:57] <michigan> Hi! Anybody know of ways to make poorly formatted sentences look partially decent?
[20:41:09] <michigan> Ie. "  ,  lorem ipsum dolor. sit  amet.  "
[20:42:53] <jhass[m]> What would you expect as outcome?
[20:43:01] <michigan> I know of Rails' `squish` which will give me: ", lorem ipsum dolor. sit amet." But Ruby's `capitalize` won't seem to work because of the leading comma, nor will it work to capitalize any subsequent sentences.
[20:43:26] <michigan> Ideally "Lorem ipsum dolor. Sit amet."
[20:44:11] <jhass[m]> What would ". lorem  ipsum dolor , sit amet" give?
[20:45:07] <michigan> jhass[m]: Nothing AFAIK
[20:45:32] <michigan> irb(main):001:0> test.capitalize
[20:45:34] <michigan> => ". lorem  ipsum dolor , sit amet"
[20:45:39] <jhass[m]> I mean what result would you expect from that example?
[20:45:56] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:45:57] <michigan> Oh, "Lorem ipsum dolor, sit amet."
[20:46:20] *** Quits: royo25 (~supergeek@user/royo25) (Quit: Bye)
[20:46:24] <jhass[m]> so invent a dot at the end? :D
[20:46:39] <michigan> Oh yeah, my bad. That's for another question
[20:46:48] *** Quits: bluedus__ (~bluedust@103.148.21.74) (Remote host closed the connection)
[20:47:01] <michigan> Which I'm about to ask soon
[20:47:13] <jhass[m]> Just trying to gauge what level of magic you're looking for :)
[20:47:36] <michigan> But that `squish` method from Rails is amazing though. It removes trailing and leading whitespace, as well as any whitespace in between words!
[20:47:41] <jhass[m]> Are your real sentences all English or random languages?
[20:47:56] <michigan> I would say both...
[20:48:29] <michigan> * as well as any excess whitespace
[20:49:12] <jhass[m]> well that part is just .gsub(/\s+/, " ").strip
[20:50:52] <nakilon> .squeeze(" ").strip
[20:51:13] <jhass[m]> and then you could continue with stuff like .split(/(?<=[.?!]) /).map(&:capitalize).join(" ")
[20:51:31] <jhass[m]> +1
[20:52:12] <jhass[m]> but you'll probably find more and more cases to handle and eventually probably ones conflicting with these general rules. And then there's stuff like French where "Hey !" instead of "Hey!" is the proper formatting
[20:52:14] <michigan> Oh man!
[20:52:17] <michigan> Thank you guys so much
[20:52:18] <jhass[m]> so I wonder what constraints to put
[20:52:32] <michigan> French say "Hey !"?
[20:52:37] <michigan> That explains a lot lol
[20:52:50] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[20:53:01] <jhass[m]> Yes. And we Germans call that plenking :D
[20:53:16] <michigan> haha
[20:53:21] <jhass[m]> https://en.wikipedia.org/wiki/Plenken
[20:53:37] <nakilon> .gsub(/[.?!]\s+\w/, &:upcase)
[20:53:49] <michigan> "Planking is an activity consisting of lying in a face down position, sometimes in an unusual or incongruous location. The palms of the hands are typically touching the sides of the body and the toes are typically touching the ground."
[20:54:23] <michigan> Ah yeah, cool.
[20:54:23] <jhass[m]> a != e :P
[20:54:37] <michigan> I've noticed it with former French colonies as well.
[20:54:59] <michigan> Always wanted to go like "My man, you gotta stop using the space bar too much." :D
[20:55:18] <michigan> * so much
[20:55:58] <mooff> :: "^. .  . lorem  ipsum dolor ,sit amet".gsub(/^[\s\W_]+/, '').gsub(/[\s\W_]+$/, '').gsub(/\s+/, ' ').capitalize
[20:55:58] <ruby-eval> => "Lorem ipsum dolor ,sit amet"
[20:56:11] <michigan> But then again I don't wanna be an asshole pointing out peoples' mistakes :/
[20:56:41] <michigan> mooff: Thank you man!
[20:56:51] <ox1eef> depends on the person - some people appreciate that, and in this case it would be more correct than your suggestion - at least to them.
[20:57:05] <mooff> :: "🥙 ^. .  . lorem  ipsum dolor ,sit amet".gsub(/^[\s\W_]+/, '').gsub(/[\s\W_]+$/, '').gsub(/\s+/, ' ').capitalize
[20:57:05] <ruby-eval> => "Lorem ipsum dolor ,sit amet"
[20:57:53] <nakilon> :: Dir.pwd
[20:57:53] <ruby-eval> => "/"
[20:58:11] <nakilon> :: `whoami`
[20:58:11] <ruby-eval> ERROR: string contains null byte
[20:58:11] <ruby-eval> (eval):1:in `initialize'
[20:58:11] <ruby-eval> (eval):1:in ``'
[20:58:29] <mooff> michigan: https://stackoverflow.com/questions/8359566/regex-to-match-symbols has useful examples
[20:59:37] <mooff> \W means 'any non-word character'. it would cleave off letters like 'é', too :(
[20:59:40] <michigan> :folded_hands:
[20:59:58] <michigan> Mind if I ask my other question now that I have your attention?
[21:00:01] *** Joins: bluedust (~bluedust@103.148.21.74)
[21:00:09] <mooff> you'll have to trial-and-error and hand hold based on your data
[21:00:22] <michigan> Hand holding lol
[21:00:34] <michigan> But yeah:
[21:00:35] <nakilon> :: File.read(__FILE__).split("\n")[__LINE__-1]
[21:00:36] <ruby-eval> ERROR: No such file or directory @ rb_sysopen - (eval)
[21:00:36] <ruby-eval> (eval):1:in `read'
[21:00:46] <michigan> I have some strings that sometimes end in incomplete sentences, ie: "Hey, glad to have you back. By the way did", "Hello, how are you? I am on the" etc.
[21:00:58] <michigan> Is there a way to remove everything after the final dot or question mark?
[21:01:07] <nakilon> :: File.read(#{__FILE__}).split("\n")[#{__LINE__}-1]
[21:01:08] <ruby-eval> ERROR: (eval):1: syntax error, unexpected end-of-input, expecting ')'
[21:01:08] <ruby-eval> ...__}).split("\n")[#{__LINE__}-1]
[21:01:08] <ruby-eval> ...                               ^
[21:01:13] <mooff> nakilon: join ##ruby-eval if you want to play :P
[21:01:20] <nakilon> ok, sry
[21:01:52] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[21:01:52] <mooff> michigan: what if someone doesn't finish their sentences with a dot?
[21:03:04] <mooff> :: s = "this is a test. my old friend... a test!"
[21:03:04] <ruby-eval> => "this is a test. my old friend... a test!"
[21:03:19] <michigan> Guess I never really thought of that.
[21:03:26] <mooff> :: s[..s.rindex('.')]
[21:03:27] <ruby-eval> => "this is a test. my old friend..."
[21:03:29] <michigan> And yeah, as you just pointed out, exclamation marks!
[21:03:37] <mooff> :: s[...s.rindex('.')]
[21:03:37] <ruby-eval> => "this is a test. my old friend.."
[21:04:28] <michigan> Isn't there a gem though that takes care of this stuff for us?
[21:05:43] <michigan> Oh no.
[21:06:05] <michigan> I reckon it isn't just dots, question- and exclamation marks that marks the end of sentences these days.
[21:06:30] <michigan> We also have 3,633 emojis.
[21:06:58] <michigan> * that mark
[21:08:59] *** Joins: ur5us (~ur5us@203.86.198.200)
[21:17:51] *** Quits: crankharder (~crankhard@pool-72-81-227-45.bltmmd.fios.verizon.net) (Ping timeout: 250 seconds)
[21:22:49] <nakilon> you can't perfectly sanitize all the crap; just delete the emojis and stuff, replace with ":-)" or delete the whole sentences
[21:23:16] <nakilon> you won't lose much
[21:26:49] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[21:27:35] <mooff> gsub(/./, '')
[21:27:46] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:32:26] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 245 seconds)
[21:33:17] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:33:45] <michigan> hehe :-)
[21:34:45] <michigan> I'll have some better examples for you shortly
[21:35:06] <michigan> I do remember adam12 mentioning MTurk, but that was for a different matter
[21:36:09] <michigan> jhass[m]: I also remember you helping me make that Net-a-porter Live (www.net-a-porter.com) recorder some 10 years ago.
[21:36:43] <michigan> That service has since been discountinued. Maybe because people like us can use it as market research :-)
[21:38:07] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[21:38:27] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:38:49] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:41:59] *** Joins: crankharder (~crankhard@pool-72-81-227-45.bltmmd.fios.verizon.net)
[21:43:32] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[21:44:20] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:44:30] *** Joins: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net)
[21:44:30] *** Quits: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net) (Changing host)
[21:44:30] *** Joins: mitt3ns (~agent_whi@user/mitt3ns)
[21:49:03] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 250 seconds)
[21:49:51] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:52:42] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[21:54:32] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[21:54:40] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:55:20] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:57:38] <mooff> :: ["Hey, glad to have you back. By the way did", "Hello, how are you? I am on the", "It's a mystery..."].map { |s| s[..s.rindex(/[\.\?!]/)] }
[21:57:39] <ruby-eval> => ["Hey, glad to have you back.", "Hello, how are you?", "It's a mystery..."]
[21:59:55] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[22:00:52] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:03:20] *** Quits: bluedust (~bluedust@103.148.21.74) (Remote host closed the connection)
[22:05:24] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[22:06:23] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:08:10] *** Quits: crankharder (~crankhard@pool-72-81-227-45.bltmmd.fios.verizon.net) (Quit: leaving)
[22:08:12] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:11:15] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[22:11:53] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:16:41] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[22:17:25] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:21:57] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[22:25:10] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[22:31:31] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Read error: Connection reset by peer)
[22:31:46] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[22:34:10] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:36:11] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 256 seconds)
[22:44:10] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 272 seconds)
[22:52:08] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[22:54:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:55:50] <adam12> michigan: I used that logo!
[22:55:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:57:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:10:18] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[23:10:32] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[23:10:45] *** Joins: bluedust (~bluedust@103.148.21.74)
[23:11:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:11:53] *** Joins: bluedust_ (~bluedust@89.45.224.214)
[23:12:17] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[23:15:02] *** Quits: bluedust (~bluedust@103.148.21.74) (Ping timeout: 240 seconds)
[23:19:06] *** Joins: taupiqueur (~taupiqueu@56.197.204.77.rev.sfr.net)
[23:19:52] *** Quits: ruby-eval (~ruby@cyberspace.baby) (Excess Flood)
[23:20:44] *** Joins: ruby-eval (~ruby@cyberspace.baby)
[23:21:46] *** Joins: taupiqueur_ (~taupiqueu@20.196.204.77.rev.sfr.net)
[23:23:55] *** Quits: taupiqueur (~taupiqueu@56.197.204.77.rev.sfr.net) (Ping timeout: 268 seconds)
[23:33:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:33:34] *** Quits: RedNifre (~RedNifre@dslb-002-206-109-194.002.206.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[23:34:29] *** Joins: RedNifre (~RedNifre@dslb-002-206-109-194.002.206.pools.vodafone-ip.de)
[23:37:41] *** Quits: taupiqueur_ (~taupiqueu@20.196.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[23:40:06] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:42:31] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[23:43:34] <rapha> evening all
[23:44:26] <rapha> if you have something very specialized such as SQLite3::ResultSet::HashWithTypesAndFields , is there a way to get back to the more basic thing from there, such as Hash ?
[23:45:00] <adam12> rapha: Generally you'd call #to_h, no?
[23:46:44] <rapha> yeah ... that didn't work
[23:47:09] <rapha> oh, wait, if i call #delete first, and then do my #maps instead of the other way around, it ends up as a Hash, and .to_yaml behaves again
[23:47:13] <rapha> hmm. funny.
[23:47:26] <adam12> rapha: Well, to_h is obviously object dependent.
[23:47:43] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:45] <adam12> rapha: It looks like that object inherits from Hash. What about calling #to_hash instead?
[23:49:14] <adam12> Oh, maybe you solved it? I dunno.
[23:54:35] <ox1eef> another option: Hash.try_convert(obj) - returns nil if the object can't be coerced into a Hash.
[23:57:28] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[23:58:30] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
