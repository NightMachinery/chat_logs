[00:01:12] <gpanders[m]1> `:set completeopt-=preview`
[00:01:44] <and3rsonAndrewDu> s/buffer/split/
[00:02:36] <and3rsonAndrewDu> @gpanders:matrix.org Thank you so much! Just what I needed.
[00:03:28] *** Quits: Sircle (~Sircle@88.246.75.14) (Ping timeout: 256 seconds)
[00:08:58] *** Quits: krisk (~krisk@user/krisk) (Ping timeout: 268 seconds)
[00:13:41] *** Joins: elopa (~elopa@244.96.60.213.dynamic.reverse-mundo-r.com)
[00:14:50] *** Joins: krisk (~krisk@user/krisk)
[00:15:38] *** Joins: gregloscombe (~greglosco@82.25.194.79)
[00:16:37] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Read error: Connection reset by peer)
[00:17:16] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:20:21] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.3)
[00:22:49] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:25:20] *** Joins: tracey (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:26:50] *** Quits: gregloscombe (~greglosco@82.25.194.79) (Quit: WeeChat 3.2)
[00:28:42] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[00:31:05] *** Joins: ii14[m] (~ii14matri@2001:470:69fc:105::1:2958)
[00:33:13] *** Quits: elopa (~elopa@244.96.60.213.dynamic.reverse-mundo-r.com) (Remote host closed the connection)
[00:34:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:41:10] *** Joins: simplerman (~chieftain@91-170-248-16.subs.proxad.net)
[00:53:08] *** Joins: bloowmymnd (~blowmymnd@2001:818:d8d1:c600:2c79:8f02:411e:41be)
[00:53:59] *** Quits: bloowmymnd (~blowmymnd@2001:818:d8d1:c600:2c79:8f02:411e:41be) (Client Quit)
[00:58:58] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Quit: leaving)
[01:02:17] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[01:08:40] *** Quits: ugubok (~ugubok@user/ugubok) (Read error: Connection reset by peer)
[01:10:10] *** Joins: ugubok (~ugubok@user/ugubok)
[01:14:13] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[01:14:32] *** Quits: simplerman (~chieftain@91-170-248-16.subs.proxad.net) (Quit: Lost terminal)
[01:18:12] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[01:31:20] *** Joins: rgrinberg (~textual@190.113.111.74)
[01:31:43] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[01:33:43] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[01:37:36] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[01:41:50] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[01:42:38] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[01:45:10] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 268 seconds)
[01:45:11] *** Quits: cottoneyejim (~cottoneye@2a01:261:392:4900:ea6a:64ff:fe4f:b643) (Ping timeout: 268 seconds)
[01:46:41] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[01:50:09] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:06:12] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[02:06:30] *** Joins: hololeap (~hololeap@user/hololeap)
[02:06:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[02:10:48] *** Joins: deleption[m] (~deleption@2001:470:69fc:105::1:296a)
[02:19:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:22:52] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[02:26:14] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[02:26:39] *** Joins: sailorzoop[m] (~sailorzoo@2001:470:69fc:105::1:2737)
[02:33:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:37:19] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[02:49:01] *** Joins: Didar[m] (~didarmatr@2001:470:69fc:105::1:2977)
[02:55:11] *** Joins: jacky (~deku@user/jackyalcine)
[02:55:16] *** Joins: __xor (~xor@72.49.199.147)
[02:55:37] *** Joins: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[02:56:02] *** Quits: jacky (~deku@user/jackyalcine) (Quit: jacky)
[02:56:20] *** Joins: jacky (~jacky@47.199.68.120)
[02:56:43] *** Quits: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Client Quit)
[02:56:46] *** Quits: _xor (~xor@72.49.199.147) (Ping timeout: 245 seconds)
[02:57:16] *** Joins: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[02:57:44] *** Quits: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Remote host closed the connection)
[02:58:18] *** Joins: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[02:58:20] *** Quits: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Remote host closed the connection)
[03:08:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[03:09:37] *** Quits: tracey (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Quit: Leaving)
[03:11:03] *** Quits: jacky (~jacky@47.199.68.120) (Quit: jacky)
[03:11:42] *** Quits: w0ng (~w0ng@185.218.127.39) (Quit: w0ng)
[03:24:51] *** Joins: X-Scale` (~ARM@46.50.2.72)
[03:26:22] *** Quits: X-Scale (~ARM@92.250.98.212) (Ping timeout: 260 seconds)
[03:26:47] *** X-Scale` is now known as X-Scale
[03:29:21] *** Quits: jangho (~jangho@121.165.8.28) (Quit: znc)
[03:30:43] *** Joins: w0ng (~w0ng@185.218.127.39)
[03:35:19] *** Joins: jangho (~jangho@121.165.8.28)
[03:36:51] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:38:02] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 268 seconds)
[03:39:16] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:83e9:1f9a:8d3d:16ea) (Ping timeout: 268 seconds)
[03:55:18] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[04:03:07] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[04:10:18] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[04:10:58] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:15:42] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:15:50] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[04:16:28] *** Joins: utraciss (~utraciss@118.100.91.150)
[04:18:38] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:19:06] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[04:27:55] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[04:28:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[04:31:42] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[04:32:25] *** Joins: Nasan (~Nasan@2804:d59:f410:c600:e4fa:2b39:c180:2a07)
[04:39:05] *** Joins: koloss[m] (~kolossmat@2001:470:69fc:105::1:2983)
[04:40:47] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[04:59:02] *** Quits: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e) (Quit: Konversation terminated!)
[04:59:20] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:01:02] *** Parts: Nasan (~Nasan@2804:d59:f410:c600:e4fa:2b39:c180:2a07) ()
[05:08:05] *** Joins: qaph (~weechat@user/qaph)
[05:11:22] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 260 seconds)
[05:11:24] *** qaph is now known as kron
[05:21:07] *** Joins: rgrinberg (~textual@190.113.111.74)
[05:27:47] *** Quits: kajiryoji (~kajiryoji@180.160.56.140) (Quit: ZNC 1.8.2 - https://znc.in)
[05:29:06] *** Joins: kajiryoji (~kajiryoji@180.160.56.140)
[05:38:10] *** Joins: Rue (~rue@2001-b011-1000-131e-573e-dcac-535b-0403.dynamic-ip6.hinet.net)
[05:42:35] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:47:14] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[06:12:34] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[06:13:35] *** Quits: emf (~emf@2620:10d:c090:400::5:f24f) (Ping timeout: 264 seconds)
[06:15:34] *** Joins: emf (~emf@2620:10d:c091:480::1:9d5d)
[06:17:44] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 268 seconds)
[06:18:21] <luisiaccLuisCC[m> .
[06:19:01] <luisiaccLuisCC[m> anybody knows if builtin lsp with nvim-cmp still has small lag when typing on react files?
[06:24:39] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:26:41] *** Joins: emf_ (~emf@2620:10d:c090:400::5:5f62)
[06:28:35] *** Quits: emf (~emf@2620:10d:c091:480::1:9d5d) (Ping timeout: 264 seconds)
[06:29:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:34:07] <mjlbach[m]> Well, depends when the last time you tried it was
[06:34:30] <mjlbach[m]> `podman run --rm -it quay.io/nvim-lsp/try.nvim:nightly-typescript`
[06:35:08] *** Quits: MercilessDeth (~brad@136.49.61.2) (Ping timeout: 260 seconds)
[06:36:04] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:38:33] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:46:25] <mjlbach[m]> (the answer is no, there is probably no longer lag as I made several performance improvements that are not in 0.5.1)
[06:50:58] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:26] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[07:08:53] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:24:03] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[07:30:09] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[07:31:14] * aphysically spent far too long trying to figure out how to hook up nvim's LSP hover action to balloonevalterm
[07:31:28] <aphysically> it turns out neovim doesn't support vim's mouse hover at all
[07:32:19] <aphysically> I guess that's one big downside of using nvim's LSP ecosystem even if it's nice that it's all together
[07:32:30] <aphysically> I probably still prefer keeping stuff together
[07:36:04] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 268 seconds)
[07:43:04] <mjlbach[m]> > I guess that's one big downside of using nvim's LSP ecosystem even if it's nice that it's all together 
[07:43:04] <mjlbach[m]> hmm?
[07:43:07] <mjlbach[m]> isn't that more a downside of using neovim?
[07:45:57] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[07:56:22] *** Joins: hofenstad (~hofenstad@182.237.189.37)
[07:59:38] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:02:44] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[08:07:30] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 268 seconds)
[08:09:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:10:27] *** Joins: Sircle (~Sircle@88.246.75.14)
[08:11:20] <aphysically> mjlbach[m]: the centrality of the LSP ecosystem is what I like
[08:11:39] <aphysically> the no mouse hover support I don't like
[08:12:12] <mjlbach[m]> Yes, I was confused about why that is a downside of neovim's LSP ecosystem rather than a downside of neovim :) 
[08:12:48] <aphysically> yeah I didn't separate the thoughts clearly
[08:13:13] <aphysically> you're meant to have read my mind :)
[08:15:59] <mjlbach[m]> I would need a back alley, about 10 feet of copper wire, a dremel, and an oscilloscope for that :) 
[08:20:21] <aphysically> I wonder if I can get the LSP signs to only highlight the numbers
[08:22:06] <aphysically> oh apparently it works fine, for some reason I thought I also needed signcolumn=no once I set the numbers to be highlighted
[08:22:30] <aphysically> I must have had too much candy when I came to this conclusion yesterday
[08:22:40] *** Joins: hubrecht (~hubrecht@2a0c:700:3013:0:62d2:1e9:3af3:d82c)
[08:22:43] <mjlbach[m]> The example in the thing works for me
[08:22:47] <mjlbach[m]> s/thing/wiki/
[08:22:49] <mjlbach[m]> oh good
[08:23:05] *** hubrecht is now known as tomate
[08:23:11] <aphysically> yeah it's working, I thought for some reason that the signcolumn would still pop out if I didn't =no it but apparently I'm just crazy
[08:26:03] <mjlbach[m]> I'll clean the wiki up a bit when 0.6 comes out and we can remove all the 0.5.1 compat examples
[08:26:36] *** Quits: tomate (~hubrecht@2a0c:700:3013:0:62d2:1e9:3af3:d82c) (Quit: tomate)
[08:29:14] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Quit: WeeChat 3.2.1)
[08:34:26] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[08:39:06] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[08:40:54] *** Quits: engest (~engest@50.126.100.152) (Ping timeout: 260 seconds)
[08:41:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:42:46] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:47:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:48:19] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[08:48:24] *** __xor is now known as _xor
[08:55:24] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[08:56:59] <aphysically> yeah
[08:57:13] <aphysically> mjlbach[m]: I figured out how I came to that wrong conclusion
[08:57:31] <aphysically> I had tried to set signcolumn=number which *does* override the number with a blank square
[08:57:50] <aphysically> so I assumed the a blank sign column would similarly show up without trying it in normal signcolumn mode
[08:58:20] <aphysically> so I'm only a little misguided and not completely crazy
[09:00:20] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[09:03:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:04:19] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:05:14] <low-key> Is there a way to setup nvim-cmp such that hitting enter will move me to the next line instead of automatically picking the first option even when I haven't picked any option on the list?
[09:12:39] <hgc> Neovim is good!
[09:12:45] <aphysically> here's the tracking bug for then neovim feature that would be needed to replicate the vim balloonevalterm feature I guess: https://github.com/neovim/neovim/issues/9534
[09:17:35] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[09:23:28] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:25:10] <dumbdemic[m]> low-key: ya check the mapping examples
[09:25:10] <dumbdemic[m]> https://github.com/hrsh7th/nvim-cmp/wiki/Example-mappings#luasnip
[09:27:34] <low-key> I've been going through it 
[09:27:52] <low-key> I dropped the <CR> mapping and that seems to have done it
[09:27:56] <low-key> Thanks :)
[09:30:22] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:03:52] <aphysically> looks like it's backlog milestone though
[10:04:32] <aphysically> a bit oof :^( but I'll manage I guess
[10:06:48] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[10:10:50] *** Quits: yurishenko (~yurishenk@pool-108-31-230-136.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[10:11:30] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[10:34:16] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 268 seconds)
[10:38:59] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:40:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:57:49] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[11:07:23] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[11:16:55] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[11:20:19] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-251.ethz.ch)
[11:23:00] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Ping timeout: 268 seconds)
[11:25:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:32:26] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[11:35:38] *** Joins: Ilyu (~quassel@78.202.228.230)
[11:41:54] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[11:43:10] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 260 seconds)
[11:57:18] <ram02z[m]> hi, I think the nightly tag is wrong
[11:57:23] <ram02z[m]> it has pointed to e921e98ce38a33a824a8b4efb376a9901a8191d7 for the last two days
[11:57:57] <rob[m]1234> Hi. Using nvim-lsp, it often ends up that the LSP engine gets out of sync with the currently compiled code. For example, if some generated code is recompiled, `go build` works fine but the LSP engine is displaying "unknown field" errors.
[11:57:57] <rob[m]1234> Sometimes `LspRestart` fixes it, sometimes I need to restart vim. Is there a better way?
[11:59:12] *** Joins: cottoneyejim (~cottoneye@2a01:261:318:4f00:ea6a:64ff:fe4f:b643)
[12:00:57] <rob[m]1234>  * Hi. Using nvim-lsp, it often ends up that the LSP engine gets out of sync with the currently compiled code. For example, if some generated code is recompiled, the code compiles successfully but the LSP engine is displaying "unknown field" errors.
[12:00:58] <rob[m]1234> Sometimes `LspRestart` fixes it, sometimes I need to restart vim. Is there a better way?
[12:03:30] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Quit: awwww)
[12:03:43] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[12:05:33] *** Joins: roarc[m] (~roarcmatr@2001:470:69fc:105::e7ed)
[12:09:21] <elianiva[m]> > <@rob:netflux.io> Hi. Using nvim-lsp, it often ends up that the LSP engine gets out of sync with the currently compiled code. For example, if some generated code is recompiled, the code compiles successfully but the LSP engine is displaying "unknown field" errors.
[12:09:21] <elianiva[m]> > Sometimes `LspRestart` fixes it, sometimes I need to restart vim. Is there a better way?
[12:09:21] <elianiva[m]> which server is it?
[12:09:56] <rob[m]1234> elianiva[m]: gopls. Not sure about others
[12:12:19] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:bcf5:4562:7bcf:5eb9)
[12:24:49] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:25:16] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Ping timeout: 268 seconds)
[12:26:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:30:09] *** Quits: ismatrix[m] (~ismatrixm@2001:470:69fc:105::3a1e) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: ynrbode[m] (~ynrbodema@2001:470:69fc:105::bad9) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: juby8[m] (~juby8matr@2001:470:69fc:105::1:a0a) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: PyotrPahn[m] (~spineless@2001:470:69fc:105::cf3c) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: kyte[m] (~kyteinsky@2001:470:69fc:105::1:688) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: Tsun[m] (~tsunnysid@2001:470:69fc:105::1:a2c) (Quit: You have been kicked for being idle)
[12:32:16] *** Joins: zro (~zro@user/zro)
[12:36:32] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:44:40] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:46:51] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-251.ethz.ch) (Ping timeout: 268 seconds)
[12:48:30] *** Joins: mahlon (~mahlon@martini.nu)
[12:55:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:59:26] *** Joins: ixil (~ixil@mpp-cp1-natpool-3-194.ethz.ch)
[12:59:36] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[13:10:54] *** Joins: okamis (~okamis@81-235-235-237-no92.tbcn.telia.com)
[13:12:18] <sunjonSenghanBri> good morning
[13:13:02] <sunjonSenghanBri> vigoux: you here?
[13:13:28] <okamis> Greetings! How do I bind keypad? I want to bind it to vimspector, e.g. "nnoremap <kDel> :q<CR>"
[13:13:55] <okamis> I have seen that :e keycodes provides me with a list of keycodes, but the keypads doesnt work for me
[13:14:53] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:15:13] <j-k[m]> kylo252: nix 2.4 released so now `sh <(curl -L https://nixos.org/nix/install) --daemon` should work just fine on most non-systemd systems 🤞
[13:15:14] * j-k[m] uploaded an image: (20KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/oSKXrEaVifFvUkGrUUhGDCyH/image.png >
[13:17:27] <elianiva[m]> oh it's out of beta?
[13:17:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:17:37] <elianiva[m]> I mean, unstable
[13:22:47] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:27:46] <j-k[m]> Yep https://discourse.nixos.org/t/nix-2-4-released/15822
[13:27:46] <j-k[m]> There are still some unstable experimental features but you can toggle them on or off. 2.5 is the new unstable
[13:34:58] *** Joins: towb (~bwot@user/towb)
[13:37:55] *** Joins: ham5urg__ (~ham5urg@149.233.139.246.dynamic-pppoe.dt.ipv4.wtnet.de)
[13:39:33] <ham5urg__> Doing my first steps with neovim. I copied my .vimrc to .nvimrc but looks like it has no effect (set nowrap, set number, set colorcolumn=80). What am I missing?
[13:39:57] <phaazon[m]> there is something that neovim needs without plugin
[13:39:59] <phaazon[m]> `:bdel` that doesn’t close the window
[13:40:03] <phaazon[m]> it’s so annoying that it does ☹️
[13:40:43] <phaazon[m]> also mjlbach I have found something that makes neovim freeze again (remember our discussion)?
[13:41:03] <phaazon[m]> with `rust-analyzer`, going to references when lots of them are available makes neovim freeze
[13:41:25] <guido> ham5urg__: use ~/.config/nvim/init.vim
[13:41:34] <phaazon[m]> I guess that call is not asynchronous ☹️
[13:44:30] <ham5urg__> guido, thanks
[13:46:53] <kylo252[m]> what a bummer, this is still not supported: https://github.com/NixOS/nix/issues/1079
[13:47:13] <kylo252[m]> I should look into that portable setup from one of the talks at vimconf
[13:47:40] <ham5urg__> Do you guys use a local language server? Which one?
[13:48:12] <maverun[m]> <phaazon[m]> "it’s so annoying that it does ☹️" <- you want to delete only buffer? or just window?
[13:48:12] <phaazon[m]> I want to close the buffer and leave the window open, yes
[13:48:16] <phaazon[m]> this is the default in emacs (at least Doom Emacs)
[13:48:18] <phaazon[m]> and I like it a lot
[13:48:21] <maverun[m]> oh that i have something like this
[13:48:24] <maverun[m]> no plugin
[13:48:26] <maverun[m]> give me a sec
[13:48:30] <phaazon[m]> I saw a bunch of scripts doing that
[13:48:33] <phaazon[m]> I don’t want that
[13:48:37] <maverun[m]> nah
[13:48:40] <phaazon[m]> I want a `:bdelbetter`
[13:48:41] <phaazon[m]> 😀
[13:48:41] <kylo252[m]> ham5urg__: try: https://github.com/williamboman/nvim-lsp-installer
[13:49:03] <phaazon[m]> like, I had one script doing that back in the days
[13:49:56] <phaazon[m]> basically, I was switching to the « alt buffer »
[13:49:59] <maverun[m]> https://github.com/Maverun/Dotfile/blob/master/.config/nvim/lua/mappings.lua#L45
[13:50:01] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Quit: Leaving)
[13:50:02] <phaazon[m]> and removing the « previous buffer »
[13:50:06] <phaazon[m]> it’s a hack
[13:50:08] <maverun[m]> does that help
[13:50:10] <phaazon[m]> (and it requires to check whether there is an alt buffer, if not, you have to create an empty buffer, etc.)
[13:50:39] <phaazon[m]> yeah, so that’s the trick I was mentioning
[13:50:49] <phaazon[m]> I guess it works but meh meh meh
[13:50:49] <kylo252[m]> phaazon[m]: https://github.com/romgrk/barbar.nvim#bbyevim-for-closing-buffers
[13:51:02] <maverun[m]> lol
[13:52:00] <kylo252[m]> phaazon[m]: you check the vim-script way in https://github.com/moll/vim-bbye
[13:52:48] <phaazon[m]> yeah see
[13:52:54] <phaazon[m]> I don’t want to install plugins for that
[13:53:07] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:53:21] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:53:29] <kylo252[m]> maverun[m]: wtf! 👀
[13:53:29] <kylo252[m]> `map(n,'<leader>q',':bp<bar>sp<bar>bn<bar>bd<CR>')` 
[13:53:39] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[13:53:42] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[13:53:49] <kylo252[m]> phaazon[m]: that's why I said "check" ^
[13:54:11] <maverun[m]> problem with that?
[13:54:12] <phaazon[m]> I’m trying maverun trick
[13:54:14] <phaazon[m]> it doesn’t seem to work
[13:54:28] <maverun[m]> really it work for me? it remove buffer while keeping window
[13:54:38] <maverun[m]> altho only if you have 2+ buffer
[13:54:42] <dmitmel[m]> phaazon[m]: this will break if the buffer is opened in multiple windows (plugins such as bbye repeat the process you've described for every window that has the buffer you are closing), but I get the point, so don't mind me
[13:54:51] <maverun[m]> if it only one buffer, well it will make new files
[13:55:03] <maverun[m]> well at least it work for me
[13:55:04] <phaazon[m]> nah it closes the window
[13:55:05] <maverun[m]> idk
[13:55:12] <kylo252[m]> maverun[m]: I don't think I've seen anything like that before, at least not in a single line. GG
[13:57:40] * maverun[m] uploaded an image: (268KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/rDeTpMcdqFVjNSmtcqlbKAMx/really_it_work_formetho.gif >
[13:57:52] <maverun[m]> as you can see, for me, it didnt close window?
[13:57:59] <maverun[m]> or am  i misunderstood your statement
[13:58:02] <phaazon[m]> that’s cool
[13:58:03] <kylo252[m]> I thought that barbar had implemented the function  in lua, but that doesn't appear to be the case: https://github.com/romgrk/barbar.nvim/blob/6e638309efcad2f308eb9c5eaccf6f62b794bbab/lua/bufferline/state.lua#L579
[13:58:05] <phaazon[m]> but not to me
[13:58:43] <phaazon[m]> also, what is the name of that plugin highlighting the f / F again?
[13:58:50] <phaazon[m]> I remember someone from Twitch using it
[13:58:54] <phaazon[m]> I don’t recall the name
[13:58:54] <dmitmel[m]> sneak?
[13:58:58] <maverun[m]> quick-scope
[13:58:59] <dmitmel[m]> https://github.com/justinmk/vim-sneak/
[13:59:03] <phaazon[m]> ah yes, quick-scope
[13:59:04] <phaazon[m]> thanks
[13:59:08] <maverun[m]> my personal fav
[13:59:12] <maverun[m]> very useful
[13:59:14] <phaazon[m]> it’s interesting
[13:59:22] <phaazon[m]> compared to sneak / Hop you have less mental effort
[13:59:27] <phaazon[m]> (but you have access to less jumps)
[13:59:28] <maverun[m]> yeah
[13:59:36] <maverun[m]> its more of quick action
[13:59:39] <phaazon[m]> I have implemented the f / F in the new Hop version
[13:59:41] <phaazon[m]> it’s fun too
[13:59:42] <maverun[m]> sneak/hop are useful for across line
[13:59:56] <maverun[m]> altho its hard to use them
[14:00:00] <maverun[m]> then again i am not used to it i guess
[14:00:08] <maverun[m]> oh? what did you implemented?
[14:00:19] <maverun[m]> eh i will check
[14:00:33] <maverun[m]> is new hop out or not yet?
[14:00:34] <phaazon[m]> maverun: line-only hops
[14:00:45] <dmitmel[m]> I find sneak pretty easy to use. even for long jumps. apparently two letter combinations get pretty unique in code.
[14:00:49] <maverun[m]> if it useful, might map it to f/t
[14:01:00] <maverun[m]> i do like lightspeed
[14:01:13] <maverun[m]> i am just checking both atm to see pros/cons what work best for me
[14:02:30] <maverun[m]> atm hop is superior for term of operated mode and visual, light speed is useful for Word jump (distance) since you know a letter and you can just type in instantly, altho problem is that there is very high chance of having same 2 letter across so you would have to type 3rd in
[14:02:38] <maverun[m]> which could techy slow down  a bit
[14:03:43] * phaazon[m] uploaded an image: (17KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/siTNhxONUXfZjYZIrOhxRQKh/a.png >
[14:03:44] <phaazon[m]> for instance, cursor at the beginning of the line, typing `f e`
[14:03:47] <phaazon[m]> I get this:
[14:03:50] <maverun[m]> phaazon: i am curious, have you consider combine quick-scope with hop? as in for :Hopword but only for unique letter combinations? (altho it mean you wont get every word but you can deal that with f/t or wb^$)
[14:03:50] * phaazon[m] uploaded an image: (16KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/xusydcvkXOHrbctcyRjnUBgF/b.png >
[14:03:59] <phaazon[m]> same thing with `F`
[14:04:10] <phaazon[m]> and I’m adding the requirement to implement `t` and `T`
[14:04:14] <kylo252[m]> maverun[m]: which one is more suitable for motions? a.k.a text-objects on the fly
[14:04:18] <phaazon[m]> (it’s really simple but I will do that once the redesign is merged to `master`)
[14:04:31] <phaazon[m]> maverun: no, I haven’t
[14:04:34] <phaazon[m]> some people have opened issues about it
[14:04:43] <phaazon[m]> but I’m not sure whether I will do that
[14:04:58] <maverun[m]> as you can see with my gif, i like to keep them highlight since i can look and quick jump
[14:05:06] <phaazon[m]> I understand that
[14:05:12] <maverun[m]> but well you dont have to if you dotn want to
[14:05:13] <phaazon[m]> I find it cute for the first 5 minutes
[14:05:17] <phaazon[m]> then distracting
[14:05:28] <maverun[m]> lol i am used to it, it is not big deal to me
[14:05:46] <maverun[m]> i disable ruler,column,rowline etc
[14:06:06] <phaazon[m]> in theory, it should be doable
[14:06:06] <maverun[m]> so only thing that stand out is statusline and quickscope and uh cursor lol
[14:06:14] <phaazon[m]> I need to provide more functions in Hop for extensions to use
[14:06:23] <phaazon[m]> right now, extensions can register themselves only for `hint_with` basically
[14:06:24] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:06:30] <phaazon[m]> I could probably make something that works asynchronously
[14:06:42] <phaazon[m]> and people could create a hop-quick-scope if they want to
[14:09:26] <phaazon[m]> also, something important to me
[14:09:33] <phaazon[m]> I don’t want Hop to become a « monopole » plugin
[14:09:35] <phaazon[m]> I’m highly against that
[14:09:42] <maverun[m]> Monopole?
[14:10:07] <maverun[m]> ah
[14:10:13] <phaazon[m]> yes, a monopole as in, a plugin that does everything so all other, smaller plugins don’t have to exist anymore
[14:10:17] <clason[m]> as in, highly theoretical and (probably) not existing in nature?
[14:10:18] <phaazon[m]> I see that in lots of community and I hate it
[14:10:32] <phaazon[m]> clason: oh it does
[14:10:39] <clason[m]> sorry, bit of fun
[14:10:41] <maverun[m]> you want something like telescope with flexible extension? 
[14:10:56] <phaazon[m]> I already have extensions in the new Hop API
[14:11:14] <phaazon[m]> my point is that, quick-scope does something a certain way, it has a certain approach, which is not Hop’s one
[14:11:17] <clason[m]> (the English word is "monopoly"; a monopole is a concept from Physics -- as opposed to a dipole, think "magnet")
[14:11:18] <phaazon[m]> so it has the merit to exist and should remain at this place
[14:11:28] <phaazon[m]> ah yeah, monopoly sorry
[14:11:40] <phaazon[m]> telescope is a nice example of monopoly btw
[14:11:46] <phaazon[m]> besides « old Vim plugin »
[14:11:50] <phaazon[m]> there’s really nothing else 
[14:11:58] <phaazon[m]> and if, like me, people are not completely happy with telescope
[14:12:00] <clason[m]> maverun[m]: I think the point was _not_ to become telescope...
[14:12:02] <phaazon[m]> then you’re screwed
[14:12:19] <phaazon[m]> that’s the main reason why I’ve been wanting for so long to have a neovim core « picker interface »
[14:12:23] <phaazon[m]> so that plugins depend on that
[14:12:30] <phaazon[m]> and not on telescope, extending the monopoly
[14:12:30] <maverun[m]> clason[m]: lol i never realized telescope is monopoly, i never play attention to those lol
[14:12:48] <phaazon[m]> well, it is really bad with hindsight
[14:12:59] <phaazon[m]> most « new » plugins provide fuzzy interface by depending on it
[14:13:20] <phaazon[m]> it makes me cringe everytime 
[14:13:20] <maverun[m]> i find that sunjon's plugins useful
[14:13:21] <phaazon[m]> at some point I would probably like to try to write my own
[14:13:21] <phaazon[m]> I won’t be able to use those plugins then, since they depend on telescope directly
[14:13:27] <phaazon[m]> what plugin?
[14:13:39] <maverun[m]> frecency one
[14:14:39] <elianiva[m]> I think there's a proposal for vim.ui.select which anyone can override
[14:14:59] <phaazon[m]> I think there was a PR for a picker API yeah
[14:16:36] <kylo252[m]> <phaazon[m]> "I need to provide more functions..." <- sorry if this is a an upsetting subject for you, but I can see that (additional) text-objects support is available if you wish:
[14:16:36] <kylo252[m]> https://github.com/phaazon/hop.nvim/issues/116
[14:16:36] <kylo252[m]> ++
[14:16:36] <kylo252[m]> https://github.com/IndianBoy42/hop.nvim/issues/6
[14:20:30] <phaazon[m]> it’s not upsetting, the message for the fork is just incredibly rude and offsetting, but that’s another topic
[14:20:47] <phaazon[m]> I will not merge the Treesitter thing, probably never, because I see zero added value for that
[14:20:54] <phaazon[m]> but with the new Hop extension interface
[14:21:01] <phaazon[m]> they can make a Hop extension and everybody’s happy
[14:21:12] <phaazon[m]> I will merge it today to `master`
[14:21:22] <phaazon[m]> some people have tried it and there’s no regression
[14:21:29] <phaazon[m]> (and I’ve been using it for three days now)
[14:21:58] * phaazon[m] uploaded an image: (5KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/UTgqEobaqDgTnKHLoyabkkjC/b.png >
[14:21:59] <phaazon[m]> lol wtf
[14:22:01] <muniter[m]> Yes there is now vim.ui.select and soon vim.ui.input both are supposed to be simple implementations so other plugins override
[14:22:15] <elianiva[m]> phaazon[m]: wat
[14:22:20] <Mathias[m]> <phaazon[m]> "I think there was a PR for a..." <- https://github.com/neovim/neovim/pull/15771 
[14:22:20] <Mathias[m]> (I'd also love to see plugins utilizing that, instead of depending on hardcoded plugins) 
[14:22:50] <muniter[m]> There's also https://github.com/camspiers/snap and fzf
[14:23:24] <phaazon[m]> muniter: nice!
[14:23:27] <phaazon[m]> I’ll have a look at this
[14:24:24] <phaazon[m]> elianiva[m]: yeah it’s bad, I think opening an issue to yell at someone like that is pretty dumb
[14:24:37] <Mathias[m]> <phaazon[m]> "with `rust-analyzer`, going to..." <- the call itself is - but processing the response can be a bottle neck (in part due to utf-16 position conversion to byte indices).
[14:25:48] *** Joins: dagle (dagle@user/dagle)
[14:26:58] <dagle> When using binding C from lua and using enums, is there a preferred way of doing it?
[14:27:57] <muniter[m]> Also phaazon this list is pretty nice to find cool plugins, is usually very up to date and not very long https://github.com/rockerBOO/awesome-neovim
[14:28:11] <kylo252[m]> <phaazon[m]> "but with the new Hop extension..." <- extensibility is always good, but too much of it and you see features getting abandoned
[14:28:11] <kylo252[m]> I feel like it's the same thing you were criticizing about telescope becoming a monopoly, but I digress, thank you for allowing additional integrations!
[14:28:30] <phaazon[m]> muniter: oh yeah, I know that list, it’s nice indeed
[14:28:43] <phaazon[m]> > <@kylo252:matrix.org> extensibility is always good, but too much of it and you see features getting abandoned
[14:28:43] <phaazon[m]> > I feel like it's the same thing you were criticizing about telescope becoming a monopoly, but I digress, thank you for allowing additional integrations!
[14:28:43] <phaazon[m]> this is _exactly_ the point
[14:28:47] <phaazon[m]> I don’t want to bring Treesitter in Hop
[14:28:51] <phaazon[m]> because I don’t want to maintain it
[14:28:55] <phaazon[m]> one-shot contributors don’t get that
[14:29:09] <kylo252[m]> > <@mfussenegger:matrix.org> https://github.com/neovim/neovim/pull/15771... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/04a1805f78ee96584483695bb5d12e53c8863dfd)
[14:29:10] <phaazon[m]> so if someone really wants Treesitter Hop, and that IndianGuy42 seems to want them
[14:29:17] <phaazon[m]> they can now create a Hop extension, and maintain it
[14:29:20] <phaazon[m]> but I will not maintain that 🙂
[14:29:21] <j-k[m]> <kylo252[m]> "I should look into that portable..." <- nix-portable still dumps to ~ but all the nix stuff is within that one `~/.nix-portable` dir and you can change it with the `NP_LOCATION` env var to something else to hide it. Not sure if it fits into any single XDG dir tho, maybe `XDG_DATA_HOME` would be closest?
[14:29:26] <Mathias[m]> > <@kylo252:matrix.org> when is this getting merged? 👀
[14:29:26] <Mathias[m]> > https://github.com/neovim/neovim/pull/15959
[14:29:26] <Mathias[m]> when it's ready
[14:29:31] <phaazon[m]> Hop should remain small and easy to maintain
[14:29:38] <phaazon[m]> adding more and more « specific » needs is the wrong approach
[14:29:57] <phaazon[m]> it’s really easy to make a one-shot contributon for your need and ask the author to maintain it but nah, I won’t
[14:30:02] <kylo252[m]> phaazon[m]: fair enough 👍️
[14:30:47] <phaazon[m]> a point for the Hop extension API is that if a plugin is really interesting, I will merge it upstream
[14:31:08] <phaazon[m]> but it’s completely left to subjectivice criticism; i.e. whether I want to maintain that
[14:31:10] <phaazon[m]> Treesitter, nope
[14:31:16] <phaazon[m]> text objects? probably not
[14:31:25] <Mathias[m]> phaazon[m]: If I understood the tree-sitter use case right, it would require the end_line/end_col stuff I mentioned yesterday to place hints over a region and have the jump create a visual selection from start to end 
[14:31:27] <phaazon[m]> other kind of interesting motions I haven’t thought about, why not
[14:31:39] <maverun[m]> phaazon realized something after looking at folke and others so he want to easier time so he make things simple and should be ease to maintain it, phaazon is smart man :lul:
[14:31:40] <phaazon[m]> Mathias: I don’t think so
[14:31:52] <phaazon[m]> the Treesitter feature is basically tagging places to jump to by scanning the tree
[14:32:05] <clason[m]> I do think that this is interesting, conceptually
[14:32:08] <Mathias[m]> but the extension API only allows to specify the start point?
[14:32:10] <phaazon[m]> maverun: I’ve been knowing that for years
[14:32:23] <phaazon[m]> I’ve been maintaining software in the Haskell and Rust communities for ~10 years now
[14:32:25] <clason[m]> But I don't see a practically useful application
[14:32:42] <clason[m]> (which doesn't mean there isn't any; I just can't think of one right now)
[14:32:48] <phaazon[m]> I know that I want clean and nice API, and not spend my spare time fixing and maintaining stuff no one but a few use
[14:33:07] <phaazon[m]> but using an OSS project and maintaining is are two completely different topics
[14:33:08] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[14:33:14] <phaazon[m]> and correctly maintaining OSS is really hard
[14:33:27] <phaazon[m]> clason: I agree it’s interesting
[14:33:33] <phaazon[m]> but I see zero value, hence why I won’t merge it upstream
[14:33:43] <phaazon[m]> lightspeed has an interesting sentence in their README that I agree with
[14:33:53] <phaazon[m]> jumping around should be visual and not depend on the context
[14:33:55] <kylo252[m]> what's the difference between that fork-integration and `nvim-ts-hint-textobject` tho?
[14:33:55] <kylo252[m]> or more precisely: can `nvim-ts-hint-textobject` become a hop extension theoretically? 
[14:34:04] <clason[m]> well, "zero" is a bit strong, but definitely not enough
[14:34:05] <phaazon[m]> which is a « rule » that is completely violated by text objects or treesitter
[14:34:13] <clason[m]> (unless someone can provide a compelling example)
[14:34:15] <Mathias[m]> > <@kylo252:matrix.org> what's the difference between that fork-integration and `nvim-ts-hint-textobject` tho?
[14:34:15] <Mathias[m]> > or more precisely: can `nvim-ts-hint-textobject` become a hop extension theoretically?
[14:34:15] <Mathias[m]> Given the current extension API I think it can't 
[14:34:26] <phaazon[m]> clason: there are probably interesting properties
[14:34:39] <phaazon[m]> like, it will tag the document in a smarter way so you have less labels, so less keys overall to type
[14:34:51] <phaazon[m]> I already kind of do that with HopChar1 / HopChar2, and even stuff like HopLineStart
[14:34:56] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[14:34:58] <clason[m]> but the biggest argument for not integrating it in hop: you'd be depriving someone of the opportunity create a "tree-hopper" plugin :]
[14:35:13] <phaazon[m]> oh yeah
[14:35:14] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[14:35:27] <phaazon[m]> I hope IndianGuy42 will write that plugin, it would be fun to see :5
[14:35:33] <phaazon[m]> s/:5/🙂/
[14:36:07] <phaazon[m]> I merge all that tonight and announce it on Reddit
[14:36:15] <phaazon[m]> I realize that I never actually announced Hop in the first place
[14:36:34] <kylo252[m]> phaazon[m]: sorry that I'm a bit confused, but which plugin do you mean? 
[14:36:52] <phaazon[m]> a Treesitter integration for Hop
[14:37:05] <phaazon[m]> I’m curious about how (whether if?) people would use that
[14:37:17] <phaazon[m]> because as I said above, I don’t see a good usecase for it
[14:37:36] <Mathias[m]> the same way they use nvim-ts-hint-textobject 
[14:37:47] <phaazon[m]> I don’t know that one, I’ll have a look
[14:37:48] <kylo252[m]> phaazon[m]: I think it's 70% of this: https://github.com/mfussenegger/nvim-ts-hint-textobject
[14:38:23] <phaazon[m]> « credits: hop.nvim »
[14:38:24] <phaazon[m]> wait what
[14:38:28] <phaazon[m]> what is that plugin even doing 😀
[14:38:54] <Mathias[m]> I'd love to turn that into a hop-extension, but as I mentioned, I don't see how it would work with the extension API you've planned 
[14:39:04] <kylo252[m]> awkward
[14:39:42] <maverun[m]> `vnoremap <silent> m :lua require('tsht').nodes()<CR>`
[14:39:42] <maverun[m]> i misread that as shit..>
[14:39:53] <phaazon[m]> Mathias: I still don’t understand why you need range for hopping around
[14:40:00] <phaazon[m]> it seems to be part of a different API
[14:40:57] <phaazon[m]> the highlighting is done only to the « place where you will jump »
[14:41:10] <Mathias[m]> Mathias[m]: Mostly because I ignored all the complicated stuff that hop already deals with. Yes it's two different use cases. One is jumping to a position, the second is selecting a region.  
[14:41:34] <phaazon[m]> so
[14:41:44] <phaazon[m]> in the next features I’m going to add to Hop, I plan to add callbacks
[14:41:50] <phaazon[m]> i.e. the default one just jumps to the target
[14:41:58] <kylo252[m]> > <@maverun:matrix.org> `vnoremap <silent> m :lua require('tsht').nodes()<CR>`
[14:41:58] <kylo252[m]> > i misread that as shit..>
[14:41:58] <kylo252[m]> as someone who hasn't really used these kind of plugins before, I'm still not 100% sure how these mappings are supposed to work.. 
[14:41:59] <phaazon[m]> you could probably highlight the region and jump
[14:42:00] <Mathias[m]> Fine for me if you decide for hop to only support the former, but then the statement that extensions can implement the tree-sitter stuff is not true :) 
[14:42:18] <phaazon[m]> Mathias: I think they can
[14:42:22] <maverun[m]> kylo252[m]: which part, it took ages for me understand but i have long way to go lol
[14:42:24] <phaazon[m]> you still haven’t explained me why you need ranges
[14:42:41] <phaazon[m]> treesitter is a just a tree of nodes
[14:42:56] <phaazon[m]> you can just retreive the buffer position of nodes, and feed Hop that
[14:43:13] <Mathias[m]> yeah but a node has a start and an end
[14:43:32] <phaazon[m]> yes, so jump to the start with `HopTSFunStart` and to the end with ``HopTSFunend`
[14:43:34] <phaazon[m]> s/HopTSFunend/HopTSFunEnd/
[14:43:39] <phaazon[m]> s/yes, so jump to the start with `HopTSFunStart` and to the end with ``HopTSFunend`/yes, so jump to the start with `HopTSFunStart` and to the end with `HopTSFunEnd`/
[14:43:43] <phaazon[m]> I don’t understand the problem
[14:44:53] <Mathias[m]> Choosing to jump to either the start or the end is a different use case. What nvim-ts-hint-textobject does is that the jump selects the region. So you can say `d<opmapping>` to delete the content of the treesitter node
[14:45:14] <kylo252[m]> maverun[m]: my man mathias forgot to add screenkey, so I don't even know what he's pressing in the gif :(
[14:45:15] <kylo252[m]> but I can see that it's kinda like hints for : https://github.com/RRethy/nvim-treesitter-textsubjects
[14:45:33] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[14:45:46] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[14:46:11] <phaazon[m]> Mathias: different need
[14:46:16] <phaazon[m]> Hop is about jumping, not selecting
[14:46:33] <phaazon[m]> you can still jump to the beginning of your node, and then use the callback to select the « ending part »
[14:46:43] <Mathias[m]> yeah as I said - fine for me if you don't want to support it - just pointing out that the extension API doesn't make it possible to write such an extension
[14:46:43] <phaazon[m]> actually, I think that should be a dedicated plugin
[14:46:57] <phaazon[m]> well it does support treesitter
[14:47:03] <phaazon[m]> but it doesn’t support things that it’s not made for 🙂
[14:47:13] <phaazon[m]> Hop is for jumping, not selecting
[14:47:45] <clason[m]> needs `grab.nvim`?
[14:48:20] <phaazon[m]> once I have the callback implemented, you can implement your plugin by:
[14:48:20] <phaazon[m]> 1. Generating the Hop jump targets for the TS nodes.
[14:48:20] <phaazon[m]> 2. Use the callback to highlight the ending part of the node you just jumped to.
[14:48:20] <phaazon[m]> 3. Enter select mode for this region
[14:48:41] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Client Quit)
[14:48:49] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[14:48:54] <kylo252[m]> clason[m]: you made me search..... https://github.com/search?q=grab.nvim 🤦
[14:50:55] *** Quits: ixil (~ixil@mpp-cp1-natpool-3-194.ethz.ch) (Remote host closed the connection)
[14:56:48] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:01:04] <sunjonSenghanBri> I have a thing to show
[15:01:06] <sunjonSenghanBri> hop competitor!!
[15:01:15] <sunjonSenghanBri> "glide"! :]
[15:01:17] <sunjonSenghanBri> https://streamable.com/z6lx37
[15:01:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:01:58] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:02:33] <sunjonSenghanBri> it doesn't really have a practical use, but it's cute - no?
[15:03:03] <maverun[m]> lol i supposed, you should have add fruit in and let it grow xD
[15:03:10] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:03:42] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:04:01] <Mathias[m]> Mind if I steal/use the treehopper name?
[15:04:19] <clason[m]> go for it!
[15:08:14] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Quit: Leaving)
[15:10:25] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:12:05] <muniter[m]> <sunjonSenghanBri> "it doesn't really have a..." <- Lul, it really looks like the snake 🐍. Game 
[15:13:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:17:30] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Quit: Leaving)
[15:19:32] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:20:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:21:58] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Client Quit)
[15:22:08] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:24:48] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.3)
[15:24:59] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Client Quit)
[15:25:15] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:26:27] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:34:22] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Ping timeout: 260 seconds)
[15:35:49] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:bcf5:4562:7bcf:5eb9) (Ping timeout: 268 seconds)
[15:44:57] *** Quits: Sircle (~Sircle@88.246.75.14) (Quit: Client closed)
[15:45:06] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 260 seconds)
[15:45:49] *** Joins: Sircle (~Sircle@88.246.75.14)
[15:50:46] *** Joins: M616b2fAlexejKow (~M616b2f-5@2001:470:69fc:105::1:29cb)
[15:50:46] <M616b2fAlexejKow> [![image.png](https://files.gitter.im/5506b96e15522ed4b3dd5317/kTiI/thumb/image.png)](https://files.gitter.im/5506b96e15522ed4b3dd5317/kTiI/image.png)
[15:50:46] <M616b2fAlexejKow> [![image.png](https://files.gitter.im/5506b96e15522ed4b3dd5317/qKUS/thumb/image.png)](https://files.gitter.im/5506b96e15522ed4b3dd5317/qKUS/image.png)
[15:50:50] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:52:01] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:e804:b9cd:4633:750a)
[15:52:21] <windwp[m]> Mathias:  i try another plugin but your plugin https://github.com/mfussenegger/nvim-ts-hint-textobject is very easy to use. 
[15:52:33] <M616b2fAlexejKow> Hi folks,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/515a5c9e1e8439b73c656a0d043e5f389135ae21)
[15:52:41] <M616b2fAlexejKow> * Hi folks,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/097f7e7f8d9faea4a0b114911ef436d39560e18f)
[15:52:52] <M616b2fAlexejKow> * Hi folks,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/b34f12543864ff438d54a41d0233304cf5648f62)
[15:53:00] *** Joins: guido (~guido@host-79-13-249-223.retail.telecomitalia.it)
[15:53:53] <M616b2fAlexejKow> * Hi folks,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/603a4808093d649c3a8fe46d06fa555829c35412)
[15:54:12] <M616b2fAlexejKow> * Hi folks,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/368b9ee2f1c5513182d60a16cf3861abe392d77b)
[15:55:00] <clason[m]> You're not using the right function
[15:55:17] <clason[m]> !h vim.diagnostic.show()
[15:55:18] <nvim-bot[m]> Links to referenced help pages:
[15:55:18] <nvim-bot[m]> * [`vim.diagnostic.show()`](https://neovim.io/doc/user/diagnostic.html#vim.diagnostic.show()) in *diagnostic.txt*
[15:55:47] <windwp[m]> <sunjonSenghanBri> "https://streamable.com/z6lx37" <- i think you can make a better snake :)
[15:55:54] <clason[m]> !h vim.diagnostic.open_float()
[15:56:23] <maverun[m]> f?
[15:57:13] <M616b2fAlexejKow> [![image.png](https://files.gitter.im/5506b96e15522ed4b3dd5317/gxW5/thumb/image.png)](https://files.gitter.im/5506b96e15522ed4b3dd5317/gxW5/image.png)
[15:57:15] <M616b2fAlexejKow> but depricated.txt shows:
[15:57:26] <M616b2fAlexejKow> do i read it wrong o.O
[15:57:52] <clason[m]> `get_line_diagnostics` != `show_line_diagnostics`
[15:58:09] <windwp[m]> hi apostle maverun :)
[15:58:46] <M616b2fAlexejKow> @clason:matrix.org thank you you so damn right, totally overseen it 😃
[15:58:56] <M616b2fAlexejKow> s/@clason:matrix.org thank you you so damn right, totally overseen it 😃/@clason:matrix.org thank you, you so damn right, totally overseen it :D/
[16:01:23] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:04:06] *** Quits: Sircle (~Sircle@88.246.75.14) (Quit: Client closed)
[16:06:46] <okamis> Hello how do I map keypad buttons? e.g. kp_home button?
[16:13:34] *** Quits: Kesava (~Kesava@user/kesava) (Ping timeout: 260 seconds)
[16:20:23] <dundargoc[m]> !h map
[16:20:24] <nvim-bot[m]> Links to referenced help pages:
[16:20:24] <nvim-bot[m]> * [`map`](https://neovim.io/doc/user/map.html#map) in *map.txt*
[16:21:52] <clason[m]> !h <Char>
[16:21:53] <nvim-bot[m]> Links to referenced help pages:
[16:21:53] <nvim-bot[m]> * [`<Char>`](https://neovim.io/doc/user/map.html#<Char>) in *map.txt*
[16:22:40] <clason[m]> !h keycodes
[16:22:41] <nvim-bot[m]> Links to referenced help pages:
[16:22:41] <nvim-bot[m]> * [`keycodes`](https://neovim.io/doc/user/intro.html#keycodes) in *intro.txt*
[16:23:11] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[16:24:00] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[16:29:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:30:01] *** Joins: ixil (~ixil@mpp-cp1-natpool-3-016.ethz.ch)
[16:31:52] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:32:25] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:33:09] *** Joins: Kesava (~Kesava@user/kesava)
[16:42:46] *** Quits: guido (~guido@host-79-13-249-223.retail.telecomitalia.it) (Read error: Connection reset by peer)
[16:45:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:46:18] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:48:46] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:48:52] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:56:30] *** Joins: meccine (uid523308@id-523308.helmsley.irccloud.com)
[16:57:30] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 260 seconds)
[17:06:21] *** Joins: engest (~engest@50.126.101.161)
[17:06:46] <low-key> Any neuron.nvim users here? What do you use to access your notes on mobile?
[17:07:25] <low-key> Obsidian isn't bad but it uses file names for identifying notes instead of H1 the way that Neuron does and that makes the graph view useless
[17:15:26] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[17:20:53] <okamis> After some experimenting and using <C-K> pressing the nr 4 on the numpad with numlock off gives me <Left>, but I was expecting <kLeft>, is it neovim thats wrong or something else?
[17:27:17] <clason[m]> Not likely; such things are usually a problem with the terminal not distinguishing these keys.
[17:33:14] <p00f[m]> is there a better way of doing this https://github.com/arkav/lualine-lsp-progress/pull/9
[17:33:34] <p00f[m]> p00f[m]: clason: 
[17:33:50] *** Quits: bubbler (~bubbler@2a02:810d:8cc0:3fa0::b470) (Ping timeout: 260 seconds)
[17:37:45] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[17:38:05] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[17:39:08] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[17:39:44] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:42:24] *** Parts: Jacob[m]1234 (~jgawlikma@2001:470:69fc:105::1:2129) ()
[17:45:39] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:47:01] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Client Quit)
[17:47:10] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:47:28] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[17:47:43] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:48:24] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Client Quit)
[17:48:40] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:48:41] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[17:50:14] *** Joins: aberrant (~aberrant@c-69-251-113-165.hsd1.va.comcast.net)
[17:50:16] <aberrant> hi all
[17:50:39] <aberrant> I'm getting strange errors this morning after upgrading neovim and plugins:
[17:50:40] <aberrant>     3 ========================================================================                                               
[17:50:44] <aberrant>     4   - ERROR: Failed to run healthcheck for "lsp" plugin. Exception:                                                      
[17:50:47] <aberrant>     5     function health#check[24]..health#lsp#check, line 2                                                                
[17:50:50] <aberrant>     6     Vim(lua):E5108: Error executing lua [string ":lua"]:1: attempt to call field 'check_health' (a nil value)         
[17:52:15] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[17:56:57] <gpanders[m]1> aberrant: how are you install Neovim?
[17:59:28] *** Parts: ham5urg__ (~ham5urg@149.233.139.246.dynamic-pppoe.dt.ipv4.wtnet.de) (Leaving)
[17:59:39] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:02:16] <muniter[m]> That's an issue with orphaned runtime files 
[18:03:21] *** Joins: bubbler (~bubbler@2a02:810d:8cc0:3fa0::b470)
[18:03:56] <muniter[m]> aberrant @aberrant:libera.chat  https://github.com/neovim/neovim/pull/15914#issuecomment-957348506
[18:04:00] *** Joins: rgrinberg (~textual@190.113.111.74)
[18:05:00] <clason[m]> make install only installs, it does not remove files
[18:05:07] *** Joins: Guest5320 (~Guest53@152.67.207.99)
[18:05:14] <clason[m]> As the name indicates :D
[18:08:17] <phaazon[m]> is there anyone here working on `nvim-tree-lua`?
[18:08:29] <phaazon[m]> I opened a feature request and was wondering whether there was some people available to discuss it 🙂
[18:12:27] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Ping timeout: 268 seconds)
[18:14:55] <aberrant> gpanders[m]1: I build from source
[18:15:22] <gpanders[m]1> then see muniter and clason's responses
[18:15:26] <aberrant> muniter[m]: ah, that's it exactly. Thank you.
[18:15:35] <aberrant> Thanks, all.
[18:18:55] <aberrant> resolved!
[18:21:00] *** Quits: eau (~chat@user/eau) (Quit: bleh!)
[18:21:57] <hgc> Neovim is good!
[18:22:25] <aberrant> indeed.
[18:23:10] <aberrant> I wonder how much other cruft is hanging out in my install tree though. Hm.
[18:27:35] <okamis> clason[m],  using xev its recognizesed as kp_left, does that imply that its not a terminal issue?
[18:28:04] *** Joins: eau (~chat@user/eau)
[18:32:59] <jamessan[m]> The terminal has different settings when it's running a full screen app like nvim -- alt screen, application keypad mode, etc. Those can change the key codes the terminal sends
[18:34:58] *** Quits: zro (~zro@user/zro) (Ping timeout: 260 seconds)
[18:36:19] <okamis> im out of my depth here and I understand its no longer a neovim question, but how do I make it send kp_left etc to neovim?
[18:38:51] *** Joins: zro (~zro@user/zro)
[18:44:31] *** Quits: zro (~zro@user/zro) (Ping timeout: 268 seconds)
[18:46:55] <aphysically> I should set up a debugger
[18:48:45] <aphysically> oh no ~4-5 more keys to decide how to bind
[18:51:13] *** Quits: krisk (~krisk@user/krisk) (Quit: ZNC 1.8.2 - https://znc.in)
[18:52:46] *** Joins: krisk (~krisk@user/krisk)
[18:55:23] *** Quits: Guest5320 (~Guest53@152.67.207.99) (Quit: Client closed)
[18:56:19] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[19:03:46] *** Joins: Sircle (~Sircle@88.246.75.14)
[19:03:51] <wastrel> use the numpad
[19:04:47] *** Quits: sumner (m-35dsa2@li978-161.members.linode.com) (Remote host closed the connection)
[19:05:51] *** Joins: sumner (m-35dsa2@li978-161.members.linode.com)
[19:06:07] *** Quits: meccine (uid523308@id-523308.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:06:56] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[19:10:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:10:16] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[19:10:29] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[19:10:33] *** Joins: santiago (~santiago@200.82.204.142)
[19:10:53] *** Quits: santiago (~santiago@200.82.204.142) (Remote host closed the connection)
[19:11:12] *** Joins: yurishenko (~yurishenk@pool-108-31-230-136.washdc.fios.verizon.net)
[19:14:48] <okamis> The numpad isnt working correctly, pressing "4" on the numpad gives me <left> which is the same as pressing the leftarrow. I would prefer if pressing "4" would give me <kLeft>
[19:26:08] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:28:01] *** Quits: utraciss (~utraciss@118.100.91.150) (Quit: %quit from znc%)
[19:29:03] <mjlbach[m]> phaazon: all requests are “async”
[19:29:12] <mjlbach[m]> The handlers themselves are not
[19:29:33] <mjlbach[m]> You can file a bug report with the exact reproduction and I’ll look at it
[19:29:44] <phaazon[m]> I wish I had a repro
[19:29:45] <mjlbach[m]> References should be fast
[19:29:58] <phaazon[m]> it does it with « jump to definition » too
[19:30:08] *** Quits: GuilhermeLima[m] (~limaamatr@2001:470:69fc:105::e2c6) (Quit: You have been kicked for being idle)
[19:30:50] <Mathias[m]> mjlbach[m]: If there are enough it can take a bit to load all of them. But the code is already pretty optimized 
[19:31:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:31:31] <mjlbach[m]> Hmm
[19:31:39] <mjlbach[m]> Maybe you’re jumping into a new crate
[19:32:06] <mjlbach[m]> And lspconfig is launching a new server
[19:32:39] <Mathias[m]> https://github.com/neovim/neovim/blob/7f4b7320f63eee37841b9b7608495a3f6f9d2fb7/runtime/lua/vim/lsp/util.lua#L1644 that's part of the problem
[19:33:13] <Mathias[m]> and folke already optimized it
[19:33:33] <mjlbach[m]> Yeah I was thinking of that PR
[19:33:47] <mjlbach[m]> Which is why I’m confused there would be any lag
[19:33:51] <Mathias[m]> There is one issue in the language server protocol repo that the server could provide the text already
[19:33:58] <mjlbach[m]> It was tested with large reference counts
[19:35:39] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[19:35:44] <[-_-]> Hello
[19:35:48] <[-_-]> oh..sorry
[19:36:33] <mjlbach[m]> phaazon: if you comment out getting the lines can you still repro?
[19:37:05] *** Joins: zro (~zro@user/zro)
[19:42:35] *** Quits: sumner (m-35dsa2@li978-161.members.linode.com) (Remote host closed the connection)
[19:43:49] *** Joins: sumner (m-35dsa2@li978-161.members.linode.com)
[19:46:06] <mjlbach[m]> anyways if you can do some additional digging that would be great, if you get a repro case we can probably fix it
[19:58:13] *** Joins: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[19:59:01] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Read error: No route to host)
[20:00:17] *** Quits: williamboman (~williambo@pluto.redwill.se) (Quit: The Lounge - https://thelounge.chat)
[20:01:02] *** Joins: williamboman (~williambo@pluto.redwill.se)
[20:01:08] *** Joins: guido (~guido@host-79-13-249-223.retail.telecomitalia.it)
[20:05:41] <phaazon[m]> I think it might be related to when a buffer is changed but not saved
[20:05:42] <phaazon[m]> or something like that
[20:05:43] <phaazon[m]> it’s weird, I don’t know ☹️
[20:06:33] <mjlbach[m]> Ok, well next time you notice it try to remember what you did and then file an issue about it :) 
[20:06:54] <ahmed-rezk-devAh> Hey guys. I need help I can't get vsnip to work with nvim-cmp? any help?
[20:09:55] *** Joins: Ayka (~Thunderbi@59.78.35.233)
[20:10:18] <ahmed-rezk-devAh> This my file.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/486f495f7a7e7667ae25462c66ad18b456ecdd3e)
[20:10:34] <ahmed-rezk-devAh> s/`-- Setup nvim-cmp/`/
[20:11:04] *** Joins: ayhomaru[m] (~ayhomarum@2001:470:69fc:105::e26c)
[20:11:04] <ayhomaru[m]> ahmed-rezk-devAh: Sorry no advice here, but I feel you. I abandoned nvim-cmp + luasnip and went for nvim-coq where it works almost out of the box.
[20:11:39] <ayhomaru[m]> Compared to nvim-compe the configuration for nvim-cmp is much more difficult (especially for Lua noobs like me).
[20:12:07] <mjlbach[m]> What do you need to configure in nvim-cmp? 
[20:12:12] <ahmed-rezk-devAh> Me also 😂
[20:12:33] <mjlbach[m]> I thought the main things were yes/no snippet provider, mappings, and sources
[20:13:09] <mjlbach[m]> coq is nice though, the snippet repl is very cool
[20:13:13] <mjlbach[m]> and ms-jpq is great :) 
[20:13:31] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:13:38] *** Quits: Ayka (~Thunderbi@59.78.35.233) (Client Quit)
[20:13:39] <ahmed-rezk-devAh> It's taking time to show the menu plus I can't get it to work with vsnip
[20:14:20] <ayhomaru[m]> I found this article this morning, quite helpful, and the guy posts his dotfiles for nvim-cmp. https://alpha2phi.medium.com/new-neovim-completion-plugins-you-should-try-b5e1a3661623
[20:15:14] <mjlbach[m]> not very minimal but about what I would expect
[20:16:00] <ahmed-rezk-devAh> It takes more than it to me. I have to wait for it
[20:16:27] <ahmed-rezk-devAh> @ayhomaru:matrix.org Thank you, man. I will take a look at it. 
[20:16:46] <ahmed-rezk-devAh> @atrius:matrix.org Could you please share your setup for cmp?
[20:18:39] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[20:25:34] <phaazon[m]> mjlbach: I had a fun idea for plugin stability yesterday and was wondering whether there is _any_ SemVer effort on-going in the community or not, and if not, then I will have something to present ~soon
[20:25:40] <DavidHazel[m]> ahmed-rezk-dev (Ahmed Rezk): the core devs put this together as a minimal example. See the bottom for cmp. https://github.com/nvim-lua/kickstart.nvim/blob/master/init.lua
[20:28:04] *** Parts: [-_-] (~fractal@user/---/x-1675478) (WeeChat 3.3)
[20:31:38] <phaazon[m]> I actually think I’m going to write a blog article about it mjlbach because I think my idea is pretty good
[20:31:53] <mjlbach[m]> cool cool, look forward to reading it
[20:32:12] <mjlbach[m]> sometimes I feel like people just generically throw around semver like it's a panacea
[20:32:24] <ahmed-rezk-devAh> It's working. But my problem that I can't get it work with vsnip
[20:32:26] <phaazon[m]> the idea is that it would require adoption by plugin authors but I will write some tooling though
[20:32:43] <mjlbach[m]> e.g for lspconfig semver doesn't really make sense but was requested, as it's not guaranteed to work with older language servers since we don't lock to server versions
[20:33:20] <ahmed-rezk-devAh> I used to use vsnip with compe. Is it still a good option?
[20:39:41] <ii14[m]> I'm still using compe
[20:39:54] <ii14[m]> It does everything I need
[20:40:27] <aberrant> man, my setup is awesome.
[20:40:34] * aphysically playing with nvim-dap now today
[20:41:27] <aberrant> but - should I be using ftplugin for lsp or other stuff? Right now I've got everything in lua files that are being sourced on startup.
[20:41:50] <mjlbach[m]> ii14[m]: it will break when you upgrade to the latest neovim :/ 
[20:42:00] <mjlbach[m]> aberrant: please don't haha
[20:42:02] <aberrant> I have some stuff in ftplugin - things like tabs vs spaces, tabstop, etc.
[20:42:13] <aberrant> mjlbach: please don't what?
[20:42:14] <ii14[m]> mjlbach: I upgraded this week, still works
[20:42:22] <mjlbach[m]> ii14: to 0.6?
[20:42:35] <ii14[m]> mjlbach: to the latest master
[20:42:54] <mjlbach[m]> hmm some things from nvim-compe should be incompatible... unless compatibility shims were added
[20:43:38] <ii14[m]> I'm on this commit: https://github.com/neovim/neovim/commit/f75d00456
[20:43:49] <gpanders[m]1> aberrant: I don't know what you mean by "for lsp", but ftplugins are a great resource and you should definitely take advantage of them
[20:44:07] <aberrant> gpanders: should I move my per-language lsp configs into ftplugin?
[20:44:08] <aphysically> I guess the main thing I need to figure out is running programs with arguments and how to do the entry point for python programs
[20:44:42] <mjlbach[m]> aberrant: no because lspconfig will break
[20:45:02] <mjlbach[m]> (at least without workarounds)
[20:45:14] <aberrant> what goes into ftplugin then?
[20:45:19] <aberrant> I want to do the right thing
[20:45:36] <gpanders[m]1> if you're using lspconfig, then nothing LSP-related
[20:45:40] <aberrant> ok
[20:45:44] <aberrant> tabs/spaces stuff?
[20:45:46] <gpanders[m]1> but you can do things like set the indent width, whether or not to use tabs, etc
[20:45:52] <aberrant> yeah, that's there
[20:46:04] <aberrant> can ftplugins be lua?
[20:46:05] <gpanders[m]1> comment strings, all kinds of things
[20:46:22] <gpanders[m]1> yep
[20:46:28] <aberrant> I moved everything to lua from vimscript
[20:46:54] <aberrant> as far as I understand, ftplugins are loaded on demand whenever a file of a given type is opened. Is that right?
[20:47:09] <gpanders[m]1> yes
[20:47:27] <aberrant> thank you.
[20:47:29] <ii14[m]> aberrant: the way I do it is I have a lsp.vim file and I trigger it on on_attach
[20:47:37] <aberrant> hm
[20:47:46] <aberrant> I have an lsp.vim file as well
[20:47:54] <aberrant> well, lsp.lua
[20:48:00] <aberrant> it's loaded by init.lua
[20:48:06] <mjlbach[m]> essentially lspconfig creates an "in-memory" filetype plugin (everything is executed in one big filetype autocommand per setup)
[20:48:10] <mjlbach[m]> * autocommand per `setup, * setup`)
[20:48:12] <ii14[m]> Yeah, but it's buffer local settings, like ftplugin
[20:48:36] <gpanders[m]1> aberrant: you can defer loading lspconfig until a ftplugin or FileType autocommand, but it requires a few extra steps (as mjlbach mentioned)
[20:48:40] <gpanders[m]1> that is what I do :)
[20:48:46] <ii14[m]> https://github.com/ii14/dotfiles/blob/master/.config/nvim/lsp.vim
[20:48:48] <aberrant> My startup time is not horrible.
[20:49:02] <mjlbach[m]> lspconfig doesn't really affect your startup time
[20:49:04] <gpanders[m]1> the no need to over optimize
[20:49:08] <gpanders[m]1> unless you want to for funsies
[20:49:21] <mjlbach[m]> the most expensive thing is calling vim.lsp which loads the entire built-in client, which takes around 1-10 ms depending on your hardware
[20:49:22] <aberrant> something in lspconfig definitely affected my startup time. I had to comment something out (can't remember what)
[20:49:31] <aberrant> one sec, lemme see
[20:50:07] <aberrant> 124 ms
[20:50:08] <aberrant> total
[20:50:15] <ii14[m]> vim.lsp is loaded when you access it for the first time?
[20:50:17] <clason[m]> just install https://github.com/lewis6991/impatient.nvim and never worry about it again
[20:50:27] <aberrant> 012.614  000.094: init default autocommands
[20:50:27] <aberrant> 073.757  061.036  061.036: sourcing /home/seth/.config/nvim/init.lua
[20:50:32] <clason[m]> that's good enough
[20:50:42] <ii14[m]> impatient.nvim and filetype.nvim are great
[20:51:05] <mjlbach[m]> ii14[m]: Well it invokes a bunch of 'requires'
[20:51:25] <mjlbach[m]> impatient/planned runtime improvements in core will mitigate this almost entirely
[20:51:39] <ii14[m]> I just thought vim.lsp was required automatically on startup
[20:51:43] <mjlbach[m]> lastly there are "lazy" requires which may get added to core at some point
[20:52:41] <aberrant> I'm not too bothered by 124ms startup
[20:52:53] <samurai_geliotro> https://github.com/iamcco/markdown-preview.nvim can you tell me why it's plugin doesn't work? i use vim-plug. I install plugin, enter :call mkdp#util#install(), but preview commands doesn't work
[20:56:05] <aphysically> hmm launching the __main__ as file in nvim-dap doesn't seem to make it happy
[20:56:14] <aphysically> for python
[20:58:54] <mjlbach[m]> For reference my startup time is about 65 ms with no optimization (filetype.nvim, impatient.nvim, etc., lazy loading, etc)
[20:58:57] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 268 seconds)
[20:59:14] <ii14[m]> Just having impatient.nvim + filetype.nvim shaves off 30-50ms for me
[20:59:29] <mjlbach[m]> I will wait until these are in core :) 
[20:59:54] <aberrant> me too
[21:01:35] <the-repo-club[m]> anyone know how to have startify work with lua over vim lang?
[21:02:28] <the-repo-club[m]> i can get the built in types added but as soon as i try functions it breaks ☹️
[21:02:28] <p00f[m]> the-repo-club[m]: like normal? one minute i'll share my config
[21:02:57] <the-repo-club[m]> p00f: this is what i have... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3163dd6a5e5441959b24aa121e9655a24e38c32b)
[21:03:09] <the-repo-club[m]> but i cant get the functions to work
[21:03:21] <Mathias[m]> <aphysically> "hmm launching the __main__ as..." <- works for me
[21:03:40] <p00f[m]> > <@the-repo-club:kde.org> p00f: this is what i have... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/07fbe7e40e19fdd58359c1b17c64e5d81c40f116)
[21:04:01] <aphysically> yeah it complains something about a directory Mathias[m].. trying to figure it out. (it's a separate __main__.py to be clear)
[21:04:23] <the-repo-club[m]> p00f[m]: i have this but i cant get it to trigger... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/24a404d8f1756051731084f83dbd179656fb3dc9)
[21:05:14] <p00f[m]> > <@the-repo-club:kde.org> i have this but i cant get it to trigger... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/01a77cd7ba591cc0cccf51e41646a465e4eeba10)
[21:05:15] <ii14[m]> use `local function` and then `{ type = lsCwd, ...`
[21:05:27] <p00f[m]> yeah no brackets sorry
[21:06:12] <ii14[m]> lua function can be assigned to vim script variables, right?
[21:06:19] <ii14[m]> functions*
[21:06:21] <aphysically> maybe the better way to do this is to set up a listener
[21:06:40] <the-repo-club[m]> { type = lsCwd,                         header = {'     Current Directory: '}},
[21:06:43] <the-repo-club[m]> so like that?
[21:06:57] <p00f[m]> yea
[21:07:10] * the-repo-club[m] uploaded an image: (64KiB) < https://libera.ems.host/_matrix/media/r0/download/kde.org/d124829400de3548c68776a336e0842c02a44710/image.png >
[21:07:17] <the-repo-club[m]> ya it doesnt show up
[21:07:30] <the-repo-club[m]> it should show right after the bookmarks
[21:07:49] <p00f[m]> it works for me 🤷
[21:08:11] <p00f[m]> https://p.ip.fi/3wyu here is my startify config
[21:08:11] <the-repo-club[m]> can you show me your config as an example?
[21:08:11] <ii14[m]> maybe os.execute returns a string or something like that
[21:08:20] <ii14[m]> and the plugin expects a list or whatever
[21:08:21] <the-repo-club[m]> ty
[21:09:24] <the-repo-club[m]> p00f: cheerts youyr _1_ function worked for it 🙂
[21:09:36] <the-repo-club[m]> s/p00f: cheerts youyr _1_ function worked for it 🙂/p00f: cheerts your `_1_` function worked for it 🙂/
[21:09:44] <the-repo-club[m]> s/p00f: cheerts youyr _1_ function worked for it 🙂/p00f: cheers your `_1_` function worked for it 🙂/
[21:09:44] <p00f[m]> ii14[m]: yeah you have to use vim.fn.systemlist
[21:10:08] <Shadman[m]> clason
[21:10:17] <ii14[m]> wonders of dynamic typing
[21:10:41] *** Joins: bwot (~bwot@c80-217-2-142.bredband.tele2.se)
[21:10:43] <p00f[m]> the-repo-club[m]: that one is for sessions though?
[21:10:43] <the-repo-club[m]> ❤️ thanks a ton
[21:12:13] *** Quits: guido (~guido@host-79-13-249-223.retail.telecomitalia.it) (Read error: Connection reset by peer)
[21:12:32] *** Quits: towb (~bwot@user/towb) (Ping timeout: 268 seconds)
[21:12:40] <ii14[m]> at least it works, so good enough :)
[21:12:47] <the-repo-club[m]> local function lsCwd()
[21:12:47] <the-repo-club[m]>   local files = vim.fn.systemlist('getfolders -a /mnt/500GB/.aur/')
[21:12:47] <the-repo-club[m]>   return vim.fn.map(files, "{'line': v:val, 'path': v:val}")
[21:12:47] <the-repo-club[m]> end
[21:12:50] <the-repo-club[m]> that worked
[21:19:31] * the-repo-club[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/1de4b70751b464cd49cfee61f132316e211d7374
[21:19:35] <the-repo-club[m]> thanks a ton for the help 🙂
[21:19:53] <ahmed-rezk-devAh> I found this video about nvim-cmp. It looks better than I thought.
[21:19:53] <ahmed-rezk-devAh> https://www.youtube.com/watch?v=1Tzv3vlxpEg&list=PLhoH5vyxr6Qo9vOYrcqyGEC21XtiJhOdc&index=21
[21:23:11] *** Joins: arkurious (~arkurious@user/arkurious)
[21:24:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:25:08] *** Quits: w0ng (~w0ng@185.218.127.39) (Ping timeout: 260 seconds)
[21:25:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:28:19] *** Joins: iqqdq (~iqqdq@pool-108-26-241-146.bstnma.fios.verizon.net)
[21:28:58] <iqqdq> whats the advantage of `bat` over `nvim -R`
[21:29:33] <p00f[m]> > <@the-repo-club:kde.org> ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/6c01e06ce0668e11c2ce8a2095309ca1edb68069)
[21:30:34] <ii14[m]> faster probably
[21:30:34] <kylo252[m]> > <@ahmed-rezk-dev-5ea22baed73408ce4fe18274:gitter.im> I found this video about nvim-cmp. It looks better than I thought.
[21:30:34] <kylo252[m]> > https://www.youtube.com/watch?v=1Tzv3vlxpEg&list=PLhoH5vyxr6Qo9vOYrcqyGEC21XtiJhOdc&index=21
[21:30:34] <kylo252[m]> you should probably check this https://www.youtube.com/watch?v=_DnmphIwnjo instead, since a few things might've changed since chris that video
[21:31:07] <p00f[m]> ii14[m]: way faster lol. 
[21:31:09] <p00f[m]> noticeable
[21:31:13] <ii14[m]> just use less or cat
[21:31:20] *** Joins: guido (~guido@host-79-13-249-223.retail.telecomitalia.it)
[21:31:42] <kylo252[m]> ii14[m]: it's not even a competition..
[21:40:03] *** Quits: iqqdq (~iqqdq@pool-108-26-241-146.bstnma.fios.verizon.net) (Quit: Client closed)
[21:43:13] <aphysically> hmmm I wonder if I can get horizontal scroll working with my traackpad
[21:43:29] <aphysically> normally I just use wrap but thees debug windows could use some horizontal scrolling
[21:44:16] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Ping timeout: 245 seconds)
[21:44:20] *** Quits: guido (~guido@host-79-13-249-223.retail.telecomitalia.it) (Read error: Connection reset by peer)
[21:48:06] <aberrant> ls
[21:48:09] <aberrant> oops, sorry
[21:49:55] <aphysically> apparently alacritty/kitty don't report the horizontal scroll events to vim? :(
[21:53:04] <ii14[m]> yeah, no horizontal scroll at all
[21:53:41] <aphysically> well, not the end of the world
[21:57:11] *** Joins: guido (~guido@host-79-13-249-223.retail.telecomitalia.it)
[21:57:32] <aphysically> so far the only real downside from going vim->nvim I've found is no mouse hover support which was nice for LSPs to use in vim
[21:58:13] <aphysically> I actually tried for far too long to make the neovim LSP hover work with the vim balloonevalterm yesterday :D
[21:58:20] *** Quits: bwot (~bwot@c80-217-2-142.bredband.tele2.se) (Quit: WeeChat 3.3)
[21:58:36] *** Joins: towb (~bwot@user/towb)
[21:59:13] <mjlbach[m]> if someone adds support for mouse hover events I will document how to use it with the built-in client :) 
[21:59:25] <ii14[m]> I didn't even know terminals can do that. do you have to enable it with an escape sequence or something?
[22:02:11] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[22:05:12] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[22:05:46] <ii14[m]> it's this I guess https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Any-event-tracking
[22:08:35] <phaazon[m]> https://www.reddit.com/r/neovim/comments/qlaxyw/official_announcement_hop_v100/ 🥳
[22:11:53] <mjlbach[m]> congrats!
[22:12:13] <phaazon[m]> thank you
[22:12:24] <aphysically> yeah it's nice for LSP in particular and also I guess debug mode hovering
[22:13:00] <phaazon[m]> now, time for my other project 😀
[22:13:37] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:17:54] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 268 seconds)
[22:26:30] <phaazon[m]> wbthomason: do you have a way to list all the currently installed packages via the API of packer?
[22:26:38] <phaazon[m]> I don’t see it in `:h packer-api`
[22:27:56] <phaazon[m]> ah, `packer_plugins`?
[22:28:03] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[22:28:09] <phaazon[m]> oh yes.
[22:28:35] <wbthomason[m]> @phaazon if you want a “nice” display, look at `packer.status`/`PackerStatus`
[22:28:44] <wbthomason[m]> Otherwise you can use the `packer_plugins` table, yeah
[22:28:44] <phaazon[m]> I don’t want a nice display 😛
[22:28:49] <phaazon[m]> I’m writing another plugin that requires a list of plugins
[22:28:53] <phaazon[m]> so yeah that should do it
[22:28:55] <phaazon[m]> thanks :
[22:28:56] <phaazon[m]>  * thanks 🙂
[22:29:58] <wbthomason[m]> The API for introspecting/modifying the set of managed plugins should be improving “soon” (right after I finish work on #402), too, in part to provide some capabilities for plugins adding their own requirements that @mjlbach and I briefly discussed
[22:30:02] <mjlbach[m]> you should probably give the context for your plugin haha
[22:30:09] <phaazon[m]> nope, secret
[22:30:14] <phaazon[m]> I will talk about that if I can make what I want
[22:30:20] <mjlbach[m]> wbthomason: this is extremely related to what we were talking about
[22:30:40] <mjlbach[m]> afaik phaazon is still working on a declarative configuration schema for neovim, which would bootstrap itself and the dependent plugins via packer
[22:30:50] <mjlbach[m]> > nope, secret
[22:30:50] <mjlbach[m]> whoops
[22:30:57] <mjlbach[m]>  * > 
[22:30:57] <mjlbach[m]> nope, secret
[22:30:57] <phaazon[m]> oh yeah that’s `poesie.nvim`
[22:30:57] <mjlbach[m]> hoops
[22:30:58] <phaazon[m]> it’s something else
[22:31:06] <mjlbach[m]>  * >nope, secret
[22:31:06] <mjlbach[m]> whoops
[22:31:08] <phaazon[m]> but yes, I really need a way to bootstrap correctly
[22:31:13] <phaazon[m]> currently, I think I will not use packer for that
[22:31:23] <phaazon[m]> but directly `packpath` (that’s currently what I’m doing for poesie)
[22:31:43] <mjlbach[m]> yes but you could call packer to do the fetching/extension of packpath
[22:31:49] <mjlbach[m]> instead of reimplementing something
[22:32:21] <phaazon[m]> well
[22:32:30] <phaazon[m]> currently, I require the user to `git clone` poesie.nvim
[22:32:38] <mjlbach[m]> for me, I'm going to make an extension under the nvim-lsp umbrella which does declarative configuration of autocompletion, snippets, and language server installation ala coc.nvim
[22:32:48] <phaazon[m]> but then, my big issue is « how do I move from the `site/pack/poesie/start…` to what `packer` does
[22:32:51] <phaazon[m]> that’s the big meh
[22:33:13] <phaazon[m]> mjlbach: I will probably like that for poesie then 🙂
[22:33:42] <mjlbach[m]> Yeah, I think it will very much align with poesie
[22:33:50] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[22:34:19] <mjlbach[m]> I don't really want to maintain it though as it's not something I would use, but I want to at least set up the skeleton for it (maybe support only a single completion framework/snippets plugin/installer plugin), then pass it off to someone, maybe the lunarvim people
[22:34:28] *** Joins: sebastorama (~sebastora@190.83.56.68)
[22:34:37] *** Quits: sebastorama (~sebastora@190.83.56.68) (Read error: Connection reset by peer)
[22:35:29] <phaazon[m]> hm, I think I need more info from packer actually ☹️
[22:35:38] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[22:35:41] <phaazon[m]> I would need the string that is used to retrieve the plugin
[22:35:49] <phaazon[m]> it’s not in `packer_plugins` is it?
[22:36:33] <phaazon[m]> I’ll assume everything comes from github for now then
[22:36:43] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Client Quit)
[22:36:50] <bfredl> you mean git fetch URL?
[22:36:54] <phaazon[m]> yeah
[22:37:00] <phaazon[m]> I sometimes use `~/dev/hop` there
[22:37:34] <the-repo-club[m]> does anyone know of a mswin.lua thats like the mswin.vim in runtime? ort how to include it in a lua init.lua?
[22:37:42] *** Quits: Rue (~rue@2001-b011-1000-131e-573e-dcac-535b-0403.dynamic-ip6.hinet.net) (Quit: WeeChat 3.3)
[22:37:42] <the-repo-club[m]> s/ort/or/
[22:38:48] <wbthomason[m]> @phaazon: that’s currently not in `packer_plugins`, but give me a sec to review and merge #658 and I believe it will be
[22:38:49] <phaazon[m]> also, I would need basically « all » the options passed by the user in `use`
[22:38:57] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[22:38:57] <phaazon[m]> like `branch` and stuff
[22:39:01] <phaazon[m]> wbthomason: great, thanks!
[22:39:10] <wbthomason[m]> Ah
[22:39:55] *** Joins: nehsou^ (~nehsou@wsip-98-188-242-6.mc.at.cox.net)
[22:40:23] <phaazon[m]> I might my system might work in poesie if it’s not supported by packer so don’t stress too much about it 🙂
[22:41:17] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[22:41:48] <wbthomason[m]> Ok, the URL is now in that table, but not the other keys. That said, the changes in #402 will include exposing the full plugin specs (to make it easier for me to let plugins add their own dependencies), so there will be more information there “soon”
[22:42:31] *** Joins: sebastorama (~sebastora@190.83.56.68)
[22:43:35] <phaazon[m]> great, thanks
[22:43:52] <megalithicSethMe> Is there an idiomatic way to traverse from current opened file to find a root marker for an LSP to know to initiate?
[22:44:01] *** Quits: ixil (~ixil@mpp-cp1-natpool-3-016.ethz.ch) (Remote host closed the connection)
[22:44:41] *** Quits: sebastorama (~sebastora@190.83.56.68) (Remote host closed the connection)
[22:44:47] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:e804:b9cd:4633:750a) (Ping timeout: 264 seconds)
[22:45:02] <megalithicSethMe> I know we have `lspconfig.util.root_pattern()`; can we pass globs/wildcards to that?
[22:45:05] <megalithicSethMe> for matching?
[22:45:10] *** Quits: Sircle (~Sircle@88.246.75.14) (Ping timeout: 256 seconds)
[22:45:36] *** Joins: sebastorama (~sebastora@190.83.56.68)
[22:49:16] <ii14[m]> :LspInfo prints the root directory, look into that
[22:49:17] <ii14[m]> is that what you mean?
[22:50:07] <p00f[m]> <aphysically> "hmmm I wonder if I can get..." <- Last time I used a laptop I think it worked with windows terminal
[22:50:41] <megalithicSethMe> it doesn't show what the root directory is with LspInfo
[22:50:46] *** Joins: nikolasha[m] (~nikolasha@2001:470:69fc:105::1:2a1d)
[22:50:49] <megalithicSethMe> err
[22:50:53] <mjlbach[m]> <megalithicSethMe> "I know we have `lspconfig.util...." <- yes
[22:50:59] <megalithicSethMe> more specifically, 
[22:51:15] <ii14[m]> does to me: `root directory:  /home/ms/.local/share/nvim/plugged/nvim-lspconfig`
[22:51:19] <megalithicSethMe> when certain lsp's allow you to set root_pattern's for files that it looks for to know that it's a thing
[22:51:23] <megalithicSethMe> that it should enable
[22:53:16] <ii14[m]> megalithic (Seth Messer): https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/ui/lspinfo.lua#L60
[22:53:31] <p00f[m]> <the-repo-club[m]> "does anyone know of a mswin...." <- Does vim.cmd("source path/to/file") work?
[22:53:43] <megalithicSethMe> [![image.png](https://files.gitter.im/5506b96e15522ed4b3dd5317/C3UM/thumb/image.png)](https://files.gitter.im/5506b96e15522ed4b3dd5317/C3UM/image.png)
[22:53:50] <megalithicSethMe> right i know that i mean
[22:54:07] <megalithicSethMe> what i'm saying is: two lsp's (shown above) one has the right root and the other doesn't
[22:54:12] <megalithicSethMe> same config to pull the root pattern out
[22:54:16] <megalithicSethMe> to use for the root_dir
[22:54:17] <mjlbach[m]> Which is the right root?
[22:54:21] <mjlbach[m]> they are different language servers
[22:54:26] <mjlbach[m]> so they will have different root patterns
[22:54:30] <megalithicSethMe> right the atlas_web one for elixirls is the right one
[22:54:34] <megalithicSethMe> same pattern passed
[22:54:48] <ii14[m]> maybe it can be attached to any directory?
[22:54:49] <mjlbach[m]> then you need to modify the tailwind pattern to match the elixir one (for example)
[22:55:02] <ii14[m]> and just picks your current working directory
[22:56:56] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[22:57:19] <the-repo-club[m]> p00f[m]: that seems to have worked 🙂
[22:57:29] *** Joins: lejkos (~lejkos@2a02:2454:2e6:2f00:a0de:b8b8:b4de:df8a)
[22:58:06] <ii14[m]> you can use :runtime instead of :source btw
[22:58:21] <p00f[m]> ooo
[22:58:33] <p00f[m]> !h runtime
[22:58:33] <nvim-bot[m]> Links to referenced help pages:
[22:58:34] <nvim-bot[m]> * [`runtime`](https://neovim.io/doc/user/repeat.html#runtime) in *repeat.txt*
[22:58:36] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:21ce:ee78:3fd3:58dc)
[22:58:47] <ii14[m]> :runtime mswin.vim or something like that
[22:58:55] <p00f[m]> !h :runtime
[22:58:56] <nvim-bot[m]> Links to referenced help pages:
[22:58:56] <nvim-bot[m]> * [`:runtime`](https://neovim.io/doc/user/repeat.html#:runtime) in *repeat.txt*
[22:59:14] <the-repo-club[m]> ii14[m]: yes that worked
[22:59:43] <ii14[m]> :source takes absolute/relative path and :runtime looks up files in runtimepath
[23:02:29] *** Joins: trace987 (~trace@dynamic-002-247-250-004.2.247.pool.telefonica.de)
[23:03:14] *** Joins: darklands (~darklands@gateway/vpn/pia/darklands)
[23:11:46] <ii14[m]> is there any difference between adding plugins through runtimepath (like vim-plug) and through packages (like packer)? except that plugins from pack/*/start are loaded automatically
[23:14:56] <ii14[m]> is it just whatever happens to be more convenient or is there something else to it?
[23:16:08] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[23:19:13] *** Quits: darklands (~darklands@gateway/vpn/pia/darklands) (Quit: Leaving)
[23:32:00] *** Joins: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e)
[23:35:36] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:37:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:37:32] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:38:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:39:29] <phaazon[m]> how do you use `.` as part of a pattern?
[23:39:37] <phaazon[m]> I tried with `\.`, it’s a big NOPE
[23:40:06] <phaazon[m]> (invalid escape sequence)
[23:40:35] <gpanders[m]1> as part of a Lua pattern you mean?
[23:40:38] <gpanders[m]1> `%.`
[23:40:48] <phaazon[m]> …
[23:40:49] <phaazon[m]> thanks
[23:40:53] <phaazon[m]> 😀
[23:42:53] <bew[m]> phaazon[m]: invalid escape sequence
[23:42:53] <bew[m]> did you mean %.%.%.  ? :D
[23:45:16] *** Quits: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e) (Quit: Konversation terminated!)
[23:50:40] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Read error: Connection reset by peer)
[23:53:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Remote host closed the connection)
[23:55:27] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[23:56:55] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Quit: Leaving)
