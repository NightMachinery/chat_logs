[00:00:05] <BrenBarn> what I mean is that using venvs in general may not work in some situations
[00:00:21] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[00:00:40] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:01:06] <BrenBarn> but looking back I see the question was specifically about pyenv so I guess I was going on a bit of a tangent
[00:01:43] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[00:01:48] *** audiocat is now known as kurahaupo
[00:01:50] *** kurahaupo is now known as Guest1250
[00:01:55] *** Guest1250 is now known as audiocat
[00:02:04] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[00:04:10] <SnoopJ> oh, I may have misread it as being about venvs
[00:04:16] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:04:36] <SnoopJ> you can point to the particular interpreter in $PYENV_ROOT/versions though
[00:05:15] <p-i-> I'm writing many JSON lines to file. I write '['.  Then each line I finish with ',\n', and to finish I write ']'. Is there any clean way to handle the last trailing ','?
[00:05:24] <grym> p-i-: hand-writing json is scary
[00:05:27] *** Joins: sn1tch3r_ (~sn1tch3r@23.82.138.24)
[00:05:35] <grym> that's what json.dumps is for
[00:05:44] <p-i-> grym: It's a big file. I don't want to buffer the object before writing.
[00:05:44] <SnoopJ> or json.dump() since it's going to a file
[00:06:47] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[00:06:55] <SnoopJ> p-i-, you can use JSONEncoder incrementally if you want: https://docs.python.org/3/library/json.html#json.JSONEncoder.iterencode
[00:08:02] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Ping timeout: 245 seconds)
[00:08:03] <p-i-> Thanks
[00:11:07] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[00:11:52] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[00:12:42] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:13:19] *** Quits: Ares000 (~Ares3@37.228.196.119) (Quit: Leaving)
[00:13:29] *** Joins: blackheart (~mrrobot@static-47-206-93-60.tamp.fl.frontiernet.net)
[00:14:02] *** Joins: ferz (~ferz@93.48.251.229)
[00:14:27] *** Joins: ozoned (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[00:14:53] *** Joins: Ares000 (~Ares3@37.228.196.119)
[00:15:08] *** Quits: KevinX (~KevinX@2.56.190.212) (Ping timeout: 265 seconds)
[00:15:32] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[00:15:42] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Read error: Connection reset by peer)
[00:16:20] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 258 seconds)
[00:16:25] <dostoyevsky2> Would one ever use .da as an extension for a python file?
[00:16:44] <dostoyevsky2> https://github.com/vlokwani/distalgo-paxos/blob/master/verify.da
[00:17:10] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 244 seconds)
[00:17:23] <mefistofeles> dostoyevsky2: wow, never heard of that one... what's that suppose to be for?
[00:17:36] <dostoyevsky2> https://github.com/vlokwani/distalgo-paxos
[00:17:40] <grym> i mean. nobody says you _can't_ ...
[00:17:55] <grym> but i can't think of wh you would
[00:18:20] <dostoyevsky2> grym: Ok, but peculiar to just use a random extension
[00:18:40] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:19:40] <grym> dostoyevsky2: very
[00:20:42] <nedbat> they took care to have GitHub syntax-color it as Python though: https://github.com/vlokwani/distalgo-paxos/blob/master/.gitattributes#L2
[00:21:07] *** Joins: kmh (~kmh@p200300df5f13bd00d17adf96e818274e.dip0.t-ipconnect.de)
[00:21:08] <grym> ha!
[00:21:40] <nedbat> the command-line argument parsing is unusual too: https://github.com/vlokwani/distalgo-paxos/blob/master/main.da#L22-L34
[00:21:59] <grym> ah, defaults
[00:22:24] <dostoyevsky2> args = [p, a, l, '1', r, d, w, tp, tl]
[00:22:40] <grym> a scientist wrote this
[00:22:43] <grym> i can just _tell_
[00:22:51] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[00:22:53] *** Joins: finsternis (~X@23.226.237.192)
[00:23:01] *** Joins: junktext (~junktext@109.201.152.165)
[00:23:06] <grym> (it's not hard: it's reimplementing a lamport paper, of course it was!)
[00:23:09] <dostoyevsky2> Yeah, just looks like it... probably ported from R or the like
[00:23:18] <raek> maybe .da stands for "distalgo"? maybe they treat .da as their "plugin format"?
[00:25:52] *** Joins: matsaman (~matsaman@user/matsaman)
[00:26:23] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[00:26:35] <SnoopJ> dostoyevsky2, the extensions is there for the user/OS's sake, Python doesn't really care where the bytes that represent a program come from (including files that have no extension at all, and things that aren't files)
[00:27:10] <dostoyevsky2> Yeah, but paxos is a synchronization protocol, not a distance algo...  I guess one could view it that way, though
[00:27:12] <raek> I guess the standard module importer won't find module whose source files don't end in .py though, right?
[00:28:29] <SnoopJ> raek, that isn't true, no
[00:28:47] <SnoopJ> .zip and .so are very prominent exceptions
[00:28:49] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[00:29:00] <dostoyevsky2> or maybe short for "distributed algo"
[00:29:22] *** Quits: Payam (~Payam@c-39bfe255.01-402-73746f25.bbcust.telenor.se) (Ping timeout: 258 seconds)
[00:30:19] <SnoopJ> comprehensibility doesn't appear to have been a high priority
[00:31:48] <raek> hmm. are there any python forks out there that are nearly identical to ordinary python, but changed some bit (eg. added some new syntax)?
[00:31:49] <SnoopJ> but probably "distributed algorithm" is the longform, yea: https://github.com/DistAlgo/distalgo
[00:33:55] <raek> a friend once mentioned there being a fork named "python with main" or similar that was just like python, but which also executed a function named "main" automatically (so the if __name__ == "__main__" part could be skipped)
[00:34:21] <dostoyevsky2> raek: I've never heard of it... But I guess some of those new features over the years might have started that way
[00:34:22] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[00:34:25] <SnoopJ> from their language doc (language.tex): "A DistAlgo module is a DistAlgo file named module.da. DistAlgo files can be imported just as Python files."
[00:34:59] <dostoyevsky2> SnoopJ: *phd intensifies*
[00:35:03] <SnoopJ> :)
[00:35:15] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:36:08] <grym> who better to port TLA+ to python
[00:36:10] *** Joins: pnoud (~pnoud@user/pnoud)
[00:36:55] <SnoopJ> I can't quite tell if it's basically a Python -> Python compiler, but language.tex does seem relatively thorough.
[00:37:52] <nedbat> raek: i haven't heard of that either, but would be interested to see what they did. I wonder what happens if you give it a file *with* a __name__==__main__ clause.
[00:38:21] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[00:38:48] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:8ab5:537b:138e:6853) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:40:56] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 244 seconds)
[00:41:09] <dostoyevsky2> grym: z3 ftw!
[00:41:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[00:41:46] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[00:42:59] *** Joins: ambv_ (~ambv@c138-59.icpnet.pl)
[00:44:40] *** Quits: sn1tch3r_ (~sn1tch3r@23.82.138.24) (Quit: Leaving)
[00:45:22] <dostoyevsky2> But something like http://www.cprover.org/cbmc/ but for python instead of C might be interesting too
[00:45:32] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[00:45:39] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[00:45:40] <raek> other than that, tauthon is the only fork of cpython I have heard of (not counting new implementations like pypy, jython, etc)
[00:46:01] <dostoyevsky2> I guess you just need to convert the python AST to CNF
[00:46:05] *** Joins: digilink (~digilink@user/digilink)
[00:46:20] <mike18> hi i run a pytest and it shows a short test summary info .... how can i display they entire message and not short version with ... ?
[00:46:39] <mike18> FAILED tests/unit/  AttributeError: 'Foo' object has no attr...
[00:46:45] *** Quits: ambv_ (~ambv@c138-59.icpnet.pl) (Client Quit)
[00:46:47] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 245 seconds)
[00:47:13] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:47:18] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:47:42] <SnoopJ> dostoyevsky2, what would you be checking in such a thing? There's no notion of memory in the language.
[00:47:49] <nedbat> mike18: can you pastebin the full output?
[00:47:52] <raek> mike18: have you tried adding an "-v" argument?
[00:48:04] <SnoopJ> values live ~somewhere~ of course, but it's the implemention's problem
[00:48:17] <mike18> yes: python -m pytest -rA -v ./tests
[00:48:27] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[00:49:43] <dostoyevsky2> SnoopJ: you mean with something like cbmc?
[00:49:54] <SnoopJ> dostoyevsky2, yes
[00:50:05] <dostoyevsky2> E.g: https://www.cs.uaf.edu/2017/fall/cs493/lecture/09_26_cbmc_decrypt.html
[00:50:16] * SnoopJ squints at "implemention"
[00:50:52] <mike18> raek: python -m pytest -rA -v ./tests
[00:50:59] <mike18> but not replacing the ...
[00:51:13] <dostoyevsky2> SnoopJ: formal verification of cryptographic algorithms in python, e.g. ... but can actually formally verify other puzzle-based code as well
[00:51:13] <SnoopJ> dostoyevsky2, oh, using it only for the built-in satsifiability solver? I see now
[00:51:16] <nedbat> mike18: can you pastebin the full output?
[00:51:57] <SnoopJ> kinda wonder why you wouldn't just go straight for minisat/libsat/whatever unless the one inside CBMC is particularly special, though.
[00:52:18] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[00:52:28] <mike18> nedbat: https://ideone.com/Vd1rsj
[00:52:46] <dostoyevsky2> SnoopJ: input for those is CNF... all that cmbc is doing is to take the AST and make it CNF and then just run minisat etc
[00:53:06] *** Quits: blackheart (~mrrobot@static-47-206-93-60.tamp.fl.frontiernet.net) (Ping timeout: 252 seconds)
[00:53:09] <dostoyevsky2> cbmc evn
[00:53:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:53:13] <dostoyevsky2> even
[00:53:22] <nedbat> mike18: that looks odd.  Can you pastebin all of the output?
[00:54:03] <mike18> thats still showing the ...
[00:54:08] <mike18> dont you see?
[00:54:12] <SnoopJ> dostoyevsky2, sure, I thought you wanted CBMC for the main attraction, not for the SAT solver incidentally inside of it
[00:54:35] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[00:54:38] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[00:54:41] <mike18> i need to know what line failed
[00:55:11] <nedbat> mike18: yes, i see it. i don't undestand why that is.  Can you pastebin all of the output?
[00:55:27] <nedbat> mike18: or, try -vvv
[00:55:39] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Quit: leaving)
[00:56:10] *** Joins: sjay (~sj@c-24-11-26-209.hsd1.ut.comcast.net)
[00:56:30] <sjay> hellow friends, should i recommend the use of zipfile or shutil for making zipfiles?
[00:56:50] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Ping timeout: 252 seconds)
[00:56:55] *** Joins: kapad (~kapad@188.4.3.191.dsl.dyn.forthnet.gr)
[00:57:31] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[00:57:42] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[00:59:06] <jinsun> mike18: you are probably looking at only the last few lines with the summary, it should print the detailed info above that if you scroll up
[00:59:10] <jochum> sjay: well zipfile is platform independent while cmd isn't. Also unzip/zip isn't always installed
[00:59:21] <mike18> jinsun: also the line where it failed?
[00:59:35] *** Joins: vimart (~vimart@185.69.144.190)
[01:00:12] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[01:00:29] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[01:00:30] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:00:36] <sjay> jochum: ok so shutil basically proxies to the underlying system while zipfile has everything contained
[01:00:40] *** Quits: cr0n0s (~quassel@181.67.203.144) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:01:00] *** Joins: cr0n0s (~quassel@181.67.203.144)
[01:01:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[01:03:11] <jinsun> mike18: yes, I think the default pytest output already should show it, if you don't see it then maybe your terminal is eating some lines, try redicting the output to some file, `your_command > full_output.txt`
[01:03:29] <mike18> you are right
[01:03:32] <mike18> i missed that
[01:03:34] <SnoopJ> sjay, use zipfile
[01:03:37] <mike18> had to scroll up
[01:04:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:04:37] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[01:04:40] <jochum> sjay: shutil calls something like in bash, zipfile is python
[01:04:53] *** Quits: kapad (~kapad@188.4.3.191.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[01:05:04] *** Joins: Kvothe (~weechat@user/elodin)
[01:05:28] *** Joins: kapad (~kapad@188.4.3.191.dsl.dyn.forthnet.gr)
[01:05:29] <SnoopJ> hmm, upon review, shutil.make_archive() is fine, too. (I didn't know it existed)
[01:05:41] <SnoopJ> jochum, shutil uses zipfile (or other stdlib modules)
[01:05:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:05:57] <SnoopJ> maybe you're confusing it with the subprocess module?
[01:06:21] <jochum> SnoopJ: yeah, seems so... :(
[01:06:48] <jochum> sjay: I'm sorry, told you bullshit.
[01:08:05] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 258 seconds)
[01:08:49] <nedbat> mike18: this is why i asked for the full output
[01:08:54] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[01:09:13] <sjay> do you have a link to the source of that make_archive?
[01:09:16] <sjay> or where could i find that
[01:10:04] <SnoopJ> sjay, https://docs.python.org/3/library/shutil.html#shutil.make_archive
[01:10:18] <sazawal> bjs, This multiprocess design is getting on my nerves
[01:10:23] <SnoopJ> might not be all that useful to you, so you might still want zipfile
[01:10:36] <bjs> sazawal: what part of it?
[01:10:51] <bjs> sazawal: do you mean the `multiprocessing` library itself? or just IPC in general? or .. ?
[01:11:14] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:11:18] <sjay> i'm more curious how you knew that shutil used zipfile
[01:12:11] <sazawal> bjs, The code I sent here multiple times is working so far on Linux and Windows. When I do the same on my actual system, I get the PicklineError. There are 10 ways I can make it work on Linux but nothing worked so far on Windows.
[01:12:12] <SnoopJ> I didn't, but the docs say that its "high-level utilities to create and read...[.zip] files" rely on zipfile/tarfile.
[01:12:22] <sjay> SnoopJ: that doc link makes it look like it uses zlip if available
[01:12:30] *** Quits: kapad (~kapad@188.4.3.191.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[01:12:43] <sazawal> I suspect it is because there are many more things going on in my actual system.
[01:12:47] <sjay> oh i see tha tnow SnoopJ thanks
[01:13:05] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[01:13:25] *** Joins: Elodin (~weechat@user/elodin)
[01:14:15] *** Joins: Elodin_ (~weechat@user/elodin)
[01:15:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[01:16:31] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 265 seconds)
[01:16:40] *** Joins: Elodin__ (~weechat@user/elodin)
[01:16:45] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 252 seconds)
[01:17:02] *** Quits: magla (~gelignite@55d45e55.access.ecotel.net) (Quit: Stay safe!)
[01:17:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:18:10] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:18:27] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[01:19:54] *** Quits: Elodin_ (~weechat@user/elodin) (Ping timeout: 265 seconds)
[01:19:58] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[01:20:20] *** Joins: fikran (~fikran@user/fikran)
[01:20:27] *** Joins: vicfred (~vicfred@user/vicfred)
[01:20:27] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[01:20:56] *** Quits: ozoned (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[01:21:44] <sazawal> bjs, This is the final design of the actual system I am developing https://bpa.st/YOKA . Now this code works fine on both Windows and Linux. But my actual system fails at line 123. One thing I found which worked is to define the function network in class B instead of C and use `Process(target=self.a.run,args=(B.network,qsource,....))`
[01:21:46] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:22:08] <fikran> Hi all. I am getting a KeyError. Is there a way to catch that exception and print out the key that is erroring?
[01:22:29] <nedbat> fikran: i woud have thought the exception would print the key that was missing.
[01:22:36] *** Joins: VimVim (~VimVim@85.191.77.4)
[01:23:01] <bjs> sazawal: again I think this whole design is really weird because it means you have lots of copies of everything around. I really think you want the target to just be a function that accepts some queues and then have the process do all the work of setting up the instances and calling the methods
[01:23:09] <fikran> nedbat: I want to catch it and print a custom error message. I was trying to do: except KeyError as e \n print("The missing value is " + the_key_here)
[01:23:14] <sazawal> But the thing is class C is the script I want my user to write, and he/she can have many such scripts with different network functions, so I cannot make it a part of the underlying class B.
[01:23:21] *** Joins: Elodin (~weechat@user/elodin)
[01:23:51] *** Joins: qlixed (~qlixed@host101.181-13-73.telecom.net.ar)
[01:24:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:24:05] <sazawal> bjs, Would you tell me a little more how do I make it more streamlined?
[01:24:08] <nedbat> fikran: e.args[0] is the key
[01:24:13] <SnoopJ> fikran, you can look at the .args on the exception object
[01:24:29] <SnoopJ> if it's a builtin object that should be the key, otherwise you're at the mercy of whoever wrote the object
[01:24:44] <bjs> sazawal: idk it's just when you go `Process(target=self.a.run, args=[self.blah, self.foo]
[01:24:44] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[01:24:50] *** Quits: sjay (~sj@c-24-11-26-209.hsd1.ut.comcast.net) (Quit: leaving)
[01:25:09] <bjs> sazawal: there's a lot of stuff being transferred over to the new process, a lot of copying of state, lots of places for pickling to fail
[01:25:28] <fikran> Thank you! That was it!
[01:25:41] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:25:43] <bjs> sazawal: like if that line just didn't mention self (except for maybe _only_ some multiprocessing queues) then it'd be much more robust.
[01:25:51] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[01:26:06] *** Quits: V1mV1m (~VimVim@85.191.79.93) (Ping timeout: 276 seconds)
[01:26:24] <bjs> sazawal: and just remember that anytime you go "between" the processes you're copying everything.
[01:26:46] <bjs> and so that would be another place things go wrong (writing/reading from the multiprocessing queues)
[01:26:47] <sazawal> I see. But see if you look from outside, I want my user to define a function network of his choice given qsource and qsink. It is just like making a block-diagram or flow-chart. So then natually I thought this should be the way to go.
[01:26:47] *** Quits: Elodin__ (~weechat@user/elodin) (Ping timeout: 245 seconds)
[01:27:44] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:27:57] <philipp64|work> what’s the importlib equivalent of `from pkg import foo as bar`?
[01:28:28] *** Quits: Ivyy (~Ivyy@2001:a61:13cb:e801:3494:973c:c131:7964) (Remote host closed the connection)
[01:28:35] <sazawal> Well maybe I define another class containing the function network, or a function network without a class. I will let my user make it without caring for the system running behind
[01:29:11] <sazawal> Here in this code, class C is all the thing I want my user to write for his purpose
[01:30:00] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 276 seconds)
[01:31:10] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:32:03] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[01:32:31] *** Joins: ferz (~ferz@93.48.251.229)
[01:33:51] <SnoopJ> philipp64|work, `bar = importlib.import_module("pkg").foo` I believe
[01:34:02] <KirkMcDonald> It depends on whether pkg.foo is a module.
[01:34:32] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[01:34:47] <SnoopJ> yea, guess that's a wrinkle
[01:35:04] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[01:35:37] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[01:35:38] *** Joins: ali1234 (~al@user/ali1234)
[01:35:51] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[01:36:00] *** Joins: waynew (~wayne@user/waynew)
[01:36:22] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[01:36:32] *** Joins: Wulf (~Wulf@user/wulf)
[01:37:08] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[01:37:18] <philipp64|work> SnoopJ: I currently have a bunch of *.wsgi wrappers that look like “from myname import app as application” where “myname” = os.path.splitext(os.path.basename(__file__))[0] and I’m tired of the duplication…
[01:37:53] <philipp64|work> in this case, myname.py is the script that myname.wsgi invokes
[01:38:03] <philipp64|work> It’s not a module.
[01:38:30] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:38:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:39:30] <sazawal> bjs, What if I make a manager function containing, A.set, A.run and B.execute(only the Process statements)? But how would I let this class have access to the network function?
[01:39:37] <sazawal> manager class*
[01:40:07] <mike18> how can i generate valid json with this? https://ideone.com/oLhXgA
[01:41:29] <SnoopJ> mike18, your json.dumps() looks fine, but you didn't import dataclass
[01:41:53] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 250 seconds)
[01:42:41] <mike18> SnoopJ: updated the import still something
[01:42:53] <SnoopJ> mike18, if you say so
[01:43:04] <SnoopJ> (I can't see your screen)
[01:43:35] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 252 seconds)
[01:43:43] <bjs> mike18: still "something" ?
[01:43:47] <bjs> mike18: what is the something
[01:43:53] <mike18> https://ideone.com/oLhXgA - error
[01:43:58] <mike18> runtime
[01:44:22] <bjs> mike18: it says `NameError: name 'time' is not defined`
[01:44:38] <bjs> Did you forget to import time?
[01:44:51] *** Joins: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8)
[01:45:04] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[01:45:15] <Repiphany> You also have timestamp misspelled as timetamp in some places
[01:45:49] <SnoopJ> those are at least consistent and it appears to work
[01:46:24] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[01:48:04] *** Joins: lorcab (~user@197.251.194.240)
[01:50:28] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[01:50:51] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:50:58] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:22] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 245 seconds)
[01:52:06] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[01:54:04] <gloin> Having a bit of trouble getting subprocess.check_output to actually not write out stderr: https://bpa.st/UJGQ
[01:54:36] <jiffe> I've pulled https://github.com/maykar/plex_assistant/tree/master/custom_components/plex_assistant and when I try to run python3 helpers.py I get the error ModuleNotFoundError: No module named '__main__.const'; '__main__' is not a package
[01:54:45] <gloin> that "Invalid entry length" error is massively annoying and not Python's problem - I just want to not have it write out anywhere
[01:55:09] <bjs> gloin: stderr=None is the default and says to not capture stderr and let it print out
[01:55:16] <bjs> gloin: you can give it DEVNULL or something
[01:55:31] <gloin> d'oh
[01:56:28] <gloin> what was weird is that I tried putting (['dmidecode', '2>/dev/null']) and it still dumped the garbage, running the same thing from bash worked fine
[01:56:49] <gloin> or should it be 'dmidecode', '2>', '/dev/null' maybe
[01:57:10] <bjs> gloin: that's not weird, none of those will work because the > stuff is a shell feature
[01:57:26] <Repiphany> subprocess.DEVNULL
[01:57:28] <bjs> gloin: the list there is just the arguments (argv) to the process
[01:58:13] <gloin> Alrighty, setting stderr=subprocess.DEVNULL works
[01:58:17] <gloin> Thanks again
[02:01:22] *** Quits: vimart (~vimart@185.69.144.190) (Ping timeout: 240 seconds)
[02:01:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[02:01:50] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: Ping timeout (120 seconds))
[02:02:08] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[02:02:18] *** Joins: mcon (~Guest59@host-95-247-210-42.retail.telecomitalia.it)
[02:04:21] *** Joins: jdmark (~jdmark@67.8.137.130)
[02:05:43] *** Quits: asix (~Anders@user/asix) (Ping timeout: 250 seconds)
[02:06:24] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:06:27] *** Joins: setuid (sid191390@canonical/setuid)
[02:07:22] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:07:29] <setuid> I've got a list of WebElement objects from selenium, and I can loop over those with 'for foo in list: print foo.get_attribute("href"), and that works. I need to match (filter) those items based on a value. I'm trying to get that into a lambda, but it's not working. result = list(filter(lambda u.get_attribute("href") for u in duplicate_link, duplicate_link))
[02:07:34] <setuid> What am I missing?
[02:07:42] *** Joins: Elodin (~weechat@user/elodin)
[02:08:17] <yuesbeez> Is it possible to make the audit_user() call here non-blocking using asyncio? I think I need asyncio.gather() but I am really unsure if that can work in this way in a for loop. I found one example doing 'await asyncio.gather(*(function_b(client) for client in clients))' but nothing thats using enumerate like my code: https://paste.debian.net/plain/1205987
[02:10:39] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 265 seconds)
[02:11:22] <setuid> This seems to work: result = list(filter(lambda u: args.limit in u.get_attribute("href"), duplicate_link))
[02:11:33] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:11:35] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:11:37] <mcon> I am having trouble installing/using PyQt5 on anancient Ububtu 16.04.7 installation. I installed "sudo apt install python3-pyqt5" and I can successfully "import PyQt5" but "import PyQt5.QtWidgets" gives error "ModuleNotFoundError: No module named 'PyQt5.QtWidgets'". I checked and I have "-rw-r--r-- 1 root root 5709512 gen 19  2016
[02:11:38] <mcon> /usr/lib/python3/dist-packages/PyQt5/QtWidgets.cpython-35m-x86_64-linux-gnu.so". What should I check?
[02:11:44] *** Quits: Guddu (~Guddu@171.50.141.238) (Quit: Leaving)
[02:12:02] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Ping timeout: 272 seconds)
[02:12:41] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:13:34] <setuid> mcon: Are you sure you're using py3 and not py2?
[02:15:07] *** Quits: cr0n0s (~quassel@181.67.203.144) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:08] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Quit: Client closed)
[02:15:32] <mcon> setuid: Yessir. I am at the command line "python3" Python 3.6.13 (default, Feb 20 2021, 21:42:50) -- [GCC 5.4.0 20160609] on linux
[02:15:40] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[02:16:12] <setuid> Also keep in mind that Ubuntu 16.04 is End of Support, so you won't get any package updates
[02:16:25] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[02:17:08] <setuid> Humor me, sudo apt install python-pyqt5
[02:17:18] <mcon> setuid: yes I know. I really am locked into that ancient release
[02:17:21] <nedbat> mcon: you can use "python -v" to get (a lot) of logging about what imports are doing.
[02:17:34] <nedbat> mcon: Your python version is 3.6, but your file is cpython-35m-...
[02:17:57] <setuid> Why are you locked in?
[02:18:14] <nedbat> setuid: we should let mcon decide what part of this they want to change.
[02:19:11] <setuid> More importantly, 3.6 was never shipped for Xenial
[02:19:19] <mcon> Because I need to maintain vendor code written using that ubuntu version and trying to use a more modern release simply won't work (I tried)
[02:19:21] <setuid> so that must be some other package/build that was shoehorned onto there
[02:19:29] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:19:34] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[02:19:39] <setuid> You can run lxd or kvm containers for any series on any series
[02:19:47] <setuid> I run xenial containers on my focal system all the time
[02:20:18] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[02:20:23] <setuid> uvt-kvm create mcon-pyqt release=xenial arch=amd64 --memory 4096 --cpu 2 --disk 20 --host-passthrough --password ubuntu
[02:20:23] <setuid> Wait 30 seconds... log in. Done.
[02:20:47] <setuid> $ ssh -Y ubuntu@$(uvt-kvm ip mcon-pyqt)
[02:21:05] <nedbat> mcon: are you interested in exploring containers like this?
[02:21:13] <setuid> mcon: one sec, let me reproduce your issue
[02:21:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:21:50] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[02:22:01] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[02:23:03] <mcon> setuid: BINGO!!! I have both python3.5 and python3.6 in /usr/bin I don't know (yet) how they got there, but launching python3.5 works. THANKS!
[02:23:11] <setuid> mcon: what does 'apt-cache policy python3.6' show? (don't paste it here)
[02:23:20] <setuid> Your 3.6 is not something shipped with the distro repositories
[02:23:29] *** Joins: emika5 (~emika@185.207.249.41)
[02:23:44] *** Quits: emika (~emika@83.136.182.109) (Ping timeout: 252 seconds)
[02:23:44] *** emika5 is now known as emika
[02:24:24] <setuid> mcon: https://paste.debian.net/hidden/8ceb6dd6/
[02:24:56] <setuid> That said, you could get ESM for your 16.04, or move to Bionic/Focal/later release and use Xenial containers
[02:25:54] *** Quits: Narrat (~omnius@p200300df5f15d87906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:25:54] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:26:55] *** Joins: p-i-_ (~Ohmu@node-mba.pool-118-173.dynamic.totinternet.net)
[02:27:44] <mcon> setuid: problem is this is a rather large yocto build so using all cores is really a boost (single core compilation takes ~26h) I don't think usnig VirtualMachines/Containers/docker will really help me.
[02:28:30] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 276 seconds)
[02:29:33] *** Quits: p-i- (~Ohmu@node-nta.pool-125-24.dynamic.totinternet.net) (Ping timeout: 250 seconds)
[02:30:07] <setuid> A container uses as many cores as you tell it to, it's not a virtualization layer, it's using cgroups
[02:30:10] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[02:30:43] *** Quits: Barones (~Barones@2804:48dc:8500:0:34e8:f7a4:e2a7:439c) (Quit: Leaving)
[02:30:49] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[02:30:51] <mcon> setuid: I will need to understand how Python3.6 got installed, but I can bypass problem explicitly using "python3.5" many Many MANY THANKS.
[02:31:38] <setuid> mcon: apt-cache policy python3.6
[02:31:46] <setuid> it will tell you which repo that package came from
[02:32:07] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[02:32:49] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[02:34:08] *** Quits: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8) (Quit: Client closed)
[02:34:09] <mcon> setuid: it says: "500 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu xenial/main amd64 Packages" I wonder how it got there... and how it can work at all
[02:34:27] <setuid> Probably a ppa you installed, check /etc/apt/sources.list.d/
[02:34:32] <grym> deadsnakes
[02:34:50] <grym> one of two reasonable ways to get new python on old distros
[02:34:58] <grym> and the more invasive option
[02:35:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:35:57] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:36:58] *** Joins: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8)
[02:37:01] *** Joins: pnoud (~pnoud@user/pnoud)
[02:37:28] <mcon> setuid: I'm not the only one mucking on this machine. Tomorrow I'll have to ask questions.
[02:37:50] <setuid> version control matters, snapshots, audit trail/iwatch.
[02:38:51] <setuid> grym/nedbat have you ever seen a case where 'black' across code, causes lambda functions to break?
[02:39:27] <mcon> setuid: about your suggestion: how many of my 8 cores could I assign to the container? can I go above 4?
[02:40:30] <setuid> mcon: Trying `--memory 4096 --cpu 48 --disk 20` here on my 12-core laptop, let's see
[02:40:49] <setuid> CPU(s):                48
[02:40:49] <setuid> On-line CPU(s) list:   0-47
[02:40:57] <setuid> Yep, so you can overcommit
[02:41:09] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[02:41:13] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Ping timeout: 246 seconds)
[02:41:27] *** Quits: regreg (~regreg@86.122.113.90) (Ping timeout: 252 seconds)
[02:41:28] *** Quits: Akuli (~Akuli@82-203-166-10.bb.dnainternet.fi) (Quit: Leaving)
[02:41:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[02:42:00] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[02:42:19] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[02:43:45] <mcon> setuid: thanks for the hint. I'll check it.
[02:44:04] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Quit: WeeChat 3.2)
[02:45:56] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[02:46:20] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[02:47:30] <grym> setuid: no, that sounds like it'd be a bug to me
[02:48:09] <nedbat> setuid: i haven't seen that, but i'm not a heavy black user.  do you have a case?
[02:48:25] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[02:50:14] *** Joins: Naan (~Naan@user/naan)
[02:51:00] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[02:51:33] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[02:52:05] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:54:19] <setuid> I'll try to abstract a smaller use case, I did have to 'unwrap' the lambda because it failed to parse an element, but it may be due to selenium xpath
[02:55:04] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[02:55:24] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:55:26] <setuid> Here's one of the bits of that code: https://paste.debian.net/hidden/67b9d5ac/
[02:57:17] *** Joins: Kvothe (~weechat@user/elodin)
[02:57:54] *** Joins: Elodin_ (~weechat@user/elodin)
[02:58:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:58:34] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[02:59:51] *** Joins: paravida (~myChateau@user/paravida)
[02:59:54] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[03:00:03] *** Quits: mike18 (~geri@217-149-163-174.nat.highway.telekom.at) (Remote host closed the connection)
[03:00:21] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 276 seconds)
[03:00:59] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:01:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:01:48] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 256 seconds)
[03:02:04] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[03:04:37] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[03:07:11] *** Quits: Elodin_ (~weechat@user/elodin) (Ping timeout: 252 seconds)
[03:08:12] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[03:09:04] *** Joins: Samian (~Sami@2620:10d:c091:480::1:4df9)
[03:09:09] <Samian> parseargs vs @click
[03:09:12] <Samian> what's your pick?
[03:09:18] *** Quits: waynew (~wayne@user/waynew) (Quit: tomorrow...)
[03:09:25] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[03:09:56] <grym> Samian: click or typer
[03:10:00] <setuid> argparse if you need to stay core, or use click
[03:10:02] <grym> (which is click, in a trenchcoat)
[03:10:05] <setuid> ooo... typer?!
[03:10:05] *** Parts: orangeboxcutter (~orange@user/orangeboxcutter) ()
[03:10:15] <grym> setuid: fastAPI but for stdin :D
[03:10:36] <setuid> Don't get me started on some weird, wild projects I'll have to start hacking on!
[03:10:38] <grym> argv?
[03:10:40] <Samian> grym  cool, I vote the same :-)
[03:10:40] <grym> argv
[03:10:54] <Samian> grym  but now knowing about click, I wonder why anyone uses parseargs still
[03:11:08] <grym> Samian: you mean argparse?
[03:11:23] <grym> sometimes you have to stay stdlib, click has Ideas about api design you might not like, ... a few reasons
[03:11:34] <Samian> grym  yes
[03:11:36] <Samian> argparse
[03:11:40] <grym> "if you want to make your teammates make very silly wat.jpg faces at you", the right answer is docopt
[03:11:55] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[03:12:00] <grym> which i still maintain is hilarious and adorable, but i don't use it much any more
[03:12:37] <gloin> I feel like this error isn't telling me what the actual problem is: https://bpa.st/NRIA
[03:13:28] <gloin> 100% get_hostinfo is setting and returning vm_type, but trying to call get_hostinfo.vm_type() from another function throws object has no attribute
[03:13:52] <grym> gloin: it is, it's just a bit inscrutable.  you want get_hostinfo()[5]
[03:14:00] <gloin> ugh
[03:14:04] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[03:14:08] *** Quits: Vornotron (~Vornicus@2603-8000-5d07-7ef0-04bb-14cb-d493-4cea.res6.spectrum.com) (Read error: Connection reset by peer)
[03:14:08] <gloin> any way to call it by name rather than index?
[03:14:14] <grym> gloin: you 1. have to call a function (with ()), and 2. its return type as you've written it is a tuple, which you access by index
[03:14:33] <grym> gloin: return a class, or a dict
[03:14:40] *** Joins: asix (~Anders@user/asix)
[03:14:52] <grym> gloin: eg, return {"hostname":hostname, "full_os":full_os, ...
[03:14:54] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[03:15:07] <grym> then you'd get_hostinfo()["hostname"]
[03:15:49] <grym> if you want something that is kind of like a POJO or a struct, you want either: attrs.org or dataclasses.dataclass in the stdlib
[03:15:50] <gloin> That avoids the maintainability problem of somebody deciding to alphabetize the return vars or something equally stupid
[03:16:02] <grym> (you do _not_ want namedtuple unless you *really do want a tuple*)
[03:16:10] <setuid> Alrighty, I'm out... thanks all!
[03:16:11] *** Parts: setuid (sid191390@canonical/setuid) ()
[03:17:03] <gloin> seems weird this way though - if I'm returning a var I'd expect to access that var by its name - why is this the way it is?
[03:17:13] <grym> gloin: dicts preserve insertion order but they are much less brittle to accidentally indexing like a doofus
[03:17:21] <grym> you're returning a tuple of values
[03:17:29] <grym> their names are lost when the function returns
[03:17:39] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:17:40] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[03:17:59] <grym> the comma makes the tuple, by the way.  (1) is an integer, (1,) is a tuple, and so is 1,
[03:18:01] *** Quits: dfg (dfg@user/dfg) (Quit: I hate quit messages.)
[03:18:02] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:18:08] * gloin thinks of dereferencing here...
[03:18:28] <grym> you could dereference, sure (and that's something tuples are nice for)
[03:18:46] <gloin> So aside from returning a dict for all the variables is there any other way to return multiple vars from a function and access them by name?
[03:18:59] <grym> sure, return a class
[03:19:11] <ssbr_> attrs/dataclasses :D
[03:19:27] <gloin> get_hostinfo() is particularly gnarly because it's returning different types - lists, ints, one hash...er dict...
[03:19:33] <grym> gloin: sure.  one sec
[03:19:33] *** Quits: MikZyth (~MikZyth@188.65.242.86) (Quit: WeeChat 3.1)
[03:20:32] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[03:20:34] <gloin> also just for sanity here are we using tuple as a synonym for list?
[03:20:34] *** Joins: dre (~dre@2001:8003:c932:c301:f393:122e:b02c:a2af)
[03:20:37] *** Quits: mcon (~Guest59@host-95-247-210-42.retail.telecomitalia.it) (Quit: Client closed)
[03:21:24] <bjs> gloin: no tuples and lists are different types
[03:21:38] *** Joins: mcon (~Thunderbi@host-95-247-210-42.retail.telecomitalia.it)
[03:21:59] <grym> gloin: https://bpa.st/O6OA
[03:22:02] <bjs> gloin: Python functions always return 1 object, but that 1 object can contain other objects. Like a list, or a tuple, or a dict, or your own custom class
[03:22:04] <gloin> would "return (var1 var2 var3)" become a list then?
[03:22:11] <grym> gloin: that's a syntax error
[03:22:18] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[03:22:21] <grym> if you had the commas in there, it'd be a tuple
[03:22:22] <bjs> gloin: [1,2,3] is a list, (1,2,3) is a tuple
[03:22:23] <grym> lists have []
[03:22:39] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:22:44] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Quit: Client closed)
[03:22:48] <grym> gloin: tuples are immutable; stylistically it's normal to have them contain many types.  lists are mutable, stylistically it's normal to have them have all one type
[03:23:11] <philipp64|work> SnoopJ et al: this worked… application = importlib.import_module(base).app
[03:23:18] *** Joins: cjb (~cjb@user/cjb)
[03:23:44] *** Quits: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8) (Quit: Client closed)
[03:23:51] *** Parts: mcon (~Thunderbi@host-95-247-210-42.retail.telecomitalia.it) ()
[03:24:36] *** Quits: junktext (~junktext@109.201.152.165) (Ping timeout: 265 seconds)
[03:24:46] <philipp64|work> next question is a scoping one… I’m in a library that’s a module, and it’s being called from a context that has `request.environ[]` scoped (yes, it’s a Flask app).  How would my library routine access the scope of its caller?
[03:24:51] <grym> dinnertime
[03:24:51] *** Joins: dfg (dfg@user/dfg)
[03:25:00] <gloin> Looks like I need to hit the docs for attr so I understand what is happening with the whole @attr.s and attr.ib() business there
[03:25:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:25:06] <gloin> Thanks grym
[03:26:12] <gloin> lol "Trusted by NASA for Mars missions since 2020!"
[03:26:33] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:27:19] <grym> gloin: it's sugar over making a normal class, but it's very tasty sugar
[03:28:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 276 seconds)
[03:28:30] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[03:29:15] *** Joins: ice9 (~ice9@user/ice9)
[03:30:42] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:7bb3:6e09:e3a:7903) (Ping timeout: 256 seconds)
[03:30:47] <sudomann> https://bpa.st/7RZA  I am not using a virtual env
[03:30:59] <sudomann> Why does it claim to be installed but i cant use :(
[03:31:31] <bjs> sudomann: because it's import yaml not import pyyaml for https://pypi.org/project/PyYAML/
[03:32:04] <sudomann> wow how silly
[03:32:09] <sudomann> thank you!
[03:34:17] *** Joins: Elodin_ (~weechat@user/elodin)
[03:34:31] *** Quits: qlixed (~qlixed@host101.181-13-73.telecom.net.ar) (Ping timeout: 258 seconds)
[03:34:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:36:18] *** Quits: WilhelmVonWeiner (~dch@209.250.249.51) (Remote host closed the connection)
[03:37:50] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[03:38:13] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[03:39:23] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:39:41] <p-i-_> D = {'foo': [1,2,3], 'bar': [4,5]}  # Is there a one-liner to get a list of all the values over the keys? In this case [1,2,3,4,5]
[03:40:03] <p-i-_> I was trying [item for item in v for k,v in D.items()] but I can't get it to work.
[03:40:43] <dre> p-i-_, [x for x in item[0] for item in k,v.items()]
[03:41:01] *** Joins: withered_wolf (~withered_@50-200-227-126-static.hfc.comcastbusiness.net)
[03:41:29] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[03:41:44] <ssbr_> p-i-_: wrong order -- the `for`s nest from left to right
[03:41:50] <dre> yep my mistake
[03:41:59] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[03:42:01] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[03:42:07] <dre> just caught that too. makes more sense when you put each of the fors on new lines.
[03:42:19] <ssbr_> >>> [item for k,v in D.items() for item in v]
[03:42:19] <ssbr_> [1, 2, 3, 4, 5]
[03:42:56] <p-i-_> Thanks!
[03:43:11] <p-i-_> >>> [i**2 for i in range(3)
[03:43:24] <p-i-_> hehe thought we had a channel bot for a moment ;)
[03:43:36] <p-i-_> >>> [i**2 for i in range(3)]
[03:43:58] <p-i-_> A replbot would be cool :]
[03:45:31] *** Joins: tims (~tims@61.69.131.46)
[03:46:34] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 256 seconds)
[03:47:52] *** Joins: andika (~Andika@subs46-116-206-42-120.three.co.id)
[03:48:37] *** Joins: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8)
[03:48:48] *** Parts: mawk (mawk@wireguard/contributor/mawk) (Leaving)
[03:50:07] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 245 seconds)
[03:51:23] *** Roey is now known as BidetEnthusiast
[03:51:46] *** Quits: withered_wolf (~withered_@50-200-227-126-static.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[03:52:19] *** BidetEnthusiast is now known as Roey
[03:52:41] *** Joins: regreg (~regreg@86.122.113.90)
[03:52:53] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[03:53:16] *** Joins: withered_wolf (~withered_@157.sub-174-192-73.myvzw.com)
[03:54:33] *** Joins: milosz (~milosz@user/milosz)
[03:58:25] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[03:58:51] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[03:59:15] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:10aa:ff90:37bd:5627) (Quit: WeeChat 3.2)
[03:59:29] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[03:59:30] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[03:59:59] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:01:49] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[04:02:24] <hundredvisionsgu> I'm having import issues with my python project trying to import local scripts. If I import one way, the script importing works but not pytest. If I import it another way, pytest works but not the script. Here's a pastebin link: https://bpa.st/QS6A
[04:03:15] <hundredvisionsgu> Any insight would be most helpful.
[04:04:42] *** Quits: Hafat (~hafat@95.70.168.45) (Ping timeout: 245 seconds)
[04:04:58] *** Quits: Titore (~Titore@user/titore) (Quit: Bye!)
[04:05:23] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:05:50] *** Joins: Titore (Titore@user/titore)
[04:06:55] <nedbat> hundredvisionsgu: try running pytest like this:  python -m pytest
[04:08:13] *** Joins: newpy (~newpy@2601:280:4381:1390:7de3:fc39:406a:4df6)
[04:08:36] <SnoopJ> click question: is there any way to refer to the name of the running script in the docstring for a command? I can just hardcode it, but I'm curious.
[04:09:03] <SnoopJ> (I want to document a @click.argument() with an example invocation)
[04:09:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[04:10:19] *** Roey is now known as BidenAmusiast
[04:10:30] *** BidenAmusiast is now known as Roey
[04:10:33] <hundredvisionsgu> nedbat Still gives an error. Here's the error https://bpa.st/ZMSA
[04:10:59] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[04:11:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:11:12] <nedbat> hundredvisionsgu: can you pastebin the structure of your project, and indicate which is the current directory?
[04:12:05] <hundredvisionsgu> SnoopJ not sure how to refer to the name of the running script in the docstring - or is that just to serve as a reference?
[04:12:36] <Yhg1s> hundredvisionsgu: SnoopJ's question wasn't about your problem.
[04:12:45] <hundredvisionsgu> Yhg1s thanks
[04:12:51] <SnoopJ> yea, I'm wondering about the library `click`
[04:13:30] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:13:40] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:13:54] <hundredvisionsgu> nedbat the first link shows a stripped down view of the structure to show the relationship of the tests folder to the app folder. The folder where I'm running the tests is the root folder.
[04:14:27] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:14:33] *** Quits: bad_blue_bull (~user@ppp92-100-31-156.pppoe.avangarddsl.ru) (Remote host closed the connection)
[04:14:42] <nedbat> hundredvisionsgu: sorry, what first link?
[04:15:38] <hundredvisionsgu> nedbat https://bpa.st/FVXQ under "FOLDER STRUCTURE"
[04:17:27] <Yhg1s> hundredvisionsgu: 'from webanalyst import clerk' is the right thing to do. Can you show more of the traceback when you do that?
[04:17:44] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:17:44] *** Wulf4 is now known as Wulf
[04:18:03] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:18:10] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[04:18:12] <Yhg1s> oh, you're *running* validator.py. Don't run validator.py directly. It's inside the package, and you can't run it directly and have imports work right.
[04:18:53] <Yhg1s> hundredvisionsgu: make validator.py a script outside the package, or use setuptools entry_points to generate a binary that will run a function in validator.py, or use 'python -m webanalyst.validator' to run it.
[04:19:27] *** Joins: Fiji (~Fiji@user/fiji)
[04:20:22] <hundredvisionsgu> nedbat thanks. Running 'python -m webanalyst.validator' works and so do the tests using 'from webanalyst import clerk'
[04:20:40] <Yhg1s> hundredvisionsgu: do consider the other options though.
[04:20:50] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[04:21:04] <hundredvisionsgu> nedbat do you have a good reference about setuptools entry_points?
[04:21:12] <Yhg1s> hundredvisionsgu: you realise I'm not nedbat, right?
[04:21:40] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 258 seconds)
[04:21:52] <Yhg1s> hundredvisionsgu: https://packaging.python.org/guides/distributing-packages-using-setuptools/#entry-points
[04:21:54] <hundredvisionsgu> Sorry Yhg1s you get the crdit
[04:22:17] <Yhg1s> I'm not worried about the credit, I just don't want nedbat to get the blame :)
[04:22:37] <nedbat> i'm mostly here for Yhg1s' reflected glory :)
[04:22:42] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[04:23:16] <Yhg1s> Can't let people hear of me, after all.
[04:23:32] <nedbat> :D
[04:23:33] *** Joins: uskerine (~dsf23re@91.191.78.188.dynamic.jazztel.es)
[04:23:38] <hundredvisionsgu> I'm trying for a witty reply, but I'm drawing a blank
[04:24:35] <uskerine> hi,  while in Linux, how can I launch an external process (program) via its command shell name and parameters and get returned its PID ?
[04:24:46] <Yhg1s> uskerine: the subprocess module.
[04:24:48] <SnoopJ> uskerine, you want the subpr--yea, that
[04:24:57] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[04:25:20] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:25:32] <uskerine> thanks I will google
[04:25:41] <SnoopJ> https://docs.python.org/3/library/subprocess.html
[04:25:43] <Yhg1s> uskerine: I recommend going to docs.python.org/library instead.
[04:26:42] *** Joins: vicfred_ (~vicfred@user/vicfred)
[04:27:35] <uskerine> can I send a signal to that process using subprocess?
[04:27:39] <rud0lf> i know it can be googled but i'd like recommended one, any asyncio tutorial online? for experienced programmer that has no clue about "await" and only knows event-based object methods?
[04:27:49] <rud0lf> any help much appreciated
[04:28:06] <Yhg1s> uskerine: yes, or the signal module.
[04:28:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[04:28:14] <Yhg1s> eh, os.kill and the signal module.
[04:28:18] *** Joins: hafat (~hafat@95.70.168.45)
[04:29:09] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 250 seconds)
[04:29:42] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 245 seconds)
[04:30:01] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:30:05] *** Quits: withered_wolf (~withered_@157.sub-174-192-73.myvzw.com) (Remote host closed the connection)
[04:30:07] *** Quits: zbr (~zbr@h.sbarnea.com) (Quit: Ping timeout (120 seconds))
[04:30:53] *** Joins: zbr (~zbr@h.sbarnea.com)
[04:31:53] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:31:54] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 240 seconds)
[04:32:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[04:32:44] *** Quits: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8) (Quit: Client closed)
[04:33:51] *** Joins: m4v (~znc@ubuntu/member/m4v)
[04:34:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[04:35:46] *** Quits: cman (~Cody@2603:9000:d104:8465:3c57:d567:2a1b:63be) (Quit: WeeChat 3.2)
[04:36:39] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[04:37:12] *** Joins: hundredvisionsgu (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8)
[04:37:23] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Ping timeout: 258 seconds)
[04:37:38] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[04:37:42] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:37:52] *** Joins: pnoud (~pnoud@user/pnoud)
[04:38:18] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Quit: Leaving)
[04:39:09] *** Joins: Betal (~Beta@user/betal)
[04:41:49] <uskerine> proc = subprocess.Popen(['./test', ''], env=dict(os.environ, DISPLAY="192.168.1.2:0.0"), shell=True)
[04:42:12] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 245 seconds)
[04:42:26] <uskerine> shall that be equivalent to typing     DISPLAY=192.168.1.2:0.0 ./test &   in a terminal window?
[04:42:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[04:43:10] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:b8ff:dfa4:4e98:96af)
[04:44:24] <uskerine> yes it is
[04:45:28] <SnoopJ> huh, I didn't know you could do dict(other, key=val), I would've done dict(**other, key=val). Good to know I guess!
[04:47:39] *** Joins: smsearcy (~smsearcy@63.155.54.96)
[04:47:56] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 268 seconds)
[04:47:59] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:53] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 258 seconds)
[04:50:39] *** hundredvisionsgu is now known as metalbat
[04:50:54] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:51:24] <phy1729> In 3.9 you can  os.environ | {'foo': 'bar'}
[04:52:13] <SnoopJ> uskerine, small note: you are passing the entire environment, not just DISPLAY, but yes, that's how you do this.
[04:52:44] <phy1729> the shell also passes the whole environ with DISPLAY added
[04:54:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[04:57:24] *** Quits: regreg (~regreg@86.122.113.90) (Ping timeout: 256 seconds)
[04:57:39] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[04:59:16] *** Quits: smsearcy (~smsearcy@63.155.54.96) (Remote host closed the connection)
[05:01:06] <uskerine> good everything seems to work
[05:01:19] <uskerine> thanks for the help
[05:01:25] <uskerine> I will continue tomorrow
[05:01:40] *** Quits: uskerine (~dsf23re@91.191.78.188.dynamic.jazztel.es) ()
[05:02:34] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: I quit)
[05:04:29] <phy1729> Where is environ the RHS of the linked line defined?  https://github.com/python/cpython/blob/main/Lib/os.py#L763
[05:05:34] *** Joins: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[05:06:22] <nedbat> phy1729: line 769
[05:07:23] *** Joins: euouae (~euouae@user/euouae)
[05:07:24] <phy1729> That's calling that function
[05:07:55] <euouae> Hello, how can I print the traceback of a raised exception?
[05:09:05] <phy1729> nedbat: seems the answer is "magic" https://github.com/python/cpython/commit/52dee687af3671a31f63d6432de0d9ef370fd7b0
[05:09:58] <SnoopJ> phy1729, it's not magic, it's star-imported from either posix or nt
[05:10:09] <phy1729> euouae: https://docs.python.org/3/library/traceback.html and sys.exc_info should get you started
[05:10:11] <SnoopJ> e.g. https://github.com/python/cpython/blob/main/Lib/os.py#L55
[05:10:39] * phy1729 grumbles at star imports
[05:10:42] <phy1729> Thanks SnoopJ
[05:11:07] <SnoopJ> I guess star imports are magic like the kind a lich would do
[05:11:12] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:11:31] <euouae> Thanks phy1729. All the print_* functions did not show up at completion at my IDE
[05:12:46] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:13:08] <euouae> Another question I have is that I use eliot for logging and I am trying to design it for my software
[05:13:20] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Client Quit)
[05:13:35] <euouae> I thought I'd use a DEBUG level for various information such as function invocation, other things useful for debugging
[05:13:59] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[05:14:03] <euouae> and INFO for more important errors; the INFO messages carry a "msg" that is also reported to the user
[05:14:21] <euouae> the way I report to the user is by a separate sink that filters everything but the "msg"
[05:14:29] <euouae> Is that a sound design?
[05:14:38] *** Joins: averell (~averell@user/averell)
[05:15:17] <SnoopJ> If INFO contains not-msg things, then probably I would define a separate level for it, otherwise yes.
[05:15:29] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[05:15:51] <euouae> I would also create my own exception classes which are caught and not reraised, unless necessary to. Original Exception is raised to end the program as usual
[05:16:17] <euouae>  Ah, thanks. so maybe INFO and USER? or USERINFO
[05:16:35] <euouae> or ALERT or such
[05:16:52] * SnoopJ would probably just call it MSG or MESSAGE
[05:16:54] *** Joins: octav1a (~quassel@173.195.145.98)
[05:17:20] <SnoopJ> or maybe not use the logging facility for it if it's not information that needs to end up anywhere but in front of the user
[05:17:36] *** Quits: newpy (~newpy@2601:280:4381:1390:7de3:fc39:406a:4df6) (Ping timeout: 272 seconds)
[05:17:45] <octav1a> Using multiprocessing, is there a way to know from a child if it was the _first_ child to be spawned, or do I need to pass this in as an argument?
[05:18:01] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 258 seconds)
[05:18:15] <SnoopJ> octav1a, that sounds like you want MPI instead
[05:18:28] <SnoopJ> (it uses the concept of process "rank" for this)
[05:19:10] <octav1a> SnoopJ: basically each process gets a list of things to do that is the same length. and I want to print progress. So really what I want to do is just print progress in the first process.
[05:19:25] <octav1a> does that make sense?
[05:19:34] *** Joins: regreg (~regreg@86.122.113.90)
[05:19:34] <SnoopJ> octav1a, I don't think multiprocessing has an analogous concept. If you can't change implementations, you'll probably need to roll your own.
[05:19:48] <euouae> It makes sense but may not be accurate
[05:20:18] <euouae> if one process blocks you'll end up with a 100% screen that won't go away
[05:20:49] <SnoopJ> octav1a, probably you just want to pass messages up and only emit them in the one that spawned all the rest
[05:21:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[05:21:37] <SnoopJ> or maybe set a IS_GLOBAL flag only in that one away from the entrypoint the rest are using
[05:22:32] <octav1a> I'm find with a rough estimate for now, but yeah I can see it may be inaccurate. I didn't design the original program.
[05:23:05] <octav1a> I think I'll just add an argument "log_progress" or something, which will only be true for one..
[05:23:08] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:23:12] <octav1a> stupid but I can't think of a faster way.
[05:23:38] <SnoopJ> if you're fine with incomplete progress data, I guess that works
[05:24:35] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[05:24:46] *** Joins: emelia (~Andika@subs47-116-206-43-112.three.co.id)
[05:25:10] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[05:25:16] <euouae> SnoopJ: good point about separating user messages from logging.
[05:25:17] *** Joins: gvsa123 (~gvsa123@d50-93-30-208.abhsia.telus.net)
[05:25:26] <euouae> I thought about it. Is there a way to structure user messages?
[05:25:38] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[05:25:50] *** Joins: PdimH (~pdimh@user/pdimh)
[05:27:34] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:27:39] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[05:28:06] *** Quits: andika (~Andika@subs46-116-206-42-120.three.co.id) (Ping timeout: 252 seconds)
[05:30:03] *** Quits: emelia (~Andika@subs47-116-206-43-112.three.co.id) (Quit: Goodbye all :D)
[05:30:33] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:27] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[05:34:25] *** Joins: vlm (~vlm@user/vlm)
[05:35:07] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 245 seconds)
[05:35:26] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:35:48] *** Joins: califax (~califax@user/califx)
[05:39:14] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[05:40:58] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Ping timeout: 240 seconds)
[05:43:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[05:44:15] <SnoopJ> Probably a bunch, depends on what that means to you
[05:44:26] <euouae> I just want to inform the user stuff
[05:44:36] <euouae> I know I will have to use a get text kind of method for translations
[05:44:51] <SnoopJ> What is making you want to structure the output?
[05:45:00] <euouae> I don't like polluting the source code with print statements and such
[05:45:07] <euouae> I liked Eliot because it stayed out of the way
[05:45:37] <euouae> Oh I don't mean structuring the output
[05:45:37] <SnoopJ> My input may not be very helpful, then. I avoid eliot because I find it *in* the way more often than not, heh.
[05:45:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:46:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:46:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[05:47:03] <euouae> One technique is carrying a "context" around and whenever there's a reason to emit a message, just invoke some mechanism
[05:47:13] *** Joins: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[05:47:24] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 276 seconds)
[05:47:34] <SnoopJ> If you're using click, there's click.echo(). And of course, logging/eliot have their own ways of doing this
[05:48:02] *** Joins: califax- (~califax@user/califx)
[05:48:24] <euouae> argparse is as far as I went
[05:48:51] <SnoopJ> hmm, I guess logging's "way" is "use print()" anyhow
[05:49:00] <euouae> At least there should be a way to denote duplication of user messages
[05:49:17] <SnoopJ> you could certainly define a Handler that does this work, but I think I'm not understanding what makes it source pollution
[05:49:19] <euouae> i.e. there may be two different instances in which you need to tell the user "please enter a number, not letters"
[05:49:20] *** Joins: summersault (~summersau@2804:7f0:3886:c810:31e3:5939:7b1d:c252)
[05:49:37] <euouae> so you wouldn't want two hardcoded messages there
[05:49:41] <euouae> In my opinion
[05:49:43] <SnoopJ> So don't hardcore them
[05:49:48] <euouae> What to do then?
[05:50:16] <SnoopJ> `MSG_INPUT_PLZ = "..."; print(MSG_INPUT_PLZ)`
[05:50:32] <euouae> what if it's across files/modules?
[05:50:48] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:50:50] <SnoopJ> `from somewhere.else import MSG_INPUT_PLZ`
[05:51:03] <SnoopJ> or you could define your own console_output() in an output package and import/use that
[05:51:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:51:28] *** califax- is now known as califax
[05:51:48] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:51:48] *** brabrax_ is now known as brabrax
[05:55:16] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[05:56:20] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[05:59:25] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 258 seconds)
[06:01:19] *** Joins: newpy (~newpy@2601:280:4381:1390:18ca:68d9:e528:b049)
[06:02:14] <harpia> How do you pass a positional argument to a script while passing a file via stdin? I'm trying this: "python myScript.py myArgument < myFile.txt". Not sure if it's a python thing or a shell thing... lol
[06:02:56] <euouae> It's a shell thing
[06:03:11] *** Quits: regreg (~regreg@86.122.113.90) (Ping timeout: 250 seconds)
[06:03:26] <harpia> yeah, it seems I'm piping the file to the argument instead of the script... i'll figure it out
[06:04:35] <InPhase> harpia: Can you explain what you want to happen with myFile.txt?
[06:05:12] <harpia> i'm feeding myFile.txt to the python script, and the python script also expects a command line argument
[06:05:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:05:38] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[06:06:17] *** Joins: Alexer (~alexer@alexer.net)
[06:06:31] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[06:06:59] *** Quits: metalbat (~hundredvi@2601:1c1:867f:d530:5108:3b72:b65f:dfb8) (Quit: Client closed)
[06:07:05] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[06:07:12] <euouae> (python3 -c myScript.py myArgument) < myFile.txt
[06:07:35] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[06:09:01] *** Joins: regreg (~regreg@86.122.113.90)
[06:09:12] <harpia> FileNotFoundError: [Errno 2] No such file or directory: 'myArgument' lol
[06:09:35] <SnoopJ> `-c myScript.py` is agrammatical
[06:09:41] <SnoopJ> harpia, can we see the complete error report? https://bpaste.net/+python+pytb
[06:10:15] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:11:24] *** Joins: foozle (~foozle@2001-b011-c001-3226-a112-1057-cbc5-1b50.dynamic-ip6.hinet.net)
[06:11:41] *** Quits: Mattiaslndstrm (~Mattiasln@217-210-25-247-no110.tbcn.telia.com) (Ping timeout: 258 seconds)
[06:12:27] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:12:27] <SnoopJ> should be fine just the way you've spelled it, i.e. https://bpa.st/KRCQ
[06:12:32] <harpia> https://bpa.st/WMGA
[06:12:50] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[06:14:08] *** Joins: Mattiaslndstrm (~Mattiasln@217-210-25-247-no110.tbcn.telia.com)
[06:15:22] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[06:15:46] <SnoopJ> harpia, ah, fileinput looks at sys.argv[1:] by default. Try `fileinput.input("-")`
[06:15:49] <InPhase> harpia: fileinput is attempting to open every filename you pass on the command line, starting with myArgument
[06:16:11] <harpia> ah, I see
[06:16:12] <SnoopJ> yea, and if there aren't any, stdin is the default behavior
[06:16:23] *** Joins: adamts (~Adam@user/mysteryblokhed)
[06:16:57] <harpia> yep, it works as I expected now, thanks
[06:17:19] <harpia> what is the "-" in fileinput?
[06:17:50] <harpia> ah, it's in the docs
[06:17:53] <SnoopJ> A yep
[06:17:54] <harpia> I just saw it now
[06:17:54] <SnoopJ> Yep*
[06:17:55] *** Quits: adamts (~Adam@user/mysteryblokhed) (Read error: Connection reset by peer)
[06:18:20] *** Joins: adamts (~Adam@user/mysteryblokhed)
[06:18:30] *** Quits: adamts (~Adam@user/mysteryblokhed) (Read error: Connection reset by peer)
[06:18:42] <InPhase> harpia: Also, you could have done: for line in sys.stdin:
[06:18:42] <SnoopJ> fairly common for this to be a stringy representation of stdin
[06:18:50] *** Joins: adamts (~Adam@user/mysteryblokhed)
[06:19:10] <SnoopJ> Yep, using sys.stdin directly would probably make more sense here since the arguments aren't *just* filenames.
[06:19:21] *** Quits: adamts (~Adam@user/mysteryblokhed) (Read error: Connection reset by peer)
[06:19:25] <InPhase> harpia: I think the primary advantage of fileinput over stdin is intended to be that fallback behavior if files are passed, which seems to be not what you want.
[06:19:46] <harpia> I see what you mean
[06:20:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[06:21:14] <dre> Is there a way I can define a class like "class MyNewClass(BaseClass, (x,y))" so that MyNewClass.member_tuple = (x,y)  ?
[06:22:32] <dre> I couldn't do it with "class MyNewClass(BaseClass,Z(x,y))" where Z is a class that sets the params as Z.member_tuple can I
[06:22:39] <dre> sorry if it's confusing :P
[06:24:14] *** Quits: r1ch (~r1ch@user/r1ch) (Quit: bye!)
[06:25:06] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[06:25:09] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[06:25:19] <rndusr> hi there
[06:26:19] <SnoopJ> dre, what's the reason not to define this as a class attribute directly on the class?
[06:26:24] <rndusr> is there a pip package for socketserver? with a blank installation it is not there
[06:27:30] <rndusr> wait, that's not my question
[06:28:37] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[06:29:03] <rndusr> is there a option in argparse so that when I use --opt hi --opt hi2 i get an array like this? ["hi", "hi2"]
[06:29:24] <rndusr> i tried using the 'extend' action but it didn't work
[06:29:32] <dre> SnoopJ, using someone else's code :P
[06:29:42] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[06:30:18] <KirkMcDonald> rndusr: I'd expect you want action='append'
[06:30:30] <dre> SnoopJ, I have a base class that has the member_tuple, I just need to define a bunch of classes off that one, which have different member vars. looking to do a one liner ( per class )
[06:30:35] <SnoopJ> dre, your second spelling looks like a mixin factory, but probably it would work better as a generic. Those are both deeeeeep into "metaprogramming magick" though
[06:30:46] <SnoopJ> dre, would a class decorator suffice?
[06:30:48] <dre> but i suppose it's no better with having to use pass to define the empty class
[06:30:56] <dre> perhaps, that's a good point.
[06:31:02] <SnoopJ> `@add_members(x,y) class Foo: ...`
[06:31:08] <SnoopJ> or maybe just @members
[06:33:02] <dre> can you do that one line like that? or just you were just posting
[06:33:30] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 240 seconds)
[06:33:31] *** Quits: kmh (~kmh@p200300df5f13bd00d17adf96e818274e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:34:23] <SnoopJ> just a convenient way to type it
[06:34:39] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[06:38:41] *** Joins: pnoud (~pnoud@user/pnoud)
[06:38:47] *** Parts: euouae (~euouae@user/euouae) ()
[06:38:54] *** Quits: clonebaby (~persephon@modemcable052.109-176-173.mc.videotron.ca) (Ping timeout: 258 seconds)
[06:39:36] *** Quits: regreg (~regreg@86.122.113.90) (Read error: Connection reset by peer)
[06:39:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:41:06] <dre> SnoopJ, thanks. I don't think it's really helping be any more concise or readable :x
[06:43:44] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[06:45:18] *** Quits: akk (~akk@97-123-82-25.albq.qwest.net) (Quit: +++)
[06:48:55] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:49:39] *** Joins: semeion (~semeion@user/semeion)
[06:49:41] *** Joins: emika3 (~emika@83.136.182.149)
[06:50:10] *** Quits: emika (~emika@185.207.249.41) (Ping timeout: 240 seconds)
[06:50:10] *** emika3 is now known as emika
[06:52:29] *** Quits: gvsa123 (~gvsa123@d50-93-30-208.abhsia.telus.net) (Quit: Leaving)
[06:55:53] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:56:21] *** Joins: djapo (~archangel@user/djapo)
[06:56:31] *** Joins: phlixi (~phlixi@aftr-62-216-205-171.dynamic.mnet-online.de)
[06:57:22] *** Quits: phlixi_ (~phlixi@aftr-62-216-205-120.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[06:58:01] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:58:01] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (zinc.libera.chat (Nickname regained by services)))
[06:58:01] *** finn_elija is now known as FinnElija
[06:59:15] *** Joins: clonebaby (~persephon@modemcable052.109-176-173.mc.videotron.ca)
[06:59:53] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:00:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[07:01:05] *** __jmcantrell__ is now known as jmcantrell
[07:04:12] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:04:20] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:05:51] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[07:06:01] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 250 seconds)
[07:08:54] *** Joins: upsala (~zcb@185.213.155.160)
[07:09:23] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[07:11:28] *** Joins: jazzy (~jaziz@2600:380:8577:4a6c:39b4:468b:5d5a:f419)
[07:11:35] *** Joins: c10l (~c10l@89.34.167.207)
[07:14:42] *** Quits: summersault (~summersau@2804:7f0:3886:c810:31e3:5939:7b1d:c252) (Ping timeout: 245 seconds)
[07:15:14] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[07:15:24] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[07:15:36] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:16:44] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[07:17:06] <rndusr> hey
[07:17:46] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[07:17:50] <rndusr> is there a way to force socketserver to bind to a specific ip address or interface on a machine? my socketserver is connecting on the loopback interface on my debian machine and I cannot access it outside the machine.
[07:20:08] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[07:20:11] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[07:20:30] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:20:49] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[07:22:12] *** Joins: summersault (~summersau@2804:7f0:3886:c810:31e3:5939:7b1d:c252)
[07:22:23] *** Quits: dld (~davidlowr@2601:197:600:1210:d4d0:7430:7dcd:3fff) (Ping timeout: 252 seconds)
[07:22:50] *** Joins: y1n (~y1n@84-115-64-132.wifi.dynamic.surfer.at)
[07:27:55] *** Joins: andika (~Andika@subs43-116-206-39-116.three.co.id)
[07:28:07] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 250 seconds)
[07:29:12] *** Quits: andika (~Andika@subs43-116-206-39-116.three.co.id) (Client Quit)
[07:30:04] *** Joins: hannibal (hannibal@38.87.162.8)
[07:32:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:33:51] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:34:09] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:34:10] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[07:37:13] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:39:36] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:43:00] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[07:44:18] *** Quits: summersault (~summersau@2804:7f0:3886:c810:31e3:5939:7b1d:c252) (Ping timeout: 268 seconds)
[07:44:32] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[07:45:50] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:46:49] *** Joins: dld (~davidlowr@2601:197:600:1210:7827:638:62ea:3bc0)
[07:49:28] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 265 seconds)
[07:51:11] *** Joins: pnoud (~pnoud@user/pnoud)
[07:51:22] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:51:41] *** Joins: snalty (~Shhh@user/snalty)
[07:52:42] *** Quits: y1n (~y1n@84-115-64-132.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[07:53:54] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:55:43] *** Joins: kmh_ (~kmh@p2e511db5.dip0.t-ipconnect.de)
[07:55:46] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[07:56:44] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:56:56] <KirkMcDonald> rndusr: What are you passing as the server_address?
[07:57:09] <rndusr> KirkMcDonald: i got the answer now, sorry
[07:57:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:59:17] *** Quits: Samian (~Sami@2620:10d:c091:480::1:4df9) (Ping timeout: 245 seconds)
[08:04:32] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[08:06:27] *** Quits: p-i-_ (~Ohmu@node-mba.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[08:07:27] *** Quits: VimVim (~VimVim@85.191.77.4) (Ping timeout: 258 seconds)
[08:08:19] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:09:07] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[08:10:21] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[08:15:37] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (Remote host closed the connection)
[08:17:11] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[08:18:28] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[08:20:41] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[08:21:11] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[08:22:45] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 276 seconds)
[08:23:24] *** Quits: ckdCreations (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[08:23:40] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[08:24:59] *** Joins: KombuchaKip (~kip@192.252.230.5)
[08:25:31] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[08:26:19] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:26:50] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[08:28:35] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[08:33:21] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[08:33:21] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[08:33:40] *** Joins: andika (~andika@subs46-116-206-42-112.three.co.id)
[08:33:52] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 245 seconds)
[08:34:18] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[08:35:00] *** Joins: zzy2357 (~zzy2357@240e:3b7:3278:1ec0:1e4:be6f:ae30:85b3)
[08:35:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:51] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:38:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[08:41:48] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-c4f6-b782-bed6-f46f.res6.spectrum.com) (Ping timeout: 256 seconds)
[08:42:15] *** Quits: andika (~andika@subs46-116-206-42-112.three.co.id) (Quit: Client closed)
[08:42:27] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[08:48:27] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[08:52:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[08:53:28] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[08:53:41] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[08:57:59] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:58:36] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[08:58:48] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:58:49] <gggpkm> what is the diff of jupyter and ipython notebook
[09:01:32] *** Quits: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[09:01:41] *** Joins: trace987 (~trace@91.66.152.136)
[09:04:03] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Good Bye)
[09:05:21] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[09:05:24] *** Joins: MercilessDeth (~brad@136.49.61.2)
[09:05:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[09:05:57] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:06:11] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:06:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[09:07:33] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[09:07:50] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[09:10:10] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[09:10:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:10:40] *** Quits: trace987 (~trace@91.66.152.136) (Ping timeout: 265 seconds)
[09:10:56] *** Joins: semeion (~semeion@user/semeion)
[09:11:08] <shlomif> gggpkm: hi
[09:11:39] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[09:12:42] <gggpkm> ？
[09:13:34] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[09:14:00] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[09:14:29] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:16:11] <HurricaneHarry> gggpkm: jupyter serves more languages than just python, ipython notebook does not basicly
[09:17:10] <HurricaneHarry> gggpkm: https://stackoverflow.com/questions/51700425/what-is-the-relation-and-difference-between-ipython-and-jupyter-console#:~:text=Going%20forward%2C%20Jupyter%20will%20contain,only%20about%20Python%20and%20terminal.
[09:17:20] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[09:18:02] *** Quits: pgib (~textual@173.38.117.81) (Ping timeout: 268 seconds)
[09:19:06] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[09:19:11] *** Quits: zwindl (~abc@user/abc) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:19:18] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[09:21:18] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[09:21:59] <gggpkm> okay thanks
[09:22:18] *** Joins: semeion (~semeion@user/semeion)
[09:23:21] <BrenBarn> ipython notebook evolved over time into jupyter notebook
[09:24:05] *** Joins: abc_ (~abc@user/abc)
[09:25:39] *** Joins: mnemonic (~semeion@user/semeion)
[09:27:13] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-bd00-f7b1-3fd7-598d.res6.spectrum.com)
[09:28:17] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:28:27] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[09:28:43] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[09:29:50] *** Joins: nbao (~nbao@187.20.162.127)
[09:31:25] *** Quits: cjb (~cjb@user/cjb) (Read error: Connection reset by peer)
[09:31:54] *** Joins: dvx (~dvx@185.63.97.64)
[09:31:56] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[09:32:06] *** Quits: newpy (~newpy@2601:280:4381:1390:18ca:68d9:e528:b049) (Quit: Leaving)
[09:32:25] *** Joins: stranac (~stranac@195.29.239.126)
[09:34:19] *** Joins: pnoud (~pnoud@user/pnoud)
[09:35:16] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[09:38:41] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 258 seconds)
[09:38:54] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[09:39:47] *** Quits: foozle (~foozle@2001-b011-c001-3226-a112-1057-cbc5-1b50.dynamic-ip6.hinet.net) (Quit: Leaving)
[09:41:04] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[09:41:57] *** Joins: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[09:43:03] *** Quits: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com) (Ping timeout: 265 seconds)
[09:43:29] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[09:44:52] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 272 seconds)
[09:46:22] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[09:48:27] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[09:49:34] *** Quits: jkl (~jkl@user/jkl) (Quit: ZNC 1.8.2 - https://znc.in)
[09:50:56] *** Joins: jkl (~jkl@user/jkl)
[09:54:40] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:55:04] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[09:59:37] *** Joins: tijuco (~tijuco@user/tijuco)
[09:59:38] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:00:04] *** Quits: tijuco (~tijuco@user/tijuco) (Client Quit)
[10:03:14] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[10:03:54] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:05:15] <nubonix> anyone able to help me with a memory leak ? im also wondering why this is consuming 8-17mbs on the lan https://bpa.st/CAVQ
[10:05:33] <nubonix> could be because im not using classes correctly
[10:05:54] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 258 seconds)
[10:06:37] *** Joins: stevieh (~skrodzki@91.148.233.60)
[10:06:53] *** Joins: candyman1 (~candyman@user/candyman)
[10:06:54] *** Joins: p-i- (~Ohmu@node-mba.pool-118-173.dynamic.totinternet.net)
[10:07:42] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[10:08:31] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[10:09:06] <deniska> nubonix: you are sending uncompressed (which means big) frames as fast as your system is able to acquire screenshots (which is probably fairly fast)
[10:09:16] *** Joins: VaniaPy (~VaniaPy@46.12.81.49.dsl.dyn.forthnet.gr)
[10:09:55] <nubonix> deniska: no, its about 2 fps, because the background_screenshot function takes 0.5 seconds
[10:10:14] <nubonix> deniska: how do i compress?
[10:10:51] <deniska> nubonix: also it might be the case that win32ui.CreateBitmap() needs some corresponding call to get rid of the bitmap
[10:11:17] <nubonix> yeah the dataBitMap is leaking i think, but im not sure
[10:11:50] <nubonix> deniska: can i `del` the bitmap?
[10:11:54] *** Quits: p-i- (~Ohmu@node-mba.pool-118-173.dynamic.totinternet.net) (Ping timeout: 252 seconds)
[10:11:54] <deniska> I see win32gui.DeleteObject(bmp.GetHandle()) used here https://www.programcreek.com/python/example/62809/win32ui.CreateBitmap
[10:12:09] <deniska> nubonix: no, `del` only does what happens at the end of the function anyway
[10:12:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[10:12:42] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[10:12:56] <nubonix> right, but it seems its creating multiple instances of the bitmap [i think, i dont have a clue tho] causing the memory leak?
[10:13:41] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[10:14:16] <deniska> nubonix: win32ui.CreateBitmap() gives you a python objects which represents a handle to non-python thing managed by windows
[10:14:40] <deniska> nubonix: just because a python object went away, doesn't mean corresponding windows resource did
[10:14:42] <nubonix> ah, so its windows most likely holding it up, in which it makes sense del doesnt work
[10:14:56] <nubonix> windows == memory leak b/c of how im using it
[10:15:15] <nubonix> therefore i need to use a python wrapper to call X function in windows to release the bitmap
[10:15:51] <nubonix> hence win32gui.DeleteObject(bmp.GetHandle())
[10:15:55] *** Joins: ihristov (~ihristov@213-240-197-22.2073361157.ddns.cablebg.net)
[10:16:30] <deniska> nubonix: the authors of the library could hook it up to be released when a python object goes away, but I guess windows is more particular about the order resources has to be freed than python, or the typical situation is that you don't want bitmap to go away after the python object does
[10:16:31] *** Joins: anandprabhu (~anandprab@45.83.220.206)
[10:17:02] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:17:22] <deniska> nubonix: basically any win32something method with Create in it, I'd take a closer look whether it has to be released
[10:17:38] <deniska> DCs and stuff probably have to be too
[10:18:02] <nubonix> ah okay
[10:18:25] *** Joins: relationalalgebr (~relationa@117.216.30.176)
[10:18:39] <nubonix> hmm, kinda wish there was another way to take an out of focus / background programs screenshot, but couldnt find anything else
[10:19:10] <nubonix> but i guess it makes sense id have to use the OS level to do so
[10:19:27] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:19:42] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[10:21:24] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[10:21:34] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[10:21:50] *** Quits: anandprabhu (~anandprab@45.83.220.206) (Quit: Leaving)
[10:25:02] *** Quits: nbao (~nbao@187.20.162.127) (Quit: leaving)
[10:25:45] <nubonix> a websocket question, with the code above, if im sending multiple frames from multiple programs to the same websocket [could be more websockets, idk whats the best method] how can i distinguish between them? i was thinking something like a dictionary and then convert that to bytes as i was have difficulties with receive_json with fastapi, and i think bytes might be better b/c of compression?
[10:25:51] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[10:26:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:27:22] *** Quits: audiocat (~audio@2603-8081-1800-00ad-12ef-0360-32b6-677f.res6.spectrum.com) (Ping timeout: 240 seconds)
[10:27:56] <deniska> nubonix: have you looked at software streamers use like OBS Studio? It seems to be able to capture programs when they're out of focus
[10:28:29] <nubonix> deniska hmm, didnt know it was capable of such
[10:28:49] <nubonix> would probably be better to not re-invent the wheel :D
[10:29:05] <deniska> maybe it only works for games which go through APIs like opengl/dx, dunno, but it's easy to check
[10:30:26] <deniska> it has a few ways of capturing video from applications because which works best depends on both the application and hardware used
[10:30:30] <nubonix> yeah, was wondering about control-ability w/ python
[10:30:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[10:33:02] <deniska> I've seen various plugins for remote control. I'm not sure what your usecase though
[10:33:12] <nubonix> think this is the only package for obs https://github.com/zooba/obs-python
[10:33:26] <nubonix> and cant find any docs or usecases
[10:33:51] <nubonix> deniska: im creating a remote control via fastapi
[10:34:29] <nubonix> already done so*
[10:34:33] <nubonix> just trying to send images now
[10:34:57] <deniska> a remote control for what?
[10:35:00] <jarthur> nubonix kinda up to you on how to package your messages, easy enough to use something like JSON to have fields for metadata, or use a faster-than-JSON like CBOR or MessagePack. There are also WebSocket protocols out there with their own messaging format like WAMP and Socket.io
[10:35:57] <nubonix> deniska: my other computers & vps's
[10:36:32] <nubonix> jarthur: think ill use json for now, could eventually use something like CBOR or MessagePack [never heard of these]
[10:36:40] <deniska> nubonix: https://guacamole.apache.org/ I've ran this thing for a while for remoting into various computers from different places
[10:37:20] <nubonix> deniska: not looking for RDP like
[10:37:33] <nubonix> mb, just starting / stoping programs mainly
[10:37:39] *** Quits: relationalalgebr (~relationa@117.216.30.176) (Quit: relationalalgebr)
[10:37:53] <jarthur> Cool, if you use JSON, I'd just use Text WebSocket messages. Tech like https://pypi.org/project/cbor/ or https://msgpack.org/ is well suited for the binary messages.
[10:38:34] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Quit: Client closed)
[10:38:42] *** Joins: zzy23 (~zzy2357@240e:3b7:3278:1ec0:1e4:be6f:ae30:85b3)
[10:38:55] <nubonix> looks like a cool project tho guacamole
[10:41:15] <nubonix> hmm, alright, ill give cbor2 a shot
[10:41:29] *** Quits: zzy2357 (~zzy2357@240e:3b7:3278:1ec0:1e4:be6f:ae30:85b3) (Ping timeout: 252 seconds)
[10:43:19] *** Quits: zzy23 (~zzy2357@240e:3b7:3278:1ec0:1e4:be6f:ae30:85b3) (Client Quit)
[10:44:12] <nubonix> deniska: really appreciate your help :)
[10:45:15] <nubonix> w/ deleting windows things & compression
[10:45:50] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:25] *** Joins: seednode (~seednode@user/seednode)
[10:48:22] <deniska> nubonix: if you're not aiming at 30fps, sending PNGs instead of bitmaps will be a huge benefit alone
[10:48:38] <deniska> (assuming you're screenshoting boring gray windows)
[10:48:53] <nubonix> deniska: anything better than 2fps is good :D
[10:49:03] *** Quits: candyman1 (~candyman@user/candyman) (Quit: candyman1)
[10:49:55] <graingert> nubonix: you're trying to multiplex?
[10:49:56] <nubonix> deniska: hmm, alright, ill look into that and see if i cant come up with a solution, 2fps might be fine for now, but ill definitely keep pngs in mind [noted on my project todolist]
[10:50:08] <nubonix> graingert: i forgot what that is
[10:50:22] <graingert> nubonix: I think you might be best off using http2 SSE for multiplexing
[10:50:27] *** Joins: kosh (~kosh@user/kosh)
[10:50:47] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:50:56] <nubonix> graingert gibberish to me
[10:50:57] <graingert> Multiplexing is when you pipe multiple streams through one
[10:51:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:51:14] *** Joins: haroon (~haroon@gw.wmd.de)
[10:51:14] <nubonix> id hardly consider 2fps to be a stream :D
[10:51:26] <graingert> nubonix: http 2 supports multiple concurrent http connections on the same socket
[10:51:42] <graingert> http requests*
[10:51:47] <nubonix> graingert: better than a websocket for this?
[10:51:59] *** Lord_of_Life_ is now known as Lord_of_Life
[10:52:06] <graingert> nubonix: often
[10:52:13] <graingert> Depends what you're doing
[10:52:44] <nubonix> hmm, well tbh, my lag isnt from how im sending the data, im sure that would be awesome for a live-stream like app, but i can get away with 2fps
[10:52:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:53:23] <nubonix> cause it takes 0.5 seconds to create a bitmap
[10:53:36] <nubonix> on my pc at least, and then it takes an extra 0.2 seconds for everything else
[10:53:42] <nubonix> [on average]
[10:53:52] <nubonix> so like 1.3fps, but w/e
[10:54:17] <nubonix> graingert: alright, ill note that as well on my project todolist
[10:54:51] *** Joins: relationalalgebr (~relationa@117.216.30.176)
[10:55:41] <graingert> nubonix: Currently you need to open a new tcp connection for each web socket
[10:56:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:56:10] *** Joins: gggp (~gggp@60.10.194.43)
[10:57:16] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:57:17] <nubonix> graingert: how so if im sending json to include the image and metadata? [a way to distinguish between the multiple images]
[10:57:35] *** Joins: palasso (~palasso@user/palasso)
[10:57:45] <nubonix> and its an async websocket so, shouldnt need to?
[10:57:45] <graingert> nubonix: ?
[10:57:50] <graingert> nubonix: ??
[10:58:20] <nubonix> graingert: mm, do you mean another port?
[10:58:20] *** Joins: candyman1 (~candyman@user/candyman)
[10:58:22] <graingert> nubonix: The api you use doesn't have any bearing on the protocol limitations
[10:58:53] <graingert> nubonix: no I mean another SYN, SYN ACK + TLS round trip
[10:59:32] *** Quits: poorboy (~poorboy@104.131.46.87) (Remote host closed the connection)
[10:59:54] <nubonix> e.g. ?`Currently you need to open a new tcp connection for each web socket`
[11:00:12] <graingert> nubonix: Correct
[11:00:16] <nubonix> ...
[11:00:23] <nubonix> wdym
[11:00:42] *** Joins: rendar (~rendar@user/rendar)
[11:00:44] <graingert> Like each websocket connection maps directly to a new TCP connection
[11:01:05] <nubonix> okay, so outside of the restful api
[11:01:41] <nubonix> doesnt that tcp connection stay alive tho?
[11:01:50] <graingert> So your browser can make multiple concurrent http requests to your API all over that one TCP connection
[11:02:06] <graingert> But has to make a brand new connection for each web socket
[11:02:14] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:02:29] <nubonix> right, but why do i need more than one websocket?
[11:02:46] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[11:02:51] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:02:53] <graingert> nubonix: you're multiplexing frames over one web socket?
[11:02:57] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:03:01] <nubonix> why not?
[11:03:13] <graingert> 06:55:45 <nubonix> a websocket question, with the code above, if im sending multiple frames from multiple programs to the same websocket [could be more websockets, idk whats the best method] how can i distinguish between them? i was thinking something like a dictionary and then convert that to bytes as i was have difficulties with receive_json with fastapi, and i think bytes might be better b/c of compression?
[11:03:15] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:03:22] *** Joins: poorboy (~poorboy@104.131.46.87)
[11:03:47] <graingert> With SSR you could use a different stream for each program
[11:06:11] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[11:06:21] <nubonix> graingert are there some docs i can for SSR that you would recommend?
[11:06:28] <nubonix> i can look at*
[11:06:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:06:51] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[11:07:26] <nubonix> SSR == server side rendering?
[11:07:30] *** Quits: emerent (~quassel@p200300cd57058ccaba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:08:06] *** Joins: emerent (~quassel@p200300cd57058ca0ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:09:44] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:09:45] <nubonix> is there an example implementation of this somewhere that you know of? *
[11:09:55] *** Joins: gusto (~Augustus@109.255.100.54)
[11:11:11] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-bd00-f7b1-3fd7-598d.res6.spectrum.com) (Quit: jarthur)
[11:12:27] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:12:50] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:13:28] <graingert> nubonix: Oh sorry I've been meaning SSE this whole time
[11:13:54] <nubonix> graingert reason id prefer to stick to using a websocket / json [to identify the streams] is b/c its half+ written already
[11:13:58] *** Quits: emika (~emika@83.136.182.149) (Ping timeout: 268 seconds)
[11:14:00] <graingert> nubonix: https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events
[11:14:25] *** cyberjunkie_ is now known as cyberjunkie
[11:14:49] <nubonix> graingert: something not browser driven and in python :please:
[11:15:37] *** Joins: emika (~emika@185.207.249.178)
[11:16:02] <meejah> nubonix: there's Autobahn + crossbar .. but what are you trying to accomplish?
[11:16:12] <nubonix> perhaps https://sairamkrish.medium.com/handling-server-send-events-with-python-fastapi-e578f3929af1
[11:16:46] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[11:16:47] <nubonix> meejah, so ive got X amount of programs running out of focus, and id like to send images / screenshots of them to a remote server
[11:17:12] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[11:17:17] <nubonix> ive got X amount of programs running on another computer* and id like to send them to another computer [remotely]
[11:17:31] <meejah> websockets is pretty low-level .. with WAMP (for example) you get pub-sub and RPC patterns..
[11:17:36] <graingert> nubonix is using FastAPI afaik
[11:17:41] <nubonix> yes
[11:17:55] <meejah> why not just a normal HTTP POST for each photo..?
[11:17:56] <graingert> You can use StreamingResponse and send an async generator of frames
[11:18:06] <graingert> meejah: server sent events
[11:18:18] <nubonix> meejah i think graingerts way is better / faster,
[11:18:48] <meejah> graingert: they're _uploading_ to remote server, no? isn't SSE server->client(s)?
[11:18:52] <nubonix> more geared towards what im doing*
[11:19:09] <nubonix> im not saving the images to the disk, im displaying remotely
[11:19:30] <nubonix> *watching from afar*
[11:20:14] <meejah> "afar" is the web-server?
[11:20:16] <nubonix> think of it as, an employer watching their employees
[11:20:24] <meejah> i hate it already ;)
[11:20:31] <nubonix> yes, afar == webs server
[11:20:50] <nubonix> meejah haha fair enough, its just a simile tho
[11:20:57] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 245 seconds)
[11:21:33] <meejah> so what's the problem with websockets? one screenshot per message?
[11:23:17] <nubonix> problem is im multiplexing, so http2 & sse is faster / better than websockets
[11:23:25] <nubonix> however for my application i think websockets would also work
[11:23:31] <nubonix> for my use case*
[11:23:38] <nubonix> but why not learn a better way of doing so
[11:24:30] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[11:25:52] <meejah> i don't see what SSE gives you here .. but sure, "normal HTTP POST" is what I suggested (and if you're http2 then you can multiplex and save the connection setup)
[11:26:11] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:26:24] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 258 seconds)
[11:26:27] <graingert> It's more of a pain to manually multiplex messages down one websocket than use SSE
[11:26:51] <meejah> but they're uploading. just http2
[11:27:43] <graingert> What
[11:27:55] <graingert> I thought it was from the server to the client nubonix
[11:28:02] <graingert> Totally just use a normal post
[11:28:17] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:28:29] <nubonix> graingert ?
[11:28:34] <petaflot> hello! I was looking for a suggestion to add a number of years minus one day to a date ; the problem I see is with leap years : I cannot simply add X years to my date and use timedelta minus one day because it's possible that the date in the future is invalid (amd timedelta should fail). same goes for the reverse : I cannot simply timedelta minus one day and add ten years because the date might be
[11:28:40] <petaflot> invalid if it falls on a leap year. any suggestion?
[11:28:47] <nubonix> petaflot: use pendulum
[11:29:44] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 255 seconds)
[11:29:58] <nubonix> graingert the connection one to many
[11:30:09] <nubonix> the connection is one to many*
[11:30:29] <meejah> nubonix: you have one server, and there are many clients uploading screenshots to the server (right?)
[11:30:30] <nubonix> so i have one client pulling from multiple servers
[11:31:04] *** Joins: sreve (~quassel@p4ff44f42.dip0.t-ipconnect.de)
[11:31:39] <nubonix> meejah: mm, im running a fastapi server on the computer that is sending the data, and im receiving the data on my one/main computer
[11:31:46] <genewitch> i'm using joblib (or processes) - how do i stop everything if a process finishes (the function i am calling returns)?
[11:31:54] <petaflot> nubonix: sweet. thank you!
[11:31:54] *** Joins: mike18 (~geri@217-149-163-174.nat.highway.telekom.at)
[11:32:03] <nubonix> petaflot: np
[11:32:13] <mike18> hi - why does the returned data look different from the downlaod? https://ideone.com/1bNe0R
[11:32:20] <VaniaPy> hello! i have import to my code this one "from sqlalchemy.dialects.postgresql import UUID
[11:32:20] <nubonix> meejah: all the other computers that are sending images have their own fastapi server
[11:32:21] <VaniaPy> "
[11:32:42] <VaniaPy> but i'm still getting ModuleNotFoundError: No module named 'sqlalchemy.dialects.postgresql'
[11:33:06] <nubonix> meejah: and im using that fastapi to A: remote control via restful api, B: send screenshots of out of focus windows
[11:33:22] <nubonix> think my keyboard is broken...
[11:33:29] <nubonix> and im using that fastapi server to A:...
[11:33:52] *** Joins: chele (~chele@user/chele)
[11:34:48] <nubonix> graingert did you happen to see my employer / employee simile?
[11:35:03] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:35:26] <nubonix> graingert what im doing is basically: an employeer watching his employees on their computers viewing various programs that the employee is running
[11:36:24] *** Joins: magla (~gelignite@55d46dd2.access.ecotel.net)
[11:36:26] *** Joins: pneff (~pneff@2a02:168:fedc:0:8177:d899:feea:d317)
[11:36:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:37:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[11:38:02] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 245 seconds)
[11:38:07] *** Joins: mattil (~mattilinn@87-92-232-85.rev.dnainternet.fi)
[11:39:05] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:39:37] <susam> mike18: What exactly is different there? Which lines should we see to spot the difference?
[11:39:40] <mike18> what means if a string begins with b' in python? binary?
[11:39:53] <mike18> how to get to a "normal" string?
[11:40:14] <susam> mike18: s3.download(path).decode()
[11:40:17] <mike18> it shows b' and has a \' in it for exacpling
[11:40:45] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Quit: Leaving)
[11:41:04] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:41:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:41:14] <nubonix> meejah: graingert think http post is probably best tho, definitely the simplest
[11:41:27] <nubonix> as fps isnt important
[11:41:29] <graingert> 100% just plain http post from the clients
[11:41:36] <susam> mike18: Yes, that is printing the repr() of the bytes.
[11:41:50] <mike18> yeah i mean bytes
[11:41:54] <mike18> but if i case to str ?
[11:41:58] <mike18> will it not give string?
[11:42:06] <mike18> str(bytes) ?
[11:42:21] <nubonix> graingert: yeah, it gives me the ability to A: send the images at w/e increment 2/s and B: identify which program the image corresponds to
[11:42:32] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[11:42:45] <nubonix> graingert meejah decision has been made :D [http post]
[11:42:48] <susam> mike18: No. Like I said. Try .decode().
[11:42:58] <nubonix> thank you both!!!
[11:43:18] <nubonix> and densika wherever you are
[11:43:33] <susam> mike18: To understand what is going on, try this example on your REPL: a = b'foo'; print(a); print(a.decode())
[11:43:58] <genewitch> i
[11:44:18] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[11:44:41] <susam> mike18: Also see https://docs.python.org/3/library/stdtypes.html#bytes.decode . Note the fact that .decode() assumes UTF-8 encoding by default. If that assumption does not good hold, then you need to specify the encoding keyword argument.
[11:44:54] <raek> mike18: bytes and str are different in python. "bytes" is for binary data and "str" is for text. to convert between the two you need to decide on an character encoding use .decode / .encoding methods and pass the encodign name as a parameter
[11:45:41] <raek> susam: but UTF-8 is not the default, right? the default is taken from the current locale, IIRC?
[11:46:34] <susam> mike18: str() relies on the type implementing an __str__() method. If __str__() is not implemented, str() falls back on repr() which invokes the __repr__() method.
[11:46:52] <raek> mike18: in the case of JSON, the JSON standard defines that JSON should always use UTF-8, so in this case the encoding will always be the same
[11:47:18] <mike18> encode with utf8?
[11:47:46] <susam> raek: I don't see the documentation at https://docs.python.org/3/library/stdtypes.html#bytes.decode mentioning that the default depends on the locale.
[11:47:56] *** Joins: dkmueller (~dkmueller@2a01:c22:7205:b400:48b3:fb20:793a:b6c3)
[11:48:02] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[11:48:31] <raek> susam: ah, you are right. I confused this with the encoding of the stdin/stdout streams...
[11:49:10] <raek> mike18: in the download case you download the bytes, which you then decode into a string using UTF-8
[11:49:24] <raek> return s3_response_object["Body"].read().decode("utf-8")
[11:49:49] <raek> or maybe more appropriately: s3.download(path).decode("utf-8")
[11:49:51] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[11:49:52] *** abc_ is now known as zwindl
[11:50:15] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[11:50:43] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 246 seconds)
[11:51:23] <susam> mike18: Did you see my second response after you posted your question?
[11:51:38] <raek> and similarly for the upload: s3.upload(path, some_string.encode("utf-8"))
[11:53:27] <mike18> justok
[11:53:41] <mike18> better encode or decode?
[11:54:32] *** Joins: NeilRG_ (~NeilRG@192.222.196.111)
[11:56:26] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:56:38] <susam> mike18: I cannot understand your last two messages. What exactly is your latest question? Please elaborate.
[11:57:07] <mike18> you said i can use upload with encode.utf8 or download with decode.utf8...
[11:57:13] *** Quits: stevieh (~skrodzki@91.148.233.60) (Ping timeout: 250 seconds)
[11:57:46] *** Joins: justyb11 (~justyb@2601:483:500:3ea:ec03:2ce:d7ba:f9e5)
[11:58:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:59:01] <susam> mike18: No, I did not say that.
[11:59:21] *** Quits: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 265 seconds)
[12:00:14] <mike18> i need to use both?
[12:00:20] <susam> mike18: There isn't such a thing as encode.utf8 or decode.utf8. There is .encode('utf-8') and .decode('utf-8'). Regardless, what you are trying to ask right now is unclear. You need to elaborate and be precise so that your question is clear.
[12:00:34] <mike18> i know i just wrote the short verision ...
[12:00:41] <mike18> .encode('utf-8') and .decode('utf-8').
[12:00:45] <mike18> i really mean
[12:00:52] <susam> mike18: You don't need to use both but if you do use both, your code is going to be simpler.
[12:00:58] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:00:59] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:01:01] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Client Quit)
[12:01:14] <susam> mike18: Then you don't have to manually escape all the special characters inside bytes by yourself. .encode() will do it for you.
[12:01:20] *** Quits: candyman1 (~candyman@user/candyman) (Remote host closed the connection)
[12:01:52] *** Quits: syllin (~syllin@user/syllin) (Quit: Ping timeout (120 seconds))
[12:02:02] *** Joins: syllin (~syllin@user/syllin)
[12:03:07] <susam> mike18: For example, let us say this is your json: json_string = '{"foo": "bar"}'. Then you can perform s3.upload(path, json_string.encode()). The .encode() converts your string to bytes which is what you want. Then while downloading, you can perform: downloaded_json_string = s3.download(path).decode()
[12:03:28] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[12:03:28] *** Quits: gry (~quassel@botters/gry) (Remote host closed the connection)
[12:03:37] <mike18> so upload takes only bytes right?
[12:03:54] *** Joins: gry (~quassel@botters/gry)
[12:04:08] *** Joins: pnoud (~pnoud@user/pnoud)
[12:06:11] <susam> mike18: Your code seems to indicate that. Depends on what 's3' is. It looks like it is an object of a class that has an upload() method that takes a path and bytes. But you would know this better than we do because it is your code.
[12:06:13] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:06:58] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[12:07:01] <mike18> s3 is aws file system
[12:07:19] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:07:20] *** Joins: Trashlord (~trash@user/trashlord)
[12:07:36] <susam> mike18: I know what S3 is. I don't know what your 's3' variable is. How is that variable created? What is the type of the object in that variable?
[12:10:09] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[12:10:32] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[12:10:40] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[12:12:10] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 240 seconds)
[12:12:43] *** Joins: c10l (~c10l@89.34.167.207)
[12:12:45] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[12:12:47] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[12:14:01] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[12:15:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:18:27] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[12:19:34] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:20:12] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[12:20:26] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[12:21:17] *** Joins: zzy2357 (~zzy2357@240e:3b7:3278:1ec0:1e4:be6f:ae30:85b3)
[12:21:21] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[12:21:25] *** Parts: zzy2357 (~zzy2357@240e:3b7:3278:1ec0:1e4:be6f:ae30:85b3) ()
[12:21:36] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:22:21] *** Joins: pnoud (~pnoud@user/pnoud)
[12:24:40] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[12:24:53] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:25:35] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[12:26:10] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[12:26:54] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[12:27:21] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[12:28:33] *** Joins: anandprabhu (~anandprab@185.65.135.253)
[12:28:46] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[12:29:54] *** Quits: Mattiaslndstrm (~Mattiasln@217-210-25-247-no110.tbcn.telia.com) (Ping timeout: 240 seconds)
[12:30:37] *** Joins: gggp (~gggp@60.10.194.43)
[12:30:39] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:30:50] <gggp> is the core of sklearn written with c/c++?
[12:31:37] *** Joins: mickey (~user@user/mickey)
[12:31:52] *** Quits: sarna (~sarna@c40-227.icpnet.pl) (Ping timeout: 256 seconds)
[12:31:58] <supakeen> -ish, sure.
[12:32:13] <supakeen> Scikit itself is mostly fortran/c/c++.
[12:33:00] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[12:33:07] <VaniaPy> is there a way to pass a function (that generates random ids) as an id column in sqlalchemy?
[12:33:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[12:34:15] <supakeen> VaniaPy: Yes: https://docs.sqlalchemy.org/en/14/core/defaults.html#python-executed-functions
[12:35:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:00] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:23] <VaniaPy> awesome! thanks!
[12:36:59] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:37:05] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:37:32] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[12:37:35] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[12:39:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:41] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[12:40:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[12:40:37] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[12:41:56] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[12:43:22] *** Joins: gggp__ (~gggp@60.10.23.160)
[12:44:21] <gggp__> supakeen, how use it do some mathematic principle proof
[12:44:43] <supakeen> I don't know, I don't use it.
[12:44:53] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[12:45:08] <gggp__> unable to find a clear path to get close to it
[12:47:01] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:48:40] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[12:50:26] *** Joins: elgraz (~elgraz@151.65.7.224)
[12:50:32] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[12:52:16] *** Quits: gggp__ (~gggp@60.10.23.160) (Ping timeout: 256 seconds)
[12:52:35] <nubonix> so im using cbor2 to compress a numpy array and send it over the internet via a starlette restful api, but im having difficulties converting it back to something i can work with [trying to save the image to the disk, to make sure im getting the correct image, before i start incorporating it into my pyqt5 app]. here is an example of the data im trying to save to the disk
[12:52:35] <nubonix> https://gist.githubusercontent.com/nubonics/dbe60cad285d89741e11e8cd658c4f16/raw/925a311ee94e07e1f481a5e9ea816ed898493037/gistfile1.txt
[12:52:42] <ApostleInTriumph> Hello, i would like to extract the characters following "_" and trailing "L" in a string. Example 33c from this text `Yyat+_33cL_F1_FTop`
[12:52:56] <ApostleInTriumph> I'm trying re.compile('([.\d]+)\s*(?:L)')
[12:53:22] <ApostleInTriumph> however, the output of pattern.findall(text) is empty,
[12:53:28] <ApostleInTriumph> what am i doing wrong?
[12:53:56] <ApostleInTriumph> it seems to work for `Lura_19L_FTop`
[12:56:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[12:57:01] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:57:06] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[12:57:42] *** Quits: anandprabhu (~anandprab@185.65.135.253) (Quit: Leaving)
[12:58:22] *** Quits: relationalalgebr (~relationa@117.216.30.176) (Quit: relationalalgebr)
[12:59:54] *** Joins: candyman1 (~candyman@user/candyman)
[13:00:15] *** Joins: upsala (~zcb@185.213.155.160)
[13:02:59] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:03:44] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[13:04:11] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:06:03] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[13:06:06] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[13:07:16] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:07:25] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[13:07:30] *** Quits: mxp_ (~mxp@82.98.30.69) (Ping timeout: 252 seconds)
[13:08:15] *** Joins: mxp (~mxp@82.98.30.69)
[13:08:57] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[13:10:20] <Wulf> ApostleInTriumph: you might want r'' instead of ''
[13:10:39] <Wulf> but in this case it makes no difference
[13:11:18] <Repiphany> What's wrong with something like r'_(.+?)L'
[13:12:48] <Wulf> Repiphany: that should work. But maybe not . but something else like \w or [a-zA-Z0-9]
[13:12:59] <ApostleInTriumph> Repiphany '([.\d]+)\s*(?:c|[Ll])' did the trick
[13:13:11] <ApostleInTriumph> Wulf what does r' do?
[13:13:26] <Repiphany> I think your problem description is incomplete or you're overcomplicating the regex needed
[13:13:40] <Wulf> ApostleInTriumph: r"foo\\bar" != "foo\\bar"
[13:15:07] <Wulf> I wonder why biology people use funny strings like that instead of proper data structures.
[13:15:38] *** Joins: Naan (~Naan@user/naan)
[13:15:44] <Repiphany> It's intentional to screw as many people as possible who use Excel carelessly
[13:15:56] <Wulf> (:
[13:16:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[13:16:35] *** Quits: rany (~rany@user/rany) (Ping timeout: 252 seconds)
[13:16:35] *** Quits: sirn (~sirn@user/sirn) (Read error: Connection reset by peer)
[13:16:36] <ApostleInTriumph> lol
[13:16:57] <ApostleInTriumph> Repiphany basically i want find volume from a given string
[13:17:09] <ApostleInTriumph> like Wulf guessed, it's biological data
[13:17:16] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[13:17:20] <ApostleInTriumph> there are stuffs like XXL in the string that i want to avoid
[13:17:39] *** Joins: sirn (~sirn@user/sirn)
[13:17:58] <ApostleInTriumph> and if it's cL then i want to multiply by 0.01
[13:18:11] <Repiphany> (?:c|[Ll]) is the same as [cLl]
[13:18:22] <Repiphany> But you're not capturing 33c, you're only getting 33
[13:18:30] <ApostleInTriumph> Repiphany I am able to get with what i shared  with you all the int that trials L or cL
[13:18:42] <ApostleInTriumph> now i want to distinguish between them by the multiplicative factor
[13:18:48] <ApostleInTriumph> Repiphany exactly
[13:18:53] <Wulf> ApostleInTriumph: I assume it's some kind of formal language. You might want to use/writer a full parser for it. Are there no parsers yet?
[13:19:07] <ApostleInTriumph> Not that I'm aware of
[13:19:24] <Wulf> ApostleInTriumph: take another look and if there isn't any, write + publish one!
[13:19:39] <ApostleInTriumph> I'd take that as sarcasm
[13:19:44] <Repiphany> r'_(.+?)L' gets all the characters including the 'c'
[13:20:15] <ApostleInTriumph> Repiphany that works, if there is c I can do an additional filtering
[13:20:31] <ApostleInTriumph> Repiphany but will it filter out XXL ?
[13:21:38] <ApostleInTriumph> also there are some markings with "l", the lower case
[13:21:39] <Repiphany> What do you mean by filter out
[13:21:53] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:22:07] <ApostleInTriumph> I don't want to capture "XX" as it doesn't give any information on volume
[13:22:12] <Repiphany> What do you expect with something like "_33XXL_"
[13:22:56] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 258 seconds)
[13:23:11] <ApostleInTriumph> they are degenerate
[13:23:14] *** Joins: entuland (~entuland@user/entuland)
[13:23:17] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[13:23:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[13:23:27] <Repiphany> I mean do you expect your regex to match anything at all
[13:23:49] <Wulf> ApostleInTriumph: I actually meant it.
[13:24:01] <ApostleInTriumph> Repiphany an entire label would be something like `XXL_Lat+_33cL_F1_FTop`
[13:24:14] <ApostleInTriumph> here, I only want 33cL
[13:24:18] <ApostleInTriumph> and not XXL
[13:24:37] <Repiphany> XXL doesnt start with a _ so the regex wouldn't match it
[13:25:19] <Repiphany> is the "_" actually optional
[13:26:36] <Repiphany> Are you interested in only digits and certain letters like c
[13:27:32] <ApostleInTriumph> Repiphany true, this one fails, `Infinity_Light_10L_F5_Preforme2_FTop` with an output of Light_10
[13:27:35] *** Joins: easior (~easior@183.131.110.43)
[13:27:45] <ApostleInTriumph> Repiphany yes, to answer your previous question
[13:28:44] *** Joins: Fluxx (~Fluxx@user/fluxx)
[13:28:50] <ApostleInTriumph> in this example, i would want 10 and not Light_10
[13:29:20] *** Quits: easior (~easior@183.131.110.43) (Client Quit)
[13:30:13] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Remote host closed the connection)
[13:30:46] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[13:31:59] <Repiphany> r'_?([^X_]+?)[Ll]'
[13:32:58] *** Quits: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 240 seconds)
[13:33:09] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[13:33:25] *** Joins: CombatVet (~c4@user/combatvet)
[13:33:27] *** Joins: resmo (~resmo@2a00:d420:9:8a00:6d52:8497:b524:1d45)
[13:33:34] <Repiphany> or [c\d] instead of [^X_]
[13:34:54] *** Joins: gggp__ (~gggp@123.113.189.194)
[13:34:55] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:34:58] *** gggp__ is now known as gggp
[13:35:12] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[13:35:12] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 258 seconds)
[13:35:30] <ApostleInTriumph> boom! that works
[13:35:46] <ApostleInTriumph> Thanks a lot, Repiphany, really appreciate
[13:37:01] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[13:37:20] *** Joins: mcon (~Thunderbi@host-79-23-91-44.retail.telecomitalia.it)
[13:37:52] *** Joins: lorcab (~user@197.251.194.240)
[13:38:27] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:39:30] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[13:39:52] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[13:40:16] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Read error: Connection reset by peer)
[13:40:39] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[13:41:21] *** Joins: p-i- (~Ohmu@node-mba.pool-118-173.dynamic.totinternet.net)
[13:41:24] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:41:28] *** Quits: Luyin (~daisy@user/luyin) (Quit: WeeChat 3.2)
[13:42:59] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[13:43:24] *** Joins: rany (~rany@user/rany)
[13:45:03] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[13:45:21] <DnzAtWrk> can glob give me the first file in every directory under a director?
[13:45:28] <DnzAtWrk> directory*
[13:46:09] <KirkMcDonald> No.
[13:46:19] <KirkMcDonald> Though: How are you defining "first"?
[13:47:50] <DnzAtWrk> any first file
[13:47:54] <DnzAtWrk> doesn't matter which
[13:48:08] <DnzAtWrk> they all contain the same meta
[13:49:30] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[13:50:28] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:50:53] <DnzAtWrk> [os.listdir(path)[0] for path in glob.glob('./data/eo1_hyperion/*/')]
[13:50:55] <DnzAtWrk> well, it's not that pretty
[13:50:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[13:51:47] *** Quits: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net) (Ping timeout: 245 seconds)
[13:52:26] <ApostleInTriumph> you can use sorted(os.listdir..()) if that helps in your "first"
[13:52:27] *** Quits: gggp (~gggp@123.113.189.194) (Ping timeout: 268 seconds)
[13:52:51] <ApostleInTriumph> also i'd suggest consider using pathlib
[13:53:36] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 276 seconds)
[13:53:51] <DnzAtWrk> sorted(os.path.join(path, os.listdir(path)[0]) for path in glob.glob('./data/eo1_hyperion/*/'))
[13:53:56] <DnzAtWrk> eh, it should work
[13:54:24] <DnzAtWrk> but it's not as elegant as single globs
[13:54:26] *** Quits: dre (~dre@2001:8003:c932:c301:f393:122e:b02c:a2af) (Quit: Leaving)
[13:54:43] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:58:09] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[14:00:08] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[14:01:10] *** Joins: CombatVet (~c4@user/combatvet)
[14:01:25] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:01:58] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:02:28] *** Joins: mickey (~user@user/mickey)
[14:02:49] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:02:53] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:04:47] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[14:05:30] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 265 seconds)
[14:06:11] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[14:06:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:06:40] *** Joins: Naan (~Naan@user/naan)
[14:07:33] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:09:02] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[14:09:56] <ApostleInTriumph> DnzAtWrk  = Path('./data/eo1_hyperion'); for i in p.glob('**/*'): ...
[14:10:11] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:11:35] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[14:11:46] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[14:12:05] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: No route to host)
[14:12:28] <rendar> let's say i get a datetime object, e.g. 2/18/2007, and i want to calculate how many days until the 1st of the month: in this case is trivial, it's 28.. but what about i want to exclude Saturdays and Sundays?
[14:12:43] <rendar> do i have to iterate all the dates?
[14:12:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:12:52] <rendar> or there is a simpler and more optimized approach?
[14:13:12] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:14:13] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[14:15:19] <jinsun> how is it 28 days in your "trivial" case? I was thinking datetime(2007, 3, 1) - datetime(2007, 2, 18) which comes to be 11 days
[14:15:32] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:16:32] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[14:18:37] <rendar> yes,
[14:18:48] <rendar> actually is datetime(2007, 2, 18)-datetime(2007, 1, 31)
[14:19:13] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:19:28] <Repiphany> Anything involving times, timezones and dates, better to go find established libraries
[14:19:57] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[14:20:48] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:23:13] *** Joins: pnoud (~pnoud@user/pnoud)
[14:24:21] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[14:25:46] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:26:32] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[14:27:20] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:27:25] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[14:29:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[14:29:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[14:30:38] <jinsun> rendar: that is 18 days though, not 28
[14:30:41] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:31:34] <jinsun> rendar: if you can use pandas it has good stuff for handling date ranges and offsets
[14:31:45] <rendar> ok
[14:33:03] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 265 seconds)
[14:34:27] *** Joins: upsala (~zcb@185.213.155.160)
[14:38:17] *** Quits: mike18 (~geri@217-149-163-174.nat.highway.telekom.at) (Remote host closed the connection)
[14:38:35] *** Joins: dez (uid92154@user/dez)
[14:38:58] *** Quits: outsider1 (~sierkov@c91-231.i07-23.onvol.net) (Quit: WeeChat 3.2)
[14:39:06] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 276 seconds)
[14:40:59] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[14:41:00] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:41:50] *** Joins: Atque (~Atque@user/atque)
[14:42:19] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:42:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[14:43:20] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:43:36] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[14:43:41] <DnzAtWrk> I have a filename like this
[14:43:42] <DnzAtWrk> EO1SPPPRRRYYYYDDDXXXML_GGG_VV
[14:43:52] <DnzAtWrk> replace the letters with numbers
[14:44:05] <DnzAtWrk> what's a clean way to extract different parts into variables
[14:44:20] <DnzAtWrk> such as, satellite, sensor, path, row, year, day ...
[14:44:26] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Quit: Konversation terminated!)
[14:44:45] <KirkMcDonald> Perhaps a regular expression?
[14:44:51] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[14:44:54] <DnzAtWrk> ah
[14:44:58] <DnzAtWrk> yeah I guess that would do it
[14:45:33] <DnzAtWrk> can you somehow say blah, blah, blah = re.search
[14:45:36] <DnzAtWrk> or similiar
[14:46:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:46:25] <Repiphany> Capture groups
[14:47:41] <KirkMcDonald> DnzAtWrk: e.g. https://bpa.st/ZWWA
[14:47:56] <DnzAtWrk> ah, than kyou
[14:47:59] <DnzAtWrk> thank you*
[14:47:59] <Cyp> re.search is kn.owledge
[14:49:54] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[14:50:01] <DnzAtWrk> I guess if I need int it should be in the form of
[14:50:13] <DnzAtWrk> a, b, c = map(int, re.fullmatch(a, b))
[14:50:15] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:50:28] <KirkMcDonald> Could do.
[14:51:29] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[14:51:30] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[14:51:43] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[14:53:13] *** Joins: thiras (~thiras@user/thiras)
[14:53:13] *** Joins: newtoliberachat (~xyz@61.1.136.50)
[14:53:41] <Confusioned> Hi, I'm trying to load a checkpoint file according to https://www.tensorflow.org/tutorials/keras/save_and_load#save_the_entire_model but my model does not have a load_weights function and I don't know how to implement it, can someone help?
[14:55:19] <Confusioned> Is there some place where I can see an example load_weights function?
[14:56:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:55] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[14:57:02] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[14:57:05] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[14:57:29] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:58:09] *** Joins: relationalalgebr (~relationa@117.216.30.176)
[15:00:10] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[15:01:11] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[15:01:31] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 268 seconds)
[15:01:40] *** Joins: omegatron (~some@p54bd5da4.dip0.t-ipconnect.de)
[15:03:00] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[15:03:17] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:05:13] *** Joins: greedom (~greedom@2001:16b8:2e99:1c00:d688:3638:498e:cbdc)
[15:05:56] *** Joins: CombatVet (~c4@user/combatvet)
[15:10:02] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:10:59] *** Joins: gggp_ (~gggp@60.10.194.46)
[15:11:35] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[15:11:47] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 250 seconds)
[15:11:51] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[15:12:10] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[15:12:11] *** Quits: int (~int@0x4.cx) (Read error: Connection reset by peer)
[15:12:12] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[15:12:18] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:12:19] *** Joins: Ox4 (~int@0x4.cx)
[15:12:28] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[15:12:36] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[15:12:36] *** slavfox_ is now known as slavfox
[15:13:27] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:13:45] *** Joins: sharperguy_ (~sharpergu@78.47.72.153)
[15:13:47] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[15:13:48] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Client Quit)
[15:17:05] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:18:41] *** Quits: sharperguy_ (~sharpergu@78.47.72.153) (Ping timeout: 252 seconds)
[15:19:22] *** Joins: y1n (~y1n@84-115-65-95.wifi.dynamic.surfer.at)
[15:19:50] <DnzAtWrk> year of aquisition, day of aquisition (julian)
[15:20:03] <DnzAtWrk> strange, why it would matter that it's a julian DAY
[15:20:11] <DnzAtWrk> a day is a day
[15:21:33] <Repiphany> https://en.wikipedia.org/wiki/Julian_day
[15:22:46] <DnzAtWrk> yes, but the year is there
[15:23:15] <DnzAtWrk> "The Julian day is the continuous count of days since the beginning of the Julian period, and is used primarily by astronomers"
[15:23:25] <DnzAtWrk> So in what way does it change the result that it's a julian day
[15:23:42] *** Joins: __that__ (~Guest19@195.59.68.214)
[15:23:44] <__that__> Hi all
[15:25:54] <nedbat> DnzAtWrk: where is that from?
[15:25:56] <nedbat> __that__: hey there
[15:26:05] <DnzAtWrk> the wiki article
[15:26:24] <nedbat> DnzAtWrk: I meant "year of aquisition, day of aquisition (julian)", where is that from?
[15:26:31] <DnzAtWrk> https://www.pcigeomatics.com/geomatica-help/references/gdb_r/Hyperion.html
[15:26:43] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[15:27:05] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[15:27:18] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[15:27:23] <nedbat> DnzAtWrk: sounds like julian day is a common thing among astronomers, so it's provided, even though the year is redundant with it
[15:27:34] <__that__> how you ensure other developers use the hooks you created with pre-commit library? What is the usual way you do that and avoid other developers to have to run pre-commit install every time they clone please?
[15:27:59] <DnzAtWrk> I'm just pondering whether I should consider it from noon or midnight
[15:28:08] <DnzAtWrk> well, considering they don't even provide the current time of the image :P
[15:28:14] <DnzAtWrk> I doubt it matters
[15:28:29] <nedbat> __that__: you can't force developers to run pre-commit hooks?
[15:28:33] *** Quits: magla (~gelignite@55d46dd2.access.ecotel.net) (Quit: Stay safe!)
[15:28:55] <nedbat> __that__: oops, no question mark. you can't.
[15:30:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:30:53] <__that__> Sure, I was a sort of wondering what the best practises are. How do you resolve this problem? What sort of policies you have in place? Is everyone adamant that they need to run for example pre-commit install every time they clone a repo?
[15:31:30] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[15:32:57] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[15:33:11] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[15:33:12] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[15:34:17] <nedbat> __that__: i don't use any pre-commit hooks, but this is where good teamwork is needed. you have to convince people to do the right thing
[15:34:19] *** Quits: mattil (~mattilinn@87-92-232-85.rev.dnainternet.fi) (Quit: Leaving)
[15:34:34] <nedbat> __that__: perhaps pre-commit tools have some help with configuring the hooks for new repos?
[15:35:47] <Yhg1s> Whether you can force people to run pre-commit hooks depends on the tooling. (Our internal tooling very much does this.)
[15:36:25] <Yhg1s> With an open-source workflow organised around git and GitHub, it's a lot harder.
[15:37:02] *** Joins: IhackBot (~kalle@dynamic-095-117-058-160.95.117.pool.telefonica.de)
[15:38:15] *** Quits: newtoliberachat (~xyz@61.1.136.50) (Ping timeout: 258 seconds)
[15:38:34] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[15:40:31] *** Joins: noneco (~noneco@dslb-188-096-064-125.188.096.pools.vodafone-ip.de)
[15:41:38] *** Joins: emika7 (~emika@185.207.249.38)
[15:41:41] *** Quits: emika (~emika@185.207.249.178) (Ping timeout: 265 seconds)
[15:41:41] *** emika7 is now known as emika
[15:42:49] *** Joins: manti7 (~manti7@176.10.104.94)
[15:43:24] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[15:43:54] *** Joins: pnoud (~pnoud@user/pnoud)
[15:46:23] <dav1d> __that__, I run the commit hooks also in CI, when the developer cant manage to install the hooks he will end up with a failing pipeline
[15:46:31] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 265 seconds)
[15:47:04] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:47:04] <dav1d> __that__, and a failing pipeline means, there wont be a review
[15:49:25] *** Joins: newtoliberachat (~xyz@61.1.136.50)
[15:49:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[15:49:42] *** Joins: varaindemian (~varaindem@82.76.227.38)
[15:50:10] *** Quits: newtoliberachat (~xyz@61.1.136.50) (Read error: Connection reset by peer)
[15:51:19] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[15:51:21] *** Quits: relationalalgebr (~relationa@117.216.30.176) (Ping timeout: 265 seconds)
[15:52:06] *** Quits: NeilRG_ (~NeilRG@192.222.196.111) (Remote host closed the connection)
[15:52:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:54:25] *** Joins: ice9 (~ice9@user/ice9)
[15:54:44] *** Quits: sirn (~sirn@user/sirn) (Read error: Connection reset by peer)
[15:54:54] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[15:56:20] *** Joins: sirn (~sirn@user/sirn)
[15:56:51] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Remote host closed the connection)
[15:57:02] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[15:57:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[15:59:19] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[15:59:34] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[15:59:52] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[16:00:25] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:00:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[16:00:43] *** ayusta is now known as ayustae
[16:01:06] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:01:32] *** Quits: lorcab (~user@197.251.194.240) (Ping timeout: 256 seconds)
[16:02:03] *** Joins: pnoud (~pnoud@user/pnoud)
[16:03:12] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[16:03:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[16:04:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[16:04:53] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 265 seconds)
[16:05:23] <nubonix> im sending bz2(my_numpy_array.tolist()) as query params to my server, but im having problems decompressing at the server end https://gist.githubusercontent.com/nubonics/1b4b45784d5379594ec2f7aabf4bb03e/raw/e29237ba3a1fee93b7017da041b47647fb27a8ea/hmm.txt
[16:05:40] <__that__> dav1d, sure we do that in Jenkins however I was wondering how to do that locally for each developer in a sort of automated way
[16:05:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:06:06] <nubonix> so far all ive got is `data = parse.parse_qs(data); image = data['image'][0]` on the server side
[16:07:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:07:30] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[16:07:50] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[16:07:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:11:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[16:11:30] *** Quits: __that__ (~Guest19@195.59.68.214) (Quit: Client closed)
[16:12:08] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:12:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Remote host closed the connection)
[16:12:44] *** Parts: VaniaPy (~VaniaPy@46.12.81.49.dsl.dyn.forthnet.gr) ()
[16:13:48] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[16:15:54] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:15:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:16:36] *** Joins: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f)
[16:18:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[16:18:29] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[16:18:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:18:52] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[16:18:56] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[16:18:58] <dav1d> nubonix, there is a max url length in browsers, typically around 2000 characters, are you sure your webserver receives the full query string?
[16:19:27] <nubonix> dav1d: yeah, as using b2z reduced it from 9.5mb to 1.3mb
[16:19:46] <dav1d> nubonix, that is still above 2000 characters (~2kb)
[16:20:04] <dav1d> not to mention the encoding which comes ontop
[16:20:07] <nubonix> so, in answer to your question, yes, im getting the full output
[16:20:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:20:12] <dav1d> okay, just making sure
[16:20:20] <nubonix> nw
[16:20:25] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:20:42] * dav1d starts ipython
[16:20:43] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[16:20:48] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Ping timeout: 256 seconds)
[16:20:55] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:21:41] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[16:22:32] *** Joins: stevieh (~skrodzki@tmo-080-123.customers.d1-online.com)
[16:22:51] *** Quits: y1n (~y1n@84-115-65-95.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[16:22:55] <dav1d> nubonix, how are you serializing that string, it looks like it is a bit malformed and is actually repr(bz2(data))
[16:23:17] <dav1d> parse.parse_qs(s)['image'][0][:10] -> "b'BZh91AY&"
[16:23:31] *** Joins: y1n (~y1n@84-115-64-196.wifi.dynamic.surfer.at)
[16:23:55] <u4t> i prefer my strings parallelised (:
[16:24:24] <nubonix> dav1d: screenshot is a numpy array `bz2.compress(VS.screenshot.tobytes())`
[16:24:53] <dav1d> nubonix, but how are you constructing the query parameters?
[16:25:01] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 250 seconds)
[16:25:17] <nubonix> dav1d: in a dictionary
[16:25:39] <dav1d> nubonix, maybe show the code, I feel like there is a bug in there
[16:25:58] <dav1d> the data should start with BZh not b'
[16:26:02] *** Joins: gareppa (~gareppa@user/gareppa)
[16:26:22] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.79.167)
[16:26:30] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:26:57] <nubonix> hmm
[16:27:32] <dav1d> In [16]: str(b'123')
[16:27:33] <dav1d> Out[16]: "b'123'"
[16:27:41] <dav1d> it looks like you did something like that ^
[16:28:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:28:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:29:18] *** Quits: stevieh (~skrodzki@tmo-080-123.customers.d1-online.com) (Ping timeout: 256 seconds)
[16:29:22] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[16:29:35] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[16:30:45] *** Joins: stevieh (~skrodzki@tmo-080-123.customers.d1-online.com)
[16:31:03] <nubonix> dav1d: https://bpa.st/AFUA
[16:32:26] <dav1d> nubonix, bz2.decompress(ast.literal_eval(parse.parse_qs(s)['image'][0])) - this works, but is pretty bad
[16:32:40] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:32:45] <nubonix> hmm
[16:32:45] *** Joins: zeden (~zeden@user/zeden)
[16:33:59] <dav1d> nubonix, the problem you have is, when constructing the query parameter, you have bytes (your raw image data), you need to serialize the bytes into something that can be transported via query parameters, usually people would use base64 for that. What you used (not on purpose) is basically str(my_bytes), which can be "deserialized" with
[16:33:59] <dav1d> ast.litera_eval again
[16:34:20] <nubonix> ah
[16:34:22] <dav1d> mh I guess, the http library does the str(bytes)
[16:34:58] <dav1d> nubonix, try encoding the data as base64 after compressing and then client side decode it from base64 again, this should also make your payload smaller (base64 should be smaller than str(bytes))
[16:35:11] <nubonix> so instead of  `bz2.compress(VS.screenshot.tobytes())` i should ` bz2.compress(base64.b64encode(VS.screenshot.tobytes()))`
[16:35:42] <dav1d> nubonix: https://docs.python.org/3/library/base64.html#base64.urlsafe_b64encode
[16:35:54] <nubonix> ah
[16:35:57] <dav1d> nubonix, almost, base64 after compressing
[16:36:01] <nubonix> ye
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:08] <nubonix> alright, lemme try
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:47] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:38:32] <dav1d> nubonix, you might need a `decode('ascii')` depending on what the library expects: base64.b64encode(b'123').decode('ascii'),
[16:39:37] <nubonix> o wow, down to 398kb
[16:39:41] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 265 seconds)
[16:40:03] <dav1d> check if your query parameter starts with `b` again, if so you need a .decode('ascii')
[16:40:13] <nubonix> na, they didnt
[16:40:27] <nubonix> thank you*
[16:40:36] <nubonix> thanks*
[16:40:55] *** Joins: ferz (~ferz@93.48.251.229)
[16:40:57] <dav1d> awesome!
[16:41:02] <dav1d> I assume decoding works now as well
[16:41:10] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:41:39] <nubonix> mm, struggling a bit with decoding
[16:42:09] <nubonix> `data = parse.parse_qs(data)`  `base64.urlsafe_b64decode(data)` data is Dict[str, List[str]]
[16:42:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:42:59] <nubonix> mm, better shown here https://bpa.st/KUPQ
[16:43:15] <dav1d> it should be bz2.decompress(base64.urlsafe_64decode(parse.parse_qs(data)['image'][0])))
[16:43:24] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:43:59] <dav1d> basically everything you did when sending just in reverse
[16:44:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[16:44:50] <nubonix> yeah, just wasnt sure how
[16:45:43] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[16:45:45] <dav1d> In [52]: bz2.decompress(base64.urlsafe_b64decode(base64.urlsafe_b64encode(bz2.compress(b'123'))))
[16:45:45] <dav1d> Out[52]: b'123'
[16:46:27] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 265 seconds)
[16:46:38] <nubonix> `base64.urlsafe_b64decode(base64.urlsafe_b64encode`?
[16:47:06] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[16:48:08] *** Joins: CombatVet (~c4@user/combatvet)
[16:48:17] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:48:22] <dav1d> nubonix, sorry if that's confusing, this was just compressing+encoding and decoding+decompressing in one step, the inner two things you would do on the client side and the outer two on the server side
[16:49:18] <nubonix> ah okay
[16:49:53] <nubonix> hmm `image = np.frombuffer(image_bytes, dtype=np.uint8)`
[16:50:05] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:12] <nubonix> `image_bytes = bz2.decompress(base64.urlsafe_b64decode(parse.parse_qs(data)['image'][0]))`
[16:50:27] <nubonix> and last but not least `cv2.imwrite("filename.png", image)`
[16:51:16] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[16:52:50] <dav1d> looks correct, but don't you need to specify the image format as well? (RGB vs RGBA etc.)
[16:53:12] *** Joins: simone4 (~nya@user/sx)
[16:53:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:53:29] <nubonix> libpng warning: Image height exceeds user limit in IHDR
[16:53:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:53:38] *** Joins: thiras (~thiras@user/thiras)
[16:54:09] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 258 seconds)
[16:54:51] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[16:54:55] *** Quits: simone (~nya@user/sx) (Ping timeout: 258 seconds)
[16:54:55] *** Joins: deepy (deepy@user/deepy)
[16:54:56] *** simone4 is now known as simone
[16:54:56] *** Quits: dav1d (~dav1d@80-109-93-56.cable.dynamic.surfer.at) (Changing host)
[16:54:56] *** Joins: dav1d (~dav1d@user/dav1d)
[16:55:22] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 244 seconds)
[16:55:45] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[16:55:47] *** Joins: touki (~Guest38@2a02:a03f:6a37:7b00:2279:d3d0:ac7d:b6ea)
[16:56:09] <touki> Hi all am I right assuming 'references' is forbidden name for a python-sqlite3 table column?
[16:56:35] <nubonix> dav1d: seems my array is flat
[16:56:53] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:56:53] <dav1d> nubonix, yeah, that makes sense
[16:57:12] <nubonix> dav1d: so i need to reshape it yeah?
[16:58:07] <nubonix> yup :D hey there we go :D
[16:58:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:58:13] <nubonix> tyvm dav1d !
[16:58:17] *** Joins: ice9 (~ice9@user/ice9)
[16:58:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:58:39] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[16:58:40] <dav1d> nubonix, I guess. What you're doing now is transform your array into a flat buffer of bytes and transferring it to the server, maybe you need more metadata (e.g. dimensions) to correctly restore the data again
[16:58:43] <dav1d> awesome, nice
[16:59:25] <nubonix> dav1d: yeah, nw, more metadata is fine, just wanted to get the end result and build backwards
[16:59:54] <dav1d> nubonix, it's also fair to assume that the image always has to be in the same format (e.g. always PNG, always RGBA)
[17:00:06] <dav1d> if you "own" server and client and dont want to support anything else
[17:00:18] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[17:00:37] *** Joins: ice99 (~ice9@user/ice9)
[17:01:10] <nubonix> mm, im sending the image as a numpy array, saving it to a png was just to see that i was getting the correct image from the program on the server that i wanted
[17:01:45] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:02:01] <nubonix> the numpy array / image will never be saved to the disk when this program is actually running *
[17:02:34] <dav1d> nubonix, one more thing, you probably want to use a http POST/PUT to transfer the data, as mentioned query params are not meant to transfer data like this (and sometimes are limited), also a POST/PUT allows you to send binary data directly (without the need for base64)
[17:02:40] <nubonix> or r u talking about how im getting it array
[17:02:44] *** Joins: gggp (~gggp@123.118.187.5)
[17:02:51] <nubonix> how im getting the array*
[17:03:09] <gggp> keras and sklearn ,which is better compatible with python
[17:03:21] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[17:03:24] <nubonix> gggp: wut
[17:03:35] <nubonix> you can use either..
[17:03:38] <grym> gggp: which is the tastier vegetable, carrots or celery
[17:03:41] <dav1d> nubonix, I am talking about transferring from client to server, the client needs to send something the server understands, e.g. if the server expects an RGBA image and the client only sends RGB there will be a crash
[17:03:41] *** Quits: touki (~Guest38@2a02:a03f:6a37:7b00:2279:d3d0:ac7d:b6ea) (Quit: Client closed)
[17:03:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:04:32] <nubonix> dav1d: ah okay, gotcha, yeah, im controlling both ends so nw there
[17:04:35] <dav1d> nubonix, so either you make sure your server understands both (e.g. client can specify which format it is sending) or you make sure the client always only sends what the server understands (RGBA in the example)
[17:04:41] <gggp> how can i use numpy to do data standardization
[17:04:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:04:52] <nubonix> dav1d: and yeah ik query params arent ideal for what im doing, but i dont want to fix it lols..
[17:04:53] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:04:56] <dav1d> grym, 100% carrots
[17:05:21] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 276 seconds)
[17:06:05] <dav1d> nubonix, fair enough
[17:06:26] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: bye)
[17:06:53] *** Joins: dav1d (~dav1d@user/dav1d)
[17:07:06] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 240 seconds)
[17:07:48] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[17:08:19] *** Joins: trace987 (~trace@dynamic-002-247-248-173.2.247.pool.telefonica.de)
[17:10:27] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:10:27] *** mozgalom is now known as bomb-on
[17:12:30] *** Joins: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com)
[17:12:32] <Led_Zeppelin2> hello.
[17:13:04] *** Quits: varaindemian (~varaindem@82.76.227.38) (Ping timeout: 246 seconds)
[17:13:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:14:13] <Led_Zeppelin2> i have some code like this https://pastebin.com/BgxfHafA. When I don't print(var) for whatever reason somefunction does not execute...
[17:14:16] <Led_Zeppelin2> why is that?
[17:15:25] <grym> Led_Zeppelin2: well, what's in somefunction()
[17:15:36] <grym> (and how do you know it doesn't execute)
[17:15:37] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:17:01] <Yhg1s> Led_Zeppelin2: in the code you pasted, there's no reason for that to be the case.
[17:17:21] <Led_Zeppelin2> Yhg1s, thats what I though also! but when I run print() it works.
[17:17:38] <Yhg1s> Led_Zeppelin2: show us.
[17:18:00] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (Quit: brb, sex)
[17:18:08] <Led_Zeppelin2> its hard to show because i boiled down the problem into this. Its a very large and old code base. Let me try to find a better example.
[17:18:31] <thiras> hello. i've installing my poetry packages with POETRY_VIRTUALENVS_CREATE=0. why cannot I find those packages in the PATH?
[17:18:37] <Yhg1s> Led_Zeppelin2: so show us how the thing you boiled it down to doesn't work, either.
[17:18:49] <Yhg1s> Led_Zeppelin2: unless it *does* work, in which case you haven't actually boiled it down to that.
[17:19:02] <Led_Zeppelin2> hehe. i hope not Yhg1s :p
[17:19:30] *** Quits: stevieh (~skrodzki@tmo-080-123.customers.d1-online.com) (Ping timeout: 240 seconds)
[17:19:50] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) ()
[17:20:07] *** Joins: stevieh (~skrodzki@2a01:598:b970:1511:d687:a641:c944:33e4)
[17:20:19] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[17:21:23] <Repiphany> 5 imaginary dollars on stdout not being flushed
[17:23:05] *** Quits: y1n (~y1n@84-115-64-196.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[17:23:32] *** Joins: y1n (~y1n@84-115-64-196.wifi.dynamic.surfer.at)
[17:23:34] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[17:24:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:25:14] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:25:19] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[17:27:27] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 276 seconds)
[17:27:35] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:29:37] <pathos> gggp: What is data standardisation? Normalisation? `np.linalg.norm(arr)`
[17:30:40] <pathos> thiras: Maybe poetry is using a different python? `poetry run which python`
[17:30:50] <gggp> pathos, what relation of ndarray and pandas dataframe
[17:30:54] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[17:30:55] <gggp> normalization
[17:31:08] <gggp> I have read data from csv with pandas
[17:31:12] <grym> gggp: you aren't making much sense
[17:31:17] <grym> could you be more clear?
[17:31:25] <gggp> then I need do nomalization
[17:31:38] <thiras> pathos, found the issue https://github.com/python-poetry/poetry/issues/4187
[17:31:47] <thiras> confirmed bug
[17:33:33] *** Joins: adamts (~Adam@user/mysteryblokhed)
[17:33:49] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:95c8:c9ab:a5:fb27)
[17:35:16] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (Quit: The Lounge - https://thelounge.chat)
[17:35:33] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 258 seconds)
[17:35:45] *** Joins: mmt (~omerta@196.240.57.52)
[17:35:51] *** Parts: mmt (~omerta@196.240.57.52) ()
[17:35:58] <pathos> thiras: Ah, pandas and Docker have always been a pain to get to work together
[17:36:11] <grym> not really?
[17:36:17] <grym> poetry, perhaps
[17:36:40] <pathos> s/pandas/poetry ;)
[17:37:32] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 268 seconds)
[17:37:50] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[17:37:58] *** Joins: vd91 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:39:26] *** Joins: Fiji (~Fiji@user/fiji)
[17:39:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:40:09] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:40:22] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 246 seconds)
[17:40:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:40:31] *** Quits: jtck (~jtck@222.164.13.173) (Read error: Connection reset by peer)
[17:40:52] *** Joins: jtck (~jtck@222.164.13.173)
[17:41:17] <pathos> gggp: Ah, with pandas, I guess you can do it manually, `df_norm = (df - df.mean()) / (df.max() - df.min())`, but there's also things like https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html
[17:41:56] <Led_Zeppelin2> Yhg1s, sorry for the generic question. When I return a context with Contructor(blah='foo') as con:  do something... return con. Do I need to 'wake' up con? so in my main i have val = con(). I think I need to do print(val)
[17:42:35] *** vd91 is now known as vd
[17:43:11] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[17:43:26] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[17:43:54] <Led_Zeppelin2> Yhg1s, https://pastebin.com/EhdrjJhe more like this. so v is assigning to c(). But do I need to do a print(v) to activate the function? or does v=c() do that?
[17:44:32] <gggp> pathos, data preprocess include how many steps
[17:44:51] <gggp> I only know normalize
[17:45:06] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:45:39] <grym> gggp: depends on your data and what you want to do with it.  That's a very open-ended question, there's no right answer
[17:45:46] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[17:46:28] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[17:47:24] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[17:47:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:48:04] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[17:48:30] <gggp> grym, aim to train svm
[17:51:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:52:02] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:54b6:6c5c:3464:133e)
[17:52:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:52:41] *** Joins: Leliana (is@testdns.revthefox.co.uk)
[17:53:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:53:14] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[17:53:15] *** Joins: s8n0 (~s8n@user/s8n)
[17:53:16] <Led_Zeppelin2> Yhg1s, does a context need something to start? similar to a generator? for i in ... ?
[17:53:17] *** Joins: zingos2 (~zingos@46.101.6.21)
[17:53:25] *** Joins: _0az9 (~az0@user/az0)
[17:53:28] *** Joins: kouhai1 (~kouhai@user/kouhai)
[17:53:30] *** Quits: njt (~njt@zaph.org) (Ping timeout: 252 seconds)
[17:53:50] *** Joins: njt (~njt@zaph.org)
[17:53:56] <Yhg1s> Led_Zeppelin2: I have no idea what you mean by 'waking up' the context manager. What is Blah? What about Blah are you trying to 'wake up'?
[17:54:07] *** Joins: dece_ (~dece@dece.space)
[17:54:10] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:54:17] *** Joins: ThatOtherGuy (~LogicAsid@user/logicaside)
[17:54:25] <Yhg1s> Led_Zeppelin2: you're asking us about a context manager, but not actually showing us the context manager you have questions about.
[17:54:25] *** Joins: samplaygames (~sammeme@14.166.93.155)
[17:54:26] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 272 seconds)
[17:54:34] *** Joins: Noisytoot_ (~noisytoot@sourcehut/user/noisytoot)
[17:55:03] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[17:55:44] *** Joins: hexeme_ (~hexeme@user/hexeme)
[17:56:01] *** Joins: Frodo1337 (~Ninja3047@3047.ninja)
[17:56:06] *** Joins: kindablue_ (znc@irc.tpurist.com)
[17:56:07] *** Joins: noarb- (~noarb@user/noarb)
[17:56:20] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:56:23] *** Joins: achillion (~ach@user/achilleas)
[17:56:25] *** Joins: mpmc_ (~mpmc@user/mpmc)
[17:56:33] *** Joins: falx (~falx@user/falx)
[17:56:34] *** Joins: BullHorn_ (BullHorn@zapdos.randomlab.info)
[17:56:57] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[17:57:05] *** Joins: kujo2 (~kujo@188.166.12.52)
[17:57:10] *** Joins: mabi (~m42e@pb42.de)
[17:57:10] *** Joins: starship (~kkh@user/duracrisis)
[17:57:10] *** Joins: spithash (~spithash@user/spithash)
[17:57:15] *** Joins: Helle_ (~helle@80-100-16-232.ip.xs4all.nl)
[17:57:16] *** Joins: enkrypt_ (~enkrypt@user/enkrypt)
[17:57:30] *** Joins: glider_ (~glider@user/glider)
[17:57:44] *** Quits: Leliana (is@testdns.revthefox.co.uk) (Quit: brb, sex)
[17:57:46] *** Joins: carbolymer_ (~carbolyme@dropacid.net)
[17:57:50] *** Joins: mawk` (mawk@wireguard/contributor/mawk)
[17:57:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[17:58:03] *** Joins: Leliana (is@testdns.revthefox.co.uk)
[17:58:18] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[17:58:22] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[17:58:39] *** Quits: gggp (~gggp@123.118.187.5) (Ping timeout: 276 seconds)
[17:58:52] *** Quits: samplaygames (~sammeme@14.166.93.155) (Ping timeout: 245 seconds)
[17:59:27] *** Joins: dfch_ (~dfch@user/dfch)
[17:59:27] *** Joins: CombatVet (~c4@user/combatvet)
[17:59:28] <graingert> Led_Zeppelin2: Do you have a `yield` on your screen somewhere? Send a screenshot if you do
[17:59:39] *** Quits: Leliana (is@testdns.revthefox.co.uk) (Client Quit)
[18:00:27] *** Joins: Scotteh_ (~Scotteh@user/scotteh)
[18:00:39] *** Joins: lastmikoi_ (~lastmikoi@vm-01.lastmikoi.net)
[18:01:02] *** Joins: Leliana (is@testdns.revthefox.co.uk)
[18:02:21] *** Joins: CuriousErnestBri (~CuriousEr@user/curiousernestbro)
[18:02:54] *** Joins: pnoud (~pnoud@user/pnoud)
[18:03:16] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:03:48] *** Joins: samplaygames (~samplayga@14.166.93.155)
[18:03:53] <Led_Zeppelin2> graingert, thats a good point. No, i don't see any yields.
[18:04:08] *** Quits: enkrypt (~enkrypt@user/enkrypt) (*.net *.split)
[18:04:08] *** Quits: s8n (~s8n@user/s8n) (*.net *.split)
[18:04:08] *** Quits: dece (~dece@dece.space) (*.net *.split)
[18:04:08] *** Quits: glider (~glider@user/glider) (*.net *.split)
[18:04:08] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[18:04:08] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[18:04:08] *** Quits: BullHorn (~BullHorn@zapdos.randomlab.info) (*.net *.split)
[18:04:08] *** Quits: mpmc (~mpmc@user/mpmc) (*.net *.split)
[18:04:08] *** Quits: kindablue (znc@irc.tpurist.com) (*.net *.split)
[18:04:08] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (*.net *.split)
[18:04:08] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[18:04:08] *** Quits: hexeme (~hexeme@user/hexeme) (*.net *.split)
[18:04:08] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[18:04:08] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[18:04:08] *** Quits: kujo1 (~kujo@188.166.12.52) (*.net *.split)
[18:04:08] *** Quits: m42e_de (~m42e@pb42.de) (*.net *.split)
[18:04:09] *** Quits: kouhai (~kouhai@user/kouhai) (*.net *.split)
[18:04:09] *** Quits: _0az (~az0@user/az0) (*.net *.split)
[18:04:09] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[18:04:09] *** Quits: pulec (~pulec@user/pulec) (*.net *.split)
[18:04:09] *** Quits: duracrisis (~kkh@user/duracrisis) (*.net *.split)
[18:04:09] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (*.net *.split)
[18:04:09] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (*.net *.split)
[18:04:09] *** Quits: [Syntax] (syntax@charger.kire.net) (*.net *.split)
[18:04:09] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[18:04:09] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[18:04:09] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[18:04:09] *** Quits: sanshiki (~falx@user/falx) (*.net *.split)
[18:04:09] *** Quits: librenaut (~librenaut@user/librenaut) (*.net *.split)
[18:04:09] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (*.net *.split)
[18:04:09] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (*.net *.split)
[18:04:09] *** Quits: Helle (~helle@80-100-16-232.ip.xs4all.nl) (*.net *.split)
[18:04:09] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[18:04:09] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[18:04:09] *** Quits: roppert (~roppert@inb4.se) (*.net *.split)
[18:04:09] *** Quits: zingos (~zingos@46.101.6.21) (*.net *.split)
[18:04:09] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[18:04:09] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[18:04:09] *** mpmc_ is now known as mpmc
[18:04:09] *** zingos2 is now known as zingos
[18:04:09] *** s8n0 is now known as s8n
[18:04:09] *** kouhai1 is now known as kouhai
[18:04:09] *** _0az9 is now known as _0az
[18:04:10] *** ThatOtherGuy is now known as LogicAside
[18:04:10] *** Frodo1337 is now known as Ninja3047
[18:04:10] *** achillion is now known as achilleas
[18:04:11] *** mawk` is now known as mawk
[18:04:15] <Led_Zeppelin2> i think I am good. I will just print the values and dump to stderr. Not a big deal.
[18:04:22] <Yhg1s> Led_Zeppelin2: you *really* have to show us the actual context maanger, or at least the code you expect to 'wake up'.
[18:04:40] *** lastmikoi_ is now known as lastmikoi
[18:04:43] <Yhg1s> Led_Zeppelin2: because it sounds like something else entirely is going on, and just ignoring it is very likely to cause problems in the future.
[18:04:49] *** Quits: dkmueller (~dkmueller@2a01:c22:7205:b400:48b3:fb20:793a:b6c3) (Quit: WeeChat 3.2)
[18:05:29] *** Joins: zegalch (~zegalch@178.128.75.133)
[18:05:39] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[18:06:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:07:39] *** Quits: samplaygames (~samplayga@14.166.93.155) (Remote host closed the connection)
[18:08:08] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[18:08:34] *** Joins: greenbagels (~gb@user/greenbagels)
[18:08:38] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[18:09:05] *** Joins: nisstyre (~wes@user/nisstyre)
[18:09:23] *** Joins: murr4y (ali@user/murr4y)
[18:13:08] *** Quits: Leliana (is@testdns.revthefox.co.uk) (Quit: brb, sex)
[18:13:40] *** Joins: Leliana (znc@testdns.revthefox.co.uk)
[18:13:42] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:16:16] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:16:19] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:16:50] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 265 seconds)
[18:16:54] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:17:23] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:17:53] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:17:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:18:10] *** Quits: Leliana (znc@testdns.revthefox.co.uk) (Client Quit)
[18:18:40] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[18:18:51] *** Joins: Leliana (is@2a02:2658:1133:0:dead:babe:0:1)
[18:18:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:19:05] *** Quits: ATAD (~ATAD@user/atad) (Excess Flood)
[18:19:36] *** Joins: ATAD (~ATAD@user/atad)
[18:19:43] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[18:19:49] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[18:21:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[18:21:16] *** Joins: duoi (~duoi@user/duoi)
[18:22:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[18:22:45] <mawk> is there a PIP for lazy evaluation in python?
[18:22:56] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[18:23:11] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:23:14] <bjs> mawk: you mean a PEP? and I don't think so
[18:23:25] <mawk> PEP yes
[18:23:29] <mawk> thanks
[18:23:32] <bjs> usually things dont get to the PEP stage unless there's a reasonable chance it'll get accepted
[18:23:46] *** Quits: y1n (~y1n@84-115-64-196.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[18:23:58] <Yhg1s> we already have lazy evaluation. It's called a function.
[18:24:19] <bjs> I assumed mawk meant a PEP for lazy evaluation we don't have otherwise there's no need for a PEP :P
[18:24:35] <Yhg1s> What kind of lazy evaluation don't we have? :)
[18:24:38] <mawk> well sure you can do it with lambdas or functions Yhg1s
[18:24:44] *** Joins: y1n (~y1n@84-115-64-99.wifi.dynamic.surfer.at)
[18:24:51] <mawk> but many features of a language are actually syntactic sugar
[18:24:52] <Yhg1s> mawk: lambdas aren't a separate thing. a lambda expression creates a function.
[18:24:58] <Yhg1s> mawk: I'm quite aware.
[18:24:58] <mawk> so yes you have all features in the world, if you build them yourself
[18:25:00] *** Joins: user2001 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[18:25:07] <Yhg1s> mawk: is there something specific you are looking to propose?
[18:25:09] <hodapp> some libraries incorporate lazy eval that's more transparent, e.g. Dask
[18:26:07] <mawk> well for instance there's the lazy keyword in D to defer evaluation of a function argument in case it's an expensive function call for instance; all of this can be done by adding lambda everywhere, but adding that lambda is a responsibility of the caller
[18:26:14] <mawk> so this is how syntactic sugar would help
[18:26:20] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[18:26:42] <mawk> like in `f(42, lambda: expensive_call())` the caller has to wrap with lambda
[18:26:49] <Yhg1s> In general, getting things added to the language requires a concrete proposal, backward compatibility (or a migration path), and for the new syntax to be better: (significantly) more efficient, or (much) more clear, or less error-prone than existing solutinos.
[18:26:55] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[18:27:05] <mawk> I'm not looking to write a PEP or propose anything, I was just curious if there was someone that proposed it already
[18:27:09] <Yhg1s> mawk: 'lambda: expensive_call()' is just an awkward way of writing 'expensive_call', but okay.
[18:27:18] <Yhg1s> mawk: nope, functions is it.
[18:27:27] *** Quits: trace987 (~trace@dynamic-002-247-248-173.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[18:27:38] <mawk> would you have argued against the introduction of "for" ?
[18:27:40] <Yhg1s> mawk: if there were a 'lazy keyword', it would still be the responsibility of the caller to add it.
[18:27:44] <mawk> because you can do everything with a while?
[18:27:50] <mawk> no, in D the lazy keyword is in the function signature
[18:27:53] <Yhg1s> mawk: I'm not even arguing against anything *now*.
[18:28:02] *** Joins: zebrag (~chris@user/zebrag)
[18:28:10] <Yhg1s> mawk: okay: Python's runtime behaviour means you *can't* do that in Python.
[18:28:16] <bjs> I think Yhg1s is saying there isn't anything to argue for/against right now because there is no concrete proposal
[18:28:17] <Yhg1s> Because what you're calling isn't clear until you actually call it.
[18:28:18] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 256 seconds)
[18:28:26] <bjs> Yhg1s: but in `f(x,y)` f is evaluated first right?
[18:28:31] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[18:28:35] <mawk> bjs: I think Yhg1s is saying more than that, that in all cases you can use lambda or functions and you will never need syntactic sugar for it
[18:28:36] <bjs> it could look at the signature and then decide to not evaluate y
[18:28:52] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[18:28:55] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[18:29:07] <Yhg1s> bjs: perhaps (I don't remember the order) -- but it would be terrible, very error-prone design.
[18:29:22] <Yhg1s> mawk: you may be interested in the macros proposal that didn't go anywhere (but hasn't been rejected yet)
[18:29:23] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[18:29:31] <Yhg1s> mawk: no, taht's not at all what I said.
[18:29:34] <Nei> hi, can someone give me a quick hint how I convert a large python integer e.g to a const char* in a pyx file?
[18:29:54] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:29:56] <Yhg1s> mawk: I'm saying that you need a proper proposal, something thought out that shows benefits of the kind I already mentioned.
[18:30:04] <Nei> currently I'm messing with  "meliae" trying to investigate some memory usage, and it crashes with OverflowError: Python int too large to convert to C long
[18:30:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:30:28] <mawk> you said you already we lazy evaluation
[18:30:34] <mawk> you said we already have...*
[18:30:47] *** Joins: varaindemian (~varaindem@82.76.227.38)
[18:31:03] <mawk> ah I'll look at this macro thing, thanks
[18:32:02] <SnoopJ> Nei, I don't think you need to do anything particularly special, Cython should be able to keep track of that. Your error looks like it's too large for the conversion to be meaningful, but `long` isn't `const char*` so I'm a little further confused. Can we see the code?
[18:32:12] *** Quits: ihristov (~ihristov@213-240-197-22.2073361157.ddns.cablebg.net) (Ping timeout: 245 seconds)
[18:32:17] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:32:17] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[18:32:27] <mawk> Nei: do you mean human-readable const char * ?
[18:32:39] <mawk> or do you mean like const uint8_t * as bigint storage
[18:33:17] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-04bb-14cb-d493-4cea.res6.spectrum.com)
[18:33:36] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[18:33:47] <Nei> SnoopJ: mawk: I believe the underlying code is using PyLong_AsLongLong
[18:34:02] <Nei> which raises the OverflowError as I may be having very large integers in my own variables
[18:34:27] <SnoopJ> Nei, can we see the code generating the error?
[18:34:35] <SnoopJ> or a reduction of it to just the part that's failing?
[18:35:11] <mawk> is it for debugging purposes right Nei ?
[18:35:18] <mawk> you want to see the number
[18:35:28] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[18:35:42] <SnoopJ> I would think it would be trying to convert to `long long` if it was using that C-API method, but that's still not const char*
[18:36:04] <mawk> there's PyLong_AsVoidPtr
[18:36:09] <mawk> but the docs don't say what the void * is
[18:36:20] <mawk> something opaque to recreate a PyLong apparently
[18:36:44] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[18:37:11] <Nei> the code is serialising it with _write_to_ref_info(info, ", \"value\": %ld", PyLong_AsLong(c_obj))
[18:37:23] <mawk> ok so it's just for printing then
[18:37:28] <SnoopJ> you're using the C-API directly in Cython?
[18:37:31] <Nei> so I'm looking for some replacement like _write_to_ref_info(info, ", \"value\": %s", PyLong_AsSTRINGREPRESENTATION(c_obj))
[18:37:44] <mawk> do the equivalent of str(yourint) ?
[18:37:48] <mawk> I'm pretty sure you can do it from the C api
[18:38:10] <Nei> yea, I'm looking if someone knows how to do it in C
[18:38:34] <mawk> I mean, call the literal str function from python on your PyLong
[18:38:34] <SnoopJ> Why C if it's "in a pyx file?"
[18:38:42] <mawk> then convert the python string into a C char * and print it
[18:39:03] <Nei> I'm trying to uise https://pypi.org/project/meliae/
[18:39:10] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 246 seconds)
[18:39:38] <Nei> and I was wrong there, there is a pyx file but it calls the method in _scanner_core.c
[18:39:46] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 240 seconds)
[18:40:13] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[18:40:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:40:19] <mawk> do you know any C?
[18:40:32] <Nei> yes I know a bit of C but I don't know the python C api
[18:40:32] <SnoopJ> Are you writing code in a .pyx file? If so, you're usually best-off taking advantage of Cython's understanding of the C-API and writing Cython. I think you *can* use the C-API directly, but blegh.
[18:40:54] <SnoopJ> Anyway, if it's just for output, what mawk says makes sense, you can str()
[18:40:56] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:40:58] <Nei> the code is all in the C file, I'm sorry I said the wrong thing up there
[18:41:16] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Quit: WeeChat 3.2)
[18:41:18] *** Joins: duoi (~duoi@user/duoi)
[18:41:24] <Nei> but it's not as simple (for me) as  adding a str() to my python code, as the meliae package is supposed to recursively dump all my variables
[18:41:30] <SnoopJ> Can you explain why?
[18:42:22] <Nei> because I only call "meliae.scanner.dump_all_objects()" in my python code
[18:42:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[18:42:43] <winterflaw> this works : print( bin(-9223372036854775808) )
[18:42:44] <Nei> and this package has a missing case since it cannot handle large integers
[18:42:53] <SnoopJ> I don't understand why that precludes letting Python handle converting the Python integer value to a string, then using that string.
[18:42:55] <Nei> so it crashes :(
[18:43:02] <winterflaw> this does not : print( bin(-09223372036854775808) )
[18:43:19] <mawk> winterflaw: you can't use leading zeroes in decimal numbers
[18:43:20] <SnoopJ> winterflaw, int literals can't have a leading 0
[18:43:26] <winterflaw> invalid token on the final digit of the number
[18:43:27] <grym> winterflaw: yes, it's a syntax error
[18:43:30] <winterflaw> okay
[18:43:31] <winterflaw> ta
[18:43:31] <mawk> leading 0 is used to denote another base, like 0o for octal, 0x for hexadecimal, 0b for binary
[18:43:43] <winterflaw> hmm
[18:43:45] <SnoopJ> it's a mildly annoying limitation
[18:43:48] <winterflaw> so I could have leading zeros in hex?
[18:43:52] <winterflaw> 0x0000000babababa?
[18:43:55] <SnoopJ> yea, that's a valid literal
[18:44:00] <winterflaw> okay
[18:44:02] <winterflaw> ta!
[18:44:06] <Nei> SnoopJ: the meliae package is supposed to make a snapshot of all my python variables, and it does that by using some C code which I did not write. and I would like to try and fix it
[18:44:09] <mawk> yes winterflaw , or you can do int('000000000042') I think
[18:44:15] <mawk> if you really want a literal decimal with leading 0
[18:44:17] <winterflaw> working with 128 bit numbers and trying to figure out what the upper 64 bits are looking like
[18:44:23] <winterflaw> makes my head hurt so I'm checking :-)
[18:44:47] <SnoopJ> Nei, right, and you're modifying a Cython file. One of the main advantages of Cython is that it's a superset of Python, so you can usually just do the thing you'd do in Python.
[18:44:53] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:44:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[18:45:10] *** Joins: fluffyballoon (~fluffybal@131.93.208.196)
[18:45:13] <bjs> winterflaw: 0x1234_1234_1234_1234 is a valid hex literal
[18:45:23] <winterflaw> underscores?
[18:45:26] <winterflaw> snazzy =-)
[18:45:32] <SnoopJ> yep, those are valid since...3.6, I think?
[18:45:33] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:45:44] <SnoopJ> they're lovely, one of my favorite bits of syntax
[18:45:54] <SnoopJ> very useful for bitmasks :)
[18:45:55] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:46:03] <winterflaw> very useful for humans!
[18:46:13] <SnoopJ> yep
[18:46:17] <winterflaw> of course when the robots takes over the world we won't need them any more
[18:46:36] <SnoopJ> as long as the people maintaining the robots can keep track of a long string of zeros anyway :D
[18:46:50] <winterflaw> nope - robots all the way down :-)
[18:47:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:47:29] *** enkrypt_ is now known as enkrypt
[18:47:35] *** Joins: akk (~akk@97-123-82-25.albq.qwest.net)
[18:48:59] <mawk> emacs doesn't like the _ syntax
[18:49:02] <mawk> in C++ it's even worse since they use '
[18:49:06] <mawk> and emacs likes it even less
[18:49:22] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[18:49:49] <mawk> Nei: I would try to find where the str() function is in C code, then call it; I tried a bit to look into the docs but I don't find it
[18:49:57] <grym> mawk: i don't have a problem
[18:50:07] <mawk> ah, maybe I should update then
[18:50:29] <mawk> I mean I don't use IDE functionalities, just syntax highlighting, and it messes up my color scheme
[18:50:33] <Nei> mawk: thanks for trying to help
[18:51:00] <Nei> any other recommendations for investigating memory usage?
[18:51:24] <mawk> Nei: after that you get a str object you can use https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsWideCharString to get a wchar_t * that you can print
[18:51:30] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[18:51:33] <mawk> or anything else that seems suitable on that page
[18:51:43] <Nei> yea, I found that page as well
[18:51:52] <Nei> but the link from PyLong => PyUnicode is eluding me so far
[18:52:14] <grym> mawk: yeah, can't repro with 27.x -q
[18:52:20] <grym> (your theme may differ)
[18:52:25] *** Joins: c10l (~c10l@89.34.167.207)
[18:52:42] *** Quits: bomb-on (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 272 seconds)
[18:52:45] *** Joins: VimVim (~VimVim@85.191.93.217)
[18:52:45] <mawk> ah I found it Nei
[18:52:49] <mawk> https://docs.python.org/3/c-api/object.html#c.PyObject_Str
[18:52:52] <mawk> that's the str() function
[18:53:10] <Nei> thanks mawk ! I think that's exactly what I need
[18:53:33] <mawk> then you make a wchar_t* out of it, and printf can print it natively
[18:53:37] <mawk> it's "%ls" format I think
[18:54:11] <Nei> perfect. one issue solved :)
[18:56:19] <mawk> you might want to print as hexadecimal but I'm not sure where the hex() function is in there, decimal is probably good enough
[18:56:29] *** Quits: Leliana (is@2a02:2658:1133:0:dead:babe:0:1) (Quit: brb, sex)
[18:56:37] *** Quits: candyman1 (~candyman@user/candyman) (Quit: candyman1)
[18:56:53] <mawk> here: https://docs.python.org/3/c-api/number.html#c.PyNumber_ToBase
[18:56:59] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[18:57:27] *** Quits: greedom (~greedom@2001:16b8:2e99:1c00:d688:3638:498e:cbdc) (Remote host closed the connection)
[18:57:36] <mawk> PyNumber_ToBase(yourpylong, 16) gives you a PyObject * of a str that you can print out or whatever
[18:57:43] <Yhg1s> mawk: yes, I said we already have it, which is why you need to show why the new thing would be a significant improvement in one or more of the ways I already mentioned (efficiency, clarity of purpose, avoiding footguns)
[18:57:57] <mawk> you can also use PyUnicode_FromFormat instead of the C printf to print directly a PyObject with the right format
[18:58:44] <SnoopJ> Nei, mawk: here's what it looks like to use the Python spelling directly: https://bpa.st/GUPQ
[18:59:15] <SnoopJ> I'd forgotten that the encode() is necessary, but it's a lot nicer to not have to think about the C-API (after all, why even use Cython if you are)
[18:59:46] <mawk> ah nice cython can do bytes -> char * automatically
[19:00:05] <SnoopJ> yea that one's pretty much free :)
[19:00:22] <mawk> I see Yhg1s yes, I thought about it because I saw a colleague do some kind of handmade lazy loading thing with lambdas and I thought it looked way too complex
[19:00:48] <Nei> well in the case of the module I was trying to fix, the call was from cython/pyx to the .c file with a pyobject that could be anything
[19:01:15] <Nei> so this way isn't easily applicable
[19:01:32] <SnoopJ> Nei, we'll have to take your word for it since we're getting only about half the information that's in front of you
[19:01:34] <mawk> what did you use to have this prompt SnoopJ ? 10:27 [snoopjedi@denton ~/playground/cython_/large_int (master *)]
[19:01:36] *** Joins: fluffyballoon78 (~fluffybal@2620:72:0:6480::450)
[19:01:53] <SnoopJ> mawk, let's x-thread that to #python-offtopic and I'll tell you all about it
[19:01:53] <mawk> it's some kind of git zsh helper?
[19:02:11] <mawk> yes
[19:03:36] <gitesh> what is iteration?
[19:03:37] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[19:04:01] *** Quits: fluffyballoon (~fluffybal@131.93.208.196) (Ping timeout: 246 seconds)
[19:04:31] *** Joins: ice9 (~ice9@user/ice9)
[19:04:41] <mawk> one round of a loop
[19:04:48] *** Joins: c10l (~c10l@89.34.167.207)
[19:04:52] *** Joins: nyah (~nyah@90.221.186.180)
[19:04:56] <mawk> for i in range(1, 42): print('this is iteration number', i)
[19:04:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:05:51] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:06:01] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[19:07:24] *** Quits: rany (~rany@user/rany) (Ping timeout: 256 seconds)
[19:09:03] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[19:09:33] *** Joins: c10l (~c10l@89.34.167.207)
[19:10:21] *** Quits: fluffyballoon78 (~fluffybal@2620:72:0:6480::450) (Quit: Client closed)
[19:10:48] *** Quits: stevieh (~skrodzki@2a01:598:b970:1511:d687:a641:c944:33e4) (Ping timeout: 276 seconds)
[19:10:50] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[19:12:00] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[19:13:44] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:13:56] *** CuriousErnestBri is now known as CuriousErnestBro
[19:14:12] *** Quits: jazzy (~jaziz@2600:380:8577:4a6c:39b4:468b:5d5a:f419) (Ping timeout: 256 seconds)
[19:23:22] *** Quits: y1n (~y1n@84-115-64-99.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[19:23:31] *** Joins: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at)
[19:23:34] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:26:02] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[19:27:10] *** Joins: sharperguy (~sharpergu@2001:1438:4010:3101:10a::3133)
[19:27:12] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[19:29:29] *** Quits: derpadmin (~derpadmin@cloudbase2.200013.net) (Ping timeout: 252 seconds)
[19:29:46] <sharperguy> So I'm trying to log data in an SQLite database using python. I have created the table, and want to use an auto-generated primary key for each row. However, for one table, I use a foreign key from another table. I would like to do something like "table1key = insert_data_table1(conn, data1); insert_data_table2(conn, data2, table1key)" So basically I would need the generated primary key from the first insert call.
[19:32:21] *** Quits: Ares000 (~Ares3@37.228.196.119) (Ping timeout: 252 seconds)
[19:32:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:33:08] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:33:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:33:30] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[19:35:11] <sharperguy> oh cursor.lastrowid?
[19:40:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:40:46] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:40:52] *** Quits: GoldAndAppel (goldandapp@gateway/vpn/protonvpn/goldandappel) (Ping timeout: 268 seconds)
[19:41:18] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[19:41:19] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Client Quit)
[19:41:47] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:41:52] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[19:42:40] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[19:43:26] *** Joins: d00gy (~tonberry@user/d00gy)
[19:43:31] *** Joins: rany (~rany@user/rany)
[19:44:03] *** Joins: creese (~creese@136-25-168-142.cab.webpass.net)
[19:44:05] <mefistofeles> I see some people importing locally inside functions all the things they need, commonly the imports are shared between functions. THis is for testing, is this considered good practice? Any reason why they are doing that?
[19:44:40] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[19:45:54] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:47:28] <bjs> mefistofeles: the usual "good" reason is to defer actually importing anything until the time of use; e.g. if you have libraries that are expensive to import, or are optional features only used if you try do something specific.
[19:47:51] <bjs> there are also people who do it for stylistic reasons and perhaps those are less good reasons
[19:48:14] <mefistofeles> bjs: yeah, but I see some redundant imports... shouldn't these be global imports?
[19:48:24] <mefistofeles> or it's just a matter of style int the end?
[19:48:53] <bjs> mefistofeles: standard Python style is to do all the imports at the top of the file
[19:49:15] <bjs> mefistofeles: what do you mean by "redundant" imports?
[19:49:24] <mefistofeles> bjs: "import this" in each function
[19:49:38] <mefistofeles> each and every function, I should say
[19:49:42] *** Joins: noona (~noona@194.36.25.36)
[19:49:42] <bjs> mefistofeles: that just seems silly to me
[19:49:45] <mcon> mefistofeles: There are several possible reasons to import in a restricted place (not it is AGAINST PEP8): main reason is you may have some rarely used functions with huge imports (import only if/when really needed)
[19:50:16] <bjs> mefistofeles: one function like `def draw_graph(...)` which imported a big expensive graph drawing library that otherwise doesn't get imported is probably fine
[19:50:21] <mefistofeles> bjs: ok, yeah... thought so as well
[19:50:31] <mefistofeles> thanks
[19:50:33] <bjs> mefistofeles: doing boring standard imports in every function is probably just silly
[19:50:37] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:50:48] <mefistofeles> yeah, I mean, it's things like import os and sys and such
[19:50:54] <bjs> mefistofeles: that's just extra silly
[19:50:59] <bjs> because those are already imported
[19:51:07] <mefistofeles> bjs: how so?
[19:51:37] <bjs> mefistofeles: well in my graph example the big expensive graph library probably hasn't been imported before, so Python has to go look for it and then actually do all the work to import it
[19:51:51] <mefistofeles> oh, I see what you mean
[19:51:52] <bjs> mefistofeles: `os` and `sys` and other modules are already there, and `import` just returns them.
[19:51:52] <mefistofeles> yeah
[19:52:58] <bjs> gitesh: iteration is another term for "looping" really. You can say `for x in y` "loops over y"  or  "iterates over y" instead.
[19:53:23] *** Joins: jiffy (elijah@has.a.fluffy.sh33p.org)
[19:54:49] *** Quits: creese (~creese@136-25-168-142.cab.webpass.net) (Quit: Client closed)
[19:55:07] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Ping timeout: 245 seconds)
[19:55:24] *** Joins: greedom (~greedom@2001:16b8:2e99:1c00:d688:3638:498e:cbdc)
[19:55:59] *** Quits: greedom (~greedom@2001:16b8:2e99:1c00:d688:3638:498e:cbdc) (Remote host closed the connection)
[19:56:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[19:58:12] *** Quits: sharperguy (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 252 seconds)
[19:59:24] *** Noisytoot_ is now known as Noisytoot
[20:00:20] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[20:00:44] *** Quits: noona (~noona@194.36.25.36) (Quit: noona)
[20:01:01] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:01:08] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:01:10] *** Joins: CombatVet (~c4@user/combatvet)
[20:03:46] *** Joins: pnoud (~pnoud@user/pnoud)
[20:04:15] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[20:05:05] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:07:17] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:07:39] *** Joins: emika2 (~emika@83.136.182.131)
[20:08:06] *** Quits: emika (~emika@185.207.249.38) (Ping timeout: 252 seconds)
[20:08:06] *** emika2 is now known as emika
[20:08:39] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[20:08:58] <mefistofeles> hey, where are these temporary directories created when running https://docs.python.org/3/library/tempfile.html#tempfile.mkdtemp ?
[20:09:34] <mefistofeles> the default behavior, that is
[20:09:41] *** Joins: briian (uid321220@id-321220.highgate.irccloud.com)
[20:10:22] <briian> Was just looking through a code repo and saw a file get opened / written (without a context manager) and then the function ends. Does function ending automatically close a file or is this a bad practice?
[20:11:02] <briian> I've always just used context managers so I'm not sure if this is worth suggesting a change for
[20:11:05] <bjs> briian: bad practice does not mean anything bad will actually happen,  but yes it's bad practice
[20:11:19] <briian> gotcha, thanks
[20:11:30] <bjs> briian: the issue here is that using a context manager, the file will be closed.  Without it, it probably will get closed probably when the function ends probably
[20:11:36] <bjs> and probably won't be an issue
[20:12:07] <bjs> maybe ;)
[20:12:18] <briian> lol'
[20:12:20] <bjs> Python gives no guarantees
[20:14:43] *** Quits: varaindemian (~varaindem@82.76.227.38) (Ping timeout: 246 seconds)
[20:14:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:15:29] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[20:15:47] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:15:49] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[20:17:23] *** Joins: kosh (~kosh@user/kosh)
[20:18:33] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:19:51] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[20:21:31] *** Quits: akk (~akk@97-123-82-25.albq.qwest.net) (Quit: +++)
[20:22:11] *** Joins: timkofu (~timkofu@user/timkofu)
[20:22:31] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:22:57] *** Joins: akk (~akk@97-123-82-25.albq.qwest.net)
[20:23:22] *** Quits: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[20:23:52] <graingert> briian: You get a ResourceWarning
[20:24:15] <graingert> briian: enable `filterwarnings = ["error"]`
[20:24:39] *** Joins: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at)
[20:24:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:26:24] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[20:28:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:28:47] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[20:29:44] <briian> graingert: thanks, not my project so I'm curious what they do about that
[20:29:49] <jinsun> mefistofeles: it tries the environment variables first TMPDIR, TEMP, TMP and then some os specific hardcoded defaults, https://github.com/python/cpython/blob/v3.9.6/Lib/tempfile.py#L151
[20:30:08] *** Quits: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[20:30:12] <graingert> briian: they ignore the warnings
[20:31:07] *** Quits: Strom (strom@fedora/strom) ()
[20:32:12] *** Joins: akaWolf (~akaWolf@akawolf.org)
[20:32:30] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:32:59] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:33:09] *** Joins: Strom (strom@fedora/strom)
[20:33:27] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 245 seconds)
[20:36:19] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[20:36:52] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:37:01] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[20:38:37] <mefistofeles> jinsun: ah nice, thanks!
[20:38:41] *** Joins: Barones (~Barones@2804:48dc:8500:0:34e8:f7a4:e2a7:439c)
[20:39:34] *** Joins: semeion (~semeion@user/semeion)
[20:39:38] <gitesh> bjs: ok
[20:39:59] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Remote host closed the connection)
[20:42:28] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:44:07] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:95c8:c9ab:a5:fb27) (Quit: Some random bits)
[20:44:44] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:46:01] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:46:10] *** Quits: inom (~inom@176.59.103.126) (Remote host closed the connection)
[20:47:30] *** Quits: schumaml4 (~schumaml@dslb-188-104-191-129.188.104.pools.vodafone-ip.de) (Quit: WeeChat 3.0.1)
[20:49:38] *** Joins: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at)
[20:49:39] <AhmedAmerican> how to get timestampe from the date within pandas ? so for  `August 13, 2021`, i expect an output of `1628812800`
[20:50:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[20:51:23] <jinsun> AhmedAmerican: is that `August 13, 2021`a string in a column?
[20:51:53] <AhmedAmerican> it's a variable currently.
[20:51:58] <AhmedAmerican> string variable.
[20:52:32] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[20:52:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:53:43] <jinsun> so pd.to_datetime("August 13, 2021").timestamp() ?
[20:54:18] *** Joins: audiocat (~audio@2603-8081-1800-00ad-387d-6570-36fb-350d.res6.spectrum.com)
[20:56:18] <AhmedAmerican> jinsun: Thank you :D Now i understood that i mistaken to use pd.to_timestamp directly
[20:58:09] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[21:01:54] <AhmedAmerican> jinsun: in case if i want to ignore float, i should split ? https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.timestamp.html
[21:02:16] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[21:02:43] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[21:02:58] *** Joins: mattil (~mattilinn@87-92-0-72.bb.dnainternet.fi)
[21:03:20] <jinsun> if you just want to truncate the stuff after the decimal point, then call int() on the result
[21:03:47] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:03:59] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:04:26] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[21:05:57] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 245 seconds)
[21:06:26] *** Joins: luna-is-here (~quassel@ip-95-223-58-220.hsi16.unitymediagroup.de)
[21:06:46] *** Quits: {HD} (~{HD}@37.19.197.201) (Ping timeout: 258 seconds)
[21:07:54] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[21:08:02] <petemc> hi, im trying to convert a os.system command to sunprocess.run but struggling to properly break it up - https://bpa.st/U5ZA
[21:08:10] *** Joins: Akuli (~Akuli@87-94-111-54.bb.dnainternet.fi)
[21:09:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 258 seconds)
[21:10:08] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[21:10:11] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[21:10:20] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[21:10:57] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:11:51] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[21:15:24] *** Joins: inom (~inom@176.59.99.11)
[21:15:59] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:16:10] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[21:16:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:17:06] *** Joins: {HD} (~{HD}@191.96.185.21)
[21:17:39] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:18:16] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:18:27] *** Quits: rendar (~rendar@user/rendar) ()
[21:19:16] *** Joins: shimbles (~shimbles@50.208.12.185)
[21:19:28] <shimbles> what happened to numpy.date
[21:19:49] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:19:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[21:20:18] *** Joins: srhm (~ascii@user/srhm)
[21:22:38] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[21:22:54] <gitesh> Hi. Look at this --------> Write a function called stop_at_four that iterates through a list of numbers. Using a while loop, append each number to a new list until the number 4 appears. The function should return the new list.
[21:23:05] <SnoopJ> shimbles, what version was that in? I don't recognize it (perhaps you mean numpy.datetime?)
[21:23:06] *** Joins: yaalon (~yaalon@201.171.68.25.dsl.dyn.telnor.net)
[21:23:17] <SnoopJ> doesn't appear to be any mention of it in their changelog
[21:23:32] <gitesh> what if we pass None to the above function? how to handle that situation?
[21:23:36] <shimbles> about 2018 https://gist.github.com/rvaidya/c78f34b3c29ff087d8700297c0ca3b5b#file-database_to_parquet-py-L31
[21:24:03] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 276 seconds)
[21:24:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:24:53] *** Quits: pneff (~pneff@2a02:168:fedc:0:8177:d899:feea:d317) (Ping timeout: 250 seconds)
[21:24:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:24:58] <gitesh> bjs: https://bpa.st/JANQ
[21:25:35] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:26:13] <gitesh> bjs: ERROR	None	None	Error: IndexError: list index out of range
[21:26:28] <gitesh> bjs: if we pass None to the function i guess it's getting error
[21:26:37] <gitesh> how to handle this?
[21:27:00] <grym> gitesh: in real life, or for homework problems
[21:27:06] <SnoopJ> shimbles, if there ever was such a thing, I cannot find it in any version from v1.1.0 through v1.21.0
[21:27:22] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 240 seconds)
[21:27:28] <gitesh> grym: homework
[21:27:32] <wedwards> I have a parent class that some child classes inherit from with `super().__init__`. I've done two things inside that parent class that are a bit outside my Python comfort zone. First, I have to dynamically set attributes, for which I use `setattr(self, k, v)`. Second, I defined a custom __getattribute__ function that does `return super().__getattribute__(name)` to return the value as usual after some custom logic. I'd like to
[21:27:32] <wedwards>  know if I did these two things the best way possible.
[21:27:36] <grym> gitesh: expect your caller to do the right thing
[21:27:41] <grym> gitesh: unless the problem specifies otherwise
[21:29:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:29:26] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[21:29:33] <bjs> gitesh: well, what *should* the function do if you pass it None?
[21:29:42] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-04f3-22d4-21b0-5129.res6.spectrum.com)
[21:30:23] <gitesh> bjs: return None
[21:30:32] <bjs> gitesh: and are you sure that the error you say there is because you're passing None to the function?
[21:30:34] <AhmedAmerican> within `pd.read_html` for `atrrs`, it's not possible to lookup for 2 classes?
[21:31:12] <gitesh> bjs: yes
[21:31:15] <AhmedAmerican> i tried `attrs={'class': 'calls|puts'}` and `{'class': re.compile('calls|putts')}`
[21:31:39] <bjs> gitesh: what do those None's mean in the message you gave us?
[21:31:58] <gitesh> bjs: no i don't know
[21:31:58] *** Joins: reset (~reset@user/reset)
[21:32:00] <bjs> gitesh: I don't think the error you gave is because None was passed to it
[21:32:04] <bjs> Why do you think it is?
[21:32:05] <AhmedAmerican> signle `t` btw^
[21:32:09] <gitesh> bjs: right idk
[21:32:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:32:20] <bjs> gitesh: you've gone from "yes" to "i don't know" now ? :)
[21:32:41] <gitesh> bjs: something is passed to the function and they expect return value should be None
[21:32:55] <bjs> gitesh: what is this? some online problem?
[21:33:05] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:33:06] *** Quits: noneco (~noneco@dslb-188-096-064-125.188.096.pools.vodafone-ip.de) (Remote host closed the connection)
[21:33:07] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[21:33:13] <bjs> gitesh: where did you get that ERROR line from?
[21:33:35] <bjs> wedwards: well, it's hard to say whether you're doing the best thing possible without really understanding what the thing is you're trying to do; all we know is *how* you did it
[21:34:40] <wedwards> bjs: For the first question, the question is if `setattr(self, k, v)` is an adequate way to dynamically set attributes (k is a value only known at runtime).
[21:34:42] <bjs> wedwards: (e.g. where does the inheritance fit into this?  why __getattribute__ and not the usual __getattr__? etc)
[21:34:59] <bjs> wedwards: well setattr is the way to dynamically set attributes yes
[21:35:42] <bjs> wedwards: but maybe dynamic attributes isn't the best way to do the thing you want? it's hard to know
[21:36:25] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[21:36:25] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[21:36:31] <gitesh> bjs: https://ibb.co/SNgr1ys
[21:36:53] <wedwards> bjs: For the second question, the question is if `super().__getattribute__(name)` is an adequate way to call the 'real' __getattribute__ from inside a function which overrides it. I.e. I've also seen people do `object.__getattribute__`.
[21:37:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:38:02] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:54b6:6c5c:3464:133e) (Ping timeout: 268 seconds)
[21:38:17] *** Joins: MaximB (~MaximB@87.68.164.172)
[21:38:34] *** Joins: Betal (~Beta@user/betal)
[21:39:20] <Repiphany> `if len(alist) < 0:` will never be triggered
[21:40:46] <bjs> gitesh: I'm really not sure what that "Notes" section is trying to say on that line with the ERROR, and your text didn't say anything about passing None to the function, and if you pass None to your function you *dont* get None, nor do you get an IndexError so I'm not sure how it got the "Actual value" of None from it
[21:40:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:41:08] <bjs> gitesh: also as Repiphany points out, your `if len(alist) < 0` check is not doing anything (there are no lists with fewer than 0 elements).
[21:41:08] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:41:42] *** Joins: gustik (~gustik@2a01:c844:241f:c020:312a:c22f:e497:698f)
[21:42:26] *** Quits: roniez (~roniez@nixsec.se) (Ping timeout: 272 seconds)
[21:42:27] <bjs> wedwards: yes that super call does call the parent's __getattribute__, which is almost always just object.__getattribute__ unless the parent defined one.
[21:42:38] <bjs> wedwards: but getattribute is itself a very weird thing to touch
[21:44:33] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:45:18] <wedwards> bjs: Thanks. In this case, I want to disallow a class client to retrieve an attribute (in all cases, so I didn't use __getattr__) in case a certain variable is True. I'm open to better ideas, but this is the best I could come up with with my limited skillz. For context, this is the function: https://bpa.st/VFSQ
[21:45:38] *** Quits: {HD} (~{HD}@191.96.185.21) (Ping timeout: 265 seconds)
[21:45:46] <bjs> wedwards: is all this machinery for a specific attribute you know in advance?
[21:45:59] <bjs> wedwards: do you know about @property ?
[21:46:15] <madprops> maybe he's getting a list without 4
[21:46:23] <madprops> and supposed to return None when index reaches the end
[21:46:53] <wedwards> bjs: No, and no. Lemme look it up in the docs
[21:49:09] <gitesh> bjs: i did this ---> https://bpa.st/4MGQ
[21:49:15] *** Joins: Elon_Satoshi (~elonsatos@172.86.186.171.adsl.inet-telecom.org)
[21:49:17] <gitesh> bjs: it worked. got 100%
[21:49:20] *** Joins: Celeo (~Celeo@user/celeo)
[21:50:05] <Elon_Satoshi> Is there a subreddit or some other forum where people are looking for someone to write scripts for them for free?
[21:50:26] <gitesh> bjs:  i could not think in advance that if 4 is not present in the list what my code should do
[21:50:30] <bjs> gitesh: I guess that ERROR was for the case where there was no 4 in the list.
[21:50:39] <SnoopJ> Elon_Satoshi, are you looking to solicit a free script, or are you looking for to write things for people?
[21:50:44] <bjs> gitesh: well, the text didn't tell you and the ERROR line didn't either so you can't have known
[21:50:48] <gitesh> bjs: how to think like that in advance?
[21:50:58] <gitesh> bjs: okay
[21:51:10] <gitesh> bjs: it was pretty nice to fix it though
[21:51:15] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Changing host)
[21:51:15] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:51:21] <Elon_Satoshi> SnoopJ: I'm looking for to write things for people. I think being able to help someone like that would be a big motivator for me to learn things
[21:51:31] <bjs> gitesh: it would have been nicer if it actually told you what to do in that case :)
[21:52:10] <gitesh> bjs:  as a programmer , should not we automatically think about all the cases while coding?
[21:52:30] <bjs> gitesh: yes, and the website clearly didn't think about the case someone would get it wrong because that ERROR line was clearly buggy ;)
[21:53:06] <SnoopJ> Elon_Satoshi, I'm not sure about forums/etc., but if you hang around here, you'll see a lot of interesting tasks you could tackle.
[21:53:09] *** Quits: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[21:53:14] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[21:53:32] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:53:33] <Repiphany> Thinking about "all the cases" doesn't necessarily mean you have to handle every possible thing that can happen
[21:53:56] <Repiphany> Sometimes it's fine to just let errors propagate
[21:53:57] *** Joins: y1n (~y1n@84-115-65-189.wifi.dynamic.surfer.at)
[21:54:01] <Elon_Satoshi> SnoopJ: oh sweet
[21:54:25] <SnoopJ> Elon_Satoshi, you will probably find interesting tasks anywhere you go where people are writing Python, though :)
[21:54:36] <Repiphany> It depends on the complete problem you're trying to solve
[21:58:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[21:58:29] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:59:29] <SnoopJ> Elon_Satoshi, wherever you find your problems, I highly recommend you organize the programs you write to solve them. I put most of mine into version control (a "playground" repository), and I try to record either the problem in its entirety, or a reference to the point in my logs of this channel that got me started on it.
[21:59:59] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:00:08] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 265 seconds)
[22:00:11] <SnoopJ> Very useful to go back and look at what you did, especially for gauging your own progress. There are lots of programs in my playground I would write differently today :)
[22:00:15] *** Parts: dougquaid (~dougquaid@156.146.62.221) ()
[22:00:17] *** Joins: Auron (~Auron956@user/auron)
[22:00:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:04:19] <wedwards> bjs: Using property does seem much cleaner than overriding __getattribute__, thanks a lot for the hint. I'll be trying to figure out how to use that with dynamic attributes in the meantime
[22:04:35] *** Joins: pnoud (~pnoud@user/pnoud)
[22:05:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:05:32] *** Joins: ganchan (~thomas_w@user/ganchan)
[22:07:25] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:08:21] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[22:09:30] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[22:09:31] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 250 seconds)
[22:14:00] *** Joins: lorcab (~user@197.251.194.240)
[22:14:02] <gitesh> How to think all of the cases while coding?
[22:16:05] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[22:16:31] <Elon_Satoshi> gitesh: hmm
[22:16:41] <Elon_Satoshi> cases as in all the things the user might try with your code?
[22:16:47] <Repiphany> Understanding what could go wrong, why it can go wrong and whether or not it's an actual problem
[22:16:50] <SnoopJ> gitesh, there are a lot of possible answers to that question. It's kinda hard to get ALL of the possible cases, but if you think about any that aren't "the happy path" you're doing better.
[22:17:14] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 256 seconds)
[22:17:23] <Elon_Satoshi> I've had some experience testing different cases for a collatz script
[22:17:41] <grym> gitesh: the two extremes are "try to anticipate everything every time" ('look before you leap') and "just do it and if it blows up, whoops" ('easier to beg forgiveness than it is to ask permission')
[22:17:42] <Elon_Satoshi> I think so far it handles 0, negative numbers, or strings pretty well
[22:17:43] <gitesh> Elon_Satoshi: yes
[22:17:44] <SnoopJ> "Your code's going to be way better designed if you consider more than one use of the code."
[22:17:57] *** Joins: vicfred (~vicfred@user/vicfred)
[22:18:20] <grym> property-based testing is nice for finding edge cases, though you do have to learn more about property based testing :)
[22:18:20] <Elon_Satoshi> gitesh: Do you want me to try your code out and try to input all the things I'm not suppose to?
[22:19:39] <grym> gitesh: https://i.redd.it/y1j5mmxif2x31.png :)
[22:20:41] *** Joins: blackheart (~mrrobot@c-73-27-175-91.hsd1.fl.comcast.net)
[22:21:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:22:37] <blackheart> anyone here a pymongo expert? I'm trying to make a query to mongodb like find_new_api = dbapi.find({"$and" : [{"api_key" : "%s" % (mdc_key)}, {"sso_id":{"$exists" : "true"}}]}) it appears to go through the entire process, but when I try to print the result of each one, its empty, I can print the object location itself, but no luck in seeing what it found.
[22:27:31] *** Joins: jpic_ (~jpic@82.142.18.126)
[22:27:45] <blackheart> this query works find_new_api = dbapi.find({"api_key":"%s% % (key)}), I get the collections and everything. but when I try to add another check it comes up empty.
[22:28:38] <AhmedAmerican> blackheart: i feel that old format string is somehow ugly. why not `"".format()`
[22:28:52] <AhmedAmerican> or `f""`
[22:29:34] <blackheart> sure I can do that
[22:29:36] *** Joins: katze_ (~brotmann@aftr-185-17-205-18.dynamic.mnet-online.de)
[22:30:28] <bjs> gitesh: you can't, and functions usually don't check all the cases
[22:30:44] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[22:30:44] <bjs> many many functions just fail if you pass them None for example, and that's ok
[22:30:45] *** Quits: jpic (~jpic@82.142.18.126) (Ping timeout: 250 seconds)
[22:30:50] <Mat1010> Hi
[22:31:35] <Mat1010> where I can see an example of the structure of the word search code within a web page?
[22:32:18] <blackheart> I think I know why its failing.
[22:32:38] <Mat1010> Similar to the Control + F command
[22:33:44] <bjs> Mat1010: ctrl+f is usually implemented in the browser and not done by each web page itself.
[22:33:55] <bjs> the browser will have some pretty complicated code to try do it efficiently
[22:34:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:36:19] *** Quits: yaalon (~yaalon@201.171.68.25.dsl.dyn.telnor.net) (Remote host closed the connection)
[22:36:42] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-04f3-22d4-21b0-5129.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:38:31] *** Joins: pgib (~textual@173.38.117.68)
[22:38:39] <raek> I don't know how it's usually done, but maybe the source code of a simple text edtior (something like gedit?) could be a useful source to check
[22:38:54] *** Joins: calamari (~calamari@2600:8800:7000:33:1a31:bfff:fede:24ad)
[22:39:10] <Mat1010> what characteristics do word search algorithms have within a text?
[22:39:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5820-3b18-1b1d-34b9.res6.spectrum.com)
[22:39:33] <KirkMcDonald> Mat1010: That question seems incredibly vague.
[22:39:39] <Mat1010> yes
[22:40:11] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[22:40:22] <KirkMcDonald> Here's the Wikipedia page on Boyer-Moore: https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm
[22:40:34] <KirkMcDonald> Which is what Python uses for the 'in' operator, at least.
[22:40:40] <Mat1010> What are the steps to find a match within a text?
[22:41:06] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:41:07] <bjs> Mat1010: there are lots of ways, KirkMcDonald's link shows you one way that people really use
[22:41:08] <KirkMcDonald> (Or some variant of it.)
[22:41:17] <raek> Mat1010: are you just looking for a way to find if a word occurs in a string? or do you care about UI integration?
[22:41:55] <Mat1010> If the word appears
[22:42:15] <SnoopJ> Mat1010, how much text are you searching?
[22:42:43] <Mat1010> about 70 words
[22:43:03] <katze_> hi there :)
[22:43:05] <Mat1010> separated by a space
[22:43:37] <bjs> Mat1010: well you can always just look at each word until you find the one you're looking for
[22:43:44] <Mat1010> plane text
[22:44:04] <Mat1010> that's what I want the machine to do
[22:44:22] <bjs> Mat1010: are you writing Python? are you a programmer?
[22:44:47] <Mat1010> that's what I want the machine to do
[22:44:58] <Mat1010> I'm starting!
[22:44:59] <katze_> i'm pretty new to python and i'm trying to plot a sine (using tkinter and numpy) in a resizeable window with the ability to redraw if enter is pressed in an entry
[22:44:59] *** Quits: lorcab (~user@197.251.194.240) (Read error: Connection reset by peer)
[22:45:05] *** Joins: junktext (~junktext@109.201.152.175)
[22:45:07] <calamari> One cool feature in vscode is type annotation support, where I can hover over a method or variable and see its type. However, it only seems to work for the specific module I'm in. Anything from another module just says "Any", even with explicit hints. Anyone know if there's a way to activate those annotations, or is it a limitation for now?
[22:45:10] <katze_> the code is here
[22:45:11] <katze_> https://bpa.st/E6FA
[22:45:15] <katze_> it works
[22:45:22] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:46:07] <SnoopJ> Mat1010, 70 words is not very much text at all, I would use the `in` operator (e.g. `target_word in my_document`) or maybe str.find() (e.g. `index = my_document.find(target_word)`) if you want to know *where* in the document it occurs.
[22:46:09] <katze_> but as you can see in line 17 it is a really dirty workaround for getting the window repainted if enter is pressed in the editfield
[22:46:39] <katze_> i'm coming from c so this oop(?) thing is giving me headaches..
[22:46:41] <bjs> Mat1010: have you written code before?  Your questions are all a little vague, perhaps our answers haven't been at the right level
[22:46:51] *** Quits: gloin (~gloin@user/gloin) (Remote host closed the connection)
[22:47:28] <Mat1010> programming basics
[22:47:54] <Mat1010> programming basics
[22:48:05] <Mat1010> I can only improve
[22:48:28] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.79.167) (Ping timeout: 265 seconds)
[22:48:58] *** Quits: akk (~akk@97-123-82-25.albq.qwest.net) (Ping timeout: 256 seconds)
[22:50:38] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[22:51:04] *** Quits: user2001 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:52:46] <katze_> *getting a cup of coffee
[22:52:59] <calamari> Mat1010: You'll want to consider punctuation, upper/lowercase, and word finding in your solution. You wouldn't want to search "gram" and have it find that in "program". And if you searched "word", it should probably find "Word" as well as "word!". You can try to strip punctuation and normalize text in advance, or you can leave it alone and search it character by character, ignoring/normalizign as you go.
[22:53:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:54:00] *** Quits: y1n (~y1n@84-115-65-189.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[22:54:30] *** Joins: y1n (~y1n@84-115-65-189.wifi.dynamic.surfer.at)
[22:55:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:56:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:56:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[22:56:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:57:11] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:57:12] <Mat1010> (tokens)
[22:58:00] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:58:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[22:58:12] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:7f3a:926a:5be5:7f19)
[22:59:11] <jinsun> calamari: if you use the Python extension with the default language server(Pylance) then you should see the correct annotations from anywhere without needing to set anything up
[22:59:48] <jinsun> calamari: the only thing that has to be activated is the type checking, so that it gives you red underlines when you put wrong types
[23:00:12] <calamari> jinsun: Interesting. That hasn't been my experience so far. Pylance only seems to work for the current file.
[23:00:15] *** Quits: Mat1010 (~Mat1010@168.181.209.58) (Quit: Client closed)
[23:02:12] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 276 seconds)
[23:03:13] <calamari> It does seem to notice when a method doesn't exist in another module. However for one larger module, that doesn't work either. Maybe it switches itself off if it seems too much code?
[23:03:51] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[23:05:01] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[23:05:06] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 240 seconds)
[23:06:33] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: restarting xorg...)
[23:06:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:07:29] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:10:10] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:11:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:12:07] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[23:13:01] *** Quits: mattil (~mattilinn@87-92-0-72.bb.dnainternet.fi) (Quit: Leaving)
[23:14:49] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[23:15:32] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 265 seconds)
[23:15:32] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[23:16:42] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[23:16:59] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[23:17:38] <katze_> *back
[23:17:41] <calamari> Just tried it with a trivial file and it does work. So, I guess Pylance is just turning itself off for some reason, whether the code is too big or it doesn't like something and is crashing, etc. I do have a rather large Dict defined (~100 lines), and the values have nested List's. Also the module is ~1800 lines.
[23:17:55] *** Joins: gan (~thomas_w@user/ganchan)
[23:20:01] *** Joins: minip (~minip@user/minip)
[23:21:03] *** Quits: ganchan (~thomas_w@user/ganchan) (Ping timeout: 276 seconds)
[23:21:06] <jinsun> hmm, possible that it switches off for larger modules, but 1800 lines is not that large, it could also be that it is not able to figure out the location of the module you imported, but it gives yellow squiggles under your import in those cases
[23:21:41] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[23:21:42] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[23:21:44] <jinsun> and if it cannot figure out the type it gives "unknown" normally, not Any
[23:21:52] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 272 seconds)
[23:22:29] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[23:22:41] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[23:22:47] *** Quits: luna-is-here (~quassel@ip-95-223-58-220.hsi16.unitymediagroup.de) (Ping timeout: 265 seconds)
[23:26:15] *** Joins: luna-is-here (~quassel@ip-95-223-58-220.hsi16.unitymediagroup.de)
[23:26:17] <katze_> one of my problems is that if in w.bind("<Configure>", draw) with w being the canvas, i get an event with event.width etc..
[23:26:26] <calamari> Weird, I've never seen "unknown". It's always "Any". My imports are working, there are no squiggles. There was one time that I had a circular dependency which Pylance couldn't handle, but I fixed that a while ago.
[23:26:30] <katze_> but calling it with e.bind("<Return>",draw) and e being en entry
[23:27:00] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:27:08] <katze_> there seems to be an event, but event.width is '??' as the interpreter tells me
[23:27:27] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[23:28:10] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:28:35] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 265 seconds)
[23:28:54] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[23:29:02] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 268 seconds)
[23:29:41] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[23:32:39] <calamari> katze_: This might not be related to your problem, but just a general observation. Using from ... import * can seem handy, but it can pollute your namespace and it's bitten me a lot of times when it pulled in something I wasn't expecting. If you want to save typing, I'd recommend doing it like your numpy import.
[23:32:49] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[23:33:34] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[23:33:53] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[23:34:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:34:28] <jinsun> calamari: this is how it shows Unknown to me https://pasteboard.co/KdBF2ie.png , Any shows up only if something is explictly annoted as Any
[23:34:43] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[23:35:03] <katze_> calamari, you are right, this is not the correct way to do it, but for such a snipped of code, i thought i can go with it
[23:35:10] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 272 seconds)
[23:36:07] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[23:38:03] <calamari> jinsun: if you however over y, does it show "Unknown" there as well? Mine shows "Any"
[23:38:10] <calamari> *hover
[23:38:40] <jinsun> calamari: yes it shows "y: Unknown"
[23:38:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[23:39:48] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[23:40:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:40:32] <jinsun> ah it is probably because I have type checking enabled, if I disable that it becomes Any
[23:40:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:41:34] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:42:31] <calamari> jinsun: https://pasteboard.co/KdBIMgS.png
[23:42:32] <jinsun> calamari: so by default it shows Any, you have to set "python.analysis.typeCheckingMode": "basic" or "strict" to get Unknown
[23:42:59] <calamari> okay, let me try that
[23:45:26] <calamari> yep, with strict, now it I'm getting a bunch of errors, with it claiming that a bunch of things are unknown, but which definitely exist and are explicitly typed
[23:45:38] <calamari> (things from other modules, I mean)
[23:46:24] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[23:47:16] <jinsun> I'm guessing vscode is not able to find that module at all, so it just sets type unknown to everything from that module
[23:47:28] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[23:47:50] <jinsun> if you did any sys.path hackery to import that, vscode will not be able to figure it out
[23:48:46] *** Joins: {HD} (~{HD}@102.165.16.232)
[23:48:50] *** Joins: magla (~gelignite@55d46dd2.access.ecotel.net)
[23:50:10] <jinsun> or if the import works only on one specific working directory, then you have to open that exact folder in vscode from File -> Open folder
[23:51:36] <calamari> Nope, no sys.path. Folder is opened, and I also have the path in "python.analysis.extraPaths"
[23:51:38] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[23:52:06] <calamari> Again, it works for a trivial case, same directory.
[23:52:26] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 256 seconds)
[23:52:32] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[23:52:56] <calamari> So I guess it just breaks when it gets big or such. Kinda disappointing, since that's when these type annotations are the most useful, haha.
[23:53:34] *** Quits: y1n (~y1n@84-115-65-189.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[23:54:34] *** Joins: y1n (~y1n@84-115-65-70.wifi.dynamic.surfer.at)
[23:54:42] *** Quits: junktext (~junktext@109.201.152.175) (Ping timeout: 252 seconds)
[23:56:24] *** Joins: pnoud (~pnoud@user/pnoud)
