[00:11:24] *** Quits: tewi (~tewi@apn-95-41-89-152.dynamic.gprs.plus.pl) (Ping timeout: 256 seconds)
[00:35:33] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[01:01:10] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 260 seconds)
[01:50:34] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[02:44:59] *** Joins: shka (~herr@109.231.0.226)
[03:14:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[03:19:02] *** Quits: Josh_2 (~user@37.25.47.130) (Ping timeout: 240 seconds)
[03:25:20] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 250 seconds)
[03:47:26] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[03:49:18] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[03:58:04] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[04:24:00] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.4)
[04:27:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:35:06] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 250 seconds)
[05:12:23] *** Joins: Oladon (~olad@98.43.81.226)
[06:16:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:42:17] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:2d90:ff3:b02f:c2ef)
[07:11:58] *** Quits: sts-q (~sts-q@91.200.108.132) (Ping timeout: 250 seconds)
[07:16:43] *** Joins: sts-q (~sts-q@91.200.108.174)
[07:30:34] <beach> Good morning everyone! 
[07:32:29] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[07:38:29] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[07:54:52] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[08:29:22] *** Joins: epony (epony@user/epony)
[09:28:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[09:37:10] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[09:42:51] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[09:54:50] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[10:19:29] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[10:46:39] *** Joins: tewi (~tewi@apn-95-40-157-204.dynamic.gprs.plus.pl)
[11:12:07] *** Joins: occ (~occ@user/occ)
[11:12:52] <occ> Which shortcut in slime could list all function and macro definitions in a lisp file ? 
[11:15:02] <EdLangley[m]> M-x imenu might do what you want
[11:24:07] <occ>  EdLangley[m]: thx your reply.
[11:26:59] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[11:27:10] <edgar-rft> M-x occur (def[fm]
[11:27:42] <edgar-rft> error, this is what I meant: M-x occur (def[um]
[11:29:35] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[11:37:03] *** Joins: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7)
[12:32:20] <tewi> does s-expression just refer to representation of Lisp objects [or whatever it is that the reader? returns?] in the source code? with each explanation it becomes slightly more confusing
[12:36:28] <beach> It can be either the sequence of characters in the source file, or the resulting data structure returned by READ.
[12:39:08] <tewi> so it stops being an s-expression after it's evaluated? maybe it's a dumb question, but what isn't an s-expression?
[12:44:52] <edgar-rft> I think the term s-expression comes from the very early Lisp days. McCarthy originally wanted m-expressions (math expressions) like (1 + 1) but it turned out that prefix notation (+ 1 1) was better for manipulating code programatically, e.g. by macros. This prefix notation then was called s-expressions (syntax expressions).
[12:44:52] <edgar-rft> Beach may correct everything that's wrong :-)
[12:47:33] <beach> tewi: Well, since the nature of objects returned by the evaluator is the same as the nature of those objects that it was give, the output can also be said to be an S-expression.
[12:47:55] <beach> tewi: A comment is not an S-expression. 
[12:48:24] <White_Flame> also, (1 2 3) is a list, not an s-expression.  the first element is not invokable
[12:48:34] <White_Flame> '(1 2 3) however is, as it's (quote (1 2 3))
[12:48:39] <beach> White_Flame: It is an expression, but not a form.
[12:49:15] <beach> The term "form" is used for the subset of expressions meant to be evaluated.
[12:49:22] <White_Flame> aren't expressions intended to be evaluable?
[12:49:25] <White_Flame> huh
[12:49:30] <beach> Not the ones that aren't forms.
[12:50:19] <beach> Check the glossary.
[12:50:26] <White_Flame> yeah, already am :)
[12:50:31] <tewi> so a comment and whitespace (i think comments are treated essentially as whitespace) would be the two things that are not s-expressions?
[12:50:33] <beach> "The second expression in a LET form is a list of bindings."
[12:50:39] <beach> And that expression is not a form.
[12:50:42] <White_Flame> right
[12:51:22] <White_Flame> stripped down, without the "often" clause, it's just "expression n. an object."
[12:51:30] <edgar-rft> sounds as if for evaluating anything at all one must first fill out a form
[12:51:39] <White_Flame> heh
[12:51:50] <White_Flame> Bureaucratic Lisp
[13:04:01] *** Quits: occ (~occ@user/occ) (Ping timeout: 250 seconds)
[13:27:29] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:2d90:ff3:b02f:c2ef) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:32:02] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:f9c4:ec41:3bfb:d5c6)
[13:34:05] *** Joins: shka (~herr@109.231.0.226)
[15:48:54] <pjb> tewi: indeed, S-expression is the representation of lisp objects as text.  The list (1 2 3) has the S-expression "(1 2 3)".  You can convert between lisp object and S-expression using PRIN1 / PRIN1-TO-STRING, and you can convert between S-expression and lisp objects using READ / READ-FROM-STRING.
[15:49:30] <pjb> tewi: M-expression is a different representation as text, of lisp forms.  Lisp forms are lisp objected intended to be executed. What we'd call "code".
[15:50:17] <pjb> tewi: (there's no standard M-expression serialiser/deserializer, since the syntax has never been finalized).
[15:51:03] <pjb> The discovery here was that using S-expression, to represent lisp data, had a competitive advantage when used to represent code, since that allowed to process code as data easily.
[15:52:40] <pjb> tewi: not all lisp objects are printable readably, so S-expressions cannot represent all the lisp objects.
[15:53:02] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:54:05] <pjb> tewi: but for the large part that is, it's very convenient to use the (unquoted) textual representation, as a proxy for the actual lisp object: in « The list (1 2 3) has the S-expression "(1 2 3)". », the first occurence of (1 2 3) is actually a textual representation of the lisp, since it appears as text, in your irc window.
[15:55:12] <pjb> tewi: M-expressions: http://informatimago.com/develop/lisp/com/informatimago/small-cl-pgms/m-expression/index.html
[16:09:45] <tewi> pjb: thanks, do you maybe have any example of a lisp object that cannot be represented as an s-expression?
[16:14:32] <pjb> tewi: *random-state*
[16:14:38] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:14:50] <pjb> tewi: (defclass foo () ()) #| --> #<standard-class foo> |#   (make-instance 'foo) #| --> #<foo #x30200253EB2D> |# 
[16:15:10] <pjb> tewi: they're printed with #< when *print-readably* is nil, and signal an error when it's true.
[16:15:58] <pjb> Implementation may try to make them readably, using #. eg.  *random-state* #| --> #.(ccl::initialize-mrg31k3p-state 1466213426 158043746 1347753245 1697674161 1840553762 1812452927) |#  but this is then suject to *read-eval*.
[16:17:20] <pjb> tewi: applications can always add print-object methods and reader macros, to define a syntax for application objects, and define functions to print readably standard objects (we cannot override print-object for standard objects).
[16:22:22] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[16:23:19] <beach> pjb: The Wikipedia page does not even mention text as being valid for S-expressions.
[16:23:36] <beach> So the main definition seems to be the data structure. 
[16:33:44] *** Joins: occ (~occ@user/occ)
[16:33:46] <pjb> wikipedia cannot be a reference…
[16:34:22] <pjb> It's useless to define S-expressions in terms of lisp objects.  S-expressions are textual representations.
[16:34:43] <pjb> We're talking about syntax here.
[16:38:05] <pjb> The lisp reader and the lisp printer convert between lisp objects and textual representations.  
[18:23:38] *** Joins: Josh_2 (~user@37.25.47.130)
[18:59:52] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:29:21] *** Joins: neominimum (sid537410@user/neominimum)
[19:37:55] *** Joins: Bike (~Glossina@71.69.170.70)
[20:05:35] *** Joins: treflip (~user@user/treflip)
[20:06:51] *** Joins: jealousmonk (~user@2804:431:e7c5:c29d:f611:a6e4:135a:8b29)
[20:09:19] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:36:25] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[20:57:20] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[20:57:55] *** Joins: mzan (~quassel@mail.asterisell.com)
[21:15:28] <kagevf> "s-expressions (syntax expressions)" <-- I thought the "s" was for "symbolic"? am I being overly pedantic?
[21:17:02] *** Quits: dre (~dre@2001:8003:c932:c301:c799:698e:a7d8:4ce6) (Ping timeout: 240 seconds)
[21:34:17] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:f9c4:ec41:3bfb:d5c6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:45:46] *** Joins: neceve (~quassel@2.26.93.228)
[21:51:46] *** Joins: treflip (~user@user/treflip)
[22:18:26] *** Quits: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7) (Ping timeout: 260 seconds)
[22:25:14] *** Quits: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[22:25:21] *** Joins: kagevf_ (~jfh@ip68-108-33-76.lv.lv.cox.net)
[22:25:26] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[22:25:27] *** Joins: aeth (~aeth@user/aeth)
[23:06:12] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[23:18:27] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[23:25:57] <tewi> what would be the most accurate word for what cons cell is composed of [as in: cons cell is a pair of...]? i've seen words such as values, objects and pointers used. also, could somebody point me to the glossary that was mentioned here earlier?
[23:27:51] <Bike> i would say values or objects. the language does not have a concept of pointers. here is the standard glossary, if you mean that: http://www.lispworks.com/documentation/lw50/CLHS/Body/26_a.htm
[23:40:56] <tewi> thanks
[23:43:43] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
