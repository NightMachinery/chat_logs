[00:01:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:11:25] *** Quits: Pythayr (~pither195@072-238-180-064.res.spectrum.com) (Ping timeout: 240 seconds)
[00:14:06] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:18:04] *** Quits: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[00:25:13] *** Joins: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us)
[00:26:23] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[00:27:02] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:27:14] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.5)
[00:27:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:32:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[00:34:14] *** Joins: jtgd (~jtgd@user/jtgd)
[00:41:18] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[00:42:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:45:26] *** Lord_of_Life_ is now known as Lord_of_Life
[00:54:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:54:59] *** Joins: jdmark2 (~jdmark@user/jdmark)
[00:58:17] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[01:06:39] *** Quits: halosghost (~halosghos@user/halosghost) (Ping timeout: 260 seconds)
[01:08:25] *** PJBoy is now known as Guest7580
[01:08:25] *** Quits: Guest7580 (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[01:08:40] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:11:42] *** Joins: sebn (~sebn@c90-142-43-192.bredband.tele2.se)
[01:26:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:27:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:30:08] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::3b)
[01:36:12] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[01:40:41] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:43:02] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[01:43:26] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:46:06] *** Quits: Maxattax97 (~max@2600:1700:68c0:3bb0::3b) (Remote host closed the connection)
[01:46:28] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::3b)
[01:47:22] *** Quits: brolin (~brolin@179.13.18.50) (Remote host closed the connection)
[01:52:21] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[01:58:31] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[02:05:41] *** Quits: TunnelJ (~TunnelJ@64.201.243.34) (Quit: Quit)
[02:10:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:11:11] *** Quits: dply (~dply@2800:150:111:1815:5cdc:2c99:b0db:7868) (Remote host closed the connection)
[02:11:20] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:14:46] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[02:19:12] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.11.threembb.co.uk)
[02:20:42] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[02:21:12] *** Parts: Guyver2 (~Guyver@guyver2.xs4all.nl) (Closing Window)
[02:24:03] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:24:30] *** Quits: Maxattax97 (~max@2600:1700:68c0:3bb0::3b) (Remote host closed the connection)
[02:29:22] *** Quits: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[02:31:26] *** Joins: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net)
[02:34:46] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[02:35:37] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 246 seconds)
[02:35:38] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[02:54:01] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[03:04:26] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:08:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:08:24] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[03:08:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:10:52] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[03:15:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[03:21:42] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[03:25:20] *** Quits: sonOfRa (sonOfRa@user/sonofra) (Remote host closed the connection)
[03:28:25] *** Joins: sonOfRa (sonOfRa@user/sonofra)
[03:45:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:50:32] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[04:13:28] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[04:14:23] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[04:15:42] *** Joins: sobkas (~sobkas@95.175.17.217)
[04:16:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:17:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:19:33] *** Joins: Wulf (~Wulf@user/wulf)
[04:25:43] *** Quits: hg (~halosghos@user/halosghost) (Quit: WeeChat 3.4.1)
[04:43:52] *** Joins: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net)
[04:46:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:46:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:52:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[04:56:21] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[04:58:25] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 246 seconds)
[05:02:17] *** Joins: halosghost (~halosghos@user/halosghost)
[05:03:22] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[05:05:32] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 260 seconds)
[05:16:47] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[05:19:02] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.11.threembb.co.uk) (Remote host closed the connection)
[05:19:02] *** Joins: mad_enz (~mad_enz@2605:8d80:6a1:dfde:99cc:819b:ca5c:a037)
[05:24:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:28:52] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 260 seconds)
[05:28:54] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[05:30:27] *** Joins: Brnocrist (~spartak@user/brnocrist)
[05:33:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[05:43:51] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 260 seconds)
[05:45:45] *** Joins: Brnocrist (~spartak@user/brnocrist)
[05:55:07] *** Quits: mad_enz (~mad_enz@2605:8d80:6a1:dfde:99cc:819b:ca5c:a037) (Ping timeout: 260 seconds)
[06:03:52] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[06:08:57] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[06:09:44] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[06:16:19] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[06:16:40] *** Joins: jdmark (~jdmark@user/jdmark)
[06:20:35] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[06:57:39] *** Quits: cehteh (~ct@git.pipapo.org) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:00:25] *** Joins: cehteh (~ct@git.pipapo.org)
[07:19:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[07:24:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:25:27] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:29:48] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[07:39:49] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:47:24] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpy3zax5gyrke1z.ipv6.telus.net) (Remote host closed the connection)
[07:48:29] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpvskxnkoxiwui9.ipv6.telus.net)
[07:53:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:08:57] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:10:10] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:18:47] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:23:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[08:24:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:38:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:40:58] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[08:51:12] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[09:14:15] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[09:18:19] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:18:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:25:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:29:50] *** Joins: Sofia (~sofia@user/sofia)
[09:30:42] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[09:40:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:46:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:47:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:52:36] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:53:38] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:55:58] *** Joins: xx (~xx@user/xx)
[10:03:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:30:43] *** Quits: skaro (~skaro@2600:8807:180:80:fcbe:c239:58fc:d78e) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[10:31:29] *** Quits: onon (~onon@91.228.52.220) (Ping timeout: 252 seconds)
[10:31:34] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[10:36:28] *** Joins: onon (~onon@91.228.52.220)
[10:38:34] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:41:25] *** Quits: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[10:43:38] *** Joins: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net)
[10:59:28] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[11:18:31] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[11:20:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:25:22] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:26:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:31:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[11:37:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:38:06] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:38:45] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[11:39:00] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 240 seconds)
[11:44:36] *** Quits: rqsd (~rqsd@user/rqsd) (Ping timeout: 240 seconds)
[11:46:40] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:46:46] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[11:46:51] *** Joins: rqsd (~rqsd@user/rqsd)
[11:51:41] *** Quits: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[11:51:49] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl)
[11:53:41] *** Joins: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net)
[11:55:27] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:10:12] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[12:11:32] *** Joins: steam (~steam@user/steam)
[12:16:32] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:18:27] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:18:40] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[12:19:04] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:29:18] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:55:19] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:58:35] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[12:59:06] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[13:00:12] *** Joins: Nimrodel (~Nimrodel@ppp-94-69-16-130.home.otenet.gr)
[13:08:30] *** Quits: Nimrodel (~Nimrodel@ppp-94-69-16-130.home.otenet.gr) (Quit: Leaving)
[13:23:58] *** Joins: aleck (~aleck@user/aleck)
[13:26:34] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[13:27:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:32:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[13:43:51] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[13:46:13] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 246 seconds)
[13:50:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:53:32] *** Joins: labrador (~labrador@user/labrador)
[13:56:52] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpvskxnkoxiwui9.ipv6.telus.net) (Remote host closed the connection)
[14:06:32] *** Joins: VoidSync (~sync@user/voidsync)
[14:13:38] *** Joins: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de)
[14:13:53] *** Quits: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de) (Changing host)
[14:13:53] *** Joins: menace (~someone@user/menace)
[14:13:55] *** menace is now known as Deknos
[14:28:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:30:23] *** Joins: maroon (tinycrypt@user/maroon)
[14:45:21] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:46:05] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[14:49:51] *** Joins: labrador (~labrador@user/labrador)
[14:57:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:57:38] *** Joins: gproto23_ (~gproto23@user/gproto23)
[15:00:06] *** Parts: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) ()
[15:09:37] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[15:18:15] *** Quits: VoidSync (~sync@user/voidsync) ()
[15:28:17] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[15:28:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:32:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[15:39:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:43:48] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[16:03:52] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[16:14:33] *** Joins: labrador (~labrador@user/labrador)
[16:14:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:16:38] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[16:19:20] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[16:21:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:22:01] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 245 seconds)
[16:24:18] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 272 seconds)
[16:25:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:30:04] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[16:31:32] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[16:31:41] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl)
[16:44:57] *** Quits: HumanG33k (~HumanG33k@dau94-2-82-66-65-160.fbx.proxad.net) (Ping timeout: 240 seconds)
[16:48:26] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[17:11:50] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:12:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:16:32] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[17:17:37] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 260 seconds)
[17:32:52] *** Joins: labrador (~labrador@user/labrador)
[17:44:04] *** Joins: maroon (tinycrypt@user/maroon)
[17:48:07] *** Joins: hg (~halosghos@user/halosghost)
[17:49:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:50:20] *** Joins: brolin (~brolin@179.13.18.50)
[17:50:28] *** Joins: tradar (~tradar@user/tradar)
[17:50:59] *** Quits: brolin (~brolin@179.13.18.50) (Remote host closed the connection)
[17:51:32] *** Joins: brolin (~brolin@179.13.18.50)
[17:54:40] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[17:58:08] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[18:03:52] *** Joins: blarnath (~d34dh0r53@98.97.83.45)
[18:04:18] *** Quits: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9) (Ping timeout: 260 seconds)
[18:15:04] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:88a0:fb04:2d2:c434)
[18:17:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:37:01] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:41:42] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:43:33] *** Quits: wasamasa (~wasamasa@chicken/contributor/wasamasa) (Quit: ZNC - https://znc.in)
[18:44:39] *** Joins: wasamasa (~wasamasa@chicken/contributor/wasamasa)
[18:48:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:51:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:55:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:55:54] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:58:38] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[19:00:32] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[19:02:08] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[19:13:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:13:42] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:14:07] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:16:59] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[19:19:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:19:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:19:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:24:18] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:24:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[19:27:01] *** Lord_of_Life_ is now known as Lord_of_Life
[19:27:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:27:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:29:06] *** Joins: glider (~glider@user/glider)
[19:29:44] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[19:30:06] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:37:05] *** Quits: blarnath (~d34dh0r53@98.97.83.45) (Ping timeout: 252 seconds)
[19:38:10] *** Joins: d34dh0r53 (~d34dh0r53@98.97.82.254)
[19:41:54] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.7.threembb.co.uk)
[19:44:56] *** Joins: blarnath (~d34dh0r53@98.97.80.107)
[19:45:25] *** Quits: d34dh0r53 (~d34dh0r53@98.97.82.254) (Ping timeout: 240 seconds)
[19:48:07] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.7.threembb.co.uk) (Ping timeout: 246 seconds)
[19:51:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[19:52:24] *** Joins: d34dh0r53 (~d34dh0r53@98.97.81.74)
[19:53:39] *** Quits: blarnath (~d34dh0r53@98.97.80.107) (Ping timeout: 260 seconds)
[19:55:03] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.5.threembb.co.uk)
[19:57:51] *** Quits: d34dh0r53 (~d34dh0r53@98.97.81.74) (Ping timeout: 260 seconds)
[19:59:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:01:40] <gevreeen> is timestamping+replay cache the only way to deal with replay attacks efficiently?
[20:02:33] <danieldg> you could also make things idempotent
[20:04:21] *** Joins: blarnath (~d34dh0r53@98.97.81.74)
[20:05:50] <gevreeen> do you mean idempotency as in http?
[20:06:43] <danieldg> yes
[20:06:59] <Alipha> gevreeen: if you use an incrementing nonce, you only have to keep track of the most-recent nonce you've seen and reject any messages with that nonce or older
[20:07:02] <gevreeen> well, then not everything can be made idempotent..
[20:07:24] <yawkat> if your endpoint isnt idempotent you probably shouldnt be using something vulnerable to replay attacks
[20:08:07] <danieldg> gevreeen: a replay cache *is* a mechanism for making something idempotent
[20:08:27] <yawkat> eg from cloudflare on 0RTT: "Specifically, only GET requests with no query parameters are answered over 0-RTT. According to the HTTP specification, GET requests are supposed to be idempotent, meaning that they don’t change the state on the server and shouldn’t be used for things like funds transfer."
[20:09:22] *** Joins: d34dh0r53 (~d34dh0r53@98.97.83.45)
[20:11:02] *** Quits: blarnath (~d34dh0r53@98.97.81.74) (Ping timeout: 272 seconds)
[20:11:23] <gevreeen> while I still don't understand how the presence of a replay cache makes things idempotent, but I get you.
[20:11:56] <yawkat> if you have a replay cache, the second request wont hit the backend, wont cause a change there, and thus be idempotent
[20:13:00] <yawkat> ofc "cache" implies that a flush wont be harmful, which it very well might be, so I would not use it in this case
[20:13:01] *** Joins: kashire (~kashire@c-76-31-172-90.hsd1.tx.comcast.net)
[20:13:01] *** Quits: kashire (~kashire@c-76-31-172-90.hsd1.tx.comcast.net) (Changing host)
[20:13:01] *** Joins: kashire (~kashire@user/kashire)
[20:13:02] *** Parts: kashire (~kashire@user/kashire) ()
[20:13:14] <TimMc> That sounds like a different kind of cache.
[20:13:17] <gevreeen> idempotency would have the first request and the second share the same effect/aftermath, no?
[20:13:29] <yawkat> (a replay cache can still be useful to improve DoS resistance, but still be flushable without harm)
[20:13:55] <gevreeen> while the second and a third replay would have the same effect---no effect
[20:13:57] <yawkat> gevreeen: no, it means the second request does nothing, not that it will do the same
[20:14:08] <yawkat> i++ is not idempotent
[20:14:18] <yawkat> i=5 is idempotent
[20:15:00] <MacGyver> yawkat: Technically your statements are in conflict.
[20:15:10] <MacGyver> i=5 is still an assignment and won't "do nothing".
[20:15:26] *** Joins: labrador (~labrador@user/labrador)
[20:15:38] <yawkat> it has no observable effects after it's run first
[20:15:40] <MacGyver> Idempotent means that regardless of whether you do it once or multiple times, the end state is the same.
[20:16:05] <MacGyver> Yeah, that.
[20:16:06] *** Joins: blarnath (~d34dh0r53@98.97.86.157)
[20:16:18] <int-e> . o O ( i = 5; i++; i = 5; )
[20:16:51] <yawkat> int-e: yes, idempotency does not mean there are no changes if there are intermediate ops
[20:17:07] <gevreeen> yeah, like I<infixop>I=I, but I hate how the term is borrowed straight from algebra leaving me to guess what <infixop> is
[20:17:22] *** Quits: d34dh0r53 (~d34dh0r53@98.97.83.45) (Ping timeout: 272 seconds)
[20:17:43] <gevreeen> and I have to relearn this term for every context
[20:18:18] <yawkat> i=5 is a PUT, while println(i) is a GET, and i++ is a POST. PUT and GET are idempotent (in theory)
[20:18:36] <int-e> gevreeen: idempotency usually comes in the shape of f(f(x)) = f(x). (you /can/ map that to an infix op, namely function composition)
[20:19:29] *** Joins: d34dh0r53 (~d34dh0r53@98.97.81.202)
[20:20:27] *** Joins: WishBoy (~WishBoy@user/wishboy)
[20:20:31] *** Quits: blarnath (~d34dh0r53@98.97.86.157) (Ping timeout: 256 seconds)
[20:20:47] <hg> yawkat, MacGyver: this is maybe getting too in-the-weeds to be helpful, but whether or not i=5 is idempotent is an implementation detail of the language in-question. In C, subsequent i=5 lines can be completely elided because it has no visible effect on the state of the abstract machine, but it's also acceptable for an implementation to actually execute the stores if it wants
[20:21:37] <MacGyver> hg: Which demonstrates that subsequent i=5 lines *are* idempotent.
[20:21:49] <MacGyver> It doesn't matter what the implementation chooses to do.
[20:21:57] <MacGyver> The end result is the same, and that's what C cares about.
[20:21:59] <gevreeen> the point is taken though, the state of i is left at 5 for i=5, while i++ would alter the value for every state of i.
[20:22:11] <hg> MacGyver: from the perspective of the abstract machine, sure
[20:23:25] <gevreeen> in this case. if a method f would produce f(x) == f(y) for any state of i, say x and y, then f is idempotent
[20:23:36] <hg> (e.g., in C++ that's actually not guaranteed at all because operator=())
[20:24:47] <gevreeen> being pedantic, if a method f, however, would produce f(x) != f(y) for some state of i, say x and y, then it would not be idempotent
[20:29:31] <gevreeen> (and that said, a GET request most likely would result in the increment of some usage counter)
[20:31:22] <danieldg> sure, but that may be actually desired
[20:31:25] <gevreeen> (like page hit or something. and if the resource includes this counter, this would violate idempotency)
[20:32:08] <danieldg> depends. If the page hit counter is used to determine how much bandwidth was used serving this page, the increment is accurate
[20:32:21] <danieldg> because the replayed request uses bandwidth
[20:36:21] <TimMc> Anyway, the original question was about replay attacks, not idempotency; idempotency is great but obviously doesn't apply to everything.
[20:36:25] <TimMc> « is timestamping+replay cache the only way to deal with replay »
[20:36:41] <TimMc> ...attacks
[20:37:41] <TimMc> I believe a normal TLS request is immune to replay attacks because there's a handshake, and the client doesn't get to control the server's initial response. I think there's entropy in there of some kind -- a session key, a nonce, something.
[20:39:07] <danieldg> TimMc: yes, the "server random" nonce is anti-replay there
[20:41:00] <danieldg> but you do need a single server endpoint to handle incoming connections, or shared state between all servers handling the IP/port
[20:41:18] <danieldg> (you need that anyway for reassembling TCP packets)
[20:43:50] <gevreeen> strictly increasing nonce does make it easier to track, instead of keeping a long list of nonces doled out
[20:44:09] <danieldg> that works if you don't get reordering in your messages
[20:45:42] <gevreeen> that would need a small to accomodoate reordering
[20:45:49] <gevreeen> *small window*
[20:46:39] <gevreeen> strictly increasing, and hardly predictable.
[20:46:57] *** Quits: varayu481 (~varayu@47.31.99.63) (Ping timeout: 250 seconds)
[20:47:01] <danieldg> so the window is basically a timestamp, but one the server adds and tracks :)
[20:48:30] <TimMc> I hadn't thought about the shared state.
[20:48:54] <TimMc> Wouldn't you usually use affinity-aware load balancing for that?
[20:49:14] *** Joins: andreasbuhr (~quassel@p549dbae6.dip0.t-ipconnect.de)
[20:49:14] *** Quits: andreasbuhr (~quassel@p549dbae6.dip0.t-ipconnect.de) (Client Quit)
[20:49:29] <danieldg> sure, but that just means that each 5-tuple is assigned a single server as the 'owner' to avoid needing shared state
[20:49:48] <TimMc> 5-tuple? What's the fifth... element?
[20:49:53] <danieldg> protocol
[20:50:18] <TimMc> ah
[20:50:20] <danieldg> (tcp vs udp can be directed differently)
[20:55:47] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:04:13] *** Joins: rg (~r-g@gaei.riseup.net)
[21:04:14] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.5.threembb.co.uk) (Ping timeout: 272 seconds)
[21:07:23] *** Joins: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de)
[21:07:23] *** Quits: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de) (Changing host)
[21:07:23] *** Joins: menace (~someone@user/menace)
[21:07:39] *** menace is now known as Deknos
[21:10:48] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[21:11:57] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[21:13:05] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[21:15:30] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.2.threembb.co.uk)
[21:15:53] <pagios> hi all, https://www.comparitech.com/blog/information-security/pgp-encryption-with-outlook/#Why_should_you_use_PGP_encryption_with_Outlook <-- following this i can encrypt my emails. What i need is SIGN my emails how can i do that? Outlook is only showing me the option to encrypt and not sign. i am using o365
[21:17:27] <cehteh> wo reading, my first guess would be: did you generate/specify a key for signing yet?
[21:18:15] <Alipha> also without reading, it's also likely that it'll both encrypt and sign
[21:18:36] <cehteh> that would surprise me
[21:19:10] <cehteh> there are few cases where you want to encrypt but not sign data
[21:19:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:19:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:22:09] *** Joins: dez (uid92154@user/dez)
[21:23:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[21:24:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:25:35] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[21:26:09] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:26:12] *** Joins: ivii (~ivan@user/ivii)
[21:29:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[21:35:11] <WishBoy> pagios I have doubts if PGP still has good security for encryptions
[21:37:23] *** Joins: Gallomimia (~Gallomimi@2001:56a:fa4b:ca00:6f7f:e2f4:49d3:96d7)
[21:38:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[21:38:55] *** Joins: Sofia (~sofia@user/sofia)
[21:39:41] *** Joins: Wulf (~Wulf@user/wulf)
[21:41:24] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:50:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:54:50] *** Joins: labrador (~labrador@user/labrador)
[21:56:28] *** Quits: rg (~r-g@gaei.riseup.net) (Ping timeout: 260 seconds)
[22:09:15] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[22:11:47] *** Joins: aleck1 (~aleck@user/aleck)
[22:13:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:04] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 246 seconds)
[22:22:27] *** Joins: Sofia (~sofia@user/sofia)
[22:22:38] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.2.threembb.co.uk) (Read error: Connection reset by peer)
[22:28:32] <hg> WishBoy: that would be a general statement that PGP isn't useful then, right? Or are there other cases you can think of that you would find PGP useful for?
[22:30:28] <Deknos> pgp is useful
[22:31:10] <Deknos> you "just" have to use the right version and use it "correctly". that's kinda difficult sometimes. but it's getting better
[22:35:20] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[22:40:15] *** Quits: halosghost (~halosghos@user/halosghost) (Ping timeout: 260 seconds)
[22:40:21] *** Joins: halo (~halosghos@user/halosghost)
[22:40:22] *** Quits: hg (~halosghos@user/halosghost) (Ping timeout: 260 seconds)
[22:43:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:44:01] <Deknos> when you encrypt your (multiple) data-rest-devices with luks: do you detach the header? and how do you know which header belongs to which device?
[22:44:54] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:45:07] <danieldg> the easy way is to not detach the header
[22:45:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:47:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:47:53] <Deknos> and IF i want to detach headers?
[22:48:40] <halo> one header-per-USB drive and sharpie the drive ☺
[22:48:47] <Deknos> urgs
[22:49:56] <Deknos> i think if i replace the header with a same-sized random data block and i can match the datablock and the header i could always overwrite the datablock when i need the header
[22:50:19] <danieldg> maybe GPT partition UUIDs
[22:50:34] <halo> mmm, that's an interesting idea
[22:50:39] <WishBoy> hg https://protonmail.com/blog/pgp-vulnerability-efail/
[22:50:49] <halo> a tiny dictionary of UUID→header would be pretty easy
[22:51:04] <halo> WishBoy: ty
[22:51:15] <WishBoy> halo https://thehackernews.com/2018/05/efail-pgp-email-encryption.html
[22:51:40] <WishBoy> halo PGP is still safe, but read the article
[22:51:45] * halo hasn't heard of TheHackerNews
[22:52:27] <WishBoy> halo the vul. found around 2017/2018, it wasn't directly to PGP, it looks like it was an application that used PGP
[22:53:20] <Deknos> yeah, efail is about incorrect use and some avoidable errors
[22:53:40] *** Joins: halosghost (~halosghos@user/halosghost)
[22:54:39] <WishBoy> Deknos nice
[22:54:48] <Deknos> avoidable *implementation* errors.
[22:54:52] <Deknos> to be correct.
[22:54:57] <WishBoy> perfect
[22:55:59] <danieldg> iirc that was an integration error, not even a normal implementation error
[22:56:42] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 260 seconds)
[22:59:40] <Deknos> well you could argue about that. at least sequoia tries updating the standard so authentication codes cannot be stripped without error.
[22:59:55] <Deknos> f*** mdc borkstuff
[23:00:33] <MacGyver> Painting efail as avoidable errors shifts blame towards the consumers of a terrible interface for no reason.
[23:01:02] <MacGyver> Or, as Matt Green put it, if your system interacts with dozens of third party clients, and all (or many) are using your stuff in the same, insecure way, then maybe the problem isn’t with your clients.
[23:01:54] <Deknos> MacGyver, no to the implementor and the designer. and the people who did not use mdc. :D
[23:02:25] <danieldg> yeah, the ability to have stuff inside and outside the secured area is now pretty well-known to be a bad idea
[23:02:43] <danieldg> just too hard to make a UI that shows this
[23:03:31] <Deknos> yeah, sadly no one put up with updating the standards and instead went shitting around on blogs or ycombinator (i am looking at you tptacek)
[23:04:02] <Deknos> not a UI thing from my POV. you can update the standards and the implementations.
[23:04:22] <Deknos> i mean, everybody did with TLS and no one said "let's abandon SSL!!!oneeleven"
[23:09:26] <MacGyver> That's a different baseline to start from and the incremental ways of updating TLS haven't exactly been entirely flawless either.
[23:09:54] <MacGyver> I also don't believe the PGP model is worth fixing in the long term and prefer tailored tools.
[23:10:22] <MacGyver> Sure, update the standards, but we can do better for most use cases.
[23:13:45] <Deknos> yeah, but that's like the opinion of a few people.. many people out there depend on it.
[23:14:14] <Deknos> also i doubt that we can cover all the edge cases with stuff like signal.
[23:15:17] <Deknos> i have no problem that updating standards and implementation takes time but this biased shitting on pgp really gets on my nerves, sry. and the incremental thing is the only working thing from a practical standpoint
[23:16:38] *** Joins: Church (~aleph@68.161.207.188)
[23:47:43] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:58:46] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
