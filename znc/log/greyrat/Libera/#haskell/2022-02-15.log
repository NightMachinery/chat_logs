[00:00:01] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec) (Remote host closed the connection)
[00:02:02] <slack1256> sclv: I was under the impression that yes, they do.
[00:02:51] <sclv> i don't know of any website that requires it be accessed with http/2 rather than http 1
[00:03:08] <sclv> i do know of some specialized protcols (grpc) that operate only over http2
[00:03:16] <sclv> but a standard client like wreq isn't useful for them anyway
[00:03:58] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:04:10] *** Quits: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[00:05:02] *** Joins: yauhsien (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net)
[00:05:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:09:29] *** Joins: alx741 (~alx741@157.100.197.240)
[00:10:08] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[00:12:46] *** Joins: yauhsien_ (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net)
[00:12:50] <slack1256> Mmmm
[00:13:07] <slack1256> Yeah I have to interface with apple server (APN) and they insist on http/2.
[00:15:08] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:15:21] *** Quits: yauhsien (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[00:16:35] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[00:17:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:18:06] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab) (Ping timeout: 252 seconds)
[00:18:16] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:18:58] *** Joins: acidjnk (~acidjnk@p200300d0c7057581091bb45d0bf1cd2b.dip0.t-ipconnect.de)
[00:19:44] *** Joins: nunggu_ (~q@user/nunggu)
[00:24:24] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[00:29:02] *** Quits: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius) (Ping timeout: 260 seconds)
[00:34:40] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[00:36:58] *** Joins: cynomys (~cynomys@user/cynomys)
[00:37:10] <ehammarstrom> Is it possible to encode typestates in Haskell?
[00:37:17] *** Joins: wrengr (~wrengr@99.34.197.35.bc.googleusercontent.com)
[00:37:27] *** Quits: foul_owl (~kerry@207.244.125.36) (Ping timeout: 250 seconds)
[00:37:33] <EvanR> sure
[00:37:46] <EvanR> GADTs for example
[00:38:28] *** Joins: pavonia (~user@user/siracusa)
[00:39:33] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[00:41:52] *** Joins: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius)
[00:43:08] <ehammarstrom> EvanR: I came up with something like this https://paste.tomsmeding.com/6pltsmxz What would it look like with a GADT?
[00:43:17] <ehammarstrom> I don't know if it's correct
[00:45:26] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[00:46:07] <EvanR> well this demonstrates the possibility of changing the type but it's pretty useless as is https://paste.tomsmeding.com/xcj0RrtN
[00:46:27] <EvanR> note that in turnOff you don't need a case for the Off case because it's impossible
[00:46:51] *** Joins: hololeap (~hololeap@user/hololeap)
[00:47:39] <EvanR> the GADT definition defines the possible moves, the resulting types tell you how the "type state" changes
[00:47:59] <EvanR> in this example you simple start in whatever state you want and do whatever you want
[00:49:34] <EvanR> line 27 there is the proper GADT
[00:50:33] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[00:50:56] * shapr hops randomly
[00:51:19] * tomsmeding eyes shapr
[00:52:44] <shapr> hi tomsmeding ! How's life?
[00:52:49] <shapr> writing any good code?
[00:52:59] <EvanR> your line 18 is wrong because your function returns a type (LightSwitch Off) instead of a value
[00:53:25] <tomsmeding> shapr: just today finished grading 69 reports
[00:53:26] <EvanR> oops, ignore that
[00:53:40] <tomsmeding> hopefully going to code again soon
[00:53:43] <shapr> tomsmeding: students are learning?
[00:53:50] *** Joins: foul_owl (~kerry@207.244.125.36)
[00:53:51] <tomsmeding> maybe?
[00:54:20] <tomsmeding> not too enthousiastic about the assignment anyway, but this was my first year so let's start complaining next year :p
[00:54:27] <Rembane> shapr: Did you have stochastic breakfast again?
[00:54:47] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[00:54:50] <shapr> yes, I did.
[00:56:12] <Rembane> Good stfuf
[00:56:14] <Rembane> *stuff
[00:57:35] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[00:57:35] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[00:57:38] *** allbery_b is now known as geekosaur
[00:58:11] <ehammarstrom> EvanR: Thanks for showing the difference in type. I guess there are more differences when you use them more extensively
[00:58:47] <EvanR> well, that's basically it. With GADTs the final type can be different for different constructors
[00:59:00] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 240 seconds)
[00:59:22] *** Quits: Unhammer (~Unhammer@user/unhammer) (Ping timeout: 260 seconds)
[01:00:40] <ehammarstrom> Right.
[01:01:06] *** Joins: Pickchea (~private@user/pickchea)
[01:01:12] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[01:06:59] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[01:09:48] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 252 seconds)
[01:10:02] *** Joins: telser (~AdminUser@user/telser)
[01:10:02] *** Quits: telser (~AdminUser@user/telser) (Remote host closed the connection)
[01:10:37] *** Quits: slack1256 (~slack1256@191.126.227.196) (Remote host closed the connection)
[01:12:39] *** Joins: Unhammer (~Unhammer@user/unhammer)
[01:16:15] *** Joins: telser (~AdminUser@user/telser)
[01:20:04] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[01:20:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[01:22:57] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:23:13] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[01:24:01] *** Joins: Gest74 (~Gest74@net-2-36-89-48.cust.vodafonedsl.it)
[01:27:00] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[01:27:43] *** Quits: michalz (~michalz@185.246.204.89) (Ping timeout: 250 seconds)
[01:27:44] *** Quits: jlamothe (~jlamothe@198.251.61.229) (Ping timeout: 250 seconds)
[01:28:25] *** Quits: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304) (Remote host closed the connection)
[01:30:12] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 240 seconds)
[01:31:40] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[01:31:54] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[01:32:34] <Gest74> Hi everybody, could someone please tell me why Actual is [[Expr]] instead of [Expr] in this code: https://paste.tomsmeding.com/pGE0ab3j ?
[01:32:41] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:33:03] *** Joins: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304)
[01:33:25] *** Quits: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304) (Remote host closed the connection)
[01:33:25] <monochrom> Replace [e:es] by (e:es).  The extra [] causes the extra [].
[01:34:21] *** Joins: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304)
[01:35:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:35:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:35:05] *** Joins: wroathe (~wroathe@user/wroathe)
[01:35:16] <Gest74> @monochrom, thank you!
[01:35:16] <lambdabot> Unknown command, try @list
[01:35:20] *** Quits: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304) (Remote host closed the connection)
[01:37:21] *** Joins: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304)
[01:37:50] *** Quits: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304) (Remote host closed the connection)
[01:39:41] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[01:39:50] *** Joins: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304)
[01:40:42] <EvanR> [[[[e:es]]]] is not [e:es], but ((((e:es)))) is (e:es). Haskell is tricky like that
[01:41:26] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:42:17] <geekosaur> I'd put it that there are two ways to describe lists in Haskell: traditional [a,b,c] and cons (a:b:c:[])
[01:42:54] <geekosaur> they're the same thing, but can't be mixed, so [x:xs] is a single-item list in traditional format containing a list in cons format
[01:44:43] <dolio> Well, they can be mixed, but `[x:xs]` isn't just grouping.
[01:46:07] *** Joins: teo (~teo@user/teo)
[01:46:43] <sshine> [x:xs] was among the most common error I saw as a teaching assistant on FP courses (SML, Haskell).
[01:46:56] <sshine> the compiler could really have a specific warning for just that.
[01:47:08] <dolio> In some ways `a:b:c:[]` is mixing them already, but only because there isn't some other name for the empty list.
[01:47:25] *** Quits: Gest74 (~Gest74@net-2-36-89-48.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[01:48:55] *** Quits: jinsun (~jinsun@user/jinsun) ()
[01:49:16] *** Joins: jinsun (~jinsun@user/jinsun)
[01:50:29] *** Quits: jinsun (~jinsun@user/jinsun) (Client Quit)
[01:50:46] *** Joins: jinsun (~jinsun@user/jinsun)
[01:53:24] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 240 seconds)
[01:53:29] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:53:41] *** Joins: jlamothe (~jlamothe@198.251.61.229)
[01:53:54] *** Quits: teo (~teo@user/teo) (Quit: Client closed)
[01:54:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:55:39] *** Joins: teo (~teo@user/teo)
[01:55:59] *** Quits: teo (~teo@user/teo) (Client Quit)
[01:57:02] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[01:57:20] *** Joins: Pickchea (~private@user/pickchea)
[01:59:57] *** bah_ is now known as bah
[02:00:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[02:00:37] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:02:08] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[02:03:49] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[02:05:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:05:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:05:57] *** Joins: wroathe (~wroathe@user/wroathe)
[02:09:43] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[02:10:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[02:10:31] *** Quits: telser (~AdminUser@user/telser) (Remote host closed the connection)
[02:11:04] *** Quits: hueso (~root@user/hueso) (Read error: Connection reset by peer)
[02:11:46] *** Joins: telser (~AdminUser@user/telser)
[02:15:33] *** Joins: hueso (~root@user/hueso)
[02:15:55] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[02:16:18] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:23:01] *** Joins: awschnap (~lavaman@98.38.249.169)
[02:23:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Read error: Connection reset by peer)
[02:23:22] *** Quits: max22- (~maxime@2a01cb08833598000a23eab5ca82bfe2.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:24:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:24:59] * byorgey sees the [x:xs] error a lot.
[02:25:38] <byorgey> I have come to the conclusion that [a] is poor notation for the type of a list.  It is just very confusing to students that [a] is the type of a list of any number of elements, but as a value [a] is a list of exactly one element.
[02:26:12] <byorgey> I would prefer  List a, even though it's slightly more verbose.
[02:26:35] <geekosaur> I've been thinking that somewhat as well. Also the fact that you see for example `t a` in a type, but [a] matches it. So sometimes I use `[] a`
[02:26:40] <geekosaur> to make it clearer
[02:27:01] <Rembane> Is `[] a` valid Haskell?
[02:27:08] <geekosaur> yep
[02:27:09] <byorgey> :type [1,2,3] : [] Int
[02:27:20] <byorgey> aw, no lambdabot? =(
[02:27:29] <EvanR> @botsnack
[02:27:29] <lambdabot> :)
[02:27:31] <geekosaur> :t [1,2,3] :: [] Int
[02:27:31] <lambdabot> [Int]
[02:27:38] <Rembane> That it is valid Haskell makes me happy. I first thought it was merely pedagogical.
[02:27:39] <byorgey> oh, :t not :type, ok.
[02:27:40] <geekosaur> it just doesn't accept :type fully spelled out
[02:27:52] <geekosaur> same with :k vs. :kind
[02:28:30] <byorgey> geekosaur: right, that too.  It's magic special syntax and it's unclear how it corresponds to other type constructors.
[02:28:51] <byorgey> pair types have the same issue in terms of being magic and special, but at least there the syntax for types and values matches exactly.
[02:28:51] *** Quits: awschnap (~lavaman@98.38.249.169) (Read error: Connection reset by peer)
[02:29:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:29:58] <Rembane> For some reason list has a tendency to be the odd one out in many cases. Wanna explain monads? Okay, we start with Maybe everything is fine and then the natural next example is absolutely not list because that will make your brain boil. 
[02:30:28] <EvanR> funny because Maybe is a submonad of List xD
[02:30:49] <Rembane> Oh. Oh no. How?! 
[02:31:05] <geekosaur> Maybe is a 1-element list
[02:31:08] <byorgey> Maybe is lists of length at most 1.
[02:31:15] <EvanR> correct me if I'm wrong but, the behavior matches the behavior for list of at most length 1
[02:31:27] <Rembane> And we have a hat trick! 
[02:31:28] <byorgey> that sounds right.
[02:31:31] <geekosaur> yeh, 1 element max, sorry
[02:31:56] <geekosaur> that said,m the difference is that a 1-element-max list isn't recursive
[02:31:59] <Rembane> So a list of length zero is Nothing, and a list of length one is Just something? 
[02:32:13] <geekosaur> and I suspect it's the recursion that makes the list monad brain-boily
[02:32:13] <EvanR> yeah
[02:32:22] <hpc> isn't the issue with [] just that it's not commutative?
[02:33:14] <hpc> the list monad is pretty easy to understand, start with list comprehensions and then go "okay, now write it with do"
[02:33:36] <dibblego> teach monads by getting the class to inadvertently invent the primary purpose
[02:34:26] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 272 seconds)
[02:34:44] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[02:36:14] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[02:39:11] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[02:40:36] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[02:41:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[02:41:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Read error: Connection reset by peer)
[02:41:59] *** Joins: awschnap (~lavaman@98.38.249.169)
[02:44:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[02:46:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[02:49:24] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[02:51:27] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[02:51:56] <jackdk> byorgey: how'd you go with all that disco stuff? did you get it going?
[02:53:36] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[02:53:50] <EvanR> "what is the primary purpose of monads" sounds like something an awkward godlike alien entity would demand captain kirk to answer satisfactorily before they can break free from its force field
[02:54:42] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 272 seconds)
[02:55:19] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:56:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:56:20] <int-e> is the purpose to abstract from almost nothing and confuse generations of programmers...
[02:56:24] <jackdk> "merging spacesuits together", if we're keeping with the scifi theme
[02:56:48] <Rembane> Pew pew pew! 
[02:56:57] <Rembane> Cue Star Wars Theme! 
[02:57:06] <EvanR> Monadchloriens
[02:57:36] <Rembane> Definitely the List Monadchloreans
[02:57:44] <byorgey> jackdk: I got it building on replit.com via nix, but it ended up being a no-go because it takes like 15-30 minutes to build and sometimes decides to randomly rebuild the entire environment while you're in the middle of doing something.
[02:58:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:58:10] <byorgey> jackdk: for now I just wrote up very detailed instructions on how the students can install it via 'cabal install', which worked OK in 95% of cases
[02:58:44] <geekosaur> 95% sounds 5% unfortunate
[02:58:59] <monochrom> When I was learning monads, I felt it was abstracting from almost everything. :)
[02:59:07] <byorgey> geekosaur: yes, for the 5% I set up accounts on my VPS so they can log in and use it via SSH.
[02:59:31] <byorgey> jackdk: in the long term, I hope I can get a stable version of disco onto Hackage and from there into nixpkgs, and then it will load on replit.com in a snap
[03:00:12] <geekosaur> assuming stackage ever gets itself unstuck
[03:00:14] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Read error: Connection reset by peer)
[03:00:23] <geekosaur> be nice if they'd done an LTS *before* tackling aeson 2
[03:00:32] <jackdk> byorgey: glad you got something for your students. I've had to do less doJailbreak etc shenanigans over time, so I think the hackage ecosystem is converging towards stability
[03:01:03] <jackson99> stackage is stuck?
[03:01:14] <byorgey> jackdk: that's good to hear.
[03:01:26] <geekosaur> LTS is still 8.10.7
[03:01:40] <byorgey> there is one benefit to having them install via cabal, which is that I can tell them to 'cabal update && cabal install disco' every time I add new features or fix a bug =)
[03:01:46] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[03:01:48] <geekosaur> nightlies advanced from 9.0.1 to 9.0.2, but now they've taken on aeson 2 and broke a bunch of stuff
[03:02:17] <jackson99> I think (hope) they are just waiting 9.2 to be fixed
[03:02:20] <geekosaur> which is not so much a problem with stackage as such, as a failure of management or foresight
[03:02:23] <jackdk> I would stop using stack, personally - freeze files + git give you much finer control, and cabal has improved a lot
[03:02:33] <geekosaur> but a nbunch of other packagers depend on stackage LTSes
[03:02:42] <geekosaur> including nixpkgs
[03:05:40] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[03:06:06] <jackdk> Yeah, that's a challenge, and those snapshots are useful if you want to provide "one version of each thing". That's often too limiting, though. As we've seen with the stop-the-world update to aeson>2. IMHO stackage would do well to just focus on snapshots, but I get that's gonna be a contentious suggestion
[03:08:00] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[03:10:41] *** Quits: telser (~AdminUser@user/telser) (Quit: No Ping reply in 180 seconds.)
[03:11:56] *** Joins: telser (~AdminUser@user/telser)
[03:13:03] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[03:13:53] *** Quits: acidjnk (~acidjnk@p200300d0c7057581091bb45d0bf1cd2b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:13:54] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[03:15:57] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[03:16:09] *** Joins: afidegnum (~afidegnum@102.176.94.184)
[03:16:33] <afidegnum> hi, what pefect IDE would you recommend ?
[03:18:12] <monochrom> I disbelieve in perfection. I recommend complacency.
[03:18:22] *** Joins: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com)
[03:18:30] <monochrom> emacs haskell-mode is more than good enough for me.
[03:18:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[03:19:03] <afidegnum> ok
[03:19:09] <monochrom> Especially given the trivial amount of installation time and disk space it takes.
[03:19:50] <monochrom> Something better than it by 10% exists, but it costs 10 times more.
[03:20:21] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[03:21:48] *** Quits: ix (~ix@2a02:8010:674f:0:a71f:d8ff:17eb:65ba) (Ping timeout: 252 seconds)
[03:23:39] <monochrom> byorgey: In disco's case expressions, have you considered changing "when <e> is <pat>" to "if <e> is <pat>" so there is one fewer reserved word to learn? Or would it be too hard for the parser?
[03:24:11] <Axman6> VS Code is the most popular choice these days, according to the last haskell language survey afidegnum, haskell-language-server works very well with it now too, and doesn't have much of a learning curve
[03:24:27] <geekosaur> afidegnum, many people like vscode with the haskell extension. it comes with HLS support out of the box
[03:24:43] <geekosaur> it's not my cup of tea, but see /nick :)
[03:24:54] <jackdk> I like emacs, but that's because I've spent more than 50% of my life adapting it to me and me to it. This is probably a worthwhile investment if you plan to spend a lot of time coding
[03:25:04] <hpc> the best development environment is what you can work quickly with, whether it's an IDE or just a "DE"
[03:25:25] <hpc> a split terminal with vim on one side and ghci on the other has always been enough for me
[03:25:27] <afidegnum> ok, thanks, i'm using haskell on WSL 
[03:25:36] <afidegnum> so I think Vscode would work
[03:25:47] <Axman6> you'll probably find life easuier with VS Code in that case
[03:25:59] <hpc> yeah, on windows vscode is probably best
[03:26:08] <afidegnum> cool
[03:26:08] <Axman6> hmm, so apparently I'm not authorised to deop myself :thinkingface:
[03:26:19] *** ChanServ sets mode: +o geekosaur
[03:26:26] *** geekosaur sets mode: -o Axman6
[03:26:29] *** geekosaur sets mode: -o geekosaur
[03:26:42] <Axman6> <3 ... though I find that pretty funny
[03:26:43] <hpc> now what if geekosaur couldn't deop :D
[03:26:59] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[03:27:01] <EvanR> emacs cyborg symbiont 
[03:27:03] <Axman6> Simple, I'd reop myself and deop them!
[03:27:09] <afidegnum> there is a metaprogramming projects i'm working on in python but I guess using haskell would be easier even though i'm a  novice 
[03:27:13] <hpc> oh, problem solved then
[03:28:12] *** Joins: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net)
[03:29:38] *** Joins: Guest89 (~Guest89@114.23.127.15)
[03:29:58] <EvanR> afidegnum, that's how I got into haskell, doing some project at work in complete noob fashion
[03:30:16] <EvanR> burned myself on laziness a couple times and was better for it
[03:30:21] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 250 seconds)
[03:30:34] <afidegnum> let me give it a try, wish me luck :)
[03:30:43] *** Quits: Guest89 (~Guest89@114.23.127.15) (Client Quit)
[03:30:52] <Axman6> afidegnum: what's the project, if you can say?
[03:31:40] <afidegnum> I'm trying to dynamically generate MVC patterns from specific database models
[03:32:22] <afidegnum> this will reduce development time
[03:32:39] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:32:51] <afidegnum> I made an attempt in elisp which somehow workds but I need to interact with teh GUI too
[03:33:15] <geekosaur> "somehow works" kinda summarizes elisp :þ
[03:33:47] *** Joins: ix (~ix@2a02:8010:674f:0:cda6:d05:f0d7:4922)
[03:35:03] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[03:35:22] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: leaving)
[03:35:46] <afidegnum> :)
[03:36:26] *** Joins: k8yun (~k8yun@user/k8yun)
[03:37:38] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:39:02] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 272 seconds)
[03:40:04] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[03:40:07] <byorgey> monochrom: that's a good suggestion, thanks.  I doubt it would be that hard for the parser.  Though I feel like I considered that before and rejected the idea, but I can't remember why now.
[03:40:43] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[03:43:30] <liskin> Axman6: have you tried deoping via chanserv instead of a slash command by any chance? 
[03:43:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:44:05] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:44:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[03:44:17] *** Joins: hololeap (~hololeap@user/hololeap)
[03:44:31] <jackdk> geekosaur: emacs is the only known successful implementation of the "big ball of mud" design pattern
[03:44:35] <geekosaur> Axman6 got opped by shapr, iirc
[03:44:46] <geekosaur> jackdk, isn't it though :)
[03:44:53] <jackdk> it's so good
[03:45:00] <Axman6> liskin: yeah, that's all I tried
[03:45:09] <geekosaur> although sometimes I wonder about vim þ
[03:45:40] <Axman6> wasn't GCC also a big ball of mud, until Clang came along and showed that a modular compiler actually made people want to work on it?
[03:45:48] <liskin> Axman6: that explains it then :-)
[03:46:10] <geekosaur> Axman6, if you have ops then "/mode #channel -o yournick" should work to remove them. good luck getting them back though
[03:46:21] <geekosaur> unless shapr's feeling magnanimous again :)
[03:47:02] * shapr grins
[03:47:29] <Axman6> "error: chano-privs-needed #haskell You're not a channel operator"
[03:47:33] * Axman6 feels messed with
[03:48:41] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:56:34] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[03:59:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:59:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:59:33] *** Joins: wroathe (~wroathe@user/wroathe)
[04:00:32] *** Quits: mmhat (~mmh@55d4de53.access.ecotel.net) (Quit: WeeChat 3.4)
[04:01:26] <afidegnum> can you please give a hand? using debian, what's the recommended package manager? i'm trying to install haskell language server
[04:01:40] <afidegnum> debian 10
[04:02:05] <Axman6> IMO I would stay away from OS package managers and just use ghcup to install GHC and HLS
[04:02:08] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Read error: Connection reset by peer)
[04:02:24] <Axman6> but you're working on systems I have no experience with so no idea if that's good advice
[04:02:43] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[04:03:44] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 250 seconds)
[04:04:31] <geekosaur> ghcup is recommended everywhere these days
[04:04:44] <geekosaur> package managers tend to be slow, especially debian related ones
[04:04:53] <jkaye[m]> I'd install hls from source using stack or cabal though 
[04:04:54] <afidegnum> ok
[04:05:02] <hpc> iirc you can apt install ghcup too
[04:05:28] <hpc> (although even then you might want to just use latest)
[04:08:40] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:09:00] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:10:51] *** Quits: telser (~AdminUser@user/telser) (Quit: No Ping reply in 180 seconds.)
[04:11:51] *** Quits: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 252 seconds)
[04:12:06] *** Joins: telser (~AdminUser@user/telser)
[04:12:36] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[04:12:51] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[04:13:37] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:17:40] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 272 seconds)
[04:22:52] *** Quits: afidegnum (~afidegnum@102.176.94.184) (Quit: leaving)
[04:25:00] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 240 seconds)
[04:25:01] *** Quits: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com) (Remote host closed the connection)
[04:25:27] *** Joins: lagash (lagash@lagash.shelltalk.net)
[04:25:39] *** Joins: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com)
[04:26:02] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[04:26:15] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[04:29:20] *** Quits: awschnap (~lavaman@98.38.249.169) (Remote host closed the connection)
[04:30:00] *** Quits: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com) (Ping timeout: 252 seconds)
[04:31:52] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:35:15] *** Joins: cjb (~cjb@user/cjb)
[04:37:02] *** Joins: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com)
[04:39:09] *** Joins: afidegnum (~afidegnum@102.176.94.184)
[04:39:35] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[04:40:28] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:40:38] *** Joins: nunggu_ (~q@user/nunggu)
[04:41:44] *** Quits: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com) (Ping timeout: 272 seconds)
[04:42:06] *** Quits: afidegnum (~afidegnum@102.176.94.184) (Client Quit)
[04:45:22] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:45:34] *** Joins: emergence (emergence@2607:5300:60:5910:dcad:beff:feef:5bc)
[04:46:35] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:50:48] <justsomeguy> What is list fusion?
[04:51:52] <justsomeguy> Nevermind, I finally found a good search result: https://wiki.haskell.org/Short_cut_fusion
[04:52:26] *** Joins: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com)
[04:52:34] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-d449-2685-1032-d72e.res6.spectrum.com) (Remote host closed the connection)
[04:52:36] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[04:53:48] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:54:38] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[04:55:08] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:56:02] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:58:04] *** Joins: YukiSou (~YukiSou@116.6.232.251)
[05:01:44] *** Joins: cynomys (~cynomys@user/cynomys)
[05:10:31] *** Quits: telser (~AdminUser@user/telser) (Quit: No Ping reply in 180 seconds.)
[05:11:45] *** Joins: telser (~AdminUser@user/telser)
[05:13:13] *** Joins: femboid (~femboid@31.6.9.246)
[05:18:23] *** Parts: texasmynsted (~texasmyns@99.96.221.112) (WeeChat 3.4)
[05:21:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[05:23:54] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[05:25:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[05:25:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[05:25:15] *** finn_elija is now known as FinnElija
[05:25:20] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[05:25:42] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:b555:2e8f:fe4f:2e3d)
[05:29:46] *** Quits: femboid (~femboid@31.6.9.246) (Quit: Ping timeout (120 seconds))
[05:29:48] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:30:23] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:36:33] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[05:38:56] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:40:23] *** Joins: vysn (~vysn@user/vysn)
[05:41:01] *** Joins: afidegnum (~afidegnum@102.176.94.184)
[05:41:20] <afidegnum> how do i configure the haskell interpreter on https://pasteboard.co/62B9DqobWJNe.png ?
[05:43:29] *** Joins: femboid (~femboid@31.6.9.246)
[05:44:16] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[05:47:57] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[05:51:06] *** Quits: femboid (~femboid@31.6.9.246) (Quit: Ping timeout (120 seconds))
[05:51:13] *** Quits: afidegnum (~afidegnum@102.176.94.184) (Quit: leaving)
[05:52:36] *** Quits: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com) (Ping timeout: 240 seconds)
[05:55:37] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[06:05:58] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[06:06:05] *** Joins: femboid (~femboid@31.6.9.246)
[06:08:27] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[06:10:41] *** Quits: telser (~AdminUser@user/telser) (Quit: No Ping reply in 180 seconds.)
[06:11:01] *** Joins: cyphase (~cyphase@user/cyphase)
[06:11:56] *** Joins: telser (~AdminUser@user/telser)
[06:11:58] *** Joins: Erutuon (~Erutuon@user/erutuon)
[06:12:03] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[06:14:12] *** Quits: jlamothe (~jlamothe@198.251.61.229) (Ping timeout: 240 seconds)
[06:16:17] *** Joins: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com)
[06:18:52] *** Quits: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com) (Remote host closed the connection)
[06:19:05] *** Joins: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com)
[06:20:34] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:23:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:24:24] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:24:24] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:24:24] *** finn_elija is now known as FinnElija
[06:26:03] *** Quits: xff0x (~xff0x@2001:1a81:52c4:8c00:a51c:6f1b:e868:ffc) (Ping timeout: 252 seconds)
[06:26:12] *** Quits: ix (~ix@2a02:8010:674f:0:cda6:d05:f0d7:4922) (Ping timeout: 240 seconds)
[06:26:43] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[06:27:13] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[06:27:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:28:07] *** Joins: xff0x (~xff0x@2001:1a81:53dd:d400:55aa:6c11:c98:ce99)
[06:31:03] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Read error: Connection reset by peer)
[06:31:24] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 240 seconds)
[06:33:02] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[06:33:03] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[06:33:26] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Quit: Leaving)
[06:37:21] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[06:41:27] *** Joins: mbuf (~Shakthi@117.96.195.201)
[06:49:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:54:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:56:37] *** Joins: k8yun (~k8yun@user/k8yun)
[06:58:18] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:58:18] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:58:18] *** Joins: wroathe (~wroathe@user/wroathe)
[06:58:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[06:59:55] *** Quits: td_ (~td@muedsl-82-207-238-184.citykom.de) (Ping timeout: 256 seconds)
[07:01:50] *** Joins: td_ (~td@94.134.91.25)
[07:02:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[07:03:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[07:03:22] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[07:03:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:03:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:03:32] *** Joins: wroathe (~wroathe@user/wroathe)
[07:03:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:03:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[07:06:02] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:10:05] *** Quits: femboid (~femboid@31.6.9.246) (Quit: Ping timeout (120 seconds))
[07:10:30] *** Joins: femboid (~femboid@31.6.9.246)
[07:10:51] *** Quits: telser (~AdminUser@user/telser) (Quit: No Ping reply in 180 seconds.)
[07:12:06] *** Joins: telser (~AdminUser@user/telser)
[07:16:46] *** Joins: zebrag (~chris@user/zebrag)
[07:17:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[07:19:24] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:21:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[07:25:24] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[07:25:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:26:55] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[07:30:25] *** Joins: nunggu_ (~q@user/nunggu)
[07:32:12] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:32:41] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:34:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:35:08] *** Joins: zebrag (~chris@user/zebrag)
[07:38:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[07:43:53] *** [_] is now known as [itchyjunk]
[07:44:59] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 256 seconds)
[07:46:45] *** Quits: Topsi1 (~Tobias@dyndsl-091-249-082-220.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[07:49:20] *** Quits: femboid (~femboid@31.6.9.246) (Quit: Ping timeout (120 seconds))
[07:51:27] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:51:28] *** Joins: gaff (~gaff@49.207.221.11)
[07:56:10] *** Quits: gaff (~gaff@49.207.221.11) (Ping timeout: 272 seconds)
[07:57:24] *** Quits: xff0x (~xff0x@2001:1a81:53dd:d400:55aa:6c11:c98:ce99) (Ping timeout: 240 seconds)
[07:57:35] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:57:43] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:58:18] *** Joins: xff0x (~xff0x@2001:1a81:53dd:d400:4619:fbb5:b364:48b6)
[08:02:36] *** Quits: yauhsien_ (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[08:03:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[08:10:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[08:11:01] *** Quits: telser (~AdminUser@user/telser) (Quit: No Ping reply in 180 seconds.)
[08:12:16] *** Joins: telser (~AdminUser@user/telser)
[08:14:04] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[08:14:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[08:15:04] *** Quits: YukiSou (~YukiSou@116.6.232.251) (Quit: Client closed)
[08:15:57] *** Joins: femboid (~femboid@31.6.9.246)
[08:18:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:19:01] *** Quits: telser (~AdminUser@user/telser) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:22:37] *** Joins: cynomys (~cynomys@user/cynomys)
[08:25:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:27:36] *** Quits: hueso (~root@user/hueso) (Ping timeout: 252 seconds)
[08:28:39] *** Joins: coot (~coot@213.134.190.95)
[08:30:22] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[08:30:34] *** Quits: roboguy_ (~roboguy_@cpe-98-156-4-161.kc.res.rr.com) (Quit: Leaving...)
[08:37:41] *** Quits: femboid (~femboid@31.6.9.246) (Ping timeout: 256 seconds)
[08:38:24] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[08:38:47] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:4084:84c5:95c2:a194) (Remote host closed the connection)
[08:40:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:41:58] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:43:00] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[08:43:37] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 256 seconds)
[08:43:54] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[08:43:59] *** Joins: lagash (lagash@lagash.shelltalk.net)
[08:44:13] *** Joins: k8yun (~k8yun@user/k8yun)
[08:46:28] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[08:46:38] *** Joins: rusrushal13 (~rusrushal@103.85.18.34)
[08:46:46] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[08:48:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[08:56:38] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:59:38] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[09:01:01] *** Joins: swistak (~swistak@185.21.216.141)
[09:05:18] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[09:07:08] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[09:11:55] *** Joins: gaff (~gaff@49.207.218.11)
[09:12:26] *** Quits: myme (~myme@2a01:799:d5a:cd00:4746:bc4e:ee58:44d9) (Ping timeout: 245 seconds)
[09:13:26] *** Joins: myme (~myme@2a01:799:d5a:cd00:9ae3:d451:a989:e1e9)
[09:16:12] *** Quits: gaff (~gaff@49.207.218.11) (Ping timeout: 240 seconds)
[09:18:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[09:20:49] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[09:21:27] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::99e7)
[09:21:33] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[09:22:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[09:23:08] *** Joins: deadmarshal (~deadmarsh@95.38.117.142)
[09:27:27] *** Joins: gaff (~gaff@49.207.218.11)
[09:30:14] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:31:41] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[09:31:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[09:41:13] *** Joins: mikail_ (~mikail@94.3.253.161)
[09:41:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[09:44:03] *** Quits: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304) (Ping timeout: 252 seconds)
[09:46:24] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:59:09] *** Joins: yauhsien (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net)
[09:59:46] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[10:04:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[10:05:06] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[10:05:38] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[10:08:13] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[10:10:24] *** Joins: whound (~dust@2409:4071:4d8d:7b21:2586:8c37:2856:667a)
[10:10:26] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 272 seconds)
[10:11:13] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[10:11:16] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[10:12:39] *** Joins: hololeap (~hololeap@user/hololeap)
[10:14:41] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[10:15:29] *** Joins: off^ (~off@50.235.176.163)
[10:18:55] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[10:20:21] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 252 seconds)
[10:21:26] *** Joins: nunggu_ (~q@user/nunggu)
[10:23:13] *** Joins: Erutuon (~Erutuon@user/erutuon)
[10:29:47] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[10:31:20] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[10:31:59] <capo_greco> Hello!  I have a beginner question
[10:32:23] <capo_greco> according to Hoogle, shear is part of the Data.List.HT package
[10:32:53] <capo_greco> I am already using some functions from Data.List
[10:33:25] <capo_greco> `import Data.List.HT (shear)` doesn't seem to work
[10:33:58] <capo_greco> I feel like I am missing something rudimentary
[10:35:37] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[10:35:48] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[10:40:36] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Ping timeout: 240 seconds)
[10:42:53] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[10:45:52] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[10:45:52] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[10:46:19] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[10:46:43] *** Joins: michalz (~michalz@185.246.204.93)
[10:46:58] <jackdk> capo_greco: the Data.List.HT module is provided by the `utility-ht` package
[10:47:01] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[10:47:35] <jackdk> capo_greco: (this is what the `utility-ht` written in unlabelled tiny green text on the hoogle results means)
[10:47:48] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[10:47:52] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[10:48:08] <jackdk> capo_greco: how have you set up your haskell project? you will need to add `utility-ht` to `build-depends:` in your cabal file or `package.yaml`
[10:50:25] *** Joins: Erutuon (~Erutuon@user/erutuon)
[10:53:14] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[10:55:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[10:55:49] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[10:57:12] *** Quits: deadmarshal (~deadmarsh@95.38.117.142) (Ping timeout: 252 seconds)
[10:58:31] <capo_greco> using stack for this project
[10:58:36] *** Quits: whound (~dust@2409:4071:4d8d:7b21:2586:8c37:2856:667a) (Ping timeout: 240 seconds)
[11:01:20] *** Joins: raym (~raym@user/raym)
[11:01:21] <capo_greco> dependencies:
[11:01:21] <capo_greco> - base >= 4.7 && < 5
[11:01:21] <capo_greco> - utility-ht
[11:01:43] <capo_greco> under `dependencies`, as per ^ ?
[11:04:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[11:05:25] <jackdk> if that's what hpack calls it, then I think so?
[11:05:31] <jackdk> (I don't use stack, sorry)
[11:06:49] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[11:07:22] *** Joins: fendor (~fendor@91.141.60.250.wireless.dyn.drei.com)
[11:09:06] *** Joins: whound (~dust@2409:4071:4d8d:7b21:2586:8c37:2856:667a)
[11:09:12] *** Quits: mbuf (~Shakthi@117.96.195.201) (Quit: Leaving)
[11:09:15] *** Joins: adam1 (~adam@2001-b011-4007-283f-8c1c-5c42-5289-7882.dynamic-ip6.hinet.net)
[11:11:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[11:11:56] <capo_greco> yup! dependencies worked.  many thanks! @jackdk
[11:12:29] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[11:14:24] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:14:51] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:20:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[11:21:15] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:23:07] *** Joins: coot (~coot@213.134.190.95)
[11:24:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[11:27:28] *** Joins: alp (~alp@user/alp)
[11:29:48] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[11:30:29] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:30:48] *** Joins: cfricke (~cfricke@user/cfricke)
[11:32:47] *** Joins: jakalx (~jakalx@base.jakalx.net)
[11:33:37] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:a86e:f918:f8cf:38c0)
[11:38:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[11:39:36] *** Joins: chele (~chele@user/chele)
[11:41:49] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:42:33] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:46:51] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[11:47:51] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec)
[11:52:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:54:12] *** Joins: acidjnk (~acidjnk@p200300d0c7057500a04355ceabfe8d47.dip0.t-ipconnect.de)
[11:57:53] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[12:01:23] *** Joins: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[12:02:26] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[12:03:20] *** Joins: deadmarshal (~deadmarsh@95.38.117.142)
[12:04:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[12:07:01] *** Quits: dextaa_ (~dextaa@cpc142174-lewi20-2-0-cust34.2-4.cable.virginm.net) (Quit: leaving)
[12:07:04] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:07:24] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 240 seconds)
[12:07:24] *** Quits: whound (~dust@2409:4071:4d8d:7b21:2586:8c37:2856:667a) (Ping timeout: 240 seconds)
[12:08:18] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec) (Remote host closed the connection)
[12:09:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:09:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:09:57] *** Joins: wroathe (~wroathe@user/wroathe)
[12:09:57] *** Quits: acarrico (~acarrico@dhcp-68-142-39-249.greenmountainaccess.net) (Ping timeout: 240 seconds)
[12:10:59] *** Joins: drdo (~drdo@roach0.drdo.eu)
[12:11:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:11:56] *** Joins: acarrico (~acarrico@dhcp-68-142-39-249.greenmountainaccess.net)
[12:12:04] *** Joins: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net)
[12:14:23] *** Quits: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net) (Remote host closed the connection)
[12:14:35] *** Joins: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net)
[12:14:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[12:16:57] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[12:17:41] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[12:18:05] *** Joins: __monty__ (~toonn@user/toonn)
[12:18:38] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:18:57] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:24:36] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[12:26:08] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[12:27:38] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[12:28:55] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[12:30:13] *** Quits: Morrow[m] (~morrowmma@2001:470:69fc:105::1d0) (Quit: You have been kicked for being idle)
[12:30:22] *** Joins: max22- (~maxime@2a01cb08833598008f1709df66707174.ipv6.abo.wanadoo.fr)
[12:30:42] *** Quits: mikail_ (~mikail@94.3.253.161) (Ping timeout: 252 seconds)
[12:30:49] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:31:08] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[12:32:01] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[12:35:24] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[12:36:31] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[12:36:39] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[12:37:18] *** Quits: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net) (Ping timeout: 252 seconds)
[12:37:50] *** Joins: Pickchea (~private@user/pickchea)
[12:39:01] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[12:43:26] *** Quits: adam1 (~adam@2001-b011-4007-283f-8c1c-5c42-5289-7882.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[12:43:37] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[12:46:06] <phma> I've defined a function "add7 a b c" which is a full adder of the digits 0 to 6. I just wrote a unit test. How do I write a Tasty.QuickCheck test that (add7 a b c) == (add7 b c a), with a,b,c less than 7?
[12:47:43] *** Joins: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304)
[12:48:30] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[12:48:30] *** Quits: raoul (~raoul@95.179.203.88) (Quit: Ping timeout (120 seconds))
[12:48:30] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[12:48:38] *** Joins: raoul8 (~raoul@95.179.203.88)
[12:48:49] *** Joins: m5zs7k_ (aquares@web10.mydevil.net)
[12:48:56] *** Joins: SoF (~skius@user/skius)
[12:49:49] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Quit: ubert)
[12:52:42] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[12:53:05] *** Joins: chele (~chele@user/chele)
[12:54:43] *** Joins: MajorBiscuit (~MajorBisc@c-001-001-032.client.tudelft.eduvpn.nl)
[12:56:16] *** Joins: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk)
[12:57:46] *** m5zs7k_ is now known as m5zs7k
[12:58:56] <jackdk> phma: you will need to construct a generator which generates values in teh range [0..6], look at `chooseInt`. Then use that generator to make a generator for triples (the tools in `Control.Applicative` will help). Then use `forAll` with your generator to construct a `Property` and use `Test.Tasty.QuickCheck.testProperty` to turn it into a `TestTree`
[13:02:30] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[13:03:20] *** Quits: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[13:03:21] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[13:04:04] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[13:04:15] *** Joins: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk)
[13:07:00] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[13:08:42] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec)
[13:11:55] *** Joins: ardell (~ardell@user/ardell)
[13:13:00] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec) (Ping timeout: 240 seconds)
[13:15:32] <cheater> hi
[13:16:03] <cheater> are there currently any good gui solutions for windows? preferably also able to display some sort of interactable 3D graphics within a rectangle?
[13:17:33] <phma> jackdk: I'm new to Haskell. I found chooseInt, but am not sure how to use it. Here's the test I've already written:
[13:17:41] <jackdk> @where paste
[13:17:41] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[13:18:16] <jackdk> just in case you're new to IRC too, use that link (or a GH gist) to share code or error messages
[13:19:21] <phma> https://paste.tomsmeding.com/GKHjBRIM
[13:20:57] *** Joins: whound (~dust@2409:4071:4d8d:7b21:2586:8c37:2856:667a)
[13:23:00] *** Quits: drdo (~drdo@roach0.drdo.eu) (Ping timeout: 240 seconds)
[13:24:44] *** Quits: gaff (~gaff@49.207.218.11) (Remote host closed the connection)
[13:27:54] *** Quits: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304) (Ping timeout: 252 seconds)
[13:28:03] <jackdk> phma: okay, if you're used to writing properties in that style, I suggest the following plan: define a newtype wrapper (around Int, I guess) which has an Arbitrary instance that generates numbers in the reduced range, and then write your property test as a function like the one in your pastebin
[13:28:09] <jackdk> have you seen newtypes before?
[13:28:33] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:bca8:d0f:7008:eb61)
[13:30:54] <phma> I'm not used to anything. I found an example written like that. How else can they be written?
[13:32:46] <phma> I copied the tests from https://hackage.haskell.org/package/tasty-1.1/src/README.md and modified them.
[13:35:00] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[13:36:48] *** Joins: cosimone (~user@93-44-187-99.ip98.fastwebnet.it)
[13:40:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[13:43:24] *** Quits: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[13:44:36] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[13:45:18] <jackdk> phma: This is how I would try to do it, but I haven't used QuickCheck very much https://www.irccloud.com/pastebin/bkUnHAwg/ZeroToSix.hs
[13:46:30] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c58b:31b1:c12f:8193)
[13:48:37] *** Joins: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk)
[13:49:31] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[13:49:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[13:50:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c58b:31b1:c12f:8193) (Ping timeout: 240 seconds)
[13:51:43] <gurkenglas> phma, "(checked by QuickCheck)" sounds redundant - everything that involves "QC.testProperty" is checked by QuickCheck, right?
[13:52:12] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 240 seconds)
[13:55:23] <jackdk> it's a label for a tasty testgroup, and you can make testgroups using tasty-hunit, tasty-hedgehog, tasty-hspec...
[13:57:02] <gurkenglas> Oh I see, QC is not QuickCheck itself but tasty's interface to it :)
[13:57:26] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[13:57:35] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:2522:8e77:48b4:28a1)
[13:57:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[14:00:15] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:01:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:2522:8e77:48b4:28a1) (Ping timeout: 240 seconds)
[14:06:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[14:07:09] <gurkenglas> I would have fed quickcheck "\a b c -> any (\x->x<0||x>=7) || f a b c == f b c a", but it doesn't try to hit all the branches, does it?
[14:07:59] <jackdk> I wrote a new generator because "generate, then filter" can give you really slow tests because it has to reroll a lot
[14:08:17] <jackdk> I think John Hughes talks about it in https://www.youtube.com/watch?v=NcJOiQlzlXQ
[14:11:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[14:12:33] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Read error: Connection reset by peer)
[14:14:45] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[14:14:51] <phma> jackdk: Thanks! I don't think "shrink" is needed, there are only 343 possibilities.
[14:14:53] *** Quits: cheater (~Username@user/cheater) (Read error: Connection reset by peer)
[14:14:54] *** Quits: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[14:15:32] *** Quits: foul_owl (~kerry@207.244.125.36) (Ping timeout: 272 seconds)
[14:16:12] *** Joins: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk)
[14:16:44] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[14:18:04] *** Joins: cheater (~Username@user/cheater)
[14:18:17] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 240 seconds)
[14:19:19] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[14:21:48] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:a86e:f918:f8cf:38c0) (Ping timeout: 252 seconds)
[14:25:05] *** Quits: michalz (~michalz@185.246.204.93) (Read error: Connection reset by peer)
[14:25:05] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Remote host closed the connection)
[14:25:21] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[14:25:24] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:25:29] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8978:c9ec:3b56:b4e9)
[14:25:29] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:25:40] *** Joins: michalz (~michalz@185.246.204.93)
[14:26:48] <gurkenglas> ah, forAll (replicateM 3 $ choose (0,6)) $ \[a,b,c] -> f a b c === f b a c
[14:29:28] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 272 seconds)
[14:29:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8978:c9ec:3b56:b4e9) (Ping timeout: 240 seconds)
[14:30:41] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:32:00] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[14:33:28] *** Quits: fendor (~fendor@91.141.60.250.wireless.dyn.drei.com) (Remote host closed the connection)
[14:36:29] *** Quits: ix (~ix@82-71-2-184.dsl.in-addr.zen.co.uk) (Quit: WeeChat 3.4)
[14:36:38] *** Joins: ix (~ix@2a02:8010:674f:0:cda6:d05:f0d7:4922)
[14:36:42] *** Quits: ix (~ix@2a02:8010:674f:0:cda6:d05:f0d7:4922) (Remote host closed the connection)
[14:36:50] *** Joins: ix (~ix@2a02:8010:674f:0:2e0:4cff:fe67:ba)
[14:36:54] *** Quits: ix (~ix@2a02:8010:674f:0:2e0:4cff:fe67:ba) (Remote host closed the connection)
[14:37:02] *** Joins: ix (~ix@2a02:8010:674f:0:2e0:4cff:fe67:ba)
[14:37:08] *** Quits: ix (~ix@2a02:8010:674f:0:2e0:4cff:fe67:ba) (Remote host closed the connection)
[14:37:16] *** Joins: ix (~ix@2a02:8010:674f:0:2e0:4cff:fe67:ba)
[14:40:46] *** Joins: foul_owl (~kerry@207.244.125.36)
[14:42:09] *** Quits: ix (~ix@2a02:8010:674f:0:2e0:4cff:fe67:ba) (Ping timeout: 252 seconds)
[14:43:28] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[14:48:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:48:57] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Quit: WeeChat 3.4)
[14:49:07] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[14:49:10] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[14:49:18] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[14:49:24] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[14:49:59] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[14:50:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[14:52:02] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[14:54:43] *** Joins: jeremyn (~jeremyn@098-147-212-046.res.spectrum.com)
[14:55:00] *** Joins: jeremyn_ (~jeremyn@098-147-212-046.res.spectrum.com)
[14:55:49] <jeremyn_> Hey, is there any way to call a local C library function in Template Haskell?
[14:56:52] <jeremyn_> I'm getting an undefined symbol error
[15:01:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:02:37] *** Quits: whound (~dust@2409:4071:4d8d:7b21:2586:8c37:2856:667a) (Quit: Konversation terminated!)
[15:04:33] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Ping timeout: 250 seconds)
[15:05:33] <dminuoso> Linkage during TH sounds like a fun nightmare
[15:07:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:07:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:07:25] *** Joins: wroathe (~wroathe@user/wroathe)
[15:08:09] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Quit: WeeChat 3.4)
[15:11:29] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[15:12:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[15:13:24] *** Joins: fendor (~fendor@77.119.209.21.wireless.dyn.drei.com)
[15:19:38] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[15:21:12] *** Quits: cosimone (~user@93-44-187-99.ip98.fastwebnet.it) (Ping timeout: 252 seconds)
[15:21:15] <romesrf> ahah
[15:21:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[15:22:49] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:23:15] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[15:25:28] <jeremyn_> :( lol
[15:25:56] <jeremyn_> I want to compile some information about a Vulkan pipeline statically
[15:26:13] <jeremyn_> Maybe it doesn't make sense to do so now that I think about it though
[15:31:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[15:31:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:32:11] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[15:33:45] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:5f01:5e57:4ded:3d7c)
[15:37:48] *** Joins: gaff (~gaff@49.207.195.156)
[15:37:52] *** Joins: cfricke (~cfricke@user/cfricke)
[15:38:43] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:44:02] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[15:45:47] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[15:49:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[15:50:34] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[15:53:46] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[15:54:23] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[15:58:09] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:bca8:d0f:7008:eb61) (Remote host closed the connection)
[15:58:28] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:bca8:d0f:7008:eb61)
[16:01:38] *** Joins: Cajun (~Cajun@user/cajun)
[16:01:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:02:24] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:bca8:d0f:7008:eb61) (Client Quit)
[16:02:35] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:bca8:d0f:7008:eb61)
[16:03:05] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[16:03:35] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:bca8:d0f:7008:eb61) (Remote host closed the connection)
[16:03:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:04:55] *** Quits: jeremyn_ (~jeremyn@098-147-212-046.res.spectrum.com) (Quit: Leaving)
[16:04:55] *** Quits: jeremyn (~jeremyn@098-147-212-046.res.spectrum.com) (Quit: Leaving)
[16:05:31] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:df39:5895:e6dd:94da)
[16:05:48] <romesrf> hello!
[16:05:57] <romesrf> can someone help me interpret the following error
[16:06:00] <romesrf> type Chat a = forall a. ChatBotMessage a => ReaderT (ReplyMessageState a) IO
[16:06:35] *** Joins: vysn (~vysn@user/vysn)
[16:06:42] <romesrf> Expecting one more argument to ‘ReaderT (ReplyMessageState a) IO’           |
[16:06:44] <romesrf>     3 |       Expected a type, but                                                        |
[16:06:46] <romesrf>     4 |       ‘ReaderT (ReplyMessageState a) IO’ has kind                                 |
[16:06:48] <romesrf>     5 |       ‘* -> *’
[16:07:00] *** Joins: rtsn (~nstr@user/rtsn)
[16:07:15] <romesrf> I want the type synonym to have kind * -> *
[16:07:31] <romesrf> but upon adding the constraint I get this error
[16:07:54] <hpc> are you expecting to partially apply that synonym later?
[16:07:56] <romesrf> yes
[16:08:08] <hpc> :( that rules out "type Chat a b = .... b" then
[16:08:13] <romesrf> i mean, by the time i apply the synonym it's completely applied
[16:08:26] <romesrf> hpc: yes, exactly
[16:08:28] <romesrf> ahahah
[16:08:45] <romesrf> I want to add the constraint without forcing the second type variable
[16:08:51] <hpc> er, hmm
[16:09:07] <romesrf> i can throw up a minimal example if you'd like
[16:09:07] <hpc> in "Chat a", is "a" a phantom type?
[16:09:20] <romesrf> gimme a sec let me write something simpler
[16:12:21] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[16:14:43] <romesrf> https://paste.tomsmeding.com/pWixhL3W
[16:14:48] <romesrf> Syn' doesn't typecheck
[16:15:05] <romesrf> hpc: 
[16:17:51] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[16:20:04] <romesrf> brb
[16:20:06] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[16:20:31] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[16:21:35] <romesrf> back
[16:23:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[16:28:11] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[16:29:42] *** Joins: notzmv (~zmv@user/notzmv)
[16:32:04] <raehik> romesrf: I don't think you can partially apply type synonyms. you could try using a newtype instead?
[16:32:18] <raehik> > newtype Syn' a b = Syn' { getSyn :: forall a. Constr a => ReaderT a IO b }
[16:32:19] <lambdabot>  <hint>:1:1: error: parse error on input ‘newtype’
[16:32:47] <geekosaur> you can partially apply as long as they're fully applied at the point of use, with LiberalisedTypeSynonyms
[16:33:01] <geekosaur> need @let for declarations in lambdabot
[16:33:04] <raehik> ohh thanks geekosaur I didn't know that one
[16:33:09] <geekosaur> ">" is just expressions
[16:33:11] <romesrf> raehik: you can partially apply them, just apparently not when you have the constraint
[16:34:17] <romesrf> nd LiberalTypeSynonyms doesn't fix the constraints issue
[16:34:29] <romesrf> meanwhile I've just moved the constraint to a different place
[16:34:41] <romesrf> but it's interesting as to why doesn't it work
[16:39:43] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[16:44:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:45:37] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[16:47:35] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[16:48:35] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:49:29] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[16:51:24] *** Quits: max22- (~maxime@2a01cb08833598008f1709df66707174.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:51:24] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Read error: Connection reset by peer)
[16:52:20] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[16:54:58] *** Joins: kayprish (~kayprish@cable-24-135-254-227.dynamic.sbb.rs)
[16:58:10] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dbf:9eef:ddfc:d739)
[16:58:15] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[17:02:12] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dbf:9eef:ddfc:d739) (Ping timeout: 240 seconds)
[17:02:50] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[17:03:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[17:03:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[17:07:03] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c4e7:84cc:496a:5ba8)
[17:07:13] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[17:07:21] *** Quits: MajorBiscuit (~MajorBisc@c-001-001-032.client.tudelft.eduvpn.nl) (Ping timeout: 252 seconds)
[17:07:48] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[17:10:28] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Read error: Connection reset by peer)
[17:11:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c4e7:84cc:496a:5ba8) (Ping timeout: 240 seconds)
[17:11:38] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[17:12:21] *** Joins: kuribas (~user@ptr-25vy0i6vww7x1l8ynbn.18120a2.ip6.access.telenet.be)
[17:12:40] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[17:13:30] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 272 seconds)
[17:17:20] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3043:922a:3ee:629c)
[17:21:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3043:922a:3ee:629c) (Ping timeout: 240 seconds)
[17:29:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[17:29:20] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:33:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[17:38:05] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[17:42:21] *** Joins: drdo (~drdo@roach0.drdo.eu)
[17:42:21] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[17:45:43] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[17:47:18] *** Joins: drdo (~drdo@roach0.drdo.eu)
[17:47:33] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[17:48:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:48:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:48:58] *** Joins: wroathe (~wroathe@user/wroathe)
[17:49:57] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:690a:d027:b8ea:dcab)
[17:50:15] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[17:50:41] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[17:51:23] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:5c57:7f45:b808:8adb) (Ping timeout: 250 seconds)
[17:52:44] *** Joins: drdo (~drdo@roach0.drdo.eu)
[17:52:44] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[17:53:22] *** Joins: burnside_ (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[17:53:46] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:54:21] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[17:54:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:690a:d027:b8ea:dcab) (Ping timeout: 250 seconds)
[17:54:58] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[17:56:28] *** Quits: kuribas (~user@ptr-25vy0i6vww7x1l8ynbn.18120a2.ip6.access.telenet.be) (Read error: Connection reset by peer)
[17:56:43] *** Joins: drdo (~drdo@roach0.drdo.eu)
[17:57:55] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:01:27] *** Joins: alp (~alp@user/alp)
[18:02:16] *** Joins: kuribas (~user@ptr-25vy0i6vww7x1l8ynbn.18120a2.ip6.access.telenet.be)
[18:02:43] *** raoul8 is now known as raoul
[18:03:06] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:03:06] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:03:48] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[18:04:16] *** Joins: max22- (~maxime@2a01cb0883359800f7b27aee14b4b0ce.ipv6.abo.wanadoo.fr)
[18:05:58] *** Joins: MajorBiscuit (~MajorBisc@c-001-001-032.client.tudelft.eduvpn.nl)
[18:07:11] *** Quits: rusrushal13 (~rusrushal@103.85.18.34) (Ping timeout: 256 seconds)
[18:07:14] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:07:30] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6)
[18:08:18] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:09:48] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::99e7) (Ping timeout: 240 seconds)
[18:10:36] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Ping timeout: 252 seconds)
[18:12:08] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[18:13:29] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:13:29] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:15:14] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6)
[18:16:57] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6) (Ping timeout: 250 seconds)
[18:18:40] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:18:40] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:22:00] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[18:23:52] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:23:52] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:24:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:25:46] *** Joins: sss (~sss@187.83.249.216.dyn.smithville.net)
[18:26:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:29:03] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:29:03] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:30:26] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[18:30:27] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[18:30:35] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[18:30:39] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[18:30:47] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[18:30:51] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[18:30:59] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[18:31:03] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[18:31:11] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[18:31:15] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[18:31:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:34:14] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:34:14] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:34:26] *** Joins: jlamothe (~jlamothe@198.251.61.229)
[18:35:34] *** Joins: slack1256 (~slack1256@186.11.97.42)
[18:36:37] <romesrf> can I have existential types in typeclass methods ?
[18:36:56] <slack1256> Is there a binding to the `file` filetype database on hackage?
[18:38:25] <sss> I've got some code with a data type that takes quite a few type arguments, like data Foo a b c d e f .... = Foo { fa :: a, fb :: b, ...}. The problem is that I'm often writing functions that only instantiate a small number of these types, say addB :: (forall a c d e f ...) . Foo a () c d e f ... -> Foo a Int c d e f ... Is there any reasonable way
[18:38:26] <sss> to do something like this without having to write out all of the type arguments every time? (Ideally I'd want e.g. type-level record syntax, but that doesn't seem to be a thing afaik. I could probably get close to this with some type families, but that requires some work every time I add a field to the datatype)
[18:39:25] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:39:25] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:39:49] <merijn> slack1256: You probably mean libmagic?
[18:39:51] <merijn> @hackage magic
[18:39:51] <lambdabot> https://hackage.haskell.org/package/magic
[18:40:09] <slack1256> Awesome!
[18:40:15] <merijn> Seems a bit...ancient, though
[18:40:20] <merijn> So YMMV ;)
[18:40:57] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:41:49] <slack1256> I can probably update it. Thanks merijn.
[18:43:26] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 272 seconds)
[18:44:04] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Ping timeout: 272 seconds)
[18:44:31] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:44:37] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:46:54] *** Quits: Cajun (~Cajun@user/cajun) (Quit: Client closed)
[18:48:42] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:49:48] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:52:21] *** Joins: haskell_ (~haskell@65-102-32-32.ptld.qwest.net)
[18:52:43] *** Quits: haskell_ (~haskell@65-102-32-32.ptld.qwest.net) (Remote host closed the connection)
[18:52:57] *** Joins: drdo (~drdo@roach0.drdo.eu)
[18:54:59] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[18:55:59] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:59:11] *** Quits: gaff (~gaff@49.207.195.156) (Remote host closed the connection)
[19:00:11] *** Joins: drdo (~drdo@roach0.drdo.eu)
[19:00:11] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[19:01:21] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:68e1:d7ca:4ab6:46e)
[19:04:54] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:05:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:68e1:d7ca:4ab6:46e) (Ping timeout: 240 seconds)
[19:10:33] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[19:10:56] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[19:12:45] *** Quits: xff0x (~xff0x@2001:1a81:53dd:d400:4619:fbb5:b364:48b6) (Ping timeout: 252 seconds)
[19:12:55] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[19:13:30] *** Joins: xff0x (~xff0x@2001:1a81:53dd:d400:dbd2:febe:ea58:7c1a)
[19:14:06] *** Joins: gaff (~gaff@49.207.195.156)
[19:16:32] *** Joins: nunggu_ (~q@user/nunggu)
[19:16:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[19:18:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:19:42] *** Joins: afidegnum (~afidegnum@102.176.94.134)
[19:21:40] <afidegnum> hi, can you pls guide? I'm trying to build directed graphs made of nodes, but I would like to add a mouse event to link one node to a custom node, or other shapes, I come accross diagrams but I can't see anything related to mouse events. can you please advise better ?
[19:23:55] *** Quits: sss (~sss@187.83.249.216.dyn.smithville.net) (Quit: Client closed)
[19:28:12] *** Quits: gaff (~gaff@49.207.195.156) (Ping timeout: 240 seconds)
[19:29:00] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:30:06] *** Quits: yehoshuapw (~yehoshuap@2001:470:69fc:105::a5f) (Quit: You have been kicked for being idle)
[19:31:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:31:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:31:53] *** Joins: wroathe (~wroathe@user/wroathe)
[19:33:49] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:68e1:d7ca:4ab6:46e)
[19:34:04] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:68e1:d7ca:4ab6:46e) (Remote host closed the connection)
[19:34:13] *** Joins: xkuru (~xkuru@user/xkuru)
[19:34:25] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:68e1:d7ca:4ab6:46e)
[19:34:51] *** Joins: zebrag (~chris@user/zebrag)
[19:35:29] *** Joins: jgeerds_ (~jgeerds@55d4b9df.access.ecotel.net)
[19:35:43] *** Joins: eggplant_ (~Eggplanta@2600:1700:bef1:5e10:49da:9bbf:6c0f:9f3d)
[19:35:55] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[19:36:29] *** Joins: Guest28 (~Guest28@a89-183-97-15.net-htp.de)
[19:38:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:68e1:d7ca:4ab6:46e) (Ping timeout: 240 seconds)
[19:39:17] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 250 seconds)
[19:40:07] *** Quits: afidegnum (~afidegnum@102.176.94.134) (Quit: leaving)
[19:44:02] *** Quits: megeve (sid523379@id-523379.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[19:44:10] *** Parts: Guest28 (~Guest28@a89-183-97-15.net-htp.de) ()
[19:45:13] *** Quits: Guest3567 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Quit: Reconnecting)
[19:45:25] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[19:45:49] *** sudden is now known as Guest402
[19:46:15] *** Quits: Guest402 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[19:46:15] *** Joins: Guest402 (~cat@user/sudden)
[19:46:17] *** Joins: megeve (sid523379@id-523379.hampstead.irccloud.com)
[19:46:17] *** Joins: slac19076 (~slack1256@191.125.99.76)
[19:46:55] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[19:48:40] *** Quits: slack1256 (~slack1256@186.11.97.42) (Ping timeout: 272 seconds)
[19:50:30] *** Joins: nunggu_ (~q@user/nunggu)
[19:53:23] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:5f01:5e57:4ded:3d7c) (Quit: WeeChat 2.8)
[19:54:43] *** Joins: gaff (~gaff@49.207.198.116)
[19:56:29] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[19:57:35] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[19:58:16] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 245 seconds)
[19:58:24] *** Quits: kayprish (~kayprish@cable-24-135-254-227.dynamic.sbb.rs) (Ping timeout: 252 seconds)
[19:59:29] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[19:59:50] *** Joins: zebrag (~chris@user/zebrag)
[20:00:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:00:57] *** Quits: acidjnk (~acidjnk@p200300d0c7057500a04355ceabfe8d47.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:03:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[20:05:09] *** Joins: mncheck (~mncheck@193.224.205.254)
[20:09:55] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[20:10:07] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[20:11:39] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:12:18] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::99e7)
[20:12:42] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 252 seconds)
[20:12:58] *** Quits: polyphem_ (~rod@2a02:810d:840:8754:21f9:18ab:ce0d:488d) (Ping timeout: 260 seconds)
[20:13:44] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[20:14:07] *** Joins: alp (~alp@user/alp)
[20:15:06] *** Joins: nunggu_ (~q@user/nunggu)
[20:16:54] *** Joins: gensyst (gensyst@user/gensyst)
[20:17:38] *** Quits: burnside_ (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[20:23:11] <gensyst> Please challenge my belief that websites should mostly work without JavaScript, not just for purposes of purity and viewability on text-based browsers but also because very privacy conscious people may want to disable JavaScript altogether.
[20:23:15] <gensyst> However given this belief, Haskell is not really a suitable language for doing front-end, is it? I think the best I can go for is PureScript. This allows me to write a website that mostly works without JavaScript, but will be more feature-rich with JavaScript active.
[20:24:30] *** slac19076 is now known as slack1256
[20:25:08] <slack1256> Wait, purescript compiles to JS doesn't it?
[20:25:29] <geekosaur> I don't see what about a Haskell backend requires JS as a front-end
[20:25:40] <geekosaur> it's common, yes, but so are JS front-ends in general
[20:29:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[20:30:17] <gensyst> I wasn't clear enough above. I'm talking only about front-end here. The point is that Haskell for front-end is not suitable for just "spicing up" HTML that works fine without JS, is it?
[20:30:38] <gensyst> Haskell for front-end is more for just monolithic single page "apps", isn't it?
[20:30:51] <gensyst> (If JS is disabled in the browser, nothing works)
[20:31:55] <geekosaur> afaik the only way you get haskell as *front* end is ghcjs?
[20:32:17] *** Joins: polyphem (~rod@2a02:810d:840:8754:448e:47ff:4575:7cfb)
[20:33:51] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:36:31] <gensyst> geekosaur, yeah and afaik rest of JS can't really talk to the haskell JS part since it's a different runtime.
[20:36:40] <gensyst> it's its own thing in isolation
[20:36:55] <geekosaur> you can do foreign imports, iirc
[20:37:21] <geekosaur> you can't mix it with other frameworks but that's kind of a given anyway isn't it?
[20:37:29] <janus> geekosaur: maybe one can compile Hugs with Emscripten
[20:37:32] *** Quits: eggplant_ (~Eggplanta@2600:1700:bef1:5e10:49da:9bbf:6c0f:9f3d) (Remote host closed the connection)
[20:38:06] <janus> another way of having haskell on the frontend though :P
[20:38:47] <geekosaur> in any case I think if you really want something haskell-like on the front end elm is the go-to
[20:38:51] <janus> also since GRIN compiles to LLVM, and LLVM compiles to WASM, should work? https://grin-compiler.github.io/
[20:39:11] <janus> geekosaur: why not purescript? it isn't limiting you like Elm is
[20:39:43] <janus> more similar to haskell than Elm afaik?
[20:40:03] <geekosaur> mm, maybe. I had the impression elm was more haskell-like
[20:40:39] <janus> how? it doesn't have higher-order types
[20:40:51] <geekosaur> whereas purescript is what you'd get if JS had been designed with Haskell concepts in mind
[20:40:52] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:c5cf:b717:584d:5dd3)
[20:42:30] <janus> i don't see the similarity between PureScript and JS except for how e.g. the string type is an array of utf-16 code units
[20:43:05] <janus> arguably it is even more haskelly than haskell since the type classes are more granular
[20:43:13] <slack1256> Maybe backwards? Haskell if was designed with JS concerns in mind.
[20:43:46] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[20:47:31] *** Joins: sagax (~sagax_nb@user/sagax)
[20:47:34] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 272 seconds)
[20:47:53] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:48:10] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[20:49:20] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49da:9bbf:6c0f:9f3d)
[20:49:41] *** Joins: Akiva (~Akiva@user/Akiva)
[20:54:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:55:25] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[20:56:45] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:58:01] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:df39:5895:e6dd:94da) (Remote host closed the connection)
[20:59:48] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[21:03:44] *** Quits: chele (~chele@user/chele) (Quit: Leaving)
[21:09:46] *** Joins: ack_inc (~anirudh@223.190.93.158)
[21:10:00] *** Quits: ack_inc (~anirudh@223.190.93.158) (Client Quit)
[21:10:08] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[21:12:43] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[21:13:32] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 272 seconds)
[21:14:07] *** Quits: MajorBiscuit (~MajorBisc@c-001-001-032.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:14:41] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:20:09] <maerwald> janus: because elm is actually successful
[21:20:54] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[21:23:35] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[21:27:05] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[21:27:50] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Remote host closed the connection)
[21:28:12] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[21:29:46] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[21:30:20] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[21:31:03] *** Quits: gaff (~gaff@49.207.198.116) (Remote host closed the connection)
[21:31:51] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:32:29] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:33:08] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Quit: Konversation terminated!)
[21:33:48] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Ping timeout: 272 seconds)
[21:34:25] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[21:34:33] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[21:34:40] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[21:39:41] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[21:41:11] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[21:42:00] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[21:42:00] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[21:42:00] *** Joins: turlando (~turlando@user/turlando)
[21:42:09] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Client Quit)
[21:42:49] <dminuoso> janus: the typeclasses in elm are a mess
[21:43:18] <geekosaur> the typeclasses in haskell aren't?
[21:43:33] <dminuoso> geekosaur: At least they're an actual component of the language
[21:44:17] *** xnbya2 is now known as xnbya
[21:44:26] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[21:45:15] <dolio> It just has a few built in special cases of overloading, no?
[21:45:21] <dminuoso> Right
[21:46:11] <dolio> I'm no expert, but my impression was that elm would be the absolute last thing the original questioner would want.
[21:46:34] <dolio> I thought it was all about writing the website in some kind of FRP methodology.
[21:47:10] <dminuoso> For what its worth, I wholeheartedly agree with gensyst's original proposition of unobstrusive JavaScript.
[21:47:44] <dminuoso> My experience is not as dark, as a NoScript user there's some websites that dont work, but plenty that do.
[21:47:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:48:45] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[21:48:57] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 252 seconds)
[21:49:24] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:49:52] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[21:51:26] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[21:53:20] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: No Ping reply in 180 seconds.)
[21:54:46] *** Joins: mzan (~quassel@mail.asterisell.com)
[22:04:29] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[22:09:15] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[22:09:16] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[22:12:50] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[22:13:42] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[22:13:46] <maerwald> I usually just pretend I only know backend
[22:13:51] <maerwald> which is a lie, but yeah
[22:16:22] <[exa]> very practical
[22:16:25] <janus> maerwald: how do you judge whether purescript is successful or not?
[22:16:53] <maerwald> janus: that's my impression... I didn't write a paper on it
[22:17:43] <maerwald> e.g. how many times it was mentioned in job postings/interviews, how often I saw actual purescript codebases, etc
[22:18:08] <janus> i don't care about those things because i already have a job writing purescript :P
[22:18:23] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[22:18:23] <janus> in a way i'd say it beats haskell on some fronts, like e.g. the ecosystem is more unified
[22:18:23] <maerwald> yeah, I reviewed a purescript codebase once too
[22:18:36] <janus> e.g. the quickcheck package for purescript also supports the hedgehog way of working
[22:18:55] <janus> and there is no argument about BlockArguments because you can't turn it off ;)
[22:19:05] <gensyst> dminuoso, exactly! so this leaves haskell out. i think purescript is the way
[22:19:41] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:21:25] <maerwald> I mean yeah... row types are cool, but I can have the same benefits with typescripts structural typing and less complexity
[22:21:36] <maerwald> and I find devs easier
[22:21:48] *** Joins: econo (uid147250@user/econo)
[22:21:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[22:22:06] <maerwald> and Haskell is huge pain on that front indeed
[22:22:24] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[22:22:27] <maerwald> converting between "web types" etc
[22:23:51] <[exa]> `unsafeCoerceJSON`
[22:24:49] <monochrom> Someone missed the opportunity of calling it "column polymorphism" :) when they defined the dual or row polymorphism, i.e., whereas row polymorphism is some kind of open product, they defined a corresponding kind of open sum.
[22:26:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[22:26:56] <dolio> I don't think there's anything about GHCJS that requires building your whole website in javascript. But if you're just looking for a haskell-like language to generate small JS functions, purescript is probably more suitable, I guess.
[22:28:11] <geekosaur> not so much "requires" as "invites the sunk cost fallacy" imo
[22:30:13] *** Joins: x_kuru (~xkuru@user/xkuru)
[22:32:29] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[22:33:08] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:33:30] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[22:33:43] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:34:06] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[22:34:58] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:35:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:35:20] *** Joins: ubert (~Thunderbi@p200300ecdf0994a3b5a040f373828229.dip0.t-ipconnect.de)
[22:35:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:38:23] *** Joins: coot (~coot@213.134.190.95)
[22:41:12] *** Quits: deadmarshal (~deadmarsh@95.38.117.142) (Ping timeout: 252 seconds)
[22:42:06] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Quit: ChaiTRex)
[22:42:36] *** Quits: xff0x (~xff0x@2001:1a81:53dd:d400:dbd2:febe:ea58:7c1a) (Ping timeout: 240 seconds)
[22:42:39] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[22:43:13] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[22:43:41] *** Joins: xff0x (~xff0x@2001:1a81:53dd:d400:b969:14d4:3062:a4)
[22:43:53] *** Quits: ubert (~Thunderbi@p200300ecdf0994a3b5a040f373828229.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:44:01] *** Joins: ub (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[22:44:40] *** Quits: gensyst (gensyst@user/gensyst) (Quit: Leaving)
[22:46:19] *** ub is now known as ubert
[22:57:11] *** Quits: capo_greco (~textual@60-241-161-167.static.tpgi.com.au) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:09:46] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:10:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[23:12:27] *** Lord_of_Life_ is now known as Lord_of_Life
[23:14:33] *** Joins: fluxit (~fluxit@techsmix.net)
[23:18:07] *** Joins: thyriaen (~thyriaen@simnet-nat-pool-185-130-54-167.stargrpns.pp.ua)
[23:21:35] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 250 seconds)
[23:24:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[23:24:30] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[23:24:53] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[23:25:08] <dsal> Does anyone have a pointer for how I might go about making a docker image for an app I've got (binary + some extra files)?  I've only barely used docker in a while and all the stuff I've found makes it seem excessively complicated.
[23:29:35] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:30:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:32:54] *** Quits: briandaed (~root@109.95.142.92.r.toneticgroup.pl) (Ping timeout: 252 seconds)
[23:33:26] <maerwald> dsal: https://gist.github.com/hasufell/f0893abfbba63ac4ea40feb0520946ee
[23:33:54] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:34:30] <dsal> maerwald: Thanks!
[23:35:24] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 272 seconds)
[23:36:28] <ProfSimm> When you get state in a monad and you return modified state for next call, who stores that state
[23:36:31] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[23:36:54] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[23:36:56] <Rembane> ProfSimm: You do, but in a sneaky way.
[23:38:01] <ProfSimm> But. We can't mutate state right
[23:38:05] *** Quits: slack1256 (~slack1256@191.125.99.76) (Remote host closed the connection)
[23:38:22] <Rembane> ProfSimm: Indeed, but we can change the state we send to a function call.
[23:38:32] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:41] <maerwald> there's no mutation, it's just passed around in a tuple along with the function result
[23:38:47] <ProfSimm> Doesn't that imply we have that state in the first place, so we can send it
[23:39:02] <geekosaur> runState provides it
[23:39:19] <ProfSimm> So I'm guessing runState cheats
[23:39:24] *** Joins: drdo (~drdo@roach0.drdo.eu)
[23:39:31] <geekosaur> huh?
[23:39:46] <geekosaur> you have some very odd ideas of how State works
[23:40:05] <ProfSimm> I have no ideas
[23:40:46] <geekosaur> then you have nothing to guessfrom
[23:41:25] <Rembane> ProfSimm: You can replace the state monad with a tuple as maerwald said. Maybe you've encountered that already? 
[23:41:47] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[23:41:59] <maerwald> `foo :: Int -> State Bool String` is equivalent to `foo :: Int -> Bool -> (Bool, String)`
[23:42:15] <maerwald> where Bool is the state
[23:42:20] *** Joins: cfricke (~cfricke@user/cfricke)
[23:42:41] <geekosaur> State is s -> (a,s). runState provides the first `s`, and produces the final `(a,s)`
[23:42:59] <geekosaur> pretty much can't get more transparent than that
[23:47:33] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:48:05] *** Joins: capo_greco (~textual@60-241-161-167.static.tpgi.com.au)
[23:48:09] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:48:15] <Inst[m]> you're probably more thinking of IORef etc
[23:50:59] *** Joins: cynomys (~cynomys@user/cynomys)
[23:51:31] <monochrom> Some of my students found it helpful to expand the defintions of put, get, and >>= in "put 5 >>= get". Then they finally agreed that the state storage is emulated by parameter passing.
[23:52:08] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49da:9bbf:6c0f:9f3d) (Remote host closed the connection)
[23:52:24] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[23:52:26] <monochrom> It also helps that I frame the whole story as "the fairy tale of mutable state implemented by the reality of mathematics". Ah, the irony.
[23:52:47] <ProfSimm> monochrom: is it that way though
[23:53:08] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 272 seconds)
[23:53:17] <geekosaur> how about you do the exercise monochrom suggested
[23:53:33] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[23:54:06] <ProfSimm> Passing parameters is not the issue, but IO as Inst[m] noted
[23:54:08] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[23:55:11] <monochrom> IO is a different story that I didn't teach.
[23:56:59] <ProfSimm> I'm thinking in general terms about how an isolated function can encode mutations as commands it returns and input is the world it sees resulting from the previous commands it returned
[23:57:00] <monochrom> But it's the compiler generating appropriate code for you.
[23:57:11] <ProfSimm> Gives us mutability, transactions, and still pure code in the function
[23:59:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:59:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:59:54] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
