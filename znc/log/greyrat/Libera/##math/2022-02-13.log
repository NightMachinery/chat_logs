[00:00:40] <isekaijin> Z-module: Oh, of course that's more elegant.
[00:01:27] *** Joins: Maturion (~Maturion@p200300ede71a8e003896c4630d493e6d.dip0.t-ipconnect.de)
[00:03:12] <int-e> Why not observe that 1 + b < 1 + 2^k so you don't have to care about the bracket at all (beyond it being an integer)?
[00:03:40] <Z-module> int-e, it has alternating signs in the second factor, so you have to get that factor > 1
[00:03:58] <Z-module> oh wait, I see how you mean
[00:04:10] <int-e> Z-module: which you get from  1 + b < 1 + 2^k because the factor is the result of dividing the latter by the former
[00:04:29] <int-e> (you need that 1 + b is positive as well)
[00:05:19] <int-e> basically I'm aiming for "1 + b is a nontrivial divisor of 1 + 2^k"
[00:06:14] <int-e> (disclaimer: I didn't actually read the paste after realizing what it was about.)
[00:08:14] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[00:09:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[00:09:31] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:11:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[00:11:19] <ProfSimm> Actually. What is the basis of believing math is a good basis for computer operation
[00:11:23] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:11:24] *** Joins: newwebdev132 (~newwebdev@78.135.91.144)
[00:12:37] *** Quits: newwebdev13 (~newwebdev@31.210.55.200) (Ping timeout: 240 seconds)
[00:13:51] <jemius> Ken Thompson said in the 60s "Computer people" won over mathematicians about having control over computers :)
[00:14:20] <Z-module> yeah, to fill that in: If k itself is odd >= 3, then 3 divides 1 + 2^k and we have the compositeness. So now k is even and has an odd factor p >= 3, so b = 2^(k/p) < 2^k  so 1 + b < 1 + 2^k
[00:14:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:14:42] <ProfSimm> jemius: maybe that's good. Math is good with formal proofs and so on. But actually computers are real-world systems, not abstract ones
[00:14:53] <ProfSimm> jemius: can math prove humans.
[00:14:55] <ProfSimm> :P
[00:15:43] <jemius> yup, in computers I could define complete garbage from a mathematical perspective and still have a machine being (partly) operational
[00:17:05] <ProfSimm> jemius: on one hand yes, but also it's possible to prove a system correct in math that fails in the real world because the real world has infinite variables, math doesn't
[00:17:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[00:17:29] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:17:49] <ProfSimm> Basically saying math always models after a simplified, ideal version of the domain
[00:18:48] <ProfSimm> jemius: the brain, a new theory goes, is thousands of partly overlapping, partly distinct, partly incompatible models working together, each contributing a prediction and then the brain "votes" its final behavior
[00:19:04] <int-e> ProfSimm: take it to ##math-offtopic please
[00:19:30] <ProfSimm> int-e: OK
[00:19:33] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[00:22:00] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[00:25:09] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[00:26:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:26:33] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8039)
[00:28:21] *** Joins: newwebdev13 (~newwebdev@31.210.55.74)
[00:29:59] *** Quits: newwebdev132 (~newwebdev@78.135.91.144) (Ping timeout: 256 seconds)
[00:32:55] <isekaijin> int-e: Whoa, of course, since p > 1.
[00:33:11] <isekaijin> 1 + b < 1 + b^p, duh
[00:35:20] *** Joins: newpy (~newpy@206.168.231.90)
[00:37:21] <Hash> Oh man.
[00:37:31] <Hash> I have to learn statistics and probability
[00:37:47] <Hash> I did 100% on math, arith, and algebra sections
[00:37:56] <Hash> I got less than 50% score on stats and prob.
[00:38:00] <isekaijin> Aw.
[00:38:03] <Hash> Yup
[00:38:12] <Hash> No problem. was a pre assessment before you start course
[00:38:17] <Hash> now I know what to study
[00:38:51] <Hash> Math is easy.
[00:39:08] *** Joins: Klinda (~superleag@user/klinda)
[00:39:08] <Hash> You get a set of rules to solve a generic category of problems.
[00:39:35] <Hash> Everything just works the way it's supposed to.
[00:40:41] <isekaijin> lol... “set of rules” and “generic category of problems”
[00:41:02] <isekaijin> Well, I guess it's true when you're in high school.
[00:41:07] <Hash> Applied math, yes.
[00:41:19] <Hash> Not necessarily HS level. It's universal.
[00:41:44] <Hash> What you're probably laughing at is the omission of theoretical math from our school systems.
[00:41:57] <Hash> We teach applied as it's applicable to the real world and problem solving.
[00:42:05] <Hash> Theoretical math we don't really teach a lot in schools for some odd reason.
[00:44:45] <isekaijin> No, I mean, there's absolutely no need to teach super abstract mathematics to people who aren't interested in it for its own sake. Math isn't the only thing you need to learn in high school anyway.
[00:45:13] <Hash> I may have a disagreement there.
[00:45:20] <Hash> I think some theory is good, makes the mind work.
[00:45:32] <Hash> Builds the neural connections needed for higher level thinking.
[00:45:48] <Hash> These connections are established by doing the kind of work applied and theoretical math provides.
[00:46:21] <Hash> Without higher level mathematics, theoretical and abstract, you simply cannot build higher level neural connections used primarily for problem solving.
[00:46:44] <Hash> In my humble opinion, math should be one of the most vital subjects taught in school.
[00:46:51] <Hash> But we're getting offtopic.
[00:46:52] <isekaijin> Oh, well, I'm no biologist, and especially no neuroscientist, so I'm going to have to defer to your expertise in that department.
[00:48:11] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:49:38] <Hash> I wonder if there is any fmri data regarding mathematicians vs. normal people.
[00:49:52] <Hash> *shrug* Interesting stuff. Back to study. See ya
[00:56:08] *** Joins: tforever (~Terabyte@85.103.104.1)
[01:01:07] *** Joins: tforever_ (~Terabyte@85.103.104.1)
[01:01:50] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) (Remote host closed the connection)
[01:03:06] *** Quits: tforever_ (~Terabyte@85.103.104.1) (Client Quit)
[01:04:06] *** Quits: tforever (~Terabyte@85.103.104.1) (Ping timeout: 272 seconds)
[01:08:35] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[01:08:58] *** Joins: DoYouKnow (~khronos@2600:1700:aa30:37c0::40)
[01:08:59] <remii> isekaijin can u take a look at this: https://i.imgur.com/IPlHUMt.png
[01:09:15] <remii> I got a bit confused but the coordinate vector is different from the matrix representation of T under \beta and \gamma right?
[01:09:23] <remii> I mean the idea behind it.
[01:10:05] *** Joins: baracurda (~baracurda@user/parserblabla)
[01:11:03] <remii> Yea mb, clearly. The first one is about a vector and the latter about a transformation.
[01:16:07] <isekaijin> Yeah.
[01:16:16] <isekaijin> You got it.
[01:18:25] *** Joins: z4kpi (~z4kpi@user/zacts)
[01:18:35] *** Quits: z4kpi (~z4kpi@user/zacts) (Client Quit)
[01:20:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:20:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[01:21:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:25:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[01:30:21] *** Joins: analognoise (~analognoi@185.229.59.36)
[01:31:23] *** Quits: analognoise (~analognoi@185.229.59.36) (Max SendQ exceeded)
[01:31:52] *** Joins: analognoise (~analognoi@185.229.59.36)
[01:33:23] *** Quits: Jordy (~jordy@user/jordy) (Quit: Leaving)
[01:34:21] *** Quits: qbt (~edun@user/edun) (Ping timeout: 256 seconds)
[01:34:21] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[01:34:21] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[01:34:21] *** Quits: anderson (~ande@user/anderson) (Quit: bye)
[01:37:38] *** Joins: pavonia (~user@user/siracusa)
[01:40:42] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[01:42:15] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[01:42:21] *** Joins: glider (~glider@user/glider)
[01:43:33] *** Quits: DoYouKnow (~khronos@2600:1700:aa30:37c0::40) (Remote host closed the connection)
[01:43:56] *** Joins: DoYouKnow (~khronos@2600:1700:aa30:37c0::40)
[01:45:36] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:46:15] *** Quits: isekaijin (~isekaijin@user/isekaijin) (Quit: WeeChat 3.4)
[01:46:37] *** Quits: specing (~specing@user/specing) (Ping timeout: 240 seconds)
[01:46:40] *** Joins: anderson (~ande@user/anderson)
[01:48:19] *** Quits: DoYouKnow (~khronos@2600:1700:aa30:37c0::40) (Remote host closed the connection)
[01:49:11] *** Joins: specing (~specing@user/specing)
[01:50:20] *** Joins: isekaijin (~isekaijin@user/isekaijin)
[01:51:23] *** Joins: NEYi (~NEYi@109.251.216.38)
[01:53:27] *** Quits: baracurda (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[01:57:12] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:02:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[02:11:00] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Ping timeout: 276 seconds)
[02:13:29] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:13:49] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:99db:4bd8:1030:f3c0)
[02:16:05] *** Quits: ppw (~ppw@user/ppw) (Ping timeout: 250 seconds)
[02:19:05] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[02:20:42] *** Quits: jemius (~imperator@200116b82dc18400cf44e2fbedcfde7e.dip.versatel-1u1.de) (Quit: Leaving)
[02:22:51] <tusko> WHat exactly is a Laplace Transform? Like how is it related to convolution. This seems an awful strange connection.
[02:25:24] *** Joins: marloi2 (~mark@216.154.18.94)
[02:25:38] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:27:04] *** Quits: marloi (~mark@216.154.45.101) (Ping timeout: 272 seconds)
[02:28:29] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:40:00] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 256 seconds)
[02:41:56] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[02:51:17] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:55:34] <greenbagels> hm... how do 2D spline algorithms work? as in, for making a 2D parametric surface interpolating a grid of points
[02:56:33] <greenbagels> intuitively i'm thinking, if you can assume the function is differentiable everywhere, you can construct its partial derivatives (incl higher order ones) via finite differences...
[02:57:08] <greenbagels> and then maybe take a multivariable taylor polynomial...
[02:57:19] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[02:57:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[02:59:41] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[03:02:06] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[03:02:10] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[03:03:36] *** Quits: analognoise (~analognoi@185.229.59.36) (Quit: Leaving)
[03:05:52] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[03:06:43] <tusko> what class they teach that in?
[03:13:15] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[03:15:31] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[03:16:35] <greenbagels> tusko: laplace transforms?
[03:17:38] *** Joins: BUSY (~BUSY@user/busy)
[03:18:44] <joel135> my guess would be that you choose a vector space of local functions (polynomials up to a certain degree) and you constrain the functions to blend into each other smoothly where they meet (up to a certain degree) and you also constrain them to have the specified values at the grid points
[03:19:25] <joel135> perhaps there is a way to turn a 1D spline algorithm into a 2D algorithm by "tensoring it with itself"
[03:19:48] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[03:20:43] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:20:45] *** Joins: off^ (~off@50.235.176.163)
[03:22:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:26:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:29:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:31:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:32:10] *** Quits: xff0x (~xff0x@2001:1a81:524f:ad00:23cf:423a:2190:173f) (Ping timeout: 260 seconds)
[03:32:39] *** Joins: xff0x (~xff0x@2001:1a81:524f:ad00:ca8e:e915:817b:c700)
[03:33:47] <tusko> greenbagels, multivariable taylor polynomial
[03:33:52] <tusko> is that analysis
[03:33:58] <greenbagels> tusko: a vector calculus / analysis course would teach you that
[03:35:21] <tusko> I took calc 3 but idk if we did multivariable taylor polynomials
[03:38:33] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[03:38:39] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[03:38:53] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[03:39:20] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[03:39:59] *** Joins: Arcorann (~A@user/arcorann)
[03:51:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:53:35] *** Joins: slycelote (~slycelote@user/slycelote)
[03:55:10] *** Quits: Me-me (~me-me@user/me-me) (Remote host closed the connection)
[03:55:59] *** Joins: Me-me (~me-me@tunnel690570-pt.tunnel.tserv12.mia1.ipv6.he.net)
[03:56:17] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:99db:4bd8:1030:f3c0) (Quit: see ya)
[03:56:46] <remii> I have this theorem to prove, https://i.imgur.com/HHsG1rV.png and I did, just want to make sure that the solutions manual has a typo. https://i.imgur.com/zN5iHmR.png It should be (x1 + cx2) - i(y1 + cy2) instead of (x1 + cx2) + i(x2 + cy2) right?
[03:57:30] *** Quits: Me-me (~me-me@tunnel690570-pt.tunnel.tserv12.mia1.ipv6.he.net) (Changing host)
[03:57:30] *** Joins: Me-me (~me-me@user/me-me)
[04:05:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[04:06:56] *** Quits: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:09:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:12:57] *** Quits: Jong (~Jong@2620:10d:c090:400::5:8039) (Ping timeout: 240 seconds)
[04:15:24] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[04:23:18] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[04:32:15] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:32:21] <greenbagels> remii: yes
[04:32:39] <EdwardH> If someone is willing to discuss this with me, I'd appreciate it http://mathb.in/70547
[04:34:16] <greenbagels> EdwardH: im not a knot theory guy but i like your ascii pictures
[04:34:35] <EdwardH> Knot theory isn't applicable anyway
[04:35:50] *** Joins: Fohsap_ (~Muimi@140.82.21.73)
[04:37:30] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:37:46] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:38:26] *** Quits: Fohsap (~Muimi@119.112.144.14) (Ping timeout: 260 seconds)
[04:38:30] *** Fohsap_ is now known as Fohsap
[04:40:08] *** Quits: marloi2 (~mark@216.154.18.94) (Ping timeout: 256 seconds)
[04:45:32] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[05:01:26] *** Quits: minto (~mintograd@47.201.5.61) (Quit: Leaving)
[05:09:17] *** Joins: marloi2 (~mark@216.154.18.94)
[05:09:44] *** Quits: begui (~begui@2600:1700:1950:5fa0:ff26:f069:b8c6:cc35) (Remote host closed the connection)
[05:12:08] *** Joins: begui (~begui@2600:1700:1950:5fa0:2111:8add:c49c:8143)
[05:14:48] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[05:16:16] <remii> I don't understand the proof for this theorem: https://i.imgur.com/bsbW29E.png, proof: https://i.imgur.com/YztcVXs.png
[05:17:49] <remii> Oh the O's are O matrices not the number 0 my bad.
[05:18:11] <remii> I guess we get the identity matrix because the second basis will map to 0 right?
[05:19:10] <remii> So [T]_\beta will only contain the coefficients from the linear combinations of the first basis.
[05:19:30] <remii> The linear combination of the second basis*
[05:21:14] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[05:22:52] <remii> Why are there three extra O matrices tho?
[05:34:52] <remii> It's really a matrix of n rows right?
[05:35:32] <PlanckWalk> And columns, yes
[05:36:04] <PlanckWalk> k may be less than n
[05:37:09] <PlanckWalk> So in general The I_k is a kxk block in the top left, and the other "O" matrices are three different sizes of blocks of zeroes.
[05:37:26] *** Joins: vysn (~vysn@user/vysn)
[05:37:41] <PlanckWalk> The top right is  k x (n-k),  bottom left is  (n-k) x k,  and bottom right is  (n-k) x (n-k).
[05:38:22] <PlanckWalk> (That is, they're all the necessary sizes to make the whole thing an  n x n  matrix)
[05:39:31] <remii> PlanckWalk Makes sense. How do I argue that the first basis creates a square matrix tho?
[05:40:08] <PlanckWalk> I_k is by definition a square matrix
[05:41:38] <PlanckWalk> All you need to do is verify that it maps the basis vectors for W to themselves, which is fairly obvious.
[05:42:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:42:51] *** Joins: Oli (~Unknown@user/oli)
[05:43:29] *** Quits: Oli (~Unknown@user/oli) (Client Quit)
[05:44:24] <remii> PlanckWalk Yea, so every basis can basically be represented as an identity matrix ?
[05:44:40] <PlanckWalk> No, why?
[05:44:40] <remii> Might be obvious but I just want to clarify.
[05:44:47] <remii> Sorry
[05:44:52] <PlanckWalk> The matrix represents a *transformation*
[05:44:53] <remii> I mean the standard ordered bases
[05:45:26] <PlanckWalk> In this case a projection
[05:46:37] <PlanckWalk> Every linear transformation is determined by what it does to basis vectors
[05:46:59] <PlanckWalk> In this case the basis vectors were chosen to make "what it does to basis vectors" really easy.
[05:48:37] <remii> You're right, got it now. Thanks :D
[05:48:37] *** Quits: twrk (~user@user/twrk) (Ping timeout: 240 seconds)
[05:49:17] <PlanckWalk> In some other ordered basis of V, the matrix might be much messier.
[05:49:58] *** Quits: AimHere (~David@vpn-fn-224.net.ed.ac.uk) (Ping timeout: 250 seconds)
[05:50:20] <remii> Yep, I was a bit confused throughout the day on the notation and stuff but it's getting clearer now.
[05:54:03] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[06:01:44] *** Quits: marloi2 (~mark@216.154.18.94) (Ping timeout: 256 seconds)
[06:01:48] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[06:03:12] <remii> PlanckWalk https://i.imgur.com/RVFDY0V.png why is this the motivation? for matrix multiplication.
[06:03:37] *** Joins: AimHere (~David@92.238.16.159)
[06:03:48] <remii> What is the usefulness of the matrix representation of the transformations so we need to define multiplication in such a way
[06:07:02] <PlanckWalk> Composition of transformations is very useful
[06:08:05] <PlanckWalk> Or I suppose more relevantly, a representation in which we coudl *not* compose them would be much less useful.
[06:08:53] *** Joins: frost (~frost@user/frost)
[06:08:53] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:08:55] <PlanckWalk> There are some such representations with more specialized uses.
[06:09:34] <remii> I see, and is this the real motivation behind multiplication, or are there others?
[06:09:44] <PlanckWalk> That's by far the biggest
[06:09:49] *** Quits: Guest4960 (~moses_@user/moses/x-1166525) (Remote host closed the connection)
[06:10:16] <PlanckWalk> That fact that it (and matrix inverse) also deal with change of basis is a nice bonus.
[06:18:16] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:18:33] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:28:03] *** Quits: soapsudsxx (~soapsudsx@209.221.40.136) (Remote host closed the connection)
[06:28:07] *** Quits: newwebdev13 (~newwebdev@31.210.55.74) (Quit: Leaving)
[06:29:02] *** Quits: xff0x (~xff0x@2001:1a81:524f:ad00:ca8e:e915:817b:c700) (Ping timeout: 260 seconds)
[06:29:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:30:50] *** Joins: xff0x (~xff0x@2001:1a81:5288:ea00:61bf:cfbd:ecf1:532b)
[06:31:42] *** Joins: marloi2 (~mark@216.154.18.94)
[06:37:22] <isekaijin> remii: The main two things that you might want to represent with matrices are linear transformations and bilinear forms.
[06:37:38] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[06:40:05] <isekaijin> remii: Matrices that represent linear transformations and bilinear forms interact differently with change of basis matrices. It's really worth it to understand both cases.
[06:41:25] <greenbagels> remii: the major results are honestly messier than the usefulness of matrix representation of linear maps in practice
[06:41:43] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:42:06] <greenbagels> but the messy algebra is also useful in more advanced / theoretical uses of matrices / linear maps
[06:42:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:42:20] <isekaijin> Mmm, what messy algebra are you thinking of?
[06:42:54] <greenbagels> algebra in the basic use of the word
[06:43:24] <greenbagels> messing with all these summations and indices and regrouping
[06:43:43] <isekaijin> Oh.
[06:44:51] <isekaijin> The only “issue” that I see with matrices is that they don't scale to situations where you would need three or more indices if using Einstein's notation.
[06:45:40] <isekaijin> But it's okay. Having a relatively simple notation that only handles common cases is very useful.
[06:47:28] <remii> Thanks, it's a pretty big chapter and I'm trying to get everything in order. There is one more thing tho, the following theorem: https://i.imgur.com/QbbCSu1.png The proof is not very appealing to me.
[06:47:39] <remii> I mean I *think* I wouldn't have come up with that proof myself.
[06:47:46] <remii> And also, how's g = Tf?
[06:48:35] *** Joins: BillyZane (~BillyZane@185.202.221.60)
[06:48:48] <remii> I hate when this book don't define everything in the theorem even if it's obvious what F is for example.
[06:48:54] <remii> doesn't*
[06:49:06] <remii> It literally triggers me.
[06:52:39] *** Quits: remii (~remii@h5-44-206-46.cust.a3fiber.se) (Quit: Client closed)
[06:53:23] *** Joins: remii (~remii@h5-44-206-46.cust.a3fiber.se)
[06:53:53] <isekaijin> The thing to understand here is that a basis {v1, ..., vm} of V corresponds to an isomorphism V -> F^m, where F is the ground field.
[06:54:32] <isekaijin> Moreover, there is a bijective correspondence between, on the one hand, ordered bases of V, and on the other hand, isomorphisms V -> F^m.
[06:54:42] <isekaijin> (Assuming that V is indeed m-dimensional, of course.)
[06:55:00] <isekaijin> So we can set up a cute diagram that is going to take me a while to draw.
[06:55:49] <remii> isekaijin They haven't introduced isomorphism yet.
[06:55:53] <remii> If we go by the book.
[06:55:56] <isekaijin> Oh.
[06:55:58] <remii> I know what it is tho.
[06:56:05] <remii> This stupid book really triggers me.
[06:56:09] <remii> Especially when tired.
[06:56:11] <greenbagels> what book?
[06:56:14] <isekaijin> Why on Earth would anyone talk about basis before talking about isomorphisms?
[06:56:19] <isekaijin> bases*
[06:56:27] <remii> Linear Algebra by Stephen H. Friedberg, Arnold J. Insel, Lawrence E. Spence
[06:56:41] <remii> Lucky I have Langs book too.
[06:57:23] <greenbagels> a basis is a perfectly reasonable idea to develop before coming up with isomorphisms
[06:57:23] <isekaijin> I'm afraid that your book's notation for the matrix that represents T sucks.
[06:58:29] <isekaijin> If the notation for the tuple representation of u (resp. T(u)) is [u]_b (resp. [T(u)]_g), then the notation for the matrix representation of T should be [T]_g^b.
[06:59:00] <isekaijin> Although I would rather write the tuple representation of u as [u]^b and keep the matrix representation of T as in your book.
[07:01:17] <remii> I have literally gone mad the past 3 days on how to interpret [T]_{\beta}^{\gamma}
[07:01:36] <remii> Because I get so tired when I read this book like it's so dry.
[07:01:46] <remii> And so not enjoyable.
[07:02:35] *** Joins: frelleck (~frelleck@user/frelleck)
[07:07:12] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[07:07:23] *** Joins: Azem (~haise01@user/haise01)
[07:07:27] <isekaijin> The reason why I think that the index b should appear in different positions in [u]^b and [T(u)]_b^g is to remind you that the change of basis matrix is multiplied on the left side for superindices, and on the right side for subindices.
[07:07:37] <isekaijin> (Assuming that [u]^b is a column vector.)
[07:08:09] *** Quits: raekye (~raekye@creatifcubed.com) (Remote host closed the connection)
[07:10:13] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:11:23] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:12:17] *** Joins: seninha (~seninha@user/seninha)
[07:25:49] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:27:28] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[07:28:13] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Ping timeout: 240 seconds)
[07:29:19] *** Quits: marloi2 (~mark@216.154.18.94) (Ping timeout: 256 seconds)
[07:36:22] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[07:36:39] *** Joins: D5n9sMatrix (~D5n9sMatr@177.72.180.186)
[07:38:30] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:39:55] *** Quits: remii (~remii@h5-44-206-46.cust.a3fiber.se) (Quit: Client closed)
[07:45:18] *** Joins: arschus (~arschus@wsip-184-178-59-112.ok.ok.cox.net)
[07:45:57] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[07:51:06] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[07:51:39] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[07:55:39] *** Quits: arschus (~arschus@wsip-184-178-59-112.ok.ok.cox.net) (Quit: Client closed)
[08:00:07] *** Joins: off^ (~off@50.235.176.163)
[08:03:56] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:06:21] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[08:20:34] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[08:22:35] *** Joins: hankillo (~hankillo@186.136.87.139)
[08:23:04] *** Quits: hankillo (~hankillo@186.136.87.139) (Client Quit)
[08:28:58] *** Joins: notzmv (~zmv@user/notzmv)
[08:32:00] <ProfSimm> Is there an operator in math that takes a function, and deconstructs it to data representing its expression, or maybe part of its expression. The opposite of partial application
[08:33:42] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:40:15] *** Joins: mybbgirl (~mybbgirl@188.25.57.254)
[08:41:08] *** Joins: off^ (~off@50.235.176.163)
[08:41:46] *** Joins: _Wowbagger_ (~Wowbagger@208.110.111.180)
[08:42:18] <isekaijin> ProfSimm: Given a function, in general, it isn't possible to reconstruct an expression such that, when you evaluate this expression, you're computing the function.
[08:42:56] <isekaijin> ProfSimm: There might be no such expression. And if it exists, it needn't be unique.
[08:43:28] *** Quits: mybbgirl (~mybbgirl@188.25.57.254) (K-Lined)
[08:43:32] <ProfSimm> isekaijin: if you mean functions in general as a black box, sure, but let's talk about a subset of functions that have a "deconstruct me to this" expression embedded inside
[08:44:39] <ProfSimm> isekaijin: in particular, if you make a function by partially applying another wouldn't this imply you can "unapply" it
[08:44:53] <isekaijin> ProfSimm: Not necessarily.
[08:44:56] <ProfSimm> Why not
[08:45:24] <isekaijin> It is possible to have a function f(x,y) such that, say, f(1,y) = f(2,y) for all y.
[08:45:30] <ProfSimm> foo 1 2 3  --->  foo 1 2   --->  foo 1   ---> foo
[08:45:30] <isekaijin> Errr, wait.
[08:46:02] <isekaijin> Okay, if you think this ought to exist, why don't *you* provide a plausible reason why you think this is the case?
[08:47:04] <ProfSimm> isekaijin: well if we see partial application as a list of terms, we're just popping them off in reverse, like a stack
[08:47:21] <isekaijin> Suppose I tell you that f : R^2 -> R is such that f(1,y) = 1 + y. How do you plan to reconstruct f from this information?
[08:47:23] <ProfSimm> isekaijin: sorry I know it's not mathematical to say that
[08:47:57] <isekaijin> Can you tell me, using only the information I gave you, what f(2,y) ought to be?
[08:48:20] <ProfSimm> isekaijin: I'm not saying every function is infinitely deconstructible
[08:48:39] <isekaijin> What do you even mean by “deconstructible”? Stick to standard terminology.
[08:50:37] <isekaijin> I'm running out of patience with you. If you actually want to learn, then you must (a) have a much humbler attitude, (b) accept that things don't always work according to your preconceived notions, (c) if you have “hunches”, then you must at least provide reasonable justification why your “hunches” are reasonable.
[08:57:28] <isekaijin> Damn, remii is gone.
[08:57:42] <mornfall> (let's start with the fact that there are only countably many expressions, but uncountably many functions… clearly, most functions cannot be written down)
[08:58:06] <ProfSimm> isekaijin: I have no hunches, I just asked if there's something in math that is in effect the opposite of partial application
[08:58:36] <mornfall> (let alone ‘deconstructed’)
[08:59:21] <ProfSimm> mornfall: this is bit like me asking "can we say red balls are balls" and the answer being "no, because not all balls are red"
[08:59:37] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 240 seconds)
[08:59:56] <ProfSimm> This is not intended to be something you can apply to any function
[09:00:07] <ProfSimm> Just a subset of functions constructed in a specific way
[09:00:16] <ProfSimm> Namely, partial application.
[09:00:17] <mornfall> then it's not a property of functions, though
[09:00:34] <mornfall> but rather of expressions that tell you how to compute things
[09:00:35] <ProfSimm> mornfall: I'm OK with that. What is the set of partially applied functions called
[09:00:47] <mornfall> a programming language?
[09:00:54] <ProfSimm> Hm
[09:01:23] <isekaijin> Given a function f : B -> C, there's no way to tell that you have obtained f by partially applying some other function g : A x B -> C.
[09:01:37] <isekaijin> At least not from f alone.
[09:01:45] <isekaijin> Maybe if you have additional information, but that's not part of f itself.
[09:02:05] <mornfall> obviously, functions don't have any structure; they just take values and give new values back
[09:02:43] <ProfSimm> Isn't this restriction an arbitrary choice about what a function is though
[09:03:04] <mornfall> are we arguing about definitions again?
[09:03:30] *** Quits: emerent (~quassel@p200300cd570443d9ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:03:50] <_Wowbagger_> I got lost at red balls aren't balls.
[09:03:59] <mornfall> you can perhaps call those subroutines, to avoid this kind of confusion, in a math context
[09:04:16] <mornfall> you seem to think that there's an expression buried somewhere inside a function
[09:04:18] <mornfall> this is not the case
[09:04:22] *** Joins: emerent (~quassel@p200300cd57044359ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:05:09] <ProfSimm> mornfall: I don't think that. But technically there's an expression burried in a partially applied function, even if you can't prove it, because it's in the method of its creation
[09:05:10] <mornfall> functions are semantic objects – values – and not a piece of syntax, or machinery for computing (evaluating) things
[09:06:01] <ProfSimm> mornfall: calling it subroutines is fine
[09:06:03] <mornfall> functions don't need to have any ‘history’ or ‘method of creation’… that's a bit like saying that water has memory :-)
[09:06:31] <ProfSimm> mornfall: don't need to have doesn't imply doesn't have
[09:06:55] <mornfall> yeah, bad wording; they don't have it
[09:07:11] <mornfall> it's nowhere to be found in the object that we call a function
[09:07:15] <ProfSimm> mornfall: doesn't that contradict many methods of creating a function, such as function composition
[09:07:29] <mornfall> not at all
[09:07:37] <ProfSimm> Interesting.
[09:08:26] <isekaijin> ProfSimm: Suppose I give you a number, say, 2. I have computed this number using some procedure unknown to you. It might have been, say, 1 + 1, or sqrt(4), or floor(length("hello") / 2), or whatever. All that you have is the number 2. Do you have some way to tell how I computed 2?
[09:08:44] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[09:09:01] <isekaijin> The situation with finding how a function might have been defined is exactly the same.
[09:09:04] <mornfall> you are not _creating_ functions through composition… saying f = g ∘ h does not create anything, it's a statement about equality of two objects
[09:09:14] <ProfSimm> isekaijin: that's beside the point. I may have skipped biology lessons in class, but it doesn't mean you have no organs.
[09:09:45] <ProfSimm> mornfall: ok I see what you're saying
[09:10:00] <ProfSimm> mornfall: but what is g ∘ h as an object then
[09:10:03] <_Wowbagger_> Is nobody else stuck on red balls aren't balls?
[09:10:16] <mornfall> ProfSimm: if isekaijin here is an amorphous blob of water, it does in fact mean they have no organs
[09:10:25] <mornfall> ProfSimm: functions happen to be amorphous blobs of… stuff
[09:11:33] <mornfall> ProfSimm: composition is a useful operation on functions, just like addition is a useful operation on numbers
[09:11:40] *** Quits: D5n9sMatrix (~D5n9sMatr@177.72.180.186) (Quit: Client closed)
[09:11:44] <mornfall> ProfSimm: (though multiplication is probably a better analogy…)
[09:12:16] <mornfall> as isekaijin said, you don't ascribe to 4 the ‘structure’ 2 + 2
[09:12:29] <ProfSimm> _Wowbagger_: well they're balls don't worry about it. My point is I wanted to know if we have an operator we can apply on subset of functions to expose part of their expression, without claiming all functions contain one. And I was told no function contains expression because not all can be described with an expression
[09:12:36] <mornfall> 4 doesn't have any structure in it; neither does f
[09:13:20] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.191)
[09:13:20] <ProfSimm> _Wowbagger_: and frankly it seems we're still stuck there
[09:13:28] *** Quits: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[09:13:45] <_Wowbagger_> Meh
[09:14:00] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[09:14:57] <mornfall> functions don't contain expressions; not even a subset - none of them do
[09:15:39] <mornfall> again, 4 = 2 + 2 is the same kind of statement as f = g ∘ h
[09:16:37] <mornfall> (they even form the same structure with that operation, a monoid)
[09:17:10] <mornfall> same kind of*
[09:17:45] *** Quits: _Wowbagger_ (~Wowbagger@208.110.111.180) (Quit: Bye)
[09:19:21] <isekaijin> Monoids are utterly irrelevant here. All that matters is that the information contained in a function is (a) the domain, (b) the codomain, (c) for each element of the domain, a unique element of the codomain. If what you're seeking can't be obtained from these three, then it can't be obtained from a function, assuming that the function is the only given.
[09:20:29] <isekaijin> And if you have extra information, then you have to say what that extra information is, before we can use it.
[09:20:59] <isekaijin> (... which is basic common sense, really.)
[09:21:34] <ProfSimm> Well I'm ready to abandon the term function. Let's think about a composite transform that accepts argument(s) and has result(s), and which can be decomposed.
[09:22:07] <isekaijin> You need to define the terms you're using, since they're completely nonstandard.
[09:22:29] <mornfall> i still think ProfSimm is just trying to describe a program in lofty math terms
[09:22:56] <ProfSimm> mornfall: it's not limited to programs, and maybe not all programs subscribe to the idea of being an expression
[09:23:10] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[09:23:15] <ProfSimm> But I suppose it's about computation
[09:24:05] <mornfall> they actually pretty much do; programs compute functions (programs in the science-y sense, anyway)
[09:25:30] <mornfall> there are many formalisms for writing programs down, of course, but giving their semantics in terms of functions which they compute is pretty universal
[09:26:56] <mornfall> turing machines and rams and such indeed don't have expressions, so they are probably not very suitable for what you are trying to do
[09:27:37] <mornfall> rewriting systems are probably a better match (e.g. some variant of lambda calculus)
[09:28:00] <ProfSimm> mornfall: I'm trying to express an object that isn't an opaque function alone, but on top of being a function, it has also introspective structure
[09:28:15] <mornfall> (can we stop with the functions already?)
[09:28:44] <mornfall> programs are made of syntax; that means thay have the structure that you are after
[09:28:57] <ProfSimm> mornfall: I'm trying to express an object that isn't an opaque [censored] alone, but on top of being a [censored], it has also introspective structure
[09:28:57] <mornfall> expressions can be naturally decomposed into smaller expressions
[09:29:19] <mornfall> whatever
[09:29:45] <isekaijin> ProfSimm: Then it isn't a [censored] anymore. It is the [introspective structure].
[09:29:53] <ProfSimm> mornfall: the problem is how do I name an expression as a single unit
[09:30:02] <ProfSimm> mornfall: can i name an expression
[09:30:36] <mornfall> you can have a language (syntax) with bindings, sure
[09:31:22] <ProfSimm> Well I can talk about this purely from programming/system modeling perspective but I really wanted to get help on pointing me to some mathematical definition of that notion so I can read about it
[09:32:21] <ProfSimm> Hmm we can actually talk about a mathematical closure
[09:32:40] <isekaijin> mornfall: Roughly 40 minutes ago, I realized that maybe this brain damage is caused by programming languages calling “functions” things that aren't actual functions. Particularly offensive are the ones that give each “function” object identity. (I'm looking at you, Lisp.)
[09:32:51] <isekaijin> an* object identity
[09:32:58] <ProfSimm> the "thing" will always produce a subset of the members of the "root" function it applies parameters to (partially)
[09:33:24] <ProfSimm> So it's a closure
[09:33:41] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[09:33:53] <mornfall> isekaijin: yeah, to add insult to injury, most programming functions don't even compute functions of their arguments
[09:34:36] <ProfSimm> So if you don't kill me I can try to attempt to define it as an operation that takes a closure, and returns a function that the closure closes over (i.e. a strict superset of its results)
[09:35:04] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[09:35:27] <mornfall> (i have no idea what you mean by closure, but probably not the thing i imagine, i.e. a transitive/symmetric/… closure of a relation)
[09:35:31] <ProfSimm> But I guess closures also have no structure, they're just abstract notions which happen to produce a subset of the results of another function
[09:36:22] <mornfall> ProfSimm: i think you want to study denotational semantics for a bit
[09:36:29] <isekaijin> rofl
[09:36:46] <ProfSimm> mornfall: I need to, but I don't really want to
[09:37:09] <mornfall> it'd do you a lot of good to actually understand that
[09:37:44] <ProfSimm> By the time I start talking about how a monoid is a semigroup with an identity element, but it can also be thought of as a magma with associativity and identity, I'd have forgotten what I was thinking about initially.
[09:38:17] <isekaijin> Closures aren't abstract. A closure is a concrete data structure that represents an abstract first-class function. But, if you can inspect a closure, then you aren't working with the function abstraction anymore.
[09:38:21] <mornfall> studying takes patience, and time
[09:38:22] <ProfSimm> My best bet is to prototype things on a computer and let smarter people figure out why it works
[09:38:47] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:38:52] <mornfall> (or, more likely, show why it doesn't)
[09:39:02] <ProfSimm> Oh it does.
[09:39:09] <mornfall> right :-)
[09:39:10] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[09:39:33] <isekaijin> Suppose you represent a stack as an array. If you take a “stack” and then start inspecting arbitrary elements in the middle of the array that represents it, then you really aren't working with a stack - you're working with the array that represents it.
[09:39:33] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:39:34] <ProfSimm> mornfall: well do popular idioms of programming "work" in your opinion, for modelling systems of behavior.
[09:39:48] *** Quits: smile (uid510004@user/smi) (Quit: Connection closed for inactivity)
[09:39:49] <ProfSimm> I suppose a mathematician could apply arbitrarily rigorous standards to prove they don't work
[09:39:57] <ProfSimm> But reality is like that. Doesn't care.
[09:40:01] <isekaijin> The situation with functions and closures is entirely analogous.
[09:40:15] *** Joins: shlomif (~shlomif@inkscape/dev/shlomif)
[09:40:29] <mornfall> ProfSimm: i think you are going to be disappointed
[09:40:45] <isekaijin> If you take a “function” and unpack the closure that represents it, then you aren't working with the “function” anymore - you're working with the closure that represents it.
[09:41:03] <mornfall> also, most of this has been pretty well understood for a while, you just need to take time to study it
[09:41:06] <ProfSimm> isekaijin: I agree, but that's kind of the point
[09:41:08] <mornfall> cue denotational semantics
[09:41:16] <isekaijin> This is utterly obvious, and it doesn't require a Ph.D. in CS or math to understand.
[09:41:46] <ProfSimm> isekaijin: you work with an abstraction that's intentionally limited in some way, but you can unpack it to a more general abstraction that provides a strict superset of the results of the previous abstraction
[09:41:58] *** shlomif is now known as rindolf
[09:41:59] <isekaijin> ProfSimm: “I agree”... the beginning of this conversation doesn't... uh... highlight your agreement very well.
[09:42:05] <ProfSimm> isekaijin: you can still use an array as a stack (if less efficient one)
[09:42:30] <isekaijin> ProfSimm: It's not a “superset”, it's simply different.
[09:42:50] <ProfSimm> isekaijin: it is different. But let's call it then you can emulate one through the other
[09:43:01] <isekaijin> ProfSimm: If you inspect, say, a red-black tree, and start recoloring nodes in ways that violate the RBT invariants, then you aren't working with RBTs anymore.
[09:43:04] <ProfSimm> isekaijin: or is the concept of emulation equivalence not math
[09:43:07] <mornfall> (it's frankly quite shocking how many useful, practical things cannot be done in general, and provably so)
[09:44:04] <mornfall> (you mean simulation? that's another well studied concept, studied in the context of automata and process algebras and such)
[09:44:42] <ProfSimm> OK I suppose many of you program, can I use design patterns to illustrate a point more succinctly
[09:45:11] *** Joins: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[09:45:22] <isekaijin> ProfSimm: The fact that you can implement X in terms of Y doesn't mean that Y is a “superset” of X or anything. What makes X an X is the fact that it has the abstract properties of an X.
[09:45:42] <isekaijin> If you break abstraction, then you don't have X anymore, period.
[09:45:47] <isekaijin> break the* abstraction
[09:46:08] *** Quits: xff0x (~xff0x@2001:1a81:5288:ea00:61bf:cfbd:ecf1:532b) (Ping timeout: 250 seconds)
[09:46:16] <isekaijin> Unfortunately, this is something that Lispers (and, more generally, dynamic typers) always fail to understand.
[09:46:21] <ProfSimm> Let's say you have an API that can do a set X of things. But it's very elaborate and particular about it. So what do you do? You write a Facade for it. A simpler abstraction, that is strictly implement VIA the API, and returns strictly a SUBSET of the original API's results.
[09:46:23] <mornfall> all computation a computer can do can be done on a machine with two counters; if all you care about is ‘can do’ then that's where the story ends, pretty much
[09:46:29] <ProfSimm> With me so far?
[09:47:02] *** Joins: xff0x (~xff0x@2001:1a81:5288:ea00:6fee:3fb4:5f11:904c)
[09:47:16] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[09:48:42] <ProfSimm> Anyone? :P
[09:50:59] <ProfSimm> Oh well.
[10:24:15] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[10:27:06] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:28:52] *** Joins: off^ (~off@50.235.176.163)
[10:29:17] *** Joins: baracurda (~baracurda@user/parserblabla)
[10:31:58] *** Joins: noob43 (~noob@host-20-94.txhoash.houston.tx.us.clients.pavlovmedia.net)
[10:47:32] *** Joins: audiobirb (~audio@user/audio)
[10:49:36] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[10:49:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[10:50:50] *** Joins: D5n9sMatrix (~D5n9sMatr@177.72.180.186)
[10:51:10] <D5n9sMatrix> 1.1 Logic and Sets
[10:51:10] <D5n9sMatrix> Let A and B be statements. The negation of A is the statement (not A),
[10:51:11] <D5n9sMatrix> the both of A and B is the statement (A and B), and the either of A and B is the
[10:51:11] <D5n9sMatrix> statement (A or B). The statement (A or B) does not contradict (A and B), that
[10:51:12] <D5n9sMatrix> is, the word “or” is inclusive. Every statement is assumed to be either true or false;
[10:51:12] <D5n9sMatrix> likewise, no statement can be both true and false.
[11:02:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:05:12] *** Quits: frelleck (~frelleck@user/frelleck) ()
[11:11:06] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Read error: Connection reset by peer)
[11:11:50] *** Joins: ppw (~ppw@user/ppw)
[11:18:19] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[11:19:25] *** Joins: emf (~emf@2620:10d:c090:400::5:a68a)
[11:19:57] *** Quits: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:21:29] *** Joins: soapsudsxx (~soapsudsx@209.221.40.136)
[11:22:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:24:30] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[11:26:42] *** Quits: noob43 (~noob@host-20-94.txhoash.houston.tx.us.clients.pavlovmedia.net) (Quit: Client closed)
[11:27:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:27:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[11:29:40] *** Joins: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[11:31:15] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:35] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:32:22] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[11:34:13] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[11:34:54] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.191) (Ping timeout: 272 seconds)
[11:35:18] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:36:42] *** Quits: Batzy (~quassel@user/batzy) (Read error: Connection reset by peer)
[11:40:48] *** Quits: emf (~emf@2620:10d:c090:400::5:a68a) (Quit: emf)
[11:43:20] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[11:43:36] *** Joins: emf (~emf@2620:10d:c090:400::5:5ef1)
[11:43:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[11:44:35] *** Joins: Batzy (~quassel@user/batzy)
[11:44:52] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Quit: Konversation terminated!)
[11:45:40] *** Quits: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[11:47:40] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:48:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:50:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:51:48] *** Quits: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com) (Quit: leaving)
[11:51:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[11:53:16] *** Quits: AimHere (~David@92.238.16.159) (Ping timeout: 272 seconds)
[11:56:02] *** Joins: cachew[m] (~cachewmat@2001:470:69fc:105::e886)
[11:56:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[12:02:38] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[12:03:59] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:05:03] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[12:05:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:06:07] *** Joins: AimHere (~David@vpn-fn-230.net.ed.ac.uk)
[12:06:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:09:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:10:57] *** Quits: D5n9sMatrix (~D5n9sMatr@177.72.180.186) (Ping timeout: 256 seconds)
[12:11:00] *** Quits: baracurda (~baracurda@user/parserblabla) (Quit: Leaving)
[12:11:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[12:13:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:13:53] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.191)
[12:23:21] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[12:24:37] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.191) (Ping timeout: 240 seconds)
[12:26:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[12:35:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:42:26] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[12:43:12] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Client Quit)
[12:43:19] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[12:48:22] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[12:50:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:52:19] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:52:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[12:55:07] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:57:08] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[12:57:25] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[12:57:41] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[13:01:43] *** Quits: xff0x (~xff0x@2001:1a81:5288:ea00:6fee:3fb4:5f11:904c) (Ping timeout: 256 seconds)
[13:02:14] *** Joins: xff0x (~xff0x@2001:1a81:5288:ea00:43ab:35e6:a5cd:7882)
[13:08:40] *** Joins: X-Scale` (~ARM@66.26.54.77.rev.vodafone.pt)
[13:11:18] *** Quits: X-Scale (~ARM@31.22.166.28) (Ping timeout: 260 seconds)
[13:11:19] *** X-Scale` is now known as X-Scale
[13:11:22] *** Joins: andreasbuhr (~quassel@p5dcf94ab.dip0.t-ipconnect.de)
[13:11:22] *** Quits: andreasbuhr (~quassel@p5dcf94ab.dip0.t-ipconnect.de) (Client Quit)
[13:12:01] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Read error: Connection reset by peer)
[13:13:01] *** Joins: evilscreww (~evilscrew@user/evilscreww)
[13:16:07] *** Joins: mbuf (~Shakthi@117.96.194.162)
[13:17:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[13:22:07] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 256 seconds)
[13:26:12] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f8af:7e9a:b154:2753)
[13:26:17] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[13:28:29] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[13:36:29] *** Joins: qbt (~edun@user/edun)
[13:38:22] *** Joins: X-Scale` (~ARM@92.250.98.59)
[13:39:37] *** Quits: X-Scale (~ARM@66.26.54.77.rev.vodafone.pt) (Ping timeout: 240 seconds)
[13:39:42] *** X-Scale` is now known as X-Scale
[13:40:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:44:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[13:44:16] *** Joins: cheater (~Username@user/cheater)
[13:44:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:46:24] *** Quits: specing (~specing@user/specing) (Ping timeout: 256 seconds)
[13:46:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[13:46:50] *** Quits: soapsudsxx (~soapsudsx@209.221.40.136) (Remote host closed the connection)
[13:47:07] *** Joins: specing (~specing@user/specing)
[13:50:41] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[13:51:11] *** Joins: cadmio (~cadmio@151.35.130.107)
[13:51:14] <cadmio> Hello
[13:55:17] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[13:55:54] <cadmio> I don't understand why in the "difference of power formula" here https://gioretikto.github.io/mat/algebra/wilson.html#fermat_numbers the term "2^r" has a negative sign
[13:57:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:15] *** Joins: newwebdev13 (~newwebdev@31.210.55.74)
[14:00:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:01:09] *** Azem is now known as Emet-Selch
[14:01:34] *** Joins: savask (~savask@Powder/Developer/savask)
[14:02:06] <cadmio> when the exponent is even the term should be positive
[14:02:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:02:58] *** Quits: newwebdev13 (~newwebdev@31.210.55.74) (Read error: Connection reset by peer)
[14:08:09] *** Joins: newwebdev13 (~newwebdev@78.135.92.22)
[14:10:37] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:10:49] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[14:11:26] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[14:22:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:22:17] *** Joins: vysn (~vysn@user/vysn)
[14:22:57] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[14:23:02] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[14:24:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:26:27] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:27:16] *** Joins: mickey8 (~user@user/mickey)
[14:32:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:32:57] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[14:33:28] *** Joins: Guest33Zemansky (~Guest33Ze@2001:8a0:65b0:900:80e1:2f9e:cf6b:7aa8)
[14:33:29] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:33:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:33:59] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[14:34:18] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[14:34:24] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:36:18] *** Lord_of_Life_ is now known as Lord_of_Life
[14:37:16] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[14:38:51] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Ping timeout: 256 seconds)
[14:39:02] *** Joins: Guest84 (~Guest84@120.229.102.130)
[14:39:23] *** Parts: Guest84 (~Guest84@120.229.102.130) ()
[14:44:58] *** Joins: Koen (~Koen@252.248.88.92.rev.sfr.net)
[14:46:29] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[14:49:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:54:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:56:01] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[14:59:18] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:00:42] *** Quits: nullcone (uid11626@id-11626.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:01:12] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Ping timeout: 256 seconds)
[15:05:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:05:58] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:9dc1:973b:d45b:47d7)
[15:06:03] *** Quits: Guest33Zemansky (~Guest33Ze@2001:8a0:65b0:900:80e1:2f9e:cf6b:7aa8) (Ping timeout: 256 seconds)
[15:07:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:10:03] *** Joins: Jordy (~jordy@user/jordy)
[15:13:12] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[15:20:51] *** Quits: cadmio (~cadmio@151.35.130.107) (Quit: WeeChat 3.0)
[15:22:05] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[15:26:55] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[15:28:36] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Ping timeout: 272 seconds)
[15:29:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:31:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:34:41] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[15:40:00] *** Joins: newwebdev132 (~newwebdev@78.135.92.22)
[15:40:08] *** Joins: widp (~user@124.123.104.227)
[15:40:17] *** Quits: newwebdev13 (~newwebdev@78.135.92.22) (Ping timeout: 240 seconds)
[15:41:04] <widp> is a [n] dim tensor different from [n,1] dim tensor
[15:41:11] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Ping timeout: 256 seconds)
[15:42:11] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[15:42:19] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[15:45:27] *** Joins: magla (~gelignite@d536720f.access.ecotel.net)
[15:47:39] <lericson> no
[15:47:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:47:46] <lericson> well
[15:47:48] <lericson> yes
[15:50:04] *** Joins: Xardas (~Xardas@149.233.51.127)
[15:50:07] <widp> why?
[15:50:35] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:9dc1:973b:d45b:47d7) (Ping timeout: 256 seconds)
[15:51:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:52:18] <lericson> it has a higher order
[15:52:18] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:52:42] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:53:05] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:53:40] *** Joins: Simplar (~Simplar@188.163.93.241)
[15:54:02] <Simplar> https://math.stackexchange.com/a/4381011/827073 here is my own answer to my own question. I will be happy with some advises to improve my wording.
[15:54:06] <int-e> [1] is multiplication of a scalar by a constant; [1,1] is the product of two scalars and a constant
[15:55:08] *** Cyp_ is now known as Cyp
[15:55:09] <int-e> (but they have the same data (the constant))
[15:55:16] *** Joins: tkkon (~tkkon@user/tkkon)
[15:55:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:56:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:58:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:00:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[16:06:21] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[16:07:14] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Ping timeout: 272 seconds)
[16:12:59] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[16:13:47] <widp> int-e: I don't get it
[16:22:10] *** Joins: marloi2 (~mark@216.154.18.94)
[16:23:20] *** Quits: marloi2 (~mark@216.154.18.94) (Remote host closed the connection)
[16:23:22] *** Joins: Klinda (~superleag@user/klinda)
[16:23:40] *** Joins: marloi2 (~mark@216.154.18.94)
[16:24:11] <widp> I sort of get it now
[16:29:10] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:29:25] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:31:09] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:35:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[16:37:57] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[16:39:04] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[16:43:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:45:28] *** Quits: xelxebar (~xelxebar@aj175037.dynamic.ppp.asahi-net.or.jp) (Quit: WeeChat 3.4)
[16:45:41] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:47:00] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:02:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:05:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:06:41] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[17:09:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[17:10:24] *** Quits: marloi2 (~mark@216.154.18.94) (Ping timeout: 256 seconds)
[17:11:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:13:17] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 240 seconds)
[17:19:34] *** Joins: xkuru (~xkuru@user/xkuru)
[17:21:40] <joel135> are there some relationships between the finite fields of size p^n and p^m ?
[17:23:43] *** Joins: esther (~esther@2607:fb90:20d7:a8c2:cd04:b982:d90:a07c)
[17:24:01] <joel135> i guess i should think about the fact that all algebraic extensions of F_{p^n} are of the form F_{p^m}
[17:25:39] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8039)
[17:27:57] *** Quits: esther (~esther@2607:fb90:20d7:a8c2:cd04:b982:d90:a07c) (Ping timeout: 240 seconds)
[17:28:23] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:37:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:37:26] *** Joins: Pickchea (~private@user/pickchea)
[17:42:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:43:25] *** Joins: marloi2 (~mark@216.154.18.94)
[17:45:49] *** Quits: evilscreww (~evilscrew@user/evilscreww) (Quit: Connection closed)
[17:46:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:47:02] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[17:48:09] <gurkenglas> Given block matrix M=((A B) (C D)), how could one rewrite det(A)*det(D)/det(M) or equivalently logdet(A)+logdet(D)-logdet(M)?
[17:52:45] *** Joins: D5n9sMatrix (~D5n9sMatr@177.72.178.198)
[17:56:35] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[17:57:28] *** Joins: jamtorus (~quassel@cBC66BF51.dhcp.as2116.net)
[17:59:26] <D5n9sMatrix> buffer push Let k > 0 and n < 0 to  statements figure in elements  columns and rows mxn to the productivity of partial method to lance the perfect method programmatically to string formed adequation to the ambient of interface graphic in relation the elements:
[18:00:27] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[18:00:33] *** Quits: jellydonut (~quassel@cBC66BF51.dhcp.as2116.net) (Ping timeout: 250 seconds)
[18:00:58] <D5n9sMatrix> A = [11, 12, 13; 21, 22, 23; 31, 32, 33]
[18:02:29] *** Joins: Guest33Zemansky (~Guest33Ze@2001:8a0:65b0:900:3480:e87a:d96:d6ba)
[18:02:56] <Z-module> joel135: the main relationship is that, with the particular prime p fixed, F_{p^m} embeds as a field inside F_{p^n}  iff  m | n, and does so in a unique way when it happens.
[18:03:10] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[18:04:20] <Z-module> joel135, and yes, all *finite* algebraic extensions are of that form, but there are infinite algebraic extensions too: the algebraic closure of a finite field, and its uncountably many distinct infinite subfields.
[18:05:49] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[18:06:07] *** Joins: bosspotato (~bosspotat@lnsm5-montreal02-142-118-105-142.internet.virginmobile.ca)
[18:06:07] *** Quits: bosspotato (~bosspotat@lnsm5-montreal02-142-118-105-142.internet.virginmobile.ca) (Changing host)
[18:06:07] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[18:07:04] <am1985> Does anyone know in Mathematica how I can take an expression like r'[t] + r[t] and substitute in a function for r[t] so that the derivative is evaluated and I get the resulting expression?
[18:07:59] <am1985> e.g., r'[t] + r[t] /. r[t] /. r[t]->1
[18:08:07] <am1985> I would want "1" out of that but I get "1 + r'[t]"
[18:08:26] <am1985> I tried a few variations on the substitution like r[t_] -> 1, r[t_] :> 1, but neither seems to work
[18:08:47] *** Quits: marloi2 (~mark@216.154.18.94) (Ping timeout: 250 seconds)
[18:10:33] *** Joins: frost (~frost@user/frost)
[18:12:29] <joel135> Z-module: (1) don't you mean p^m | p^n? (2) is it really unique?
[18:12:31] <am1985> Got it -- replace the variable "r" itself rather than "r[t]", like r -> (1&)
[18:14:15] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[18:14:43] <joel135> gurkenglas: you can use https://en.m.wikipedia.org/wiki/Schur_complement to cancel det(A) against one factor of det(M)
[18:15:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[18:15:35] *** Joins: NEYi (~NEYi@109.251.216.38)
[18:17:16] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[18:17:34] <Z-module> joel135:  no, if m <= n then p^m *always* divides p^n, but if m doesn't | n then the number  |F_{p^n}| = p^n  is not of the form  |F_{p^m}|^k = p^(mk)  for any k, so F_{p^n} can't have any subfield of size p^m.  L < K  both finite always gives |K:L| = some power of |L|, that power being the integer |K|/|L|.
[18:18:20] <Z-module> joel135: and yes, uniqueness comes in various ways, my favorite being:  The multiplicative group of a finite field is cyclic, and all finite cyclic groups have a *unique* subgroup of each possible order.
[18:19:29] <Z-module> Oh, that doesn't get uniqueness of the embedding... hmm. I wonder if I goofed on that fact.
[18:19:37] <Z-module> (It gets uniqueness of the image, of course.)
[18:19:49] <joel135> right, thanks
[18:24:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[18:26:02] *** Joins: someone235 (uid419897@id-419897.ilkley.irccloud.com)
[18:26:19] <blackfield> another way of arguing it could be n=[F_{p^n}:Z_p]=[F_{p^n}:F_{p^m}]*[F_{p^m}:Z_p]=[F_{p^n}:F_{p^m}]*m -> m|n
[18:30:36] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:34:34] *** Quits: Guest33Zemansky (~Guest33Ze@2001:8a0:65b0:900:3480:e87a:d96:d6ba) (Quit: Client closed)
[18:35:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:40:56] *** Joins: marloi2 (~mark@216.154.18.94)
[18:43:03] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:43:39] *** Quits: Koen (~Koen@252.248.88.92.rev.sfr.net) (Ping timeout: 256 seconds)
[18:45:14] *** Joins: Koen (~Koen@252.248.88.92.rev.sfr.net)
[18:46:51] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:53:02] *** Joins: rtsn (~nstr@user/rtsn)
[18:56:31] <Z-module> joel135: yeah, write F_4 as {0, 1, a, a+1} where a^2 + a + 1 = 0.  Pick any embedding of this into F_16. Then swapping the images of a and a+1 gives a distinct such embedding, of course.
[18:57:36] <Z-module> of course a and a+1 are mutual inverses in F_4
[19:05:06] *** Quits: D5n9sMatrix (~D5n9sMatr@177.72.178.198) (Quit: Client closed)
[19:05:08] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[19:06:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:15:42] *** jamtorus is now known as jellydonut
[19:19:03] *** Quits: mbuf (~Shakthi@117.96.194.162) (Quit: Leaving)
[19:20:30] *** EdwardH is now known as EdwardHaas
[19:26:25] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[19:26:43] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:39:31] *** Joins: andreasbuhr (~quassel@p5dcf94ab.dip0.t-ipconnect.de)
[19:39:34] *** Quits: andreasbuhr (~quassel@p5dcf94ab.dip0.t-ipconnect.de) (Client Quit)
[19:39:52] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.191)
[19:41:20] *** Joins: WhO (~V@103.240.170.227)
[19:42:22] *** Joins: z4kpi (~z4kpi@user/zacts)
[19:44:32] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 256 seconds)
[19:47:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:50:05] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[19:50:42] <z4kpi> hello ##math
[19:52:26] <biberao> hi
[19:54:34] <Z-module> joel135: hmm, in other words, the map on F_4 that sends 0 to 0 and every other x to 1/x is a field automorphism. I think I might never have known before that the *only* fields (finite or not) where that holds are F_4, F_3, and of course F_2 where that map is just the identity.
[19:55:37] <Z-module> (which it also is on F_3)
[19:56:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[19:59:09] <joel135> cool factoid
[19:59:47] <Z-module> It's easy; I'm a bit surprised it's not an exercise in more intro algebra books.
[19:59:55] <z4kpi> good morning ##math
[20:00:10] <z4kpi> I'm trying to understand epsilon/delta proofs just a bit
[20:00:10] <Z-module> Hi z4kpi
[20:00:25] <Z-module> YOu want to understand them just within epsilon.
[20:00:35] <z4kpi> what do you mean?
[20:00:40] <greenbagels> lol
[20:00:51] <greenbagels> it was a joke about the concept
[20:01:11] <greenbagels> z4kpi: i think the best way to try to understand them is as a game between two parties
[20:01:17] <z4kpi> ok
[20:01:26] <greenbagels> person A and person B are chatting
[20:01:33] <z4kpi> alright
[20:01:45] <greenbagels> A claims that a function f has a limit L at x=a
[20:02:04] <greenbagels> to back up their claim, they assert the following to B
[20:02:44] <greenbagels> "pick any epsilon > 0, as big or small as you want. no matter what you pick, I can find a delta > 0 such that, as long as im within delta of x=a, then f will be within epsilon of L"
[20:03:15] <z4kpi> ok
[20:03:26] <greenbagels> does this mental image of the situation make sense
[20:03:39] *** Joins: ferdna (~ferdna@user/ferdna)
[20:03:39] <z4kpi> sort of
[20:03:49] <z4kpi> just a second
[20:04:19] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[20:05:33] <z4kpi> ok
[20:05:40] <z4kpi> let L be a real number
[20:06:01] <z4kpi> the limit of f(x) as x->c = L
[20:06:37] <z4kpi> is equivalent to for ever epsilon greater than 0 there exists a delta greater than 0 such that
[20:07:05] <z4kpi> for every x that is an element of R with 0 < |x - c| < delta then |f(x) - L| < epsilon
[20:07:08] <z4kpi> apologies
[20:07:18] <z4kpi> I need to figure out how to configure my keyboard
[20:07:30] <z4kpi> I can put that into LaTeX notation if needed
[20:07:32] <greenbagels> yes, that is right
[20:07:35] <z4kpi> ok
[20:07:52] <z4kpi> I want to make sure I really understand this
[20:08:02] *** Joins: wakeup (~wakeup@user/wakeup)
[20:08:25] *** Joins: Pickchea (~private@user/pickchea)
[20:08:31] <greenbagels> if you go back to the person A person B picture, there's another way you can visualize it
[20:08:38] <z4kpi> 0 < |x - c| < \delta
[20:08:51] <z4kpi> |x - c| is a distance
[20:09:02] <greenbagels> B doesn't believe A, so B picks a ridiculously small epsilon, like 0.000001
[20:09:43] <greenbagels> so now you need an epsilon such that, as long as |x - c| < 0.000001, then |f(x) - L| < epsilon
[20:09:59] <wakeup> Let's say you have this conditional distribution p(X | Y=y). Here, y is given, so this is a probability distribution, e.g. a pmf. Now, let's say that Y=y is not given and you want to consider all distributions for all possible values of Y, so you have p(X | Y). What exactly is this object p(X | Y) called and defined? We could say it's a family or
[20:10:00] <wakeup> set of distributions, but is this really accurate? Is there a more accurate term to refer to p(X | Y)?
[20:10:05] <greenbagels> if the limit exists, this sufficient epsilon is guaranteed to exist
[20:10:06] <z4kpi> the above is saying that the distance between x and C is greater than 0 (you aren't AT c) and it's less than \delta
[20:10:15] <greenbagels> z4kpi: right
[20:10:51] <greenbagels> z4kpi: look at the first image on this page https://brilliant.org/wiki/epsilon-delta-definition-of-a-limit/
[20:12:17] <z4kpi> in |f(x) - L| < \epsilon
[20:12:21] <z4kpi> what is f(x)?
[20:12:27] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:6111:c808:a47f:41)
[20:12:27] <z4kpi> is that the value AT f(x) there?
[20:12:51] <greenbagels> it's the value of f(x) wherever x is
[20:12:56] <z4kpi> ok
[20:13:46] *** Joins: cadmio (~cadmio@151.47.55.20)
[20:13:48] <greenbagels> honestly the page text itself might also be useful for learning
[20:13:52] <cadmio> Hello
[20:13:55] <greenbagels> or checking your understanding
[20:14:15] <Z-module> hi cadmio
[20:14:35] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[20:15:38] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[20:15:59] <greenbagels> wakeup: this is called a conditional distribution
[20:16:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:8fa:f917:3ddb:7b76) (Ping timeout: 245 seconds)
[20:16:23] <wakeup> p(X | Y=y) is the conditional distribution
[20:16:26] <z4kpi> |f(x) - L| what does this mean in plain English?
[20:16:33] <wakeup> if you don't fix Y, then it's not a distribution
[20:16:36] <z4kpi> what is that the distance of?
[20:16:36] <greenbagels> oh i see what you're asking
[20:16:44] <z4kpi> I'm checking out the brilliant link now
[20:17:21] <greenbagels> z4kpi: its how far f(x) is from the limit
[20:17:47] <greenbagels> the vertical distance between f(x) and L
[20:17:54] <greenbagels> (on the graph)
[20:18:01] <z4kpi> oh I see
[20:19:44] <cadmio> I'm not sure why there's a difference when the exponent is odd and even https://gioretikto.github.io/mat/algebra/ruffini.html in (5.4.2) couldn't 'n' be odd?
[20:20:49] *** Joins: soapsudsxx (~soapsudsx@209.221.40.136)
[20:21:28] <confuzeus> wakeup: "if you don't fix Y, then it's not a distribution" do you have a reference for this bs looking statement on conditional distributions?
[20:22:10] <wakeup> if you define a distribution has some object that integrates to 1
[20:22:13] <Z-module> cadmio, not seeing where you mean.
[20:22:15] <wakeup> or sums to 1
[20:22:31] <wakeup> *as some
[20:22:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:22:32] *** Quits: DrMax (~DrMax@node-1w7jra94757g0ehga8s43jipa.ipv6.telus.net) (Remote host closed the connection)
[20:23:32] <confuzeus> if you define a probability you inherently implies it sums to 1 or not?
[20:23:44] *** Joins: DrMax (~DrMax@node-1w7jra94757g1w4i6sbnr3nph.ipv6.telus.net)
[20:23:59] <cadmio> the text introduces (5.4.5) specifically for odd exponents
[20:24:06] <Z-module> oh I see, cadmio: n can be even or odd there, for the difference version. The sum version is what requires odd.
[20:24:48] <Z-module> lf n is even, then   x^n - (-y)^n = x^n - y^n  rather than  x^n + y^n
[20:25:04] <greenbagels> z4kpi: for reference, the conditional probaiblity distribution does not refer to the univariate function of x once y is fixed
[20:25:24] <greenbagels> it refers to the distribution associated to the pdf as a function of both x and y
[20:25:52] <z4kpi> greenbagels: wrong nick
[20:26:05] <greenbagels> oops
[20:26:07] <greenbagels> thank you
[20:26:14] <wakeup> isn't that the whole point of probability distributions
[20:26:15] <wakeup> ?
[20:26:44] <confuzeus> i am showing that p(X|Y) is a probability function
[20:26:57] <wakeup> if look at an introductory book on statistics, they will define the pmf or whatever has a function that has those properties
[20:27:01] <wakeup> *that has that property
[20:27:55] <greenbagels> right, and we're saying p(X|Y) is one of those such functions
[20:28:12] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:28:16] <confuzeus> ditto
[20:28:25] <z4kpi> I'm trying to visualize how epsilon and delta seem to trap the limit between each other
[20:29:31] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[20:29:50] <cadmio> Z-module: I put that relation in that page because it seems related to Ruffini's theorem
[20:30:23] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.220)
[20:30:50] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:31:40] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:70e8:bae3:c5b2:7d1d)
[20:31:48] <z4kpi> so the goal is to find the \delta
[20:31:50] <Z-module> cadmio, I wouldn't not call it related to that.
[20:32:25] <Z-module> would not, rather
[20:33:14] <greenbagels> confuzeus: i dont think we helped them
[20:33:16] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.191) (Ping timeout: 256 seconds)
[20:33:19] <greenbagels> task failed successfully
[20:33:33] <z4kpi> you need to show that for every \epsilon greater than 0 there exists a delta such that  If (\delta is greater than the distance between x and c which is greater than 0) => then (the distance between F(x) and L is less than every real number \epsilon greater than 0)
[20:33:58] <cadmio> if you take f(x) = x^(n + 1) − y^(n + 1) this poly has root y so it has a factor (x-y)
[20:34:08] <cadmio> by Ruffini
[20:34:28] <Z-module> z4kpi: it's only about one positive epsilon at a time.
[20:35:20] <z4kpi> oh it's like a \delta that pairs with every \epsilon greater than 0?
[20:35:26] <Z-module> yes
[20:35:37] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f8af:7e9a:b154:2753) (Ping timeout: 256 seconds)
[20:36:35] <greenbagels> z4kpi: you can think of delta as a function of epsilon
[20:36:50] <greenbagels> in practice, a lot of epsilon-delta proof exercises explicitly ask you for delta(epsilon)
[20:37:05] <z4kpi> oh so, to show there is a limit, I must show that for every number greater than 0 there is a corresponding delta such that the conditions are met
[20:37:22] <z4kpi> every number \epsilon greater than 0 that is
[20:37:27] <Z-module> yes
[20:37:35] <confuzeus> true. may be they were doing exercises where they had to check if some given functions are actually probability density/mass functions? hence the misunderstanding?
[20:37:58] <Z-module> it suffices to use only the values epsilon = 1/1, 1/2, 1/3, ...  but for some reason we never actually do it that way.
[20:41:53] <greenbagels> Z-module: because the delta for any given epsilon satisfies every epsilon before it, right
[20:41:54] *** Joins: newpy (~newpy@206.168.231.90)
[20:42:30] <greenbagels> (as in, you're picking an example of a monotone sequence convergent to 0?)
[20:47:05] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: No route to host)
[20:47:13] <cadmio> Z-module: why wouldn't you?
[20:48:39] *** Joins: laurus (~laurus@user/laurus)
[20:48:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:48:51] <andi_> hello, if i have two regular languages L_1 and L_2 over Σ, is the language L_3= zip(L_1, L_2) regular? When zip means a_1b_1 a_2b_2 ... a_nb_n?
[20:49:44] <andi_> i think the answer would be yes because if L_1 and L_2 are both regular, they have both a DFA, and from these DFAs i can create a DFA for zip(L_1, L2) or am i wrong?
[20:50:47] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[20:50:49] <z4kpi> wait are there multiple epsilons, yet a single \delta?
[20:51:03] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[20:51:31] <z4kpi> or is it a different \delta for each corresponding \epsilon?
[20:52:53] *** Quits: slycelote (~slycelote@user/slycelote) (Quit: Leaving)
[20:53:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[20:53:20] <z4kpi> I guess I'm confused about |x - c| < \delta
[20:53:41] <z4kpi> it seems you could just chose any number greater than 0 and greater than the distance to satisfy that part of the implication.
[20:53:52] <z4kpi> chose any number for \delta
[20:54:42] <laurus> I'm confused about the explanation here: https://i.uguu.se/kGwfpAEV.png . In particular I don't understand the sentence "Therefore, a prime group should be in the form {e, g^1, g^2, ..., g^{N-1}}." If every member of the group has order either 1 or N, then say, x_1^1 = e or x_1^N = e. So with e = x_j^1 for some j, how do we get that for say x_l, x_l = g^i for some i?
[20:54:57] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[20:55:34] <ski> you can certainly pick a lesser (still positive) ⌜δ⌝, if you wish
[20:55:36] <greenbagels> z4kpi: consider two pairs of epsilons and corresponding deltas (eps1, delta1) and (eps2, delta2)
[20:55:44] <z4kpi> ok
[20:56:00] <greenbagels> if eps2 < eps1 then surely delta2 should still work for delta1
[20:56:59] <greenbagels> because delta2 guarantees a "tighter" epsilon bound
[20:57:42] <greenbagels> maybe that's a bit confusing, but in the spirit of what ski said, if you know delta = 5 works for a given epsilon; why not pick delta = 0.0005 instead? it should still work
[20:58:09] <z4kpi> maybe if I work from the outside->in
[20:58:45] *** Joins: lilgopher_ (~textual@207.98.176.66)
[20:59:06] <z4kpi> for every \epsilon greater than 0 [...] such that [If ...] then |f(x) - L| < \epsilon
[20:59:25] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Ping timeout: 240 seconds)
[20:59:52] <z4kpi> just a second
[21:00:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:00:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:00:36] <z4kpi> I feel like with this problem I'm looking at one of those 3d posters that you have to cross your eyes to see.
[21:01:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:01:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:02:01] *** Joins: XV9 (~XV8@2601:5cb:c001:50:bc64:9586:eaa5:f172)
[21:02:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:02:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:02:58] * ski . o O ( "Epsilon-Delta Limits Tutorial" by monochrom at <https://www.vex.net/~trebla/homework/epsilon-delta.html> )
[21:04:37] *** Joins: smoke_ (~smoke@user/smoke)
[21:04:56] <greenbagels> also have this https://www.desmos.com/calculator/vh7xscr9ei
[21:05:06] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[21:05:28] <greenbagels> i put a little desmos graphic together that shows delta(epsilon)  [written with epsilon=u, delta=v] and lets you use sliders to play with it
[21:05:34] <greenbagels> for a given function f(x)=2x
[21:06:19] <greenbagels> ok wait try this instead https://www.desmos.com/calculator/9pv8mlaaf0
[21:06:30] <greenbagels> now the delta is controlled by a slider hehe
[21:06:40] *** Quits: tkkon (~tkkon@user/tkkon) (Quit: WeeChat 3.4)
[21:06:46] *** Joins: vysn (~vysn@user/vysn)
[21:06:51] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[21:07:02] *** Joins: econo (uid147250@user/econo)
[21:07:10] <z4kpi> I understand the 'gist' of the idea
[21:07:16] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[21:07:59] <z4kpi> you are trapping the limit in between \epsilon and \delta
[21:08:11] <z4kpi> if the limit exists you can find a delta to satisfy that
[21:08:17] *** Quits: XV9 (~XV8@2601:5cb:c001:50:bc64:9586:eaa5:f172) (Ping timeout: 240 seconds)
[21:08:50] <z4kpi> then you must prove that if you've found a delta, then the distance between f(x) and L is less than every real number \epsilon given that delta you've found
[21:09:31] <z4kpi> but there's something I feel I'm not getting, like it doesn't quite fully "click" yet
[21:09:41] <ski> not trapping inbetween ⌜ε⌝ and ⌜δ⌝, no
[21:09:44] <z4kpi> I feel I have a general fuzzy idea of what's going on but not the specific detail
[21:09:56] <z4kpi> ski: ok
[21:10:08] <ski> looking at worked examples (and then trying yourself), will hopefully help
[21:10:19] <z4kpi> so work through some examples?
[21:11:39] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[21:11:45] <ski> if you think this is a bit tricky, then yes it is. especially if noone has properly explained yet to you about quantifiers, quantifier scope (including how alternating quantifiers can effect dependance), natural deduction rules for proving and using quantified statements, and strategies for applying those
[21:11:55] <ski> yes
[21:12:40] *** Joins: sheepduck_ (~sheepduck@user/sheepduck)
[21:12:50] <z4kpi> ε δ
[21:12:59] <Z-module> laurus: Every finite cyclic group can be written as {g^0 = e, g^1, g^2, ..., g^k}  for some k.  That part has nothing to do with the group's order being prime.
[21:13:12] <z4kpi> ok I got my keyboard configured a bit better
[21:13:15] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.220) (Ping timeout: 256 seconds)
[21:13:16] <Z-module> also, no one actually uses a term "prime group"
[21:14:01] <z4kpi> ski: ok
[21:14:03] <Z-module> Also they haven't really proved in there that a group of prime order must be cyclic.
[21:14:08] <Z-module> This source is rather bad.
[21:15:27] <z4kpi> ski: the fact that the (there exists a delta greater than 0) comes after (for every epsilon greater than 0) means that there are multiple deltas that correspond to each epsilon
[21:15:40] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 272 seconds)
[21:15:57] <z4kpi> if those were the other way around, then there would be a single delta value that would go with all of the epsilons
[21:16:14] <z4kpi> versus multiple deltas you´d have just one for all of the epsilons
[21:16:36] <ski> z4kpi : hm .. not sure what you mean there. it doesn't mean that, a priori. in this particular case (limits), you can always choose a lesser (but still positive) ⌜δ⌝, given the same ⌜ε⌝, though
[21:18:03] <ski> z4kpi : "the fact that the (there exists a delta greater than 0) comes after (for every epsilon greater than 0) means that" when you're proving this limit statement, you're allowed to choose a value for ⌜δ⌝, which depends on the (given, arbitrary, "unknown", not under your control) ⌜ε⌝
[21:18:34] <laurus> Z-module: Thanks for your reply (somehow my notifications for IRC stopped working so since I didn't have the window in focus I didn't see your response immediately)
[21:19:05] <Z-module> no problem, laurus
[21:19:13] <ski> (and the other way around, when you're *using* such a limit statement : then you're allowed to choose a value for ⌜ε⌝, and you'll get back some "unknown" value for ⌜δ⌝ (that generally will depend on which ⌜ε⌝ you picked))
[21:19:22] <laurus> Z-module: Yeah, this is a summary chapter and he sometimes misses/skips things, thanks for filling in some of those details
[21:19:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:20:03] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 256 seconds)
[21:20:06] <Z-module> laurus: I guess they did prove it (prime order => cyclic), but they had to make use of that other theorem, that the order of anything in G divides |G|.
[21:20:10] <Z-module> for any finite G
[21:20:27] <laurus> Z-module: Yes, I actually found that theorem and some of the broader information in my abstract algebra book
[21:20:30] *** Joins: andreasbuhr (~quassel@p5dcf94ab.dip0.t-ipconnect.de)
[21:20:30] *** Quits: andreasbuhr (~quassel@p5dcf94ab.dip0.t-ipconnect.de) (Client Quit)
[21:20:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[21:20:48] <drazak> ski: I ran into quite the qualifier scope by trying to prove... something in elementary number theory without using bezout's lemma
[21:21:28] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:22:57] *** Joins: XV8 (~XV8@2601:5cb:c001:50:dc92:7130:8d6b:5842)
[21:23:34] *** Quits: XV8 (~XV8@2601:5cb:c001:50:dc92:7130:8d6b:5842) (Client Quit)
[21:24:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[21:24:59] <Z-module> Hmmm, so the thing before with F_4 < F_16 now makes me wonder: If F is any field of order p^n with n > 1, and F' is any field of order p^(kn) with k > 1, does there always exist more than one embedding F -> F' ?
[21:25:15] <Z-module> (same images, but different maps)
[21:25:27] <ski> drazak : multiple alternating ?
[21:29:17] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[21:29:52] <naquad> is there any good resource on Bayesian sequential updating? i have a case where new events (1 or 0, P(1) is given) are coming and i need to make an assumption on the probability of the next event
[21:31:43] *** Joins: beencubed (~beencubed@209.131.238.248)
[21:32:27] <laurus> naquad: That sounds like a basic thing in Bayesian statistics
[21:32:34] <EdwardHaas> I'd like some help with this http://mathb.in/70572
[21:32:48] <laurus> naquad: i.e. you shouldn't need some kind of special resource for it
[21:33:05] *** Quits: cadmio (~cadmio@151.47.55.20) (Quit: WeeChat 3.0)
[21:33:19] *** Joins: wakeup (~wakeup@user/wakeup)
[21:33:21] <Z-module> I guess my thing is simply the question of F having a non-identity automorphism.
[21:33:31] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[21:33:33] <wakeup> greenbagels why would p(X | Y) be a distribution?
[21:34:08] <wakeup> if you fix Y=y, yes, it's a distribution, but I already said this
[21:36:35] *** Parts: savask (~savask@Powder/Developer/savask) ()
[21:37:15] <isekaijin> Z-module: If E/F is an extension of finite fields, then I think there can be several embeddings (unless F is a prime field), but all have the same image.
[21:37:19] <drazak> ski: yeah, not sure that was correct but I found myself lost in a tangled web
[21:37:40] <isekaijin> Several embeddings of F into E.
[21:37:43] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:37:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:38:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:39:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:39:18] *** Joins: Jordy_ (~jordy@user/jordy)
[21:39:52] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:40:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:40:59] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Read error: Connection reset by peer)
[21:41:27] <Z-module> isekaijin: yes, there definitely can be; my question is will there *always* be, when |F| isn't prime.
[21:42:00] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:42:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:42:36] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[21:42:44] <Z-module> oh sure, the pth-power map is always such a thing
[21:42:53] <Z-module> (p being the characteristic of F)
[21:43:03] *** Quits: Jordy (~jordy@user/jordy) (Ping timeout: 256 seconds)
[21:43:22] <naquad> laurus, if i try to apply plain Bayes' formula then i get that always event with higher probability is the next :( sort of: success = prod(series) / p; failure = prod(series) / (1 - p) and failure is always < success
[21:43:34] <drazak> oh, the frobenius
[21:43:35] <drazak> yeah
[21:43:50] <Z-module> rather, that map is always a non-identity automorphism on F when |F| = p^m with m > 1, so just compose any given embedding F -> E with that to get a different embedding.
[21:44:08] *** Joins: XV8 (~XV8@2601:5cb:c001:50:dc92:7130:8d6b:5842)
[21:44:19] <drazak> cyclicly shifting the embedding up one level and wrapping around at the top, kind of
[21:44:32] <greenbagels> wakeup: ah sorryi think i was thinking about joint probability distributions
[21:44:45] <laurus> naquad: I think you need some better notation
[21:44:46] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:44:52] <laurus> Refer to a Bayesian statistics book
[21:44:55] *** Parts: laurus (~laurus@user/laurus) (Part)
[21:45:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:45:04] <greenbagels> i would probably just call what you care about "the set of all conditional distributions"
[21:46:30] <Z-module> isekaijin: I was amused to find the simple factoid earlier that F_2, F_3, F_4 are the *only* fields, finite or not, on which the map sending every nonzero x to 1/x and sending 0 to 0 is a field automorphism.  (And it's only non-identity on F_4.) I'm amazed that various standard into algebra books don't have this an exercise, albeit an easy one.
[21:46:48] <isekaijin> Cute!
[21:47:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:47:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:48:06] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[21:48:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[21:51:35] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:52:06] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:52:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:52:25] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[21:53:51] <isekaijin> Z-module: Suppose F satisfies the hypothesis. Let x, y, z be nonzero elements of F such that x + y = z. Then 1/x + 1/y = 1/z, hence z / (xy) = 1/z, hence z^2 = (x + y)^2 = xy, hence x^3 = y^3.
[21:53:51] <Z-module> Fields have so much "structure" that it's a bit hard to find fun anomalies about them. One I like a lot is that there are examples, not even hugely exotic, of pairs of fields K, L where  (K,+) =~ (L,+), and also (K^*, *) =~ (L^*, *),  just as groups in both cases, but K, L are not isomorphic fields.
[21:55:04] *** Joins: Guest33Zemansky (~Guest33Ze@2001:8a0:65b0:900:b921:a1cd:4434:399a)
[21:55:22] *** Quits: XV8 (~XV8@2601:5cb:c001:50:dc92:7130:8d6b:5842) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:55:40] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:56:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:56:24] *** Joins: XV8 (~XV8@2601:5cb:c001:50:dc92:7130:8d6b:5842)
[21:57:59] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[21:58:06] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 272 seconds)
[21:59:57] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-280a-a911-ea24-fc52.res6.spectrum.com) (Read error: Connection reset by peer)
[22:01:26] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:70e8:bae3:c5b2:7d1d) (Read error: Connection reset by peer)
[22:03:56] <confuzeus> wakeup: see chapter 4 and particularly 4.2 for the definition of a conditional distribution here https://math.dartmouth.edu/~prob/prob/prob.pdf
[22:07:37] <enthdegree> hello all i have asimple question
[22:07:43] <isekaijin> Z-module: Of course, F = Q is out of the question. For the prime fields F_p with p >= 5 and other than 7, we have 1 + 2 = 3, but 2^3 = 8, which is distinct from 1. For F_7, we have 1 + 3 = 4, but 3^3 = 27, which is distinct from 1. For F_8, we take any x, and then x + (1 + x) = 1, but (1 + x)^3 = 1 + x + x^2 + x^3. If this were equal to x^3, then x is a root of 1 + x + x^2, which implies that x is
[22:07:45] <isekaijin> in F_4, so any x not in F_4 works.
[22:08:14] <isekaijin> Z-module: It only remains to show that F_2(t), F_3(t), F_4(t) also don't satisfy your original hypothesis.
[22:09:01] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[22:09:04] <enthdegree> if H(X|X_n) --> 0 then is it true that \lim n min_f E 1_{ f(X_n) != X } = 0?
[22:12:40] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[22:14:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:14:27] <enthdegree> Fano's inequality says that if lim n min_f E 1_{f(X_n) != X} = 0 then lim n H(X|X_n) = 0
[22:14:29] <Em> Thats an intriguing fact Z-module. Goes to show what I've been thinking that being isomorphic isn't everything it's cracked up to be.
[22:14:55] <Z-module> Em, the one about additive and multiplicative groups separately?
[22:15:02] <Em> Yeah
[22:16:17] <isekaijin> Em: The moral of the story here is that the notion of field isomorphism has to take into account how the additive and multiplicative structures are related.
[22:16:17] *** Quits: emf (~emf@2620:10d:c090:400::5:5ef1) (Ping timeout: 240 seconds)
[22:16:50] <isekaijin> Not that isomorphisms aren't important (that would be the wrong lesson!).
[22:17:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:18:09] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:20:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:20:17] <isekaijin> Okay, so, for F_2(t), we have t + (1 + t) = 1, but (1 + t)^3 = 1 + t + t^2 + t^3, which isn't t^3, for the same reason as before. Also, I didn't really need to handle F_4(t) as an extra case.
[22:21:04] <Em> Oh yeah, I know an isomorphism is important, but it doesn't quite mean the same as I once thought it did. I used to think when two things were isomorphic then they are really the same thing, except perhaps look superficially different because of renaming.
[22:21:09] <isekaijin> Finally, for F_3(t), we have t + (1 + t) = 1 + 2t, but (1 + t)^3 = 1 + t^3, which isn't t^3 for obvious reasons.
[22:21:13] <isekaijin> Z-module: Done.
[22:21:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:21:52] <Em> But more and more we see that two things can be isomorphic and yet those two things can interact with the rest of the world in different ways. That means being isomorphic is different than being essentially the same thing.
[22:21:57] <isekaijin> Em: At least when doing algebra, I don't think the question of whether two objects are “materially” the same thing is very important.
[22:22:12] <isekaijin> Isomorphisms are more important than material equality.
[22:22:58] <Em> I mean essentially the same, not sure about 'material equality'.
[22:23:16] <Em> But for me two things that are essentially the same should interact with the rest of the world in the same way.
[22:23:35] <ski> but a "thing" can be two distinct "things", depending on the context in which we consider it
[22:23:39] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[22:23:43] <Em> But for example 2Z and 3Z are isomorphic as groups, but Z/2Z and Z/3Z are not isomorphic as groups.
[22:23:58] <ski> integers as a ring is not the same thing as integers as a group
[22:24:43] <isekaijin> Em: Two isomorphic objects interact with the *rest of the ambient category* in “essentially the same way”, that's Yoneda or even common sense.
[22:25:15] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-c0be-54b3-db2c-85e9.res6.spectrum.com)
[22:25:28] <Em> But for example 2Z and 3Z are isomorphic as groups, but Z/2Z and Z/3Z are not isomorphic as groups.
[22:25:37] <isekaijin> Em: Of course, if you extract the objects from the category and insert them in another context, then might no longer be replaceable for one another in that new context.
[22:25:48] <ski> ⌜2⋅ℤ⌝ and ⌜3⋅ℤ⌝ there are not groups, but ideals (of the ring ⌜ℤ⌝)
[22:25:59] <isekaijin> Em: 2Z and 3Z aren't “abstract groups”, but rather “groups with a choice of embedding into Z”.
[22:26:15] <isekaijin> Em: From a categorical point of view, they are monomorphisms into Z.
[22:26:21] <isekaijin> And they are distinct monomorphisms.
[22:26:26] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:26:42] <isekaijin> You don't take a quotient G/H when H is an arbitrary abstract group.
[22:26:43] *** Quits: Guest33Zemansky (~Guest33Ze@2001:8a0:65b0:900:b921:a1cd:4434:399a) (Quit: Client closed)
[22:26:51] <isekaijin> You take the quotient G/H when H is a subgroup of G.
[22:27:01] <ski> (normal)
[22:27:04] <isekaijin> Sure.
[22:27:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:27:39] <isekaijin> All of this is really common sense, after you have chased a few diagrams, which any decent abstract algebra course should force you to do.
[22:28:10] *** Joins: monkey_ (~user@190.104.116.153)
[22:28:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:28:58] <ski> it's not enough to "know the thing", you have to also "know the context" (the category, typically)
[22:29:13] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[22:29:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:30:46] <Em> Maybe it is common sense, but the common sense idea about what it means for two things to be isomorphic is that they are essentially the same thing (up to a renaming of the parts).  The mental model I had of an isomorphism had been two isomorphic graphs, which Im pretty sure must just be the same graph but possibly labeled differently.
[22:31:26] <ski> if you have an abelian group, you can then "forget" that it was abelian. it is still abelian, but in some sense, it just "happens" to be abelian. and this matters !
[22:31:34] <Em> This shows that being isomorphic is more subtle and limited than just two things that may not obviously look like the same thing, but actually are the same thing.
[22:31:50] <joel135> (Not only are those two monomorphisms into Z distinct, they are even non-isomorphic in the category of monomorphisms into Z.)
[22:32:33] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[22:34:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[22:35:24] <ski> the "free abelian group, over a given group" inverts (in a particular (one-sided) approximating sense) the above process of "forgetting commutativity". given a group (which may or may not be abelian), the free abelian group (the abelianization) over it is the group you get by identifying as few elements as possible, but enough to make the group abelian/commutative
[22:36:13] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[22:36:57] <tusko>  If I have a limit of two functions, can I take log of the whole thing?
[22:37:20] <tusko> lim[x=0 to inf] |f(x)/g(x)|
[22:37:42] <ski> if you instead consider forgetting not just that an abelian group is abelian, but also that it's a group, so that you just get the set of its elements back -- then the corresponding "inversion" takes you from any set to an abelian group, the free abelian group over that set. basically this amounts to considering "products" of powers (with integer exponents) of the elements of the set. (only finitely many
[22:37:48] <ski> elements have non-zero elements, in each product)
[22:39:05] <ski> Em : point is that, commonly we don't even consider such "forgetting" to even "do anything". forgetting abelianness, we still have the same group (which is still abelian). but such "shifts in perspective" can matter
[22:40:09] <ski> (one way to think of it is that, before, we're just comparing our abelian group to other abelian groups. but after the forgetting, we're comparing it to a larger "neighbourhood" of all groups, abelian or not)
[22:40:40] <ski> Em : dunno if this "loose talk" helps any ..
[22:40:53] <greenbagels> Em: they are the same *with respect to some structure*
[22:41:39] <greenbagels> 2Z and 3Z are isomorphic as additive groups in the sense that any information about internal *group* structure of one directly translates to an analogous group structure fact about the other
[22:41:43] <ski> there is not a single notion of "isomorphic". there's one notion of it, for each category (each "context")
[22:42:48] <ski> (well, there is a single notion, in the sense that there is a general definition, for all categories. but what that actually means depends on the category. if you're considering multiple categories, you have to say in which category you're considering "isomorphic", if it's not clear)
[22:43:44] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[22:43:58] *** Joins: monkey_ (~user@190.104.116.153)
[22:45:17] <ski> tusko : ⌜log⌝ is continuous
[22:48:17] <Em> greenbagels: I think you're right. I think that's the key part that shouldn't be omitted any time we're trying to speak carefully about isomorphisms.
[22:49:04] <greenbagels> it's what ski was also saying, but they were speaking more generally about isomorphisms between more generic objects
[22:49:58] <Em> To give you some idea what I'm getting at, I've often heard it said that the real numbers are the only complete ordered field up to isomorphism, so I've always taken that to mean that there's really only one thing with those properties and if you have two things with thoe properties then they may look different but they are really the same thing.
[22:50:17] <greenbagels> as fields, this is true
[22:50:41] <Em> But now with the 2Z and 3Z example, it makes me wonder if maybe you could have something which is isomorphic to R, but which interacts with the rest of the universe differently than R.
[22:51:06] <ski> (s/non-zero elements/non-zero exponents/)
[22:52:21] *** Joins: XV9 (~XV8@2601:5cb:c001:50:e0f2:76b6:d7e0:55b)
[22:52:43] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[22:53:28] <greenbagels> ski: which message are you correcting?
[22:53:41] <greenbagels> oh i see it now
[22:53:41] <ski> free abelian group over a set
[22:53:42] <Em> Well I guess I think "the ways in which X can interact with the rest of the universe" is one of the most interesting set of properties about X.
[22:53:56] <greenbagels> Em: right, and that isnt really covered by this concept
[22:54:42] <ski> Em : and "universe" can mean/refer to different things
[22:55:00] <greenbagels> even Z/2Z and Z/3Z are nonisomorphic as groups even as 2Z and 3Z are isomorphic, and any non-isomorphic groups G, H both have G/G = {0} and H/H = {0}
[22:55:09] <ski> sometimes we're considering rings, sometimes groups, sometimes lattices, sometimes graphs, sometimes sets, ..
[22:55:34] *** Quits: XV8 (~XV8@2601:5cb:c001:50:dc92:7130:8d6b:5842) (Ping timeout: 260 seconds)
[22:56:13] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:56:46] <Franciman> ski: can we say that the definition of isomorphism is unique for each category, though?
[22:56:51] <Franciman> but the property they entail are different
[22:56:59] <Em> By interact with the universe (maybe) what I mean is A and B are isomorphic a statement about A is true iff the statement about B is true.
[22:57:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[22:57:32] <ski> there is a single, generic ("natural", i guess one could say) definition. what it means in particular contexts/categories depends on what "morphism" means there
[22:57:55] *** Quits: smoke_ (~smoke@user/smoke) (Remote host closed the connection)
[22:58:24] <ski> (each category defines what "morphism" means there)
[22:58:35] *** Joins: newpy (~newpy@206.168.231.90)
[22:59:02] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:59:03] <Em> ok
[22:59:25] <ski> Em : well, (at least to a first approximation) it has to be a statement in the language of that particular universe
[23:02:09] <ski> (e.g. if two subgroups are isomorphic as subgroups, then they're also isomorphic as groups. so, if we forget that they were subgroups of some particular group, and just regard them as groups in themselves, then they're still isomorphic. so this ("forgetful") kind of "transition" from one "universe" (/ context / category) to another preserves isomorphism)
[23:02:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[23:02:29] <ski> (then one could also consider statements that involve multiple universa ..)
[23:02:36] <Z-module> isekaijin: not quite sure, but I think your answer up there was about the same as the first one here:  https://math.stackexchange.com/questions/1679965/is-inversion-ever-a-field-automorphism/1680561
[23:03:47] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f425:fffb:4465:6325)
[23:03:48] *** Joins: vicfred (~vicfred@user/vicfred)
[23:04:14] *** Quits: vicfred (~vicfred@user/vicfred) (Remote host closed the connection)
[23:04:30] <greenbagels> ski: the subgroup fact here isnt really more than an additional fact though, right? wouldn't you define "isomorphic as subgroups" as "both subgroups, and are group-isomorphic" anyway?
[23:04:37] *** Joins: vicfred (~vicfred@user/vicfred)
[23:05:52] <ski> well, i suppose you could, too. (i was attempting to connect back to the given example)
[23:05:54] *** Joins: riv (river@tilde.team/user/river)
[23:06:49] <ski> (i was thinking of "subgroup" as "monomorphism, with given target")
[23:08:12] *** Joins: cadabra (~cadabra@2600:8803:c007:f600:68c6:84b6:8be7:2972)
[23:11:22] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Ping timeout: 256 seconds)
[23:12:06] *** Joins: smile (uid510004@user/smi)
[23:12:52] *** Quits: cadabra (~cadabra@2600:8803:c007:f600:68c6:84b6:8be7:2972) (Quit: Leaving)
[23:12:53] *** Quits: WhO (~V@103.240.170.227) (Quit: Leaving)
[23:13:12] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[23:13:49] <greenbagels> oh ok
[23:14:13] <greenbagels> yeah i think i agree that the trickiness is picking an apt definition for universe
[23:14:51] <greenbagels> because its definitely not as general as "in any statement about groups, involving only groups, and group operations, isomorphic means freely substitutable"
[23:15:34] <greenbagels> because of the whole "internal vs external group/subgroup structure" idea (i'm not a category theory guy, so this is just how i thought about it during algebra courses"
[23:15:43] <greenbagels> s/"/)/
[23:16:17] *** Quits: xff0x (~xff0x@2001:1a81:5288:ea00:43ab:35e6:a5cd:7882) (Ping timeout: 240 seconds)
[23:17:53] *** Joins: xff0x (~xff0x@2001:1a81:5288:ea00:43ab:35e6:a5cd:7882)
[23:20:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:21:58] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[23:23:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:26:46] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[23:28:21] <isekaijin> Z-module: Is there some easy way to count (rational) points on an affine plane curve over a finite field?
[23:29:23] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[23:29:46] <isekaijin> Z-module: I want to count the rational points on the curves “x^2 + xy + y^2 = 0” and “x = 0” and “y = 0” and “x + y = 0”.
[23:32:35] <isekaijin> greenbagels: You don't really need to be a lot into category theory to realize that the right way of thinking about a subgroup is as a monomorphism.
[23:33:33] <isekaijin> greenbagels: It's something that arises naturally if you do a lot of honest, working-class, God-fearing undergraduate abstract algebra.
[23:34:44] *** Joins: addem (~addem@2600:1700:1066:2a10:4868:83c3:c8b2:5e7c)
[23:35:15] <addem> can anyone show how to prove that every uniformly continuous function has a modulus of continuity?
[23:35:35] <riv> im not sure that's true?
[23:35:36] <addem> In particular, how do you show that sup{|f(s)-f(t)|} is continuous from the right?
[23:35:40] <isekaijin> addem: Every continuous function between what spaces?
[23:35:50] <isekaijin> Errr
[23:35:53] <addem> Uniform from [a,b] to R
[23:35:56] <isekaijin> Every uniformly continuous function between what spaces?
[23:35:58] <isekaijin> Oh.
[23:36:06] <riv> R -> R
[23:36:17] <addem> It's an exercise in Bruckner et. al.
[23:36:36] <isekaijin> What's your definition of “modulus of continuity”?
[23:37:01] <addem> Any continuous increasing function (0,infinity) -> R which goes to 0 at 0, and ...
[23:37:28] <addem> |f(s)-f(t)| < w(|s-t|) where s,t in [a,b] and w is the supposed modulus of continuity.
[23:37:55] <isekaijin> Mmm.
[23:38:06] <joel135> this smells like choice
[23:38:16] <isekaijin> What?
[23:38:21] <Z-module> by the way, continuous functions [a,b] -> R  are automatically uniformly continuous.
[23:38:27] <isekaijin> joel135: Tops Bolzano-Weierstrass.
[23:38:49] <isekaijin> Not more than that.
[23:40:47] <joel135> i mean, if you formulate uniform continuity intuitionistically then in effect it involves the modulus, by that form of choice which is an intuitionistic tautology
[23:41:29] <isekaijin> ffs this constructive nonsense when someone's trying to do ****ing real analysis.
[23:41:46] <greenbagels> isekaijin | greenbagels: It's something that arises naturally if you do a lot of honest, working-class, God-fearing undergraduate abstract algebra.
[23:41:48] <greenbagels> i feel attacked
[23:41:53] <greenbagels> (rightfully so)
[23:41:59] <riv> isekaijin +1
[23:42:25] <joel135> i am not speaking in favor of an intuitionistic approach to analysis. i am just pointing out the pattern of the proof.
[23:43:23] *** Quits: Koen (~Koen@252.248.88.92.rev.sfr.net) (Quit: WeeChat 3.4)
[23:43:55] <isekaijin> addem: Since f is uniformly continuous, for every eps > 0, there is del > 0 such that |s - t| < del implies |f(s) - f(t)| < eps. “Of course” (read: this is the part that we need to work on), del can be taken to be a continuous strictly increasing function of eps. Then I guess we just need to invert this function?
[23:43:59] <joel135> the intuitionistic content of "for each epsilon there is a delta ..." is w!
[23:44:41] <joel135> (ok, its inverse)
[23:44:47] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f425:fffb:4465:6325) (Read error: Connection reset by peer)
[23:44:54] <isekaijin> (Since every continuous strictly increasing function between two intervals is actually a homeomorphism between the domain and its image.)
[23:44:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:45:45] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[23:46:15] *** Quits: yashi (~user_name@user/yashi) (Ping timeout: 256 seconds)
[23:47:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[23:48:06] *** Joins: yashi (~user_name@user/yashi)
[23:48:08] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[23:52:44] *** Quits: yashi (~user_name@user/yashi) (Ping timeout: 256 seconds)
[23:53:03] *** Quits: AimHere (~David@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 256 seconds)
[23:55:48] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[23:56:50] <joel135> 9:05 PM <addem> In particular, how do you show that sup{|f(s)-f(t)|} is continuous from the right?
[23:58:16] <joel135> i assume you mean the function "w(d) := sup{...} taken over all (s, t) such that |s-t| < d"
[23:58:23] <addem> Right, that's the one.
[23:59:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
