[00:12:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[00:14:32] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 258 seconds)
[00:25:54] *** Quits: lunatunes (uid251484@user/lunatunes) (Quit: Connection closed for inactivity)
[00:31:20] *** Quits: magla (~gelignite@55d493a6.access.ecotel.net) (Quit: Stay safe!)
[00:42:36] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[00:47:24] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[00:53:39] *** Joins: stenno (~stenno@user/stenno)
[00:56:36] *** jgleeson is now known as jgleeson|brb
[00:58:39] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[00:58:47] *** Quits: arash (~arash@5.124.130.92) (Read error: Connection reset by peer)
[01:00:50] *** Joins: dlundgren_ (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net)
[01:03:38] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 252 seconds)
[01:03:38] *** dlundgren_ is now known as dlundgren
[01:11:47] *** Quits: ge (~g@37.214.47.157) (Remote host closed the connection)
[01:13:03] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 255 seconds)
[01:14:47] *** Joins: stenno (~stenno@user/stenno)
[01:20:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[01:21:29] *** Joins: dlundgren_ (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[01:24:10] *** Quits: dlundgren (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net) (Ping timeout: 252 seconds)
[01:24:10] *** dlundgren_ is now known as dlundgren
[01:24:13] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[01:28:46] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 246 seconds)
[01:48:21] *** Quits: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Quit: Leaving)
[01:49:59] *** Joins: stenno (~stenno@user/stenno)
[01:52:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:54:54] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[01:57:18] *** jgleeson|brb is now known as jgleeson
[02:09:14] *** Joins: lunatunes (uid251484@user/lunatunes)
[02:16:35] *** Joins: celphi (sid97751@id-97751.brockwell.irccloud.com)
[02:16:50] <celphi> what is correct way to sanitize/filter user input nowadays? is it just using prepared statements and htmlspecialchars?
[02:18:06] *** Quits: celphi (sid97751@id-97751.brockwell.irccloud.com) (Changing host)
[02:18:06] *** Joins: celphi (sid97751@user/celphi)
[02:18:22] <Sammitch> celphi: don't. validate that inputs meet expectations. use prepared statements. ensure that data is correctly encoded for output.
[02:19:00] <celphi> Sammitch: what about against XSS? and sccript tags?
[02:19:55] <Sammitch> then either your validation has caused the input to be rejected outright, our your output is encoded in such a way as to preclude it from being interpreted as HTML
[02:20:19] <Sammitch> s/our/but otherwise/
[02:20:26] <celphi> what do you mean
[02:20:35] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[02:20:42] <celphi> Im asking how to guard against in modern times
[02:21:56] <celphi> if I have a DIYSB with all types of tags.., you're saying to store all of it as it is into database just using prepared statements-- but im asking how do you guard against XSS since <script> tags will cause JS to fire off in page when eecho'd to page
[02:22:17] <Sammitch> encode your output according to the output format
[02:22:40] <Sammitch> in this case use htmlspecialchars() on _output_, because it's destined for an HTML document
[02:23:02] <Sammitch> if it's destined for something OTHER than HTML, then you need to use that format's encoding functions
[02:23:38] <celphi> prepared statements prevent all sql injection?
[02:23:54] <Sammitch> all first order injections, yes.
[02:23:59] <Sammitch> when used properly
[02:24:01] <celphi> so filter_input() and filter_var is completely useless?
[02:25:05] <__adrian> who said that?
[02:25:20] <__adrian> what's _useless_ is the idea that you can magically make input "safe" somehow.
[02:25:29] <Sammitch> that's a matter of opinion, but I would say that the FILTER filters may still be userful, though SANITIZE filters aren't particularly desirable
[02:25:42] <__adrian> input is not dangerous. doing foolish things with input (or any data for that matter) is dangerous.
[02:25:50] <Sammitch> *VALIDATE filters useful
[02:26:41] <__adrian> this means you cannot do anything to input. you take precautions when you_do something_ with the input.
[02:26:53] <__adrian> i.e., when you make a DB query, NOT on input.
[02:27:03] <__adrian> when you echo text to the webpage, NOT on input.
[02:27:16] *** jgleeson is now known as jgleeson|away
[02:27:20] <Sammitch> if your input does not pass a particular requirement, eg: can't contain HTML, then reject it. attempting to sanitize data is usually some combination of corrupting the data or missing edge cases
[02:27:20] <__adrian> so the question is, what are you doing with the input?
[02:27:51] <celphi> if input goes from browser to db to browser
[02:28:08] <celphi> can i just store everyhting from client AS IS into database using prepared statements
[02:28:19] <__adrian> using parameters, yes
[02:28:25] <__adrian> BUT that doesn't mean you skip validation
[02:28:41] <celphi> sure, but it's a do it yourself box
[02:28:45] <__adrian> validation is a completely spearate idea. validation ≠ "safe".  validation = correct.
[02:29:05] <__adrian> "celphi> sure, but it's a do it yourself box"  i don't know what that means
[02:29:13] <Sammitch> then you need to handle the "correct" data safely
[02:30:16] <celphi> sorry i thought that was what hey were called
[02:30:28] <__adrian> "they" what?
[02:30:51] <celphi> im talking about those boxes where you can type whatever text including tags ect. sorta like how an email works
[02:30:57] <__adrian> oh
[02:31:00] <__adrian> <textarea>  ?
[02:31:42] <__adrian> or do you mean, your form has a text editor (with buttons for formatting, etc.)?
[02:32:15] <celphi> yeah it's like a mini text editor to type up html
[02:32:21] <__adrian> ok. in either case, that's not important/relevant to what your php script does.
[02:32:43] <celphi> so i wouldnt have to validate that right? just store using prepare statements and use htmlspecialchars?
[02:32:44] <__adrian> because i don't *have* to use it. i don't even *have* to use your form.
[02:32:56] <__adrian> i can send my own input, and it can be whatever i want.
[02:33:15] <__adrian> your text editor makes it nice/easy for your users, but does not "prevent" or "ensure" anything.
[02:33:29] <__adrian> "... use htmlspecialchars"  // for what reason?
[02:33:41] <__adrian> you absolutely have to validate it
[02:33:53] <__adrian> validate everything, else you don't know what it is or if it's what you want.
[02:34:04] <celphi> https://usercontent.irccloud-cdn.com/file/eP0EgZXF/image.png
[02:34:05] <__adrian> what if i sent you an array instead of text?
[02:34:14] <celphi> this type of box
[02:34:17] <__adrian> i understand
[02:34:24] <celphi> and i display their text on page
[02:34:30] <__adrian> what if i sent you an array instead of text? your script would break. you can't insert an array into a db
[02:34:44] <celphi> it would be all a string
[02:34:46] <__adrian> no
[02:34:48] <__adrian> see above.
[02:34:57] <__adrian> i can send you anything i like. i don't HAVE TO use your form.
[02:35:15] <celphi> oh i see what you mean
[02:35:22] <Sammitch> I can make my own form that posts to the same place, or just use curl to script it.
[02:35:25] <celphi> well id format into a string
[02:35:35] <celphi> i see what you mean by validate
[02:35:35] <__adrian> you shoudln't
[02:35:44] <__adrian> if it's "wrong" input you should reject it.
[02:35:50] <__adrian> NEVER try to fix wrong inputs.
[02:35:57] <celphi> ok gotcha
[02:36:03] <__adrian> tell the user the input is wrong, and then it's their job to fix it.
[02:36:20] <Sammitch> trying to fix bad input is the path to madness
[02:36:40] <__adrian> also that's how you end up letting attacks succeed
[02:37:14] <__adrian> even if i do use your form, you probably want to validate (at the least) that the text is not empty and i used printable characters
[02:37:55] <entuland> there are cases where you get legit input with some parts which are not legit - say, HTML with <script> tags or other tags you don't want to allow
[02:38:04] <__adrian> sometimes
[02:38:05] <Sammitch> the place I used to work handled real estate data, and I caught one of my guys trying to compile a list of all the different ways that realtor misspelled the city "Austin" so he could "fix" the data we were getting from the texas boards. it was a "the universe is always going to produce a better idiot" conversation. :P
[02:38:39] <Sammitch> side note: dropdown inputs are your friend.
[02:38:41] <__adrian> that's a case for an html validator, e.g., htmltidy
[02:38:55] <Sammitch> can't misspell "Texas" if you're not allowed to type anything.
[02:39:20] <__adrian> sure, but again, that's user convenience
[02:39:31] <Sammitch> AUtsni, TZ
[02:39:43] <__adrian> the validation step is  if ($texas !== "Texas") { throw }
[02:40:20] <Sammitch> also we didn't actually collect this data from the realtors, this is the result of the boards not validating _their_ inputs.
[02:40:50] <__adrian> yeah real estate is not a programming field you want to get into
[02:40:55] <Sammitch> my position was very much "garbage in, garbage out" if they want it fixed they have to talk to the board and we'll get it in the next update
[02:41:08] <Sammitch> __adrian: it's a gorram nightmare is what it is
[02:41:37] <__adrian> ^ i had to explain to someone today that if some guy signs up and says his name is "<script>" then that's what his name is
[02:41:54] <Sammitch> haha yep
[02:41:57] <__adrian> this after 30 min of "where did you actually see the XSS problem"
[02:42:03] <__adrian> (there wasn't one)
[02:42:22] <Sammitch> he sawed a boogeymen
[02:42:30] <celphi> thanks __adrian
[02:42:39] <__adrian> welcome
[02:43:03] <__adrian> celphi, did you understand my distinction between "using parameters" vs. simply "prepared statements" ?
[02:43:28] <celphi> im assuming you're talking about placeholders with prepared statements
[02:43:29] <Sammitch> as always, my favorite bad data anecdote: "half_baths: 2.5"
[02:43:35] <__adrian> they're not placeholders
[02:43:48] <celphi> `SELECT * FROM users where EMAIL = ?`
[02:43:57] <celphi> `?` is PH right?
[02:43:59] <__adrian> yes, that's a parameter  :)
[02:44:04] *** Joins: stenno (~stenno@user/stenno)
[02:44:06] <__adrian> it's NOT a placeholder.
[02:44:13] <__adrian> it's never replaced with the data.
[02:44:25] <celphi> https://phpdelusions.net/pdo
[02:44:34] <celphi> refers them to placeholders is where i got it
[02:44:51] <Sammitch> query text vs statement object
[02:45:21] <__adrian> that is the thing i'm talking about, yes. i prefer not describing them that way, as it leaves room for confusion about what actually happens
[02:45:35] <celphi> https://usercontent.irccloud-cdn.com/file/Xl5KBKjb/image.png
[02:45:45] <__adrian> when people say "placeholder" they tend to think that that means the data is eventually "inserted" there.
[02:45:47] <celphi> no problem. Thanks for pointing it out
[02:45:56] <celphi> ya honestly that's what i thought
[02:46:28] <__adrian> yeah. not trying to nitpick, but pointing out the difference
[02:46:43] <entuland> the docs refer to them as "parameter markers" or something
[02:47:23] <entuland> that article could have used the official names to be more accurate
[02:47:29] <__adrian> with parameters, you make an SQL query with NO DATA. and then later, you send data with NO SQL. ← THAT is why they prevent injection. because the SQL and the data are never in the same place, so they can never be confused.
[02:47:44] <__adrian> they don't even get "put together" inside the database.
[02:47:53] <__adrian> the article's fine
[02:48:11] <entuland> oh I just refer to their usage of "placeholder" instead of "parameter marker"
[02:48:31] <__adrian> yeah. which is also fine in the end, so long as you understand the actual meaning
[02:48:33] <entuland> cause indeed "placeholder" may make people think there is such a replacement
[02:48:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[02:50:08] <celphi> awesome thanks for explaination very thourough
[02:55:29] <__adrian> welcome
[02:56:36] *** Joins: DaNeenjah (~jake@162.sub-72-105-217.myvzw.com)
[03:00:49] *** Joins: stenno (~stenno@user/stenno)
[03:08:37] *** Quits: judah (~judah@rrcs-74-87-190-146.west.biz.rr.com) (Quit: Leaving)
[03:34:49] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 268 seconds)
[03:38:04] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[03:38:27] <kittonian> hi all. is anyone using roundcube? I'm having an issue that I can't figure out and no one is around in the roundcube channel
[03:38:54] <Blondie101010> well good luck in your quest
[03:39:15] *** Quits: pmercado (~pmercado@186.107.32.40) (Quit: Konversation terminated!)
[03:39:51] <Blondie101010> if the question is related to PHP then you can mention it here, but if it's specific to the roundcube crap, you're on your own
[03:42:48] <BadAdviceCat> I used placeholder because of the terminology used in the PHP documentation. When you've mention it like that, I can see how people would get confused as to what it actually do.
[03:44:10] <Blondie101010> it is misleading
[03:44:13] <BadAdviceCat> I wish someone can summon nikic here.
[03:47:12] *** Joins: mnemonic (~semeion@user/semeion)
[03:50:24] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[03:51:20] <celphi> is it bad to store a pdo handle into a session variable?
[03:51:32] <TinoDidriksen> Yes
[03:51:51] <TinoDidriksen> Resources can't be persisted in the session.
[03:51:52] <celphi> what's proper way to get pdo handle then
[03:52:03] <celphi> im assuming globals are bad
[03:52:04] <TinoDidriksen> Open it on each request.
[03:52:19] <__adrian> $db = new PDO(...);
[03:52:27] <TinoDidriksen> Globals are equally bad. Open it in the higest needed scope, then pass it around to consumers.
[03:52:29] <celphi> create new session on every page load?
[03:52:33] <TinoDidriksen> No
[03:52:43] <__adrian> no, a ne PDO instance
[03:52:46] <__adrian> *new
[03:53:05] <Blondie101010> so he was obviously abusing superglobals
[03:53:24] <TinoDidriksen> Session has nothing to do with PDO. You can't store PDO in a session, and if you want to store the session in PDO then you need PDO before it anyway.
[03:53:26] <__adrian> _most things_ aren't really good things to store in the session
[03:53:34] <__adrian> but PDO, literally not possible.
[03:54:02] <celphi> so require_once the pdo file on each page and create a new instance every time?
[03:54:21] <Blondie101010> it's not as if you had a choice on that...  you need to connect to the DB
[03:54:23] <TinoDidriksen> No...once in the entry point and pass it around.
[03:54:32] <__adrian> ^
[03:54:38] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:54:53] <Blondie101010> guess the "page" is another red flag
[03:55:01] <__adrian> celphi: from the way you're asking, i assume you've got a big collection of php webpages
[03:55:04] <Blondie101010> php scripts should not correspond to pages
[03:55:05] <celphi> ok so example i have mod rewrite rules that pushes all requests to index.php - so i would create new instance in index.php and pass it to necessary classes?
[03:55:10] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 268 seconds)
[03:55:12] <__adrian> as opposed to a website with a single point of entry
[03:55:16] <__adrian> oh, ok
[03:55:20] <__adrian> then yes
[03:55:27] <TinoDidriksen> Yes, that sounds fine.
[03:55:28] <__adrian> BUT don't mod_rewrite
[03:55:45] <celphi> is there better?
[03:55:51] <__adrian> you don't need it for this. and if you don't need it for anything else, best to turn it off completely.
[03:55:52] <TinoDidriksen> FallbackResource exists these days.
[03:55:57] <__adrian> yes, FallbackResource
[03:56:02] <celphi> i use it for clean urls too
[03:56:18] <celphi> well two things really
[03:56:25] <__adrian> how so? (you likely don't need to)
[03:56:28] <TinoDidriksen> FallbackResource can do most of what we used to do with mod_rewrite.
[03:56:46] <celphi> login.php would show as login in url but the request_uri is still login.php
[03:57:06] <TinoDidriksen> Yup yup. Just read up on FallbackResource
[03:57:06] <__adrian> why would you need that?
[03:57:09] <celphi> so index.php finds login.php in database and runs appropiate class
[03:57:22] <__adrian> make the index find "login" in the database
[03:57:55] <__adrian> there's absolutely no need to redirect   /foo to /foo.php when you're serving everything from your index.php anyway
[03:58:11] <celphi> well it does
[03:58:11] <Blondie101010> so my red flag was justified
[03:58:21] <celphi> there's no redirect
[03:58:39] <TinoDidriksen> You shouldn't need login.php as URI. login is sufficient.
[03:59:06] <Blondie101010> (as a route)
[04:00:28] <celphi> what about ajax calls,. is it appropiate to have them come to index.php too and use switch statement to handle their actions?
[04:00:49] <__adrian> no
[04:00:57] <__adrian> well not exactly
[04:01:06] <Blondie101010> well not sure why that would involve a debate on switch
[04:01:25] <__adrian> you might have differnt endpoints for your api calls, or you might not
[04:01:56] <__adrian> and you might have a different entry script (your index.php) or might not
[04:02:01] <celphi> right, but if all incoming requests are directed to index.php wouldnt the ajax go there too?
[04:02:16] <Blondie101010> "fall back"
[04:02:18] <TinoDidriksen> Only if there is no matching file.
[04:02:21] <__adrian> but you wouldn't need to request "index.php" directly and bypass your existing routing just to get to the same place
[04:02:51] <TinoDidriksen> If you have an actual /ajax.php and call that, it won't fall back to /index.php
[04:03:04] <TinoDidriksen> Reminder: Don't keep login.php next to index.php
[04:03:06] <__adrian> (not that i'd suggest that ^)
[04:03:44] <celphi> FallbackResource ill have to google that one,. but im assuming that's an apache directive?
[04:03:49] <__adrian> yes
[04:04:09] <__adrian> first thing to ask is, are you using the same controllers (scripts) to respond to ajax vs. your html requests?
[04:04:21] <__adrian> if so then there's nothing different to do
[04:04:26] <TinoDidriksen> As cruel as we are, we wouldn't suggest nginx solutions when you are clearly using Apache based on mod_rewrite.
[04:04:36] <__adrian> and if not, then you've got two independent systems, so nothing to coordinate
[04:06:13] <celphi> __adrian: im describing a method i used about 8yrs ago, so i was curious what's more modern
[04:06:52] <Blondie101010> people still do bad things
[04:07:05] <celphi> im sure im one of those ppl
[04:07:26] <celphi> but you guys/gals seem to know your stuff so im picking the minds of great people
[04:07:28] <__adrian> i'm not saying you're bad and should feel bad. we're more at the "well what exactly is your plan" stage
[04:08:18] <celphi> my plan is looking for a modern approach to handling requests of a website without using a already built framework
[04:08:26] *** Quits: goddard (~goddard@user/goddard) (Read error: Connection reset by peer)
[04:08:45] *** Joins: goddard (~goddard@user/goddard)
[04:08:52] <celphi> if you know of a link or documentation worth reading ill definitely read it
[04:09:04] <__adrian> ok, well there's a question
[04:09:10] <__adrian> why "without using a already built framework" ?
[04:09:51] <celphi> bc unforntuately the place i work the programmers are anti framework
[04:10:13] <__adrian> send them here
[04:10:21] <celphi> lol. i wish
[04:10:32] <__adrian> where a tool exists that works, you use it
[04:10:43] <celphi> amen!
[04:10:58] <celphi> im assuming you'd suggest laravel?
[04:11:00] <Sammitch> NIH! FUD!
[04:11:57] <__adrian> not specifically
[04:12:18] <__adrian> i'd suggest NIH syndrome is bad
[04:13:10] <celphi> k. so to my earlier question, are there any design patterns for new sites that are scalable (non-framework) where i can read an article up on. im assuming the one i have is dated
[04:13:57] <__adrian> maybe https://github.com/PatrickLouys/no-framework-tutorial
[04:14:24] <__adrian> as for "webpage vs ajax" stop and think about what the difference there really is
[04:14:31] <__adrian> that should lead pretty quick to an answer
[04:15:57] <celphi> yeah i was thinking i could just direct all my ajax calls to a specific endpoint (and use that endpoint as a controller) directing the action to take based on the ajax call.
[04:16:25] <__adrian> why would all ajax calls go to one endpoint?
[04:16:37] <__adrian> or all use the same controller?
[04:16:52] <__adrian> don't they do different things?
[04:18:38] <celphi> fetch("/some_endpoint", { ajax: true, action: "user_update", first_name: "celphi" }); where on the server I'd explode on `_` and direct that ajax call to my user class and run the method update. This is very basic example
[04:18:41] <__adrian> so, what i was hinting at: they're _not_ different. one will return html and the other will return json (or whatever), and the organization might vary, but they're the same thing in the end: your application.
[04:18:57] <__adrian> "> ajax: true"  // heh
[04:19:21] <__adrian> so in your example,   /some_endpoint   should be  POST /user
[04:19:35] <__adrian> and  ajax:true should be  Accept: application/json
[04:19:52] <__adrian> neither should be inputs.
[04:20:35] <__adrian> webpage vs. ajax is just html vs. json.  so you send the appropriate http header that says you want json.
[04:21:27] *** Parts: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Leaving)
[04:21:38] <celphi> what do you mean POST /user
[04:21:58] <celphi> isnt that what im doing with fetch?
[04:22:58] <celphi> actually, nvm the default is GET. so ya, i'd have to have `method: "POST"`
[04:23:44] <__adrian> well you said  /some_endpoint { action:user_update }
[04:24:01] <__adrian> i'm saying the endpoint should be   /user/update  and there should be no input "action"
[04:24:19] <__adrian> the endpoint (the verb+uri) IS the action.
[04:24:36] <__adrian> errr
[04:24:44] <__adrian> sorry, i meant just   /user
[04:24:56] <__adrian> or likely  /user/{id}
[04:26:15] <celphi> so you're saying for every action i would create a unique url?
[04:26:31] *** Joins: semeion (~semeion@user/semeion)
[04:26:31] *** mnemonic is now known as Guest3255
[04:26:48] <celphi> `/user/{id}/update` what about for the individual fields?
[04:26:50] <__adrian> one endpoint should do one thing, yes
[04:27:01] <Byteflux> you don't need /update there
[04:27:04] <__adrian> ^
[04:27:10] <__adrian> POST means you're giving information
[04:27:13] <Byteflux> the method 'POST' or 'PUT' indicates that you want to "update"
[04:27:37] <__adrian> for individual fields - just omit the inputs you're not updating
[04:28:03] <__adrian> but if something is more of a process than just "change "foo" to "bar"" then it might have its own endpoint
[04:28:10] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:29:19] <celphi> so i would still send the json `{ first_name: "celphi" }` to `/user/{id}/`? and since the request is a POST that means to update it?
[04:29:28] <__adrian> yes
[04:29:42] *** Quits: Guest3255 (~semeion@user/semeion) (Ping timeout: 255 seconds)
[04:29:45] <__adrian> POST /user/12345 { "name": "celphi" }
[04:29:51] <celphi> what about deleting ? bc i dont really delete it's really updating database delete column
[04:29:58] <__adrian> DELETE /user/12345
[04:30:16] <__adrian> how you implement it (hard vs soft) doesn't matter
[04:30:51] <celphi> i just assumed everyone just used POST -- you're actually using the specific methods as intended
[04:30:54] <Byteflux> ideally GET /user/12345 would still be a 404 even if you soft delete it, though.
[04:31:07] <__adrian> yes
[04:31:36] <celphi> doesnt that complicate making APIs then?
[04:31:46] <Byteflux> nope, it makes it simpler, IMO
[04:31:55] <__adrian> definitely simpler
[04:31:57] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[04:32:06] <Byteflux> it's easier to understand that /user/{id} is an endpoint representing a resource, the resource is a user with the ID of {id}
[04:32:13] <Byteflux> and you can perform specific actions on that resource from the same endpoint
[04:32:14] <__adrian> generally amkes it more organized and easier to use, too
[04:33:04] <celphi> interesting
[04:33:16] <celphi> now that i think about it-- it definitely does
[04:33:20] <Byteflux> most APIs these days are designed this way, at least those that i've seen
[04:33:35] <celphi> i've only seen GET/POST with apis though
[04:34:09] <__adrian> get/post/delete are most common
[04:34:23] <__adrian> put is not as common/appropriate as you might think
[04:34:59] <__adrian> and i'm not going to suggest custom methods
[04:35:31] <Byteflux> custom method probably means you should use a different endpoint
[04:35:50] <celphi> what about update vs insert?
[04:36:12] <Byteflux> POST /user vs POST /user/{id}
[04:36:24] <Byteflux> oh that's create
[04:36:29] <Byteflux> yeah that's right, im not confused :)
[04:36:36] <__adrian> think "create" not "insert"
[04:36:38] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[04:36:51] <__adrian> "insert" isn't something your website does. it's a database detail
[04:36:56] <Byteflux> typically the server would be responsible assigning entity ID for create/insert
[04:37:03] <Byteflux> you just provide the details
[04:38:56] <celphi> ok cool i like this idea-- im going to try and make a basic example of it tonight
[04:39:14] <Byteflux> if you wanna read more you could also research "rest API" or "restful API"
[04:39:58] <celphi> ive made apis before in past im just trying to improve my moderization
[04:43:56] <Byteflux> good resources are existing APIs you can look at since many use this sort of design. for example if you're familiar with GitHub, they have a comprehensive REST API you could reference for learning: https://docs.github.com/en/rest
[04:50:37] *** Quits: DaNeenjah (~jake@162.sub-72-105-217.myvzw.com) (Quit: WeeChat 3.2)
[04:52:24] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 272 seconds)
[04:54:06] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:13:32] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[05:18:18] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[05:28:32] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[05:28:45] *** kevr is now known as GaKu666
[05:30:04] *** GaKu666 is now known as kevr
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:25] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[05:34:19] *** Joins: vlm (~vlm@user/vlm)
[05:50:08] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[05:55:29] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[06:00:09] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[06:00:32] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[06:03:54] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Ping timeout: 276 seconds)
[06:06:33] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[06:09:20] *** Quits: omegatron (~some@p5484990d.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:15:14] *** Joins: ferdna (~ferdna@user/ferdna)
[06:16:04] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[06:16:49] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[06:17:42] *** intx_ is now known as intx
[06:17:43] *** Joins: ferdna (~ferdna@user/ferdna)
[06:25:30] *** Quits: SleePy (~SleePy@simplemachines/siteteam/SleePy) (Quit: I quit, that is all)
[06:28:53] *** Joins: SleePy (SleePy@simplemachines/siteteam/SleePy)
[06:35:51] *** Joins: Rockwood (~Rocky@user/rocky)
[06:37:02] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[06:41:58] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 265 seconds)
[07:19:00] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[07:21:40] <Thanatermesis> what is the best practice for a function to return different values so that another function knows what to do with these results?
[07:22:23] <Thanatermesis> for example I actually return a string of words, like "fake suspicious smtp_error", the other function greps if one word or other matches in the return value in order to do different things
[07:23:22] <s17> you could return an array
[07:23:24] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[07:23:34] <Blondie101010> no to either
[07:23:54] <Blondie101010> a function should *always* return the same type, with null as the only acceptable exception
[07:24:07] <Blondie101010> otherwise throw Exceptions
[07:24:54] <Blondie101010> an exception has 3 important properties, which makes it very flexible
[07:25:09] <Blondie101010> well not all 3 are properties
[07:25:43] <Blondie101010> the 3 points are: type, message, and error code...  so you can pass just about anything useful in there
[07:27:11] <Thanatermesis> mmh so I should at least return the array "empty", right?
[07:27:35] <Blondie101010> if there are no results, but that would be different than an error
[07:28:00] <Blondie101010> if something goes wrong, use an exception
[07:28:30] <Blondie101010> then the processing rolls up until it gets caught
[07:28:49] <Blondie101010> so the layer that knows how to handle it is the one that catches it
[07:37:18] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:2fad:104f:b1f2:ce09)
[07:37:26] <guy_frm_yogaland> hello guys!
[07:38:39] <guy_frm_yogaland> I need some help with php docker versions, I am new to programming and want to know what isdifferent between buster, fpm, zts, etc
[07:39:48] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[07:41:22] <Blondie101010> fpm is a PHP SAPI (server API)...  that is what gets called to process a script
[07:41:34] <celphi> any idea why curl would work from cli but doesnt work in browser? im on aws.
[07:42:06] <Blondie101010> fpm is used for web server communications
[07:43:06] <Blondie101010> zts in reference to PHP means Zend Thread Safe which allows some functionalities which are very rarely used for many reasons
[07:43:35] <Byteflux> guy_frm_yogaland: What Blondie101010 said ^ and Buster refers to the Linux distro used in the image (Debian Buster)
[07:43:43] <Byteflux> There's also 'cli' for command line PHP scripts
[07:44:00] <Blondie101010> there are more SAPIs than I know by heart
[07:44:04] <Byteflux> And there's 'apache' which is for mod_php server API (as opposed to fpm)
[07:44:24] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[07:45:05] <Byteflux> For running a website you will want either 'apache' or 'fpm' images. I would keep it very simple and determine what PHP version you need/prefer and choose one of either apache or fpm.
[07:45:27] <Byteflux> For example if you want PHP 7.4 with mod_php, then '7.4-apache' is the tag you should use
[07:45:28] <Rockwood> celphi, hi
[07:45:34] <celphi> hi Rockwood
[07:45:41] <celphi> any suggestions?
[07:46:29] <Rockwood> https://aws.amazon.com/worklink/resources/worklink-check-domain-connectivity/
[07:46:52] <Rockwood> curl works i think your server services concern
[07:46:57] <Blondie101010> guy_frm_yogaland:  https://www.google.com/search?q=php+fpm+apache+docker+compose
[07:47:26] <Rockwood> celphi, hope your server services works fine
[07:48:13] <Blondie101010> celphi:  curl never runs in the browser, but I suspect you're talking about the web SAPI instead of CLI
[07:48:26] <Blondie101010> that difference is *most* likely in the php.ini that gets loaded
[07:48:39] <guy_frm_yogaland> actually, I intend to use nginx instead of apache
[07:48:45] <guy_frm_yogaland> what should I choose?
[07:48:56] <Blondie101010> so look at phpinfo() from the web SAPI and compare with `php -i`
[07:49:06] <Byteflux> guy_frm_yogaland: You want the 'fpm' image.
[07:49:10] <Blondie101010> guy_frm_yogaland:  just change that word in the Google search
[07:49:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:49:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[07:49:26] <Blondie101010> you seriously need to start reading a lot
[07:49:35] <Byteflux> Pick a version such as 8.0-fpm or 7.4-fpm
[07:49:36] <Rockwood> me too :D
[07:50:04] <Byteflux> You should stick to a particular major.minor version to avoid unexpected changes between image updates.
[07:50:05] <Blondie101010> I don't think I'll ever use a .0 of anything
[07:50:28] <Byteflux> You don't want to do 8-fpm and then suddenly the image is updated from 8.0 to 8.1, even if nothing breaks that's not good.
[07:50:54] <Blondie101010> hmmm good point
[07:51:04] <guy_frm_yogaland> yeah, otherwise I would have used the latest tag
[07:51:25] <celphi> Rockwood: i have to enable fleetwood to see my site in browser?
[07:51:57] <guy_frm_yogaland> @Blondie101010: I am very new to programming and come from a different field of work and learning and doing stuff
[07:52:21] <Blondie101010> guy_frm_yogaland:  you need to be able to stand up before you can learn to walk
[07:52:30] <guy_frm_yogaland> yes
[07:52:49] <guy_frm_yogaland> since a month or so I have been learning programming and I have a mentor as well
[07:53:06] <guy_frm_yogaland> he guided me to learn git and docker for creating web apps
[07:53:12] <Blondie101010> sure you can have your mind set on some project, but keep in mind that you have a lot of things to focus on to reach that
[07:53:17] <guy_frm_yogaland> so that I can work from home
[07:53:28] <Blondie101010> that sounds interesting
[07:53:29] <guy_frm_yogaland> yeah
[07:53:46] <Blondie101010> so he teaches you for free on IRC?
[07:54:09] <Byteflux> Setting up php-fpm/nginx from Docker might be a bit daunting for a beginner. It's good to learn but don't feel like you need to learn so much all at once
[07:54:10] <guy_frm_yogaland> I am trying to create a customized e-commerce website just for practice
[07:54:48] <Blondie101010> eeeeesh
[07:55:03] <Blondie101010> what kind of customization?
[07:55:07] <guy_frm_yogaland> @Blondie101010: no he doesn't teach me, he just gives me a set of goals to comlete, and I have to do it anywhich way possible
[07:55:21] <Blondie101010> mmm interesting
[07:55:38] <Byteflux> The most important thing is you have something working, not necessarily that it's done in the best way properly.
[07:56:05] <Blondie101010> that depends on the perspective
[07:56:12] <Blondie101010> for a beginner it's different
[07:56:39] <Blondie101010> you don't learn much by doing crappy things for years
[07:56:59] <guy_frm_yogaland> what kind of customization? -> there are free open source e-commerce products which can create a shp in 5 minutes, but I want to have a customized one
[07:57:22] <guy_frm_yogaland> *online shop in 5 minutes
[07:57:35] <Blondie101010> do those include customization options, like plugin and themes?
[07:57:37] <Byteflux> Things like Docker are nice but not important if you're new to programming and trying to learn :)
[07:57:59] <Blondie101010> including "buster" in the initial question says a lot
[07:59:57] <Blondie101010> guy_frm_yogaland:  what package are you thinking of?
[08:00:33] <Byteflux> Just stay far, far away from Magento.
[08:00:37] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[08:01:04] <Blondie101010> I'd agree but have to disagree in principle to the suggestion
[08:01:42] <guy_frm_yogaland> actually, I am trying to get a contractual project in the future from the mentor's company and that is why docker and git is essential for working on that project
[08:01:43] <Blondie101010> it's among the top solutions and some people make a lot of money using it
[08:02:12] <Blondie101010> guy_frm_yogaland:  you can't become a consultant in something you've never done
[08:02:22] <guy_frm_yogaland> so, since I am a beginner that is why I choose php and laravel for project
[08:02:27] <Byteflux> Yeah it just has a very high entry barrier.
[08:02:58] <Blondie101010> guy_frm_yogaland:  you mix everything together
[08:03:00] <guy_frm_yogaland> yeah, but it is good for me
[08:03:08] <Blondie101010> you have to learn the basics in your environment
[08:03:29] <guy_frm_yogaland> he says like learn the hard way
[08:03:38] <Byteflux> You can refer to Laravel's official documentation and guides and community videos (Laracasts) to learn that stuff.
[08:03:43] <Blondie101010> if you get a ecommerce solution, it may be based off Laravel or whatever, but you don't get to choose that
[08:03:59] <Byteflux> Laravel has Sail which sets up your development environment using Docker and does all that heavy lifting for you.
[08:04:01] <Blondie101010> so it's not a matter of the hard way...  you just won't learn
[08:04:33] <guy_frm_yogaland> ok
[08:04:35] <Byteflux> I'd stick to the docs because it already guides you through this stuff
[08:04:40] <Byteflux> Try not to veer off course too much
[08:04:45] <Blondie101010> if all you want is to use a hammer to put in screws all your life, that's your choice, but you won't get a job that wayt
[08:05:19] <guy_frm_yogaland> actually he game me a site link on digital ocean which explains the process for creating and run the docker customized images
[08:05:32] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 268 seconds)
[08:05:54] <Byteflux> guy_frm_yogaland: O'
[08:05:54] <Blondie101010> was it a referral link?
[08:05:57] <Byteflux> I'd just stick with https://laravel.com/docs/8.x#your-first-laravel-project
[08:06:31] <Blondie101010> if his objective is to create an ecommerce website, he may as well look for such script
[08:06:41] <Blondie101010> and there are many acceptable options
[08:06:42] <Byteflux> That too, ecommerce isn't trivial.
[08:06:44] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[08:06:55] <Byteflux> Building on an existing solution may provide a better learning experience.
[08:07:04] <Blondie101010> and they obviously are ALL very customizable :)
[08:07:27] <guy_frm_yogaland> I don't know but he strictly said not to install php mysql etc on my machine directly and use it inside docker because everything comes as an image and running multiple containers at the same time for scalability and that is what the contract job is for
[08:07:48] <Blondie101010> many people think that way and it's fine
[08:08:03] <Blondie101010> guy_frm_yogaland:  but seriously, did he give you a referral link?
[08:08:14] <guy_frm_yogaland> no, he did not
[08:08:18] <Blondie101010> ok phew
[08:08:31] *** Joins: guidoc (~guido@host-79-19-252-192.retail.telecomitalia.it)
[08:09:20] <Byteflux> Sometimes perfection gets in the way, especially when you're just trying to learn :)
[08:09:23] <Blondie101010> for testing and experimenting, you don't necessarily to have your site online
[08:10:07] <guy_frm_yogaland> e-commerce is for my own practice, the real task is something complex
[08:10:09] <Byteflux> Things don't need to be perfect or ideal. It's more important that you're able to get your hands dirty and actually write code and learn the language before you start worrying about how to deploy your apps.
[08:11:11] <Blondie101010> ^^
[08:11:38] <guy_frm_yogaland> yeah, I was learning php and then laravel since a month now
[08:12:05] <Blondie101010> ok and how is that going?
[08:12:14] <Byteflux> Do you have a local website setup and working?
[08:12:30] <guy_frm_yogaland> it's just a bit hard for me doing the docker way for running the application, using gitlab and many thing coming up ahead is hard for me
[08:13:00] <guy_frm_yogaland> it's like only open source, no windows, no vscode, no anything proprietary
[08:13:00] <Blondie101010> that's understandable, but my concern is that you refuse to take the time you NEED
[08:14:24] <Byteflux> It's unrealistic for a beginner to learn all of these things in a short amount of time.
[08:14:33] <guy_frm_yogaland> no, I have quite a few amount of time, it's that I am unable to comprehend and unable the right slide in the zigsaw puzzle
[08:14:49] *** Joins: stenno (~stenno@user/stenno)
[08:15:07] <guy_frm_yogaland> like unable to connect the right dots
[08:15:09] <Blondie101010> guy_frm_yogaland:  you don't need to learn PHP to learn docker, and vice versa
[08:15:15] <Blondie101010> learn one thing at a time
[08:15:23] <guy_frm_yogaland> ok
[08:15:27] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[08:15:28] <Byteflux> Yep, if you try to learn too many things all at once, you'll end up learning nothing at all.
[08:16:15] <guy_frm_yogaland> what to do if the person concerned is asking me to do the work without installing php on the computer?  only on the docker itself?
[08:16:48] <Blondie101010> once you know how to get a simple website up with the proper docker setup, then you can move to the next step, which could be to try an ecommerce script on the docker setup
[08:17:23] <Blondie101010> the docker approach is a bit of a philosophy
[08:17:46] <Blondie101010> it has its advantages and disadvantages
[08:18:00] <guy_frm_yogaland> and I fine with it, because I can create the application using the docker commands like in the dockerfile, etc
[08:18:35] <guy_frm_yogaland> only issue is that there are multiple images for multiple services and choosing among those is a big pain for me
[08:19:00] <Blondie101010> yes, you have to take the time to read about the relevant options
[08:19:17] <Byteflux> You'll find there's an official image for most things.
[08:19:27] <Blondie101010> it's not necessarily essential to reach your goal, but it is if you want to learn anything
[08:19:39] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[08:20:56] <Byteflux> The question you asked about the version tags for the php docker image is just something you gotta learn, but it works the same way with many (if not most) images. A lot of the tags/versions are just "aliases"
[08:20:57] <guy_frm_yogaland> yes, so for the immediate cause, should I choose fpm, zts, or simple plain php-8.0
[08:21:15] <Blondie101010> ah
[08:21:33] <Blondie101010> I'd say zts is not an important consideration
[08:22:03] <Blondie101010> if you EVER think of needing it, you will already know what it's for!
[08:22:23] <Byteflux> sounds like you want fpm, but you should use a specific version
[08:22:32] <Byteflux> plain 'fpm' tag refers to the the fpm SAPI on latest version on the default distro
[08:22:46] <Byteflux> you can qualify it with something like '8.0-fpm'
[08:22:54] <Blondie101010> anyways
[08:23:20] <guy_frm_yogaland> yeah, ok I will use that
[08:23:24] <Blondie101010> you need to know how to use a computer operating system before you can program on it
[08:23:46] <Byteflux> the '8.0-fpm' tag is an alias for the php-fpm SAPI on the latest 8.0.x version
[08:24:02] <Byteflux> on the default distro
[08:24:19] <guy_frm_yogaland> my mentor is helping me sometimes with linux troubleshooting, especially configuration
[08:24:48] <__adrian> guy_frm_yogaland: i'm on with the "not on your desktop operating system" advice. it's unlike any "real" production env and more importantly, it gets messy
[08:25:04] <Blondie101010> that for sure
[08:25:20] <__adrian> with docker/vm/etc., you can _intentionally_ break everything, and it's no problem - just shut it down and start again
[08:25:31] <guy_frm_yogaland> but he has persuaded me to dich windows and most of the patented softwre products now
[08:25:38] <__adrian> THAT is not important
[08:25:41] <__adrian> use what you like
[08:25:50] <guy_frm_yogaland> yeah
[08:26:08] <__adrian> "don't use windows as your web dev env" is good and correct advice
[08:26:12] <Byteflux> yeah there's no need to ditch windows or vscode or whatever development tools if that's what you're comfortable in
[08:26:15] <__adrian> but that doesn't mean "don't use windows"
[08:26:39] <Byteflux> if you use Windows, you can just install WSL 2 and Docker Desktop to be able to use docker
[08:26:45] <__adrian> ^
[08:27:01] <__adrian> it's php, the web server, the DB, etc. that you don't want on your desktop
[08:27:07] <__adrian> your code editor is fine
[08:27:21] <__adrian> also btw "not on your desktop" holds true even if your desktop is linux
[08:27:26] <guy_frm_yogaland> no I can't because my computer is an old one and docker doesn't run on windows on my machine, says hardware not compatible
[08:27:43] <guy_frm_yogaland> but works totally fine on linux
[08:28:02] <__adrian> that's fine then
[08:28:06] <guy_frm_yogaland> yeah
[08:28:07] <Blondie101010> docker has no hardware requirements as far as I know
[08:28:23] <__adrian> might be 32 bit
[08:28:35] <Byteflux> granted, Docker on Windows is virtualized because WSL2 is virtualized, but still adequate for development.
[08:28:47] <guy_frm_yogaland> yes, it says to turn on the hardware virtualization feature on th bios but on linux it doesn't have that thing
[08:29:05] <guy_frm_yogaland> runs fine
[08:29:15] <Byteflux> Yes, on Intel processors it's called VT-x and the Hyper-V container which runs WSL2 needs it.
[08:29:23] <Byteflux> You should definitely have VT-x enabled in your BIOS though, if you don't already.
[08:29:27] <__adrian> ^
[08:29:43] <guy_frm_yogaland> yeah, and on windows wsl2 is not supported on my machine it says
[08:29:44] <Byteflux> On Linux, Docker is containerized natively.
[08:29:46] <Blondie101010> that error message reflects an hypervisor problem
[08:29:46] <__adrian> basically all desktop CPUs from the last ten years are capable
[08:29:58] <__adrian> just needs switched on
[08:30:02] <Byteflux> Yep
[08:30:10] <guy_frm_yogaland> I searched the bios and no option present
[08:30:16] <Byteflux> Is it an Intel processor?
[08:30:17] <guy_frm_yogaland> and it is a no UEFI bios
[08:30:20] <Blondie101010> ok so it must be old
[08:30:21] <guy_frm_yogaland> yes
[08:30:24] <guy_frm_yogaland> core 2 quad
[08:30:28] <__adrian> yep
[08:30:28] <guy_frm_yogaland> yes
[08:30:33] <__adrian> 32 bit and no vt-x
[08:30:37] <Blondie101010> all my 15 year old BIOSes have that option
[08:30:43] <guy_frm_yogaland> 64 bit vt-x capable cpu
[08:30:48] <Blondie101010> but it should still work on WSL2
[08:30:53] <guy_frm_yogaland> so works fine on linux
[08:30:55] <__adrian> wsl2 is a VM
[08:30:58] <Blondie101010> yep
[08:30:59] <Byteflux> Yeah that's old
[08:31:06] <guy_frm_yogaland> no wsl2 does not work at all itself
[08:31:15] <Blondie101010> hmmm ok
[08:31:27] <guy_frm_yogaland> so docker engine needs wsl2 on windows
[08:31:30] <Blondie101010> how old is that computer?
[08:31:41] <Byteflux> Granted, WSL 2 runs on a *very* lightweight VM and performs very well, still it needs VT-x :(
[08:31:43] <guy_frm_yogaland> 10-11 years maybe
[08:32:18] <guy_frm_yogaland> I have a medicine shop and I learnt quite a lot about tech and IT skills in this lockdown tim
[08:32:42] <Byteflux> WSL 1 was native but I don't think that Docker for Windows was able to use it.
[08:32:45] <__adrian> are you in the US
[08:33:00] <Byteflux> Some day.... we'll have native Linux containerization on Windows ... praying :P
[08:33:08] <guy_frm_yogaland> but still it's very vast, I learnt harware fixing upgrading, etc and for software I learnt HTML, CSS, javascript(a bit) and now PHP
[08:34:05] <guy_frm_yogaland> becuause I need to do an ecommerce thing for my shop and lockdown has been little bit positive for me in learning tsuff
[08:34:18] <guy_frm_yogaland> I am from India
[08:34:35] <guy_frm_yogaland> last 6 months was like from real zero to many things
[08:35:35] <s17> always be learning
[08:35:44] <__adrian> ++
[08:36:00] <guy_frm_yogaland> he gave me few tips on how to search for the problems and how to use IRC
[08:36:09] <guy_frm_yogaland> just mentorship, etc
[08:36:50] <guy_frm_yogaland> he said you need to learn yourslef untill you learn the art of troubleshooting yourslef
[08:36:53] <Byteflux> Google and IRC, the only resources you'll ever need. It was true for me in 2005 and it's still true in 2021 :)
[08:37:31] <guy_frm_yogaland> yeah, 1005
[08:37:36] <guy_frm_yogaland> *100%
[08:37:45] <guy_frm_yogaland> but I am not very good at typing
[08:37:57] <guy_frm_yogaland> it's so hard but getting used to it
[08:38:18] <Blondie101010> hmmmm, !+guidelines
[08:38:18] <php-bot> hmmmm, For details, /msg php-bot g#, where # is a guideline number, or http://hashphp.org: 0) Help us stay on topic; 1) Be polite; 2) Just ask, we're here to help; 3) http://goo.gl/NRUVQw; 4) Try rephrasing the question; 5) Use a pastebin; 6) Minimize noise; 7) We focus on PHP; 8) We want you to learn; 9) Please check the docs first; 10) Take governance debates to private chat.
[08:38:28] <Byteflux> ~15 years ago I started learning PHP and started in this very channel. There were many days of TML scolding me :P
[08:39:13] <guy_frm_yogaland> really? I can understand. it's so hard yet so easy as my mentor says
[08:39:28] <guy_frm_yogaland> PHP is easy to learn he says and most of the web runs on it
[08:39:52] <Blondie101010> the learning curve is not steep
[08:40:01] <__adrian> just long  ;)
[08:40:07] <Blondie101010> :)
[08:40:10] <Rockwood> __adrian, hi how are you sir?
[08:40:19] <__adrian> hi
[08:40:20] <Rockwood> __adrian, just awake i thing :)
[08:40:25] <Rockwood> think
[08:40:26] <Rockwood> lol
[08:40:29] <Rockwood> again mistake
[08:40:37] <guy_frm_yogaland> everything started for me when I saw an ad on youtube during lockdown about AI/ML/DS and that time I found the mentor
[08:40:48] <Rockwood> __adrian, i created by css first time https://codepen.io/cyberia/pen/YzVpXNq?editors=1111
[08:40:49] <guy_frm_yogaland> he said not to go that path
[08:41:05] <Rockwood> new thing i learn after years lol
[08:41:08] <guy_frm_yogaland> and choose this way
[08:41:19] <Byteflux> You should learn what you want, but I will be honest this field has a lot of job security :P
[08:41:35] <guy_frm_yogaland> is it job security or insecurity?
[08:41:36] <__adrian> probably not all that useful for anything you'd need to do, but if it interests you, go for it
[08:41:58] <guy_frm_yogaland> he haid javascript devs expecially node.js dev's are paid higher than php guys
[08:42:08] <Byteflux> I don't know if there's a similar saying, but I always tell people: if you know PHP, you will never be hungry.
[08:42:13] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[08:42:16] <Byteflux> Because so much of the web runs on it.
[08:42:21] <guy_frm_yogaland> yeah
[08:42:33] <Byteflux> There are always PHP jobs
[08:42:36] <guy_frm_yogaland> there's work always for php
[08:42:56] <guy_frm_yogaland> and freedom for me to work at home or at the shop
[08:43:09] <__adrian> to be clear, yes; but most of it is not-great work  :)
[08:43:14] <guy_frm_yogaland> I don't want to go out of my village so this is a good thing for me
[08:43:15] <Byteflux> Haha true
[08:43:24] <__adrian> git good
[08:43:30] <guy_frm_yogaland> no git god
[08:43:45] <Byteflux> But sometimes you can't be picky! Some times you need that WordPress job :D
[08:44:03] <guy_frm_yogaland> ok
[08:44:48] <guy_frm_yogaland> ok, see you friends, sometime soon with another query
[08:44:52] <guy_frm_yogaland> :)
[08:45:02] <Byteflux> See you. Have fun learning!
[08:45:36] <guy_frm_yogaland> thank ya
[08:45:40] *** Joins: stenno (~stenno@user/stenno)
[08:45:49] *** Parts: guy_frm_yogaland (~gourab@2409:4062:238a:b172:2fad:104f:b1f2:ce09) (Konversation terminated!)
[08:46:21] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[08:46:50] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[08:46:54] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:47:17] *** Joins: Rockwood (~Rocky@user/rocky)
[08:48:53] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[08:50:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[09:05:58] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 272 seconds)
[09:23:46] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[09:27:19] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[09:28:10] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[09:30:10] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 265 seconds)
[09:34:16] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:38:06] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Remote host closed the connection)
[09:38:26] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:50:51] *** Joins: stenno (~stenno@user/stenno)
[09:52:57] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:56:41] *** Quits: Thanatermesis (~unknown@191.92.148.122) (Quit: ɯlɐɔ uı ʞɹoʍ oʇ ƃuıoƃ)
[10:05:04] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[10:07:55] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[10:14:13] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:33:16] *** Joins: rxdeath (~rxdeath@c-67-187-135-103.hsd1.ca.comcast.net)
[10:34:25] <rxdeath> yo i'm doing an api connection with php and i'm able to make it work in postman and the cmdline curl, but can't for the life of me get it going in php.  this is the 3rd api i've done and this one is the only problem i've had with curl
[10:34:52] <rxdeath> i'm getting reponse from curl_error or anything so i'm really confused.  anyone have a good troubleshooting path to go down?
[10:36:41] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:41:33] *** Quits: guidoc (~guido@host-79-19-252-192.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[10:53:27] <rxdeath> z z z zzzz z z z
[11:04:33] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: East bound and down, loaded up and truckin')
[11:04:59] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[11:06:40] *** Joins: guidoc (~guido@93-40-193-148.ip40.fastwebnet.it)
[11:14:49] <TinoDidriksen> rxdeath, if all else fails, you can take the working cmdline curl and run it via shell_exec()
[11:15:14] <rxdeath> and how do i get the response read into an array
[11:15:27] <rxdeath> i usually get an array back and can json decode it into an array
[11:15:32] *** Joins: nucc1 (~nucc1@user/nucc1)
[11:15:39] <TinoDidriksen> shell_exec() returns the whole output, which you can parse however you like.
[11:16:00] <rxdeath> but returns to wehre?  what variable can i access it with?
[11:16:10] <rxdeath> i've used shell exec to do things, but never to get a response
[11:16:15] <TinoDidriksen> $output = shell_exec('curl ...');
[11:16:34] <rxdeath> oh, duh.  ok i guess i'll try that.  i'll get it back as a string thoug hright
[11:16:39] <TinoDidriksen> Yes
[11:16:53] <TinoDidriksen> But if it's valid JSON, then json_decode() will eat it.
[11:17:02] <rxdeath> mmk
[11:17:07] <rxdeath> any idea wtf is going on
[11:17:15] <rxdeath> like why it doesn't work the 'normal' way
[11:17:25] <rxdeath> i get nada back from curl info, cur error nothing.
[11:17:35] <rxdeath> and i'm developing in the same folder as a working api script using curl
[11:21:54] <rxdeath> ok you deserve an awesome award.
[11:22:19] <rxdeath> i've been fucking with things for 3 hours, and that worked first time no problem.  why in gods name do people use the curlopt garbage when you can do this instead?
[11:23:17] <TinoDidriksen> Because shelling out is usually very bad for performance and security.
[11:23:33] <TinoDidriksen> But sometimes it just works...
[11:23:55] <rxdeath> apparenlty.  its an automated script on a computer that the folder is not exposed to the outside so probably not an issue
[11:24:08] <rxdeath> but i made it work the other without too much hassle for 2 other airlines.
[11:24:18] <rxdeath> this is the southwest api for getting cargo information
[11:24:25] <TinoDidriksen> And it's an additional debug point. If PHP can shell_exec, then it's not the PHP user itself that's blocked from doing the action.
[11:24:34] <rxdeath> i did delta in like 2 hours start to finish
[11:24:52] <rxdeath> this is a post with --raw-data so i don't know if that's whats up
[11:25:03] <rxdeath> but why would i get NOTHING back from curl_error or whatever
[11:26:23] <rxdeath> https://pastebin.com/WVzDu8Yr
[11:26:29] <rxdeath> seems pretty straight forward
[11:26:58] <rxdeath> also that attempt to debug into the file gives me nothing.  i set the file as 777 just because i thought it had to be something else causing it to write nothing
[11:29:23] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[11:29:35] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-599f-1841-db2b-7e63.res6.spectrum.com)
[11:30:57] <Alex123> hey guys, I know in php you can compare datetime > datetime. but will it compare if datetimes are in different time zones
[11:33:58] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 268 seconds)
[11:36:42] *** Quits: travisghansen (~travisgha@192.74.130.86) (Read error: Connection reset by peer)
[11:37:09] *** Joins: travisghansen (~travisgha@192.74.130.86)
[11:42:08] <AllenJB> Alex123: Yes
[11:45:43] <AllenJB> This is easy to test: https://3v4l.org/tdaFP
[11:48:35] <rxdeath> hey TinoDidriksen in the curl i need to pass a variable and its freaking out when i try to use quotes, is there any good way to pass the variable to the shell_exec
[11:48:58] <TinoDidriksen> rxdeath, https://php.net/escapeshellarg
[11:49:43] <TinoDidriksen> If it's very complex, you can also write the whole cmd into a x.sh and execute that.
[11:52:01] <rxdeath> ugh i thought iw as so close.
[11:52:30] <rxdeath> i get no return when i  use that.  is it safe to  'crap here ' . escepe($variable) . 'goback to shell';
[11:57:42] <TinoDidriksen> Yes, but be mindful that escapeshellarg() adds 's around the $var, so the var shouldn't have ' or " on the edges.
[11:59:13] <rxdeath> yea i tried it and what it spits out as a command onto the screen works when i paste it into the commanline
[11:59:26] <rxdeath> but the webpage has no result.
[12:00:44] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[12:14:23] <rxdeath> https://pastebin.com/yp05DTSh
[12:15:35] <rxdeath> oh and i fixed shellCommand vs shellcommand, that was just a fat finger, same results htough
[12:17:17] <TinoDidriksen> escapeshellarg($shellcommand) is wrong. escapeshellarg() is for a single argument to the cmdline tool, not for the whole command. I don't see anything there that needs escapeshellarg() at all.
[12:18:43] <rxdeath> pft you should have taken the money ;)
[12:19:30] <TinoDidriksen> It's for e.g. 'curl ... --data-raw '.escapeshellarg($awbRequest)
[12:20:09] <rxdeath> thanks a lot man.  php curl pisses me off so bad
[12:20:25] <rxdeath> i don't get why i can get it in the command line no problem, but php is a jerk about it
[12:21:00] *** Joins: Warped (~Warped@user/warped)
[12:22:10] *** Joins: belak51 (~belak@user/belak)
[12:23:04] *** Quits: synapt (NBishop@o.apocaleaps.com) (Ping timeout: 252 seconds)
[12:23:19] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-599f-1841-db2b-7e63.res6.spectrum.com) (Quit: Leaving.)
[12:23:26] *** Quits: belak (~belak@user/belak) (Ping timeout: 252 seconds)
[12:25:29] *** Joins: synapt (NBishop@o.apocaleaps.com)
[12:29:05] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Read error: Connection reset by peer)
[12:29:24] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[12:58:41] *** Joins: chao (~stenno@user/stenno)
[13:01:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[13:31:00] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Read error: Connection reset by peer)
[13:31:34] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[13:40:35] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:2fad:104f:b1f2:ce09)
[13:42:15] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a1fd-d0af-ea9b-7837.res6.spectrum.com)
[14:09:59] *** Quits: nucc1 (~nucc1@user/nucc1) (Ping timeout: 268 seconds)
[14:13:55] *** Joins: d[-_-]b (~stenno@user/stenno)
[14:16:42] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[14:18:57] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:f02f:cbf7:4060:786c)
[14:27:18] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 255 seconds)
[14:30:10] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:2fad:104f:b1f2:ce09) (Remote host closed the connection)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:35:50] *** Joins: d[-_-]b (~stenno@user/stenno)
[14:40:21] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 255 seconds)
[14:44:04] *** Quits: Dovid (~dovid@96.56.22.146) (Quit: Leaving)
[14:46:02] <celphi> what's the most common way to handle file permissions with /var/www
[14:46:26] <celphi> is it to give `root www-data`? (owner group)
[15:07:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:20:34] *** Joins: zibby15 (~androirc@user/zibby15)
[15:22:09] *** Joins: d[-_-]b (~stenno@user/stenno)
[15:24:38] *** d[-_-]b is now known as stenno
[15:26:13] *** Joins: entuland (~entuland@user/entuland)
[15:34:01] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:f02f:cbf7:4060:786c) (Ping timeout: 246 seconds)
[15:40:56] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 272 seconds)
[15:42:31] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a1fd-d0af-ea9b-7837.res6.spectrum.com) (Quit: Leaving.)
[15:55:56] *** Quits: guidoc (~guido@93-40-193-148.ip40.fastwebnet.it) (Quit: WeeChat 3.2)
[15:57:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[15:59:15] *** Joins: overrider (~overrider@user/overrider)
[16:00:48] *** Joins: stenno (~stenno@user/stenno)
[16:02:22] <overrider> Here is a bad piece of short code that is susceptible to, for example, directory traversal attacks. Could it also be made to execute code on the server? https://pastebin.com/R60BDGFT
[16:04:58] <AllenJB> Not on the server. file_get_contents() does not execute code - it just reads and returns the data from the file.
[16:07:52] <stenno> are you ctf'ing?
[16:09:12] <overrider> AllenJB: Ok thats the good news, i guess.
[16:09:45] <overrider> stenno: Just playing around / studying
[16:11:27] <AllenJB> The code appears to be horribly broken tho - The purpose appears to be to return a binary image file, but no Content-Type header is set (so the client will likely try to interpret the response as HTML), and if an error occurs a string is displayed instead (ie. not a binary image).
[16:12:05] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[16:12:05] <AllenJB> Also consider using passthru(), which avoids loading the entire image file into PHP memory and "passes it straight thru",
[16:14:26] <biberu> see content-disposition too
[16:18:10] <AllenJB> You may also want to read up on X-Sendfile (may be named differently and/or require enabling in the webserver config) which allows the webserver to handle the file download / request
[16:26:18] <stenno> i have to immediately think about ctf when i see code liek that :P
[16:31:15] *** Joins: Murgoth (Murgoth@user/murgoth)
[16:32:49] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:558c:2c74:b63b:9420)
[16:34:15] *** Parts: Murgoth (Murgoth@user/murgoth) ()
[16:34:43] *** Joins: Murgoth (Murgoth@user/murgoth)
[16:34:52] *** Parts: Murgoth (Murgoth@user/murgoth) ()
[16:40:17] *** Joins: guidoc (~guido@host-79-19-252-192.retail.telecomitalia.it)
[16:40:35] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[16:40:51] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[16:52:39] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:35db:5f4c:1a3f:8b1c)
[17:02:04] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:04:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 255 seconds)
[17:32:00] <celphi> Anyone have suggestion which http component i should use
[17:32:26] <celphi> some of the suggestions i see are: Symfony HttpFoundation, Nette HTTP Component, Aura Web, sabre/http
[17:34:33] *** Joins: lall- (~alek@2403:6200:88a0:5aae:3011:1522:f8e3:4bc7)
[17:40:20] *** Joins: pycode (~pycode@93-40-5-81.ip36.fastwebnet.it)
[17:42:07] *** Joins: vlm_ (~vlm@user/vlm)
[17:42:11] *** Joins: Woet_ (~me@irc.woet.me)
[17:42:20] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:35db:5f4c:1a3f:8b1c) (Ping timeout: 255 seconds)
[17:43:26] *** Joins: [Pokey] (~pokey@spikeyCactus/hoosky)
[17:43:54] *** Joins: ikonia_ (~irc@user/ikonia)
[17:44:06] *** Joins: \mSg_mini (~mSg@user/msg/x-0285936)
[17:44:22] *** Joins: lesihctej (jetchisel@user/jetchisel)
[17:44:24] *** Joins: gefd_ (~Geoff@user/gefd)
[17:44:27] *** Joins: travisghansen4 (~travisgha@192.74.130.86)
[17:44:41] <DevAntoine> I only use the Symfony one, never tried the other ones.
[17:45:28] *** Joins: BigE_ (~biggie@user/bige)
[17:46:16] *** Quits: lesihctej (jetchisel@user/jetchisel) (Client Quit)
[17:48:48] *** Quits: csrf (~csrf@user/csrf) (*.net *.split)
[17:48:48] *** Quits: travisghansen (~travisgha@192.74.130.86) (*.net *.split)
[17:48:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (*.net *.split)
[17:48:48] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[17:48:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[17:48:48] *** Quits: gefd (~Geoff@user/gefd) (*.net *.split)
[17:48:48] *** Quits: \mSg (~mSg@user/msg/x-0285936) (*.net *.split)
[17:48:48] *** Quits: __adrian (~adrian@user/adrian/x-7832151) (*.net *.split)
[17:48:48] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (*.net *.split)
[17:48:49] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[17:48:49] *** Quits: AllenJB (~AllenJB@user/allenjb) (*.net *.split)
[17:48:49] *** Quits: Daulity (~pi@82-197-207-54.dsl.cambrium.nl) (*.net *.split)
[17:48:49] *** Quits: ikonia (~irc@user/ikonia) (*.net *.split)
[17:48:49] *** Quits: shailangsa (~shailangs@host86-186-196-229.range86-186.btcentralplus.com) (*.net *.split)
[17:48:49] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[17:48:49] *** Quits: corelax (~corelax@user/corelax) (*.net *.split)
[17:48:49] *** travisghansen4 is now known as travisghansen
[17:48:50] *** \mSg_mini is now known as \mSg
[17:48:52] *** vlm_ is now known as vlm
[17:48:59] *** Joins: AllenJB (~AllenJB@user/allenjb)
[17:51:53] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:53:52] *** Byteflux is now known as Bitflux
[17:54:09] *** Bitflux is now known as Byteflux
[18:03:21] *** Quits: zibby15 (~androirc@user/zibby15) (Quit: brb)
[18:21:08] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:21:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[18:24:45] *** Joins: evanhsu (~user@171.82.208.45)
[18:26:03] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[18:30:35] *** Joins: stenno (~stenno@user/stenno)
[18:35:56] *** Quits: evanhsu (~user@171.82.208.45) (Remote host closed the connection)
[18:38:32] *** Quits: pycode (~pycode@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 258 seconds)
[19:04:36] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Ping timeout: 258 seconds)
[19:17:26] *** Joins: Akimb (~Akimb@86.100.13.100)
[19:24:45] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[19:25:37] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Remote host closed the connection)
[19:26:12] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[19:30:36] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[19:35:22] *** Joins: guy_frm_yogaland (~gourab@2409:4062:4e92:4108:fc37:d8a1:78ff:5f90)
[19:37:52] *** Joins: arunmathaisk (~arunmatha@103.156.236.173)
[19:38:02] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[19:38:10] <arunmathaisk> hey folks !
[19:40:08] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 265 seconds)
[19:41:46] <biberu> o/
[19:41:51] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[19:42:42] <arunmathaisk> i am curious to know how php differs from python in the webspace
[19:43:29] <arunmathaisk> with flask and django does it make php still relevant
[19:44:09] <arunmathaisk> is php still a thing just because more than 65 percentage of the internet uses it ?
[19:44:26] <Naktibalda> are you trolling?
[19:44:29] <arunmathaisk> no sir
[19:44:32] <biberu> if you're investing the opportunity for jobs you might want to check your local market
[19:44:33] <arunmathaisk> i am genuinely asking
[19:45:08] <Naktibalda> IMO web isn't a major usecase for Python
[19:45:17] <arunmathaisk> i understand
[19:46:05] <Naktibalda> nobody is moving from PHP to Python
[19:46:21] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[19:47:15] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Ping timeout: 255 seconds)
[19:48:26] <arunmathaisk> i see
[19:48:36] <arunmathaisk> i have a suggestion
[19:48:59] <biberu> what's your reasonable for asking arunmathaisk? i guess you have some goal in mind?
[19:49:48] <arunmathaisk> biberu actually i am kinda new in the web space . I tried building few toy projects with php and flask
[19:49:57] <arunmathaisk> and well flask made my life easier
[19:50:03] <arunmathaisk> but the deployment a hell
[19:50:15] <arunmathaisk> where as php was kinda cool on both
[19:50:53] <arunmathaisk> i know we should always use the best tool for the job
[19:51:04] <biberu> sure, but flask is a framework, php is a language, you aren't comparing the same types of things
[19:51:15] <arunmathaisk> i am sorry
[19:51:19] <arunmathaisk> you are right
[19:51:26] <arunmathaisk> this was not a fair compatrision
[19:51:44] <arunmathaisk> but the essence was python being a really high level langugage
[19:51:56] <arunmathaisk> idk , kind of makes life easier?
[19:52:15] <arunmathaisk> and i found it really difficult to learn php via userful resources
[19:52:17] <arunmathaisk> any suugestions
[19:52:21] <Naktibalda> Python had better OOP implementation 20 years ago. What are the advantages now?
[19:53:13] <arunmathaisk> Naktibalda python in my opinion is one tool for all. ie general purpose. Leaving apart the speed for now , it is pretty cook
[19:53:37] <arunmathaisk> i am not trying to make "A" language the best language
[19:53:44] <arunmathaisk> but trying to understand
[19:53:50] <arunmathaisk> why i should use php over python
[19:53:53] <arunmathaisk> or vice versa
[19:54:52] <biberu> you'll probably need a bunch of languages in your toolkit, and even if not it can be beneficial to understand more than one
[19:55:10] <arunmathaisk> absolutely agreed biberu
[19:55:42] <arunmathaisk> idk why , i am the kind of person who makes an emotional connect with the language i am working on
[19:55:48] <biberu> if you want a job i'd check local opportunities, once you know one it won't be that hard to change, a lot of knowledge is transferrable
[19:56:04] <arunmathaisk> once again agreed biberu
[19:56:10] <biberu> e.g. around here neither are big in the market segment i'm targeting
[19:56:35] <arunmathaisk> @bi
[19:56:45] <arunmathaisk> biberu then what is it
[19:56:51] <arunmathaisk> Java ?
[19:57:21] <arunmathaisk> or nodejs ?
[19:57:41] <biberu> .net seems to be more common _here_
[19:57:58] <arunmathaisk> Also, can i ask why php is not a thing in the enterprise
[19:58:29] <arunmathaisk> i mean i know Salesforce and few tools at redhat but apart from that is php used anywhere else
[19:58:47] <arunmathaisk> like in the so called "FANG " companies
[19:59:14] <Naktibalda> Facebook was written in PHP
[19:59:28] <arunmathaisk> *was right
[19:59:42] <arunmathaisk> and i believe they are moving away from hack
[20:00:02] <BadAdviceCat> It's a matter of what they need for the time being.
[20:00:25] <Naktibalda> did you mean that Salesforce is implemented in PHP?
[20:01:02] <BadAdviceCat> Why do you worry about it? Do you have the same needs as the so called "FANG" companies? arunmathaisk
[20:01:38] <arunmathaisk> BadAdviceCat ok that made sense
[20:01:48] <arunmathaisk> i mean i am more of a hobby guy
[20:02:06] <arunmathaisk> i dont vibe with the whole enterprise culture
[20:02:18] <arunmathaisk> but i also value the tech decisions enterprises take
[20:02:25] <BadAdviceCat> All I can tell you is to find the tools that you need for the time being.
[20:02:58] <arunmathaisk> BadAdviceCat do you not think ... like just getting the work done is a bad approach? i mean
[20:03:06] <BadAdviceCat> PHP has a lot of nice libraries available with composer.
[20:03:14] <arunmathaisk> you sometimes need to sit and plan things out right
[20:03:21] <BadAdviceCat> Python uses pip.
[20:03:28] <arunmathaisk> probably this is why java shines in the enterprise
[20:04:00] <Byteflux> you mentioned your belief in choosing the "best tool for the job" but language alone doesn't qualify something as being the best. it's going to boil down to what's practical, comfortable and available.
[20:04:16] <biberu> arunmathaisk: language are tools though, you should pick the one that's suited for the task, considering e.g. your own familiarity, the ecosystem, language features...
[20:04:24] <arunmathaisk> Byteflux i understand
[20:04:30] <BadAdviceCat> arunmathaisk, no. You just need to do more research via google. Choose what features you want/need in a language. If you can deal with having to compile, then you can even go with languages like Rust.
[20:05:31] <Byteflux> 99% of use cases will be satisfied by PHP or Python, so the actual language itself isn't very relevant.
[20:05:34] <arunmathaisk>  BadAdviceCat i mean i agree to an extend ...
[20:05:46] <arunmathaisk> @Byte
[20:05:55] <Byteflux> as far as web goes any way
[20:06:41] <Byteflux> although with php you get simpler web support with a faster runtime out-of-the-box.
[20:07:01] <arunmathaisk> Byteflux yeahhh php is pretty sexyy with apache
[20:07:12] <arunmathaisk> php- fpm is dope
[20:08:35] <BadAdviceCat> arunmathaisk, you don't have to constrain yourself to just 1 language. For example, you can use Javascript WITH PHP for example. You can choose to use ReactJS, you might be interested in using a PHP framework such as https://symfony.com/ - You have an option to use a small portion of the framework, mix and match and use multiple frameworks/libraries. You can have Python running in the background which listens to instructions coming from PHP via
[20:08:36] <BadAdviceCat> Message Queue (Try RabbitMQ https://www.rabbitmq.com/ )
[20:08:46] <BadAdviceCat> The point is, you don't have to be a 1-trick pony.
[20:09:54] <biberu> (it will take a long time to learn all the tricks, don't stress over it)
[20:10:01] <arunmathaisk> BadAdviceCat well i guess you should change your username to GoodAdviceCar
[20:10:12] <arunmathaisk> BadAdviceCat Thank You :)
[20:10:24] <arunmathaisk> biberu i understand
[20:12:01] <BadAdviceCat> Either language would be fine for web dev, but as far as specifics go, and the preference of what you like to see in the framework, and the tooling involved (e.g. psalm, and phpunit, PyUnit)
[20:13:03] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[20:14:43] <BadAdviceCat> I would just flip a coin, and just start on something. Even if the first choice is a bad choice, at least you'd LEARN something from spending that time, so it would not be a waste. You can learn for example the reason why you feel the need to change from the wrong choice, to the other choice.
[20:15:08] <arunmathaisk> BadAdviceCat absolutely right!!!
[20:15:18] <Byteflux> Or just give each a fair shot. Getting something small up and running in either is trivial. After a fair assessment, you should have an idea of what you're more comfortable with.
[20:15:25] <arunmathaisk> thank you BadAdviceCat
[20:15:31] <Byteflux> Though if you are comparing Flask to plain PHP, you're not giving PHP a fair shot.
[20:16:09] <arunmathaisk> Byteflux i get your point
[20:16:33] <BadAdviceCat> arunmathaisk, try writing a simple Guestbook. Guestbooks just needs 1 table to store messages: Name, Date, Message.
[20:16:48] <biberu> you might want to consider something more different too, e.g. a statically typed language
[20:17:21] <arunmathaisk> biberu i have written good amounts of java backend code
[20:17:35] <arunmathaisk> not a very pleasant experince loll\
[20:17:44] <arunmathaisk> but .net has been doing great
[20:17:52] <Byteflux> Cool, there's other JVM based languages too if you'd rather benefit from the Java ecosystem. Like Kotlin
[20:17:53] <arunmathaisk> like blazor WA is killing it
[20:18:05] <biberu> there are other options too, but that's good, then you're familiar with what a compiler can give you
[20:18:21] <arunmathaisk> yess yessx
[20:18:36] <arunmathaisk> thank you @room for having this conversation with me
[20:18:59] <arunmathaisk> hopefully i can provide some value here later :)
[20:19:58] <biberu> asking questions / discussing is also adding value
[20:20:35] <arunmathaisk> i see :)  biberu
[20:29:04] *** Quits: arunmathaisk (~arunmatha@103.156.236.173) (Ping timeout: 246 seconds)
[20:39:53] *** Joins: __adrian_ (~adrian@user/adrian/x-7832151)
[20:39:59] *** ChanServ sets mode: +o __adrian_
[20:45:57] <celphi> whats the most up to date linter for php?
[20:46:07] <__adrian_> php -l
[20:46:16] <celphi> ?
[20:46:17] <__adrian_> always up-to-date  ;)
[20:46:28] <celphi> i mean for code formating
[20:46:59] <__adrian_> that's generally up to your IDE
[20:47:07] <__adrian_> most have some amount of options for that
[20:47:11] <celphi> but if everyone uses different ides
[20:47:18] <__adrian_> yes
[20:47:27] <__adrian_> that's why we say you should choose your own
[20:47:27] <celphi> is there a linter that formats it to one standard?
[20:47:46] <__adrian_> the closest thing to a "standard" is psr-2
[20:48:49] <__adrian_> i know there are tools that will auto-format for you, but i honestly find them somewhere between useless and counterproductive
[20:49:01] <guidoc> https://github.com/FriendsOfPHP/PHP-CS-Fixer is good
[20:52:33] <celphi> k thank you
[20:53:32] <da_wunder> celphi: this is also good - https://github.com/symplify/easy-coding-standard
[20:57:00] *** Joins: ge (~g@37.214.47.157)
[21:02:36] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[21:03:47] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: We be chillin' - IceChat style)
[21:04:05] <kittonian> hi all. so I updated php yesterday and it has been working just fine with apache 2.4.33, however today I updated apache to 2.4.48 and now it won't start. it's throwing a Fatal Error: Unable to allocate shared memory segment XXX bytes: unknown: No such file or directory (2) and everything I've researched seems to point to php. I already tried increasing the mem limit in the php.ini to 256M from 128M and that did not change anything.
[21:04:05] <kittonian>  could really use some assistance as everything on this server is down and I can't find any docs on this issue that would be relevant
[21:08:18] <kittonian> ok, it's definitely php related. i completely disabled php in apache and now it works
[21:10:24] <TinoDidriksen> kittonian, did you rebuild PHP against the new Apache version?
[21:11:32] <kittonian> no, is that necessary?
[21:11:49] <TinoDidriksen> Well, how did you upgrade PHP?
[21:12:21] <kittonian> i compiled the new 7.4.21 from source
[21:13:18] <TinoDidriksen> And then you replaced what it was compiled against. So yes, you need to rebuild it.
[21:14:06] <biberu> fpm would avoid that
[21:14:55] <TinoDidriksen> Any kind of packaging would also avoid it. Building from source is a bad idea.
[21:15:25] <kittonian> as it's using the same directory i didn't think i would need to recompile as it was just a dot update to apache
[21:15:42] <kittonian> recompiling now. let's see what happens
[21:15:52] <TinoDidriksen> Does Apache guarantee ABI compat in that manner?
[21:16:11] <kittonian> i don't remember having to recompile unless it was a major version change
[21:16:23] <kittonian> but it doesn't matter, if this solves it than it's all good
[21:17:06] <__adrian_> kittonian:  mind TinoDidriksen's suggestion of using a package manager also
[21:17:23] <__adrian_> removes many problems like this, and there's almost never any real benefit to compiling yourslef
[21:17:26] <kittonian> appreciated but we compile everything from source on this server
[21:17:28] <__adrian_> *self
[21:17:36] <__adrian_> "everything"
[21:17:39] <__adrian_> heh
[21:17:54] <kittonian> everything that we use besides the OS itself, pretty much
[21:19:06] <TinoDidriksen> I used to do that ~10 years ago when versions weren't new enough to my liking. But Ubuntu LTS solved that issue.
[21:19:20] <kittonian> this is an old server
[21:20:04] <TinoDidriksen> It can be upgraded and the old environment stuffed into a Docker instance for emergency use.
[21:20:15] <kittonian> unfortunately not
[21:20:27] <kittonian> we use Zope2
[21:20:36] <kittonian> and i can't update a lot of things because of that
[21:20:49] <__adrian_> or you can always just keep breaking the whole thing every time you recompile something that you didn't realize was compiled against something else
[21:21:11] <TinoDidriksen> Docker can contain Zope and not let it dictate the rest of the server.
[21:22:00] <kittonian> zope dictates a lot of things
[21:22:11] <TinoDidriksen> I know - I've tried it.
[21:22:28] <kittonian> like it's connection to postgres, which means i need a pgsql9 and a new 13 version running simultaneously
[21:22:43] <TinoDidriksen> Again, Docker can contain each of those.
[21:22:50] <kittonian> the server runs great. if all this issue ends up being was a recompile of php, it's no big deal
[21:23:16] <__adrian_> kittonian: just to be clear, no one's trying to back you into changing your approach if you don't want to
[21:23:26] <__adrian_> BUT none of the things you claim are blockers, are blockers
[21:23:33] <Byteflux> Right, these constraints are all self-imposed.
[21:23:37] <Byteflux> And easily avoided
[21:24:11] <kittonian> one of these days i'm going to install the new zope5 and see if I can migrate all the code from zope2 over to that. then i would actually be able to upgrade and would probably create a new server from scratch and wipe this one
[21:24:23] <kittonian> but, today is not that day :)
[21:25:13] <biberu> kittonian: do you have a scripted setup of all that?
[21:25:50] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[21:26:01] <__adrian_> that ^ _is_ something i'd push you towards, though
[21:26:21] <__adrian_> reproducibility / disaster recovery / one-click deploys are important
[21:26:30] <Byteflux> Things like "running multiple versions of the same software on the same server, e.g. Postgres" are no longer an issue these days so on the next machine it'd be worth adopting more modern practices.
[21:26:30] <__adrian_> regardless of what other choices you make
[21:28:25] <kittonian> so, that wasn't the answer
[21:28:31] <kittonian> still same error
[21:28:38] <kittonian> i didn't think i needed to recompile
[21:32:42] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[21:32:48] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[21:33:22] *** Joins: entuland (~entuland@user/entuland)
[21:34:29] <kittonian> any thoughts?
[21:34:54] <Byteflux> the error originates from the opcache extension: https://github.com/php/php-src/blob/master/ext/opcache/zend_shared_alloc.c#L101
[21:35:23] <Byteflux> you could probably configure it to use less shared memory or you may need to increase your system's shared memory with sysctl
[21:37:51] <kittonian> again, this was working fine yesterday and this morning with apache 2.4.33
[21:38:03] <Byteflux> https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.memory-consumption
[21:38:29] <Byteflux> alright but im not gonna try and figure out why. im offering solutions at this point so take that as you will.
[21:38:35] <Byteflux> good luck!
[21:38:41] <kittonian> understood. i also read that github
[21:40:01] <kittonian> this one shows the same error from back in 2017
[21:40:02] <kittonian> https://github.com/Optware/Optware-ng/issues/210
[21:40:44] <kittonian> i checked my system's shared memory and it's quite a bit higher than what php is complaining about
[21:41:05] <Byteflux> you could also change opcache's preferred memory model to not use shared memory: https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.preferred-memory-model
[21:41:46] <Byteflux> well, to not use shm, but i guess it still uses shared memory
[21:42:03] <Byteflux> not sure on that one
[21:43:55] *** Joins: Rockwood (~Rocky@user/rocky)
[21:46:06] *** Joins: magla (~gelignite@55d4f0de.access.ecotel.net)
[21:46:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:46:41] <Rockwood> hi
[21:47:26] <Rockwood> who cares wreakers like nothing :D
[21:47:46] <Rockwood> BadAdviceCat, hi
[21:48:29] *** Quits: Ox151 (~user@user/ox151) (Ping timeout: 255 seconds)
[21:54:35] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:58:43] *** Joins: entuland_ (~entuland@user/entuland)
[21:58:48] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[22:02:02] *** Joins: jcrawford (~jcrawford@host3.hrhfiber-gw.cust.sover.net)
[22:05:59] *** entuland_ is now known as entuland
[22:07:27] *** Joins: Pixi_ (~Pixi@user/pixi)
[22:08:32] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:10:28] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[22:11:30] *** Joins: pycode (~pycode@2001:b07:5d28:551:9921:511e:1596:d8f8)
[22:12:07] *** Quits: pycode (~pycode@2001:b07:5d28:551:9921:511e:1596:d8f8) (Remote host closed the connection)
[22:17:42] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[22:25:39] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 255 seconds)
[22:30:32] *** Quits: jcrawford (~jcrawford@host3.hrhfiber-gw.cust.sover.net) ()
[22:37:24] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:42:22] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[22:43:39] *** Quits: guy_frm_yogaland (~gourab@2409:4062:4e92:4108:fc37:d8a1:78ff:5f90) (Ping timeout: 255 seconds)
[22:47:35] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:50:27] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[22:51:37] *** Quits: rxdeath (~rxdeath@c-67-187-135-103.hsd1.ca.comcast.net) (Quit: Client closed)
[22:56:31] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 258 seconds)
[22:57:34] *** Quits: guidoc (~guido@host-79-19-252-192.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[22:57:50] *** Quits: BigE_ (~biggie@user/bige) (Quit: WeeChat 2.8)
[22:58:05] *** Joins: BigE (~biggie@user/bige)
[22:58:12] *** Joins: guidoc (~guido@host-79-19-252-192.retail.telecomitalia.it)
[23:06:24] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:11:25] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 268 seconds)
[23:13:39] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[23:29:50] *** night_wulfe_ is now known as night_wulfe
[23:33:10] *** Joins: Alexander-47u (~Alexander@a44107.upc-a.chello.nl)
[23:41:06] *** Quits: guidoc (~guido@host-79-19-252-192.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[23:47:07] *** Joins: guidoc (~guido@host-82-51-187-6.retail.telecomitalia.it)
