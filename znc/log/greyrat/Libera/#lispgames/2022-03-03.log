[00:35:08] *** Joins: mathrick (~mathrick@67.148.61.4)
[00:48:12] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 250 seconds)
[00:49:44] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:50:25] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:56:56] *** Quits: yewscion (~yewscion@52.94.133.130) (Ping timeout: 272 seconds)
[03:36:05] *** Quits: kevingal (~quassel@2001:770:c0:401:a866:b37a:2932:9f63) (Ping timeout: 250 seconds)
[04:11:54] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[04:43:29] *** Quits: Kooda (~kooda@natsu.upyum.com) (Ping timeout: 250 seconds)
[05:57:12] *** Joins: Kooda (~kooda@natsu.upyum.com)
[06:13:29] *** Joins: notzmv (~zmv@user/notzmv)
[06:42:16] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[06:43:03] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[08:28:34] *** Quits: _rtypo (~alex@user/rtypo) (Ping timeout: 260 seconds)
[11:55:11] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[12:14:12] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[12:19:33] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[12:32:11] *** Quits: OlCe (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr) (Read error: Connection reset by peer)
[12:59:06] *** Joins: crumpo (~crumpo@user/crumpo)
[13:02:54] *** Joins: OlCe (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr)
[13:06:48] *** Joins: _rtypo (~alex@user/rtypo)
[13:51:27] *** Quits: _rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[14:00:37] *** Quits: d4ryus (~d4ryus@ppp-188-174-84-16.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[14:26:43] *** Joins: notzmv (~zmv@user/notzmv)
[14:32:03] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:20] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:11:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:56:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[16:57:39] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[17:01:04] *** Quits: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b) (*.net *.split)
[17:01:04] *** Quits: derelict (derelict@user/derelict) (*.net *.split)
[17:01:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[17:01:04] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[17:01:04] *** Quits: benaiah (~benaiah@104.131.128.41) (*.net *.split)
[17:02:30] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[17:02:30] *** Joins: derelict (derelict@user/derelict)
[17:02:30] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:02:30] *** Joins: borodust (~irc@user/borodust)
[17:02:30] *** Joins: benaiah (~benaiah@104.131.128.41)
[17:06:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[17:07:50] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[17:45:43] *** Joins: _rtypo (~alex@user/rtypo)
[18:10:37] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[18:11:08] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[18:58:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[18:58:55] *** Quits: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[19:00:42] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[19:03:28] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[19:26:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[19:31:52] *** Joins: d4ryus (~d4ryus@ppp-93-104-13-17.dynamic.mnet-online.de)
[20:23:51] *** Quits: crumpo (~crumpo@user/crumpo) (Read error: Connection reset by peer)
[20:23:57] *** Joins: crumpy (~crumpo@user/crumpo)
[20:36:10] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[20:37:25] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[20:37:46] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[21:01:48] *** Joins: toastiest (~crumpo@user/crumpo)
[21:04:08] *** Quits: crumpy (~crumpo@user/crumpo) (Ping timeout: 250 seconds)
[21:05:13] *** Joins: rtypo (~alex@user/rtypo)
[21:05:21] *** Quits: _rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[21:08:58] *** Joins: _rtypo (~alex@user/rtypo)
[21:09:45] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[21:39:15] *** Joins: notzmv (~zmv@user/notzmv)
[21:42:22] *** Quits: toastiest (~crumpo@user/crumpo) (Ping timeout: 260 seconds)
[22:13:26] *** Joins: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net)
[22:32:57] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:33:16] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:35:22] <Psybur> are there any game engines that build executables without GC, but the scripting for the game logic etc is done in lisp?
[22:35:54] <technomancy> Psybur: carp-lang maybe?
[22:36:38] <Psybur> No, i dont want to write the game engine, i just want to script it with lisp
[22:36:59] <Psybur> Looks like there were attempts to get lisp working with Godot but dont see anything really usable
[22:37:19] <technomancy> the last jam was won by a godot entry
[22:37:31] <technomancy> https://selfsame.itch.io/upworm
[22:38:40] <Psybur> neat, thanks
[22:39:06] <borodust> some schemes can be embedded
[22:39:25] <borodust> CL has ECL implementation for embedding
[22:39:26] <technomancy> I guess love2d is the same way; the core engine is C but you don't write your game in C
[22:39:40] <borodust> but you won't find proper lisp w/o garbage collection, sorta
[22:39:56] <technomancy> borodust: depends how you define "proper" haha
[22:40:38] <technomancy> it's super tough to do that and still support a repl
[22:41:06] <technomancy> huh, apparently carp has a repl now; that's wild
[22:42:07] <borodust> smth that tries to be lisp for games w/o gc: https://hg.sr.ht/~duangle/scopes
[22:42:16] <technomancy> the only GC-less lisp I've used is microscheme which cuts a LOT of corners, for good reasons
[22:45:17] <technomancy> borodust: this doesn't look like a lisp? https://scopes.readthedocs.io/en/latest/tutorial/ did you mean a different link?
[22:46:12] <technomancy> I'm super curious about prescheme tho. from what I've read it sounds too good to be true, and it kind of got abandoned?
[22:48:48] <borodust> technomancy: https://scopes.readthedocs.io/en/latest/dataformat/
[22:49:27] <borodust> yeah, when you stretch lisp definition enough, even C++ can be a lisp
[22:49:47] <borodust> scopes is one of those stretched definitions
[22:50:01] <technomancy> https://github.com/carp-lang/Carp/blob/master/docs/LanguageGuide.md#special-forms lol carp has a `the` keyword
[22:50:05] <technomancy> I don't think I've ever seen that before
[22:52:24] <borodust> scopes is heavely scheme-inspired and game oriented (that's what author does - https://twitter.com/leonard_ritter)
[22:52:48] <borodust> and the only Lisp today is Common Lisp, yes
[22:53:17] <technomancy> M-x eyeroll
[22:53:25] *** Quits: _rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[22:53:25] <borodust> yup, you know it
[22:54:25] <borodust> but really, i sorta can imagine something lispy w/o gc, but semantics gonna be C++ level crazy to make it flow like a true Lisp
[22:55:13] <borodust> what would be cool is to have GC tuned to gamedev needs
[22:55:33] <technomancy> is that a diss on carp?
[22:55:59] <borodust> no idea, i didn't look into carp long enough
[22:58:23] *** Joins: rtypo (~alex@user/rtypo)
[23:27:32] <drakonis> what's the deal with game devs and not wanting GC?
[23:30:34] <aeth> pauses
[23:31:13] <aeth> it's better to be slower, but be slower in a deterministic way, than to miss a few frames every few minutes/hours
[23:31:39] <aeth> because you will see a dropped frame
[23:32:52] <borodust> drakonis: pretty much what aeth says - determinism
[23:33:18] <drakonis> i see
[23:33:46] <borodust> there exist realtime GCs, just not in free CL implementations
[23:33:58] <borodust> i don't think lispworks has one either, but i'm unsure
[23:34:31] <aeth> you usually have two independent framerates, a display-independent logic/scripting/physics framerate (e.g. 50 FPS or 100 FPS) and a display-dependent one (usually 30 FPS or 60 FPS but it could be something higher than the logic one like 144 FPS)
[23:34:46] <aeth> but it's best to think of the inverse, seconds per frame (or, really, multiply it by a thousand and think ms per frame)
[23:35:04] <aeth> e.g. 100 FPS logic => 1/100 * 1000 = 10 ms per frame
[23:35:15] <aeth> that's 10 ms where you have to do everything, including GC pause
[23:35:58] <aeth> if a 60 FPS display, 16.7 ms for the rendering
[23:45:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[23:48:28] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[23:52:44] <aeth> oh, and because these are independent, if it's an all-thread pause, you're in trouble.
