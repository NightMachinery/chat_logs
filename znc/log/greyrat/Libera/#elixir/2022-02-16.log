[00:19:30] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[00:25:23] *** Joins: ur5us (~ur5us@203.86.198.200)
[00:25:32] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[00:29:45] *** Joins: ur5us_ (~ur5us@122-56-202-39.mobile.spark.co.nz)
[00:32:36] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[00:35:55] <Zarathu> hoppity: materialized views are excellent, and definitely supported by ecto like a regular table
[00:36:17] <Zarathu> you can also write a genserver that loops every n minutes to refresh them
[00:47:07] *** Joins: _w1ntermute_ (~sven@ipservice-092-219-123-235.092.219.pools.vodafone-ip.de)
[00:49:48] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 240 seconds)
[00:52:12] *** Quits: _w1ntermute_ (~sven@ipservice-092-219-123-235.092.219.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[00:56:53] <hoppity> Zarathu: I am probably going to go with Materialized views but I have just not used them before. Don't know their drawbacks. Unfortunately I cannot use the genserver option because the information presented to the user can only be delayed by maximum a few seconds. A few minutes delay could cause serious wrong decision making.
[00:57:31] <serafeim> hoppity: are you sure that you need a view ? 
[00:57:47] <hoppity> serafeim: I am not actually sure, no
[00:57:52] <serafeim> lots of joins *should not*, i repeat *should not* take a lot of time to calculate
[00:58:25] <hoppity> serafeim: you are right, the issue is not only the joins but some data that is calculated on the fly.
[00:58:33] <serafeim> ok that's a different thing
[00:59:07] <serafeim> you can add indeces even with calculated data though
[00:59:12] <serafeim> i'm not sure if this will help you
[00:59:58] <hoppity> I basically have a page where I want to show a list of "Invoice Number" and "Invoice total"
[01:00:27] <serafeim> so it has some aggregates ? 
[01:00:39] <serafeim> aggregates should not take too long also.
[01:00:49] <hoppity> yes, but not aggregates that I am calculating in SQL but on Elixir
[01:01:04] <benwilson512> hoppity: can we start with optimizing the query?
[01:01:15] <benwilson512> can you post the query here along with the output of `explain analyze` ?
[01:01:59] <hoppity> yes I can, I will do in tomorrow morning if that's ok
[01:02:11] <serafeim> i just have to notice that i'm writing apps for more than 15 years. i have never needd to use a view
[01:03:23] <hoppity> fair enough, I want to avoid doing so too as it seems to add a new layer of complexity
[01:03:29] <hoppity> plus I've never used a view before
[01:04:03] <serafeim> cool
[01:16:06] *** Quits: infinityfye (~infinityf@156.212.70.173) (Quit: Leaving)
[01:19:47] *** Quits: ur5us_ (~ur5us@122-56-202-39.mobile.spark.co.nz) (Read error: Connection reset by peer)
[01:20:38] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[01:34:47] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:36:31] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[01:38:18] *** Quits: kuzyn1 (~kuzyn@modemcable071.66-22-96.mc.videotron.ca) (Ping timeout: 252 seconds)
[01:44:54] *** Quits: mahmutov (~mahmutov@37.155.20.217) (Ping timeout: 252 seconds)
[01:46:36] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Ping timeout: 240 seconds)
[01:49:36] *** Joins: kuzyn1 (~kuzyn@modemcable071.66-22-96.mc.videotron.ca)
[02:05:10] *** Joins: hoppity_ (~hoppity@207.228.78.189)
[02:09:06] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 252 seconds)
[02:22:36] *** Joins: hoppity (~hoppity@66.222.130.38)
[02:22:36] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[02:22:36] *** Joins: hoppity (~hoppity@user/hoppity)
[02:22:51] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[02:24:30] *** Quits: hoppity_ (~hoppity@207.228.78.189) (Ping timeout: 252 seconds)
[02:38:56] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469)
[02:51:28] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469) (*.net *.split)
[02:51:28] *** Quits: v0idpwn (sid483136@id-483136.helmsley.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: lessless (~lessless@2001:bc8:47ac:124b::1) (*.net *.split)
[02:51:28] *** Quits: adgtl (uid385@id-385.uxbridge.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[02:51:28] *** Quits: serafeim (serafeim@2001:41d0:700:1ccb::10) (*.net *.split)
[02:51:28] *** Quits: meredith (~meredith@ramdas.roomag.org) (*.net *.split)
[02:51:28] *** Quits: ds (~ds@user/ds) (*.net *.split)
[02:51:28] *** Quits: guan (sid222713@id-222713.ilkley.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: triskite3__ (uid414920@id-414920.uxbridge.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: bodgix (~bodgix@vps-ae17da44.vps.ovh.net) (*.net *.split)
[02:51:28] *** Quits: nicholasruunu (~nicholasr@ruu.nu) (*.net *.split)
[02:51:28] *** Quits: xlii__ (~xlii@167.172.161.148) (*.net *.split)
[02:53:46] *** Joins: v0idpwn (sid483136@id-483136.helmsley.irccloud.com)
[02:53:46] *** Joins: lessless (~lessless@2001:bc8:47ac:124b::1)
[02:53:46] *** Joins: adgtl (uid385@id-385.uxbridge.irccloud.com)
[02:53:46] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[02:53:46] *** Joins: serafeim (serafeim@2001:41d0:700:1ccb::10)
[02:53:46] *** Joins: meredith (~meredith@ramdas.roomag.org)
[02:53:46] *** Joins: ds (~ds@user/ds)
[02:53:46] *** Joins: guan (sid222713@id-222713.ilkley.irccloud.com)
[02:53:46] *** Joins: triskite3__ (uid414920@id-414920.uxbridge.irccloud.com)
[02:53:46] *** Joins: bodgix (~bodgix@vps-ae17da44.vps.ovh.net)
[02:53:46] *** Joins: nicholasruunu (~nicholasr@ruu.nu)
[02:53:46] *** Joins: xlii__ (~xlii@167.172.161.148)
[02:54:57] *** Quits: Dooky (~Dooky@186.251.209.232) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:00:12] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[03:21:15] *** Joins: livoreno (~livoreno@user/notzmv)
[03:33:24] *** Quits: czard (~czard@host-78-150-125-181.as13285.net) (Ping timeout: 240 seconds)
[03:38:31] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[03:55:15] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[04:12:24] *** Joins: mexen (uid495612@user/mexen)
[04:35:43] *** Quits: Tongir (~tangmang@2403-580f-f5--7003-5465-c18f-5890.ip6.aussiebb.net) (Remote host closed the connection)
[04:41:53] *** Joins: Tongir (~tangmang@2403-580f-f5--a07b-ecda-b0f7-3322.ip6.aussiebb.net)
[04:55:14] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:21:28] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469)
[05:50:03] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[05:50:22] *** Joins: livoreno (~livoreno@user/notzmv)
[05:55:43] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:57:20] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Client Quit)
[05:59:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[06:27:05] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:27:55] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[06:28:41] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[06:30:51] *** Joins: hoppity (~hoppity@user/hoppity)
[06:35:56] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 272 seconds)
[07:01:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[07:19:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469) (Ping timeout: 240 seconds)
[07:32:30] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[07:32:45] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:33:48] *** Quits: kuzyn1 (~kuzyn@modemcable071.66-22-96.mc.videotron.ca) (Ping timeout: 240 seconds)
[07:58:12] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[08:17:30] *** Joins: notzmv (~zmv@user/notzmv)
[08:27:51] *** Joins: wacopaul (~wacopaul@071-011-209-064.res.spectrum.com)
[08:29:09] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[08:29:10] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[08:30:02] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[08:34:39] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[08:35:21] *** Quits: wacopaul (~wacopaul@071-011-209-064.res.spectrum.com) (Changing host)
[08:35:21] *** Joins: wacopaul (~wacopaul@user/wacopaul)
[08:38:58] *** Quits: wacopaul (~wacopaul@user/wacopaul) ()
[08:43:00] *** Quits: yauhsien (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net) (Quit: Leaving)
[09:01:36] *** Quits: voltone (~voltone@2a02-a453-5486-1-dcc9-d9c5-8031-82a7.fixed6.kpn.net) (Ping timeout: 252 seconds)
[09:08:01] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[09:12:12] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[09:15:58] *** Joins: mexen (uid495612@user/mexen)
[09:17:26] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[09:29:24] *** Joins: phaleth (~user@user/phaleth)
[09:37:47] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Remote host closed the connection)
[09:38:02] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[09:38:27] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[09:38:36] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[09:39:37] *** Quits: danieli (~danieli@user/danieli) (Remote host closed the connection)
[09:39:54] *** Joins: danieli (~danieli@user/danieli)
[09:39:58] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:41:24] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[09:54:28] *** Joins: thojanssens (~thojansse@2001:fb1:77:20f2:c93e:d7fd:8142:fdc8)
[09:55:30] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[09:56:32] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[09:56:48] *** Joins: srfsh (~srfsh@user/srfsh)
[09:59:00] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[10:01:00] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[10:13:13] <serafeim> hey friends
[10:34:07] *** Quits: thojanssens (~thojansse@2001:fb1:77:20f2:c93e:d7fd:8142:fdc8) (Ping timeout: 250 seconds)
[11:03:03] *** Joins: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[11:07:27] *** Quits: yauhsien (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:18:06] *** Joins: infinityfye (~infinityf@156.212.70.173)
[11:32:14] *** Joins: yauhsien (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net)
[11:33:15] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[11:35:38] *** Quits: lagash (lagash@lagash.shelltalk.net) (Quit: ZNC - https://znc.in)
[11:37:05] *** Joins: lagash (lagash@lagash.shelltalk.net)
[11:55:16] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:01:20] <serafeim> i want to start an app that will start a gen server
[12:01:29] <serafeim> that gen server will run something every 10 seconds
[12:01:55] <serafeim> i can start the thingie using iex -S mix but i don;'t like it
[12:02:00] <serafeim> what's the proper way to do it ?
[12:03:50] <Nicd> mix release?
[12:04:24] <Nicd> or escript? never used it though
[12:05:40] <EdFletcher> if you just want to run the app without the iex console attached, `mix run` should work (probably want `--no-halt` too). but yeah, `mix release` is the way to build a self-contained, relocatable package. 
[12:05:55] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[12:07:58] <serafeim> mix release? how to use that ? 
[12:08:15] <serafeim> i know how to use this in phoenix but what about a non-phoenix app ? 
[12:08:28] <serafeim> also i'd rather not rely on mix for my production
[12:08:59] <EdFletcher> https://hexdocs.pm/mix/Mix.Tasks.Release.html 
[12:09:24] <EdFletcher> right that's the point of `mix release`, it builds a self-contained package you can run directly, no `mix` involved. 
[12:09:31] <Nicd> mix release works the same for Phoenix and not-Phoenix
[12:11:46] <serafeim> interesting i'll try it 
[12:12:32] <serafeim> i had asked that before i think
[12:12:56] <serafeim> is there a reason why mix new doesn't create a config/config.exs file ? 
[12:14:47] <EdFletcher> probably because not all apps need it and it isn’t a requirement 
[12:18:12] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[12:22:36] <serafeim> yes but it's useful
[12:22:44] <serafeim> and forces you to keep good practices
[12:23:00] <serafeim> also it's much simple to delete it (or leave it alone if you don't care about it) than addingg it
[12:23:26] <serafeim> how can a pick a value from my config.exs ?
[12:23:33] <serafeim> i always forget how it's done
[12:23:54] <serafeim> Application.get_env ?
[12:25:24] <serafeim> for some reason it doesn't work
[12:25:50] <EdFletcher> fetch_env, not get_env: https://hexdocs.pm/elixir/Application.html#fetch_env/2 
[12:26:04] <serafeim> i've added a config/config.exs to my app with the proper contents: https://dpaste.com/EQ5BSNC2D
[12:26:12] <serafeim> get_env does something different ? 
[12:26:16] <EdFletcher> also, i would argue it's worse practice to pollute a project directory with unnecessary files that can so very easily be added later 
[12:26:32] <serafeim> it seems to be the same: https://hexdocs.pm/elixir/Application.html#get_env/3
[12:26:52] <serafeim> EdFletcher: i disagree. if you are a library it's better to make your user's life easier, not harder
[12:26:56] <EdFletcher> yeah get_env should work too, just has the default value argument as well 
[12:27:25] <serafeim> in any case i run this `Application.fetch_env(:sparrow, :tick_timout)` and returns error
[12:27:36] <serafeim> do i need to do anything more to setup my config ?
[12:27:41] <EdFletcher> serafeim: and again, i'd argue my life as a user is harder if you're polluting my directory with stuff i don't necessarily need. clearly this is a subjective matter and the mix developers made a call in one direction. 
[12:27:52] <serafeim> EdFletcher: have you noticed how much time i have lost with the config crap ? 
[12:28:10] <EdFletcher> you haven't lost this time because the file wasn't placed there for you automatically 
[12:28:21] <EdFletcher> clearly, because you're still struggling with it even with the file in place 
[12:28:27] <EdFletcher> that's a literal two-second operation 
[12:28:32] <serafeim> EdFletcher: if the configuration *was there* when i run mix new then i wouldn't need to lose 1 hour with shit
[12:28:40] <serafeim> EdFletcher: no it's not
[12:28:45] <serafeim> because i don't know if that is enough
[12:28:47] <EdFletcher> one hour!? to create a file!? what the what 
[12:28:54] <serafeim> EdFletcher: 1 hour researchign shit
[12:28:59] <EdFletcher> did you not read this? https://hexdocs.pm/elixir/master/Config.html 
[12:29:22] <serafeim> EdFletcher: that's what i'm trying to explain
[12:29:38] <serafeim> if the file was there *and i know that it's integrated properly with my project* i wouldn't need to read that doc !
[12:29:44] *** Joins: thojanssens (~thojansse@2403:6200:89a6:d49b:4c5f:bc6d:d9f6:38f6)
[12:30:27] <serafeim> now i am not sure i have done everything right
[12:32:19] <serafeim> has anyvbdy have any idea why it ain't working ?
[12:32:52] <EdFletcher> you need to read the doc because you need to understand how the system you're using works, regardless of if `mix` put the file there or not 
[12:32:56] <EdFletcher> what is the error you're seeing? 
[12:33:11] <serafeim> the Application.get_env/fetch_env doesn't read my value
[12:33:23] <serafeim> here's my config/config.exs: https://dpaste.com/EQ5BSNC2D
[12:33:51] <serafeim> Application.fetch_env(:sparrow, :tick_timeout) returns error
[12:33:55] <serafeim> :error
[12:34:04] <serafeim> what am i doing wrong ? 
[12:35:42] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[12:36:52] <Nicd> can you elaborate on what you did? when is it not working?
[12:37:05] <serafeim> Nicd: i created a new project with mix new
[12:37:14] <serafeim> then i created the config/config.exs file i mentioned
[12:37:17] <serafeim> then i run iex -S mix
[12:37:43] <serafeim> then i paste this `Application.fetch_env(:sparrow, :tick_timout` and get an error
[12:37:46] <serafeim> iex(1)> Application.fetch_env(:sparrow, :tick_timout)
[12:37:48] <serafeim> :error
[12:37:50] <serafeim> that's it
[12:37:57] <Nicd> there's a typo there
[12:37:59] <Nicd> timout
[12:38:02] <serafeim> lol
[12:38:25] <serafeim> no `Application.fetch_env(:sparrow, :tick_timeout)`  -> :error
[12:38:33] <Nicd> is your app's name :sparrow?
[12:38:45] <serafeim> yes
[12:38:58] <serafeim> how do i set my apps name ? 
[12:39:04] <Nicd> in mix.exs
[12:39:14] <serafeim> in def project ? 
[12:39:16] <serafeim> `app: :sparrow,`
[12:40:12] <serafeim> i started this with mix new but then converted it to an app. by adding the mod to def application. does this matter ? 
[12:40:58] <Nicd> nope
[12:41:33] <serafeim> do you want me to put it on a repo ? i'm going crazy with this
[12:42:23] <Nicd> sure, I tested it and it works for me
[12:43:05] <Nicd> demo: https://www.irccloud.com/pastebin/m1CnLOfM/
[12:43:26] *** Quits: infinityfye (~infinityf@156.212.70.173) (Read error: Connection reset by peer)
[12:43:36] <serafeim> hm
[12:43:47] <serafeim> this project is under an umbrella app.
[12:43:50] <serafeim> does this matter ?
[12:43:58] <serafeim> this *app* is under an umbrella *project*.
[12:43:58] <Nicd> probably yes
[12:44:09] <serafeim> uh oh
[12:44:13] <Nicd> I don't know anything about umbrellas other than I avoid them
[12:45:04] <serafeim> retarded
[12:45:16] <serafeim> fvck the umbrella 
[12:45:38] <Nicd> Why are you using an umbrella?
[12:45:38] <serafeim> it worked when i moved the config under the umbrella config/config.exs :(
[12:45:50] <serafeim> Nicd: i'm researching umbrellas
[12:45:51] <Nicd> Their config stuff is different
[12:46:01] <serafeim> most people recommend avoiding them
[12:46:06] <serafeim> but i want to see for myself
[12:46:16] <Nicd> Well now you are seeing :D
[12:46:20] <serafeim> yes 
[12:46:37] <serafeim> well ok the config is no bid deal
[12:46:42] <serafeim> my main problem is the dependencies
[12:47:22] <serafeim> i want to make sure that the dependencies of one app in an umbrella project aren't needed in the other apps
[12:47:28] *** Joins: infinityfye (~infinityf@156.212.70.173)
[12:47:46] <serafeim> because we've got a rush dependency in an app and don't want that in the other
[12:51:04] <serafeim> i have understood that umbrellas are mainly useful if you want to have different apps in a monorepo 
[12:51:35] *** Joins: Tlanger (~tangmang@2403-580f-f5--4583-727f-95cf-c395.ip6.aussiebb.net)
[12:55:03] <serafeim> also my research shows that umbrellas are much more popular (and i guess useful) in erlang than in elixir. anybody has any idea why ? 
[12:55:24] *** Quits: Tongir (~tangmang@2403-580f-f5--a07b-ecda-b0f7-3322.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[13:00:17] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[13:01:05] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 256 seconds)
[13:04:56] *** Joins: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com)
[13:05:34] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[13:11:53] <serafeim> anybody else using umbrelals ?
[13:12:06] <serafeim> or not using 'em to argue against em
[13:16:00] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[13:21:18] *** Quits: DeX77 (~Admiral@dragonslave.de) (Quit: All your base are be.. CONNECTION RESET BY PEER)
[13:22:38] *** Joins: DeX77 (~Admiral@dragonslave.de)
[13:25:42] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[13:27:43] <croeso[m]> well, I do use them
[13:33:11] <serafeim> croeso[m]: can you tell me more ?
[13:33:16] <serafeim> where do the help you ?
[13:33:22] <serafeim> where do they
[13:33:24] <serafeim>  help you ?
[13:34:14] <serafeim> another question. let's suppose i've got an ecto schema that i want to share between two apps. is this possible ? 
[13:34:30] <serafeim> could i create an elixir library containing that ecto schema ?
[13:34:42] <serafeim> and then import that library as a dependency on my apps ? 
[13:34:45] <serafeim> will this work ? 
[13:35:03] <serafeim> notice that my apps will also share the db
[13:35:38] <croeso[m]> I suppose we discussed that some time ago. I have few small projects arranged in monorepos, so having everything in place with single configuration helps for these cases. In bigger projects I use multiple repos without umbrellas
[13:36:17] <croeso[m]> Well if you need one schema in two apps just make it a dependency for both of them
[13:36:18] <serafeim> croeso[m]: i wanted to know what are the advantages of the umbrellas over keeping separate elixr projects inside that monorepo
[13:36:32] <serafeim> croeso[m]: so i'll need to make this a library as i recommend
[13:36:36] <croeso[m]> But in general I would keep DB work in single app
[13:37:06] <serafeim> croeso[m]: yes but how would these apps talk to each other ?
[13:37:18] <serafeim> let's say that one app is a backend and the other is a front end
[13:37:33] <serafeim> for whatever reason it is required to separate em
[13:37:50] <croeso[m]> Well make a dep in front on backend and use functions of backend app in front
[13:38:02] <serafeim> also notice that these apps will run in completely different heroku dynos
[13:38:09] <serafeim> no way to communicate beyond a db
[13:38:24] <croeso[m]> But umbrella is not related to such problems
[13:38:31] <serafeim> croeso[m]: i know.
[13:38:33] <serafeim> croeso[m]: i wanted to know what are the advantages of the umbrellas over keeping separate elixr projects inside that monorepo
[13:38:45] <croeso[m]> To me that is just a tool to centralise configuration and deployment
[13:38:59] <serafeim> yes i know thhat you can have a common config
[13:39:12] <serafeim> also that you can run mix commands for all apps 
[13:39:32] <serafeim> and that you can do the {:foo, in_umbrella: true} dependency
[13:42:00] <serafeim> beyond these things (that are no big deal in our case), do you see any other advantage of using the umbrellas /
[13:50:14] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[13:51:39] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:53:39] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[13:58:12] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:00:28] <croeso[m]> I don't think there are many, to me umbrellas are a minor convenience
[14:03:08] <serafeim> cool
[14:18:15] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:21:01] *** Joins: voltone (~voltone@2a02-a453-5486-1-ec2c-48c7-664b-c506.fixed6.kpn.net)
[14:35:41] <serafeim> is anybody here using alpine.s ? 
[14:35:43] <serafeim> is anybody here using alpine.js ? 
[15:05:20] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[15:09:33] *** Joins: Dooky (~Dooky@186.251.209.232)
[15:20:49] *** Quits: Dooky (~Dooky@186.251.209.232) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:21:15] *** Joins: Dooky (~Dooky@186.251.209.232)
[15:37:26] *** Quits: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[15:37:51] *** Joins: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com)
[15:42:42] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[15:43:12] *** Joins: brw (~bas@haring.bas.sh)
[15:51:09] *** Joins: kuzyn1 (~kuzyn@modemcable071.66-22-96.mc.videotron.ca)
[16:00:04] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[16:17:02] <wink> does anyone have some medium-advanced phoenix project on github where I could be looking for some best practices? (i.e. you'd say it looks good), a few steps above a tutorial if possible
[16:19:09] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Remote host closed the connection)
[16:22:55] <serafeim> yes
[16:23:08] <serafeim> this one is good https://github.com/spapas/phxcrd
[16:23:29] <serafeim> coincidentally it's mine :P
[16:24:27] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[16:29:06] <serafeim> i'll be happy to answer any questions
[16:31:40] <wink> thanks!
[16:35:06] <serafeim> np
[16:44:12] *** Quits: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com) (Ping timeout: 240 seconds)
[17:12:01] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[17:14:01] *** Joins: henry40408 (~henry4040@175.181.177.116)
[17:18:34] *** Quits: henry40408 (~henry4040@175.181.177.116) (Read error: Connection reset by peer)
[17:19:33] *** Joins: henry40408 (~henry4040@175.181.177.116)
[17:27:04] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[17:27:47] *** Joins: Common-Lisp (~common_li@12.2.190.242)
[17:32:30] <Ankhers> Does ecto provide a way to drop and reconnect all of its connections? I have a situation where I am updating the credentials while the application is running and would prefer to not just kill my entire repo as I would like the transition to be graceful.
[17:33:13] <v0idpwn> There's disconnect_all (quite recently added) but I'm not sure if its gonna work well for this purpose 
[17:38:11] <Ankhers> Actually, reading the db_connection docs, it sounds like that should work for my usecase. As long as there is a backoff configured (which there is by default) it will try to reconnect immediately.
[17:38:34] <wink> but doesn't that sound exactly like a use case for replacing the application?
[17:38:48] <wink> (in a BEAM sense)
[17:38:59] <wink> I wonder where you see problems regarding transitions
[17:39:33] <wink> you'd need to close the connections anyway. but I don't know enough about ecto to see where there could be some "dangling" connection (as in not-a-db connection, but in the code)
[17:41:11] <Ankhers> wink: I'm looking into using a tool called vault in order to manage my secrets. If you are unfamiliar with it, one of the things it can do is connect to postgres and create short lived credentials automatically. If I create a credential for my application that lasts 1 hour, I don't want to have to redeploy my entire application just to update my database credentials.
[17:42:22] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[17:43:01] <v0idpwn> Ankhers: as I understood, you can have >1 active credentials at a time, right? If yes, disconnect_all should suffice, as you said.
[17:43:05] <wink> Ankhers: hm, no I meant "application" as seen by the erlang supervision tree. Like, replacing the Ecto "instance", not deploying your application. does that make it clearer?
[17:43:19] * wink ist not an erlang specialist
[17:43:59] <Ankhers> wink: Yes, but then it would completely drop all of my current connections, potentially leading to errors because active queries / transactions get dropped.
[17:44:31] <Ankhers> v0idpwn: Well, each instance of my application will have a single credential. But it will ALWAYS have one.
[17:44:36] <wink> Ankhers: oh, got it. I missed the "many connections"
[17:45:28] <Ankhers> v0idpwn: Thanks for pointing that out to me. 
[17:47:16] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[17:53:08] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:03:12] <benwilson512> Ankhers: does https://elixirforum.com/t/automatically-updating-ecto-pool-connections-credentials/37116 help?
[18:05:28] *** Joins: thojanssens_ (~thojansse@2403:6200:89a6:d49b:4c5f:bc6d:d9f6:38f6)
[18:08:12] *** Quits: Tlanger (~tangmang@2403-580f-f5--4583-727f-95cf-c395.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: thojanssens (~thojansse@2403:6200:89a6:d49b:4c5f:bc6d:d9f6:38f6) (Ping timeout: 240 seconds)
[18:08:13] *** Joins: Tongir (~tangmang@2403-580f-f5--4583-727f-95cf-c395.ip6.aussiebb.net)
[18:23:41] <Ankhers> benwilson512: Yes, thanks. That is the strategy I was going to use for this.
[18:25:05] *** Joins: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com)
[18:57:58] *** Quits: Dooky (~Dooky@186.251.209.232) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:02:03] *** Joins: hoppity (~hoppity@66.222.130.38)
[19:02:03] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[19:02:03] *** Joins: hoppity (~hoppity@user/hoppity)
[19:04:12] *** Quits: Common-Lisp (~common_li@12.2.190.242) (Ping timeout: 240 seconds)
[19:07:01] *** Joins: henry40408 (~henry4040@175.181.177.116)
[19:35:12] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:40:51] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[19:48:47] *** Quits: infinityfye (~infinityf@156.212.70.173) (Ping timeout: 250 seconds)
[19:53:04] *** Joins: phaleth (~user@user/phaleth)
[19:53:54] *** Joins: mahmutov (~mahmutov@37.155.20.217)
[20:03:48] *** Joins: Dooky (~Dooky@186.251.209.232)
[20:08:12] *** Quits: Dooky (~Dooky@186.251.209.232) (Ping timeout: 240 seconds)
[20:21:24] *** Quits: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[20:21:32] *** Joins: infinityfye (~infinityf@156.212.70.173)
[20:23:08] *** Joins: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com)
[20:24:19] *** Joins: mizi (~mizi@user/mizi)
[20:24:30] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3)
[20:30:23] *** Quits: thojanssens_ (~thojansse@2403:6200:89a6:d49b:4c5f:bc6d:d9f6:38f6) (Ping timeout: 250 seconds)
[20:32:04] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[20:35:31] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:37:21] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[20:58:02] *** Joins: Dooky (~Dooky@186.251.209.232)
[21:02:39] *** Quits: Dooky (~Dooky@186.251.209.232) (Ping timeout: 252 seconds)
[21:11:21] *** Joins: w1ntermute (~sven@ipservice-092-219-123-235.092.219.pools.vodafone-ip.de)
[21:12:43] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[21:14:43] <jeregrine> low key think I got erlang/otp to build using zig cc 
[21:17:01] <phaleth> jeregrine: nice! grats
[21:17:19] <jeregrine> didn't seem to need to do a whole lot. 
[21:17:32] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[21:18:16] <phaleth> but it's still a process worth documenting
[21:18:45] <jeregrine> yea probably write up a post on it, i need to verify it actually did what I thought it did and not horribly slow
[21:19:57] <jeregrine> I know erlang/otp used gnu and not clang. I wonder what, if any, changes I'd see
[21:23:04] <jeregrine> i started the tests, see ya'll in while :P
[21:28:04] *** Joins: bombuzal (~int16h@user/bombuzal)
[21:28:58] <jeregrine> but yea starts up says its built runs elixir
[21:29:32] <jeregrine> did ./configure then changed the generated Makefile setting gcc to zig cc and g++ to zig cc and thats it
[21:30:17] <jeregrine> zigs standalone linker isn't shipped yet but when it does we could do zig ld to replace LD 
[21:32:57] <jeregrine> otp docs confirm this is possible with clang but that you won't get the best performance compared to gcc
[21:40:20] *** Quits: mort (~mort@188.166.114.29) (Quit: The Lounge - https://thelounge.chat)
[21:40:43] *** Joins: mort (~mort@188.166.114.29)
[21:42:26] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[21:49:37] *** Joins: Dooky (~Dooky@186.251.209.232)
[21:52:31] *** Quits: damjan (~damjan@user/damjan) (Remote host closed the connection)
[21:53:27] *** Joins: aidalgol_ (~aidalgol@user/aidalgol)
[21:53:33] *** Joins: damjan (~damjan@user/damjan)
[21:54:36] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 240 seconds)
[21:54:38] *** Joins: damjan_ (~damjan@user/damjan)
[21:55:04] *** Quits: czard (~czard@80-42-94-216.dynamic.dsl.as9105.com) (Quit: Lost terminal)
[21:59:51] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[22:04:39] *** Quits: damjan (~damjan@user/damjan) (Quit: bye)
[22:04:39] *** damjan_ is now known as damjan
[22:06:14] *** Quits: mooff (mooff@awful.cooking) (Remote host closed the connection)
[22:07:19] *** Joins: mooff (mooff@awful.cooking)
[22:20:14] *** Quits: mahmutov (~mahmutov@37.155.20.217) (Ping timeout: 272 seconds)
[22:21:38] *** Joins: mahmutov (~mahmutov@37.155.85.16)
[22:23:03] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:13] *** Joins: notzmv (~zmv@user/notzmv)
[22:54:00] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3)
[22:54:18] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[23:00:59] *** Joins: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net)
[23:05:24] *** Quits: yauhsien_ (~yauhsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[23:05:43] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:18:46] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
