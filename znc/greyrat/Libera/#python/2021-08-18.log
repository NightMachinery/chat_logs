[00:01:30] <grym> godofsea: something like this https://bpa.st/ZJUA
[00:01:42] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 245 seconds)
[00:01:46] <sybariten> how would you recommend that i read the contents of a file in order to add a new sentence at the end of the new object i have? NB: not necessarily write it out to disk, but getting a new sentence on its own line.
[00:02:09] <grym> sybariten: read it into a list, append to the list
[00:02:28] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 268 seconds)
[00:02:29] <sybariten> grym: wouldnt i still need to add one \n  ? or am i fooling myself here
[00:02:45] <sybariten> i mean, an EOL before the new sentence i add
[00:04:53] <grym> sybariten: https://bpa.st/VMHQ
[00:05:05] <sybariten> Hmm no maybe this could work, i could just join the list with .join()
[00:05:17] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:05:43] *** Joins: xx (~xx@user/xx)
[00:06:20] <xx> how would I check from a shell script that python3 is installed?
[00:06:50] <grym> xx: tricky.  you can check if it's on the path more easily (with, say, type -a or which)
[00:07:38] <sybariten> thank you grym . When you do a multiline printt thing like that, the EOL's do get written into the file too, right?   And also, why do you later do the line.strip() ?
[00:07:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:07:40] *** Quits: death916 (~death916@user/death916) (Ping timeout: 240 seconds)
[00:08:12] <grym> sybariten: i like to read text files as one string per line, usually without the trailing newlines, and if i need them i'll put them back later
[00:08:26] <xx> grym: if [[ "$(python -V)" != "Python 3."* ]]; then ... is what I have but it feels really ugly
[00:08:33] <grym> when you '\n'.join(), you are creating _one_ string that has \ns in it, which are newlines
[00:08:46] <grym> xx: well, that's also not testing for python3
[00:08:50] <grym> that's testing something else
[00:08:51] <xx> and not even sure if I should be calling python -V instead of python3 -V, but at that point I'd already know that python3 is installed
[00:09:10] *** Quits: schumaml2 (~schumaml@dslb-178-007-201-081.178.007.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[00:09:13] <grym> xx: c.f. https://www.python.org/dev/peps/pep-0394/
[00:09:32] <xx> because I assume that unless python-is-python3 package is installed (or similarly some symlink is created), then it will break
[00:10:26] *** Joins: extropiator (~extropiat@107.181.178.95)
[00:10:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Remote host closed the connection)
[00:10:56] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[00:11:08] <Yhg1s> xx: 'which python3' would be a better test for python3.
[00:11:49] <sybariten> grym: ah ok so i'm mis-remembering or getting confused now - readlines() _does_ by default put a \n at the end of each list item that it reads from each line in a text file?
[00:11:52] *** Joins: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at)
[00:12:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:12:57] <grym> sybariten: lines in a text file, by definition, have a newline sequence at the end.  what those bytes _are_ can vary, open() tries to help/standardize this (see the universal newlines argument).
[00:13:08] *** Joins: schumaml2 (~schumaml@dslb-178-002-184-042.178.002.pools.vodafone-ip.de)
[00:13:17] <sybariten> mhm
[00:13:42] <grym> readlines reads what's there
[00:13:43] <grym> into a list
[00:14:05] <grym> one line per list item.
[00:14:25] <grym> (so if you omit the strip() on my example, you should note that the first three items would have newlines and the last one wouldn't
[00:14:41] <sybariten> OK, i somehow thought that since the \n effectively acts as a separator, it woulnd't be included into the items
[00:14:50] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[00:14:51] <grym> nope
[00:15:06] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:18:52] *** Quits: kmh (~kmh@p200300df5f23b400a913ba491969c7e8.dip0.t-ipconnect.de) (Quit: Leaving)
[00:18:56] *** Joins: schumaml3 (~schumaml@ipservice-092-211-202-231.092.211.pools.vodafone-ip.de)
[00:19:10] *** Quits: schumaml2 (~schumaml@dslb-178-002-184-042.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[00:21:05] *** Joins: entuland_ (~entuland@user/entuland)
[00:23:52] *** Quits: extropiator (~extropiat@107.181.178.95) (Ping timeout: 246 seconds)
[00:24:09] <dale> TIL PEP 661, sentinel values!
[00:24:12] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 245 seconds)
[00:25:15] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 258 seconds)
[00:25:34] <dale> Also TIL Python has a Discourse server?  And I guess some of the Python development discussion now happens over there instead of the mailing list?
[00:25:43] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:25:54] *** Quits: xon (~xon@host-6-net-68-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[00:25:55] <Yhg1s> yes. discuss.python.org.
[00:25:56] *** Quits: magla (~gelignite@55d4d9a3.access.ecotel.net) (Quit: Stay safe!)
[00:26:13] *** Joins: extropiator (~extropiat@107.181.178.73)
[00:26:29] <matsaman> discord y'mean?
[00:26:35] <grym> matsaman: thankfully, no
[00:26:37] <jean-luc> :-p
[00:26:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:e746) (Ping timeout: 240 seconds)
[00:26:42] <matsaman> 'fraid so: https://www.python.org/community/
[00:26:44] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[00:26:45] <matsaman> perhaps not dev discussion
[00:26:53] <grym> though there is one o' thems too, discourse is also a thing
[00:26:56] <Yhg1s> discourse isn't the same as discord.
[00:27:01] *** Joins: CombatVet (~c4@user/combatvet)
[00:27:09] *** Joins: Elzington (~Elzington@68.235.43.108)
[00:27:14] <matsaman> discuss. is only listed as 'Forums' in the mega-footer
[00:27:49] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:28:21] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[00:28:38] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:28:44] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[00:29:54] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[00:30:11] <bilb_ono> can someone help me with this date format parsing? https://bpa.st/3LHA what would the string be for 08/14/2021 ?
[00:31:20] <bjs> bilb_ono: the error message suggests you got the arguments mixed up
[00:31:24] <bilb_ono> oh yeah
[00:31:29] <bjs> as '08/14/2021' doesn't sound like a format
[00:31:35] <bilb_ono> ok thanks
[00:31:48] <bilb_ono> so the format was right but yeah
[00:32:04] <bjs> well, it didn't even get to checking if the format was right
[00:32:22] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[00:32:28] <bjs> but yeah
[00:33:40] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 240 seconds)
[00:34:40] *** Quits: dld (~davidlowr@2620:6e:6000:2900:3c3c:cf45:60f2:8388) (Ping timeout: 240 seconds)
[00:34:47] <jinsun> oh TIL the format can be written without any of those % things (but it doesn't give anything useful, just 1900-01-01)
[00:35:45] <bjs> jinsun: strptime has a default datetime and then it "fills in" the fields with whatever comes from the format string
[00:35:45] <bjs> iirc
[00:36:37] *** Joins: torandu (~sean@94.10.125.197)
[00:37:00] <jinsun> yeah so without any %d or whatever the default value is returned
[00:37:49] <bjs> If you don't have %d then the 'day' field is just the default yeah
[00:39:29] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[00:40:29] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[00:41:20] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[00:42:56] <torandu> hi. I am evolving a script to be a command line app with standard dirs, test, etc. Where should I logically put argument parsing code? Is there a "best practice"?
[00:43:28] *** Quits: extropiator (~extropiat@107.181.178.73) (Ping timeout: 246 seconds)
[00:43:32] *** Quits: Fiji (~Fiji@user/fiji) (Remote host closed the connection)
[00:43:41] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:44:02] <grym> torandu: depends on what argument parser you're using
[00:44:09] <torandu> argparse
[00:45:08] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Quit: Haxxa flies away.)
[00:45:09] <SnoopJ> torandu, I like to declare my parser instance and add arguments at the top of a file (i.e. just after the import section, maybe with some other busywork between), then call parser.parse_args() from `if __name__ == "__main__":`
[00:45:28] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[00:46:07] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[00:47:31] <SnoopJ> this is my general-purpose template: https://github.com/SnoopJeDi/dotfiles/blob/master/.vim/templates/argparse.py
[00:47:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:47:37] *** Quits: mei (~mei@user/mei) (Ping timeout: 248 seconds)
[00:47:56] *** Joins: ice9 (~ice9@user/ice9)
[00:50:20] <torandu> ah. ok. thx for the link. helpful!
[00:51:16] *** Quits: mattil (~mattil@78-27-110-179.bb.dnainternet.fi) (Quit: Leaving)
[00:51:55] *** Joins: kostkon (~androirc@2a02:587:a110:f169:3115:57c0:a33f:71f6)
[00:52:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:53:40] <torandu> should i put this in a runner/ wrapper that is separate from the rest of my app? is that reasonable?
[00:53:55] <SnoopJ> it depends on the application in general
[00:54:34] *** Joins: extropiator (~extropiat@162.253.68.202)
[00:54:34] <SnoopJ> Some tools fit neatly into a single .py, but packages often have a cli.py or somesuch where the commandline stuff lives, and which imports functionality from elsewhere in the package.
[00:54:35] <torandu> fair enough. that gives me something to think about. I will play around with it. thanks for your help!
[00:54:37] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:54:46] *** Joins: gloin (~gloin@user/gloin)
[00:55:11] <SnoopJ> my tendency is to be "messy" about this until it's blatantly obvious that and how it should be reorganized :)
[00:55:44] *** Joins: lucasb (uid333435@id-333435.stonehaven.irccloud.com)
[00:56:54] <gloin> I'm trying to sort out what appears to be a Catch-22 but is probably just my ignorance of Python: https://bpa.st/CVWQ
[00:57:45] <SnoopJ> gloin, it would help to see the complete error report
[00:57:52] <gloin> It's related to using pynetbox but the tuple has no attribute error suggests something more fundamental
[00:57:56] <gloin> SnoopJ: sure, one sec
[00:58:49] *** Quits: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[00:58:52] <KirkMcDonald> gloin: Well, this_host_ip4 is a tuple.
[00:58:54] <gloin> here's the full paste when trying with this_host_ip4: https://bpa.st/U3JQ
[00:59:23] <KirkMcDonald> gloin: And apparently that function wants a dictionary.
[00:59:32] <gloin> KirkMcDonald: I thought so too but...
[00:59:36] <Yhg1s> gloin: for sure, this_host.update(this_host_ip4) won't work because this_host_ip4 is a tuple, and dict.update() takes a dict or a sequence of key/value pairs.
[00:59:51] <gloin> https://bpa.st/Q4IQ
[00:59:55] <Yhg1s> gloin: perhaps you meant for this_host_ip4 to be a dict?
[00:59:56] <gloin> there's sending it a dict
[01:00:19] <sybariten> more suggestions wanted! I am reading a list of words, from file, into an object/handle. A textfile, one word per line. But there are lines that are empty ("empty") . I want to count these lines (and later get rid of them). I was thinking some kind of for loop where i use a counter
[01:00:25] <gloin> like I said, it feels like a paradox
[01:00:33] <Yhg1s> 'this_host_dict' is a dict containing a dict as value, whihch is probably not what you want?
[01:00:44] <Yhg1s> I'm not sure why you're using dict() *and* a dict literal *in the same expression*.
[01:00:58] <gloin> Yhg1s: please explain - this is probably my problem.
[01:01:06] <sybariten> but i cant look for empty items or items with len() = 0 , because there will always be at least a \n  . Should i check if the item length is longer than 2 or something?
[01:01:13] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[01:01:21] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[01:01:32] <KirkMcDonald> gloin: You're constructing something similar to: {"foo": {"foo": "some value"}}
[01:01:39] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 268 seconds)
[01:01:49] <sybariten> or make a literal search for if the item corresponds to "\n" ?
[01:01:51] <gloin> so just drop the dict in front of the opening paren?
[01:01:52] <grym> sybariten: this is why i .strip() stuff
[01:01:53] <KirkMcDonald> gloin: But perhaps you just wanted {"foo": "some value"} ?
[01:01:55] <Yhg1s> gloin: {"primary_ip4": get_hostinfo().local_ip} is a dict. dict(primary_ip4 = get_hostinfo().local_ip) is the same dict. dict(primary_ip4 = {"primary_ip4": get_hostinfo().local_ip,}) is the same as {"primary_ip4": {"primary_ip4": get_hostinfo().local_ip,}}
[01:02:11] <sybariten> grym: but would you then get to keep the empty lines, so you could count them?
[01:02:16] <gloin> oh I see it
[01:02:16] <gloin> haha
[01:02:34] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[01:02:37] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[01:03:12] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[01:04:02] <dba> how can I group all duplicates in a pandas df and count these groups?
[01:04:10] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[01:04:26] *** Quits: MemoriaVetusta (~charles@176.125.228.11) (Remote host closed the connection)
[01:04:59] <gloin> Still griping at me about giving it a dict when it just wants a list: https://bpa.st/AFOQ
[01:05:07] <grym> sybariten: https://bpa.st/ERDA ; and if you want to count how many empty lines there are, collections.Counter is nice, so is a loop, so is a defaultdict(int)
[01:06:08] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:06:33] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[01:07:14] <grym> sybariten: strip(), without a qualifier, removes all whitespace.  It's up to you to decide if that's OK or not: is a line with 5 spaces on it "empty"?
[01:07:48] <sybariten> grym: yeah thats a good question
[01:08:35] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[01:09:19] <Yhg1s> gloin: this is pynetbox, right?
[01:09:24] <gloin> Yhg1s: yeah
[01:09:46] <gloin> tried turning debug on at the server side and the most verbosity I could get it to cough up was "Bad request"
[01:10:24] *** Quits: extropiator (~extropiat@162.253.68.202) (Quit: Client closed)
[01:10:35] <Yhg1s> gloin: from the looks of things it's expecting something other than what you're passing as the value for primary_ip4.
[01:11:03] <Yhg1s> so it's not about the dict you pass to the update method, but what it contains.
[01:11:43] *** Joins: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at)
[01:11:54] <Yhg1s> gloin: what is this get_hostinfo() function?
[01:12:28] <gloin> hrm, this is probably the thing where an IP address is considered an object and I should be passing something like ipaddress.id rather than the actual IPv4 address
[01:12:47] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:12:56] <jinsun> dba: you want number of unique rows?
[01:12:57] <Yhg1s> perhaps you should check the old value and the new value for primary_ip4 and see that they're the same type and structure.
[01:13:32] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[01:13:41] <gloin> Yhg1s: get_hostinfo() builds a bunch of stuff that will eventually get used, stuff like kernel version, whether it's a VM and if so what kind, motherboard manufacturer, CPU info, etc.
[01:14:23] <Yhg1s> gloin: okay, well, check that what you're assigning to primary_ip4 is indeed the same type and structure as what pynetbox expects.
[01:14:25] <dba> jinsun, I want to the number of duplicates grouped together (I guess that would be the same as the number of unique rows)
[01:14:35] <Yhg1s> (you can just print the repr() of them.)
[01:14:38] <gloin> also there is no old value for primary_ip4 in this case - although I could set it in netbox and see what is returned
[01:14:50] *** Joins: doc|work (~doc@user/doc)
[01:15:18] <gloin> Seems like pynetbox has a lot of value but desperately needs better documentation.
[01:15:24] *** Quits: |Scan| (~scan@user/scan/x-0114296) (Quit: Leaving)
[01:16:04] *** Joins: extropiator (~extropiat@187.250.107.209.dsl.dyn.telnor.net)
[01:16:17] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[01:16:47] <gloin> hah, yeah, I can't even set primary_ip4 on the netbox server without first creating that object in IPAM
[01:16:51] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:17:21] <jinsun> dba: `df[~df.duplicated()].shape[0]` will give you number of unique rows, it won't show you same rows grouped together though or the number of times some row was repeated, if you wanted something like that
[01:18:35] *** Joins: fofoni (~fofoni@user/fofoni)
[01:19:41] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[01:20:29] <doc|work> I'm using pip tools to compile a requirements.in to a requirements.txt with hashes and getting "Error: in --requirements mode all requirements must have their versions pinned with ==, these do not: celery<6.0,>=4.4". I have celery as a requirement and it's pinned in the requirements.in, but django-celery-beat has that in its own requirements.txt. Anyone got any ways to pin a dependency's dependencies so this isn't a problem?
[01:20:41] <doc|work> my ddg.gg fu is failing me
[01:21:50] *** Joins: manin (~x@185.242.190.95)
[01:22:40] *** Quits: extropiator (~extropiat@187.250.107.209.dsl.dyn.telnor.net) (Ping timeout: 246 seconds)
[01:23:29] <matsaman> doc|work: it wants them pinned in the .in?
[01:24:20] <doc|work> matsaman, that's the thing, they are pinned in the .in, but that's not good enough I guess? It's not happy about django-celery-beat's dependency not being pinned.
[01:24:35] <matsaman> I don't know why you would even want them mostly pinned in the .in
[01:24:58] <matsaman> what're the exact params you're using with pip-compile?
[01:25:03] <doc|work> yeah, you'd think a range would be acceptable because you'd be pinning the release, but... ascii shrug
[01:25:27] <matsaman> never quite fully understood the draw of pip-compile
[01:25:34] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:25:53] <doc|work> python -m piptools compile --upgrade --no-annotate --no-header --allow-unsafe --generate-hashes --output-file []
[01:25:58] <doc|work> [] = file name
[01:26:24] <matsaman> you think it's just a requirement of --generate-hashes?
[01:26:49] *** Quits: godofsea (~dark@146.196.46.15) (Quit: Leaving)
[01:27:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[01:27:10] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[01:27:15] <doc|work> matsaman, what do you mean?
[01:27:25] <gloin> Yhg1s: turns out I have to pprint(dict(this_host)) but yeah. Weird that the host object doesn't show interfaces even when I add them in via the netbox web page
[01:27:29] <matsaman> will try with your 'celery<6.0,>=4.4'
[01:27:34] <doc|work> the compile works fine, that error occurs on pip install -r requirements.txt
[01:27:43] <matsaman> doc|work: ooooooh, sorry =)
[01:27:48] <doc|work> it's choking on the dependency
[01:27:50] <doc|work> hehe, no worries
[01:27:52] <gloin> repr just returns the hostname
[01:28:11] <matsaman> that's news to me, let me try it over here
[01:28:29] <doc|work> ok, so, now I have some idea what might be happening... I think it doesn't like that it's celery[redis] even if I also have celery in the .in
[01:28:34] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[01:28:46] <matsaman> pip install -r <(echo 'celery<6.0,>=4.4') doesn't seem to mind over here
[01:28:47] <doc|work> it's not linking them
[01:28:48] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[01:28:55] <matsaman> oh yeah, I do recall something like that before
[01:29:00] <doc|work> so it doesn't see a pinned celery :(
[01:29:17] <doc|work> well that's... half-baked :)
[01:29:52] *** Joins: Enitin (~Enitin@82.102.22.84)
[01:30:40] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 240 seconds)
[01:31:33] <matsaman> is it celery[redis]<6.0,>=4.4 in the .in?
[01:31:55] <doc|work> celery[redis]==4.4.7
[01:32:03] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[01:32:06] <doc|work> it's the [redis] that's breaking things
[01:32:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[01:32:43] *** Quits: driib (~driib@185.195.233.169) (Quit: The Lounge - https://thelounge.chat)
[01:33:06] *** Joins: driib (~driib@185.195.233.169)
[01:33:49] <matsaman> hrmm, can't duplicate, so I must be missing something =D
[01:33:58] <matsaman> probably too sleep deprived to be useful
[01:34:24] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:39] <doc|work> hah, so celery on its own is ok, try adding django-celery-beat==2.2.0 and you should be able to replicate it
[01:34:58] <doc|work> it's that lib's dependency which is demanding >,<
[01:36:52] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[01:37:19] <matsaman> no error here, just those two
[01:37:22] *** Joins: cypris (uid507362@user/cypris)
[01:37:27] <doc|work> weird
[01:38:25] *** Joins: Lando-SpaceIzzle (~Lando@user/lando-spacepimp)
[01:39:16] *** Quits: AM (~techman@87-94-110-167.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[01:40:21] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[01:41:36] <doc|work> thanks for trying, I'm going to go bang my head off some walls and see what happens
[01:41:44] <grym> thonk
[01:42:21] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[01:42:52] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[01:43:40] *** Joins: dld (~davidlowr@mobile-166-186-169-45.mycingular.net)
[01:45:11] <matsaman> doc|work: http://matsaman.nfshost.com/d.txt
[01:45:35] <matsaman> -use-the-force-luke? =)
[01:46:17] <doc|work> maybe it's the --upgrade-of-pip !
[01:46:19] *** Joins: AM (~techman@82-203-164-15.bb.dnainternet.fi)
[01:46:20] * doc|work upgrades
[01:46:37] <gloin> sigh
[01:46:45] * matsaman shrugs
[01:47:27] *** Joins: thiras (~thiras@user/thiras)
[01:47:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:47:34] <gloin> netbox is kind of a PITA. I need to create each interface and each IP as separate objects then associate them together along with the device they're connected to. I understand the data model (and can't think of a better way) but it's a lot of extra work for what I'm trying to build here
[01:51:18] <doc|work> pip is such a dick... "pip install requirements.txt -> Error invalid requirement: requirements.txt -> Hint: It looks like a path. The path does not exist." I want to submit a pull request that updates that to "you forgot the -r you idiot". It's only slightly more snarky.
[01:51:37] *** Quits: oz4ga (~tim@93.90.4.233) (Ping timeout: 268 seconds)
[01:51:40] <doc|work> *does exist
[01:51:43] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.2)
[01:52:09] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 248 seconds)
[01:53:25] <nedbat> doc|work: i once tried to upload a package to PyPI called "requirements.txt" that had a setup.py that just printed "You meant -r", but PyPI won't accept it :)
[01:53:39] <doc|work> hahaha
[01:54:45] <matsaman> baha
[01:55:23] *** Joins: opv (~opv@202.61.244.163)
[01:57:33] *** Joins: torandu (~sean@94.10.125.197)
[01:58:47] *** Quits: y1n (~y1n@84-115-65-115.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[01:59:57] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:00:16] <dstufft> nedbat: that used to exist
[02:00:19] <dstufft> I think Jannis owned it
[02:00:21] *** Joins: Samian (~Sami@2620:10d:c091:480::1:9fe6)
[02:00:36] <nedbat> dstufft: hmm, i thought PyPI rejected it because it seemed like a malware vector
[02:00:45] <dstufft> we reject it *now*
[02:00:50] <doc|work> heh
[02:00:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[02:00:53] <dstufft> many years ago we did not :)
[02:01:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:01:20] <dstufft> we didn't have the power to reject names until some time after the new code base launched
[02:01:34] *** Joins: kmh (~kmh@p200300df5f23b40081a23bc675bbdb8a.dip0.t-ipconnect.de)
[02:02:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[02:02:57] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[02:03:05] *** Joins: Jefren (~Jefren@70.35.67.0)
[02:04:10] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[02:05:10] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 240 seconds)
[02:05:18] *** Quits: Jefren4 (~Jefren@70.35.67.113) (Ping timeout: 258 seconds)
[02:05:27] *** Joins: Jefren1 (~Jefren@70.35.66.47)
[02:06:25] *** Quits: ubert (~Thunderbi@91.141.56.213.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[02:07:37] *** Quits: Jefren (~Jefren@70.35.67.0) (Ping timeout: 248 seconds)
[02:08:10] *** Joins: Jefren2 (~Jefren@70.35.67.182)
[02:08:52] *** Quits: dld (~davidlowr@mobile-166-186-169-45.mycingular.net) (Ping timeout: 268 seconds)
[02:09:45] *** Quits: Jefren1 (~Jefren@70.35.66.47) (Ping timeout: 248 seconds)
[02:10:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:10:43] *** Joins: y1n (~y1n@84-115-65-219.wifi.dynamic.surfer.at)
[02:10:59] *** Joins: dld (~davidlowr@mobile-166-186-169-45.mycingular.net)
[02:12:26] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[02:15:09] *** Joins: torandu (~sean@94.10.125.197)
[02:15:10] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[02:15:29] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[02:16:01] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[02:17:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[02:17:32] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[02:19:22] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: leaving)
[02:19:37] *** Quits: dld (~davidlowr@mobile-166-186-169-45.mycingular.net) (Ping timeout: 245 seconds)
[02:21:30] <The-Compiler> doc|work, nedbat: I think it does nowadays, more or less: https://github.com/pypa/pip/pull/9915/files
[02:22:31] *** Quits: kostkon (~androirc@2a02:587:a110:f169:3115:57c0:a33f:71f6) (Remote host closed the connection)
[02:22:39] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:23:47] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[02:23:52] *** Joins: dld (~davidlowr@mobile-166-186-169-45.mycingular.net)
[02:24:39] <doc|work> As of a month ago :)
[02:24:44] <doc|work> thanks
[02:26:00] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[02:26:01] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:27:04] <matsaman> hrmmm
[02:27:15] <matsaman> you can't make a 'requirements.txt' package in a local pip repo?
[02:27:42] *** Quits: V1mV1m (~VimVim@85.191.5.103) (Quit: Leaving)
[02:28:05] *** Joins: bernard__ (~bernard@user/bernard)
[02:30:11] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Read error: Connection reset by peer)
[02:30:50] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[02:31:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[02:31:38] *** Joins: Naan (~naan@user/naan)
[02:31:40] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 240 seconds)
[02:31:48] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:32:18] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[02:33:40] <aphysically> is this the recommended way to update an immutable class variable (without being specific to an instance of the class): https://dpaste.com/HCUS8EQKM
[02:33:50] <aphysically> is there a class-specific keyword I can use rather than referring to the class by name?
[02:34:21] <The-Compiler> aphysically: there's @classmethod
[02:34:28] *** Parts: bernard__ (~bernard@user/bernard) ()
[02:34:47] <aphysically> okay I will learn what those are
[02:35:41] <aphysically> oh, it just has class instead of self?
[02:35:42] *** Joins: torandu (~sean@94.10.125.197)
[02:35:51] *** Joins: Fiji (~Fiji@user/fiji)
[02:36:08] <nedbat> aphysically: yes, use cls as the argument name
[02:37:52] *** Quits: dld (~davidlowr@mobile-166-186-169-45.mycingular.net) (Ping timeout: 268 seconds)
[02:38:09] *** Joins: Jefren3 (~Jefren@70.35.66.100)
[02:38:11] <nedbat> aphysically: another alternative would be to avoid the global somehow
[02:38:50] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:38:56] <aphysically> this is for a shared threading event that I'm playing around with in toy code for learning
[02:39:16] *** Joins: dld (~davidlowr@mobile-166-186-169-45.mycingular.net)
[02:39:23] <aphysically> I wanted to make the event a class variable that got updated so it was updated for all instances of the class
[02:39:35] <aphysically> or well, the same one was updated
[02:40:03] <aphysically> there's probably other solutions too
[02:40:06] <nedbat> aphysically: another way is to have a separate object that "owns" all the instances.  Then an instance of the owner would have the attribute. Then you don't have a global.
[02:40:10] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 240 seconds)
[02:40:52] *** Quits: Jefren2 (~Jefren@70.35.67.182) (Ping timeout: 245 seconds)
[02:41:16] <aphysically> hmm
[02:41:30] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:41:31] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[02:42:26] *** Joins: cheater (~Username@user/cheater)
[02:43:47] *** Quits: dld (~davidlowr@mobile-166-186-169-45.mycingular.net) (Ping timeout: 245 seconds)
[02:45:15] *** Quits: Lando-SpaceIzzle (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[02:47:27] *** Joins: FluffyMask (~masque@user/fluffymask)
[02:47:33] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[02:49:56] *** Quits: dalan6 (~dalan@14-203-203-26.tpgi.com.au) (Quit: dalan6)
[02:50:23] *** Joins: dalan62 (~dalan@14-203-203-26.tpgi.com.au)
[02:51:03] *** Joins: Jefren4 (~Jefren@70.35.66.89)
[02:51:23] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[02:51:26] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[02:51:41] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 258 seconds)
[02:52:16] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:52:32] *** Quits: Jefren3 (~Jefren@70.35.66.100) (Ping timeout: 245 seconds)
[02:52:38] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[02:52:40] *** Quits: expunged (~elonsatos@user/elon-satoshi/x-4242282) (Ping timeout: 268 seconds)
[02:52:42] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[02:53:10] *** Quits: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[02:53:35] <anorthall> yo mamma so FAT she can't even save a file over 4gb
[02:53:54] *** Joins: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com)
[02:53:54] *** Joins: expunged (~elonsatos@user/elon-satoshi/x-4242282)
[02:54:39] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:54:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:9fe6) (Ping timeout: 240 seconds)
[02:57:10] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[02:57:41] <stealth_> anorthall, must be FAT32 bit
[02:57:59] <aphysically> nedbat: I'm not entirely sure I know the best way to do that still, see https://dpaste.com/7BBRMWG5U
[02:58:22] *** Quits: y1n (~y1n@84-115-65-219.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[02:58:27] <aphysically> if I want the global temp to decrement each time a drink is served, how should I refer to the globaltemp for the decrement
[02:58:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[02:59:10] <bjs> aphysically: maybe each Drink should know their parent AllDrinks (what is an "AllDrinks" anyway?)
[02:59:19] <bjs> like a VendingMachine ? :)
[02:59:41] <aphysically> I don't know it's not entirely intended to make sense, I just wanted to set up an example that demonstrated what confused me about the comment
[03:00:00] <aphysically> or maybe you meant 'owned' in a sense other than what I wrote here
[03:00:47] <bjs> aphysically: how about https://bpa.st/U6SA
[03:01:17] <bjs> (I also corrected your == to just = in Drink's __init__, it looked like a typo)
[03:01:48] <aphysically> yes it was a typo
[03:02:06] <aphysically> oh I see, you set it as an instance variable within it
[03:02:16] <aphysically> nice
[03:02:21] *** Quits: Doffi (~doffi@91.132.197.188) (Remote host closed the connection)
[03:02:28] *** Joins: Doffi (~doffi@91.132.197.188)
[03:02:31] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:02:56] <bjs> aphysically: yes this is what I would do, where each Drink "category" object has a reference to the actual 'parent' CoffeeMachine object to inspect/update
[03:03:51] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:55] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:03:56] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[03:05:43] <aphysically> cool, and I learned about classmethods - thanks all
[03:07:32] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 245 seconds)
[03:07:56] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:09:45] *** Joins: et_ (~et@user/et)
[03:09:55] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:10:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[03:10:47] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[03:10:47] *** et_ is now known as et
[03:11:27] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:12:04] *** Joins: y1n (~y1n@84-115-65-219.wifi.dynamic.surfer.at)
[03:13:00] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[03:13:47] *** Joins: iflema (~ian@user/iflema)
[03:15:29] *** Joins: grayhemp (~grayhemp@108-75-133-119.lightspeed.sndgca.sbcglobal.net)
[03:17:57] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 268 seconds)
[03:19:23] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[03:20:58] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:21:25] *** Joins: slaughtr (~slaughter@europa.whatbox.ca)
[03:22:34] <slaughtr> I am not incredibly familiar with python, looking at a script someone else wrote... what would the ":-4" here indicate? Hard thing to search for: some_var = some_string[:-4]
[03:22:56] <nedbat> slaughtr: that takes all but the last four characters from the string
[03:23:07] <slaughtr> Well that's rather obvious isn't it
[03:23:12] <slaughtr> :) thanks nedbat
[03:23:18] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Quit: Client closed)
[03:23:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:25:26] <nedbat> slaughtr: i can't tell if you were being sincere about "obvious"
[03:25:46] <slaughtr> Oh I mean now that you've said it, it seems pretty obvious that's what it does. Making fun of myself :)
[03:26:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 245 seconds)
[03:26:35] *** Quits: entuland_ (~entuland@user/entuland) (Ping timeout: 268 seconds)
[03:26:40] *** Joins: Jefren (~Jefren@70.35.66.226)
[03:28:17] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:28:47] *** Quits: Jefren4 (~Jefren@70.35.66.89) (Ping timeout: 245 seconds)
[03:30:17] *** Quits: Caesar-EW (~Caesar-EW@84.213.107.109) (Ping timeout: 248 seconds)
[03:32:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[03:32:59] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:33:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:33:35] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:34:28] <gloin> Anyone know if there's a core module that enumerates linux interfaces? Like, returns an array of refs that contain ipv4, ipv6, mac address, etc?
[03:34:35] *** Joins: entuland (~entuland@user/entuland)
[03:34:41] *** Joins: torandu (~sean@94.10.125.197)
[03:34:44] <Yhg1s> gloin: there is no standard library module for that, if that's what you mean.
[03:34:51] <gloin> alas
[03:35:54] <gloin> ifaddr looks promising
[03:36:28] <gloin> not on the repo :(
[03:36:33] *** Joins: Oddity (Oddity@user/oddity)
[03:37:20] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[03:37:22] *** Parts: slaughtr (~slaughter@europa.whatbox.ca) (Textual IRC Client: www.textualapp.com)
[03:38:16] *** Lando-HoloNet is now known as Lando-SpacePimp
[03:38:35] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:38:54] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:38:54] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[03:40:02] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[03:40:15] * gloin will have to write a function instead, can't be doing pip installs on this project
[03:40:16] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[03:40:36] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[03:41:44] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[03:42:05] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[03:42:37] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[03:43:18] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: leaving)
[03:43:20] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[03:43:22] *** Quits: y1n (~y1n@84-115-65-219.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[03:43:56] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:44:37] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Ping timeout: 245 seconds)
[03:44:55] <Gustavo6046> How can I wrap a method on top of an existing class object? Say, a method that appends this writestr implementation for any object that already implements WritableZipLike(typing.Protocol)::write.
[03:45:32] <Gustavo6046> Just setattr?..
[03:46:56] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[03:48:27] <gloin> pheh, ifaddr doesn't return enough data anyhow
[03:49:06] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[03:49:29] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 248 seconds)
[03:49:30] <Gustavo6046> Hm
[03:49:32] <Gustavo6046> how about monkeypatching?
[03:50:37] *** Quits: cypris (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[03:53:32] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[03:54:25] <Gustavo6046> Or I should just make an abstraction layer
[03:56:01] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[03:56:27] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:57:02] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:57:19] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[03:57:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:59:12] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 245 seconds)
[03:59:23] *** Quits: Akuli (~Akuli@82-203-162-97.bb.dnainternet.fi) (Quit: Leaving)
[03:59:30] *** Joins: extropiator (~extropiat@23.106.85.232)
[04:00:02] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 245 seconds)
[04:00:02] *** Wulf4 is now known as Wulf
[04:00:09] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 248 seconds)
[04:00:54] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:06] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:01:35] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[04:05:05] *** Joins: somlis (~somlis@user/somlis)
[04:05:05] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[04:05:12] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[04:05:19] *** Joins: entuland (~entuland@user/entuland)
[04:05:23] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[04:05:37] *** Joins: Knysliux001 (~dz@78-58-53-109.static.zebra.lt)
[04:06:51] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:07:10] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:07:15] *** Quits: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com) (Quit: aeadio)
[04:07:26] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[04:07:56] *** Joins: dre (~dre@2001:8003:c932:c301:bee9:3ad3:f910:26fe)
[04:10:05] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[04:11:23] *** Joins: death916 (AdiIRC@user/death916)
[04:12:30] *** Joins: somlis (~somlis@user/somlis)
[04:13:13] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[04:15:31] *** Joins: kwokshiyu (kwokshiyu@229.75.233.220.static.exetel.com.au)
[04:16:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[04:17:43] *** Joins: jefferson2z (~Jefferson@2804:2488:1088:3130:9b9a:b0e:9292:4bf1)
[04:18:30] *** Quits: jefferson2z (~Jefferson@2804:2488:1088:3130:9b9a:b0e:9292:4bf1) (Quit: Leaving)
[04:18:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:21:06] *** Quits: extropiator (~extropiat@23.106.85.232) (Quit: Client closed)
[04:21:54] *** Joins: entuland (~entuland@user/entuland)
[04:24:57] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[04:25:19] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:25:24] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[04:25:55] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[04:26:02] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[04:26:18] *** Joins: Roey (~Roey@user/Roey)
[04:26:44] *** Joins: extropiator (~extropiat@192.252.220.37)
[04:26:54] <disi> with requests, is there a way to get a str description of a status code? `requests.codes[200]` doesn't seem to work
[04:28:12] <mattf> Maybe you guys know why I am having this problem with ulauncher where QT_QPA_PLATFORMTHEME is not being set: https://github.com/Ulauncher/Ulauncher/issues/780
[04:28:19] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:29:01] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[04:29:10] *** Quits: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de) (Ping timeout: 240 seconds)
[04:38:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[04:38:23] *** Joins: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de)
[04:39:21] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 268 seconds)
[04:39:37] *** Quits: emerent (~quassel@p200300cd57058cceba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[04:40:14] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[04:41:04] *** Joins: emerent (~quassel@p200300cd57058c9dba27ebfffed28a59.dip0.t-ipconnect.de)
[04:41:13] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:42:26] *** Quits: luvalon1 (~luva@178.239.167.170) (Ping timeout: 268 seconds)
[04:46:56] *** Joins: jlix (~johannes@81-236-244-23-no298.tbcn.telia.com)
[04:47:25] *** Quits: extropiator (~extropiat@192.252.220.37) (Ping timeout: 246 seconds)
[04:47:55] *** Joins: luvalon1 (~luva@178.239.167.170)
[04:47:57] <sybariten> if i stick to a syntax like this    with open(fileName3, "r") as fileHandle4:      then, i presume, if i do things correctly the fileHandle4 object will be completely released from , well... is it called a namespace?  And, thus, i could use it for other situations later in a script?   And thus, i dont need to deal with numbers but can use just fileHandle everwhere
[04:48:11] <econdudeawesome> context manager
[04:49:10] <SnoopJ> disi, `from http import HTTPStatus; HTTPStatus(response.status_code).name` will do it. Not sure if requests has an idiom for this, it seems like it does not.
[04:49:56] <econdudeawesome> sybariten: https://book.pythontips.com/en/latest/context_managers.html
[04:50:22] *** Joins: nergar (~Nergar@177.225.152.13)
[04:50:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:51:28] <disi> SnoopJ: I have a response object, and I think response.reason is what I'm looking for (but I also found a scenario where it's empty -- going for an SSCCE now).
[04:52:30] *** Joins: extropiator (~extropiat@107.181.178.88)
[04:54:19] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[04:55:06] <sybariten> econdudeawesome: so in other words, yes?
[04:56:15] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Ping timeout: 244 seconds)
[04:56:32] <SnoopJ> disi, ah, yea, that'll be what you want, if it's populated (which I think it should be for all codes specified in the protocol)
[04:58:07] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[04:58:48] *** Joins: thiras (~thiras@user/thiras)
[05:01:17] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Read error: Connection reset by peer)
[05:01:22] *** Joins: stoiclun1 (~stoiclunc@user/stoiclunchbox)
[05:02:28] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[05:02:30] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:02:37] <Gustavo6046> pip releases new versions every now and then
[05:02:40] <Gustavo6046> How exciting are the changelogs? :o
[05:03:05] *** Joins: pycurious (~Adium@user/pycurious)
[05:03:24] *** Quits: doc|work (~doc@user/doc) (Ping timeout: 268 seconds)
[05:03:32] *** Quits: Auron956 (~Auron956@user/auron) (Remote host closed the connection)
[05:04:09] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 248 seconds)
[05:05:13] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 248 seconds)
[05:05:13] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[05:07:21] *** Quits: yte3 (~0@151.15.182.117) (Ping timeout: 248 seconds)
[05:09:23] <sybariten> what's the logical way to join a list into a string, but without any separators?
[05:10:04] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[05:11:34] <SnoopJ> `"".join(thelist)`
[05:12:44] <sybariten> thanks
[05:12:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:13:45] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 248 seconds)
[05:14:24] *** Quits: luvalon1 (~luva@178.239.167.170) (Quit: Byebye)
[05:14:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[05:14:35] <pycurious> anyone using k8s here - I could use some help. :) Seems like that room is dead.
[05:14:37] *** Quits: jlix (~johannes@81-236-244-23-no298.tbcn.telia.com) (Ping timeout: 245 seconds)
[05:14:52] *** Joins: wyclif (~wyclif@user/wyclif)
[05:14:59] *** Joins: luvalon1 (~luva@178.239.167.170)
[05:15:05] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:16:16] *** Joins: djapo (~archangel@user/djapo)
[05:19:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[05:20:21] *** Joins: wyclif (~wyclif@user/wyclif)
[05:20:52] *** Quits: hyper_dave (~hyper_dav@197.156.107.244) (Ping timeout: 245 seconds)
[05:20:58] <PantelicGR> pycurious: It's not dead. Try again later. People get some sleep too.
[05:21:53] *** Joins: Kvothe (~weechat@user/elodin)
[05:22:25] <PantelicGR> bb
[05:22:32] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:23:04] *** Joins: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de)
[05:27:48] *** Joins: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net)
[05:30:01] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:30:32] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 268 seconds)
[05:30:32] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:30:33] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[05:32:35] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[05:33:11] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:34:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:34:45] *** Joins: vlm (~vlm@user/vlm)
[05:36:00] *** Joins: aeadio (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[05:36:09] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Client Quit)
[05:36:12] *** aeadio is now known as aead
[05:39:10] <disi> I'm in pdb and someone shadowed `type`, so i can't tell what type a thing is... any ideas how i can access the original bultin function?
[05:40:44] <dale> disi: __builtins__.type
[05:43:51] <disi> dale: __builtins__["type"]     nice 8)
[05:43:56] <disi> ty
[05:44:02] <disi> i also found whatis (which is a pdb command)
[05:44:49] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:80a8:b6f2:7960:36e9)
[05:44:53] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[05:47:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:48:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:48:20] <disi> SnoopJ: in case you're interested... i've tracked it down to urllib3 (which requests uses to populate response.reason)
[05:49:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[05:49:14] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:50:56] *** Joins: thiras (~thiras@user/thiras)
[05:52:45] *** stoiclun1 is now known as stoiclunchbox
[05:54:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:55:20] *** gerard_ is now known as gerard
[05:57:40] *** Quits: inom (~inom@176.59.119.65) (Ping timeout: 240 seconds)
[05:57:59] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Quit: aead)
[05:58:47] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[05:59:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:59:28] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[05:59:46] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:59:53] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:00:08] *** Joins: Jefren1 (~Jefren@70.35.67.16)
[06:01:01] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[06:02:10] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Ping timeout: 240 seconds)
[06:02:28] *** Joins: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp)
[06:02:36] *** Quits: Jefren (~Jefren@70.35.66.226) (Ping timeout: 268 seconds)
[06:07:30] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:08:14] *** Joins: Fiji (~Fiji@user/fiji)
[06:08:27] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[06:08:31] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:54] *** Joins: Jefren2 (~Jefren@70.35.66.191)
[06:10:49] *** Quits: Jefren1 (~Jefren@70.35.67.16) (Ping timeout: 248 seconds)
[06:12:55] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[06:14:44] *** Quits: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[06:15:37] *** Joins: nagualcode (~nagualcod@181.221.147.75)
[06:16:16] <nagualcode> how do I iterate in nested json? something like: for Item in y['Cart']['Items’]; print(Item['Sku'])
[06:16:27] <nagualcode> sample: https://paste.debian.net/plain/1208058
[06:17:29] <Fiji> what error do you get when you run that?
[06:18:35] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[06:18:39] <nagualcode> invalid syntax: for Item in y['Cart']['Items']
[06:19:02] <grym> nagualcode: needs a final colon
[06:19:08] <Fiji> you need a `:` after your for condition
[06:19:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[06:19:13] <Fiji> dammit!
[06:19:14] <sybariten> here is some code, where i'm taking a text file and am writing to a new file with a subset of those lines. I am also trying to count the number of charachter in this subset/file. (And I am also extracting the first nine characters of one line but thats not really relevant for my question)
[06:19:16] <grym> `for foo in bar:`
[06:19:17] <Fiji> :P
[06:19:24] <grym> Fiji: yoink!
[06:19:33] <nagualcode> annnd it is working
[06:19:36] <nagualcode> thank you
[06:19:38] <Fiji> de nada
[06:19:45] <nagualcode> obrigado
[06:19:49] <Fiji> ;)
[06:21:27] *** Quits: gry (~quassel@botters/gry) (Quit: gone)
[06:22:08] *** Quits: jochum (~jochum@user/jochum) (Ping timeout: 258 seconds)
[06:22:45] *** Joins: Jefren3 (~Jefren@206.253.157.194)
[06:24:10] *** Quits: Jefren2 (~Jefren@70.35.66.191) (Ping timeout: 240 seconds)
[06:25:10] <sybariten> uh, is there a way to share a file so that one knows it will keep the correct formatting and everything?
[06:25:37] <sybariten> sort of like a paste i mean. But its for a text file. I'm failing at counting characters according to an exercise i'
[06:25:47] <grym> sybariten: bpa.st/+text
[06:25:58] *** Joins: califax- (~califax@user/califx)
[06:26:10] <sybariten> m doing. Or rather, i'm failing at getting the correct result .... i'm below the true value though so it can't be that i'm counting newlines really
[06:26:25] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:26:41] <aphysically> when writing threaded code in order to help with debugging should I always have something like this at the end to raise the exceptions? https://dpaste.com/8GXP4Y9K8 is it preferred if I just call future.result() on all of them?
[06:26:43] <sybariten> grym: can one attach an actual file there?
[06:26:58] <Fiji> formatting should persist when pasted
[06:27:21] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:27:53] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:27:53] *** brabrax_ is now known as brabrax
[06:28:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[06:28:28] *** Joins: foozle (~foozle@2001-b011-c001-16ef-98f0-eb99-858a-7d31.dynamic-ip6.hinet.net)
[06:28:28] <grym> sybariten: you can also post things to 0x0.st
[06:28:31] <sybariten> input file = https://bpa.st/5ZUQ      If you were to count the characters of line 4, 5 and 6, how much would you get ?
[06:28:44] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[06:28:45] *** califax- is now known as califax
[06:28:48] *** Parts: nagualcode (~nagualcod@181.221.147.75) ()
[06:29:43] *** Joins: heco (~redrum@user/redrum88)
[06:30:21] <grym> sybariten: https://bpa.st/JCFQ
[06:30:41] *** Quits: driib (~driib@185.195.233.169) (Read error: Connection reset by peer)
[06:30:54] *** Joins: driib (~driib@185.195.233.169)
[06:31:22] <grym> there are 184 characters overall, accounting for 186 bytes worth of storage
[06:31:29] <grym> (in utf-8)
[06:31:37] <sybariten> yeah thats the correct amount, i get 182 .... hmm
[06:31:54] *** Joins: devios (~devios@75-166-173-50.hlrn.qwest.net)
[06:32:06] <Fiji> sybariten, are you only counting ascii characters?
[06:32:07] <grym> you're probably not counting the newlines
[06:33:45] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 248 seconds)
[06:33:59] <sybariten> i did like this....  https://bpa.st/ETGA   NB, i forgot to include a definiton for the original / input filename here in this paste, it's included elsewhere in my script
[06:34:01] <Jonno_FTW> if I have a set of points, how would I find a subset of n points such that the total distance between all of them is maximised?
[06:34:22] *** Joins: nrg (~NRG@user/nrg)
[06:34:38] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[06:34:38] <sybariten> grym: well my instructions say  "Do not include newlines when you count the number of characters."
[06:34:53] <grym> sybariten: ok, well, there are two of them
[06:34:54] <grym> so there you go
[06:35:38] <sybariten> yes. do _not_ include newlines when cointing characters
[06:36:09] <grym> len(x for x in thestring if x!='\n
[06:36:12] <grym> ')
[06:36:48] <grym> er, needs an inner []
[06:36:51] <grym> len([...
[06:37:07] <grym> or the sillier sum(1 for x in ...
[06:38:22] <grym> Jonno_FTW: heh, an anti-clustering algorithm
[06:38:44] *** Joins: gry (~quassel@botters/gry)
[06:38:46] <sybariten> grym: sorry, i'm not following
[06:39:21] <grym> sybariten: `sum(1 for char in "abcd\n" if char !='\n') is 4
[06:39:49] <sybariten> grym: okay, yes, cause there are four characters in there right
[06:39:57] <grym> yes
[06:40:42] <grym> time for bed for me
[06:40:44] <sybariten> I cant really see how it relates to my problem
[06:41:38] <sybariten> Or i mean, you got the 184 _when_ counting the newlines too?
[06:42:16] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[06:43:42] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::682e) (Quit: Konversation terminated!)
[06:43:47] <econdudeawesome> newline characters in windows files can have a \r associated to. So, something line len([x for x in my_string when x not in '\r\n']) would work possibly
[06:44:37] <econdudeawesome> or you could use str.isascii method: https://docs.python.org/3/library/stdtypes.html
[06:44:48] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[06:44:49] <econdudeawesome> or even isprintable
[06:45:39] *** Joins: extropiator97 (~extropiat@192.252.220.15)
[06:46:13] <sybariten> Well I'm not on Win .... and besides i'm getting too little. I don't get it
[06:46:25] *** Quits: extropiator (~extropiat@107.181.178.88) (Ping timeout: 246 seconds)
[06:46:57] <econdudeawesome> So the issue is that you have 186 chars but... ?
[06:48:56] <econdudeawesome> Ah I see the file link. Is the \nEND OF FILE part of the file?
[06:49:31] <sybariten> econdudeawesome: the issue is that my counter gives 182, but the correct answer seems to be 184
[06:49:46] <AhmedAmerican> using normal requests module, i getting 200 for https://chicago.craigslist.org/d/jobs/search/jjj but using scrapy, i keep getting 403 even i included `User-Agent`
[06:49:52] <sybariten> i wonmder if theres some *nix char counting tool that i can compare with...  wc maybe
[06:50:25] <econdudeawesome> wc -m $file
[06:51:05] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1055-580a-2b7e-a63c.res6.spectrum.com) (Read error: Connection reset by peer)
[06:51:21] <sybariten> OK so that one says 184 ...  thats the file i've created on disk. So maybe theres something with my counting routine (actually counting dictionary items) that's wrong
[06:51:37] <econdudeawesome> can you paste your code?
[06:52:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:52:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (zinc.libera.chat (Nickname regained by services)))
[06:52:05] *** finn_elija is now known as FinnElija
[06:52:58] <sybariten> econdudeawesome: it's like this  https://bpa.st/ETGA   except theres a line at the top missing where i'm assigning  https://bpa.st/5ZUQ  to the variable quoteFileName
[06:53:23] <AhmedAmerican> https://bpa.st/7G3Q
[06:53:24] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:54:16] <econdudeawesome> AhmedAmerican: You're getting a forbidden resource error. Perhaps you need a cookie or a login
[06:54:50] <econdudeawesome> Use Chrome or Firefox tools and watch what cookies get sent in the network requests
[06:56:27] <SnoopJ> disi, right, it's behavior inherited from urllib3
[06:57:45] <econdudeawesome> sybariten: let me take a step back. What exactly are you trying to do?
[06:58:02] <econdudeawesome> AhmedAmerican: let me rephrase: cookies & request headers
[06:58:19] *** Quits: extropiator97 (~extropiat@192.252.220.15) (Ping timeout: 246 seconds)
[06:58:21] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:58:50] <econdudeawesome> sybariten: count characters or count bites?
[06:58:59] <econdudeawesome> bytes* (argh its getting late here)
[06:59:42] <sybariten> econdudeawesome: we have a file of quotes, a text file of like 10-15 lines or so. We're supposed to take line 4,5,6 and write to a new file. And count the number of _characters_ in that subset, i would say
[06:59:59] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:00:03] <sybariten> well thats literally what the task says actually
[07:01:42] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[07:04:34] <econdudeawesome> So the lines begin with "Things" and the last line is "In theory"?
[07:05:23] <sybariten> econdudeawesome: yup. Three lines.
[07:05:37] <econdudeawesome> And the output should be 188?
[07:07:11] *** Joins: TakinOver (~quassel@47.150.196.72)
[07:07:14] <econdudeawesome> Have you tried printing the lines you are wanting to count
[07:07:44] <sybariten> econdudeawesome: the sum should be 184
[07:08:19] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:10:01] <sybariten> econdudeawesome: how do you mean printing
[07:10:08] <econdudeawesome> odd. Using that file, I get 185 with newlines and 182 without
[07:10:38] <econdudeawesome> with open(tmp,'r') as c: k = c.readlines()
[07:10:58] <econdudeawesome> len([x for x in ''.join(k[3:6]) if x.isprintable()])
[07:11:16] <sybariten> yeah that'd be the same result as me, i guess. I'm not counting newlines as far as i know (we're not supposed to)
[07:11:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:11:32] <sybariten> if i run it through wc though, i get 184
[07:11:57] <econdudeawesome> what do you run through wc
[07:12:16] <sybariten> wc -m extraQuotes.txt
[07:12:40] <econdudeawesome> I named the file tmp. head -n 6 tmp | tail -n 3 | wc -m
[07:12:43] <econdudeawesome> gives 185, counts newlines
[07:13:11] <sybariten> yeah, yiou're doing that on the original file i presume?
[07:13:15] <econdudeawesome> yep
[07:13:40] <sybariten> i also get 185
[07:14:10] <econdudeawesome> So looks like it is 185 with newlines, 182 without
[07:14:28] <econdudeawesome> To see what might be driving the count, I looked at:
[07:14:30] <econdudeawesome> [x for x in ''.join(k[3:6]) if not x.isprintable()]
[07:14:37] <sybariten> Yeah, then... something is off somewhere. I guess.
[07:15:04] <econdudeawesome> Either the file or line numbers are off, or the answer of 184 is wrong (it is one key off from 185, 2 from 182 after all!)
[07:15:05] <sybariten> what is k there? And what exactly does isprintable do?
[07:15:30] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:15:37] <econdudeawesome> k is what I named the readlines output -- its strings for each line without splitting by newline chars
[07:15:47] <econdudeawesome> See here for isprintable: https://docs.python.org/3/library/stdtypes.html
[07:16:36] <sybariten> yeah that's true, could be an error in that end....   their number comes from a fairly automated correctioning system though, i dont know how much manual editing there is in there, or if they're dynamically generating the 184 from their own ("correct") routines for slicing etc
[07:16:41] <econdudeawesome> (I would argue isprintable and the standard docs are probably the best outcome for this task -- will teach you a ton!)
[07:17:21] <sybariten> OK... .if you look at my paste though, does it strike you as obviously lacking somewhere?  Specifically thinking of my for loop and the list there
[07:17:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:17:59] <econdudeawesome> I'm not your evaluator :) But I do recommend giving the docs a read
[07:18:53] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:19:07] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[07:19:55] <sybariten> Yeah, no  :) i just meant if i made an obvious mistake, in counting
[07:20:33] *** Quits: nyah (~nyah@51.146.30.113) (Quit: leaving)
[07:24:59] *** Quits: lucasb (uid333435@id-333435.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:27:34] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[07:27:58] <whatsupdoc> why doesn't python let you subract characters like 'b' - 'a'?
[07:28:20] <SnoopJ> whatsupdoc, what would the result of that be?
[07:28:30] <whatsupdoc> 1
[07:28:33] <SnoopJ> Why?
[07:28:36] <whatsupdoc> Like in C/C++?
[07:28:38] <whatsupdoc> ascii
[07:28:46] *** Joins: matsaman (~matsaman@user/matsaman)
[07:29:01] <whatsupdoc> since 'b' is 98 and 'a' is 97
[07:29:16] <SnoopJ> whatsupdoc, Python strings are sequences of Unicode code-points, they are a much more complicated idea than `char` and `char*` or somesuch.
[07:29:40] <InPhase> whatsupdoc: ord('b')-ord('a')
[07:30:13] <SnoopJ> yea, you want to turn the strings into the desired integers (passing through the encoding you choose explicitly as the programmer), then subtract *those*
[07:30:17] <econdudeawesome> ^ InPhase for the win. Exactly right
[07:30:22] <econdudeawesome> Explicit is better than Implicit
[07:30:26] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[07:30:52] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[07:31:16] <whatsupdoc> python is like kind of implicit though
[07:31:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:32:43] <SnoopJ> whatsupdoc, follow-up question: what should '猫' - '貓' be ?
[07:33:14] <InPhase> ord('猫')-ord('貓') == -6504
[07:33:51] <sybariten> Whut the hell
[07:34:01] <sybariten> chinese signs in my terminal
[07:34:20] <whatsupdoc> yep
[07:34:22] <sybariten> is that even possible
[07:34:30] <SnoopJ> sybariten, it's just text
[07:34:47] <whatsupdoc> unicode
[07:34:48] <whatsupdoc> U+29483
[07:34:53] <sybariten> well text with some charset/font that has 2000 fonts ?
[07:35:08] <amosbird> Hello! What's the right way to get the source ip address that is used to reach 8.8.8.8 in python?
[07:35:09] <whatsupdoc> U+732B
[07:35:18] <SnoopJ> sybariten, apparently your client and the font you are using in it has decent Unicode support. Congratulations!
[07:35:54] <sybariten> I'm used to, back in the days anyhow, exotic text on irc always posing some kind of problems.... here it just works now, and i'm going through like three different platforms. Impressive
[07:36:18] <whatsupdoc> I use Windows terminal lol and it works
[07:36:21] <SnoopJ> InPhase, I suppose you could define it as the actual codepoints for single-character strings, but that would be a weird subset over which to define the behavior (including what one "character" is)
[07:36:33] <sybariten> I'm even basically watching this in chrome, sort of ... their terminal
[07:37:17] <dale> Anyone know what type we're supposed to use instead of typing.TextIO, which is apparently deprecated?
[07:37:19] <dale> io.TextIOBase?  It's confusing that the docs say it's deprecated, but don't say what to do instead.
[07:37:24] *** Joins: torandu (~sean@94.10.125.197)
[07:37:56] <SnoopJ> dale, probably StringIO
[07:37:57] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[07:38:21] *** Joins: Skyfire (~pyon@user/pyon)
[07:38:33] <SnoopJ> Oh, this is for annotation?
[07:38:40] <dale> This is for type annotation, yes.
[07:38:41] * SnoopJ reads more carefully
[07:39:16] <InPhase> SnoopJ: Yeah, this should not be default behavior for character/codepoint strings, because it is contradictory to the behavior for 'a'+'b' and 'a'*2
[07:39:20] <dale> (And I think TextIOBase is more general than StringIO.  The former is anything that reads/writes str, the latter is specifically read/write str to a in-memory buffer--I *think*.)
[07:39:27] <InPhase> SnoopJ: So, in summary, I prefer it how it is.  :)
[07:41:17] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[07:42:09] <dale> amosbird: I am hopeful that socket.socket.getsockname will do that.
[07:42:27] <dale> amosbird: Though in that case I suppose you have to initiate a connection.
[07:42:57] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[07:43:27] <SnoopJ> dale, phew, evidently this is a documentation error referring only to deprecation of the typing.io package. The generics themselves are *not* deprecated. https://bugs.python.org/issue44925 https://github.com/python/typing/issues/834
[07:43:54] <dale> SnoopJ: Oh, jeez, thank you for finding that.  I was just looking at two other bugs.
[07:45:10] <SnoopJ> dale, it looked like a huge missing stair for a moment, but I thought the notice looked kind of funny and decided to see what was new-ish there
[07:45:34] <SnoopJ> but there was nothing in the 3.8 changelog about TextIO :)
[07:46:02] <dale> Yeah, I checked what's new in a few places and turned up nothing.  And of course googling around for typing.IO gets conflated with typing.io.
[07:47:50] <SnoopJ> I've been treating to break that habit a little, if I have a notion of where I might find much lower-entropy information (in this case, the changelog)
[07:49:27] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:50:21] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[07:51:26] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[07:51:47] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:52:41] *** Joins: c10l (~c10l@89.34.167.207)
[07:52:54] *** Quits: nergar (~Nergar@177.225.152.13) (Quit: Leaving)
[07:53:34] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[07:56:09] <amosbird> dale: hmm
[07:56:10] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[07:57:43] <whatsupdoc> how do you use .split() to split on any character that is not an integer?
[07:58:28] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:58:30] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:59:46] <jinsun> `the_string.split(next(c for c in the_string if c.isdigit())`
[07:59:58] <Repiphany> regex split
[08:00:10] *** Quits: justyb11 (~justyb@2601:483:500:3ea:9102:4f5d:313b:3a42) (Quit: Leaving)
[08:01:42] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[08:03:26] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:03:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:04:02] <jinsun> ah I didn't read that properly at all, so my solution won't do
[08:04:13] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:04:27] <SnoopJ> isdigit() is Unicode-aware IIRC
[08:04:46] <SnoopJ> `"¹".isdigit()` -> True
[08:05:03] <hendry> Is poetry for package management recommended by peeps here?
[08:05:51] <matsaman> by some
[08:06:03] <SnoopJ> hendry, I've been using it for a work project, but I don't think I will use it for whatever will be created next
[08:06:46] <hendry> collegue is updating docs with lines like `poetry run python sample.py` which is making my head spin
[08:07:32] <SnoopJ> hendry, I like to use it with direnv, there's a good integration available for it.
[08:07:44] <matsaman> whatsupdoc: what're you starting with, for example, and what do you want
[08:08:12] <matsaman> hendry: was there not a method in the docs predating the poetry approach?
[08:08:13] <SnoopJ> hendry, i.e. when I'm inside my project directory, the poetry-managed venv is activated and `python3` etc. point to those files.
[08:09:45] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[08:10:09] <SnoopJ> it's definitely not a "package management" tool, it manages virtual environments as well and helps you build distributions of your project (.whl or .tar.gz)
[08:10:16] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:10:28] <whatsupdoc> "3.1345495" => 3
[08:10:43] <SnoopJ> whatsupdoc, '.' is not a digit
[08:10:48] <whatsupdoc> "3534alsdkjfalskdjf" => 3534
[08:11:02] <SnoopJ> oh I see, you're giving examples
[08:11:32] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:11:32] *** Joins: Jefren4 (~Jefren@70.35.66.242)
[08:12:09] <whatsupdoc> "584 596" => 584
[08:12:47] *** Joins: cth (~Cthulchu@213.174.21.101)
[08:12:58] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[08:13:22] <Repiphany> itertools.takewhile(lambda c: c.isdigit(), s)
[08:13:54] <Repiphany> (but really regex)
[08:14:01] *** Quits: Jefren3 (~Jefren@206.253.157.194) (Ping timeout: 248 seconds)
[08:14:45] <dre> whatsupdoc, re.match(r'.*(\d+).*',string_to_test).group()
[08:14:55] <dre> or something like that atleast
[08:15:37] * SnoopJ would do [^0-9]
[08:15:57] <whatsupdoc>         i = 0
[08:15:57] <whatsupdoc>         while i < len(s) and s[i] >= '0' and s[i] <= '9':
[08:15:57] <whatsupdoc>             i += 1
[08:15:57] <whatsupdoc>             
[08:15:57] <whatsupdoc>         s = s[:i]
[08:16:16] <dre> heh
[08:16:17] <SnoopJ> whatsupdoc, please use a paste site instead of pasting directly in the channel. https://bpa.st is a nice one.
[08:16:19] <whatsupdoc> lol
[08:16:41] <matsaman> re has a .split() of its own
[08:17:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[08:17:20] *** Joins: califax (~califax@user/califx)
[08:17:46] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:18:20] <matsaman> re.split('[^0-9]+','3534alsdkjfalskdjf')
[08:18:22] <SnoopJ> hmm, I wonder whether restricting the question to micropython brings up some interesting questions, if its regex engine was not already in use by a program
[08:18:37] <matsaman> =)
[08:19:15] <dre> matsaman, oh damn, good to know, thanks
[08:19:22] <dre> that's much nicer
[08:20:03] *** Joins: xrogaan_ (~xrogaan@user/xrogaan)
[08:20:20] <matsaman> I think I read \d might not be strictly integers only, too? <shrug>
[08:20:21] <Repiphany> Depending on what the actual aim is
[08:20:35] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 258 seconds)
[08:20:36] <matsaman> Repiphany: yep
[08:20:37] <SnoopJ> matsaman, I believe it's locale-dependent
[08:21:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:21:05] *** Joins: Jefren (~Jefren@206.253.157.206)
[08:21:21] *** Joins: jochum (~jochum@user/jochum)
[08:21:34] <SnoopJ> oh, it's a flag it depends on
[08:23:00] <SnoopJ> and interestingly, `re.match(r"\d", "¹")` is None, but "¹".isdigit() is True
[08:23:12] *** Quits: Jefren4 (~Jefren@70.35.66.242) (Ping timeout: 268 seconds)
[08:23:37] <InPhase> SnoopJ: I did not expect that isdigit to be true.
[08:23:43] *** Quits: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[08:23:45] <matsaman> but also, one doens't necessarily need to have code that expects characters not yet encountered in a system
[08:23:49] <matsaman> doesn't*
[08:24:18] <SnoopJ> not right up until they do need it, anyhow
[08:24:21] <matsaman> =)
[08:24:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:26:30] *** Quits: grayhemp (~grayhemp@108-75-133-119.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[08:26:43] <SnoopJ> InPhase, it's based on the Unicode property (Di), I believe. I can't recall what \d does, possibly it's the decimal (De) property
[08:27:06] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 258 seconds)
[08:27:15] *** Joins: baltazaar (~baltazar@91-82-172-59.pool.digikabel.hu)
[08:27:34] <SnoopJ> "①" is typographically a digit, but "¾" is not
[08:27:43] <matsaman> yeah, ascii
[08:27:45] <matsaman> https://docs.python.org/3/library/re.html#index-28
[08:28:21] <matsaman> \D, neat
[08:28:22] <SnoopJ> matsaman, if you set the re.ASCII flag. But ah, that says what it does: category Nd (which correponds to De)
[08:28:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:28:56] <SnoopJ> Unicode has a lot of opinions about numbers in text (because people do)
[08:29:00] <matsaman> yeah
[08:29:14] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[08:30:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:30:33] *** Quits: baltazar (~baltazar@217-197-181-136.pool.digikabel.hu) (Ping timeout: 258 seconds)
[08:33:00] *** Joins: mei (~mei@user/mei)
[08:33:19] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:29] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:d09f:e768:a8b9:209a) (Remote host closed the connection)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:42] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:38:32] *** Joins: manin (~x@185.242.190.95)
[08:40:17] *** Joins: extropiator (~extropiat@107.181.178.75)
[08:42:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:42:44] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[08:46:43] *** Joins: gvsa123 (~gvsa123@d23-17-233-182.abhsia.telus.net)
[08:51:30] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:54:02] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 268 seconds)
[08:58:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[09:03:36] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:06:08] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:07:07] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:07:35] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:09:58] *** Joins: derelict (~derelict@user/derelict)
[09:10:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:10:46] <amosbird> Hello! How can fix this generator
[09:10:48] <amosbird>     [{ "host": host, "port": port} host, port h.split(":") for h in host_list.split(",")]
[09:11:15] *** Joins: wyclif (~wyclif@user/wyclif)
[09:12:23] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[09:13:18] <jinsun> depends on what your host_list is and what you want the output to look like
[09:13:28] <matsaman> yeah what's wrongw ith it
[09:13:54] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[09:14:12] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 245 seconds)
[09:15:52] *** Quits: extropiator (~extropiat@107.181.178.75) (Ping timeout: 246 seconds)
[09:16:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:16:44] *** Joins: wyclif (~wyclif@user/wyclif)
[09:18:56] <amosbird> the host_list is  host1:port1,host2:port2 and I'd like to get [{"host":"host1", "port":port1}, {"host":"host2", "port":port2}]
[09:22:36] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:22:52] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[09:23:11] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[09:25:45] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:26:08] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:27:29] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[09:28:00] *** Joins: dcaro_ (~dcaro@user/dcaro)
[09:28:10] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 240 seconds)
[09:29:32] *** xrogaan_ is now known as xrogaan
[09:29:49] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:30:45] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:31:01] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 268 seconds)
[09:31:02] *** dcaro_ is now known as dcaro
[09:31:58] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:32:36] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[09:32:40] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[09:33:56] *** Joins: tkazi (~tkazi@user/tkazi)
[09:34:14] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:34:44] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[09:35:15] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: Ping timeout (120 seconds))
[09:35:43] *** Joins: dulanic (~dulanic@47.187.144.163)
[09:36:35] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[09:36:47] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:37:00] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[09:37:03] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[09:37:09] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:37:13] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 248 seconds)
[09:37:53] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Quit: leaving)
[09:38:50] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:526a:31b9:767c:93c)
[09:43:10] *** Joins: extropiator (~extropiat@fixed-187-188-51-226.totalplay.net)
[09:46:01] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:46:40] *** Quits: Elzington (~Elzington@68.235.43.108) (Ping timeout: 240 seconds)
[09:47:13] *** Joins: Emil (emil@emil.fi)
[09:47:14] <Emil> Hey
[09:47:35] <Emil> I'm trying to look for sequences existin in an array
[09:47:48] <Emil> I found this
[09:47:49] <Emil> https://stackoverflow.com/questions/10459493/find-indexes-of-sequence-in-list-in-python
[09:48:12] <Emil> Could you help me with applying that to finding a sequence within a 2d array?
[09:48:40] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:80a8:b6f2:7960:36e9) (Ping timeout: 240 seconds)
[09:48:51] <Emil> I came up with a solution, but it uses the same list comprehension twice, ie looks ugly and definitely isn't dry
[09:49:50] <Emil> [[0, i] for i in range(len(m[0])) if m[3][i:i+number] == [True] * number] here's the basic test that finds spots in a line
[09:49:54] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:50:09] <Emil> And then applying that to a list comprehension we get
[09:50:10] <Emil> [[[x, i] for i in range(len(m[x])) if m[x][i:i+number] == [True] * number] for x in range(len(m)) if len([[x, i] for i in range(len(m[x])) if m[x][i:i+number] == [True] * number])]
[09:50:19] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:50:27] <Emil> Surely there's a better way to do that
[09:50:48] <foureyes> lambda the repetition
[09:51:16] <Emil> Could you show me?
[09:54:43] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[09:54:53] *** Quits: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de) (Ping timeout: 258 seconds)
[09:55:40] *** Joins: zamba (~marius@5.226.162.54)
[09:55:56] <zamba> what is the fastest way to check if a timestamp is inside one or several intervals?
[09:56:14] <zamba> i'd rather not be looping over the different intervals and check each and everyone
[09:56:49] *** Joins: hyper_dave (~hyper_dav@197.156.107.244)
[09:57:39] <zamba> this strikes me as a bit ineffective: https://dpaste.org/anB2
[09:57:59] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:59:04] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[09:59:20] <jinsun> `if any(timestamp >= interval["start"] and timestamp <= interval["end"] for interval in intervals): do_stuff()`
[09:59:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[10:00:09] <c4017_> interval["start"] <= timestamp <= interval["end"]
[10:00:17] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:00:41] <dale> You could probably use some sort of tree data structure, I suppose?  But make sure this optimization (assuming it is one) is worth your time to write it.
[10:01:35] <dale> If any of your intervals overlap, maybe you can coalesce overlapping ones together, prior to checking?  Depending on whether they're fixed.
[10:03:05] <zamba> what i want to do is speed up the actual checking if we're inside an interval..
[10:03:13] <zamba> so the "setup" time can be slower
[10:03:47] <zamba> jinsun: you think that would be faster?
[10:04:14] <foureyes> Emil: wtf = lambda m, x, number: [[[x, i] for i in range(len(m[x])) if m[x][i : i + number] == [True] * number] for x in range(len(m))]
[10:04:14] <foureyes> [i for i in wtf(m, x, number) if i]
[10:04:16] <jinsun> it is still looping, but in a generator expression, so slightly more effiicient, and any makes it "break" after the first True condition, which you were not doing
[10:04:29] *** Joins: realies (~realies@user/realies)
[10:04:41] <foureyes> if if len(i)
[10:04:51] <foureyes> whatever, figure it out
[10:05:08] <jinsun> zamba: but it is not really going to be noticably faster, it is just more efficient in number of lines used
[10:05:27] <foureyes> no need to generate the list twice just to calculate it's length the second time
[10:06:00] <jinsun> zamba: do you use pandas?
[10:06:54] <jinsun> I think pandas probably has something to optimize this, although I don't really remember now
[10:09:35] *** Joins: kosh (~kosh@user/kosh)
[10:10:46] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[10:10:55] <lockywolf> How do I disown a child process in python?
[10:11:04] <AhmedAmerican> is there a way where i can check how many threads the system can run ?
[10:11:04] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:d09f:e768:a8b9:209a)
[10:12:45] <kosh> AhmedAmerican, how many threads a system can run depends on your threading library and how heavy it is, for most systems though it would be in the many millions or more, it would of course be slow to do that
[10:12:50] *** Joins: inom (~inom@176.59.111.80)
[10:13:03] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[10:13:10] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[10:14:13] <AhmedAmerican> kosh: same applied if i want to know how many process a single thread can run ?
[10:15:18] <kosh> not sure what you mean by that
[10:17:38] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[10:20:30] <lockywolf> process runs threads, not the other way round
[10:20:51] <lockywolf> and threads are usually not shared by processes
[10:21:03] *** Joins: gggp (~gggp@123.113.187.31)
[10:21:50] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[10:23:26] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 268 seconds)
[10:24:41] *** Quits: luke-jr- (~luke-jr@user/luke-jr) (Ping timeout: 268 seconds)
[10:27:07] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[10:28:20] <birkoff> I have a question regarding sqlite3. Is there a way to get a more detailed error message of a 'user-defined function raised exception' OperationalError ( https://docs.python.org/3/library/sqlite3.html#sqlite3.OperationalError ) ?
[10:28:28] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[10:29:10] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[10:29:13] *** Joins: y1n (~y1n@84-115-65-216.wifi.dynamic.surfer.at)
[10:29:55] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[10:30:30] <kosh> lockywolf, I don't even know of a way to share threads between processes
[10:30:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:31:00] *** luke-jr- is now known as luke-jr
[10:34:43] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[10:34:43] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[10:37:41] <lockywolf> I am saying "usually", because I can imagine such a thing, not because I know any library which would do that.
[10:38:31] <kosh> I don't see how you could hand a thread across a process boundary
[10:40:17] *** Joins: ubert (~Thunderbi@91.141.56.213.wireless.dyn.drei.com)
[10:40:40] <AhmedAmerican> lockywolf: Sorry i meant how many threads under single process
[10:41:01] <AhmedAmerican> BTW, am using trio which is high level API for running asynchronous program.
[10:41:08] *** Joins: upsala (~zcb@185.213.155.160)
[10:41:53] <AhmedAmerican> I've been asking this to understand if there's a way to check how many process the system can run if there's a math calculation done for that
[10:41:54] <AhmedAmerican> https://trio.readthedocs.io/en/stable/reference-core.html#threads-if-you-must
[10:42:23] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[10:42:38] *** Joins: orbatos (~orbatos@user/orbatos)
[10:42:41] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[10:42:57] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[10:43:02] <xcombelle> hi
[10:43:06] *** Quits: gvsa123 (~gvsa123@d23-17-233-182.abhsia.telus.net) (Quit: Leaving)
[10:43:29] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:44:11] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[10:44:15] *** Joins: palasso (~palasso@user/palasso)
[10:44:25] *** Quits: devcpu (~rusty@108.162.160.184) (Ping timeout: 268 seconds)
[10:44:29] <AhmedAmerican> xcombelle: HOLLA
[10:44:32] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[10:44:53] *** Joins: devcpu (~rusty@108.162.160.184)
[10:45:29] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 248 seconds)
[10:46:20] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:53] *** Joins: seednode (~seednode@user/seednode)
[10:47:15] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[10:48:03] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:48:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:49:36] *** Joins: sazawal (~sazawal@106.213.43.60)
[10:50:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:50:41] <domhnall> AhmedAmerican: dunno if it applies to Python but that sounds something like what a Semaphore does, i.e it limits the number of threads that can access a resource.
[10:50:52] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 245 seconds)
[10:51:10] *** Joins: Kvothe (~weechat@user/elodin)
[10:51:30] <domhnall> also reminds me of a concurrency game I enjoy. deadlockempire
[10:52:23] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[10:53:01] *** Joins: rendar (~rendar@user/rendar)
[10:53:35] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[10:54:16] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[10:55:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:58:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:01:09] *** Quits: Helenah (~helenah@user/helenah) (Ping timeout: 276 seconds)
[11:01:26] *** Joins: torandu (~sean@94.10.125.197)
[11:02:55] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[11:04:12] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[11:04:53] *** Joins: manti7 (~manti7@176.10.104.94)
[11:05:50] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[11:07:06] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:08:26] *** Joins: gusto (~Augustus@109.255.100.54)
[11:08:54] *** Joins: Jefren1 (~Jefren@70.35.66.72)
[11:10:17] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:696d:203d:c02:8bef)
[11:11:13] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:11:32] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 268 seconds)
[11:11:33] *** Quits: Jefren (~Jefren@206.253.157.206) (Ping timeout: 268 seconds)
[11:12:06] *** Quits: orbatos (~orbatos@user/orbatos) (Remote host closed the connection)
[11:13:30] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[11:13:36] *** Joins: schumaml4 (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de)
[11:13:46] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[11:14:01] *** Quits: schumaml3 (~schumaml@ipservice-092-211-202-231.092.211.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[11:14:45] *** Joins: Jefren2 (~Jefren@70.35.67.169)
[11:15:52] *** Quits: y1n (~y1n@84-115-65-216.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[11:16:02] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[11:16:28] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[11:16:32] *** Joins: Jefren3 (~Jefren@70.35.67.234)
[11:17:27] <dale> lockywolf: What do you mean by "disown"?
[11:17:43] *** Quits: Jefren1 (~Jefren@70.35.66.72) (Ping timeout: 268 seconds)
[11:18:44] <lockywolf> (1) the child would not get a SIGHUP when my process dies, (2) if the child dies first, there will be no "zombie" entry in the process table, even if I do not wait() for it.
[11:19:05] *** Quits: Jefren2 (~Jefren@70.35.67.169) (Ping timeout: 248 seconds)
[11:19:14] <lockywolf> or, perhaps, only (2)
[11:20:27] <KirkMcDonald> lockywolf: This is sometimes called "daemonizing" a process. There are modules that can do this.
[11:21:58] <lockywolf> daemonizing implies closing stdin and stdout, which I do not imply
[11:23:14] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:23:25] <KirkMcDonald> lockywolf: Well, if you want to divorce a child from the parent, you can still employ the double-fork technique used during daemonization.
[11:23:42] <lockywolf> that is exactly the thing I want to avoid doing
[11:23:45] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:d09f:e768:a8b9:209a) (Remote host closed the connection)
[11:24:06] <KirkMcDonald> lockywolf: Then I am unclear on what it is you want.
[11:24:19] <lockywolf> bash's nohup + disown are what I want
[11:24:48] <lockywolf> nohup command & ; disown
[11:25:25] <lockywolf> the child is automatically reaped when it dies, it does _not_ die if my shell is closed, and it keeps reporting what it does via the same sterr and stdout
[11:25:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:25:51] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:26:12] <lockywolf> furthermore, $! contains the child's PID, and I can waitpid it, if needed (but I do not have to)
[11:26:38] *** Joins: orbatos (~orbatos@user/orbatos)
[11:27:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[11:28:41] *** Joins: y1n (~y1n@84-115-64-127.wifi.dynamic.surfer.at)
[11:29:08] <KirkMcDonald> lockywolf: nohup is substantially just `signal.signal(signal.SIGHUP, signal.SIG_IGN)`
[11:29:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[11:29:14] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:30:23] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:30:29] *** Parts: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (Leaving)
[11:30:45] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:31:00] <lockywolf> in the child?
[11:32:26] <lockywolf> ow, you mean, fork(); signal.signal(...); execpv?
[11:32:38] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:32:53] <KirkMcDonald> You'd do it in whichever process you need to ignore the signal in.
[11:33:11] *** Joins: derelict (~derelict@user/derelict)
[11:33:16] <KirkMcDonald> Calling fork() yourself should not be necessary; subprocess has a hook you can take advantage of.
[11:34:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[11:34:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[11:34:48] <KirkMcDonald> As for `disown`, that's strictly a shell command.
[11:35:03] *** Joins: Jefren4 (~Jefren@206.253.157.196)
[11:35:17] <lockywolf> ah, preexec_fn, I guess
[11:35:22] <KirkMcDonald> That's the one.
[11:35:28] *** Lord_of_Life_ is now known as Lord_of_Life
[11:35:40] *** Joins: Elzington (~Elzington@68.235.43.14)
[11:35:42] <lockywolf> well, that's a shell command that is somehow implemented
[11:36:01] <KirkMcDonald> It removes the job from the shell's internal state.
[11:36:13] <rendar> what about i instance a C++ class into a struct, just right after the Py_ObjectHEAD macro?
[11:36:40] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:37:26] <KirkMcDonald> lockywolf: In other words, it operates by disabling certain features of the shell, rather than altering the child process in some way.
[11:38:03] *** Quits: Jefren3 (~Jefren@70.35.67.234) (Ping timeout: 268 seconds)
[11:38:10] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[11:39:10] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 240 seconds)
[11:39:23] <lockywolf> do disown'ed children still become zombies if not collected by waitpid? or does bash automatically wait for every child?
[11:39:49] <rendar> off topic i guess
[11:39:55] *** Quits: gggp (~gggp@123.113.187.31) (Ping timeout: 268 seconds)
[11:40:19] <KirkMcDonald> lockywolf: Waiting for its children is a large portion of what a shell does.
[11:40:57] *** Quits: driib (~driib@185.195.233.169) (Ping timeout: 248 seconds)
[11:41:03] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Read error: Connection reset by peer)
[11:41:29] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[11:41:36] *** Quits: dbg (~dbg@user/dbg) (Quit: dbg)
[11:41:44] <lockywolf> makes sense
[11:42:09] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:42:25] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[11:43:00] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[11:43:10] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:44:15] <KirkMcDonald> lockywolf: Honestly, if I need to do any sort of chicanery along these lines, my solution is either "daemonize it" or "run it in tmux."
[11:45:14] <KirkMcDonald> (Or maybe "make systemd do it.")
[11:46:08] <lockywolf> if you need to do that from python, you need to run tmux from python somehow
[11:46:26] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[11:46:39] <KirkMcDonald> Or start the thing in tmux in the first place. It really depends on the particulars.
[11:47:32] <lockywolf> thank you
[11:48:14] *** Parts: aniruddha (uid340443@id-340443.charlton.irccloud.com) ()
[11:48:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:48:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:51:57] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:52:25] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[11:54:37] <df_data> can anyone tell me how i can get the matches names_list as an extra colurm in my dataframe?? im getting a type error https://bpa.st/UZRA
[11:55:23] <aphysically> ahhhh I wish atexit was called before throwing the exception
[11:55:53] <aphysically> I was going to see if I could clean up a hanging carriage return with a \n if program got ctl+c'd but I'll probably just leave it
[11:55:56] <aphysically> it's not THAT big a deal
[11:57:39] *** Quits: sazawal (~sazawal@106.213.43.60) (Quit: Leaving)
[11:58:48] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[11:58:55] *** Quits: Enitin (~Enitin@82.102.22.84) (Quit: .de/discord)
[11:59:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[11:59:01] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 268 seconds)
[11:59:10] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:59:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:00:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:03:10] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 240 seconds)
[12:03:31] *** Joins: jim (~jim@about/linux/staff/jim)
[12:03:55] *** Joins: hexa- (~hexa-@juno.lossy.network)
[12:03:58] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[12:04:50] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[12:06:15] *** Joins: lyr (~lyr@user/lyr)
[12:06:16] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[12:06:34] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[12:10:59] *** Quits: justache (~justache@user/justache) (Ping timeout: 252 seconds)
[12:11:17] *** Joins: cth (~Cthulchu@213.174.21.101)
[12:12:22] *** Joins: fdan (~fdan@192.146.154.3)
[12:12:39] <lyr> Hi there. I'm trying to input an url (https://example.com/whatever) in a FastAPI path param. I hoped it'ld match app.post(/shorten/{url}), but I got a 404. Is there a trick to deal with this ?
[12:13:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:14:51] <fdan> Hi there, i have this code which splits the string based on the input i provide
[12:14:52] <fdan> https://dpaste.org/ZzWm
[12:14:59] <fdan> is there a better way to do this?
[12:15:09] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:16:18] *** Quits: y1n (~y1n@84-115-64-127.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[12:18:05] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[12:18:29] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:18:44] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:19:40] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:22:42] *** Joins: justache (~justache@user/justache)
[12:23:54] <df_data> So I’m trying to add the matched names_list2 as another col to my dataframe as I have with the csv but I’m not doing it right? Anyone able to assist please: https://bpa.st/UZRA
[12:28:07] *** Joins: logi (~AdminUser@mimir.belgingur.is)
[12:28:19] *** Joins: y1n (~y1n@84-115-64-193.wifi.dynamic.surfer.at)
[12:28:27] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[12:28:49] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:29:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[12:29:35] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:29:43] *** Joins: justache (~justache@user/justache)
[12:30:00] *** Joins: wyclif (~wyclif@user/wyclif)
[12:30:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[12:30:03] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[12:30:03] *** Joins: ngaio (~ngaio@2601:245:c700:2c06:7587:1c88:2b72:4aef)
[12:30:10] *** Joins: shad (~shad@user/shad)
[12:30:35] *** lordrishav is now known as LordRishav
[12:31:10] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 240 seconds)
[12:31:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[12:31:21] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:d09f:e768:a8b9:209a)
[12:31:31] *** Quits: extropiator (~extropiat@fixed-187-188-51-226.totalplay.net) (Ping timeout: 246 seconds)
[12:33:22] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:8193:3758:a9ca:44ec) (Ping timeout: 256 seconds)
[12:35:25] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:26] *** Joins: rany (~rany@user/rany)
[12:35:44] *** Quits: j00n (~mario@user/j00n) (Quit: j00nior)
[12:36:17] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[12:36:39] <Gaboradon> HEllo
[12:36:58] *** Joins: j00n (~mario@user/j00n)
[12:37:30] *** Joins: rsx (~dummy@ppp-188-174-137-163.dynamic.mnet-online.de)
[12:37:31] <Gaboradon> Python 2.7 reports no module when I try to run rtlsdr_scanner
[12:37:58] <Gaboradon> I installed it using official installation "pip install rtlsdr_scanner" and it did install something
[12:38:20] <Gaboradon> Did I miss a step or the pip install thing isn't the optimal install method ?
[12:38:30] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 268 seconds)
[12:38:40] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:43] <Julian> Gaboradon: The `pip` command you ran must not be the one from the python installation you ran. Run `python -m pip install` instead to be sure you've got the right pip.
[12:39:04] <Julian> Gaboradon: Also, CPython2 is long dead, if that's what you're using, you should stop using it.
[12:39:23] *** Joins: ice9 (~ice9@user/ice9)
[12:39:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:40:52] <Gaboradon> Oh okay, I'll try, btw the original install command has an option "-U" but the help doesn't explain what it is
[12:40:57] *** Joins: wyclif (~wyclif@user/wyclif)
[12:41:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-b85b-ab08-b222-f64f.res6.spectrum.com) (Ping timeout: 240 seconds)
[12:42:14] <Julian> Gaboradon: It does here. `pip install --help` =>   -U, --upgrade               Upgrade all specified packages to the newest available version. The handling of dependencies depends on the upgrade-strategy used.
[12:43:08] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[12:44:42] *** Joins: rooiratel (~rooiratel@156-155-158-2.ip.internet.co.za)
[12:47:24] *** Quits: ubert (~Thunderbi@91.141.56.213.wireless.dyn.drei.com) (Quit: ubert)
[12:47:32] <df_data> Solved.
[12:47:42] *** Joins: ub (~Thunderbi@91.141.56.213.wireless.dyn.drei.com)
[12:50:56] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[12:52:07] *** Quits: ub (~Thunderbi@91.141.56.213.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[12:52:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[12:53:37] <LordKalma> I can't find in pybind11's code how exactly does one handle output arguments
[12:53:45] <LordKalma> *documents, I mean
[12:54:00] <LordKalma> if anybody happens to have the right docs page at hand, appreciated
[12:55:27] *** Joins: entuland (~entuland@user/entuland)
[12:55:39] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:57:55] *** Joins: Pickchea (~private@user/pickchea)
[12:59:28] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[12:59:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:00:53] <Julian> LordKalma: https://pybind11.readthedocs.io/en/stable/
[13:01:13] *** Quits: rovert (uid389732@id-389732.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:52] <LordKalma> yes, thank you, what I meant is that I can't find _there_ where exactly is outarg handling
[13:02:17] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-30fb-2e4a-2d6a-d970.res6.spectrum.com)
[13:02:52] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:24] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:04:45] <Julian> I see. What do you mean by output argument?
[13:05:29] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:05:37] *** Joins: computeiro (~Wender@189.15.138.22)
[13:06:56] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:06:56] *** Quits: wender (~Wender@186.210.45.41) (Ping timeout: 258 seconds)
[13:07:35] <no_gravity> In a class, do you guys initialize every variable with "xyz = Null" on top of the class?
[13:07:43] <no_gravity> s/Null/None
[13:08:01] *** Joins: sincorchetes (~sincorche@204.red-95-127-145.staticip.rima-tde.net)
[13:08:30] <sincorchetes> Hi all, somebody knows an alternative of Paramiko ? I saw that's not updated from some years ago. https://github.com/paramiko/paramiko/tree/master
[13:08:48] <no_gravity> sincorchetes: What does it do?
[13:08:53] <Julian> no_gravity: Depends. Normally attrs is a good way to define classes, in which case you don't need to.
[13:08:59] <grawity> sincorchetes: that literally says "26 days ago"
[13:09:22] <Julian> If you're defining it from scratch though, then sometimes yes, it depends whether you immediately assign them to something else (in which case no, don't) or if you have a stateful object (in which case yes, do that)
[13:09:36] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:10:12] <no_gravity> Julian: Hmm.. I don't really get what you mean.
[13:10:29] <no_gravity> Julian: Lets take an example. Say a class "user". Would you have "name = Null" on top of it?
[13:11:02] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[13:11:10] *** Quits: computeiro (~Wender@189.15.138.22) (Ping timeout: 268 seconds)
[13:11:15] <sincorchetes> grawity: ooh, ok, so , I was reading bad x)
[13:11:28] <Julian> no_gravity: Can you paste a full example?
[13:13:12] <grawity> admittedly the last actual *release* of paramiko was exactly 1 year ago
[13:13:32] <grawity> at least, according to github tags
[13:14:18] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Read error: Connection reset by peer)
[13:14:28] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[13:15:22] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[13:15:45] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[13:16:10] *** Quits: y1n (~y1n@84-115-64-193.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[13:17:31] <stevieh> what is the elegant way to detect my debian version in python  3.9? psutil reacts different on 10 and 11
[13:17:54] <no_gravity> Julian: https://www.online-python.com/5qKV2H0Uf8
[13:18:24] <no_gravity> Julian: Not sure why "user is not defined" though. I did not have coffee yet and have not been using Python classes much.
[13:19:42] <no_gravity> Julian: Oh, and it should be *not* in line 9: https://www.online-python.com/5sSRYqtPDM
[13:21:19] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[13:21:31] <grawity> stevieh: I'd probably try https://pypi.org/project/os-release/ first, as nowadays {/etc,/usr/lib}/os-release is the standard location for such info
[13:21:44] <grawity> stevieh: but maybe you want to detect the psutil version instead, or something
[13:22:01] <stevieh> grawity: good hint!
[13:22:10] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 240 seconds)
[13:22:48] <no_gravity> Does anybody know why it says user is not defined here? https://www.online-python.com/5sSRYqtPDM
[13:22:49] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 248 seconds)
[13:22:56] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[13:23:19] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[13:23:35] <Repiphany> lines 14/15 shouldn't be indented
[13:23:48] <no_gravity> Oh! I did not see that.
[13:24:47] <no_gravity> So here is the example: https://www.online-python.com/l7NVXbRh8q
[13:25:12] <no_gravity> Do you guys initialize all class variables like I did with name in line 3?
[13:25:37] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[13:25:49] <grawity> yes but I usually do it in __init__()
[13:26:06] *** Joins: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl)
[13:26:17] <no_gravity> grawity: So you can call __init__() to reset the class?
[13:26:24] <grawity> no
[13:26:38] <grawity> why would you "reset the class" just make a new instance
[13:26:50] <no_gravity> grawity: Then why do it in __init__()?
[13:27:03] <Repiphany> __init__ is for initializing instances of the class, not initializing the class itself
[13:27:12] <grawity> but it just seems to fit there better, especially as some stuff is initialized from parameters given to the constructor, and some initializers might not be static
[13:27:28] <no_gravity> Repiphany: What is the difference?
[13:27:49] <grawity> but for static initialization like "foo = Null", I never quite understood what the difference is
[13:28:25] <bjs> no_gravity: the stuff outside of __init__ is shared by all instances
[13:28:26] <Repiphany> You don't have to have class-wide variables
[13:28:29] <bjs> they're attributes of the class
[13:28:33] *** Joins: Socra (~Socra@206.217.216.27)
[13:28:55] <Repiphany> If you set user.name = 'blah', it would changes every instance of user if they didn't have their own name already defined
[13:29:04] <Repiphany> That may or may not be desired behaviour (usually not)
[13:29:09] <bjs> no_gravity: it's a little misleading to have a class attribute which then later on will be shadowed by an instance attribute (probably).  Unless it really is a class attribute.
[13:29:38] <grawity> ah yeah now I remember I *do* use class attributes sometimes, but more like for class...constants, not class variables
[13:29:45] *** Joins: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at)
[13:30:37] <Repiphany> Setter methods like your 'setName' are also generally discouraged, since you're not doing anything other than changing user.name
[13:30:51] <no_gravity> bjs: Hmm... not sure what you mean. In which case woule "class u: name=Null" and "class u: def __init__(self): self.name=Null" behave different?
[13:31:20] <bjs> no_gravity: well they *do* behave different, they just make attributes on different objects
[13:31:50] <no_gravity> bjs: I think you mean they behave different under the hood. But when would it lead to different program output?
[13:31:52] <bjs> perhaps for a None `name` attribute that exists on either (instance | class) your code will cope, but that's going to be very specific to the rest of your code and is generally not a great t hign to write
[13:32:02] <Repiphany> no_gravity: https://www.online-python.com/GbvWYSyxm8
[13:32:02] <bjs> no_gravity: yes it's an attribute *on a different object*
[13:32:18] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::682e)
[13:32:34] <bjs> no_gravity: it's not an implementation detail, it just does something different. Again your program may happen to continue to work even though the attribute is on a different object, especially if all you do is overwrite it with an instance one later
[13:32:50] <bjs> no_gravity: hmm maybe this will be more clear, take https://bpa.st/KWUQ as an example
[13:32:58] <bjs> C and D behave very differently
[13:32:59] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:33:13] <no_gravity> Repiphany: Oh! I did not know you can do the line 17 thingy!
[13:33:23] <no_gravity> Repiphany: That pretty much explains it!
[13:33:25] *** Quits: foozle (~foozle@2001-b011-c001-16ef-98f0-eb99-858a-7d31.dynamic-ip6.hinet.net) (Quit: Leaving)
[13:33:50] <Repiphany> Line 17 isn't actually affecting anything with that class's methods though
[13:33:59] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:34:37] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 268 seconds)
[13:34:39] <Repiphany> It's setting the class-wide attribute but every instance is instantiated with a name which is None by default
[13:35:11] <no_gravity> Repiphany: Yeah, but it does here: https://www.online-python.com/0tli63IOsK
[13:35:27] *** Quits: dre (~dre@2001:8003:c932:c301:bee9:3ad3:f910:26fe) (Ping timeout: 245 seconds)
[13:35:28] <bjs> no_gravity: this latest code is almost certainly broken
[13:35:42] <Repiphany> Classes should be TitleCase
[13:36:00] <no_gravity> Repiphany: And the class file? Should it be user.py or User.py
[13:36:18] <bjs> no_gravity: classes/modules/directories have user.py names, ClassesLikeThis
[13:36:21] <bjs> functions_like_this etc
[13:36:28] <bjs> see PEP 8 for the standard naming conventions
[13:37:18] <Repiphany> There isn't any reason why all user objects should have a shared name attribute in the first place, which is why your example isn't the best
[13:38:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:38:51] <no_gravity> Repiphany: Well, the default is None for all of them, right?
[13:39:04] <no_gravity> Repiphany: https://www.online-python.com/RurklQJb1P
[13:39:11] <no_gravity> Seems to do the right thing for me.
[13:39:23] <dba> how can I achieve this https://bpa.st/XB5Q?
[13:39:24] <bjs> no_gravity: it's just confusing to make an attribute on the wrong object only to later then completely ignore it and use attributes on a different object entirely
[13:39:43] <bjs> no_gravity: many Python programmers will rightly be asking "Wait, why do all the users share the same name?"
[13:40:04] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Read error: Connection reset by peer)
[13:40:21] <Repiphany> __init__ is much more sensible to use for per-instance default
[13:40:25] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[13:40:40] <no_gravity> bjs: Hmm... interesting.
[13:40:44] <bjs> no_gravity: and they'll have to read the entire code to realise "oh, no_gravity isn't using the shared name, it's just always None and they're using an instance attribute instead,  so why is the shared one here at all?"
[13:41:04] <no_gravity> Looks like the whole concept of classes is different in Python then in any other language I know.
[13:41:10] <bjs> no_gravity: not at all
[13:41:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:41:51] <bjs> Pretty much all languages have the same kind of class machinery,  just presented slightly differently
[13:41:58] *** Joins: darksun (~darksun@user/darksun)
[13:42:00] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[13:42:26] <no_gravity> You can even call functions of the class without making an object at all: https://www.online-python.com/irxbRCH9TN
[13:42:40] <bjs> no_gravity: correct,  I mean that's true in most languages
[13:42:53] <no_gravity> bjs: What is true?
[13:42:55] <bjs> I mean in Java the "main" method is an example of such a function
[13:43:04] <bjs> no_gravity: that you can make functions you call from outside the class
[13:43:12] *** Parts: opv (~opv@202.61.244.163) ()
[13:43:51] <no_gravity> bjs: Usually not without syntacticly acrobatics.
[13:44:15] <bjs> no_gravity: so, it's not that the "whole concept of classes it totally different in Python" it's just that it has slightly different syntax (no `static` keyword)
[13:44:20] <bjs> those are very different statements.
[13:44:59] <bjs> Indeed Python *does* have @staticmethod and @classmethod
[13:45:14] <bjs> Which behave roughly like Java's `static`
[13:45:52] *** Quits: kwokshiyu (kwokshiyu@229.75.233.220.static.exetel.com.au) (Ping timeout: 245 seconds)
[13:46:17] <no_gravity> bjs: How would you do it in Javascript? https://jsfiddle.net/sq6ge3xn/
[13:46:30] <bjs> no_gravity: I don't know, I'm not a javascript programmer
[13:47:20] <no_gravity> Guess it has a static keyword. Same as PHP.
[13:47:30] <bjs> I'm sure they have a way to say the same thing, either some syntax to say you can call it or it has some other way to get the function
[13:47:48] <no_gravity> Yes: https://jsfiddle.net/sq6ge3xn/1/
[13:48:07] <bjs> Python took the choice to unify these together so there was no funny syntax and you could get the function object as an attribute on the class
[13:48:13] *** Quits: wbn (~wbn@user/wbn) (Read error: Connection reset by peer)
[13:48:21] <Repiphany> no_gravity: https://www.online-python.com/LYxIdOVjgb
[13:48:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[13:48:27] <bjs> some languages say this only works if you called it a 'static' function,  sometimes you need to use some special introspection to do it
[13:48:33] <bjs> but it's all the same idea underneath
[13:49:06] <Repiphany> Oh, I didn't use do_something_silly
[13:49:11] <rendar> if my decorator takes no args (e.g. like this: https://bpa.st/YBQA ) is it more correct using it as `@add def fn(...` or `@add() def fn(...` and there are differences?
[13:49:38] <bjs> rendar: did you *try* both of those examples on a function before asking?
[13:49:46] <rendar> yes
[13:49:53] <no_gravity> Repiphany: Woopie doopie
[13:49:56] *** Joins: wbn (~wbn@user/wbn)
[13:50:08] <bjs> rendar: well surely then y ou'd be here going "why do they do different things?" :)
[13:50:18] <rendar> bjs: with @add() it works, and with @add it doesn't, but i'm sure i saw decorators without () -- how come?
[13:50:23] <rendar> do they use triple wrapping?
[13:50:25] <no_gravity> So with Pythons classes you can do this: https://www.online-python.com/pMK8I0eP3g
[13:50:35] <no_gravity> I doubt that is possible with PHP
[13:50:50] <KirkMcDonald> rendar: When you don't use (), what does the call to `add` look like?
[13:50:55] <bjs> no_gravity: possibly not
[13:50:58] <Repiphany> Your function won't work as an instance method properly if you actually try it
[13:51:08] <Repiphany> Also stop writing your class as lowercase user
[13:51:10] <bjs> no_gravity: although this won't work, there's no `self` ?
[13:51:36] <bjs> rendar: well, usually they look to see if the function was passed as an argument and if not then returning a decorator
[13:51:36] <jinsun> rendar: your add takes a str, but @add will try to pass it a function
[13:51:39] <Repiphany> Even if you add `self`, you need to do some hacky stuff to bind it to the class after it's already defined
[13:51:39] <rendar> KirkMcDonald: it seems it doesn't call it
[13:51:47] <bjs> rendar: no?
[13:51:48] <bjs> oops
[13:51:51] <bjs> Repiphany: no?
[13:51:55] <KirkMcDonald> rendar: Sure it does.
[13:52:07] <rendar> KirkMcDonald: let me check
[13:52:38] <rendar> oh yes, right, it calls it, but name is the function itself
[13:52:40] <rendar> not the arguments
[13:53:00] <rendar> but why this happens?
[13:53:10] <KirkMcDonald> rendar: Because that's exactly how a decorator works.
[13:53:25] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[13:53:42] <bjs> rendar: because `@add def f(): ...` is roughly like `def f ...; f = add(f)`
[13:53:43] <no_gravity> So Python classes are like objects that get copied when they are instantiated?
[13:53:50] <rendar> why with @add() it calls with name=None [default], and with @add it calls name=function
[13:53:52] <bjs> rendar: the usual way to do this is someway like https://bpa.st/F4ZQ
[13:54:01] <rendar> bjs: i see
[13:54:15] <bjs> no_gravity: not actually copied no, an instance gets created
[13:54:18] <KirkMcDonald> rendar: Because `add()` returns a function, and *that* is the function that is used as the actual decorator.
[13:54:48] <KirkMcDonald> rendar: A decorator is a function that receives a function.
[13:54:50] <bjs> no_gravity: and accessing attributes gets looked up on the instance and if not on the class, like in other languages.  Again Python might be more permissive (not checking "static"ness or anything) and be more lenient to just turn everything into objects for you to touch
[13:54:51] <no_gravity> bjs: The value of "name" seems to get copied.
[13:55:03] <rendar> bjs: what about i want just `@add("hello")`
[13:55:05] <bjs> no_gravity: did you see my paste with C and D?
[13:55:18] <rendar> KirkMcDonald: ok
[13:55:20] <bjs> rendar: then you can't have @add and @add("hello")
[13:55:21] <grawity> decorators with arguments are weird
[13:55:27] <Repiphany> bjs: Oh whoops, was confusing with trying to add a method to an existing instance
[13:55:40] <KirkMcDonald> rendar: If you want to support both `@add` and `add("hello")`, then that requires checking the type of the object which gets passed to `add`.
[13:55:51] <bjs> Repiphany: `u = user(); u.f = f` will work fine, if f doesn't have `self`
[13:55:52] <rendar> KirkMcDonald: i see
[13:56:01] <no_gravity> bjs: Can you paste it again?
[13:56:06] <bjs> Repiphany: if f does have self, you can `instance.f = partial(f, self)` or something
[13:56:12] <bjs> uh partial(f, instance) i mean
[13:56:43] <no_gravity> Is there a way to define the function inline at line 7 here? https://www.online-python.com/tIYsC2aQqB
[13:56:44] <Repiphany> import types; a.f = types.MethodType(f, a)
[13:56:48] <bjs> no_gravity: think about what https://bpa.st/KWUQ does
[13:56:49] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 268 seconds)
[13:56:59] <bjs> Repiphany: it doesn't actually have to be a MethodType to be able to call it
[13:57:19] <bjs> no_gravity: yes, your `def f()` should be `def f(self): ...`
[13:57:22] <bjs> it's just missing that first argument
[13:57:45] <bjs> surely the error you're getting is not that f doesn't exist but that it has the wrong number of arguments
[13:58:07] <bjs> (when you call it on an instance I mean)
[13:58:23] *** Joins: funabashi (funabashi@185.52.0.236)
[13:58:29] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[13:58:49] <no_gravity> bjs: Yeah, it adds to the "class variable": https://www.online-python.com/d4g0F7wkbT
[13:59:03] <bjs> no_gravity: yes because there was no copying.
[13:59:14] <no_gravity> bjs: I'm not getting an error.
[13:59:28] <bjs> no_gravity: with your code? if you tried to call it on an instance you do
[13:59:29] <bjs> I hopoe
[13:59:39] <no_gravity> bjs: I don't call it on an instance.
[13:59:51] <bjs> no_gravity: oh maybe I misunderstood what you meant by wanting to define it
[13:59:59] <no_gravity> bjs: My question was if there is a way to define an anonymous function inline.
[14:00:09] <bjs> no_gravity: oh sure, Python has `lambda` to make anonymous functions
[14:00:13] <no_gravity> bjs: Like f=() {print (123)}
[14:00:20] <bjs> although Python's lambda syntax is a little ... pathetic
[14:00:31] <bjs> so usually people use `def` which is a statement and not an expression so cannot be "inline" like that.
[14:01:19] <no_gravity> bjs: I see: https://www.online-python.com/LnQ76iNpqU
[14:01:39] <bjs> no_gravity: yes,  I really recommend not doing this though it's a little weird
[14:02:12] <no_gravity> bjs: Why not? In Javascript land, it is used all the time.
[14:02:22] <Repiphany> Python isn't javascript
[14:02:24] <bjs> no_gravity: Oh sorry I thought we were in Python
[14:02:30] *** Joins: rsrx (~rsrx@103.225.150.81)
[14:02:47] <no_gravity> Well, anonymous functions seem like a concept not limited to one language.
[14:02:50] <bjs> no_gravity: anyway,  it's just not usual in Python. `lambda` is very restricted in syntax you'll almost always have to remove the lambda and replace it with a def at some point
[14:03:00] <grawity> lol I thought the topic was explicitly about comparing Python and languages that are not Python
[14:03:03] <bjs> it doesn't have a name,  so its name is wrong and it doesn't know what class it's attached to when you do that
[14:03:25] <Repiphany> If you're giving a name to the function, you probably don't want it to be anonymous
[14:03:36] <Repiphany> It's bad for tracebacks and stuff
[14:04:51] <no_gravity> Without lambda, how would the python equivalent of this look like?  [1,2,3].map(e=>e+1)
[14:04:56] <bjs> no_gravity: I mean I'm with you, I would like Python's syntax to be improved to allow in-lining functions.
[14:05:06] <bjs> no_gravity: not very nice.
[14:05:09] <foureyes> you can define defs inline like lambdas actually
[14:05:12] <rendar> bjs: my book says that for decorators with parameters i should use triple nesting, like this -> https://bpa.st/ZUVQ but it doesn't work eiter, why?!
[14:05:21] <foureyes> vs code's default formatter even does that automatically
[14:05:21] <Repiphany> List comprehension over map, [i + 1 for i in [1,2,3]]
[14:05:29] <bjs> rendar: because it doesn't matter how many levels of nesting you have
[14:05:30] <foureyes> I don't like it
[14:05:43] <bjs> foureyes: no you can't, you cannot go `x = def ...`
[14:05:45] <no_gravity> Repiphany: I see
[14:05:56] <foureyes> bjs: nor in lamda
[14:05:57] <rendar> bjs: but this book makes an example with 3 levels of nesting, and it works
[14:05:59] <foureyes> lambda*
[14:06:00] <Repiphany> (if you insist on map, `map(lambda x:x + 1, [1,2,3])`)
[14:06:00] *** Quits: rsrx (~rsrx@103.225.150.81) (Client Quit)
[14:06:22] <bjs> foureyes: you just can't use `def` inline anywhere, as it's not an expression it cannot appear inside another expression
[14:06:25] <foureyes> bjs: you don't need to do that... that doesn't make sense
[14:06:34] <bjs> rendar: it doesn't matter how many levels of nesting you have
[14:06:35] <foureyes> bj no you set the variable name after the def
[14:06:51] <foureyes> def name: return is the same as name = lambda: return
[14:06:54] <bjs> rendar: `@add def f` is `def f; f = add(f)`
[14:07:24] <rendar> bjs: so why the book makes this example with 3 nested functions? and why it works?
[14:07:26] <bjs> rendar: if you don't call f when you use it as a decorator then the function will be passed as the first argument to f (always)
[14:07:36] <foureyes> rendar: which book?
[14:07:47] <bjs> rendar: they won't allow `@add("some argument") def f` as well as `@add def f`
[14:07:47] <rendar> foureyes: Fluent Python, page 216
[14:07:52] <foureyes> thanks
[14:07:59] <bjs> foureyes: but that's not in-line, like what no_gravity was talking about
[14:08:14] <foureyes> why is it not in-line...
[14:08:22] *** Joins: jazzy (~jaziz@172.58.43.173)
[14:08:22] <bjs> because it's on a different line
[14:08:30] <foureyes> no it isn't
[14:08:45] <foureyes> def something(x): True
[14:08:47] <foureyes> one line
[14:08:51] <bjs> foureyes: you cannot use a `def` on the same line as an assignment
[14:09:05] <bjs> if you want to assign like `c.f = <some function>` the `def` cannot be inline here
[14:09:05] <foureyes> something = lambda x: True
[14:09:08] <bjs> it has to appear earlier
[14:09:10] <bjs> foureyes: lambda isnt def
[14:09:10] <foureyes> jfc
[14:09:15] <foureyes> the function NAME is the assignment
[14:09:20] <foureyes> def something(x): True
[14:09:23] <foureyes> something = lambda x: True
[14:09:26] <foureyes> yes?
[14:09:33] *** Joins: Guest99 (~Guest99@bzq-84-110-62-22.cablep.bezeqint.net)
[14:09:40] <bjs> foureyes: yes but you cannot use `def` on the same line as another assignment .E.g. in no_gravity's example
[14:09:49] <foureyes> oh
[14:09:53] <bjs> you always need two steps when using `def`, first to make the def then to assign it
[14:10:04] *** Joins: dvx (~dvx@185.63.97.64)
[14:10:06] <foureyes> so someone tried to do an assignment and you're telling them they can't do that?
[14:10:12] <bjs> you cannot use def inline with another assignment like that, even though e.g. other languages do (and with `lambda` you can, although `lambda` is restrictive)
[14:10:29] <foureyes> if so fair enough I missed that code snippet... but the assignment is not necessary and doesn't make sense
[14:10:31] <no_gravity> Can you make multiline lambdas?
[14:10:32] <bjs> foureyes: look if you refuse to read the scrollback and ignore the context don't get angry at me.
[14:10:38] <bjs> no_gravity: yes but not ones that contain other statements
[14:10:40] <Guest99> Hi, I'm trying to show log messages as part of the pytest output and it seems to not work well for me (I probably messed something). when I use log-cli-level=INFO I cant see anything, but when I use --log-level=INFO I can, Not sure I understand the difference between them
[14:10:43] <foureyes> I'm not angry at you
[14:10:55] <no_gravity> bjs: Other statements?
[14:11:04] <bjs> no_gravity: like you cannot have `for x in y: print(x)` inside a lambda
[14:11:38] *** Parts: 030AAAAAB (~arnoldas@78.157.71.116) ()
[14:11:41] <foureyes> def something(x): True; somethingelse = something
[14:11:42] <bjs> because `for` is a statement and `lambda` is an expression and in Python you cannot nest statements inside expressions
[14:11:43] <foureyes> if you must
[14:11:49] <no_gravity> bjs: Wow. So lambdas are very restricted.
[14:11:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[14:11:55] <bjs> no_gravity: yes, their syntax is very restricted
[14:12:02] <Repiphany> (lambda x: [print(y) for y in x])(range(10))
[14:12:03] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:12:05] *** Joins: matkor (~matkor@93.179.197.152)
[14:12:07] <foureyes> they're just supposed to be for simple returns
[14:12:28] <bjs> no_gravity: it is one place I'd like to see Python think about expanding to be more useful
[14:12:52] <no_gravity> bjs: JS nailed it with their => syntax.
[14:13:09] <foureyes> i do like javascript's anonymous function support
[14:13:20] <bjs> no_gravity: Possibly I've also seen syntax like `fun x, y, z -> { ... }` and other syntaxes that support basically the entire language on the rhs
[14:13:26] <no_gravity> PHP was insane to not copy it and instead invent fn() syntax.
[14:13:29] <bjs> no_gravity: that's a much better system,  and Python's lambdas are sad
[14:13:34] *** Joins: hid3 (~arnoldas@78.157.71.116)
[14:13:50] <foureyes> idk haven't done any php in a decade :)
[14:14:03] <foureyes> actually closer to 2
[14:14:08] <grawity> I think 'fn' or some other distinct prefix is nice, I'm not used to reading JS so sometimes it's hard to distinguish ()=>{} from other uses of () alone
[14:14:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:14:25] <bjs> no_gravity: lambdas are something that is very contentious and has historically been hard to get Python to improve here,  but it's one of the areas I can see Python possibly making better in the future
[14:14:28] <grawity> either way, better than Ruby having lambdas *and* procs, which have different scoping rules and are called differently
[14:14:55] <rendar> bjs: following your syntax, if `@add def f` is `def f; f = add(f)`, what is `@add() def f` ?
[14:14:59] <grawity> oh hmm I guess that's not too different from PHP function() vs fn()
[14:15:07] <grawity> or JS function() vs ()=>
[14:15:08] <bjs> rendar: it's `def f; f = add()(f)`
[14:15:37] <rendar> bjs: oh, ok, then `@add(1) def f` is `def f; f = add(1)(f)`
[14:15:41] <bjs> rendar: yes.
[14:16:06] <bjs> rendar: notice how in the @add(1) case that add(1) gets called and in the @add case add(f) gets called.  Both cases call add with one positional argument.
[14:16:19] *** Quits: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[14:16:25] <rendar> yes..
[14:16:30] *** Joins: txtsd (~txtsd@user/txtsd)
[14:16:31] <bjs> There is no way around this, you just really cannot have a decorator which optionally accepts positional arguments (without some real hacks)
[14:16:47] <grawity> I've seen some modules implement said hacks
[14:16:54] <grawity> didn't dare to look at how it's done
[14:17:34] <bjs> grawity: which modules?
[14:17:40] <bjs> thankfully I never have come across such an example
[14:18:14] <grawity> good question, I'm trying to remember
[14:19:10] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 240 seconds)
[14:19:16] <grawity> oh, might have been functools which accepts both @lru_cache and @lru_cache()
[14:19:28] <rendar> bjs: i think the best solution is having just `@add()` at this point, isn't it?
[14:19:39] <bjs> rendar: well you can do what i did in my paste
[14:19:42] <bjs> grawity: that's not a hack, that's fine
[14:19:55] <grawity> bjs: but it also accepts @lru_cache(max=etc)
[14:19:58] <bjs> rendar: so long as the arguments are keyword arguments you can tell easily if you got passed
[14:20:10] *** Joins: Pickchea (~private@user/pickchea)
[14:20:13] <grawity> bjs: or, hmm, I guess that's not a positional arg?
[14:20:13] <rendar> bjs: right
[14:20:18] <bjs> grawity: also not a hack, that's a keyword argument you can easily tell the difference between fun(etc) and fun(max=etc)
[14:20:19] <grawity> makes sense then
[14:20:27] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 245 seconds)
[14:21:44] <ssbr> it's pretty easy to optionally accept some positional arguments, as long as it's "2 or more". Same hack.
[14:21:49] <ssbr> Same non-hack.
[14:22:12] <grawity> hmm
[14:22:23] <grawity> would 1 positional argument work if you check its type?
[14:22:56] <bjs> grawity: that's what I would call a hack, because it's not unambiguous
[14:23:10] <bjs> because `@f(some_function) def g` and `@f def g` can easily be confused
[14:23:37] <ssbr> the harder it is to statically type it, the more likely it is someone will call it a hack
[14:23:54] <ssbr> (it's pretty easy to do all the other ones using overloads)
[14:25:21] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[14:25:55] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[14:25:58] <foureyes> rendar: sorry but I have the ebook, could you tell me which chapter/section that decorator part is in? I use decorators often and would like to read this
[14:26:20] <rendar> foureyes: page 216, chapter 7
[14:26:22] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:26:33] *** Joins: jmft2 (~JMFT@82.3.54.26)
[14:26:43] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[14:26:45] <foureyes> mine only goes to chapter 6... is yours the first edition?
[14:26:46] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:27:05] <foureyes> 2nd only came out 4 months ago
[14:27:17] *** Joins: Oddity (Oddity@user/oddity)
[14:27:34] <foureyes> I'll figure it out, thanks. Looks like a good read in general.
[14:28:53] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[14:29:18] *** Joins: jinsun (~quassel@user/jinsun)
[14:29:30] *** Joins: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at)
[14:30:33] <foureyes> ok well the first edition only has 6 chapters too
[14:30:55] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[14:31:01] <varaindemian> can you install python3 32-bit edition on ubuntu 20.04?
[14:31:17] <varaindemian> x86
[14:31:58] <grawity> probably via multiarch? why though
[14:32:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:32:38] *** Joins: legola (~legola@46.235.100.27)
[14:33:27] <varaindemian> so the best thing would be to actually have an x86 distro
[14:33:35] *** Joins: renrelkha_ (~renrelkha@user/renrelkha)
[14:33:40] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Ping timeout: 240 seconds)
[14:33:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:36:02] *** Joins: death916_lap (~Death916@user/death916)
[14:36:14] *** Joins: Thanatos (~Thanatos@197.210.55.191)
[14:37:15] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:38:01] *** Quits: logi (~AdminUser@mimir.belgingur.is) (Ping timeout: 248 seconds)
[14:39:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:39:12] *** Quits: hyper_dave (~hyper_dav@197.156.107.244) (Ping timeout: 245 seconds)
[14:39:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:41:55] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:42:05] *** Joins: ice99 (~ice9@user/ice9)
[14:42:42] <kosh> varaindemian, why do you want a 32bit python3?
[14:42:51] <kosh> I wonder how much longer that will even be supported
[14:43:22] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 245 seconds)
[14:44:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:45:34] *** Joins: besnn (~besnn@user/besnn)
[14:45:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:17] *** Joins: hyper_dave (~hyper_dav@196.191.53.193)
[14:50:07] *** Quits: Guest99 (~Guest99@bzq-84-110-62-22.cablep.bezeqint.net) (Ping timeout: 246 seconds)
[14:50:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:50:49] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 258 seconds)
[14:50:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:51:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:51:36] *** Joins: ice9 (~ice9@user/ice9)
[14:52:57] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 245 seconds)
[14:53:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[14:54:37] *** Quits: Thanatos (~Thanatos@197.210.55.191) (Ping timeout: 245 seconds)
[14:56:17] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:56:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:57:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:57:19] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[14:57:54] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Remote host closed the connection)
[15:03:50] <varaindemian> kosh: CAPEv2 install
[15:04:00] <varaindemian> guest install
[15:04:14] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:04:21] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:04:50] <kosh> best of luck, it should be possible to do it
[15:05:32] <Gaboradon> Julian: I get "no module named pip" when I do "python -m pip install -U rtlsdr_scanner"
[15:06:22] <jean-luc> if you google "how to install pip"
[15:06:23] <Gaboradon> python in this case is 2.7, it's just that it's needed by some software as I never touched it, idk about 3.x or if I need to set that up
[15:06:30] <jean-luc> that should help
[15:06:37] <Gaboradon> I guess there are more pip-s ?
[15:06:41] <jean-luc> no
[15:06:54] <Gaboradon> there is a pip package already
[15:07:12] <jean-luc> try just do "pip install -U rtlsdr_scanner"
[15:07:15] <jean-luc> if you have pip
[15:07:30] <Gaboradon> That's what I did and it didn't work
[15:07:32] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Ping timeout: 245 seconds)
[15:07:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:07:45] <jean-luc> what was the error
[15:07:58] <Gaboradon> I mean, it did install, but the software guide says to run must use "python -m rtlsdr_scanner"
[15:08:03] *** Joins: Thanatos (~Thanatos@197.210.54.104)
[15:08:07] <Gaboradon> When running that it says "no module rtlsdr_scanner"
[15:08:22] <Gaboradon> But I didn't try running directly ... maybe I should
[15:08:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:10:32] <Gaboradon> Maybe I need to use python 3, because I can see requirements mention 3.0 when installing
[15:10:33] <jinsun> Gaboradon: what OS?
[15:10:42] <Gaboradon> Kubuntu 20.04 LTS
[15:10:58] <jinsun> ah so usual debian nonsense would apply
[15:11:00] <Gaboradon> Python stuff was installed as part of all the building/dev stuff
[15:11:07] <jinsun> you'll have to install pip separately
[15:11:30] <Gaboradon> Allright, deal with it later, thanks
[15:11:51] <kosh> Gaboradon, for some reason we don't really understand debian and debian based distros like ubuntu break the python software (and lots of other software) apart into many different packages
[15:12:00] <kosh> Gaboradon, and they break pip out into its own package
[15:12:07] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[15:12:30] <kosh> Gaboradon, this is not true of python from python.org, anaconda or many other sources
[15:13:04] <kosh> Gaboradon, in general you should leave the system python only for the system software to use and just install anaconda into your home directory and use that for all your python stuff
[15:13:15] *** Quits: Thanatos (~Thanatos@197.210.54.104) (Read error: Connection reset by peer)
[15:13:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:13:40] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 240 seconds)
[15:13:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:14:15] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[15:14:37] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[15:14:46] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[15:15:06] *** Joins: ice9 (~ice9@user/ice9)
[15:15:44] *** Joins: Thanatos (~Thanatos@197.210.54.101)
[15:15:52] *** Quits: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[15:16:08] *** Joins: dre (~dre@2001:8003:c932:c301:96c0:ff04:2c6f:a4f9)
[15:16:10] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:526a:31b9:767c:93c) (Ping timeout: 240 seconds)
[15:16:15] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 244 seconds)
[15:17:09] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:ab7d:ab36:f71c:5e07)
[15:17:22] <rendar> why "10.3".isnumeric() returns False ?!
[15:17:29] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 248 seconds)
[15:17:35] <jinsun> because "." is not numberic
[15:17:46] <jinsun> *numeric
[15:18:26] <jinsun> it checks each letter separatel
[15:18:31] <jinsun> y
[15:19:34] *** Quits: Thanatos (~Thanatos@197.210.54.101) (Read error: Connection reset by peer)
[15:19:45] *** Joins: Thanatos (~Thanatos@197.210.54.134)
[15:20:47] *** Quits: Thanatos (~Thanatos@197.210.54.134) (Read error: Connection reset by peer)
[15:21:24] *** Joins: Thanatos (~Thanatos@197.210.54.134)
[15:22:16] *** Joins: computeiro (~Wender@189.37.69.241)
[15:23:16] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[15:23:44] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[15:24:41] *** Joins: Karel (~Karel@ptr-9091p58oi38jm0gbi3p.18120a2.ip6.access.telenet.be)
[15:24:46] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:25:14] *** Joins: nickodd (~nickodd@user/nickodd)
[15:29:11] *** Joins: ThanatosJ (~Thanatos@197.210.55.50)
[15:29:15] *** Joins: y1n (~y1n@84-115-65-200.wifi.dynamic.surfer.at)
[15:29:17] *** Quits: sincorchetes (~sincorche@204.red-95-127-145.staticip.rima-tde.net) (Quit: Konversation terminated!)
[15:30:52] *** Quits: Thanatos (~Thanatos@197.210.54.134) (Ping timeout: 245 seconds)
[15:33:38] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:35:06] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:36:04] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[15:36:41] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 248 seconds)
[15:36:50] *** Joins: Guest99 (~Guest99@bzq-84-110-62-22.red.bezeqint.net)
[15:36:59] <Guest99> Hi, I'm trying to show log messages as part of the pytest output and it seems to not work well for me (I probably messed something). when I use log-cli-level=INFO I cant see anything, but when I use --log-level=INFO I can, Not sure I understand the difference between them
[15:37:39] *** Joins: Roey (~Roey@user/Roey)
[15:38:22] *** Quits: dre (~dre@2001:8003:c932:c301:96c0:ff04:2c6f:a4f9) (Ping timeout: 245 seconds)
[15:38:28] *** Joins: Thanattt (~Thanatos@197.210.54.134)
[15:38:34] <jean-luc> --log-cli-level should be used from command line
[15:38:56] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[15:39:31] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[15:39:35] *** Joins: ice99 (~ice9@user/ice9)
[15:40:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:41:20] <jean-luc> --log-level=INFO is built into pytest
[15:41:29] *** Quits: ThanatosJ (~Thanatos@197.210.55.50) (Ping timeout: 248 seconds)
[15:41:36] <jean-luc> --log-cli-level is third party modules logging
[15:42:36] <rendar> jinsun: ok there is a function that returns True even if numbers have . ?
[15:42:54] <rendar> oh, also the minus sign, what a mess
[15:43:05] *** Quits: Thanattt (~Thanatos@197.210.54.134) (Ping timeout: 248 seconds)
[15:43:25] *** Joins: masoudd (~masoudd@user/masoudd)
[15:43:29] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[15:44:10] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 240 seconds)
[15:44:25] <marduk> rendar: Is float(string) what you're after?
[15:44:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[15:44:47] <rendar> yes
[15:44:53] <rendar> or integer
[15:45:11] <grawity> how is the actual requirement defined? could you just int("10.3") and see if that throws or not
[15:45:42] <rendar> i wish a cleaner approach
[15:45:53] <Repiphany> regex
[15:45:57] <Yhg1s> cleaner than what? what is it you actually need to do?
[15:46:09] <jinsun> regex is the answer to everything, lol
[15:46:10] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[15:46:12] <rendar> Yhg1s: checking some tokens if they are string/integer/floats
[15:46:23] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[15:46:32] <rendar> Yhg1s: but i wish to add dates, for instance
[15:46:34] *** Quits: jazzy (~jaziz@172.58.43.173) (Ping timeout: 268 seconds)
[15:46:37] <Yhg1s> rendar: what does it mean for them to be 'integers' or 'floats'? Do you mean to pass them to int() or float()? Or is there some other definition for them you're using?
[15:46:48] <rendar> Yhg1s: the former
[15:46:49] *** Joins: frost (~frost@59.71.240.119)
[15:47:04] <Yhg1s> rendar: then _by far_ the best way is to pass them to int() and float(), and catch the ValueError.
[15:47:06] <rendar> i have to create integer or floats out of the string
[15:47:10] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[15:47:21] <Yhg1s> rendar: otherwise you _will_ miss corner cases you weren't even aware of.
[15:47:35] <rendar> Yhg1s: but in such a case i'd have: try: float(x) except: try: int(x) except: try datetime. ...
[15:47:47] <rendar> isn't too many scopes?
[15:47:58] <Yhg1s> rendar: it's not scopes. Also, don't use bare except. Also, that's what functions are for.
[15:48:15] <rendar> ok
[15:48:23] <rendar> you made a point with corner cases, thanks
[15:48:24] <rendar> i agree
[15:48:53] *** Joins: jazzy (~jaziz@172.58.43.167)
[15:48:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[15:49:22] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:49:40] <kosh> 1.5E-03 would be interesting to make sure you catch it correctly, Yhg1s is absolutely correct, just use float or int
[15:50:03] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[15:53:14] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:53:31] *** Joins: sri19 (uid477846@id-477846.charlton.irccloud.com)
[15:54:09] *** Joins: ice9 (~ice9@user/ice9)
[15:54:40] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[15:55:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:59:05] *** Joins: ice99 (~ice9@user/ice9)
[16:01:42] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 245 seconds)
[16:01:54] *** Joins: dez (uid92154@user/dez)
[16:04:01] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[16:04:02] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[16:04:18] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[16:04:45] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[16:07:26] *** gr33n7001 is now known as gr33n7007h
[16:09:10] <Guest99> @jean-luc I might missed that log-cli-level is for third party modules, so in order to show the logs from my modules I should use log-level?
[16:09:24] *** Joins: shad (~shad@user/shad)
[16:09:59] <jean-luc> yep
[16:10:39] *** Joins: roadt (~roadt@36.5.93.233)
[16:12:04] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[16:12:27] *** Joins: pro (~pro@user/pro)
[16:16:41] *** Quits: y1n (~y1n@84-115-65-200.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[16:17:18] <pro> I'm calling logging.basicConfig() in my main thread, and in each of my threads. Is it needed for each thread or should I just call it once from main thread?
[16:17:36] <nedbat> pro: just once
[16:18:19] <pro> nedbat: thanks, I am going to refactor my code and test it :)
[16:18:31] *** Joins: stoiclun1 (~stoiclunc@user/stoiclunchbox)
[16:21:04] *** Joins: pycurious (~Adium@user/pycurious)
[16:22:46] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[16:24:37] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:d09f:e768:a8b9:209a) (Remote host closed the connection)
[16:26:30] *** Joins: cyphase (~cyphase@user/cyphase)
[16:26:40] <Guest99> @jean-luc thanks!
[16:28:02] <jean-luc> yw
[16:28:40] *** Joins: y1n (~y1n@84-115-65-200.wifi.dynamic.surfer.at)
[16:28:57] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:29:35] *** Quits: Knysliux001 (~dz@78-58-53-109.static.zebra.lt) (Quit: Konversation terminated!)
[16:29:45] *** Quits: jean-luc (~gryster@104.244.73.251) (Quit: Reconnecting)
[16:31:18] <pro> I've tested it and it's not working with logging.basicConfig() just in my main thread :o
[16:31:58] *** Joins: ubert (~Thunderbi@178.115.35.155.wireless.dyn.drei.com)
[16:32:39] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[16:32:55] <mawk> oh no I missed jean-luc
[16:34:29] *** Joins: entuland_ (~entuland@user/entuland)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:29] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 248 seconds)
[16:38:07] <Yhg1s> pro: and yet logging.basicConfig doesn't do anything if logging has already been configured. Make sure you do it before you start any other threads. (Also, really, avoid threads.)
[16:39:49] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:9d63:3764:1546:fb6b)
[16:40:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[16:41:45] *** Joins: shangxiao (~davids@101.181.142.185)
[16:42:28] <shangxiao> I'm looking for the section in the docs that describes the ellipsis (...) as a synonym for `pass`: Anyone know which part that would be? Or PEP?
[16:42:58] *** Quits: stoiclun1 (~stoiclunc@user/stoiclunchbox) (Quit: stoiclun1)
[16:43:48] <bjs> shangxiao: it's not a synonymn for pass. ... is an object called Ellipsis
[16:44:03] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:44:39] <bjs> ... is just an expression that evaluates to Ellipsis.  `def f(): ...` isn't really any different to `def f(): 17`.  the `...` and the `17` are just expressions that evaluate to a value that get ignored
[16:46:36] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[16:46:56] <no_gravity> First day playing with Debian 11. Lets see if I get PyPy to work.
[16:47:15] <shangxiao> ah yep I see now, it's a sort of unofficial convention that's become somewhat popular
[16:48:07] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 258 seconds)
[16:48:15] <shangxiao> which seems old mate guido seems to agree himself xD https://github.com/python/typing/issues/109
[16:48:57] <bjs> shangxiao: I think ... was chose for typing mostly because "pass" denotes a concrete implementation that just doesn't do anything
[16:49:21] <bjs> whereas ... just commonly means "omitted" or something, so it just looks more right (if that makes sense) for typing stubs
[16:49:39] <bjs> it's just an accident that `def f(): ...` is valid syntax that they could use
[16:50:40] <shangxiao> the best kind of accident
[16:50:51] <no_gravity> Ok, so giving PyPy another try. What do I do if it complains "ImportError: cannot import name 'etree'"?
[16:51:04] <bjs> no_gravity: what is etree?
[16:51:18] <Yhg1s> no_gravity: when you do what, exactly?
[16:52:11] <no_gravity> bjs: I think it comes with python3-cssselect
[16:52:22] <bjs> oh you're installing debian packages
[16:52:29] <bjs> did pypy also come from a debian package?
[16:52:39] <no_gravity> bjs: Yup, "apt install pypyp3"
[16:53:03] <bjs> no_gravity: didn't we talk about this before?  I'm getting dejavu
[16:53:18] <bjs> wasn't Debian sharing pypy3's site-packages with python3 or something?
[16:53:24] <no_gravity> bjs: Yes, we talked about exactly this. But then I used Debian 10.
[16:53:31] <no_gravity> I thought I give it another try under Debian 11.
[16:53:40] *** Joins: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[16:54:04] <no_gravity> The thing that uses "etree" seems to be lxml.cssselect.
[16:54:22] <no_gravity> Which I got via apt-get install python3-cssselect
[16:54:23] <Yhg1s> So what are you doing? Show the code and the traceback.
[16:54:28] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:55:12] <no_gravity> Yhg1s: File "/usr/lib/python3/dist-packages/lxml/cssselect.py", line 11, in <module> from . import etree ImportError: cannot import name 'etree'
[16:55:19] <Yhg1s> in a pastebin.
[16:55:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 248 seconds)
[16:55:38] <Yhg1s> But it looks to me like a broken Debian package, at least for pypy.
[16:55:38] <no_gravity> Yhg1s: That what happens when I do "pypy3 myscript.py" which uses lxml.cssselect
[16:56:06] <Guest99> If I'm using log-level (to configure pytest), it may override any usage of "caplog.set_level(..)", that the best practice?
[16:56:55] <no_gravity> Yhg1s: Broken how?
[16:57:59] <Yhg1s> no_gravity: that's very hard to tell without a lot more information. A missing extension module, perhaps, or one that is built in a way that doesn't work with pypy, despite its best efforts.
[16:58:27] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[16:58:41] <Yhg1s> no_gravity: or perhaps lxml just does things entirely differently on pypy, and the sharing-of-packages thing that debian does is just broken. How about doing the sensible thing and creating virtualenvs instead?
[16:58:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:59:43] *** Joins: akaWolf (~akaWolf@akawolf.org)
[17:00:06] *** Joins: nagualcode (~nagualcod@181.221.147.75)
[17:00:44] <nagualcode> how can I “compose” an object, using a for loop ?
[17:00:45] <bjs> iirc the Debian system pypy didn't come with pip/venv and there was no pypy3-venv or pypy3-pip packages and ensurepip was disabled by the Debian maintainers
[17:00:52] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:01:02] <bjs> nagualcode: you're going to have to explain what you mean and how the for loop is related
[17:01:13] <bjs> what does "compose" mean in this context?
[17:01:38] <no_gravity> Yhg1s: Like this? python3 -m venv helloworld
[17:01:59] <bjs> no_gravity: or probably with pypy3 if you want to test with pypy
[17:02:10] <nagualcode> i load a json into a python object, then I want to iterate over a nested item, to put these itens in dynamob but, with the command table.put_item
[17:02:12] <Yhg1s> no_gravity: no, with pypy.
[17:02:29] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[17:02:33] <no_gravity> So this? pypy3 -m venv helloworld
[17:02:34] <bjs> nagualcode: ah okay,  what does the json object look like?
[17:02:55] <no_gravity> I still get "ImportError: cannot import name 'etree'"
[17:03:02] *** Joins: entuland__ (~entuland@user/entuland)
[17:03:04] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[17:03:05] <bjs> no_gravity: does pypy3 -m venv actually work now?
[17:03:08] <bjs> and make a venv
[17:03:17] *** Quits: Guest99 (~Guest99@bzq-84-110-62-22.red.bezeqint.net) (Quit: Client closed)
[17:03:36] <no_gravity> bjs: "pypy3 -m venv" takes about two seconds and then returns without any output.
[17:03:55] <bjs> no_gravity: okay, have you ever used a venv before or looked at the docs for it?
[17:04:06] <no_gravity> bjs: No
[17:04:09] <nagualcode> bjs: https://paste.debian.net/plain/1208099
[17:04:19] <bjs> no_gravity: I think Yhg1s was suggesting installing cssselect into the venv then running the Python inside the venv to see if it imports fine there
[17:04:26] <bjs> if it does, that suggests a broken Debian package
[17:04:30] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:04:58] <no_gravity> bjs: How do I install cssselect into the venv?
[17:05:25] <Yhg1s> no_gravity: venv/bin/pypy3 -m pip install cssselect
[17:05:53] <bjs> nagualcode: ah okay, well this looks like it will print out the SKUs you wanted, what did you want to do
[17:06:10] *** Quits: entuland_ (~entuland@user/entuland) (Ping timeout: 240 seconds)
[17:06:19] <no_gravity> Ha, "pypy3 -m venv helloworld" does not work!
[17:06:20] <nagualcode> I want to put this nest (items) inside a dynamodb cell
[17:06:43] <no_gravity> I think it only exited because the venv was build by cpyhon before.
[17:07:02] <no_gravity> Now when I try "pypy3 -m venv helloworld" I gete "The virtual environment was not created successfully because ensurepip is not
[17:07:05] <no_gravity> available."
[17:07:07] <nagualcode> bjs: the syntax for dynamodb is https://paste.debian.net/plain/1208100   so I dont now if I sould iterate over each item
[17:07:24] <no_gravity> And the suggestion to "apt-get install python-pip-whl"
[17:07:49] <Yhg1s> no_gravity: and if you follow that suggestion?
[17:07:59] <no_gravity> Yhg1s: Then it seems to work
[17:08:39] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[17:09:00] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[17:09:20] <no_gravity> So then I do "helloworld/bin/pypy3 -m pip install cssselect"
[17:09:32] *** Joins: Death916_lap1 (~Death916@user/death916)
[17:09:33] <no_gravity> But then again I get: ImportError: cannot import name 'etree'
[17:09:47] <bjs> no_gravity: you get that error running the pip install?
[17:09:49] <no_gravity> When I try "pypy3 myscript.py"
[17:09:57] <nagualcode> bjs: forget, I made it, just passing the mother key
[17:09:57] <bjs> no_gravity: try helloworld/bin/pypy3 myscript.py
[17:09:59] <no_gravity> bjs: No, when I try "pypy3 myscript.py"
[17:10:21] *** Quits: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[17:10:30] <Yhg1s> no_gravity: yes. don't try that. Use the virtualenv.
[17:10:40] <no_gravity> Ok, lets see ..
[17:11:23] <no_gravity> Can I put the venv in some other directory? Like /my/venc/data/?
[17:11:30] <no_gravity> I don't like it to be inside my repo.
[17:11:41] <bjs> no_gravity: yes the venv can be anywhere
[17:11:47] <bjs> and when you don't want it anymore you can delete it
[17:11:54] <bjs> no_gravity: but the question is does it work with the venv?
[17:12:06] <no_gravity> bjs: I am still installing all required dependencies.
[17:12:18] *** Quits: death916_lap (~Death916@user/death916) (Ping timeout: 268 seconds)
[17:12:27] *** Death916_lap1 is now known as death916_lap
[17:12:41] <no_gravity> "./helloworld/bin/pypy3 -m pip install lxml" fails spectacularely.
[17:13:05] <no_gravity> With pages and pages of error messages.
[17:13:26] <Yhg1s> no_gravity: you will have to show us the actual error messages, you know. (Use a pastebin)
[17:13:36] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:13:45] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[17:13:50] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:adc6:7234:a30e:b0e8)
[17:13:53] <no_gravity> "Could not find function xmlCheckVersion in library libxml2. Is libxml2 installed?"
[17:13:54] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:13:57] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:14:38] <no_gravity> Or this: "unable to execute 'cc': No such file or directory"
[17:15:07] <bjs> no_gravity: well it sounds like it has some pre-requesites to be able to install (and build) lxml for you (e.g. a c compiler),  perhaps there wasn't a whl available
[17:15:09] <bjs> it's hard to tell
[17:15:48] *** Joins: zeden (~zeden@user/zeden)
[17:15:49] <no_gravity> bjs: If lxml has those pre-requisites, why doesn't it install them? And why does it work for cpython?
[17:16:03] <Yhg1s> no_gravity: try this: apt build-dep python3-lxml
[17:16:16] <no_gravity> Ah, I don't know if it works for cpython. Because that was installed via apt.
[17:16:23] <bjs> no_gravity: it sounds like it did try and it failed, and possibly there was a wheel available for cpython so it could use a pre-built one
[17:16:24] <Yhg1s> no_gravity: it works for cpython because debian installed binaries for you, or because lxml has wheels for that version of cpython.
[17:16:32] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:16:33] <no_gravity> Yhg1s: python3-lxml or pypy3-lxml?
[17:16:48] <bjs> no_gravity: or if it came from Debian then Debian put a pre-built version wherever needed already,. `pip` has to build it itself
[17:16:52] *** Quits: y1n (~y1n@84-115-65-200.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[17:16:56] <Yhg1s> no_gravity: python3-lxml. Do you have a pypy3-lxml Debian packages?
[17:17:00] <Yhg1s> eh, package?
[17:17:09] <no_gravity> Dunno :)
[17:17:23] <no_gravity> Yhg1s: E: You must put some 'deb-src' URIs in your sources.list
[17:19:07] <Yhg1s> no_gravity: ok, well, either edit your /etc/apt/soures.list to add deb-src entries (they're probably commented out), or manually install everything you need to build lxml from source. (build-essential libxml2-dev libxslt1-dev pypy3-dev, probably)
[17:20:33] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:20:36] <no_gravity> Yhg1s: I would have to put all that stuff on a production server too?
[17:20:59] <Yhg1s> no_gravity: I don't know what your production environment looks like, or how you deploy.
[17:21:09] <Yhg1s> no_gravity: but I imagine you can build binary wheels and deploy them, instead.
[17:21:18] <no_gravity> Yhg1s: That is a rather theoretical question. For now I am only getting to know Python.
[17:21:45] <no_gravity> I am building a few in-house tools with it to get to know it.
[17:22:06] <no_gravity> Yhg1s: I installed your suggestions and now I get a new error!
[17:22:19] <no_gravity> "/usr/bin/ld: cannot find -lz"
[17:23:01] <Yhg1s> no_gravity: sounds like you're still missing packages necessary to build python3-lxml. I guess you did the second thing, not the first? This is probably zlib1g-dev
[17:23:44] <no_gravity> If I ever hear somebody say "PyPy is a drop-in replacement for CPython"...
[17:24:05] <Yhg1s> no_gravity: this is nothign to do with PyPy. This is to do with building things from source because Debian apparently doesn't provide functional packages.
[17:24:09] *** Quits: ubert (~Thunderbi@178.115.35.155.wireless.dyn.drei.com) (Quit: ubert)
[17:24:15] <no_gravity> Ever *again*. Because I have heard it a bunch of times now.
[17:24:18] <Yhg1s> (and also with your system not being set up to build things from source.)
[17:24:27] *** Joins: ubert (~Thunderbi@178.115.35.155.wireless.dyn.drei.com)
[17:24:34] <Yhg1s> no_gravity: I recommend complaining to Debian then.
[17:24:37] <bjs> no_gravity: Debian took it and made it not work deliberately,  this is 100% Debian
[17:24:47] *** Quits: rooiratel (~rooiratel@156-155-158-2.ip.internet.co.za) (Quit: Leaving)
[17:24:55] <no_gravity> I thought I am in a venv now, not depenant on Debian?
[17:25:04] <bjs> There are cases where PyPy is not a drop-in replacement, and "drop-in" doesn't mean you can mix/match files from CPython and PyPy
[17:25:06] <no_gravity> Ha, I have "Successfully installed lxml-4.6.3"!
[17:25:08] <Yhg1s> no_gravity: you're trying to build things for the venv.
[17:25:26] <bjs> which you'd have to do anyway for CPython
[17:25:43] <bjs> if Debian didn't already have some pre-built stuff in some cases
[17:25:57] <no_gravity> So I got my first real world application running via PyPy now.
[17:26:11] <no_gravity> And to my surprise, it does not seem faster than in CPython.
[17:26:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:26:34] <no_gravity> 4.5s .. damn. I think it was similar in CPython. Let me check.
[17:26:39] <bjs> well whether it's faster than CPython is hugely dependent on what libraries you're using and where the work lies and what you're doing
[17:26:41] <Yhg1s> no_gravity: if you're doing all the work in lxml, this is hardly surprising. PyPy speeds up frequently-executed *Python* code.
[17:26:57] <Yhg1s> no_gravity: and 4.5 seconds is hardly enough time to do much work, let alone speed it up.
[17:27:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:27:17] <bjs> no_gravity: if you're spending all your time in some third-party library that isn't even written in Python then PyPy can't even optimize it since it's not Python code that's running
[17:28:04] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net) (Quit: zzzz)
[17:28:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[17:28:08] <bjs> Yhg1s: there was an interesting bit of work that tos9 showed me where PyPy often had zero warmup time
[17:28:15] <bjs> but yeah that's still a concern
[17:28:40] <bjs> (or maybe it was just that warmup happened so fast in the benchmarks it wasn't detectable on human scales)
[17:30:11] <no_gravity> CPython is even faster: 3.6s
[17:30:11] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[17:30:30] *** Joins: y1n (~y1n@84-115-65-158.wifi.dynamic.surfer.at)
[17:30:34] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[17:30:40] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:9d63:3764:1546:fb6b) (Ping timeout: 240 seconds)
[17:32:02] <no_gravity> So much for my first real world PyPy experience. Back to CPython.
[17:32:27] <bjs> no_gravity: the more work you do in Python the better PyPy tends to look, so it depends a lot on the kind of work you do.
[17:32:52] <no_gravity> bjs: Well, this beast does a lot of complex work. It taks fricking 4s!
[17:32:57] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[17:33:31] <bjs> e.g. a web server is unlikely to benefit at all from PyPy, and small scripts that last only a few seconds are unlikely to even get warmed up in time and even reasonable programs that last minutes if they spend all their time in libraries are unlikely to get improvements
[17:33:40] <bjs> no_gravity: how much *could* Pypy improve performance of your script?
[17:33:40] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 240 seconds)
[17:33:50] <no_gravity> bjs: I don't know.
[17:34:14] <no_gravity> "only a few seconds" :) A few seconds are a showstopper for a web service and long enough to be annoying on the command line.
[17:34:17] <bjs> no_gravity: well, your script takes 4s, do you know how much time it's spending doing different things in those 4s
[17:34:27] <no_gravity> bjs: Nope, I don't know.
[17:34:49] <no_gravity> It is running quite a log of regex and css selectors.
[17:34:54] <no_gravity> s/log/lot
[17:35:00] <bjs> but you don't actually know how long it's spending doing those things?
[17:35:04] <no_gravity> Nope
[17:35:07] <bjs> or where it's actually spending its time?
[17:35:12] <no_gravity> Nope.
[17:35:22] <no_gravity> Have not seen an easy way to figure that out in Python yet.
[17:35:38] <Yhg1s> here you go: profile it.
[17:35:44] <no_gravity> Yhg1s: How so?
[17:35:46] <bjs> no_gravity: -m profile ?
[17:35:49] <bjs> or cprofile I guess
[17:35:51] <Yhg1s> I'm not sure what you mean by 'how so'
[17:36:07] <Yhg1s> bjs: nah, just profile. cProfile is a Python 2 thing.
[17:36:17] <no_gravity> bjs: Let me see what "-m profile" does ...
[17:36:21] *** Quits: death916_lap (~Death916@user/death916) (Ping timeout: 268 seconds)
[17:36:26] <bjs> Yhg1s: ah I always get them mixed up
[17:36:36] <Yhg1s> no_gravity: https://docs.python.org/3/library/profile.html
[17:36:57] <Repiphany> https://jiffyclub.github.io/snakeviz/ for profile visualization
[17:36:59] <Yhg1s> oh, cProfile *is* still a thing, weird.
[17:37:31] <bjs> Yhg1s: at least I'm not alone in getting confused about its existence
[17:37:31] <bjs> :)
[17:38:11] <no_gravity> bjs: Is that output supposed to be human readable?
[17:38:17] <bjs> no_gravity: what output?
[17:38:31] <no_gravity> bjs: Of "python3 -m profile myscript.py"
[17:38:34] *** Joins: dre (~dre@2001:8003:c932:c301:2c3:7064:672c:648)
[17:38:49] <bjs> no_gravity: well strictly speaking yes, it should give you text that a human can read
[17:39:00] <bjs> although if you've never seen it before it might seem a lot ?
[17:39:25] <no_gravity> Its a mistery to me.
[17:39:38] <bjs> no_gravity: maybe if you pastebin the output you see we can help demystify it
[17:39:53] <no_gravity> Well, lets look at the first line:
[17:40:00] <Yhg1s> let's not.
[17:40:00] <no_gravity>    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[17:40:00] <no_gravity>        14    0.000    0.000    0.000    0.000 :0(S_ISREG)
[17:40:02] <bjs> maybe let's not paste it 1 line at a time
[17:40:12] <no_gravity> I have no clue what that is to tell me.
[17:40:22] <Yhg1s> no_gravity: would you like us to tell you, or provide you with a link that explains it?
[17:40:31] <no_gravity> Something has been called 14 times?
[17:40:54] <Yhg1s> no_gravity: yes. and no measurable time was spent on it, so move on.
[17:41:10] <no_gravity> Do I have to sort this by "tottime" myself?
[17:41:10] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:ab7d:ab36:f71c:5e07) (Ping timeout: 240 seconds)
[17:41:40] <Yhg1s> no_gravity: hard to say without seeing the output you got.
[17:41:50] <Yhg1s> no_gravity: but yes, you can tell cProfile (or profile) what to order by.
[17:41:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[17:42:05] <no_gravity> Yhg1s: It does not seem sorted by "tottime"
[17:42:16] <bjs> no_gravity: what did you pass for -s
[17:42:22] <Yhg1s> no_gravity: I can't comment, since you haven't shown us what you ran and what output you got.
[17:42:24] <no_gravity> bjs: I did not pass -s
[17:42:29] <bjs> no_gravity: well there's your problem
[17:42:33] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:42:46] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[17:43:05] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:43:11] <no_gravity> Ok, lets try -s cumtime
[17:43:53] *** Joins: raxor2k (~raxor2k@28.109-247-20.customer.lyse.net)
[17:45:13] <raxor2k> i have a general question: lets say a user connects to a streaming server, and user receives live streaming data from a streaming-object(made for that user), but not we also want a AI robot to provide tip and tricks for the user. Where is this AI robot object placed? alongside the streaming-object or somewhere else in the server?
[17:45:18] <no_gravity> Hmm.. I understand the first 10 lines and then comes this:
[17:45:21] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[17:45:24] <no_gravity> 93    0.002    0.000    2.486    0.027 __init__.py:860(fromstring)
[17:45:33] <no_gravity> What is __init__.py here?
[17:45:36] <Yhg1s> no_gravity: a file.
[17:45:52] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[17:46:03] <no_gravity> Yhg1s: A file called __init__.py?
[17:46:07] <Yhg1s> no_gravity: yes.
[17:46:14] <stevieh> raxor2k: you mean "streaming" in the sense of video or audio streaming?
[17:46:17] <no_gravity> Yhg1s: Where could that file be?
[17:46:23] <Yhg1s> no_gravity: in any package.
[17:46:46] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[17:46:51] <no_gravity> Yhg1s: And how do I find that package?
[17:46:51] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[17:47:01] <Yhg1s> no_gravity: considering the 'fromstring' name, and the fact that you're using lxml, I imagine it's lxml.etree.fromstring.
[17:47:09] *** Joins: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:47:24] <no_gravity> Yhg1s: Maybe. Another heavy ont his the next line:
[17:47:32] <no_gravity> 93    2.482    0.027    2.483    0.027 __init__.py:758(document_fromstring)
[17:47:33] <Yhg1s> no_gravity: remember back when we suggested profiling and Repiphany suggested snakeviz for profile visualization?
[17:48:26] <no_gravity> Yhg1s: I prefer command line tools.
[17:49:02] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:49:16] <no_gravity> Yhg1s: Also, how would snakeviz figure out in which package that __init__.py is?
[17:49:37] <raxor2k> stevieh: i mean streaming such as when u move a toy care or a drome
[17:49:47] <raxor2k> and you can see live poistion, altitude etc. in your app
[17:49:49] <Yhg1s> no_gravity: okay, well, by default the output you get will have limited information. You have to do more work to get more information. Like what snakeviz would do.
[17:49:51] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[17:50:03] <bjs> I think pstats can read the dir
[17:50:18] <Yhg1s> no_gravity: the documentation explains how to get more information from the pstats result.
[17:50:21] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:50:30] <raxor2k> stevieh: and when i want an AI "robot" to give tips and suggestion to you based on how your move
[17:50:36] <Yhg1s> or you can output the data in lsprof format.
[17:51:49] <no_gravity> Yhg1s: lsprof format?
[17:51:58] <bjs> no_gravity: `-m cProfile -s cumtime -o out.prof myscript.py` then you can in Python `import pstats; pstats.Stats("out.prof").print_stats()`  and this should include the full file path
[17:52:08] <Yhg1s> no_gravity: the '-o' argument to profile will dump the pstats data in a format that contains way more information than the default output will show.
[17:52:18] <no_gravity> Ok.
[17:52:22] * no_gravity gets a coffee
[17:52:35] <Yhg1s> no_gravity: this is all covered in https://docs.python.org/3/library/profile.html
[17:52:38] <stevieh> raxor2k: there are many ways to do... it depends a little bit, about the need of a return channel to the drone/AI server/whatever. But TBH, I don't think #python is a good place to discuss
[17:52:46] *** Joins: Naan (~Naan@user/naan)
[17:53:48] <bjs> no_gravity: uh you probably also need a .sort_stats() call before you .print_stats() if you want things to be sorted properly, I forgot. The docs definitely will say though
[17:54:51] <no_gravity> Jesus, out.prof is a binary file.
[17:54:56] <bjs> Yes
[17:55:05] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[17:56:30] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:56:48] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:57:12] <bjs> no_gravity: it's not uncommon for profilers to dump some binary format that other tools are supposed to read
[17:57:12] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:57:39] <bjs> -m profile just generates one of these and calls the pstats.Stats' methods I mentioned above with some default arguments
[17:58:37] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:59:30] <no_gravity> bjs: .sort_stats() with some parameter?
[17:59:36] <bjs> Probably
[18:00:34] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[18:00:37] <no_gravity> Ok, this is the thing that uses 2.489s: /usr/lib/python3/dist-packages/lxml/html/__init__.py:758(document_fromstring)
[18:00:56] <bjs> that is a different function is it not?  but sure
[18:01:01] <bjs> no_gravity: is that cumtime or ?
[18:01:13] <no_gravity> bjs: Yeah, cumtime for that thing is 2.489s
[18:01:50] <bjs> no_gravity: sounds like it's spending ~2.5s just parsing a string into an HTML document object inside lxml
[18:02:06] <bjs> if I was to make wild guesses from the name :P
[18:02:21] <no_gravity> Yeah, probably.
[18:02:23] <Yhg1s> well, 2.5s in 93 calls.
[18:02:31] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[18:02:34] <bjs> Where is the 93?
[18:02:47] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[18:02:52] *** Quits: roadt (~roadt@36.5.93.233) (Ping timeout: 268 seconds)
[18:02:52] <Yhg1s> 15:17 < no_gravity> 93    2.482    0.027    2.483    0.027 __init__.py:758(document_fromstring)
[18:02:55] <bjs> Oh from the above line, yes, 93 calls and 2.5s total
[18:03:26] <bjs> I wouldn't expect PyPy to be able to get back any of those 2.5s really, something else would be needed to improve that
[18:03:28] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 268 seconds)
[18:04:29] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[18:04:54] <no_gravity> Cumtime of the whole run was 4.5s. Lets see where the other 2s are...
[18:05:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:05:27] <no_gravity> 0.8s are here:
[18:05:36] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Client Quit)
[18:05:39] <no_gravity> 236/6    0.004    0.000    0.822    0.137 <frozen importlib._bootstrap>:1002(_find_and_load)
[18:05:52] <no_gravity> What could this be? 236/6? frozen importlib?
[18:06:02] <bjs> no_gravity: snakeviz will make a nice (yes but not command-line) diagram that can make this kind of search easier
[18:06:07] <Yhg1s> It's the implementation of module imports.
[18:06:19] <bjs> no_gravity: part of the `import` machinery
[18:06:31] <no_gravity> Yhg1s: 0.8s importing modules?
[18:06:39] <Yhg1s> no_gravity: clearly.
[18:06:44] <no_gravity> \o/
[18:06:52] <Yhg1s> Modules can do quite a few things when they are imported.
[18:07:14] <no_gravity> Common, this should be 0.000...s
[18:07:24] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[18:07:34] <Yhg1s> no_gravity: I dont know why you think that. Importing modules isn't free.
[18:07:42] <Yhg1s> no_gravity: like I said, modules can do quite a few things when they are imported.
[18:08:06] <bjs> no_gravity: Python imports run code, and modules can do whatever they want when they're imported.
[18:08:35] <bjs> Big projects often have lots of conditional "if" statements, and exception raise/catching and other stuff that are fairly innocuous but take time.
[18:08:39] <no_gravity> Can I find out which modules are taking this insane amount of time to be imported?
[18:08:41] <bjs> and the import itself obviously has to look for the file and then run it
[18:08:43] <Byteflux> Presumably the things they're doing is more of a warmup that will hurt short-lived applications but have no real measurable impact in a more long running process.
[18:08:55] *** Quits: nagualcode (~nagualcod@181.221.147.75) (Quit: nagualcode)
[18:08:56] <bjs> Byteflux: yes, imports happen once
[18:09:11] <Yhg1s> no_gravity: it's not insane. Also, it's 236 modules.
[18:09:41] <no_gravity> This one looks suspicious:
[18:09:50] <no_gravity>        1    0.000    0.000    0.812    0.812 ./modules/dsl.py:1(<module>)
[18:10:06] <bjs> no_gravity: there is also -X importtime
[18:10:23] <no_gravity> But what does the ":1" mean? Line one of that module is "import re"
[18:10:24] <Yhg1s> no_gravity: that looks to be your own source.
[18:10:29] <no_gravity> Yhg1s: Yes
[18:10:31] <Yhg1s> no_gravity: 'line 1'
[18:10:37] <bjs> no_gravity: the column at the top should say something like `filename:lineno(function)`
[18:10:40] <bjs> so that'd be the lineno
[18:10:53] <no_gravity> Ok, but line 1 is "import re"
[18:10:58] <Yhg1s> no_gravity: okay?
[18:11:07] <no_gravity> 0.8s to import re?
[18:11:09] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[18:11:22] <bjs> Seems unlikely
[18:11:25] <Yhg1s> no_gravity: I imagine it's misattributing all the time, considering you're importing a lot of other modules.
[18:12:23] <bjs> also I repeat, -X importtime
[18:12:39] <no_gravity> bjs: As an argument to "python3 -m profile"?
[18:12:49] <bjs> no_gravity: no it's an argument to python itself
[18:13:08] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[18:13:19] <no_gravity> bjs: So this? python3 -X importtime myscript.py
[18:13:28] *** Joins: Fiji (~Fiji@user/fiji)
[18:13:37] <bjs> no_gravity: have you tried typign that into your terminal rather than irc :P
[18:13:57] <bjs> no_gravity: (or reading the docs if you're unsure rather than trial&error-over-irc)
[18:14:18] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Quit: stoiclunchbox)
[18:14:24] <no_gravity> bjs: Hmm.. that outputs a bunch of stuff to stderr
[18:14:38] <bjs> no_gravity: yes, I don't know why you're telling me this
[18:14:41] *** Quits: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:14:43] <bjs> clearly *I* know what importtime does
[18:15:14] *** Joins: roadt (~roadt@36.5.93.233)
[18:15:34] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:16:02] <no_gravity> Pizza is ready!
[18:16:10] <no_gravity> Thanks for the great discussion! See you later!
[18:16:36] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[18:16:40] <grawity> is there anything special to know about overriding a @property in a subclass? do I just use "@property def foo()" and access super().foo like with normal methods?
[18:16:40] *** Quits: y1n (~y1n@84-115-65-158.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[18:18:35] *** Joins: drogas (~drogas@jump2.jet.uk)
[18:20:02] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:20:17] *** Joins: fdan (~fdan@192.146.154.3)
[18:20:23] <fdan> https://dpaste.org/DHkE
[18:20:49] <fdan> the output format can be a dictionary
[18:21:19] *** Joins: remline (~remline@user/remline)
[18:21:38] <Yhg1s> grawity: super().foo will work, yes.
[18:22:31] <grawity> fdan: I am *guessing* you want the maximum value of 2nd column?
[18:22:40] <fdan> yes
[18:22:53] *** Joins: death916 (AdiIRC@user/death916)
[18:22:57] <remline> There is an assert statement in some Python Standard Library code, but the assert does not trigger even though I violate the condition. Do I have to turn on "library" asserts specially?
[18:23:03] <shangxiao> fdan: then it'd be helpful for you to say that :P
[18:23:06] <nedbat> fdan: https://gist.github.com/662831f7d7f95a39f1499872e5e256bb
[18:23:20] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:23:28] <nedbat> remline: maybe you have asserts disabled? with -O ?
[18:23:47] <bjs> remline: where is this assert?
[18:24:06] <bjs> It's unusual for the stdlib to have asserts for user conditions
[18:24:32] *** Joins: dld (~davidlowr@2601:197:600:1210:3c3c:cf45:60f2:8388)
[18:24:38] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[18:25:12] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[18:25:31] <remline> bjs: I thought it was unusual, too. /usr/lib/python3.9/xml/etree/ElementTree.py
[18:25:59] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[18:26:25] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[18:26:32] <bjs> remline: what is the assert you think you're violating?
[18:26:33] <nedbat> remline: how are you running your program?
[18:26:44] <SnoopJ> remline, asserts aren't granular like that, but the other questions ^ are good ones
[18:26:46] <bjs> remline: and how are you violating it?
[18:27:18] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:27:43] <remline> nedbat: #!/usr/bin/python , although behavior is same with python scriptname.py
[18:28:01] *** Joins: Thanatos (~Thanatos@197.210.55.50)
[18:28:10] *** Quits: humbertowoody (~humbertow@2806:107e:f:5f0c:961:58ae:dd7c:a3db) (Ping timeout: 240 seconds)
[18:28:20] <nedbat> remline: and you don't have PYTHONOPTIMIZE defined in your environment?
[18:28:33] <remline> bjs: e.g., def end() ... "end tag mismatch".
[18:29:01] <bjs> remline: what did you do to violate that assert?
[18:29:02] *** Quits: Thanatos (~Thanatos@197.210.55.50) (Read error: Connection reset by peer)
[18:29:11] <shangxiao> maybe link to the particualr assert you're talking about from here: https://github.com/python/cpython/blob/v3.9.6/Lib/xml/etree/ElementTree.py
[18:29:15] <SnoopJ> (if you're getting an AssertionError, seeing the full error report would be helpful!)
[18:29:17] <bjs> like what code using the xml library did you write that you think leads to the violation?
[18:29:21] *** Joins: y1n (~y1n@84-115-64-168.wifi.dynamic.surfer.at)
[18:29:23] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 268 seconds)
[18:29:37] <bjs> SnoopJ: no the question is backwards,  remline *isnt* getting an assert and is wondering why
[18:29:46] <SnoopJ> bjs, oh, I see
[18:29:56] <bjs> hence my rather odd line of questioning :p
[18:29:58] * SnoopJ needs a coffee
[18:30:16] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[18:30:49] *** Joins: anthraxx (~anthraxx@archlinux/developer/anthraxx)
[18:31:03] <remline> bjs: e.g., start('aaa') ... end('bbb'). That should be a mismatch!
[18:31:24] <bjs> remline: ... can you make an actual example I can like, actually *run* that you say should give an assertion error
[18:31:56] <remline> Although, I do question why end() even takes a tag name. :)
[18:32:12] <anthraxx> Is there any way to configure python to make use of -O (opt pyc) when just calling `python` on an application? a config switch or any other way (that doesnt include an alias or similar)
[18:32:46] <Yhg1s> remline: it's because of 'from _elementtree import *' at the bottom of the module.
[18:32:58] <Yhg1s> remline: the Python code isn't actually used.
[18:33:10] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[18:33:22] *** Quits: hyper_dave (~hyper_dav@196.191.53.193) (Read error: No route to host)
[18:33:36] <remline> Yhg1s: Aha! Of course! Thanks. I knew about the C implementation, but was forgetting about it in this context.
[18:33:50] <nedbat> anthraxx: define PYTHONOPTIMIZE in your environment
[18:33:58] <nedbat> anthraxx: but it doesn't do much
[18:34:37] <shangxiao> huh TIL
[18:34:45] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[18:34:47] <anthraxx> nedbat: interesting, didnt find that switch when searching, thx.
[18:35:06] <nedbat> anthraxx: it's mentioned in `python --help`
[18:35:17] <anthraxx> nedbat: i know what optimization levels do, i just wanted to know how to usea default :D
[18:35:23] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:35:57] <anthraxx> nedbat: indeed it does, not i feel like a silly rabbit :D thx
[18:36:09] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Quit: leaving)
[18:36:13] <bjs> it's kind of misleading for Python to call it -O :P
[18:36:17] <bjs> as if it does optimizations
[18:36:24] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[18:37:13] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:37:35] <Yhg1s> It used to do them, way back when. Pretty significant ones, too.
[18:37:58] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[18:38:05] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:38:08] <Yhg1s> It left out the SET_LINENO opcode that was used to determine what line of code was being executed, which was used for traceback printing and line tracing. An opcode per line was significant overhead.
[18:38:14] * no_gravity is back from pizza
[18:38:21] <Yhg1s> (Python no longer uses SET_LINENO, fortunately.)
[18:38:47] *** Joins: hyper_dave (~hyper_dav@196.191.53.193)
[18:39:03] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[18:39:12] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:39:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[18:39:47] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[18:40:00] <no_gravity> So any ideas how to interpret this thing?
[18:40:04] <no_gravity> 1    0.000    0.000    0.807    0.807 ./modules/dsl.py:1(<module>)
[18:40:20] <bjs> no_gravity: it says it took 0.8s executing line 1 in dsl.py
[18:40:25] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Client Quit)
[18:40:30] <no_gravity> bjs: Yeah, but that line is "import re"
[18:41:03] <bjs> no_gravity: well the function is "<module>" so it suggests it took 0.8s to execute the entire module
[18:41:09] <bjs> not -just- that one line
[18:41:23] <no_gravity> bjs: "execute the module"?
[18:41:26] <bjs> no_gravity: the file
[18:41:32] <bjs> importing means running the file
[18:41:33] *** Joins: humbertowoody (~humbertow@187.202.209.28)
[18:41:48] <remline> Would anyone care to opine on whether ElementTree.TreeBuilder is better than the good old print('<xml>%s</xml>') ?
[18:41:56] <no_gravity> bjs: Hmm... The file contains 8 imports and a class definition.
[18:42:16] <bjs> no_gravity: okay then presumably executing those 8 imports and the class definition took ~0.8s
[18:43:21] <no_gravity> bjs: The tottime in that line is 0. Can we infer from that it was the imports and not the class definition?
[18:43:24] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[18:43:37] <grawity> remline: is there anything either of those can do that xmltodict.unparse() cannot? >_>
[18:43:40] <bjs> no_gravity: yeah
[18:43:42] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[18:43:53] <bjs> no_gravity: well unless there are function calls in the class definition
[18:44:04] <remline> grawity: Good question, I haven't looked at that. Let me read about it.
[18:44:23] <no_gravity> bjs: I think there are none.
[18:44:50] <bjs> no_gravity: something like snakeviz will output something that is much easier for a human to understand if trying to understand how the time gets broken down over the program
[18:44:51] <no_gravity> Lets sort out.prof by tottime, maybe something comes up ...
[18:44:57] <bjs> rather than staring at raw numbers
[18:45:08] <nedbat> no_gravity:what does -Ximporttime say about those 8 imports?
[18:45:09] <no_gravity> bjs: Is there something for the command line?
[18:45:22] <bjs> no_gravity: nothing good
[18:45:31] *** singularity00 is now known as singularity00_
[18:45:33] *** singularity00_ is now known as singularity00__
[18:45:58] <remline> grawity: Ah, for one, TreeBuilder is part of the standard library, which seems like a good thing.
[18:46:18] <no_gravity> nedbat: One of them seems slow:
[18:46:20] <no_gravity> 1    0.000    0.000    0.647    0.647 ./modules/url_cache.py:1(<module>)
[18:46:39] *** Quits: humbertowoody (~humbertow@187.202.209.28) (Ping timeout: 268 seconds)
[18:46:41] <bjs> no_gravity: that's not a line from -X importtime
[18:46:43] <nedbat> no_gravity: could you pastebin the full output?  Also, -Ximporttime
[18:46:51] <grawity> if that were true, everybody would be using urllib and not requests, for example
[18:47:08] <no_gravity> nedbat: Full output has propriatery data that I cannot paste.
[18:47:38] <bjs> no_gravity: the -X importtime output will tell you how long was spent on each import, and -m profile tells you how long was spent executing each function/file
[18:48:08] <no_gravity> bjs: This? import time:       173 |     112899 |   modules.url_cache
[18:48:11] <bjs> no_gravity: so here it looks like running/importing url_cache took 0.6s
[18:48:12] <bjs> yes
[18:48:43] <no_gravity> What is the unit here? It says "us" on the header.
[18:48:50] <bjs> no_gravity: that's the unit, microseconds
[18:49:37] <no_gravity> Ok. So almost no time in the module and 0.1s cumulative?
[18:49:44] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:49:46] <bjs> no_gravity: that seems like what it is saying yes
[18:51:16] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:adc6:7234:a30e:b0e8) (Remote host closed the connection)
[18:51:32] <no_gravity> Hmm.. how can it take 0.1s?
[18:51:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:51:49] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:752a:ac27:d14a:9d5f)
[18:51:57] <nedbat> no_gravity: why does it seem impossible to you that it take .1s?
[18:52:06] *** Joins: Naan (~Naan@user/naan)
[18:52:12] <nedbat> no_gravity: is that a file of yours? Can you share it?
[18:52:32] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[18:52:47] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[18:53:11] *** Quits: jazzy (~jaziz@172.58.43.167) (Quit: Beddie bye-bye)
[18:53:19] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[18:53:32] <no_gravity> nedbat: I cannot share it. But it seems -X importtime lists all the details so I can tell you soon where those 0.1s are spent.
[18:54:03] <df_data> can anyone tell me how i can get the matches names_list as an extra colurm in my dataframe?? im getting a type error https://bpa.st/UZRA
[18:54:24] *** Quits: singularity00__ (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[18:55:05] <df_data> well if i do df[name] = names_list errors with NameError: name 'name' is not defined
[18:55:11] <no_gravity> nedbat: This seems to be the breakdown: https://bpa.st/BE3Q
[18:55:20] <amoe> How does Poetry know which virtualenv is associated with a given project?
[18:55:30] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:56:08] <grym> amoe: look at the output of `poetry env info -p`
[18:56:28] <no_gravity> Total does not add up to 112899 though.
[18:56:42] <no_gravity> So I am confused what those 112899 cumulative microseconds mean.
[18:56:42] *** Quits: flyback (~flyback@2601:540:8201:1e60:d917:18e:f4c1:e2cf) (Read error: Connection reset by peer)
[18:56:59] <amoe> grym: But how does Poetry get that path?
[18:56:59] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:57:04] <bjs> no_gravity: I mean there is always some extra overhead from the import machinery itself
[18:57:21] <grym> amoe: presumably by calling that codepath inside itself; you'd have to read its source to know
[18:57:29] <no_gravity> bjs: I see. Total only ads up to 26882. So 1/4 of cumulative.
[18:57:30] <bjs> no_gravity: also remember that imports in python form a graph, but the output here is a spanning tree of some kind
[18:57:39] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:58:47] <no_gravity> So what I take from this is: I am not guilty of those 0.8s spent in importing stuff.
[18:58:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[18:59:20] *** Joins: flyback (~flyback@2601:540:8201:1e60:811e:c168:2877:ba60)
[18:59:32] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[18:59:45] <bjs> no_gravity: it seems like cssselect and cssselect.parser are slow to import, perhaps they're doing some work
[18:59:51] <shangxiao> amoe: I just did a quick test to see if I could break `poetry env info`… I unset $VIRTUAL_ENV and it changed the output.  So I'm assuming it just uses that env var?
[18:59:54] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[19:00:43] <no_gravity> bjs: Hmm.. Maybe.
[19:00:47] *** Quits: matkor (~matkor@93.179.197.152) (Quit: Konversation terminated!)
[19:01:24] <amoe> shangxiao: but `poetry env info` works even outside of the virtualenv, even when $VIRTUAL_ENV is unset
[19:01:32] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[19:02:54] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:03:20] <shangxiao> amoe: it works but it doesn't report a virtualenv right?
[19:03:30] <shangxiao> i mean… that's what i'm seeing
[19:03:39] <amoe> for me, it does report a virtualenv
[19:03:42] *** Joins: Fiji (~Fiji@user/fiji)
[19:03:57] *** Joins: wakeup (~wakeup@user/wakeup)
[19:04:01] <wakeup> Hello
[19:04:06] <shangxiao> hello
[19:04:24] <The-Compiler> hello
[19:04:33] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[19:04:45] <amoe> https://stackoverflow.com/questions/65376059/ <-- this seems to be the answer...
[19:06:17] *** Church is now known as HankHill
[19:06:32] <mefistofeles> https://www.thestrugglingdeveloper.com/2020/12/14/python-create-tempfile/ has anyone faced something similar? I'm getting similar errors with github actions when creating/accessing temporary directories with tempfile.TemporaryDirectory()
[19:06:43] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[19:06:55] <wakeup> I need to keep track of an experiment in Python. The experiment could last seconds, minutes, hours or even days (or even more). I want to keep track of the duration of the experiments. So far, I've been using datetime.timedelta and I set its seconds as follows "datetime.timedelta(seconds=(time.monotonic() - start_time))". The problem is that if I
[19:06:55] <wakeup> print that or stringify it, it seems only to print hours:minutes:seconds. In fact, I run an experiment that lasted roughly 5 minutes, and it printed: "0:05:30.676408"
[19:07:05] <wakeup> So, I have 2 questions
[19:07:08] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[19:07:13] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:07:18] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[19:07:47] <wakeup> 1. if I do just "datetime.timedelta(seconds=(time.monotonic() - start_time))", will it keep track of all seconds for all days that the experiment can run for or the seconds are e.g. reset after 1 day (this would not be desirable, of course)
[19:07:57] *** Joins: besnn (~besnn@user/besnn)
[19:08:07] <bjs> mefistofeles: that page is a bit weird, it's lacking indentation in the right place and it says "try create a file" but doesn't give an example of creating a file and how it fails
[19:08:10] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 240 seconds)
[19:08:14] <wakeup> 2. How can I print "days, hours:minutes:seconds"
[19:08:45] <wakeup> so if the experiment lasts say more than one year, days should be more than 365
[19:08:49] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[19:08:58] <anorthall> wakeup: have a look at strftime() in the docs
[19:09:08] <mefistofeles> bjs: true, but it was the only thing I've found with similar issues haha
[19:09:11] <wakeup> so days could be like 100000, in that case, we would have the following years 100000/365
[19:09:13] <wakeup> roughly
[19:09:36] <wakeup> I would be dead by the end of the experiment
[19:09:39] <wakeup> but you got the idea
[19:09:54] <anorthall> oh, it's a delta, so no strftime
[19:09:58] *** Joins: humbertowoody (~humbertow@2806:107e:f:5f0c:21e2:ad5:71e1:1d2d)
[19:10:11] <anorthall> wakeup: well, you can do it manually, dividing the time
[19:10:17] <anorthall> or you can use the pip module humanfriendly
[19:10:23] <anorthall> i use humanfriendly for stuff like this, has nice methods
[19:10:43] <wakeup> yes, I'm not asking for a tool that does 100000/365
[19:10:49] <wakeup> I just want to keep track of all time
[19:10:58] <wakeup> and don't want the time to be truncated after 1 day or 24 hours
[19:11:04] <wakeup> which seems to be happening
[19:11:08] <wakeup> with my current approach
[19:11:16] <wakeup> in other words, after 24 hours, it starts again
[19:11:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:11:49] <anorthall> wakeup: right, i understand
[19:12:23] *** Joins: lastshell (~lastshell@user/lastshell)
[19:13:10] *** Joins: orion (~orion@user/orion)
[19:13:32] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[19:14:33] *** Quits: dvx (~dvx@185.63.97.64) (Ping timeout: 258 seconds)
[19:14:50] <wakeup> the problem is not actually datetime.timedelta
[19:14:56] <anorthall> https://bpa.st/VALA
[19:15:01] <anorthall> i'm not seeing the behaviour you describe wakeup
[19:15:04] <wakeup> I just checked it, it prints like "3 days, hours"
[19:15:10] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Ping timeout: 240 seconds)
[19:15:31] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:15:37] <wakeup> yea
[19:15:55] <wakeup> not sure why an experiment that I run for more than one day then printed just hours
[19:16:00] <wakeup> maybe old code or maybe I am confusing
[19:16:13] <anorthall> are you running an old python or something maybe?
[19:17:01] *** Quits: y1n (~y1n@84-115-64-168.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[19:17:38] *** Parts: lordrishav (~LordRisha@user/lordrishav) (WeeChat 2.8)
[19:17:46] <wakeup> I'm running 3.6, but I think also in the other computer where I run the experiments
[19:17:55] <anorthall> looks like even 2.7 does the same behaviour
[19:18:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:19:00] <SnoopJ> wakeup, can you show us some code (perhaps a http://www.sscce.org/ if you can't share the whole thing) that reproduces the behavior you're talking about? It's hard to tell what's going on from the description alone.
[19:21:25] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[19:23:21] <kittonian> hi all. trying to solve an issue with passlib and totp where if I hard code the token in my script and am fast enough to login, it works just fine, but for some reason, calling it as a variable from context will not work (though I can raise an exception error and see the string entered just fine). Here's a pastebin of the current script. https://pastebin.ubuntu.com/p/SnMstWbpn3/
[19:24:22] *** Joins: matsaman (~matsaman@user/matsaman)
[19:25:33] <The-Compiler> kittonian: maybe there's an extra newline or something in there? Try   raise Exception(repr(mytoken))  maybe, or add an   assert mytoken == '272216'
[19:25:45] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[19:26:44] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:27:31] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:27:47] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:29:04] *** Joins: y1n (~y1n@84-115-65-118.wifi.dynamic.surfer.at)
[19:30:02] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 245 seconds)
[19:30:31] <rendar> every async coroutine, must await its tasks that creates with task_create() or gather() ?
[19:31:15] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:31:37] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:32:43] *** Joins: Pickchea (~private@user/pickchea)
[19:32:48] *** Joins: _Roey (~Roey@user/Roey)
[19:32:50] <kittonian> The-Compiler, notice the mytoken='272216' line is commented out. That was for reference to show that if I hard code it that way, it works perfectly.
[19:32:52] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[19:33:06] <kittonian> It's only not working and returning mytoken as None when I call it from context.REQUEST
[19:33:48] <kittonian> but even when calling it from context.REQUEST, if I raise the exception on mytoken anywhere from line 26 and higher, the error log shows me the correct value from mytoken
[19:34:22] *** Quits: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (Quit: WeeChat 2.8)
[19:34:30] <kittonian> if the exception is raised below line 26 (i.e. below the return) I instead get the something is none exception error and it shows mytoken's value as None
[19:34:47] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:34:52] *** Quits: Roey (~Roey@user/Roey) (Ping timeout: 258 seconds)
[19:34:52] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[19:36:16] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[19:37:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:38:39] *** Joins: fdan (~fdan@192.146.154.3)
[19:38:46] <kittonian> The-Compiler, hmm, this is interesting. I tried the repr(mytoken) suggestion and the error now shows it as '123456' instead of 123456
[19:39:05] <kittonian> does this mean that it is putting single quotes around the string? if so, that would be why this isn't working
[19:39:24] *** Joins: pycurious (~Adium@user/pycurious)
[19:39:52] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:40:01] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[19:40:03] <The-Compiler> kittonian: no, the repr shows you a debug representation of the object, so strings are shown with the quotes
[19:40:15] *** Joins: besnn (~besnn@user/besnn)
[19:40:42] <kittonian> well boo. i thought that might be the solution
[19:40:58] <The-Compiler> kittonian: so, those two values (the '123456' you're printing and the hardcoded '123456') are the exact same. The problem must be something else.
[19:41:30] <The-Compiler> kittonian: well, one more thing I can imagine, but it's unlikely: If you show type(mytoken), I assume that's str?
[19:41:33] <kittonian> worked on this for over 8 hours yesterday and i can't figure anything else out
[19:41:59] <kittonian> good thought. i even tried wrapping it around text() and string() just to be sure. neither worked
[19:42:16] <The-Compiler> kittonian: are you sure the actual *value* is correct? Is it really the same value you're hardcoding?
[19:42:23] <kittonian> yes
[19:42:33] <kittonian> remember it's a totp token so it changes every 30 seconds
[19:42:37] <The-Compiler> yeah
[19:42:58] <The-Compiler> that's why I'm wondering if you really get the corrent token from context.REQUEST, and not something which looks like it but isn't
[19:43:01] <kittonian> to hard code it i wait for google authenticator to switch to the new number, enter it in the script and then try and login before it changes, lol
[19:43:05] <kittonian> that's the only thing that works
[19:43:38] <The-Compiler> if you instead do print(mytoken) and do a failing login attempt, do you get the same you see in google authenticator?
[19:44:08] <fdan> nedbat is it possible to do this without collections?
[19:44:09] <fdan> https://gist.github.com/nedbat/662831f7d7f95a39f1499872e5e256bb
[19:44:17] <The-Compiler> kittonian: also I'd recommend replacing your "return (None, None)" by exceptions being raised, so you can make sure it's actually the kind of error you think it is
[19:45:02] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[19:45:54] <The-Compiler> kittonian: wait, I'm confused - you say it prints as '123456' but then you say it's None?
[19:46:14] <The-Compiler> anyways, I'll be afk for a bit
[19:46:16] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[19:48:25] <sharperguy> Is it really important to follow E302, leaving two lines before a function definition?
[19:49:02] <nyuszika7h> not really, it's a matter of opinion, but it's recommended by PEP 8
[19:49:06] <nyuszika7h> it won't change the functionality whatsoever
[19:49:58] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:50:33] <sharperguy> hmm, I just wonder, is it something people tend to follow? I just noticed since I enabled linting in my editor i get a lot of messages about it. I could disable that message or fix it, not really sure which direction to go.
[19:50:49] <nyuszika7h> I like to follow most of PEP 8, except the line length, I set that at 120
[19:51:34] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:52:43] *** Joins: gvsa123 (~gvsa123@d23-17-233-182.abhsia.telus.net)
[19:52:56] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:53:23] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:53:24] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:55:05] *** Quits: fortuno51 (~fortuno51@78.10.204.200) (Remote host closed the connection)
[19:55:27] *** Joins: fortuno51 (~fortuno51@78.10.204.200)
[19:56:32] *** Quits: fortuno51 (~fortuno51@78.10.204.200) (Remote host closed the connection)
[19:57:44] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[19:57:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:58:28] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[19:59:01] <raxor2k> bjs: are you here
[20:00:20] <no_gravity> What surprises me: Using the -B parameter seems to have absolutely no impact on the time repeat executions of the same python programs take. Any ideas why?
[20:00:37] <kittonian> to be clear, what I said was it will print the exception as long as it's raised on line 26 or above. if it is below the return(None, None) I get the something is none exception error and is shows mytoken as None
[20:00:41] <kittonian> it's very strange
[20:01:04] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:01:53] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 268 seconds)
[20:01:55] <kittonian> it's got to be how it's pulling that variable because if I enter 111111 for the token i get the error showing the token but if i enter the real token from google authenticator it comes back as none, which means it is sending the token and trying to auth it and returning it as None because something is not right
[20:03:48] *** Joins: ouzel8_ (~ouzel8_@shams.boastblast.com)
[20:03:54] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:04:12] <bjs> no_gravity: do you already have .pyc files
[20:04:34] <no_gravity> bjs: I did the tests for "-B" without any .pyc files.
[20:04:52] <no_gravity> Probably compilation is so fast it does not play a role?
[20:05:10] <no_gravity> Or do the complied files not get used for some reason?
[20:05:14] <bjs> no_gravity: it does play a role
[20:05:35] <bjs> no_gravity: on `import` it has to parse and compile the files, that could account for many miliseconds of execution
[20:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[20:05:41] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:06:08] <SnoopJ> and particularly in the case of imports, it might be prohibitively expensive to repeat the work of compilation, so it's cached to a file by default instead
[20:06:11] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:752a:ac27:d14a:9d5f) (Quit: Leaving...)
[20:06:30] <no_gravity> bjs: Hmm... Well, testing just walltime with "time myscript.py" I don't see a difference above the noise level.
[20:06:49] <SnoopJ> no_gravity, it's possibly `myscript.py` is not enough code to notice the difference
[20:07:32] <bjs> no_gravity: perhaps your program is so noisy you can't tell
[20:07:44] *** Gustavo6046_ is now known as Gustavo6046
[20:07:51] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:07:56] <bjs> or perhaps the .pyc files already exist for most of the imports
[20:08:15] *** Joins: Fiji (~Fiji@user/fiji)
[20:08:17] <bjs> -B just means it won't generate them, not that it won't use them iirc
[20:08:33] <no_gravity> bjs: Where would I look for pyc files of the imports?
[20:08:44] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:08:47] <bjs> no_gravity: will depend on the imports :P
[20:08:48] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:08:53] <no_gravity> bjs: Say "re"
[20:09:07] <SnoopJ> usually in __pycache__/ alongside the files whose compilation is being cached
[20:09:17] *** Joins: mickey (~user@user/mickey)
[20:09:19] <no_gravity> SnoopJ: Ok, but where are the imports?
[20:10:07] <no_gravity> Ah yes, everything in /usr/lib/python3/dist-packages/ seems to have pyc files.
[20:10:38] <SnoopJ> yea, as bjs says this depends on the thing being imported. In general you can look at __file__ on a module to try and get a sense for where it came from.
[20:10:43] <no_gravity> Does that happen when they are installed?
[20:10:50] <SnoopJ> or inspect.getfile(mod)
[20:11:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:11:53] <SnoopJ> no_gravity, the runtime by default will test if a file needs to be recompiled (because it's changed), and if it does not, it uses the cached result if there is one. This check happens for most execution (including imports)
[20:12:07] <no_gravity> SnoopJ: Yes
[20:12:13] <bjs> no_gravity: when you import something inside a package it will make a .pyc iirc
[20:12:15] <SnoopJ> yes?
[20:12:24] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:12:26] <no_gravity> SnoopJ: That is what I expected.
[20:12:26] *** Quits: gvsa123 (~gvsa123@d23-17-233-182.abhsia.telus.net) (Quit: Leaving)
[20:12:35] <no_gravity> bjs: I see.
[20:12:57] <bjs> no_gravity: so e.g. if you `import requests` then somewhere there's lib/requests/__init__.py
[20:12:58] *** Joins: thiras (~thiras@user/thiras)
[20:13:04] <no_gravity> bjs: Yes
[20:13:07] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[20:13:24] <bjs> and that'll import stuff and then those will make a lib/requests/__pycache__/sessions.pyc or whatever
[20:13:36] <no_gravity> Ok
[20:13:56] <bjs> no_gravity: so if you delete your own __pycache__/ then run with -B and import requests
[20:13:58] <SnoopJ> https://www.python.org/dev/peps/pep-3147/#flow-chart
[20:14:00] <bjs> it'll still see the pyc
[20:14:23] <rendar> bjs: in the end i have opted for this design https://bpa.st/KUDQ -- problem is: do i have to await in the opcode async execute?
[20:14:46] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[20:15:32] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[20:16:29] *** Joins: Jefren (~Jefren@70.35.66.234)
[20:16:41] *** Quits: y1n (~y1n@84-115-65-118.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[20:16:42] <bjs> rendar: in which execute? you have lots of them here
[20:16:59] <rendar> bjs: the *async ones
[20:17:04] <bjs> rendar: the async ones do await
[20:17:04] <rendar> in the end of the file
[20:17:31] <rendar> bjs: i had to await from there, otherwise asyncio told me some tasks have been never awaited
[20:17:49] <bjs> rendar: well I mean, you can await there, you could await somewhere else
[20:18:35] *** Joins: Jefren1 (~Jefren@70.35.66.51)
[20:18:40] *** Quits: Jefren4 (~Jefren@206.253.157.196) (Ping timeout: 240 seconds)
[20:18:50] <bjs> we talked about this, you dont *have* to await inside an `async def`, but you also don't want to just throw tasks out and forget about them
[20:18:54] <rendar> bjs: ok, the point is all async opcode get gathered, so i can also await from there
[20:18:55] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:18:58] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:18:59] <rendar> all async opcode will run concurrently
[20:19:02] <bjs> rendar: you have to decide what you want the semantics to be and where you want to wait for the tasks to finish
[20:19:24] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[20:20:31] <kittonian> ok, i think i may have an idea. if mytoken='123456' works but mytoken = context.REQUEST.get('intranet_token', None) does not, perhaps I need to wrap the value of intranet_token in single quotes and that is not happening right now. How would I change that line to ensure there are single quotes? I tried creating a new variable underneath mytoken like: mytoken2 = "'mytoken'" but that just returns 'mytoken' as the value instead of t
[20:20:31] <kittonian> he the actual value of mytoken
[20:20:40] *** Quits: Jefren (~Jefren@70.35.66.234) (Ping timeout: 240 seconds)
[20:20:56] <rendar> bjs: yep, far enough
[20:22:10] *** Quits: ubert (~Thunderbi@178.115.35.155.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[20:23:00] *** _Roey is now known as Roey
[20:23:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[20:23:40] *** Joins: Blankspace (~androirc@user/blankspace)
[20:25:12] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[20:25:14] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:25:22] *** Joins: manuels (~manuel@80.211.205.88)
[20:25:40] *** Joins: Fiji (~Fiji@user/fiji)
[20:26:47] *** Quits: Fiji (~Fiji@user/fiji) (Client Quit)
[20:26:50] *** Joins: annomy (~annomy@103.167.232.4)
[20:27:06] *** Joins: cheater (~Username@user/cheater)
[20:27:50] *** Parts: annomy (~annomy@103.167.232.4) (WeeChat 3.2)
[20:28:21] *** Joins: annomy (~annomy@103.167.232.4)
[20:28:31] *** Quits: annomy (~annomy@103.167.232.4) (Quit: WeeChat 3.2)
[20:29:10] *** Joins: y1n (~y1n@84-115-65-118.wifi.dynamic.surfer.at)
[20:29:11] *** Joins: sh4 (~sh4@user/sh4)
[20:30:18] *** Joins: ganchan (~thomas_w@user/ganchan)
[20:30:33] <sh4> does an op like foo in ['str1', 'str2'] heap-allocate a new list each time the statement is executed? the bytecode looks like LOAD_CONST   4 (('foo', 'bar', 'baz'))
[20:31:26] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Quit: WeeChat 2.8)
[20:31:50] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:06] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[20:32:08] <nedbat> sh4: the compiler changes your list to a tuple (since the answer is the same), and uses a constant tuple for it.
[20:33:26] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[20:33:34] <sh4> does it need a malloc for that, nedbat ?
[20:33:41] *** Joins: shangxia1 (~davids@124.182.71.141)
[20:33:50] <nedbat> sh4: not each time the code is run.
[20:33:54] *** Joins: node1 (~node1@user/node1)
[20:34:32] <sh4> so it allocates it on first execution and puts it to a cache ?
[20:35:27] *** Quits: shangxiao (~davids@101.181.142.185) (Ping timeout: 245 seconds)
[20:36:44] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:9f2b:d10d:3987:752e)
[20:37:12] <nedbat> sh4: when it reads the compiled code object from disk, the tuple is part of that unmarshaled data
[20:37:12] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:37:31] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[20:37:44] *** Joins: mattil (~mattil@87-92-48-230.bb.dnainternet.fi)
[20:38:14] <sh4> cool, so it's part of the ".text" section in C terminology ?
[20:38:27] <nedbat> sh4: ok :)
[20:39:02] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:39:08] *** Joins: Betal (~Betal@user/betal)
[20:39:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:41:28] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:42:51] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[20:42:51] <df_data> hi all, im looping through a dataframe but its only saving the last recorded item, how can i solve this: https://bpa.st/3D4A
[20:43:13] <df_data> is someone able to point me in the right direction? thank you
[20:45:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:45:10] *** Joins: manin (~x@185.242.190.95)
[20:45:14] <df_data> data prints fine with this just cannot save it https://bpa.st/FKKA so its not appending correctly
[20:46:07] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[20:46:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:49:39] <InPhase> df_data: You are reassigning df1 each loop.
[20:49:39] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:49:50] <InPhase> df_data: So of course it does not have the previous elements.
[20:50:06] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:50:53] <InPhase> df_data: Note that there is a pd.concat and a df.append that you can use to accumulate collections in a loop.
[20:51:07] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:51:44] *** Joins: Barones (~Barones@2804:48dc:8500:0:b1db:56aa:e17a:7834)
[20:51:53] *** Quits: raxor2k (~raxor2k@28.109-247-20.customer.lyse.net) ()
[20:51:56] <df_data> @InPhase: thanks for the reply. So replace pd.concat with df.append?
[20:52:02] *** domhnall is now known as Guest8354
[20:52:03] *** Quits: Guest8354 (~developer@user/domhnall/x-2887755) (Killed (cadmium.libera.chat (Nickname regained by services)))
[20:52:24] <InPhase> df_data: Replace?  You have neither.
[20:53:09] <df_data> I have a df2 = pd.concat([d, df2])
[20:53:09] <df_data>   
[20:53:22] <InPhase> Oh, the other paste.
[20:53:37] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[20:53:39] <InPhase> So your logic is simply wrong there.
[20:53:56] <InPhase> You concat, then assign it to df2, then reassign df2 and wipe out your concat.
[20:54:25] <df_data> How do I do it?
[20:54:27] <InPhase> If you assigned this concatenation to d your life would probably go better.  :)
[20:54:35] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:54:44] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:54:45] <kittonian> ok, i think i know what's going on. not 100% but something I am trying
[20:54:50] <kittonian> this line: mytoken = str(context.REQUEST.get('intranet_token', 'utf-8'))
[20:55:06] <kittonian> should work but does not. i need to convert the intranet_token variable to unicode
[20:55:12] <kittonian> what am I doing wrong?
[20:56:01] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:56:05] <InPhase> df_data: That's two errors with assignment in two pastes.  That tells me you will benefit strongly by setting aside a few minutes to watch nedbat's video at the top of this link:  https://nedbatchelder.com/text/names.html
[20:56:10] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[20:56:16] *** Joins: cth (~Cthulchu@213.174.21.101)
[20:56:25] <kittonian> i saw my error. it didn't work
[20:58:03] <df_data> I did try d.append(df2)
[20:58:03] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 258 seconds)
[21:00:29] *** schumaml4 is now known as schumaml
[21:01:04] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[21:01:13] <df_data> Is that not right @InPhase ?
[21:01:38] <InPhase> An append should work okay.
[21:02:26] *** Joins: aead (~aead@ec2-52-2-178-231.compute-1.amazonaws.com)
[21:02:58] *** Joins: entuland_ (~entuland@user/entuland)
[21:03:58] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[21:04:04] *** Joins: fdan (~fdan@192.146.154.3)
[21:04:29] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:05:23] <InPhase> df_data: Note that unlike list appends, a dataframe append requires assignment of the result.  Check the pandas docs for examples.
[21:05:38] *** Joins: fortuno51 (~fortuno51@78.10.204.200)
[21:06:10] *** Quits: entuland__ (~entuland@user/entuland) (Ping timeout: 240 seconds)
[21:08:48] <df_data> Thanks
[21:09:17] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:10:50] *** Joins: daoudr_ (~daoudr@101.17.104.92.dynamic.wline.res.cust.swisscom.ch)
[21:12:40] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:696d:203d:c02:8bef) (Ping timeout: 240 seconds)
[21:12:45] *** Joins: torandu (~sean@94.10.125.197)
[21:14:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:14:38] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:16:55] *** Quits: y1n (~y1n@84-115-65-118.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[21:17:08] *** Parts: Blankspace (~androirc@user/blankspace) (Quit)
[21:17:19] *** Quits: fortuno51 (~fortuno51@78.10.204.200) (Remote host closed the connection)
[21:18:10] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 240 seconds)
[21:18:19] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[21:18:27] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:18:30] *** Joins: kosh (~kosh@user/kosh)
[21:19:40] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[21:20:01] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[21:20:06] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[21:20:49] <aphysically> wow all the ways to get subprocess output before it exits without potential I/O deadlock or potentially blocking indefinitely look insane
[21:20:54] *** Joins: akinode (~akinode@2a02:908:1394:cce0:f7:5db1:33e7:f8e)
[21:22:04] *** Joins: ubert (~Thunderbi@178.115.48.151.wireless.dyn.drei.com)
[21:23:01] <aphysically> .....I think I'll just ignore it?
[21:23:31] *** Joins: Croves (~Croves@2804:14c:578b:9102:f56f:51c0:47c9:609a)
[21:23:34] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:23:35] *** Parts: Croves (~Croves@2804:14c:578b:9102:f56f:51c0:47c9:609a) ()
[21:23:38] <aphysically> right now I'm doing this https://bpa.st/FDZQ which I (think) has the problem where it can block indefinitely if the output doesn't end in a \n or deadlock under certain buffer I/O situations
[21:23:54] <grym> aphysically: you're closing in on pexpect, there
[21:23:58] <grym> https://pexpect.readthedocs.io/en/stable/
[21:24:03] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:24:55] <aphysically> there's a typo in the line assignment above (remove the trailing : )
[21:26:24] <aphysically> https://bpa.st/RYBA
[21:26:33] *** Joins: magla (~gelignite@55d4a2ba.access.ecotel.net)
[21:26:36] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Quit: Leaving.)
[21:27:16] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[21:27:32] <aphysically> I hate to use external modules for a simple shell script and I haven't decided when to cut my losses and get over it yet
[21:27:40] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:28:12] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[21:28:54] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[21:29:06] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:19] *** Joins: y1n (~y1n@84-115-65-79.wifi.dynamic.surfer.at)
[21:30:25] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[21:30:31] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:31:03] *** Joins: c10l (~c10l@89.34.167.207)
[21:31:14] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Client Quit)
[21:32:45] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:33:46] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[21:33:52] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[21:33:58] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[21:34:10] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[21:35:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:35:27] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[21:35:40] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[21:36:04] *** lukedashjr is now known as luke-jr
[21:37:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:38:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:39:35] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[21:39:45] *** Joins: thiras (~thiras@user/thiras)
[21:39:51] *** Joins: fdan (~fdan@192.146.154.3)
[21:39:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:40:09] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:40:12] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:40:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:40:54] <fdan> can i do this without collections https://gist.github.com/nedbat/662831f7d7f95a39f1499872e5e256bb
[21:41:01] *** Joins: jinsun (~quassel@user/jinsun)
[21:41:39] <SnoopJ> fdan, sure
[21:41:39] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:42:05] *** Joins: mickey (~user@user/mickey)
[21:42:13] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[21:42:41] <fdan> SnoopJ could you share me a snippet please
[21:42:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:43:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:43:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:43:47] <SnoopJ> fdan, you can replace L11 with `d = dict()` and replace L14 with `d.setdefault(x, []).append(y)`
[21:43:59] <gitesh> I want to program sound card of my computer, actually i bought a new bluetooh speaker, so now i have two bluetooth speakers, i want to be able to connect them both to my computer as required, and when I am doing courses i want to use one speaker and for doing like listening music i want to use another speaker. How shall I do that in python?
[21:44:01] <SnoopJ> this is definitely uglier, so I wouldn't recommend it, defaultdict is nice
[21:44:27] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:45:15] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[21:45:40] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[21:45:44] *** Joins: sazawal (~sazawal@106.213.43.60)
[21:45:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:46:10] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 240 seconds)
[21:46:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:46:46] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:46:55] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:48:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:48:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[21:50:13] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:52:52] *** Joins: Jefren2 (~Jefren@70.35.66.227)
[21:53:02] *** Joins: networker (~whatever@118.69.128.37)
[21:53:16] <networker> is there anyhow i can pipe stdout of a specific command to another via subprocess ? like subprocess.check_output(["cat", "file.txt"]) to ["grep", "string"], in general the way it is done on cli is "cat file.txt | grep string"
[21:53:33] *** Quits: dece (~dece@dece.space) (Quit: Quit)
[21:54:17] *** Quits: Jefren1 (~Jefren@70.35.66.51) (Ping timeout: 248 seconds)
[21:54:25] <networker> when i tried subprocess.check_output(["cat", "file.txt", "|", "grep", "string"]), things didn't go well
[21:54:33] <networker> it exit with status 1
[21:55:10] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 240 seconds)
[21:56:21] *** Joins: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:56:25] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[21:56:36] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:56:46] <nedbat> fdan: why do you want to do it without collections?
[21:57:14] *** Quits: rsx (~dummy@ppp-188-174-137-163.dynamic.mnet-online.de) (Quit: rsx)
[21:57:38] *** Quits: mattil (~mattil@87-92-48-230.bb.dnainternet.fi) (Read error: Connection reset by peer)
[21:58:00] *** Joins: Kvothe (~weechat@user/elodin)
[21:59:22] <xheimlich> I don't know how Python has a reputation for being a small upgrade from bash for shell scripts that are a notch over one-off.
[21:59:51] <xheimlich> it's weirdly complicated to do shell stuff in python (compared to raku even) and that's like ok, Python is clearly not designed to make that easy.
[22:00:10] <SnoopJ> xheimlich, it is correct to say that Python was not designed for this specific use; it is a general-purpose language
[22:01:22] <xheimlich> Also bash is pretty good. Loaded with foot-arrows or whatever, but if you half-ass unit-test scripts...
[22:01:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:02:03] <grym> shellcheck, and its origin story, never cease to impress/amaze me
[22:02:28] <networker> well most languages are general purposes anyway, guess i have to use shell=True :{
[22:02:29] <networker> :P
[22:02:34] <SnoopJ> bash is pretty good, yep
[22:02:56] *** Joins: nergar (~Nergar@177.225.152.13)
[22:03:06] <grym> networker: you need subprocess.PIPE instead of trusting "|" to work, and two processes
[22:03:09] <SnoopJ> networker, what you tried passed "|" as an argument. Python doesn't imbue it with the special meaning it has in a shell. I'm not sure if shell=True is what you want, but I know you can do this with a bunch of subprocess.PIPE juggling which is probably going to be annoying.
[22:03:30] <grym> there are things like plumbum that attempt to make this juggling easier
[22:03:38] <grym> i have not used them because i basically don't do this in python a lo t
[22:03:44] <grym> but they're out there
[22:04:46] *** Joins: Cache_Money (~Cache_Mon@2601:602:a000:4be2:543e:91ce:c63f:b5d4)
[22:05:02] <gitesh> I want to program bluetooth of my pc in python
[22:05:06] <gitesh> where is it done?
[22:05:11] <gitesh> any suggestions?
[22:05:41] <grym> networker: https://bpa.st/K4IQ  e.g
[22:06:34] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[22:06:36] *** Joins: dece (~dece@dece.space)
[22:07:40] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Client Quit)
[22:09:28] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:10:02] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[22:10:24] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[22:10:52] *** Joins: bss (bss@rie.incorporeal.org)
[22:11:14] *** Joins: molt (~molt@79.140.150.21)
[22:11:18] <networker> grym: ok thk for that let's me see
[22:11:32] <networker> SnoopJ: idk but i think there is a case where i used to tried with shell=True and it worked
[22:11:40] <networker> not sure if it was pipping or not tho
[22:14:12] <networker> grym: that's weird, somehow i still return and exit with non-zero
[22:14:19] <networker> what was the version of your python ?
[22:14:20] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 258 seconds)
[22:15:03] *** Joins: Pickchea (~private@user/pickchea)
[22:16:00] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:16:15] *** Joins: txtsd (~txtsd@user/txtsd)
[22:16:40] <grym> networker: 3.8.2
[22:16:40] *** Quits: aead (~aead@ec2-52-2-178-231.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[22:16:47] <networker> Hm, mine is 3.9.2
[22:16:50] <grym> sec
[22:16:52] *** Quits: y1n (~y1n@84-115-65-79.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[22:17:05] <networker> still, i don't think that is the main problem tho
[22:17:44] *** Quits: dece (~dece@dece.space) (Quit: Quit)
[22:17:53] <grym> works fine
[22:18:05] <networker> 3.9.2 ?
[22:18:19] <grym> uh, 3.9.4
[22:18:20] <grym> https://bpa.st/3PTQ
[22:18:36] <networker> wait wut
[22:18:36] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 272 seconds)
[22:18:41] <networker> this is weird now
[22:18:46] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[22:18:49] *** Quits: Cache_Money (~Cache_Mon@2601:602:a000:4be2:543e:91ce:c63f:b5d4) (Ping timeout: 246 seconds)
[22:19:04] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[22:19:47] *** Joins: dece (~dece@dece.space)
[22:19:53] <grym> maybe you're grepping for something that's not there
[22:20:05] <networker> yea maybe, let's me try again
[22:20:43] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[22:22:30] *** Joins: Voxel (~Voxel@ip178-67-155-188.onego.ru)
[22:23:26] <networker> ok, probably you are right
[22:23:31] <networker> it is working now, out of nowhere
[22:25:58] *** Joins: Akuli (~Akuli@82-203-160-234.bb.dnainternet.fi)
[22:26:01] <networker> grym: also is it necessary that i must use Popen() ?
[22:26:15] <grym> networker: probably not
[22:27:39] <networker> well at least it works now
[22:27:45] <networker> thk
[22:27:52] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[22:29:27] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[22:29:50] *** Joins: y1n (~y1n@84-115-65-79.wifi.dynamic.surfer.at)
[22:30:46] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[22:31:23] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:31:29] *** Joins: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com)
[22:31:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[22:33:09] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[22:35:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:35:27] *** Joins: W1seguy (W1seguy@d51A480B1.access.telenet.be)
[22:35:57] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[22:35:58] <aphysically> I might be able to use asyncio? I think something like this avoids the blocking problem, and I think I can use run instead and also be portable? https://stackoverflow.com/a/34114767/1561048
[22:36:03] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:36:07] <aphysically> not sure if this would work around the deadlock too
[22:37:11] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[22:37:20] *** Quits: inom (~inom@176.59.111.80) (Remote host closed the connection)
[22:37:44] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[22:37:56] *** Quits: onelegend (onelegend@wireguard/tunneler/onelegend) (Client Quit)
[22:37:59] *** Joins: inom (~inom@176.59.111.80)
[22:38:19] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[22:39:18] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:40:12] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[22:40:23] *** Joins: vali (~vali@84-115-216-199.cable.dynamic.surfer.at)
[22:41:44] <ttkpy> hello python-folks .. the last time I wrote python for a living was 2012, and I expect best practices might have changed a bit since then
[22:41:53] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[22:42:00] <ttkpy> is "nose" still the go-to for running unit tests, or is there a new thinger we should be using instead?
[22:42:45] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[22:42:58] *** Quits: onelegend (onelegend@wireguard/tunneler/onelegend) (Client Quit)
[22:43:42] <Yhg1s> ttkpy: nope, it really isn't. pytest or python -m unittest.
[22:43:56] <ttkpy> we have a "tests" subdirectory full of scripts using unittest to test our code, and would like to have something that runs all of the tests therein and aggregate statistics
[22:43:59] <aphysically> I don't know this still seems pretty insane
[22:44:06] <ttkpy> thanks Yhg1s :-) I'll look at pytest
[22:44:13] <Yhg1s>  ttkpy: yes, that's what those do.
[22:44:34] *** Parts: sh4 (~sh4@user/sh4) (Leaving)
[22:44:35] <InPhase> ttkpy: Make sure to use Python3 now.  :)
[22:44:51] <ttkpy> heh yes! :-D we're using python 3.6
[22:45:08] <InPhase> A bit dated there.
[22:45:38] <graingert[m]> ttkpy: That's EOL in a few months
[22:45:51] *** Joins: node1 (~node1@user/node1)
[22:46:11] <InPhase> ttkpy: You might as well start anything new on 3.9 or at least 3.8
[22:46:25] <ttkpy> *shrug* we're a CentOS shop, so we use the supported python3.  It is The Way
[22:47:05] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Ping timeout: 248 seconds)
[22:47:15] <ttkpy> when we start using whatever succeeds CentOS (Rocks Linux, or whatever) we'll use whatever python3 it supports.
[22:47:16] *** Joins: johannespirmann (~johannesp@p200300f467023e72adb23bda3a986ae4.dip0.t-ipconnect.de)
[22:47:28] <grym> ttkpy: nb that 3.6 loses support from python.org in december, then
[22:47:45] <ttkpy> *nod* thanks
[22:47:48] <grym> ttkpy: good news though, pytest runs unittest tests
[22:48:15] <ttkpy> yeah :-) I'm reading the pytest docs and it looks like exactly what we need
[22:48:36] <ttkpy> y'all rock, thanks for the help
[22:48:36] <InPhase> CentOS seems to be a constant downhill slope of deprecation.  I have to deal with that on some servers, and it gets in the way.
[22:49:06] *** Joins: aead (~aead@ec2-52-2-178-231.compute-1.amazonaws.com)
[22:50:52] <ChrisWarrick> RHEL has an official way to access a more modern python version these days: https://access.redhat.com/support/policy/updates/rhel8-app-streams-life-cycle
[22:52:06] *** Joins: wilk_ (~wilk@user/wilk)
[22:53:00] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[22:53:18] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[22:55:16] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 272 seconds)
[22:55:16] *** wilk_ is now known as wilk
[22:56:39] *** Quits: Barones (~Barones@2804:48dc:8500:0:b1db:56aa:e17a:7834) (Remote host closed the connection)
[22:56:54] *** Joins: Barones (~Barones@2804:48dc:8500:0:3100:1852:23b9:80b6)
[23:00:49] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Quit: Leaving)
[23:02:10] *** Joins: Naan (~naan@user/naan)
[23:05:01] <jim> is there anything besides __file__ to tell me the dir a running script is in?
[23:05:09] *** Joins: niv (~niv@limbo.cypherpunks.io)
[23:07:31] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[23:09:18] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[23:09:31] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Remote host closed the connection)
[23:09:58] <kosh> ttkpy, in general I would not use the system python for anything other than the system, installing packages into it with things like pip can break things
[23:10:27] *** Quits: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[23:10:39] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[23:10:50] *** Joins: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:11:52] *** Quits: entuland_ (~entuland@user/entuland) (Ping timeout: 252 seconds)
[23:11:58] *** Joins: slav0nic (slav0nic@python.su)
[23:12:19] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:13:03] <nedbat> jim: __file__ tells you the directory containing the script.  iirc, you are running in hexchat, which doesn't have that?
[23:13:04] <SnoopJ> jim, __file__ tells you where the file is if one even exists. Is it insufficient for some need you're having?
[23:13:08] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[23:13:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:13:44] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[23:14:01] <jim> nedbat, it used to :/
[23:14:21] <nedbat> jim: there isn't another way that I know of.
[23:14:54] <jim> ok, good enough... I'll ask on hexchat, see if I can get them to fix that
[23:15:16] *** Quits: rendar (~rendar@user/rendar) ()
[23:15:27] <jim> thanks all
[23:16:18] <jim> SnoopJ, the hexchat and script is reporting that __file__ does not exist
[23:16:25] *** Quits: y1n (~y1n@84-115-65-79.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[23:17:08] <nedbat> jim: try this:   def foo(): pass;;  print(foo.__code__.co_filename)
[23:17:13] *** Quits: computeiro (~Wender@189.37.69.241) (Quit: Leaving)
[23:17:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[23:17:40] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:19:15] <disi> SnoopJ: (re: urllib3 missing reason from yesterday) turns out the server (Jira) doesn't send a reason...
[23:19:21] <jim> nedbat, I'd definitely prefer the old __file__ way, it brought me to the exact dir I needed, and for the right reason... there's also a way to ask for hexchat's config dir, that's one dir out, which I'd have to add (and that doesn't feel right)
[23:19:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:19:38] <nedbat> jim: did my hack work?
[23:19:58] <jim> gotta try it to know that :) one sec...
[23:20:09] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[23:20:48] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[23:20:57] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Client Quit)
[23:20:59] <ttkpy> kosh - yes, in an enterprise environment installing via pip is a paddling offense.  It's either an RPM or a project-local install or nothing.
[23:22:47] *** Quits: networker (~whatever@118.69.128.37) (Quit: Leaving)
[23:23:13] <InPhase> ttkpy: Have you seen the advances with using venv since your return to Python?
[23:23:44] <ttkpy> InPhase - I've seen it mentioned here, but don't know much about it except by context
[23:23:47] <InPhase> ttkpy: This brings you project-local pip.
[23:24:03] <ttkpy> project-local pip sounds like a win
[23:24:15] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[23:24:22] <jim> nedbat, I changed it to this: def foo(): pass;;  print("filename of dummy func foo is " + foo.__code__.co_filename) but got: SyntaxError: invalid syntax and it looks like it's pointing at the second semicolon
[23:24:46] <jim> lemme take my change out temporarily
[23:24:48] <ttkpy> as a developer, I like being able to install what I need.  but the sysadmins need to be able to manage and turn up systems using yum/rpm.  project-local installs are a neat workaround which gives everyone what they need.
[23:24:48] <nedbat> jim: the semicolons are an IRC shorthand. you need to put this across three lines
[23:24:49] <SnoopJ> disi, I see. Is it using one of the defined HTTP codes, or an unspecified one?
[23:24:49] <grawity> I don't think you were supposed to 1) put all of it in one line, 2) with the semicolons
[23:24:55] <SnoopJ> s/defined/specified/
[23:25:00] <SnoopJ> they should all be defined :)
[23:25:01] <jim> and muck with the ;s
[23:25:04] * ttkpy will look more closely at venv
[23:25:08] <InPhase> ttkpy: venv is a built-in since 3.3
[23:25:14] <ttkpy> very cool
[23:26:09] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[23:26:18] *** Joins: d0ku (~d0ku@178.43.198.70.ipv4.supernova.orange.pl)
[23:26:23] <aphysically> can I name something 'list' as an instance variable in a class or is that still bad practice since list() means something
[23:26:39] <pragmaticenigma> that's bad practice
[23:26:57] <remline> Is there a more pythonic pattern for 'if as_expected: ... else: assert False' ?
[23:27:06] <pragmaticenigma> You should try to find variable names that are more descriptive of what the list represents
[23:27:28] <jim> trying unfolding the foo def into separate lines...
[23:27:34] *** Joins: entuland (~entuland@user/entuland)
[23:27:48] <grawity> remline: I kind of want to say 'assert(not as_expected); ...'
[23:28:06] <disi> SnoopJ: i've reproduced with multiple codes (first was 201, later was 200 and also 400).
[23:28:59] <InPhase> remline: You should almost always favor raising an exception over an assert.
[23:29:05] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 268 seconds)
[23:29:10] *** Quits: d0ku (~d0ku@178.43.198.70.ipv4.supernova.orange.pl) (Client Quit)
[23:29:21] *** Joins: d0ku (~d0ku@178.43.198.70.ipv4.supernova.orange.pl)
[23:29:37] <jim> nedbat, your hack (with some small alts) worked!
[23:29:38] <KirkMcDonald> `if not as_expected: raise IDidNotExpectThatError`
[23:29:50] *** Joins: Gudddu (~Guddu@190.84.88.92)
[23:30:09] <jim> UnexpectedError
[23:30:33] *** Joins: y1n (~y1n@84-115-65-79.wifi.dynamic.surfer.at)
[23:31:08] <InPhase> except IDidNotExpectThatError: OhWaitIDid()
[23:31:48] <remline> InPhase: Ah, I'll try that. I haven't used exceptions yet. What is the main advantage over asserts for "coding error" traps?
[23:32:08] <InPhase> remline: That you can catch and handle them, rather than just crash the program.
[23:32:23] <KirkMcDonald> I mean, you can catch an AssertionError, if you really want to.
[23:32:24] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[23:32:30] <InPhase> remline: If you have a very large program, it randomly dying on you all the time is not great.
[23:32:34] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[23:32:46] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[23:33:04] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[23:33:14] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[23:33:29] <SnoopJ> disi, ah, those are all specified, so there's not really any reason to send the reason-phrase, and I believe the spec allows you to omit it
[23:33:35] <KirkMcDonald> An assert statement is strange because it can go away; you should never, ever use one for actual program logic.
[23:33:51] <SnoopJ> I should say there isn't a *requirement* to send them. There's definitely a reason: so a human can read it!
[23:34:12] <KirkMcDonald> You use them to assert that an invariant of your program has not been violated.
[23:34:32] <disi> SnoopJ: interesting! TIL... was wondering why i've been struggling to find a bug for this haha
[23:34:36] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[23:34:50] <remline> KirkMcDonald: Yes, that is good to keep in mind. Its bad when non-debug configurations optimize away a real part of the program!
[23:34:54] <InPhase> KirkMcDonald: Right.  Brain was in C++ mode assert criticism.
[23:34:58] *** Joins: pacbard (~pacbard@user/pacbard)
[23:35:47] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Client Quit)
[23:37:33] *** Quits: johannespirmann (~johannesp@p200300f467023e72adb23bda3a986ae4.dip0.t-ipconnect.de) (Quit: Leaving...)
[23:40:50] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[23:42:14] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[23:43:54] <jim> nedbat, your hack returns a <class 'str'>, and includes the script filename at the end... is it better to regexp-chop it off, or convert it into another object?
[23:44:36] <nedbat> jim: it depends what you want to do with it.  __file__ would also be a str, with the filename at the end.
[23:44:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:45:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:47:16] *** Joins: shla (~root@user/shla)
[23:47:51] <jim> nedbat, ok... hackin away...
[23:47:58] <jim> and thanks
[23:48:36] *** Parts: shla (~root@user/shla) (The Lounge - https://thelounge.chat)
[23:48:36] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[23:50:26] *** Joins: ckdcreation (~ckdCreati@147.55.130.34)
[23:50:29] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[23:50:33] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:9f2b:d10d:3987:752e) (Ping timeout: 258 seconds)
[23:50:50] <jim> got it: turned it into a path object, and then got its parent
[23:51:13] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 246 seconds)
[23:51:34] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:85bb:303f:a204:f0f2)
[23:51:53] *** Quits: y1n (~y1n@84-115-65-79.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[23:51:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562)
[23:52:04] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:53:15] <jim> .lskeys
[23:53:25] <jim> damn :)
[23:53:40] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[23:53:51] <jim> .foo
[23:54:41] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b102:c061:c48:562) (Client Quit)
[23:55:50] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:57:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:57:56] *** Quits: onelegend (onelegend@wireguard/tunneler/onelegend) (Quit: WeeChat 2.8)
[23:58:23] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[23:58:30] *** Quits: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Quit: Leaving)
[23:58:54] *** Quits: onelegend (onelegend@wireguard/tunneler/onelegend) (Client Quit)
[23:59:06] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
