[00:04:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:09:03] *** Joins: la_mettrie (~rimrunner@2a01:4f9:c010:3051::1)
[00:10:15] <LordKalma> PJBoy what's going on in #include<c++>?
[00:10:29] <PJBoy> not much
[00:11:28] <PJBoy> oh wait
[00:12:58] *** Joins: toulene (~toulene@user/toulene)
[00:15:09] <PJBoy> a rapist got into cppcon and now everyone's engaging in metaconversation
[00:15:27] *** Joins: jsbach (~jsbach@81-223-39-134.static.upcbusiness.at)
[00:17:00] <rpav> ðŸ¤”
[00:17:13] <PJBoy> there's literally a whole thread of people talking about how they're not going to discuss it
[00:17:20] <LordKalma> hahahahah
[00:17:23] <rpav> the first rule of .. err wait
[00:17:47] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[00:17:52] <PJBoy> I'm doing my part by not participating
[00:19:08] <LordKalma> PJBoy would you join -social?
[00:19:12] <rpav> i think by the time you've brought it up on a C++ forum, participation happened
[00:19:26] <rpav> does #c++-social actually exist/have people
[00:19:27] <PJBoy> I guess
[00:19:51] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:e883)
[00:20:07] *** Quits: jsbach (~jsbach@81-223-39-134.static.upcbusiness.at) (Read error: Connection reset by peer)
[00:20:23] *** Joins: jsbach (~jsbach@81-223-39-134.static.upcbusiness.at)
[00:20:49] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[00:22:20] <Guest54> hey guys, I'm trying to create aÂ  couple of tables on the fly on the mysqlÂ  cli. Specifically, these two: `health_checks` and `tags`: http://sqlfiddle.com/#!9/bef023/1 However when I create the `tags` table I get an error: "ERROR 1215 (HY000): Cannot add foreign key constraint"
[00:22:24] *** Parts: la_mettrie (~rimrunner@2a01:4f9:c010:3051::1) (WeeChat 2.7.1)
[00:23:08] <Guest54> not quite sure what's going wrong - the foregin key datatype matches with the parent table
[00:25:02] *** Quits: jsbach (~jsbach@81-223-39-134.static.upcbusiness.at) (Read error: Connection reset by peer)
[00:25:18] *** gentooclimax is now known as climax
[00:25:53] *** climax is now known as gentooclimax
[00:25:58] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[00:33:23] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:e883) (Quit: Client closed)
[00:34:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:28] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:35:28] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[00:35:56] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[00:36:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:36:36] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 272 seconds)
[00:39:09] <rpav> not really topical, but ergh mysql
[00:39:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:44:09] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[00:52:25] *** Quits: magla (~gelignite@55d45672.access.ecotel.net) (Quit: Stay safe!)
[00:53:33] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:54:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:56:06] *** Joins: cq-work (~cq-work@user/cq-work)
[01:07:09] <nightstrike> PJBoy: agree 100% re coredumpctl
[01:07:14] <nightstrike> suuuuuuuuucks
[01:07:30] <PJBoy> arghgh
[01:07:32] <PJBoy> thank you
[01:07:36] <PJBoy> it does
[01:08:06] <nightstrike> it's so frustrating, like, I just want to run gdb ./a.out core<tab>... why is that so bad?
[01:08:47] <nightstrike> I feel like all of systemd optimizes for one person's idealized usecase,
[01:08:48] <Friithian> you can make autocomplete for commands
[01:09:20] <nightstrike> kinda like how "predictable ethernet names" helps one developer who couldn't get his laptop to work, but screws over all of my server setups
[01:11:34] <PJBoy> I totally agree
[01:13:30] <OnlineCop> When running `make`, I see: `g++ -std=gnu++11 -I"/usr/share/R/include" -DNDEBUG -I"/usr/lib/R/site-library/Rcpp/include" -O -std=c++17 -I../lib/inc [...and more commands...] -c File.cpp -o File.o` When that sees one `-std=` for some includes, and a different `-std=` later on, does that change how those includes are processed? Or does the latter `-std=` override the earlier one and compile everything as c++17 instead of c++11?
[01:14:14] <CarloWood> The latter
[01:14:35] <CarloWood> You should only pass one standard imho.
[01:15:10] <OnlineCop> This ^ is the result of running `R CMD INSTALL ...` so is something out of my Makefile's hands.
[01:15:53] <CarloWood> I don't what command R is.
[01:16:00] <CarloWood> don't know*
[01:16:23] *** Quits: robod34 (Username@79.113.243.73) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:16:23] <evangeline> Does anybody know how to use DI framework to specify "Kris Jusiak" on line 63: https://godbolt.org/z/ojsE83EK7 ?
[01:16:24] <OnlineCop> R is another programming language, and TL;DR: that's like running `bash -c ...`
[01:17:07] <CarloWood> Do you have environment variables set that contain one of those flags?
[01:17:42] <Friithian> are you trying to build a project that uses R to build a makefile?
[01:17:52] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[01:19:27] <OnlineCop> This Makefile contains: `rmake:[newline][tab]R CMD INSTALL --no-multiarch WrapperR`, so it's getting that `-std=c++17` from its PKG_CXXFLAGS variable.
[01:19:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:20:06] <OnlineCop> Where it gets its own compiler directives is beyond me. `grep` doesn't reveal anything using `11` or `c++11` or anything.
[01:20:36] <CarloWood> set | grep 'c++'
[01:21:04] <CarloWood> or even 'std='
[01:21:55] <OnlineCop> No results, other than some _git_* () bash functions.
[01:22:09] <OnlineCop> (for 'c++' and 'std=')
[01:22:39] *** Joins: rg (~r-g@51-159-55-86.rev.poneytelecom.eu)
[01:22:50] <CarloWood> Configuration files of R then?
[01:23:05] <CarloWood> Otherwise it has to be configuration of the project you're building.
[01:23:56] <OnlineCop> It might be. But, as long as the latter `-std=c++17` overrides it, I don't mind. I just didn't know whether the order of arguments would matter when it comes to the -I includes.
[01:24:21] <CarloWood> That first -std is so close to the g++ that I'd expect it to be declared as compiler  "g++ -std=gnu++11" as compiler somewhere.
[01:24:33] <CarloWood> which it totally wrong.
[01:24:47] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:24:49] <CarloWood> I suppose you configure the compiler SOMEWHERE - so check there.
[01:26:04] *** Joins: asdfa434t3 (~asdfa434t@ec2-54-219-254-232.us-west-1.compute.amazonaws.com)
[01:27:22] <asdfa434t3> hi, i want to run a function after eeeeverything else in the program is done and it's just about to finish. in particular, i want to run it after all other threads are done. i've tried a thread-local variable's destructor, i've tried an __attribute__((destructor)) function, and i've tried atexit before any threads are created, but none of these are
[01:27:22] <asdfa434t3> late enough. any other ideas?
[01:30:31] <PJBoy> join your threads and run the function
[01:31:31] *** Joins: Guest8425 (~Guest@host169.190-139-78.telecom.net.ar)
[01:32:40] <asdfa434t3> PJBoy, these threads are basically event loop threads that wait indefinitely, and aren't spawned by me at all but rather some libs i have to use
[01:32:44] *** Joins: ferdna (~ferdna@user/ferdna)
[01:33:11] <PJBoy> ah, the plot thickens
[01:33:58] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[01:35:40] <asdfa434t3> thicc plot
[01:36:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:39:04] <OnlineCop> https://man7.org/linux/man-pages/man2/exit.2.html#NOTES maybe?
[01:39:51] <rpav> bah i still want LOOP
[01:39:52] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:39:53] <OnlineCop> The `exit()` function calls a thin-wrapper function `_exit()` which invokes the exit_group system call, which ends your process and terminates its threads.
[01:40:18] <rpav> i don't think there's a way to hold over values from prior iterations using range for
[01:41:12] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:43:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:43:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:43:42] *** ChanServ sets mode: +v npaperbot
[01:43:56] *** Joins: biberu (~biberu@user/biberu)
[01:44:41] *** Joins: bobb_ (~bobb_@dslb-092-074-254-001.092.074.pools.vodafone-ip.de)
[01:46:55] <foobaz212> hey guys, I have a conceptual question about mysql: say I have this schema and query: http://sqlfiddle.com/#!9/2043b8/4 Let's assume the `books` table was a heavily partitioned table. Assuming everything else is the same, would I have to change my query? Basically, just wondering if inner joins against a partitioned table is a bad/invalid idea.
[01:49:29] <bobb_> foobaz212 this channel is about c++
[01:49:52] <foobaz212> ok fair enough
[01:52:24] <LordKalma> If you used Qt's ORM it would be in scope
[01:52:32] <LordKalma> Just to annoy you all with Qt
[01:53:41] <foobaz212> is my question really dumb or sth?:) Â No response on #mysql...I'm only wondering this because I know that you can't have a foreign key to a partitioned table. Given this, it seems reasonable to question if it's possible to do an inner join on a partitioned table
[01:54:02] *** Joins: pulse (~pulse@user/pulse)
[01:56:26] *** Joins: markong (~kvirc@213.146.188.203)
[01:58:19] <foobaz212> no worries, I guess we must stick to the rules of this channel :)
[01:58:38] *** Joins: kaph (~kaph@151.35.10.65)
[02:00:59] *** Quits: proller (~p@2a02:6b8:b081:6405::1:2d) (Ping timeout: 250 seconds)
[02:05:54] *** Quits: kaph (~kaph@151.35.10.65) (Remote host closed the connection)
[02:06:22] *** Joins: kaph (~kaph@151.35.10.65)
[02:13:48] *** Joins: proller (~p@80.240.216.69)
[02:16:02] *** Quits: sh00p (~z@89-253-71-70.customers.ownit.se) (Ping timeout: 272 seconds)
[02:21:14] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[02:22:10] *** Joins: kaph_ (~kaph@93-39-148-20.ip76.fastwebnet.it)
[02:22:47] <yolo> intel asm seems more readable why att asm is the default
[02:22:58] <PJBoy> because gnu
[02:23:38] <PJBoy> the assembler GAS used the AT&T syntax
[02:23:49] <PJBoy> and GCC is gnu too
[02:24:09] <PJBoy> and then gdb is gnu too
[02:24:54] *** Quits: kaph (~kaph@151.35.10.65) (Ping timeout: 272 seconds)
[02:25:04] <yolo> i c
[02:25:24] <yolo> non-x86 cpu will have their own syntax right? riscv asm seems like intel style
[02:26:14] <PJBoy> yeah
[02:26:27] <PJBoy> ARM is the one I'm most familiar with
[02:27:00] <PJBoy> it uses the `op rd,rs` syntax like intel, as does pretty much every other ASM language
[02:27:41] <PJBoy> although ARM has dopey dollar signs everywhere, like the old 6502 family languages
[02:28:13] <yolo> same does mips
[02:28:29] <yolo> powerpc and especially risv seems have the most concise asm syntax
[02:28:33] <PJBoy> must have been the style at the time
[02:28:40] <yolo> s/risv/sircv/
[02:29:27] <yolo> so the att & intel style are really just about x86, I was very embarrased as I used to code asm but was unaware of intel vs att
[02:29:57] <yolo> now I realize that all my career is about risc chips, intel is just my PC, never a development target
[02:32:32] <yolo> something i have always been a layman with(use it but never developed for it): x86 chips as hardware and windows/macos ecosystem as software, as embedded linux is mostly about non-x86/non-windows/non-macos
[02:35:40] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 272 seconds)
[02:36:49] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[02:36:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:36:55] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[02:37:34] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 272 seconds)
[02:40:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:42:46] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[02:43:28] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:496e:4097:1a46:a8be)
[02:43:28] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:496e:4097:1a46:a8be) (Changing host)
[02:43:28] *** Joins: skapata (~Skapata@user/skapata)
[02:55:26] *** Quits: asdfa434t3 (~asdfa434t@ec2-54-219-254-232.us-west-1.compute.amazonaws.com) (Quit: Client closed)
[02:55:59] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[02:58:53] *** Quits: bobb_ (~bobb_@dslb-092-074-254-001.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:05:36] *** Joins: ymwm_ (~yingmanwu@117.26.68.45)
[03:07:32] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[03:11:21] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15) (Read error: Connection reset by peer)
[03:11:54] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:55] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:11:55] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[03:11:55] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Read error: No route to host)
[03:11:55] *** Quits: computerquip (sid423484@user/computerquip) (Read error: Connection reset by peer)
[03:12:06] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[03:12:08] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15)
[03:12:12] *** Joins: computerquip (sid423484@user/computerquip)
[03:12:12] *** Joins: wyre (~wyre@user/wyre)
[03:12:14] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[03:12:27] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[03:12:29] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[03:12:33] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[03:12:52] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[03:12:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[03:13:17] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:14:06] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Ping timeout: 252 seconds)
[03:14:18] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 272 seconds)
[03:16:00] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:17:49] *** Quits: Guest8425 (~Guest@host169.190-139-78.telecom.net.ar) (Remote host closed the connection)
[03:19:45] *** Joins: jackblasted (~quassel@173.239.197.20)
[03:20:31] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:25:07] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[03:26:18] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0) (Remote host closed the connection)
[03:26:51] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:9517:789e:312f:57d7)
[03:29:46] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[03:30:58] <Alipha> PJBoy: my father in law lost a bunch of stuff off an external hard drive because he had it plugged in during an Ubuntu install (questionable whether he has the skillset to use Linux...) and he ended up installing Ubuntu on the ext drive instead of his internal drive.
[03:31:39] <Alipha> PJBoy: I also have unresolved issues with brightness on my laptop under Ubuntu
[03:32:00] <PJBoy> hahaha there you go
[03:32:03] <OnlineCop> Maybe it is waiting for a programming languages that uses DIM.
[03:32:05] <PJBoy> small world
[03:37:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15) (Ping timeout: 245 seconds)
[03:39:06] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9816:13a1:80f0:3a2b)
[03:40:33] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:99b3:1e22:56c4:4228)
[03:43:46] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 260 seconds)
[03:48:59] *** Quits: pa (~pah@user/pah) (Quit: quit.)
[03:49:48] *** Joins: pah (~pah@user/pah)
[03:56:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:59:49] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[04:06:10] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[04:07:55] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:12:22] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[04:12:50] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[04:12:56] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:99b3:1e22:56c4:4228) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:13:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:15:44] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 272 seconds)
[04:15:51] *** Joins: Praise- (~Fat@user/praise)
[04:17:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:18:18] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[04:18:37] *** Quits: foul_owl (~kerry@23.82.193.87) (Ping timeout: 240 seconds)
[04:21:04] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[04:22:40] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::11)
[04:30:41] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 256 seconds)
[04:32:19] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[04:33:02] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:33:50] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:34:35] *** Joins: thad_the_man_2 (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[04:36:02] *** Quits: Donno (~donno@58.84.206.182) (Ping timeout: 260 seconds)
[04:36:36] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Ping timeout: 240 seconds)
[04:39:08] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:44:48] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::11) (Quit: CodePoint)
[04:45:44] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[04:46:17] *** Joins: foul_owl (~kerry@23.82.193.89)
[04:47:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Quit: Leaving)
[04:55:01] *** Joins: Guest4946 (~Guest@host96.190-137-39.telecom.net.ar)
[04:59:35] *** Joins: c4017w (~c4017@209.52.68.8)
[05:01:57] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0)
[05:04:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:9517:789e:312f:57d7) (Ping timeout: 240 seconds)
[05:07:35] *** Joins: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:25a1:2429:5235:3915)
[05:09:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:10:50] *** Quits: AmR (~AmREiSa@156.199.236.198) (Ping timeout: 272 seconds)
[05:13:17] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:16:41] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:17:42] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0) (Remote host closed the connection)
[05:18:16] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9)
[05:26:13] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[05:33:08] *** Quits: kaph_ (~kaph@93-39-148-20.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[05:36:32] *** Quits: undephin3d (~undephin3@158.181.81.11) (Ping timeout: 240 seconds)
[05:42:13] *** Quits: Ameisen (~ameisen@digitalcarbide.com) (Quit: Quitting)
[05:43:09] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[05:43:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:43:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:43:42] *** ChanServ sets mode: +v npaperbot
[05:53:58] *** Quits: thad_the_man_2 (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net) (Quit: Leaving)
[05:59:53] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:02:45] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[06:03:28] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:05:12] *** Quits: jackblasted (~quassel@173.239.197.20) (Ping timeout: 250 seconds)
[06:05:55] *** Joins: jackblasted (~quassel@173.239.197.134)
[06:07:17] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[06:13:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9816:13a1:80f0:3a2b) (Quit: Quit)
[06:16:12] *** Joins: Inline__ (~Inline@p200300cd4709fe0020393da7e35c629b.dip0.t-ipconnect.de)
[06:17:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:18:38] *** Quits: Inline (~Inline@p200300cd470f680001516fcaa15a1e0e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:19:48] *** Quits: andreasbuhr (~quassel@p548ddf42.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:20:17] *** Joins: andreasbuhr (~quassel@p549db5f7.dip0.t-ipconnect.de)
[06:31:29] *** Quits: AssKoala (~asskoala@user/asskoala) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:31:46] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[06:31:46] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[06:31:46] *** Joins: AssKoala (~asskoala@user/asskoala)
[06:37:14] *** Quits: cq-work (~cq-work@user/cq-work) (Read error: Connection reset by peer)
[06:37:35] *** Joins: cq-work (~cq-work@user/cq-work)
[06:42:09] <Alipha> pepperoni: regarding https://coliru.stacked-crooked.com/a/cfbcc614b388cda8 `A<float>` is indistinguishable from `A<float, int>`, so no. I'd suggest making the default template parameter something nonsensical like void instead of int and then partial template specializing or something
[06:48:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:55:13] *** Quits: jackblasted (~quassel@173.239.197.134) (Remote host closed the connection)
[06:59:45] *** Quits: Guest4946 (~Guest@host96.190-137-39.telecom.net.ar) (Remote host closed the connection)
[07:00:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:03:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:13:32] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[07:20:08] *** Joins: adeliktas5 (~adeliktas@i59F5F72C.versanet.de)
[07:21:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9) (Ping timeout: 240 seconds)
[07:21:57] *** Quits: adeliktas (~adeliktas@i59F5F3F1.versanet.de) (Ping timeout: 240 seconds)
[07:21:57] *** adeliktas5 is now known as adeliktas
[07:27:43] *** Quits: artok (~azo@mobile-access-b04863-82.dhcp.inet.fi) (Ping timeout: 250 seconds)
[07:32:12] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[07:34:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:40:32] *** Quits: DrMax (~DrMax@node-1w7jra94757fzx6dr52v5tek2.ipv6.telus.net) (Ping timeout: 250 seconds)
[07:41:58] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[07:52:49] *** Joins: DrMax (~DrMax@node-1w7jra94757fytxmmfxmtk8zw.ipv6.telus.net)
[07:58:08] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9)
[08:01:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:05:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[08:22:39] *** Joins: artok (~azo@mobile-access-b04863-82.dhcp.inet.fi)
[08:29:40] *** Joins: k8yun (~k8yun@user/k8yun)
[08:37:56] *** Quits: artok (~azo@mobile-access-b04863-82.dhcp.inet.fi) (Ping timeout: 272 seconds)
[08:53:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:58:02] *** Quits: emerent (~quassel@p200300cd5743c367ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:58:52] *** Joins: emerent (~quassel@p200300cd5743c360ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:01:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:05:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:08:18] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:08:44] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:23:47] *** Joins: xkuru (~xkuru@user/xkuru)
[09:23:48] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Ping timeout: 240 seconds)
[09:31:02] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[09:34:59] *** Quits: Praise- (~Fat@user/praise) (Ping timeout: 256 seconds)
[09:35:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[09:35:25] *** Joins: Praise (~Fat@user/praise)
[09:43:35] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:43:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:43:42] *** ChanServ sets mode: +v npaperbot
[09:48:09] *** Joins: szymon (~ugh@37.120.211.214)
[09:57:06] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:02:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:06:09] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:07:46] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d59b:7225:122:f855)
[10:09:52] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:10:26] *** Quits: szymon (~ugh@37.120.211.214) (Ping timeout: 256 seconds)
[10:11:03] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[10:15:54] *** Joins: xkuru (~xkuru@user/xkuru)
[10:16:42] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[10:17:07] *** Joins: xkuru (~xkuru@user/xkuru)
[10:25:29] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:32:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:35:28] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:40:23] *** Joins: artok (~azo@mobile-access-b04863-82.dhcp.inet.fi)
[10:55:12] *** Quits: artok (~azo@mobile-access-b04863-82.dhcp.inet.fi) (Ping timeout: 256 seconds)
[11:03:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:06:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:13:35] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[11:13:59] *** Quits: ville (~ville@user/ville) (Quit: ville)
[11:17:41] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[11:36:48] *** Joins: proller (~p@2a02:6b8:b081:7208::1:2c)
[11:37:17] *** Joins: ville (~ville@user/ville)
[11:37:28] *** pah is now known as pa
[11:39:16] *** Joins: c4017w (~c4017@209.52.68.8)
[11:41:15] *** Joins: ivii (~ivan@user/ivii)
[11:41:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:42:27] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[11:44:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:45:17] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[11:46:17] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[11:47:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 245 seconds)
[11:48:35] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[11:49:12] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Read error: Connection reset by peer)
[11:49:16] *** Joins: jsbach (~jsbach@62.218.23.188)
[11:49:36] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:56:34] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:57:00] *** Quits: rb (~augh@209.141.39.190) (Ping timeout: 240 seconds)
[11:59:25] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[12:04:06] *** Joins: rwb (~augh@alogs.space)
[12:07:06] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[12:08:33] *** Quits: jsbach (~jsbach@62.218.23.188) (Ping timeout: 256 seconds)
[12:09:02] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:10:36] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[12:12:56] *** Joins: Furai (~Furai@furai.pl)
[12:20:45] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[12:21:26] *** Joins: robod34 (Username@79.113.243.73)
[12:22:09] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:23:10] *** Joins: undephin3d (~undephin3@158.181.81.11)
[12:27:06] *** Joins: jsbach (~jsbach@62.218.23.188)
[12:28:43] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[12:28:59] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[12:29:48] <malloy> hello, what does Factory::template mean at this line 'return Factory::template create<sinks::rotating_file_sink_mt>(' it's from https://github.com/gabime/spdlog/blob/7f8a61e79d154dcc7836dfb850ec308ad1c10908/include/spdlog/sinks/rotating_file_sink.h#L66
[12:34:50] *** Quits: proller (~p@2a02:6b8:b081:7208::1:2c) (Ping timeout: 260 seconds)
[12:38:33] *** Quits: jsbach (~jsbach@62.218.23.188) (Remote host closed the connection)
[12:39:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:42:37] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:42:57] *** Joins: jsbach (~jsbach@62.218.23.188)
[12:43:32] *** Quits: jsbach (~jsbach@62.218.23.188) (Remote host closed the connection)
[12:45:49] *** Joins: RazielZ (~Raziel@user/raziel)
[12:48:36] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 240 seconds)
[12:49:48] <ville> malloy: it disambiguates the meaning of the following < token
[12:49:58] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:13f:7874:eb2a:de87)
[12:50:24] <ville> malloy: that is it is to be interpreted as beginning of a template argument list rather than less-than
[12:51:12] *** Joins: jsbach (~jsbach@62.218.23.190)
[12:54:27] <malloy> ville: but why we don't need it when such as 'template <typename T, int N> void foo() { T t[N]; } foo<int, 2>()' ?
[12:56:08] <ville> what do you mean, the word "template" is right at the beginning
[12:57:07] <ville> ah you mean the "f<int, 0>()" part.
[12:57:16] <malloy> ville: yeah
[12:58:00] <ville> right, that's not a dependent name
[12:58:16] <ville> where as your TemplateParameter::something is
[12:58:40] *** Joins: paul424 (~tom@ip-5-172-235-198.multi.internet.cyfrowypolsat.pl)
[12:59:04] <ville> !fs dependent
[12:59:05] <nolyc> ville: Key search for "dependent" (2 found): "dependent name" and "dependent-base"
[12:59:12] <ville> !dependent name
[12:59:14] <nolyc> http://eel.is/c++draft/temp.dep http://en.cppreference.com/w/cpp/language/dependent_name
[12:59:40] <malloy> ville: thank you!
[13:08:05] *** RazielZ is now known as Raziel
[13:08:59] <malloy> that's really amazing
[13:18:15] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:18:34] <ville> amazing as in: "why is that a thing?" right?
[13:20:46] <malloy> yeah!
[13:23:37] *** gentooclimax is now known as climax
[13:24:42] *** climax is now known as gentooclimax
[13:25:21] <ville> apparently a different choice of delimiters for the template parameter list might have made c++ easier to parse, possibly also solving this problem. don't know for certain if it would
[13:29:49] <LordKalma> https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html
[13:29:57] <LordKalma> isn't this the most dumb warning ever?
[13:31:14] <ville> it's fine. it doesn't really do anything. sort of. well you could argue for compound types it could be separate choice
[13:31:47] <ville> i mean const doesn't really do anything, sure the language specifies it does things, but it doesn't give the programmer anything or very little
[13:32:49] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:33:43] <LordKalma> btw
[13:33:43] <LordKalma> https://godbolt.org/z/hMz694768
[13:33:54] <LordKalma> how do you get a span to work on const data?
[13:34:18] <barometz> span<const int> compiles
[13:35:05] <LordKalma> ah ok, thanks
[13:39:34] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:39:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:40:04] <ville> LordKalma: https://godbolt.org/z/4d1Gd59es
[13:40:17] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[13:40:45] <ville> LordKalma: the const is only really meaningful in the definition when you pass-by-value
[13:41:08] <ville> and even there it's somewhat debatable
[13:43:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:43:35] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:43:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:43:42] *** ChanServ sets mode: +v npaperbot
[13:58:28] <LordKalma> << numeric_limits<size_t>::digits(4);
[13:58:28] <geordi> error: 'numeric_limits<long unsigned int>::digits' cannot be used as a function
[13:58:46] <LordKalma> bah
[13:59:36] <LordKalma> << bit_width(4)
[13:59:36] <geordi> error: no matching function for call to 'bit_width(int)'
[13:59:50] <LordKalma> :(
[14:00:00] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[14:00:25] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[14:01:00] <LordKalma> << bit_width(4ULL)
[14:01:01] <geordi> 3
[14:01:03] <LordKalma> ah thank god
[14:04:21] *** Joins: artok (~azo@mobile-access-b04863-82.dhcp.inet.fi)
[14:04:53] <ville> << numericlimits<unsigned char>::digits
[14:04:53] <geordi> error: 'numericlimits' was not declared in this scope
[14:04:59] <ville> << numeric_limits<unsigned char>::digits
[14:05:00] <geordi> 8
[14:05:39] <ville> << numeric_limits<unsigned char>::digits10
[14:05:40] <geordi> 2
[14:05:43] <ville> that's the sneaky one
[14:06:23] <LordKalma> digits being radix-2 by default is interesting
[14:06:36] <LordKalma> but I did want to know the number of bits to store a power of two :)
[14:06:47] <LordKalma> so I wanted bit_width
[14:07:33] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 268 seconds)
[14:11:02] <PJBoy> radix-2 for integer types
[14:11:22] <PJBoy> FLT_RADIX for floating point types
[14:13:08] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 250 seconds)
[14:13:47] <PJBoy> and third party stuff can do whatever it wants
[14:14:26] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[14:22:39] <LordKalma> https://godbolt.org/z/dvMzoKeYf
[14:22:49] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[14:22:53] <LordKalma> I was trying to do a bit-reversal algorithm (only between the bitys necessary to compose the maximum number=
[14:22:58] <LordKalma> but I'm clearly doing something wront
[14:23:43] <LordKalma> like with numbers up to 16, 100000 is supposed to be 000001, 110000 000011, 101000 become 000101, etc etc
[14:24:47] <LordKalma> the bug should be line 14
[14:24:49] <LordKalma> but I'm not sure what is it
[14:24:51] *** Joins: proller (~p@2a02:6bf:fff0:1:754d:927b:314d:1ed5)
[14:25:02] <LordKalma> I mean 17
[14:25:44] <ville> it's always the low bits?
[14:26:19] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[14:26:41] <ville> http://graphics.stanford.edu/~seander/bithacks.html#BitReverseObvious
[14:27:26] <LordKalma> that's not it, because I don't want to swap the whole bits of a std::size_t
[14:27:29] <LordKalma> only the relevant ones
[14:27:54] <LordKalma> as if the number has just bit_with of width
[14:28:03] <ville> you can shift it down after
[14:28:36] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[14:28:50] <LordKalma> ahh indeed, let me try
[14:31:06] <ville> but you can discard the loop altogether if you wish writing variation of: https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel for the width of the types you use and the shift down those results
[14:33:41] <PJBoy> I say go for the lookup table
[14:33:57] <PJBoy> what's the largest bit width you'd be dealing with?
[14:35:13] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[14:36:00] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Quit: Leaving)
[14:36:34] <ville> waiting for: "eww globals"-reaction
[14:37:09] <PJBoy> who said anything about globals >_>
[14:39:07] <PJBoy> the other thing you could do is make an integer bit access iterator and use std::reverse
[14:39:29] <ville> oh dear. that's even better
[14:40:26] <ville> going full modern c++
[14:40:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:43:15] <PJBoy> more modern would be the idea of doing that with range adapters
[14:44:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:45:13] *** gentooclimax is now known as climax
[14:45:16] <LordKalma> https://godbolt.org/z/6qW7TTEb3
[14:45:18] <LordKalma> this is what I wanted
[14:45:19] <PJBoy> something like `uint32_t reversed; ranges::copy(i | split_bits_view | bit_reverse_view(n) | join_bits_view, &reversed);`
[14:46:12] <LordKalma> thanks for the help
[14:46:20] <PJBoy> you can simplify that by using a standard for loop
[14:46:25] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[14:46:31] <PJBoy> with upper bound bit_width
[14:47:20] *** climax is now known as gentooclimax
[14:48:43] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:13f:7874:eb2a:de87) (Quit: Konversation terminated!)
[14:49:17] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[14:51:38] <PJBoy> https://godbolt.org/z/5E6jazK87
[14:52:42] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[14:55:27] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[14:55:39] *** Quits: proller (~p@2a02:6bf:fff0:1:754d:927b:314d:1ed5) (Ping timeout: 268 seconds)
[14:57:16] *** Joins: kaph (~kaph@an-19-184-70.service.infuturo.it)
[14:58:38] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 250 seconds)
[14:58:59] <PJBoy> here's the lookup table version https://godbolt.org/z/nG8G61afe
[14:59:23] <LordKalma> show off
[14:59:44] <LordKalma> makeTable<8, 256> assumes a lot about the code :p
[15:00:32] <PJBoy> I already had a lookup table generator lying around :)
[15:00:51] <PJBoy> the old code ports into the new code pretty damn nicely
[15:00:54] <evangeline> Does anybody know how to use DI framework to specify "Kris Jusiak" on line 63: https://godbolt.org/z/ojsE83EK7 ?
[15:01:11] *** Quits: Alipha (~AliphaX@user/alipha) (Read error: Connection reset by peer)
[15:01:33] *** Quits: paul424 (~tom@ip-5-172-235-198.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:01:52] <PJBoy> also yeah, I'm glad you were able to understand the 8 and 256 numbers
[15:02:22] <PJBoy> I guess I really should have written `const size_t max_bits = 8; make_table<max_bits, 1ull << max_bits>`
[15:02:51] <LordKalma> yeah, I don't want that
[15:03:00] <PJBoy> but it's so fast
[15:03:03] <LordKalma> but thanks, the lazy version I'll definitely steal
[15:03:24] <PJBoy> and it only consumes like 5k of memory
[15:03:49] <PJBoy> << 8*256*sizeof(size_t)
[15:03:50] <geordi> 16384
[15:03:53] <PJBoy> or 16k w/e
[15:04:24] <PJBoy> (I'm just screwing around ofc)
[15:04:57] <LordKalma> now, I think the FFT is correct, but I have to understand here something about PFFFT to remember how the fuck does one use it
[15:05:03] <LordKalma> so I can have soething to compare against
[15:06:59] *** Joins: markong (~kvirc@213.146.188.203)
[15:07:53] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[15:11:02] <lxsameer> hey folks, i'm a bit confused about symbol visibility for shared libs. my shared lib A uses an static lib B that exposes a type called B::Error. Now how can I expose the same type in A (by default all of my symbols in A are hidden)
[15:11:24] <LordKalma> what's your build system?
[15:11:58] <lxsameer> LordKalma: cmake
[15:13:10] <LordKalma> are you using GenerateHeader?
[15:13:32] <lxsameer> LordKalma: no
[15:13:43] <lxsameer> LordKalma: oh hang on
[15:14:05] <lxsameer> I use GenerateExportHeader
[15:14:17] <lxsameer> I think you meant this one right?
[15:14:27] <LordKalma> yes that one, sorry
[15:16:02] <lxsameer> LordKalma: then yes
[15:16:20] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[15:17:07] <apollo13> Hi I am trying to get a boost::variant streamable and it works with basic types but not when I add my own type: http://cpp.sh/47mip -- any ideas what I am missing here with regard to the << operator?
[15:17:25] *** Joins: Alipha (~AliphaX@user/alipha)
[15:18:55] <apollo13> I am getting error: no match for â€˜operator<<â€™ (operand types are â€˜std::basic_ostream<char>â€™ and â€˜const std::__cxx11::basic_string<unsigned char>â€™) which I do not understand :/
[15:19:09] <apollo13> especially since the first line in main() works
[15:24:21] <apollo13> oh, I see what I did wrong there
[15:30:42] *** Quits: kaph (~kaph@an-19-184-70.service.infuturo.it) (Read error: Connection reset by peer)
[15:32:13] *** Joins: Burgundy (~NA@86.121.143.206)
[15:40:30] <PJBoy> { F(0, 1, 2); } #define F(args...) cout << args;
[15:40:31] <geordi> 0, 1, 2
[15:40:36] <PJBoy> this is a GCC extension right?
[15:40:52] <PJBoy> I was expecting a syntax error
[15:41:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:41:33] <PJBoy> the variadic argument that is, not the ostream operator, overload
[15:43:23] <PJBoy> yeah -pedantic confirms
[15:43:32] <PJBoy> I thought geordi used pedantic...
[15:44:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:58:20] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:18:26] <xkoncek> i have just finished wrapping sqlite C API, it looks decent to work with
[16:22:14] *** Quits: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:25a1:2429:5235:3915) (Quit: Konversation terminated!)
[16:22:19] *** Joins: obiwahn (~heini@user/obiwahn)
[16:24:47] <xkoncek> that statement stepping is a bit unconventional
[16:29:34] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[16:29:59] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[16:34:38] *** Joins: ymwm__ (~yingmanwu@117.26.69.144)
[16:35:17] *** Quits: ymwm__ (~yingmanwu@117.26.69.144) (Max SendQ exceeded)
[16:35:39] *** Joins: Deneb (~johnch@128.82.159.143.dyn.plus.net)
[16:35:45] *** Joins: ymwm__ (~yingmanwu@117.26.69.144)
[16:37:29] *** Quits: ymwm_ (~yingmanwu@117.26.68.45) (Ping timeout: 256 seconds)
[16:41:16] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[16:41:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:43:10] *** Quits: segnior (segnior@user/segnior) (Remote host closed the connection)
[16:43:57] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[16:45:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:52:30] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[16:54:31] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:55:24] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[16:56:38] *** Quits: ymwm__ (~yingmanwu@117.26.69.144) (Ping timeout: 260 seconds)
[17:04:57] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[17:07:48] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[17:09:00] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[17:15:15] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[17:20:01] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:21:14] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[17:22:58] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Ping timeout: 272 seconds)
[17:24:47] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[17:29:18] *** Quits: ik (uid540109@id-540109.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:33:01] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1d0a:10c:e91c:1f8)
[17:33:01] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1d0a:10c:e91c:1f8) (Changing host)
[17:33:01] *** Joins: skapata (~Skapata@user/skapata)
[17:33:52] <rpav> should be able to `auto f = [this=&o]() { .. }`
[17:34:42] *** Quits: undephin3d (~undephin3@158.181.81.11) (Ping timeout: 256 seconds)
[17:34:56] *** Joins: undephin3d (~undephin3@158.181.81.11)
[17:36:10] <PJBoy> there would be a question of if the lambda body can access o's privates
[17:36:50] <Haohmaru> NSFW that sh*t
[17:37:54] <rpav> PJBoy: yeah that was of course my first thought and i think it could be pretty easily determined that you can/can't based on whether you can/can't in context (i.e. lambda in a member function of the class or not)
[17:38:30] <rpav> but like `struct S { int x, y; }; .. S s; auto f = [this=&s]() { print(x, y); };` type deal would be handy
[17:38:41] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Quit: Leaving)
[17:39:19] <rpav> er. in fact doesn't it _already_ work that way
[17:39:26] <PJBoy> what if it's a lambda defined outside a member function, but then copied into a variable declared inside a member function?
[17:39:50] *** Joins: kevr (~kevr@user/kevr)
[17:40:04] <rpav> PJBoy: obvious if you think about it; the lambda defined outside could already not access, so defining it such that it did would be in error
[17:40:12] <rpav> passing it is a red herring in that case
[17:40:42] <rpav> and you can _already_ define a lambda _in_ a member function that does private access, and return it
[17:40:55] <PJBoy> what about the other way around
[17:41:09] <rpav> see above
[17:41:31] <PJBoy> true
[17:41:40] <PJBoy> alright that doesn't seem so problematic
[17:42:27] <rpav> this would basically _only_ add [this=&o] and the _only_ "tricky" case would be if it were defined in a member function and attempted private access; it might actually have it .. except, it's also already the case, basically
[17:42:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:43:28] <rpav> you can't define a friend-lambda, but you _can_ define a .. ðŸ¤”
[17:43:34] <rpav> can you define a friend member function
[17:43:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:43:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:43:44] *** ChanServ sets mode: +v npaperbot
[17:45:30] <rpav> it seems like you can declare it, but it doesn't work
[17:45:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:45:56] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:47:37] <rpav> wait no i'm dumb
[17:48:26] <rpav> interesting, but, yeah .. so you could friend the member function that _creates_ the lambda, and the lambda should probably inherit the friend-ness ... "children of friends are also friends"
[17:48:27] *** Quits: lmat (~Lmat@c-73-102-193-68.hsd1.in.comcast.net) (Quit: leaving)
[17:48:38] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[17:48:48] <rpav> in fact i wonder if that's also already the case
[17:49:31] *** Joins: Guest3291 (~Guest@host194.190-137-38.telecom.net.ar)
[17:49:51] <rpav> it is not! so i guess it should work that way for consistency
[17:51:11] <rpav> no wait, they _are_, i hadn't carried the declaration fully back ... https://godbolt.org/z/jcoeeEorx
[17:51:33] *** Joins: lmat (~Lmat@c-73-102-193-68.hsd1.in.comcast.net)
[17:53:39] *** Joins: darkbit (~db@136.158.8.67)
[18:00:30] *** Quits: Guest3291 (~Guest@host194.190-137-38.telecom.net.ar) (Remote host closed the connection)
[18:02:03] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:02:31] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:04:28] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[18:06:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[18:07:19] *** Joins: RazielZ (~Raziel@user/raziel)
[18:07:54] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:08:47] *** Joins: angelacrust (~angelacru@171.50.170.186)
[18:09:56] *** Joins: epony (epony@user/epony)
[18:10:20] *** Joins: pulse (~pulse@user/pulse)
[18:10:50] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 260 seconds)
[18:16:55] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[18:35:56] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9) (Read error: Connection reset by peer)
[18:36:30] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:8c4d:1b:4f5d:a860)
[18:37:12] *** Quits: angelacrust (~angelacru@171.50.170.186) (Quit: Client closed)
[18:39:07] *** Parts: apollo13 (apollo13@django/moderator/apollo13) (Leaving)
[18:40:49] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[18:42:46] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:46:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[18:48:43] *** Quits: sonic (~sonic@user/sonic) (Quit: WeeChat 3.3)
[18:49:53] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:49:55] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[18:54:13] *** Joins: txtsd (~txtsd@user/txtsd)
[18:54:34] <Alipha> << numeric_limits<unsigned char>::digits10; // ville, why is this 2?
[18:54:35] <geordi> 2
[18:55:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:8c4d:1b:4f5d:a860) (Ping timeout: 240 seconds)
[18:55:56] <CarloWood> Because 99 fits in an unsigned char, but 999 doesn't?
[18:56:42] <CarloWood> 'any number with this many significant decimal digits can be converted to a value of type T'
[18:57:03] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611)
[18:58:10] *** Quits: rg (~r-g@51-159-55-86.rev.poneytelecom.eu) (Quit: rg)
[18:59:07] <Alipha> Ah. That's not intuitive. One would think that digits10 is the number of digits you'd need to store the largest value of that type. ie, 127 is 3 digits
[18:59:17] <Alipha> Err, 255 is 3 digits
[18:59:22] <CarloWood> '... and back'.  Aka - an unsigned char can store 10^2 unique values, but not 10^3.
[19:00:01] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:00:21] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:00:35] <rpav> just reading the name `digits10` didn't really imply anything to me, but the cppref description makes sense for that value
[19:00:57] <rpav> Alipha's description would have made sense too though
[19:01:04] <rpav> it's just a terrible name
[19:01:33] <rpav> `guaranteed_base10_digits`
[19:02:16] <rpav> but if someone said "it's the number of digits needed to represent the decimal number 10" it would also fit, so like yeah
[19:02:41] <rpav> well maybe not, but the name is terrible
[19:02:47] <CarloWood> That wouldn't depend on T :p
[19:02:54] <rpav> yeah or be a numeric_limits thing
[19:03:02] <rpav> rather a base thing
[19:43:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:43:30] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[19:44:53] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Read error: Connection reset by peer)
[19:47:22] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:53:24] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[19:57:45] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[19:58:03] *** Joins: teepee (~teepee@openscad/teepee)
[20:02:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[20:07:08] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[20:07:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:13:52] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:17:34] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 250 seconds)
[20:23:23] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:23:44] *** Joins: paul424 (~tom@ip-5-172-236-69.multi.internet.cyfrowypolsat.pl)
[20:37:43] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[20:43:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:48:06] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[20:48:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:48:48] <ville> Alipha: yes indeed it's pretty non-intuitive name. even funnier in the context of floating point types. people often want to find out how many digits on the right of radix point are "portable"
[20:50:00] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:50:27] <xkoncek> ville do you happen to know if sqlite's prepared statements are ressitant to SQL injection? from my simple tests it looks like it is
[20:51:00] <imMute> xkoncek: yes they are.  (assuming you don't use string concat to get the original query that you prepare)
[20:51:34] <ville> xkoncek: i don't _know_, but should be or at least that's how i've been operating them
[20:52:20] <xkoncek> select * from logins where username=?
[20:52:52] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:28db:56f8:8249:6f4)
[20:53:00] <ville> it should quote and escape the bound value
[20:54:45] <ville> or rather "as-if" bound
[20:55:20] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:55:47] <imMute> ville: AFAIK sqlite actually sends the parameters separately from the query, so there's no need for quoting
[20:56:05] *** RazielZ is now known as Raziel
[20:56:11] <ville> yes
[20:57:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[20:57:26] *** rwb is now known as rb
[20:57:49] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[20:58:48] <PJBoy> xkoncek, yeah of course they are
[20:59:04] <PJBoy> that's their sole purpose in life
[20:59:12] <PJBoy> to separate data from code
[20:59:24] <PJBoy> whoever thought it made sense to combine the two was a numbskull
[21:00:49] <xkoncek> i was reading their docs few hours ago and they made it looks like the primary motivation was not security but rather performance and re-use of statements
[21:02:00] <PJBoy> that's another useful feature of separating code from data
[21:02:06] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[21:02:47] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[21:02:52] *** Joins: k8yun (~k8yun@user/k8yun)
[21:02:55] <rpav> oh lame, you can't ref a local binding in a lambda.. but how have i not encountered this before
[21:03:08] <PJBoy> local binding = structured binding?
[21:03:12] <rpav> probably i don't write functions _that_ local _that_ often
[21:03:16] <rpav> right
[21:03:21] <PJBoy> it became possible in C++20
[21:03:26] <rpav> ;~(
[21:03:39] *** Joins: rg (~r-g@51-159-55-86.rev.poneytelecom.eu)
[21:03:59] <PJBoy> { auto [x, y] = pair(0, 1); [=] { SHOW(x), SHOW(y); }(); }
[21:04:00] <geordi> x = 0, y = 1
[21:04:10] <PJBoy> and GCC incorrectly accepts that in c++17 mode too
[21:05:13] <rpav> clangd is complaining so i'm not gonna
[21:05:18] *** Joins: jokoon (~eio@2a01:e0a:542:e160:ed19:5274:4d1:dce0)
[21:07:35] <rpav> i'm not sure [=] should be a problem
[21:07:42] <rpav> it's [&] that's the issue
[21:08:51] <rpav> though clangd has a problem either way .. = seems pretty odd to not work though
[21:12:01] <PJBoy> x/y aren't variables, so lambdas don't like 'em
[21:12:31] *** Joins: sonic (~sonic@user/sonic)
[21:16:17] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:28db:56f8:8249:6f4) (Quit: Quit)
[21:18:47] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 256 seconds)
[21:21:42] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[21:22:53] <xkoncek> why did they have to make std::byte so inconvenient to use?
[21:23:04] <imMute> because it's C++
[21:23:30] <PJBoy> so that you don't conflate it with 8-bit integers
[21:23:33] <PJBoy> or characters
[21:23:51] <xkoncek> ++byte? no way, here you go: byte = {++std::to_integer(byte)};
[21:23:59] <PJBoy> yeah, 'cause it's not an integer
[21:24:42] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[21:25:13] <PJBoy> also does that ++ work?
[21:25:16] <xkoncek> i will have to think whether i want to use it, especially since i am using co many C libraries
[21:25:21] <PJBoy> seems unlikely
[21:25:46] <xkoncek> {byte b {}; b = {++std::to_integer(b)};}
[21:25:46] <geordi> error: no matching function for call to 'to_integer(byte&)'
[21:26:00] <PJBoy> << ++to_integer<int>(b); byte b;
[21:26:00] <geordi> error: lvalue required as increment operand
[21:26:04] <PJBoy> yeah
[21:26:20] <xkoncek> postfix would work tho?
[21:26:23] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 252 seconds)
[21:26:31] <PJBoy> << to_integer<int>(b)++; byte b;
[21:26:31] <geordi> Same error.
[21:26:57] <xkoncek> yeah, you can't rvalues
[21:27:04] <xkoncek> yeah, you can't ++ rvalues
[21:27:15] <PJBoy> not scalar type rvalues anyway
[21:27:32] <PJBoy> you can ++vector.begin()
[21:28:04] <xkoncek> were member specifiers introduced in 11?
[21:28:10] <PJBoy> << *++vector{1, 2}.begin();
[21:28:11] <geordi> 2
[21:28:21] <PJBoy> member specifiers as in?
[21:28:32] <xkoncek> T& operator++() &;
[21:28:39] <PJBoy> the trailing &?
[21:28:42] <xkoncek> the last ampersand
[21:28:57] <xkoncek> yes, that would make it lvalue-only
[21:29:17] <PJBoy> the ref qualifier was added in C++11, yeah
[21:29:31] <PJBoy> const and volatile qualifiers have always been there
[21:29:48] <xkoncek> forgot the meaning of qualifier / specifier
[21:30:30] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[21:32:39] <PJBoy> I honestly don't know what a specifier would be if not another word for qualifier
[21:39:13] *** Inline__ is now known as Inline
[21:40:09] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:41:10] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[21:41:35] <lpapp> hi, for debugging methods to return a name for a class, string_view is better return than std::string or const std::string& post-C++17?
[21:42:35] <xkoncek> reinterpret_cast<const unsigned char*>(bytes)
[21:43:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:43:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:43:44] *** ChanServ sets mode: +v npaperbot
[21:44:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:45:12] *** Joins: plastico (~plastico@neomutt/plastico)
[21:46:00] <paul424> can I paste my problem with building in c++ some library, CEGUI ?
[21:47:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:50:34] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[21:50:49] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[21:51:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[21:52:03] <paul424> error: aggregate â€˜Ogre::StringStream strstreamâ€™ has incomplete type and cannot be defined
[21:52:04] *** Joins: nq (~nq@82.78.21.171)
[21:52:13] <paul424> while it;s just defined as     typedef std::stringstream 	Ogre::StringStream
[21:52:28] <paul424> in Ogre 1 13
[21:53:57] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[21:55:56] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Quit: leaving)
[21:58:07] *** Joins: k8yun (~k8yun@user/k8yun)
[21:59:58] *** Quits: jsbach (~jsbach@62.218.23.190) (Ping timeout: 260 seconds)
[22:00:47] *** Quits: Roughy (~mdaw45ns@user/roughy) (Read error: No route to host)
[22:02:01] *** Joins: proller (~p@80.240.216.69)
[22:03:44] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[22:04:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[22:04:40] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[22:07:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:08:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[22:08:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:08:24] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[22:09:43] <lpapp> paul424: is the header included for stringstrema though?
[22:09:51] <lpapp> or is the typedef included?
[22:10:05] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[22:10:54] <paul424> lpapp, yeah I solved by incluidng the sstream header fiel
[22:10:57] <paul424> file*
[22:13:32] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:13:32] <lpapp> good
[22:18:16] *** Quits: foobaz21215 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:18:29] *** Joins: foobaz21215 (~foobaz212@152.37.103.80)
[22:19:22] *** Quits: undephin3d (~undephin3@158.181.81.11) (Ping timeout: 272 seconds)
[22:26:04] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[22:26:29] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[22:30:16] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[22:30:39] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[22:34:09] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[22:36:41] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[22:37:02] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[22:38:13] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[22:38:33] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[22:43:09] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[22:43:30] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[22:44:36] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:44:38] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[22:44:58] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[22:46:39] *** Joins: proller (~p@2a02:6b8:b081:b65c::1:b)
[22:47:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:49:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:51:01] *** Joins: gehn (~gehn@user/gehn)
[22:52:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:57:00] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:59:52] *** Joins: nafen_ (~nafen@gateway/tor-sasl/nafen)
[23:00:18] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[23:04:13] *** Quits: jokoon (~eio@2a01:e0a:542:e160:ed19:5274:4d1:dce0) (Quit: Leaving)
[23:05:34] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[23:06:59] *** Quits: paul424 (~tom@ip-5-172-236-69.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:15:03] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Quit: Leaving)
[23:16:02] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[23:18:38] *** Joins: paul424 (~tom@ip-5-172-237-214.multi.internet.cyfrowypolsat.pl)
[23:23:16] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:23:57] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[23:26:11] *** Joins: lxsameer (lxsameer@user/lxsameer)
[23:31:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:f892:3809:ac7b:1ca4)
[23:36:55] <Alipha> lpapp: if the pointed-to char array is going to live long enough (eg, you're pointing to a string literal), then yeah, return a std::string_view if possible. Otherwise, you have to return a std::string
[23:41:49] <lpapp> Alipha: internal std::string member
[23:42:00] <lpapp> we are currently returning a const std::string&
[23:42:12] <lpapp> was just wondering if string_view is "more modern"
[23:43:06] <Alipha> lpapp: I don't see an advantage of std::string_view over const std::string& in that case. If the caller wants a string_view, they can just make one themselves
[23:44:20] <Alipha> And if you return a std::string_view and then want to pass that to a function expecting const std::string&, you're going to end up making a copy of the string
[23:45:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:45:25] <lpapp> ok, thanks
[23:45:44] <lpapp> what if we also change the internal storage as well as the setter from const std::string&?
[23:48:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:48:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:50:47] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:2f9c)
[23:50:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
