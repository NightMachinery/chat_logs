[00:01:09] <skylite> I feel ashamed... I could put one single await inside that for loop and all my problems would go away. maybe with a // eslint-disable-next-line no-await-in-loop
[00:01:20] <skylite> maybe no one would ever know
[00:02:05] <ljharb> skylite: share more of your code and i'll show you how to do it without a loop
[00:02:26] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[00:02:39] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[00:02:43] <skylite> without a loop? :O hang on
[00:02:57] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[00:03:24] <DPA> Cursed code, for many reasons: https://jsfiddle.net/q2crzjt4/1/  This assumes that the resource has finite dependencies, and that the promises or then-ables for the same resource return a reference to the same object. When that's not true, it will not terminate.
[00:05:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1d57:8085:a2ac:6196)
[00:05:34] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:06:50] *** Quits: mohammad5305 (~mohammad@2.180.188.123) (Ping timeout: 272 seconds)
[00:08:20] *** Joins: mohammad5305 (~mohammad@2.180.234.172)
[00:09:04] <skylite> ljharb: https://pastebin.com/6n2wVkUJ
[00:09:06] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e) (Ping timeout: 260 seconds)
[00:09:48] <skylite> so this code currently gives me what I want
[00:10:19] <skylite> I'm just frustrated about line 58-59
[00:10:37] <ljharb> lol use codesandbox so i can edit it
[00:10:39] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:10:52] *** Quits: nomic (~nomic@85.203.36.247) (Quit: Leaving)
[00:11:11] <skylite> sure ok
[00:13:44] <skylite> https://codesandbox.io/s/strange-sun-tldfsu?file=/src/index.js
[00:14:10] <skylite> aam
[00:14:34] <skylite> ok now it is saved
[00:15:18] <DPA> let await_later=[];  ...  await_later.push((async()=> node.relationships[field] = await recursiveFetchContent(relatedLink, validFields) )()); ... Promise.all(await_later); await_later=null;
[00:15:31] *** Quits: mohammad5305 (~mohammad@2.180.234.172) (Remote host closed the connection)
[00:15:36] <DPA> * await Promise.all(await_later)
[00:16:48] <DPA> Just wrapp it in an async function, call it immediately, add it to a list to await it later, and then await it all after the loop.
[00:17:48] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[00:18:02] <samsch> `+function doYouPromise() { return Promise.resolve(true).then(doYouPromise); }()`
[00:18:15] <ljharb> skylite: ok, so many gross loops. working on it.
[00:18:31] <samsch> nested loops takes a hot second to fix
[00:19:27] <ljharb> skylite: also the early lines should be `const { included, data: d } = await res.json();` and `const data = [].concat(included || d);`, no need for all those lets and if's and whatnot
[00:20:18] <skylite> I was sure that that can take some rework but I left it for simplicity
[00:20:36] <ljharb> skylite: ok so you really want the entire thing to return early if any of the `data` items are falsy?
[00:20:49] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[00:21:21] <ljharb> skylite: or do you just want to skip `data` items that are falsy
[00:21:23] <skylite> well yes because I have no reason to do anything with it
[00:21:36] <ljharb> skylite: ok but `[1, false, 2]` would return before hitting the 2. is that what you want?
[00:21:47] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:21:50] <skylite> if data[i] is falsy I don't need data[i]
[00:22:18] <ljharb> skylite: but you DO need `data[i+1]`, right?
[00:22:30] *** Quits: crst (~crst@81-230-180-214-no2661.tbcn.telia.com) (Remote host closed the connection)
[00:22:31] *** Quits: D4mned (~D1mned@89.108.142.112) (Read error: Connection reset by peer)
[00:22:32] <ljharb> potentially
[00:22:58] <skylite> sure if data[i+1] has anything in it
[00:22:59] *** Joins: D4mned (~D1mned@89.108.142.112)
[00:23:00] <skylite> I need it
[00:23:20] <ljharb> skylite: ok so your code has that as a bug rn. i'll fix that too.
[00:24:11] *** Joins: rpino (~textual@189.172.95.214)
[00:26:32] *** Quits: TedCHoward (~TedCHowar@072-181-136-152.res.spectrum.com) (Quit: Leaving...)
[00:27:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[00:27:06] <ljharb> skylite: and are you intending `node.meta` to be overwritten every time it's assigned?
[00:27:21] <ljharb> skylite: meaning, what happens if more than one `data` item has a non-null `.meta.alt`
[00:27:22] <skylite> well, no.
[00:28:04] <skylite> It would be better if I just save the meta whenever I find it
[00:28:20] <skylite> but that is also something that just gave me what I needed so I left it like that
[00:28:49] *** Quits: Tabmow (~tabmow@user/tabmow) (Quit: ZNC 1.8.2 - https://znc.in)
[00:28:56] <skylite> but maybe it would be better to do node.meta = data[i].meta;
[00:29:08] *** Joins: Tabmow (~tabmow@user/tabmow)
[00:29:13] <skylite> so whenever there is meta in the data I would have that
[00:29:43] <ljharb> skylite: that still has the problem of index 2 wiping out the meta from index 1
[00:29:49] <ljharb> skylite: maybe you want an *array* of metas?
[00:29:55] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[00:29:59] <ljharb> or an object mapping each data item to its meta, or something?
[00:30:12] <skylite> I don't think so
[00:30:19] <skylite> an entity can have only one meta
[00:30:59] <ljharb> skylite: but N data's?
[00:31:07] <ljharb> skylite: so you're saying that only one of the data items can ever have a meta?
[00:31:15] <ljharb> that seems like a very weird schema, if so
[00:31:31] *** Quits: aalmazan (uid180785@id-180785.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:32:43] <skylite> I think we don't need to worry about meta at this point I can figure that out
[00:33:25] <skylite> I can also see that metadata in data.attributes.field_meta for example here: https://backend.prompt.hu/jsonapi/node/home_page/78df967f-6af9-42ec-a9ed-102689fb6122?include=field_arajanlat_form
[00:33:40] <ljharb> k
[00:34:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:37] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1d57:8085:a2ac:6196) (Ping timeout: 250 seconds)
[00:36:05] <ljharb> skylite: also, you're making the same identical `relatedLink` request N times instead of once
[00:36:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:36:25] <ljharb> skylite: iow, it seems like you just need the content once, and then you store the same content under every field name
[00:36:34] <ljharb> is that accurate?
[00:36:43] *** Joins: Betal (~Betal@user/betal)
[00:36:54] <ljharb> i guess only for the field names that have field data
[00:36:59] <skylite> yes
[00:37:18] <ljharb> k
[00:37:22] <ljharb> sooo i'll fix that too
[00:37:42] <skylite> well I was so happy to put this function together I actually ignored the n times request although I think I suspected that at some point
[00:39:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:41:06] *** Joins: keypushe- (keypusher@user/keypusher)
[00:41:16] *** Quits: keypusher (keypusher@user/keypusher) (Read error: Connection reset by peer)
[00:42:55] <ljharb> oh my bad, the link is different for each field
[00:43:40] <skylite> oh so no "same request N times" then?
[00:44:08] *** keypushe- is now known as keypusher
[00:44:10] <skylite> I guess thats some releif
[00:44:30] <ljharb> right
[00:44:35] <ljharb> ok try https://codesandbox.io/s/mystifying-chatelet-wy5fz8
[00:44:44] <ljharb> it's not awesome but it's way simpler
[00:44:58] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[00:47:22] <blueagain> I like the succint commenting "// gross"
[00:47:28] *** Joins: pavonia (~user@user/siracusa)
[00:47:30] <blueagain> really made me laugh
[00:47:38] <skylite> O_O
[00:47:51] <ljharb> algorithmic re-casing is gross ¯\_(ツ)_/¯
[00:48:10] <skylite> but what else can I do
[00:48:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:48:52] <skylite> I think it's because those things will at some point be used as css class names
[00:49:37] <skylite> ah no not really
[00:51:03] *** Quits: average (~average@user/average) (Quit: WeeChat 3.0)
[00:51:11] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[00:51:11] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[00:51:11] *** Joins: average (~average@user/average)
[00:53:24] <skylite> well the output is the same as it was before
[00:53:33] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:53:38] <skylite> only a lot faster
[00:53:53] <ljharb> and no loops
[00:53:57] <ljharb> and no nested promises
[00:54:11] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:54:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:55:22] <skylite> I just need a day or two to undestand this
[00:55:56] <skylite> well maybe not that much
[00:55:57] <blueagain> I guess that's what you call data-driven programming
[00:57:22] <ljharb> skylite: the concat and flatMap tricks are awesome, idiomatic, and also very subtle, so make sure to understand those
[00:58:07] <skylite> exactly those two I'm looking at the most
[00:58:53] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:59:03] <skylite> how can I ever return this favor?
[00:59:06] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[01:01:09] <ljharb> skylite: write better JS code
[01:01:29] <ljharb> but also i can be sponsored on github :-p espeically if you type `npm fund` in your application, and my name shows up
[01:01:52] *** Quits: mikrosis (~mikrosis@dynamic-046-114-169-113.46.114.pool.telefonica.de) (Quit: Connection closed)
[01:02:16] <skylite> :D actually thats what I did... the original version of this function was a real disaster
[01:02:49] *** Joins: wootz (~wootz@2806:1000:8000:b6a2:9197:d69a:2ddb:9440)
[01:04:35] <blueagain> ljharb: for me it's always difficult to use something until I have a "feel" for it, for its usefulness. For example, I don't really use flatMap a lot in my code, it could be useful in some places, but I haven't developed a feel for its useful use yet
[01:05:02] <blueagain> but once it clicks, I'd use it everywhere where it solves the problem elegantly
[01:05:06] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 272 seconds)
[01:06:26] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[01:06:27] <ljharb> blueagain: i use it much more often as a `filterMap`
[01:06:46] *** Joins: crashrep (~crashrep@user/crashrep)
[01:07:10] <ljharb> iow, `arr.map(x).filter(y)` can be `arr.flatMap((...args) => y(...args) ? [x(...args]] : [])`, generically
[01:08:06] <blueagain> oh, interesting, I use map followed by filter a lot.
[01:08:55] <blueagain> so [] (the `else` in the tertiary op) would be flattened, ie removed in the flat step, right?
[01:08:59] <ljharb> correct
[01:09:15] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[01:09:31] <ljharb> my flatMap alternative isn't 1:1 identical ofc, map + filter maps every element and then filters every element; the flatMap filters every element but only maps the resulting ones
[01:09:42] <ljharb> so that flatMap is more like a `.mapFilter` than a `.filterMap`, i suppose :-)
[01:10:03] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[01:11:18] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:11:29] *** Joins: rpino (~textual@189.172.95.214)
[01:11:44] <blueagain> that is because your filter is "explicit" within the cb, and its "results" are taken care of by the flat step
[01:11:56] <blueagain> right?
[01:12:13] <ThePendulum> had a few situations the other week where I was pondering between .map().filter() vs .flatMap, think I only really feel like using .flatMap as a filter when I would be returning an array already
[01:13:16] <ljharb> blueagain: right
[01:14:50] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[01:15:04] *** Joins: kogepan (~kogepan@user/kogepan)
[01:16:15] <skylite> I'm still looking at the function but I'll probably do it for a while.
[01:16:41] <skylite> thanks a lot ljharb
[01:16:50] <skylite> I have a lot to learn
[01:18:39] <jmcantrell> Is there a way to re-export and also use a module? Something like: `export * as foo from "foo"; export default stuff = [foo]`
[01:19:14] <ljharb> jmcantrell: yes
[01:19:23] <ljharb> jmcantrell: exactly that
[01:19:32] <ljharb> jmcantrell: altho i'd advise against re-exporting; deep importing is the best approach for tons of reasons
[01:20:11] <ljharb> maybe it was down to 7 minutes? either way, a huge bump
[01:21:34] *** Quits: w0ng (~w0ng@185.218.127.25) (Ping timeout: 250 seconds)
[01:22:40] <jmcantrell> ljharb: sorry, that should have been `export default [foo]`. i think what i had first was an error. either way, `export default [foo]` gives an reference error.
[01:22:52] <ljharb> jmcantrell: ohhh sorry
[01:22:56] <jmcantrell> also, can you explain what you mean by deep importing?
[01:23:04] <ljharb> jmcantrell: if you want to use it in the file, you need to import it and re-export it separately.
[01:23:22] <ljharb> jmcantrell: iow, `import * as foo from 'foo'; export { foo }; export default [foo]`
[01:23:27] <jmcantrell> yeah, i was afraid of that. ok
[01:23:40] <ljharb> jmcantrell: what i mean is, instead of having a big ol "manifest" or "barrel" index file, deeply import the exact file path you want
[01:23:53] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:23:57] <ljharb> tree-shaking only provides a benefit (and can't do a perfect job) when you sloppily import more than you need in the first place
[01:25:38] <jmcantrell> this is for routes, where i need them all at once and in a particular order. there's one `import * as <routeName> from ...` for each route.
[01:25:57] *** Joins: rpino (~textual@189.172.95.214)
[01:27:05] <jmcantrell> This is all in `./src/routes/index.js` and I `import * as routes from './routes.js'` from where the router is created
[01:29:31] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 245 seconds)
[01:30:57] <ljharb> jmcantrell: ok but then why do you need the default to also contain them?
[01:31:05] <ljharb> you want them to be importable both as a list and as an individual item?
[01:31:06] *** Joins: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[01:31:30] <ljharb> jmcantrell: i'm suggesting you import default from `./routes/index.js` for the list, and import default `./routes/a.js` for the "a" route
[01:31:45] <ljharb> and ideally, use babel, so you can omit all those unnecessary extensions
[01:32:43] *** Joins: ferdna (~ferdna@user/ferdna)
[01:33:02] *** Joins: w0ng (~w0ng@103.1.212.92)
[01:33:58] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[01:35:11] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[01:36:10] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[01:36:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:37:11] <jmcantrell> i think that's exactly what i'm doing (including babel, i just included the extensions here for clarity). `import { default as routes } from "./routes"` for the ordering and `import foo from "./routes"` for individual ones.
[01:37:42] <jmcantrell> oh, i see what you mean on the second thing.
[01:38:00] <ljharb> then you have no re-exports
[01:38:08] <ljharb> and then, files that only need one route don't have to evaluate *every route* unnecessarily
[01:39:27] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[01:39:52] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:40:20] <jmcantrell> makes sense. thank you
[01:42:26] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 260 seconds)
[01:43:56] *** Joins: biberu (~biberu@user/biberu)
[01:44:05] <blueagain> is rabbitmq still a thing? or do people use something else today for messaging?
[01:44:25] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[01:44:41] <jaawerth> ljharb: my memory is going. there *was* a re-export syntax that didn't make it past the cutting room floor, right?
[01:47:17] <blueagain> jaawerth: isn't that e.g. `export {default as Something} from "./Something.js"`
[01:47:34] *** Quits: Maxdaman1us (~Maxdamant@user/maxdamantus) (Ping timeout: 260 seconds)
[01:48:02] <jaawerth> yeah, I thought there was a more permissie earlier one but it might have been a systemjs quirk. I did use that for 5 minutes
[01:49:25] <blueagain> there's also `export {something} from "./file.js`
[01:49:44] <blueagain> or even `export * from ...`
[01:49:57] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[01:50:22] *** Joins: nomic (~nomic@85.203.36.247)
[01:51:14] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:51:20] <ljharb> jaawerth: there's two of them. one landed in ES2018 or so
[01:51:24] <ljharb> jaawerth: the other's a stage 1 proposal
[01:51:38] <jaawerth> ahh ok
[01:51:45] <ljharb> two that aren't in ES2015, i mean
[01:52:16] *** Joins: rpino (~textual@189.172.95.214)
[01:54:02] *** Joins: pulse (~pulse@user/pulse)
[01:55:46] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[01:57:06] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:57:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:02:03] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:02:11] <buu> ljharb: Yes, generically speaking, but I'd prefer to have it optimized for regex matches
[02:04:13] <ljharb> buu: not sure how it'd be any differently optimized by being specific
[02:04:32] <buu> ljharb: capture groups?
[02:04:50] <buu> Not sure either
[02:04:50] <ljharb> that's on the match object
[02:05:01] <ljharb> so you could just `{ groups }` in the signature of your callback
[02:05:16] <ljharb> so i think basically "optional pipeline" would work for you, but it's only a potential followup proposal
[02:05:21] <buu> Wait, which functions return match objects?
[02:05:40] <ljharb> .match and .matchAll (via iterator) and .exec
[02:06:08] <buu> b> ":a".match(/:(\w)/).groups
[02:06:09] <jellobot> (okay) undefined
[02:06:28] <buu> b> ":a".match(/:(\w)/)
[02:06:29] <jellobot> (okay) [ ':a', 'a', index: 0, input: ':a', groups: undefined ]
[02:06:35] *** Quits: salad (~cucumber@82.76.150.118) (Quit: salad)
[02:06:44] <buu> wtf
[02:08:05] <ljharb> oh right, that's just for named capturing groups
[02:08:18] <ljharb> n> ':a'.match(/:(?<buu>\w)/).groups @ buu
[02:08:19] <jellobot> buu, [Object: null prototype] { buu: 'a' }
[02:08:44] <ljharb> buu: but also it's index 1 in the match object, not that that's super helpful
[02:09:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:13:14] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[02:14:09] <buu> ljharb: This is the type of code I write a lot of https://clbin.com/bOmNC
[02:14:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[02:14:49] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:15:08] <buu> It's just.. ugly
[02:15:09] <_val_> Good day everyone. So I am using postman to send an api request to my page which is something like: https://somestatus.domain.tld/?apikey=MY_LONG_APIKEY  and the page displays pretty nice using the web browser.. but using curl or postman I only get  <script nonce="some_base64_encoded_string" src=/static/app.js.. and so on
[02:15:37] <ljharb> buu: seems like you could do that in one big regex
[02:15:49] <_val_> how can I get a json output that pretty much does what the webpage is showing?
[02:15:59] <buu> _val_: Rewrite the server
[02:16:10] <ljharb> buu: with all the capturing groups named, and in one regex, it'd be pretty clean
[02:16:33] <ljharb> _val_: you can't really do anything with that short of having an actual browser render it
[02:16:58] <buu> _val_: You might check for http requests made after the page renders
[02:17:23] <buu> ljharb: and then do if(groups.pages) { book.pages = groups.pages } ?
[02:17:24] <_val_> buu: I am doing so but where am I looking at?  I did inspect the source.. but can';t figure it out
[02:18:00] <_val_> ljharb: well I understand that the browser renders javascript but I am only interested in the json version retrieved by postman or curl ..
[02:18:10] <buu> _val_: look at the http requests tab in the browser inspector
[02:18:22] <buu> _val_: Why do you think there's a json version?
[02:18:33] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:19:17] <_val_> buu: that is a good question. Well At least something.
[02:19:33] <buu> _val_: Perhaps you should take a step back
[02:19:36] <_val_> buu: where is the http request tab? Cant find it. Using firefox here
[02:19:41] <ljharb> _val_: there is no json version
[02:19:48] <ljharb> _val_: it's a webpage. there's no such thing as an inherent "json version"
[02:20:02] *** Quits: pmercado (~pmercado@186.107.55.248) (Ping timeout: 240 seconds)
[02:21:34] <buu> _val_: "The Console panel in Firebug allows to log AJAX requests (aka XMLHttpRequests). This option is also available within the DevTools Web Console via the Net > XHR. Furthermore, the Web Console even allows to display all other network requests via Net > Log.
[02:21:52] <buu> also: https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor
[02:22:55] <buu> _val_: If the website is truly just a static app.js type page then it's probably making an "ajax" request for more data to display, if you're lucky you can intercept that request and get json
[02:23:25] *** Quits: karabaja4 (~karabaja4@dh207-92-111.xnet.hr) (Remote host closed the connection)
[02:25:00] <jaawerth> _val_: bonus points, if what you ultimately want is curl, you can right-click a request in the network tab and do "copy->copy as cURL"
[02:25:56] <buu> does firefox do that ?
[02:26:01] <jaawerth> yep
[02:26:07] <jaawerth> both chrome and ff do
[02:26:16] <jaawerth> (as well as copy as fetch)
[02:27:24] <buu> cool beans
[02:27:32] <jaawerth> you can also save HAR files but I rarely, if ever, bother with that
[02:27:41] <jaawerth> if I'm gonna get THAT fancy I'll use mitmproxy or something
[02:28:46] <_val_> Hmm I don't know guys. I just don't understand this web stuff. :/
[02:29:40] <buu> Pesky websites.
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:30:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Read error: Connection reset by peer)
[02:31:10] <buu> Websites are just a series of requests!
[02:31:13] <buu> And sometimes responses!
[02:31:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:31:45] <jaawerth> _val_: did you look at buu's link? there's screenshots and everything
[02:32:11] <jaawerth> the only way I can think of for you not to have that tab in devtools would be if you custommized devtools to remove it
[02:33:48] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[02:33:56] *** Joins: pizdets (~pizdets@183.182.110.6)
[02:34:20] *** Quits: pizdets_ (~pizdets@183.182.110.47) (Ping timeout: 265 seconds)
[02:34:45] <buu> Oh augh
[02:34:56] <buu> Empty matches make for undefined array elements
[02:35:03] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 3.0)
[02:35:05] <buu> Er, optional
[02:35:07] *** Joins: silverdust (~silverdus@user/silverdust)
[02:35:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:35:58] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:36:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:37:35] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[02:39:46] <_val_> buu: I did yes
[02:40:00] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 252 seconds)
[02:40:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[02:40:03] <_val_> I mean jaawerth I did watch the link
[02:40:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:40:20] <_val_> Anyways.. these are seperate get requests
[02:40:20] *** Quits: D4mned (~D1mned@89.108.142.112) (Read error: Connection reset by peer)
[02:40:22] *** Joins: D3mned (~D1mned@89.108.142.112)
[02:42:14] <_val_> but I am leaving for now. Thanks for the pointers guys. Maybe I need to dive more into this inspector thing before asking questions.  Have a nice day and appreciate the help!
[02:42:19] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (Quit: leaving)
[02:43:05] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:45:25] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[02:50:43] *** Joins: D2mned (~D1mned@89.108.142.112)
[02:52:28] *** Joins: box2 (~box2@ool-68f679fc.dyn.optonline.net)
[02:53:12] *** Quits: D3mned (~D1mned@89.108.142.112) (Ping timeout: 252 seconds)
[02:56:13] *** Quits: box2 (~box2@ool-68f679fc.dyn.optonline.net) (Remote host closed the connection)
[02:56:30] *** Joins: box2 (~box2@ool-68f679fc.dyn.optonline.net)
[02:57:15] *** Quits: box2 (~box2@ool-68f679fc.dyn.optonline.net) (Remote host closed the connection)
[02:59:32] *** Quits: antsomers (~thiras@user/thiras) (Ping timeout: 240 seconds)
[02:59:49] <ProfSimm> I give you two classes, container types. Bag, and Box. From the names alone, what semantics you'd guess they have?
[02:59:49] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[03:00:17] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Killed (NickServ (GHOST command used by Maxdaman1us)))
[03:00:25] *** Maxdaman1us is now known as Maxdamantus
[03:00:34] *** Joins: box2 (~box2@rdlabs.org)
[03:00:34] <buu> Clearly boxes are hard and rigid
[03:00:36] <buu> and bags are soft
[03:01:19] <box2> has anyone tried chrome experimental feature trust token?
[03:01:58] <ProfSimm> buu: indeed.
[03:02:50] <ProfSimm> buu: in my case a Bag is an associative (map) container where the items are not iterable and not ordered. You can only index into them if you ask for a specific key. A Box is instead an array, ordered, iterable, where some of the values, on top of a numeric index, may have a text key.
[03:03:34] <box2> seems to be an extension of IETF's proposal for privacy pass
[03:05:40] *** Joins: silverdust (~silverdus@user/silverdust)
[03:09:01] <buu> ProfSimm: sounds like a js object
[03:09:30] *** Quits: kmh (~kmh@2a00:6020:5004:6800:fd3f:396e:bfc3:ce35) (Read error: No route to host)
[03:09:34] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Read error: Connection reset by peer)
[03:09:47] *** Joins: kmh (~kmh@2a00:6020:5004:6800:2936:7094:fde0:e329)
[03:10:07] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[03:10:25] <box2> seems like a pretty cool feature for replacing cookies? https://www.chromium.org/updates/trust-token/
[03:10:56] <ProfSimm> buu: which one
[03:11:00] *** Quits: colordro1 (~erahhal@69.53.245.255) (Ping timeout: 240 seconds)
[03:11:03] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[03:11:05] <buu> the box
[03:11:10] <buu> or a php 'array'
[03:11:21] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: tcsc (sid145321@id-145321.lymington.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[03:11:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15) (Read error: Connection reset by peer)
[03:11:32] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Read error: No route to host)
[03:11:37] *** Quits: ross (sid305269@user/ross) (Read error: Connection reset by peer)
[03:11:38] *** Quits: Teckla (sid172075@user/teckla) (Read error: Connection reset by peer)
[03:11:43] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[03:11:44] <ProfSimm> buu: well, kinda but not. The box is fixed width, never sparse, and the "named" items also have a numeric key, it's not either name or number, it's both
[03:11:44] *** Joins: tcsc (sid145321@id-145321.lymington.irccloud.com)
[03:11:51] *** Joins: ross (sid305269@user/ross)
[03:11:54] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:55] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[03:11:55] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Read error: Connection reset by peer)
[03:11:55] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Read error: No route to host)
[03:12:03] <ProfSimm> buu: in effect it's a fancy C array or a tuple
[03:12:10] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[03:12:11] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15)
[03:12:12] *** Joins: wyre (~wyre@user/wyre)
[03:12:18] *** Joins: Teckla (sid172075@user/teckla)
[03:12:19] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:12:22] *** Joins: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com)
[03:12:31] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[03:12:46] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[03:12:53] <buu> oh
[03:12:54] <buu> why
[03:12:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[03:13:17] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:13:31] *** Joins: mcint (mcint@user/mcint)
[03:13:33] *** Quits: epicout (~epicout@2a01:e0a:77:db70:978a:6e9:9495:cd9d) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: Deide (~deide@user/deide) (Ping timeout: 252 seconds)
[03:14:24] *** Joins: epicout (~epicout@2a01:e0a:77:db70:978a:6e9:9495:cd9d)
[03:15:13] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:15:15] <ProfSimm> buu: because it's cleaner, faster, meaner
[03:16:23] *** Joins: colordro1 (~erahhal@69.53.245.255)
[03:17:14] *** Joins: antsomers (~thiras@user/thiras)
[03:26:18] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0) (Remote host closed the connection)
[03:26:50] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[03:26:51] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:9517:789e:312f:57d7)
[03:27:33] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[03:29:37] *** Joins: Deide (~deide@user/deide)
[03:33:58] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[03:37:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15) (Ping timeout: 245 seconds)
[03:38:37] <jaawerth> can't you just give them descriptive names?
[03:39:29] <jaawerth> OrderedMap / HashMap or some such? bag and box is IMO a little too cute :P
[03:39:51] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:39:56] <jaawerth> if anything I'd saya big is just something you can throw thing into and empty. oh and remove an item at random, lol
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Remote host closed the connection)
[03:40:02] <jaawerth> also you could cut a hole in the bottom
[03:40:13] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:99b3:1e22:56c4:4228)
[03:40:31] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[03:40:41] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[03:44:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 250 seconds)
[03:46:17] *** Joins: Junxter (~Junxter@121.237.63.222)
[03:46:20] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[03:49:13] <Maxdamantus> `Box` in programming usually means a container for one thing.
[03:49:45] <Maxdamantus> usually implying a pointer/reference is used to access it.
[03:52:33] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[04:00:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:02:43] *** Joins: cyberban` (~user@2607:fb90:42b7:213f:db43:ae3e:7744:5cba)
[04:06:03] *** Quits: cyberbanjo (~user@2607:fb90:42b7:213f:732e:306d:a6f3:7f1) (Remote host closed the connection)
[04:12:56] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:99b3:1e22:56c4:4228) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:13:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:13:42] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[04:15:44] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 272 seconds)
[04:15:51] *** Joins: Praise- (~Fat@user/praise)
[04:17:14] *** Joins: codebam (~codebam@user/codebam)
[04:17:22] *** Joins: rpino (~textual@189.172.95.214)
[04:17:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:17:39] <codebam> hey there's a browser limit to how many connections you can have open at a time. how can I work around this, can I use a web worker for each instance?
[04:19:18] <codebam> opening a second browser process doesn't impose limits on the first process. is it an operating system limit, or is the browser limiting connections per process or per tab?
[04:21:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:24:07] <codebam> or, is it a limit on setTimeout() because I'm setting a 0ms timeout on each of my svelte components?
[04:24:53] <codebam> in a loop
[04:26:04] <codebam> or would it be because I'm generating random numbers for a "skew"? isn't javascript smart enough to know now to generate the random number at all if the left side is (0 * Math.random()) ?
[04:26:23] <codebam> s/now/not
[04:26:59] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:27:32] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[04:28:34] <systemfault> It is one... two... a billion questions?
[04:28:48] *** Joins: rpino (~textual@189.172.95.214)
[04:29:16] <systemfault> Browser limit, if you're talking about simultaneous connections, then yes... limited by the browser (IIRC... it's like 6-8 max)
[04:29:36] *** Joins: bprompt (~default@207.98.72.11)
[04:29:38] <systemfault> setTimeout or 0ms in the browser is a lie... the minimum is something like 4ms
[04:30:02] <systemfault> Math.random() returns a number between 0 and 1... so, if you do * 0, it will always be 0
[04:30:26] <systemfault> I don't know svelte... picking a framework nobody uses if you're a beginner doesn't seem like a good choice.
[04:30:58] *** Quits: bprompt (~default@207.98.72.11) (Client Quit)
[04:31:52] <KevinX> anything * 0 = 0
[04:32:15] <systemfault> Yup
[04:32:18] <KevinX> but who knows in JavaScript
[04:32:19] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[04:32:25] <KevinX> ;-)
[04:32:26] <systemfault> Haha
[04:32:44] <KevinX> I think the setTimeout depends on what's on the event stack at that given moment
[04:33:05] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:33:10] <systemfault> Of course, but even if the stack is empty, it won't ever be 0
[04:33:16] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[04:33:20] <systemfault> It's an artificial constraint.
[04:33:37] <codebam> so I added an if, else if, check for my interval and skew so that it doesn't even call setTimeout if they're set to 0
[04:33:38] <KevinX> i wonder what it is though
[04:33:53] <KevinX> or what it could be in the best case
[04:34:11] <codebam> but when I do that I get net::ERR_INSUFFICIENT_RESOURCES
[04:34:38] <codebam> probably because it tried to call fetch 1300 times in 1ms
[04:34:43] <KevinX> i know know what a skew is
[04:35:00] <codebam> skew is just a number that I'm multiplying by a random value between -1 and 1
[04:35:07] <codebam> and adding to interval
[04:35:27] <KevinX> I don't even know if V8 will short circuit if you have (0 * Math.ranodm())
[04:35:43] <systemfault> codebam: It should queue the requests it can't process at the same time
[04:35:44] <codebam> I can check
[04:36:07] <codebam> systemfault: oh so when it gets that error it'll still eventually send the request?
[04:36:08] <KevinX> I htink I saw your random function yesterday and it didn't look like it would print the values you expect
[04:36:26] <codebam> this is it
[04:36:48] <codebam> interval + (skew * ((Math.random() - 0.5) * 2))
[04:37:07] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:4da8:368c:98cd:8404) (Remote host closed the connection)
[04:37:12] <KevinX> Also, if you call 1k setTimeouts at once they all start at the same time
[04:38:09] <KevinX> what values are you using in there?
[04:38:42] <codebam> 0 and 0, right now
[04:38:48] <codebam> so it's just 0
[04:39:15] <codebam> if I do it like that with settimeout the process actually runs, but if I call my function directly like this
[04:39:46] <codebam> https://pb.sbehan.ca/AZjP
[04:39:57] <codebam> it gives me insufficient resources and stops
[04:40:04] <codebam> after about 5000 errors
[04:40:27] *** Quits: laris (undead@37.221.209.36) (Ping timeout: 252 seconds)
[04:41:08] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:41:28] *** Joins: audio (~audio@user/audio)
[04:42:14] <KevinX> yeah it just calls itself forever
[04:42:25] <KevinX> you're invoking it from within itself
[04:42:38] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 252 seconds)
[04:43:26] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:43:30] <KevinX> hard to read that paste too with the diff in there.
[04:43:39] <codebam> sorry I can paste without
[04:44:02] <codebam> it works with skew set to 1 so I think setTimeout() is making it work
[04:44:09] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:41cb:43ff:7db5:d0eb)
[04:44:24] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:44:52] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[04:45:14] <codebam> https://pb.sbehan.ca/G6ax
[04:45:38] <KevinX> if you set up something I can fix it in then that will save time
[04:45:50] <Maxdamantus> codebam: in case noone else has said it, if you want to "work around" the browser's connection limit, just make sure your server supports http2.
[04:46:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:46:23] <Maxdamantus> Then the browser will very likely make more concurrent requests than the the connection limit.
[04:46:29] <codebam> github pages would support http/2 right?
[04:46:36] <Maxdamantus> Yes.
[04:46:39] <codebam> okay
[04:47:13] <codebam> is there a workaround for http/1? can I start web workers or something?
[04:47:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Quit: Leaving)
[04:48:16] <Maxdamantus> Given that you're talking about GH pages which afaik only support static data, why are you worried about the connection limit?
[04:48:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:48:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:48:43] *** Joins: wroathe (~wroathe@user/wroathe)
[04:49:12] *** Joins: laris (undead@37.221.209.36)
[04:50:07] *** Joins: rpino (~textual@189.172.95.214)
[04:50:46] <Maxdamantus> and no, I don't think web workers will help you work around it, unless you're talking about implementing your own multiplexing within a web worker (eg, by sending multiple HTTP requests over a single websocket).
[04:51:47] <Maxdamantus> That will require special support on the server, and I suspect most browsers that support web workers will also support http2, so you might as well just make sure that http2 works.
[04:52:07] <codebam> oh okay. will fetch use http/2 by default if it's available, or do I need to do something to use it?
[04:53:27] <Maxdamantus> Yes, any web browser released in the last few years will use http2 if available (assuming https).
[04:54:21] <codebam> oh okay. is there a limit on http/2 connections? maybe I'm hitting that
[04:54:49] <codebam> would no-cors header force HTTP/1
[04:55:10] <Maxdamantus> er, when you said web worker before, I was thinking of service workers. web workers won't help, but service workers could theoretically be used to multiplex requests as I described above (but again, a custom multiplexing protocol is probably useless given than http2 exists and is well-supported)
[04:55:24] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[04:55:53] <codebam> oh yeah I was more thinking of using *service workers to run the requests on a different thread as to bypass the HTTP/1 connection limit
[04:56:07] <codebam> but it doesn't sound like that would work
[04:57:48] <Maxdamantus> I don't think CORS will cause switching to HTTP/1
[04:58:20] <systemfault> You know... that limit is alright for small companies... like Google, Facebook, Instagram, Baidu, etc... but not for codebam
[04:59:35] *** Joins: c4017w (~c4017@209.52.68.8)
[04:59:53] *** Joins: greentree (~greentree@user/greentree)
[05:01:38] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:01:57] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0)
[05:02:19] <greentree> how could i make a simple form w/ textarea and have it auto submit on a paste event to the textarea, i've tried setting it up but my server receives a blank string
[05:02:19] <greentree> https://jsfiddle.net/4twahkrs/
[05:02:23] <greentree> i was pretty much trying this
[05:02:28] <codebam> I don't get why there's a limit though
[05:02:47] <codebam> is this limit part of the browser or part of V8?
[05:02:55] <Maxdamantus> codebam: what makes you think there's a limit?
[05:03:02] *** Quits: RubiZockt__ (~Username@2001:9e8:6c65:eb00:a825:db55:bcd7:bf1a) (Read error: Connection reset by peer)
[05:03:04] <codebam> well because I get insufficient resources?
[05:03:44] <Maxdamantus> What do you mean? You get an error which says "insufficient resources"?
[05:03:54] <codebam> oh it works way better in firefox
[05:04:06] <codebam> so it's gotta be the browser or V8
[05:04:10] <codebam> it's not a standard
[05:04:48] <codebam> in fact firefox somehow manages to make sure each one gets the same amount of requests
[05:04:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:9517:789e:312f:57d7) (Ping timeout: 240 seconds)
[05:05:41] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[05:05:50] <Maxdamantus> If you're seeing responses that are not ok, those are probably coming from the server, not from the browser.
[05:06:42] <Maxdamantus> If the request fails, that will be handled by your `catch`. The `then` will handle any response emitted by the server.
[05:07:51] <Maxdamantus> If you're seeing some difference there between browsers, it could be some limit imposed by GH pages. Maybe when using a different browser, you're using a different session cookie so the limit is not reached anymore.
[05:09:44] <codebam> wait would this limit be because I'm running it in a dev server?
[05:09:52] <codebam> that... could be it
[05:10:08] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 252 seconds)
[05:11:13] <codebam> oh
[05:11:17] <codebam> "Uncaught InternalError: too much recursion"
[05:11:27] <codebam> is there a way I can workaround that?
[05:11:40] <merced> use less recursion probably
[05:11:47] <tokie> use a language that's tail call optimized
[05:12:09] <codebam> is there a recursion library I can use that's tail call optimized?
[05:12:12] <codebam> for js
[05:12:28] <merced> maybe with a C binding
[05:13:11] <merced> oof yeah nothing supports that besides safari, browser-wise https://kangax.github.io/compat-table/es6/
[05:13:18] <tokie> convert it to continuation passing style!
[05:13:20] <tokie> https://en.wikipedia.org/wiki/Continuation-passing_style
[05:14:02] <merced> tokie: i like how that article is mostly lisp
[05:14:11] <theskillwithin> finally upgrading, today I purchased the new mac studio and studio display
[05:14:32] <merced> :O
[05:14:33] <Maxdamantus> codebam: if you're using a dev server, I'm guessing you're not using https, so no http2.
[05:15:01] <merced> ah man i missed the whole apple event
[05:15:02] <tokie> merced: yeah :p
[05:15:24] <theskillwithin> I spent about $10k today
[05:15:32] <tokie> on macs?
[05:15:41] <theskillwithin> ya the mac studio, and monitor
[05:15:44] <merced> i spent $25 on cigarettes
[05:15:47] <Maxdamantus> (and in general, you need to be responsible for making sure http2 *is* enabled on your own server, so it's not guaranteed)
[05:15:59] <theskillwithin> the mac studio doesn't ship to me until May tho =[
[05:16:30] <merced> man
[05:16:34] <merced> thats a lot of money for a pre-order
[05:16:36] <codebam> oh, okay
[05:16:36] <merced> :(
[05:17:03] <theskillwithin> I plan on keeping it for at least 5 years.  my current computer (the trash can mac pro) i had for 9 years
[05:17:24] <merced> i still have a working windows laptop from 10 years ago
[05:17:29] <merced> but i use my macbook instead
[05:17:33] <merced> cuz that shits slow
[05:17:42] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0) (Remote host closed the connection)
[05:18:06] <codebam> I've been using thinkpads for years with linux but recently switched to using windows 11 and wsl2
[05:18:16] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9)
[05:18:17] <codebam> on my desktop
[05:18:17] <tokie> theskillwithin: yeah, i have the gen-1 m1 13" and it flies
[05:18:22] *** Joins: onosendi (~onosendi@user/onosendi)
[05:21:07] <merced> i wanna get an m1
[05:21:16] <merced> but i dont even fuckin leave the house anymore
[05:21:36] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 272 seconds)
[05:23:25] <codebam> why when I call setTimeout(flood, 0) I don't hit recursion limit but when I call flood() directly I do?
[05:23:56] <merced> sounds like a workaround to me
[05:24:01] <codebam> is setTimeout tail optimized?
[05:24:45] <merced> no but if you setTimeout(flood,0) inside your flood() function, the call stack will only _ever_ have flood() on it
[05:24:57] <merced> so you can never overflow the call stack
[05:25:25] <codebam> why doesn't the call stack increase?
[05:25:28] <codebam> I don't understand
[05:25:48] <merced> so when setTimeout executes your function, it actually executes in its own new blank stack frame
[05:26:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[05:26:15] <codebam> oh, I see okay. so that works around the limit
[05:26:16] <merced> what causes stack overflow is literally overflowing the call stack, eg calling flood() directly would give you frames like flood->flood->flood->flood
[05:26:20] *** Joins: jazzy (~jaziz@user/jaziz)
[05:26:28] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[05:26:29] <merced> but setTimeout(flood,0) would give you flood->DONE
[05:26:35] <codebam> oh I see
[05:26:36] <codebam> okay
[05:26:55] <merced> you just have to call the setTimeout inside your flood function
[05:27:07] <merced> instead of recursively call the function as you would normally do
[05:28:50] <codebam> is (0 * func()) optimized?
[05:29:07] <merced> no that would still create a new frame
[05:29:09] <codebam> or do I need to do a check for if (is_zero) {...} else {...}
[05:29:21] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:29:23] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[05:29:30] <codebam> no I mean like, does javascript know not to calculate the right side of that equation?
[05:29:58] <merced> nah i think it still would execute
[05:30:02] <merced> lets find out
[05:30:07] <Maxdamantus> codebam: semantically, `func()` is still called.
[05:30:29] <merced> yep still gets called
[05:30:31] <codebam> okay, so I need the if
[05:30:34] <Maxdamantus> codebam: so if it throws or modifies something visible, it will definitely not be omitted.
[05:30:36] <codebam> good to know, thank you
[05:30:48] <merced> https://i.imgur.com/v2wezuy.png
[05:31:20] <Maxdamantus> codebam: maybe if the implementation is able to figure out that `func()` has no side effects, it might be able to omit it in an expression like `0*func()`, but that expression would be useless anyway, so you probably wouldn't bother writing it.
[05:31:23] <codebam> no not flood() I mean I'm multiplying by a random generated value
[05:31:38] <codebam> so I was wondering if I need the if to check if it's 0, so that it doesn't bother calculating a random number
[05:31:59] <Maxdamantus> if you've got `x*func()`, it will very likely not do such an optimisation. it will assume that `x` might not be `0` and call `func()`.
[05:32:08] <codebam> oh okay
[05:32:17] <codebam> I'll do the check to make sure it's not 0 then
[05:32:42] <codebam> no need to generate a random number if it'll just be multiplied by 0 anyways
[05:33:15] <KevinX> I don't think you really need to optimize for `Math.random()`
[05:33:25] <Maxdamantus> Given your questions about recursion, I suspect such an optimisation doesn't matter for you.
[05:33:38] <codebam> oh, okay
[05:34:19] <KevinX> What does flood do? Are you painting to the screen?
[05:35:12] <codebam> it makes fetch requests
[05:36:59] *** Joins: rpino (~textual@189.172.95.214)
[05:37:37] *** Quits: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[05:38:55] *** Quits: cyberban` (~user@2607:fb90:42b7:213f:db43:ae3e:7744:5cba) (Remote host closed the connection)
[05:39:13] <KevinX> yeah but what's the purpose. There's probably a much better way to do it
[05:42:48] *** Joins: cyberbanjo (~user@2607:fb90:42b7:213f:db43:ae3e:7744:5cba)
[05:46:22] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:46:46] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:47:17] <greentree> https://jsfiddle.net/0qp3uLht/ is there a different event i can listen to for auto submitting a form?
[05:47:24] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:48:02] <greentree> when i use "paste" the data from the form submit doesn't send whatever is pasted into the textarea on event trigger
[05:48:16] <greentree> it only gets populated after (e.g a second paste shows the data from the first)
[05:51:34] *** Joins: Kira (~k_sze@mail2.kalunite.net)
[05:52:31] <Kira> Does modern javascript have a "reverse null coalescing" operator? Like, I don't want to write `foo === null ? null : someTransformFn(foo)`
[05:52:33] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[05:52:37] *** Joins: vysn (~vysn@user/vysn)
[05:53:40] <jaawerth> greentree: it's because paste happens irst, before the "input" action has updated the DOM value. even setTimeout(() => console.log(thi.elements[0].value), 0) is enough of a deferral for it to see the paste just by deferring it to a task queue on the event loop. that said, why not use the 'input' event?
[05:53:40] <KevinX> greentree pass in the event then `console.log(event.clipboardData.getData('Text'));`
[05:53:51] <jaawerth> or that ^
[05:54:02] <jaawerth> if you just need to see what was pasted and not a change to a form
[05:54:21] <jaawerth> it's probably also on event.target
[05:54:41] <KevinX> ill check
[05:54:46] *** Joins: Talon (~Talon@172.77.103.205)
[05:55:22] <KevinX> i think the event fires before the value is updated
[05:56:18] <KevinX> `setTimeout(() => console.log(e.target.value));` works though of course
[05:56:38] <jaawerth> ah it's event.clipboardData.getData()
[05:57:21] <jaawerth> KevinX: you don't say
[05:57:37] <KevinX> Kira `||` ?
[05:58:54] <KevinX> yeah the paste event is added to the event stack, so you add to it as well to get the value after
[05:59:02] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:59:27] <Kira> KevinX, that won't do, because `foo || someTransformFn(foo)` will effectively run `someTransformFn(foo)` if foo is null, but someTransformFn *cannot* take null, it will throw an error.
[05:59:41] <jaawerth> Kira: can you provide a more complete usage context?
[05:59:53] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:00:09] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[06:00:30] <KevinX> Kira so if foo is null, do nothing?
[06:00:58] <KevinX> `foo && something(foo)` ?
[06:01:05] <Kira> jaawerth: Well, let's say `someTransformFn(foo)` is a function defined by a 3rd-party library, which will transform foo into a different representation. The catch is that someTransformFn can't take null the argument, so I have to test if foo is null first.
[06:01:12] <jaawerth> just use !== with ||
[06:01:24] <jaawerth> or != i you also want to do nothing on undefined
[06:02:09] <KevinX> or `someTransformFn(foo ?? 'default')`
[06:02:58] <jaawerth> n> const [x, y] = [null, 'something']; [x !== null || Math.random(), y !== null || Math.random()]
[06:02:59] <jellobot> (okay) [ 0.763578041493014, true ]
[06:03:10] <KevinX> better to use `if {}` though probably
[06:03:21] <jaawerth> oh waitsorry, other way around
[06:03:24] <jaawerth> &&
[06:03:27] <jaawerth> not ||
[06:03:28] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:03:36] <jaawerth> n> const [x, y] = [null, 'something']; [x !== null && Math.random(), y !== null && Math.random()]
[06:03:36] <jellobot> (okay) [ false, 0.27915616421307665 ]
[06:04:19] <Kira> I kinda wish JavaScript had an operator like ?! or !?, so I can write `foo ?! someTransformFn(foo)`, which will return foo if foo is nullish (i.e. null or undefined), someTransformFn(foo) otherwise.
[06:04:26] <KevinX> `foo && something(foo)` <-- if foo is null or falsey then the latter isnt called
[06:04:36] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[06:04:53] <KevinX> oh you need to return null
[06:04:54] <jaawerth> that would include 0 and '' though
[06:05:18] <jaawerth> ahh returning null
[06:05:24] <KevinX> `return (foo && something(foo)) ?? null` ;-)
[06:05:26] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[06:05:39] <jaawerth> I mean, a ternary isn't so bad here
[06:05:45] <jaawerth> ust roll with the ternary
[06:05:57] <KevinX> yeah it's much more clear
[06:06:40] <KevinX> I think my example above would need || instead of ??
[06:06:57] <KevinX> and probably wouldnt work at all
[06:07:50] *** Quits: antsomers (~thiras@user/thiras) (Ping timeout: 272 seconds)
[06:09:31] <KevinX> or I guess it does
[06:09:37] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:09:47] <KevinX> n> const d = () => 6; console.log((7 && d())|| null)
[06:09:48] <jellobot> (okay) 6
[06:09:57] <KevinX> n> const d = () => 6; console.log((null && d())|| null)
[06:09:57] <jellobot> (okay) null
[06:10:10] <KevinX> anyway, it's ugly
[06:10:22] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[06:16:32] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:23:00] <theskillwithin> my home desk setup is going to be perfect once I get that mac studio and studio display in the mail
[06:25:35] <theskillwithin> the tabletop for my electric desk, my lil brother did the finishing wood work on it
[06:25:36] <KevinX> i'm considering it but thinking of looking for new work so probably not the best time
[06:27:25] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:28:35] *** Joins: rpino (~textual@189.172.95.214)
[06:29:06] *** Quits: federico_it (~textual@151.51.80.129) (Quit: Textual IRC Client: www.textualapp.com)
[06:30:45] <codebam> can javascript insert xlst parameters into the dom and load them into itself?
[06:31:06] <codebam> yes I know it doesn't make sense to do this, I'm just wondering
[06:32:45] *** Joins: src (~src@user/src)
[06:39:17] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:40:48] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[06:44:08] *** Quits: greentree (~greentree@user/greentree) (Quit: greentree)
[06:45:18] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[06:47:48] <onosendi> Apple's website is atrocious. I just want to scroll.
[06:49:24] <theskillwithin> ah ya they love that scroll hijacking long marketing graphic shit
[06:50:08] <onosendi> theskillwithin: wow, a semi-affordable display. I have to admin, their displays are badass.
[06:50:14] <onosendi> admit, rather.
[06:50:30] <theskillwithin> haha ya
[06:51:15] <theskillwithin> semi affordable compared to their other monitor
[06:51:53] <theskillwithin> long pages do convert tho apparently, and couresels don't convert
[06:51:59] <systemfault> Their other monitor was kind of stupid though...
[06:52:17] <systemfault> Not everyone working on macs are video editors...
[06:53:54] <codebam> is there a better way to use a new call stack than setTimeout(func, 0) ?
[06:54:20] <onosendi> theskillwithin: what's the deal with the stand/mounting? https://www.apple.com/shop/buy-mac/mac-studio-display
[06:54:20] <systemfault> Not that I know.
[06:54:26] <codebam> okay, cool
[06:54:44] <KevinX> Better how?
[06:54:46] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:54:57] <codebam> well just in that I wouldn't have to pass 0, I could just pass a function
[06:54:58] <theskillwithin> onosendi I chose the VESA mount option.  which ill have to use my own arms for of course.  i don't trust their stands anyways
[06:55:04] <KevinX> `promise.resolve().then`
[06:55:17] <systemfault> KevinX: A more descriptive way that wouldn't lose 4ms :p
[06:55:18] <KevinX> You can omit the 0 in setTimeout
[06:55:23] <codebam> so I can do `promise.resolve().then(func());`?
[06:55:26] <onosendi> theskillwithin: I'd do the same, for sure, but is that 1,599 on top of the price of the display?
[06:55:35] <codebam> or, (func)
[06:55:39] <codebam> idk
[06:55:42] <systemfault> Promise.resolve().then creates a microtask though....
[06:56:01] <theskillwithin> onosendi I found that confusing too,  it means total not on top of
[06:56:09] <onosendi> Ah
[06:56:20] <codebam> KevinX: oh cool, good to know thanks
[06:56:23] <KevinX> I think for what codebam is doing it won't matter
[06:56:28] <theskillwithin> i also did the nano-texture glass, which idk what that even is
[06:56:31] <systemfault> Still means that the height-adjustable stand is $400, that's a lot...
[06:56:36] *** Joins: Rockwood (~Rocky@user/rocky)
[06:56:39] <systemfault> You can get a normal monitor at that price.
[06:56:51] <codebam> well even in the case that it's just a loop that adds 1, you would hit recursion limit eventually without setTimeout()
[06:56:56] <onosendi> systemfault: the stand for the XDR was like, 1k or something.
[06:57:06] *** Joins: rpino (~textual@189.172.95.214)
[06:57:19] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[06:58:06] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[06:58:08] <theskillwithin> for my mac studio I went top of the line on all the options, except for storage I did 2TB.  and I didn't get the final cut pro/logic pro software
[06:59:03] <theskillwithin> probably a little overkill, but invest in the things you use the most is my excuse
[06:59:36] <codebam> is that 2TB nvme ssd? that's very nice if so
[06:59:58] <theskillwithin> ya i think so
[07:00:14] <codebam> nice, nvme is so fast
[07:00:19] <codebam> everything just opens
[07:00:21] <wyclif> I'm happy with my Mac Mini M1 and "normal" large-ish display, since I don't do video editing, just code editing
[07:00:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:01:45] <codebam> I have a custom built desktop with an amd graphics card because I really wanted to be able to use it in linux
[07:02:03] <KevinX> i wonder if they will make something for developers specifically
[07:02:18] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[07:02:42] <codebam> like a developer mac mini or developer macbook pro?
[07:02:43] <systemfault> That's what their new screen is...
[07:02:50] <systemfault> (A normal screen)
[07:02:51] <codebam> what would be different though?
[07:03:14] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:03:19] <wyclif> I see a lot of devs using mac minis already
[07:03:22] <theskillwithin> most people go with macbook pro.  but since I always have a free macbook pro on hand that works pays for I like to do desktop for my home computer
[07:03:29] <wyclif> at least on the desktop
[07:03:47] <wyclif> theskillwithin: that is what I do as well
[07:03:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:05:05] <codebam> I wish there was a laptop with an M1 or more powerful ARM processor that could run Linux
[07:05:37] <systemfault> The thing with the M1 is that it's not really a CPU...
[07:05:41] <systemfault> It's more like a SoC
[07:05:49] <theskillwithin> one time I did dual boot and installed linux on my mac,  it was a mistake.  the keyboard differences alone were a mess
[07:05:53] <codebam> oh yeah true
[07:05:58] <systemfault> But yeah, a real ARM CPU would be cool
[07:06:18] <systemfault> (Not saying that the M1 doesn't have a real ARM CPU in it...)
[07:06:31] <theskillwithin> if I need linux I just spin up a VM
[07:06:34] <codebam> well yeah it can run linux already, there's just no support at all for the gpu
[07:06:55] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:07:11] <codebam> it's kind of useable but you'd be rendering graphics on the cpu
[07:09:45] <Maxdamantus> Nothing wrong with SoCs imo, just as long as they're available with the parameters I want.
[07:10:14] <Maxdamantus> which for me is basically just CPU + at least 32 GiB RAM.
[07:10:35] <Maxdamantus> and basic graphics functionality, since I don't want to run a separate graphics card.
[07:11:12] <systemfault> Same for me
[07:11:15] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:12:54] <Maxdamantus> I'd also be pretty happy running ARM, just as long as it's not a downgrade in performance (disregarding power efficiency) from a decent x86 system.
[07:13:01] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[07:13:38] <Maxdamantus> I like being able to run my computer without too much fan noise and without having to mess around with water cooling systems.
[07:15:20] *** Joins: silverdust (~silverdus@user/silverdust)
[07:18:10] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:19:48] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[07:19:53] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[07:21:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9) (Ping timeout: 240 seconds)
[07:21:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[07:22:57] <codebam> even if I got 75% of the performance I get now I think I'd switch to ARM for the power savings. I think the M1 is just as fast if not faster than the amd64 macbook though
[07:23:59] <theskillwithin> the newer M chip deff helps with fan speeds on the laptops
[07:24:20] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[07:24:27] <codebam> does the M1 have a fan? ARM CPUs don't always have fans
[07:24:53] <theskillwithin> ya i think it has a fan
[07:25:09] <Maxdamantus> Given that they're still rated at a few hundred watts, yes, they'll have fans.
[07:25:12] <codebam> okay cool. it probably stays really cool then considering it's arm
[07:25:58] <Maxdamantus> They just might not kick in until you're doing something very intensive.
[07:26:07] <codebam> is the M1 in the mac mini the same as the M1 in the MBP?
[07:26:11] <codebam> or are they different
[07:26:19] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Client Quit)
[07:26:30] <codebam> 300W seems excessive for a laptop
[07:26:51] <theskillwithin> depends on which one you pick, but ya theres probably one with the exact same chip as the laptop
[07:27:14] <codebam> oh okay, very cool. I guess the wattage is that high because it's also for the GPU, the entire SoC
[07:27:36] <Maxdamantus> The PSU on my desktop machine has a fan, but usually it's off, because unless I'm using Zoom or compiling something, it will be drawing less than half it's rated capacity, and it only spins if it's using more than half of its capacity.
[07:27:56] <codebam> I don't think my PSU has ever turned on it's fan
[07:28:02] <codebam> even when I'm compiling
[07:29:07] <theskillwithin> i think the non M1 macbook pro's, if you get like a medium model.  if you hook in a couple of 4k monitors and then build some code then you will get a lot of fan
[07:29:18] *** Joins: ejjfunky (~ejjfunky2@125.164.16.249)
[07:29:45] <theskillwithin> idk i have a coworker that always has fan trouble
[07:34:36] <Maxdamantus> Usually if I hear my fan spinning up, I'll run `top` and press 'k' to kill some rogue Firefox process.
[07:34:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:35:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:35:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:35:41] *** Joins: wroathe (~wroathe@user/wroathe)
[07:41:38] *** Quits: ejjfunky (~ejjfunky2@125.164.16.249) (Quit: Leaving)
[07:43:36] *** Joins: rpino (~textual@189.172.95.214)
[07:44:52] *** Quits: dmanto (~dmanto@181.110.128.9) (Ping timeout: 250 seconds)
[07:45:22] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[07:48:02] *** Joins: pmercado (~pmercado@186.107.55.248)
[07:49:40] *** Joins: Guest48 (~Guest48@103.177.44.10)
[07:51:00] <Rockwood> bye cya
[07:51:02] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:51:44] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:52:49] *** Joins: rpino (~textual@189.172.95.214)
[07:53:32] <codebam> bye
[07:53:52] <codebam> is black bg white text when the user hasn't chosen dark mode a bad design choice for items that are "disabled"
[07:54:01] <codebam> should I use light grey?
[07:57:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:58:08] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9)
[07:59:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:59:09] <KevinX> in an input? let the browser do it?
[08:01:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:04:51] <theskillwithin> the new css property accent-color ftw for coloring form elements
[08:05:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[08:12:01] *** Quits: stagas (~stagas@2a02:587:c428:4985:3c4f:1680:2eaa:25c8) (Ping timeout: 245 seconds)
[08:12:57] <theskillwithin> codebam theres always the easy option, just set an opacity to disabled
[08:14:12] <theskillwithin> btw cool thing I like to do, to disable all form element stuff at one time for a loading state I like to wrap everything in form in a fieldset like this https://codesandbox.io/s/react-form-example-gm9o6?file=/src/index.js:2273-2333
[08:14:29] <theskillwithin> <fieldset disabled={loading} aria-busy={loading}>
[08:15:25] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[08:17:48] <KevinX> That's a neat trick. Thanks for sharing
[08:22:16] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[08:23:15] *** Joins: silverdust (~silverdus@user/silverdust)
[08:26:44] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[08:27:45] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:28:26] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[08:29:40] *** Joins: k8yun (~k8yun@user/k8yun)
[08:36:03] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:36:36] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[08:36:58] *** Joins: Arisco (~ckmptnml@201-11-17-238.user3p.brasiltelecom.net.br)
[08:37:53] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:38:07] *** Joins: Betal (~Betal@user/betal)
[08:38:22] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:43:02] *** Quits: tenthshift (~fifthshif@097-071-184-082.biz.spectrum.com) (Read error: Connection reset by peer)
[08:51:07] *** Joins: han-solo (~hanish@user/han-solo)
[08:53:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:54:36] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[08:55:09] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[08:56:55] *** Quits: nomic (~nomic@85.203.36.247) (Quit: Leaving)
[08:58:50] *** Quits: colordro1 (~erahhal@69.53.245.255) (Ping timeout: 272 seconds)
[08:59:36] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[09:01:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:02:02] *** Joins: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[09:02:17] *** Quits: Guest48 (~Guest48@103.177.44.10) (Quit: Client closed)
[09:05:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:13:55] *** Quits: cyberbanjo (~user@2607:fb90:42b7:213f:db43:ae3e:7744:5cba) (Remote host closed the connection)
[09:14:50] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:15:43] *** Quits: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Ping timeout: 256 seconds)
[09:18:12] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[09:18:30] *** Joins: rpino (~textual@189.172.95.214)
[09:19:27] *** Quits: rpino (~textual@189.172.95.214) (Client Quit)
[09:22:22] *** Joins: Jaran|zZZzZZzZZz (~mail@p5b2c538c.dip0.t-ipconnect.de)
[09:22:22] *** Quits: Jaran|zZZzZZzZZz (~mail@p5b2c538c.dip0.t-ipconnect.de) (Changing host)
[09:22:22] *** Joins: Jaran|zZZzZZzZZz (~mail@user/jaran)
[09:22:58] *** Jaran|zZZzZZzZZz is now known as Jaran
[09:25:28] *** Joins: audio (~audio@user/audio)
[09:25:49] *** Joins: igemnace (~ian@user/igemnace)
[09:28:32] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[09:29:25] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[09:31:02] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[09:33:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[09:33:53] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:34:59] *** Quits: Praise- (~Fat@user/praise) (Ping timeout: 256 seconds)
[09:35:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[09:35:25] *** Joins: Praise (~Fat@user/praise)
[09:37:06] *** Quits: src (~src@user/src) (Quit: Leaving)
[09:37:19] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[09:39:20] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[09:39:54] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[09:40:26] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:40:44] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[09:42:06] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[09:43:57] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Client Quit)
[09:44:56] *** Quits: pmercado (~pmercado@186.107.55.248) (Ping timeout: 256 seconds)
[09:45:39] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[09:45:46] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[09:46:32] *** Joins: Enissay (~Enissay@user/enissay)
[09:47:12] *** Quits: CATS (apic@brezn3.muc.ccc.de) (Ping timeout: 256 seconds)
[09:51:18] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[09:52:48] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:54:16] *** Joins: viva (~viva@2601:2c7:8900:169:99bc:a1f5:1744:7933)
[09:54:36] <viva> can someone help me change the color of my backticks in sublime4 ? im using mariana color scheme and i'd like to change the backticks to red
[09:55:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[09:56:35] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:57:20] *** Joins: de-facto (~de-facto@user/de-facto)
[10:02:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:04:11] *** Joins: Slade (uid128877@user/slade)
[10:06:09] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:07:48] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d59b:7225:122:f855)
[10:08:09] *** Quits: viva (~viva@2601:2c7:8900:169:99bc:a1f5:1744:7933) (Remote host closed the connection)
[10:11:03] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[10:15:17] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:16:27] *** Joins: silverdust (~silverdus@user/silverdust)
[10:21:48] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[10:23:29] *** Joins: silverdust (~silverdus@user/silverdust)
[10:25:00] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:25:51] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:30:40] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[10:32:04] *** Joins: audio (~audio@user/audio)
[10:39:05] *** Joins: kakashiA1 (~kakashi@105.157.237.207)
[10:41:30] *** Joins: stagas (~stagas@2a02:587:c428:4985:7f8a:5e69:4453:9ad8)
[10:42:04] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[10:44:53] *** Joins: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch)
[10:45:02] <ccapndave> Hey everyone
[10:45:21] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[10:46:23] <ccapndave> Is there any way to "disable" an element in the DOM such that it doesn't receive any events?  My use case is that I have a bunch of very heavy Plotly graphs on a page, and when the page is resized I only want to resize visible graphs (otherwise it gets very slow).  However, I don't want to `display: none` because a) it mucks up the layout of graphs further down the page and b) I have to re-render the graph next time
[10:48:05] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[10:51:25] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:53:01] *** Quits: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:56:31] *** Joins: masoudd (~masoudd@user/masoudd)
[11:01:26] *** Joins: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch)
[11:02:30] *** Joins: crst (~crst@81-230-180-214-no2661.tbcn.telia.com)
[11:03:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:03:15] *** Quits: D2mned (~D1mned@89.108.142.112) (Read error: Connection reset by peer)
[11:03:17] <crst> Hi, can anybody read this text?
[11:03:39] <theskillwithin> yes?
[11:04:04] *** Quits: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch) (Client Quit)
[11:04:41] *** Joins: D2mned (~D1mned@212.101.251.10)
[11:06:17] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Ping timeout: 240 seconds)
[11:06:18] <crst> Good, thanks. Because I was having issues with auth and wasn't sure if it's ok or not since nobody responded yesterday :)
[11:06:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:07:40] <theskillwithin> crst ya you gotta be authed or else no one else sees what you say
[11:08:28] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[11:09:23] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[11:09:56] <crst> Hope you don't mind posting it again: https://jsfiddle.net/q0hm3xaw/ how can you combine list1 and list2 to be in the form as combined? I'd say .reduce but can't make it work there's too many dimensions for me.
[11:12:10] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[11:14:58] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:15:00] *** Quits: kakashiA1 (~kakashi@105.157.237.207) (Ping timeout: 272 seconds)
[11:15:40] <ljharb> crst: not easily. Why is any of that a data structure you have or want?
[11:19:53] <crst> It's to create a data table. I got list1 and fetch list2, then need to generate the combined one to be able to render the rows. It needs to be dynamic as the keys can be anything.
[11:20:45] *** Joins: konstantinos (~konstanti@2a02:587:c423:1700:db2:f5f0:3116:f0f4)
[11:22:21] <crst> Columns is easy: [...new Set(list2.map((i) => i.key))]
[11:23:24] *** Quits: konstantinos (~konstanti@2a02:587:c423:1700:db2:f5f0:3116:f0f4) (Quit: Leaving)
[11:25:28] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[11:26:03] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[11:28:10] *** Joins: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch)
[11:31:59] *** Quits: crst (~crst@81-230-180-214-no2661.tbcn.telia.com) (Remote host closed the connection)
[11:32:33] *** Joins: crst (~crst@81-230-180-214-no2661.tbcn.telia.com)
[11:33:01] *** Joins: monoxane (~monoxane@user/monoxane)
[11:33:38] *** Joins: realies2 (~realies@user/realies)
[11:33:59] *** Quits: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:34:28] *** Joins: lf94- (~lf94@user/lf94)
[11:34:52] *** Quits: realies (~realies@user/realies) (Ping timeout: 256 seconds)
[11:34:52] *** realies2 is now known as realies
[11:35:07] *** Quits: lf94 (~lf94@user/lf94) (Ping timeout: 256 seconds)
[11:36:08] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:39:16] *** Joins: c4017w (~c4017@209.52.68.8)
[11:39:24] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[11:39:33] *** jazzy2 is now known as jazzy
[11:41:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:44:12] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[11:44:46] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[11:48:32] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 240 seconds)
[11:49:12] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Read error: Connection reset by peer)
[11:49:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:52:22] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:56:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:58:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:59:01] *** Joins: rendar (~rendar@user/rendar)
[12:02:51] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:02:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:03:32] *** Joins: kaotisk (~kaotisk@user/kaotisk)
[12:05:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[12:05:45] *** Parts: llanhmod (~personnel@user/domhnall/x-2887755) ()
[12:06:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:06:30] *** Joins: ccapndave (~ccapndave@213.55.220.181)
[12:08:50] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:09:53] *** Quits: ccapndave (~ccapndave@213.55.220.181) (Client Quit)
[12:11:18] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[12:13:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[12:15:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:16:32] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:16:33] *** Joins: lapsi (~lapsi@85.14.25.194)
[12:20:55] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[12:21:19] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[12:22:09] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:29:50] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[12:32:11] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[12:36:37] *** Joins: iomari891 (~iomari891@197.210.71.177)
[12:37:02] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[12:39:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:42:37] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:45:54] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[12:46:44] *** Quits: devslash (~devslash@46.232.211.210) (Quit: ZNC 1.8.2 - https://znc.in)
[12:47:20] *** Joins: devslash (~devslash@46.232.211.210)
[12:51:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[12:57:20] *** Joins: ccapndave (~ccapndave@213.55.220.181)
[12:58:18] *** Joins: kerala__ (~kerala@117.216.1.162)
[12:59:01] *** Quits: MootPoot (uid444585@id-444585.ilkley.irccloud.com) ()
[12:59:17] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[12:59:19] *** Joins: MootPoot (uid444585@id-444585.ilkley.irccloud.com)
[13:00:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[13:01:34] *** Quits: kerala_ (~kerala@117.212.167.141) (Ping timeout: 268 seconds)
[13:02:02] *** Joins: wyclif (~wyclif@user/wyclif)
[13:06:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[13:07:32] *** Joins: wyclif (~wyclif@user/wyclif)
[13:10:31] *** Quits: ccapndave (~ccapndave@213.55.220.181) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:14:55] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:21:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[13:23:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:26:02] *** Joins: silverdust (~silverdus@user/silverdust)
[13:29:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:30:17] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[13:31:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:39:01] *** Joins: bluehoney_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[13:39:35] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 240 seconds)
[13:39:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:40:48] *** Quits: bluehoney_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Max SendQ exceeded)
[13:41:16] *** Joins: bluehoney_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[13:41:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:41:38] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 252 seconds)
[13:41:48] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[13:42:26] *** Quits: average (~average@user/average) (Ping timeout: 245 seconds)
[13:43:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:43:12] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[13:44:00] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:46:55] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 240 seconds)
[13:49:19] *** Quits: Talon (~Talon@172.77.103.205) ()
[13:55:21] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 245 seconds)
[13:56:34] *** Joins: iomari892 (~iomari891@197.210.77.147)
[13:59:24] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[13:59:37] *** Quits: iomari891 (~iomari891@197.210.71.177) (Ping timeout: 256 seconds)
[14:01:04] *** Quits: Flannel (~flannel@user/flannel) (Ping timeout: 256 seconds)
[14:01:26] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:05:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:07:40] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:07:51] <sickdyd> lol wasted 30 mins because I was using await Promise.all[...] instead of await Promise.all(...)
[14:10:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[14:13:18] <hassoon_> 'morning
[14:13:34] <hassoon_> sickdyd: take a rest
[14:14:52] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[14:15:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:18:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:21:12] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:23:44] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:25:14] <wyclif> It happens to the best of us ;-)
[14:25:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:26:55] *** Joins: iomari891 (~iomari891@102.91.5.229)
[14:28:45] *** Joins: antsomers (~thiras@user/thiras)
[14:30:02] *** Quits: iomari892 (~iomari891@197.210.77.147) (Ping timeout: 250 seconds)
[14:30:38] *** Kirjava is now known as asshole
[14:30:39] *** asshole is now known as Guest4906
[14:30:53] <sheetjs> is there an easy way to move all issues from one github project to another?
[14:31:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:31:07] *** Guest4906 is now known as asshole_is_still
[14:31:10] *** asshole_is_still is now known as Kirjava
[14:32:36] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 272 seconds)
[14:33:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:36:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:37:15] *** Joins: ccapndave (~ccapndave@213.55.220.181)
[14:37:28] *** Joins: wyclif (~wyclif@user/wyclif)
[14:39:04] *** Quits: Kol (~Kol@75.157.122.186) ()
[14:39:19] *** Quits: ccapndave (~ccapndave@213.55.220.181) (Client Quit)
[14:40:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:44:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:45:23] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:45:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[14:47:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:47:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:48:04] *** Joins: silverdust (~silverdus@user/silverdust)
[14:48:41] *** Joins: wyclif (~wyclif@user/wyclif)
[14:50:08] *** Quits: antsomers (~thiras@user/thiras) (Quit: Leaving)
[14:53:30] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[14:54:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:58:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[15:02:50] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[15:04:54] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 272 seconds)
[15:09:59] <kaotisk> sheetjs, if it's under the same user, I would simply rename the project :p
[15:10:31] <kaotisk> but I guess this is not the case
[15:11:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:12:47] <sheetjs> merging two repos
[15:12:53] <sheetjs> the git part is easy
[15:18:53] <kaotisk> I am quite unsure about this, but I think you have to go the "Danger Zone" and transfer ownership.
[15:19:24] <kaotisk> **I have no clue if this transfers the issues** I am only guessing.
[15:19:45] <kaotisk> We can try if you want
[15:19:51] <sheetjs> doing it by hand
[15:19:56] <sheetjs> 29 to go
[15:20:14] <kaotisk> Create one repository, add a file and an issue and transfer it to me (kaotisk-hund)
[15:20:20] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:20:44] <kaotisk> And I can confirm then if the issue is transfered to mine (anymore) repo
[15:25:28] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:25:29] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[15:25:29] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[15:25:29] *** Joins: average (~average@user/average)
[15:28:31] <sheetjs> bahaha fml forgot this repo had two huge test files
[15:28:34] *** Joins: Guest52 (~Guest52@213.162.65.110)
[15:29:45] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[15:37:48] *** Quits: bluehoney_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 240 seconds)
[15:38:45] *** Joins: bluehoney_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[15:41:01] *** Joins: pmercado (~pmercado@186.107.36.19)
[15:41:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:44:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:47:12] *** Quits: Guest52 (~Guest52@213.162.65.110) (Quit: Client closed)
[15:55:13] *** Joins: bambanxx (~bambanx@190.162.68.107)
[16:01:22] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[16:04:21] <blueagain> sheetjs: do you ever take time off? :)
[16:04:55] <blueagain> I think I'd be burned out if I worked that much
[16:05:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[16:06:25] <sheetjs> these are interesting problems
[16:06:58] <blueagain> I have no doubt, I often find myself working on such until the small hours of the night. but then it affects my sleep badly
[16:07:12] *** Joins: han-solo (~hanish@user/han-solo)
[16:07:23] <sheetjs> college used to be worse tbh
[16:07:36] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 272 seconds)
[16:09:18] <blueagain> I was actually more chill in college than now
[16:09:19] *** Joins: tazle (~tazle@kapsi.fi)
[16:12:17] <box2> has anyone tried playing around with trust tokens? https://www.chromium.org/updates/trust-token/
[16:15:09] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:17:15] *** Quits: average (~average@user/average) (Quit: WeeChat 3.0)
[16:17:25] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[16:17:25] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[16:17:25] *** Joins: average (~average@user/average)
[16:19:14] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[16:20:24] *** Joins: re101-fousek-71 (~re101-fou@196.43.170.89)
[16:24:46] *** Joins: austincheney_ (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net)
[16:25:41] *** Quits: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 268 seconds)
[16:26:38] *** Quits: average (~average@user/average) (Ping timeout: 252 seconds)
[16:27:44] *** Quits: kerala__ (~kerala@117.216.1.162) (Ping timeout: 252 seconds)
[16:28:46] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:29:33] *** Quits: sfields_ (~sfields@136.34.181.232) (Remote host closed the connection)
[16:29:59] *** Joins: kerala__ (~kerala@117.216.1.162)
[16:32:55] *** Joins: rpino (~textual@189.172.95.214)
[16:35:15] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[16:35:39] *** Joins: Deneb (~johnch@128.82.159.143.dyn.plus.net)
[16:41:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:43:10] *** Quits: tokerboker (knited@shell.xshellz.com) (Remote host closed the connection)
[16:45:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:47:37] *** Quits: re101-fousek-71 (~re101-fou@196.43.170.89) (Quit: Client closed)
[16:48:43] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[16:49:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[16:49:25] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[16:52:10] *** Parts: igemnace (~ian@user/igemnace) (WeeChat 3.4)
[16:53:01] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[16:54:43] *** Joins: henry40408 (~henry4040@175.181.180.53)
[16:57:13] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:59:20] *** Joins: tmm88 (~tmm88@user/tmm88)
[17:00:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[17:00:33] *** Quits: kerala__ (~kerala@117.216.1.162) (Quit: Leaving)
[17:01:08] *** Joins: de-facto (~de-facto@user/de-facto)
[17:05:22] *** Joins: nomic (~nomic@85.203.36.247)
[17:08:46] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:13:04] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:13:25] *** Parts: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) ()
[17:14:16] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:14:37] *** Quits: crst (~crst@81-230-180-214-no2661.tbcn.telia.com) (Quit: Leaving...)
[17:18:39] *** Joins: silverdust (~silverdus@user/silverdust)
[17:21:14] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[17:22:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:24:31] *** Joins: llorllale (~llorllale@198.98.119.85)
[17:28:55] *** Quits: bambanxx (~bambanx@190.162.68.107) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:31:11] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[17:31:51] *** Parts: Glurmo (~Glurmo@user/Glurmo) ()
[17:34:34] *** Joins: kakashiA1 (~kakashi@105.157.237.207)
[17:37:33] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[17:38:41] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Quit: Leaving)
[17:42:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:45:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:45:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:46:49] *** Joins: wyclif (~wyclif@user/wyclif)
[17:53:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:53:55] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[17:54:38] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:59:38] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[17:59:58] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:00:27] <no_gravity> Hello! Is there a lean javascript library to show modals that only handles the "show" and "hide" part, not the content itself?
[18:02:25] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[18:03:16] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:06:47] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:10:20] *** Joins: pulse (~pulse@user/pulse)
[18:12:57] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[18:14:29] *** ProfSimm is now known as anomal
[18:14:53] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:15:17] *** Joins: voltage_ (voltage@user/voltage)
[18:16:55] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[18:17:25] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:22:08] <banana_> o/
[18:25:35] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:25:57] *** Joins: rpino (~textual@189.172.95.214)
[18:28:18] *** Joins: onosendi (~onosendi@user/onosendi)
[18:28:51] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[18:29:40] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[18:29:49] <onosendi> I have two variables: time, and moves. I want to turn this into a point system, where the least amount of time with the least amount of moves is a higher score. Any of you mathmeticians got an algo for me? :)
[18:31:31] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[18:32:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:33:24] <banana_> what game
[18:33:47] <banana_> not a mathematician just curious what kind of game
[18:33:54] *** Quits: kakashiA1 (~kakashi@105.157.237.207) (Ping timeout: 272 seconds)
[18:34:08] <no_gravity> If you have a variable 'x' which is a dom element, how do you delete the element and the variable?
[18:34:10] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:34:27] <blueagain> onosendi: not a math, but isn't this something like `1/(time*moves)`, or something to that extent
[18:34:47] <blueagain> that really depends on how much gravity you wanna give time vs. moves
[18:35:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:35:06] <no_gravity> I think it might be this: x.remove(); x=null;
[18:35:14] <onosendi> no_gravity: x.remove(); delete x; - You really shouldn't delete variables, though.
[18:35:33] <onosendi> no_gravity: yes, `x = null` is better.
[18:35:37] <no_gravity> onosendi: Ah yes, delete. Why would I keep it in memory?
[18:35:42] *** Joins: Rockwood (~Rocky@user/rocky)
[18:35:56] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:4d92:7e6:1cd7:adc9) (Read error: Connection reset by peer)
[18:36:11] <banana_> no_gravity: the variable will be garbage collected, but you can element.parentNode.removeChild(element)
[18:36:30] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:8c4d:1b:4f5d:a860)
[18:36:37] <no_gravity> banana_: I think element.remove() is leaner?
[18:36:40] <banana_> yeah https://developer.mozilla.org/en-US/docs/Web/API/Element/remove
[18:37:00] <banana_> that's probably better I think https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild is probably the old way
[18:37:28] <banana_> well youll need a polyfill for IE for https://developer.mozilla.org/en-US/docs/Web/API/Element/remove
[18:37:43] <banana_> if you dont support it yay
[18:37:54] <no_gravity> banana_: I think I don't support it.
[18:38:01] <banana_> awesome yeah .remove() then
[18:38:12] <no_gravity> I'm too lazy to support IE.
[18:38:25] <blueagain> I thought IE was dead
[18:38:39] <no_gravity> I'm going where the puck is going.
[18:38:44] <blueagain> like, last millennium dead
[18:39:09] <banana_> I'm not sure it's dead but it's not supported anymore im pretty sure
[18:39:24] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:39:29] <banana_> no_gravity: also I'll read this if you do https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management I
[18:39:34] <blueagain> are there even supported OSs out there that run it?
[18:39:56] <onosendi> Wasn't sheetjs talking about supporting IE6 the other day?
[18:40:41] <undefined_bob> I work with Firefox 52.9.0 many websites doesn't work well with it anymore. Like stackexchange for example
[18:40:49] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[18:40:59] <blueagain> I think he had the peculiarity that he has lots of customers from CJK countries and they still use older stuff
[18:41:06] <onosendi> Ah
[18:41:24] <blueagain> oh wow, it's still supported, until 15 june, 22
[18:41:31] <blueagain> good gracious
[18:41:33] <no_gravity> My modal library is functional :) https://jsfiddle.net/8y12kLze/2/
[18:41:48] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[18:41:56] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[18:42:33] <blueagain> "Customers are encouraged to move to Microsoft Edge with IE mode. IE mode enables backward compatibility and will be supported through at least 2029"
[18:42:36] <blueagain> oO
[18:42:46] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:43:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:44:03] <blueagain> no_gravity: fyi, firefox supports <dialog> with its latest release
[18:44:10] <onosendi> blueagain: Yeah, I tried that. The problem there is if you let the time get really high and take your time on your moves and get them correct, the score would be better if you did it really fast.
[18:44:13] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Quit: ~ Server made a boo boo.)
[18:44:34] <onosendi> Maybe I'll just create point values for correct moves.
[18:44:47] <no_gravity> blueagain: Thats pretty cool.
[18:44:59] <banana_> blueagain: https://www.youtube.com/watch?v=eaHdQXcEqoY we better make plans to rename a federal building the Internet Explorer Center
[18:45:01] <skillbot> YouTube Title: Prologue (JFK)
[18:45:17] <banana_> IE died too soon
[18:45:26] <blueagain> lol
[18:46:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[18:46:20] <onosendi> banana_: It's a simple memory game - I'm just using it to get familiar with Emotion.
[18:46:35] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[18:46:54] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 268 seconds)
[18:46:54] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[18:48:32] <blueagain> onosendi: you can also turn it into one currency. that a certain n of correct moves means a time reduction
[18:48:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:48:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:49:51] <blueagain> that's how a lot of games work, you have a set time to accomplish something, every n solves you get more time, in the end your number of solves or a factor thereof is your score
[18:49:53] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:50:14] <onosendi> blueagain: I think what I'll do is give points for correct moves, take them away for wrong moves, then divide their time by their score, which is essentially how many points they're scoring in a second.
[18:50:22] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[18:50:34] <blueagain> sounds good
[18:50:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:50:58] <onosendi> Thanks :)
[18:52:56] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:55:09] <banana_> onosendi: this https://emotion.sh/docs/introduction ?
[18:55:19] <onosendi> banana_: yep
[18:55:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:8c4d:1b:4f5d:a860) (Ping timeout: 240 seconds)
[18:55:41] <banana_> nice
[18:55:44] *** Joins: nomic2 (~nomic@host86-154-44-94.range86-154.btcentralplus.com)
[18:56:03] <banana_> and yeah I'm honestly going to miss the _ prefix css properties
[18:56:21] <banana_> moment of silence
[18:56:52] *** Quits: nomic (~nomic@85.203.36.247) (Ping timeout: 256 seconds)
[18:56:56] <onosendi> I went the css prop route, with `css({})`. `<Foo css={css({ color: 'blue' })} />`. I'm not really fond of styled-components.
[18:57:03] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:f8c2:536b:c368:4611)
[18:58:42] <blueagain> cool, they use a tick function
[18:59:35] <onosendi> blueagain: I don't like that either, as syntax highlighting is non-existent, and I don't get autocomplete. At least in my editor.
[19:00:50] <blueagain> yeah, I still write good old css and html, I don't really use any frontend frameworks
[19:01:25] *** Joins: vysn (~vysn@user/vysn)
[19:01:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[19:01:52] <onosendi> blueagain: honestly, I don't mind writing css either. Well, scss.
[19:02:29] *** Quits: anomal (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:02:48] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:03:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:05:34] <blueagain> onosendi: I've been trying to make intelligent use of web components lately in my code, but it's very unfriendly at its current form.
[19:06:12] <blueagain> you have to define a separate js file with a class that extends an html components... it's too heavy
[19:06:22] <onosendi> Hmm, interesting.
[19:06:38] <blueagain> I just want to define element-name.html somewhere, and the html in that element be available to me as that tag
[19:07:36] <blueagain> in that file*
[19:11:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[19:11:48] *** Quits: henry40408 (~henry4040@175.181.180.53) (Ping timeout: 240 seconds)
[19:12:05] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:12:26] *** Joins: wyclif (~wyclif@user/wyclif)
[19:17:24] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:17:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:17:42] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:17:54] *** Joins: wyclif (~wyclif@user/wyclif)
[19:20:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[19:21:22] *** Joins: federico_it (~textual@151.51.80.129)
[19:22:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:23:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:23:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:23:17] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:23:22] *** Joins: wyclif (~wyclif@user/wyclif)
[19:24:33] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:25:21] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:28:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:28:54] *** Joins: wyclif (~wyclif@user/wyclif)
[19:30:00] *** Quits: cinderblock (~cinderblo@firefly.isozilla.com) (Quit: kthxbai!)
[19:30:47] *** Joins: cinderblock (~cinderblo@firefly.isozilla.com)
[19:31:52] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[19:32:03] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Quit: Konversation terminated!)
[19:32:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:32:38] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:32:52] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:36:44] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:40:45] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[19:41:29] *** Joins: masoudd (~masoudd@user/masoudd)
[19:42:03] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[19:42:45] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:43:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:46:44] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[19:47:14] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:47:22] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:51:38] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[19:54:12] *** Quits: In0perable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[19:54:42] <Kobaz> Anyone have experience with Blockly?
[19:56:56] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:57:45] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[19:58:12] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[19:59:08] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[19:59:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[20:00:20] *** Quits: avu (~jan@user/avu) (Quit: reboot)
[20:00:37] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[20:01:08] *** Joins: thekingofbandit (~thekingof@thunix.net)
[20:01:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:01:31] *** Joins: avu (~jan@user/avu)
[20:05:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[20:06:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[20:07:08] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[20:07:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[20:09:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:09:08] *** Quits: ekh (~ekh@188.236.106.195) (Read error: Connection reset by peer)
[20:09:32] *** Joins: ekh (~ekh@37.37.203.127)
[20:09:46] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:10:47] *** Joins: rpino (~textual@189.172.95.214)
[20:12:04] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:13:14] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:14:52] *** Joins: colordro1 (~erahhal@69.53.245.255)
[20:15:32] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[20:19:59] *** Joins: ccapndave (~ccapndave@213.55.220.39)
[20:20:00] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[20:20:40] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[20:21:32] *** Quits: nomic2 (~nomic@host86-154-44-94.range86-154.btcentralplus.com) (Quit: Leaving)
[20:23:25] *** Quits: ccapndave (~ccapndave@213.55.220.39) (Client Quit)
[20:23:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[20:23:58] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[20:28:28] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:28:30] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[20:30:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:31:24] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[20:31:35] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:32:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[20:33:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:34:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[20:34:36] *** Quits: rpino (~textual@189.172.95.214) (Quit: Textual IRC Client: www.textualapp.com)
[20:35:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:42:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:43:10] *** Joins: Akiva (~Akiva@user/Akiva)
[20:43:13] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:43:39] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[20:43:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:43:44] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 272 seconds)
[20:43:58] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[20:44:40] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:48:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:49:00] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:49:32] *** Quits: lapsi (~lapsi@85.14.25.194) (Ping timeout: 240 seconds)
[20:52:38] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:53:46] *** Joins: vysn (~vysn@user/vysn)
[20:54:53] *** Joins: kakashiA1 (~kakashi@105.157.237.207)
[20:55:09] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[20:56:03] *** Joins: lapsi (~lapsi@85.14.25.194)
[20:57:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[20:57:17] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[20:57:26] *** Joins: ckdCreations (~ckdCreati@147.55.130.33)
[20:57:49] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[20:58:56] *** Joins: trevors (~trevors@user/trevors)
[20:59:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[21:00:24] *** Joins: dmanto (~dmanto@host54.186-125-6.telecom.net.ar)
[21:02:06] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[21:02:34] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:02:52] *** Joins: k8yun (~k8yun@user/k8yun)
[21:03:13] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[21:03:28] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:04:31] *** Joins: arthur_melo (IRC@user/arthur-melo/x-6822691)
[21:04:40] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Client Quit)
[21:04:50] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[21:04:56] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Remote host closed the connection)
[21:05:08] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[21:05:24] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[21:05:36] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[21:05:39] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Remote host closed the connection)
[21:05:59] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:06:53] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 256 seconds)
[21:07:51] *** Joins: stenno (~stenno@user/stenno)
[21:08:02] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[21:08:50] *** Quits: kadobanana (~mud@user/kadoban) (Remote host closed the connection)
[21:09:15] *** Joins: kadobanana (~mud@user/kadoban)
[21:10:08] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:10:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[21:13:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:14:09] *** Joins: nuh^ (~nuh@50.232.121.75)
[21:18:47] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[21:21:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:25:13] *** Joins: redcat (~dev@user/redcat)
[21:25:24] *** Parts: redcat (~dev@user/redcat) (Leaving)
[21:26:17] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[21:26:29] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[21:27:41] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:30:36] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[21:36:57] *** Joins: zebrag (~chris@user/zebrag)
[21:40:23] *** Joins: crashrep (~crashrep@user/crashrep)
[21:42:12] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[21:44:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:44:36] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 240 seconds)
[21:47:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:48:18] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[21:53:57] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[21:55:09] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[21:55:37] *** Quits: Arisco (~ckmptnml@201-11-17-238.user3p.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[21:58:07] *** Joins: k8yun (~k8yun@user/k8yun)
[22:01:17] <hassoon_> anyone else finding videos much more efficient and easier to follow up and learn from than reading articles/books when learning ?
[22:01:41] <Guest80> yup
[22:02:47] <ljharb> nah, i hate trying to learn from videos
[22:03:16] <ljharb> 1.5x-2x is the fastest i can still hear what's being said, and i'd need like 5x to even come close to the speed i can read
[22:03:44] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[22:04:35] <pulse> hassoon_, no
[22:04:46] <han-solo> as long as you write code, both seems fine for me
[22:04:57] <pulse> i learn old-school. textbook/docs/high quality written tutorials
[22:05:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[22:05:19] <hassoon_> ljharb: you read too fast imo
[22:05:24] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[22:05:30] <hassoon_> i often re-read lines when reading
[22:05:33] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[22:05:36] <pulse> i dislike video tutorials because they spend 2 hours to teach you something a written tutorial can teach you in 10 minutes
[22:05:42] <pulse> waste of time imo
[22:06:04] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:06:05] <pulse> there are some video tutorials that are good, but they're rare and typically not code-related. like if i wanted to learn blender i would probably find a video tutorial series
[22:06:13] <han-solo> sometimes someone else explaining why something is the way it is helps
[22:06:15] <pulse> for code i really dislike them though
[22:07:59] <han-solo> with that said, i like reading the docs/blogs, videos with someone explaining is a plus to clear some concepts
[22:07:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:09:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:10:09] <pulse> i like college courses on yt
[22:10:19] <pulse> advanced courses like that are ok
[22:10:28] <han-solo> a recent example i recall is someone explaing rxjs operators(and the differences between them)
[22:10:29] <ljharb> hassoon_: i read at an ideal speed :-)
[22:10:33] <pulse> some guy wasting 30 hours of my life to explain some concept i could get by reading a chapter in a book, is not ok :D
[22:10:46] <ljharb> hassoon_: you can learn to improve reading comprehension speed; i rarely have to reread lines
[22:10:46] <han-solo> it certainly cleared things faster
[22:12:21] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[22:13:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:16:32] *** Joins: thiras (~thiras@user/thiras)
[22:17:06] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:17:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[22:18:32] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 240 seconds)
[22:22:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[22:23:57] *** Quits: iomari891 (~iomari891@102.91.5.229) (Ping timeout: 256 seconds)
[22:26:56] *** Joins: sfields (~sfields@2605:a601:adea:7a00:dc0f:d6c9:8a5b:60bc)
[22:28:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[22:30:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[22:33:29] *** Joins: Naan (~Naan@user/naan)
[22:33:55] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:35:11] *** Joins: trevors (~trevors@user/trevors)
[22:36:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:36:52] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[22:37:15] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Client Quit)
[22:39:57] *** Joins: ccapndave (~ccapndave@213.55.220.177)
[22:40:17] *** Quits: ccapndave (~ccapndave@213.55.220.177) (Client Quit)
[22:41:59] <cthulchu> can sha hashes have underscores in them?
[22:42:11] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[22:44:13] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:44:36] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:44:39] <Maxdamantus> cthulchu: sha hashes are usually encoded in hexadecimal, so no.
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:31] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:46:58] *** Joins: c_89 (~c_89@151.74.29.155)
[22:47:38] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:47:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:48:23] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[22:48:36] *** Parts: PTNapivoski (~PTNapivos@179.189.133.33) (Leaving)
[22:49:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:50:28] <c_89> How can I write a simple javascript code that scrolls the youtube page watch later and ends until there are results? (I have to use it with the greasemonkey extension)
[22:51:01] *** Joins: gehn (~gehn@user/gehn)
[22:51:37] <KevinX> how simple?
[22:52:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:52:25] <banana_> have a general question, so in JS how you want to use functions as often as possible, as a standard, instead of classes, to create objects. Many design patterns are OOP based but seems like you can implement the spirit of a lot of these design patterns even though it looks different than the classic OOP design pattern e.g. passing function values etc makes the code itself look different
[22:53:08] <banana_> there's a question in there, I guess what would you call that when you take the spirit of a design pattern but because of the language the implemented pattern looks different
[22:53:10] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[22:53:31] <banana_> because of the language possibly*
[22:53:50] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:5012:a0e8:bd0f:1bd9)
[22:54:15] <c_89> this works but not end https://pastebin.com/8dQAj9WS
[22:55:23] <KevinX> you can do OOP in JS
[22:56:09] <KevinX> You mean like JS psuedo classes?
[22:57:08] <banana_> or maybe even if someone knows this: how do you describe implementing a OOP design pattern in a functional way?
[22:58:32] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:32] <banana_> like basically I saw an OOP design pattern and the usefulness of it in a particular case similar to my code's issue, so I tried achieving the same results but with javascript functions instead of javascript classes
[22:59:06] <banana_> but coding functionally in JS makes your code look different than the equivalent JS code using classes
[22:59:55] <banana_> or are design patterns abstract enough they dont need to be specifically tied to OOP. or are there in fact design patterns coupled to OOP?
[23:00:28] <ljharb> "design patterns" aren't really needed anyways if your language is expressive enough
[23:00:34] <banana_> im lost but yeah thought someone understands where my confusion lies, or at least somebody to tell me to shut up
[23:00:44] <banana_> *would understand
[23:01:41] <banana_> ljharb: yeah but like there was this coding structure issue, related to reusability, and I found a design pattern explained using a OOP pseudo language
[23:02:56] <banana_> and like an epiphany happened and I realized I could do something similar with js functions, making a function that returns an abstract object based on the parameters
[23:03:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:03:38] *** Quits: D2mned (~D1mned@212.101.251.10) (Read error: Connection reset by peer)
[23:04:17] <banana_> essentially
[23:04:42] *** Joins: D2mned (~D1mned@212.101.234.40)
[23:06:15] *** Joins: LibertyMan42 (~LibertyMa@71.161.96.156)
[23:06:21] <banana_> a function that returns a different object depending on what parameters are based, the parameter values btw are themselves factory functions, so this is the reason the main function can return different objects
[23:07:03] <KevinX> I wonder if this will be controversial: https://devblogs.microsoft.com/typescript/a-proposal-for-type-syntax-in-javascript/
[23:08:13] <banana_> but the main function is nice because it encapsulates functionality that would otherwise have to be duplicated
[23:12:36] <banana_> "It was unclear how long we’d be stuck with ancient versions of Internet Explorer" i.e. Steve Ballmer was still CEO
[23:13:34] <samsch> banana_, sounds like a factory factory
[23:13:36] <banana_> I wonder if the author works for MS or not, kinda funny he's talking for the entire dev community in spite of MS
[23:14:12] <banana_> samsch: yeah that's what I'm thinking, but a more abstract factory function in the sense it returns a different object depending on the passed parameters
[23:15:54] <samsch> That kind of "pattern" isn't something you need to bother calling a "pattern" in JS. There's not anything particularly special about it, because you don't have the arbitrary rules they follow in stuff like Java. The JS language mostly lets you "just write it" rather than needing to worry about following patterns.
[23:16:01] *** Quits: LibertyMan42 (~LibertyMa@71.161.96.156) (Quit: Leaving)
[23:16:11] <banana_> so if that is the case, what's it called when you implement "the spirit" of a pattern though
[23:16:27] <samsch> It's not called anything
[23:17:03] <banana_> or there really isn't a name.. oh ok there isnt? in case it's just implementing a more abstract factory function to get a similar result of the design pattern
[23:17:04] <samsch> Like, it's just writing code that does what you need.
[23:17:14] <banana_> :(
[23:17:29] <banana_> damn that's hard to explain to team members then
[23:18:13] <banana_> besides like "yeah bro I created a factory function that helped me past of the hurdle" I was hoping there was a different way to articulate this
[23:18:48] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:19:55] <samsch> "factory function" is a term that's used in JS. We can describe code by what it does, and there are names for various things. But there's no terminology for porting non-applicable "design patterns" from other languages to JS, because those "design patterns" are only meaningful within the constraints of the language they are from (and similar).
[23:20:17] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:22:42] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[23:22:49] <qswz> is it bad when a span is sibling with a div?
[23:23:31] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Quit: CiaoSen)
[23:25:40] <samsch> Not necessarily. It could probably still be semantically correct. Especially if you floating the div.
[23:26:13] <qswz> I'm flexing them
[23:26:20] <qswz> display:flex
[23:26:59] <qswz> I guess I could replace div by span
[23:27:05] <banana_> like the span and div are flex items?
[23:27:11] <qswz> yes
[23:27:12] <samsch> Or the span with a div
[23:27:28] <qswz> it's just that the div contained more children
[23:27:32] <qswz> not the first span
[23:27:52] <samsch> div and span don't really have semantic meaning, but usually you'd prefer div if it's layout-related and not obviously inline.
[23:28:12] <banana_> you'd have to read the specs, but I thought they could be siblings but the restriction could be depending on what the parent element is
[23:28:15] <banana_> parent tag
[23:28:35] <banana_> what samsch said too
[23:28:35] <samsch> You shouldn't have a div be a child of a plain inline element.
[23:29:00] <banana_> yeah like having a span in a span is fine, im pretty sure, but a div in a span is bad
[23:29:09] <banana_> afairc but yeah i dont read the specs
[23:32:38] <banana_> samsch: yeah goo to note down that "factory function" is a javascript specific term. and I guess what you also said makes sense, that some, or if you meant all, design patterns are paradigm specific. For my case I know at the very least I was inspired by an OOP design pattern, but yea I ended up making a factory function
[23:33:04] <qswz> happens frequently tho (span div) in react world
[23:33:12] *** Joins: wyclif (~wyclif@user/wyclif)
[23:33:16] <samsch> factory function isn't a JS-specific term, but yeah
[23:33:28] <banana_> interesting link, haven't read all of it though https://fsharpforfunandprofit.com/fppatterns/
[23:33:30] <qswz> $$('span div') in any website
[23:34:07] <banana_> samsch: ok referring to your "'factory function' is a term that's used in JS"
[23:35:27] <banana_> you meant "but not in many pure OOP languages"
[23:36:06] <banana_> well actually I think Java has a factory method term
[23:36:20] <samsch> "factory" is a generic thing across various languages (I *think* more those that have objects, both class-based like Java or C#, but also like JS or Python) for a thing that makes things. In JS you have factory functions because no other language construct would make any sense for it.
[23:37:02] <samsch> Also because any other things you could use to do it in JS would still be functions (aka, JS class properties or methods are still functions)
[23:37:32] <qswz> factory is a bit like high-order functions
[23:37:41] <samsch> But yeah, "factories" is a thing in Java land, because we make fun of them for their factory factory factories.
[23:38:03] <samsch> (Also factory factory factory factories)
[23:38:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:39:56] <banana_> guess not familiar enough with Java to get that "factory factory factories" part
[23:40:19] <banana_> I just recall in some Java book the idea of factory methods being mentioned
[23:42:27] <KevinX> block elements shouldn't go inside inline elements. Even. div inside an <a> is not good if you want "valid" html
[23:44:01] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[23:44:38] <Kobaz> hassoon_: learning from videos? so/so... it's hard to index into a video... whereas a referece book or pdf i can flip to what i want to get at
[23:45:03] <Kobaz> hassoon_: video is great for like a crash course exposure sesssion, but for real coding you need actual reference material
[23:45:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:46:58] <samsch> KevinX, They changed that specific one in a later spec though. anchor tags are specifically allowed to have block level children now
[23:47:25] <hassoon_> Kobaz: tried both, oddly felt more comfortable and motivated with videos
[23:47:52] <Kobaz> what level are you at?  still intro-learning or do you have a few years in ?
[23:48:07] <qswz> lvl 5
[23:48:21] <Kobaz> with +10 saving throw against recursion
[23:48:25] <qswz> 5/7
[23:48:27] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 268 seconds)
[23:48:33] <KevinX> samsch ah nice, i missed the memo I guess. I've been making clickable divs :P
[23:48:38] <hassoon_> Kobaz: ah ya ya , only speaking about technologies new to me, otherwise i would not watch a video to follow up something in which i'm experienced
[23:48:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:48:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:48:59] <hassoon_> Kobaz: to be specific, i was seeking up good micro-frontend videos
[23:49:06] <KevinX> im level 99 mafia boss
[23:49:12] <Kobaz> hassoon_: yeah that's my thought too.  new stuff, yeah a nice crash course in an hour is good to be spoon-fed
[23:49:29] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[23:49:32] *** Joins: nomic (~nomic@host86-154-44-94.range86-154.btcentralplus.com)
[23:49:45] <hassoon_> Kobaz: makes sense now :)
[23:50:21] <samsch> KevinX, lol, those yt ads are oddly good at drawing you into the "story"
[23:50:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:52:24] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[23:52:48] *** Quits: D2mned (~D1mned@212.101.234.40) (Read error: Connection reset by peer)
[23:53:22] *** Joins: D4mned (~D1mned@212.101.234.40)
[23:57:35] <KevinX> yeah I used see them everywhere. Funny
[23:57:55] <KevinX> hassoon_ I use frontend masters to keep up to date
[23:58:15] <KevinX> Specifically on stuff I might not be exposed to
[23:59:42] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
