[00:05:10] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[00:08:34] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[00:18:30] <__adrian> ^
[00:18:58] <__adrian> you should either know it's bool, or be doing some other, more specific check
[00:19:35] <stenno> is_null and empty is nice
[00:19:45] <stenno> nice-ish
[00:20:03] <stenno> empty is true for falsy so thats a bit irritating sometimes
[00:20:12] <__adrian> empty() is nice in some cases, but "also laze" in others
[00:20:39] <__adrian> "empty is true for falsy"  wat now?
[00:20:46] <__adrian> OH
[00:20:47] <stenno> what wat
[00:20:48] <__adrian> nvm
[00:21:00] <__adrian> why irritate?
[00:21:31] <stenno> well
[00:21:39] <stenno> the thing that irritates me is that '0' is falsy
[00:21:44] <stenno> the string '0'
[00:21:52] <stenno> and therefore empty
[00:22:18] <__adrian> well, "0" → 0 is expected
[00:22:25] <__adrian> and 0 → false is expected
[00:22:33] <stenno> 0 being falsy is fine
[00:22:42] <stenno> '0' being falsy is unusual
[00:23:16] <__adrian> in and of itself, i see that. just need to remember that, when juggling, things that _can be_ numbers, are
[00:23:33] <stenno> is '0x0' falsy too?
[00:23:40] <stenno> (the string)
[00:23:54] * stenno tias
[00:23:56] <__adrian> no, not a numeric string  ;)
[00:24:01] *** Joins: dlundgren_ (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net)
[00:24:16] <stenno> why is '0' casted to number but '0x0' isnt
[00:24:43] <stenno> even though both are valid number literals
[00:24:51] <__adrian> because https://www.php.net/manual/en/language.types.numeric-strings.php
[00:24:59] <__adrian> no, "0x0" is not a valid number literal
[00:25:02] <__adrian> 0x0  is
[00:25:28] <stenno> well yes
[00:25:50] <stenno> oh 'numeric string' is an actual thing in php, i see
[00:25:50] <__adrian> i'm not going to speak to whether anyone should LIKE this  :)
[00:26:04] <__adrian> yep, is
[00:26:07] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 246 seconds)
[00:26:07] *** dlundgren_ is now known as dlundgren
[00:26:12] <__adrian> brb
[00:26:25] <stenno> '-0e12' is empty then
[00:26:35] <stenno> oh hm
[00:27:34] <goddard> Sammitch: i agree but i am working on a project where it is every where and the guy in charge of the project makes the call
[00:27:50] <goddard> I never used it that way unless its a boolean
[00:28:03] <stenno> its not empty, ok
[00:28:13] <goddard> yep
[00:28:13] <Sammitch> goddard: tell him I said he's lazy and invite him here to defend himself
[00:28:18] <goddard> haha
[00:28:25] <goddard> sorry i like my pay checks
[00:28:58] <biberu> goddard: but please consider us in the audience
[00:29:16] * stenno makes a mental note to just only use empty on arrays
[00:29:27] <stenno> and check string length for empty strings
[00:30:33] <stenno> hm
[00:30:38] <stenno> '-0' is not empty either
[00:30:42] <stenno> thats a bit surprising then
[00:31:06] <stenno> i assume php implements ieee 754 negative zero
[00:31:48] <stenno> ah well it doesn't matter
[00:34:10] *** Joins: evilbug (~evilbug@191.101.174.38)
[00:43:19] <goddard> haha
[00:43:55] <goddard> amazing details
[00:44:01] <goddard> ieee 754 never heard of that
[00:46:12] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) ()
[00:48:58] <stenno> goddard: ieee754 is the reason why 0.1 + 0.2 is not 0.3
[00:49:39] <goddard> wait what?
[00:49:58] <stenno> try it out
[00:50:48] <stenno> https://3v4l.org/3kE48
[00:51:41] <stenno> goddard: its because 0.1 cannot be precisely expressed in the way floating point numbers are encoded in ieee754
[00:52:42] <stenno> that is a 'problem' in any modern language btw, because they all implement ieee754
[00:53:32] <stenno> think about how we cannot represent 1/3 in our normal decimal system
[00:53:45] <stenno> pretty much the same reason
[00:54:53] <stenno> so its not a question of precision, its a question of binary representation
[00:55:09] <stenno> some languages offer a Decimal type to mitigate that
[01:01:33] <goddard> wow strange
[01:01:36] <goddard> didn't know that
[01:02:36] <stenno> that is super important to know for obvious reasons
[01:02:42] <stenno> especially when dealing with currency
[01:04:12] <goddard> yeah totally
[01:13:38] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:24:21] *** kevr is now known as tiny-kevr
[01:28:58] *** tiny-kevr is now known as kevr
[01:29:27] *** Joins: dlundgren__ (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net)
[01:29:44] *** Quits: dlundgren (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net) (Ping timeout: 252 seconds)
[01:29:45] *** dlundgren__ is now known as dlundgren
[01:33:50] *** Joins: dlundgren_ (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[01:34:59] *** Quits: dlundgren (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net) (Ping timeout: 265 seconds)
[01:34:59] *** dlundgren_ is now known as dlundgren
[01:51:21] *** Joins: csrf (~csrf@user/csrf)
[02:55:22] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 240 seconds)
[03:18:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:34:19] *** Quits: pmercado (~pmercado@186.107.41.92) (Quit: Konversation terminated!)
[03:49:28] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 246 seconds)
[03:53:55] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[03:55:09] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:12:56] <ordos> hey stenno how would you recommend we work with currency in php
[04:13:09] <ordos> I read your earlier comments with interest
[04:13:56] <Sammitch> integers. $1 == 100
[04:14:53] <ordos> Sammitch showing some zero cool right there.
[04:14:56] <Sammitch> there are also a number of libraries that define behaviours like dividing $1 between 3 parties and handling the remaining pennies
[04:15:59] <Sammitch> 1BTC == 1000000 satoshis
[04:16:58] <Sammitch> there are also fixed-point decimal types like MySQL's DECIMAL type
[04:17:17] <ordos> Yeah we use DECIMAL a lot
[04:18:28] *** Joins: fairuz (~fairuz@user/fairuz)
[04:18:32] <ordos> We have this one customer with 100m+ records, each one containing over 100+ DECIMAL values
[04:18:38] *** Joins: ferdna (~ferdna@user/ferdna)
[04:18:45] <ordos> Scales well
[04:19:35] <ordos> thumbs helped us design it with his composite index wizardry. I still have no idea how it works.
[04:20:51] <Sammitch> man thumbs is one of those guys where there's probably a non-trivial amount of my salary that should probably go to him :I
[04:20:52] <ordos> But I was more asking stenno to comment, because I quite enjoyed his subtle slinging of ieee754, and was wondering what they'd use for currency
[04:21:32] <ordos> Sammitch, yeah he's a legend. Been here a while.
[04:21:42] <stenno> i would have said the same thing as Sammitch
[04:22:12] <stenno> integers and Decimal types
[04:22:20] <Sammitch> there's someone else that qualifies for a piece of my paycheck, but the name escapes me. they're in EVERY channel I join.
[04:24:46] <stenno> https://php-decimal.io/#introduction
[04:28:39] <ordos> I'm pretty sure we used the same integer trick for currency calculations in QBASIC back in the day. Although in that case integers were limited so we used longs instead (and even then our range was limited). Ended up writing our own libraries using strings. Messy stuff.
[04:37:52] <Blondie101010> Sammitch:  1BTC = 100000000 satoshi
[04:44:05] <Sammitch> yes it's definitely a number of zeroes after the one
[04:44:21] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[04:45:20] <Blondie101010> with such numbers, you're better off to use a 64 bit integer in satoshi
[04:47:24] *** zerobeholder is now known as ZeroBeholder
[04:47:44] * ordos struggles to count consecutive zeros
[04:48:04] <ordos> thankfully vim has a column counter at the bottom
[04:49:01] <Sammitch> I am willing to admit that I probably give among the least number of shits about cryptocurrencies
[04:49:20] <ordos> You're in good company
[04:49:50] <ordos> I remember reading the white paper in 2009 and thinking tulips
[04:56:41] *** ZeroBeholder is now known as zerobeholder
[05:17:53] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[05:18:37] *** Joins: csrf (~csrf@user/csrf)
[05:27:46] <Sammitch> I mean it's honestly not a fundamentally a bad idea, but the level at which it is currently out of control beggars belief
[05:29:31] <Sammitch> anyone familiar with writing stream filters? is there any particular reason why all these examples call `stream_bucket_make_writeable()` on the input bucket, overwrite their content, and pass it on to the output brigade? as opposed to creating a new bucket for the output bridage?
[05:29:37] <goddard> It makes sense to me.
[05:30:00] <goddard> Hedge against inflation from central bankers printing money.
[05:30:05] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Remote host closed the connection)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:46] <ordos> Mohamed El-Erian wrote a good book about central banking
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:37:11] <Sammitch> the issue is that I've got trailing data left inside my filter when finally called with $closing=true, but the input brigade doesn't have any more buckets, and I don't necessarily have acces to the stream context to call stream_bucket_new()
[05:40:15] <Blondie101010> Sammitch:  did you try to disable file buffering
[05:40:24] <Blondie101010> https://www.php.net/manual/en/function.stream-set-write-buffer.php
[05:40:58] <Blondie101010> s/file/stream/
[05:41:11] <Blondie101010> (to me it will always be the same thing)
[05:42:15] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[05:43:54] <Sammitch> different probelm, the buffer is mine. but I _did_ find some actual documentation on the stream filter function that straightened me out: https://stackoverflow.com/a/31132646/1064767
[05:58:07] *** Quits: MrTrick (uid181961@id-181961.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[06:05:00] <Sammitch> Blondie101010: this is what I've been working on https://3v4l.org/RegdX
[06:29:29] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[06:52:51] *** Joins: WishBoy (~WishBoy@user/wishboy)
[07:18:32] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:24:46] *** Joins: Rockwood (~Rocky@user/rocky)
[07:31:57] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[07:34:33] *** Joins: keypusher (keypusher@user/keypusher)
[08:00:45] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:04:50] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[08:10:39] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[08:11:01] *** Joins: yuckey2d6 (~yuckey2d@66.115.145.202)
[08:11:46] *** Quits: yuckey2d (~yuckey2d@172.83.47.151) (Ping timeout: 240 seconds)
[08:11:46] *** yuckey2d6 is now known as yuckey2d
[08:33:59] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:35:53] *** Quits: Phil-Work (~phil@62.3.100.20) (Ping timeout: 252 seconds)
[08:43:22] *** Quits: evilbug (~evilbug@191.101.174.38) (Quit: Connection closed)
[09:01:42] *** Parts: Warped (~Warped@user/warped) (I'm outta here! :P)
[09:27:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:30:09] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:31:32] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[09:40:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:42:44] <stanley> I'm a bit lost on how to use return types sometimes
[09:42:56] <stanley> https://kopy.io/a0nW0#bLHfVjE87yZ1OF
[09:43:27] <stanley> Here for instance; the auth0 library handles the redirect pretty weird
[09:43:34] <stanley> header('Location: '.$login_url);        exit;
[09:44:14] <stanley> so the return statement I have would return RedirectResponse but the auth0->login() method would need void I guess?
[09:45:13] <Byteflux> That... doesn't seem good. I'm no expert but that looks like Laravel? You'd expect/want the library to be following Laravel idioms.
[09:45:29] <stanley> The Auth0 library is a generic auth0-php library
[09:45:46] <stanley> They do have an auth0-laravel but it's ... less than ideal
[09:45:58] <Byteflux> Perhaps there's other methods in the library then that you could use to make it more Laravel-y
[09:46:43] <Byteflux> header();exit seems kinda wrong. You'd wanna return a response with the redirect
[09:48:21] <stanley> ah you know it does appear to have one
[09:48:23] <stanley> getLoginUrl()
[09:48:27] <stanley> Good call, thanks :)
[09:48:42] <Byteflux> Great! No problem :)
[09:49:43] <stanley> I'm a bit concerned; their package is pretty thorough, and i've replaced it with about 15% of the code using the auth0-php package directly, have to do a pretty thorough review and try to figure out what their package does and make sure all the bases are covered I guess
[09:50:20] <__adrian> stanley: checking auth doesn't belong in a method named "login"
[09:50:36] <Byteflux> Should be middleware, right?
[09:50:41] <__adrian> that's why you have two disparate return types - you're doing two different things.
[09:50:42] <Byteflux> I don't know though, I don't use Laravel much
[09:51:04] <__adrian> when you "need" two different return types that's a good clue you might be doing something wrong  :)
[09:51:08] <stanley> @__adrian yeah I have to clean it up
[09:51:18] <stanley> I mean, it's fixed now, only one return type
[09:51:20] <__adrian> i don't know w/laravel, but yes - middleware would be a good approach in general
[09:51:28] <stanley> https://kopy.io/pSwUA#qvy0j7qp2jekKW
[09:51:51] <stanley> login() is a misleading name, it doesn't log the user in, it redirects them to the auth0 login URL
[09:51:52] <__adrian> well, that addresses the return type
[09:52:01] <__adrian> BUT the auth check still doesn't go there :)
[09:52:11] <Byteflux> But I guess in this case it's specifically to check if auth'd then redirect from login route to home, so kinda forgivable?
[09:52:26] <Byteflux> As it's specific to that route
[09:52:35] <__adrian> eh...
[09:52:47] <stanley> This is in my controller, so if you hit the login end point but the user is already logged in it breaks their state
[09:53:08] <stanley> so if the user is already logged in you don't need to redirect them to the login page, so you just send them back to the app
[09:53:43] <stanley> Auth::check() just returns true/false depending if someones logged in
[09:54:00] <__adrian> yes, figured
[09:54:03] * __adrian shrugs
[09:54:08] <__adrian> however laravel does it
[09:54:23] <stanley> That's more of an issue with the way Auth0 works
[09:57:08] <stanley> don't get me wrong though, this class is bad right now
[09:57:09] <stanley> lol
[10:02:58] <__adrian> i think i'm looking at more of how laravel does controllers. but if auth0 breaks if you're already logged in, that's ...odd
[10:03:02] <__adrian> but whatever  :)
[10:13:34] *** Quits: TML (~tml@user/tml) (Ping timeout: 246 seconds)
[10:24:22] *** Joins: bobdobbs (~user@2406:5a00:f001:c600:c598:e4c1:7f75:4698)
[10:31:50] <stanley> @__adrian if a method's goal is to look up a record and return it, how do you handle the case of it not finding anything? (for return types)
[10:32:04] <stanley> If no record exists should you throw an error? or return null?
[10:32:52] <stanley> But if you return null then you have two return types now, Whatever|null
[10:38:18] <Blondie101010> being nullable is better, but exceptions are preferable
[10:39:44] <TinoDidriksen> Switch to C++ where you can do both! { throw NULL; } is valid there.
[10:40:51] <Blondie101010> that's not helpful
[10:54:38] *** Quits: csrf (~csrf@user/csrf) (*.net *.split)
[10:54:38] *** Quits: s17 (~nobody@user/s17) (*.net *.split)
[10:54:38] *** Quits: gefd (~gef@user/gefd) (*.net *.split)
[10:54:38] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (*.net *.split)
[10:54:38] *** Quits: Shyim (~quassel@7thplanet.org) (*.net *.split)
[10:54:38] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[10:54:38] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[10:54:38] *** Quits: mete (~mete@static.201.165.216.95.clients.your-server.de) (*.net *.split)
[10:54:38] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[10:54:38] *** Quits: nuala (~nuala@user/nuala) (*.net *.split)
[10:54:38] *** Quits: adsr (~adsr@45.58.35.250) (*.net *.split)
[10:54:38] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[10:54:38] *** Quits: belak (~belak@user/belak) (*.net *.split)
[10:54:39] *** Quits: Cheez (~Cheez@user/cheez) (*.net *.split)
[10:54:39] *** Quits: Jiyu (~Jiyu@83-160-73-77.ip.xs4all.nl) (*.net *.split)
[10:54:39] *** Quits: synapt (NBishop@o.apocaleaps.com) (*.net *.split)
[10:54:39] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[10:54:39] *** Quits: caffeinatedcode (~caffeine@user/caffeinatedcode) (*.net *.split)
[10:54:39] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[10:54:39] *** Quits: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle) (*.net *.split)
[10:54:39] *** Quits: SleePy (~SleePy@simplemachines/siteteam/SleePy) (*.net *.split)
[10:54:39] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (*.net *.split)
[10:54:39] *** Quits: couture (~couture@user/couture) (*.net *.split)
[10:54:39] *** Quits: ethoxy (~exit-host@slave.sapi01.de) (*.net *.split)
[10:54:56] *** Joins: csrf (~csrf@user/csrf)
[10:54:56] *** Joins: biberu (~biberu@user/biberu)
[10:54:56] *** Joins: nuala (~nuala@user/nuala)
[10:54:56] *** Joins: s17 (~nobody@user/s17)
[10:54:56] *** Joins: gefd (~gef@user/gefd)
[10:54:56] *** Joins: adsr (~adsr@45.58.35.250)
[10:54:56] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[10:54:56] *** Joins: belak (~belak@user/belak)
[10:54:56] *** Joins: Cheez (~Cheez@user/cheez)
[10:54:56] *** Joins: Jiyu (~Jiyu@83-160-73-77.ip.xs4all.nl)
[10:54:56] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[10:54:56] *** Joins: Shyim (~quassel@7thplanet.org)
[10:54:56] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[10:54:56] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[10:54:56] *** Joins: mete (~mete@static.201.165.216.95.clients.your-server.de)
[10:54:56] *** Joins: synapt (NBishop@o.apocaleaps.com)
[10:54:56] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[10:54:56] *** Joins: caffeinatedcode (~caffeine@user/caffeinatedcode)
[10:54:56] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[10:54:56] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[10:54:56] *** Joins: SleePy (~SleePy@simplemachines/siteteam/SleePy)
[10:54:56] *** Joins: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa)
[10:54:56] *** Joins: couture (~couture@user/couture)
[10:54:56] *** Joins: ethoxy (~exit-host@slave.sapi01.de)
[11:34:05] *** Quits: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795) (Quit: tccki)
[11:35:39] *** Joins: tccki (~tccki@box.webslate.co.nz)
[12:27:25] <biberu> TinoDidriksen: allow me to make it worse: { throw optional<Whatever>(); } ;)
[12:36:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:52:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:19:33] *** Joins: MICROburst1 (~Thunderbi@dynamic-077-011-125-121.77.11.pool.telefonica.de)
[13:20:53] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 252 seconds)
[13:21:22] *** Quits: MICROburst (~Thunderbi@dynamic-089-014-222-085.89.14.pool.telefonica.de) (Ping timeout: 246 seconds)
[13:21:22] *** MICROburst1 is now known as MICROburst
[13:27:17] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[13:27:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[13:31:46] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Client Quit)
[13:53:16] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:17:08] *** Joins: entuland (~entuland@user/entuland)
[14:23:24] *** Joins: bin4ry2 (~bin4ry@128.199.135.148)
[14:25:39] *** bin4ry2 is now known as bin4ry
[14:27:37] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:26] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:31:02] *** Joins: csrf (~csrf@user/csrf)
[14:35:20] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[14:48:50] *** Joins: piers (~piers@82-71-0-184.dsl.in-addr.zen.co.uk)
[15:02:00] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Quit: Leaving)
[15:06:01] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 265 seconds)
[15:11:08] *** Quits: piers (~piers@82-71-0-184.dsl.in-addr.zen.co.uk) (Ping timeout: 255 seconds)
[15:36:34] *** Quits: dag (~d@user/dag) (Ping timeout: 272 seconds)
[15:36:48] *** Joins: dag (~d@user/dag)
[15:50:33] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[15:54:51] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Remote host closed the connection)
[16:00:35] *** Joins: piers (~piers@82-71-0-184.dsl.in-addr.zen.co.uk)
[16:02:32] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 272 seconds)
[16:22:10] *** Quits: piers (~piers@82-71-0-184.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[16:25:19] *** Quits: fairuz (~fairuz@user/fairuz) (Quit: Textual IRC Client: www.textualapp.com)
[16:27:16] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[16:30:20] *** Joins: keypusher (keypusher@user/keypusher)
[16:37:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[16:37:56] *** Joins: keypushe- (keypusher@user/keypusher)
[16:41:12] *** keypushe- is now known as keypusher
[16:42:00] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[16:42:05] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:51:40] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[18:06:02] *** Joins: brickfat (~brickfat@user/brickfat)
[18:09:39] *** Parts: brickfat (~brickfat@user/brickfat) ()
[18:25:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:54:22] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[18:55:00] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[18:59:43] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[19:02:55] *** Joins: lall- (~alek@2403:6200:88a2:63d4:39ca:d3f8:46de:e4ec)
[19:17:01] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Remote host closed the connection)
[19:17:23] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[19:19:11] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Read error: Connection reset by peer)
[19:30:40] *** Joins: travisghansen4 (~travisgha@192.74.130.86)
[19:32:01] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 246 seconds)
[19:32:01] *** travisghansen4 is now known as travisghansen
[19:42:55] *** Joins: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net)
[19:59:25] *** Joins: Warped (~Warped@user/warped)
[20:25:40] *** Joins: roo- (~roo-@191.96.100.25)
[20:25:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:54:44] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[21:06:34] *** Quits: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:01] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Light travels faster then sound, which is why some people appear bright, until you hear them speak)
[21:23:25] *** Joins: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net)
[21:58:50] *** Quits: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:02:07] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[22:08:23] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[22:11:53] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[22:23:44] *** Quits: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[22:25:44] *** Joins: stenno (~stenno@user/stenno)
[22:37:35] *** Joins: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net)
[22:45:25] *** Joins: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net)
[23:02:21] <stenno> is there a reason to _not_ use typehinting?
[23:04:03] <AllenJB> I can think of 2 possible reasons: Code needs to work with PHP 5 / 7.0; You like bugs.
[23:05:25] <Naktibalda> typehinting was introduced in 5.0
[23:05:46] <Naktibalda> it is no longer called typehinting in documentation
[23:05:59] <stenno> AllenJB: thanks :)
[23:06:22] <stenno> Naktibalda: 'type declarations' ?
[23:06:58] <stenno> yep
[23:07:12] <stenno> oh wow even with nullable
[23:07:15] <stenno> i wasn't aware of that
[23:09:42] <stenno> ok gotta make sure that strict_types is declared though
[23:50:30] *** Quits: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:54:26] <Byteflux> it's a good step forward, but still leaves much to be desired
[23:54:35] <Byteflux> i'd like to see generic type declarations next
[23:55:04] <Byteflux> what kind of array is allowed? array[string], array[int] etc
