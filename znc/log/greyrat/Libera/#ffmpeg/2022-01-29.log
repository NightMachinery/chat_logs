[00:04:59] *** Joins: crashrep (~crashrep@user/crashrep)
[00:09:43] *** Joins: arcatech (~arcatech@user/arcatech)
[00:13:09] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[00:13:57] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[00:14:12] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[00:30:51] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:32:05] *** Joins: a0z (~a0z@90.244.190.0)
[00:33:15] *** Joins: lavaball (felix@31.204.155.215)
[00:37:50] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[00:38:04] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[00:43:02] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[00:43:10] *** Quits: WereSquirrel (~Squirrel@user/navithefairy) (Quit: Oh no. A thing broke.)
[00:44:43] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[00:44:55] *** Joins: shiriru (~shiriru@user/shiriru)
[00:52:00] *** LurkingBOB is now known as MightyBOB
[00:54:09] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:56:17] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[01:02:40] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[01:02:55] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[01:26:06] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:26:27] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[01:26:41] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[01:27:21] <hiya> JEEB: sorry didn't set path
[01:27:25] <hiya> it works fine now
[01:27:27] *** Parts: hiya (~hiya@user/hiya) (WeeChat 3.0.1)
[01:31:57] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:42:10] *** Quits: apteryx (~maxim@dsl-153-218.b2b2c.ca) (Quit: apteryx)
[01:50:14] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[01:50:29] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[02:09:37] *** Joins: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net)
[02:11:02] <LiftLeft> https://superuser.com/questions/681885/how-can-i-remove-multiple-segments-from-a-video-using-ffmpeg I found this for removing sections of a video. I want to crop it as well. how would I do that?
[02:13:06] <Seirdy> JEEB, BtbN: or just statically link. maybe compile overnight and hope you have enough RAM, cuz statically linking is painful af.
[02:13:44] <BtbN> hm? Statically linking the libav* libs is the default, and does not take any notable extra time.
[02:14:03] <furq_> he wants this to replace his system ffmpeg
[02:14:06] *** furq_ is now known as furq
[02:14:09] <furq> but also yeah what
[02:14:22] <furq> LiftLeft: if you're using the top answer then concat,crop=...
[02:14:33] <BtbN> replacing system ffmpeg with some bleeding edge version is a bad plan
[02:14:46] <furq> correct
[02:14:49] <BtbN> more than likely it'll break everything using ffmpeg libs
[02:15:01] <LiftLeft> furq, bottom one
[02:15:02] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[02:15:17] <JEEB> Seirdy: you need to specifically add enable-shared so while I could note that it could be simpler to do things with static linking (esp. if one just wants ffmpeg.c, it seemed like the user had already configured the build as shared)
[02:15:17] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[02:15:21] <furq> he was having some issue with firefox playing netflix but not d+ on some distro i've never heard of
[02:15:21] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:15:27] <JEEB> thus I gave hints specific to shared
[02:15:32] <furq> and i guess he latched onto the idea that it's ffmpeg's problem
[02:15:32] <JEEB> and setting a custom prefix
[02:15:44] <JEEB> (or rpath)
[02:15:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:15:51] <furq> i assume it's some drm bullshit but who knows
[02:16:03] <JEEB> was that the case where one site worked, and another didn't?
[02:16:09] <furq> netflix did d+ didn't
[02:16:09] <Seirdy> BtbN: no, i mean i build static libav* and some other libs (dav1d, webp, vpx, aom, etc). statically-linking the whole thing with LTO is extremely slow.
[02:16:16] <JEEB> yes, then it's much more likely for the DRM to have nope'd
[02:16:20] <furq> yeah with lto it's slow
[02:16:28] <furq> is there much point in lto though
[02:16:45] <JEEB> since various places specifically deem linux as unsafe
[02:17:05] <furq> i googled it and apparently d+ uses or has historically used some very aggressive widevine settings
[02:17:07] <LiftLeft> my brain hurts
[02:17:08] <furq> so yeah
[02:17:21] <LiftLeft> I need to figure out this syntax
[02:17:31] <furq> but at least nobody has figured out how to rip from it yet oh wait never mind
[02:18:31] <JEEB> yea since there's widevine L3 hacks after all
[02:18:50] <JEEB> so it's mostly just being not-nice towards actual paying customers :P
[02:19:01] <furq> nothing new under the sun
[02:19:54] <nyuszika7h> Disney+ used to not allow Linux at all but they do now afaik
[02:20:10] <nyuszika7h> at least they allow 720p on all L3 devices including Linux, but 1080p and above is L1 only
[02:20:31] <nyuszika7h> Amazon Prime Video is SD only on Linux
[02:21:10] <nyuszika7h> some streaming services still block Linux playback entirely but at least not the big 3 (Amazon/Netflix/Disney+)
[02:21:12] <furq> well how am i supposed to enjoy auction masters quebec in 480p
[02:21:19] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:22:08] <nyuszika7h> funnily enough Indian users get most Disney+ content with the lowest Widevine security level even for 4K on Hotstar
[02:22:40] <furq> R5 is back baby
[02:25:17] *** Quits: Buster_ (~Buster@46.160.36.66) (Ping timeout: 240 seconds)
[02:30:41] *** Joins: ||arifaX (~Commodore@p4fc72d50.dip0.t-ipconnect.de)
[02:30:41] *** Quits: ||arifaX (~Commodore@p4fc72d50.dip0.t-ipconnect.de) (Changing host)
[02:30:41] *** Joins: ||arifaX (~Commodore@user/arifax/x-9857073)
[02:33:38] <Atsuko> irdeto and nagravision have come up with clever watermarking systems for web content
[02:33:59] <Atsuko> a/b watermarking, every segment of the hls playlist is encoded twice, a and b segments
[02:34:40] <Atsuko> these get served to the end user in a unique identifying pattern, so illicit versions can be traced back to the source
[02:37:14] *** Quits: ||arifaX (~Commodore@user/arifax/x-9857073) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:37:55] *** Joins: crashrep (~crashrep@user/crashrep)
[02:43:32] *** Quits: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:51:31] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:54:26] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[02:54:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:59:35] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[03:03:18] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[03:03:33] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[03:03:37] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Ping timeout: 240 seconds)
[03:03:49] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[03:16:56] *** Joins: xenorites (~xenorites@65.102.235.230)
[03:23:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:27:49] *** Quits: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net) (Ping timeout: 240 seconds)
[03:28:09] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[03:28:25] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[03:32:42] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[03:32:44] *** Quits: fkaa (~fkaa@user/fkaa) (Remote host closed the connection)
[03:37:20] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Quit: Konversation terminated!)
[03:37:28] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:41:41] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[03:51:57] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[03:52:12] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[03:53:53] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[03:55:24] *** Joins: stevenli_ (~stevenliu@114.245.24.111)
[03:55:24] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[04:04:28] *** Joins: crashrep (~crashrep@user/crashrep)
[04:06:37] *** Joins: pong (~beaver@user/pong)
[04:07:42] *** Quits: s55 (~s55@user/s55) (Ping timeout: 268 seconds)
[04:10:48] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[04:14:07] *** Joins: s55 (~s55@user/s55)
[04:14:48] *** Quits: pong (~beaver@user/pong) (Quit: pong)
[04:15:26] *** Joins: pong (~beaver@user/pong)
[04:16:50] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[04:17:05] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[04:20:49] *** Joins: deltab (~deltab@user/deltab)
[04:30:01] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[04:34:37] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:40:37] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[04:40:52] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[04:43:05] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-0dc7-4940-686f-5599.res6.spectrum.com)
[04:43:48] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:44:35] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com) (Ping timeout: 250 seconds)
[04:46:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:47:21] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[04:52:02] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[04:59:39] *** Joins: guest (~guest@222.128.6.148)
[04:59:43] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[05:04:30] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[05:04:45] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[05:06:34] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:06:43] *** Joins: lucaswang (~lucaswang@58.246.19.98)
[05:28:22] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[05:28:37] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:38:37] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[05:38:59] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[05:47:16] *** Joins: vlm (~vlm@user/vlm)
[05:52:12] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[05:52:28] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[06:00:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:08:39] *** Joins: xlxlx (~igloo@c-76-108-51-178.hsd1.fl.comcast.net)
[06:08:41] *** Quits: xlxlx (~igloo@c-76-108-51-178.hsd1.fl.comcast.net) (Excess Flood)
[06:12:34] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[06:15:09] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[06:16:04] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[06:16:19] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[06:17:00] *** Joins: ark_ (~ark@2600:8800:1c93:dc00:518a:23b1:6d51:e28)
[06:23:36] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[06:27:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[06:31:17] *** Quits: ark_ (~ark@2600:8800:1c93:dc00:518a:23b1:6d51:e28) (Ping timeout: 240 seconds)
[06:35:22] *** Joins: Vonter (~Vonter@user/vonter)
[06:38:30] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[06:41:00] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[06:41:15] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[06:51:15] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[06:51:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[06:54:09] *** Joins: ark_ (~ark@ip70-190-210-93.ph.ph.cox.net)
[07:04:30] *** Joins: Vonter (~Vonter@user/vonter)
[07:04:34] *** Quits: guest (~guest@222.128.6.148) (Ping timeout: 250 seconds)
[07:04:50] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[07:05:05] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[07:15:50] *** Quits: jos1 (~jos3@dyndsl-178-142-071-058.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:24:54] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-0dc7-4940-686f-5599.res6.spectrum.com) (Ping timeout: 260 seconds)
[07:29:15] *** Joins: jos1 (~jos3@dyndsl-091-248-055-160.ewe-ip-backbone.de)
[07:29:44] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Read error: Connection reset by peer)
[07:30:00] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[07:37:20] *** Joins: guest (~guest@222.128.6.148)
[07:39:14] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f868-291a-f5eb-cdc3.res6.spectrum.com)
[07:40:49] *** Quits: guest (~guest@222.128.6.148) (Client Quit)
[08:01:18] *** Joins: guest (~guest@161.117.202.209)
[08:04:31] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Quit: leaving)
[08:29:51] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:29:56] *** Quits: guest (~guest@161.117.202.209) (Ping timeout: 250 seconds)
[08:32:34] *** Quits: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com) (Quit: Leaving)
[08:34:25] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[08:59:45] *** Quits: ark_ (~ark@ip70-190-210-93.ph.ph.cox.net) (Quit: Leaving)
[09:07:01] *** Quits: c7s (~c7s@user/c7s) (Ping timeout: 245 seconds)
[09:21:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[09:39:22] *** Joins: Vonter (~Vonter@user/vonter)
[09:59:12] *** Quits: a0z (~a0z@90.244.190.0) (Ping timeout: 250 seconds)
[10:03:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[10:24:17] *** Quits: Gaboradon (~Gaboradon@user/Gaboradon) (Remote host closed the connection)
[10:29:05] *** Quits: jkqxz (~mrt@jkqxz.net) (Ping timeout: 250 seconds)
[10:34:58] *** Joins: guest (~guest@222.128.6.148)
[10:44:48] *** Joins: Vonter (~Vonter@user/vonter)
[10:51:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:57:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[10:59:37] *** Quits: guest (~guest@222.128.6.148) (Ping timeout: 240 seconds)
[11:03:48] *** Joins: guest (~guest@222.128.6.148)
[11:05:22] *** Quits: lucaswang (~lucaswang@58.246.19.98) (Quit: Connection closed)
[11:09:14] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f868-291a-f5eb-cdc3.res6.spectrum.com) (Quit: jarthur)
[11:12:44] *** Joins: palasso (~palasso@user/palasso)
[11:16:28] *** Joins: lucaswang (~lucaswang@58.246.19.98)
[11:38:13] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:45:40] *** Joins: Vonter (~Vonter@user/vonter)
[11:51:42] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[11:52:36] *** Joins: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua)
[11:56:07] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[11:57:20] *** Quits: guest (~guest@222.128.6.148) (Quit: Connection closed)
[12:02:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[12:03:17] *** Quits: s55 (~s55@user/s55) (Ping timeout: 240 seconds)
[12:07:39] *** Joins: lavaball (felix@31.204.155.215)
[12:09:05] *** Joins: Vonter (~Vonter@user/vonter)
[12:18:34] *** Joins: realies3 (~realies@user/realies)
[12:18:41] *** Quits: realies (~realies@user/realies) (Ping timeout: 256 seconds)
[12:18:41] *** realies3 is now known as realies
[12:21:27] *** Joins: Volgaar (~volgaar@2001:861:3744:3250:e1b9:cedf:4cd2:3b02)
[12:21:56] *** Joins: rsx (~dummy@ppp-188-174-158-205.dynamic.mnet-online.de)
[12:48:10] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:01:35] *** Quits: lucaswang (~lucaswang@58.246.19.98) (Quit: Connection closed)
[13:05:47] *** Joins: traveller3141 (~chatzilla@95-165-108-8.static.spd-mgts.ru)
[13:06:17] *** Quits: cryptic (~cryptic@142-196-139-017.res.spectrum.com) (Ping timeout: 240 seconds)
[13:07:38] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[13:08:57] *** Joins: Vonter (~Vonter@user/vonter)
[13:15:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[13:17:57] *** Quits: nillyhan0 (~00000000@user/nillyhan) (Quit: Leab)
[13:18:18] *** Joins: nillyhan0 (~00000000@user/nillyhan)
[13:22:55] *** Joins: Vonter (~Vonter@user/vonter)
[13:25:30] *** Joins: s55 (~s55@user/s55)
[13:29:29] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[13:34:31] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:35:23] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[13:35:39] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Quit: Konversation terminated!)
[13:38:34] *** Quits: nillyhan0 (~00000000@user/nillyhan) (Read error: Connection reset by peer)
[13:44:29] *** Joins: cryptic (~cryptic@142-196-139-017.res.spectrum.com)
[13:47:32] *** Joins: guest (~guest@222.128.6.148)
[13:49:19] *** Quits: guest (~guest@222.128.6.148) (Client Quit)
[13:49:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:50:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:51:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:52:56] *** Joins: MrZeus (~MrZeus@2a02:c7f:a0aa:4400:d0b8:f4b0:7a1:8d68)
[13:53:05] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:53:32] *** Joins: MrZeus_ (~MrZeus@194.37.96.118)
[13:57:17] *** Quits: MrZeus (~MrZeus@2a02:c7f:a0aa:4400:d0b8:f4b0:7a1:8d68) (Ping timeout: 250 seconds)
[14:04:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:16:53] *** Quits: Some_Person (someperson@2600:1700:d02:1c50:ce81:24dc:3854:f698) (Quit: ZNC 1.8.2 - https://znc.in)
[14:22:15] *** Joins: Some_Person (someperson@23-118-229-174.lightspeed.hstntx.sbcglobal.net)
[14:27:18] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[14:33:07] *** Joins: clapont (~clapont@user/clapont)
[14:34:59] *** Joins: fkaa (~fkaa@user/fkaa)
[14:41:38] *** Quits: anotheruser (~user@45.130.86.11) (Ping timeout: 252 seconds)
[14:43:21] *** Joins: Vonter (~Vonter@user/vonter)
[14:44:30] *** Joins: someuser (~user@197.54.38.140)
[14:44:41] *** Joins: rhermes (~rhermes@user/rhermes)
[14:46:15] *** Quits: Volgaar (~volgaar@2001:861:3744:3250:e1b9:cedf:4cd2:3b02) (Ping timeout: 250 seconds)
[14:47:21] <rhermes> Hey! I'm trying my hand at using ffmpeg as a library for the first time and I'm struggeling a bit with one aspect: I have a raw h264 file, which I would like to remux into a mp4 file. If I do this via the ffmpeg command, it will calculate the correct timestamps by guessing, and I won't have to recode. But if I try to use the remux example from the
[14:47:22] <rhermes> documentation, I get the error that no timestamps are set. I've been able to dig up: https://trac.ffmpeg.org/ticket/502#comment:21 and https://github.com/FFmpeg/FFmpeg/commit/270ddc2baf8a4533255e770e8e23b2a7cc399026 but I'm not sure how to get it working for me.
[14:48:08] <rhermes> I've been trying to read the `ffmpeg` tools own source code to see if there are any places where it does some logic to make this work, would anyone be willing to point me in the right direction as to what I'm meant to be looking for?
[14:48:40] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[14:50:46] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:51:05] <JEEB> rhermes: check if your AVPacket pts/dts match those that come from `ffprobe -of json -show_packets -i input.264`
[14:51:20] <JEEB> since ffprobe is a very shallow wrapper on top of the APIs
[14:56:06] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:57:46] <JEEB> the last h264 timestamp/frame rate related things seem to be to the parser, namely http://git.videolan.org/?p=ffmpeg.git;a=commit;h=fad459b5a6461bf2ce2c232d5e251dd486bbdc0d and http://git.videolan.org/?p=ffmpeg.git;a=commit;h=daf04868d8a20d25d5fc664e26137ddfabd4d40a
[14:59:37] *** Joins: Vonter (~Vonter@user/vonter)
[14:59:54] <JEEB> not sure if the parser is actually called from h264dec
[15:00:17] <JEEB> (the raw H.264 reader)
[15:00:49] <JEEB> also I notice it utilizes the old define for "rawvideo" demuxers, which means it doesn't set the flag for "I don't give out timestamps by myself", which might or might not be correct
[15:02:39] *** Joins: Buster_ (~Buster@46.160.36.66)
[15:04:06] <JEEB> ok, at least it sets AVPARSE_PARSE_FULL_RAW :) so parser should definitely get utilized
[15:05:37] *** Quits: s55 (~s55@user/s55) (Ping timeout: 240 seconds)
[15:07:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[15:07:27] <rhermes> Sorry, had to eat! Thanks for helping me! Looking at the output of ffprobe, I'm able to see `duration`, but nothing else really
[15:07:36] <rhermes> But in my program, when it logs, I get `NOPTS` on all output fields.
[15:08:00] <JEEB> note the show_packets with output format set to json. that should dump the fields from the AVPackets
[15:08:19] <JEEB> which should match the packet info you get from the API (given you are poking against the same API version)
[15:08:28] <JEEB> so if there are NOPTS it should just dump NOPTS as well
[15:09:21] <rhermes> Yeah, I'm looking at that, but it's showing something different :O  Let me share my code and we can see
[15:09:25] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:10:03] <JEEB> unlike ffmpeg.c, which has a lot of random historical stuff in there trying to guesstimate things, ffprobe is very much just a thing dumping info from the API
[15:10:16] <rhermes> https://paste.rs/7k6.cpp this is my code. I'll look at the ffprobe source code now, thanks for the good idea!
[15:10:43] <JEEB> anyways, I'm just checking atm if adding any additional flags to the raw h264 demuxer makes any sense :)
[15:11:03] <rhermes> Btw, I'm hard coding the `time_base` and `avg_frame_rate` on the output out of desperation here, I don't know if it has any effect
[15:11:22] <JEEB> we're focusing on input first :)
[15:12:29] <rhermes> Yeah, just wanted to explain it, I realize this must be a total mess of the code
[15:13:59] <JEEB> ok, I dumped a random mkv's first five frames into raw annex b and I don't get any timestamps. and with -show_streams in ffprobe I see the frame rate related fields/time bases aren't set, either
[15:14:22] <JEEB> now to check if I actually encoded this file in 2011 with the max time base field set in the H.264 parameter sets :)
[15:14:42] <JEEB> without them it's kind of a "well there's no info in the stuff" kind of situation
[15:16:09] *** Joins: s55 (~s55@user/s55)
[15:16:09] <rhermes> I don't really undestand the timestamps just yet, but what I read from "online sources" is that h264 doesn't contain any timestamps, so it has to guess, and that works for the mp4 and avi containers, but not others. I was hoping to leverage that to go from raw h.264 to mp4 to HLS. But it seems I've done something wrong somewhere
[15:17:20] <JEEB> raw H.264 can have timestamps for each frame, but nobody uses that. more often you have in the parameter sets a timescale which is then often interpreted as a frame rate
[15:17:37] <JEEB> (and I don't think the per-frame timing information stuff is parsed in FFmpeg)
[15:18:11] <JEEB> `ffmpeg -v verbose -i out.264 -c copy -bsf:v trace_headers -vframes 5 -f null -`
[15:18:18] <JEEB> that lets you dump the info in the parameter sets
[15:18:40] <rhermes> Ah ok! Well one thing I saw when I use my code is that while using the `ffmpeg -i input.h264 -c copy out.mp4` the output and input streams have the exact same parametesr, while when I just do mine, without hardcoding the information I get:
[15:18:41] <JEEB> I'm currently laughing at the thing I am testing with having a timescale of 180k :)
[15:19:01] <rhermes> Stream #0:0, 0, 0/0: Video: h264 (High), 1 reference frame, yuv420p(progressive, left), 1920x1080 (0x0), 0/1, q=2-31
[15:19:10] <rhermes> With the input being: Stream #0:0, 127, 1/1200000: Video: h264 (High), 1 reference frame, yuv420p(progressive, left), 1920x1080 (1920x1088), 0/1, 25 fps, 25 tbr, 1200k tbn, 50 tbc
[15:20:51] <rhermes> Yeah, there is a timescale here in the otuput of your command of 50
[15:21:09] <JEEB> yay, so at least you have something less insane in there :)
[15:21:19] <JEEB> what's the number of ticks which is right before it?
[15:21:40] <rhermes> 1
[15:21:52] <JEEB> is your input 50fps?
[15:22:00] <rhermes> no, it's 25fps
[15:22:21] <JEEB> yea I don't recall if that value was on field rate or frame rate
[15:22:23] <JEEB> time to check
[15:22:58] <JEEB> heh, no "timescale" in the H.264 spec... let's guess they added a space
[15:23:06] <JEEB> yup
[15:26:24] *** Joins: Vonter (~Vonter@user/vonter)
[15:26:27] <JEEB> basically it being 2x the value makes sense since my input was probably MPEG-TS and I'd have 1:90000 here, which is exactly what the time base of MPEG-TS is. but I'd like to know which field lets me divide by two (if there even is one)
[15:27:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:28:26] <JEEB> maybe DeltaTfiDivisor...
[15:29:14] <JEEB> looking at the definition of num_units_in_tick and the stuff after that
[15:29:25] *** Parts: J_Darnley (~J_Darnley@d51A44418.access.telenet.be) (WeeChat 3.4)
[15:29:38] <rhermes> But just to take a step back here, why is it that ffprobe gets a duration of 4800, while I get a NOPTS?
[15:30:03] <JEEB> I don't get any duration in current master with the random stream I have dumped from a 2011 matroska file :D
[15:30:08] <JEEB> I just get a size and position
[15:30:16] <JEEB> i can check a random broadcast dump
[15:31:02] <JEEB> also btw if you add -show_streams, does r_frame_rate show the correct value per chance?
[15:31:35] <rhermes> Yeah it does
[15:31:45] <JEEB> good, then that matches this stream at least :)
[15:31:55] <JEEB> since I see that my value in the bit stream is 1,180k
[15:32:01] <JEEB> and yours is 1,50
[15:32:16] <rhermes> My input is parsed fine, if I do `av_dump_format` i get:
[15:32:17] <rhermes> Input #0, h264, from 'misc/input.h264':
[15:32:18] <rhermes>   Duration: N/A, bitrate: N/A
[15:32:18] <rhermes>   Stream #0:0, 127, 1/1200000: Video: h264 (High), 1 reference frame, yuv420p(progressive, left), 1920x1080 (1920x1088), 0/1, 25 fps, 25 tbr, 1200k tbn, 50 tbc
[15:32:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:32:47] <rhermes> Which is equal to what I get in ffprobe. So thus far it's correct. But still when I do the actual `read_frame` the packets that come out has no duration on them
[15:33:22] <JEEB> yup, in most inputs you don't get a duration, but if ffprobe is showing you that it gets something, that's funky
[15:34:23] <JEEB> I'll try to check one of the broadcast dumps I have around to see if that shows similar behavior to what you're explaining
[15:36:17] <JEEB> ok, with a broadcast stream I get a duration set
[15:36:48] <JEEB> it probably has the constant frame rate flag set
[15:37:00] <rhermes> Ah, one difference here is that ffprobe uses `AVCodec` to do some stuff, I don't
[15:37:48] <JEEB> yea the broadcast sample has units in tick 1, timescale 50 and fixed_frame_rate_flag set to 1
[15:37:56] <JEEB> the last one probably makes something get set
[15:38:02] <JEEB> and thus you get durations
[15:38:13] <JEEB> while paradoxically you don't get timestamps :P
[15:40:22] <rhermes> But is there a way to know if `ffmpeg -i input.h264 -c copy output.mp4` actually uses `AVCodec or not`. Because I've looked at the ffmpeg code and it seems to do a stream copy: https://github.com/FFmpeg/FFmpeg/blob/master/fftools/ffmpeg.c#L3025
[15:40:26] *** Quits: traveller3141 (~chatzilla@95-165-108-8.static.spd-mgts.ru) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211220132845])
[15:40:34] <rhermes> There is some logic there to set the parameters
[15:41:57] <JEEB> yea, ffmpeg.c is coming up with a DTS, but I'm personally trying to figure out what is missing from the framework being able to give you timestamps
[15:42:04] <JEEB> since the framework very clearly is able to give you packet durations
[15:42:54] <JEEB> since personally I've poked quite a bit at ffmpeg.c and I'd rather not spend trying to lead people to similar possible hacks/guesstimation. if the framework can instead be made to work for the API user.
[15:43:57] <rhermes> Sure, and I love that you are helping me, I'm just trying to wrap my head around why this isn't working
[15:44:34] *** Quits: jos1 (~jos3@dyndsl-091-248-055-160.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[15:46:26] <JEEB> which bit exactly. that you are getting a duration in ffprobe but not in your API code's AVPackets?
[15:48:10] <JEEB> for that my first guess would be difference in FFmpeg version? unless ffprobe.c does something funky, which I would be surprised in since it's in theory supposed to be a thing quite close to the "what you receive from the API"
[15:49:55] <rhermes> That, but mostly that I'm not able to do the remux for the raw h264 file, but can do it for any other file. I'm looking more at ffmpeg and ffprobe now and I believe something funky is going on
[15:50:02] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[15:50:26] <JEEB> well timestamps from raw H.264 has been an issue for various levels due to lack of timestamps from libavformat :P
[15:50:39] <JEEB> (where they'd in theory be possible to calculate)
[15:53:00] <JEEB> so basically I know that stuff is imperfect in the API, and I'm using you as a pinata to figure out how far the API works and which bits need to be poked
[15:54:35] <rhermes> Well I'm all for it
[15:54:56] <JEEB> for the record, in my experience even ffmpeg.c got raw H.264 to timestamp-containing things broken (and if it did succeed, it was accidental). that might be due to various flags being (not) set in the bit stream of course
[15:55:17] <JEEB> and thus getting timestamps out of libavformat so that ffmpeg.c doesn't have to do guesstimation would IMHO be for the best
[15:56:40] <JEEB> (I do understand that for streams like the one I had encoded in 2011 would not get a sane frame rate set, so that would have to be overridden, but still getting timestamps would make sense)
[15:58:13] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:59:31] *** Joins: jos1 (~jos3@dyndsl-091-096-034-195.ewe-ip-backbone.de)
[16:00:08] <rhermes> but for transcoding, this is not an issue then? We don't have to guess at timestamps then?
[16:00:24] <JEEB> the *decoder* does set more timestamps for the AVFrames as far as I can tell
[16:00:56] <JEEB> which is why a whole lot of issues even with raw H.264 get """fixed""" as you decode
[16:02:08] <rhermes> Yeah, that is correct, I'm getting the duration correctly then, but not the pts or dts
[16:04:27] <JEEB> you can just add -show_frames to the ffprobe command to get the results from decoding as well
[16:04:39] <JEEB> -show_packets is just reading packets from the input
[16:05:43] <JEEB> for me even the broadcast stream which is set with the constant frame rate flag doesn't get a pts after decoding, though :)
[16:06:07] <JEEB> which I guess makes sense. ffmpeg.c just utilizes some guesstimation logic to get something written into the AVPackets
[16:07:06] <rhermes> But this is weird to me, because ffprobe shows duration for the input file on the packets, but my program doesn't have that. And I'm using the same versions of the library for my program and for ffprobe
[16:07:29] <rhermes> So there must be some extra logic in ffprobe also. I think it's related to the InputStream structure in the `fftools` folder doing some guessing
[16:08:27] <JEEB> at least it has its own stuff instead of the overgrown InputStream etc in ffmpeg.c :)
[16:08:47] <JEEB> it seems to utilize very little from fftools other than cmdutils.c
[16:08:59] <JEEB> so it's all within fftools/ffprobe.c
[16:11:09] <rhermes> Ah, yes, my bad
[16:11:24] <JEEB> read_interval_packets is where it just does the av_read_frame loop
[16:11:33] <JEEB> (I'm really sorry for the naming of that function btw, even if it's not my fault)
[16:11:43] <JEEB> since it's clearly av_read_packet :P
[16:12:40] <JEEB> and then if do_read_packets is true it will call show_packet
[16:13:07] <JEEB> and duration is just pkt->duration and it doesn't poke the packet in any weird way there
[16:14:57] *** Joins: lavaball (felix@31.204.155.215)
[16:15:09] <JEEB> where it can thus affect something is open_input_file where it actually opens the libavformat context
[16:17:07] <JEEB> lol there being a hack for MPEG-TS in there
[16:17:12] <JEEB> had never noticed that
[16:17:44] *** Joins: nillyhan0 (~7f000001@user/nillyhan)
[16:17:56] <JEEB> (the scan_all_pmts thing)
[16:18:06] <JEEB> it is irrelevant to raw H.264, though
[16:19:31] <JEEB> it does open a decoder but that really shouldn't matter since it wouldn't get utilized w/o actually decoding
[16:24:52] <JEEB> it is utilizing option parsing from cmdutils.c, but I'm not sure if those dictionaries actually contain anything if you don't actually set options (you can add a dump of the av_dict in ffprobe.c if you want)
[16:25:12] <JEEB> so yea, that is pretty barebones on top of the FFmpeg APIs, which is how I'd expect it to be :)
[16:39:18] <JEEB> rhermes: if you are still unsure, I think you should just do a very minimal example that does avformat_open_input, avformat_find_stream_info and then loops over av_read_frame and logs the AVPacket values :)
[16:40:03] <JEEB> will go out for a nice walk for a while :)
[16:40:05] <rhermes> Yeah, that's what I've done. I'm thinking I'm just going to give up and go for transcoding and hope that works. I can do a deep dive on the timestamps later, it's a bit over my head right now
[16:40:18] <rhermes> Thanks so much for the help so far though, I reall appriciate it!
[16:42:42] *** Joins: rhermes44 (~rhermes@user/rhermes)
[16:44:36] <JEEB> btw you can add -debug_ts to ffmpeg.c lines to figure out at which point it more or less comes up with values
[16:44:52] <JEEB> it does not currently log packet durations but I think I'll add that on Monday
[16:46:06] *** Quits: rhermes (~rhermes@user/rhermes) (Ping timeout: 250 seconds)
[16:46:11] <JEEB> and I quickly checked and since the bit stream filter is getting a DTS, but the demuxer+ffmpeg logging is not showing anything, it seems to do the guesstimation in ffmpeg.c::process_input_packet
[16:47:56] <JEEB> yea, I think the saw_first_ts logic might set the DTS start position since it sets it to `- ist->dec_ctx->has_b_frames * AV_TIME_BASE / av_q2d(ist->st->avg_frame_rate)` if the stream's avg_frame_rate is set
[16:48:43] <JEEB> but the real fix of course is to get PTS and DTS from libavformat :P
[16:49:12] <rhermes44> But so my transcoding isn't going to work either without calculating the PTS and DTS?
[16:49:58] <JEEB> depends on what the encoder does, but just look at the output of -show_frames :P
[16:50:04] <JEEB> I don't see pts being set on AVFrames
[16:50:19] <JEEB> at least guessing PTS after decoding means you don't have to take into account b-frame delay etc
[16:50:23] <JEEB> or picture reordering
[16:50:37] <JEEB> since AVFrames are already ordered back into presentation order
[16:50:39] <JEEB> anyways, afk
[16:50:40] <JEEB> :)
[16:51:36] *** Joins: jkqxz (~mrt@jkqxz.net)
[16:52:22] *** Quits: rsx (~dummy@ppp-188-174-158-205.dynamic.mnet-online.de) (Quit: rsx)
[16:54:01] *** Joins: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com)
[16:56:26] *** Joins: neko2 (~nekosquar@user/deltasquared)
[16:57:38] <neko2> would anyone know whereabouts in the source code the settings for whatever ffplay's using by default for audio visualisation is set? I've been toying around with showspect, but like pitch/harmonic bands I get from it always seem way thicker than whatever ffplay is doing.
[17:08:28] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:11:46] *** Joins: Vonter (~Vonter@user/vonter)
[17:15:19] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:17:26] *** Joins: Vonter (~Vonter@user/vonter)
[17:25:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[17:41:34] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 250 seconds)
[17:46:08] *** nikos_ is now known as nikos
[17:56:38] *** Quits: s55 (~s55@user/s55) (Ping timeout: 256 seconds)
[17:57:12] *** Joins: s55 (~s55@user/s55)
[18:07:59] *** Joins: Vonter (~Vonter@user/vonter)
[18:14:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[18:15:28] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:26:52] *** Joins: Vonter (~Vonter@user/vonter)
[18:27:17] <rhermes44> Do you need an AVFilterGraph to do transcoding?
[18:35:28] *** Joins: lavaball (felix@31.204.155.215)
[18:47:39] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:48:27] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:51:48] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:52:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[19:04:46] <JEEB> rhermes44: if you don't need to filter things at all
[19:04:50] <JEEB> then nope
[19:05:04] <JEEB> like color space conversions, scaling etc
[19:05:50] *** Quits: nillyhan0 (~7f000001@user/nillyhan) (Ping timeout: 260 seconds)
[19:10:33] <rhermes44> ok, looking at my options, it seems I will ahve to write some code to guess the DTS and PTS regardless. Going to just bite the bullet and try to do so
[19:11:13] *** Joins: minimal (~minimal@user/minimal)
[19:12:44] <rhermes44> JEEB: When decoding, do I get the frames out in the order they are to be played, or can they be out of order there too?
[19:14:00] <JEEB> rhermes44: after decoding all reordering should already be done
[19:14:12] <JEEB> that is why you have decoding delay with b-frames f.ex.
[19:14:31] <JEEB> since it will wait until things can be nicely output in order
[19:14:47] <rhermes44> Ok, so I can then just assume that each frame I get should be a fixed space after the last one?
[19:14:53] <rhermes44> If I go through the process of decoding that is
[19:15:07] <JEEB> if you assume that the content is with a constant frame rate, yea
[19:15:17] <JEEB> in other words, overriding fps is much simpler after decoding
[19:15:30] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[19:15:48] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:19:07] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[19:24:38] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[19:34:01] *** Joins: c7s (~c7s@user/c7s)
[19:34:04] *** Joins: Vonter (~Vonter@user/vonter)
[19:36:56] *** Joins: WickedSmoke (~karl@cpe-76-182-46-7.nc.res.rr.com)
[19:38:12] <WickedSmoke> Hello, I'm trying to reencode DOSBox .avi files to .mp4 but the output video does not play in VLC.
[19:38:47] <WickedSmoke> If I use mpeg2video the output does play in VLC (though it looks awful)
[19:39:56] <WickedSmoke> When using h264, hevc, or vp9 the output is unplayable.
[19:40:30] *** Joins: Volgaar (~volgaar@2a01:cb14:675:e500:e1a8:ddac:588e:abe1)
[19:42:02] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:46:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:47:46] <rhermes44> Ok, but I don't get quite JEEB. if I simply put the `pts` of the AVFrame coming out of the decoder to `0, 1, 2, 3, 4` as I get more frames, then it works perfectly. But in the comment for `pts` on the AVFrame, it says it's in `time_base` units. Which time_base is that? My input time_base is 1/50 and the duration of each pkt is 2, which gives 25
[19:47:47] <rhermes44> fps.
[19:48:19] <JEEB> the time base in which you are interpreting it afterwards :P
[19:48:41] <JEEB> so if you are passing it to an AVCodecContext of an encoder, you probably want to have it on that time base
[19:49:08] <JEEB> then the packets you get are on that encoder's time base, and finally you adjust them to your output muxer's AVStream's time base
[19:49:15] <JEEB> which may or may not all be the same
[19:49:22] <JEEB> for example FLV and MPEG-TS require a specific time base :P
[19:58:09] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:59:21] <rhermes44> Ok, so my decoder has a time_base of `1/50`, my encoder has a timebase of `1/25` and the decoded frame has a `pkt_dur` of 2. How do I do the math here to know what I want  the frame going into the encoder to have for PTS?
[20:00:12] <rhermes44> I feel so stupid, but I'm not able to understand how this all hangs together
[20:04:07] <JEEB> so if we take a normal flow: an AVPacket received from a demuxer is on the time base of the AVStream it comes from. then you av_packet_rescale_ts to the time base of  your decoder and the AVFrames received from that decoder are in the decoder's time base you then and av_rescale_q_rnd the timestamp of that frame to whatever is your next component, be it filter chain or encoder. with filter chains inputs and
[20:04:13] <JEEB> outputs have time bases so when you receive an AVFrame back from filtering it is on that output's time base, which then can be av_rescale_q_rnd'd to the encoder's time base.
[20:05:30] <JEEB> since you are anyways coming up with a specific frame rate and are overriding the fps to that anyways, just setting the encoder time base to that frame rate and setting the pts to plus one all the time should do the job
[20:06:39] <rhermes44> Ok, but do I want to try to override the DTS to?`
[20:06:50] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:07:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:07:17] <JEEB> if you are dealing with AVPackets, if you are changing rates at that point, yes? although that is much harder due to possible coding reordering etc
[20:07:26] <JEEB> AVFrames have no dts, just pts
[20:07:29] <rhermes44> And it seems that ffmpeg is able to do this even without decoding for certain formats. You linked to some black magic above, where they are trying to account for things
[20:07:43] <rhermes44> Ok, so the encoder should set the dts then?
[20:07:51] <JEEB> yes, encoder will set dts for the output AVPacket
[20:10:29] <rhermes44> Hmm ok. So I just got to set the PTS so that when you do `PTS * ENCODERS_TIME_BASE` you get the time that I want it to show up
[20:11:00] <rhermes44> So if the framerate is `25/1` and the timebase is `1/25` then I'm always going to get, `0, 1, 2, 3`
[20:11:49] <JEEB> yup
[20:13:01] <rhermes44> This means I've still got to transcode, since the remuxing is much faster. Should I just read ffmpeg.c source code and try to figure out how they guess the next DTS and PTS to deal with this?
[20:13:37] <JEEB> I mean, technically the right thing is that libavformat should give you PTS/DTS
[20:13:50] <JEEB> which it unfortunately currently doesn't
[20:14:04] <JEEB> and you cannot know how the packets' contents should be reordered
[20:14:30] <JEEB> (and that is why I still have some pretty heavy doubts that you can actually properly remux raw H.264 with ffmpeg.c to MP4
[20:15:12] <JEEB> because sure, DTS is simple for constant frame rate
[20:15:44] <JEEB> you can start at zero and go upwards. but you need to offset PTS enough so that even if you get a lot of reordering PTS will always be >= DTS
[20:16:13] <JEEB> and that would maybe work for no bframes case
[20:16:20] <JEEB> where there is no reordering
[20:16:35] <JEEB> then you have b-frames come in and you'd need a H.264 parser
[20:18:20] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Quit: WeeChat 3.3)
[20:19:56] <JEEB> if you need to get something done Right Now, I would almost recommend temporarily just muxing the video into MP4 with l-smash's muxer or something with the wanted frame rate. and then handle that with FFmpeg afterwards as it has proper timestamps
[20:20:30] <rhermes44> What is `I-smash's` muxer?
[20:20:50] <rhermes44> And ffmpeg did the right thing for my input, but I can live with transcoding for now
[20:20:59] <rhermes44> Is there any good sources to read about this stuff?
[20:21:11] <JEEB> are you sure it did? do you have any b-frames in your input?
[20:21:35] <JEEB> https://github.com/l-smash/l-smash/ , one of the tools included in there is muxer and another is boxdumper which lets you inspect the contents of MP4-likes
[20:25:51] <JEEB> but the code for handling b-frame reordering and delaying etc is already there in the FFmpeg code and it is just not in the libavformat layer since the raw H.264 "demuxer" is just a thing utilizing the "rawvideo" wrappers and the H.264 parser afterwards
[20:25:55] <rhermes44> What is l-smash? And why should I use that to mux? is it a special tool for h264?
[20:26:11] <JEEB> it's just the mp4 toolbox where I know the developers :P
[20:26:26] <JEEB> and it is a thing which I know does more or less the right thing
[20:26:39] <JEEB> so you can get your raw annex b with a specific frame rate into some container
[20:26:53] <JEEB> after which FFmpeg will handle it
[20:27:15] <rhermes44> Ok, I'll look at that, but for now going to watch formula E
[20:27:22] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[20:27:22] <JEEB> of course the end thing that I'd like to happen is for the libavformat h.264 handling to actually set pts/dts :D
[20:27:24] <rhermes44> Thanks so much for the help JEEB, hope you have a good evening!
[20:30:35] *** Joins: crashrep (~crashrep@user/crashrep)
[20:38:48] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:46:10] *** Quits: __Myst__ (~Myst@net-47-53-73-65.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[20:48:14] *** Joins: __Myst__ (~Myst@net-93-67-247-26.cust.vodafonedsl.it)
[20:51:32] *** Joins: babyface (~babyface@user/babyface)
[20:54:15] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[20:57:51] *** Quits: Volgaar (~volgaar@2a01:cb14:675:e500:e1a8:ddac:588e:abe1) (Ping timeout: 250 seconds)
[21:00:28] *** Quits: s55 (~s55@user/s55) (Ping timeout: 250 seconds)
[21:02:02] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[21:04:18] *** Joins: Hackerpcs (~user@user/hackerpcs)
[21:08:54] *** Joins: s55 (~s55@user/s55)
[21:21:53] *** Joins: nillyhan0 (~7f000001@user/nillyhan)
[21:29:25] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:34:25] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Quit: Leaving)
[21:41:17] *** Quits: k0mpjut0r (~k0mpjut0r@2a01:8740:1:706::2) (Ping timeout: 252 seconds)
[21:45:17] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:47:07] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:49:55] *** Joins: taupiqueur (~taupiqueu@140.147.204.77.rev.sfr.net)
[22:03:18] *** Quits: CruxOfTheB (~CruxOfThe@192.222.196.53) (Remote host closed the connection)
[22:17:20] *** Joins: lavaball (felix@31.204.155.215)
[22:17:49] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[22:19:57] *** Quits: __Myst__ (~Myst@net-93-67-247-26.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[22:21:42] *** Joins: __Myst__ (~Myst@net-93-67-247-26.cust.vodafonedsl.it)
[22:28:50] *** Quits: taupiqueur (~taupiqueu@140.147.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[22:30:06] *** Joins: Volgaar (~volgaar@2a01:cb14:675:e500:e1a8:ddac:588e:abe1)
[22:38:39] *** Joins: k0mpjut0r (~k0mpjut0r@79.124.7.34)
[22:56:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:14:17] *** Quits: nillyhan0 (~7f000001@user/nillyhan) (Read error: Connection reset by peer)
[23:18:17] *** Quits: pong (~beaver@user/pong) (Quit: reload)
[23:19:17] *** Joins: pong (~beaver@user/pong)
[23:22:17] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[23:34:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[23:37:46] *** Quits: MrZeus_ (~MrZeus@194.37.96.118) (Ping timeout: 256 seconds)
[23:39:04] *** Joins: Vonter (~Vonter@user/vonter)
[23:44:38] *** Parts: neko2 (~nekosquar@user/deltasquared) ()
[23:47:02] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[23:53:05] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:55:54] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[23:56:21] *** Joins: Flabb (~Flabb@89.169.42.92)
[23:59:04] *** af is now known as Borisa_Johnsona
