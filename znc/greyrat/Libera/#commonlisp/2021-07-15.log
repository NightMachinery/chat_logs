[00:07:12] *** Joins: prxq (~quassel@dynamic-077-012-253-156.77.12.pool.telefonica.de)
[00:10:40] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[00:11:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:11:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[00:12:04] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[00:30:29] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca)
[00:51:47] *** Quits: amb007 (~a_bakic@130.106.23.93.rev.sfr.net) (Ping timeout: 245 seconds)
[00:59:58] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca) (Ping timeout: 258 seconds)
[01:01:00] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[01:09:55] *** Joins: analognoise (~analognoi@83.136.182.93)
[01:12:35] *** Joins: amb007 (~a_bakic@24.107.23.93.rev.sfr.net)
[01:12:50] *** mister_m` is now known as mister_mm
[01:17:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[01:28:48] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 255 seconds)
[01:31:20] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[01:33:11] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[01:33:30] *** Joins: robin (~robin@user/terpri)
[01:35:51] *** Joins: selwyn (~selwyn@user/selwyn)
[01:37:25] *** Quits: robin (~robin@user/terpri) (Read error: Connection reset by peer)
[01:37:52] *** Joins: rt (~robin@user/terpri)
[01:39:37] *** mister_mm is now known as mister_mmm
[01:46:14] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:57:23] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[02:02:03] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[02:04:19] *** Joins: pve_ (~pve@188-67-136-234.bb.dnainternet.fi)
[02:07:30] *** Quits: pve (~pve@178-55-194-162.bb.dnainternet.fi) (Ping timeout: 255 seconds)
[02:07:43] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[02:09:02] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 255 seconds)
[02:09:27] *** Quits: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[02:13:33] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[02:19:28] *** Quits: svillemot (~sebastien@rama.villemot.name) (Quit: WeeChat 3.0)
[02:20:40] *** Joins: svillemot (~sebastien@rama.villemot.name)
[02:30:16] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:32:13] *** Joins: pillton (~user@220.240.219.38)
[02:36:39] *** Quits: svillemot (~sebastien@rama.villemot.name) (Quit: WeeChat 3.0)
[02:40:02] *** Quits: frgo (~frgo@p200300deef181d00acae8e9a594b53e3.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:40:29] *** Joins: frgo (~frgo@p200300deef181d00acae8e9a594b53e3.dip0.t-ipconnect.de)
[02:48:00] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 255 seconds)
[02:52:03] *** Joins: svillemot (~sebastien@rama.villemot.name)
[03:03:47] *** Quits: ggoes (~gregf@user/ggoes) (Quit: WeeChat 2.3)
[03:04:04] *** Joins: ggoes (~gregf@user/ggoes)
[03:04:29] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[03:04:43] *** Joins: akoana (~ah@user/akoana)
[03:09:36] *** Quits: rgherdt (~rgherdt@ip5f5af43c.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[03:15:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 245 seconds)
[03:19:06] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 272 seconds)
[03:23:45] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:31:23] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[03:46:41] <jcowan> P-U-O is a good example of the perils of overspecification.  Because it is required to return NIL. which is semantically useless, you can't implement your own P-U-O to return something you find more useful, such as the object.  If the definition had said "the return values are unspecified" instead, it would be possible.
[03:46:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 255 seconds)
[03:47:39] <edgar-rft> what is P-U-O ?
[03:48:11] *** Joins: taiju (~taiju@m014013236064.v4.enabler.ne.jp)
[03:50:56] *** Quits: Alfr (~Alfr@user/alfr) (Killed (copper.libera.chat (Nickname regained by services)))
[03:51:01] *** Joins: Alfr (~Alfr@user/alfr)
[03:52:13] *** Joins: pegaso (~reis-r@177.107.27.189)
[03:54:18] *** Quits: pve_ (~pve@188-67-136-234.bb.dnainternet.fi) (Quit: leaving)
[04:01:15] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[04:05:18] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Remote host closed the connection)
[04:05:34] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[04:06:15] <pillton> clhs print-unreadable-object
[04:06:15] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/m_pr_unr.htm
[04:09:36] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Remote host closed the connection)
[04:09:37] <pillton> jcowan: Not sure of the problem given that PRINT-UNREADABLE-OBJECT is usually used inside a PRINT-OBJECT method.
[04:09:46] <jcowan> print-unspecified-object, see _death's remarks
[04:09:52] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[04:09:58] <jcowan> sorry, -unreadable-
[04:10:17] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[04:13:13] <pillton> Oh I see. I have a few things to fix then. :)
[04:22:06] *** Quits: pegaso (~reis-r@177.107.27.189) (Quit: Leaving)
[04:22:07] *** Quits: random-nick (~random-ni@87.116.177.72) (Ping timeout: 246 seconds)
[04:42:55] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[04:46:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[04:51:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:20:37] *** Quits: manicennui (uid349235@id-349235.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:34:13] *** Joins: pegaso (~reis-r@177.107.27.189)
[05:38:14] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[05:42:06] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 258 seconds)
[05:52:25] *** Quits: lotuseater (~user@p200300e787091b00387e7f8a32e5e786.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[05:54:18] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 255 seconds)
[06:00:57] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 245 seconds)
[06:13:20] *** Quits: pegaso (~reis-r@177.107.27.189) (Quit: Leaving)
[06:19:48] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[06:32:06] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 255 seconds)
[06:42:52] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[06:50:58] *** Joins: zephyr1 (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[06:53:14] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (Ping timeout: 265 seconds)
[06:53:14] *** zephyr1 is now known as zephyr
[07:00:48] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[07:01:43] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:04:54] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[07:24:16] *** Joins: prxq_ (~quassel@x4dbdffbf.dyn.telefonica.de)
[07:28:02] *** Quits: prxq (~quassel@dynamic-077-012-253-156.77.12.pool.telefonica.de) (Ping timeout: 245 seconds)
[07:31:49] <beach> Good morning everyone!
[07:36:06] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:37:30] *** Joins: akoana (~ah@user/akoana)
[07:53:45] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:57:22] *** Quits: casual_friday (~casual_fr@216.71.110.168) (Quit: %bye%)
[08:00:37] *** Joins: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net)
[08:02:03] *** Devon is now known as Devon7
[08:02:11] *** Devon7 is now known as Devon
[08:07:41] *** Quits: mister_mmm (~user@c-73-110-154-209.hsd1.il.comcast.net) (Remote host closed the connection)
[08:07:56] *** Joins: mister_mmm (~user@c-73-110-154-209.hsd1.il.comcast.net)
[08:22:39] *** Joins: karlosz (~karlosz@router.cloyne.org)
[08:32:52] <contrapunctus> hey, beach
[09:21:27] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[09:29:59] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[09:34:22] *** Joins: wilfred (uid159@id-159.highgate.irccloud.com)
[09:34:46] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[09:36:04] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[09:44:14] *** Quits: mister_mmm (~user@c-73-110-154-209.hsd1.il.comcast.net) (Remote host closed the connection)
[10:10:26] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 258 seconds)
[10:30:38] *** Joins: shka (~herr@109.231.62.239)
[10:44:38] *** Joins: treflip (~user@95.79.32.99)
[10:59:43] *** Joins: mayuresh (~mayuresh@49.32.231.94)
[11:00:01] <mayuresh> hello everybody. :)
[11:00:23] <mayuresh> hi beach from france, and contrapunctus from delhi. :)
[11:07:14] *** Quits: mayuresh (~mayuresh@49.32.231.94) (Quit: Leaving)
[11:07:55] *** Joins: andrei-n (~andrei-n@104.156-130-109.adsl-dyn.isp.belgacom.be)
[11:10:26] *** Joins: mayuresh (~mayuresh@49.32.231.94)
[11:13:06] <contrapunctus> mayuresh: नमस्कार ^^
[11:13:57] <mayuresh> wow, that is impressive "contrapunctus", namaskar to you too.
[11:14:50] *** Quits: amb007 (~a_bakic@24.107.23.93.rev.sfr.net) (Ping timeout: 258 seconds)
[11:16:19] <mayuresh> contrapunctus: do you work under common lisp in a commercial setting?
[11:17:55] *** Quits: mayuresh (~mayuresh@49.32.231.94) (Quit: leaving)
[11:18:02] <contrapunctus> mayuresh: naw, I'm just a hobbyist. Most of my experience has been Elisp and Scheme, but using the CL facilities in the former and the promise of similar level of interactive development as Emacs piqued my interest.
[11:18:51] *** Joins: mayuresh (~mayuresh@49.32.231.94)
[11:19:31] <mayuresh> woo, sorry about that, trying "irssi", it's different.
[11:22:13] <pjb> contrapunctus: http://cliki.net/Getting+Started http://cliki.net/Online+Tutorial
[11:23:59] <contrapunctus> pjb: thanks ;)
[11:27:38] <mayuresh> contrapunctus: are you still active in the industry?
[11:27:56] *** Joins: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net)
[11:28:27] <contrapunctus> mayuresh: haha, I program as a hobbyist, I've never programmed professionally 😅️
[11:28:59] <mayuresh> contrapunctus: wow, that's interesting. a full-time common lisp hobbyist programmer.
[11:32:23] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:32:29] <mayuresh> contrapunctus: do answer only if you want to; what do you do professionally?
[11:33:59] <contrapunctus> mayuresh: I'm a musician.
[11:34:19] <mayuresh> contrapunctus: that's awesome. which instrument?
[11:35:02] <contrapunctus> classical guitar, with some experience in singing and composition
[11:35:24] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[11:35:47] <mayuresh> wow. were you trained formally? or self acquired skill?
[11:38:54] <contrapunctus> I was formally trained, yes.
[11:39:05] <mayuresh> cool.
[11:40:06] <mayuresh> take a look at; https://www.xach.com/rpw3/articles/BJqdnd9R65ee3qDbnZ2dnUVZ_vGinZ2d%40speakeasy.net.html
[11:40:25] <mayuresh> for those who do not with to be tied down to emacs + slime/sly
[11:44:49] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[11:47:42] <mayuresh> i have been using some edition of "vi" for close to 20 years.
[11:47:44] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:47:55] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[11:48:24] <mayuresh> working with emacs drives my mind crazy because my fingers don't bend the same way as other's.
[11:48:39] <contrapunctus> mayuresh: why not Emacs and Evil?
[11:49:27] <contrapunctus> (or god-mode, or Boon, or Lispy, or Modalka - some of the other modal editing packages.)
[11:49:53] <beach> mayuresh: Emacs + SLIME (or Sly I guess) give you a huge number of advantages that I believe you can't get from any other free environment right now.  It would be silly to encourage people not to try out an environment with all those advantages.
[11:49:53] *** Joins: karlosz (~karlosz@router.cloyne.org)
[11:51:49] <moon-child> the verbiage  'who do not with to be tied down to emacs + slime/sly'  suggests to me rather that the suggestion is targeted at people who _have_ tried slime and would like to use something else
[11:52:32] <mayuresh> moon-child: right-on, right-on. :)
[11:52:47] <mayuresh> only, instead of "with" i meant "wish".
[11:54:00] <splittist> I think it quite plausible that someone who thinks (and whose fingers 'think') in vi will be more productive in one of the vi-centered development styles than trying to re-learn editing in emacs (or emacs-based vi environments), even over the medium term.
[11:54:08] *** Quits: wilfred (uid159@id-159.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[11:54:40] <splittist> Over the long term, a vi-ish pane in CLOSOS will mean ultimate productivity to everyone (:
[11:54:45] <mayuresh> beach: the very thought that i have abandon what i've mastered (under vi/vim) and memorise and internalise the enormous number of key combinations for using emacs + slime/sly.
[11:55:30] <mayuresh> splittist: what is CLOSOS, couldn't find anything via "bing".
[11:55:35] <splittist> mayuresh: on the other hand, I wouldn't exaggerate how difficult it is to switch between vi and emacs
[11:56:14] <mayuresh> splittist: my mind and fingers go on autopilot under "vi/vim".
[11:56:30] <contrapunctus> beach: I was wondering...how long might it be before Common Lisp programs can use FCGE-based sandboxing?
[11:56:49] <mayuresh> at one of my interviews they asked me about how to move around within "vi" and I couldn't even tell them how to move up down right left.
[11:57:20] <mayuresh> i just don't *have* to think while using vi/vim.
[11:57:37] <contrapunctus> mayuresh: you _are_ aware of Evil, right? ._.
[11:58:20] <splittist> mayuresh: I can't imagine a circumstance in which such a question is a productive use of interview time. Perhaps it was smalltalk, though.
[11:58:47] <moon-child> perhaps he was using vi during the interview, and it was just a point of curiosity?  I think that would be appropriate
[11:59:07] <mayuresh> splittist: they even asked me about how to work at the unix command line, again questions i couldn't answer because i don't think actively about it while working.
[11:59:51] <mayuresh> i never cleared the interview, the reason they gave was i didn't know what "fizz-buzz" was all about.
[12:00:19] <mayuresh> it was only after reaching me home base that i looked up fizz-buzz and found out about it.
[12:00:54] <jackdaniel> so much offtopic
[12:01:03] <beach> contrapunctus: I don't even know what that kind of sandboxing is.
[12:01:26] <moon-child> first-class global environment-based, presumably :)
[12:01:36] <mayuresh> i was actually 10 years senior to the senior-most person in the company panel of interviewers.
[12:01:51] *** Joins: Th30n (~Th30n@cpe-188-252-156-252.zg5.cable.xnet.hr)
[12:02:03] <mayuresh> jackdaniel: apologies, won't happen.
[12:02:16] <beach> contrapunctus: Ah, sorry, I misread.  Maybe a year or so.
[12:05:33] <contrapunctus> beach: I see, thanks :)
[12:05:57] <mayuresh> contrapunctus: veering off-topic for you, "evil" is just a mode, but i still have to relearn the "other" key-bindings, right?
[12:08:00] <beach> mayuresh: Nobody is forcing you to use Emacs, but you should know that your productivity might suffer if you don't.  More importantly perhaps, if you submit code for others to read, you need to make sure that things like indentation and spacing are conventional, and it is never a good idea to try to do that manually.
[12:08:47] <mayuresh> beach: aren't there any code formatters available for 'cl'?
[12:09:05] <mayuresh> beach: with "go" i could use "gofmt".
[12:09:18] *** Joins: dsk (~dsk@user/dsk)
[12:09:23] <beach> Yes, it is called Emacs + SLIME.
[12:09:41] <mayuresh> that's too much of baggage for a code-formatter tool.
[12:10:25] <beach> mayuresh: In particular, the indentation of LOOP clauses is tricky, and that is something that slime-indentation handles pretty well.
[12:10:28] <mayuresh> stallman did the free software world a dis-service by developing gnu emacs.
[12:11:14] <mayuresh> beach: if slime-indentation can handle it (being written in elisp, i think) can't there be any external code formatters written in 'cl' that can handle it equally well?
[12:11:17] <beach> mayuresh: I think you need to moderate your opinions a bit.  They have been pretty specific from the beginning, and you have often been wrong.
[12:12:01] <mayuresh> beach: i haven't been wrong, i have just been divergent. if you can't handle a different point of view, learn to ignore it.
[12:12:13] <beach> What Richard Stallman did was merely a Unix version of a long tradition that includes Zmacs and Multics Emacs.
[12:12:36] <beach> mayuresh: I see.
[12:12:46] <mayuresh> unix tradition already had "ed" and "vi".
[12:13:05] <mayuresh> stallman could have adapted. but chose to enforse his own whims and fancies instead.
[12:15:46] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[12:17:27] <splittist> What we need is someone like jackdaniel to create a beautiful LOOP-linter
[12:18:00] <mayuresh> not just a linter, but also a code-formatter adhearing to a bunch of standards.
[12:18:14] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[12:18:29] <mayuresh> the code-formatter could be made even more awesome if it could be flexible enough to adopt newer standards per company policies.
[12:24:20] <mayuresh> i just found out that "phoe" (who's writing the 2e of commonlisp recepies) has also written a book about the commonlisp condition system.
[12:24:49] <mayuresh> things are looking really great for commonlisp now-a-days.
[12:25:19] <mayuresh> back in 2005 when i was building the commonlisp team at cleartrip we couldn't even get commonlisp books in india easily.
[12:26:03] <mayuresh> we had to put a lot of effort into convincing the finance manager to part funds for purchasing books from the united states.
[12:27:26] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:29:51] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[12:30:03] <moon-child> mayuresh: tools such as gofmt are problematic because some code does require manual indentation.  A batch tool cannot in every case infer the correct behaviour (though if you are dealing with a large base of poorly-indented code such autoindentation is better than none).  This is why interactive indentation assistance is superior
[12:36:08] <mayuresh> moon-child: then given a case like mind, it would be just okay to have an indentation assistance function inside "vim".
[12:36:17] <mayuresh> mind == mine.
[12:36:23] <mayuresh> silly me. :)
[12:36:41] *** Joins: pve (~pve@87-93-162-91.bb.dnainternet.fi)
[12:36:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:23] <moon-child> I think so
[12:37:38] <mayuresh> i didn't have any intention to aggravate anyone, just that it would be nice to be accepted by others as well.
[12:38:23] <mayuresh> if i prefer "vi/vim" there's no need to push emacs + slime/sly on me, just because others find it comfortable.
[12:38:39] <mayuresh> the question of superiority of one over the other should not arise in the first place.
[12:38:49] <mayuresh> that's being quite bigoted, i'd say.
[12:38:49] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:29] <dickbar__> mayuresh: The feeling of push is in your mind. Not the others mind!
[12:39:58] <mayuresh> dickbar: the feeling of push was quite evident from the insistence of others out here.
[12:40:08] <mayuresh> okay, gotta go have lunch.
[12:40:25] <mayuresh> dickbar: feelings are mostly a result of a response to external stimulus.
[12:40:28] <mayuresh> bye for now.
[12:40:30] *** Quits: mayuresh (~mayuresh@49.32.231.94) (Quit: leaving)
[12:41:44] <dickbar__> mayuresh: Yes and under your control and choosing.
[12:49:23] *** Quits: Th30n (~Th30n@cpe-188-252-156-252.zg5.cable.xnet.hr) (Quit: WeeChat 3.2)
[12:49:35] *** Joins: Th30n (~Th30n@cpe-188-252-156-252.zg5.cable.xnet.hr)
[12:55:07] *** Joins: dsk (~dsk@user/dsk)
[12:57:12] *** Quits: clintm (~user@c-73-83-222-156.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[12:58:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[12:59:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:03:03] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[13:05:17] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[13:09:45] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 265 seconds)
[13:13:50] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[13:14:21] *** Joins: mayuresh (~mayuresh@49.32.188.210)
[13:14:31] <mayuresh> hello, again. :)
[13:15:46] <mayuresh> okay, just in case it's unknown, "common lisp pro" mailing list;;
[13:15:49] <mayuresh> https://mailman.common-lisp.net/listinfo/pro
[13:17:32] *** Joins: selwyn (~selwyn@user/selwyn)
[13:22:05] <pjb> mayuresh: for CL professionals! ;-)
[13:22:25] <mayuresh> pjb: true that. :)
[13:22:44] <mayuresh> unless this channel is only for 'cl' hobbyists. :p
[13:23:16] <mayuresh> i just checked out the lispworks free edition.
[13:23:28] <mayuresh> it's *very* *very* interesting.
[13:23:41] <mayuresh> i wonder what kind of stuff the full edition might provide.
[13:24:09] <White_Flame> the docs are all online, afaik
[13:24:10] <pjb> mayuresh: no memory size limitation.
[13:24:22] <White_Flame> does it come with all the libs?
[13:24:42] <White_Flame> I think last time I looked (a loooong time ago), allegro had a heap limit plus didn't come with all the libs
[13:25:11] <mayuresh> there used to also be something from franz, right?
[13:25:17] <mayuresh> we tested it while at cleartrip.
[13:25:19] <White_Flame> that's allegro
[13:25:27] <mayuresh> ah, okay.
[13:26:07] <White_Flame> clozure is also commercially supported, but the implementation is fully free
[13:26:32] <mayuresh> clozure! that macos thing?
[13:26:49] <White_Flame> it's cross platform, but yeah is a descendent of macintoch cl
[13:26:55] <mayuresh> actually, what i found interesting about lispworks is their 'ide'.
[13:27:10] <mayuresh> almost everything is point-and-click.
[13:27:41] <White_Flame> I don't think people really consider those to be any more advanced than slime
[13:27:51] <mayuresh> ha ha. :D
[13:27:59] <White_Flame> however, for point and click building stuff, lispworks & allegro have that for their GUI builder stuff iirc
[13:28:56] <mayuresh> lispworks as this 'gui' for reading object graphs.
[13:30:28] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:30:28] <mayuresh> reading == viewing + interacting with.
[13:32:04] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:33:20] <contrapunctus> mayuresh: Evil is the 'Extensible Vi Layer'. The full Vim experience in Emacs.
[13:33:41] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[13:33:47] <mayuresh> pjb: could you please activate http://pjb.ogamita.org/
[13:35:33] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[13:37:02] <pjb> mayuresh: in the meantime, you can go to http://www.informatimago.com/~pjb/sites/org.ogamita.pjb/
[13:37:11] <pjb> mayuresh: but it's mostly old stuff…
[13:37:19] <mayuresh> okay. cool.
[13:37:59] *** Quits: hhdave (~user@ip212.ip-193-70-71.eu) (Remote host closed the connection)
[13:38:20] <pjb> Nowadays, the activity goes to gitlab/github… :-)
[13:39:11] <mayuresh> true. github has really changed the landscape a lot.
[13:39:24] <mayuresh> github has gone way beyond sourceforge ever was.
[13:39:36] <mayuresh> does anyone out here remember freshmeat?
[13:50:11] <contrapunctus> Does anyone know how I might get in touch with the administrators of cliki.net and common-lisp.net? They are blocked on Tor and I always have to use web.archive.org to browse them :\
[13:52:43] <jackdaniel> contrapunctus: join #common-lisp.net
[13:53:31] <contrapunctus> jackdaniel: thanks ^^
[13:54:18] <mayuresh> contrapunctus: you work over "tor"? paranoid are we?
[13:54:36] <contrapunctus> haha
[13:56:42] <mayuresh> :)
[14:00:36] <mayuresh> for those who came in late (to lisp);
[14:00:38] <mayuresh> https://www.defmacro.org/ramblings/lisp.html
[14:00:56] <mayuresh> also for those who are scared of coming in (to lisp).
[14:00:57] <mayuresh> :)
[14:16:02] *** Quits: andrei-n (~andrei-n@104.156-130-109.adsl-dyn.isp.belgacom.be) (Quit: Leaving)
[14:19:54] *** Quits: lonjil (~quassel@user/lonjil) (Ping timeout: 272 seconds)
[14:21:26] *** Joins: lonjil (~quassel@user/lonjil)
[14:26:28] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:33:23] *** Joins: cranium (~cranium@user/cranium)
[14:35:11] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[14:36:02] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 255 seconds)
[14:39:04] *** Quits: frgo (~frgo@p200300deef181d00acae8e9a594b53e3.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:39:36] *** Joins: frgo (~frgo@p200300deef181d00cc7de7cfc15bcb31.dip0.t-ipconnect.de)
[14:41:55] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:45:18] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[14:47:53] <jackdaniel> mayuresh: common lisp recipes were authored by Edmund Weitz, not phoe
[14:48:26] *** Joins: peterhil (~peterhil@mobile-access-bceeac-89.dhcp.inet.fi)
[14:49:16] <jackdaniel> I don't think that it is possible for other author to publish a second edition of an existing book
[14:49:50] <beach> jackdaniel: I believe Edi has given his permission to Apress.
[14:49:59] <mayuresh> jackdaniel: thanks for that, i was under a misconception.
[14:50:29] <jackdaniel> beach: a permission for someone else to write a second edition? interesting
[14:50:34] <mayuresh> jackdaniel: though i distinctly remember phoe mentioning it out here.
[14:50:52] <jackdaniel> s/interesting/surprising/ (to me)
[14:50:53] <beach> jackdaniel: Yes, I believe so.
[14:50:58] <mayuresh> maybe i was too tired and was imagining things.
[14:51:14] <jackdaniel> no, I was not aware of that being a possibility. thank you for correction beach
[14:52:15] <beach> jackdaniel: I may have the details wrong.  Check with phoe to be sure.  But I am sure that phoe has a contract to do the second edition.  Whether Edi had to give his permission I am not certain about.  Perhaps Apress has all the rights.
[14:52:38] <mayuresh> anyone knows phoe's real name, would like to visit his website.
[14:53:06] <jackdaniel> it is Michał Herda, I don't know whether he has a website
[14:53:41] <jackdaniel> beach: I'm not that much interested in it to investigate, but I won't wrongfully 'correct' people on that note in the future - thanks.
[14:53:57] <mayuresh> jackdaniel: thanks. will bing it.
[14:54:22] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:54:58] <mayuresh> jackdaniel: phoe's website at https://phoe.github.io/
[14:57:33] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[14:58:23] <mayuresh> okay, a stupid question; how is (+ 1 2 3) evaluated? left to right?
[14:58:43] <jackdaniel> yes, arguments in the function application are evaluated from left to right
[14:59:00] <jackdaniel> in scheme (and in C fwiw) it is unspecified
[14:59:13] <mayuresh> so it will be; first 1 + 2, and the result is added to 3.
[14:59:31] <jackdaniel> no, three arguments will be passed to a function #'+
[14:59:41] <jackdaniel> + is a function that accepts any number of arguments
[15:00:07] <mayuresh> okay, but what does the standard say about the sequence?
[15:00:23] <mayuresh> will + do 1 and 2 first and work the result with 3?
[15:00:40] <jackdaniel> I don't know, but the standard is available somewhere on the internet, I'm sure of it
[15:00:59] <mayuresh> okay. thanks nevertheless. :)
[15:01:32] <beach> It doesn't matter what + does in which order.  What matters is that it computes the sum of its arguments.
[15:01:56] <jackdaniel> beach: the order of operations may influence the result (at least when you use floats)
[15:01:57] <mayuresh> are there any such rules for - and /?
[15:02:06] <jackdaniel> clhs 12.1.1.1
[15:02:07] <specbot> Associativity and Commutativity in Numeric Operations: http://www.lispworks.com/reference/HyperSpec/Body/12_aaa.htm
[15:02:31] <beach> jackdaniel: yes, I was commenting only on integers.
[15:02:51] <jackdaniel> mayuresh: my remark about the standard was a hint, that you should first try to look up answers to your questions
[15:03:06] <mayuresh> jackdaniel: sure. will do so here on.
[15:04:08] <jackdaniel> this is a reading I sometimes recommend: http://catb.org/~esr/faqs/smart-questions.html
[15:05:02] <mayuresh> that's a good document. thanks jackdaniel. :)
[15:05:31] *** Quits: pillton (~user@220.240.219.38) (Ping timeout: 256 seconds)
[15:12:18] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[15:14:38] <mayuresh> okay, gotta go, snack time.
[15:14:42] *** Quits: mayuresh (~mayuresh@49.32.188.210) (Quit: leaving)
[15:18:33] <pve> Hello! What is the correct terminology for when things (e.g. defmacro) affect how the compiler generates fasls in the future (not sure how to phrase it properly)?
[15:18:46] <pve> is it "changes the compilation environment"?
[15:19:08] <beach> pve: No, it changes the global environment.
[15:19:23] <beach> pve: The compilation environment disappears after a compilation is finished.
[15:19:23] <pve> beach: ah thank you
[15:19:41] <beach> ... or rather, the compilation environment *might* disappear...
[15:20:00] <pve> right, global environment it is then
[15:20:13] <beach> An implementation is free to have a single global environment that is used both as the startup environment, the compilation environment, and the evaluation environment.
[15:20:29] <beach> And most (all?) implementations do.
[15:21:47] *** Joins: notzmv (~zmv@user/notzmv)
[15:21:52] <jackdaniel> I think that compilation environment is usually different, but I'm still sipping my coffee so I might have confused things terribly :)
[15:22:16] <beach> Right you are.
[15:22:49] <pve> and just to be clear, I mean a situation where I modify the definition of a macro and must therefore recompile the files that use that macro
[15:22:54] <beach> I think it has to be for the implementation to be conform actually.
[15:23:28] <beach> pve: Yes, that's definitely the global run-time environment.
[15:23:29] <jackdaniel> pve: when you modify the macro then you must recompile all forms that make use of that macro if you want the new macroexpansion take effect
[15:23:46] <pve> beach: ok great
[15:23:56] <pve> jackdaniel: yep
[15:24:18] <beach> clhs 3.2.1
[15:24:18] <specbot> Compiler Terminology: http://www.lispworks.com/reference/HyperSpec/Body/03_ba.htm
[15:24:23] <beach> pve: ^
[15:24:29] <beach> Somewhere in the middle.
[15:25:48] <beach> jackdaniel: This is interesting.  That page says they can all be the same, but I am pretty sure I have seen phrases in the standard where it says things like "the function is not created at compile time".
[15:26:43] <beach> ... and if they are all the same, the function *is* created at compile time.
[15:26:59] <jackdaniel> beach: perhaps they account for a possibility that the global environment has compiler-specific entries all the time (and they are used only by the compiler)
[15:27:36] <beach> Yes, but then those entries would make up the compilation environment, so then they are not the same.
[15:28:23] <jackdaniel> right, I see now
[15:28:27] * jackdaniel is thinking
[15:28:49] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:29:03] <beach> Ah, "It is unspecified whether a definition available in the compilation environment can be used in an evaluation initiated in the startup environment or evaluation environment."
[15:29:31] <beach> So I guess when the standard says that such and such is not created at compile time, in fact most of the time it might be.
[15:29:46] <beach> ... but isn't in most implementations as you pointed out.
[15:30:28] <jackdaniel> makes sense
[15:31:20] <jackdaniel> so the fact, that calling compile-file does not introduce functions from the compiled file may be considered a feature and not something implied by the standard
[15:31:21] <beach> An interesting thing to do in WSCL would be to use the environment terminology in the rest of the document.  Currently, that terminology seems to be avoided in favor of something more vague, like "the function is not created at compile time".
[15:31:43] <beach> Yes, that's what I am thinking.
[15:31:51] *** Quits: peterhil (~peterhil@mobile-access-bceeac-89.dhcp.inet.fi) (Ping timeout: 265 seconds)
[15:32:18] <jackdaniel> but as you have pointed out, other parts of the standard seem to contradict that
[15:32:52] <beach> I need to go through each dictionary entry to see whether there is really a contradiction.  I suspect there are some.
[15:33:45] <pve> beach: thanks, that's the page I should have read, although it doesn't mention "global".. I assume "global environment" means "run-time environment"?
[15:33:48] <jackdaniel> hm, let's take "defgeneric is not required to perform any compile-time side effects." - this part says, that the compiler may not introduce the function into the compiler environment
[15:34:23] <jackdaniel> so far so good (no contradiction)
[15:35:55] <jackdaniel> pve: global environment is opposed to lexical or dynamic
[15:36:19] <jackdaniel> i.e it contains globally available variables and functions
[15:37:16] <beach> jackdaniel: Yes, so far so good, as you say.
[15:37:53] <jackdaniel> beach: same for defun: it is *not required" to perform any compile-time side effects; then we have "In particular, defun does not make the function definition available at compile time", so the definition is not avialable in the compilation environment
[15:38:09] <beach> Whew! :)
[15:38:55] *** Joins: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it)
[15:39:20] <jackdaniel> then we have "If a defmacro form appears as a top level form, the compiler must store the macro definition at compile time, so that occurrences of the macro later on in the file can be expanded correctly."
[15:39:25] <pve> jackdaniel: alright.. the glossary contains definitions for "run-time environment" and "global environment", but I'm uncertain if the definitions are equivalent
[15:39:48] <pve> seems like they could be
[15:39:49] <jackdaniel> so for defmacro it seems to be unspecified whether it is retained after the compilation ends or not
[15:40:08] <beach> jackdaniel: Right, still no contradiction.
[15:41:05] <beach> pve: I think it depends.  During compilation, the global environment may be the evaluation environment.
[15:41:49] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 246 seconds)
[15:42:04] <pve> beach: oh, I think I get it now
[15:42:11] <beach> Good.
[15:42:29] <beach> GAH, I need a break.  I'll read additional remarks later.
[15:54:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[15:57:46] *** Joins: random-nick (~random-ni@87.116.179.136)
[16:00:37] *** Joins: selwyn (~selwyn@user/selwyn)
[16:12:41] <jmercouris> there is something confounding me
[16:12:41] <jmercouris> http://dpaste.com/5BCLNVEMG
[16:12:55] <jmercouris> I don't get why a function that returns a SEXP cannot be handled by tomato
[16:13:06] <jmercouris> there are some rules about spinneret I don't get
[16:13:56] <jmercouris> can someone explain this?
[16:16:39] <jmercouris> wait a minute, I think I understand
[16:25:13] <jmercouris> AH, WITH-HTML-STRING IS A MACRO
[16:25:24] <jmercouris> I should have just looked at the source
[16:34:26] <contrapunctus> :o
[16:35:12] *** Joins: Bike (~Glossina@71.69.170.70)
[16:35:12] *** ChanServ sets mode: +o Bike
[16:46:34] *** Quits: random-nick (~random-ni@87.116.179.136) (Ping timeout: 246 seconds)
[16:50:22] *** Joins: random-nick (~random-ni@87.116.179.136)
[17:02:02] *** Joins: derelict (~derelict@user/derelict)
[17:12:49] <beach> New WSCL issue: https://github.com/s-expressionists/wscl/blob/main/wscl-issues/proposed/make-string-input-stream-type-error
[17:41:13] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:41:20] <jmercouris> here is something I cannot understand
[17:41:37] <jmercouris> (defparameter x '(:a :href "xyz" "hello"))
[17:41:51] <jmercouris> (spinneret:with-html-string x) -> ""
[17:42:14] <jmercouris> (spinneret:with-html-string (:a :href "xyz" "hello")) -> "<a href=xyz>hello</a>"
[17:42:17] <jmercouris> how do you explain that?
[17:42:33] <Bike> well, probably it's a macro that doesn't evaluate its parameter. let me find the documentation
[17:42:39] <jmercouris> ah fuck, again
[17:42:39] <jmercouris> yes
[17:42:40] <jmercouris> thank you
[17:42:45] <jmercouris> sorry, I'm really tired
[17:42:51] <Bike> it is no problem
[17:42:57] <jmercouris> `(spinneret:with-html-string ,x) ...
[17:43:09] <Bike> i remember people being confused by this in cl-who as well
[17:43:22] <jmercouris> yes, however I ran into the same exact issue right about an hour ago
[17:43:28] <jmercouris> so I should not have been confused :-D
[17:45:04] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f875:a590:8546:de99)
[17:46:19] <_death> this is one reason I like yaclml :)
[17:47:46] *** Joins: rgherdt_ (~rgherdt@ip5f5af43c.dynamic.kabel-deutschland.de)
[17:49:05] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:49:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:52:20] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f875:a590:8546:de99) (Ping timeout: 268 seconds)
[17:55:46] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 268 seconds)
[18:17:31] *** Joins: dsk (~dsk@user/dsk)
[18:18:49] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[18:19:00] *** Quits: treflip (~user@95.79.32.99) (Quit: bb)
[18:21:59] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[18:24:11] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[18:27:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca)
[18:28:09] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca) (Remote host closed the connection)
[18:28:44] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:46:16] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 246 seconds)
[18:49:59] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[18:50:10] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[18:50:34] *** Joins: peterhil (~peterhil@mobile-access-bceeac-89.dhcp.inet.fi)
[18:52:37] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:53:51] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[18:54:17] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 245 seconds)
[19:03:55] *** Quits: Th30n (~Th30n@cpe-188-252-156-252.zg5.cable.xnet.hr) (Quit: WeeChat 3.2)
[19:06:09] *** Joins: sp41 (~spal@64.253.214.14)
[19:07:43] *** Joins: dsk (~dsk@user/dsk)
[19:10:33] *** Joins: baullrog (~baullrog@pool-96-237-166-123.bstnma.fios.verizon.net)
[19:11:01] *** Joins: makomo (~makomo@user/makomo)
[19:15:03] *** Quits: makomo (~makomo@user/makomo) (Client Quit)
[19:20:24] *** Quits: baullrog (~baullrog@pool-96-237-166-123.bstnma.fios.verizon.net) (Quit: Leaving)
[19:26:10] <jmercouris> (defparameter x '(:a :href "xyz" "hello"))
[19:26:11] <jmercouris> (spinneret:with-html-string (:h1 "lol") (loop for y in (list 1 2) collect (:p x)))
[19:26:15] <jmercouris> I am stumped about how to expand X
[19:26:30] <jmercouris> this feels wrong: (eval `(spinneret:with-html-string (:h1 "lol") (loop for y in (list 1 2) collect (:p ,x))))
[19:26:46] <jmercouris> there must be some paradigm I am missing
[19:27:15] <jmercouris> anyone?
[19:30:00] <jackdaniel> how about: (defmacro merci-with-html-string (x) `(… ,x)) ;?
[19:30:04] *** Joins: baullrog (~baullrog@pool-96-237-166-123.bstnma.fios.verizon.net)
[19:30:33] <Bike> an example in the readme has (:ol (dolist (item *shopping-list*) (:li (1+ (random 10)) item)))
[19:30:36] <jackdaniel> usually such functional macro shoudl be accompanied with a functional application version, that is i.e (call-with-html-string #'my-body)
[19:31:13] <jmercouris> hm
[19:31:17] <jackdaniel> some dsl check whether the argument is a list, and if it is first they consult their own rules, and if not they delegate the question
[19:31:28] <jackdaniel> so (with-htlm-string … (:p (identity x)))
[19:31:45] <jmercouris> I might follow the readme paradigm then
[19:31:45] <jmercouris> I saw that as well, I just use loop a lot more than dolist
[19:32:05] <jmercouris> in the worst case, maybe I wll make a wrapper as daniel has suggested
[19:32:07] <jmercouris> thanks for the eyes
[19:32:42] <pve> etimmons: ok, I got the directory scan hooked up to ASDF. Here is my first ASDF extension: https://github.com/pve1/alphabetical-asdf
[19:33:16] <jackdaniel> lexicographical perhaps? (if you sort by names)
[19:33:16] <jmercouris> I'm sorry
[19:33:21] <jmercouris> but that sounds like a really bad idea
[19:33:25] <jmercouris> it loads files based on alphabetical order?
[19:33:52] <pve> jackdaniel: lexicographical sounds better
[19:34:20] <jmercouris> I assume this is not meant to be a practical extension?
[19:34:24] <jackdaniel> naming files 01-foo.lisp is not a terrible idea (however unusual for asd) - I think that some configuration rules on linux are loaded with such ordering
[19:35:12] <pve> jmercouris: oh it's dead serious ;) but obviously meant for utilities with a smallish number of files
[19:35:17] <_death> could just use BASIC convention.. 10-classes.lisp 20-macros.lisp 30-more-stuff.lisp .. I used it for something.. and I think I saw it used in trivia or optima or whatever
[19:35:18] <jackdaniel> if you simply want to point at the directory you want to load files from, then such extension makes sense
[19:35:42] <jackdaniel> right, and the minor digit is for further refinement :)
[19:35:43] <jmercouris> well, OK
[19:35:51] <jmercouris> reminds me of version control as this:
[19:35:54] <jmercouris> "final version1.lisp
[19:35:57] <jmercouris> final final version 1.lisp
[19:36:04] <jmercouris> final final finalversionactually final2.lisp
[19:36:13] <jackdaniel> I don't know what you are talking about
[19:36:14] <jmercouris> explicit > implicit
[19:36:25] <jmercouris> I'm talking about people who constantly rename files instead of using version control
[19:36:34] <jmercouris> feels the same thing, don't know how to use ASDF, so name things alphabetically
[19:37:40] <jmercouris> it's a common meme
[19:38:11] <jackdaniel> naming files in lexicographical order have more benefits. when I list a directory with multiple list files using `ls' then they would be arranged in the load order
[19:38:19] <jmercouris> wow, that's super useful
[19:39:01] <jackdaniel> I think that too, thanks for the affirmation
[19:39:18] <_death> it's nice when you know what to read first.. with ordinary system definitions it's easy to figure out, but with package-inferred-systems I didn't bother to find a way to quickly get a toposort
[19:39:43] <pve> _death: yes the example given in the file demonstrates the BASIC convention, and but also A-foo, B-bar (which I think is a bit less pretty)
[19:40:38] <pve> and yeah, I wanted to be able to see the load order directly in the dired buffer or ls output
[19:44:11] <_death> pve: for small utilities, I have a snippets repository.. I use package-inferred-systems for it, so dependencies are easy (specified in the defpackage form), and if they don't depend on anything but CL, the files are "standalone".. I do add a line to the .asd file for each snippet
[19:44:16] <pve> jackdaniel: I see now, lexicographical order is more general than alphabetical order
[19:44:38] <jmercouris> cat x.asd, now you can see it
[19:44:58] <jmercouris> I can't imagine this approach scaling for anything beyond 10 files
[19:45:03] <jmercouris> imagine wanting to insert a file between two files
[19:45:32] <jmercouris> also it is actually MORE cognitive overhead to surmize the load order than :serial t
[19:45:47] <jmercouris> surmise*
[19:46:14] <pve> _death: I see, I haven't quite gotten around to using package-inferred-system
[19:46:34] *** Joins: mister_m` (~user@c-73-110-154-209.hsd1.il.comcast.net)
[19:47:10] <pve> jmercouris: when you get to 10 files, you add a subdirectory :)
[19:48:41] <jackdaniel> directory-inferred-systems, sounds like an idea ,)
[19:54:16] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:56:02] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[20:16:14] *** Quits: peterhil (~peterhil@mobile-access-bceeac-89.dhcp.inet.fi) (Ping timeout: 255 seconds)
[20:17:38] *** Joins: derelict (~derelict@user/derelict)
[20:28:50] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[20:30:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[20:32:49] *** Joins: Alfr (~Alfr@user/alfr)
[20:35:16] <etimmons> pve: ohhhh, nice! Looks like the operation-done-p on the define-op works?
[20:35:40] <pve> etimmons: yep, seems to work
[20:36:27] <etimmons> jmercouris: It's helpful that for many things the load order largely doesn't matter, so there's likely little juggling that needs to be done.
[20:36:50] <pve> etimmons: it was surprisingly tricky for me to figure out how to get it to work, but the code ended up very simple
[20:37:08] <etimmons> Just make sure to load package definitions first, load macros defs early (before they would be expanded), and load class definitions before any defmethod that uses them
[20:37:35] <etimmons> And that should cover the vast majority of use cases
[20:37:59] <etimmons> pve: Looking at it now, it does look quite simple
[20:38:30] <pve> etimmons: am I allowed to use asdf/session:consult-asdf-cache?
[20:39:36] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:41:14] <pve> etimmons: I like that it is now able to detect new files, new directories, renames etc without using :force t
[20:41:22] <etimmons> pve: Hmmm. I'm a bit surprised that functionality isn't exported from asdf.
[20:42:19] <etimmons> I think it's doubtful that function would change in the near future, but to help ensure it, you should request that it's exported from the asdf package as well.
[20:42:52] <etimmons> And do-asdf-cache (the macro form) might be slightly better to use
[20:42:59] <pve> oh, ok
[20:43:27] <pve> I ended up using it because when I tried to make a SCAN-OP I just kept hitting walls
[20:44:27] <pve> I couldn't get define-op for my system to use the scan-op, so I gave up on that approach
[20:45:24] <etimmons> I wonder if you could add a method to input-files for define-op that performs your scan
[20:46:02] <etimmons> There's an :around method for input files that automatically caches it for you
[20:46:20] <pve> aha! that's interesting
[20:47:54] <pve> would be nice to get a prettier approach, because my current (setf asdf:component-children) method where it straight up ignores the new value is pretty sketchy to say the least
[20:49:46] <etimmons> haha, yeah. I think you could work around that using some of the new system parsing GFs that got added in this latest release.
[20:50:07] <etimmons> But your approach is probably a very good one for earlier versions
[20:52:20] <pve> I haven't yet tried it on recent versions.. I should try. Wonder if it works like that.
[20:55:33] <etimmons> Hmmm, on second thought, input-files may not be the best... ASDF will compare timestamps so it's possible that just modifying an existing file would invalidate the define-op when it doesn't need to
[20:56:11] <etimmons> Something to keep in mind at least if you try it!
[20:56:21] <pve> ok, thanks
[21:12:28] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[21:12:30] *** Joins: sm2n (~sm2n@user/sm2n)
[21:19:54] *** Joins: tyson2 (~user@70.54.112.49)
[21:31:16] *** Joins: amb007 (~a_bakic@51.248.23.93.rev.sfr.net)
[21:34:18] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[21:37:47] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[21:44:54] *** Quits: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net) ()
[21:45:14] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Remote host closed the connection)
[21:45:28] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[21:45:37] *** Joins: lotuseater (~user@2a03:2260:115:7400:387e:7f8a:32e5:e786)
[21:47:53] *** Quits: amb007 (~a_bakic@51.248.23.93.rev.sfr.net) (Ping timeout: 265 seconds)
[21:48:32] *** Joins: amb007 (~a_bakic@251.107.23.93.rev.sfr.net)
[21:57:45] <jasom> minion: memo for char: The only advantage to not having a default is you can't be wrong.  A sensible default is probably better, especially if your library is structured such that you can improve the default and new passowrds being stored will benefit from increased hardening.
[21:57:46] <minion> Remembered. I'll tell char when he/she/it next speaks.
[22:02:26] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Quit: Client closed)
[22:07:52] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[22:12:43] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-188.prtc.net)
[22:31:00] *** Joins: selwyn (~selwyn@user/selwyn)
[22:31:36] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[22:33:02] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[22:42:52] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-188.prtc.net) (Ping timeout: 246 seconds)
[22:50:48] *** Joins: dsk (~dsk@user/dsk)
[22:59:39] *** Quits: fe[nl]ix (~quassel@2a01:4f8:200:2425::adda) (Remote host closed the connection)
[22:59:51] *** Joins: fe[nl]ix (~quassel@2a01:4f8:200:2425::adda)
[22:59:51] *** ChanServ sets mode: +o fe[nl]ix
[23:04:32] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[23:34:14] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Ping timeout: 255 seconds)
[23:42:44] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:5dd8:1cad:310e:98df)
[23:53:51] *** Quits: lotuseater (~user@2a03:2260:115:7400:387e:7f8a:32e5:e786) (Ping timeout: 255 seconds)
